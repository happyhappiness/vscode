<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_419_collectd-4.10.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ascent_xml_sessions_plr<pos:position pos:line="1" pos:column="35"/></name> <parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">xmlDoc<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">doc<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">xmlNode<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">node<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="65">/* {{{ */</comment>
    <parameter><decl><type><name pos:line="2" pos:column="5">player_info_t<pos:position pos:line="2" pos:column="18"/></name> <modifier pos:line="2" pos:column="19">*<pos:position pos:line="2" pos:column="20"/></modifier></type><name pos:line="2" pos:column="20">pi<pos:position pos:line="2" pos:column="22"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="23"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">xmlNode<pos:position pos:line="4" pos:column="10"/></name> <modifier pos:line="4" pos:column="11">*<pos:position pos:line="4" pos:column="12"/></modifier></type><name pos:line="4" pos:column="12">child<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>

  <for pos:line="6" pos:column="3">for <control pos:line="6" pos:column="7">(<init><expr><name pos:line="6" pos:column="8">child<pos:position pos:line="6" pos:column="13"/></name> <operator pos:line="6" pos:column="14">=<pos:position pos:line="6" pos:column="15"/></operator> <name><name pos:line="6" pos:column="16">node<pos:position pos:line="6" pos:column="20"/></name><operator pos:line="6" pos:column="20">-&gt;<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="22">xmlChildrenNode<pos:position pos:line="6" pos:column="37"/></name></name></expr>;<pos:position pos:line="6" pos:column="38"/></init> <condition><expr><name pos:line="6" pos:column="39">child<pos:position pos:line="6" pos:column="44"/></name> <operator pos:line="6" pos:column="45">!=<pos:position pos:line="6" pos:column="47"/></operator> <name pos:line="6" pos:column="48">NULL<pos:position pos:line="6" pos:column="52"/></name></expr>;<pos:position pos:line="6" pos:column="53"/></condition> <incr><expr><name pos:line="6" pos:column="54">child<pos:position pos:line="6" pos:column="59"/></name> <operator pos:line="6" pos:column="60">=<pos:position pos:line="6" pos:column="61"/></operator> <name><name pos:line="6" pos:column="62">child<pos:position pos:line="6" pos:column="67"/></name><operator pos:line="6" pos:column="67">-&gt;<pos:position pos:line="6" pos:column="72"/></operator><name pos:line="6" pos:column="69">next<pos:position pos:line="6" pos:column="73"/></name></name></expr></incr>)<pos:position pos:line="6" pos:column="74"/></control>
  <block pos:line="7" pos:column="3">{
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">(<pos:position pos:line="8" pos:column="10"/></operator><call><name pos:line="8" pos:column="10">xmlStrcmp<pos:position pos:line="8" pos:column="19"/></name> <argument_list pos:line="8" pos:column="20">(<argument><expr><operator pos:line="8" pos:column="21">(<pos:position pos:line="8" pos:column="22"/></operator><specifier pos:line="8" pos:column="22">const<pos:position pos:line="8" pos:column="27"/></specifier> <name pos:line="8" pos:column="28">xmlChar<pos:position pos:line="8" pos:column="35"/></name> <operator pos:line="8" pos:column="36">*<pos:position pos:line="8" pos:column="37"/></operator><operator pos:line="8" pos:column="37">)<pos:position pos:line="8" pos:column="38"/></operator> <literal type="string" pos:line="8" pos:column="39">"comment"<pos:position pos:line="8" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="50">child<pos:position pos:line="8" pos:column="55"/></name><operator pos:line="8" pos:column="55">-&gt;<pos:position pos:line="8" pos:column="60"/></operator><name pos:line="8" pos:column="57">name<pos:position pos:line="8" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="62"/></argument_list></call> <operator pos:line="8" pos:column="63">==<pos:position pos:line="8" pos:column="65"/></operator> <literal type="number" pos:line="8" pos:column="66">0<pos:position pos:line="8" pos:column="67"/></literal><operator pos:line="8" pos:column="67">)<pos:position pos:line="8" pos:column="68"/></operator>
        <operator pos:line="9" pos:column="9">||<pos:position pos:line="9" pos:column="11"/></operator> <operator pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></operator><call><name pos:line="9" pos:column="13">xmlStrcmp<pos:position pos:line="9" pos:column="22"/></name> <argument_list pos:line="9" pos:column="23">(<argument><expr><operator pos:line="9" pos:column="24">(<pos:position pos:line="9" pos:column="25"/></operator><specifier pos:line="9" pos:column="25">const<pos:position pos:line="9" pos:column="30"/></specifier> <name pos:line="9" pos:column="31">xmlChar<pos:position pos:line="9" pos:column="38"/></name> <operator pos:line="9" pos:column="39">*<pos:position pos:line="9" pos:column="40"/></operator><operator pos:line="9" pos:column="40">)<pos:position pos:line="9" pos:column="41"/></operator> <literal type="string" pos:line="9" pos:column="42">"text"<pos:position pos:line="9" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="50">child<pos:position pos:line="9" pos:column="55"/></name><operator pos:line="9" pos:column="55">-&gt;<pos:position pos:line="9" pos:column="60"/></operator><name pos:line="9" pos:column="57">name<pos:position pos:line="9" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="62"/></argument_list></call> <operator pos:line="9" pos:column="63">==<pos:position pos:line="9" pos:column="65"/></operator> <literal type="number" pos:line="9" pos:column="66">0<pos:position pos:line="9" pos:column="67"/></literal><operator pos:line="9" pos:column="67">)<pos:position pos:line="9" pos:column="68"/></operator></expr>)<pos:position pos:line="9" pos:column="69"/></condition><then pos:line="9" pos:column="69">
      <comment type="block" pos:line="10" pos:column="7">/* ignore */</comment><block type="pseudo"><empty_stmt pos:line="10" pos:column="19">;<pos:position pos:line="10" pos:column="20"/></empty_stmt></block></then>
    <elseif pos:line="11" pos:column="5">else <if pos:line="11" pos:column="10">if <condition pos:line="11" pos:column="13">(<expr><call><name pos:line="11" pos:column="14">xmlStrcmp<pos:position pos:line="11" pos:column="23"/></name> <argument_list pos:line="11" pos:column="24">(<argument><expr><operator pos:line="11" pos:column="25">(<pos:position pos:line="11" pos:column="26"/></operator><specifier pos:line="11" pos:column="26">const<pos:position pos:line="11" pos:column="31"/></specifier> <name pos:line="11" pos:column="32">xmlChar<pos:position pos:line="11" pos:column="39"/></name> <operator pos:line="11" pos:column="40">*<pos:position pos:line="11" pos:column="41"/></operator><operator pos:line="11" pos:column="41">)<pos:position pos:line="11" pos:column="42"/></operator> <literal type="string" pos:line="11" pos:column="43">"race"<pos:position pos:line="11" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="51">child<pos:position pos:line="11" pos:column="56"/></name><operator pos:line="11" pos:column="56">-&gt;<pos:position pos:line="11" pos:column="61"/></operator><name pos:line="11" pos:column="58">name<pos:position pos:line="11" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="63"/></argument_list></call> <operator pos:line="11" pos:column="64">==<pos:position pos:line="11" pos:column="66"/></operator> <literal type="number" pos:line="11" pos:column="67">0<pos:position pos:line="11" pos:column="68"/></literal></expr>)<pos:position pos:line="11" pos:column="69"/></condition><then pos:line="11" pos:column="69">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="7">ascent_xml_read_int<pos:position pos:line="12" pos:column="26"/></name> <argument_list pos:line="12" pos:column="27">(<argument><expr><name pos:line="12" pos:column="28">doc<pos:position pos:line="12" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="33">child<pos:position pos:line="12" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="40">&amp;<pos:position pos:line="12" pos:column="45"/></operator><name><name pos:line="12" pos:column="41">pi<pos:position pos:line="12" pos:column="43"/></name><operator pos:line="12" pos:column="43">-&gt;<pos:position pos:line="12" pos:column="48"/></operator><name pos:line="12" pos:column="45">race<pos:position pos:line="12" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="51"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="13" pos:column="5">else <if pos:line="13" pos:column="10">if <condition pos:line="13" pos:column="13">(<expr><call><name pos:line="13" pos:column="14">xmlStrcmp<pos:position pos:line="13" pos:column="23"/></name> <argument_list pos:line="13" pos:column="24">(<argument><expr><operator pos:line="13" pos:column="25">(<pos:position pos:line="13" pos:column="26"/></operator><specifier pos:line="13" pos:column="26">const<pos:position pos:line="13" pos:column="31"/></specifier> <name pos:line="13" pos:column="32">xmlChar<pos:position pos:line="13" pos:column="39"/></name> <operator pos:line="13" pos:column="40">*<pos:position pos:line="13" pos:column="41"/></operator><operator pos:line="13" pos:column="41">)<pos:position pos:line="13" pos:column="42"/></operator> <literal type="string" pos:line="13" pos:column="43">"class"<pos:position pos:line="13" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="52">child<pos:position pos:line="13" pos:column="57"/></name><operator pos:line="13" pos:column="57">-&gt;<pos:position pos:line="13" pos:column="62"/></operator><name pos:line="13" pos:column="59">name<pos:position pos:line="13" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="64"/></argument_list></call> <operator pos:line="13" pos:column="65">==<pos:position pos:line="13" pos:column="67"/></operator> <literal type="number" pos:line="13" pos:column="68">0<pos:position pos:line="13" pos:column="69"/></literal></expr>)<pos:position pos:line="13" pos:column="70"/></condition><then pos:line="13" pos:column="70">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="7">ascent_xml_read_int<pos:position pos:line="14" pos:column="26"/></name> <argument_list pos:line="14" pos:column="27">(<argument><expr><name pos:line="14" pos:column="28">doc<pos:position pos:line="14" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="33">child<pos:position pos:line="14" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="40">&amp;<pos:position pos:line="14" pos:column="45"/></operator><name><name pos:line="14" pos:column="41">pi<pos:position pos:line="14" pos:column="43"/></name><operator pos:line="14" pos:column="43">-&gt;<pos:position pos:line="14" pos:column="48"/></operator><name pos:line="14" pos:column="45">class<pos:position pos:line="14" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="52"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="15" pos:column="5">else <if pos:line="15" pos:column="10">if <condition pos:line="15" pos:column="13">(<expr><call><name pos:line="15" pos:column="14">xmlStrcmp<pos:position pos:line="15" pos:column="23"/></name> <argument_list pos:line="15" pos:column="24">(<argument><expr><operator pos:line="15" pos:column="25">(<pos:position pos:line="15" pos:column="26"/></operator><specifier pos:line="15" pos:column="26">const<pos:position pos:line="15" pos:column="31"/></specifier> <name pos:line="15" pos:column="32">xmlChar<pos:position pos:line="15" pos:column="39"/></name> <operator pos:line="15" pos:column="40">*<pos:position pos:line="15" pos:column="41"/></operator><operator pos:line="15" pos:column="41">)<pos:position pos:line="15" pos:column="42"/></operator> <literal type="string" pos:line="15" pos:column="43">"gender"<pos:position pos:line="15" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="53">child<pos:position pos:line="15" pos:column="58"/></name><operator pos:line="15" pos:column="58">-&gt;<pos:position pos:line="15" pos:column="63"/></operator><name pos:line="15" pos:column="60">name<pos:position pos:line="15" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="65"/></argument_list></call> <operator pos:line="15" pos:column="66">==<pos:position pos:line="15" pos:column="68"/></operator> <literal type="number" pos:line="15" pos:column="69">0<pos:position pos:line="15" pos:column="70"/></literal></expr>)<pos:position pos:line="15" pos:column="71"/></condition><then pos:line="15" pos:column="71">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="7">ascent_xml_read_int<pos:position pos:line="16" pos:column="26"/></name> <argument_list pos:line="16" pos:column="27">(<argument><expr><name pos:line="16" pos:column="28">doc<pos:position pos:line="16" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="33">child<pos:position pos:line="16" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="40">&amp;<pos:position pos:line="16" pos:column="45"/></operator><name><name pos:line="16" pos:column="41">pi<pos:position pos:line="16" pos:column="43"/></name><operator pos:line="16" pos:column="43">-&gt;<pos:position pos:line="16" pos:column="48"/></operator><name pos:line="16" pos:column="45">gender<pos:position pos:line="16" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="53"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="17" pos:column="5">else <if pos:line="17" pos:column="10">if <condition pos:line="17" pos:column="13">(<expr><call><name pos:line="17" pos:column="14">xmlStrcmp<pos:position pos:line="17" pos:column="23"/></name> <argument_list pos:line="17" pos:column="24">(<argument><expr><operator pos:line="17" pos:column="25">(<pos:position pos:line="17" pos:column="26"/></operator><specifier pos:line="17" pos:column="26">const<pos:position pos:line="17" pos:column="31"/></specifier> <name pos:line="17" pos:column="32">xmlChar<pos:position pos:line="17" pos:column="39"/></name> <operator pos:line="17" pos:column="40">*<pos:position pos:line="17" pos:column="41"/></operator><operator pos:line="17" pos:column="41">)<pos:position pos:line="17" pos:column="42"/></operator> <literal type="string" pos:line="17" pos:column="43">"level"<pos:position pos:line="17" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="52">child<pos:position pos:line="17" pos:column="57"/></name><operator pos:line="17" pos:column="57">-&gt;<pos:position pos:line="17" pos:column="62"/></operator><name pos:line="17" pos:column="59">name<pos:position pos:line="17" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="64"/></argument_list></call> <operator pos:line="17" pos:column="65">==<pos:position pos:line="17" pos:column="67"/></operator> <literal type="number" pos:line="17" pos:column="68">0<pos:position pos:line="17" pos:column="69"/></literal></expr>)<pos:position pos:line="17" pos:column="70"/></condition><then pos:line="17" pos:column="70">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="7">ascent_xml_read_int<pos:position pos:line="18" pos:column="26"/></name> <argument_list pos:line="18" pos:column="27">(<argument><expr><name pos:line="18" pos:column="28">doc<pos:position pos:line="18" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="33">child<pos:position pos:line="18" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="40">&amp;<pos:position pos:line="18" pos:column="45"/></operator><name><name pos:line="18" pos:column="41">pi<pos:position pos:line="18" pos:column="43"/></name><operator pos:line="18" pos:column="43">-&gt;<pos:position pos:line="18" pos:column="48"/></operator><name pos:line="18" pos:column="45">level<pos:position pos:line="18" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="52"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="19" pos:column="5">else <if pos:line="19" pos:column="10">if <condition pos:line="19" pos:column="13">(<expr><call><name pos:line="19" pos:column="14">xmlStrcmp<pos:position pos:line="19" pos:column="23"/></name> <argument_list pos:line="19" pos:column="24">(<argument><expr><operator pos:line="19" pos:column="25">(<pos:position pos:line="19" pos:column="26"/></operator><specifier pos:line="19" pos:column="26">const<pos:position pos:line="19" pos:column="31"/></specifier> <name pos:line="19" pos:column="32">xmlChar<pos:position pos:line="19" pos:column="39"/></name> <operator pos:line="19" pos:column="40">*<pos:position pos:line="19" pos:column="41"/></operator><operator pos:line="19" pos:column="41">)<pos:position pos:line="19" pos:column="42"/></operator> <literal type="string" pos:line="19" pos:column="43">"latency"<pos:position pos:line="19" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="54">child<pos:position pos:line="19" pos:column="59"/></name><operator pos:line="19" pos:column="59">-&gt;<pos:position pos:line="19" pos:column="64"/></operator><name pos:line="19" pos:column="61">name<pos:position pos:line="19" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="66"/></argument_list></call> <operator pos:line="19" pos:column="67">==<pos:position pos:line="19" pos:column="69"/></operator> <literal type="number" pos:line="19" pos:column="70">0<pos:position pos:line="19" pos:column="71"/></literal></expr>)<pos:position pos:line="19" pos:column="72"/></condition><then pos:line="19" pos:column="72">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="7">ascent_xml_read_int<pos:position pos:line="20" pos:column="26"/></name> <argument_list pos:line="20" pos:column="27">(<argument><expr><name pos:line="20" pos:column="28">doc<pos:position pos:line="20" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="33">child<pos:position pos:line="20" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="40">&amp;<pos:position pos:line="20" pos:column="45"/></operator><name><name pos:line="20" pos:column="41">pi<pos:position pos:line="20" pos:column="43"/></name><operator pos:line="20" pos:column="43">-&gt;<pos:position pos:line="20" pos:column="48"/></operator><name pos:line="20" pos:column="45">latency<pos:position pos:line="20" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="54"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="21" pos:column="5">else <if pos:line="21" pos:column="10">if <condition pos:line="21" pos:column="13">(<expr><operator pos:line="21" pos:column="14">(<pos:position pos:line="21" pos:column="15"/></operator><call><name pos:line="21" pos:column="15">xmlStrcmp<pos:position pos:line="21" pos:column="24"/></name> <argument_list pos:line="21" pos:column="25">(<argument><expr><operator pos:line="21" pos:column="26">(<pos:position pos:line="21" pos:column="27"/></operator><specifier pos:line="21" pos:column="27">const<pos:position pos:line="21" pos:column="32"/></specifier> <name pos:line="21" pos:column="33">xmlChar<pos:position pos:line="21" pos:column="40"/></name> <operator pos:line="21" pos:column="41">*<pos:position pos:line="21" pos:column="42"/></operator><operator pos:line="21" pos:column="42">)<pos:position pos:line="21" pos:column="43"/></operator> <literal type="string" pos:line="21" pos:column="44">"name"<pos:position pos:line="21" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="52">child<pos:position pos:line="21" pos:column="57"/></name><operator pos:line="21" pos:column="57">-&gt;<pos:position pos:line="21" pos:column="62"/></operator><name pos:line="21" pos:column="59">name<pos:position pos:line="21" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="64"/></argument_list></call> <operator pos:line="21" pos:column="65">==<pos:position pos:line="21" pos:column="67"/></operator> <literal type="number" pos:line="21" pos:column="68">0<pos:position pos:line="21" pos:column="69"/></literal><operator pos:line="21" pos:column="69">)<pos:position pos:line="21" pos:column="70"/></operator>
        <operator pos:line="22" pos:column="9">||<pos:position pos:line="22" pos:column="11"/></operator> <operator pos:line="22" pos:column="12">(<pos:position pos:line="22" pos:column="13"/></operator><call><name pos:line="22" pos:column="13">xmlStrcmp<pos:position pos:line="22" pos:column="22"/></name> <argument_list pos:line="22" pos:column="23">(<argument><expr><operator pos:line="22" pos:column="24">(<pos:position pos:line="22" pos:column="25"/></operator><specifier pos:line="22" pos:column="25">const<pos:position pos:line="22" pos:column="30"/></specifier> <name pos:line="22" pos:column="31">xmlChar<pos:position pos:line="22" pos:column="38"/></name> <operator pos:line="22" pos:column="39">*<pos:position pos:line="22" pos:column="40"/></operator><operator pos:line="22" pos:column="40">)<pos:position pos:line="22" pos:column="41"/></operator> <literal type="string" pos:line="22" pos:column="42">"pvprank"<pos:position pos:line="22" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="53">child<pos:position pos:line="22" pos:column="58"/></name><operator pos:line="22" pos:column="58">-&gt;<pos:position pos:line="22" pos:column="63"/></operator><name pos:line="22" pos:column="60">name<pos:position pos:line="22" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="65"/></argument_list></call> <operator pos:line="22" pos:column="66">==<pos:position pos:line="22" pos:column="68"/></operator> <literal type="number" pos:line="22" pos:column="69">0<pos:position pos:line="22" pos:column="70"/></literal><operator pos:line="22" pos:column="70">)<pos:position pos:line="22" pos:column="71"/></operator>
        <operator pos:line="23" pos:column="9">||<pos:position pos:line="23" pos:column="11"/></operator> <operator pos:line="23" pos:column="12">(<pos:position pos:line="23" pos:column="13"/></operator><call><name pos:line="23" pos:column="13">xmlStrcmp<pos:position pos:line="23" pos:column="22"/></name> <argument_list pos:line="23" pos:column="23">(<argument><expr><operator pos:line="23" pos:column="24">(<pos:position pos:line="23" pos:column="25"/></operator><specifier pos:line="23" pos:column="25">const<pos:position pos:line="23" pos:column="30"/></specifier> <name pos:line="23" pos:column="31">xmlChar<pos:position pos:line="23" pos:column="38"/></name> <operator pos:line="23" pos:column="39">*<pos:position pos:line="23" pos:column="40"/></operator><operator pos:line="23" pos:column="40">)<pos:position pos:line="23" pos:column="41"/></operator> <literal type="string" pos:line="23" pos:column="42">"map"<pos:position pos:line="23" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="49">child<pos:position pos:line="23" pos:column="54"/></name><operator pos:line="23" pos:column="54">-&gt;<pos:position pos:line="23" pos:column="59"/></operator><name pos:line="23" pos:column="56">name<pos:position pos:line="23" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="61"/></argument_list></call> <operator pos:line="23" pos:column="62">==<pos:position pos:line="23" pos:column="64"/></operator> <literal type="number" pos:line="23" pos:column="65">0<pos:position pos:line="23" pos:column="66"/></literal><operator pos:line="23" pos:column="66">)<pos:position pos:line="23" pos:column="67"/></operator>
        <operator pos:line="24" pos:column="9">||<pos:position pos:line="24" pos:column="11"/></operator> <operator pos:line="24" pos:column="12">(<pos:position pos:line="24" pos:column="13"/></operator><call><name pos:line="24" pos:column="13">xmlStrcmp<pos:position pos:line="24" pos:column="22"/></name> <argument_list pos:line="24" pos:column="23">(<argument><expr><operator pos:line="24" pos:column="24">(<pos:position pos:line="24" pos:column="25"/></operator><specifier pos:line="24" pos:column="25">const<pos:position pos:line="24" pos:column="30"/></specifier> <name pos:line="24" pos:column="31">xmlChar<pos:position pos:line="24" pos:column="38"/></name> <operator pos:line="24" pos:column="39">*<pos:position pos:line="24" pos:column="40"/></operator><operator pos:line="24" pos:column="40">)<pos:position pos:line="24" pos:column="41"/></operator> <literal type="string" pos:line="24" pos:column="42">"areaid"<pos:position pos:line="24" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="52">child<pos:position pos:line="24" pos:column="57"/></name><operator pos:line="24" pos:column="57">-&gt;<pos:position pos:line="24" pos:column="62"/></operator><name pos:line="24" pos:column="59">name<pos:position pos:line="24" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="64"/></argument_list></call> <operator pos:line="24" pos:column="65">==<pos:position pos:line="24" pos:column="67"/></operator> <literal type="number" pos:line="24" pos:column="68">0<pos:position pos:line="24" pos:column="69"/></literal><operator pos:line="24" pos:column="69">)<pos:position pos:line="24" pos:column="70"/></operator>
        <operator pos:line="25" pos:column="9">||<pos:position pos:line="25" pos:column="11"/></operator> <operator pos:line="25" pos:column="12">(<pos:position pos:line="25" pos:column="13"/></operator><call><name pos:line="25" pos:column="13">xmlStrcmp<pos:position pos:line="25" pos:column="22"/></name> <argument_list pos:line="25" pos:column="23">(<argument><expr><operator pos:line="25" pos:column="24">(<pos:position pos:line="25" pos:column="25"/></operator><specifier pos:line="25" pos:column="25">const<pos:position pos:line="25" pos:column="30"/></specifier> <name pos:line="25" pos:column="31">xmlChar<pos:position pos:line="25" pos:column="38"/></name> <operator pos:line="25" pos:column="39">*<pos:position pos:line="25" pos:column="40"/></operator><operator pos:line="25" pos:column="40">)<pos:position pos:line="25" pos:column="41"/></operator> <literal type="string" pos:line="25" pos:column="42">"xpos"<pos:position pos:line="25" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="50">child<pos:position pos:line="25" pos:column="55"/></name><operator pos:line="25" pos:column="55">-&gt;<pos:position pos:line="25" pos:column="60"/></operator><name pos:line="25" pos:column="57">name<pos:position pos:line="25" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="62"/></argument_list></call> <operator pos:line="25" pos:column="63">==<pos:position pos:line="25" pos:column="65"/></operator> <literal type="number" pos:line="25" pos:column="66">0<pos:position pos:line="25" pos:column="67"/></literal><operator pos:line="25" pos:column="67">)<pos:position pos:line="25" pos:column="68"/></operator>
        <operator pos:line="26" pos:column="9">||<pos:position pos:line="26" pos:column="11"/></operator> <operator pos:line="26" pos:column="12">(<pos:position pos:line="26" pos:column="13"/></operator><call><name pos:line="26" pos:column="13">xmlStrcmp<pos:position pos:line="26" pos:column="22"/></name> <argument_list pos:line="26" pos:column="23">(<argument><expr><operator pos:line="26" pos:column="24">(<pos:position pos:line="26" pos:column="25"/></operator><specifier pos:line="26" pos:column="25">const<pos:position pos:line="26" pos:column="30"/></specifier> <name pos:line="26" pos:column="31">xmlChar<pos:position pos:line="26" pos:column="38"/></name> <operator pos:line="26" pos:column="39">*<pos:position pos:line="26" pos:column="40"/></operator><operator pos:line="26" pos:column="40">)<pos:position pos:line="26" pos:column="41"/></operator> <literal type="string" pos:line="26" pos:column="42">"ypos"<pos:position pos:line="26" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="50">child<pos:position pos:line="26" pos:column="55"/></name><operator pos:line="26" pos:column="55">-&gt;<pos:position pos:line="26" pos:column="60"/></operator><name pos:line="26" pos:column="57">name<pos:position pos:line="26" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="62"/></argument_list></call> <operator pos:line="26" pos:column="63">==<pos:position pos:line="26" pos:column="65"/></operator> <literal type="number" pos:line="26" pos:column="66">0<pos:position pos:line="26" pos:column="67"/></literal><operator pos:line="26" pos:column="67">)<pos:position pos:line="26" pos:column="68"/></operator>
        <operator pos:line="27" pos:column="9">||<pos:position pos:line="27" pos:column="11"/></operator> <operator pos:line="27" pos:column="12">(<pos:position pos:line="27" pos:column="13"/></operator><call><name pos:line="27" pos:column="13">xmlStrcmp<pos:position pos:line="27" pos:column="22"/></name> <argument_list pos:line="27" pos:column="23">(<argument><expr><operator pos:line="27" pos:column="24">(<pos:position pos:line="27" pos:column="25"/></operator><specifier pos:line="27" pos:column="25">const<pos:position pos:line="27" pos:column="30"/></specifier> <name pos:line="27" pos:column="31">xmlChar<pos:position pos:line="27" pos:column="38"/></name> <operator pos:line="27" pos:column="39">*<pos:position pos:line="27" pos:column="40"/></operator><operator pos:line="27" pos:column="40">)<pos:position pos:line="27" pos:column="41"/></operator> <literal type="string" pos:line="27" pos:column="42">"onime"<pos:position pos:line="27" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="51">child<pos:position pos:line="27" pos:column="56"/></name><operator pos:line="27" pos:column="56">-&gt;<pos:position pos:line="27" pos:column="61"/></operator><name pos:line="27" pos:column="58">name<pos:position pos:line="27" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="63"/></argument_list></call> <operator pos:line="27" pos:column="64">==<pos:position pos:line="27" pos:column="66"/></operator> <literal type="number" pos:line="27" pos:column="67">0<pos:position pos:line="27" pos:column="68"/></literal><operator pos:line="27" pos:column="68">)<pos:position pos:line="27" pos:column="69"/></operator></expr>)<pos:position pos:line="27" pos:column="70"/></condition><then pos:line="27" pos:column="70">
      <comment type="block" pos:line="28" pos:column="7">/* ignore */</comment><block type="pseudo"><empty_stmt pos:line="28" pos:column="19">;<pos:position pos:line="28" pos:column="20"/></empty_stmt></block></then></if></elseif>
    <else pos:line="29" pos:column="5">else
    <block pos:line="30" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="31" pos:column="7">WARNING<pos:position pos:line="31" pos:column="14"/></name> <argument_list pos:line="31" pos:column="15">(<argument><expr><literal type="string" pos:line="31" pos:column="16">"ascent plugin: ascent_xml_status: Unknown tag: %s"<pos:position pos:line="31" pos:column="67"/></literal></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="69">child<pos:position pos:line="31" pos:column="74"/></name><operator pos:line="31" pos:column="74">-&gt;<pos:position pos:line="31" pos:column="79"/></operator><name pos:line="31" pos:column="76">name<pos:position pos:line="31" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="82"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></else></if>
  }<pos:position pos:line="33" pos:column="4"/></block></for> <comment type="block" pos:line="33" pos:column="5">/* for (child) */</comment>

  <return pos:line="35" pos:column="3">return <expr><operator pos:line="35" pos:column="10">(<pos:position pos:line="35" pos:column="11"/></operator><literal type="number" pos:line="35" pos:column="11">0<pos:position pos:line="35" pos:column="12"/></literal><operator pos:line="35" pos:column="12">)<pos:position pos:line="35" pos:column="13"/></operator></expr>;<pos:position pos:line="35" pos:column="14"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

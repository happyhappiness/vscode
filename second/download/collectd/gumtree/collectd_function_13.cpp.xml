<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_function_13.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name> <parameter_list pos:line="1" pos:column="10">(<parameter><decl><type><name pos:line="1" pos:column="11">int<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">argc<pos:position pos:line="1" pos:column="19"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="21">char<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier><modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">argv<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<comment type="block" pos:line="3" pos:column="9">/* we are not really going to use this */</comment>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">apc_detail_s<pos:position pos:line="4" pos:column="28"/></name></name></type> <name pos:line="4" pos:column="29">apcups_detail<pos:position pos:line="4" pos:column="42"/></name></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="6" pos:column="9">openlog<pos:position pos:line="6" pos:column="16"/></name> <argument_list pos:line="6" pos:column="17">(<argument><expr><literal type="string" pos:line="6" pos:column="18">"apcups"<pos:position pos:line="6" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="28">LOG_PID<pos:position pos:line="6" pos:column="35"/></name> <operator pos:line="6" pos:column="36">|<pos:position pos:line="6" pos:column="37"/></operator> <name pos:line="6" pos:column="38">LOG_NDELAY<pos:position pos:line="6" pos:column="48"/></name> <operator pos:line="6" pos:column="49">|<pos:position pos:line="6" pos:column="50"/></operator> <name pos:line="6" pos:column="51">LOG_LOCAL1<pos:position pos:line="6" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="63">LOG_USER<pos:position pos:line="6" pos:column="71"/></name></expr></argument>)<pos:position pos:line="6" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="73"/></expr_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">global_host<pos:position pos:line="8" pos:column="24"/></name> <operator pos:line="8" pos:column="25">==<pos:position pos:line="8" pos:column="27"/></operator> <name pos:line="8" pos:column="28">NULL<pos:position pos:line="8" pos:column="32"/></name> <operator pos:line="8" pos:column="33">||<pos:position pos:line="8" pos:column="35"/></operator> <call><name pos:line="8" pos:column="36">strcmp<pos:position pos:line="8" pos:column="42"/></name> <argument_list pos:line="8" pos:column="43">(<argument><expr><name pos:line="8" pos:column="44">global_host<pos:position pos:line="8" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="57">"0.0.0.0"<pos:position pos:line="8" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="67"/></argument_list></call> <operator pos:line="8" pos:column="68">==<pos:position pos:line="8" pos:column="70"/></operator> <literal type="number" pos:line="8" pos:column="71">0<pos:position pos:line="8" pos:column="72"/></literal></expr>)<pos:position pos:line="8" pos:column="73"/></condition><then pos:line="8" pos:column="73">
		<block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="17">global_host<pos:position pos:line="9" pos:column="28"/></name> <operator pos:line="9" pos:column="29">=<pos:position pos:line="9" pos:column="30"/></operator> <literal type="string" pos:line="9" pos:column="31">"localhost"<pos:position pos:line="9" pos:column="42"/></literal></expr>;<pos:position pos:line="9" pos:column="43"/></expr_stmt></block></then></if>

	<if pos:line="11" pos:column="9">if<condition pos:line="11" pos:column="11">(<expr><call><name pos:line="11" pos:column="12">apc_query_server<pos:position pos:line="11" pos:column="28"/></name> <argument_list pos:line="11" pos:column="29">(<argument><expr><name pos:line="11" pos:column="30">global_host<pos:position pos:line="11" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="43">global_port<pos:position pos:line="11" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="56">&amp;<pos:position pos:line="11" pos:column="61"/></operator><name pos:line="11" pos:column="57">apcups_detail<pos:position pos:line="11" pos:column="70"/></name></expr></argument>)<pos:position pos:line="11" pos:column="71"/></argument_list></call> <operator pos:line="11" pos:column="72">&lt;<pos:position pos:line="11" pos:column="76"/></operator> <literal type="number" pos:line="11" pos:column="74">0<pos:position pos:line="11" pos:column="75"/></literal></expr>)<pos:position pos:line="11" pos:column="76"/></condition><then pos:line="11" pos:column="76">
	<block pos:line="12" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">printf<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><literal type="string" pos:line="13" pos:column="24">"apcups: Failed...\n"<pos:position pos:line="13" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="47"/></expr_stmt>
		<return pos:line="14" pos:column="17">return<expr><operator pos:line="14" pos:column="23">(<pos:position pos:line="14" pos:column="24"/></operator><operator pos:line="14" pos:column="24">-<pos:position pos:line="14" pos:column="25"/></operator><literal type="number" pos:line="14" pos:column="25">1<pos:position pos:line="14" pos:column="26"/></literal><operator pos:line="14" pos:column="26">)<pos:position pos:line="14" pos:column="27"/></operator></expr>;<pos:position pos:line="14" pos:column="28"/></return>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>

	<return pos:line="17" pos:column="9">return <expr><literal type="number" pos:line="17" pos:column="16">0<pos:position pos:line="17" pos:column="17"/></literal></expr>;<pos:position pos:line="17" pos:column="18"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1813_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">statsd_network_read<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">int<pos:position pos:line="1" pos:column="36"/></name></type> <name pos:line="1" pos:column="37">fd<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list> <comment type="block" pos:line="1" pos:column="41">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">buffer<pos:position pos:line="3" pos:column="14"/></name><index pos:line="3" pos:column="14">[<expr><literal type="number" pos:line="3" pos:column="15">4096<pos:position pos:line="3" pos:column="19"/></literal></expr>]<pos:position pos:line="3" pos:column="20"/></index></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">buffer_size<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">ssize_t<pos:position pos:line="5" pos:column="10"/></name></type> <name pos:line="5" pos:column="11">status<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">status<pos:position pos:line="7" pos:column="9"/></name> <operator pos:line="7" pos:column="10">=<pos:position pos:line="7" pos:column="11"/></operator> <call><name pos:line="7" pos:column="12">recv<pos:position pos:line="7" pos:column="16"/></name><argument_list pos:line="7" pos:column="16">(<argument><expr><name pos:line="7" pos:column="17">fd<pos:position pos:line="7" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="21">buffer<pos:position pos:line="7" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="29">sizeof<argument_list pos:line="7" pos:column="35">(<argument><expr><name pos:line="7" pos:column="36">buffer<pos:position pos:line="7" pos:column="42"/></name></expr></argument>)<pos:position pos:line="7" pos:column="43"/></argument_list></sizeof></expr></argument>, <comment type="block" pos:line="7" pos:column="45">/* flags = */</comment> <argument><expr><name pos:line="7" pos:column="59">MSG_DONTWAIT<pos:position pos:line="7" pos:column="71"/></name></expr></argument>)<pos:position pos:line="7" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="73"/></expr_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">status<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">&lt;<pos:position pos:line="8" pos:column="18"/></operator> <literal type="number" pos:line="8" pos:column="16">0<pos:position pos:line="8" pos:column="17"/></literal></expr>)<pos:position pos:line="8" pos:column="18"/></condition><then pos:line="8" pos:column="18"> <block pos:line="8" pos:column="19">{
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name></type> <name><name pos:line="9" pos:column="10">errbuf<pos:position pos:line="9" pos:column="16"/></name><index pos:line="9" pos:column="16">[<expr><literal type="number" pos:line="9" pos:column="17">1024<pos:position pos:line="9" pos:column="21"/></literal></expr>]<pos:position pos:line="9" pos:column="22"/></index></name></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">(<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">errno<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">==<pos:position pos:line="11" pos:column="18"/></operator> <name pos:line="11" pos:column="19">EAGAIN<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">)<pos:position pos:line="11" pos:column="26"/></operator> <operator pos:line="11" pos:column="27">||<pos:position pos:line="11" pos:column="29"/></operator> <operator pos:line="11" pos:column="30">(<pos:position pos:line="11" pos:column="31"/></operator><name pos:line="11" pos:column="31">errno<pos:position pos:line="11" pos:column="36"/></name> <operator pos:line="11" pos:column="37">==<pos:position pos:line="11" pos:column="39"/></operator> <name pos:line="11" pos:column="40">EWOULDBLOCK<pos:position pos:line="11" pos:column="51"/></name><operator pos:line="11" pos:column="51">)<pos:position pos:line="11" pos:column="52"/></operator></expr>)<pos:position pos:line="11" pos:column="53"/></condition><then pos:line="11" pos:column="53">
      <block type="pseudo"><return pos:line="12" pos:column="7">return;<pos:position pos:line="12" pos:column="14"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">ERROR<pos:position pos:line="14" pos:column="10"/></name><argument_list pos:line="14" pos:column="10">(<argument><expr><literal type="string" pos:line="14" pos:column="11">"statsd plugin: recv(2) failed: %s"<pos:position pos:line="14" pos:column="46"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="15" pos:column="11">sstrerror<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><name pos:line="15" pos:column="21">errno<pos:position pos:line="15" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="28">errbuf<pos:position pos:line="15" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="36">sizeof<argument_list pos:line="15" pos:column="42">(<argument><expr><name pos:line="15" pos:column="43">errbuf<pos:position pos:line="15" pos:column="49"/></name></expr></argument>)<pos:position pos:line="15" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="53"/></expr_stmt>
    <return pos:line="16" pos:column="5">return;<pos:position pos:line="16" pos:column="12"/></return>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="19" pos:column="3">buffer_size<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">=<pos:position pos:line="19" pos:column="16"/></operator> <operator pos:line="19" pos:column="17">(<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="18">size_t<pos:position pos:line="19" pos:column="24"/></name><operator pos:line="19" pos:column="24">)<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="25">status<pos:position pos:line="19" pos:column="31"/></name></expr>;<pos:position pos:line="19" pos:column="32"/></expr_stmt>
  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><name pos:line="20" pos:column="7">buffer_size<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">&gt;=<pos:position pos:line="20" pos:column="24"/></operator> <sizeof pos:line="20" pos:column="22">sizeof<argument_list pos:line="20" pos:column="28">(<argument><expr><name pos:line="20" pos:column="29">buffer<pos:position pos:line="20" pos:column="35"/></name></expr></argument>)<pos:position pos:line="20" pos:column="36"/></argument_list></sizeof></expr>)<pos:position pos:line="20" pos:column="37"/></condition><then pos:line="20" pos:column="37">
    <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="5">buffer_size<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">=<pos:position pos:line="21" pos:column="18"/></operator> <sizeof pos:line="21" pos:column="19">sizeof<argument_list pos:line="21" pos:column="25">(<argument><expr><name pos:line="21" pos:column="26">buffer<pos:position pos:line="21" pos:column="32"/></name></expr></argument>)<pos:position pos:line="21" pos:column="33"/></argument_list></sizeof> <operator pos:line="21" pos:column="34">-<pos:position pos:line="21" pos:column="35"/></operator> <literal type="number" pos:line="21" pos:column="36">1<pos:position pos:line="21" pos:column="37"/></literal></expr>;<pos:position pos:line="21" pos:column="38"/></expr_stmt></block></then></if>
  <expr_stmt><expr><name><name pos:line="22" pos:column="3">buffer<pos:position pos:line="22" pos:column="9"/></name><index pos:line="22" pos:column="9">[<expr><name pos:line="22" pos:column="10">buffer_size<pos:position pos:line="22" pos:column="21"/></name></expr>]<pos:position pos:line="22" pos:column="22"/></index></name> <operator pos:line="22" pos:column="23">=<pos:position pos:line="22" pos:column="24"/></operator> <literal type="number" pos:line="22" pos:column="25">0<pos:position pos:line="22" pos:column="26"/></literal></expr>;<pos:position pos:line="22" pos:column="27"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="24" pos:column="3">statsd_parse_buffer<pos:position pos:line="24" pos:column="22"/></name><argument_list pos:line="24" pos:column="22">(<argument><expr><name pos:line="24" pos:column="23">buffer<pos:position pos:line="24" pos:column="29"/></name></expr></argument>)<pos:position pos:line="24" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="31"/></expr_stmt>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

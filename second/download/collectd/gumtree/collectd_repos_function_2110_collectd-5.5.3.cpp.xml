<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2110_collectd-5.5.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">lcc_network_buffer_t<pos:position pos:line="1" pos:column="21"/></name> <modifier pos:line="1" pos:column="22">*<pos:position pos:line="1" pos:column="23"/></modifier></type><name pos:line="1" pos:column="23">lcc_network_buffer_create<pos:position pos:line="1" pos:column="48"/></name> <parameter_list pos:line="1" pos:column="49">(<parameter><decl><type><name pos:line="1" pos:column="50">size_t<pos:position pos:line="1" pos:column="56"/></name></type> <name pos:line="1" pos:column="57">size<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list> <comment type="block" pos:line="1" pos:column="63">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">lcc_network_buffer_t<pos:position pos:line="3" pos:column="23"/></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">nb<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">size<pos:position pos:line="5" pos:column="11"/></name> <operator pos:line="5" pos:column="12">==<pos:position pos:line="5" pos:column="14"/></operator> <literal type="number" pos:line="5" pos:column="15">0<pos:position pos:line="5" pos:column="16"/></literal></expr>)<pos:position pos:line="5" pos:column="17"/></condition><then pos:line="5" pos:column="17">
    <block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="5">size<pos:position pos:line="6" pos:column="9"/></name> <operator pos:line="6" pos:column="10">=<pos:position pos:line="6" pos:column="11"/></operator> <name pos:line="6" pos:column="12">LCC_NETWORK_BUFFER_SIZE_DEFAULT<pos:position pos:line="6" pos:column="43"/></name></expr>;<pos:position pos:line="6" pos:column="44"/></expr_stmt></block></then></if>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">size<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">&lt;<pos:position pos:line="8" pos:column="16"/></operator> <literal type="number" pos:line="8" pos:column="14">128<pos:position pos:line="8" pos:column="17"/></literal></expr>)<pos:position pos:line="8" pos:column="18"/></condition><then pos:line="8" pos:column="18">
  <block pos:line="9" pos:column="3">{
    <expr_stmt><expr><name pos:line="10" pos:column="5">errno<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <name pos:line="10" pos:column="13">EINVAL<pos:position pos:line="10" pos:column="19"/></name></expr>;<pos:position pos:line="10" pos:column="20"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><name pos:line="11" pos:column="13">NULL<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">)<pos:position pos:line="11" pos:column="18"/></operator></expr>;<pos:position pos:line="11" pos:column="19"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="14" pos:column="3">nb<pos:position pos:line="14" pos:column="5"/></name> <operator pos:line="14" pos:column="6">=<pos:position pos:line="14" pos:column="7"/></operator> <call><name pos:line="14" pos:column="8">malloc<pos:position pos:line="14" pos:column="14"/></name> <argument_list pos:line="14" pos:column="15">(<argument><expr><sizeof pos:line="14" pos:column="16">sizeof <argument_list pos:line="14" pos:column="23">(<argument><expr><operator pos:line="14" pos:column="24">*<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="25">nb<pos:position pos:line="14" pos:column="27"/></name></expr></argument>)<pos:position pos:line="14" pos:column="28"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="30"/></expr_stmt>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name pos:line="15" pos:column="7">nb<pos:position pos:line="15" pos:column="9"/></name> <operator pos:line="15" pos:column="10">==<pos:position pos:line="15" pos:column="12"/></operator> <name pos:line="15" pos:column="13">NULL<pos:position pos:line="15" pos:column="17"/></name></expr>)<pos:position pos:line="15" pos:column="18"/></condition><then pos:line="15" pos:column="18">
    <block type="pseudo"><return pos:line="16" pos:column="5">return <expr><operator pos:line="16" pos:column="12">(<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="13">NULL<pos:position pos:line="16" pos:column="17"/></name><operator pos:line="16" pos:column="17">)<pos:position pos:line="16" pos:column="18"/></operator></expr>;<pos:position pos:line="16" pos:column="19"/></return></block></then></if>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">memset<pos:position pos:line="17" pos:column="9"/></name> <argument_list pos:line="17" pos:column="10">(<argument><expr><name pos:line="17" pos:column="11">nb<pos:position pos:line="17" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="15">0<pos:position pos:line="17" pos:column="16"/></literal></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="18">sizeof <argument_list pos:line="17" pos:column="25">(<argument><expr><operator pos:line="17" pos:column="26">*<pos:position pos:line="17" pos:column="27"/></operator><name pos:line="17" pos:column="27">nb<pos:position pos:line="17" pos:column="29"/></name></expr></argument>)<pos:position pos:line="17" pos:column="30"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="32"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="19" pos:column="3">nb<pos:position pos:line="19" pos:column="5"/></name><operator pos:line="19" pos:column="5">-&gt;<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="7">size<pos:position pos:line="19" pos:column="11"/></name></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <name pos:line="19" pos:column="14">size<pos:position pos:line="19" pos:column="18"/></name></expr>;<pos:position pos:line="19" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="20" pos:column="3">nb<pos:position pos:line="20" pos:column="5"/></name><operator pos:line="20" pos:column="5">-&gt;<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="7">buffer<pos:position pos:line="20" pos:column="13"/></name></name> <operator pos:line="20" pos:column="14">=<pos:position pos:line="20" pos:column="15"/></operator> <call><name pos:line="20" pos:column="16">malloc<pos:position pos:line="20" pos:column="22"/></name> <argument_list pos:line="20" pos:column="23">(<argument><expr><name><name pos:line="20" pos:column="24">nb<pos:position pos:line="20" pos:column="26"/></name><operator pos:line="20" pos:column="26">-&gt;<pos:position pos:line="20" pos:column="31"/></operator><name pos:line="20" pos:column="28">size<pos:position pos:line="20" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="34"/></expr_stmt>
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><name><name pos:line="21" pos:column="7">nb<pos:position pos:line="21" pos:column="9"/></name><operator pos:line="21" pos:column="9">-&gt;<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="11">buffer<pos:position pos:line="21" pos:column="17"/></name></name> <operator pos:line="21" pos:column="18">==<pos:position pos:line="21" pos:column="20"/></operator> <name pos:line="21" pos:column="21">NULL<pos:position pos:line="21" pos:column="25"/></name></expr>)<pos:position pos:line="21" pos:column="26"/></condition><then pos:line="21" pos:column="26">
  <block pos:line="22" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">free<pos:position pos:line="23" pos:column="9"/></name> <argument_list pos:line="23" pos:column="10">(<argument><expr><name pos:line="23" pos:column="11">nb<pos:position pos:line="23" pos:column="13"/></name></expr></argument>)<pos:position pos:line="23" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="15"/></expr_stmt>
    <return pos:line="24" pos:column="5">return <expr><operator pos:line="24" pos:column="12">(<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="13">NULL<pos:position pos:line="24" pos:column="17"/></name><operator pos:line="24" pos:column="17">)<pos:position pos:line="24" pos:column="18"/></operator></expr>;<pos:position pos:line="24" pos:column="19"/></return>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="26" pos:column="3">memset<pos:position pos:line="26" pos:column="9"/></name> <argument_list pos:line="26" pos:column="10">(<argument><expr><name><name pos:line="26" pos:column="11">nb<pos:position pos:line="26" pos:column="13"/></name><operator pos:line="26" pos:column="13">-&gt;<pos:position pos:line="26" pos:column="18"/></operator><name pos:line="26" pos:column="15">buffer<pos:position pos:line="26" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="23">0<pos:position pos:line="26" pos:column="24"/></literal></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="26">nb<pos:position pos:line="26" pos:column="28"/></name><operator pos:line="26" pos:column="28">-&gt;<pos:position pos:line="26" pos:column="33"/></operator><name pos:line="26" pos:column="30">size<pos:position pos:line="26" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="28" pos:column="3">nb<pos:position pos:line="28" pos:column="5"/></name><operator pos:line="28" pos:column="5">-&gt;<pos:position pos:line="28" pos:column="10"/></operator><name pos:line="28" pos:column="7">ptr<pos:position pos:line="28" pos:column="10"/></name></name> <operator pos:line="28" pos:column="11">=<pos:position pos:line="28" pos:column="12"/></operator> <name><name pos:line="28" pos:column="13">nb<pos:position pos:line="28" pos:column="15"/></name><operator pos:line="28" pos:column="15">-&gt;<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="17">buffer<pos:position pos:line="28" pos:column="23"/></name></name></expr>;<pos:position pos:line="28" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="29" pos:column="3">nb<pos:position pos:line="29" pos:column="5"/></name><operator pos:line="29" pos:column="5">-&gt;<pos:position pos:line="29" pos:column="10"/></operator><name pos:line="29" pos:column="7">free<pos:position pos:line="29" pos:column="11"/></name></name> <operator pos:line="29" pos:column="12">=<pos:position pos:line="29" pos:column="13"/></operator> <name><name pos:line="29" pos:column="14">nb<pos:position pos:line="29" pos:column="16"/></name><operator pos:line="29" pos:column="16">-&gt;<pos:position pos:line="29" pos:column="21"/></operator><name pos:line="29" pos:column="18">size<pos:position pos:line="29" pos:column="22"/></name></name></expr>;<pos:position pos:line="29" pos:column="23"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="31" pos:column="3">nb<pos:position pos:line="31" pos:column="5"/></name><operator pos:line="31" pos:column="5">-&gt;<pos:position pos:line="31" pos:column="10"/></operator><name pos:line="31" pos:column="7">seclevel<pos:position pos:line="31" pos:column="15"/></name></name> <operator pos:line="31" pos:column="16">=<pos:position pos:line="31" pos:column="17"/></operator> <name pos:line="31" pos:column="18">NONE<pos:position pos:line="31" pos:column="22"/></name></expr>;<pos:position pos:line="31" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="32" pos:column="3">nb<pos:position pos:line="32" pos:column="5"/></name><operator pos:line="32" pos:column="5">-&gt;<pos:position pos:line="32" pos:column="10"/></operator><name pos:line="32" pos:column="7">username<pos:position pos:line="32" pos:column="15"/></name></name> <operator pos:line="32" pos:column="16">=<pos:position pos:line="32" pos:column="17"/></operator> <name pos:line="32" pos:column="18">NULL<pos:position pos:line="32" pos:column="22"/></name></expr>;<pos:position pos:line="32" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="33" pos:column="3">nb<pos:position pos:line="33" pos:column="5"/></name><operator pos:line="33" pos:column="5">-&gt;<pos:position pos:line="33" pos:column="10"/></operator><name pos:line="33" pos:column="7">password<pos:position pos:line="33" pos:column="15"/></name></name> <operator pos:line="33" pos:column="16">=<pos:position pos:line="33" pos:column="17"/></operator> <name pos:line="33" pos:column="18">NULL<pos:position pos:line="33" pos:column="22"/></name></expr>;<pos:position pos:line="33" pos:column="23"/></expr_stmt>

  <return pos:line="35" pos:column="3">return <expr><operator pos:line="35" pos:column="10">(<pos:position pos:line="35" pos:column="11"/></operator><name pos:line="35" pos:column="11">nb<pos:position pos:line="35" pos:column="13"/></name><operator pos:line="35" pos:column="13">)<pos:position pos:line="35" pos:column="14"/></operator></expr>;<pos:position pos:line="35" pos:column="15"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

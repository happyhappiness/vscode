<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_475_collectd-4.3.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">logfile_notification<pos:position pos:line="1" pos:column="32"/></name> <parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">notification_t<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">n<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name></type>  <name><name pos:line="3" pos:column="15">buf<pos:position pos:line="3" pos:column="18"/></name><index pos:line="3" pos:column="18">[<expr><literal type="number" pos:line="3" pos:column="19">1024<pos:position pos:line="3" pos:column="23"/></literal></expr>]<pos:position pos:line="3" pos:column="24"/></index></name> <init pos:line="3" pos:column="25">= <expr><literal type="string" pos:line="3" pos:column="27">""<pos:position pos:line="3" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">buf_ptr<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><name pos:line="4" pos:column="25">buf<pos:position pos:line="4" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type>   <name pos:line="5" pos:column="15">buf_len<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><sizeof pos:line="5" pos:column="25">sizeof <argument_list pos:line="5" pos:column="32">(<argument><expr><name pos:line="5" pos:column="33">buf<pos:position pos:line="5" pos:column="36"/></name></expr></argument>)<pos:position pos:line="5" pos:column="37"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="5" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">status<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>

	<expr_stmt><expr><name pos:line="8" pos:column="9">status<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <call><name pos:line="8" pos:column="18">snprintf<pos:position pos:line="8" pos:column="26"/></name> <argument_list pos:line="8" pos:column="27">(<argument><expr><name pos:line="8" pos:column="28">buf_ptr<pos:position pos:line="8" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="37">buf_len<pos:position pos:line="8" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="46">"Notification: severity = %s"<pos:position pos:line="8" pos:column="75"/></literal></expr></argument>,
			<argument><expr><ternary><condition><expr><operator pos:line="9" pos:column="25">(<pos:position pos:line="9" pos:column="26"/></operator><name><name pos:line="9" pos:column="26">n<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">-&gt;<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="29">severity<pos:position pos:line="9" pos:column="37"/></name></name> <operator pos:line="9" pos:column="38">==<pos:position pos:line="9" pos:column="40"/></operator> <name pos:line="9" pos:column="41">NOTIF_FAILURE<pos:position pos:line="9" pos:column="54"/></name><operator pos:line="9" pos:column="54">)<pos:position pos:line="9" pos:column="55"/></operator></expr> ?<pos:position pos:line="9" pos:column="57"/></condition><then pos:line="9" pos:column="57"> <expr><literal type="string" pos:line="9" pos:column="58">"FAILURE"<pos:position pos:line="9" pos:column="67"/></literal></expr>
			<pos:position pos:line="10" pos:column="4"/></then><else pos:line="10" pos:column="25">: <expr><operator pos:line="10" pos:column="27">(<pos:position pos:line="10" pos:column="28"/></operator><ternary><condition><expr><operator pos:line="10" pos:column="28">(<pos:position pos:line="10" pos:column="29"/></operator><name><name pos:line="10" pos:column="29">n<pos:position pos:line="10" pos:column="30"/></name><operator pos:line="10" pos:column="30">-&gt;<pos:position pos:line="10" pos:column="35"/></operator><name pos:line="10" pos:column="32">severity<pos:position pos:line="10" pos:column="40"/></name></name> <operator pos:line="10" pos:column="41">==<pos:position pos:line="10" pos:column="43"/></operator> <name pos:line="10" pos:column="44">NOTIF_WARNING<pos:position pos:line="10" pos:column="57"/></name><operator pos:line="10" pos:column="57">)<pos:position pos:line="10" pos:column="58"/></operator></expr> ?<pos:position pos:line="10" pos:column="60"/></condition><then pos:line="10" pos:column="60"> <expr><literal type="string" pos:line="10" pos:column="61">"WARNING"<pos:position pos:line="10" pos:column="70"/></literal></expr>
				<pos:position pos:line="11" pos:column="5"/></then><else pos:line="11" pos:column="33">: <expr><operator pos:line="11" pos:column="35">(<pos:position pos:line="11" pos:column="36"/></operator><ternary><condition><expr><operator pos:line="11" pos:column="36">(<pos:position pos:line="11" pos:column="37"/></operator><name><name pos:line="11" pos:column="37">n<pos:position pos:line="11" pos:column="38"/></name><operator pos:line="11" pos:column="38">-&gt;<pos:position pos:line="11" pos:column="43"/></operator><name pos:line="11" pos:column="40">severity<pos:position pos:line="11" pos:column="48"/></name></name> <operator pos:line="11" pos:column="49">==<pos:position pos:line="11" pos:column="51"/></operator> <name pos:line="11" pos:column="52">NOTIF_OKAY<pos:position pos:line="11" pos:column="62"/></name><operator pos:line="11" pos:column="62">)<pos:position pos:line="11" pos:column="63"/></operator></expr> ?<pos:position pos:line="11" pos:column="65"/></condition><then pos:line="11" pos:column="65"> <expr><literal type="string" pos:line="11" pos:column="66">"OKAY"<pos:position pos:line="11" pos:column="72"/></literal></expr> <pos:position pos:line="11" pos:column="73"/></then><else pos:line="11" pos:column="73">: <expr><literal type="string" pos:line="11" pos:column="75">"UNKNOWN"<pos:position pos:line="11" pos:column="84"/></literal></expr></else></ternary><operator pos:line="11" pos:column="84">)<pos:position pos:line="11" pos:column="85"/></operator></expr></else></ternary><operator pos:line="11" pos:column="85">)<pos:position pos:line="11" pos:column="86"/></operator></expr></else></ternary></expr></argument>)<pos:position pos:line="11" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="88"/></expr_stmt>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">status<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">&gt;<pos:position pos:line="12" pos:column="24"/></operator> <literal type="number" pos:line="12" pos:column="22">0<pos:position pos:line="12" pos:column="23"/></literal></expr>)<pos:position pos:line="12" pos:column="24"/></condition><then pos:line="12" pos:column="24">
	<block pos:line="13" pos:column="9">{
		<expr_stmt><expr><name pos:line="14" pos:column="17">buf_ptr<pos:position pos:line="14" pos:column="24"/></name> <operator pos:line="14" pos:column="25">+=<pos:position pos:line="14" pos:column="27"/></operator> <name pos:line="14" pos:column="28">status<pos:position pos:line="14" pos:column="34"/></name></expr>;<pos:position pos:line="14" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name pos:line="15" pos:column="17">buf_len<pos:position pos:line="15" pos:column="24"/></name> <operator pos:line="15" pos:column="25">-=<pos:position pos:line="15" pos:column="27"/></operator> <name pos:line="15" pos:column="28">status<pos:position pos:line="15" pos:column="34"/></name></expr>;<pos:position pos:line="15" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>

<cpp:define pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">define<pos:position pos:line="18" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="18" pos:column="9">APPEND<pos:position pos:line="18" pos:column="15"/></name><parameter_list pos:line="18" pos:column="15">(<parameter><type><name pos:line="18" pos:column="16">bufptr<pos:position pos:line="18" pos:column="22"/></name></type></parameter>, <parameter><type><name pos:line="18" pos:column="24">buflen<pos:position pos:line="18" pos:column="30"/></name></type></parameter>, <parameter><type><name pos:line="18" pos:column="32">key<pos:position pos:line="18" pos:column="35"/></name></type></parameter>, <parameter><type><name pos:line="18" pos:column="37">value<pos:position pos:line="18" pos:column="42"/></name></type></parameter>)<pos:position pos:line="18" pos:column="43"/></parameter_list></cpp:macro> \
	<cpp:value pos:line="19" pos:column="9">if ((buflen &gt; 0) &amp;&amp; (strlen (value) &gt; 0)) { \
		int status = snprintf (bufptr, buflen, ", %s = %s", key, value); \
		if (status &gt; 0) { \
			bufptr += status; \
			buflen -= status; \
		} \
	}<pos:position pos:line="25" pos:column="10"/></cpp:value></cpp:define>
	<expr_stmt><expr><call><name pos:line="26" pos:column="9">APPEND<pos:position pos:line="26" pos:column="15"/></name> <argument_list pos:line="26" pos:column="16">(<argument><expr><name pos:line="26" pos:column="17">buf_ptr<pos:position pos:line="26" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="26">buf_len<pos:position pos:line="26" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="35">"host"<pos:position pos:line="26" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="43">n<pos:position pos:line="26" pos:column="44"/></name><operator pos:line="26" pos:column="44">-&gt;<pos:position pos:line="26" pos:column="49"/></operator><name pos:line="26" pos:column="46">host<pos:position pos:line="26" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="27" pos:column="9">APPEND<pos:position pos:line="27" pos:column="15"/></name> <argument_list pos:line="27" pos:column="16">(<argument><expr><name pos:line="27" pos:column="17">buf_ptr<pos:position pos:line="27" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="26">buf_len<pos:position pos:line="27" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="35">"plugin"<pos:position pos:line="27" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="45">n<pos:position pos:line="27" pos:column="46"/></name><operator pos:line="27" pos:column="46">-&gt;<pos:position pos:line="27" pos:column="51"/></operator><name pos:line="27" pos:column="48">plugin<pos:position pos:line="27" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="56"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="28" pos:column="9">APPEND<pos:position pos:line="28" pos:column="15"/></name> <argument_list pos:line="28" pos:column="16">(<argument><expr><name pos:line="28" pos:column="17">buf_ptr<pos:position pos:line="28" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="26">buf_len<pos:position pos:line="28" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="35">"plugin_instance"<pos:position pos:line="28" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="54">n<pos:position pos:line="28" pos:column="55"/></name><operator pos:line="28" pos:column="55">-&gt;<pos:position pos:line="28" pos:column="60"/></operator><name pos:line="28" pos:column="57">plugin_instance<pos:position pos:line="28" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="74"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">APPEND<pos:position pos:line="29" pos:column="15"/></name> <argument_list pos:line="29" pos:column="16">(<argument><expr><name pos:line="29" pos:column="17">buf_ptr<pos:position pos:line="29" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="26">buf_len<pos:position pos:line="29" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="35">"type"<pos:position pos:line="29" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="43">n<pos:position pos:line="29" pos:column="44"/></name><operator pos:line="29" pos:column="44">-&gt;<pos:position pos:line="29" pos:column="49"/></operator><name pos:line="29" pos:column="46">type<pos:position pos:line="29" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="30" pos:column="9">APPEND<pos:position pos:line="30" pos:column="15"/></name> <argument_list pos:line="30" pos:column="16">(<argument><expr><name pos:line="30" pos:column="17">buf_ptr<pos:position pos:line="30" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="26">buf_len<pos:position pos:line="30" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="35">"type_instance"<pos:position pos:line="30" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="52">n<pos:position pos:line="30" pos:column="53"/></name><operator pos:line="30" pos:column="53">-&gt;<pos:position pos:line="30" pos:column="58"/></operator><name pos:line="30" pos:column="55">type_instance<pos:position pos:line="30" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="70"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="31" pos:column="9">APPEND<pos:position pos:line="31" pos:column="15"/></name> <argument_list pos:line="31" pos:column="16">(<argument><expr><name pos:line="31" pos:column="17">buf_ptr<pos:position pos:line="31" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="26">buf_len<pos:position pos:line="31" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="35">"message"<pos:position pos:line="31" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="46">n<pos:position pos:line="31" pos:column="47"/></name><operator pos:line="31" pos:column="47">-&gt;<pos:position pos:line="31" pos:column="52"/></operator><name pos:line="31" pos:column="49">message<pos:position pos:line="31" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="58"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="33" pos:column="9">buf<pos:position pos:line="33" pos:column="12"/></name><index pos:line="33" pos:column="12">[<expr><sizeof pos:line="33" pos:column="13">sizeof <argument_list pos:line="33" pos:column="20">(<argument><expr><name pos:line="33" pos:column="21">buf<pos:position pos:line="33" pos:column="24"/></name></expr></argument>)<pos:position pos:line="33" pos:column="25"/></argument_list></sizeof> <operator pos:line="33" pos:column="26">-<pos:position pos:line="33" pos:column="27"/></operator> <literal type="number" pos:line="33" pos:column="28">1<pos:position pos:line="33" pos:column="29"/></literal></expr>]<pos:position pos:line="33" pos:column="30"/></index></name> <operator pos:line="33" pos:column="31">=<pos:position pos:line="33" pos:column="32"/></operator> <literal type="char" pos:line="33" pos:column="33">'\0'<pos:position pos:line="33" pos:column="37"/></literal></expr>;<pos:position pos:line="33" pos:column="38"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="35" pos:column="9">logfile_print<pos:position pos:line="35" pos:column="22"/></name> <argument_list pos:line="35" pos:column="23">(<argument><expr><name pos:line="35" pos:column="24">buf<pos:position pos:line="35" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="29">n<pos:position pos:line="35" pos:column="30"/></name><operator pos:line="35" pos:column="30">-&gt;<pos:position pos:line="35" pos:column="35"/></operator><name pos:line="35" pos:column="32">time<pos:position pos:line="35" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="38"/></expr_stmt>

	<return pos:line="37" pos:column="9">return <expr><operator pos:line="37" pos:column="16">(<pos:position pos:line="37" pos:column="17"/></operator><literal type="number" pos:line="37" pos:column="17">0<pos:position pos:line="37" pos:column="18"/></literal><operator pos:line="37" pos:column="18">)<pos:position pos:line="37" pos:column="19"/></operator></expr>;<pos:position pos:line="37" pos:column="20"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

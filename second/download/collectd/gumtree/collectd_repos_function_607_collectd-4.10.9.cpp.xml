<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_607_collectd-4.10.9.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">fc_register_target<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">name<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">target_proc_t<pos:position pos:line="1" pos:column="56"/></name></type> <name pos:line="1" pos:column="57">proc<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list> <comment type="block" pos:line="1" pos:column="63">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">fc_target_t<pos:position pos:line="3" pos:column="14"/></name> <modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">t<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="5" pos:column="3">DEBUG<pos:position pos:line="5" pos:column="8"/></name> <argument_list pos:line="5" pos:column="9">(<argument><expr><literal type="string" pos:line="5" pos:column="10">"fc_register_target (%s);"<pos:position pos:line="5" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="38">name<pos:position pos:line="5" pos:column="42"/></name></expr></argument>)<pos:position pos:line="5" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="44"/></expr_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">t<pos:position pos:line="7" pos:column="4"/></name> <operator pos:line="7" pos:column="5">=<pos:position pos:line="7" pos:column="6"/></operator> <operator pos:line="7" pos:column="7">(<pos:position pos:line="7" pos:column="8"/></operator><name pos:line="7" pos:column="8">fc_target_t<pos:position pos:line="7" pos:column="19"/></name> <operator pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></operator><operator pos:line="7" pos:column="21">)<pos:position pos:line="7" pos:column="22"/></operator> <call><name pos:line="7" pos:column="23">malloc<pos:position pos:line="7" pos:column="29"/></name> <argument_list pos:line="7" pos:column="30">(<argument><expr><sizeof pos:line="7" pos:column="31">sizeof <argument_list pos:line="7" pos:column="38">(<argument><expr><operator pos:line="7" pos:column="39">*<pos:position pos:line="7" pos:column="40"/></operator><name pos:line="7" pos:column="40">t<pos:position pos:line="7" pos:column="41"/></name></expr></argument>)<pos:position pos:line="7" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="44"/></expr_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">t<pos:position pos:line="8" pos:column="8"/></name> <operator pos:line="8" pos:column="9">==<pos:position pos:line="8" pos:column="11"/></operator> <name pos:line="8" pos:column="12">NULL<pos:position pos:line="8" pos:column="16"/></name></expr>)<pos:position pos:line="8" pos:column="17"/></condition><then pos:line="8" pos:column="17">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><operator pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></operator><operator pos:line="9" pos:column="13">-<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">ENOMEM<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">)<pos:position pos:line="9" pos:column="21"/></operator></expr>;<pos:position pos:line="9" pos:column="22"/></return></block></then></if>
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">memset<pos:position pos:line="10" pos:column="9"/></name> <argument_list pos:line="10" pos:column="10">(<argument><expr><name pos:line="10" pos:column="11">t<pos:position pos:line="10" pos:column="12"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="14">0<pos:position pos:line="10" pos:column="15"/></literal></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="17">sizeof <argument_list pos:line="10" pos:column="24">(<argument><expr><operator pos:line="10" pos:column="25">*<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="26">t<pos:position pos:line="10" pos:column="27"/></name></expr></argument>)<pos:position pos:line="10" pos:column="28"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="30"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="12" pos:column="3">sstrncpy<pos:position pos:line="12" pos:column="11"/></name> <argument_list pos:line="12" pos:column="12">(<argument><expr><name><name pos:line="12" pos:column="13">t<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">-&gt;<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="16">name<pos:position pos:line="12" pos:column="20"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="22">name<pos:position pos:line="12" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="28">sizeof <argument_list pos:line="12" pos:column="35">(<argument><expr><name><name pos:line="12" pos:column="36">t<pos:position pos:line="12" pos:column="37"/></name><operator pos:line="12" pos:column="37">-&gt;<pos:position pos:line="12" pos:column="42"/></operator><name pos:line="12" pos:column="39">name<pos:position pos:line="12" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">memcpy<pos:position pos:line="13" pos:column="9"/></name> <argument_list pos:line="13" pos:column="10">(<argument><expr><operator pos:line="13" pos:column="11">&amp;<pos:position pos:line="13" pos:column="16"/></operator><name><name pos:line="13" pos:column="12">t<pos:position pos:line="13" pos:column="13"/></name><operator pos:line="13" pos:column="13">-&gt;<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="15">proc<pos:position pos:line="13" pos:column="19"/></name></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="21">&amp;<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="22">proc<pos:position pos:line="13" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="28">sizeof <argument_list pos:line="13" pos:column="35">(<argument><expr><name><name pos:line="13" pos:column="36">t<pos:position pos:line="13" pos:column="37"/></name><operator pos:line="13" pos:column="37">-&gt;<pos:position pos:line="13" pos:column="42"/></operator><name pos:line="13" pos:column="39">proc<pos:position pos:line="13" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="14" pos:column="3">t<pos:position pos:line="14" pos:column="4"/></name><operator pos:line="14" pos:column="4">-&gt;<pos:position pos:line="14" pos:column="9"/></operator><name pos:line="14" pos:column="6">next<pos:position pos:line="14" pos:column="10"/></name></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <name pos:line="14" pos:column="13">NULL<pos:position pos:line="14" pos:column="17"/></name></expr>;<pos:position pos:line="14" pos:column="18"/></expr_stmt>

  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">target_list_head<pos:position pos:line="16" pos:column="23"/></name> <operator pos:line="16" pos:column="24">==<pos:position pos:line="16" pos:column="26"/></operator> <name pos:line="16" pos:column="27">NULL<pos:position pos:line="16" pos:column="31"/></name></expr>)<pos:position pos:line="16" pos:column="32"/></condition><then pos:line="16" pos:column="32">
  <block pos:line="17" pos:column="3">{
    <expr_stmt><expr><name pos:line="18" pos:column="5">target_list_head<pos:position pos:line="18" pos:column="21"/></name> <operator pos:line="18" pos:column="22">=<pos:position pos:line="18" pos:column="23"/></operator> <name pos:line="18" pos:column="24">t<pos:position pos:line="18" pos:column="25"/></name></expr>;<pos:position pos:line="18" pos:column="26"/></expr_stmt>
  }<pos:position pos:line="19" pos:column="4"/></block></then>
  <else pos:line="20" pos:column="3">else
  <block pos:line="21" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">fc_target_t<pos:position pos:line="22" pos:column="16"/></name> <modifier pos:line="22" pos:column="17">*<pos:position pos:line="22" pos:column="18"/></modifier></type><name pos:line="22" pos:column="18">ptr<pos:position pos:line="22" pos:column="21"/></name></decl>;<pos:position pos:line="22" pos:column="22"/></decl_stmt>

    <expr_stmt><expr><name pos:line="24" pos:column="5">ptr<pos:position pos:line="24" pos:column="8"/></name> <operator pos:line="24" pos:column="9">=<pos:position pos:line="24" pos:column="10"/></operator> <name pos:line="24" pos:column="11">target_list_head<pos:position pos:line="24" pos:column="27"/></name></expr>;<pos:position pos:line="24" pos:column="28"/></expr_stmt>
    <while pos:line="25" pos:column="5">while <condition pos:line="25" pos:column="11">(<expr><name><name pos:line="25" pos:column="12">ptr<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">-&gt;<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="17">next<pos:position pos:line="25" pos:column="21"/></name></name> <operator pos:line="25" pos:column="22">!=<pos:position pos:line="25" pos:column="24"/></operator> <name pos:line="25" pos:column="25">NULL<pos:position pos:line="25" pos:column="29"/></name></expr>)<pos:position pos:line="25" pos:column="30"/></condition>
      <block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="7">ptr<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">=<pos:position pos:line="26" pos:column="12"/></operator> <name><name pos:line="26" pos:column="13">ptr<pos:position pos:line="26" pos:column="16"/></name><operator pos:line="26" pos:column="16">-&gt;<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="18">next<pos:position pos:line="26" pos:column="22"/></name></name></expr>;<pos:position pos:line="26" pos:column="23"/></expr_stmt></block></while>

    <expr_stmt><expr><name><name pos:line="28" pos:column="5">ptr<pos:position pos:line="28" pos:column="8"/></name><operator pos:line="28" pos:column="8">-&gt;<pos:position pos:line="28" pos:column="13"/></operator><name pos:line="28" pos:column="10">next<pos:position pos:line="28" pos:column="14"/></name></name> <operator pos:line="28" pos:column="15">=<pos:position pos:line="28" pos:column="16"/></operator> <name pos:line="28" pos:column="17">t<pos:position pos:line="28" pos:column="18"/></name></expr>;<pos:position pos:line="28" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="29" pos:column="4"/></block></else></if>

  <return pos:line="31" pos:column="3">return <expr><operator pos:line="31" pos:column="10">(<pos:position pos:line="31" pos:column="11"/></operator><literal type="number" pos:line="31" pos:column="11">0<pos:position pos:line="31" pos:column="12"/></literal><operator pos:line="31" pos:column="12">)<pos:position pos:line="31" pos:column="13"/></operator></expr>;<pos:position pos:line="31" pos:column="14"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

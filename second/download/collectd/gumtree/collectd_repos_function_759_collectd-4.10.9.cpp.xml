<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_759_collectd-4.10.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">fc_call<pos:position pos:line="1" pos:column="19"/></name> <parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">pTHX_<pos:position pos:line="1" pos:column="26"/></name> <name pos:line="1" pos:column="27">int<pos:position pos:line="1" pos:column="30"/></name></type> <name pos:line="1" pos:column="31">type<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">int<pos:position pos:line="1" pos:column="40"/></name></type> <name pos:line="1" pos:column="41">cb_type<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">pfc_user_data_t<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">data<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>, <parameter><decl><type><modifier pos:line="1" pos:column="73">...<pos:position pos:line="1" pos:column="76"/></modifier></type></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">retvals<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><literal type="number" pos:line="3" pos:column="23">0<pos:position pos:line="3" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="5" pos:column="9">va_list<pos:position pos:line="5" pos:column="16"/></name></type> <name pos:line="5" pos:column="17">ap<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">ret<pos:position pos:line="6" pos:column="16"/></name> <init pos:line="6" pos:column="17">= <expr><literal type="number" pos:line="6" pos:column="19">0<pos:position pos:line="6" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="8" pos:column="9">notification_meta_t<pos:position pos:line="8" pos:column="28"/></name> <modifier pos:line="8" pos:column="29">*<pos:position pos:line="8" pos:column="30"/></modifier><modifier pos:line="8" pos:column="30">*<pos:position pos:line="8" pos:column="31"/></modifier></type><name pos:line="8" pos:column="31">meta<pos:position pos:line="8" pos:column="35"/></name>  <init pos:line="8" pos:column="37">= <expr><name pos:line="8" pos:column="39">NULL<pos:position pos:line="8" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">AV<pos:position pos:line="9" pos:column="11"/></name>                   <modifier pos:line="9" pos:column="30">*<pos:position pos:line="9" pos:column="31"/></modifier></type><name pos:line="9" pos:column="31">pmeta<pos:position pos:line="9" pos:column="36"/></name> <init pos:line="9" pos:column="37">= <expr><name pos:line="9" pos:column="39">NULL<pos:position pos:line="9" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="44"/></decl_stmt>

	<expr_stmt><expr><name pos:line="11" pos:column="9">dSP<pos:position pos:line="11" pos:column="12"/></name></expr>;<pos:position pos:line="11" pos:column="13"/></expr_stmt>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">(<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">type<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">&lt;<pos:position pos:line="13" pos:column="23"/></operator> <literal type="number" pos:line="13" pos:column="21">0<pos:position pos:line="13" pos:column="22"/></literal><operator pos:line="13" pos:column="22">)<pos:position pos:line="13" pos:column="23"/></operator> <operator pos:line="13" pos:column="24">||<pos:position pos:line="13" pos:column="26"/></operator> <operator pos:line="13" pos:column="27">(<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="28">type<pos:position pos:line="13" pos:column="32"/></name> <operator pos:line="13" pos:column="33">&gt;=<pos:position pos:line="13" pos:column="38"/></operator> <name pos:line="13" pos:column="36">FC_TYPES<pos:position pos:line="13" pos:column="44"/></name><operator pos:line="13" pos:column="44">)<pos:position pos:line="13" pos:column="45"/></operator></expr>)<pos:position pos:line="13" pos:column="46"/></condition><then pos:line="13" pos:column="46">
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><operator pos:line="14" pos:column="24">-<pos:position pos:line="14" pos:column="25"/></operator><literal type="number" pos:line="14" pos:column="25">1<pos:position pos:line="14" pos:column="26"/></literal></expr>;<pos:position pos:line="14" pos:column="27"/></return></block></then></if>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">(<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">cb_type<pos:position pos:line="16" pos:column="21"/></name> <operator pos:line="16" pos:column="22">&lt;<pos:position pos:line="16" pos:column="26"/></operator> <literal type="number" pos:line="16" pos:column="24">0<pos:position pos:line="16" pos:column="25"/></literal><operator pos:line="16" pos:column="25">)<pos:position pos:line="16" pos:column="26"/></operator> <operator pos:line="16" pos:column="27">||<pos:position pos:line="16" pos:column="29"/></operator> <operator pos:line="16" pos:column="30">(<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="31">cb_type<pos:position pos:line="16" pos:column="38"/></name> <operator pos:line="16" pos:column="39">&gt;=<pos:position pos:line="16" pos:column="44"/></operator> <name pos:line="16" pos:column="42">FC_CB_TYPES<pos:position pos:line="16" pos:column="53"/></name><operator pos:line="16" pos:column="53">)<pos:position pos:line="16" pos:column="54"/></operator></expr>)<pos:position pos:line="16" pos:column="55"/></condition><then pos:line="16" pos:column="55">
		<block type="pseudo"><return pos:line="17" pos:column="17">return <expr><operator pos:line="17" pos:column="24">-<pos:position pos:line="17" pos:column="25"/></operator><literal type="number" pos:line="17" pos:column="25">1<pos:position pos:line="17" pos:column="26"/></literal></expr>;<pos:position pos:line="17" pos:column="27"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="19" pos:column="9">va_start<pos:position pos:line="19" pos:column="17"/></name> <argument_list pos:line="19" pos:column="18">(<argument><expr><name pos:line="19" pos:column="19">ap<pos:position pos:line="19" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="23">data<pos:position pos:line="19" pos:column="27"/></name></expr></argument>)<pos:position pos:line="19" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="29"/></expr_stmt>

	<expr_stmt><expr><name pos:line="21" pos:column="9">ENTER<pos:position pos:line="21" pos:column="14"/></name></expr>;<pos:position pos:line="21" pos:column="15"/></expr_stmt>
	<expr_stmt><expr><name pos:line="22" pos:column="9">SAVETMPS<pos:position pos:line="22" pos:column="17"/></name></expr>;<pos:position pos:line="22" pos:column="18"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="24" pos:column="9">PUSHMARK<pos:position pos:line="24" pos:column="17"/></name> <argument_list pos:line="24" pos:column="18">(<argument><expr><name pos:line="24" pos:column="19">SP<pos:position pos:line="24" pos:column="21"/></name></expr></argument>)<pos:position pos:line="24" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="23"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="26" pos:column="9">XPUSHs<pos:position pos:line="26" pos:column="15"/></name> <argument_list pos:line="26" pos:column="16">(<argument><expr><call><name pos:line="26" pos:column="17">sv_2mortal<pos:position pos:line="26" pos:column="27"/></name> <argument_list pos:line="26" pos:column="28">(<argument><expr><call><name pos:line="26" pos:column="29">newSViv<pos:position pos:line="26" pos:column="36"/></name> <argument_list pos:line="26" pos:column="37">(<argument><expr><operator pos:line="26" pos:column="38">(<pos:position pos:line="26" pos:column="39"/></operator><name pos:line="26" pos:column="39">IV<pos:position pos:line="26" pos:column="41"/></name><operator pos:line="26" pos:column="41">)<pos:position pos:line="26" pos:column="42"/></operator><name pos:line="26" pos:column="42">type<pos:position pos:line="26" pos:column="46"/></name></expr></argument>)<pos:position pos:line="26" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="50"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="27" pos:column="9">XPUSHs<pos:position pos:line="27" pos:column="15"/></name> <argument_list pos:line="27" pos:column="16">(<argument><expr><call><name pos:line="27" pos:column="17">sv_2mortal<pos:position pos:line="27" pos:column="27"/></name> <argument_list pos:line="27" pos:column="28">(<argument><expr><call><name pos:line="27" pos:column="29">newSVpv<pos:position pos:line="27" pos:column="36"/></name> <argument_list pos:line="27" pos:column="37">(<argument><expr><name><name pos:line="27" pos:column="38">data<pos:position pos:line="27" pos:column="42"/></name><operator pos:line="27" pos:column="42">-&gt;<pos:position pos:line="27" pos:column="47"/></operator><name pos:line="27" pos:column="44">name<pos:position pos:line="27" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="50">0<pos:position pos:line="27" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="28" pos:column="9">XPUSHs<pos:position pos:line="28" pos:column="15"/></name> <argument_list pos:line="28" pos:column="16">(<argument><expr><call><name pos:line="28" pos:column="17">sv_2mortal<pos:position pos:line="28" pos:column="27"/></name> <argument_list pos:line="28" pos:column="28">(<argument><expr><call><name pos:line="28" pos:column="29">newSViv<pos:position pos:line="28" pos:column="36"/></name> <argument_list pos:line="28" pos:column="37">(<argument><expr><operator pos:line="28" pos:column="38">(<pos:position pos:line="28" pos:column="39"/></operator><name pos:line="28" pos:column="39">IV<pos:position pos:line="28" pos:column="41"/></name><operator pos:line="28" pos:column="41">)<pos:position pos:line="28" pos:column="42"/></operator><name pos:line="28" pos:column="42">cb_type<pos:position pos:line="28" pos:column="49"/></name></expr></argument>)<pos:position pos:line="28" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="53"/></expr_stmt>

	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">FC_CB_CREATE<pos:position pos:line="30" pos:column="25"/></name> <operator pos:line="30" pos:column="26">==<pos:position pos:line="30" pos:column="28"/></operator> <name pos:line="30" pos:column="29">cb_type<pos:position pos:line="30" pos:column="36"/></name></expr>)<pos:position pos:line="30" pos:column="37"/></condition><then pos:line="30" pos:column="37"> <block pos:line="30" pos:column="38">{
		<comment type="block" pos:line="31" pos:column="17">/*
		 * $_[0] = $ci;
		 * $_[1] = $user_data;
		 */</comment>
		<decl_stmt><decl><type><name pos:line="35" pos:column="17">oconfig_item_t<pos:position pos:line="35" pos:column="31"/></name> <modifier pos:line="35" pos:column="32">*<pos:position pos:line="35" pos:column="33"/></modifier></type><name pos:line="35" pos:column="33">ci<pos:position pos:line="35" pos:column="35"/></name></decl>;<pos:position pos:line="35" pos:column="36"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="36" pos:column="17">HV<pos:position pos:line="36" pos:column="19"/></name> <modifier pos:line="36" pos:column="20">*<pos:position pos:line="36" pos:column="21"/></modifier></type><name pos:line="36" pos:column="21">config<pos:position pos:line="36" pos:column="27"/></name> <init pos:line="36" pos:column="28">= <expr><call><name pos:line="36" pos:column="30">newHV<pos:position pos:line="36" pos:column="35"/></name> <argument_list pos:line="36" pos:column="36">()<pos:position pos:line="36" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="36" pos:column="39"/></decl_stmt>

		<expr_stmt><expr><name pos:line="38" pos:column="17">ci<pos:position pos:line="38" pos:column="19"/></name> <operator pos:line="38" pos:column="20">=<pos:position pos:line="38" pos:column="21"/></operator> <call><name pos:line="38" pos:column="22">va_arg<pos:position pos:line="38" pos:column="28"/></name> <argument_list pos:line="38" pos:column="29">(<argument><expr><name pos:line="38" pos:column="30">ap<pos:position pos:line="38" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="34">oconfig_item_t<pos:position pos:line="38" pos:column="48"/></name> <operator pos:line="38" pos:column="49">*<pos:position pos:line="38" pos:column="50"/></operator></expr></argument>)<pos:position pos:line="38" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="52"/></expr_stmt>

		<if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><literal type="number" pos:line="40" pos:column="21">0<pos:position pos:line="40" pos:column="22"/></literal> <operator pos:line="40" pos:column="23">!=<pos:position pos:line="40" pos:column="25"/></operator> <macro><name pos:line="40" pos:column="26">oconfig_item2hv<pos:position pos:line="40" pos:column="41"/></name> <argument_list pos:line="40" pos:column="42">(<argument pos:line="40" pos:column="43">aTHX_ ci<pos:position pos:line="40" pos:column="51"/></argument>, <argument pos:line="40" pos:column="53">config<pos:position pos:line="40" pos:column="59"/></argument>)<pos:position pos:line="40" pos:column="60"/></argument_list></macro></expr>)<pos:position pos:line="40" pos:column="61"/></condition><then pos:line="40" pos:column="61"> <block pos:line="40" pos:column="62">{
			<expr_stmt><expr><call><name pos:line="41" pos:column="25">hv_clear<pos:position pos:line="41" pos:column="33"/></name> <argument_list pos:line="41" pos:column="34">(<argument><expr><name pos:line="41" pos:column="35">config<pos:position pos:line="41" pos:column="41"/></name></expr></argument>)<pos:position pos:line="41" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="42" pos:column="25">hv_undef<pos:position pos:line="42" pos:column="33"/></name> <argument_list pos:line="42" pos:column="34">(<argument><expr><name pos:line="42" pos:column="35">config<pos:position pos:line="42" pos:column="41"/></name></expr></argument>)<pos:position pos:line="42" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name pos:line="43" pos:column="25">config<pos:position pos:line="43" pos:column="31"/></name> <operator pos:line="43" pos:column="32">=<pos:position pos:line="43" pos:column="33"/></operator> <operator pos:line="43" pos:column="34">(<pos:position pos:line="43" pos:column="35"/></operator><name pos:line="43" pos:column="35">HV<pos:position pos:line="43" pos:column="37"/></name> <operator pos:line="43" pos:column="38">*<pos:position pos:line="43" pos:column="39"/></operator><operator pos:line="43" pos:column="39">)<pos:position pos:line="43" pos:column="40"/></operator><operator pos:line="43" pos:column="40">&amp;<pos:position pos:line="43" pos:column="45"/></operator><name pos:line="43" pos:column="41">PL_sv_undef<pos:position pos:line="43" pos:column="52"/></name></expr>;<pos:position pos:line="43" pos:column="53"/></expr_stmt>
			<expr_stmt><expr><name pos:line="44" pos:column="25">ret<pos:position pos:line="44" pos:column="28"/></name> <operator pos:line="44" pos:column="29">=<pos:position pos:line="44" pos:column="30"/></operator> <operator pos:line="44" pos:column="31">-<pos:position pos:line="44" pos:column="32"/></operator><literal type="number" pos:line="44" pos:column="32">1<pos:position pos:line="44" pos:column="33"/></literal></expr>;<pos:position pos:line="44" pos:column="34"/></expr_stmt>
		}<pos:position pos:line="45" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="47" pos:column="17">XPUSHs<pos:position pos:line="47" pos:column="23"/></name> <argument_list pos:line="47" pos:column="24">(<argument><expr><call><name pos:line="47" pos:column="25">sv_2mortal<pos:position pos:line="47" pos:column="35"/></name> <argument_list pos:line="47" pos:column="36">(<argument><expr><call><name pos:line="47" pos:column="37">newRV_noinc<pos:position pos:line="47" pos:column="48"/></name> <argument_list pos:line="47" pos:column="49">(<argument><expr><operator pos:line="47" pos:column="50">(<pos:position pos:line="47" pos:column="51"/></operator><name pos:line="47" pos:column="51">SV<pos:position pos:line="47" pos:column="53"/></name> <operator pos:line="47" pos:column="54">*<pos:position pos:line="47" pos:column="55"/></operator><operator pos:line="47" pos:column="55">)<pos:position pos:line="47" pos:column="56"/></operator><name pos:line="47" pos:column="56">config<pos:position pos:line="47" pos:column="62"/></name></expr></argument>)<pos:position pos:line="47" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="66"/></expr_stmt>
	}<pos:position pos:line="48" pos:column="10"/></block></then>
	<elseif pos:line="49" pos:column="9">else <if pos:line="49" pos:column="14">if <condition pos:line="49" pos:column="17">(<expr><name pos:line="49" pos:column="18">FC_CB_DESTROY<pos:position pos:line="49" pos:column="31"/></name> <operator pos:line="49" pos:column="32">==<pos:position pos:line="49" pos:column="34"/></operator> <name pos:line="49" pos:column="35">cb_type<pos:position pos:line="49" pos:column="42"/></name></expr>)<pos:position pos:line="49" pos:column="43"/></condition><then pos:line="49" pos:column="43"> <block pos:line="49" pos:column="44">{
		<comment type="block" pos:line="50" pos:column="17">/*
		 * $_[1] = $user_data;
		 */</comment>

		<comment type="block" pos:line="54" pos:column="17">/* nothing to be done - the user data pointer
		 * is pushed onto the stack later */</comment>
	}<pos:position pos:line="56" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="57" pos:column="9">else <if pos:line="57" pos:column="14">if <condition pos:line="57" pos:column="17">(<expr><name pos:line="57" pos:column="18">FC_CB_EXEC<pos:position pos:line="57" pos:column="28"/></name> <operator pos:line="57" pos:column="29">==<pos:position pos:line="57" pos:column="31"/></operator> <name pos:line="57" pos:column="32">cb_type<pos:position pos:line="57" pos:column="39"/></name></expr>)<pos:position pos:line="57" pos:column="40"/></condition><then pos:line="57" pos:column="40"> <block pos:line="57" pos:column="41">{
		<comment type="block" pos:line="58" pos:column="17">/*
		 * $_[0] = $ds;
		 * $_[1] = $vl;
		 * $_[2] = $meta;
		 * $_[3] = $user_data;
		 */</comment>
		<decl_stmt><decl><type><name pos:line="64" pos:column="17">data_set_t<pos:position pos:line="64" pos:column="27"/></name>   <modifier pos:line="64" pos:column="30">*<pos:position pos:line="64" pos:column="31"/></modifier></type><name pos:line="64" pos:column="31">ds<pos:position pos:line="64" pos:column="33"/></name></decl>;<pos:position pos:line="64" pos:column="34"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="65" pos:column="17">value_list_t<pos:position pos:line="65" pos:column="29"/></name> <modifier pos:line="65" pos:column="30">*<pos:position pos:line="65" pos:column="31"/></modifier></type><name pos:line="65" pos:column="31">vl<pos:position pos:line="65" pos:column="33"/></name></decl>;<pos:position pos:line="65" pos:column="34"/></decl_stmt>

		<decl_stmt><decl><type><name pos:line="67" pos:column="17">AV<pos:position pos:line="67" pos:column="19"/></name> <modifier pos:line="67" pos:column="20">*<pos:position pos:line="67" pos:column="21"/></modifier></type><name pos:line="67" pos:column="21">pds<pos:position pos:line="67" pos:column="24"/></name> <init pos:line="67" pos:column="25">= <expr><call><name pos:line="67" pos:column="27">newAV<pos:position pos:line="67" pos:column="32"/></name> <argument_list pos:line="67" pos:column="33">()<pos:position pos:line="67" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="67" pos:column="36"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="68" pos:column="17">HV<pos:position pos:line="68" pos:column="19"/></name> <modifier pos:line="68" pos:column="20">*<pos:position pos:line="68" pos:column="21"/></modifier></type><name pos:line="68" pos:column="21">pvl<pos:position pos:line="68" pos:column="24"/></name> <init pos:line="68" pos:column="25">= <expr><call><name pos:line="68" pos:column="27">newHV<pos:position pos:line="68" pos:column="32"/></name> <argument_list pos:line="68" pos:column="33">()<pos:position pos:line="68" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="68" pos:column="36"/></decl_stmt>

		<expr_stmt><expr><name pos:line="70" pos:column="17">ds<pos:position pos:line="70" pos:column="19"/></name>   <operator pos:line="70" pos:column="22">=<pos:position pos:line="70" pos:column="23"/></operator> <call><name pos:line="70" pos:column="24">va_arg<pos:position pos:line="70" pos:column="30"/></name> <argument_list pos:line="70" pos:column="31">(<argument><expr><name pos:line="70" pos:column="32">ap<pos:position pos:line="70" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="36">data_set_t<pos:position pos:line="70" pos:column="46"/></name> <operator pos:line="70" pos:column="47">*<pos:position pos:line="70" pos:column="48"/></operator></expr></argument>)<pos:position pos:line="70" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="50"/></expr_stmt>
		<expr_stmt><expr><name pos:line="71" pos:column="17">vl<pos:position pos:line="71" pos:column="19"/></name>   <operator pos:line="71" pos:column="22">=<pos:position pos:line="71" pos:column="23"/></operator> <call><name pos:line="71" pos:column="24">va_arg<pos:position pos:line="71" pos:column="30"/></name> <argument_list pos:line="71" pos:column="31">(<argument><expr><name pos:line="71" pos:column="32">ap<pos:position pos:line="71" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="36">value_list_t<pos:position pos:line="71" pos:column="48"/></name> <operator pos:line="71" pos:column="49">*<pos:position pos:line="71" pos:column="50"/></operator></expr></argument>)<pos:position pos:line="71" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><name pos:line="72" pos:column="17">meta<pos:position pos:line="72" pos:column="21"/></name> <operator pos:line="72" pos:column="22">=<pos:position pos:line="72" pos:column="23"/></operator> <call><name pos:line="72" pos:column="24">va_arg<pos:position pos:line="72" pos:column="30"/></name> <argument_list pos:line="72" pos:column="31">(<argument><expr><name pos:line="72" pos:column="32">ap<pos:position pos:line="72" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="36">notification_meta_t<pos:position pos:line="72" pos:column="55"/></name> <operator pos:line="72" pos:column="56">*<pos:position pos:line="72" pos:column="57"/></operator><operator pos:line="72" pos:column="57">*<pos:position pos:line="72" pos:column="58"/></operator></expr></argument>)<pos:position pos:line="72" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="60"/></expr_stmt>

		<if pos:line="74" pos:column="17">if <condition pos:line="74" pos:column="20">(<expr><literal type="number" pos:line="74" pos:column="21">0<pos:position pos:line="74" pos:column="22"/></literal> <operator pos:line="74" pos:column="23">!=<pos:position pos:line="74" pos:column="25"/></operator> <macro><name pos:line="74" pos:column="26">data_set2av<pos:position pos:line="74" pos:column="37"/></name> <argument_list pos:line="74" pos:column="38">(<argument pos:line="74" pos:column="39">aTHX_ ds<pos:position pos:line="74" pos:column="47"/></argument>, <argument pos:line="74" pos:column="49">pds<pos:position pos:line="74" pos:column="52"/></argument>)<pos:position pos:line="74" pos:column="53"/></argument_list></macro></expr>)<pos:position pos:line="74" pos:column="54"/></condition><then pos:line="74" pos:column="54"> <block pos:line="74" pos:column="55">{
			<expr_stmt><expr><call><name pos:line="75" pos:column="25">av_clear<pos:position pos:line="75" pos:column="33"/></name> <argument_list pos:line="75" pos:column="34">(<argument><expr><name pos:line="75" pos:column="35">pds<pos:position pos:line="75" pos:column="38"/></name></expr></argument>)<pos:position pos:line="75" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="76" pos:column="25">av_undef<pos:position pos:line="76" pos:column="33"/></name> <argument_list pos:line="76" pos:column="34">(<argument><expr><name pos:line="76" pos:column="35">pds<pos:position pos:line="76" pos:column="38"/></name></expr></argument>)<pos:position pos:line="76" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><name pos:line="77" pos:column="25">pds<pos:position pos:line="77" pos:column="28"/></name> <operator pos:line="77" pos:column="29">=<pos:position pos:line="77" pos:column="30"/></operator> <operator pos:line="77" pos:column="31">(<pos:position pos:line="77" pos:column="32"/></operator><name pos:line="77" pos:column="32">AV<pos:position pos:line="77" pos:column="34"/></name> <operator pos:line="77" pos:column="35">*<pos:position pos:line="77" pos:column="36"/></operator><operator pos:line="77" pos:column="36">)<pos:position pos:line="77" pos:column="37"/></operator><operator pos:line="77" pos:column="37">&amp;<pos:position pos:line="77" pos:column="42"/></operator><name pos:line="77" pos:column="38">PL_sv_undef<pos:position pos:line="77" pos:column="49"/></name></expr>;<pos:position pos:line="77" pos:column="50"/></expr_stmt>
			<expr_stmt><expr><name pos:line="78" pos:column="25">ret<pos:position pos:line="78" pos:column="28"/></name> <operator pos:line="78" pos:column="29">=<pos:position pos:line="78" pos:column="30"/></operator> <operator pos:line="78" pos:column="31">-<pos:position pos:line="78" pos:column="32"/></operator><literal type="number" pos:line="78" pos:column="32">1<pos:position pos:line="78" pos:column="33"/></literal></expr>;<pos:position pos:line="78" pos:column="34"/></expr_stmt>
		}<pos:position pos:line="79" pos:column="18"/></block></then></if>

		<if pos:line="81" pos:column="17">if <condition pos:line="81" pos:column="20">(<expr><literal type="number" pos:line="81" pos:column="21">0<pos:position pos:line="81" pos:column="22"/></literal> <operator pos:line="81" pos:column="23">!=<pos:position pos:line="81" pos:column="25"/></operator> <macro><name pos:line="81" pos:column="26">value_list2hv<pos:position pos:line="81" pos:column="39"/></name> <argument_list pos:line="81" pos:column="40">(<argument pos:line="81" pos:column="41">aTHX_ vl<pos:position pos:line="81" pos:column="49"/></argument>, <argument pos:line="81" pos:column="51">ds<pos:position pos:line="81" pos:column="53"/></argument>, <argument pos:line="81" pos:column="55">pvl<pos:position pos:line="81" pos:column="58"/></argument>)<pos:position pos:line="81" pos:column="59"/></argument_list></macro></expr>)<pos:position pos:line="81" pos:column="60"/></condition><then pos:line="81" pos:column="60"> <block pos:line="81" pos:column="61">{
			<expr_stmt><expr><call><name pos:line="82" pos:column="25">hv_clear<pos:position pos:line="82" pos:column="33"/></name> <argument_list pos:line="82" pos:column="34">(<argument><expr><name pos:line="82" pos:column="35">pvl<pos:position pos:line="82" pos:column="38"/></name></expr></argument>)<pos:position pos:line="82" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="83" pos:column="25">hv_undef<pos:position pos:line="83" pos:column="33"/></name> <argument_list pos:line="83" pos:column="34">(<argument><expr><name pos:line="83" pos:column="35">pvl<pos:position pos:line="83" pos:column="38"/></name></expr></argument>)<pos:position pos:line="83" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><name pos:line="84" pos:column="25">pvl<pos:position pos:line="84" pos:column="28"/></name> <operator pos:line="84" pos:column="29">=<pos:position pos:line="84" pos:column="30"/></operator> <operator pos:line="84" pos:column="31">(<pos:position pos:line="84" pos:column="32"/></operator><name pos:line="84" pos:column="32">HV<pos:position pos:line="84" pos:column="34"/></name> <operator pos:line="84" pos:column="35">*<pos:position pos:line="84" pos:column="36"/></operator><operator pos:line="84" pos:column="36">)<pos:position pos:line="84" pos:column="37"/></operator><operator pos:line="84" pos:column="37">&amp;<pos:position pos:line="84" pos:column="42"/></operator><name pos:line="84" pos:column="38">PL_sv_undef<pos:position pos:line="84" pos:column="49"/></name></expr>;<pos:position pos:line="84" pos:column="50"/></expr_stmt>
			<expr_stmt><expr><name pos:line="85" pos:column="25">ret<pos:position pos:line="85" pos:column="28"/></name> <operator pos:line="85" pos:column="29">=<pos:position pos:line="85" pos:column="30"/></operator> <operator pos:line="85" pos:column="31">-<pos:position pos:line="85" pos:column="32"/></operator><literal type="number" pos:line="85" pos:column="32">1<pos:position pos:line="85" pos:column="33"/></literal></expr>;<pos:position pos:line="85" pos:column="34"/></expr_stmt>
		}<pos:position pos:line="86" pos:column="18"/></block></then></if>

		<if pos:line="88" pos:column="17">if <condition pos:line="88" pos:column="20">(<expr><name pos:line="88" pos:column="21">NULL<pos:position pos:line="88" pos:column="25"/></name> <operator pos:line="88" pos:column="26">!=<pos:position pos:line="88" pos:column="28"/></operator> <name pos:line="88" pos:column="29">meta<pos:position pos:line="88" pos:column="33"/></name></expr>)<pos:position pos:line="88" pos:column="34"/></condition><then pos:line="88" pos:column="34"> <block pos:line="88" pos:column="35">{
			<expr_stmt><expr><name pos:line="89" pos:column="25">pmeta<pos:position pos:line="89" pos:column="30"/></name> <operator pos:line="89" pos:column="31">=<pos:position pos:line="89" pos:column="32"/></operator> <call><name pos:line="89" pos:column="33">newAV<pos:position pos:line="89" pos:column="38"/></name> <argument_list pos:line="89" pos:column="39">()<pos:position pos:line="89" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="42"/></expr_stmt>

			<if pos:line="91" pos:column="25">if <condition pos:line="91" pos:column="28">(<expr><literal type="number" pos:line="91" pos:column="29">0<pos:position pos:line="91" pos:column="30"/></literal> <operator pos:line="91" pos:column="31">!=<pos:position pos:line="91" pos:column="33"/></operator> <call><name pos:line="91" pos:column="34">notification_meta2av<pos:position pos:line="91" pos:column="54"/></name> <argument_list pos:line="91" pos:column="55">(<argument><expr><name pos:line="91" pos:column="56">aTHX_<pos:position pos:line="91" pos:column="61"/></name> <operator pos:line="91" pos:column="62">*<pos:position pos:line="91" pos:column="63"/></operator><name pos:line="91" pos:column="63">meta<pos:position pos:line="91" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="69">pmeta<pos:position pos:line="91" pos:column="74"/></name></expr></argument>)<pos:position pos:line="91" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="91" pos:column="76"/></condition><then pos:line="91" pos:column="76"> <block pos:line="91" pos:column="77">{
				<expr_stmt><expr><call><name pos:line="92" pos:column="33">av_clear<pos:position pos:line="92" pos:column="41"/></name> <argument_list pos:line="92" pos:column="42">(<argument><expr><name pos:line="92" pos:column="43">pmeta<pos:position pos:line="92" pos:column="48"/></name></expr></argument>)<pos:position pos:line="92" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="50"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="93" pos:column="33">av_undef<pos:position pos:line="93" pos:column="41"/></name> <argument_list pos:line="93" pos:column="42">(<argument><expr><name pos:line="93" pos:column="43">pmeta<pos:position pos:line="93" pos:column="48"/></name></expr></argument>)<pos:position pos:line="93" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="50"/></expr_stmt>
				<expr_stmt><expr><name pos:line="94" pos:column="33">pmeta<pos:position pos:line="94" pos:column="38"/></name> <operator pos:line="94" pos:column="39">=<pos:position pos:line="94" pos:column="40"/></operator> <operator pos:line="94" pos:column="41">(<pos:position pos:line="94" pos:column="42"/></operator><name pos:line="94" pos:column="42">AV<pos:position pos:line="94" pos:column="44"/></name> <operator pos:line="94" pos:column="45">*<pos:position pos:line="94" pos:column="46"/></operator><operator pos:line="94" pos:column="46">)<pos:position pos:line="94" pos:column="47"/></operator><operator pos:line="94" pos:column="47">&amp;<pos:position pos:line="94" pos:column="52"/></operator><name pos:line="94" pos:column="48">PL_sv_undef<pos:position pos:line="94" pos:column="59"/></name></expr>;<pos:position pos:line="94" pos:column="60"/></expr_stmt>
				<expr_stmt><expr><name pos:line="95" pos:column="33">ret<pos:position pos:line="95" pos:column="36"/></name> <operator pos:line="95" pos:column="37">=<pos:position pos:line="95" pos:column="38"/></operator> <operator pos:line="95" pos:column="39">-<pos:position pos:line="95" pos:column="40"/></operator><literal type="number" pos:line="95" pos:column="40">1<pos:position pos:line="95" pos:column="41"/></literal></expr>;<pos:position pos:line="95" pos:column="42"/></expr_stmt>
			}<pos:position pos:line="96" pos:column="26"/></block></then></if>
		}<pos:position pos:line="97" pos:column="18"/></block></then>
		<else pos:line="98" pos:column="17">else <block pos:line="98" pos:column="22">{
			<expr_stmt><expr><name pos:line="99" pos:column="25">pmeta<pos:position pos:line="99" pos:column="30"/></name> <operator pos:line="99" pos:column="31">=<pos:position pos:line="99" pos:column="32"/></operator> <operator pos:line="99" pos:column="33">(<pos:position pos:line="99" pos:column="34"/></operator><name pos:line="99" pos:column="34">AV<pos:position pos:line="99" pos:column="36"/></name> <operator pos:line="99" pos:column="37">*<pos:position pos:line="99" pos:column="38"/></operator><operator pos:line="99" pos:column="38">)<pos:position pos:line="99" pos:column="39"/></operator><operator pos:line="99" pos:column="39">&amp;<pos:position pos:line="99" pos:column="44"/></operator><name pos:line="99" pos:column="40">PL_sv_undef<pos:position pos:line="99" pos:column="51"/></name></expr>;<pos:position pos:line="99" pos:column="52"/></expr_stmt>
		}<pos:position pos:line="100" pos:column="18"/></block></else></if>

		<expr_stmt><expr><call><name pos:line="102" pos:column="17">XPUSHs<pos:position pos:line="102" pos:column="23"/></name> <argument_list pos:line="102" pos:column="24">(<argument><expr><call><name pos:line="102" pos:column="25">sv_2mortal<pos:position pos:line="102" pos:column="35"/></name> <argument_list pos:line="102" pos:column="36">(<argument><expr><call><name pos:line="102" pos:column="37">newRV_noinc<pos:position pos:line="102" pos:column="48"/></name> <argument_list pos:line="102" pos:column="49">(<argument><expr><operator pos:line="102" pos:column="50">(<pos:position pos:line="102" pos:column="51"/></operator><name pos:line="102" pos:column="51">SV<pos:position pos:line="102" pos:column="53"/></name> <operator pos:line="102" pos:column="54">*<pos:position pos:line="102" pos:column="55"/></operator><operator pos:line="102" pos:column="55">)<pos:position pos:line="102" pos:column="56"/></operator><name pos:line="102" pos:column="56">pds<pos:position pos:line="102" pos:column="59"/></name></expr></argument>)<pos:position pos:line="102" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="102" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="102" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="63"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="103" pos:column="17">XPUSHs<pos:position pos:line="103" pos:column="23"/></name> <argument_list pos:line="103" pos:column="24">(<argument><expr><call><name pos:line="103" pos:column="25">sv_2mortal<pos:position pos:line="103" pos:column="35"/></name> <argument_list pos:line="103" pos:column="36">(<argument><expr><call><name pos:line="103" pos:column="37">newRV_noinc<pos:position pos:line="103" pos:column="48"/></name> <argument_list pos:line="103" pos:column="49">(<argument><expr><operator pos:line="103" pos:column="50">(<pos:position pos:line="103" pos:column="51"/></operator><name pos:line="103" pos:column="51">SV<pos:position pos:line="103" pos:column="53"/></name> <operator pos:line="103" pos:column="54">*<pos:position pos:line="103" pos:column="55"/></operator><operator pos:line="103" pos:column="55">)<pos:position pos:line="103" pos:column="56"/></operator><name pos:line="103" pos:column="56">pvl<pos:position pos:line="103" pos:column="59"/></name></expr></argument>)<pos:position pos:line="103" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="103" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="103" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="63"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="104" pos:column="17">XPUSHs<pos:position pos:line="104" pos:column="23"/></name> <argument_list pos:line="104" pos:column="24">(<argument><expr><call><name pos:line="104" pos:column="25">sv_2mortal<pos:position pos:line="104" pos:column="35"/></name> <argument_list pos:line="104" pos:column="36">(<argument><expr><call><name pos:line="104" pos:column="37">newRV_noinc<pos:position pos:line="104" pos:column="48"/></name> <argument_list pos:line="104" pos:column="49">(<argument><expr><operator pos:line="104" pos:column="50">(<pos:position pos:line="104" pos:column="51"/></operator><name pos:line="104" pos:column="51">SV<pos:position pos:line="104" pos:column="53"/></name> <operator pos:line="104" pos:column="54">*<pos:position pos:line="104" pos:column="55"/></operator><operator pos:line="104" pos:column="55">)<pos:position pos:line="104" pos:column="56"/></operator><name pos:line="104" pos:column="56">pmeta<pos:position pos:line="104" pos:column="61"/></name></expr></argument>)<pos:position pos:line="104" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="104" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="104" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="65"/></expr_stmt>
	}<pos:position pos:line="105" pos:column="10"/></block></then></if></elseif></if>

	<expr_stmt><expr><call><name pos:line="107" pos:column="9">XPUSHs<pos:position pos:line="107" pos:column="15"/></name> <argument_list pos:line="107" pos:column="16">(<argument><expr><call><name pos:line="107" pos:column="17">sv_2mortal<pos:position pos:line="107" pos:column="27"/></name> <argument_list pos:line="107" pos:column="28">(<argument><expr><call><name pos:line="107" pos:column="29">newRV_inc<pos:position pos:line="107" pos:column="38"/></name> <argument_list pos:line="107" pos:column="39">(<argument><expr><name><name pos:line="107" pos:column="40">data<pos:position pos:line="107" pos:column="44"/></name><operator pos:line="107" pos:column="44">-&gt;<pos:position pos:line="107" pos:column="49"/></operator><name pos:line="107" pos:column="46">user_data<pos:position pos:line="107" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="107" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="107" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="107" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="59"/></expr_stmt>

	<expr_stmt><expr><name pos:line="109" pos:column="9">PUTBACK<pos:position pos:line="109" pos:column="16"/></name></expr>;<pos:position pos:line="109" pos:column="17"/></expr_stmt>

	<expr_stmt><expr><name pos:line="111" pos:column="9">retvals<pos:position pos:line="111" pos:column="16"/></name> <operator pos:line="111" pos:column="17">=<pos:position pos:line="111" pos:column="18"/></operator> <call><name pos:line="111" pos:column="19">call_pv<pos:position pos:line="111" pos:column="26"/></name> <argument_list pos:line="111" pos:column="27">(<argument><expr><literal type="string" pos:line="111" pos:column="28">"Collectd::fc_call"<pos:position pos:line="111" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="111" pos:column="49">G_SCALAR<pos:position pos:line="111" pos:column="57"/></name></expr></argument>)<pos:position pos:line="111" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="59"/></expr_stmt>

	<if pos:line="113" pos:column="9">if <condition pos:line="113" pos:column="12">(<expr><operator pos:line="113" pos:column="13">(<pos:position pos:line="113" pos:column="14"/></operator><name pos:line="113" pos:column="14">FC_CB_EXEC<pos:position pos:line="113" pos:column="24"/></name> <operator pos:line="113" pos:column="25">==<pos:position pos:line="113" pos:column="27"/></operator> <name pos:line="113" pos:column="28">cb_type<pos:position pos:line="113" pos:column="35"/></name><operator pos:line="113" pos:column="35">)<pos:position pos:line="113" pos:column="36"/></operator> <operator pos:line="113" pos:column="37">&amp;&amp;<pos:position pos:line="113" pos:column="47"/></operator> <operator pos:line="113" pos:column="40">(<pos:position pos:line="113" pos:column="41"/></operator><name pos:line="113" pos:column="41">meta<pos:position pos:line="113" pos:column="45"/></name> <operator pos:line="113" pos:column="46">!=<pos:position pos:line="113" pos:column="48"/></operator> <name pos:line="113" pos:column="49">NULL<pos:position pos:line="113" pos:column="53"/></name><operator pos:line="113" pos:column="53">)<pos:position pos:line="113" pos:column="54"/></operator></expr>)<pos:position pos:line="113" pos:column="55"/></condition><then pos:line="113" pos:column="55"> <block pos:line="113" pos:column="56">{
		<expr_stmt><expr><call><name pos:line="114" pos:column="17">assert<pos:position pos:line="114" pos:column="23"/></name> <argument_list pos:line="114" pos:column="24">(<argument><expr><name pos:line="114" pos:column="25">pmeta<pos:position pos:line="114" pos:column="30"/></name> <operator pos:line="114" pos:column="31">!=<pos:position pos:line="114" pos:column="33"/></operator> <name pos:line="114" pos:column="34">NULL<pos:position pos:line="114" pos:column="38"/></name></expr></argument>)<pos:position pos:line="114" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="40"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="116" pos:column="17">plugin_notification_meta_free<pos:position pos:line="116" pos:column="46"/></name> <argument_list pos:line="116" pos:column="47">(<argument><expr><operator pos:line="116" pos:column="48">*<pos:position pos:line="116" pos:column="49"/></operator><name pos:line="116" pos:column="49">meta<pos:position pos:line="116" pos:column="53"/></name></expr></argument>)<pos:position pos:line="116" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="55"/></expr_stmt>
		<macro><name pos:line="117" pos:column="17">av2notification_meta<pos:position pos:line="117" pos:column="37"/></name> <argument_list pos:line="117" pos:column="38">(<argument pos:line="117" pos:column="39">aTHX_ pmeta<pos:position pos:line="117" pos:column="50"/></argument>, <argument pos:line="117" pos:column="52">meta<pos:position pos:line="117" pos:column="56"/></argument>)<pos:position pos:line="117" pos:column="57"/></argument_list></macro><empty_stmt pos:line="117" pos:column="57">;<pos:position pos:line="117" pos:column="58"/></empty_stmt>
	}<pos:position pos:line="118" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="120" pos:column="9">SPAGAIN<pos:position pos:line="120" pos:column="16"/></name></expr>;<pos:position pos:line="120" pos:column="17"/></expr_stmt>
	<if pos:line="121" pos:column="9">if <condition pos:line="121" pos:column="12">(<expr><literal type="number" pos:line="121" pos:column="13">0<pos:position pos:line="121" pos:column="14"/></literal> <operator pos:line="121" pos:column="15">&lt;<pos:position pos:line="121" pos:column="19"/></operator> <name pos:line="121" pos:column="17">retvals<pos:position pos:line="121" pos:column="24"/></name></expr>)<pos:position pos:line="121" pos:column="25"/></condition><then pos:line="121" pos:column="25"> <block pos:line="121" pos:column="26">{
		<decl_stmt><decl><type><name pos:line="122" pos:column="17">SV<pos:position pos:line="122" pos:column="19"/></name> <modifier pos:line="122" pos:column="20">*<pos:position pos:line="122" pos:column="21"/></modifier></type><name pos:line="122" pos:column="21">tmp<pos:position pos:line="122" pos:column="24"/></name> <init pos:line="122" pos:column="25">= <expr><name pos:line="122" pos:column="27">POPs<pos:position pos:line="122" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="122" pos:column="32"/></decl_stmt>

		<comment type="block" pos:line="124" pos:column="17">/* the exec callbacks return a status, while
		 * the others return a boolean value */</comment>
		<if pos:line="126" pos:column="17">if <condition pos:line="126" pos:column="20">(<expr><name pos:line="126" pos:column="21">FC_CB_EXEC<pos:position pos:line="126" pos:column="31"/></name> <operator pos:line="126" pos:column="32">==<pos:position pos:line="126" pos:column="34"/></operator> <name pos:line="126" pos:column="35">cb_type<pos:position pos:line="126" pos:column="42"/></name></expr>)<pos:position pos:line="126" pos:column="43"/></condition><then pos:line="126" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><name pos:line="127" pos:column="25">ret<pos:position pos:line="127" pos:column="28"/></name> <operator pos:line="127" pos:column="29">=<pos:position pos:line="127" pos:column="30"/></operator> <call><name pos:line="127" pos:column="31">SvIV<pos:position pos:line="127" pos:column="35"/></name> <argument_list pos:line="127" pos:column="36">(<argument><expr><name pos:line="127" pos:column="37">tmp<pos:position pos:line="127" pos:column="40"/></name></expr></argument>)<pos:position pos:line="127" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="42"/></expr_stmt></block></then>
		<elseif pos:line="128" pos:column="17">else <if pos:line="128" pos:column="22">if <condition pos:line="128" pos:column="25">(<expr><operator pos:line="128" pos:column="26">!<pos:position pos:line="128" pos:column="27"/></operator> <call><name pos:line="128" pos:column="28">SvTRUE<pos:position pos:line="128" pos:column="34"/></name> <argument_list pos:line="128" pos:column="35">(<argument><expr><name pos:line="128" pos:column="36">tmp<pos:position pos:line="128" pos:column="39"/></name></expr></argument>)<pos:position pos:line="128" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="128" pos:column="41"/></condition><then pos:line="128" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><name pos:line="129" pos:column="25">ret<pos:position pos:line="129" pos:column="28"/></name> <operator pos:line="129" pos:column="29">=<pos:position pos:line="129" pos:column="30"/></operator> <operator pos:line="129" pos:column="31">-<pos:position pos:line="129" pos:column="32"/></operator><literal type="number" pos:line="129" pos:column="32">1<pos:position pos:line="129" pos:column="33"/></literal></expr>;<pos:position pos:line="129" pos:column="34"/></expr_stmt></block></then></if></elseif></if>
	}<pos:position pos:line="130" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="132" pos:column="9">PUTBACK<pos:position pos:line="132" pos:column="16"/></name></expr>;<pos:position pos:line="132" pos:column="17"/></expr_stmt>
	<expr_stmt><expr><name pos:line="133" pos:column="9">FREETMPS<pos:position pos:line="133" pos:column="17"/></name></expr>;<pos:position pos:line="133" pos:column="18"/></expr_stmt>
	<expr_stmt><expr><name pos:line="134" pos:column="9">LEAVE<pos:position pos:line="134" pos:column="14"/></name></expr>;<pos:position pos:line="134" pos:column="15"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="136" pos:column="9">va_end<pos:position pos:line="136" pos:column="15"/></name> <argument_list pos:line="136" pos:column="16">(<argument><expr><name pos:line="136" pos:column="17">ap<pos:position pos:line="136" pos:column="19"/></name></expr></argument>)<pos:position pos:line="136" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="21"/></expr_stmt>
	<return pos:line="137" pos:column="9">return <expr><name pos:line="137" pos:column="16">ret<pos:position pos:line="137" pos:column="19"/></name></expr>;<pos:position pos:line="137" pos:column="20"/></return>
}<pos:position pos:line="138" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_62_collectd-5.6.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">lt_dlhandle<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">lt_dlhandle_iterate<pos:position pos:line="2" pos:column="20"/></name> <parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name pos:line="2" pos:column="22">lt_dlinterface_id<pos:position pos:line="2" pos:column="39"/></name></type> <name pos:line="2" pos:column="40">iface<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="47">lt_dlhandle<pos:position pos:line="2" pos:column="58"/></name></type> <name pos:line="2" pos:column="59">place<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">lt_dlhandle<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">handle<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><name pos:line="4" pos:column="24">place<pos:position pos:line="4" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">lt__interface_id<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">iterator<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><operator pos:line="5" pos:column="32">(<pos:position pos:line="5" pos:column="33"/></operator><name pos:line="5" pos:column="33">lt__interface_id<pos:position pos:line="5" pos:column="49"/></name> <operator pos:line="5" pos:column="50">*<pos:position pos:line="5" pos:column="51"/></operator><operator pos:line="5" pos:column="51">)<pos:position pos:line="5" pos:column="52"/></operator> <name pos:line="5" pos:column="53">iface<pos:position pos:line="5" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="59"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="7" pos:column="3">assert<pos:position pos:line="7" pos:column="9"/></name> <argument_list pos:line="7" pos:column="10">(<argument><expr><name pos:line="7" pos:column="11">iface<pos:position pos:line="7" pos:column="16"/></name></expr></argument>)<pos:position pos:line="7" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="18"/></expr_stmt> <comment type="block" pos:line="7" pos:column="19">/* iface is a required argument */</comment>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">!<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">handle<pos:position pos:line="9" pos:column="14"/></name></expr>)<pos:position pos:line="9" pos:column="15"/></condition><then pos:line="9" pos:column="15">
    <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="5">handle<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <name pos:line="10" pos:column="14">handles<pos:position pos:line="10" pos:column="21"/></name></expr>;<pos:position pos:line="10" pos:column="22"/></expr_stmt></block></then>
  <else pos:line="11" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="5">handle<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <name><name pos:line="12" pos:column="14">handle<pos:position pos:line="12" pos:column="20"/></name><operator pos:line="12" pos:column="20">-&gt;<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="22">next<pos:position pos:line="12" pos:column="26"/></name></name></expr>;<pos:position pos:line="12" pos:column="27"/></expr_stmt></block></else></if>

  <comment type="block" pos:line="14" pos:column="3">/* advance while the interface check fails */</comment>
  <while pos:line="15" pos:column="3">while <condition pos:line="15" pos:column="9">(<expr><name pos:line="15" pos:column="10">handle<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">&amp;&amp;<pos:position pos:line="15" pos:column="27"/></operator> <name><name pos:line="15" pos:column="20">iterator<pos:position pos:line="15" pos:column="28"/></name><operator pos:line="15" pos:column="28">-&gt;<pos:position pos:line="15" pos:column="33"/></operator><name pos:line="15" pos:column="30">iface<pos:position pos:line="15" pos:column="35"/></name></name>
	 <operator pos:line="16" pos:column="10">&amp;&amp;<pos:position pos:line="16" pos:column="20"/></operator> <operator pos:line="16" pos:column="13">(<pos:position pos:line="16" pos:column="14"/></operator><call pos:line="16" pos:column="14">(<modifier pos:line="16" pos:column="15">*<pos:position pos:line="16" pos:column="16"/></modifier><name><name pos:line="16" pos:column="16">iterator<pos:position pos:line="16" pos:column="24"/></name><operator pos:line="16" pos:column="24">-&gt;<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="26">iface<pos:position pos:line="16" pos:column="31"/></name></name>) <argument_list pos:line="16" pos:column="33">(<argument><expr><name pos:line="16" pos:column="34">handle<pos:position pos:line="16" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="42">iterator<pos:position pos:line="16" pos:column="50"/></name><operator pos:line="16" pos:column="50">-&gt;<pos:position pos:line="16" pos:column="55"/></operator><name pos:line="16" pos:column="52">id_string<pos:position pos:line="16" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="62"/></argument_list></call> <operator pos:line="16" pos:column="63">!=<pos:position pos:line="16" pos:column="65"/></operator> <literal type="number" pos:line="16" pos:column="66">0<pos:position pos:line="16" pos:column="67"/></literal><operator pos:line="16" pos:column="67">)<pos:position pos:line="16" pos:column="68"/></operator></expr>)<pos:position pos:line="16" pos:column="69"/></condition>
    <block pos:line="17" pos:column="5">{
      <expr_stmt><expr><name pos:line="18" pos:column="7">handle<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <name><name pos:line="18" pos:column="16">handle<pos:position pos:line="18" pos:column="22"/></name><operator pos:line="18" pos:column="22">-&gt;<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="24">next<pos:position pos:line="18" pos:column="28"/></name></name></expr>;<pos:position pos:line="18" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></while>

  <return pos:line="21" pos:column="3">return <expr><name pos:line="21" pos:column="10">handle<pos:position pos:line="21" pos:column="16"/></name></expr>;<pos:position pos:line="21" pos:column="17"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

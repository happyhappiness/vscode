<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_845_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">memcached_init_vl<pos:position pos:line="1" pos:column="30"/></name> <parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">value_list_t<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">vl<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">memcached_t<pos:position pos:line="1" pos:column="61"/></name> <specifier pos:line="1" pos:column="62">const<pos:position pos:line="1" pos:column="67"/></specifier> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">st<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <expr_stmt><expr><call><name pos:line="3" pos:column="3">sstrncpy<pos:position pos:line="3" pos:column="11"/></name> <argument_list pos:line="3" pos:column="12">(<argument><expr><name><name pos:line="3" pos:column="13">vl<pos:position pos:line="3" pos:column="15"/></name><operator pos:line="3" pos:column="15">-&gt;<pos:position pos:line="3" pos:column="20"/></operator><name pos:line="3" pos:column="17">plugin<pos:position pos:line="3" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="25">"memcached"<pos:position pos:line="3" pos:column="36"/></literal></expr></argument>, <argument><expr><sizeof pos:line="3" pos:column="38">sizeof <argument_list pos:line="3" pos:column="45">(<argument><expr><name><name pos:line="3" pos:column="46">vl<pos:position pos:line="3" pos:column="48"/></name><operator pos:line="3" pos:column="48">-&gt;<pos:position pos:line="3" pos:column="53"/></operator><name pos:line="3" pos:column="50">plugin<pos:position pos:line="3" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="3" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="59"/></expr_stmt>
  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><call><name pos:line="4" pos:column="7">strcmp<pos:position pos:line="4" pos:column="13"/></name> <argument_list pos:line="4" pos:column="14">(<argument><expr><name><name pos:line="4" pos:column="15">st<pos:position pos:line="4" pos:column="17"/></name><operator pos:line="4" pos:column="17">-&gt;<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="19">name<pos:position pos:line="4" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="25">"__legacy__"<pos:position pos:line="4" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="38"/></argument_list></call> <operator pos:line="4" pos:column="39">==<pos:position pos:line="4" pos:column="41"/></operator> <literal type="number" pos:line="4" pos:column="42">0<pos:position pos:line="4" pos:column="43"/></literal></expr>)<pos:position pos:line="4" pos:column="44"/></condition><then pos:line="4" pos:column="44"> <comment type="block" pos:line="4" pos:column="45">/* legacy mode */</comment>
  <block pos:line="5" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">sstrncpy<pos:position pos:line="6" pos:column="13"/></name> <argument_list pos:line="6" pos:column="14">(<argument><expr><name><name pos:line="6" pos:column="15">vl<pos:position pos:line="6" pos:column="17"/></name><operator pos:line="6" pos:column="17">-&gt;<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="19">host<pos:position pos:line="6" pos:column="23"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="25">hostname_g<pos:position pos:line="6" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="37">sizeof <argument_list pos:line="6" pos:column="44">(<argument><expr><name><name pos:line="6" pos:column="45">vl<pos:position pos:line="6" pos:column="47"/></name><operator pos:line="6" pos:column="47">-&gt;<pos:position pos:line="6" pos:column="52"/></operator><name pos:line="6" pos:column="49">host<pos:position pos:line="6" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="56"/></expr_stmt>
  }<pos:position pos:line="7" pos:column="4"/></block></then>
  <else pos:line="8" pos:column="3">else
  <block pos:line="9" pos:column="3">{
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name><name pos:line="10" pos:column="9">st<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">-&gt;<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="13">socket<pos:position pos:line="10" pos:column="19"/></name></name> <operator pos:line="10" pos:column="20">!=<pos:position pos:line="10" pos:column="22"/></operator> <name pos:line="10" pos:column="23">NULL<pos:position pos:line="10" pos:column="27"/></name></expr>)<pos:position pos:line="10" pos:column="28"/></condition><then pos:line="10" pos:column="28">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="7">sstrncpy<pos:position pos:line="11" pos:column="15"/></name> <argument_list pos:line="11" pos:column="16">(<argument><expr><name><name pos:line="11" pos:column="17">vl<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">-&gt;<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="21">host<pos:position pos:line="11" pos:column="25"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="27">hostname_g<pos:position pos:line="11" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="39">sizeof <argument_list pos:line="11" pos:column="46">(<argument><expr><name><name pos:line="11" pos:column="47">vl<pos:position pos:line="11" pos:column="49"/></name><operator pos:line="11" pos:column="49">-&gt;<pos:position pos:line="11" pos:column="54"/></operator><name pos:line="11" pos:column="51">host<pos:position pos:line="11" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="58"/></expr_stmt></block></then>
    <else pos:line="12" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="7">sstrncpy<pos:position pos:line="13" pos:column="15"/></name> <argument_list pos:line="13" pos:column="16">(<argument><expr><name><name pos:line="13" pos:column="17">vl<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">-&gt;<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="21">host<pos:position pos:line="13" pos:column="25"/></name></name></expr></argument>,
          <argument><expr><ternary><condition><expr><operator pos:line="14" pos:column="11">(<pos:position pos:line="14" pos:column="12"/></operator><name><name pos:line="14" pos:column="12">st<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">-&gt;<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="16">host<pos:position pos:line="14" pos:column="20"/></name></name> <operator pos:line="14" pos:column="21">!=<pos:position pos:line="14" pos:column="23"/></operator> <name pos:line="14" pos:column="24">NULL<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">)<pos:position pos:line="14" pos:column="29"/></operator></expr> ?<pos:position pos:line="14" pos:column="31"/></condition><then pos:line="14" pos:column="31"> <expr><name><name pos:line="14" pos:column="32">st<pos:position pos:line="14" pos:column="34"/></name><operator pos:line="14" pos:column="34">-&gt;<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="36">host<pos:position pos:line="14" pos:column="40"/></name></name></expr> <pos:position pos:line="14" pos:column="41"/></then><else pos:line="14" pos:column="41">: <expr><name pos:line="14" pos:column="43">MEMCACHED_DEF_HOST<pos:position pos:line="14" pos:column="61"/></name></expr></else></ternary></expr></argument>,
          <argument><expr><sizeof pos:line="15" pos:column="11">sizeof <argument_list pos:line="15" pos:column="18">(<argument><expr><name><name pos:line="15" pos:column="19">vl<pos:position pos:line="15" pos:column="21"/></name><operator pos:line="15" pos:column="21">-&gt;<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="23">host<pos:position pos:line="15" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="28"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="30"/></expr_stmt></block></else></if>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">sstrncpy<pos:position pos:line="16" pos:column="13"/></name> <argument_list pos:line="16" pos:column="14">(<argument><expr><name><name pos:line="16" pos:column="15">vl<pos:position pos:line="16" pos:column="17"/></name><operator pos:line="16" pos:column="17">-&gt;<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="19">plugin_instance<pos:position pos:line="16" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="36">st<pos:position pos:line="16" pos:column="38"/></name><operator pos:line="16" pos:column="38">-&gt;<pos:position pos:line="16" pos:column="43"/></operator><name pos:line="16" pos:column="40">name<pos:position pos:line="16" pos:column="44"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="46">sizeof <argument_list pos:line="16" pos:column="53">(<argument><expr><name><name pos:line="16" pos:column="54">vl<pos:position pos:line="16" pos:column="56"/></name><operator pos:line="16" pos:column="56">-&gt;<pos:position pos:line="16" pos:column="61"/></operator><name pos:line="16" pos:column="58">plugin_instance<pos:position pos:line="16" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="76"/></expr_stmt>
  }<pos:position pos:line="17" pos:column="4"/></block></else></if>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1498_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">statsd_metric_submit_unsafe<pos:position pos:line="1" pos:column="39"/></name> <parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">char<pos:position pos:line="1" pos:column="45"/></name> <specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">name<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="59">/* {{{ */</comment>
    <parameter><decl><type><name pos:line="2" pos:column="5">statsd_metric_t<pos:position pos:line="2" pos:column="20"/></name> <specifier pos:line="2" pos:column="21">const<pos:position pos:line="2" pos:column="26"/></specifier> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type><name pos:line="2" pos:column="28">metric<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">value_t<pos:position pos:line="4" pos:column="10"/></name></type> <name><name pos:line="4" pos:column="11">values<pos:position pos:line="4" pos:column="17"/></name><index pos:line="4" pos:column="17">[<expr><literal type="number" pos:line="4" pos:column="18">1<pos:position pos:line="4" pos:column="19"/></literal></expr>]<pos:position pos:line="4" pos:column="20"/></index></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">value_list_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">vl<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name pos:line="5" pos:column="21">VALUE_LIST_INIT<pos:position pos:line="5" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>

  <expr_stmt><expr><name><name pos:line="7" pos:column="3">vl<pos:position pos:line="7" pos:column="5"/></name><operator pos:line="7" pos:column="5">.<pos:position pos:line="7" pos:column="6"/></operator><name pos:line="7" pos:column="6">values<pos:position pos:line="7" pos:column="12"/></name></name> <operator pos:line="7" pos:column="13">=<pos:position pos:line="7" pos:column="14"/></operator> <name pos:line="7" pos:column="15">values<pos:position pos:line="7" pos:column="21"/></name></expr>;<pos:position pos:line="7" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="8" pos:column="3">vl<pos:position pos:line="8" pos:column="5"/></name><operator pos:line="8" pos:column="5">.<pos:position pos:line="8" pos:column="6"/></operator><name pos:line="8" pos:column="6">values_len<pos:position pos:line="8" pos:column="16"/></name></name> <operator pos:line="8" pos:column="17">=<pos:position pos:line="8" pos:column="18"/></operator> <literal type="number" pos:line="8" pos:column="19">1<pos:position pos:line="8" pos:column="20"/></literal></expr>;<pos:position pos:line="8" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">sstrncpy<pos:position pos:line="9" pos:column="11"/></name> <argument_list pos:line="9" pos:column="12">(<argument><expr><name><name pos:line="9" pos:column="13">vl<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">.<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="16">host<pos:position pos:line="9" pos:column="20"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="22">hostname_g<pos:position pos:line="9" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="34">sizeof <argument_list pos:line="9" pos:column="41">(<argument><expr><name><name pos:line="9" pos:column="42">vl<pos:position pos:line="9" pos:column="44"/></name><operator pos:line="9" pos:column="44">.<pos:position pos:line="9" pos:column="45"/></operator><name pos:line="9" pos:column="45">host<pos:position pos:line="9" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="52"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">sstrncpy<pos:position pos:line="10" pos:column="11"/></name> <argument_list pos:line="10" pos:column="12">(<argument><expr><name><name pos:line="10" pos:column="13">vl<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">.<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="16">plugin<pos:position pos:line="10" pos:column="22"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="24">"statsd"<pos:position pos:line="10" pos:column="32"/></literal></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="34">sizeof <argument_list pos:line="10" pos:column="41">(<argument><expr><name><name pos:line="10" pos:column="42">vl<pos:position pos:line="10" pos:column="44"/></name><operator pos:line="10" pos:column="44">.<pos:position pos:line="10" pos:column="45"/></operator><name pos:line="10" pos:column="45">plugin<pos:position pos:line="10" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="54"/></expr_stmt>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name><name pos:line="12" pos:column="7">metric<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">-&gt;<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="15">type<pos:position pos:line="12" pos:column="19"/></name></name> <operator pos:line="12" pos:column="20">==<pos:position pos:line="12" pos:column="22"/></operator> <name pos:line="12" pos:column="23">STATSD_GAUGE<pos:position pos:line="12" pos:column="35"/></name></expr>)<pos:position pos:line="12" pos:column="36"/></condition><then pos:line="12" pos:column="36">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="5">sstrncpy<pos:position pos:line="13" pos:column="13"/></name> <argument_list pos:line="13" pos:column="14">(<argument><expr><name><name pos:line="13" pos:column="15">vl<pos:position pos:line="13" pos:column="17"/></name><operator pos:line="13" pos:column="17">.<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">type<pos:position pos:line="13" pos:column="22"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="24">"gauge"<pos:position pos:line="13" pos:column="31"/></literal></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="33">sizeof <argument_list pos:line="13" pos:column="40">(<argument><expr><name><name pos:line="13" pos:column="41">vl<pos:position pos:line="13" pos:column="43"/></name><operator pos:line="13" pos:column="43">.<pos:position pos:line="13" pos:column="44"/></operator><name pos:line="13" pos:column="44">type<pos:position pos:line="13" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="51"/></expr_stmt></block></then>
  <elseif pos:line="14" pos:column="3">else <if pos:line="14" pos:column="8">if <condition pos:line="14" pos:column="11">(<expr><name><name pos:line="14" pos:column="12">metric<pos:position pos:line="14" pos:column="18"/></name><operator pos:line="14" pos:column="18">-&gt;<pos:position pos:line="14" pos:column="23"/></operator><name pos:line="14" pos:column="20">type<pos:position pos:line="14" pos:column="24"/></name></name> <operator pos:line="14" pos:column="25">==<pos:position pos:line="14" pos:column="27"/></operator> <name pos:line="14" pos:column="28">STATSD_TIMER<pos:position pos:line="14" pos:column="40"/></name></expr>)<pos:position pos:line="14" pos:column="41"/></condition><then pos:line="14" pos:column="41">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="5">sstrncpy<pos:position pos:line="15" pos:column="13"/></name> <argument_list pos:line="15" pos:column="14">(<argument><expr><name><name pos:line="15" pos:column="15">vl<pos:position pos:line="15" pos:column="17"/></name><operator pos:line="15" pos:column="17">.<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="18">type<pos:position pos:line="15" pos:column="22"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="24">"latency"<pos:position pos:line="15" pos:column="33"/></literal></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="35">sizeof <argument_list pos:line="15" pos:column="42">(<argument><expr><name><name pos:line="15" pos:column="43">vl<pos:position pos:line="15" pos:column="45"/></name><operator pos:line="15" pos:column="45">.<pos:position pos:line="15" pos:column="46"/></operator><name pos:line="15" pos:column="46">type<pos:position pos:line="15" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="53"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="16" pos:column="3">else <if pos:line="16" pos:column="8">if <condition pos:line="16" pos:column="11">(<expr><name><name pos:line="16" pos:column="12">metric<pos:position pos:line="16" pos:column="18"/></name><operator pos:line="16" pos:column="18">-&gt;<pos:position pos:line="16" pos:column="23"/></operator><name pos:line="16" pos:column="20">type<pos:position pos:line="16" pos:column="24"/></name></name> <operator pos:line="16" pos:column="25">==<pos:position pos:line="16" pos:column="27"/></operator> <name pos:line="16" pos:column="28">STATSD_SET<pos:position pos:line="16" pos:column="38"/></name></expr>)<pos:position pos:line="16" pos:column="39"/></condition><then pos:line="16" pos:column="39">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="5">sstrncpy<pos:position pos:line="17" pos:column="13"/></name> <argument_list pos:line="17" pos:column="14">(<argument><expr><name><name pos:line="17" pos:column="15">vl<pos:position pos:line="17" pos:column="17"/></name><operator pos:line="17" pos:column="17">.<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="18">type<pos:position pos:line="17" pos:column="22"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="24">"objects"<pos:position pos:line="17" pos:column="33"/></literal></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="35">sizeof <argument_list pos:line="17" pos:column="42">(<argument><expr><name><name pos:line="17" pos:column="43">vl<pos:position pos:line="17" pos:column="45"/></name><operator pos:line="17" pos:column="45">.<pos:position pos:line="17" pos:column="46"/></operator><name pos:line="17" pos:column="46">type<pos:position pos:line="17" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="53"/></expr_stmt></block></then></if></elseif>
  <else pos:line="18" pos:column="3">else <comment type="block" pos:line="18" pos:column="8">/* if (metric-&gt;type == STATSD_COUNTER) */</comment>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="5">sstrncpy<pos:position pos:line="19" pos:column="13"/></name> <argument_list pos:line="19" pos:column="14">(<argument><expr><name><name pos:line="19" pos:column="15">vl<pos:position pos:line="19" pos:column="17"/></name><operator pos:line="19" pos:column="17">.<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="18">type<pos:position pos:line="19" pos:column="22"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="24">"derive"<pos:position pos:line="19" pos:column="32"/></literal></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="34">sizeof <argument_list pos:line="19" pos:column="41">(<argument><expr><name><name pos:line="19" pos:column="42">vl<pos:position pos:line="19" pos:column="44"/></name><operator pos:line="19" pos:column="44">.<pos:position pos:line="19" pos:column="45"/></operator><name pos:line="19" pos:column="45">type<pos:position pos:line="19" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="52"/></expr_stmt></block></else></if>

  <expr_stmt><expr><call><name pos:line="21" pos:column="3">sstrncpy<pos:position pos:line="21" pos:column="11"/></name> <argument_list pos:line="21" pos:column="12">(<argument><expr><name><name pos:line="21" pos:column="13">vl<pos:position pos:line="21" pos:column="15"/></name><operator pos:line="21" pos:column="15">.<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="16">type_instance<pos:position pos:line="21" pos:column="29"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="31">name<pos:position pos:line="21" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="37">sizeof <argument_list pos:line="21" pos:column="44">(<argument><expr><name><name pos:line="21" pos:column="45">vl<pos:position pos:line="21" pos:column="47"/></name><operator pos:line="21" pos:column="47">.<pos:position pos:line="21" pos:column="48"/></operator><name pos:line="21" pos:column="48">type_instance<pos:position pos:line="21" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="64"/></expr_stmt>

  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><name><name pos:line="23" pos:column="7">metric<pos:position pos:line="23" pos:column="13"/></name><operator pos:line="23" pos:column="13">-&gt;<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="15">type<pos:position pos:line="23" pos:column="19"/></name></name> <operator pos:line="23" pos:column="20">==<pos:position pos:line="23" pos:column="22"/></operator> <name pos:line="23" pos:column="23">STATSD_GAUGE<pos:position pos:line="23" pos:column="35"/></name></expr>)<pos:position pos:line="23" pos:column="36"/></condition><then pos:line="23" pos:column="36">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="24" pos:column="5">values<pos:position pos:line="24" pos:column="11"/></name><index pos:line="24" pos:column="11">[<expr><literal type="number" pos:line="24" pos:column="12">0<pos:position pos:line="24" pos:column="13"/></literal></expr>]<pos:position pos:line="24" pos:column="14"/></index></name><operator pos:line="24" pos:column="14">.<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="15">gauge<pos:position pos:line="24" pos:column="20"/></name> <operator pos:line="24" pos:column="21">=<pos:position pos:line="24" pos:column="22"/></operator> <operator pos:line="24" pos:column="23">(<pos:position pos:line="24" pos:column="24"/></operator><name pos:line="24" pos:column="24">gauge_t<pos:position pos:line="24" pos:column="31"/></name><operator pos:line="24" pos:column="31">)<pos:position pos:line="24" pos:column="32"/></operator> <name><name pos:line="24" pos:column="33">metric<pos:position pos:line="24" pos:column="39"/></name><operator pos:line="24" pos:column="39">-&gt;<pos:position pos:line="24" pos:column="44"/></operator><name pos:line="24" pos:column="41">value<pos:position pos:line="24" pos:column="46"/></name></name></expr>;<pos:position pos:line="24" pos:column="47"/></expr_stmt></block></then>
  <elseif pos:line="25" pos:column="3">else <if pos:line="25" pos:column="8">if <condition pos:line="25" pos:column="11">(<expr><name><name pos:line="25" pos:column="12">metric<pos:position pos:line="25" pos:column="18"/></name><operator pos:line="25" pos:column="18">-&gt;<pos:position pos:line="25" pos:column="23"/></operator><name pos:line="25" pos:column="20">type<pos:position pos:line="25" pos:column="24"/></name></name> <operator pos:line="25" pos:column="25">==<pos:position pos:line="25" pos:column="27"/></operator> <name pos:line="25" pos:column="28">STATSD_TIMER<pos:position pos:line="25" pos:column="40"/></name></expr>)<pos:position pos:line="25" pos:column="41"/></condition><then pos:line="25" pos:column="41">
  <block pos:line="26" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="27" pos:column="5">size_t<pos:position pos:line="27" pos:column="11"/></name></type> <name pos:line="27" pos:column="12">i<pos:position pos:line="27" pos:column="13"/></name></decl>;<pos:position pos:line="27" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="28" pos:column="5">_Bool<pos:position pos:line="28" pos:column="10"/></name></type> <name pos:line="28" pos:column="11">have_events<pos:position pos:line="28" pos:column="22"/></name> <init pos:line="28" pos:column="23">= <expr><operator pos:line="28" pos:column="25">(<pos:position pos:line="28" pos:column="26"/></operator><name><name pos:line="28" pos:column="26">metric<pos:position pos:line="28" pos:column="32"/></name><operator pos:line="28" pos:column="32">-&gt;<pos:position pos:line="28" pos:column="37"/></operator><name pos:line="28" pos:column="34">updates_num<pos:position pos:line="28" pos:column="45"/></name></name> <operator pos:line="28" pos:column="46">&gt;<pos:position pos:line="28" pos:column="50"/></operator> <literal type="number" pos:line="28" pos:column="48">0<pos:position pos:line="28" pos:column="49"/></literal><operator pos:line="28" pos:column="49">)<pos:position pos:line="28" pos:column="50"/></operator></expr></init></decl>;<pos:position pos:line="28" pos:column="51"/></decl_stmt>

    <comment type="block" pos:line="30" pos:column="5">/* Make sure all timer metrics share the *same* timestamp. */</comment>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">vl<pos:position pos:line="31" pos:column="7"/></name><operator pos:line="31" pos:column="7">.<pos:position pos:line="31" pos:column="8"/></operator><name pos:line="31" pos:column="8">time<pos:position pos:line="31" pos:column="12"/></name></name> <operator pos:line="31" pos:column="13">=<pos:position pos:line="31" pos:column="14"/></operator> <call><name pos:line="31" pos:column="15">cdtime<pos:position pos:line="31" pos:column="21"/></name> <argument_list pos:line="31" pos:column="22">()<pos:position pos:line="31" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="25"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="33" pos:column="5">ssnprintf<pos:position pos:line="33" pos:column="14"/></name> <argument_list pos:line="33" pos:column="15">(<argument><expr><name><name pos:line="33" pos:column="16">vl<pos:position pos:line="33" pos:column="18"/></name><operator pos:line="33" pos:column="18">.<pos:position pos:line="33" pos:column="19"/></operator><name pos:line="33" pos:column="19">type_instance<pos:position pos:line="33" pos:column="32"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="34">sizeof <argument_list pos:line="33" pos:column="41">(<argument><expr><name><name pos:line="33" pos:column="42">vl<pos:position pos:line="33" pos:column="44"/></name><operator pos:line="33" pos:column="44">.<pos:position pos:line="33" pos:column="45"/></operator><name pos:line="33" pos:column="45">type_instance<pos:position pos:line="33" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="59"/></argument_list></sizeof></expr></argument>,
        <argument><expr><literal type="string" pos:line="34" pos:column="9">"%s-average"<pos:position pos:line="34" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="23">name<pos:position pos:line="34" pos:column="27"/></name></expr></argument>)<pos:position pos:line="34" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="35" pos:column="5">values<pos:position pos:line="35" pos:column="11"/></name><index pos:line="35" pos:column="11">[<expr><literal type="number" pos:line="35" pos:column="12">0<pos:position pos:line="35" pos:column="13"/></literal></expr>]<pos:position pos:line="35" pos:column="14"/></index></name><operator pos:line="35" pos:column="14">.<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="15">gauge<pos:position pos:line="35" pos:column="20"/></name> <operator pos:line="35" pos:column="21">=<pos:position pos:line="35" pos:column="22"/></operator> <ternary><condition><expr><name pos:line="35" pos:column="23">have_events<pos:position pos:line="35" pos:column="34"/></name></expr>
      ?<pos:position pos:line="36" pos:column="8"/></condition><then pos:line="36" pos:column="8"> <expr><call><name pos:line="36" pos:column="9">CDTIME_T_TO_DOUBLE<pos:position pos:line="36" pos:column="27"/></name> <argument_list pos:line="36" pos:column="28">(<argument><expr><call><name pos:line="36" pos:column="29">latency_counter_get_average<pos:position pos:line="36" pos:column="56"/></name> <argument_list pos:line="36" pos:column="57">(<argument><expr><name><name pos:line="36" pos:column="58">metric<pos:position pos:line="36" pos:column="64"/></name><operator pos:line="36" pos:column="64">-&gt;<pos:position pos:line="36" pos:column="69"/></operator><name pos:line="36" pos:column="66">latency<pos:position pos:line="36" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="75"/></argument_list></call></expr>
      <pos:position pos:line="37" pos:column="7"/></then><else pos:line="37" pos:column="7">: <expr><name pos:line="37" pos:column="9">NAN<pos:position pos:line="37" pos:column="12"/></name></expr></else></ternary></expr>;<pos:position pos:line="37" pos:column="13"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">plugin_dispatch_values<pos:position pos:line="38" pos:column="27"/></name> <argument_list pos:line="38" pos:column="28">(<argument><expr><operator pos:line="38" pos:column="29">&amp;<pos:position pos:line="38" pos:column="34"/></operator><name pos:line="38" pos:column="30">vl<pos:position pos:line="38" pos:column="32"/></name></expr></argument>)<pos:position pos:line="38" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="34"/></expr_stmt>

    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name pos:line="40" pos:column="9">conf_timer_lower<pos:position pos:line="40" pos:column="25"/></name></expr>)<pos:position pos:line="40" pos:column="26"/></condition><then pos:line="40" pos:column="26"> <block pos:line="40" pos:column="27">{
      <expr_stmt><expr><call><name pos:line="41" pos:column="7">ssnprintf<pos:position pos:line="41" pos:column="16"/></name> <argument_list pos:line="41" pos:column="17">(<argument><expr><name><name pos:line="41" pos:column="18">vl<pos:position pos:line="41" pos:column="20"/></name><operator pos:line="41" pos:column="20">.<pos:position pos:line="41" pos:column="21"/></operator><name pos:line="41" pos:column="21">type_instance<pos:position pos:line="41" pos:column="34"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="41" pos:column="36">sizeof <argument_list pos:line="41" pos:column="43">(<argument><expr><name><name pos:line="41" pos:column="44">vl<pos:position pos:line="41" pos:column="46"/></name><operator pos:line="41" pos:column="46">.<pos:position pos:line="41" pos:column="47"/></operator><name pos:line="41" pos:column="47">type_instance<pos:position pos:line="41" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="61"/></argument_list></sizeof></expr></argument>,
          <argument><expr><literal type="string" pos:line="42" pos:column="11">"%s-lower"<pos:position pos:line="42" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="23">name<pos:position pos:line="42" pos:column="27"/></name></expr></argument>)<pos:position pos:line="42" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="43" pos:column="7">values<pos:position pos:line="43" pos:column="13"/></name><index pos:line="43" pos:column="13">[<expr><literal type="number" pos:line="43" pos:column="14">0<pos:position pos:line="43" pos:column="15"/></literal></expr>]<pos:position pos:line="43" pos:column="16"/></index></name><operator pos:line="43" pos:column="16">.<pos:position pos:line="43" pos:column="17"/></operator><name pos:line="43" pos:column="17">gauge<pos:position pos:line="43" pos:column="22"/></name> <operator pos:line="43" pos:column="23">=<pos:position pos:line="43" pos:column="24"/></operator> <ternary><condition><expr><name pos:line="43" pos:column="25">have_events<pos:position pos:line="43" pos:column="36"/></name></expr>
        ?<pos:position pos:line="44" pos:column="10"/></condition><then pos:line="44" pos:column="10"> <expr><call><name pos:line="44" pos:column="11">CDTIME_T_TO_DOUBLE<pos:position pos:line="44" pos:column="29"/></name> <argument_list pos:line="44" pos:column="30">(<argument><expr><call><name pos:line="44" pos:column="31">latency_counter_get_min<pos:position pos:line="44" pos:column="54"/></name> <argument_list pos:line="44" pos:column="55">(<argument><expr><name><name pos:line="44" pos:column="56">metric<pos:position pos:line="44" pos:column="62"/></name><operator pos:line="44" pos:column="62">-&gt;<pos:position pos:line="44" pos:column="67"/></operator><name pos:line="44" pos:column="64">latency<pos:position pos:line="44" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="73"/></argument_list></call></expr>
        <pos:position pos:line="45" pos:column="9"/></then><else pos:line="45" pos:column="9">: <expr><name pos:line="45" pos:column="11">NAN<pos:position pos:line="45" pos:column="14"/></name></expr></else></ternary></expr>;<pos:position pos:line="45" pos:column="15"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="46" pos:column="7">plugin_dispatch_values<pos:position pos:line="46" pos:column="29"/></name> <argument_list pos:line="46" pos:column="30">(<argument><expr><operator pos:line="46" pos:column="31">&amp;<pos:position pos:line="46" pos:column="36"/></operator><name pos:line="46" pos:column="32">vl<pos:position pos:line="46" pos:column="34"/></name></expr></argument>)<pos:position pos:line="46" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>

    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><name pos:line="49" pos:column="9">conf_timer_upper<pos:position pos:line="49" pos:column="25"/></name></expr>)<pos:position pos:line="49" pos:column="26"/></condition><then pos:line="49" pos:column="26"> <block pos:line="49" pos:column="27">{
      <expr_stmt><expr><call><name pos:line="50" pos:column="7">ssnprintf<pos:position pos:line="50" pos:column="16"/></name> <argument_list pos:line="50" pos:column="17">(<argument><expr><name><name pos:line="50" pos:column="18">vl<pos:position pos:line="50" pos:column="20"/></name><operator pos:line="50" pos:column="20">.<pos:position pos:line="50" pos:column="21"/></operator><name pos:line="50" pos:column="21">type_instance<pos:position pos:line="50" pos:column="34"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="50" pos:column="36">sizeof <argument_list pos:line="50" pos:column="43">(<argument><expr><name><name pos:line="50" pos:column="44">vl<pos:position pos:line="50" pos:column="46"/></name><operator pos:line="50" pos:column="46">.<pos:position pos:line="50" pos:column="47"/></operator><name pos:line="50" pos:column="47">type_instance<pos:position pos:line="50" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="61"/></argument_list></sizeof></expr></argument>,
          <argument><expr><literal type="string" pos:line="51" pos:column="11">"%s-upper"<pos:position pos:line="51" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="23">name<pos:position pos:line="51" pos:column="27"/></name></expr></argument>)<pos:position pos:line="51" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="52" pos:column="7">values<pos:position pos:line="52" pos:column="13"/></name><index pos:line="52" pos:column="13">[<expr><literal type="number" pos:line="52" pos:column="14">0<pos:position pos:line="52" pos:column="15"/></literal></expr>]<pos:position pos:line="52" pos:column="16"/></index></name><operator pos:line="52" pos:column="16">.<pos:position pos:line="52" pos:column="17"/></operator><name pos:line="52" pos:column="17">gauge<pos:position pos:line="52" pos:column="22"/></name> <operator pos:line="52" pos:column="23">=<pos:position pos:line="52" pos:column="24"/></operator> <ternary><condition><expr><name pos:line="52" pos:column="25">have_events<pos:position pos:line="52" pos:column="36"/></name></expr>
        ?<pos:position pos:line="53" pos:column="10"/></condition><then pos:line="53" pos:column="10"> <expr><call><name pos:line="53" pos:column="11">CDTIME_T_TO_DOUBLE<pos:position pos:line="53" pos:column="29"/></name> <argument_list pos:line="53" pos:column="30">(<argument><expr><call><name pos:line="53" pos:column="31">latency_counter_get_max<pos:position pos:line="53" pos:column="54"/></name> <argument_list pos:line="53" pos:column="55">(<argument><expr><name><name pos:line="53" pos:column="56">metric<pos:position pos:line="53" pos:column="62"/></name><operator pos:line="53" pos:column="62">-&gt;<pos:position pos:line="53" pos:column="67"/></operator><name pos:line="53" pos:column="64">latency<pos:position pos:line="53" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="53" pos:column="73"/></argument_list></call></expr>
        <pos:position pos:line="54" pos:column="9"/></then><else pos:line="54" pos:column="9">: <expr><name pos:line="54" pos:column="11">NAN<pos:position pos:line="54" pos:column="14"/></name></expr></else></ternary></expr>;<pos:position pos:line="54" pos:column="15"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="55" pos:column="7">plugin_dispatch_values<pos:position pos:line="55" pos:column="29"/></name> <argument_list pos:line="55" pos:column="30">(<argument><expr><operator pos:line="55" pos:column="31">&amp;<pos:position pos:line="55" pos:column="36"/></operator><name pos:line="55" pos:column="32">vl<pos:position pos:line="55" pos:column="34"/></name></expr></argument>)<pos:position pos:line="55" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="56" pos:column="6"/></block></then></if>

    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><name pos:line="58" pos:column="9">conf_timer_sum<pos:position pos:line="58" pos:column="23"/></name></expr>)<pos:position pos:line="58" pos:column="24"/></condition><then pos:line="58" pos:column="24"> <block pos:line="58" pos:column="25">{
      <expr_stmt><expr><call><name pos:line="59" pos:column="7">ssnprintf<pos:position pos:line="59" pos:column="16"/></name> <argument_list pos:line="59" pos:column="17">(<argument><expr><name><name pos:line="59" pos:column="18">vl<pos:position pos:line="59" pos:column="20"/></name><operator pos:line="59" pos:column="20">.<pos:position pos:line="59" pos:column="21"/></operator><name pos:line="59" pos:column="21">type_instance<pos:position pos:line="59" pos:column="34"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="59" pos:column="36">sizeof <argument_list pos:line="59" pos:column="43">(<argument><expr><name><name pos:line="59" pos:column="44">vl<pos:position pos:line="59" pos:column="46"/></name><operator pos:line="59" pos:column="46">.<pos:position pos:line="59" pos:column="47"/></operator><name pos:line="59" pos:column="47">type_instance<pos:position pos:line="59" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="61"/></argument_list></sizeof></expr></argument>,
          <argument><expr><literal type="string" pos:line="60" pos:column="11">"%s-sum"<pos:position pos:line="60" pos:column="19"/></literal></expr></argument>, <argument><expr><name pos:line="60" pos:column="21">name<pos:position pos:line="60" pos:column="25"/></name></expr></argument>)<pos:position pos:line="60" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="61" pos:column="7">values<pos:position pos:line="61" pos:column="13"/></name><index pos:line="61" pos:column="13">[<expr><literal type="number" pos:line="61" pos:column="14">0<pos:position pos:line="61" pos:column="15"/></literal></expr>]<pos:position pos:line="61" pos:column="16"/></index></name><operator pos:line="61" pos:column="16">.<pos:position pos:line="61" pos:column="17"/></operator><name pos:line="61" pos:column="17">gauge<pos:position pos:line="61" pos:column="22"/></name> <operator pos:line="61" pos:column="23">=<pos:position pos:line="61" pos:column="24"/></operator> <ternary><condition><expr><name pos:line="61" pos:column="25">have_events<pos:position pos:line="61" pos:column="36"/></name></expr>
        ?<pos:position pos:line="62" pos:column="10"/></condition><then pos:line="62" pos:column="10"> <expr><call><name pos:line="62" pos:column="11">CDTIME_T_TO_DOUBLE<pos:position pos:line="62" pos:column="29"/></name> <argument_list pos:line="62" pos:column="30">(<argument><expr><call><name pos:line="62" pos:column="31">latency_counter_get_sum<pos:position pos:line="62" pos:column="54"/></name> <argument_list pos:line="62" pos:column="55">(<argument><expr><name><name pos:line="62" pos:column="56">metric<pos:position pos:line="62" pos:column="62"/></name><operator pos:line="62" pos:column="62">-&gt;<pos:position pos:line="62" pos:column="67"/></operator><name pos:line="62" pos:column="64">latency<pos:position pos:line="62" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="62" pos:column="73"/></argument_list></call></expr>
        <pos:position pos:line="63" pos:column="9"/></then><else pos:line="63" pos:column="9">: <expr><name pos:line="63" pos:column="11">NAN<pos:position pos:line="63" pos:column="14"/></name></expr></else></ternary></expr>;<pos:position pos:line="63" pos:column="15"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="64" pos:column="7">plugin_dispatch_values<pos:position pos:line="64" pos:column="29"/></name> <argument_list pos:line="64" pos:column="30">(<argument><expr><operator pos:line="64" pos:column="31">&amp;<pos:position pos:line="64" pos:column="36"/></operator><name pos:line="64" pos:column="32">vl<pos:position pos:line="64" pos:column="34"/></name></expr></argument>)<pos:position pos:line="64" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="65" pos:column="6"/></block></then></if>

    <for pos:line="67" pos:column="5">for <control pos:line="67" pos:column="9">(<init><expr><name pos:line="67" pos:column="10">i<pos:position pos:line="67" pos:column="11"/></name> <operator pos:line="67" pos:column="12">=<pos:position pos:line="67" pos:column="13"/></operator> <literal type="number" pos:line="67" pos:column="14">0<pos:position pos:line="67" pos:column="15"/></literal></expr>;<pos:position pos:line="67" pos:column="16"/></init> <condition><expr><name pos:line="67" pos:column="17">i<pos:position pos:line="67" pos:column="18"/></name> <operator pos:line="67" pos:column="19">&lt;<pos:position pos:line="67" pos:column="23"/></operator> <name pos:line="67" pos:column="21">conf_timer_percentile_num<pos:position pos:line="67" pos:column="46"/></name></expr>;<pos:position pos:line="67" pos:column="47"/></condition> <incr><expr><name pos:line="67" pos:column="48">i<pos:position pos:line="67" pos:column="49"/></name><operator pos:line="67" pos:column="49">++<pos:position pos:line="67" pos:column="51"/></operator></expr></incr>)<pos:position pos:line="67" pos:column="52"/></control>
    <block pos:line="68" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="69" pos:column="7">ssnprintf<pos:position pos:line="69" pos:column="16"/></name> <argument_list pos:line="69" pos:column="17">(<argument><expr><name><name pos:line="69" pos:column="18">vl<pos:position pos:line="69" pos:column="20"/></name><operator pos:line="69" pos:column="20">.<pos:position pos:line="69" pos:column="21"/></operator><name pos:line="69" pos:column="21">type_instance<pos:position pos:line="69" pos:column="34"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="69" pos:column="36">sizeof <argument_list pos:line="69" pos:column="43">(<argument><expr><name><name pos:line="69" pos:column="44">vl<pos:position pos:line="69" pos:column="46"/></name><operator pos:line="69" pos:column="46">.<pos:position pos:line="69" pos:column="47"/></operator><name pos:line="69" pos:column="47">type_instance<pos:position pos:line="69" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="61"/></argument_list></sizeof></expr></argument>,
          <argument><expr><literal type="string" pos:line="70" pos:column="11">"%s-percentile-%.0f"<pos:position pos:line="70" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="70" pos:column="33">name<pos:position pos:line="70" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="39">conf_timer_percentile<pos:position pos:line="70" pos:column="60"/></name><index pos:line="70" pos:column="60">[<expr><name pos:line="70" pos:column="61">i<pos:position pos:line="70" pos:column="62"/></name></expr>]<pos:position pos:line="70" pos:column="63"/></index></name></expr></argument>)<pos:position pos:line="70" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="65"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="71" pos:column="7">values<pos:position pos:line="71" pos:column="13"/></name><index pos:line="71" pos:column="13">[<expr><literal type="number" pos:line="71" pos:column="14">0<pos:position pos:line="71" pos:column="15"/></literal></expr>]<pos:position pos:line="71" pos:column="16"/></index></name><operator pos:line="71" pos:column="16">.<pos:position pos:line="71" pos:column="17"/></operator><name pos:line="71" pos:column="17">gauge<pos:position pos:line="71" pos:column="22"/></name> <operator pos:line="71" pos:column="23">=<pos:position pos:line="71" pos:column="24"/></operator> <ternary><condition><expr><name pos:line="71" pos:column="25">have_events<pos:position pos:line="71" pos:column="36"/></name></expr>
        ?<pos:position pos:line="72" pos:column="10"/></condition><then pos:line="72" pos:column="10"> <expr><call><name pos:line="72" pos:column="11">CDTIME_T_TO_DOUBLE<pos:position pos:line="72" pos:column="29"/></name> <argument_list pos:line="72" pos:column="30">(<argument><expr><call><name pos:line="72" pos:column="31">latency_counter_get_percentile<pos:position pos:line="72" pos:column="61"/></name> <argument_list pos:line="72" pos:column="62">(<argument><expr><name><name pos:line="72" pos:column="63">metric<pos:position pos:line="72" pos:column="69"/></name><operator pos:line="72" pos:column="69">-&gt;<pos:position pos:line="72" pos:column="74"/></operator><name pos:line="72" pos:column="71">latency<pos:position pos:line="72" pos:column="78"/></name></name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="80">conf_timer_percentile<pos:position pos:line="72" pos:column="101"/></name><index pos:line="72" pos:column="101">[<expr><name pos:line="72" pos:column="102">i<pos:position pos:line="72" pos:column="103"/></name></expr>]<pos:position pos:line="72" pos:column="104"/></index></name></expr></argument>)<pos:position pos:line="72" pos:column="105"/></argument_list></call></expr></argument>)<pos:position pos:line="72" pos:column="106"/></argument_list></call></expr>
        <pos:position pos:line="73" pos:column="9"/></then><else pos:line="73" pos:column="9">: <expr><name pos:line="73" pos:column="11">NAN<pos:position pos:line="73" pos:column="14"/></name></expr></else></ternary></expr>;<pos:position pos:line="73" pos:column="15"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="74" pos:column="7">plugin_dispatch_values<pos:position pos:line="74" pos:column="29"/></name> <argument_list pos:line="74" pos:column="30">(<argument><expr><operator pos:line="74" pos:column="31">&amp;<pos:position pos:line="74" pos:column="36"/></operator><name pos:line="74" pos:column="32">vl<pos:position pos:line="74" pos:column="34"/></name></expr></argument>)<pos:position pos:line="74" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="75" pos:column="6"/></block></for>

    <comment type="block" pos:line="77" pos:column="5">/* Keep this at the end, since vl.type is set to "gauge" here. The
     * vl.type's above are implicitly set to "latency". */</comment>
    <if pos:line="79" pos:column="5">if <condition pos:line="79" pos:column="8">(<expr><name pos:line="79" pos:column="9">conf_timer_count<pos:position pos:line="79" pos:column="25"/></name></expr>)<pos:position pos:line="79" pos:column="26"/></condition><then pos:line="79" pos:column="26"> <block pos:line="79" pos:column="27">{
      <expr_stmt><expr><call><name pos:line="80" pos:column="7">sstrncpy<pos:position pos:line="80" pos:column="15"/></name> <argument_list pos:line="80" pos:column="16">(<argument><expr><name><name pos:line="80" pos:column="17">vl<pos:position pos:line="80" pos:column="19"/></name><operator pos:line="80" pos:column="19">.<pos:position pos:line="80" pos:column="20"/></operator><name pos:line="80" pos:column="20">type<pos:position pos:line="80" pos:column="24"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="26">"gauge"<pos:position pos:line="80" pos:column="33"/></literal></expr></argument>, <argument><expr><sizeof pos:line="80" pos:column="35">sizeof <argument_list pos:line="80" pos:column="42">(<argument><expr><name><name pos:line="80" pos:column="43">vl<pos:position pos:line="80" pos:column="45"/></name><operator pos:line="80" pos:column="45">.<pos:position pos:line="80" pos:column="46"/></operator><name pos:line="80" pos:column="46">type<pos:position pos:line="80" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="80" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="53"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="81" pos:column="7">ssnprintf<pos:position pos:line="81" pos:column="16"/></name> <argument_list pos:line="81" pos:column="17">(<argument><expr><name><name pos:line="81" pos:column="18">vl<pos:position pos:line="81" pos:column="20"/></name><operator pos:line="81" pos:column="20">.<pos:position pos:line="81" pos:column="21"/></operator><name pos:line="81" pos:column="21">type_instance<pos:position pos:line="81" pos:column="34"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="81" pos:column="36">sizeof <argument_list pos:line="81" pos:column="43">(<argument><expr><name><name pos:line="81" pos:column="44">vl<pos:position pos:line="81" pos:column="46"/></name><operator pos:line="81" pos:column="46">.<pos:position pos:line="81" pos:column="47"/></operator><name pos:line="81" pos:column="47">type_instance<pos:position pos:line="81" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="81" pos:column="61"/></argument_list></sizeof></expr></argument>,
          <argument><expr><literal type="string" pos:line="82" pos:column="11">"%s-count"<pos:position pos:line="82" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="82" pos:column="23">name<pos:position pos:line="82" pos:column="27"/></name></expr></argument>)<pos:position pos:line="82" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="83" pos:column="7">values<pos:position pos:line="83" pos:column="13"/></name><index pos:line="83" pos:column="13">[<expr><literal type="number" pos:line="83" pos:column="14">0<pos:position pos:line="83" pos:column="15"/></literal></expr>]<pos:position pos:line="83" pos:column="16"/></index></name><operator pos:line="83" pos:column="16">.<pos:position pos:line="83" pos:column="17"/></operator><name pos:line="83" pos:column="17">gauge<pos:position pos:line="83" pos:column="22"/></name> <operator pos:line="83" pos:column="23">=<pos:position pos:line="83" pos:column="24"/></operator> <call><name pos:line="83" pos:column="25">latency_counter_get_num<pos:position pos:line="83" pos:column="48"/></name> <argument_list pos:line="83" pos:column="49">(<argument><expr><name><name pos:line="83" pos:column="50">metric<pos:position pos:line="83" pos:column="56"/></name><operator pos:line="83" pos:column="56">-&gt;<pos:position pos:line="83" pos:column="61"/></operator><name pos:line="83" pos:column="58">latency<pos:position pos:line="83" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="67"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="84" pos:column="7">plugin_dispatch_values<pos:position pos:line="84" pos:column="29"/></name> <argument_list pos:line="84" pos:column="30">(<argument><expr><operator pos:line="84" pos:column="31">&amp;<pos:position pos:line="84" pos:column="36"/></operator><name pos:line="84" pos:column="32">vl<pos:position pos:line="84" pos:column="34"/></name></expr></argument>)<pos:position pos:line="84" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="85" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="87" pos:column="5">latency_counter_reset<pos:position pos:line="87" pos:column="26"/></name> <argument_list pos:line="87" pos:column="27">(<argument><expr><name><name pos:line="87" pos:column="28">metric<pos:position pos:line="87" pos:column="34"/></name><operator pos:line="87" pos:column="34">-&gt;<pos:position pos:line="87" pos:column="39"/></operator><name pos:line="87" pos:column="36">latency<pos:position pos:line="87" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="45"/></expr_stmt>
    <return pos:line="88" pos:column="5">return <expr><operator pos:line="88" pos:column="12">(<pos:position pos:line="88" pos:column="13"/></operator><literal type="number" pos:line="88" pos:column="13">0<pos:position pos:line="88" pos:column="14"/></literal><operator pos:line="88" pos:column="14">)<pos:position pos:line="88" pos:column="15"/></operator></expr>;<pos:position pos:line="88" pos:column="16"/></return>
  }<pos:position pos:line="89" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="90" pos:column="3">else <if pos:line="90" pos:column="8">if <condition pos:line="90" pos:column="11">(<expr><name><name pos:line="90" pos:column="12">metric<pos:position pos:line="90" pos:column="18"/></name><operator pos:line="90" pos:column="18">-&gt;<pos:position pos:line="90" pos:column="23"/></operator><name pos:line="90" pos:column="20">type<pos:position pos:line="90" pos:column="24"/></name></name> <operator pos:line="90" pos:column="25">==<pos:position pos:line="90" pos:column="27"/></operator> <name pos:line="90" pos:column="28">STATSD_SET<pos:position pos:line="90" pos:column="38"/></name></expr>)<pos:position pos:line="90" pos:column="39"/></condition><then pos:line="90" pos:column="39">
  <block pos:line="91" pos:column="3">{
    <if pos:line="92" pos:column="5">if <condition pos:line="92" pos:column="8">(<expr><name><name pos:line="92" pos:column="9">metric<pos:position pos:line="92" pos:column="15"/></name><operator pos:line="92" pos:column="15">-&gt;<pos:position pos:line="92" pos:column="20"/></operator><name pos:line="92" pos:column="17">set<pos:position pos:line="92" pos:column="20"/></name></name> <operator pos:line="92" pos:column="21">==<pos:position pos:line="92" pos:column="23"/></operator> <name pos:line="92" pos:column="24">NULL<pos:position pos:line="92" pos:column="28"/></name></expr>)<pos:position pos:line="92" pos:column="29"/></condition><then pos:line="92" pos:column="29">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="93" pos:column="7">values<pos:position pos:line="93" pos:column="13"/></name><index pos:line="93" pos:column="13">[<expr><literal type="number" pos:line="93" pos:column="14">0<pos:position pos:line="93" pos:column="15"/></literal></expr>]<pos:position pos:line="93" pos:column="16"/></index></name><operator pos:line="93" pos:column="16">.<pos:position pos:line="93" pos:column="17"/></operator><name pos:line="93" pos:column="17">gauge<pos:position pos:line="93" pos:column="22"/></name> <operator pos:line="93" pos:column="23">=<pos:position pos:line="93" pos:column="24"/></operator> <literal type="number" pos:line="93" pos:column="25">0.0<pos:position pos:line="93" pos:column="28"/></literal></expr>;<pos:position pos:line="93" pos:column="29"/></expr_stmt></block></then>
    <else pos:line="94" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="95" pos:column="7">values<pos:position pos:line="95" pos:column="13"/></name><index pos:line="95" pos:column="13">[<expr><literal type="number" pos:line="95" pos:column="14">0<pos:position pos:line="95" pos:column="15"/></literal></expr>]<pos:position pos:line="95" pos:column="16"/></index></name><operator pos:line="95" pos:column="16">.<pos:position pos:line="95" pos:column="17"/></operator><name pos:line="95" pos:column="17">gauge<pos:position pos:line="95" pos:column="22"/></name> <operator pos:line="95" pos:column="23">=<pos:position pos:line="95" pos:column="24"/></operator> <operator pos:line="95" pos:column="25">(<pos:position pos:line="95" pos:column="26"/></operator><name pos:line="95" pos:column="26">gauge_t<pos:position pos:line="95" pos:column="33"/></name><operator pos:line="95" pos:column="33">)<pos:position pos:line="95" pos:column="34"/></operator> <call><name pos:line="95" pos:column="35">c_avl_size<pos:position pos:line="95" pos:column="45"/></name> <argument_list pos:line="95" pos:column="46">(<argument><expr><name><name pos:line="95" pos:column="47">metric<pos:position pos:line="95" pos:column="53"/></name><operator pos:line="95" pos:column="53">-&gt;<pos:position pos:line="95" pos:column="58"/></operator><name pos:line="95" pos:column="55">set<pos:position pos:line="95" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="95" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="60"/></expr_stmt></block></else></if>
  }<pos:position pos:line="96" pos:column="4"/></block></then></if></elseif>
  <else pos:line="97" pos:column="3">else <block pos:line="97" pos:column="8">{ <comment type="block" pos:line="97" pos:column="10">/* STATSD_COUNTER */</comment>
      <comment type="block" pos:line="98" pos:column="7">/*
       * Expand a single value to two metrics:
       *
       * - The absolute counter, as a gauge
       * - A derived rate for this counter
       */</comment>
      <expr_stmt><expr><name><name pos:line="104" pos:column="7">values<pos:position pos:line="104" pos:column="13"/></name><index pos:line="104" pos:column="13">[<expr><literal type="number" pos:line="104" pos:column="14">0<pos:position pos:line="104" pos:column="15"/></literal></expr>]<pos:position pos:line="104" pos:column="16"/></index></name><operator pos:line="104" pos:column="16">.<pos:position pos:line="104" pos:column="17"/></operator><name pos:line="104" pos:column="17">derive<pos:position pos:line="104" pos:column="23"/></name> <operator pos:line="104" pos:column="24">=<pos:position pos:line="104" pos:column="25"/></operator> <operator pos:line="104" pos:column="26">(<pos:position pos:line="104" pos:column="27"/></operator><name pos:line="104" pos:column="27">derive_t<pos:position pos:line="104" pos:column="35"/></name><operator pos:line="104" pos:column="35">)<pos:position pos:line="104" pos:column="36"/></operator> <name><name pos:line="104" pos:column="37">metric<pos:position pos:line="104" pos:column="43"/></name><operator pos:line="104" pos:column="43">-&gt;<pos:position pos:line="104" pos:column="48"/></operator><name pos:line="104" pos:column="45">value<pos:position pos:line="104" pos:column="50"/></name></name></expr>;<pos:position pos:line="104" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="105" pos:column="7">plugin_dispatch_values<pos:position pos:line="105" pos:column="29"/></name><argument_list pos:line="105" pos:column="29">(<argument><expr><operator pos:line="105" pos:column="30">&amp;<pos:position pos:line="105" pos:column="35"/></operator><name pos:line="105" pos:column="31">vl<pos:position pos:line="105" pos:column="33"/></name></expr></argument>)<pos:position pos:line="105" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="35"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="107" pos:column="7">sstrncpy<pos:position pos:line="107" pos:column="15"/></name><argument_list pos:line="107" pos:column="15">(<argument><expr><name><name pos:line="107" pos:column="16">vl<pos:position pos:line="107" pos:column="18"/></name><operator pos:line="107" pos:column="18">.<pos:position pos:line="107" pos:column="19"/></operator><name pos:line="107" pos:column="19">type<pos:position pos:line="107" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="25">"gauge"<pos:position pos:line="107" pos:column="32"/></literal></expr></argument>, <argument><expr><sizeof pos:line="107" pos:column="34">sizeof <argument_list pos:line="107" pos:column="41">(<argument><expr><name><name pos:line="107" pos:column="42">vl<pos:position pos:line="107" pos:column="44"/></name><operator pos:line="107" pos:column="44">.<pos:position pos:line="107" pos:column="45"/></operator><name pos:line="107" pos:column="45">type<pos:position pos:line="107" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="107" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="107" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="52"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="108" pos:column="7">values<pos:position pos:line="108" pos:column="13"/></name><index pos:line="108" pos:column="13">[<expr><literal type="number" pos:line="108" pos:column="14">0<pos:position pos:line="108" pos:column="15"/></literal></expr>]<pos:position pos:line="108" pos:column="16"/></index></name><operator pos:line="108" pos:column="16">.<pos:position pos:line="108" pos:column="17"/></operator><name pos:line="108" pos:column="17">gauge<pos:position pos:line="108" pos:column="22"/></name> <operator pos:line="108" pos:column="23">=<pos:position pos:line="108" pos:column="24"/></operator> <operator pos:line="108" pos:column="25">(<pos:position pos:line="108" pos:column="26"/></operator><name pos:line="108" pos:column="26">gauge_t<pos:position pos:line="108" pos:column="33"/></name><operator pos:line="108" pos:column="33">)<pos:position pos:line="108" pos:column="34"/></operator> <name><name pos:line="108" pos:column="35">metric<pos:position pos:line="108" pos:column="41"/></name><operator pos:line="108" pos:column="41">-&gt;<pos:position pos:line="108" pos:column="46"/></operator><name pos:line="108" pos:column="43">value<pos:position pos:line="108" pos:column="48"/></name></name></expr>;<pos:position pos:line="108" pos:column="49"/></expr_stmt>
  }<pos:position pos:line="109" pos:column="4"/></block></else></if>

  <return pos:line="111" pos:column="3">return <expr><operator pos:line="111" pos:column="10">(<pos:position pos:line="111" pos:column="11"/></operator><call><name pos:line="111" pos:column="11">plugin_dispatch_values<pos:position pos:line="111" pos:column="33"/></name> <argument_list pos:line="111" pos:column="34">(<argument><expr><operator pos:line="111" pos:column="35">&amp;<pos:position pos:line="111" pos:column="40"/></operator><name pos:line="111" pos:column="36">vl<pos:position pos:line="111" pos:column="38"/></name></expr></argument>)<pos:position pos:line="111" pos:column="39"/></argument_list></call><operator pos:line="111" pos:column="39">)<pos:position pos:line="111" pos:column="40"/></operator></expr>;<pos:position pos:line="111" pos:column="41"/></return>
}<pos:position pos:line="112" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1013_collectd-4.10.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dns_config<pos:position pos:line="1" pos:column="22"/></name> <parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">key<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">value<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><call><name pos:line="3" pos:column="13">strcasecmp<pos:position pos:line="3" pos:column="23"/></name> <argument_list pos:line="3" pos:column="24">(<argument><expr><name pos:line="3" pos:column="25">key<pos:position pos:line="3" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="30">"Interface"<pos:position pos:line="3" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="42"/></argument_list></call> <operator pos:line="3" pos:column="43">==<pos:position pos:line="3" pos:column="45"/></operator> <literal type="number" pos:line="3" pos:column="46">0<pos:position pos:line="3" pos:column="47"/></literal></expr>)<pos:position pos:line="3" pos:column="48"/></condition><then pos:line="3" pos:column="48">
	<block pos:line="4" pos:column="9">{
		<if pos:line="5" pos:column="17">if <condition pos:line="5" pos:column="20">(<expr><name pos:line="5" pos:column="21">pcap_device<pos:position pos:line="5" pos:column="32"/></name> <operator pos:line="5" pos:column="33">!=<pos:position pos:line="5" pos:column="35"/></operator> <name pos:line="5" pos:column="36">NULL<pos:position pos:line="5" pos:column="40"/></name></expr>)<pos:position pos:line="5" pos:column="41"/></condition><then pos:line="5" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="25">free<pos:position pos:line="6" pos:column="29"/></name> <argument_list pos:line="6" pos:column="30">(<argument><expr><name pos:line="6" pos:column="31">pcap_device<pos:position pos:line="6" pos:column="42"/></name></expr></argument>)<pos:position pos:line="6" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="44"/></expr_stmt></block></then></if>
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><operator pos:line="7" pos:column="21">(<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="22">pcap_device<pos:position pos:line="7" pos:column="33"/></name> <operator pos:line="7" pos:column="34">=<pos:position pos:line="7" pos:column="35"/></operator> <call><name pos:line="7" pos:column="36">strdup<pos:position pos:line="7" pos:column="42"/></name> <argument_list pos:line="7" pos:column="43">(<argument><expr><name pos:line="7" pos:column="44">value<pos:position pos:line="7" pos:column="49"/></name></expr></argument>)<pos:position pos:line="7" pos:column="50"/></argument_list></call><operator pos:line="7" pos:column="50">)<pos:position pos:line="7" pos:column="51"/></operator> <operator pos:line="7" pos:column="52">==<pos:position pos:line="7" pos:column="54"/></operator> <name pos:line="7" pos:column="55">NULL<pos:position pos:line="7" pos:column="59"/></name></expr>)<pos:position pos:line="7" pos:column="60"/></condition><then pos:line="7" pos:column="60">
			<block type="pseudo"><return pos:line="8" pos:column="25">return <expr><operator pos:line="8" pos:column="32">(<pos:position pos:line="8" pos:column="33"/></operator><literal type="number" pos:line="8" pos:column="33">1<pos:position pos:line="8" pos:column="34"/></literal><operator pos:line="8" pos:column="34">)<pos:position pos:line="8" pos:column="35"/></operator></expr>;<pos:position pos:line="8" pos:column="36"/></return></block></then></if>
	}<pos:position pos:line="9" pos:column="10"/></block></then>
	<elseif pos:line="10" pos:column="9">else <if pos:line="10" pos:column="14">if <condition pos:line="10" pos:column="17">(<expr><call><name pos:line="10" pos:column="18">strcasecmp<pos:position pos:line="10" pos:column="28"/></name> <argument_list pos:line="10" pos:column="29">(<argument><expr><name pos:line="10" pos:column="30">key<pos:position pos:line="10" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="35">"IgnoreSource"<pos:position pos:line="10" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="50"/></argument_list></call> <operator pos:line="10" pos:column="51">==<pos:position pos:line="10" pos:column="53"/></operator> <literal type="number" pos:line="10" pos:column="54">0<pos:position pos:line="10" pos:column="55"/></literal></expr>)<pos:position pos:line="10" pos:column="56"/></condition><then pos:line="10" pos:column="56">
	<block pos:line="11" pos:column="9">{
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name pos:line="12" pos:column="21">value<pos:position pos:line="12" pos:column="26"/></name> <operator pos:line="12" pos:column="27">!=<pos:position pos:line="12" pos:column="29"/></operator> <name pos:line="12" pos:column="30">NULL<pos:position pos:line="12" pos:column="34"/></name></expr>)<pos:position pos:line="12" pos:column="35"/></condition><then pos:line="12" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="25">ignore_list_add_name<pos:position pos:line="13" pos:column="45"/></name> <argument_list pos:line="13" pos:column="46">(<argument><expr><name pos:line="13" pos:column="47">value<pos:position pos:line="13" pos:column="52"/></name></expr></argument>)<pos:position pos:line="13" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="54"/></expr_stmt></block></then></if>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="15" pos:column="9">else <if pos:line="15" pos:column="14">if <condition pos:line="15" pos:column="17">(<expr><call><name pos:line="15" pos:column="18">strcasecmp<pos:position pos:line="15" pos:column="28"/></name> <argument_list pos:line="15" pos:column="29">(<argument><expr><name pos:line="15" pos:column="30">key<pos:position pos:line="15" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="35">"SelectNumericQueryTypes"<pos:position pos:line="15" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="61"/></argument_list></call> <operator pos:line="15" pos:column="62">==<pos:position pos:line="15" pos:column="64"/></operator> <literal type="number" pos:line="15" pos:column="65">0<pos:position pos:line="15" pos:column="66"/></literal></expr>)<pos:position pos:line="15" pos:column="67"/></condition><then pos:line="15" pos:column="67">
	<block pos:line="16" pos:column="9">{
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><operator pos:line="17" pos:column="21">(<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="22">value<pos:position pos:line="17" pos:column="27"/></name> <operator pos:line="17" pos:column="28">!=<pos:position pos:line="17" pos:column="30"/></operator> <name pos:line="17" pos:column="31">NULL<pos:position pos:line="17" pos:column="35"/></name><operator pos:line="17" pos:column="35">)<pos:position pos:line="17" pos:column="36"/></operator> <operator pos:line="17" pos:column="37">&amp;&amp;<pos:position pos:line="17" pos:column="47"/></operator> <call><name pos:line="17" pos:column="40">IS_FALSE<pos:position pos:line="17" pos:column="48"/></name> <argument_list pos:line="17" pos:column="49">(<argument><expr><name pos:line="17" pos:column="50">value<pos:position pos:line="17" pos:column="55"/></name></expr></argument>)<pos:position pos:line="17" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="57"/></condition><then pos:line="17" pos:column="57">
			<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="25">select_numeric_qtype<pos:position pos:line="18" pos:column="45"/></name> <operator pos:line="18" pos:column="46">=<pos:position pos:line="18" pos:column="47"/></operator> <literal type="number" pos:line="18" pos:column="48">0<pos:position pos:line="18" pos:column="49"/></literal></expr>;<pos:position pos:line="18" pos:column="50"/></expr_stmt></block></then>
		<else pos:line="19" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="25">select_numeric_qtype<pos:position pos:line="20" pos:column="45"/></name> <operator pos:line="20" pos:column="46">=<pos:position pos:line="20" pos:column="47"/></operator> <literal type="number" pos:line="20" pos:column="48">1<pos:position pos:line="20" pos:column="49"/></literal></expr>;<pos:position pos:line="20" pos:column="50"/></expr_stmt></block></else></if>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if></elseif>
	<else pos:line="22" pos:column="9">else
	<block pos:line="23" pos:column="9">{
		<return pos:line="24" pos:column="17">return <expr><operator pos:line="24" pos:column="24">(<pos:position pos:line="24" pos:column="25"/></operator><operator pos:line="24" pos:column="25">-<pos:position pos:line="24" pos:column="26"/></operator><literal type="number" pos:line="24" pos:column="26">1<pos:position pos:line="24" pos:column="27"/></literal><operator pos:line="24" pos:column="27">)<pos:position pos:line="24" pos:column="28"/></operator></expr>;<pos:position pos:line="24" pos:column="29"/></return>
	}<pos:position pos:line="25" pos:column="10"/></block></else></if>

	<return pos:line="27" pos:column="9">return <expr><operator pos:line="27" pos:column="16">(<pos:position pos:line="27" pos:column="17"/></operator><literal type="number" pos:line="27" pos:column="17">0<pos:position pos:line="27" pos:column="18"/></literal><operator pos:line="27" pos:column="18">)<pos:position pos:line="27" pos:column="19"/></operator></expr>;<pos:position pos:line="27" pos:column="20"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

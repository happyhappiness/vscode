<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_452_collectd-4.2.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">size_t<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">nginx_curl_callback<pos:position pos:line="1" pos:column="34"/></name> <parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">void<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">buf<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">size_t<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">size<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">size_t<pos:position pos:line="1" pos:column="66"/></name></type> <name pos:line="1" pos:column="67">nmemb<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="74">void<pos:position pos:line="1" pos:column="78"/></name> <modifier pos:line="1" pos:column="79">*<pos:position pos:line="1" pos:column="80"/></modifier></type><name pos:line="1" pos:column="80">stream<pos:position pos:line="1" pos:column="86"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="87"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">len<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><name pos:line="3" pos:column="16">size<pos:position pos:line="3" pos:column="20"/></name> <operator pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></operator> <name pos:line="3" pos:column="23">nmemb<pos:position pos:line="3" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><operator pos:line="5" pos:column="7">(<pos:position pos:line="5" pos:column="8"/></operator><name pos:line="5" pos:column="8">nginx_buffer_len<pos:position pos:line="5" pos:column="24"/></name> <operator pos:line="5" pos:column="25">+<pos:position pos:line="5" pos:column="26"/></operator> <name pos:line="5" pos:column="27">len<pos:position pos:line="5" pos:column="30"/></name><operator pos:line="5" pos:column="30">)<pos:position pos:line="5" pos:column="31"/></operator> <operator pos:line="5" pos:column="32">&gt;=<pos:position pos:line="5" pos:column="37"/></operator> <name pos:line="5" pos:column="35">ABUFFER_SIZE<pos:position pos:line="5" pos:column="47"/></name></expr>)<pos:position pos:line="5" pos:column="48"/></condition><then pos:line="5" pos:column="48">
  <block pos:line="6" pos:column="3">{
    <expr_stmt><expr><name pos:line="7" pos:column="5">len<pos:position pos:line="7" pos:column="8"/></name> <operator pos:line="7" pos:column="9">=<pos:position pos:line="7" pos:column="10"/></operator> <operator pos:line="7" pos:column="11">(<pos:position pos:line="7" pos:column="12"/></operator><name pos:line="7" pos:column="12">ABUFFER_SIZE<pos:position pos:line="7" pos:column="24"/></name> <operator pos:line="7" pos:column="25">-<pos:position pos:line="7" pos:column="26"/></operator> <literal type="number" pos:line="7" pos:column="27">1<pos:position pos:line="7" pos:column="28"/></literal><operator pos:line="7" pos:column="28">)<pos:position pos:line="7" pos:column="29"/></operator> <operator pos:line="7" pos:column="30">-<pos:position pos:line="7" pos:column="31"/></operator> <name pos:line="7" pos:column="32">nginx_buffer_len<pos:position pos:line="7" pos:column="48"/></name></expr>;<pos:position pos:line="7" pos:column="49"/></expr_stmt>
  }<pos:position pos:line="8" pos:column="4"/></block></then></if>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">len<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">&lt;=<pos:position pos:line="10" pos:column="16"/></operator> <literal type="number" pos:line="10" pos:column="14">0<pos:position pos:line="10" pos:column="15"/></literal></expr>)<pos:position pos:line="10" pos:column="16"/></condition><then pos:line="10" pos:column="16">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><name pos:line="11" pos:column="13">len<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">)<pos:position pos:line="11" pos:column="17"/></operator></expr>;<pos:position pos:line="11" pos:column="18"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="13" pos:column="3">memcpy<pos:position pos:line="13" pos:column="9"/></name> <argument_list pos:line="13" pos:column="10">(<argument><expr><name pos:line="13" pos:column="11">nginx_buffer<pos:position pos:line="13" pos:column="23"/></name> <operator pos:line="13" pos:column="24">+<pos:position pos:line="13" pos:column="25"/></operator> <name pos:line="13" pos:column="26">nginx_buffer_len<pos:position pos:line="13" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="44">(<pos:position pos:line="13" pos:column="45"/></operator><name pos:line="13" pos:column="45">char<pos:position pos:line="13" pos:column="49"/></name> <operator pos:line="13" pos:column="50">*<pos:position pos:line="13" pos:column="51"/></operator><operator pos:line="13" pos:column="51">)<pos:position pos:line="13" pos:column="52"/></operator> <name pos:line="13" pos:column="53">buf<pos:position pos:line="13" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="58">len<pos:position pos:line="13" pos:column="61"/></name></expr></argument>)<pos:position pos:line="13" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="63"/></expr_stmt>
  <expr_stmt><expr><name pos:line="14" pos:column="3">nginx_buffer_len<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">+=<pos:position pos:line="14" pos:column="22"/></operator> <name pos:line="14" pos:column="23">len<pos:position pos:line="14" pos:column="26"/></name></expr>;<pos:position pos:line="14" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="15" pos:column="3">nginx_buffer<pos:position pos:line="15" pos:column="15"/></name><index pos:line="15" pos:column="15">[<expr><name pos:line="15" pos:column="16">nginx_buffer_len<pos:position pos:line="15" pos:column="32"/></name></expr>]<pos:position pos:line="15" pos:column="33"/></index></name> <operator pos:line="15" pos:column="34">=<pos:position pos:line="15" pos:column="35"/></operator> <literal type="char" pos:line="15" pos:column="36">'\0'<pos:position pos:line="15" pos:column="40"/></literal></expr>;<pos:position pos:line="15" pos:column="41"/></expr_stmt>

  <return pos:line="17" pos:column="3">return <expr><operator pos:line="17" pos:column="10">(<pos:position pos:line="17" pos:column="11"/></operator><name pos:line="17" pos:column="11">len<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">)<pos:position pos:line="17" pos:column="15"/></operator></expr>;<pos:position pos:line="17" pos:column="16"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

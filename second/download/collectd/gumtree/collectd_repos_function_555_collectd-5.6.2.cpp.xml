<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_555_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">MPL3115_read<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">double<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">pressure<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">double<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">temperature<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list> <block pos:line="1" pos:column="64">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">__s32<pos:position pos:line="2" pos:column="8"/></name></type> <name pos:line="2" pos:column="9">res<pos:position pos:line="2" pos:column="12"/></name></decl>;<pos:position pos:line="2" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">__s32<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">ctrl<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">__u8<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">data<pos:position pos:line="4" pos:column="12"/></name><index pos:line="4" pos:column="12">[<expr><name pos:line="4" pos:column="13">MPL3115_NUM_CONV_VALS<pos:position pos:line="4" pos:column="34"/></name></expr>]<pos:position pos:line="4" pos:column="35"/></index></name></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">long<pos:position pos:line="5" pos:column="7"/></name> <name pos:line="5" pos:column="8">int<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">tmp_value<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><literal type="number" pos:line="5" pos:column="24">0<pos:position pos:line="5" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">errbuf<pos:position pos:line="6" pos:column="14"/></name><index pos:line="6" pos:column="14">[<expr><literal type="number" pos:line="6" pos:column="15">1024<pos:position pos:line="6" pos:column="19"/></literal></expr>]<pos:position pos:line="6" pos:column="20"/></index></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>

  <comment type="block" pos:line="8" pos:column="3">/* Set Active - activate the device from standby */</comment>
  <expr_stmt><expr><name pos:line="9" pos:column="3">res<pos:position pos:line="9" pos:column="6"/></name> <operator pos:line="9" pos:column="7">=<pos:position pos:line="9" pos:column="8"/></operator> <call><name pos:line="9" pos:column="9">i2c_smbus_read_byte_data<pos:position pos:line="9" pos:column="33"/></name><argument_list pos:line="9" pos:column="33">(<argument><expr><name pos:line="9" pos:column="34">i2c_bus_fd<pos:position pos:line="9" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="46">MPL3115_REG_CTRL_REG1<pos:position pos:line="9" pos:column="67"/></name></expr></argument>)<pos:position pos:line="9" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="69"/></expr_stmt>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">res<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">&lt;<pos:position pos:line="10" pos:column="15"/></operator> <literal type="number" pos:line="10" pos:column="13">0<pos:position pos:line="10" pos:column="14"/></literal></expr>)<pos:position pos:line="10" pos:column="15"/></condition><then pos:line="10" pos:column="15"> <block pos:line="10" pos:column="16">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">ERROR<pos:position pos:line="11" pos:column="10"/></name><argument_list pos:line="11" pos:column="10">(<argument><expr><literal type="string" pos:line="11" pos:column="11">"barometer: MPL3115_read - cannot read CTRL_REG1: %s"<pos:position pos:line="11" pos:column="64"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="12" pos:column="11">sstrerror<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><name pos:line="12" pos:column="21">errno<pos:position pos:line="12" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="28">errbuf<pos:position pos:line="12" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="36">sizeof<argument_list pos:line="12" pos:column="42">(<argument><expr><name pos:line="12" pos:column="43">errbuf<pos:position pos:line="12" pos:column="49"/></name></expr></argument>)<pos:position pos:line="12" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="53"/></expr_stmt>
    <return pos:line="13" pos:column="5">return <expr><literal type="number" pos:line="13" pos:column="12">1<pos:position pos:line="13" pos:column="13"/></literal></expr>;<pos:position pos:line="13" pos:column="14"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="15" pos:column="3">ctrl<pos:position pos:line="15" pos:column="7"/></name> <operator pos:line="15" pos:column="8">=<pos:position pos:line="15" pos:column="9"/></operator> <name pos:line="15" pos:column="10">res<pos:position pos:line="15" pos:column="13"/></name></expr>;<pos:position pos:line="15" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><name pos:line="16" pos:column="3">res<pos:position pos:line="16" pos:column="6"/></name> <operator pos:line="16" pos:column="7">=<pos:position pos:line="16" pos:column="8"/></operator> <call><name pos:line="16" pos:column="9">i2c_smbus_write_byte_data<pos:position pos:line="16" pos:column="34"/></name><argument_list pos:line="16" pos:column="34">(<argument><expr><name pos:line="16" pos:column="35">i2c_bus_fd<pos:position pos:line="16" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="47">MPL3115_REG_CTRL_REG1<pos:position pos:line="16" pos:column="68"/></name></expr></argument>,
                                  <argument><expr><name pos:line="17" pos:column="35">ctrl<pos:position pos:line="17" pos:column="39"/></name> <operator pos:line="17" pos:column="40">|<pos:position pos:line="17" pos:column="41"/></operator> <name pos:line="17" pos:column="42">MPL3115_CTRL_REG1_SBYB<pos:position pos:line="17" pos:column="64"/></name></expr></argument>)<pos:position pos:line="17" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="66"/></expr_stmt>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name pos:line="18" pos:column="7">res<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">&lt;<pos:position pos:line="18" pos:column="15"/></operator> <literal type="number" pos:line="18" pos:column="13">0<pos:position pos:line="18" pos:column="14"/></literal></expr>)<pos:position pos:line="18" pos:column="15"/></condition><then pos:line="18" pos:column="15"> <block pos:line="18" pos:column="16">{
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">ERROR<pos:position pos:line="19" pos:column="10"/></name><argument_list pos:line="19" pos:column="10">(<argument><expr><literal type="string" pos:line="19" pos:column="11">"barometer: MPL3115_read - problem activating: %s"<pos:position pos:line="19" pos:column="61"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="20" pos:column="11">sstrerror<pos:position pos:line="20" pos:column="20"/></name><argument_list pos:line="20" pos:column="20">(<argument><expr><name pos:line="20" pos:column="21">errno<pos:position pos:line="20" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="28">errbuf<pos:position pos:line="20" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="36">sizeof<argument_list pos:line="20" pos:column="42">(<argument><expr><name pos:line="20" pos:column="43">errbuf<pos:position pos:line="20" pos:column="49"/></name></expr></argument>)<pos:position pos:line="20" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="53"/></expr_stmt>
    <return pos:line="21" pos:column="5">return <expr><literal type="number" pos:line="21" pos:column="12">1<pos:position pos:line="21" pos:column="13"/></literal></expr>;<pos:position pos:line="21" pos:column="14"/></return>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="24" pos:column="3">/* base sleep is 5ms x OST */</comment>
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">usleep<pos:position pos:line="25" pos:column="9"/></name><argument_list pos:line="25" pos:column="9">(<argument><expr><literal type="number" pos:line="25" pos:column="10">5000<pos:position pos:line="25" pos:column="14"/></literal> <operator pos:line="25" pos:column="15">*<pos:position pos:line="25" pos:column="16"/></operator> <name pos:line="25" pos:column="17">config_oversample<pos:position pos:line="25" pos:column="34"/></name></expr></argument>)<pos:position pos:line="25" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="36"/></expr_stmt>

  <comment type="block" pos:line="27" pos:column="3">/* check the flags/status if ready */</comment>
  <expr_stmt><expr><name pos:line="28" pos:column="3">res<pos:position pos:line="28" pos:column="6"/></name> <operator pos:line="28" pos:column="7">=<pos:position pos:line="28" pos:column="8"/></operator> <call><name pos:line="28" pos:column="9">i2c_smbus_read_byte_data<pos:position pos:line="28" pos:column="33"/></name><argument_list pos:line="28" pos:column="33">(<argument><expr><name pos:line="28" pos:column="34">i2c_bus_fd<pos:position pos:line="28" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="46">MPL3115_REG_STATUS<pos:position pos:line="28" pos:column="64"/></name></expr></argument>)<pos:position pos:line="28" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="66"/></expr_stmt>
  <if pos:line="29" pos:column="3">if <condition pos:line="29" pos:column="6">(<expr><name pos:line="29" pos:column="7">res<pos:position pos:line="29" pos:column="10"/></name> <operator pos:line="29" pos:column="11">&lt;<pos:position pos:line="29" pos:column="15"/></operator> <literal type="number" pos:line="29" pos:column="13">0<pos:position pos:line="29" pos:column="14"/></literal></expr>)<pos:position pos:line="29" pos:column="15"/></condition><then pos:line="29" pos:column="15"> <block pos:line="29" pos:column="16">{
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">ERROR<pos:position pos:line="30" pos:column="10"/></name><argument_list pos:line="30" pos:column="10">(<argument><expr><literal type="string" pos:line="30" pos:column="11">"barometer: MPL3115_read - cannot read status register: %s"<pos:position pos:line="30" pos:column="70"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="31" pos:column="11">sstrerror<pos:position pos:line="31" pos:column="20"/></name><argument_list pos:line="31" pos:column="20">(<argument><expr><name pos:line="31" pos:column="21">errno<pos:position pos:line="31" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="28">errbuf<pos:position pos:line="31" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="36">sizeof<argument_list pos:line="31" pos:column="42">(<argument><expr><name pos:line="31" pos:column="43">errbuf<pos:position pos:line="31" pos:column="49"/></name></expr></argument>)<pos:position pos:line="31" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="31" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="53"/></expr_stmt>
    <return pos:line="32" pos:column="5">return <expr><literal type="number" pos:line="32" pos:column="12">1<pos:position pos:line="32" pos:column="13"/></literal></expr>;<pos:position pos:line="32" pos:column="14"/></return>
  }<pos:position pos:line="33" pos:column="4"/></block></then></if>

  <while pos:line="35" pos:column="3">while <condition pos:line="35" pos:column="9">(<expr><operator pos:line="35" pos:column="10">(<pos:position pos:line="35" pos:column="11"/></operator><name pos:line="35" pos:column="11">res<pos:position pos:line="35" pos:column="14"/></name> <operator pos:line="35" pos:column="15">&amp;<pos:position pos:line="35" pos:column="20"/></operator> <name pos:line="35" pos:column="17">MPL3115_DR_STATUS_DR<pos:position pos:line="35" pos:column="37"/></name><operator pos:line="35" pos:column="37">)<pos:position pos:line="35" pos:column="38"/></operator> <operator pos:line="35" pos:column="39">!=<pos:position pos:line="35" pos:column="41"/></operator> <name pos:line="35" pos:column="42">MPL3115_DR_STATUS_DR<pos:position pos:line="35" pos:column="62"/></name></expr>)<pos:position pos:line="35" pos:column="63"/></condition> <block pos:line="35" pos:column="64">{
    <comment type="block" pos:line="36" pos:column="5">/* try some extra sleep... */</comment>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">usleep<pos:position pos:line="37" pos:column="11"/></name><argument_list pos:line="37" pos:column="11">(<argument><expr><literal type="number" pos:line="37" pos:column="12">10000<pos:position pos:line="37" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="19"/></expr_stmt>

    <comment type="block" pos:line="39" pos:column="5">/* ... and repeat the check. The conversion has to finish sooner or later.
     */</comment>
    <expr_stmt><expr><name pos:line="41" pos:column="5">res<pos:position pos:line="41" pos:column="8"/></name> <operator pos:line="41" pos:column="9">=<pos:position pos:line="41" pos:column="10"/></operator> <call><name pos:line="41" pos:column="11">i2c_smbus_read_byte_data<pos:position pos:line="41" pos:column="35"/></name><argument_list pos:line="41" pos:column="35">(<argument><expr><name pos:line="41" pos:column="36">i2c_bus_fd<pos:position pos:line="41" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="48">MPL3115_REG_STATUS<pos:position pos:line="41" pos:column="66"/></name></expr></argument>)<pos:position pos:line="41" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="68"/></expr_stmt>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name pos:line="42" pos:column="9">res<pos:position pos:line="42" pos:column="12"/></name> <operator pos:line="42" pos:column="13">&lt;<pos:position pos:line="42" pos:column="17"/></operator> <literal type="number" pos:line="42" pos:column="15">0<pos:position pos:line="42" pos:column="16"/></literal></expr>)<pos:position pos:line="42" pos:column="17"/></condition><then pos:line="42" pos:column="17"> <block pos:line="42" pos:column="18">{
      <expr_stmt><expr><call><name pos:line="43" pos:column="7">ERROR<pos:position pos:line="43" pos:column="12"/></name><argument_list pos:line="43" pos:column="12">(<argument><expr><literal type="string" pos:line="43" pos:column="13">"barometer: MPL3115_read - cannot read status register: %s"<pos:position pos:line="43" pos:column="72"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="44" pos:column="13">sstrerror<pos:position pos:line="44" pos:column="22"/></name><argument_list pos:line="44" pos:column="22">(<argument><expr><name pos:line="44" pos:column="23">errno<pos:position pos:line="44" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="30">errbuf<pos:position pos:line="44" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="38">sizeof<argument_list pos:line="44" pos:column="44">(<argument><expr><name pos:line="44" pos:column="45">errbuf<pos:position pos:line="44" pos:column="51"/></name></expr></argument>)<pos:position pos:line="44" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="44" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="55"/></expr_stmt>
      <return pos:line="45" pos:column="7">return <expr><literal type="number" pos:line="45" pos:column="14">1<pos:position pos:line="45" pos:column="15"/></literal></expr>;<pos:position pos:line="45" pos:column="16"/></return>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>
  }<pos:position pos:line="47" pos:column="4"/></block></while>

  <comment type="block" pos:line="49" pos:column="3">/* Now read all the data in one block. There is address autoincrement. */</comment>
  <expr_stmt><expr><name pos:line="50" pos:column="3">res<pos:position pos:line="50" pos:column="6"/></name> <operator pos:line="50" pos:column="7">=<pos:position pos:line="50" pos:column="8"/></operator> <call><name pos:line="50" pos:column="9">i2c_smbus_read_i2c_block_data<pos:position pos:line="50" pos:column="38"/></name><argument_list pos:line="50" pos:column="38">(<argument><expr><name pos:line="50" pos:column="39">i2c_bus_fd<pos:position pos:line="50" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="51">MPL3115_REG_OUT_P_MSB<pos:position pos:line="50" pos:column="72"/></name></expr></argument>,
                                      <argument><expr><name pos:line="51" pos:column="39">MPL3115_NUM_CONV_VALS<pos:position pos:line="51" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="62">data<pos:position pos:line="51" pos:column="66"/></name></expr></argument>)<pos:position pos:line="51" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="68"/></expr_stmt>
  <if pos:line="52" pos:column="3">if <condition pos:line="52" pos:column="6">(<expr><name pos:line="52" pos:column="7">res<pos:position pos:line="52" pos:column="10"/></name> <operator pos:line="52" pos:column="11">&lt;<pos:position pos:line="52" pos:column="15"/></operator> <literal type="number" pos:line="52" pos:column="13">0<pos:position pos:line="52" pos:column="14"/></literal></expr>)<pos:position pos:line="52" pos:column="15"/></condition><then pos:line="52" pos:column="15"> <block pos:line="52" pos:column="16">{
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">ERROR<pos:position pos:line="53" pos:column="10"/></name><argument_list pos:line="53" pos:column="10">(<argument><expr><literal type="string" pos:line="53" pos:column="11">"barometer: MPL3115_read - cannot read data registers: %s"<pos:position pos:line="53" pos:column="69"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="54" pos:column="11">sstrerror<pos:position pos:line="54" pos:column="20"/></name><argument_list pos:line="54" pos:column="20">(<argument><expr><name pos:line="54" pos:column="21">errno<pos:position pos:line="54" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="28">errbuf<pos:position pos:line="54" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="54" pos:column="36">sizeof<argument_list pos:line="54" pos:column="42">(<argument><expr><name pos:line="54" pos:column="43">errbuf<pos:position pos:line="54" pos:column="49"/></name></expr></argument>)<pos:position pos:line="54" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="54" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="54" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="53"/></expr_stmt>
    <return pos:line="55" pos:column="5">return <expr><literal type="number" pos:line="55" pos:column="12">1<pos:position pos:line="55" pos:column="13"/></literal></expr>;<pos:position pos:line="55" pos:column="14"/></return>
  }<pos:position pos:line="56" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="58" pos:column="3">tmp_value<pos:position pos:line="58" pos:column="12"/></name> <operator pos:line="58" pos:column="13">=<pos:position pos:line="58" pos:column="14"/></operator> <operator pos:line="58" pos:column="15">(<pos:position pos:line="58" pos:column="16"/></operator><name><name pos:line="58" pos:column="16">data<pos:position pos:line="58" pos:column="20"/></name><index pos:line="58" pos:column="20">[<expr><literal type="number" pos:line="58" pos:column="21">0<pos:position pos:line="58" pos:column="22"/></literal></expr>]<pos:position pos:line="58" pos:column="23"/></index></name> <operator pos:line="58" pos:column="24">&lt;&lt;<pos:position pos:line="58" pos:column="32"/></operator> <literal type="number" pos:line="58" pos:column="27">16<pos:position pos:line="58" pos:column="29"/></literal><operator pos:line="58" pos:column="29">)<pos:position pos:line="58" pos:column="30"/></operator> <operator pos:line="58" pos:column="31">|<pos:position pos:line="58" pos:column="32"/></operator> <operator pos:line="58" pos:column="33">(<pos:position pos:line="58" pos:column="34"/></operator><name><name pos:line="58" pos:column="34">data<pos:position pos:line="58" pos:column="38"/></name><index pos:line="58" pos:column="38">[<expr><literal type="number" pos:line="58" pos:column="39">1<pos:position pos:line="58" pos:column="40"/></literal></expr>]<pos:position pos:line="58" pos:column="41"/></index></name> <operator pos:line="58" pos:column="42">&lt;&lt;<pos:position pos:line="58" pos:column="50"/></operator> <literal type="number" pos:line="58" pos:column="45">8<pos:position pos:line="58" pos:column="46"/></literal><operator pos:line="58" pos:column="46">)<pos:position pos:line="58" pos:column="47"/></operator> <operator pos:line="58" pos:column="48">|<pos:position pos:line="58" pos:column="49"/></operator> <name><name pos:line="58" pos:column="50">data<pos:position pos:line="58" pos:column="54"/></name><index pos:line="58" pos:column="54">[<expr><literal type="number" pos:line="58" pos:column="55">2<pos:position pos:line="58" pos:column="56"/></literal></expr>]<pos:position pos:line="58" pos:column="57"/></index></name></expr>;<pos:position pos:line="58" pos:column="58"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="59" pos:column="3">*<pos:position pos:line="59" pos:column="4"/></operator><name pos:line="59" pos:column="4">pressure<pos:position pos:line="59" pos:column="12"/></name> <operator pos:line="59" pos:column="13">=<pos:position pos:line="59" pos:column="14"/></operator> <operator pos:line="59" pos:column="15">(<pos:position pos:line="59" pos:column="16"/></operator><operator pos:line="59" pos:column="16">(<pos:position pos:line="59" pos:column="17"/></operator><name pos:line="59" pos:column="17">double<pos:position pos:line="59" pos:column="23"/></name><operator pos:line="59" pos:column="23">)<pos:position pos:line="59" pos:column="24"/></operator><name pos:line="59" pos:column="24">tmp_value<pos:position pos:line="59" pos:column="33"/></name><operator pos:line="59" pos:column="33">)<pos:position pos:line="59" pos:column="34"/></operator> <operator pos:line="59" pos:column="35">/<pos:position pos:line="59" pos:column="36"/></operator> <literal type="number" pos:line="59" pos:column="37">4.0<pos:position pos:line="59" pos:column="40"/></literal> <operator pos:line="59" pos:column="41">/<pos:position pos:line="59" pos:column="42"/></operator> <literal type="number" pos:line="59" pos:column="43">16.0<pos:position pos:line="59" pos:column="47"/></literal> <operator pos:line="59" pos:column="48">/<pos:position pos:line="59" pos:column="49"/></operator> <literal type="number" pos:line="59" pos:column="50">100.0<pos:position pos:line="59" pos:column="55"/></literal></expr>;<pos:position pos:line="59" pos:column="56"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="60" pos:column="3">DEBUG<pos:position pos:line="60" pos:column="8"/></name><argument_list pos:line="60" pos:column="8">(<argument><expr><literal type="string" pos:line="60" pos:column="9">"barometer: MPL3115_read - absolute pressure = %lf hPa"<pos:position pos:line="60" pos:column="64"/></literal></expr></argument>, <argument><expr><operator pos:line="60" pos:column="66">*<pos:position pos:line="60" pos:column="67"/></operator><name pos:line="60" pos:column="67">pressure<pos:position pos:line="60" pos:column="75"/></name></expr></argument>)<pos:position pos:line="60" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="77"/></expr_stmt>

  <if pos:line="62" pos:column="3">if <condition pos:line="62" pos:column="6">(<expr><name><name pos:line="62" pos:column="7">data<pos:position pos:line="62" pos:column="11"/></name><index pos:line="62" pos:column="11">[<expr><literal type="number" pos:line="62" pos:column="12">3<pos:position pos:line="62" pos:column="13"/></literal></expr>]<pos:position pos:line="62" pos:column="14"/></index></name> <operator pos:line="62" pos:column="15">&gt;<pos:position pos:line="62" pos:column="19"/></operator> <literal type="number" pos:line="62" pos:column="17">0x7F<pos:position pos:line="62" pos:column="21"/></literal></expr>)<pos:position pos:line="62" pos:column="22"/></condition><then pos:line="62" pos:column="22"> <block pos:line="62" pos:column="23">{
    <expr_stmt><expr><name><name pos:line="63" pos:column="5">data<pos:position pos:line="63" pos:column="9"/></name><index pos:line="63" pos:column="9">[<expr><literal type="number" pos:line="63" pos:column="10">3<pos:position pos:line="63" pos:column="11"/></literal></expr>]<pos:position pos:line="63" pos:column="12"/></index></name> <operator pos:line="63" pos:column="13">=<pos:position pos:line="63" pos:column="14"/></operator> <operator pos:line="63" pos:column="15">~<pos:position pos:line="63" pos:column="16"/></operator><name><name pos:line="63" pos:column="16">data<pos:position pos:line="63" pos:column="20"/></name><index pos:line="63" pos:column="20">[<expr><literal type="number" pos:line="63" pos:column="21">3<pos:position pos:line="63" pos:column="22"/></literal></expr>]<pos:position pos:line="63" pos:column="23"/></index></name> <operator pos:line="63" pos:column="24">+<pos:position pos:line="63" pos:column="25"/></operator> <literal type="number" pos:line="63" pos:column="26">1<pos:position pos:line="63" pos:column="27"/></literal></expr>;<pos:position pos:line="63" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="64" pos:column="5">*<pos:position pos:line="64" pos:column="6"/></operator><name pos:line="64" pos:column="6">temperature<pos:position pos:line="64" pos:column="17"/></name> <operator pos:line="64" pos:column="18">=<pos:position pos:line="64" pos:column="19"/></operator> <name><name pos:line="64" pos:column="20">data<pos:position pos:line="64" pos:column="24"/></name><index pos:line="64" pos:column="24">[<expr><literal type="number" pos:line="64" pos:column="25">3<pos:position pos:line="64" pos:column="26"/></literal></expr>]<pos:position pos:line="64" pos:column="27"/></index></name></expr>;<pos:position pos:line="64" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="65" pos:column="5">*<pos:position pos:line="65" pos:column="6"/></operator><name pos:line="65" pos:column="6">temperature<pos:position pos:line="65" pos:column="17"/></name> <operator pos:line="65" pos:column="18">=<pos:position pos:line="65" pos:column="19"/></operator> <operator pos:line="65" pos:column="20">-<pos:position pos:line="65" pos:column="21"/></operator><operator pos:line="65" pos:column="21">*<pos:position pos:line="65" pos:column="22"/></operator><name pos:line="65" pos:column="22">temperature<pos:position pos:line="65" pos:column="33"/></name></expr>;<pos:position pos:line="65" pos:column="34"/></expr_stmt>
  }<pos:position pos:line="66" pos:column="4"/></block></then> <else pos:line="66" pos:column="5">else <block pos:line="66" pos:column="10">{
    <expr_stmt><expr><operator pos:line="67" pos:column="5">*<pos:position pos:line="67" pos:column="6"/></operator><name pos:line="67" pos:column="6">temperature<pos:position pos:line="67" pos:column="17"/></name> <operator pos:line="67" pos:column="18">=<pos:position pos:line="67" pos:column="19"/></operator> <name><name pos:line="67" pos:column="20">data<pos:position pos:line="67" pos:column="24"/></name><index pos:line="67" pos:column="24">[<expr><literal type="number" pos:line="67" pos:column="25">3<pos:position pos:line="67" pos:column="26"/></literal></expr>]<pos:position pos:line="67" pos:column="27"/></index></name></expr>;<pos:position pos:line="67" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="68" pos:column="4"/></block></else></if>

  <expr_stmt><expr><operator pos:line="70" pos:column="3">*<pos:position pos:line="70" pos:column="4"/></operator><name pos:line="70" pos:column="4">temperature<pos:position pos:line="70" pos:column="15"/></name> <operator pos:line="70" pos:column="16">+=<pos:position pos:line="70" pos:column="18"/></operator> <call pos:line="70" pos:column="19">(<name pos:line="70" pos:column="20">double<pos:position pos:line="70" pos:column="26"/></name>)<argument_list pos:line="70" pos:column="27">(<argument><expr><name><name pos:line="70" pos:column="28">data<pos:position pos:line="70" pos:column="32"/></name><index pos:line="70" pos:column="32">[<expr><literal type="number" pos:line="70" pos:column="33">4<pos:position pos:line="70" pos:column="34"/></literal></expr>]<pos:position pos:line="70" pos:column="35"/></index></name></expr></argument>)<pos:position pos:line="70" pos:column="36"/></argument_list></call> <operator pos:line="70" pos:column="37">/<pos:position pos:line="70" pos:column="38"/></operator> <literal type="number" pos:line="70" pos:column="39">256.0<pos:position pos:line="70" pos:column="44"/></literal></expr>;<pos:position pos:line="70" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="71" pos:column="3">DEBUG<pos:position pos:line="71" pos:column="8"/></name><argument_list pos:line="71" pos:column="8">(<argument><expr><literal type="string" pos:line="71" pos:column="9">"barometer: MPL3115_read - temperature = %lf C"<pos:position pos:line="71" pos:column="56"/></literal></expr></argument>, <argument><expr><operator pos:line="71" pos:column="58">*<pos:position pos:line="71" pos:column="59"/></operator><name pos:line="71" pos:column="59">temperature<pos:position pos:line="71" pos:column="70"/></name></expr></argument>)<pos:position pos:line="71" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="72"/></expr_stmt>

  <return pos:line="73" pos:column="3">return <expr><literal type="number" pos:line="73" pos:column="10">0<pos:position pos:line="73" pos:column="11"/></literal></expr>;<pos:position pos:line="73" pos:column="12"/></return>
}<pos:position pos:line="74" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_777_collectd-5.6.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">value_t<pos:position pos:line="1" pos:column="8"/></name></type> <name pos:line="1" pos:column="9">luaC_tovalue<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">lua_State<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">L<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">int<pos:position pos:line="1" pos:column="39"/></name></type> <name pos:line="1" pos:column="40">idx<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">int<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">ds_type<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list> <comment type="block" pos:line="1" pos:column="58">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">value_t<pos:position pos:line="3" pos:column="10"/></name></type> <name pos:line="3" pos:column="11">v<pos:position pos:line="3" pos:column="12"/></name> <init pos:line="3" pos:column="13">= <expr><block pos:line="3" pos:column="15">{ <expr><literal type="number" pos:line="3" pos:column="17">0<pos:position pos:line="3" pos:column="18"/></literal></expr> }<pos:position pos:line="3" pos:column="20"/></block></expr></init></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><operator pos:line="5" pos:column="7">!<pos:position pos:line="5" pos:column="8"/></operator><call><name pos:line="5" pos:column="8">lua_isnumber<pos:position pos:line="5" pos:column="20"/></name><argument_list pos:line="5" pos:column="20">(<argument><expr><name pos:line="5" pos:column="21">L<pos:position pos:line="5" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="24">idx<pos:position pos:line="5" pos:column="27"/></name></expr></argument>)<pos:position pos:line="5" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="29"/></condition><then pos:line="5" pos:column="29">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><operator pos:line="6" pos:column="12">(<pos:position pos:line="6" pos:column="13"/></operator><name pos:line="6" pos:column="13">v<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">)<pos:position pos:line="6" pos:column="15"/></operator></expr>;<pos:position pos:line="6" pos:column="16"/></return></block></then></if>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">ds_type<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">==<pos:position pos:line="8" pos:column="17"/></operator> <name pos:line="8" pos:column="18">DS_TYPE_GAUGE<pos:position pos:line="8" pos:column="31"/></name></expr>)<pos:position pos:line="8" pos:column="32"/></condition><then pos:line="8" pos:column="32">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="9" pos:column="5">v<pos:position pos:line="9" pos:column="6"/></name><operator pos:line="9" pos:column="6">.<pos:position pos:line="9" pos:column="7"/></operator><name pos:line="9" pos:column="7">gauge<pos:position pos:line="9" pos:column="12"/></name></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <operator pos:line="9" pos:column="15">(<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="16">gauge_t<pos:position pos:line="9" pos:column="23"/></name><operator pos:line="9" pos:column="23">)<pos:position pos:line="9" pos:column="24"/></operator><call><name pos:line="9" pos:column="24">lua_tonumber<pos:position pos:line="9" pos:column="36"/></name><argument_list pos:line="9" pos:column="36">(<argument><expr><name pos:line="9" pos:column="37">L<pos:position pos:line="9" pos:column="38"/></name></expr></argument>, <comment type="block" pos:line="9" pos:column="40">/* stack pos = */</comment> <argument><expr><operator pos:line="9" pos:column="58">-<pos:position pos:line="9" pos:column="59"/></operator><literal type="number" pos:line="9" pos:column="59">1<pos:position pos:line="9" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="62"/></expr_stmt></block></then>
  <elseif pos:line="10" pos:column="3">else <if pos:line="10" pos:column="8">if <condition pos:line="10" pos:column="11">(<expr><name pos:line="10" pos:column="12">ds_type<pos:position pos:line="10" pos:column="19"/></name> <operator pos:line="10" pos:column="20">==<pos:position pos:line="10" pos:column="22"/></operator> <name pos:line="10" pos:column="23">DS_TYPE_DERIVE<pos:position pos:line="10" pos:column="37"/></name></expr>)<pos:position pos:line="10" pos:column="38"/></condition><then pos:line="10" pos:column="38">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="11" pos:column="5">v<pos:position pos:line="11" pos:column="6"/></name><operator pos:line="11" pos:column="6">.<pos:position pos:line="11" pos:column="7"/></operator><name pos:line="11" pos:column="7">derive<pos:position pos:line="11" pos:column="13"/></name></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <operator pos:line="11" pos:column="16">(<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="17">derive_t<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">)<pos:position pos:line="11" pos:column="26"/></operator><call><name pos:line="11" pos:column="26">lua_tointeger<pos:position pos:line="11" pos:column="39"/></name><argument_list pos:line="11" pos:column="39">(<argument><expr><name pos:line="11" pos:column="40">L<pos:position pos:line="11" pos:column="41"/></name></expr></argument>, <comment type="block" pos:line="11" pos:column="43">/* stack pos = */</comment> <argument><expr><operator pos:line="11" pos:column="61">-<pos:position pos:line="11" pos:column="62"/></operator><literal type="number" pos:line="11" pos:column="62">1<pos:position pos:line="11" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="65"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="12" pos:column="3">else <if pos:line="12" pos:column="8">if <condition pos:line="12" pos:column="11">(<expr><name pos:line="12" pos:column="12">ds_type<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">==<pos:position pos:line="12" pos:column="22"/></operator> <name pos:line="12" pos:column="23">DS_TYPE_COUNTER<pos:position pos:line="12" pos:column="38"/></name></expr>)<pos:position pos:line="12" pos:column="39"/></condition><then pos:line="12" pos:column="39">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="13" pos:column="5">v<pos:position pos:line="13" pos:column="6"/></name><operator pos:line="13" pos:column="6">.<pos:position pos:line="13" pos:column="7"/></operator><name pos:line="13" pos:column="7">counter<pos:position pos:line="13" pos:column="14"/></name></name> <operator pos:line="13" pos:column="15">=<pos:position pos:line="13" pos:column="16"/></operator> <operator pos:line="13" pos:column="17">(<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">counter_t<pos:position pos:line="13" pos:column="27"/></name><operator pos:line="13" pos:column="27">)<pos:position pos:line="13" pos:column="28"/></operator><call><name pos:line="13" pos:column="28">lua_tointeger<pos:position pos:line="13" pos:column="41"/></name><argument_list pos:line="13" pos:column="41">(<argument><expr><name pos:line="13" pos:column="42">L<pos:position pos:line="13" pos:column="43"/></name></expr></argument>, <comment type="block" pos:line="13" pos:column="45">/* stack pos = */</comment> <argument><expr><operator pos:line="13" pos:column="63">-<pos:position pos:line="13" pos:column="64"/></operator><literal type="number" pos:line="13" pos:column="64">1<pos:position pos:line="13" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="67"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="14" pos:column="3">else <if pos:line="14" pos:column="8">if <condition pos:line="14" pos:column="11">(<expr><name pos:line="14" pos:column="12">ds_type<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">==<pos:position pos:line="14" pos:column="22"/></operator> <name pos:line="14" pos:column="23">DS_TYPE_ABSOLUTE<pos:position pos:line="14" pos:column="39"/></name></expr>)<pos:position pos:line="14" pos:column="40"/></condition><then pos:line="14" pos:column="40">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="15" pos:column="5">v<pos:position pos:line="15" pos:column="6"/></name><operator pos:line="15" pos:column="6">.<pos:position pos:line="15" pos:column="7"/></operator><name pos:line="15" pos:column="7">absolute<pos:position pos:line="15" pos:column="15"/></name></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <operator pos:line="15" pos:column="18">(<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="19">absolute_t<pos:position pos:line="15" pos:column="29"/></name><operator pos:line="15" pos:column="29">)<pos:position pos:line="15" pos:column="30"/></operator><call><name pos:line="15" pos:column="30">lua_tointeger<pos:position pos:line="15" pos:column="43"/></name><argument_list pos:line="15" pos:column="43">(<argument><expr><name pos:line="15" pos:column="44">L<pos:position pos:line="15" pos:column="45"/></name></expr></argument>, <comment type="block" pos:line="15" pos:column="47">/* stack pos = */</comment> <argument><expr><operator pos:line="15" pos:column="65">-<pos:position pos:line="15" pos:column="66"/></operator><literal type="number" pos:line="15" pos:column="66">1<pos:position pos:line="15" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="69"/></expr_stmt></block></then></if></elseif></if>

  <return pos:line="17" pos:column="3">return <expr><operator pos:line="17" pos:column="10">(<pos:position pos:line="17" pos:column="11"/></operator><name pos:line="17" pos:column="11">v<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">)<pos:position pos:line="17" pos:column="13"/></operator></expr>;<pos:position pos:line="17" pos:column="14"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2637_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">plugin_dispatch_values_internal<pos:position pos:line="1" pos:column="43"/></name><parameter_list pos:line="1" pos:column="43">(<parameter><decl><type><name pos:line="1" pos:column="44">value_list_t<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">vl<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list> <block pos:line="1" pos:column="62">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">status<pos:position pos:line="2" pos:column="13"/></name></decl>;<pos:position pos:line="2" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="3" pos:column="3">static<pos:position pos:line="3" pos:column="9"/></specifier> <type><name pos:line="3" pos:column="10">c_complain_t<pos:position pos:line="3" pos:column="22"/></name></type> <name pos:line="3" pos:column="23">no_write_complaint<pos:position pos:line="3" pos:column="41"/></name> <init pos:line="3" pos:column="42">= <expr><name pos:line="3" pos:column="44">C_COMPLAIN_INIT_STATIC<pos:position pos:line="3" pos:column="66"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="67"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="5" pos:column="3">value_t<pos:position pos:line="5" pos:column="10"/></name> <modifier pos:line="5" pos:column="11">*<pos:position pos:line="5" pos:column="12"/></modifier></type><name pos:line="5" pos:column="12">saved_values<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">saved_values_len<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="8" pos:column="3">data_set_t<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">ds<pos:position pos:line="8" pos:column="17"/></name></decl>;<pos:position pos:line="8" pos:column="18"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">free_meta_data<pos:position pos:line="10" pos:column="21"/></name> <init pos:line="10" pos:column="22">= <expr><literal type="number" pos:line="10" pos:column="24">0<pos:position pos:line="10" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="26"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="12" pos:column="3">assert<pos:position pos:line="12" pos:column="9"/></name><argument_list pos:line="12" pos:column="9">(<argument><expr><name pos:line="12" pos:column="10">vl<pos:position pos:line="12" pos:column="12"/></name></expr></argument>)<pos:position pos:line="12" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">assert<pos:position pos:line="13" pos:column="9"/></name><argument_list pos:line="13" pos:column="9">(<argument><expr><name><name pos:line="13" pos:column="10">vl<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">-&gt;<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="14">plugin<pos:position pos:line="13" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="22"/></expr_stmt>

  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name><name pos:line="15" pos:column="7">vl<pos:position pos:line="15" pos:column="9"/></name><operator pos:line="15" pos:column="9">-&gt;<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="11">type<pos:position pos:line="15" pos:column="15"/></name><index pos:line="15" pos:column="15">[<expr><literal type="number" pos:line="15" pos:column="16">0<pos:position pos:line="15" pos:column="17"/></literal></expr>]<pos:position pos:line="15" pos:column="18"/></index></name> <operator pos:line="15" pos:column="19">==<pos:position pos:line="15" pos:column="21"/></operator> <literal type="number" pos:line="15" pos:column="22">0<pos:position pos:line="15" pos:column="23"/></literal> <operator pos:line="15" pos:column="24">||<pos:position pos:line="15" pos:column="26"/></operator> <name><name pos:line="15" pos:column="27">vl<pos:position pos:line="15" pos:column="29"/></name><operator pos:line="15" pos:column="29">-&gt;<pos:position pos:line="15" pos:column="34"/></operator><name pos:line="15" pos:column="31">values<pos:position pos:line="15" pos:column="37"/></name></name> <operator pos:line="15" pos:column="38">==<pos:position pos:line="15" pos:column="40"/></operator> <name pos:line="15" pos:column="41">NULL<pos:position pos:line="15" pos:column="45"/></name> <operator pos:line="15" pos:column="46">||<pos:position pos:line="15" pos:column="48"/></operator> <name><name pos:line="15" pos:column="49">vl<pos:position pos:line="15" pos:column="51"/></name><operator pos:line="15" pos:column="51">-&gt;<pos:position pos:line="15" pos:column="56"/></operator><name pos:line="15" pos:column="53">values_len<pos:position pos:line="15" pos:column="63"/></name></name> <operator pos:line="15" pos:column="64">&lt;<pos:position pos:line="15" pos:column="68"/></operator> <literal type="number" pos:line="15" pos:column="66">1<pos:position pos:line="15" pos:column="67"/></literal></expr>)<pos:position pos:line="15" pos:column="68"/></condition><then pos:line="15" pos:column="68"> <block pos:line="15" pos:column="69">{
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">ERROR<pos:position pos:line="16" pos:column="10"/></name><argument_list pos:line="16" pos:column="10">(<argument><expr><literal type="string" pos:line="16" pos:column="11">"plugin_dispatch_values: Invalid value list "<pos:position pos:line="16" pos:column="56"/></literal>
          <literal type="string" pos:line="17" pos:column="11">"from plugin %s."<pos:position pos:line="17" pos:column="28"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="18" pos:column="11">vl<pos:position pos:line="18" pos:column="13"/></name><operator pos:line="18" pos:column="13">-&gt;<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="15">plugin<pos:position pos:line="18" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="23"/></expr_stmt>
    <return pos:line="19" pos:column="5">return <expr><operator pos:line="19" pos:column="12">(<pos:position pos:line="19" pos:column="13"/></operator><operator pos:line="19" pos:column="13">-<pos:position pos:line="19" pos:column="14"/></operator><literal type="number" pos:line="19" pos:column="14">1<pos:position pos:line="19" pos:column="15"/></literal><operator pos:line="19" pos:column="15">)<pos:position pos:line="19" pos:column="16"/></operator></expr>;<pos:position pos:line="19" pos:column="17"/></return>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="22" pos:column="3">/* Free meta data only if the calling function didn't specify any. In
   * this case matches and targets may add some and the calling function
   * may not expect (and therefore free) that data. */</comment>
  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><name><name pos:line="25" pos:column="7">vl<pos:position pos:line="25" pos:column="9"/></name><operator pos:line="25" pos:column="9">-&gt;<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="11">meta<pos:position pos:line="25" pos:column="15"/></name></name> <operator pos:line="25" pos:column="16">==<pos:position pos:line="25" pos:column="18"/></operator> <name pos:line="25" pos:column="19">NULL<pos:position pos:line="25" pos:column="23"/></name></expr>)<pos:position pos:line="25" pos:column="24"/></condition><then pos:line="25" pos:column="24">
    <block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="5">free_meta_data<pos:position pos:line="26" pos:column="19"/></name> <operator pos:line="26" pos:column="20">=<pos:position pos:line="26" pos:column="21"/></operator> <literal type="number" pos:line="26" pos:column="22">1<pos:position pos:line="26" pos:column="23"/></literal></expr>;<pos:position pos:line="26" pos:column="24"/></expr_stmt></block></then></if>

  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name pos:line="28" pos:column="7">list_write<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">==<pos:position pos:line="28" pos:column="20"/></operator> <name pos:line="28" pos:column="21">NULL<pos:position pos:line="28" pos:column="25"/></name></expr>)<pos:position pos:line="28" pos:column="26"/></condition><then pos:line="28" pos:column="26">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="5">c_complain_once<pos:position pos:line="29" pos:column="20"/></name><argument_list pos:line="29" pos:column="20">(<argument><expr><name pos:line="29" pos:column="21">LOG_WARNING<pos:position pos:line="29" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="34">&amp;<pos:position pos:line="29" pos:column="39"/></operator><name pos:line="29" pos:column="35">no_write_complaint<pos:position pos:line="29" pos:column="53"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="30" pos:column="21">"plugin_dispatch_values: No write callback has been "<pos:position pos:line="30" pos:column="74"/></literal>
                    <literal type="string" pos:line="31" pos:column="21">"registered. Please load at least one output plugin, "<pos:position pos:line="31" pos:column="75"/></literal>
                    <literal type="string" pos:line="32" pos:column="21">"if you want the collected data to be stored."<pos:position pos:line="32" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="69"/></expr_stmt></block></then></if>

  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><name pos:line="34" pos:column="7">data_sets<pos:position pos:line="34" pos:column="16"/></name> <operator pos:line="34" pos:column="17">==<pos:position pos:line="34" pos:column="19"/></operator> <name pos:line="34" pos:column="20">NULL<pos:position pos:line="34" pos:column="24"/></name></expr>)<pos:position pos:line="34" pos:column="25"/></condition><then pos:line="34" pos:column="25"> <block pos:line="34" pos:column="26">{
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">ERROR<pos:position pos:line="35" pos:column="10"/></name><argument_list pos:line="35" pos:column="10">(<argument><expr><literal type="string" pos:line="35" pos:column="11">"plugin_dispatch_values: No data sets registered. "<pos:position pos:line="35" pos:column="62"/></literal>
          <literal type="string" pos:line="36" pos:column="11">"Could the types database be read? Check "<pos:position pos:line="36" pos:column="53"/></literal>
          <literal type="string" pos:line="37" pos:column="11">"your `TypesDB' setting!"<pos:position pos:line="37" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="38"/></expr_stmt>
    <return pos:line="38" pos:column="5">return <expr><operator pos:line="38" pos:column="12">(<pos:position pos:line="38" pos:column="13"/></operator><operator pos:line="38" pos:column="13">-<pos:position pos:line="38" pos:column="14"/></operator><literal type="number" pos:line="38" pos:column="14">1<pos:position pos:line="38" pos:column="15"/></literal><operator pos:line="38" pos:column="15">)<pos:position pos:line="38" pos:column="16"/></operator></expr>;<pos:position pos:line="38" pos:column="17"/></return>
  }<pos:position pos:line="39" pos:column="4"/></block></then></if>

  <if pos:line="41" pos:column="3">if <condition pos:line="41" pos:column="6">(<expr><call><name pos:line="41" pos:column="7">c_avl_get<pos:position pos:line="41" pos:column="16"/></name><argument_list pos:line="41" pos:column="16">(<argument><expr><name pos:line="41" pos:column="17">data_sets<pos:position pos:line="41" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="28">vl<pos:position pos:line="41" pos:column="30"/></name><operator pos:line="41" pos:column="30">-&gt;<pos:position pos:line="41" pos:column="35"/></operator><name pos:line="41" pos:column="32">type<pos:position pos:line="41" pos:column="36"/></name></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="38">(<pos:position pos:line="41" pos:column="39"/></operator><name pos:line="41" pos:column="39">void<pos:position pos:line="41" pos:column="43"/></name> <operator pos:line="41" pos:column="44">*<pos:position pos:line="41" pos:column="45"/></operator><operator pos:line="41" pos:column="45">)<pos:position pos:line="41" pos:column="46"/></operator><operator pos:line="41" pos:column="46">&amp;<pos:position pos:line="41" pos:column="51"/></operator><name pos:line="41" pos:column="47">ds<pos:position pos:line="41" pos:column="49"/></name></expr></argument>)<pos:position pos:line="41" pos:column="50"/></argument_list></call> <operator pos:line="41" pos:column="51">!=<pos:position pos:line="41" pos:column="53"/></operator> <literal type="number" pos:line="41" pos:column="54">0<pos:position pos:line="41" pos:column="55"/></literal></expr>)<pos:position pos:line="41" pos:column="56"/></condition><then pos:line="41" pos:column="56"> <block pos:line="41" pos:column="57">{
    <decl_stmt><decl><type><name pos:line="42" pos:column="5">char<pos:position pos:line="42" pos:column="9"/></name></type> <name><name pos:line="42" pos:column="10">ident<pos:position pos:line="42" pos:column="15"/></name><index pos:line="42" pos:column="15">[<expr><literal type="number" pos:line="42" pos:column="16">6<pos:position pos:line="42" pos:column="17"/></literal> <operator pos:line="42" pos:column="18">*<pos:position pos:line="42" pos:column="19"/></operator> <name pos:line="42" pos:column="20">DATA_MAX_NAME_LEN<pos:position pos:line="42" pos:column="37"/></name></expr>]<pos:position pos:line="42" pos:column="38"/></index></name></decl>;<pos:position pos:line="42" pos:column="39"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="44" pos:column="5">FORMAT_VL<pos:position pos:line="44" pos:column="14"/></name><argument_list pos:line="44" pos:column="14">(<argument><expr><name pos:line="44" pos:column="15">ident<pos:position pos:line="44" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="22">sizeof<argument_list pos:line="44" pos:column="28">(<argument><expr><name pos:line="44" pos:column="29">ident<pos:position pos:line="44" pos:column="34"/></name></expr></argument>)<pos:position pos:line="44" pos:column="35"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="44" pos:column="37">vl<pos:position pos:line="44" pos:column="39"/></name></expr></argument>)<pos:position pos:line="44" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">INFO<pos:position pos:line="45" pos:column="9"/></name><argument_list pos:line="45" pos:column="9">(<argument><expr><literal type="string" pos:line="45" pos:column="10">"plugin_dispatch_values: Dataset not found: %s "<pos:position pos:line="45" pos:column="58"/></literal>
         <literal type="string" pos:line="46" pos:column="10">"(from \"%s\"), check your types.db!"<pos:position pos:line="46" pos:column="47"/></literal></expr></argument>,
         <argument><expr><name><name pos:line="47" pos:column="10">vl<pos:position pos:line="47" pos:column="12"/></name><operator pos:line="47" pos:column="12">-&gt;<pos:position pos:line="47" pos:column="17"/></operator><name pos:line="47" pos:column="14">type<pos:position pos:line="47" pos:column="18"/></name></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="20">ident<pos:position pos:line="47" pos:column="25"/></name></expr></argument>)<pos:position pos:line="47" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="27"/></expr_stmt>
    <return pos:line="48" pos:column="5">return <expr><operator pos:line="48" pos:column="12">(<pos:position pos:line="48" pos:column="13"/></operator><operator pos:line="48" pos:column="13">-<pos:position pos:line="48" pos:column="14"/></operator><literal type="number" pos:line="48" pos:column="14">1<pos:position pos:line="48" pos:column="15"/></literal><operator pos:line="48" pos:column="15">)<pos:position pos:line="48" pos:column="16"/></operator></expr>;<pos:position pos:line="48" pos:column="17"/></return>
  }<pos:position pos:line="49" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="51" pos:column="3">/* Assured by plugin_value_list_clone(). The time is determined at
   * _enqueue_ time. */</comment>
  <expr_stmt><expr><call><name pos:line="53" pos:column="3">assert<pos:position pos:line="53" pos:column="9"/></name><argument_list pos:line="53" pos:column="9">(<argument><expr><name><name pos:line="53" pos:column="10">vl<pos:position pos:line="53" pos:column="12"/></name><operator pos:line="53" pos:column="12">-&gt;<pos:position pos:line="53" pos:column="17"/></operator><name pos:line="53" pos:column="14">time<pos:position pos:line="53" pos:column="18"/></name></name> <operator pos:line="53" pos:column="19">!=<pos:position pos:line="53" pos:column="21"/></operator> <literal type="number" pos:line="53" pos:column="22">0<pos:position pos:line="53" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="54" pos:column="3">assert<pos:position pos:line="54" pos:column="9"/></name><argument_list pos:line="54" pos:column="9">(<argument><expr><name><name pos:line="54" pos:column="10">vl<pos:position pos:line="54" pos:column="12"/></name><operator pos:line="54" pos:column="12">-&gt;<pos:position pos:line="54" pos:column="17"/></operator><name pos:line="54" pos:column="14">interval<pos:position pos:line="54" pos:column="22"/></name></name> <operator pos:line="54" pos:column="23">!=<pos:position pos:line="54" pos:column="25"/></operator> <literal type="number" pos:line="54" pos:column="26">0<pos:position pos:line="54" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="29"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="56" pos:column="3">DEBUG<pos:position pos:line="56" pos:column="8"/></name><argument_list pos:line="56" pos:column="8">(<argument><expr><literal type="string" pos:line="56" pos:column="9">"plugin_dispatch_values: time = %.3f; interval = %.3f; "<pos:position pos:line="56" pos:column="65"/></literal>
        <literal type="string" pos:line="57" pos:column="9">"host = %s; "<pos:position pos:line="57" pos:column="22"/></literal>
        <literal type="string" pos:line="58" pos:column="9">"plugin = %s; plugin_instance = %s; "<pos:position pos:line="58" pos:column="46"/></literal>
        <literal type="string" pos:line="59" pos:column="9">"type = %s; type_instance = %s;"<pos:position pos:line="59" pos:column="41"/></literal></expr></argument>,
        <argument><expr><call><name pos:line="60" pos:column="9">CDTIME_T_TO_DOUBLE<pos:position pos:line="60" pos:column="27"/></name><argument_list pos:line="60" pos:column="27">(<argument><expr><name><name pos:line="60" pos:column="28">vl<pos:position pos:line="60" pos:column="30"/></name><operator pos:line="60" pos:column="30">-&gt;<pos:position pos:line="60" pos:column="35"/></operator><name pos:line="60" pos:column="32">time<pos:position pos:line="60" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="37"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="60" pos:column="39">CDTIME_T_TO_DOUBLE<pos:position pos:line="60" pos:column="57"/></name><argument_list pos:line="60" pos:column="57">(<argument><expr><name><name pos:line="60" pos:column="58">vl<pos:position pos:line="60" pos:column="60"/></name><operator pos:line="60" pos:column="60">-&gt;<pos:position pos:line="60" pos:column="65"/></operator><name pos:line="60" pos:column="62">interval<pos:position pos:line="60" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="71"/></argument_list></call></expr></argument>,
        <argument><expr><name><name pos:line="61" pos:column="9">vl<pos:position pos:line="61" pos:column="11"/></name><operator pos:line="61" pos:column="11">-&gt;<pos:position pos:line="61" pos:column="16"/></operator><name pos:line="61" pos:column="13">host<pos:position pos:line="61" pos:column="17"/></name></name></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="19">vl<pos:position pos:line="61" pos:column="21"/></name><operator pos:line="61" pos:column="21">-&gt;<pos:position pos:line="61" pos:column="26"/></operator><name pos:line="61" pos:column="23">plugin<pos:position pos:line="61" pos:column="29"/></name></name></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="31">vl<pos:position pos:line="61" pos:column="33"/></name><operator pos:line="61" pos:column="33">-&gt;<pos:position pos:line="61" pos:column="38"/></operator><name pos:line="61" pos:column="35">plugin_instance<pos:position pos:line="61" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="52">vl<pos:position pos:line="61" pos:column="54"/></name><operator pos:line="61" pos:column="54">-&gt;<pos:position pos:line="61" pos:column="59"/></operator><name pos:line="61" pos:column="56">type<pos:position pos:line="61" pos:column="60"/></name></name></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="62">vl<pos:position pos:line="61" pos:column="64"/></name><operator pos:line="61" pos:column="64">-&gt;<pos:position pos:line="61" pos:column="69"/></operator><name pos:line="61" pos:column="66">type_instance<pos:position pos:line="61" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="81"/></expr_stmt>

<cpp:if pos:line="63" pos:column="1">#<cpp:directive pos:line="63" pos:column="2">if<pos:position pos:line="63" pos:column="4"/></cpp:directive> <expr><name pos:line="63" pos:column="5">COLLECT_DEBUG<pos:position pos:line="63" pos:column="18"/></name></expr></cpp:if>
  <expr_stmt><expr><call><name pos:line="64" pos:column="3">assert<pos:position pos:line="64" pos:column="9"/></name><argument_list pos:line="64" pos:column="9">(<argument><expr><literal type="number" pos:line="64" pos:column="10">0<pos:position pos:line="64" pos:column="11"/></literal> <operator pos:line="64" pos:column="12">==<pos:position pos:line="64" pos:column="14"/></operator> <call><name pos:line="64" pos:column="15">strcmp<pos:position pos:line="64" pos:column="21"/></name><argument_list pos:line="64" pos:column="21">(<argument><expr><name><name pos:line="64" pos:column="22">ds<pos:position pos:line="64" pos:column="24"/></name><operator pos:line="64" pos:column="24">-&gt;<pos:position pos:line="64" pos:column="29"/></operator><name pos:line="64" pos:column="26">type<pos:position pos:line="64" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="32">vl<pos:position pos:line="64" pos:column="34"/></name><operator pos:line="64" pos:column="34">-&gt;<pos:position pos:line="64" pos:column="39"/></operator><name pos:line="64" pos:column="36">type<pos:position pos:line="64" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="64" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="43"/></expr_stmt>
<cpp:else pos:line="65" pos:column="1">#<cpp:directive pos:line="65" pos:column="2">else<pos:position pos:line="65" pos:column="6"/></cpp:directive></cpp:else>
  <if pos:line="66" pos:column="3">if <condition pos:line="66" pos:column="6">(<expr><literal type="number" pos:line="66" pos:column="7">0<pos:position pos:line="66" pos:column="8"/></literal> <operator pos:line="66" pos:column="9">!=<pos:position pos:line="66" pos:column="11"/></operator> <call><name pos:line="66" pos:column="12">strcmp<pos:position pos:line="66" pos:column="18"/></name><argument_list pos:line="66" pos:column="18">(<argument><expr><name><name pos:line="66" pos:column="19">ds<pos:position pos:line="66" pos:column="21"/></name><operator pos:line="66" pos:column="21">-&gt;<pos:position pos:line="66" pos:column="26"/></operator><name pos:line="66" pos:column="23">type<pos:position pos:line="66" pos:column="27"/></name></name></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="29">vl<pos:position pos:line="66" pos:column="31"/></name><operator pos:line="66" pos:column="31">-&gt;<pos:position pos:line="66" pos:column="36"/></operator><name pos:line="66" pos:column="33">type<pos:position pos:line="66" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="66" pos:column="39"/></condition><then pos:line="66" pos:column="39">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="67" pos:column="5">WARNING<pos:position pos:line="67" pos:column="12"/></name><argument_list pos:line="67" pos:column="12">(<argument><expr><literal type="string" pos:line="67" pos:column="13">"plugin_dispatch_values: (ds-&gt;type = %s) != (vl-&gt;type = %s)"<pos:position pos:line="67" pos:column="79"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="68" pos:column="13">ds<pos:position pos:line="68" pos:column="15"/></name><operator pos:line="68" pos:column="15">-&gt;<pos:position pos:line="68" pos:column="20"/></operator><name pos:line="68" pos:column="17">type<pos:position pos:line="68" pos:column="21"/></name></name></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="23">vl<pos:position pos:line="68" pos:column="25"/></name><operator pos:line="68" pos:column="25">-&gt;<pos:position pos:line="68" pos:column="30"/></operator><name pos:line="68" pos:column="27">type<pos:position pos:line="68" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="33"/></expr_stmt></block></then></if>
<cpp:endif pos:line="69" pos:column="1">#<cpp:directive pos:line="69" pos:column="2">endif<pos:position pos:line="69" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="71" pos:column="1">#<cpp:directive pos:line="71" pos:column="2">if<pos:position pos:line="71" pos:column="4"/></cpp:directive> <expr><name pos:line="71" pos:column="5">COLLECT_DEBUG<pos:position pos:line="71" pos:column="18"/></name></expr></cpp:if>
  <expr_stmt><expr><call><name pos:line="72" pos:column="3">assert<pos:position pos:line="72" pos:column="9"/></name><argument_list pos:line="72" pos:column="9">(<argument><expr><name><name pos:line="72" pos:column="10">ds<pos:position pos:line="72" pos:column="12"/></name><operator pos:line="72" pos:column="12">-&gt;<pos:position pos:line="72" pos:column="17"/></operator><name pos:line="72" pos:column="14">ds_num<pos:position pos:line="72" pos:column="20"/></name></name> <operator pos:line="72" pos:column="21">==<pos:position pos:line="72" pos:column="23"/></operator> <name><name pos:line="72" pos:column="24">vl<pos:position pos:line="72" pos:column="26"/></name><operator pos:line="72" pos:column="26">-&gt;<pos:position pos:line="72" pos:column="31"/></operator><name pos:line="72" pos:column="28">values_len<pos:position pos:line="72" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="40"/></expr_stmt>
<cpp:else pos:line="73" pos:column="1">#<cpp:directive pos:line="73" pos:column="2">else<pos:position pos:line="73" pos:column="6"/></cpp:directive></cpp:else>
  <if pos:line="74" pos:column="3">if <condition pos:line="74" pos:column="6">(<expr><name><name pos:line="74" pos:column="7">ds<pos:position pos:line="74" pos:column="9"/></name><operator pos:line="74" pos:column="9">-&gt;<pos:position pos:line="74" pos:column="14"/></operator><name pos:line="74" pos:column="11">ds_num<pos:position pos:line="74" pos:column="17"/></name></name> <operator pos:line="74" pos:column="18">!=<pos:position pos:line="74" pos:column="20"/></operator> <name><name pos:line="74" pos:column="21">vl<pos:position pos:line="74" pos:column="23"/></name><operator pos:line="74" pos:column="23">-&gt;<pos:position pos:line="74" pos:column="28"/></operator><name pos:line="74" pos:column="25">values_len<pos:position pos:line="74" pos:column="35"/></name></name></expr>)<pos:position pos:line="74" pos:column="36"/></condition><then pos:line="74" pos:column="36"> <block pos:line="74" pos:column="37">{
    <expr_stmt><expr><call><name pos:line="75" pos:column="5">ERROR<pos:position pos:line="75" pos:column="10"/></name><argument_list pos:line="75" pos:column="10">(<argument><expr><literal type="string" pos:line="75" pos:column="11">"plugin_dispatch_values: ds-&gt;type = %s: "<pos:position pos:line="75" pos:column="55"/></literal>
          <literal type="string" pos:line="76" pos:column="11">"(ds-&gt;ds_num = %zu) != "<pos:position pos:line="76" pos:column="38"/></literal>
          <literal type="string" pos:line="77" pos:column="11">"(vl-&gt;values_len = %zu)"<pos:position pos:line="77" pos:column="38"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="78" pos:column="11">ds<pos:position pos:line="78" pos:column="13"/></name><operator pos:line="78" pos:column="13">-&gt;<pos:position pos:line="78" pos:column="18"/></operator><name pos:line="78" pos:column="15">type<pos:position pos:line="78" pos:column="19"/></name></name></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="21">ds<pos:position pos:line="78" pos:column="23"/></name><operator pos:line="78" pos:column="23">-&gt;<pos:position pos:line="78" pos:column="28"/></operator><name pos:line="78" pos:column="25">ds_num<pos:position pos:line="78" pos:column="31"/></name></name></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="33">vl<pos:position pos:line="78" pos:column="35"/></name><operator pos:line="78" pos:column="35">-&gt;<pos:position pos:line="78" pos:column="40"/></operator><name pos:line="78" pos:column="37">values_len<pos:position pos:line="78" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="49"/></expr_stmt>
    <return pos:line="79" pos:column="5">return <expr><operator pos:line="79" pos:column="12">(<pos:position pos:line="79" pos:column="13"/></operator><operator pos:line="79" pos:column="13">-<pos:position pos:line="79" pos:column="14"/></operator><literal type="number" pos:line="79" pos:column="14">1<pos:position pos:line="79" pos:column="15"/></literal><operator pos:line="79" pos:column="15">)<pos:position pos:line="79" pos:column="16"/></operator></expr>;<pos:position pos:line="79" pos:column="17"/></return>
  }<pos:position pos:line="80" pos:column="4"/></block></then></if>
<cpp:endif pos:line="81" pos:column="1">#<cpp:directive pos:line="81" pos:column="2">endif<pos:position pos:line="81" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><call><name pos:line="83" pos:column="3">escape_slashes<pos:position pos:line="83" pos:column="17"/></name><argument_list pos:line="83" pos:column="17">(<argument><expr><name><name pos:line="83" pos:column="18">vl<pos:position pos:line="83" pos:column="20"/></name><operator pos:line="83" pos:column="20">-&gt;<pos:position pos:line="83" pos:column="25"/></operator><name pos:line="83" pos:column="22">host<pos:position pos:line="83" pos:column="26"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="83" pos:column="28">sizeof<argument_list pos:line="83" pos:column="34">(<argument><expr><name><name pos:line="83" pos:column="35">vl<pos:position pos:line="83" pos:column="37"/></name><operator pos:line="83" pos:column="37">-&gt;<pos:position pos:line="83" pos:column="42"/></operator><name pos:line="83" pos:column="39">host<pos:position pos:line="83" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="83" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="84" pos:column="3">escape_slashes<pos:position pos:line="84" pos:column="17"/></name><argument_list pos:line="84" pos:column="17">(<argument><expr><name><name pos:line="84" pos:column="18">vl<pos:position pos:line="84" pos:column="20"/></name><operator pos:line="84" pos:column="20">-&gt;<pos:position pos:line="84" pos:column="25"/></operator><name pos:line="84" pos:column="22">plugin<pos:position pos:line="84" pos:column="28"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="84" pos:column="30">sizeof<argument_list pos:line="84" pos:column="36">(<argument><expr><name><name pos:line="84" pos:column="37">vl<pos:position pos:line="84" pos:column="39"/></name><operator pos:line="84" pos:column="39">-&gt;<pos:position pos:line="84" pos:column="44"/></operator><name pos:line="84" pos:column="41">plugin<pos:position pos:line="84" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="84" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="85" pos:column="3">escape_slashes<pos:position pos:line="85" pos:column="17"/></name><argument_list pos:line="85" pos:column="17">(<argument><expr><name><name pos:line="85" pos:column="18">vl<pos:position pos:line="85" pos:column="20"/></name><operator pos:line="85" pos:column="20">-&gt;<pos:position pos:line="85" pos:column="25"/></operator><name pos:line="85" pos:column="22">plugin_instance<pos:position pos:line="85" pos:column="37"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="85" pos:column="39">sizeof<argument_list pos:line="85" pos:column="45">(<argument><expr><name><name pos:line="85" pos:column="46">vl<pos:position pos:line="85" pos:column="48"/></name><operator pos:line="85" pos:column="48">-&gt;<pos:position pos:line="85" pos:column="53"/></operator><name pos:line="85" pos:column="50">plugin_instance<pos:position pos:line="85" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="85" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="85" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="68"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="86" pos:column="3">escape_slashes<pos:position pos:line="86" pos:column="17"/></name><argument_list pos:line="86" pos:column="17">(<argument><expr><name><name pos:line="86" pos:column="18">vl<pos:position pos:line="86" pos:column="20"/></name><operator pos:line="86" pos:column="20">-&gt;<pos:position pos:line="86" pos:column="25"/></operator><name pos:line="86" pos:column="22">type<pos:position pos:line="86" pos:column="26"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="86" pos:column="28">sizeof<argument_list pos:line="86" pos:column="34">(<argument><expr><name><name pos:line="86" pos:column="35">vl<pos:position pos:line="86" pos:column="37"/></name><operator pos:line="86" pos:column="37">-&gt;<pos:position pos:line="86" pos:column="42"/></operator><name pos:line="86" pos:column="39">type<pos:position pos:line="86" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="86" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="86" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="87" pos:column="3">escape_slashes<pos:position pos:line="87" pos:column="17"/></name><argument_list pos:line="87" pos:column="17">(<argument><expr><name><name pos:line="87" pos:column="18">vl<pos:position pos:line="87" pos:column="20"/></name><operator pos:line="87" pos:column="20">-&gt;<pos:position pos:line="87" pos:column="25"/></operator><name pos:line="87" pos:column="22">type_instance<pos:position pos:line="87" pos:column="35"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="87" pos:column="37">sizeof<argument_list pos:line="87" pos:column="43">(<argument><expr><name><name pos:line="87" pos:column="44">vl<pos:position pos:line="87" pos:column="46"/></name><operator pos:line="87" pos:column="46">-&gt;<pos:position pos:line="87" pos:column="51"/></operator><name pos:line="87" pos:column="48">type_instance<pos:position pos:line="87" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="87" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="64"/></expr_stmt>

  <comment type="block" pos:line="89" pos:column="3">/* Copy the values. This way, we can assure `targets' that they get
   * dynamically allocated values, which they can free and replace if
   * they like. */</comment>
  <if pos:line="92" pos:column="3">if <condition pos:line="92" pos:column="6">(<expr><operator pos:line="92" pos:column="7">(<pos:position pos:line="92" pos:column="8"/></operator><name pos:line="92" pos:column="8">pre_cache_chain<pos:position pos:line="92" pos:column="23"/></name> <operator pos:line="92" pos:column="24">!=<pos:position pos:line="92" pos:column="26"/></operator> <name pos:line="92" pos:column="27">NULL<pos:position pos:line="92" pos:column="31"/></name><operator pos:line="92" pos:column="31">)<pos:position pos:line="92" pos:column="32"/></operator> <operator pos:line="92" pos:column="33">||<pos:position pos:line="92" pos:column="35"/></operator> <operator pos:line="92" pos:column="36">(<pos:position pos:line="92" pos:column="37"/></operator><name pos:line="92" pos:column="37">post_cache_chain<pos:position pos:line="92" pos:column="53"/></name> <operator pos:line="92" pos:column="54">!=<pos:position pos:line="92" pos:column="56"/></operator> <name pos:line="92" pos:column="57">NULL<pos:position pos:line="92" pos:column="61"/></name><operator pos:line="92" pos:column="61">)<pos:position pos:line="92" pos:column="62"/></operator></expr>)<pos:position pos:line="92" pos:column="63"/></condition><then pos:line="92" pos:column="63"> <block pos:line="92" pos:column="64">{
    <expr_stmt><expr><name pos:line="93" pos:column="5">saved_values<pos:position pos:line="93" pos:column="17"/></name> <operator pos:line="93" pos:column="18">=<pos:position pos:line="93" pos:column="19"/></operator> <name><name pos:line="93" pos:column="20">vl<pos:position pos:line="93" pos:column="22"/></name><operator pos:line="93" pos:column="22">-&gt;<pos:position pos:line="93" pos:column="27"/></operator><name pos:line="93" pos:column="24">values<pos:position pos:line="93" pos:column="30"/></name></name></expr>;<pos:position pos:line="93" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name pos:line="94" pos:column="5">saved_values_len<pos:position pos:line="94" pos:column="21"/></name> <operator pos:line="94" pos:column="22">=<pos:position pos:line="94" pos:column="23"/></operator> <name><name pos:line="94" pos:column="24">vl<pos:position pos:line="94" pos:column="26"/></name><operator pos:line="94" pos:column="26">-&gt;<pos:position pos:line="94" pos:column="31"/></operator><name pos:line="94" pos:column="28">values_len<pos:position pos:line="94" pos:column="38"/></name></name></expr>;<pos:position pos:line="94" pos:column="39"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="96" pos:column="5">vl<pos:position pos:line="96" pos:column="7"/></name><operator pos:line="96" pos:column="7">-&gt;<pos:position pos:line="96" pos:column="12"/></operator><name pos:line="96" pos:column="9">values<pos:position pos:line="96" pos:column="15"/></name></name> <operator pos:line="96" pos:column="16">=<pos:position pos:line="96" pos:column="17"/></operator> <operator pos:line="96" pos:column="18">(<pos:position pos:line="96" pos:column="19"/></operator><name pos:line="96" pos:column="19">value_t<pos:position pos:line="96" pos:column="26"/></name> <operator pos:line="96" pos:column="27">*<pos:position pos:line="96" pos:column="28"/></operator><operator pos:line="96" pos:column="28">)<pos:position pos:line="96" pos:column="29"/></operator><call><name pos:line="96" pos:column="29">calloc<pos:position pos:line="96" pos:column="35"/></name><argument_list pos:line="96" pos:column="35">(<argument><expr><name><name pos:line="96" pos:column="36">vl<pos:position pos:line="96" pos:column="38"/></name><operator pos:line="96" pos:column="38">-&gt;<pos:position pos:line="96" pos:column="43"/></operator><name pos:line="96" pos:column="40">values_len<pos:position pos:line="96" pos:column="50"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="96" pos:column="52">sizeof<argument_list pos:line="96" pos:column="58">(<argument><expr><operator pos:line="96" pos:column="59">*<pos:position pos:line="96" pos:column="60"/></operator><name><name pos:line="96" pos:column="60">vl<pos:position pos:line="96" pos:column="62"/></name><operator pos:line="96" pos:column="62">-&gt;<pos:position pos:line="96" pos:column="67"/></operator><name pos:line="96" pos:column="64">values<pos:position pos:line="96" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="96" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="96" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="73"/></expr_stmt>
    <if pos:line="97" pos:column="5">if <condition pos:line="97" pos:column="8">(<expr><name><name pos:line="97" pos:column="9">vl<pos:position pos:line="97" pos:column="11"/></name><operator pos:line="97" pos:column="11">-&gt;<pos:position pos:line="97" pos:column="16"/></operator><name pos:line="97" pos:column="13">values<pos:position pos:line="97" pos:column="19"/></name></name> <operator pos:line="97" pos:column="20">==<pos:position pos:line="97" pos:column="22"/></operator> <name pos:line="97" pos:column="23">NULL<pos:position pos:line="97" pos:column="27"/></name></expr>)<pos:position pos:line="97" pos:column="28"/></condition><then pos:line="97" pos:column="28"> <block pos:line="97" pos:column="29">{
      <expr_stmt><expr><call><name pos:line="98" pos:column="7">ERROR<pos:position pos:line="98" pos:column="12"/></name><argument_list pos:line="98" pos:column="12">(<argument><expr><literal type="string" pos:line="98" pos:column="13">"plugin_dispatch_values: calloc failed."<pos:position pos:line="98" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="55"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="99" pos:column="7">vl<pos:position pos:line="99" pos:column="9"/></name><operator pos:line="99" pos:column="9">-&gt;<pos:position pos:line="99" pos:column="14"/></operator><name pos:line="99" pos:column="11">values<pos:position pos:line="99" pos:column="17"/></name></name> <operator pos:line="99" pos:column="18">=<pos:position pos:line="99" pos:column="19"/></operator> <name pos:line="99" pos:column="20">saved_values<pos:position pos:line="99" pos:column="32"/></name></expr>;<pos:position pos:line="99" pos:column="33"/></expr_stmt>
      <return pos:line="100" pos:column="7">return <expr><operator pos:line="100" pos:column="14">(<pos:position pos:line="100" pos:column="15"/></operator><operator pos:line="100" pos:column="15">-<pos:position pos:line="100" pos:column="16"/></operator><literal type="number" pos:line="100" pos:column="16">1<pos:position pos:line="100" pos:column="17"/></literal><operator pos:line="100" pos:column="17">)<pos:position pos:line="100" pos:column="18"/></operator></expr>;<pos:position pos:line="100" pos:column="19"/></return>
    }<pos:position pos:line="101" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="102" pos:column="5">memcpy<pos:position pos:line="102" pos:column="11"/></name><argument_list pos:line="102" pos:column="11">(<argument><expr><name><name pos:line="102" pos:column="12">vl<pos:position pos:line="102" pos:column="14"/></name><operator pos:line="102" pos:column="14">-&gt;<pos:position pos:line="102" pos:column="19"/></operator><name pos:line="102" pos:column="16">values<pos:position pos:line="102" pos:column="22"/></name></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="24">saved_values<pos:position pos:line="102" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="102" pos:column="38">vl<pos:position pos:line="102" pos:column="40"/></name><operator pos:line="102" pos:column="40">-&gt;<pos:position pos:line="102" pos:column="45"/></operator><name pos:line="102" pos:column="42">values_len<pos:position pos:line="102" pos:column="52"/></name></name> <operator pos:line="102" pos:column="53">*<pos:position pos:line="102" pos:column="54"/></operator> <sizeof pos:line="102" pos:column="55">sizeof<argument_list pos:line="102" pos:column="61">(<argument><expr><operator pos:line="102" pos:column="62">*<pos:position pos:line="102" pos:column="63"/></operator><name><name pos:line="102" pos:column="63">vl<pos:position pos:line="102" pos:column="65"/></name><operator pos:line="102" pos:column="65">-&gt;<pos:position pos:line="102" pos:column="70"/></operator><name pos:line="102" pos:column="67">values<pos:position pos:line="102" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="102" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="102" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="76"/></expr_stmt>
  }<pos:position pos:line="103" pos:column="4"/></block></then> <else pos:line="103" pos:column="5">else <comment type="block" pos:line="103" pos:column="10">/* if ((pre == NULL) &amp;&amp; (post == NULL)) */</comment>
  <block pos:line="104" pos:column="3">{
    <expr_stmt><expr><name pos:line="105" pos:column="5">saved_values<pos:position pos:line="105" pos:column="17"/></name> <operator pos:line="105" pos:column="18">=<pos:position pos:line="105" pos:column="19"/></operator> <name pos:line="105" pos:column="20">NULL<pos:position pos:line="105" pos:column="24"/></name></expr>;<pos:position pos:line="105" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="106" pos:column="5">saved_values_len<pos:position pos:line="106" pos:column="21"/></name> <operator pos:line="106" pos:column="22">=<pos:position pos:line="106" pos:column="23"/></operator> <literal type="number" pos:line="106" pos:column="24">0<pos:position pos:line="106" pos:column="25"/></literal></expr>;<pos:position pos:line="106" pos:column="26"/></expr_stmt>
  }<pos:position pos:line="107" pos:column="4"/></block></else></if>

  <if pos:line="109" pos:column="3">if <condition pos:line="109" pos:column="6">(<expr><name pos:line="109" pos:column="7">pre_cache_chain<pos:position pos:line="109" pos:column="22"/></name> <operator pos:line="109" pos:column="23">!=<pos:position pos:line="109" pos:column="25"/></operator> <name pos:line="109" pos:column="26">NULL<pos:position pos:line="109" pos:column="30"/></name></expr>)<pos:position pos:line="109" pos:column="31"/></condition><then pos:line="109" pos:column="31"> <block pos:line="109" pos:column="32">{
    <expr_stmt><expr><name pos:line="110" pos:column="5">status<pos:position pos:line="110" pos:column="11"/></name> <operator pos:line="110" pos:column="12">=<pos:position pos:line="110" pos:column="13"/></operator> <call><name pos:line="110" pos:column="14">fc_process_chain<pos:position pos:line="110" pos:column="30"/></name><argument_list pos:line="110" pos:column="30">(<argument><expr><name pos:line="110" pos:column="31">ds<pos:position pos:line="110" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="35">vl<pos:position pos:line="110" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="39">pre_cache_chain<pos:position pos:line="110" pos:column="54"/></name></expr></argument>)<pos:position pos:line="110" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="56"/></expr_stmt>
    <if pos:line="111" pos:column="5">if <condition pos:line="111" pos:column="8">(<expr><name pos:line="111" pos:column="9">status<pos:position pos:line="111" pos:column="15"/></name> <operator pos:line="111" pos:column="16">&lt;<pos:position pos:line="111" pos:column="20"/></operator> <literal type="number" pos:line="111" pos:column="18">0<pos:position pos:line="111" pos:column="19"/></literal></expr>)<pos:position pos:line="111" pos:column="20"/></condition><then pos:line="111" pos:column="20"> <block pos:line="111" pos:column="21">{
      <expr_stmt><expr><call><name pos:line="112" pos:column="7">WARNING<pos:position pos:line="112" pos:column="14"/></name><argument_list pos:line="112" pos:column="14">(<argument><expr><literal type="string" pos:line="112" pos:column="15">"plugin_dispatch_values: Running the "<pos:position pos:line="112" pos:column="53"/></literal>
              <literal type="string" pos:line="113" pos:column="15">"pre-cache chain failed with "<pos:position pos:line="113" pos:column="45"/></literal>
              <literal type="string" pos:line="114" pos:column="15">"status %i (%#x)."<pos:position pos:line="114" pos:column="33"/></literal></expr></argument>,
              <argument><expr><name pos:line="115" pos:column="15">status<pos:position pos:line="115" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="23">status<pos:position pos:line="115" pos:column="29"/></name></expr></argument>)<pos:position pos:line="115" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="116" pos:column="6"/></block></then> <elseif pos:line="116" pos:column="7">else <if pos:line="116" pos:column="12">if <condition pos:line="116" pos:column="15">(<expr><name pos:line="116" pos:column="16">status<pos:position pos:line="116" pos:column="22"/></name> <operator pos:line="116" pos:column="23">==<pos:position pos:line="116" pos:column="25"/></operator> <name pos:line="116" pos:column="26">FC_TARGET_STOP<pos:position pos:line="116" pos:column="40"/></name></expr>)<pos:position pos:line="116" pos:column="41"/></condition><then pos:line="116" pos:column="41"> <block pos:line="116" pos:column="42">{
      <comment type="block" pos:line="117" pos:column="7">/* Restore the state of the value_list so that plugins
       * don't get confused.. */</comment>
      <if pos:line="119" pos:column="7">if <condition pos:line="119" pos:column="10">(<expr><name pos:line="119" pos:column="11">saved_values<pos:position pos:line="119" pos:column="23"/></name> <operator pos:line="119" pos:column="24">!=<pos:position pos:line="119" pos:column="26"/></operator> <name pos:line="119" pos:column="27">NULL<pos:position pos:line="119" pos:column="31"/></name></expr>)<pos:position pos:line="119" pos:column="32"/></condition><then pos:line="119" pos:column="32"> <block pos:line="119" pos:column="33">{
        <expr_stmt><expr><call><name pos:line="120" pos:column="9">sfree<pos:position pos:line="120" pos:column="14"/></name><argument_list pos:line="120" pos:column="14">(<argument><expr><name><name pos:line="120" pos:column="15">vl<pos:position pos:line="120" pos:column="17"/></name><operator pos:line="120" pos:column="17">-&gt;<pos:position pos:line="120" pos:column="22"/></operator><name pos:line="120" pos:column="19">values<pos:position pos:line="120" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="120" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="121" pos:column="9">vl<pos:position pos:line="121" pos:column="11"/></name><operator pos:line="121" pos:column="11">-&gt;<pos:position pos:line="121" pos:column="16"/></operator><name pos:line="121" pos:column="13">values<pos:position pos:line="121" pos:column="19"/></name></name> <operator pos:line="121" pos:column="20">=<pos:position pos:line="121" pos:column="21"/></operator> <name pos:line="121" pos:column="22">saved_values<pos:position pos:line="121" pos:column="34"/></name></expr>;<pos:position pos:line="121" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="122" pos:column="9">vl<pos:position pos:line="122" pos:column="11"/></name><operator pos:line="122" pos:column="11">-&gt;<pos:position pos:line="122" pos:column="16"/></operator><name pos:line="122" pos:column="13">values_len<pos:position pos:line="122" pos:column="23"/></name></name> <operator pos:line="122" pos:column="24">=<pos:position pos:line="122" pos:column="25"/></operator> <name pos:line="122" pos:column="26">saved_values_len<pos:position pos:line="122" pos:column="42"/></name></expr>;<pos:position pos:line="122" pos:column="43"/></expr_stmt>
      }<pos:position pos:line="123" pos:column="8"/></block></then></if>
      <return pos:line="124" pos:column="7">return <expr><operator pos:line="124" pos:column="14">(<pos:position pos:line="124" pos:column="15"/></operator><literal type="number" pos:line="124" pos:column="15">0<pos:position pos:line="124" pos:column="16"/></literal><operator pos:line="124" pos:column="16">)<pos:position pos:line="124" pos:column="17"/></operator></expr>;<pos:position pos:line="124" pos:column="18"/></return>
    }<pos:position pos:line="125" pos:column="6"/></block></then></if></elseif></if>
  }<pos:position pos:line="126" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="128" pos:column="3">/* Update the value cache */</comment>
  <expr_stmt><expr><call><name pos:line="129" pos:column="3">uc_update<pos:position pos:line="129" pos:column="12"/></name><argument_list pos:line="129" pos:column="12">(<argument><expr><name pos:line="129" pos:column="13">ds<pos:position pos:line="129" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="17">vl<pos:position pos:line="129" pos:column="19"/></name></expr></argument>)<pos:position pos:line="129" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="21"/></expr_stmt>

  <if pos:line="131" pos:column="3">if <condition pos:line="131" pos:column="6">(<expr><name pos:line="131" pos:column="7">post_cache_chain<pos:position pos:line="131" pos:column="23"/></name> <operator pos:line="131" pos:column="24">!=<pos:position pos:line="131" pos:column="26"/></operator> <name pos:line="131" pos:column="27">NULL<pos:position pos:line="131" pos:column="31"/></name></expr>)<pos:position pos:line="131" pos:column="32"/></condition><then pos:line="131" pos:column="32"> <block pos:line="131" pos:column="33">{
    <expr_stmt><expr><name pos:line="132" pos:column="5">status<pos:position pos:line="132" pos:column="11"/></name> <operator pos:line="132" pos:column="12">=<pos:position pos:line="132" pos:column="13"/></operator> <call><name pos:line="132" pos:column="14">fc_process_chain<pos:position pos:line="132" pos:column="30"/></name><argument_list pos:line="132" pos:column="30">(<argument><expr><name pos:line="132" pos:column="31">ds<pos:position pos:line="132" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="35">vl<pos:position pos:line="132" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="39">post_cache_chain<pos:position pos:line="132" pos:column="55"/></name></expr></argument>)<pos:position pos:line="132" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="57"/></expr_stmt>
    <if pos:line="133" pos:column="5">if <condition pos:line="133" pos:column="8">(<expr><name pos:line="133" pos:column="9">status<pos:position pos:line="133" pos:column="15"/></name> <operator pos:line="133" pos:column="16">&lt;<pos:position pos:line="133" pos:column="20"/></operator> <literal type="number" pos:line="133" pos:column="18">0<pos:position pos:line="133" pos:column="19"/></literal></expr>)<pos:position pos:line="133" pos:column="20"/></condition><then pos:line="133" pos:column="20"> <block pos:line="133" pos:column="21">{
      <expr_stmt><expr><call><name pos:line="134" pos:column="7">WARNING<pos:position pos:line="134" pos:column="14"/></name><argument_list pos:line="134" pos:column="14">(<argument><expr><literal type="string" pos:line="134" pos:column="15">"plugin_dispatch_values: Running the "<pos:position pos:line="134" pos:column="53"/></literal>
              <literal type="string" pos:line="135" pos:column="15">"post-cache chain failed with "<pos:position pos:line="135" pos:column="46"/></literal>
              <literal type="string" pos:line="136" pos:column="15">"status %i (%#x)."<pos:position pos:line="136" pos:column="33"/></literal></expr></argument>,
              <argument><expr><name pos:line="137" pos:column="15">status<pos:position pos:line="137" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="23">status<pos:position pos:line="137" pos:column="29"/></name></expr></argument>)<pos:position pos:line="137" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="138" pos:column="6"/></block></then></if>
  }<pos:position pos:line="139" pos:column="4"/></block></then> <else pos:line="139" pos:column="5">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="140" pos:column="5">fc_default_action<pos:position pos:line="140" pos:column="22"/></name><argument_list pos:line="140" pos:column="22">(<argument><expr><name pos:line="140" pos:column="23">ds<pos:position pos:line="140" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="140" pos:column="27">vl<pos:position pos:line="140" pos:column="29"/></name></expr></argument>)<pos:position pos:line="140" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="31"/></expr_stmt></block></else></if>

  <comment type="block" pos:line="142" pos:column="3">/* Restore the state of the value_list so that plugins don't get
   * confused.. */</comment>
  <if pos:line="144" pos:column="3">if <condition pos:line="144" pos:column="6">(<expr><name pos:line="144" pos:column="7">saved_values<pos:position pos:line="144" pos:column="19"/></name> <operator pos:line="144" pos:column="20">!=<pos:position pos:line="144" pos:column="22"/></operator> <name pos:line="144" pos:column="23">NULL<pos:position pos:line="144" pos:column="27"/></name></expr>)<pos:position pos:line="144" pos:column="28"/></condition><then pos:line="144" pos:column="28"> <block pos:line="144" pos:column="29">{
    <expr_stmt><expr><call><name pos:line="145" pos:column="5">sfree<pos:position pos:line="145" pos:column="10"/></name><argument_list pos:line="145" pos:column="10">(<argument><expr><name><name pos:line="145" pos:column="11">vl<pos:position pos:line="145" pos:column="13"/></name><operator pos:line="145" pos:column="13">-&gt;<pos:position pos:line="145" pos:column="18"/></operator><name pos:line="145" pos:column="15">values<pos:position pos:line="145" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="145" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="146" pos:column="5">vl<pos:position pos:line="146" pos:column="7"/></name><operator pos:line="146" pos:column="7">-&gt;<pos:position pos:line="146" pos:column="12"/></operator><name pos:line="146" pos:column="9">values<pos:position pos:line="146" pos:column="15"/></name></name> <operator pos:line="146" pos:column="16">=<pos:position pos:line="146" pos:column="17"/></operator> <name pos:line="146" pos:column="18">saved_values<pos:position pos:line="146" pos:column="30"/></name></expr>;<pos:position pos:line="146" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="147" pos:column="5">vl<pos:position pos:line="147" pos:column="7"/></name><operator pos:line="147" pos:column="7">-&gt;<pos:position pos:line="147" pos:column="12"/></operator><name pos:line="147" pos:column="9">values_len<pos:position pos:line="147" pos:column="19"/></name></name> <operator pos:line="147" pos:column="20">=<pos:position pos:line="147" pos:column="21"/></operator> <name pos:line="147" pos:column="22">saved_values_len<pos:position pos:line="147" pos:column="38"/></name></expr>;<pos:position pos:line="147" pos:column="39"/></expr_stmt>
  }<pos:position pos:line="148" pos:column="4"/></block></then></if>

  <if pos:line="150" pos:column="3">if <condition pos:line="150" pos:column="6">(<expr><operator pos:line="150" pos:column="7">(<pos:position pos:line="150" pos:column="8"/></operator><name pos:line="150" pos:column="8">free_meta_data<pos:position pos:line="150" pos:column="22"/></name> <operator pos:line="150" pos:column="23">!=<pos:position pos:line="150" pos:column="25"/></operator> <literal type="number" pos:line="150" pos:column="26">0<pos:position pos:line="150" pos:column="27"/></literal><operator pos:line="150" pos:column="27">)<pos:position pos:line="150" pos:column="28"/></operator> <operator pos:line="150" pos:column="29">&amp;&amp;<pos:position pos:line="150" pos:column="39"/></operator> <operator pos:line="150" pos:column="32">(<pos:position pos:line="150" pos:column="33"/></operator><name><name pos:line="150" pos:column="33">vl<pos:position pos:line="150" pos:column="35"/></name><operator pos:line="150" pos:column="35">-&gt;<pos:position pos:line="150" pos:column="40"/></operator><name pos:line="150" pos:column="37">meta<pos:position pos:line="150" pos:column="41"/></name></name> <operator pos:line="150" pos:column="42">!=<pos:position pos:line="150" pos:column="44"/></operator> <name pos:line="150" pos:column="45">NULL<pos:position pos:line="150" pos:column="49"/></name><operator pos:line="150" pos:column="49">)<pos:position pos:line="150" pos:column="50"/></operator></expr>)<pos:position pos:line="150" pos:column="51"/></condition><then pos:line="150" pos:column="51"> <block pos:line="150" pos:column="52">{
    <expr_stmt><expr><call><name pos:line="151" pos:column="5">meta_data_destroy<pos:position pos:line="151" pos:column="22"/></name><argument_list pos:line="151" pos:column="22">(<argument><expr><name><name pos:line="151" pos:column="23">vl<pos:position pos:line="151" pos:column="25"/></name><operator pos:line="151" pos:column="25">-&gt;<pos:position pos:line="151" pos:column="30"/></operator><name pos:line="151" pos:column="27">meta<pos:position pos:line="151" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="151" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="152" pos:column="5">vl<pos:position pos:line="152" pos:column="7"/></name><operator pos:line="152" pos:column="7">-&gt;<pos:position pos:line="152" pos:column="12"/></operator><name pos:line="152" pos:column="9">meta<pos:position pos:line="152" pos:column="13"/></name></name> <operator pos:line="152" pos:column="14">=<pos:position pos:line="152" pos:column="15"/></operator> <name pos:line="152" pos:column="16">NULL<pos:position pos:line="152" pos:column="20"/></name></expr>;<pos:position pos:line="152" pos:column="21"/></expr_stmt>
  }<pos:position pos:line="153" pos:column="4"/></block></then></if>

  <return pos:line="155" pos:column="3">return <expr><operator pos:line="155" pos:column="10">(<pos:position pos:line="155" pos:column="11"/></operator><literal type="number" pos:line="155" pos:column="11">0<pos:position pos:line="155" pos:column="12"/></literal><operator pos:line="155" pos:column="12">)<pos:position pos:line="155" pos:column="13"/></operator></expr>;<pos:position pos:line="155" pos:column="14"/></return>
}<pos:position pos:line="156" pos:column="2"/></block></function></unit>

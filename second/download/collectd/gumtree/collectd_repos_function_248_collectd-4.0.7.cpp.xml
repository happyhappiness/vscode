<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_248_collectd-4.0.7.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">parse_values<pos:position pos:line="1" pos:column="17"/></name> <parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">char<pos:position pos:line="1" pos:column="23"/></name> <modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type><name pos:line="1" pos:column="25">buffer<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="33">value_list_t<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">vl<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="51">const<pos:position pos:line="1" pos:column="56"/></specifier> <name pos:line="1" pos:column="57">data_set_t<pos:position pos:line="1" pos:column="67"/></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">ds<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">dummy<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">ptr<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">saveptr<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>

	<expr_stmt><expr><name pos:line="8" pos:column="9">i<pos:position pos:line="8" pos:column="10"/></name> <operator pos:line="8" pos:column="11">=<pos:position pos:line="8" pos:column="12"/></operator> <operator pos:line="8" pos:column="13">-<pos:position pos:line="8" pos:column="14"/></operator><literal type="number" pos:line="8" pos:column="14">1<pos:position pos:line="8" pos:column="15"/></literal></expr>;<pos:position pos:line="8" pos:column="16"/></expr_stmt>
	<expr_stmt><expr><name pos:line="9" pos:column="9">dummy<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">=<pos:position pos:line="9" pos:column="16"/></operator> <name pos:line="9" pos:column="17">buffer<pos:position pos:line="9" pos:column="23"/></name></expr>;<pos:position pos:line="9" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name pos:line="10" pos:column="9">saveptr<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">=<pos:position pos:line="10" pos:column="18"/></operator> <name pos:line="10" pos:column="19">NULL<pos:position pos:line="10" pos:column="23"/></name></expr>;<pos:position pos:line="10" pos:column="24"/></expr_stmt>
	<while pos:line="11" pos:column="9">while <condition pos:line="11" pos:column="15">(<expr><operator pos:line="11" pos:column="16">(<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="17">ptr<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">=<pos:position pos:line="11" pos:column="22"/></operator> <call><name pos:line="11" pos:column="23">strtok_r<pos:position pos:line="11" pos:column="31"/></name> <argument_list pos:line="11" pos:column="32">(<argument><expr><name pos:line="11" pos:column="33">dummy<pos:position pos:line="11" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="40">":"<pos:position pos:line="11" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="11" pos:column="45">&amp;<pos:position pos:line="11" pos:column="50"/></operator><name pos:line="11" pos:column="46">saveptr<pos:position pos:line="11" pos:column="53"/></name></expr></argument>)<pos:position pos:line="11" pos:column="54"/></argument_list></call><operator pos:line="11" pos:column="54">)<pos:position pos:line="11" pos:column="55"/></operator> <operator pos:line="11" pos:column="56">!=<pos:position pos:line="11" pos:column="58"/></operator> <name pos:line="11" pos:column="59">NULL<pos:position pos:line="11" pos:column="63"/></name></expr>)<pos:position pos:line="11" pos:column="64"/></condition>
	<block pos:line="12" pos:column="9">{
		<expr_stmt><expr><name pos:line="13" pos:column="17">dummy<pos:position pos:line="13" pos:column="22"/></name> <operator pos:line="13" pos:column="23">=<pos:position pos:line="13" pos:column="24"/></operator> <name pos:line="13" pos:column="25">NULL<pos:position pos:line="13" pos:column="29"/></name></expr>;<pos:position pos:line="13" pos:column="30"/></expr_stmt>

		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><name pos:line="15" pos:column="21">i<pos:position pos:line="15" pos:column="22"/></name> <operator pos:line="15" pos:column="23">&gt;=<pos:position pos:line="15" pos:column="28"/></operator> <name><name pos:line="15" pos:column="26">vl<pos:position pos:line="15" pos:column="28"/></name><operator pos:line="15" pos:column="28">-&gt;<pos:position pos:line="15" pos:column="33"/></operator><name pos:line="15" pos:column="30">values_len<pos:position pos:line="15" pos:column="40"/></name></name></expr>)<pos:position pos:line="15" pos:column="41"/></condition><then pos:line="15" pos:column="41">
			<block type="pseudo"><break pos:line="16" pos:column="25">break;<pos:position pos:line="16" pos:column="31"/></break></block></then></if>

		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name pos:line="18" pos:column="21">i<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">==<pos:position pos:line="18" pos:column="25"/></operator> <operator pos:line="18" pos:column="26">-<pos:position pos:line="18" pos:column="27"/></operator><literal type="number" pos:line="18" pos:column="27">1<pos:position pos:line="18" pos:column="28"/></literal></expr>)<pos:position pos:line="18" pos:column="29"/></condition><then pos:line="18" pos:column="29">
		<block pos:line="19" pos:column="17">{
			<if pos:line="20" pos:column="25">if <condition pos:line="20" pos:column="28">(<expr><call><name pos:line="20" pos:column="29">strcmp<pos:position pos:line="20" pos:column="35"/></name> <argument_list pos:line="20" pos:column="36">(<argument><expr><literal type="string" pos:line="20" pos:column="37">"N"<pos:position pos:line="20" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="42">ptr<pos:position pos:line="20" pos:column="45"/></name></expr></argument>)<pos:position pos:line="20" pos:column="46"/></argument_list></call> <operator pos:line="20" pos:column="47">==<pos:position pos:line="20" pos:column="49"/></operator> <literal type="number" pos:line="20" pos:column="50">0<pos:position pos:line="20" pos:column="51"/></literal></expr>)<pos:position pos:line="20" pos:column="52"/></condition><then pos:line="20" pos:column="52">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="21" pos:column="33">vl<pos:position pos:line="21" pos:column="35"/></name><operator pos:line="21" pos:column="35">-&gt;<pos:position pos:line="21" pos:column="40"/></operator><name pos:line="21" pos:column="37">time<pos:position pos:line="21" pos:column="41"/></name></name> <operator pos:line="21" pos:column="42">=<pos:position pos:line="21" pos:column="43"/></operator> <call><name pos:line="21" pos:column="44">time<pos:position pos:line="21" pos:column="48"/></name> <argument_list pos:line="21" pos:column="49">(<argument><expr><name pos:line="21" pos:column="50">NULL<pos:position pos:line="21" pos:column="54"/></name></expr></argument>)<pos:position pos:line="21" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="56"/></expr_stmt></block></then>
			<else pos:line="22" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="23" pos:column="33">vl<pos:position pos:line="23" pos:column="35"/></name><operator pos:line="23" pos:column="35">-&gt;<pos:position pos:line="23" pos:column="40"/></operator><name pos:line="23" pos:column="37">time<pos:position pos:line="23" pos:column="41"/></name></name> <operator pos:line="23" pos:column="42">=<pos:position pos:line="23" pos:column="43"/></operator> <operator pos:line="23" pos:column="44">(<pos:position pos:line="23" pos:column="45"/></operator><name pos:line="23" pos:column="45">time_t<pos:position pos:line="23" pos:column="51"/></name><operator pos:line="23" pos:column="51">)<pos:position pos:line="23" pos:column="52"/></operator> <call><name pos:line="23" pos:column="53">atoi<pos:position pos:line="23" pos:column="57"/></name> <argument_list pos:line="23" pos:column="58">(<argument><expr><name pos:line="23" pos:column="59">ptr<pos:position pos:line="23" pos:column="62"/></name></expr></argument>)<pos:position pos:line="23" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="64"/></expr_stmt></block></else></if>
		}<pos:position pos:line="24" pos:column="18"/></block></then>
		<else pos:line="25" pos:column="17">else
		<block pos:line="26" pos:column="17">{
			<if pos:line="27" pos:column="25">if <condition pos:line="27" pos:column="28">(<expr><call><name pos:line="27" pos:column="29">strcmp<pos:position pos:line="27" pos:column="35"/></name> <argument_list pos:line="27" pos:column="36">(<argument><expr><literal type="string" pos:line="27" pos:column="37">"U"<pos:position pos:line="27" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="42">ptr<pos:position pos:line="27" pos:column="45"/></name></expr></argument>)<pos:position pos:line="27" pos:column="46"/></argument_list></call> <operator pos:line="27" pos:column="47">==<pos:position pos:line="27" pos:column="49"/></operator> <literal type="number" pos:line="27" pos:column="50">0<pos:position pos:line="27" pos:column="51"/></literal></expr>)<pos:position pos:line="27" pos:column="52"/></condition><then pos:line="27" pos:column="52">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="28" pos:column="33">vl<pos:position pos:line="28" pos:column="35"/></name><operator pos:line="28" pos:column="35">-&gt;<pos:position pos:line="28" pos:column="40"/></operator><name pos:line="28" pos:column="37">values<pos:position pos:line="28" pos:column="43"/></name><index pos:line="28" pos:column="43">[<expr><name pos:line="28" pos:column="44">i<pos:position pos:line="28" pos:column="45"/></name></expr>]<pos:position pos:line="28" pos:column="46"/></index></name><operator pos:line="28" pos:column="46">.<pos:position pos:line="28" pos:column="47"/></operator><name pos:line="28" pos:column="47">gauge<pos:position pos:line="28" pos:column="52"/></name> <operator pos:line="28" pos:column="53">=<pos:position pos:line="28" pos:column="54"/></operator> <name pos:line="28" pos:column="55">NAN<pos:position pos:line="28" pos:column="58"/></name></expr>;<pos:position pos:line="28" pos:column="59"/></expr_stmt></block></then>
			<elseif pos:line="29" pos:column="25">else <if pos:line="29" pos:column="30">if <condition pos:line="29" pos:column="33">(<expr><name><name pos:line="29" pos:column="34">ds<pos:position pos:line="29" pos:column="36"/></name><operator pos:line="29" pos:column="36">-&gt;<pos:position pos:line="29" pos:column="41"/></operator><name pos:line="29" pos:column="38">ds<pos:position pos:line="29" pos:column="40"/></name><index pos:line="29" pos:column="40">[<expr><name pos:line="29" pos:column="41">i<pos:position pos:line="29" pos:column="42"/></name></expr>]<pos:position pos:line="29" pos:column="43"/></index></name><operator pos:line="29" pos:column="43">.<pos:position pos:line="29" pos:column="44"/></operator><name pos:line="29" pos:column="44">type<pos:position pos:line="29" pos:column="48"/></name> <operator pos:line="29" pos:column="49">==<pos:position pos:line="29" pos:column="51"/></operator> <name pos:line="29" pos:column="52">DS_TYPE_COUNTER<pos:position pos:line="29" pos:column="67"/></name></expr>)<pos:position pos:line="29" pos:column="68"/></condition><then pos:line="29" pos:column="68">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="30" pos:column="33">vl<pos:position pos:line="30" pos:column="35"/></name><operator pos:line="30" pos:column="35">-&gt;<pos:position pos:line="30" pos:column="40"/></operator><name pos:line="30" pos:column="37">values<pos:position pos:line="30" pos:column="43"/></name><index pos:line="30" pos:column="43">[<expr><name pos:line="30" pos:column="44">i<pos:position pos:line="30" pos:column="45"/></name></expr>]<pos:position pos:line="30" pos:column="46"/></index></name><operator pos:line="30" pos:column="46">.<pos:position pos:line="30" pos:column="47"/></operator><name pos:line="30" pos:column="47">counter<pos:position pos:line="30" pos:column="54"/></name> <operator pos:line="30" pos:column="55">=<pos:position pos:line="30" pos:column="56"/></operator> <call><name pos:line="30" pos:column="57">atoll<pos:position pos:line="30" pos:column="62"/></name> <argument_list pos:line="30" pos:column="63">(<argument><expr><name pos:line="30" pos:column="64">ptr<pos:position pos:line="30" pos:column="67"/></name></expr></argument>)<pos:position pos:line="30" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="69"/></expr_stmt></block></then></if></elseif>
			<elseif pos:line="31" pos:column="25">else <if pos:line="31" pos:column="30">if <condition pos:line="31" pos:column="33">(<expr><name><name pos:line="31" pos:column="34">ds<pos:position pos:line="31" pos:column="36"/></name><operator pos:line="31" pos:column="36">-&gt;<pos:position pos:line="31" pos:column="41"/></operator><name pos:line="31" pos:column="38">ds<pos:position pos:line="31" pos:column="40"/></name><index pos:line="31" pos:column="40">[<expr><name pos:line="31" pos:column="41">i<pos:position pos:line="31" pos:column="42"/></name></expr>]<pos:position pos:line="31" pos:column="43"/></index></name><operator pos:line="31" pos:column="43">.<pos:position pos:line="31" pos:column="44"/></operator><name pos:line="31" pos:column="44">type<pos:position pos:line="31" pos:column="48"/></name> <operator pos:line="31" pos:column="49">==<pos:position pos:line="31" pos:column="51"/></operator> <name pos:line="31" pos:column="52">DS_TYPE_GAUGE<pos:position pos:line="31" pos:column="65"/></name></expr>)<pos:position pos:line="31" pos:column="66"/></condition><then pos:line="31" pos:column="66">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="32" pos:column="33">vl<pos:position pos:line="32" pos:column="35"/></name><operator pos:line="32" pos:column="35">-&gt;<pos:position pos:line="32" pos:column="40"/></operator><name pos:line="32" pos:column="37">values<pos:position pos:line="32" pos:column="43"/></name><index pos:line="32" pos:column="43">[<expr><name pos:line="32" pos:column="44">i<pos:position pos:line="32" pos:column="45"/></name></expr>]<pos:position pos:line="32" pos:column="46"/></index></name><operator pos:line="32" pos:column="46">.<pos:position pos:line="32" pos:column="47"/></operator><name pos:line="32" pos:column="47">gauge<pos:position pos:line="32" pos:column="52"/></name> <operator pos:line="32" pos:column="53">=<pos:position pos:line="32" pos:column="54"/></operator> <call><name pos:line="32" pos:column="55">atof<pos:position pos:line="32" pos:column="59"/></name> <argument_list pos:line="32" pos:column="60">(<argument><expr><name pos:line="32" pos:column="61">ptr<pos:position pos:line="32" pos:column="64"/></name></expr></argument>)<pos:position pos:line="32" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="66"/></expr_stmt></block></then></if></elseif></if>
		}<pos:position pos:line="33" pos:column="18"/></block></else></if>

		<expr_stmt><expr><name pos:line="35" pos:column="17">i<pos:position pos:line="35" pos:column="18"/></name><operator pos:line="35" pos:column="18">++<pos:position pos:line="35" pos:column="20"/></operator></expr>;<pos:position pos:line="35" pos:column="21"/></expr_stmt>
	}<pos:position pos:line="36" pos:column="10"/></block></while> <comment type="block" pos:line="36" pos:column="11">/* while (strtok_r) */</comment>

	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><operator pos:line="38" pos:column="13">(<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="14">ptr<pos:position pos:line="38" pos:column="17"/></name> <operator pos:line="38" pos:column="18">!=<pos:position pos:line="38" pos:column="20"/></operator> <name pos:line="38" pos:column="21">NULL<pos:position pos:line="38" pos:column="25"/></name><operator pos:line="38" pos:column="25">)<pos:position pos:line="38" pos:column="26"/></operator> <operator pos:line="38" pos:column="27">||<pos:position pos:line="38" pos:column="29"/></operator> <operator pos:line="38" pos:column="30">(<pos:position pos:line="38" pos:column="31"/></operator><name pos:line="38" pos:column="31">i<pos:position pos:line="38" pos:column="32"/></name> <operator pos:line="38" pos:column="33">!=<pos:position pos:line="38" pos:column="35"/></operator> <name><name pos:line="38" pos:column="36">vl<pos:position pos:line="38" pos:column="38"/></name><operator pos:line="38" pos:column="38">-&gt;<pos:position pos:line="38" pos:column="43"/></operator><name pos:line="38" pos:column="40">values_len<pos:position pos:line="38" pos:column="50"/></name></name><operator pos:line="38" pos:column="50">)<pos:position pos:line="38" pos:column="51"/></operator></expr>)<pos:position pos:line="38" pos:column="52"/></condition><then pos:line="38" pos:column="52">
		<block type="pseudo"><return pos:line="39" pos:column="17">return <expr><operator pos:line="39" pos:column="24">(<pos:position pos:line="39" pos:column="25"/></operator><operator pos:line="39" pos:column="25">-<pos:position pos:line="39" pos:column="26"/></operator><literal type="number" pos:line="39" pos:column="26">1<pos:position pos:line="39" pos:column="27"/></literal><operator pos:line="39" pos:column="27">)<pos:position pos:line="39" pos:column="28"/></operator></expr>;<pos:position pos:line="39" pos:column="29"/></return></block></then></if>
	<return pos:line="40" pos:column="9">return <expr><operator pos:line="40" pos:column="16">(<pos:position pos:line="40" pos:column="17"/></operator><literal type="number" pos:line="40" pos:column="17">0<pos:position pos:line="40" pos:column="18"/></literal><operator pos:line="40" pos:column="18">)<pos:position pos:line="40" pos:column="19"/></operator></expr>;<pos:position pos:line="40" pos:column="20"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

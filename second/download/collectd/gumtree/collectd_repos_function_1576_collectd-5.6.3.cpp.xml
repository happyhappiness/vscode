<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1576_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">wrr_config_node<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">oconfig_item_t<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">ci<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list> <comment type="block" pos:line="1" pos:column="48">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">riemann_host<pos:position pos:line="3" pos:column="22"/></name></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">host<pos:position pos:line="3" pos:column="28"/></name> <init pos:line="3" pos:column="29">= <expr><name pos:line="3" pos:column="31">NULL<pos:position pos:line="3" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><literal type="number" pos:line="4" pos:column="16">0<pos:position pos:line="4" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">i<pos:position pos:line="5" pos:column="8"/></name></decl>;<pos:position pos:line="5" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">oconfig_item_t<pos:position pos:line="6" pos:column="17"/></name> <modifier pos:line="6" pos:column="18">*<pos:position pos:line="6" pos:column="19"/></modifier></type><name pos:line="6" pos:column="19">child<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type> <name><name pos:line="7" pos:column="8">callback_name<pos:position pos:line="7" pos:column="21"/></name><index pos:line="7" pos:column="21">[<expr><name pos:line="7" pos:column="22">DATA_MAX_NAME_LEN<pos:position pos:line="7" pos:column="39"/></name></expr>]<pos:position pos:line="7" pos:column="40"/></index></name></decl>;<pos:position pos:line="7" pos:column="41"/></decl_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">(<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">host<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <call><name pos:line="9" pos:column="15">calloc<pos:position pos:line="9" pos:column="21"/></name><argument_list pos:line="9" pos:column="21">(<argument><expr><literal type="number" pos:line="9" pos:column="22">1<pos:position pos:line="9" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="25">sizeof<argument_list pos:line="9" pos:column="31">(<argument><expr><operator pos:line="9" pos:column="32">*<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="33">host<pos:position pos:line="9" pos:column="37"/></name></expr></argument>)<pos:position pos:line="9" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="39"/></argument_list></call><operator pos:line="9" pos:column="39">)<pos:position pos:line="9" pos:column="40"/></operator> <operator pos:line="9" pos:column="41">==<pos:position pos:line="9" pos:column="43"/></operator> <name pos:line="9" pos:column="44">NULL<pos:position pos:line="9" pos:column="48"/></name></expr>)<pos:position pos:line="9" pos:column="49"/></condition><then pos:line="9" pos:column="49"> <block pos:line="9" pos:column="50">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">ERROR<pos:position pos:line="10" pos:column="10"/></name><argument_list pos:line="10" pos:column="10">(<argument><expr><literal type="string" pos:line="10" pos:column="11">"write_riemann plugin: calloc failed."<pos:position pos:line="10" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="51"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><name pos:line="11" pos:column="12">ENOMEM<pos:position pos:line="11" pos:column="18"/></name></expr>;<pos:position pos:line="11" pos:column="19"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">pthread_mutex_init<pos:position pos:line="13" pos:column="21"/></name><argument_list pos:line="13" pos:column="21">(<argument><expr><operator pos:line="13" pos:column="22">&amp;<pos:position pos:line="13" pos:column="27"/></operator><name><name pos:line="13" pos:column="23">host<pos:position pos:line="13" pos:column="27"/></name><operator pos:line="13" pos:column="27">-&gt;<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="29">lock<pos:position pos:line="13" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="35">NULL<pos:position pos:line="13" pos:column="39"/></name></expr></argument>)<pos:position pos:line="13" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="14" pos:column="3">C_COMPLAIN_INIT<pos:position pos:line="14" pos:column="18"/></name><argument_list pos:line="14" pos:column="18">(<argument><expr><operator pos:line="14" pos:column="19">&amp;<pos:position pos:line="14" pos:column="24"/></operator><name><name pos:line="14" pos:column="20">host<pos:position pos:line="14" pos:column="24"/></name><operator pos:line="14" pos:column="24">-&gt;<pos:position pos:line="14" pos:column="29"/></operator><name pos:line="14" pos:column="26">init_complaint<pos:position pos:line="14" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="15" pos:column="3">host<pos:position pos:line="15" pos:column="7"/></name><operator pos:line="15" pos:column="7">-&gt;<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="9">reference_count<pos:position pos:line="15" pos:column="24"/></name></name> <operator pos:line="15" pos:column="25">=<pos:position pos:line="15" pos:column="26"/></operator> <literal type="number" pos:line="15" pos:column="27">1<pos:position pos:line="15" pos:column="28"/></literal></expr>;<pos:position pos:line="15" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">host<pos:position pos:line="16" pos:column="7"/></name><operator pos:line="16" pos:column="7">-&gt;<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="9">node<pos:position pos:line="16" pos:column="13"/></name></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <name pos:line="16" pos:column="16">NULL<pos:position pos:line="16" pos:column="20"/></name></expr>;<pos:position pos:line="16" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">host<pos:position pos:line="17" pos:column="7"/></name><operator pos:line="17" pos:column="7">-&gt;<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="9">port<pos:position pos:line="17" pos:column="13"/></name></name> <operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator> <literal type="number" pos:line="17" pos:column="16">0<pos:position pos:line="17" pos:column="17"/></literal></expr>;<pos:position pos:line="17" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="18" pos:column="3">host<pos:position pos:line="18" pos:column="7"/></name><operator pos:line="18" pos:column="7">-&gt;<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="9">notifications<pos:position pos:line="18" pos:column="22"/></name></name> <operator pos:line="18" pos:column="23">=<pos:position pos:line="18" pos:column="24"/></operator> <literal type="number" pos:line="18" pos:column="25">1<pos:position pos:line="18" pos:column="26"/></literal></expr>;<pos:position pos:line="18" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="19" pos:column="3">host<pos:position pos:line="19" pos:column="7"/></name><operator pos:line="19" pos:column="7">-&gt;<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="9">check_thresholds<pos:position pos:line="19" pos:column="25"/></name></name> <operator pos:line="19" pos:column="26">=<pos:position pos:line="19" pos:column="27"/></operator> <literal type="number" pos:line="19" pos:column="28">0<pos:position pos:line="19" pos:column="29"/></literal></expr>;<pos:position pos:line="19" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="20" pos:column="3">host<pos:position pos:line="20" pos:column="7"/></name><operator pos:line="20" pos:column="7">-&gt;<pos:position pos:line="20" pos:column="12"/></operator><name pos:line="20" pos:column="9">store_rates<pos:position pos:line="20" pos:column="20"/></name></name> <operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator> <literal type="number" pos:line="20" pos:column="23">1<pos:position pos:line="20" pos:column="24"/></literal></expr>;<pos:position pos:line="20" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="21" pos:column="3">host<pos:position pos:line="21" pos:column="7"/></name><operator pos:line="21" pos:column="7">-&gt;<pos:position pos:line="21" pos:column="12"/></operator><name pos:line="21" pos:column="9">always_append_ds<pos:position pos:line="21" pos:column="25"/></name></name> <operator pos:line="21" pos:column="26">=<pos:position pos:line="21" pos:column="27"/></operator> <literal type="number" pos:line="21" pos:column="28">0<pos:position pos:line="21" pos:column="29"/></literal></expr>;<pos:position pos:line="21" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="22" pos:column="3">host<pos:position pos:line="22" pos:column="7"/></name><operator pos:line="22" pos:column="7">-&gt;<pos:position pos:line="22" pos:column="12"/></operator><name pos:line="22" pos:column="9">batch_mode<pos:position pos:line="22" pos:column="19"/></name></name> <operator pos:line="22" pos:column="20">=<pos:position pos:line="22" pos:column="21"/></operator> <literal type="number" pos:line="22" pos:column="22">1<pos:position pos:line="22" pos:column="23"/></literal></expr>;<pos:position pos:line="22" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="23" pos:column="3">host<pos:position pos:line="23" pos:column="7"/></name><operator pos:line="23" pos:column="7">-&gt;<pos:position pos:line="23" pos:column="12"/></operator><name pos:line="23" pos:column="9">batch_max<pos:position pos:line="23" pos:column="18"/></name></name> <operator pos:line="23" pos:column="19">=<pos:position pos:line="23" pos:column="20"/></operator> <name pos:line="23" pos:column="21">RIEMANN_BATCH_MAX<pos:position pos:line="23" pos:column="38"/></name></expr>;<pos:position pos:line="23" pos:column="39"/></expr_stmt> <comment type="block" pos:line="23" pos:column="40">/* typical MSS */</comment>
  <expr_stmt><expr><name><name pos:line="24" pos:column="3">host<pos:position pos:line="24" pos:column="7"/></name><operator pos:line="24" pos:column="7">-&gt;<pos:position pos:line="24" pos:column="12"/></operator><name pos:line="24" pos:column="9">batch_init<pos:position pos:line="24" pos:column="19"/></name></name> <operator pos:line="24" pos:column="20">=<pos:position pos:line="24" pos:column="21"/></operator> <call><name pos:line="24" pos:column="22">cdtime<pos:position pos:line="24" pos:column="28"/></name><argument_list pos:line="24" pos:column="28">()<pos:position pos:line="24" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="25" pos:column="3">host<pos:position pos:line="25" pos:column="7"/></name><operator pos:line="25" pos:column="7">-&gt;<pos:position pos:line="25" pos:column="12"/></operator><name pos:line="25" pos:column="9">batch_timeout<pos:position pos:line="25" pos:column="22"/></name></name> <operator pos:line="25" pos:column="23">=<pos:position pos:line="25" pos:column="24"/></operator> <literal type="number" pos:line="25" pos:column="25">0<pos:position pos:line="25" pos:column="26"/></literal></expr>;<pos:position pos:line="25" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="26" pos:column="3">host<pos:position pos:line="26" pos:column="7"/></name><operator pos:line="26" pos:column="7">-&gt;<pos:position pos:line="26" pos:column="12"/></operator><name pos:line="26" pos:column="9">ttl_factor<pos:position pos:line="26" pos:column="19"/></name></name> <operator pos:line="26" pos:column="20">=<pos:position pos:line="26" pos:column="21"/></operator> <name pos:line="26" pos:column="22">RIEMANN_TTL_FACTOR<pos:position pos:line="26" pos:column="40"/></name></expr>;<pos:position pos:line="26" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="27" pos:column="3">host<pos:position pos:line="27" pos:column="7"/></name><operator pos:line="27" pos:column="7">-&gt;<pos:position pos:line="27" pos:column="12"/></operator><name pos:line="27" pos:column="9">client<pos:position pos:line="27" pos:column="15"/></name></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <name pos:line="27" pos:column="18">NULL<pos:position pos:line="27" pos:column="22"/></name></expr>;<pos:position pos:line="27" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="28" pos:column="3">host<pos:position pos:line="28" pos:column="7"/></name><operator pos:line="28" pos:column="7">-&gt;<pos:position pos:line="28" pos:column="12"/></operator><name pos:line="28" pos:column="9">client_type<pos:position pos:line="28" pos:column="20"/></name></name> <operator pos:line="28" pos:column="21">=<pos:position pos:line="28" pos:column="22"/></operator> <name pos:line="28" pos:column="23">RIEMANN_CLIENT_TCP<pos:position pos:line="28" pos:column="41"/></name></expr>;<pos:position pos:line="28" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="29" pos:column="3">host<pos:position pos:line="29" pos:column="7"/></name><operator pos:line="29" pos:column="7">-&gt;<pos:position pos:line="29" pos:column="12"/></operator><name pos:line="29" pos:column="9">timeout<pos:position pos:line="29" pos:column="16"/></name><operator pos:line="29" pos:column="16">.<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="17">tv_sec<pos:position pos:line="29" pos:column="23"/></name></name> <operator pos:line="29" pos:column="24">=<pos:position pos:line="29" pos:column="25"/></operator> <literal type="number" pos:line="29" pos:column="26">0<pos:position pos:line="29" pos:column="27"/></literal></expr>;<pos:position pos:line="29" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="30" pos:column="3">host<pos:position pos:line="30" pos:column="7"/></name><operator pos:line="30" pos:column="7">-&gt;<pos:position pos:line="30" pos:column="12"/></operator><name pos:line="30" pos:column="9">timeout<pos:position pos:line="30" pos:column="16"/></name><operator pos:line="30" pos:column="16">.<pos:position pos:line="30" pos:column="17"/></operator><name pos:line="30" pos:column="17">tv_usec<pos:position pos:line="30" pos:column="24"/></name></name> <operator pos:line="30" pos:column="25">=<pos:position pos:line="30" pos:column="26"/></operator> <literal type="number" pos:line="30" pos:column="27">0<pos:position pos:line="30" pos:column="28"/></literal></expr>;<pos:position pos:line="30" pos:column="29"/></expr_stmt>

  <expr_stmt><expr><name pos:line="32" pos:column="3">status<pos:position pos:line="32" pos:column="9"/></name> <operator pos:line="32" pos:column="10">=<pos:position pos:line="32" pos:column="11"/></operator> <call><name pos:line="32" pos:column="12">cf_util_get_string<pos:position pos:line="32" pos:column="30"/></name><argument_list pos:line="32" pos:column="30">(<argument><expr><name pos:line="32" pos:column="31">ci<pos:position pos:line="32" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="35">&amp;<pos:position pos:line="32" pos:column="40"/></operator><name><name pos:line="32" pos:column="36">host<pos:position pos:line="32" pos:column="40"/></name><operator pos:line="32" pos:column="40">-&gt;<pos:position pos:line="32" pos:column="45"/></operator><name pos:line="32" pos:column="42">name<pos:position pos:line="32" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="48"/></expr_stmt>
  <if pos:line="33" pos:column="3">if <condition pos:line="33" pos:column="6">(<expr><name pos:line="33" pos:column="7">status<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">!=<pos:position pos:line="33" pos:column="16"/></operator> <literal type="number" pos:line="33" pos:column="17">0<pos:position pos:line="33" pos:column="18"/></literal></expr>)<pos:position pos:line="33" pos:column="19"/></condition><then pos:line="33" pos:column="19"> <block pos:line="33" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">WARNING<pos:position pos:line="34" pos:column="12"/></name><argument_list pos:line="34" pos:column="12">(<argument><expr><literal type="string" pos:line="34" pos:column="13">"write_riemann plugin: Required host name is missing."<pos:position pos:line="34" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">wrr_free<pos:position pos:line="35" pos:column="13"/></name><argument_list pos:line="35" pos:column="13">(<argument><expr><name pos:line="35" pos:column="14">host<pos:position pos:line="35" pos:column="18"/></name></expr></argument>)<pos:position pos:line="35" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="20"/></expr_stmt>
    <return pos:line="36" pos:column="5">return <expr><operator pos:line="36" pos:column="12">-<pos:position pos:line="36" pos:column="13"/></operator><literal type="number" pos:line="36" pos:column="13">1<pos:position pos:line="36" pos:column="14"/></literal></expr>;<pos:position pos:line="36" pos:column="15"/></return>
  }<pos:position pos:line="37" pos:column="4"/></block></then></if>

  <for pos:line="39" pos:column="3">for <control pos:line="39" pos:column="7">(<init><expr><name pos:line="39" pos:column="8">i<pos:position pos:line="39" pos:column="9"/></name> <operator pos:line="39" pos:column="10">=<pos:position pos:line="39" pos:column="11"/></operator> <literal type="number" pos:line="39" pos:column="12">0<pos:position pos:line="39" pos:column="13"/></literal></expr>;<pos:position pos:line="39" pos:column="14"/></init> <condition><expr><name pos:line="39" pos:column="15">i<pos:position pos:line="39" pos:column="16"/></name> <operator pos:line="39" pos:column="17">&lt;<pos:position pos:line="39" pos:column="21"/></operator> <name><name pos:line="39" pos:column="19">ci<pos:position pos:line="39" pos:column="21"/></name><operator pos:line="39" pos:column="21">-&gt;<pos:position pos:line="39" pos:column="26"/></operator><name pos:line="39" pos:column="23">children_num<pos:position pos:line="39" pos:column="35"/></name></name></expr>;<pos:position pos:line="39" pos:column="36"/></condition> <incr><expr><name pos:line="39" pos:column="37">i<pos:position pos:line="39" pos:column="38"/></name><operator pos:line="39" pos:column="38">++<pos:position pos:line="39" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="39" pos:column="41"/></control> <block pos:line="39" pos:column="42">{
    <comment type="block" pos:line="40" pos:column="5">/*
     * The code here could be simplified but makes room
     * for easy adding of new options later on.
     */</comment>
    <expr_stmt><expr><name pos:line="44" pos:column="5">child<pos:position pos:line="44" pos:column="10"/></name> <operator pos:line="44" pos:column="11">=<pos:position pos:line="44" pos:column="12"/></operator> <operator pos:line="44" pos:column="13">&amp;<pos:position pos:line="44" pos:column="18"/></operator><name><name pos:line="44" pos:column="14">ci<pos:position pos:line="44" pos:column="16"/></name><operator pos:line="44" pos:column="16">-&gt;<pos:position pos:line="44" pos:column="21"/></operator><name pos:line="44" pos:column="18">children<pos:position pos:line="44" pos:column="26"/></name><index pos:line="44" pos:column="26">[<expr><name pos:line="44" pos:column="27">i<pos:position pos:line="44" pos:column="28"/></name></expr>]<pos:position pos:line="44" pos:column="29"/></index></name></expr>;<pos:position pos:line="44" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="45" pos:column="5">status<pos:position pos:line="45" pos:column="11"/></name> <operator pos:line="45" pos:column="12">=<pos:position pos:line="45" pos:column="13"/></operator> <literal type="number" pos:line="45" pos:column="14">0<pos:position pos:line="45" pos:column="15"/></literal></expr>;<pos:position pos:line="45" pos:column="16"/></expr_stmt>

    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><call><name pos:line="47" pos:column="9">strcasecmp<pos:position pos:line="47" pos:column="19"/></name><argument_list pos:line="47" pos:column="19">(<argument><expr><literal type="string" pos:line="47" pos:column="20">"Host"<pos:position pos:line="47" pos:column="26"/></literal></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="28">child<pos:position pos:line="47" pos:column="33"/></name><operator pos:line="47" pos:column="33">-&gt;<pos:position pos:line="47" pos:column="38"/></operator><name pos:line="47" pos:column="35">key<pos:position pos:line="47" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="39"/></argument_list></call> <operator pos:line="47" pos:column="40">==<pos:position pos:line="47" pos:column="42"/></operator> <literal type="number" pos:line="47" pos:column="43">0<pos:position pos:line="47" pos:column="44"/></literal></expr>)<pos:position pos:line="47" pos:column="45"/></condition><then pos:line="47" pos:column="45"> <block pos:line="47" pos:column="46">{
      <expr_stmt><expr><name pos:line="48" pos:column="7">status<pos:position pos:line="48" pos:column="13"/></name> <operator pos:line="48" pos:column="14">=<pos:position pos:line="48" pos:column="15"/></operator> <call><name pos:line="48" pos:column="16">cf_util_get_string<pos:position pos:line="48" pos:column="34"/></name><argument_list pos:line="48" pos:column="34">(<argument><expr><name pos:line="48" pos:column="35">child<pos:position pos:line="48" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="42">&amp;<pos:position pos:line="48" pos:column="47"/></operator><name><name pos:line="48" pos:column="43">host<pos:position pos:line="48" pos:column="47"/></name><operator pos:line="48" pos:column="47">-&gt;<pos:position pos:line="48" pos:column="52"/></operator><name pos:line="48" pos:column="49">node<pos:position pos:line="48" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="55"/></expr_stmt>
      <if pos:line="49" pos:column="7">if <condition pos:line="49" pos:column="10">(<expr><name pos:line="49" pos:column="11">status<pos:position pos:line="49" pos:column="17"/></name> <operator pos:line="49" pos:column="18">!=<pos:position pos:line="49" pos:column="20"/></operator> <literal type="number" pos:line="49" pos:column="21">0<pos:position pos:line="49" pos:column="22"/></literal></expr>)<pos:position pos:line="49" pos:column="23"/></condition><then pos:line="49" pos:column="23">
        <block type="pseudo"><break pos:line="50" pos:column="9">break;<pos:position pos:line="50" pos:column="15"/></break></block></then></if>
    }<pos:position pos:line="51" pos:column="6"/></block></then> <elseif pos:line="51" pos:column="7">else <if pos:line="51" pos:column="12">if <condition pos:line="51" pos:column="15">(<expr><call><name pos:line="51" pos:column="16">strcasecmp<pos:position pos:line="51" pos:column="26"/></name><argument_list pos:line="51" pos:column="26">(<argument><expr><literal type="string" pos:line="51" pos:column="27">"Notifications"<pos:position pos:line="51" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="44">child<pos:position pos:line="51" pos:column="49"/></name><operator pos:line="51" pos:column="49">-&gt;<pos:position pos:line="51" pos:column="54"/></operator><name pos:line="51" pos:column="51">key<pos:position pos:line="51" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="55"/></argument_list></call> <operator pos:line="51" pos:column="56">==<pos:position pos:line="51" pos:column="58"/></operator> <literal type="number" pos:line="51" pos:column="59">0<pos:position pos:line="51" pos:column="60"/></literal></expr>)<pos:position pos:line="51" pos:column="61"/></condition><then pos:line="51" pos:column="61"> <block pos:line="51" pos:column="62">{
      <expr_stmt><expr><name pos:line="52" pos:column="7">status<pos:position pos:line="52" pos:column="13"/></name> <operator pos:line="52" pos:column="14">=<pos:position pos:line="52" pos:column="15"/></operator> <call><name pos:line="52" pos:column="16">cf_util_get_boolean<pos:position pos:line="52" pos:column="35"/></name><argument_list pos:line="52" pos:column="35">(<argument><expr><name pos:line="52" pos:column="36">child<pos:position pos:line="52" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="43">&amp;<pos:position pos:line="52" pos:column="48"/></operator><name><name pos:line="52" pos:column="44">host<pos:position pos:line="52" pos:column="48"/></name><operator pos:line="52" pos:column="48">-&gt;<pos:position pos:line="52" pos:column="53"/></operator><name pos:line="52" pos:column="50">notifications<pos:position pos:line="52" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="65"/></expr_stmt>
      <if pos:line="53" pos:column="7">if <condition pos:line="53" pos:column="10">(<expr><name pos:line="53" pos:column="11">status<pos:position pos:line="53" pos:column="17"/></name> <operator pos:line="53" pos:column="18">!=<pos:position pos:line="53" pos:column="20"/></operator> <literal type="number" pos:line="53" pos:column="21">0<pos:position pos:line="53" pos:column="22"/></literal></expr>)<pos:position pos:line="53" pos:column="23"/></condition><then pos:line="53" pos:column="23">
        <block type="pseudo"><break pos:line="54" pos:column="9">break;<pos:position pos:line="54" pos:column="15"/></break></block></then></if>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if></elseif> <elseif pos:line="55" pos:column="7">else <if pos:line="55" pos:column="12">if <condition pos:line="55" pos:column="15">(<expr><call><name pos:line="55" pos:column="16">strcasecmp<pos:position pos:line="55" pos:column="26"/></name><argument_list pos:line="55" pos:column="26">(<argument><expr><literal type="string" pos:line="55" pos:column="27">"EventServicePrefix"<pos:position pos:line="55" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="49">child<pos:position pos:line="55" pos:column="54"/></name><operator pos:line="55" pos:column="54">-&gt;<pos:position pos:line="55" pos:column="59"/></operator><name pos:line="55" pos:column="56">key<pos:position pos:line="55" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="60"/></argument_list></call> <operator pos:line="55" pos:column="61">==<pos:position pos:line="55" pos:column="63"/></operator> <literal type="number" pos:line="55" pos:column="64">0<pos:position pos:line="55" pos:column="65"/></literal></expr>)<pos:position pos:line="55" pos:column="66"/></condition><then pos:line="55" pos:column="66"> <block pos:line="55" pos:column="67">{
      <expr_stmt><expr><name pos:line="56" pos:column="7">status<pos:position pos:line="56" pos:column="13"/></name> <operator pos:line="56" pos:column="14">=<pos:position pos:line="56" pos:column="15"/></operator> <call><name pos:line="56" pos:column="16">cf_util_get_string<pos:position pos:line="56" pos:column="34"/></name><argument_list pos:line="56" pos:column="34">(<argument><expr><name pos:line="56" pos:column="35">child<pos:position pos:line="56" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="42">&amp;<pos:position pos:line="56" pos:column="47"/></operator><name><name pos:line="56" pos:column="43">host<pos:position pos:line="56" pos:column="47"/></name><operator pos:line="56" pos:column="47">-&gt;<pos:position pos:line="56" pos:column="52"/></operator><name pos:line="56" pos:column="49">event_service_prefix<pos:position pos:line="56" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="71"/></expr_stmt>
      <if pos:line="57" pos:column="7">if <condition pos:line="57" pos:column="10">(<expr><name pos:line="57" pos:column="11">status<pos:position pos:line="57" pos:column="17"/></name> <operator pos:line="57" pos:column="18">!=<pos:position pos:line="57" pos:column="20"/></operator> <literal type="number" pos:line="57" pos:column="21">0<pos:position pos:line="57" pos:column="22"/></literal></expr>)<pos:position pos:line="57" pos:column="23"/></condition><then pos:line="57" pos:column="23">
        <block type="pseudo"><break pos:line="58" pos:column="9">break;<pos:position pos:line="58" pos:column="15"/></break></block></then></if>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if></elseif> <elseif pos:line="59" pos:column="7">else <if pos:line="59" pos:column="12">if <condition pos:line="59" pos:column="15">(<expr><call><name pos:line="59" pos:column="16">strcasecmp<pos:position pos:line="59" pos:column="26"/></name><argument_list pos:line="59" pos:column="26">(<argument><expr><literal type="string" pos:line="59" pos:column="27">"CheckThresholds"<pos:position pos:line="59" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="46">child<pos:position pos:line="59" pos:column="51"/></name><operator pos:line="59" pos:column="51">-&gt;<pos:position pos:line="59" pos:column="56"/></operator><name pos:line="59" pos:column="53">key<pos:position pos:line="59" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="57"/></argument_list></call> <operator pos:line="59" pos:column="58">==<pos:position pos:line="59" pos:column="60"/></operator> <literal type="number" pos:line="59" pos:column="61">0<pos:position pos:line="59" pos:column="62"/></literal></expr>)<pos:position pos:line="59" pos:column="63"/></condition><then pos:line="59" pos:column="63"> <block pos:line="59" pos:column="64">{
      <expr_stmt><expr><name pos:line="60" pos:column="7">status<pos:position pos:line="60" pos:column="13"/></name> <operator pos:line="60" pos:column="14">=<pos:position pos:line="60" pos:column="15"/></operator> <call><name pos:line="60" pos:column="16">cf_util_get_boolean<pos:position pos:line="60" pos:column="35"/></name><argument_list pos:line="60" pos:column="35">(<argument><expr><name pos:line="60" pos:column="36">child<pos:position pos:line="60" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="43">&amp;<pos:position pos:line="60" pos:column="48"/></operator><name><name pos:line="60" pos:column="44">host<pos:position pos:line="60" pos:column="48"/></name><operator pos:line="60" pos:column="48">-&gt;<pos:position pos:line="60" pos:column="53"/></operator><name pos:line="60" pos:column="50">check_thresholds<pos:position pos:line="60" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="68"/></expr_stmt>
      <if pos:line="61" pos:column="7">if <condition pos:line="61" pos:column="10">(<expr><name pos:line="61" pos:column="11">status<pos:position pos:line="61" pos:column="17"/></name> <operator pos:line="61" pos:column="18">!=<pos:position pos:line="61" pos:column="20"/></operator> <literal type="number" pos:line="61" pos:column="21">0<pos:position pos:line="61" pos:column="22"/></literal></expr>)<pos:position pos:line="61" pos:column="23"/></condition><then pos:line="61" pos:column="23">
        <block type="pseudo"><break pos:line="62" pos:column="9">break;<pos:position pos:line="62" pos:column="15"/></break></block></then></if>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if></elseif> <elseif pos:line="63" pos:column="7">else <if pos:line="63" pos:column="12">if <condition pos:line="63" pos:column="15">(<expr><call><name pos:line="63" pos:column="16">strcasecmp<pos:position pos:line="63" pos:column="26"/></name><argument_list pos:line="63" pos:column="26">(<argument><expr><literal type="string" pos:line="63" pos:column="27">"Batch"<pos:position pos:line="63" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="36">child<pos:position pos:line="63" pos:column="41"/></name><operator pos:line="63" pos:column="41">-&gt;<pos:position pos:line="63" pos:column="46"/></operator><name pos:line="63" pos:column="43">key<pos:position pos:line="63" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="47"/></argument_list></call> <operator pos:line="63" pos:column="48">==<pos:position pos:line="63" pos:column="50"/></operator> <literal type="number" pos:line="63" pos:column="51">0<pos:position pos:line="63" pos:column="52"/></literal></expr>)<pos:position pos:line="63" pos:column="53"/></condition><then pos:line="63" pos:column="53"> <block pos:line="63" pos:column="54">{
      <expr_stmt><expr><name pos:line="64" pos:column="7">status<pos:position pos:line="64" pos:column="13"/></name> <operator pos:line="64" pos:column="14">=<pos:position pos:line="64" pos:column="15"/></operator> <call><name pos:line="64" pos:column="16">cf_util_get_boolean<pos:position pos:line="64" pos:column="35"/></name><argument_list pos:line="64" pos:column="35">(<argument><expr><name pos:line="64" pos:column="36">child<pos:position pos:line="64" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="43">&amp;<pos:position pos:line="64" pos:column="48"/></operator><name><name pos:line="64" pos:column="44">host<pos:position pos:line="64" pos:column="48"/></name><operator pos:line="64" pos:column="48">-&gt;<pos:position pos:line="64" pos:column="53"/></operator><name pos:line="64" pos:column="50">batch_mode<pos:position pos:line="64" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="62"/></expr_stmt>
      <if pos:line="65" pos:column="7">if <condition pos:line="65" pos:column="10">(<expr><name pos:line="65" pos:column="11">status<pos:position pos:line="65" pos:column="17"/></name> <operator pos:line="65" pos:column="18">!=<pos:position pos:line="65" pos:column="20"/></operator> <literal type="number" pos:line="65" pos:column="21">0<pos:position pos:line="65" pos:column="22"/></literal></expr>)<pos:position pos:line="65" pos:column="23"/></condition><then pos:line="65" pos:column="23">
        <block type="pseudo"><break pos:line="66" pos:column="9">break;<pos:position pos:line="66" pos:column="15"/></break></block></then></if>
    }<pos:position pos:line="67" pos:column="6"/></block></then></if></elseif> <elseif pos:line="67" pos:column="7">else <if pos:line="67" pos:column="12">if <condition pos:line="67" pos:column="15">(<expr><call><name pos:line="67" pos:column="16">strcasecmp<pos:position pos:line="67" pos:column="26"/></name><argument_list pos:line="67" pos:column="26">(<argument><expr><literal type="string" pos:line="67" pos:column="27">"BatchMaxSize"<pos:position pos:line="67" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="43">child<pos:position pos:line="67" pos:column="48"/></name><operator pos:line="67" pos:column="48">-&gt;<pos:position pos:line="67" pos:column="53"/></operator><name pos:line="67" pos:column="50">key<pos:position pos:line="67" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="54"/></argument_list></call> <operator pos:line="67" pos:column="55">==<pos:position pos:line="67" pos:column="57"/></operator> <literal type="number" pos:line="67" pos:column="58">0<pos:position pos:line="67" pos:column="59"/></literal></expr>)<pos:position pos:line="67" pos:column="60"/></condition><then pos:line="67" pos:column="60"> <block pos:line="67" pos:column="61">{
      <expr_stmt><expr><name pos:line="68" pos:column="7">status<pos:position pos:line="68" pos:column="13"/></name> <operator pos:line="68" pos:column="14">=<pos:position pos:line="68" pos:column="15"/></operator> <call><name pos:line="68" pos:column="16">cf_util_get_int<pos:position pos:line="68" pos:column="31"/></name><argument_list pos:line="68" pos:column="31">(<argument><expr><name pos:line="68" pos:column="32">child<pos:position pos:line="68" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="68" pos:column="39">&amp;<pos:position pos:line="68" pos:column="44"/></operator><name><name pos:line="68" pos:column="40">host<pos:position pos:line="68" pos:column="44"/></name><operator pos:line="68" pos:column="44">-&gt;<pos:position pos:line="68" pos:column="49"/></operator><name pos:line="68" pos:column="46">batch_max<pos:position pos:line="68" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="57"/></expr_stmt>
      <if pos:line="69" pos:column="7">if <condition pos:line="69" pos:column="10">(<expr><name pos:line="69" pos:column="11">status<pos:position pos:line="69" pos:column="17"/></name> <operator pos:line="69" pos:column="18">!=<pos:position pos:line="69" pos:column="20"/></operator> <literal type="number" pos:line="69" pos:column="21">0<pos:position pos:line="69" pos:column="22"/></literal></expr>)<pos:position pos:line="69" pos:column="23"/></condition><then pos:line="69" pos:column="23">
        <block type="pseudo"><break pos:line="70" pos:column="9">break;<pos:position pos:line="70" pos:column="15"/></break></block></then></if>
    }<pos:position pos:line="71" pos:column="6"/></block></then></if></elseif> <elseif pos:line="71" pos:column="7">else <if pos:line="71" pos:column="12">if <condition pos:line="71" pos:column="15">(<expr><call><name pos:line="71" pos:column="16">strcasecmp<pos:position pos:line="71" pos:column="26"/></name><argument_list pos:line="71" pos:column="26">(<argument><expr><literal type="string" pos:line="71" pos:column="27">"BatchFlushTimeout"<pos:position pos:line="71" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="48">child<pos:position pos:line="71" pos:column="53"/></name><operator pos:line="71" pos:column="53">-&gt;<pos:position pos:line="71" pos:column="58"/></operator><name pos:line="71" pos:column="55">key<pos:position pos:line="71" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="59"/></argument_list></call> <operator pos:line="71" pos:column="60">==<pos:position pos:line="71" pos:column="62"/></operator> <literal type="number" pos:line="71" pos:column="63">0<pos:position pos:line="71" pos:column="64"/></literal></expr>)<pos:position pos:line="71" pos:column="65"/></condition><then pos:line="71" pos:column="65"> <block pos:line="71" pos:column="66">{
      <expr_stmt><expr><name pos:line="72" pos:column="7">status<pos:position pos:line="72" pos:column="13"/></name> <operator pos:line="72" pos:column="14">=<pos:position pos:line="72" pos:column="15"/></operator> <call><name pos:line="72" pos:column="16">cf_util_get_int<pos:position pos:line="72" pos:column="31"/></name><argument_list pos:line="72" pos:column="31">(<argument><expr><name pos:line="72" pos:column="32">child<pos:position pos:line="72" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="72" pos:column="39">&amp;<pos:position pos:line="72" pos:column="44"/></operator><name><name pos:line="72" pos:column="40">host<pos:position pos:line="72" pos:column="44"/></name><operator pos:line="72" pos:column="44">-&gt;<pos:position pos:line="72" pos:column="49"/></operator><name pos:line="72" pos:column="46">batch_timeout<pos:position pos:line="72" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="61"/></expr_stmt>
      <if pos:line="73" pos:column="7">if <condition pos:line="73" pos:column="10">(<expr><name pos:line="73" pos:column="11">status<pos:position pos:line="73" pos:column="17"/></name> <operator pos:line="73" pos:column="18">!=<pos:position pos:line="73" pos:column="20"/></operator> <literal type="number" pos:line="73" pos:column="21">0<pos:position pos:line="73" pos:column="22"/></literal></expr>)<pos:position pos:line="73" pos:column="23"/></condition><then pos:line="73" pos:column="23">
        <block type="pseudo"><break pos:line="74" pos:column="9">break;<pos:position pos:line="74" pos:column="15"/></break></block></then></if>
    }<pos:position pos:line="75" pos:column="6"/></block></then></if></elseif> <elseif pos:line="75" pos:column="7">else <if pos:line="75" pos:column="12">if <condition pos:line="75" pos:column="15">(<expr><call><name pos:line="75" pos:column="16">strcasecmp<pos:position pos:line="75" pos:column="26"/></name><argument_list pos:line="75" pos:column="26">(<argument><expr><literal type="string" pos:line="75" pos:column="27">"Timeout"<pos:position pos:line="75" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="75" pos:column="38">child<pos:position pos:line="75" pos:column="43"/></name><operator pos:line="75" pos:column="43">-&gt;<pos:position pos:line="75" pos:column="48"/></operator><name pos:line="75" pos:column="45">key<pos:position pos:line="75" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="49"/></argument_list></call> <operator pos:line="75" pos:column="50">==<pos:position pos:line="75" pos:column="52"/></operator> <literal type="number" pos:line="75" pos:column="53">0<pos:position pos:line="75" pos:column="54"/></literal></expr>)<pos:position pos:line="75" pos:column="55"/></condition><then pos:line="75" pos:column="55"> <block pos:line="75" pos:column="56">{
<cpp:if pos:line="76" pos:column="1">#<cpp:directive pos:line="76" pos:column="2">if<pos:position pos:line="76" pos:column="4"/></cpp:directive> <expr><name pos:line="76" pos:column="5">RCC_VERSION_NUMBER<pos:position pos:line="76" pos:column="23"/></name> <operator pos:line="76" pos:column="24">&gt;=<pos:position pos:line="76" pos:column="29"/></operator> <literal type="number" pos:line="76" pos:column="27">0x010800<pos:position pos:line="76" pos:column="35"/></literal></expr></cpp:if>
      <expr_stmt><expr><name pos:line="77" pos:column="7">status<pos:position pos:line="77" pos:column="13"/></name> <operator pos:line="77" pos:column="14">=<pos:position pos:line="77" pos:column="15"/></operator> <call><name pos:line="77" pos:column="16">cf_util_get_int<pos:position pos:line="77" pos:column="31"/></name><argument_list pos:line="77" pos:column="31">(<argument><expr><name pos:line="77" pos:column="32">child<pos:position pos:line="77" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="77" pos:column="39">(<pos:position pos:line="77" pos:column="40"/></operator><name pos:line="77" pos:column="40">int<pos:position pos:line="77" pos:column="43"/></name> <operator pos:line="77" pos:column="44">*<pos:position pos:line="77" pos:column="45"/></operator><operator pos:line="77" pos:column="45">)<pos:position pos:line="77" pos:column="46"/></operator><operator pos:line="77" pos:column="46">&amp;<pos:position pos:line="77" pos:column="51"/></operator><name><name pos:line="77" pos:column="47">host<pos:position pos:line="77" pos:column="51"/></name><operator pos:line="77" pos:column="51">-&gt;<pos:position pos:line="77" pos:column="56"/></operator><name pos:line="77" pos:column="53">timeout<pos:position pos:line="77" pos:column="60"/></name><operator pos:line="77" pos:column="60">.<pos:position pos:line="77" pos:column="61"/></operator><name pos:line="77" pos:column="61">tv_sec<pos:position pos:line="77" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="69"/></expr_stmt>
      <if pos:line="78" pos:column="7">if <condition pos:line="78" pos:column="10">(<expr><name pos:line="78" pos:column="11">status<pos:position pos:line="78" pos:column="17"/></name> <operator pos:line="78" pos:column="18">!=<pos:position pos:line="78" pos:column="20"/></operator> <literal type="number" pos:line="78" pos:column="21">0<pos:position pos:line="78" pos:column="22"/></literal></expr>)<pos:position pos:line="78" pos:column="23"/></condition><then pos:line="78" pos:column="23">
        <block type="pseudo"><break pos:line="79" pos:column="9">break;<pos:position pos:line="79" pos:column="15"/></break></block></then></if>
<cpp:else pos:line="80" pos:column="1">#<cpp:directive pos:line="80" pos:column="2">else<pos:position pos:line="80" pos:column="6"/></cpp:directive></cpp:else>
      <expr_stmt><expr><call><name pos:line="81" pos:column="7">WARNING<pos:position pos:line="81" pos:column="14"/></name><argument_list pos:line="81" pos:column="14">(<argument><expr><literal type="string" pos:line="81" pos:column="15">"write_riemann plugin: The Timeout option is not supported. "<pos:position pos:line="81" pos:column="76"/></literal>
              <literal type="string" pos:line="82" pos:column="15">"Please upgrade the Riemann client to at least 1.8.0."<pos:position pos:line="82" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="71"/></expr_stmt>
<cpp:endif pos:line="83" pos:column="1">#<cpp:directive pos:line="83" pos:column="2">endif<pos:position pos:line="83" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="84" pos:column="6"/></block></then></if></elseif> <elseif pos:line="84" pos:column="7">else <if pos:line="84" pos:column="12">if <condition pos:line="84" pos:column="15">(<expr><call><name pos:line="84" pos:column="16">strcasecmp<pos:position pos:line="84" pos:column="26"/></name><argument_list pos:line="84" pos:column="26">(<argument><expr><literal type="string" pos:line="84" pos:column="27">"Port"<pos:position pos:line="84" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="84" pos:column="35">child<pos:position pos:line="84" pos:column="40"/></name><operator pos:line="84" pos:column="40">-&gt;<pos:position pos:line="84" pos:column="45"/></operator><name pos:line="84" pos:column="42">key<pos:position pos:line="84" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="46"/></argument_list></call> <operator pos:line="84" pos:column="47">==<pos:position pos:line="84" pos:column="49"/></operator> <literal type="number" pos:line="84" pos:column="50">0<pos:position pos:line="84" pos:column="51"/></literal></expr>)<pos:position pos:line="84" pos:column="52"/></condition><then pos:line="84" pos:column="52"> <block pos:line="84" pos:column="53">{
      <expr_stmt><expr><name><name pos:line="85" pos:column="7">host<pos:position pos:line="85" pos:column="11"/></name><operator pos:line="85" pos:column="11">-&gt;<pos:position pos:line="85" pos:column="16"/></operator><name pos:line="85" pos:column="13">port<pos:position pos:line="85" pos:column="17"/></name></name> <operator pos:line="85" pos:column="18">=<pos:position pos:line="85" pos:column="19"/></operator> <call><name pos:line="85" pos:column="20">cf_util_get_port_number<pos:position pos:line="85" pos:column="43"/></name><argument_list pos:line="85" pos:column="43">(<argument><expr><name pos:line="85" pos:column="44">child<pos:position pos:line="85" pos:column="49"/></name></expr></argument>)<pos:position pos:line="85" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="51"/></expr_stmt>
      <if pos:line="86" pos:column="7">if <condition pos:line="86" pos:column="10">(<expr><name><name pos:line="86" pos:column="11">host<pos:position pos:line="86" pos:column="15"/></name><operator pos:line="86" pos:column="15">-&gt;<pos:position pos:line="86" pos:column="20"/></operator><name pos:line="86" pos:column="17">port<pos:position pos:line="86" pos:column="21"/></name></name> <operator pos:line="86" pos:column="22">==<pos:position pos:line="86" pos:column="24"/></operator> <operator pos:line="86" pos:column="25">-<pos:position pos:line="86" pos:column="26"/></operator><literal type="number" pos:line="86" pos:column="26">1<pos:position pos:line="86" pos:column="27"/></literal></expr>)<pos:position pos:line="86" pos:column="28"/></condition><then pos:line="86" pos:column="28"> <block pos:line="86" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="87" pos:column="9">ERROR<pos:position pos:line="87" pos:column="14"/></name><argument_list pos:line="87" pos:column="14">(<argument><expr><literal type="string" pos:line="87" pos:column="15">"write_riemann plugin: Invalid argument "<pos:position pos:line="87" pos:column="56"/></literal>
              <literal type="string" pos:line="88" pos:column="15">"configured for the \"Port\" "<pos:position pos:line="88" pos:column="45"/></literal>
              <literal type="string" pos:line="89" pos:column="15">"option."<pos:position pos:line="89" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="26"/></expr_stmt>
        <break pos:line="90" pos:column="9">break;<pos:position pos:line="90" pos:column="15"/></break>
      }<pos:position pos:line="91" pos:column="8"/></block></then></if>
    }<pos:position pos:line="92" pos:column="6"/></block></then></if></elseif> <elseif pos:line="92" pos:column="7">else <if pos:line="92" pos:column="12">if <condition pos:line="92" pos:column="15">(<expr><call><name pos:line="92" pos:column="16">strcasecmp<pos:position pos:line="92" pos:column="26"/></name><argument_list pos:line="92" pos:column="26">(<argument><expr><literal type="string" pos:line="92" pos:column="27">"Protocol"<pos:position pos:line="92" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="92" pos:column="39">child<pos:position pos:line="92" pos:column="44"/></name><operator pos:line="92" pos:column="44">-&gt;<pos:position pos:line="92" pos:column="49"/></operator><name pos:line="92" pos:column="46">key<pos:position pos:line="92" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="92" pos:column="50"/></argument_list></call> <operator pos:line="92" pos:column="51">==<pos:position pos:line="92" pos:column="53"/></operator> <literal type="number" pos:line="92" pos:column="54">0<pos:position pos:line="92" pos:column="55"/></literal></expr>)<pos:position pos:line="92" pos:column="56"/></condition><then pos:line="92" pos:column="56"> <block pos:line="92" pos:column="57">{
      <decl_stmt><decl><type><name pos:line="93" pos:column="7">char<pos:position pos:line="93" pos:column="11"/></name></type> <name><name pos:line="93" pos:column="12">tmp<pos:position pos:line="93" pos:column="15"/></name><index pos:line="93" pos:column="15">[<expr><literal type="number" pos:line="93" pos:column="16">16<pos:position pos:line="93" pos:column="18"/></literal></expr>]<pos:position pos:line="93" pos:column="19"/></index></name></decl>;<pos:position pos:line="93" pos:column="20"/></decl_stmt>
      <expr_stmt><expr><name pos:line="94" pos:column="7">status<pos:position pos:line="94" pos:column="13"/></name> <operator pos:line="94" pos:column="14">=<pos:position pos:line="94" pos:column="15"/></operator> <call><name pos:line="94" pos:column="16">cf_util_get_string_buffer<pos:position pos:line="94" pos:column="41"/></name><argument_list pos:line="94" pos:column="41">(<argument><expr><name pos:line="94" pos:column="42">child<pos:position pos:line="94" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="49">tmp<pos:position pos:line="94" pos:column="52"/></name></expr></argument>, <argument><expr><sizeof pos:line="94" pos:column="54">sizeof<argument_list pos:line="94" pos:column="60">(<argument><expr><name pos:line="94" pos:column="61">tmp<pos:position pos:line="94" pos:column="64"/></name></expr></argument>)<pos:position pos:line="94" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="94" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="67"/></expr_stmt>
      <if pos:line="95" pos:column="7">if <condition pos:line="95" pos:column="10">(<expr><name pos:line="95" pos:column="11">status<pos:position pos:line="95" pos:column="17"/></name> <operator pos:line="95" pos:column="18">!=<pos:position pos:line="95" pos:column="20"/></operator> <literal type="number" pos:line="95" pos:column="21">0<pos:position pos:line="95" pos:column="22"/></literal></expr>)<pos:position pos:line="95" pos:column="23"/></condition><then pos:line="95" pos:column="23"> <block pos:line="95" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="96" pos:column="9">ERROR<pos:position pos:line="96" pos:column="14"/></name><argument_list pos:line="96" pos:column="14">(<argument><expr><literal type="string" pos:line="96" pos:column="15">"write_riemann plugin: cf_util_get_"<pos:position pos:line="96" pos:column="51"/></literal>
              <literal type="string" pos:line="97" pos:column="15">"string_buffer failed with "<pos:position pos:line="97" pos:column="43"/></literal>
              <literal type="string" pos:line="98" pos:column="15">"status %i."<pos:position pos:line="98" pos:column="27"/></literal></expr></argument>,
              <argument><expr><name pos:line="99" pos:column="15">status<pos:position pos:line="99" pos:column="21"/></name></expr></argument>)<pos:position pos:line="99" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="23"/></expr_stmt>
        <break pos:line="100" pos:column="9">break;<pos:position pos:line="100" pos:column="15"/></break>
      }<pos:position pos:line="101" pos:column="8"/></block></then></if>

      <if pos:line="103" pos:column="7">if <condition pos:line="103" pos:column="10">(<expr><call><name pos:line="103" pos:column="11">strcasecmp<pos:position pos:line="103" pos:column="21"/></name><argument_list pos:line="103" pos:column="21">(<argument><expr><literal type="string" pos:line="103" pos:column="22">"UDP"<pos:position pos:line="103" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="103" pos:column="29">tmp<pos:position pos:line="103" pos:column="32"/></name></expr></argument>)<pos:position pos:line="103" pos:column="33"/></argument_list></call> <operator pos:line="103" pos:column="34">==<pos:position pos:line="103" pos:column="36"/></operator> <literal type="number" pos:line="103" pos:column="37">0<pos:position pos:line="103" pos:column="38"/></literal></expr>)<pos:position pos:line="103" pos:column="39"/></condition><then pos:line="103" pos:column="39">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="104" pos:column="9">host<pos:position pos:line="104" pos:column="13"/></name><operator pos:line="104" pos:column="13">-&gt;<pos:position pos:line="104" pos:column="18"/></operator><name pos:line="104" pos:column="15">client_type<pos:position pos:line="104" pos:column="26"/></name></name> <operator pos:line="104" pos:column="27">=<pos:position pos:line="104" pos:column="28"/></operator> <name pos:line="104" pos:column="29">RIEMANN_CLIENT_UDP<pos:position pos:line="104" pos:column="47"/></name></expr>;<pos:position pos:line="104" pos:column="48"/></expr_stmt></block></then>
      <elseif pos:line="105" pos:column="7">else <if pos:line="105" pos:column="12">if <condition pos:line="105" pos:column="15">(<expr><call><name pos:line="105" pos:column="16">strcasecmp<pos:position pos:line="105" pos:column="26"/></name><argument_list pos:line="105" pos:column="26">(<argument><expr><literal type="string" pos:line="105" pos:column="27">"TCP"<pos:position pos:line="105" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="105" pos:column="34">tmp<pos:position pos:line="105" pos:column="37"/></name></expr></argument>)<pos:position pos:line="105" pos:column="38"/></argument_list></call> <operator pos:line="105" pos:column="39">==<pos:position pos:line="105" pos:column="41"/></operator> <literal type="number" pos:line="105" pos:column="42">0<pos:position pos:line="105" pos:column="43"/></literal></expr>)<pos:position pos:line="105" pos:column="44"/></condition><then pos:line="105" pos:column="44">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="106" pos:column="9">host<pos:position pos:line="106" pos:column="13"/></name><operator pos:line="106" pos:column="13">-&gt;<pos:position pos:line="106" pos:column="18"/></operator><name pos:line="106" pos:column="15">client_type<pos:position pos:line="106" pos:column="26"/></name></name> <operator pos:line="106" pos:column="27">=<pos:position pos:line="106" pos:column="28"/></operator> <name pos:line="106" pos:column="29">RIEMANN_CLIENT_TCP<pos:position pos:line="106" pos:column="47"/></name></expr>;<pos:position pos:line="106" pos:column="48"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="107" pos:column="7">else <if pos:line="107" pos:column="12">if <condition pos:line="107" pos:column="15">(<expr><call><name pos:line="107" pos:column="16">strcasecmp<pos:position pos:line="107" pos:column="26"/></name><argument_list pos:line="107" pos:column="26">(<argument><expr><literal type="string" pos:line="107" pos:column="27">"TLS"<pos:position pos:line="107" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="107" pos:column="34">tmp<pos:position pos:line="107" pos:column="37"/></name></expr></argument>)<pos:position pos:line="107" pos:column="38"/></argument_list></call> <operator pos:line="107" pos:column="39">==<pos:position pos:line="107" pos:column="41"/></operator> <literal type="number" pos:line="107" pos:column="42">0<pos:position pos:line="107" pos:column="43"/></literal></expr>)<pos:position pos:line="107" pos:column="44"/></condition><then pos:line="107" pos:column="44">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="108" pos:column="9">host<pos:position pos:line="108" pos:column="13"/></name><operator pos:line="108" pos:column="13">-&gt;<pos:position pos:line="108" pos:column="18"/></operator><name pos:line="108" pos:column="15">client_type<pos:position pos:line="108" pos:column="26"/></name></name> <operator pos:line="108" pos:column="27">=<pos:position pos:line="108" pos:column="28"/></operator> <name pos:line="108" pos:column="29">RIEMANN_CLIENT_TLS<pos:position pos:line="108" pos:column="47"/></name></expr>;<pos:position pos:line="108" pos:column="48"/></expr_stmt></block></then></if></elseif>
      <else pos:line="109" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="110" pos:column="9">WARNING<pos:position pos:line="110" pos:column="16"/></name><argument_list pos:line="110" pos:column="16">(<argument><expr><literal type="string" pos:line="110" pos:column="17">"write_riemann plugin: The value "<pos:position pos:line="110" pos:column="51"/></literal>
                <literal type="string" pos:line="111" pos:column="17">"\"%s\" is not valid for the "<pos:position pos:line="111" pos:column="47"/></literal>
                <literal type="string" pos:line="112" pos:column="17">"\"Protocol\" option. Use "<pos:position pos:line="112" pos:column="44"/></literal>
                <literal type="string" pos:line="113" pos:column="17">"either \"UDP\", \"TCP\" or \"TLS\"."<pos:position pos:line="113" pos:column="54"/></literal></expr></argument>,
                <argument><expr><name pos:line="114" pos:column="17">tmp<pos:position pos:line="114" pos:column="20"/></name></expr></argument>)<pos:position pos:line="114" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="22"/></expr_stmt></block></else></if>
    }<pos:position pos:line="115" pos:column="6"/></block></then></if></elseif> <elseif pos:line="115" pos:column="7">else <if pos:line="115" pos:column="12">if <condition pos:line="115" pos:column="15">(<expr><call><name pos:line="115" pos:column="16">strcasecmp<pos:position pos:line="115" pos:column="26"/></name><argument_list pos:line="115" pos:column="26">(<argument><expr><literal type="string" pos:line="115" pos:column="27">"TLSCAFile"<pos:position pos:line="115" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="115" pos:column="40">child<pos:position pos:line="115" pos:column="45"/></name><operator pos:line="115" pos:column="45">-&gt;<pos:position pos:line="115" pos:column="50"/></operator><name pos:line="115" pos:column="47">key<pos:position pos:line="115" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="115" pos:column="51"/></argument_list></call> <operator pos:line="115" pos:column="52">==<pos:position pos:line="115" pos:column="54"/></operator> <literal type="number" pos:line="115" pos:column="55">0<pos:position pos:line="115" pos:column="56"/></literal></expr>)<pos:position pos:line="115" pos:column="57"/></condition><then pos:line="115" pos:column="57"> <block pos:line="115" pos:column="58">{
      <expr_stmt><expr><name pos:line="116" pos:column="7">status<pos:position pos:line="116" pos:column="13"/></name> <operator pos:line="116" pos:column="14">=<pos:position pos:line="116" pos:column="15"/></operator> <call><name pos:line="116" pos:column="16">cf_util_get_string<pos:position pos:line="116" pos:column="34"/></name><argument_list pos:line="116" pos:column="34">(<argument><expr><name pos:line="116" pos:column="35">child<pos:position pos:line="116" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="116" pos:column="42">&amp;<pos:position pos:line="116" pos:column="47"/></operator><name><name pos:line="116" pos:column="43">host<pos:position pos:line="116" pos:column="47"/></name><operator pos:line="116" pos:column="47">-&gt;<pos:position pos:line="116" pos:column="52"/></operator><name pos:line="116" pos:column="49">tls_ca_file<pos:position pos:line="116" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="116" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="62"/></expr_stmt>
      <if pos:line="117" pos:column="7">if <condition pos:line="117" pos:column="10">(<expr><name pos:line="117" pos:column="11">status<pos:position pos:line="117" pos:column="17"/></name> <operator pos:line="117" pos:column="18">!=<pos:position pos:line="117" pos:column="20"/></operator> <literal type="number" pos:line="117" pos:column="21">0<pos:position pos:line="117" pos:column="22"/></literal></expr>)<pos:position pos:line="117" pos:column="23"/></condition><then pos:line="117" pos:column="23"> <block pos:line="117" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="118" pos:column="9">ERROR<pos:position pos:line="118" pos:column="14"/></name><argument_list pos:line="118" pos:column="14">(<argument><expr><literal type="string" pos:line="118" pos:column="15">"write_riemann plugin: cf_util_get_"<pos:position pos:line="118" pos:column="51"/></literal>
              <literal type="string" pos:line="119" pos:column="15">"string_buffer failed with "<pos:position pos:line="119" pos:column="43"/></literal>
              <literal type="string" pos:line="120" pos:column="15">"status %i."<pos:position pos:line="120" pos:column="27"/></literal></expr></argument>,
              <argument><expr><name pos:line="121" pos:column="15">status<pos:position pos:line="121" pos:column="21"/></name></expr></argument>)<pos:position pos:line="121" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="23"/></expr_stmt>
        <break pos:line="122" pos:column="9">break;<pos:position pos:line="122" pos:column="15"/></break>
      }<pos:position pos:line="123" pos:column="8"/></block></then></if>
    }<pos:position pos:line="124" pos:column="6"/></block></then></if></elseif> <elseif pos:line="124" pos:column="7">else <if pos:line="124" pos:column="12">if <condition pos:line="124" pos:column="15">(<expr><call><name pos:line="124" pos:column="16">strcasecmp<pos:position pos:line="124" pos:column="26"/></name><argument_list pos:line="124" pos:column="26">(<argument><expr><literal type="string" pos:line="124" pos:column="27">"TLSCertFile"<pos:position pos:line="124" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="124" pos:column="42">child<pos:position pos:line="124" pos:column="47"/></name><operator pos:line="124" pos:column="47">-&gt;<pos:position pos:line="124" pos:column="52"/></operator><name pos:line="124" pos:column="49">key<pos:position pos:line="124" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="124" pos:column="53"/></argument_list></call> <operator pos:line="124" pos:column="54">==<pos:position pos:line="124" pos:column="56"/></operator> <literal type="number" pos:line="124" pos:column="57">0<pos:position pos:line="124" pos:column="58"/></literal></expr>)<pos:position pos:line="124" pos:column="59"/></condition><then pos:line="124" pos:column="59"> <block pos:line="124" pos:column="60">{
      <expr_stmt><expr><name pos:line="125" pos:column="7">status<pos:position pos:line="125" pos:column="13"/></name> <operator pos:line="125" pos:column="14">=<pos:position pos:line="125" pos:column="15"/></operator> <call><name pos:line="125" pos:column="16">cf_util_get_string<pos:position pos:line="125" pos:column="34"/></name><argument_list pos:line="125" pos:column="34">(<argument><expr><name pos:line="125" pos:column="35">child<pos:position pos:line="125" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="125" pos:column="42">&amp;<pos:position pos:line="125" pos:column="47"/></operator><name><name pos:line="125" pos:column="43">host<pos:position pos:line="125" pos:column="47"/></name><operator pos:line="125" pos:column="47">-&gt;<pos:position pos:line="125" pos:column="52"/></operator><name pos:line="125" pos:column="49">tls_cert_file<pos:position pos:line="125" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="125" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="64"/></expr_stmt>
      <if pos:line="126" pos:column="7">if <condition pos:line="126" pos:column="10">(<expr><name pos:line="126" pos:column="11">status<pos:position pos:line="126" pos:column="17"/></name> <operator pos:line="126" pos:column="18">!=<pos:position pos:line="126" pos:column="20"/></operator> <literal type="number" pos:line="126" pos:column="21">0<pos:position pos:line="126" pos:column="22"/></literal></expr>)<pos:position pos:line="126" pos:column="23"/></condition><then pos:line="126" pos:column="23"> <block pos:line="126" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="127" pos:column="9">ERROR<pos:position pos:line="127" pos:column="14"/></name><argument_list pos:line="127" pos:column="14">(<argument><expr><literal type="string" pos:line="127" pos:column="15">"write_riemann plugin: cf_util_get_"<pos:position pos:line="127" pos:column="51"/></literal>
              <literal type="string" pos:line="128" pos:column="15">"string_buffer failed with "<pos:position pos:line="128" pos:column="43"/></literal>
              <literal type="string" pos:line="129" pos:column="15">"status %i."<pos:position pos:line="129" pos:column="27"/></literal></expr></argument>,
              <argument><expr><name pos:line="130" pos:column="15">status<pos:position pos:line="130" pos:column="21"/></name></expr></argument>)<pos:position pos:line="130" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="23"/></expr_stmt>
        <break pos:line="131" pos:column="9">break;<pos:position pos:line="131" pos:column="15"/></break>
      }<pos:position pos:line="132" pos:column="8"/></block></then></if>
    }<pos:position pos:line="133" pos:column="6"/></block></then></if></elseif> <elseif pos:line="133" pos:column="7">else <if pos:line="133" pos:column="12">if <condition pos:line="133" pos:column="15">(<expr><call><name pos:line="133" pos:column="16">strcasecmp<pos:position pos:line="133" pos:column="26"/></name><argument_list pos:line="133" pos:column="26">(<argument><expr><literal type="string" pos:line="133" pos:column="27">"TLSKeyFile"<pos:position pos:line="133" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="133" pos:column="41">child<pos:position pos:line="133" pos:column="46"/></name><operator pos:line="133" pos:column="46">-&gt;<pos:position pos:line="133" pos:column="51"/></operator><name pos:line="133" pos:column="48">key<pos:position pos:line="133" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="133" pos:column="52"/></argument_list></call> <operator pos:line="133" pos:column="53">==<pos:position pos:line="133" pos:column="55"/></operator> <literal type="number" pos:line="133" pos:column="56">0<pos:position pos:line="133" pos:column="57"/></literal></expr>)<pos:position pos:line="133" pos:column="58"/></condition><then pos:line="133" pos:column="58"> <block pos:line="133" pos:column="59">{
      <expr_stmt><expr><name pos:line="134" pos:column="7">status<pos:position pos:line="134" pos:column="13"/></name> <operator pos:line="134" pos:column="14">=<pos:position pos:line="134" pos:column="15"/></operator> <call><name pos:line="134" pos:column="16">cf_util_get_string<pos:position pos:line="134" pos:column="34"/></name><argument_list pos:line="134" pos:column="34">(<argument><expr><name pos:line="134" pos:column="35">child<pos:position pos:line="134" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="134" pos:column="42">&amp;<pos:position pos:line="134" pos:column="47"/></operator><name><name pos:line="134" pos:column="43">host<pos:position pos:line="134" pos:column="47"/></name><operator pos:line="134" pos:column="47">-&gt;<pos:position pos:line="134" pos:column="52"/></operator><name pos:line="134" pos:column="49">tls_key_file<pos:position pos:line="134" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="134" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="63"/></expr_stmt>
      <if pos:line="135" pos:column="7">if <condition pos:line="135" pos:column="10">(<expr><name pos:line="135" pos:column="11">status<pos:position pos:line="135" pos:column="17"/></name> <operator pos:line="135" pos:column="18">!=<pos:position pos:line="135" pos:column="20"/></operator> <literal type="number" pos:line="135" pos:column="21">0<pos:position pos:line="135" pos:column="22"/></literal></expr>)<pos:position pos:line="135" pos:column="23"/></condition><then pos:line="135" pos:column="23"> <block pos:line="135" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="136" pos:column="9">ERROR<pos:position pos:line="136" pos:column="14"/></name><argument_list pos:line="136" pos:column="14">(<argument><expr><literal type="string" pos:line="136" pos:column="15">"write_riemann plugin: cf_util_get_"<pos:position pos:line="136" pos:column="51"/></literal>
              <literal type="string" pos:line="137" pos:column="15">"string_buffer failed with "<pos:position pos:line="137" pos:column="43"/></literal>
              <literal type="string" pos:line="138" pos:column="15">"status %i."<pos:position pos:line="138" pos:column="27"/></literal></expr></argument>,
              <argument><expr><name pos:line="139" pos:column="15">status<pos:position pos:line="139" pos:column="21"/></name></expr></argument>)<pos:position pos:line="139" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="23"/></expr_stmt>
        <break pos:line="140" pos:column="9">break;<pos:position pos:line="140" pos:column="15"/></break>
      }<pos:position pos:line="141" pos:column="8"/></block></then></if>
    }<pos:position pos:line="142" pos:column="6"/></block></then></if></elseif> <elseif pos:line="142" pos:column="7">else <if pos:line="142" pos:column="12">if <condition pos:line="142" pos:column="15">(<expr><call><name pos:line="142" pos:column="16">strcasecmp<pos:position pos:line="142" pos:column="26"/></name><argument_list pos:line="142" pos:column="26">(<argument><expr><literal type="string" pos:line="142" pos:column="27">"StoreRates"<pos:position pos:line="142" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="142" pos:column="41">child<pos:position pos:line="142" pos:column="46"/></name><operator pos:line="142" pos:column="46">-&gt;<pos:position pos:line="142" pos:column="51"/></operator><name pos:line="142" pos:column="48">key<pos:position pos:line="142" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="142" pos:column="52"/></argument_list></call> <operator pos:line="142" pos:column="53">==<pos:position pos:line="142" pos:column="55"/></operator> <literal type="number" pos:line="142" pos:column="56">0<pos:position pos:line="142" pos:column="57"/></literal></expr>)<pos:position pos:line="142" pos:column="58"/></condition><then pos:line="142" pos:column="58"> <block pos:line="142" pos:column="59">{
      <expr_stmt><expr><name pos:line="143" pos:column="7">status<pos:position pos:line="143" pos:column="13"/></name> <operator pos:line="143" pos:column="14">=<pos:position pos:line="143" pos:column="15"/></operator> <call><name pos:line="143" pos:column="16">cf_util_get_boolean<pos:position pos:line="143" pos:column="35"/></name><argument_list pos:line="143" pos:column="35">(<argument><expr><name pos:line="143" pos:column="36">child<pos:position pos:line="143" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="143" pos:column="43">&amp;<pos:position pos:line="143" pos:column="48"/></operator><name><name pos:line="143" pos:column="44">host<pos:position pos:line="143" pos:column="48"/></name><operator pos:line="143" pos:column="48">-&gt;<pos:position pos:line="143" pos:column="53"/></operator><name pos:line="143" pos:column="50">store_rates<pos:position pos:line="143" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="143" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="63"/></expr_stmt>
      <if pos:line="144" pos:column="7">if <condition pos:line="144" pos:column="10">(<expr><name pos:line="144" pos:column="11">status<pos:position pos:line="144" pos:column="17"/></name> <operator pos:line="144" pos:column="18">!=<pos:position pos:line="144" pos:column="20"/></operator> <literal type="number" pos:line="144" pos:column="21">0<pos:position pos:line="144" pos:column="22"/></literal></expr>)<pos:position pos:line="144" pos:column="23"/></condition><then pos:line="144" pos:column="23">
        <block type="pseudo"><break pos:line="145" pos:column="9">break;<pos:position pos:line="145" pos:column="15"/></break></block></then></if>
    }<pos:position pos:line="146" pos:column="6"/></block></then></if></elseif> <elseif pos:line="146" pos:column="7">else <if pos:line="146" pos:column="12">if <condition pos:line="146" pos:column="15">(<expr><call><name pos:line="146" pos:column="16">strcasecmp<pos:position pos:line="146" pos:column="26"/></name><argument_list pos:line="146" pos:column="26">(<argument><expr><literal type="string" pos:line="146" pos:column="27">"AlwaysAppendDS"<pos:position pos:line="146" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="146" pos:column="45">child<pos:position pos:line="146" pos:column="50"/></name><operator pos:line="146" pos:column="50">-&gt;<pos:position pos:line="146" pos:column="55"/></operator><name pos:line="146" pos:column="52">key<pos:position pos:line="146" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="146" pos:column="56"/></argument_list></call> <operator pos:line="146" pos:column="57">==<pos:position pos:line="146" pos:column="59"/></operator> <literal type="number" pos:line="146" pos:column="60">0<pos:position pos:line="146" pos:column="61"/></literal></expr>)<pos:position pos:line="146" pos:column="62"/></condition><then pos:line="146" pos:column="62"> <block pos:line="146" pos:column="63">{
      <expr_stmt><expr><name pos:line="147" pos:column="7">status<pos:position pos:line="147" pos:column="13"/></name> <operator pos:line="147" pos:column="14">=<pos:position pos:line="147" pos:column="15"/></operator> <call><name pos:line="147" pos:column="16">cf_util_get_boolean<pos:position pos:line="147" pos:column="35"/></name><argument_list pos:line="147" pos:column="35">(<argument><expr><name pos:line="147" pos:column="36">child<pos:position pos:line="147" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="147" pos:column="43">&amp;<pos:position pos:line="147" pos:column="48"/></operator><name><name pos:line="147" pos:column="44">host<pos:position pos:line="147" pos:column="48"/></name><operator pos:line="147" pos:column="48">-&gt;<pos:position pos:line="147" pos:column="53"/></operator><name pos:line="147" pos:column="50">always_append_ds<pos:position pos:line="147" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="147" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="68"/></expr_stmt>
      <if pos:line="148" pos:column="7">if <condition pos:line="148" pos:column="10">(<expr><name pos:line="148" pos:column="11">status<pos:position pos:line="148" pos:column="17"/></name> <operator pos:line="148" pos:column="18">!=<pos:position pos:line="148" pos:column="20"/></operator> <literal type="number" pos:line="148" pos:column="21">0<pos:position pos:line="148" pos:column="22"/></literal></expr>)<pos:position pos:line="148" pos:column="23"/></condition><then pos:line="148" pos:column="23">
        <block type="pseudo"><break pos:line="149" pos:column="9">break;<pos:position pos:line="149" pos:column="15"/></break></block></then></if>
    }<pos:position pos:line="150" pos:column="6"/></block></then></if></elseif> <elseif pos:line="150" pos:column="7">else <if pos:line="150" pos:column="12">if <condition pos:line="150" pos:column="15">(<expr><call><name pos:line="150" pos:column="16">strcasecmp<pos:position pos:line="150" pos:column="26"/></name><argument_list pos:line="150" pos:column="26">(<argument><expr><literal type="string" pos:line="150" pos:column="27">"TTLFactor"<pos:position pos:line="150" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="150" pos:column="40">child<pos:position pos:line="150" pos:column="45"/></name><operator pos:line="150" pos:column="45">-&gt;<pos:position pos:line="150" pos:column="50"/></operator><name pos:line="150" pos:column="47">key<pos:position pos:line="150" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="150" pos:column="51"/></argument_list></call> <operator pos:line="150" pos:column="52">==<pos:position pos:line="150" pos:column="54"/></operator> <literal type="number" pos:line="150" pos:column="55">0<pos:position pos:line="150" pos:column="56"/></literal></expr>)<pos:position pos:line="150" pos:column="57"/></condition><then pos:line="150" pos:column="57"> <block pos:line="150" pos:column="58">{
      <decl_stmt><decl><type><name pos:line="151" pos:column="7">double<pos:position pos:line="151" pos:column="13"/></name></type> <name pos:line="151" pos:column="14">tmp<pos:position pos:line="151" pos:column="17"/></name> <init pos:line="151" pos:column="18">= <expr><name pos:line="151" pos:column="20">NAN<pos:position pos:line="151" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="151" pos:column="24"/></decl_stmt>
      <expr_stmt><expr><name pos:line="152" pos:column="7">status<pos:position pos:line="152" pos:column="13"/></name> <operator pos:line="152" pos:column="14">=<pos:position pos:line="152" pos:column="15"/></operator> <call><name pos:line="152" pos:column="16">cf_util_get_double<pos:position pos:line="152" pos:column="34"/></name><argument_list pos:line="152" pos:column="34">(<argument><expr><name pos:line="152" pos:column="35">child<pos:position pos:line="152" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="152" pos:column="42">&amp;<pos:position pos:line="152" pos:column="47"/></operator><name pos:line="152" pos:column="43">tmp<pos:position pos:line="152" pos:column="46"/></name></expr></argument>)<pos:position pos:line="152" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="48"/></expr_stmt>
      <if pos:line="153" pos:column="7">if <condition pos:line="153" pos:column="10">(<expr><name pos:line="153" pos:column="11">status<pos:position pos:line="153" pos:column="17"/></name> <operator pos:line="153" pos:column="18">!=<pos:position pos:line="153" pos:column="20"/></operator> <literal type="number" pos:line="153" pos:column="21">0<pos:position pos:line="153" pos:column="22"/></literal></expr>)<pos:position pos:line="153" pos:column="23"/></condition><then pos:line="153" pos:column="23">
        <block type="pseudo"><break pos:line="154" pos:column="9">break;<pos:position pos:line="154" pos:column="15"/></break></block></then></if>
      <if pos:line="155" pos:column="7">if <condition pos:line="155" pos:column="10">(<expr><name pos:line="155" pos:column="11">tmp<pos:position pos:line="155" pos:column="14"/></name> <operator pos:line="155" pos:column="15">&gt;=<pos:position pos:line="155" pos:column="20"/></operator> <literal type="number" pos:line="155" pos:column="18">2.0<pos:position pos:line="155" pos:column="21"/></literal></expr>)<pos:position pos:line="155" pos:column="22"/></condition><then pos:line="155" pos:column="22"> <block pos:line="155" pos:column="23">{
        <expr_stmt><expr><name><name pos:line="156" pos:column="9">host<pos:position pos:line="156" pos:column="13"/></name><operator pos:line="156" pos:column="13">-&gt;<pos:position pos:line="156" pos:column="18"/></operator><name pos:line="156" pos:column="15">ttl_factor<pos:position pos:line="156" pos:column="25"/></name></name> <operator pos:line="156" pos:column="26">=<pos:position pos:line="156" pos:column="27"/></operator> <name pos:line="156" pos:column="28">tmp<pos:position pos:line="156" pos:column="31"/></name></expr>;<pos:position pos:line="156" pos:column="32"/></expr_stmt>
      }<pos:position pos:line="157" pos:column="8"/></block></then> <elseif pos:line="157" pos:column="9">else <if pos:line="157" pos:column="14">if <condition pos:line="157" pos:column="17">(<expr><name pos:line="157" pos:column="18">tmp<pos:position pos:line="157" pos:column="21"/></name> <operator pos:line="157" pos:column="22">&gt;=<pos:position pos:line="157" pos:column="27"/></operator> <literal type="number" pos:line="157" pos:column="25">1.0<pos:position pos:line="157" pos:column="28"/></literal></expr>)<pos:position pos:line="157" pos:column="29"/></condition><then pos:line="157" pos:column="29"> <block pos:line="157" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="158" pos:column="9">NOTICE<pos:position pos:line="158" pos:column="15"/></name><argument_list pos:line="158" pos:column="15">(<argument><expr><literal type="string" pos:line="158" pos:column="16">"write_riemann plugin: The configured "<pos:position pos:line="158" pos:column="55"/></literal>
               <literal type="string" pos:line="159" pos:column="16">"TTLFactor is very small "<pos:position pos:line="159" pos:column="42"/></literal>
               <literal type="string" pos:line="160" pos:column="16">"(%.1f). A value of 2.0 or "<pos:position pos:line="160" pos:column="44"/></literal>
               <literal type="string" pos:line="161" pos:column="16">"greater is recommended."<pos:position pos:line="161" pos:column="41"/></literal></expr></argument>,
               <argument><expr><name pos:line="162" pos:column="16">tmp<pos:position pos:line="162" pos:column="19"/></name></expr></argument>)<pos:position pos:line="162" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="163" pos:column="9">host<pos:position pos:line="163" pos:column="13"/></name><operator pos:line="163" pos:column="13">-&gt;<pos:position pos:line="163" pos:column="18"/></operator><name pos:line="163" pos:column="15">ttl_factor<pos:position pos:line="163" pos:column="25"/></name></name> <operator pos:line="163" pos:column="26">=<pos:position pos:line="163" pos:column="27"/></operator> <name pos:line="163" pos:column="28">tmp<pos:position pos:line="163" pos:column="31"/></name></expr>;<pos:position pos:line="163" pos:column="32"/></expr_stmt>
      }<pos:position pos:line="164" pos:column="8"/></block></then></if></elseif> <elseif pos:line="164" pos:column="9">else <if pos:line="164" pos:column="14">if <condition pos:line="164" pos:column="17">(<expr><name pos:line="164" pos:column="18">tmp<pos:position pos:line="164" pos:column="21"/></name> <operator pos:line="164" pos:column="22">&gt;<pos:position pos:line="164" pos:column="26"/></operator> <literal type="number" pos:line="164" pos:column="24">0.0<pos:position pos:line="164" pos:column="27"/></literal></expr>)<pos:position pos:line="164" pos:column="28"/></condition><then pos:line="164" pos:column="28"> <block pos:line="164" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="165" pos:column="9">WARNING<pos:position pos:line="165" pos:column="16"/></name><argument_list pos:line="165" pos:column="16">(<argument><expr><literal type="string" pos:line="165" pos:column="17">"write_riemann plugin: The configured "<pos:position pos:line="165" pos:column="56"/></literal>
                <literal type="string" pos:line="166" pos:column="17">"TTLFactor is too small to be "<pos:position pos:line="166" pos:column="48"/></literal>
                <literal type="string" pos:line="167" pos:column="17">"useful (%.1f). I'll use it "<pos:position pos:line="167" pos:column="46"/></literal>
                <literal type="string" pos:line="168" pos:column="17">"since the user knows best, "<pos:position pos:line="168" pos:column="46"/></literal>
                <literal type="string" pos:line="169" pos:column="17">"but under protest."<pos:position pos:line="169" pos:column="37"/></literal></expr></argument>,
                <argument><expr><name pos:line="170" pos:column="17">tmp<pos:position pos:line="170" pos:column="20"/></name></expr></argument>)<pos:position pos:line="170" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="171" pos:column="9">host<pos:position pos:line="171" pos:column="13"/></name><operator pos:line="171" pos:column="13">-&gt;<pos:position pos:line="171" pos:column="18"/></operator><name pos:line="171" pos:column="15">ttl_factor<pos:position pos:line="171" pos:column="25"/></name></name> <operator pos:line="171" pos:column="26">=<pos:position pos:line="171" pos:column="27"/></operator> <name pos:line="171" pos:column="28">tmp<pos:position pos:line="171" pos:column="31"/></name></expr>;<pos:position pos:line="171" pos:column="32"/></expr_stmt>
      }<pos:position pos:line="172" pos:column="8"/></block></then></if></elseif> <else pos:line="172" pos:column="9">else <block pos:line="172" pos:column="14">{ <comment type="block" pos:line="172" pos:column="16">/* zero, negative and NAN */</comment>
        <expr_stmt><expr><call><name pos:line="173" pos:column="9">ERROR<pos:position pos:line="173" pos:column="14"/></name><argument_list pos:line="173" pos:column="14">(<argument><expr><literal type="string" pos:line="173" pos:column="15">"write_riemann plugin: The configured "<pos:position pos:line="173" pos:column="54"/></literal>
              <literal type="string" pos:line="174" pos:column="15">"TTLFactor is invalid (%.1f)."<pos:position pos:line="174" pos:column="45"/></literal></expr></argument>,
              <argument><expr><name pos:line="175" pos:column="15">tmp<pos:position pos:line="175" pos:column="18"/></name></expr></argument>)<pos:position pos:line="175" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="20"/></expr_stmt>
      }<pos:position pos:line="176" pos:column="8"/></block></else></if>
    }<pos:position pos:line="177" pos:column="6"/></block></then></if></elseif> <else pos:line="177" pos:column="7">else <block pos:line="177" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="178" pos:column="7">WARNING<pos:position pos:line="178" pos:column="14"/></name><argument_list pos:line="178" pos:column="14">(<argument><expr><literal type="string" pos:line="178" pos:column="15">"write_riemann plugin: ignoring unknown config "<pos:position pos:line="178" pos:column="63"/></literal>
              <literal type="string" pos:line="179" pos:column="15">"option: \"%s\""<pos:position pos:line="179" pos:column="31"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="180" pos:column="15">child<pos:position pos:line="180" pos:column="20"/></name><operator pos:line="180" pos:column="20">-&gt;<pos:position pos:line="180" pos:column="25"/></operator><name pos:line="180" pos:column="22">key<pos:position pos:line="180" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="180" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="181" pos:column="6"/></block></else></if>
  }<pos:position pos:line="182" pos:column="4"/></block></for>
  <if pos:line="183" pos:column="3">if <condition pos:line="183" pos:column="6">(<expr><name pos:line="183" pos:column="7">status<pos:position pos:line="183" pos:column="13"/></name> <operator pos:line="183" pos:column="14">!=<pos:position pos:line="183" pos:column="16"/></operator> <literal type="number" pos:line="183" pos:column="17">0<pos:position pos:line="183" pos:column="18"/></literal></expr>)<pos:position pos:line="183" pos:column="19"/></condition><then pos:line="183" pos:column="19"> <block pos:line="183" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="184" pos:column="5">wrr_free<pos:position pos:line="184" pos:column="13"/></name><argument_list pos:line="184" pos:column="13">(<argument><expr><name pos:line="184" pos:column="14">host<pos:position pos:line="184" pos:column="18"/></name></expr></argument>)<pos:position pos:line="184" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="20"/></expr_stmt>
    <return pos:line="185" pos:column="5">return <expr><name pos:line="185" pos:column="12">status<pos:position pos:line="185" pos:column="18"/></name></expr>;<pos:position pos:line="185" pos:column="19"/></return>
  }<pos:position pos:line="186" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="188" pos:column="3">ssnprintf<pos:position pos:line="188" pos:column="12"/></name><argument_list pos:line="188" pos:column="12">(<argument><expr><name pos:line="188" pos:column="13">callback_name<pos:position pos:line="188" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="188" pos:column="28">sizeof<argument_list pos:line="188" pos:column="34">(<argument><expr><name pos:line="188" pos:column="35">callback_name<pos:position pos:line="188" pos:column="48"/></name></expr></argument>)<pos:position pos:line="188" pos:column="49"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="188" pos:column="51">"write_riemann/%s"<pos:position pos:line="188" pos:column="69"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="189" pos:column="13">host<pos:position pos:line="189" pos:column="17"/></name><operator pos:line="189" pos:column="17">-&gt;<pos:position pos:line="189" pos:column="22"/></operator><name pos:line="189" pos:column="19">name<pos:position pos:line="189" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="189" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="25"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="191" pos:column="3">user_data_t<pos:position pos:line="191" pos:column="14"/></name></type> <name pos:line="191" pos:column="15">ud<pos:position pos:line="191" pos:column="17"/></name> <init pos:line="191" pos:column="18">= <expr><block pos:line="191" pos:column="20">{<expr><operator pos:line="191" pos:column="21">.<pos:position pos:line="191" pos:column="22"/></operator><name pos:line="191" pos:column="22">data<pos:position pos:line="191" pos:column="26"/></name> <operator pos:line="191" pos:column="27">=<pos:position pos:line="191" pos:column="28"/></operator> <name pos:line="191" pos:column="29">host<pos:position pos:line="191" pos:column="33"/></name></expr>, <expr><operator pos:line="191" pos:column="35">.<pos:position pos:line="191" pos:column="36"/></operator><name pos:line="191" pos:column="36">free_func<pos:position pos:line="191" pos:column="45"/></name> <operator pos:line="191" pos:column="46">=<pos:position pos:line="191" pos:column="47"/></operator> <name pos:line="191" pos:column="48">wrr_free<pos:position pos:line="191" pos:column="56"/></name></expr>}<pos:position pos:line="191" pos:column="57"/></block></expr></init></decl>;<pos:position pos:line="191" pos:column="58"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="193" pos:column="3">pthread_mutex_lock<pos:position pos:line="193" pos:column="21"/></name><argument_list pos:line="193" pos:column="21">(<argument><expr><operator pos:line="193" pos:column="22">&amp;<pos:position pos:line="193" pos:column="27"/></operator><name><name pos:line="193" pos:column="23">host<pos:position pos:line="193" pos:column="27"/></name><operator pos:line="193" pos:column="27">-&gt;<pos:position pos:line="193" pos:column="32"/></operator><name pos:line="193" pos:column="29">lock<pos:position pos:line="193" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="193" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="35"/></expr_stmt>

  <expr_stmt><expr><name pos:line="195" pos:column="3">status<pos:position pos:line="195" pos:column="9"/></name> <operator pos:line="195" pos:column="10">=<pos:position pos:line="195" pos:column="11"/></operator> <call><name pos:line="195" pos:column="12">plugin_register_write<pos:position pos:line="195" pos:column="33"/></name><argument_list pos:line="195" pos:column="33">(<argument><expr><name pos:line="195" pos:column="34">callback_name<pos:position pos:line="195" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="195" pos:column="49">wrr_write<pos:position pos:line="195" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="195" pos:column="60">&amp;<pos:position pos:line="195" pos:column="65"/></operator><name pos:line="195" pos:column="61">ud<pos:position pos:line="195" pos:column="63"/></name></expr></argument>)<pos:position pos:line="195" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="65"/></expr_stmt>

  <if pos:line="197" pos:column="3">if <condition pos:line="197" pos:column="6">(<expr><name><name pos:line="197" pos:column="7">host<pos:position pos:line="197" pos:column="11"/></name><operator pos:line="197" pos:column="11">-&gt;<pos:position pos:line="197" pos:column="16"/></operator><name pos:line="197" pos:column="13">client_type<pos:position pos:line="197" pos:column="24"/></name></name> <operator pos:line="197" pos:column="25">!=<pos:position pos:line="197" pos:column="27"/></operator> <name pos:line="197" pos:column="28">RIEMANN_CLIENT_UDP<pos:position pos:line="197" pos:column="46"/></name> <operator pos:line="197" pos:column="47">&amp;&amp;<pos:position pos:line="197" pos:column="57"/></operator> <name><name pos:line="197" pos:column="50">host<pos:position pos:line="197" pos:column="54"/></name><operator pos:line="197" pos:column="54">-&gt;<pos:position pos:line="197" pos:column="59"/></operator><name pos:line="197" pos:column="56">batch_mode<pos:position pos:line="197" pos:column="66"/></name></name></expr>)<pos:position pos:line="197" pos:column="67"/></condition><then pos:line="197" pos:column="67"> <block pos:line="197" pos:column="68">{
    <expr_stmt><expr><name><name pos:line="198" pos:column="5">ud<pos:position pos:line="198" pos:column="7"/></name><operator pos:line="198" pos:column="7">.<pos:position pos:line="198" pos:column="8"/></operator><name pos:line="198" pos:column="8">free_func<pos:position pos:line="198" pos:column="17"/></name></name> <operator pos:line="198" pos:column="18">=<pos:position pos:line="198" pos:column="19"/></operator> <name pos:line="198" pos:column="20">NULL<pos:position pos:line="198" pos:column="24"/></name></expr>;<pos:position pos:line="198" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="199" pos:column="5">plugin_register_flush<pos:position pos:line="199" pos:column="26"/></name><argument_list pos:line="199" pos:column="26">(<argument><expr><name pos:line="199" pos:column="27">callback_name<pos:position pos:line="199" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="199" pos:column="42">wrr_batch_flush<pos:position pos:line="199" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="199" pos:column="59">&amp;<pos:position pos:line="199" pos:column="64"/></operator><name pos:line="199" pos:column="60">ud<pos:position pos:line="199" pos:column="62"/></name></expr></argument>)<pos:position pos:line="199" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="64"/></expr_stmt>
  }<pos:position pos:line="200" pos:column="4"/></block></then></if>
  <if pos:line="201" pos:column="3">if <condition pos:line="201" pos:column="6">(<expr><name pos:line="201" pos:column="7">status<pos:position pos:line="201" pos:column="13"/></name> <operator pos:line="201" pos:column="14">!=<pos:position pos:line="201" pos:column="16"/></operator> <literal type="number" pos:line="201" pos:column="17">0<pos:position pos:line="201" pos:column="18"/></literal></expr>)<pos:position pos:line="201" pos:column="19"/></condition><then pos:line="201" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="202" pos:column="5">WARNING<pos:position pos:line="202" pos:column="12"/></name><argument_list pos:line="202" pos:column="12">(<argument><expr><literal type="string" pos:line="202" pos:column="13">"write_riemann plugin: plugin_register_write (\"%s\") "<pos:position pos:line="202" pos:column="68"/></literal>
            <literal type="string" pos:line="203" pos:column="13">"failed with status %i."<pos:position pos:line="203" pos:column="37"/></literal></expr></argument>,
            <argument><expr><name pos:line="204" pos:column="13">callback_name<pos:position pos:line="204" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="204" pos:column="28">status<pos:position pos:line="204" pos:column="34"/></name></expr></argument>)<pos:position pos:line="204" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="36"/></expr_stmt></block></then>
  <else pos:line="205" pos:column="3">else <comment type="block" pos:line="205" pos:column="8">/* success */</comment>
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="206" pos:column="5">host<pos:position pos:line="206" pos:column="9"/></name><operator pos:line="206" pos:column="9">-&gt;<pos:position pos:line="206" pos:column="14"/></operator><name pos:line="206" pos:column="11">reference_count<pos:position pos:line="206" pos:column="26"/></name></name><operator pos:line="206" pos:column="26">++<pos:position pos:line="206" pos:column="28"/></operator></expr>;<pos:position pos:line="206" pos:column="29"/></expr_stmt></block></else></if>

  <expr_stmt><expr><name pos:line="208" pos:column="3">status<pos:position pos:line="208" pos:column="9"/></name> <operator pos:line="208" pos:column="10">=<pos:position pos:line="208" pos:column="11"/></operator> <call><name pos:line="208" pos:column="12">plugin_register_notification<pos:position pos:line="208" pos:column="40"/></name><argument_list pos:line="208" pos:column="40">(<argument><expr><name pos:line="208" pos:column="41">callback_name<pos:position pos:line="208" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="208" pos:column="56">wrr_notification<pos:position pos:line="208" pos:column="72"/></name></expr></argument>, <argument><expr><operator pos:line="208" pos:column="74">&amp;<pos:position pos:line="208" pos:column="79"/></operator><name pos:line="208" pos:column="75">ud<pos:position pos:line="208" pos:column="77"/></name></expr></argument>)<pos:position pos:line="208" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="79"/></expr_stmt>
  <if pos:line="209" pos:column="3">if <condition pos:line="209" pos:column="6">(<expr><name pos:line="209" pos:column="7">status<pos:position pos:line="209" pos:column="13"/></name> <operator pos:line="209" pos:column="14">!=<pos:position pos:line="209" pos:column="16"/></operator> <literal type="number" pos:line="209" pos:column="17">0<pos:position pos:line="209" pos:column="18"/></literal></expr>)<pos:position pos:line="209" pos:column="19"/></condition><then pos:line="209" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="210" pos:column="5">WARNING<pos:position pos:line="210" pos:column="12"/></name><argument_list pos:line="210" pos:column="12">(<argument><expr><literal type="string" pos:line="210" pos:column="13">"write_riemann plugin: plugin_register_notification (\"%s\") "<pos:position pos:line="210" pos:column="75"/></literal>
            <literal type="string" pos:line="211" pos:column="13">"failed with status %i."<pos:position pos:line="211" pos:column="37"/></literal></expr></argument>,
            <argument><expr><name pos:line="212" pos:column="13">callback_name<pos:position pos:line="212" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="212" pos:column="28">status<pos:position pos:line="212" pos:column="34"/></name></expr></argument>)<pos:position pos:line="212" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="212" pos:column="36"/></expr_stmt></block></then>
  <else pos:line="213" pos:column="3">else <comment type="block" pos:line="213" pos:column="8">/* success */</comment>
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="214" pos:column="5">host<pos:position pos:line="214" pos:column="9"/></name><operator pos:line="214" pos:column="9">-&gt;<pos:position pos:line="214" pos:column="14"/></operator><name pos:line="214" pos:column="11">reference_count<pos:position pos:line="214" pos:column="26"/></name></name><operator pos:line="214" pos:column="26">++<pos:position pos:line="214" pos:column="28"/></operator></expr>;<pos:position pos:line="214" pos:column="29"/></expr_stmt></block></else></if>

  <if pos:line="216" pos:column="3">if <condition pos:line="216" pos:column="6">(<expr><name><name pos:line="216" pos:column="7">host<pos:position pos:line="216" pos:column="11"/></name><operator pos:line="216" pos:column="11">-&gt;<pos:position pos:line="216" pos:column="16"/></operator><name pos:line="216" pos:column="13">reference_count<pos:position pos:line="216" pos:column="28"/></name></name> <operator pos:line="216" pos:column="29">&lt;=<pos:position pos:line="216" pos:column="34"/></operator> <literal type="number" pos:line="216" pos:column="32">1<pos:position pos:line="216" pos:column="33"/></literal></expr>)<pos:position pos:line="216" pos:column="34"/></condition><then pos:line="216" pos:column="34"> <block pos:line="216" pos:column="35">{
    <comment type="block" pos:line="217" pos:column="5">/* Both callbacks failed =&gt; free memory.
     * We need to unlock here, because riemann_free() will lock.
     * This is not a race condition, because we're the only one
     * holding a reference. */</comment>
    <expr_stmt><expr><call><name pos:line="221" pos:column="5">pthread_mutex_unlock<pos:position pos:line="221" pos:column="25"/></name><argument_list pos:line="221" pos:column="25">(<argument><expr><operator pos:line="221" pos:column="26">&amp;<pos:position pos:line="221" pos:column="31"/></operator><name><name pos:line="221" pos:column="27">host<pos:position pos:line="221" pos:column="31"/></name><operator pos:line="221" pos:column="31">-&gt;<pos:position pos:line="221" pos:column="36"/></operator><name pos:line="221" pos:column="33">lock<pos:position pos:line="221" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="221" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="221" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="222" pos:column="5">wrr_free<pos:position pos:line="222" pos:column="13"/></name><argument_list pos:line="222" pos:column="13">(<argument><expr><name pos:line="222" pos:column="14">host<pos:position pos:line="222" pos:column="18"/></name></expr></argument>)<pos:position pos:line="222" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="20"/></expr_stmt>
    <return pos:line="223" pos:column="5">return <expr><operator pos:line="223" pos:column="12">(<pos:position pos:line="223" pos:column="13"/></operator><operator pos:line="223" pos:column="13">-<pos:position pos:line="223" pos:column="14"/></operator><literal type="number" pos:line="223" pos:column="14">1<pos:position pos:line="223" pos:column="15"/></literal><operator pos:line="223" pos:column="15">)<pos:position pos:line="223" pos:column="16"/></operator></expr>;<pos:position pos:line="223" pos:column="17"/></return>
  }<pos:position pos:line="224" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="226" pos:column="3">host<pos:position pos:line="226" pos:column="7"/></name><operator pos:line="226" pos:column="7">-&gt;<pos:position pos:line="226" pos:column="12"/></operator><name pos:line="226" pos:column="9">reference_count<pos:position pos:line="226" pos:column="24"/></name></name><operator pos:line="226" pos:column="24">--<pos:position pos:line="226" pos:column="26"/></operator></expr>;<pos:position pos:line="226" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="227" pos:column="3">pthread_mutex_unlock<pos:position pos:line="227" pos:column="23"/></name><argument_list pos:line="227" pos:column="23">(<argument><expr><operator pos:line="227" pos:column="24">&amp;<pos:position pos:line="227" pos:column="29"/></operator><name><name pos:line="227" pos:column="25">host<pos:position pos:line="227" pos:column="29"/></name><operator pos:line="227" pos:column="29">-&gt;<pos:position pos:line="227" pos:column="34"/></operator><name pos:line="227" pos:column="31">lock<pos:position pos:line="227" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="227" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="227" pos:column="37"/></expr_stmt>

  <return pos:line="229" pos:column="3">return <expr><name pos:line="229" pos:column="10">status<pos:position pos:line="229" pos:column="16"/></name></expr>;<pos:position pos:line="229" pos:column="17"/></return>
}<pos:position pos:line="230" pos:column="2"/></block></function></unit>

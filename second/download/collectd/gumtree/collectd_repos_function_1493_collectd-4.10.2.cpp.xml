<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1493_collectd-4.10.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">meta_data_get_string<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">meta_data_t<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">md<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="44">/* {{{ */</comment>
    <parameter><decl><type><specifier pos:line="2" pos:column="5">const<pos:position pos:line="2" pos:column="10"/></specifier> <name pos:line="2" pos:column="11">char<pos:position pos:line="2" pos:column="15"/></name> <modifier pos:line="2" pos:column="16">*<pos:position pos:line="2" pos:column="17"/></modifier></type><name pos:line="2" pos:column="17">key<pos:position pos:line="2" pos:column="20"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="22">char<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier><modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">value<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">meta_entry_t<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">e<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">temp<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><operator pos:line="7" pos:column="7">(<pos:position pos:line="7" pos:column="8"/></operator><name pos:line="7" pos:column="8">md<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">==<pos:position pos:line="7" pos:column="13"/></operator> <name pos:line="7" pos:column="14">NULL<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">)<pos:position pos:line="7" pos:column="19"/></operator> <operator pos:line="7" pos:column="20">||<pos:position pos:line="7" pos:column="22"/></operator> <operator pos:line="7" pos:column="23">(<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="24">key<pos:position pos:line="7" pos:column="27"/></name> <operator pos:line="7" pos:column="28">==<pos:position pos:line="7" pos:column="30"/></operator> <name pos:line="7" pos:column="31">NULL<pos:position pos:line="7" pos:column="35"/></name><operator pos:line="7" pos:column="35">)<pos:position pos:line="7" pos:column="36"/></operator> <operator pos:line="7" pos:column="37">||<pos:position pos:line="7" pos:column="39"/></operator> <operator pos:line="7" pos:column="40">(<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="41">value<pos:position pos:line="7" pos:column="46"/></name> <operator pos:line="7" pos:column="47">==<pos:position pos:line="7" pos:column="49"/></operator> <name pos:line="7" pos:column="50">NULL<pos:position pos:line="7" pos:column="54"/></name><operator pos:line="7" pos:column="54">)<pos:position pos:line="7" pos:column="55"/></operator></expr>)<pos:position pos:line="7" pos:column="56"/></condition><then pos:line="7" pos:column="56">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><operator pos:line="8" pos:column="13">-<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">EINVAL<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">)<pos:position pos:line="8" pos:column="21"/></operator></expr>;<pos:position pos:line="8" pos:column="22"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="10" pos:column="3">pthread_mutex_lock<pos:position pos:line="10" pos:column="21"/></name> <argument_list pos:line="10" pos:column="22">(<argument><expr><operator pos:line="10" pos:column="23">&amp;<pos:position pos:line="10" pos:column="28"/></operator><name><name pos:line="10" pos:column="24">md<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">-&gt;<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="28">lock<pos:position pos:line="10" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="34"/></expr_stmt>

  <expr_stmt><expr><name pos:line="12" pos:column="3">e<pos:position pos:line="12" pos:column="4"/></name> <operator pos:line="12" pos:column="5">=<pos:position pos:line="12" pos:column="6"/></operator> <call><name pos:line="12" pos:column="7">md_entry_lookup<pos:position pos:line="12" pos:column="22"/></name> <argument_list pos:line="12" pos:column="23">(<argument><expr><name pos:line="12" pos:column="24">md<pos:position pos:line="12" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="28">key<pos:position pos:line="12" pos:column="31"/></name></expr></argument>)<pos:position pos:line="12" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="33"/></expr_stmt>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">e<pos:position pos:line="13" pos:column="8"/></name> <operator pos:line="13" pos:column="9">==<pos:position pos:line="13" pos:column="11"/></operator> <name pos:line="13" pos:column="12">NULL<pos:position pos:line="13" pos:column="16"/></name></expr>)<pos:position pos:line="13" pos:column="17"/></condition><then pos:line="13" pos:column="17">
  <block pos:line="14" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">pthread_mutex_unlock<pos:position pos:line="15" pos:column="25"/></name> <argument_list pos:line="15" pos:column="26">(<argument><expr><operator pos:line="15" pos:column="27">&amp;<pos:position pos:line="15" pos:column="32"/></operator><name><name pos:line="15" pos:column="28">md<pos:position pos:line="15" pos:column="30"/></name><operator pos:line="15" pos:column="30">-&gt;<pos:position pos:line="15" pos:column="35"/></operator><name pos:line="15" pos:column="32">lock<pos:position pos:line="15" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="38"/></expr_stmt>
    <return pos:line="16" pos:column="5">return <expr><operator pos:line="16" pos:column="12">(<pos:position pos:line="16" pos:column="13"/></operator><operator pos:line="16" pos:column="13">-<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">ENOENT<pos:position pos:line="16" pos:column="20"/></name><operator pos:line="16" pos:column="20">)<pos:position pos:line="16" pos:column="21"/></operator></expr>;<pos:position pos:line="16" pos:column="22"/></return>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>

  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><name><name pos:line="19" pos:column="7">e<pos:position pos:line="19" pos:column="8"/></name><operator pos:line="19" pos:column="8">-&gt;<pos:position pos:line="19" pos:column="13"/></operator><name pos:line="19" pos:column="10">type<pos:position pos:line="19" pos:column="14"/></name></name> <operator pos:line="19" pos:column="15">!=<pos:position pos:line="19" pos:column="17"/></operator> <name pos:line="19" pos:column="18">MD_TYPE_STRING<pos:position pos:line="19" pos:column="32"/></name></expr>)<pos:position pos:line="19" pos:column="33"/></condition><then pos:line="19" pos:column="33">
  <block pos:line="20" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">ERROR<pos:position pos:line="21" pos:column="10"/></name> <argument_list pos:line="21" pos:column="11">(<argument><expr><literal type="string" pos:line="21" pos:column="12">"meta_data_get_signed_int: Type mismatch for key `%s'"<pos:position pos:line="21" pos:column="66"/></literal></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="68">e<pos:position pos:line="21" pos:column="69"/></name><operator pos:line="21" pos:column="69">-&gt;<pos:position pos:line="21" pos:column="74"/></operator><name pos:line="21" pos:column="71">key<pos:position pos:line="21" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="76"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">pthread_mutex_unlock<pos:position pos:line="22" pos:column="25"/></name> <argument_list pos:line="22" pos:column="26">(<argument><expr><operator pos:line="22" pos:column="27">&amp;<pos:position pos:line="22" pos:column="32"/></operator><name><name pos:line="22" pos:column="28">md<pos:position pos:line="22" pos:column="30"/></name><operator pos:line="22" pos:column="30">-&gt;<pos:position pos:line="22" pos:column="35"/></operator><name pos:line="22" pos:column="32">lock<pos:position pos:line="22" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="38"/></expr_stmt>
    <return pos:line="23" pos:column="5">return <expr><operator pos:line="23" pos:column="12">(<pos:position pos:line="23" pos:column="13"/></operator><operator pos:line="23" pos:column="13">-<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="14">ENOENT<pos:position pos:line="23" pos:column="20"/></name><operator pos:line="23" pos:column="20">)<pos:position pos:line="23" pos:column="21"/></operator></expr>;<pos:position pos:line="23" pos:column="22"/></return>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="26" pos:column="3">temp<pos:position pos:line="26" pos:column="7"/></name> <operator pos:line="26" pos:column="8">=<pos:position pos:line="26" pos:column="9"/></operator> <call><name pos:line="26" pos:column="10">md_strdup<pos:position pos:line="26" pos:column="19"/></name> <argument_list pos:line="26" pos:column="20">(<argument><expr><name><name pos:line="26" pos:column="21">e<pos:position pos:line="26" pos:column="22"/></name><operator pos:line="26" pos:column="22">-&gt;<pos:position pos:line="26" pos:column="27"/></operator><name pos:line="26" pos:column="24">value<pos:position pos:line="26" pos:column="29"/></name><operator pos:line="26" pos:column="29">.<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="30">mv_string<pos:position pos:line="26" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="41"/></expr_stmt>
  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><name pos:line="27" pos:column="7">temp<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">==<pos:position pos:line="27" pos:column="14"/></operator> <name pos:line="27" pos:column="15">NULL<pos:position pos:line="27" pos:column="19"/></name></expr>)<pos:position pos:line="27" pos:column="20"/></condition><then pos:line="27" pos:column="20">
  <block pos:line="28" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">pthread_mutex_unlock<pos:position pos:line="29" pos:column="25"/></name> <argument_list pos:line="29" pos:column="26">(<argument><expr><operator pos:line="29" pos:column="27">&amp;<pos:position pos:line="29" pos:column="32"/></operator><name><name pos:line="29" pos:column="28">md<pos:position pos:line="29" pos:column="30"/></name><operator pos:line="29" pos:column="30">-&gt;<pos:position pos:line="29" pos:column="35"/></operator><name pos:line="29" pos:column="32">lock<pos:position pos:line="29" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">ERROR<pos:position pos:line="30" pos:column="10"/></name> <argument_list pos:line="30" pos:column="11">(<argument><expr><literal type="string" pos:line="30" pos:column="12">"meta_data_get_string: md_strdup failed."<pos:position pos:line="30" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="55"/></expr_stmt>
    <return pos:line="31" pos:column="5">return <expr><operator pos:line="31" pos:column="12">(<pos:position pos:line="31" pos:column="13"/></operator><operator pos:line="31" pos:column="13">-<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="14">ENOMEM<pos:position pos:line="31" pos:column="20"/></name><operator pos:line="31" pos:column="20">)<pos:position pos:line="31" pos:column="21"/></operator></expr>;<pos:position pos:line="31" pos:column="22"/></return>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if>
 
  <expr_stmt><expr><call><name pos:line="34" pos:column="3">pthread_mutex_unlock<pos:position pos:line="34" pos:column="23"/></name> <argument_list pos:line="34" pos:column="24">(<argument><expr><operator pos:line="34" pos:column="25">&amp;<pos:position pos:line="34" pos:column="30"/></operator><name><name pos:line="34" pos:column="26">md<pos:position pos:line="34" pos:column="28"/></name><operator pos:line="34" pos:column="28">-&gt;<pos:position pos:line="34" pos:column="33"/></operator><name pos:line="34" pos:column="30">lock<pos:position pos:line="34" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><operator pos:line="36" pos:column="3">*<pos:position pos:line="36" pos:column="4"/></operator><name pos:line="36" pos:column="4">value<pos:position pos:line="36" pos:column="9"/></name> <operator pos:line="36" pos:column="10">=<pos:position pos:line="36" pos:column="11"/></operator> <name pos:line="36" pos:column="12">temp<pos:position pos:line="36" pos:column="16"/></name></expr>;<pos:position pos:line="36" pos:column="17"/></expr_stmt>

  <return pos:line="38" pos:column="3">return <expr><operator pos:line="38" pos:column="10">(<pos:position pos:line="38" pos:column="11"/></operator><literal type="number" pos:line="38" pos:column="11">0<pos:position pos:line="38" pos:column="12"/></literal><operator pos:line="38" pos:column="12">)<pos:position pos:line="38" pos:column="13"/></operator></expr>;<pos:position pos:line="38" pos:column="14"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

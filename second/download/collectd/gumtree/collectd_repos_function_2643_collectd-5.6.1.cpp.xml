<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2643_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">plugin_notification_meta_add<pos:position pos:line="1" pos:column="40"/></name> <parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><name pos:line="1" pos:column="42">notification_t<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">n<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>,
    <parameter><decl><type><specifier pos:line="2" pos:column="5">const<pos:position pos:line="2" pos:column="10"/></specifier> <name pos:line="2" pos:column="11">char<pos:position pos:line="2" pos:column="15"/></name> <modifier pos:line="2" pos:column="16">*<pos:position pos:line="2" pos:column="17"/></modifier></type><name pos:line="2" pos:column="17">name<pos:position pos:line="2" pos:column="21"/></name></decl></parameter>,
    <parameter><decl><type><name><name pos:line="3" pos:column="5">enum<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">notification_meta_type_e<pos:position pos:line="3" pos:column="34"/></name></name></type> <name pos:line="3" pos:column="35">type<pos:position pos:line="3" pos:column="39"/></name></decl></parameter>,
    <parameter><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">void<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">value<pos:position pos:line="4" pos:column="22"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="23"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">notification_meta_t<pos:position pos:line="6" pos:column="22"/></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">meta<pos:position pos:line="6" pos:column="28"/></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">notification_meta_t<pos:position pos:line="7" pos:column="22"/></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">tail<pos:position pos:line="7" pos:column="28"/></name></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">(<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">n<pos:position pos:line="9" pos:column="9"/></name> <operator pos:line="9" pos:column="10">==<pos:position pos:line="9" pos:column="12"/></operator> <name pos:line="9" pos:column="13">NULL<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">)<pos:position pos:line="9" pos:column="18"/></operator> <operator pos:line="9" pos:column="19">||<pos:position pos:line="9" pos:column="21"/></operator> <operator pos:line="9" pos:column="22">(<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="23">name<pos:position pos:line="9" pos:column="27"/></name> <operator pos:line="9" pos:column="28">==<pos:position pos:line="9" pos:column="30"/></operator> <name pos:line="9" pos:column="31">NULL<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">)<pos:position pos:line="9" pos:column="36"/></operator> <operator pos:line="9" pos:column="37">||<pos:position pos:line="9" pos:column="39"/></operator> <operator pos:line="9" pos:column="40">(<pos:position pos:line="9" pos:column="41"/></operator><name pos:line="9" pos:column="41">value<pos:position pos:line="9" pos:column="46"/></name> <operator pos:line="9" pos:column="47">==<pos:position pos:line="9" pos:column="49"/></operator> <name pos:line="9" pos:column="50">NULL<pos:position pos:line="9" pos:column="54"/></name><operator pos:line="9" pos:column="54">)<pos:position pos:line="9" pos:column="55"/></operator></expr>)<pos:position pos:line="9" pos:column="56"/></condition><then pos:line="9" pos:column="56">
  <block pos:line="10" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">ERROR<pos:position pos:line="11" pos:column="10"/></name> <argument_list pos:line="11" pos:column="11">(<argument><expr><literal type="string" pos:line="11" pos:column="12">"plugin_notification_meta_add: A pointer is NULL!"<pos:position pos:line="11" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="64"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">(<pos:position pos:line="12" pos:column="13"/></operator><operator pos:line="12" pos:column="13">-<pos:position pos:line="12" pos:column="14"/></operator><literal type="number" pos:line="12" pos:column="14">1<pos:position pos:line="12" pos:column="15"/></literal><operator pos:line="12" pos:column="15">)<pos:position pos:line="12" pos:column="16"/></operator></expr>;<pos:position pos:line="12" pos:column="17"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="15" pos:column="3">meta<pos:position pos:line="15" pos:column="7"/></name> <operator pos:line="15" pos:column="8">=<pos:position pos:line="15" pos:column="9"/></operator> <call><name pos:line="15" pos:column="10">calloc<pos:position pos:line="15" pos:column="16"/></name> <argument_list pos:line="15" pos:column="17">(<argument><expr><literal type="number" pos:line="15" pos:column="18">1<pos:position pos:line="15" pos:column="19"/></literal></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="21">sizeof <argument_list pos:line="15" pos:column="28">(<argument><expr><operator pos:line="15" pos:column="29">*<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="30">meta<pos:position pos:line="15" pos:column="34"/></name></expr></argument>)<pos:position pos:line="15" pos:column="35"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="37"/></expr_stmt>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">meta<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">==<pos:position pos:line="16" pos:column="14"/></operator> <name pos:line="16" pos:column="15">NULL<pos:position pos:line="16" pos:column="19"/></name></expr>)<pos:position pos:line="16" pos:column="20"/></condition><then pos:line="16" pos:column="20">
  <block pos:line="17" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">ERROR<pos:position pos:line="18" pos:column="10"/></name> <argument_list pos:line="18" pos:column="11">(<argument><expr><literal type="string" pos:line="18" pos:column="12">"plugin_notification_meta_add: calloc failed."<pos:position pos:line="18" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="60"/></expr_stmt>
    <return pos:line="19" pos:column="5">return <expr><operator pos:line="19" pos:column="12">(<pos:position pos:line="19" pos:column="13"/></operator><operator pos:line="19" pos:column="13">-<pos:position pos:line="19" pos:column="14"/></operator><literal type="number" pos:line="19" pos:column="14">1<pos:position pos:line="19" pos:column="15"/></literal><operator pos:line="19" pos:column="15">)<pos:position pos:line="19" pos:column="16"/></operator></expr>;<pos:position pos:line="19" pos:column="17"/></return>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="22" pos:column="3">sstrncpy<pos:position pos:line="22" pos:column="11"/></name> <argument_list pos:line="22" pos:column="12">(<argument><expr><name><name pos:line="22" pos:column="13">meta<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">-&gt;<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="19">name<pos:position pos:line="22" pos:column="23"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="25">name<pos:position pos:line="22" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="31">sizeof <argument_list pos:line="22" pos:column="38">(<argument><expr><name><name pos:line="22" pos:column="39">meta<pos:position pos:line="22" pos:column="43"/></name><operator pos:line="22" pos:column="43">-&gt;<pos:position pos:line="22" pos:column="48"/></operator><name pos:line="22" pos:column="45">name<pos:position pos:line="22" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="52"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="23" pos:column="3">meta<pos:position pos:line="23" pos:column="7"/></name><operator pos:line="23" pos:column="7">-&gt;<pos:position pos:line="23" pos:column="12"/></operator><name pos:line="23" pos:column="9">type<pos:position pos:line="23" pos:column="13"/></name></name> <operator pos:line="23" pos:column="14">=<pos:position pos:line="23" pos:column="15"/></operator> <name pos:line="23" pos:column="16">type<pos:position pos:line="23" pos:column="20"/></name></expr>;<pos:position pos:line="23" pos:column="21"/></expr_stmt>

  <switch pos:line="25" pos:column="3">switch <condition pos:line="25" pos:column="10">(<expr><name pos:line="25" pos:column="11">type<pos:position pos:line="25" pos:column="15"/></name></expr>)<pos:position pos:line="25" pos:column="16"/></condition>
  <block pos:line="26" pos:column="3">{
    <case pos:line="27" pos:column="5">case <expr><name pos:line="27" pos:column="10">NM_TYPE_STRING<pos:position pos:line="27" pos:column="24"/></name></expr>:<pos:position pos:line="27" pos:column="25"/></case>
    <block pos:line="28" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="29" pos:column="7">meta<pos:position pos:line="29" pos:column="11"/></name><operator pos:line="29" pos:column="11">-&gt;<pos:position pos:line="29" pos:column="16"/></operator><name pos:line="29" pos:column="13">nm_value<pos:position pos:line="29" pos:column="21"/></name><operator pos:line="29" pos:column="21">.<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="22">nm_string<pos:position pos:line="29" pos:column="31"/></name></name> <operator pos:line="29" pos:column="32">=<pos:position pos:line="29" pos:column="33"/></operator> <call><name pos:line="29" pos:column="34">strdup<pos:position pos:line="29" pos:column="40"/></name> <argument_list pos:line="29" pos:column="41">(<argument><expr><operator pos:line="29" pos:column="42">(<pos:position pos:line="29" pos:column="43"/></operator><specifier pos:line="29" pos:column="43">const<pos:position pos:line="29" pos:column="48"/></specifier> <name pos:line="29" pos:column="49">char<pos:position pos:line="29" pos:column="53"/></name> <operator pos:line="29" pos:column="54">*<pos:position pos:line="29" pos:column="55"/></operator><operator pos:line="29" pos:column="55">)<pos:position pos:line="29" pos:column="56"/></operator> <name pos:line="29" pos:column="57">value<pos:position pos:line="29" pos:column="62"/></name></expr></argument>)<pos:position pos:line="29" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="64"/></expr_stmt>
      <if pos:line="30" pos:column="7">if <condition pos:line="30" pos:column="10">(<expr><name><name pos:line="30" pos:column="11">meta<pos:position pos:line="30" pos:column="15"/></name><operator pos:line="30" pos:column="15">-&gt;<pos:position pos:line="30" pos:column="20"/></operator><name pos:line="30" pos:column="17">nm_value<pos:position pos:line="30" pos:column="25"/></name><operator pos:line="30" pos:column="25">.<pos:position pos:line="30" pos:column="26"/></operator><name pos:line="30" pos:column="26">nm_string<pos:position pos:line="30" pos:column="35"/></name></name> <operator pos:line="30" pos:column="36">==<pos:position pos:line="30" pos:column="38"/></operator> <name pos:line="30" pos:column="39">NULL<pos:position pos:line="30" pos:column="43"/></name></expr>)<pos:position pos:line="30" pos:column="44"/></condition><then pos:line="30" pos:column="44">
      <block pos:line="31" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">ERROR<pos:position pos:line="32" pos:column="14"/></name> <argument_list pos:line="32" pos:column="15">(<argument><expr><literal type="string" pos:line="32" pos:column="16">"plugin_notification_meta_add: strdup failed."<pos:position pos:line="32" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="64"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">sfree<pos:position pos:line="33" pos:column="14"/></name> <argument_list pos:line="33" pos:column="15">(<argument><expr><name pos:line="33" pos:column="16">meta<pos:position pos:line="33" pos:column="20"/></name></expr></argument>)<pos:position pos:line="33" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="22"/></expr_stmt>
        <return pos:line="34" pos:column="9">return <expr><operator pos:line="34" pos:column="16">(<pos:position pos:line="34" pos:column="17"/></operator><operator pos:line="34" pos:column="17">-<pos:position pos:line="34" pos:column="18"/></operator><literal type="number" pos:line="34" pos:column="18">1<pos:position pos:line="34" pos:column="19"/></literal><operator pos:line="34" pos:column="19">)<pos:position pos:line="34" pos:column="20"/></operator></expr>;<pos:position pos:line="34" pos:column="21"/></return>
      }<pos:position pos:line="35" pos:column="8"/></block></then></if>
      <break pos:line="36" pos:column="7">break;<pos:position pos:line="36" pos:column="13"/></break>
    }<pos:position pos:line="37" pos:column="6"/></block>
    <case pos:line="38" pos:column="5">case <expr><name pos:line="38" pos:column="10">NM_TYPE_SIGNED_INT<pos:position pos:line="38" pos:column="28"/></name></expr>:<pos:position pos:line="38" pos:column="29"/></case>
    <block pos:line="39" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="40" pos:column="7">meta<pos:position pos:line="40" pos:column="11"/></name><operator pos:line="40" pos:column="11">-&gt;<pos:position pos:line="40" pos:column="16"/></operator><name pos:line="40" pos:column="13">nm_value<pos:position pos:line="40" pos:column="21"/></name><operator pos:line="40" pos:column="21">.<pos:position pos:line="40" pos:column="22"/></operator><name pos:line="40" pos:column="22">nm_signed_int<pos:position pos:line="40" pos:column="35"/></name></name> <operator pos:line="40" pos:column="36">=<pos:position pos:line="40" pos:column="37"/></operator> <operator pos:line="40" pos:column="38">*<pos:position pos:line="40" pos:column="39"/></operator><operator pos:line="40" pos:column="39">(<pos:position pos:line="40" pos:column="40"/></operator><operator pos:line="40" pos:column="40">(<pos:position pos:line="40" pos:column="41"/></operator><name pos:line="40" pos:column="41">int64_t<pos:position pos:line="40" pos:column="48"/></name> <operator pos:line="40" pos:column="49">*<pos:position pos:line="40" pos:column="50"/></operator><operator pos:line="40" pos:column="50">)<pos:position pos:line="40" pos:column="51"/></operator> <name pos:line="40" pos:column="52">value<pos:position pos:line="40" pos:column="57"/></name><operator pos:line="40" pos:column="57">)<pos:position pos:line="40" pos:column="58"/></operator></expr>;<pos:position pos:line="40" pos:column="59"/></expr_stmt>
      <break pos:line="41" pos:column="7">break;<pos:position pos:line="41" pos:column="13"/></break>
    }<pos:position pos:line="42" pos:column="6"/></block>
    <case pos:line="43" pos:column="5">case <expr><name pos:line="43" pos:column="10">NM_TYPE_UNSIGNED_INT<pos:position pos:line="43" pos:column="30"/></name></expr>:<pos:position pos:line="43" pos:column="31"/></case>
    <block pos:line="44" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="45" pos:column="7">meta<pos:position pos:line="45" pos:column="11"/></name><operator pos:line="45" pos:column="11">-&gt;<pos:position pos:line="45" pos:column="16"/></operator><name pos:line="45" pos:column="13">nm_value<pos:position pos:line="45" pos:column="21"/></name><operator pos:line="45" pos:column="21">.<pos:position pos:line="45" pos:column="22"/></operator><name pos:line="45" pos:column="22">nm_unsigned_int<pos:position pos:line="45" pos:column="37"/></name></name> <operator pos:line="45" pos:column="38">=<pos:position pos:line="45" pos:column="39"/></operator> <operator pos:line="45" pos:column="40">*<pos:position pos:line="45" pos:column="41"/></operator><operator pos:line="45" pos:column="41">(<pos:position pos:line="45" pos:column="42"/></operator><operator pos:line="45" pos:column="42">(<pos:position pos:line="45" pos:column="43"/></operator><name pos:line="45" pos:column="43">uint64_t<pos:position pos:line="45" pos:column="51"/></name> <operator pos:line="45" pos:column="52">*<pos:position pos:line="45" pos:column="53"/></operator><operator pos:line="45" pos:column="53">)<pos:position pos:line="45" pos:column="54"/></operator> <name pos:line="45" pos:column="55">value<pos:position pos:line="45" pos:column="60"/></name><operator pos:line="45" pos:column="60">)<pos:position pos:line="45" pos:column="61"/></operator></expr>;<pos:position pos:line="45" pos:column="62"/></expr_stmt>
      <break pos:line="46" pos:column="7">break;<pos:position pos:line="46" pos:column="13"/></break>
    }<pos:position pos:line="47" pos:column="6"/></block>
    <case pos:line="48" pos:column="5">case <expr><name pos:line="48" pos:column="10">NM_TYPE_DOUBLE<pos:position pos:line="48" pos:column="24"/></name></expr>:<pos:position pos:line="48" pos:column="25"/></case>
    <block pos:line="49" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="50" pos:column="7">meta<pos:position pos:line="50" pos:column="11"/></name><operator pos:line="50" pos:column="11">-&gt;<pos:position pos:line="50" pos:column="16"/></operator><name pos:line="50" pos:column="13">nm_value<pos:position pos:line="50" pos:column="21"/></name><operator pos:line="50" pos:column="21">.<pos:position pos:line="50" pos:column="22"/></operator><name pos:line="50" pos:column="22">nm_double<pos:position pos:line="50" pos:column="31"/></name></name> <operator pos:line="50" pos:column="32">=<pos:position pos:line="50" pos:column="33"/></operator> <operator pos:line="50" pos:column="34">*<pos:position pos:line="50" pos:column="35"/></operator><operator pos:line="50" pos:column="35">(<pos:position pos:line="50" pos:column="36"/></operator><operator pos:line="50" pos:column="36">(<pos:position pos:line="50" pos:column="37"/></operator><name pos:line="50" pos:column="37">double<pos:position pos:line="50" pos:column="43"/></name> <operator pos:line="50" pos:column="44">*<pos:position pos:line="50" pos:column="45"/></operator><operator pos:line="50" pos:column="45">)<pos:position pos:line="50" pos:column="46"/></operator> <name pos:line="50" pos:column="47">value<pos:position pos:line="50" pos:column="52"/></name><operator pos:line="50" pos:column="52">)<pos:position pos:line="50" pos:column="53"/></operator></expr>;<pos:position pos:line="50" pos:column="54"/></expr_stmt>
      <break pos:line="51" pos:column="7">break;<pos:position pos:line="51" pos:column="13"/></break>
    }<pos:position pos:line="52" pos:column="6"/></block>
    <case pos:line="53" pos:column="5">case <expr><name pos:line="53" pos:column="10">NM_TYPE_BOOLEAN<pos:position pos:line="53" pos:column="25"/></name></expr>:<pos:position pos:line="53" pos:column="26"/></case>
    <block pos:line="54" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="55" pos:column="7">meta<pos:position pos:line="55" pos:column="11"/></name><operator pos:line="55" pos:column="11">-&gt;<pos:position pos:line="55" pos:column="16"/></operator><name pos:line="55" pos:column="13">nm_value<pos:position pos:line="55" pos:column="21"/></name><operator pos:line="55" pos:column="21">.<pos:position pos:line="55" pos:column="22"/></operator><name pos:line="55" pos:column="22">nm_boolean<pos:position pos:line="55" pos:column="32"/></name></name> <operator pos:line="55" pos:column="33">=<pos:position pos:line="55" pos:column="34"/></operator> <operator pos:line="55" pos:column="35">*<pos:position pos:line="55" pos:column="36"/></operator><operator pos:line="55" pos:column="36">(<pos:position pos:line="55" pos:column="37"/></operator><operator pos:line="55" pos:column="37">(<pos:position pos:line="55" pos:column="38"/></operator><name pos:line="55" pos:column="38">_Bool<pos:position pos:line="55" pos:column="43"/></name> <operator pos:line="55" pos:column="44">*<pos:position pos:line="55" pos:column="45"/></operator><operator pos:line="55" pos:column="45">)<pos:position pos:line="55" pos:column="46"/></operator> <name pos:line="55" pos:column="47">value<pos:position pos:line="55" pos:column="52"/></name><operator pos:line="55" pos:column="52">)<pos:position pos:line="55" pos:column="53"/></operator></expr>;<pos:position pos:line="55" pos:column="54"/></expr_stmt>
      <break pos:line="56" pos:column="7">break;<pos:position pos:line="56" pos:column="13"/></break>
    }<pos:position pos:line="57" pos:column="6"/></block>
    <default pos:line="58" pos:column="5">default:<pos:position pos:line="58" pos:column="13"/></default>
    <block pos:line="59" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="60" pos:column="7">ERROR<pos:position pos:line="60" pos:column="12"/></name> <argument_list pos:line="60" pos:column="13">(<argument><expr><literal type="string" pos:line="60" pos:column="14">"plugin_notification_meta_add: Unknown type: %i"<pos:position pos:line="60" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="60" pos:column="64">type<pos:position pos:line="60" pos:column="68"/></name></expr></argument>)<pos:position pos:line="60" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="70"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="61" pos:column="7">sfree<pos:position pos:line="61" pos:column="12"/></name> <argument_list pos:line="61" pos:column="13">(<argument><expr><name pos:line="61" pos:column="14">meta<pos:position pos:line="61" pos:column="18"/></name></expr></argument>)<pos:position pos:line="61" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="20"/></expr_stmt>
      <return pos:line="62" pos:column="7">return <expr><operator pos:line="62" pos:column="14">(<pos:position pos:line="62" pos:column="15"/></operator><operator pos:line="62" pos:column="15">-<pos:position pos:line="62" pos:column="16"/></operator><literal type="number" pos:line="62" pos:column="16">1<pos:position pos:line="62" pos:column="17"/></literal><operator pos:line="62" pos:column="17">)<pos:position pos:line="62" pos:column="18"/></operator></expr>;<pos:position pos:line="62" pos:column="19"/></return>
    }<pos:position pos:line="63" pos:column="6"/></block>
  }<pos:position pos:line="64" pos:column="4"/></block></switch> <comment type="block" pos:line="64" pos:column="5">/* switch (type) */</comment>

  <expr_stmt><expr><name><name pos:line="66" pos:column="3">meta<pos:position pos:line="66" pos:column="7"/></name><operator pos:line="66" pos:column="7">-&gt;<pos:position pos:line="66" pos:column="12"/></operator><name pos:line="66" pos:column="9">next<pos:position pos:line="66" pos:column="13"/></name></name> <operator pos:line="66" pos:column="14">=<pos:position pos:line="66" pos:column="15"/></operator> <name pos:line="66" pos:column="16">NULL<pos:position pos:line="66" pos:column="20"/></name></expr>;<pos:position pos:line="66" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name pos:line="67" pos:column="3">tail<pos:position pos:line="67" pos:column="7"/></name> <operator pos:line="67" pos:column="8">=<pos:position pos:line="67" pos:column="9"/></operator> <name><name pos:line="67" pos:column="10">n<pos:position pos:line="67" pos:column="11"/></name><operator pos:line="67" pos:column="11">-&gt;<pos:position pos:line="67" pos:column="16"/></operator><name pos:line="67" pos:column="13">meta<pos:position pos:line="67" pos:column="17"/></name></name></expr>;<pos:position pos:line="67" pos:column="18"/></expr_stmt>
  <while pos:line="68" pos:column="3">while <condition pos:line="68" pos:column="9">(<expr><operator pos:line="68" pos:column="10">(<pos:position pos:line="68" pos:column="11"/></operator><name pos:line="68" pos:column="11">tail<pos:position pos:line="68" pos:column="15"/></name> <operator pos:line="68" pos:column="16">!=<pos:position pos:line="68" pos:column="18"/></operator> <name pos:line="68" pos:column="19">NULL<pos:position pos:line="68" pos:column="23"/></name><operator pos:line="68" pos:column="23">)<pos:position pos:line="68" pos:column="24"/></operator> <operator pos:line="68" pos:column="25">&amp;&amp;<pos:position pos:line="68" pos:column="35"/></operator> <operator pos:line="68" pos:column="28">(<pos:position pos:line="68" pos:column="29"/></operator><name><name pos:line="68" pos:column="29">tail<pos:position pos:line="68" pos:column="33"/></name><operator pos:line="68" pos:column="33">-&gt;<pos:position pos:line="68" pos:column="38"/></operator><name pos:line="68" pos:column="35">next<pos:position pos:line="68" pos:column="39"/></name></name> <operator pos:line="68" pos:column="40">!=<pos:position pos:line="68" pos:column="42"/></operator> <name pos:line="68" pos:column="43">NULL<pos:position pos:line="68" pos:column="47"/></name><operator pos:line="68" pos:column="47">)<pos:position pos:line="68" pos:column="48"/></operator></expr>)<pos:position pos:line="68" pos:column="49"/></condition>
    <block type="pseudo"><expr_stmt><expr><name pos:line="69" pos:column="5">tail<pos:position pos:line="69" pos:column="9"/></name> <operator pos:line="69" pos:column="10">=<pos:position pos:line="69" pos:column="11"/></operator> <name><name pos:line="69" pos:column="12">tail<pos:position pos:line="69" pos:column="16"/></name><operator pos:line="69" pos:column="16">-&gt;<pos:position pos:line="69" pos:column="21"/></operator><name pos:line="69" pos:column="18">next<pos:position pos:line="69" pos:column="22"/></name></name></expr>;<pos:position pos:line="69" pos:column="23"/></expr_stmt></block></while>

  <if pos:line="71" pos:column="3">if <condition pos:line="71" pos:column="6">(<expr><name pos:line="71" pos:column="7">tail<pos:position pos:line="71" pos:column="11"/></name> <operator pos:line="71" pos:column="12">==<pos:position pos:line="71" pos:column="14"/></operator> <name pos:line="71" pos:column="15">NULL<pos:position pos:line="71" pos:column="19"/></name></expr>)<pos:position pos:line="71" pos:column="20"/></condition><then pos:line="71" pos:column="20">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="72" pos:column="5">n<pos:position pos:line="72" pos:column="6"/></name><operator pos:line="72" pos:column="6">-&gt;<pos:position pos:line="72" pos:column="11"/></operator><name pos:line="72" pos:column="8">meta<pos:position pos:line="72" pos:column="12"/></name></name> <operator pos:line="72" pos:column="13">=<pos:position pos:line="72" pos:column="14"/></operator> <name pos:line="72" pos:column="15">meta<pos:position pos:line="72" pos:column="19"/></name></expr>;<pos:position pos:line="72" pos:column="20"/></expr_stmt></block></then>
  <else pos:line="73" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="74" pos:column="5">tail<pos:position pos:line="74" pos:column="9"/></name><operator pos:line="74" pos:column="9">-&gt;<pos:position pos:line="74" pos:column="14"/></operator><name pos:line="74" pos:column="11">next<pos:position pos:line="74" pos:column="15"/></name></name> <operator pos:line="74" pos:column="16">=<pos:position pos:line="74" pos:column="17"/></operator> <name pos:line="74" pos:column="18">meta<pos:position pos:line="74" pos:column="22"/></name></expr>;<pos:position pos:line="74" pos:column="23"/></expr_stmt></block></else></if>

  <return pos:line="76" pos:column="3">return <expr><operator pos:line="76" pos:column="10">(<pos:position pos:line="76" pos:column="11"/></operator><literal type="number" pos:line="76" pos:column="11">0<pos:position pos:line="76" pos:column="12"/></literal><operator pos:line="76" pos:column="12">)<pos:position pos:line="76" pos:column="13"/></operator></expr>;<pos:position pos:line="76" pos:column="14"/></return>
}<pos:position pos:line="77" pos:column="2"/></block></function></unit>

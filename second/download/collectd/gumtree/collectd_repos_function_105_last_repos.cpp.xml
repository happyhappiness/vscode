<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_105_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">lv_domain_get_tag<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">xmlXPathContextPtr<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">xpath_ctx<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="60">const<pos:position pos:line="1" pos:column="65"/></specifier> <name pos:line="1" pos:column="66">char<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">dom_name<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="2" pos:column="30">char<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">dom_tag<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="44"/></parameter_list> <block pos:line="2" pos:column="45">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">xpath_str<pos:position pos:line="3" pos:column="17"/></name><index pos:line="3" pos:column="17">[<expr><name pos:line="3" pos:column="18">BUFFER_MAX_LEN<pos:position pos:line="3" pos:column="32"/></name></expr>]<pos:position pos:line="3" pos:column="33"/></index></name> <init pos:line="3" pos:column="34">= <expr><block pos:line="3" pos:column="36">{<expr><literal type="char" pos:line="3" pos:column="37">'\0'<pos:position pos:line="3" pos:column="41"/></literal></expr>}<pos:position pos:line="3" pos:column="42"/></block></expr></init></decl>;<pos:position pos:line="3" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">xmlXPathObjectPtr<pos:position pos:line="4" pos:column="20"/></name></type> <name pos:line="4" pos:column="21">xpath_obj<pos:position pos:line="4" pos:column="30"/></name> <init pos:line="4" pos:column="31">= <expr><name pos:line="4" pos:column="33">NULL<pos:position pos:line="4" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">xmlNodePtr<pos:position pos:line="5" pos:column="13"/></name></type> <name pos:line="5" pos:column="14">xml_node<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><name pos:line="5" pos:column="25">NULL<pos:position pos:line="5" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">ret<pos:position pos:line="6" pos:column="10"/></name> <init pos:line="6" pos:column="11">= <expr><operator pos:line="6" pos:column="13">-<pos:position pos:line="6" pos:column="14"/></operator><literal type="number" pos:line="6" pos:column="14">1<pos:position pos:line="6" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">err<pos:position pos:line="7" pos:column="10"/></name></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt>

  <expr_stmt><expr><name pos:line="9" pos:column="3">err<pos:position pos:line="9" pos:column="6"/></name> <operator pos:line="9" pos:column="7">=<pos:position pos:line="9" pos:column="8"/></operator> <call><name pos:line="9" pos:column="9">xmlXPathRegisterNs<pos:position pos:line="9" pos:column="27"/></name><argument_list pos:line="9" pos:column="27">(<argument><expr><name pos:line="9" pos:column="28">xpath_ctx<pos:position pos:line="9" pos:column="37"/></name></expr></argument>,
                           <argument><expr><operator pos:line="10" pos:column="28">(<pos:position pos:line="10" pos:column="29"/></operator><specifier pos:line="10" pos:column="29">const<pos:position pos:line="10" pos:column="34"/></specifier> <name pos:line="10" pos:column="35">xmlChar<pos:position pos:line="10" pos:column="42"/></name> <operator pos:line="10" pos:column="43">*<pos:position pos:line="10" pos:column="44"/></operator><operator pos:line="10" pos:column="44">)<pos:position pos:line="10" pos:column="45"/></operator><name pos:line="10" pos:column="45">METADATA_VM_PARTITION_PREFIX<pos:position pos:line="10" pos:column="73"/></name></expr></argument>,
                           <argument><expr><operator pos:line="11" pos:column="28">(<pos:position pos:line="11" pos:column="29"/></operator><specifier pos:line="11" pos:column="29">const<pos:position pos:line="11" pos:column="34"/></specifier> <name pos:line="11" pos:column="35">xmlChar<pos:position pos:line="11" pos:column="42"/></name> <operator pos:line="11" pos:column="43">*<pos:position pos:line="11" pos:column="44"/></operator><operator pos:line="11" pos:column="44">)<pos:position pos:line="11" pos:column="45"/></operator><name pos:line="11" pos:column="45">METADATA_VM_PARTITION_URI<pos:position pos:line="11" pos:column="70"/></name></expr></argument>)<pos:position pos:line="11" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="72"/></expr_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">err<pos:position pos:line="12" pos:column="10"/></name></expr>)<pos:position pos:line="12" pos:column="11"/></condition><then pos:line="12" pos:column="11"> <block pos:line="12" pos:column="12">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">ERROR<pos:position pos:line="13" pos:column="10"/></name><argument_list pos:line="13" pos:column="10">(<argument><expr><name pos:line="13" pos:column="11">PLUGIN_NAME<pos:position pos:line="13" pos:column="22"/></name> <literal type="string" pos:line="13" pos:column="23">" plugin: xmlXpathRegisterNs(%s, %s) failed on domain %s"<pos:position pos:line="13" pos:column="80"/></literal></expr></argument>,
          <argument><expr><name pos:line="14" pos:column="11">METADATA_VM_PARTITION_PREFIX<pos:position pos:line="14" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="41">METADATA_VM_PARTITION_URI<pos:position pos:line="14" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="68">dom_name<pos:position pos:line="14" pos:column="76"/></name></expr></argument>)<pos:position pos:line="14" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="78"/></expr_stmt>
    <goto pos:line="15" pos:column="5">goto <name pos:line="15" pos:column="10">done<pos:position pos:line="15" pos:column="14"/></name>;<pos:position pos:line="15" pos:column="15"/></goto>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="18" pos:column="3">snprintf<pos:position pos:line="18" pos:column="11"/></name><argument_list pos:line="18" pos:column="11">(<argument><expr><name pos:line="18" pos:column="12">xpath_str<pos:position pos:line="18" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="23">sizeof<argument_list pos:line="18" pos:column="29">(<argument><expr><name pos:line="18" pos:column="30">xpath_str<pos:position pos:line="18" pos:column="39"/></name></expr></argument>)<pos:position pos:line="18" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="42">"/domain/metadata/%s:%s/text()"<pos:position pos:line="18" pos:column="73"/></literal></expr></argument>,
           <argument><expr><name pos:line="19" pos:column="12">METADATA_VM_PARTITION_PREFIX<pos:position pos:line="19" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="42">METADATA_VM_PARTITION_ELEMENT<pos:position pos:line="19" pos:column="71"/></name></expr></argument>)<pos:position pos:line="19" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="73"/></expr_stmt>
  <expr_stmt><expr><name pos:line="20" pos:column="3">xpath_obj<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <call><name pos:line="20" pos:column="15">xmlXPathEvalExpression<pos:position pos:line="20" pos:column="37"/></name><argument_list pos:line="20" pos:column="37">(<argument><expr><operator pos:line="20" pos:column="38">(<pos:position pos:line="20" pos:column="39"/></operator><name pos:line="20" pos:column="39">xmlChar<pos:position pos:line="20" pos:column="46"/></name> <operator pos:line="20" pos:column="47">*<pos:position pos:line="20" pos:column="48"/></operator><operator pos:line="20" pos:column="48">)<pos:position pos:line="20" pos:column="49"/></operator><name pos:line="20" pos:column="49">xpath_str<pos:position pos:line="20" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="60">xpath_ctx<pos:position pos:line="20" pos:column="69"/></name></expr></argument>)<pos:position pos:line="20" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="71"/></expr_stmt>
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><name pos:line="21" pos:column="7">xpath_obj<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">==<pos:position pos:line="21" pos:column="19"/></operator> <name pos:line="21" pos:column="20">NULL<pos:position pos:line="21" pos:column="24"/></name></expr>)<pos:position pos:line="21" pos:column="25"/></condition><then pos:line="21" pos:column="25"> <block pos:line="21" pos:column="26">{
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">ERROR<pos:position pos:line="22" pos:column="10"/></name><argument_list pos:line="22" pos:column="10">(<argument><expr><name pos:line="22" pos:column="11">PLUGIN_NAME<pos:position pos:line="22" pos:column="22"/></name> <literal type="string" pos:line="22" pos:column="23">" plugin: xmlXPathEval(%s) failed on domain %s"<pos:position pos:line="22" pos:column="70"/></literal></expr></argument>,
          <argument><expr><name pos:line="23" pos:column="11">xpath_str<pos:position pos:line="23" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="22">dom_name<pos:position pos:line="23" pos:column="30"/></name></expr></argument>)<pos:position pos:line="23" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="32"/></expr_stmt>
    <goto pos:line="24" pos:column="5">goto <name pos:line="24" pos:column="10">done<pos:position pos:line="24" pos:column="14"/></name>;<pos:position pos:line="24" pos:column="15"/></goto>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if>

  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><name><name pos:line="27" pos:column="7">xpath_obj<pos:position pos:line="27" pos:column="16"/></name><operator pos:line="27" pos:column="16">-&gt;<pos:position pos:line="27" pos:column="21"/></operator><name pos:line="27" pos:column="18">type<pos:position pos:line="27" pos:column="22"/></name></name> <operator pos:line="27" pos:column="23">!=<pos:position pos:line="27" pos:column="25"/></operator> <name pos:line="27" pos:column="26">XPATH_NODESET<pos:position pos:line="27" pos:column="39"/></name></expr>)<pos:position pos:line="27" pos:column="40"/></condition><then pos:line="27" pos:column="40"> <block pos:line="27" pos:column="41">{
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">ERROR<pos:position pos:line="28" pos:column="10"/></name><argument_list pos:line="28" pos:column="10">(<argument><expr><name pos:line="28" pos:column="11">PLUGIN_NAME<pos:position pos:line="28" pos:column="22"/></name> <literal type="string" pos:line="28" pos:column="23">" plugin: xmlXPathEval(%s) unexpected return type %d "<pos:position pos:line="28" pos:column="77"/></literal>
                      <literal type="string" pos:line="29" pos:column="23">"(wanted %d) on domain %s"<pos:position pos:line="29" pos:column="49"/></literal></expr></argument>,
          <argument><expr><name pos:line="30" pos:column="11">xpath_str<pos:position pos:line="30" pos:column="20"/></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="22">xpath_obj<pos:position pos:line="30" pos:column="31"/></name><operator pos:line="30" pos:column="31">-&gt;<pos:position pos:line="30" pos:column="36"/></operator><name pos:line="30" pos:column="33">type<pos:position pos:line="30" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="39">XPATH_NODESET<pos:position pos:line="30" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="54">dom_name<pos:position pos:line="30" pos:column="62"/></name></expr></argument>)<pos:position pos:line="30" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="64"/></expr_stmt>
    <goto pos:line="31" pos:column="5">goto <name pos:line="31" pos:column="10">done<pos:position pos:line="31" pos:column="14"/></name>;<pos:position pos:line="31" pos:column="15"/></goto>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="34" pos:column="3">/*
   * from now on there is no real error, it's ok if a domain
   * doesn't have the metadata partition tag.
   */</comment>
  <expr_stmt><expr><name pos:line="38" pos:column="3">ret<pos:position pos:line="38" pos:column="6"/></name> <operator pos:line="38" pos:column="7">=<pos:position pos:line="38" pos:column="8"/></operator> <literal type="number" pos:line="38" pos:column="9">0<pos:position pos:line="38" pos:column="10"/></literal></expr>;<pos:position pos:line="38" pos:column="11"/></expr_stmt>
  <if pos:line="39" pos:column="3">if <condition pos:line="39" pos:column="6">(<expr><name><name pos:line="39" pos:column="7">xpath_obj<pos:position pos:line="39" pos:column="16"/></name><operator pos:line="39" pos:column="16">-&gt;<pos:position pos:line="39" pos:column="21"/></operator><name pos:line="39" pos:column="18">nodesetval<pos:position pos:line="39" pos:column="28"/></name></name> <operator pos:line="39" pos:column="29">==<pos:position pos:line="39" pos:column="31"/></operator> <name pos:line="39" pos:column="32">NULL<pos:position pos:line="39" pos:column="36"/></name> <operator pos:line="39" pos:column="37">||<pos:position pos:line="39" pos:column="39"/></operator> <name><name pos:line="39" pos:column="40">xpath_obj<pos:position pos:line="39" pos:column="49"/></name><operator pos:line="39" pos:column="49">-&gt;<pos:position pos:line="39" pos:column="54"/></operator><name pos:line="39" pos:column="51">nodesetval<pos:position pos:line="39" pos:column="61"/></name><operator pos:line="39" pos:column="61">-&gt;<pos:position pos:line="39" pos:column="66"/></operator><name pos:line="39" pos:column="63">nodeNr<pos:position pos:line="39" pos:column="69"/></name></name> <operator pos:line="39" pos:column="70">!=<pos:position pos:line="39" pos:column="72"/></operator> <literal type="number" pos:line="39" pos:column="73">1<pos:position pos:line="39" pos:column="74"/></literal></expr>)<pos:position pos:line="39" pos:column="75"/></condition><then pos:line="39" pos:column="75"> <block pos:line="39" pos:column="76">{
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">DEBUG<pos:position pos:line="40" pos:column="10"/></name><argument_list pos:line="40" pos:column="10">(<argument><expr><name pos:line="40" pos:column="11">PLUGIN_NAME<pos:position pos:line="40" pos:column="22"/></name> <literal type="string" pos:line="40" pos:column="23">" plugin: xmlXPathEval(%s) return nodeset size=%i "<pos:position pos:line="40" pos:column="74"/></literal>
                      <literal type="string" pos:line="41" pos:column="23">"expected=1 on domain %s"<pos:position pos:line="41" pos:column="48"/></literal></expr></argument>,
          <argument><expr><name pos:line="42" pos:column="11">xpath_str<pos:position pos:line="42" pos:column="20"/></name></expr></argument>,
          <argument><expr><ternary><condition><expr><operator pos:line="43" pos:column="11">(<pos:position pos:line="43" pos:column="12"/></operator><name><name pos:line="43" pos:column="12">xpath_obj<pos:position pos:line="43" pos:column="21"/></name><operator pos:line="43" pos:column="21">-&gt;<pos:position pos:line="43" pos:column="26"/></operator><name pos:line="43" pos:column="23">nodesetval<pos:position pos:line="43" pos:column="33"/></name></name> <operator pos:line="43" pos:column="34">==<pos:position pos:line="43" pos:column="36"/></operator> <name pos:line="43" pos:column="37">NULL<pos:position pos:line="43" pos:column="41"/></name><operator pos:line="43" pos:column="41">)<pos:position pos:line="43" pos:column="42"/></operator></expr> ?<pos:position pos:line="43" pos:column="44"/></condition><then pos:line="43" pos:column="44"> <expr><literal type="number" pos:line="43" pos:column="45">0<pos:position pos:line="43" pos:column="46"/></literal></expr> <pos:position pos:line="43" pos:column="47"/></then><else pos:line="43" pos:column="47">: <expr><name><name pos:line="43" pos:column="49">xpath_obj<pos:position pos:line="43" pos:column="58"/></name><operator pos:line="43" pos:column="58">-&gt;<pos:position pos:line="43" pos:column="63"/></operator><name pos:line="43" pos:column="60">nodesetval<pos:position pos:line="43" pos:column="70"/></name><operator pos:line="43" pos:column="70">-&gt;<pos:position pos:line="43" pos:column="75"/></operator><name pos:line="43" pos:column="72">nodeNr<pos:position pos:line="43" pos:column="78"/></name></name></expr></else></ternary></expr></argument>,
          <argument><expr><name pos:line="44" pos:column="11">dom_name<pos:position pos:line="44" pos:column="19"/></name></expr></argument>)<pos:position pos:line="44" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="21"/></expr_stmt>
  }<pos:position pos:line="45" pos:column="4"/></block></then> <else pos:line="45" pos:column="5">else <block pos:line="45" pos:column="10">{
    <expr_stmt><expr><name pos:line="46" pos:column="5">xml_node<pos:position pos:line="46" pos:column="13"/></name> <operator pos:line="46" pos:column="14">=<pos:position pos:line="46" pos:column="15"/></operator> <name><name pos:line="46" pos:column="16">xpath_obj<pos:position pos:line="46" pos:column="25"/></name><operator pos:line="46" pos:column="25">-&gt;<pos:position pos:line="46" pos:column="30"/></operator><name pos:line="46" pos:column="27">nodesetval<pos:position pos:line="46" pos:column="37"/></name><operator pos:line="46" pos:column="37">-&gt;<pos:position pos:line="46" pos:column="42"/></operator><name pos:line="46" pos:column="39">nodeTab<pos:position pos:line="46" pos:column="46"/></name><index pos:line="46" pos:column="46">[<expr><literal type="number" pos:line="46" pos:column="47">0<pos:position pos:line="46" pos:column="48"/></literal></expr>]<pos:position pos:line="46" pos:column="49"/></index></name></expr>;<pos:position pos:line="46" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">sstrncpy<pos:position pos:line="47" pos:column="13"/></name><argument_list pos:line="47" pos:column="13">(<argument><expr><name pos:line="47" pos:column="14">dom_tag<pos:position pos:line="47" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="23">(<pos:position pos:line="47" pos:column="24"/></operator><specifier pos:line="47" pos:column="24">const<pos:position pos:line="47" pos:column="29"/></specifier> <name pos:line="47" pos:column="30">char<pos:position pos:line="47" pos:column="34"/></name> <operator pos:line="47" pos:column="35">*<pos:position pos:line="47" pos:column="36"/></operator><operator pos:line="47" pos:column="36">)<pos:position pos:line="47" pos:column="37"/></operator><name><name pos:line="47" pos:column="37">xml_node<pos:position pos:line="47" pos:column="45"/></name><operator pos:line="47" pos:column="45">-&gt;<pos:position pos:line="47" pos:column="50"/></operator><name pos:line="47" pos:column="47">content<pos:position pos:line="47" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="56">PARTITION_TAG_MAX_LEN<pos:position pos:line="47" pos:column="77"/></name></expr></argument>)<pos:position pos:line="47" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="79"/></expr_stmt>
  }<pos:position pos:line="48" pos:column="4"/></block></else></if>

<label><name pos:line="50" pos:column="1">done<pos:position pos:line="50" pos:column="5"/></name>:<pos:position pos:line="50" pos:column="6"/></label>
  <comment type="block" pos:line="51" pos:column="3">/* deregister to clean up */</comment>
  <expr_stmt><expr><name pos:line="52" pos:column="3">err<pos:position pos:line="52" pos:column="6"/></name> <operator pos:line="52" pos:column="7">=<pos:position pos:line="52" pos:column="8"/></operator> <call><name pos:line="52" pos:column="9">xmlXPathRegisterNs<pos:position pos:line="52" pos:column="27"/></name><argument_list pos:line="52" pos:column="27">(<argument><expr><name pos:line="52" pos:column="28">xpath_ctx<pos:position pos:line="52" pos:column="37"/></name></expr></argument>,
                           <argument><expr><operator pos:line="53" pos:column="28">(<pos:position pos:line="53" pos:column="29"/></operator><specifier pos:line="53" pos:column="29">const<pos:position pos:line="53" pos:column="34"/></specifier> <name pos:line="53" pos:column="35">xmlChar<pos:position pos:line="53" pos:column="42"/></name> <operator pos:line="53" pos:column="43">*<pos:position pos:line="53" pos:column="44"/></operator><operator pos:line="53" pos:column="44">)<pos:position pos:line="53" pos:column="45"/></operator><name pos:line="53" pos:column="45">METADATA_VM_PARTITION_PREFIX<pos:position pos:line="53" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="75">NULL<pos:position pos:line="53" pos:column="79"/></name></expr></argument>)<pos:position pos:line="53" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="81"/></expr_stmt>
  <if pos:line="54" pos:column="3">if <condition pos:line="54" pos:column="6">(<expr><name pos:line="54" pos:column="7">err<pos:position pos:line="54" pos:column="10"/></name></expr>)<pos:position pos:line="54" pos:column="11"/></condition><then pos:line="54" pos:column="11"> <block pos:line="54" pos:column="12">{
    <comment type="block" pos:line="55" pos:column="5">/* we can't really recover here */</comment>
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">ERROR<pos:position pos:line="56" pos:column="10"/></name><argument_list pos:line="56" pos:column="10">(<argument><expr><name pos:line="56" pos:column="11">PLUGIN_NAME<pos:position pos:line="56" pos:column="22"/></name>
          <literal type="string" pos:line="57" pos:column="11">" plugin: deregistration of namespace %s failed for domain %s"<pos:position pos:line="57" pos:column="73"/></literal></expr></argument>,
          <argument><expr><name pos:line="58" pos:column="11">METADATA_VM_PARTITION_PREFIX<pos:position pos:line="58" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="41">dom_name<pos:position pos:line="58" pos:column="49"/></name></expr></argument>)<pos:position pos:line="58" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="51"/></expr_stmt>
  }<pos:position pos:line="59" pos:column="4"/></block></then></if>
  <if pos:line="60" pos:column="3">if <condition pos:line="60" pos:column="6">(<expr><name pos:line="60" pos:column="7">xpath_obj<pos:position pos:line="60" pos:column="16"/></name></expr>)<pos:position pos:line="60" pos:column="17"/></condition><then pos:line="60" pos:column="17">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="61" pos:column="5">xmlXPathFreeObject<pos:position pos:line="61" pos:column="23"/></name><argument_list pos:line="61" pos:column="23">(<argument><expr><name pos:line="61" pos:column="24">xpath_obj<pos:position pos:line="61" pos:column="33"/></name></expr></argument>)<pos:position pos:line="61" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="35"/></expr_stmt></block></then></if>

  <return pos:line="63" pos:column="3">return <expr><name pos:line="63" pos:column="10">ret<pos:position pos:line="63" pos:column="13"/></name></expr>;<pos:position pos:line="63" pos:column="14"/></return>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

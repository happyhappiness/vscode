<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1519_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">format_text<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">ProtobufCBuffer<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">buffer<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list> <block pos:line="1" pos:column="50">{
  <expr_stmt><expr><call><name pos:line="2" pos:column="3">pthread_mutex_lock<pos:position pos:line="2" pos:column="21"/></name><argument_list pos:line="2" pos:column="21">(<argument><expr><operator pos:line="2" pos:column="22">&amp;<pos:position pos:line="2" pos:column="27"/></operator><name pos:line="2" pos:column="23">metrics_lock<pos:position pos:line="2" pos:column="35"/></name></expr></argument>)<pos:position pos:line="2" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="2" pos:column="37"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">unused_name<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">Io__Prometheus__Client__MetricFamily<pos:position pos:line="5" pos:column="39"/></name> <modifier pos:line="5" pos:column="40">*<pos:position pos:line="5" pos:column="41"/></modifier></type><name pos:line="5" pos:column="41">fam<pos:position pos:line="5" pos:column="44"/></name></decl>;<pos:position pos:line="5" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">c_avl_iterator_t<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">iter<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><call><name pos:line="6" pos:column="28">c_avl_get_iterator<pos:position pos:line="6" pos:column="46"/></name><argument_list pos:line="6" pos:column="46">(<argument><expr><name pos:line="6" pos:column="47">metrics<pos:position pos:line="6" pos:column="54"/></name></expr></argument>)<pos:position pos:line="6" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="56"/></decl_stmt>
  <while pos:line="7" pos:column="3">while <condition pos:line="7" pos:column="9">(<expr><call><name pos:line="7" pos:column="10">c_avl_iterator_next<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">(<argument><expr><name pos:line="7" pos:column="30">iter<pos:position pos:line="7" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="36">(<pos:position pos:line="7" pos:column="37"/></operator><name pos:line="7" pos:column="37">void<pos:position pos:line="7" pos:column="41"/></name> <operator pos:line="7" pos:column="42">*<pos:position pos:line="7" pos:column="43"/></operator><operator pos:line="7" pos:column="43">)<pos:position pos:line="7" pos:column="44"/></operator><operator pos:line="7" pos:column="44">&amp;<pos:position pos:line="7" pos:column="49"/></operator><name pos:line="7" pos:column="45">unused_name<pos:position pos:line="7" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="58">(<pos:position pos:line="7" pos:column="59"/></operator><name pos:line="7" pos:column="59">void<pos:position pos:line="7" pos:column="63"/></name> <operator pos:line="7" pos:column="64">*<pos:position pos:line="7" pos:column="65"/></operator><operator pos:line="7" pos:column="65">)<pos:position pos:line="7" pos:column="66"/></operator><operator pos:line="7" pos:column="66">&amp;<pos:position pos:line="7" pos:column="71"/></operator><name pos:line="7" pos:column="67">fam<pos:position pos:line="7" pos:column="70"/></name></expr></argument>)<pos:position pos:line="7" pos:column="71"/></argument_list></call> <operator pos:line="7" pos:column="72">==<pos:position pos:line="7" pos:column="74"/></operator> <literal type="number" pos:line="7" pos:column="75">0<pos:position pos:line="7" pos:column="76"/></literal></expr>)<pos:position pos:line="7" pos:column="77"/></condition> <block pos:line="7" pos:column="78">{
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name></type> <name><name pos:line="8" pos:column="10">line<pos:position pos:line="8" pos:column="14"/></name><index pos:line="8" pos:column="14">[<expr><literal type="number" pos:line="8" pos:column="15">1024<pos:position pos:line="8" pos:column="19"/></literal></expr>]<pos:position pos:line="8" pos:column="20"/></index></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt> <comment type="block" pos:line="8" pos:column="22">/* 4x DATA_MAX_NAME_LEN? */</comment>

    <expr_stmt><expr><call><name pos:line="10" pos:column="5">ssnprintf<pos:position pos:line="10" pos:column="14"/></name><argument_list pos:line="10" pos:column="14">(<argument><expr><name pos:line="10" pos:column="15">line<pos:position pos:line="10" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="21">sizeof<argument_list pos:line="10" pos:column="27">(<argument><expr><name pos:line="10" pos:column="28">line<pos:position pos:line="10" pos:column="32"/></name></expr></argument>)<pos:position pos:line="10" pos:column="33"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="35">"# HELP %s %s\n"<pos:position pos:line="10" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="53">fam<pos:position pos:line="10" pos:column="56"/></name><operator pos:line="10" pos:column="56">-&gt;<pos:position pos:line="10" pos:column="61"/></operator><name pos:line="10" pos:column="58">name<pos:position pos:line="10" pos:column="62"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="64">fam<pos:position pos:line="10" pos:column="67"/></name><operator pos:line="10" pos:column="67">-&gt;<pos:position pos:line="10" pos:column="72"/></operator><name pos:line="10" pos:column="69">help<pos:position pos:line="10" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="75"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="11" pos:column="5">buffer<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">-&gt;<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="13">append<pos:position pos:line="11" pos:column="19"/></name></name><argument_list pos:line="11" pos:column="19">(<argument><expr><name pos:line="11" pos:column="20">buffer<pos:position pos:line="11" pos:column="26"/></name></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="28">strlen<pos:position pos:line="11" pos:column="34"/></name><argument_list pos:line="11" pos:column="34">(<argument><expr><name pos:line="11" pos:column="35">line<pos:position pos:line="11" pos:column="39"/></name></expr></argument>)<pos:position pos:line="11" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="11" pos:column="42">(<pos:position pos:line="11" pos:column="43"/></operator><name pos:line="11" pos:column="43">uint8_t<pos:position pos:line="11" pos:column="50"/></name> <operator pos:line="11" pos:column="51">*<pos:position pos:line="11" pos:column="52"/></operator><operator pos:line="11" pos:column="52">)<pos:position pos:line="11" pos:column="53"/></operator><name pos:line="11" pos:column="53">line<pos:position pos:line="11" pos:column="57"/></name></expr></argument>)<pos:position pos:line="11" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="59"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="13" pos:column="5">ssnprintf<pos:position pos:line="13" pos:column="14"/></name><argument_list pos:line="13" pos:column="14">(<argument><expr><name pos:line="13" pos:column="15">line<pos:position pos:line="13" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="21">sizeof<argument_list pos:line="13" pos:column="27">(<argument><expr><name pos:line="13" pos:column="28">line<pos:position pos:line="13" pos:column="32"/></name></expr></argument>)<pos:position pos:line="13" pos:column="33"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="35">"# TYPE %s %s\n"<pos:position pos:line="13" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="53">fam<pos:position pos:line="13" pos:column="56"/></name><operator pos:line="13" pos:column="56">-&gt;<pos:position pos:line="13" pos:column="61"/></operator><name pos:line="13" pos:column="58">name<pos:position pos:line="13" pos:column="62"/></name></name></expr></argument>,
              <argument><expr><ternary><condition><expr><operator pos:line="14" pos:column="15">(<pos:position pos:line="14" pos:column="16"/></operator><name><name pos:line="14" pos:column="16">fam<pos:position pos:line="14" pos:column="19"/></name><operator pos:line="14" pos:column="19">-&gt;<pos:position pos:line="14" pos:column="24"/></operator><name pos:line="14" pos:column="21">type<pos:position pos:line="14" pos:column="25"/></name></name> <operator pos:line="14" pos:column="26">==<pos:position pos:line="14" pos:column="28"/></operator> <name pos:line="14" pos:column="29">IO__PROMETHEUS__CLIENT__METRIC_TYPE__GAUGE<pos:position pos:line="14" pos:column="71"/></name><operator pos:line="14" pos:column="71">)<pos:position pos:line="14" pos:column="72"/></operator></expr>
                  ?<pos:position pos:line="15" pos:column="20"/></condition><then pos:line="15" pos:column="20"> <expr><literal type="string" pos:line="15" pos:column="21">"gauge"<pos:position pos:line="15" pos:column="28"/></literal></expr>
                  <pos:position pos:line="16" pos:column="19"/></then><else pos:line="16" pos:column="19">: <expr><literal type="string" pos:line="16" pos:column="21">"counter"<pos:position pos:line="16" pos:column="30"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="16" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="17" pos:column="5">buffer<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">-&gt;<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="13">append<pos:position pos:line="17" pos:column="19"/></name></name><argument_list pos:line="17" pos:column="19">(<argument><expr><name pos:line="17" pos:column="20">buffer<pos:position pos:line="17" pos:column="26"/></name></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="28">strlen<pos:position pos:line="17" pos:column="34"/></name><argument_list pos:line="17" pos:column="34">(<argument><expr><name pos:line="17" pos:column="35">line<pos:position pos:line="17" pos:column="39"/></name></expr></argument>)<pos:position pos:line="17" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="17" pos:column="42">(<pos:position pos:line="17" pos:column="43"/></operator><name pos:line="17" pos:column="43">uint8_t<pos:position pos:line="17" pos:column="50"/></name> <operator pos:line="17" pos:column="51">*<pos:position pos:line="17" pos:column="52"/></operator><operator pos:line="17" pos:column="52">)<pos:position pos:line="17" pos:column="53"/></operator><name pos:line="17" pos:column="53">line<pos:position pos:line="17" pos:column="57"/></name></expr></argument>)<pos:position pos:line="17" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="59"/></expr_stmt>

    <for pos:line="19" pos:column="5">for <control pos:line="19" pos:column="9">(<init><decl><type><name pos:line="19" pos:column="10">size_t<pos:position pos:line="19" pos:column="16"/></name></type> <name pos:line="19" pos:column="17">i<pos:position pos:line="19" pos:column="18"/></name> <init pos:line="19" pos:column="19">= <expr><literal type="number" pos:line="19" pos:column="21">0<pos:position pos:line="19" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="19" pos:column="23"/></init> <condition><expr><name pos:line="19" pos:column="24">i<pos:position pos:line="19" pos:column="25"/></name> <operator pos:line="19" pos:column="26">&lt;<pos:position pos:line="19" pos:column="30"/></operator> <name><name pos:line="19" pos:column="28">fam<pos:position pos:line="19" pos:column="31"/></name><operator pos:line="19" pos:column="31">-&gt;<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="33">n_metric<pos:position pos:line="19" pos:column="41"/></name></name></expr>;<pos:position pos:line="19" pos:column="42"/></condition> <incr><expr><name pos:line="19" pos:column="43">i<pos:position pos:line="19" pos:column="44"/></name><operator pos:line="19" pos:column="44">++<pos:position pos:line="19" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="19" pos:column="47"/></control> <block pos:line="19" pos:column="48">{
      <decl_stmt><decl><type><name pos:line="20" pos:column="7">Io__Prometheus__Client__Metric<pos:position pos:line="20" pos:column="37"/></name> <modifier pos:line="20" pos:column="38">*<pos:position pos:line="20" pos:column="39"/></modifier></type><name pos:line="20" pos:column="39">m<pos:position pos:line="20" pos:column="40"/></name> <init pos:line="20" pos:column="41">= <expr><name><name pos:line="20" pos:column="43">fam<pos:position pos:line="20" pos:column="46"/></name><operator pos:line="20" pos:column="46">-&gt;<pos:position pos:line="20" pos:column="51"/></operator><name pos:line="20" pos:column="48">metric<pos:position pos:line="20" pos:column="54"/></name><index pos:line="20" pos:column="54">[<expr><name pos:line="20" pos:column="55">i<pos:position pos:line="20" pos:column="56"/></name></expr>]<pos:position pos:line="20" pos:column="57"/></index></name></expr></init></decl>;<pos:position pos:line="20" pos:column="58"/></decl_stmt>

      <decl_stmt><decl><type><name pos:line="22" pos:column="7">char<pos:position pos:line="22" pos:column="11"/></name></type> <name><name pos:line="22" pos:column="12">labels<pos:position pos:line="22" pos:column="18"/></name><index pos:line="22" pos:column="18">[<expr><literal type="number" pos:line="22" pos:column="19">1024<pos:position pos:line="22" pos:column="23"/></literal></expr>]<pos:position pos:line="22" pos:column="24"/></index></name></decl>;<pos:position pos:line="22" pos:column="25"/></decl_stmt>

      <decl_stmt><decl><type><name pos:line="24" pos:column="7">char<pos:position pos:line="24" pos:column="11"/></name></type> <name><name pos:line="24" pos:column="12">timestamp_ms<pos:position pos:line="24" pos:column="24"/></name><index pos:line="24" pos:column="24">[<expr><literal type="number" pos:line="24" pos:column="25">24<pos:position pos:line="24" pos:column="27"/></literal></expr>]<pos:position pos:line="24" pos:column="28"/></index></name> <init pos:line="24" pos:column="29">= <expr><literal type="string" pos:line="24" pos:column="31">""<pos:position pos:line="24" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="24" pos:column="34"/></decl_stmt>
      <if pos:line="25" pos:column="7">if <condition pos:line="25" pos:column="10">(<expr><name><name pos:line="25" pos:column="11">m<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">-&gt;<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="14">has_timestamp_ms<pos:position pos:line="25" pos:column="30"/></name></name></expr>)<pos:position pos:line="25" pos:column="31"/></condition><then pos:line="25" pos:column="31">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="9">ssnprintf<pos:position pos:line="26" pos:column="18"/></name><argument_list pos:line="26" pos:column="18">(<argument><expr><name pos:line="26" pos:column="19">timestamp_ms<pos:position pos:line="26" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="33">sizeof<argument_list pos:line="26" pos:column="39">(<argument><expr><name pos:line="26" pos:column="40">timestamp_ms<pos:position pos:line="26" pos:column="52"/></name></expr></argument>)<pos:position pos:line="26" pos:column="53"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="55">" %"<pos:position pos:line="26" pos:column="59"/></literal> <name pos:line="26" pos:column="60">PRIi64<pos:position pos:line="26" pos:column="66"/></name></expr></argument>,
                  <argument><expr><name><name pos:line="27" pos:column="19">m<pos:position pos:line="27" pos:column="20"/></name><operator pos:line="27" pos:column="20">-&gt;<pos:position pos:line="27" pos:column="25"/></operator><name pos:line="27" pos:column="22">timestamp_ms<pos:position pos:line="27" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="36"/></expr_stmt></block></then></if>

      <if pos:line="29" pos:column="7">if <condition pos:line="29" pos:column="10">(<expr><name><name pos:line="29" pos:column="11">fam<pos:position pos:line="29" pos:column="14"/></name><operator pos:line="29" pos:column="14">-&gt;<pos:position pos:line="29" pos:column="19"/></operator><name pos:line="29" pos:column="16">type<pos:position pos:line="29" pos:column="20"/></name></name> <operator pos:line="29" pos:column="21">==<pos:position pos:line="29" pos:column="23"/></operator> <name pos:line="29" pos:column="24">IO__PROMETHEUS__CLIENT__METRIC_TYPE__GAUGE<pos:position pos:line="29" pos:column="66"/></name></expr>)<pos:position pos:line="29" pos:column="67"/></condition><then pos:line="29" pos:column="67">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="9">ssnprintf<pos:position pos:line="30" pos:column="18"/></name><argument_list pos:line="30" pos:column="18">(<argument><expr><name pos:line="30" pos:column="19">line<pos:position pos:line="30" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="25">sizeof<argument_list pos:line="30" pos:column="31">(<argument><expr><name pos:line="30" pos:column="32">line<pos:position pos:line="30" pos:column="36"/></name></expr></argument>)<pos:position pos:line="30" pos:column="37"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="39">"%s{%s} "<pos:position pos:line="30" pos:column="48"/></literal> <name pos:line="30" pos:column="49">GAUGE_FORMAT<pos:position pos:line="30" pos:column="61"/></name> <literal type="string" pos:line="30" pos:column="62">"%s\n"<pos:position pos:line="30" pos:column="68"/></literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="70">fam<pos:position pos:line="30" pos:column="73"/></name><operator pos:line="30" pos:column="73">-&gt;<pos:position pos:line="30" pos:column="78"/></operator><name pos:line="30" pos:column="75">name<pos:position pos:line="30" pos:column="79"/></name></name></expr></argument>,
                  <argument><expr><call><name pos:line="31" pos:column="19">format_labels<pos:position pos:line="31" pos:column="32"/></name><argument_list pos:line="31" pos:column="32">(<argument><expr><name pos:line="31" pos:column="33">labels<pos:position pos:line="31" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="41">sizeof<argument_list pos:line="31" pos:column="47">(<argument><expr><name pos:line="31" pos:column="48">labels<pos:position pos:line="31" pos:column="54"/></name></expr></argument>)<pos:position pos:line="31" pos:column="55"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="31" pos:column="57">m<pos:position pos:line="31" pos:column="58"/></name></expr></argument>)<pos:position pos:line="31" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="61">m<pos:position pos:line="31" pos:column="62"/></name><operator pos:line="31" pos:column="62">-&gt;<pos:position pos:line="31" pos:column="67"/></operator><name pos:line="31" pos:column="64">gauge<pos:position pos:line="31" pos:column="69"/></name><operator pos:line="31" pos:column="69">-&gt;<pos:position pos:line="31" pos:column="74"/></operator><name pos:line="31" pos:column="71">value<pos:position pos:line="31" pos:column="76"/></name></name></expr></argument>,
                  <argument><expr><name pos:line="32" pos:column="19">timestamp_ms<pos:position pos:line="32" pos:column="31"/></name></expr></argument>)<pos:position pos:line="32" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="33"/></expr_stmt></block></then>
      <else pos:line="33" pos:column="7">else <comment type="block" pos:line="33" pos:column="12">/* if (fam-&gt;type == IO__PROMETHEUS__CLIENT__METRIC_TYPE__COUNTER) */</comment>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="9">ssnprintf<pos:position pos:line="34" pos:column="18"/></name><argument_list pos:line="34" pos:column="18">(<argument><expr><name pos:line="34" pos:column="19">line<pos:position pos:line="34" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="34" pos:column="25">sizeof<argument_list pos:line="34" pos:column="31">(<argument><expr><name pos:line="34" pos:column="32">line<pos:position pos:line="34" pos:column="36"/></name></expr></argument>)<pos:position pos:line="34" pos:column="37"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="39">"%s{%s} %.0f%s\n"<pos:position pos:line="34" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="58">fam<pos:position pos:line="34" pos:column="61"/></name><operator pos:line="34" pos:column="61">-&gt;<pos:position pos:line="34" pos:column="66"/></operator><name pos:line="34" pos:column="63">name<pos:position pos:line="34" pos:column="67"/></name></name></expr></argument>,
                  <argument><expr><call><name pos:line="35" pos:column="19">format_labels<pos:position pos:line="35" pos:column="32"/></name><argument_list pos:line="35" pos:column="32">(<argument><expr><name pos:line="35" pos:column="33">labels<pos:position pos:line="35" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="41">sizeof<argument_list pos:line="35" pos:column="47">(<argument><expr><name pos:line="35" pos:column="48">labels<pos:position pos:line="35" pos:column="54"/></name></expr></argument>)<pos:position pos:line="35" pos:column="55"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="35" pos:column="57">m<pos:position pos:line="35" pos:column="58"/></name></expr></argument>)<pos:position pos:line="35" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="61">m<pos:position pos:line="35" pos:column="62"/></name><operator pos:line="35" pos:column="62">-&gt;<pos:position pos:line="35" pos:column="67"/></operator><name pos:line="35" pos:column="64">counter<pos:position pos:line="35" pos:column="71"/></name><operator pos:line="35" pos:column="71">-&gt;<pos:position pos:line="35" pos:column="76"/></operator><name pos:line="35" pos:column="73">value<pos:position pos:line="35" pos:column="78"/></name></name></expr></argument>,
                  <argument><expr><name pos:line="36" pos:column="19">timestamp_ms<pos:position pos:line="36" pos:column="31"/></name></expr></argument>)<pos:position pos:line="36" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="33"/></expr_stmt></block></else></if>

      <expr_stmt><expr><call><name><name pos:line="38" pos:column="7">buffer<pos:position pos:line="38" pos:column="13"/></name><operator pos:line="38" pos:column="13">-&gt;<pos:position pos:line="38" pos:column="18"/></operator><name pos:line="38" pos:column="15">append<pos:position pos:line="38" pos:column="21"/></name></name><argument_list pos:line="38" pos:column="21">(<argument><expr><name pos:line="38" pos:column="22">buffer<pos:position pos:line="38" pos:column="28"/></name></expr></argument>, <argument><expr><call><name pos:line="38" pos:column="30">strlen<pos:position pos:line="38" pos:column="36"/></name><argument_list pos:line="38" pos:column="36">(<argument><expr><name pos:line="38" pos:column="37">line<pos:position pos:line="38" pos:column="41"/></name></expr></argument>)<pos:position pos:line="38" pos:column="42"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="38" pos:column="44">(<pos:position pos:line="38" pos:column="45"/></operator><name pos:line="38" pos:column="45">uint8_t<pos:position pos:line="38" pos:column="52"/></name> <operator pos:line="38" pos:column="53">*<pos:position pos:line="38" pos:column="54"/></operator><operator pos:line="38" pos:column="54">)<pos:position pos:line="38" pos:column="55"/></operator><name pos:line="38" pos:column="55">line<pos:position pos:line="38" pos:column="59"/></name></expr></argument>)<pos:position pos:line="38" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="61"/></expr_stmt>
    }<pos:position pos:line="39" pos:column="6"/></block></for>
  }<pos:position pos:line="40" pos:column="4"/></block></while>
  <expr_stmt><expr><call><name pos:line="41" pos:column="3">c_avl_iterator_destroy<pos:position pos:line="41" pos:column="25"/></name><argument_list pos:line="41" pos:column="25">(<argument><expr><name pos:line="41" pos:column="26">iter<pos:position pos:line="41" pos:column="30"/></name></expr></argument>)<pos:position pos:line="41" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="32"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="43" pos:column="3">char<pos:position pos:line="43" pos:column="7"/></name></type> <name><name pos:line="43" pos:column="8">server<pos:position pos:line="43" pos:column="14"/></name><index pos:line="43" pos:column="14">[<expr><literal type="number" pos:line="43" pos:column="15">1024<pos:position pos:line="43" pos:column="19"/></literal></expr>]<pos:position pos:line="43" pos:column="20"/></index></name></decl>;<pos:position pos:line="43" pos:column="21"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="44" pos:column="3">ssnprintf<pos:position pos:line="44" pos:column="12"/></name><argument_list pos:line="44" pos:column="12">(<argument><expr><name pos:line="44" pos:column="13">server<pos:position pos:line="44" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="21">sizeof<argument_list pos:line="44" pos:column="27">(<argument><expr><name pos:line="44" pos:column="28">server<pos:position pos:line="44" pos:column="34"/></name></expr></argument>)<pos:position pos:line="44" pos:column="35"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="37">"\n# collectd/write_prometheus %s at %s\n"<pos:position pos:line="44" pos:column="79"/></literal></expr></argument>,
            <argument><expr><name pos:line="45" pos:column="13">PACKAGE_VERSION<pos:position pos:line="45" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="30">hostname_g<pos:position pos:line="45" pos:column="40"/></name></expr></argument>)<pos:position pos:line="45" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><call><name><name pos:line="46" pos:column="3">buffer<pos:position pos:line="46" pos:column="9"/></name><operator pos:line="46" pos:column="9">-&gt;<pos:position pos:line="46" pos:column="14"/></operator><name pos:line="46" pos:column="11">append<pos:position pos:line="46" pos:column="17"/></name></name><argument_list pos:line="46" pos:column="17">(<argument><expr><name pos:line="46" pos:column="18">buffer<pos:position pos:line="46" pos:column="24"/></name></expr></argument>, <argument><expr><call><name pos:line="46" pos:column="26">strlen<pos:position pos:line="46" pos:column="32"/></name><argument_list pos:line="46" pos:column="32">(<argument><expr><name pos:line="46" pos:column="33">server<pos:position pos:line="46" pos:column="39"/></name></expr></argument>)<pos:position pos:line="46" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="46" pos:column="42">(<pos:position pos:line="46" pos:column="43"/></operator><name pos:line="46" pos:column="43">uint8_t<pos:position pos:line="46" pos:column="50"/></name> <operator pos:line="46" pos:column="51">*<pos:position pos:line="46" pos:column="52"/></operator><operator pos:line="46" pos:column="52">)<pos:position pos:line="46" pos:column="53"/></operator><name pos:line="46" pos:column="53">server<pos:position pos:line="46" pos:column="59"/></name></expr></argument>)<pos:position pos:line="46" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="61"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="48" pos:column="3">pthread_mutex_unlock<pos:position pos:line="48" pos:column="23"/></name><argument_list pos:line="48" pos:column="23">(<argument><expr><operator pos:line="48" pos:column="24">&amp;<pos:position pos:line="48" pos:column="29"/></operator><name pos:line="48" pos:column="25">metrics_lock<pos:position pos:line="48" pos:column="37"/></name></expr></argument>)<pos:position pos:line="48" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="39"/></expr_stmt>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

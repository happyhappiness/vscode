<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1887_collectd-4.10.7.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">TC_COMMIT<pos:position pos:line="2" pos:column="10"/></name><parameter_list pos:line="2" pos:column="10">(<parameter><decl><type><name pos:line="2" pos:column="11">TC_HANDLE_T<pos:position pos:line="2" pos:column="22"/></name> <modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier></type><name pos:line="2" pos:column="24">handle<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="31"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<comment type="block" pos:line="4" pos:column="9">/* Replace, then map back the counters. */</comment>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">STRUCT_REPLACE<pos:position pos:line="5" pos:column="23"/></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">repl<pos:position pos:line="5" pos:column="29"/></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">STRUCT_COUNTERS_INFO<pos:position pos:line="6" pos:column="29"/></name> <modifier pos:line="6" pos:column="30">*<pos:position pos:line="6" pos:column="31"/></modifier></type><name pos:line="6" pos:column="31">newcounters<pos:position pos:line="6" pos:column="42"/></name></decl>;<pos:position pos:line="6" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">chain_head<pos:position pos:line="7" pos:column="26"/></name></name> <modifier pos:line="7" pos:column="27">*<pos:position pos:line="7" pos:column="28"/></modifier></type><name pos:line="7" pos:column="28">c<pos:position pos:line="7" pos:column="29"/></name></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">ret<pos:position pos:line="8" pos:column="16"/></name></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">size_t<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">counterlen<pos:position pos:line="9" pos:column="26"/></name></decl>;<pos:position pos:line="9" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">new_number<pos:position pos:line="10" pos:column="23"/></name></decl>;<pos:position pos:line="10" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">unsigned<pos:position pos:line="11" pos:column="17"/></name> <name pos:line="11" pos:column="18">int<pos:position pos:line="11" pos:column="21"/></name></type> <name pos:line="11" pos:column="22">new_size<pos:position pos:line="11" pos:column="30"/></name></decl>;<pos:position pos:line="11" pos:column="31"/></decl_stmt>

	<expr_stmt><expr><name pos:line="13" pos:column="9">iptc_fn<pos:position pos:line="13" pos:column="16"/></name> <operator pos:line="13" pos:column="17">=<pos:position pos:line="13" pos:column="18"/></operator> <name pos:line="13" pos:column="19">TC_COMMIT<pos:position pos:line="13" pos:column="28"/></name></expr>;<pos:position pos:line="13" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">CHECK<pos:position pos:line="14" pos:column="14"/></name><argument_list pos:line="14" pos:column="14">(<argument><expr><operator pos:line="14" pos:column="15">*<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="16">handle<pos:position pos:line="14" pos:column="22"/></name></expr></argument>)<pos:position pos:line="14" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="24"/></expr_stmt>

	<comment type="block" pos:line="16" pos:column="9">/* Don't commit if nothing changed. */</comment>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">!<pos:position pos:line="17" pos:column="14"/></operator><name><operator pos:line="17" pos:column="14">(<pos:position pos:line="17" pos:column="15"/></operator><operator pos:line="17" pos:column="15">*<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="16">handle<pos:position pos:line="17" pos:column="22"/></name><operator pos:line="17" pos:column="22">)<pos:position pos:line="17" pos:column="23"/></operator><operator pos:line="17" pos:column="23">-&gt;<pos:position pos:line="17" pos:column="28"/></operator><name pos:line="17" pos:column="25">changed<pos:position pos:line="17" pos:column="32"/></name></name></expr>)<pos:position pos:line="17" pos:column="33"/></condition><then pos:line="17" pos:column="33">
		<block type="pseudo"><goto pos:line="18" pos:column="17">goto <name pos:line="18" pos:column="22">finished<pos:position pos:line="18" pos:column="30"/></name>;<pos:position pos:line="18" pos:column="31"/></goto></block></then></if>

	<expr_stmt><expr><name pos:line="20" pos:column="9">new_number<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <call><name pos:line="20" pos:column="22">iptcc_compile_table_prep<pos:position pos:line="20" pos:column="46"/></name><argument_list pos:line="20" pos:column="46">(<argument><expr><operator pos:line="20" pos:column="47">*<pos:position pos:line="20" pos:column="48"/></operator><name pos:line="20" pos:column="48">handle<pos:position pos:line="20" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="56">&amp;<pos:position pos:line="20" pos:column="61"/></operator><name pos:line="20" pos:column="57">new_size<pos:position pos:line="20" pos:column="65"/></name></expr></argument>)<pos:position pos:line="20" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="67"/></expr_stmt>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">new_number<pos:position pos:line="21" pos:column="23"/></name> <operator pos:line="21" pos:column="24">&lt;<pos:position pos:line="21" pos:column="28"/></operator> <literal type="number" pos:line="21" pos:column="26">0<pos:position pos:line="21" pos:column="27"/></literal></expr>)<pos:position pos:line="21" pos:column="28"/></condition><then pos:line="21" pos:column="28"> <block pos:line="21" pos:column="29">{
		<expr_stmt><expr><name pos:line="22" pos:column="17">errno<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">=<pos:position pos:line="22" pos:column="24"/></operator> <name pos:line="22" pos:column="25">ENOMEM<pos:position pos:line="22" pos:column="31"/></name></expr>;<pos:position pos:line="22" pos:column="32"/></expr_stmt>
		<goto pos:line="23" pos:column="17">goto <name pos:line="23" pos:column="22">out_zero<pos:position pos:line="23" pos:column="30"/></name>;<pos:position pos:line="23" pos:column="31"/></goto>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="26" pos:column="9">repl<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">=<pos:position pos:line="26" pos:column="15"/></operator> <call><name pos:line="26" pos:column="16">malloc<pos:position pos:line="26" pos:column="22"/></name><argument_list pos:line="26" pos:column="22">(<argument><expr><sizeof pos:line="26" pos:column="23">sizeof<argument_list pos:line="26" pos:column="29">(<argument><expr><operator pos:line="26" pos:column="30">*<pos:position pos:line="26" pos:column="31"/></operator><name pos:line="26" pos:column="31">repl<pos:position pos:line="26" pos:column="35"/></name></expr></argument>)<pos:position pos:line="26" pos:column="36"/></argument_list></sizeof> <operator pos:line="26" pos:column="37">+<pos:position pos:line="26" pos:column="38"/></operator> <name pos:line="26" pos:column="39">new_size<pos:position pos:line="26" pos:column="47"/></name></expr></argument>)<pos:position pos:line="26" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="49"/></expr_stmt>
	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><operator pos:line="27" pos:column="13">!<pos:position pos:line="27" pos:column="14"/></operator><name pos:line="27" pos:column="14">repl<pos:position pos:line="27" pos:column="18"/></name></expr>)<pos:position pos:line="27" pos:column="19"/></condition><then pos:line="27" pos:column="19"> <block pos:line="27" pos:column="20">{
		<expr_stmt><expr><name pos:line="28" pos:column="17">errno<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">=<pos:position pos:line="28" pos:column="24"/></operator> <name pos:line="28" pos:column="25">ENOMEM<pos:position pos:line="28" pos:column="31"/></name></expr>;<pos:position pos:line="28" pos:column="32"/></expr_stmt>
		<goto pos:line="29" pos:column="17">goto <name pos:line="29" pos:column="22">out_zero<pos:position pos:line="29" pos:column="30"/></name>;<pos:position pos:line="29" pos:column="31"/></goto>
	}<pos:position pos:line="30" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="31" pos:column="9">memset<pos:position pos:line="31" pos:column="15"/></name><argument_list pos:line="31" pos:column="15">(<argument><expr><name pos:line="31" pos:column="16">repl<pos:position pos:line="31" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="22">0<pos:position pos:line="31" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="25">sizeof<argument_list pos:line="31" pos:column="31">(<argument><expr><operator pos:line="31" pos:column="32">*<pos:position pos:line="31" pos:column="33"/></operator><name pos:line="31" pos:column="33">repl<pos:position pos:line="31" pos:column="37"/></name></expr></argument>)<pos:position pos:line="31" pos:column="38"/></argument_list></sizeof> <operator pos:line="31" pos:column="39">+<pos:position pos:line="31" pos:column="40"/></operator> <name pos:line="31" pos:column="41">new_size<pos:position pos:line="31" pos:column="49"/></name></expr></argument>)<pos:position pos:line="31" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="51"/></expr_stmt>

<cpp:if pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">if<pos:position pos:line="33" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="33" pos:column="5">0<pos:position pos:line="33" pos:column="6"/></literal></expr></cpp:if>
	TC_DUMP_ENTRIES(*handle);
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif<pos:position pos:line="35" pos:column="7"/></cpp:directive></cpp:endif>

	<expr_stmt><expr><name pos:line="37" pos:column="9">counterlen<pos:position pos:line="37" pos:column="19"/></name> <operator pos:line="37" pos:column="20">=<pos:position pos:line="37" pos:column="21"/></operator> <sizeof pos:line="37" pos:column="22">sizeof<argument_list pos:line="37" pos:column="28">(<argument><expr><name pos:line="37" pos:column="29">STRUCT_COUNTERS_INFO<pos:position pos:line="37" pos:column="49"/></name></expr></argument>)<pos:position pos:line="37" pos:column="50"/></argument_list></sizeof>
			<operator pos:line="38" pos:column="25">+<pos:position pos:line="38" pos:column="26"/></operator> <sizeof pos:line="38" pos:column="27">sizeof<argument_list pos:line="38" pos:column="33">(<argument><expr><name pos:line="38" pos:column="34">STRUCT_COUNTERS<pos:position pos:line="38" pos:column="49"/></name></expr></argument>)<pos:position pos:line="38" pos:column="50"/></argument_list></sizeof> <operator pos:line="38" pos:column="51">*<pos:position pos:line="38" pos:column="52"/></operator> <name pos:line="38" pos:column="53">new_number<pos:position pos:line="38" pos:column="63"/></name></expr>;<pos:position pos:line="38" pos:column="64"/></expr_stmt>

	<comment type="block" pos:line="40" pos:column="9">/* These are the old counters we will get from kernel */</comment>
	<expr_stmt><expr><name><name pos:line="41" pos:column="9">repl<pos:position pos:line="41" pos:column="13"/></name><operator pos:line="41" pos:column="13">-&gt;<pos:position pos:line="41" pos:column="18"/></operator><name pos:line="41" pos:column="15">counters<pos:position pos:line="41" pos:column="23"/></name></name> <operator pos:line="41" pos:column="24">=<pos:position pos:line="41" pos:column="25"/></operator> <call><name pos:line="41" pos:column="26">malloc<pos:position pos:line="41" pos:column="32"/></name><argument_list pos:line="41" pos:column="32">(<argument><expr><sizeof pos:line="41" pos:column="33">sizeof<argument_list pos:line="41" pos:column="39">(<argument><expr><name pos:line="41" pos:column="40">STRUCT_COUNTERS<pos:position pos:line="41" pos:column="55"/></name></expr></argument>)<pos:position pos:line="41" pos:column="56"/></argument_list></sizeof>
				<operator pos:line="42" pos:column="33">*<pos:position pos:line="42" pos:column="34"/></operator> <name><operator pos:line="42" pos:column="35">(<pos:position pos:line="42" pos:column="36"/></operator><operator pos:line="42" pos:column="36">*<pos:position pos:line="42" pos:column="37"/></operator><name pos:line="42" pos:column="37">handle<pos:position pos:line="42" pos:column="43"/></name><operator pos:line="42" pos:column="43">)<pos:position pos:line="42" pos:column="44"/></operator><operator pos:line="42" pos:column="44">-&gt;<pos:position pos:line="42" pos:column="49"/></operator><name><name pos:line="42" pos:column="46">info<pos:position pos:line="42" pos:column="50"/></name><operator pos:line="42" pos:column="50">.<pos:position pos:line="42" pos:column="51"/></operator><name pos:line="42" pos:column="51">num_entries<pos:position pos:line="42" pos:column="62"/></name></name></name></expr></argument>)<pos:position pos:line="42" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="64"/></expr_stmt>
	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><operator pos:line="43" pos:column="13">!<pos:position pos:line="43" pos:column="14"/></operator><name><name pos:line="43" pos:column="14">repl<pos:position pos:line="43" pos:column="18"/></name><operator pos:line="43" pos:column="18">-&gt;<pos:position pos:line="43" pos:column="23"/></operator><name pos:line="43" pos:column="20">counters<pos:position pos:line="43" pos:column="28"/></name></name></expr>)<pos:position pos:line="43" pos:column="29"/></condition><then pos:line="43" pos:column="29"> <block pos:line="43" pos:column="30">{
		<expr_stmt><expr><name pos:line="44" pos:column="17">errno<pos:position pos:line="44" pos:column="22"/></name> <operator pos:line="44" pos:column="23">=<pos:position pos:line="44" pos:column="24"/></operator> <name pos:line="44" pos:column="25">ENOMEM<pos:position pos:line="44" pos:column="31"/></name></expr>;<pos:position pos:line="44" pos:column="32"/></expr_stmt>
		<goto pos:line="45" pos:column="17">goto <name pos:line="45" pos:column="22">out_free_repl<pos:position pos:line="45" pos:column="35"/></name>;<pos:position pos:line="45" pos:column="36"/></goto>
	}<pos:position pos:line="46" pos:column="10"/></block></then></if>
	<comment type="block" pos:line="47" pos:column="9">/* These are the counters we're going to put back, later. */</comment>
	<expr_stmt><expr><name pos:line="48" pos:column="9">newcounters<pos:position pos:line="48" pos:column="20"/></name> <operator pos:line="48" pos:column="21">=<pos:position pos:line="48" pos:column="22"/></operator> <call><name pos:line="48" pos:column="23">malloc<pos:position pos:line="48" pos:column="29"/></name><argument_list pos:line="48" pos:column="29">(<argument><expr><name pos:line="48" pos:column="30">counterlen<pos:position pos:line="48" pos:column="40"/></name></expr></argument>)<pos:position pos:line="48" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="42"/></expr_stmt>
	<if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><operator pos:line="49" pos:column="13">!<pos:position pos:line="49" pos:column="14"/></operator><name pos:line="49" pos:column="14">newcounters<pos:position pos:line="49" pos:column="25"/></name></expr>)<pos:position pos:line="49" pos:column="26"/></condition><then pos:line="49" pos:column="26"> <block pos:line="49" pos:column="27">{
		<expr_stmt><expr><name pos:line="50" pos:column="17">errno<pos:position pos:line="50" pos:column="22"/></name> <operator pos:line="50" pos:column="23">=<pos:position pos:line="50" pos:column="24"/></operator> <name pos:line="50" pos:column="25">ENOMEM<pos:position pos:line="50" pos:column="31"/></name></expr>;<pos:position pos:line="50" pos:column="32"/></expr_stmt>
		<goto pos:line="51" pos:column="17">goto <name pos:line="51" pos:column="22">out_free_repl_counters<pos:position pos:line="51" pos:column="44"/></name>;<pos:position pos:line="51" pos:column="45"/></goto>
	}<pos:position pos:line="52" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="53" pos:column="9">memset<pos:position pos:line="53" pos:column="15"/></name><argument_list pos:line="53" pos:column="15">(<argument><expr><name pos:line="53" pos:column="16">newcounters<pos:position pos:line="53" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="29">0<pos:position pos:line="53" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="32">counterlen<pos:position pos:line="53" pos:column="42"/></name></expr></argument>)<pos:position pos:line="53" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="44"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="55" pos:column="9">strcpy<pos:position pos:line="55" pos:column="15"/></name><argument_list pos:line="55" pos:column="15">(<argument><expr><name><name pos:line="55" pos:column="16">repl<pos:position pos:line="55" pos:column="20"/></name><operator pos:line="55" pos:column="20">-&gt;<pos:position pos:line="55" pos:column="25"/></operator><name pos:line="55" pos:column="22">name<pos:position pos:line="55" pos:column="26"/></name></name></expr></argument>, <argument><expr><name><operator pos:line="55" pos:column="28">(<pos:position pos:line="55" pos:column="29"/></operator><operator pos:line="55" pos:column="29">*<pos:position pos:line="55" pos:column="30"/></operator><name pos:line="55" pos:column="30">handle<pos:position pos:line="55" pos:column="36"/></name><operator pos:line="55" pos:column="36">)<pos:position pos:line="55" pos:column="37"/></operator><operator pos:line="55" pos:column="37">-&gt;<pos:position pos:line="55" pos:column="42"/></operator><name><name pos:line="55" pos:column="39">info<pos:position pos:line="55" pos:column="43"/></name><operator pos:line="55" pos:column="43">.<pos:position pos:line="55" pos:column="44"/></operator><name pos:line="55" pos:column="44">name<pos:position pos:line="55" pos:column="48"/></name></name></name></expr></argument>)<pos:position pos:line="55" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="50"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="56" pos:column="9">repl<pos:position pos:line="56" pos:column="13"/></name><operator pos:line="56" pos:column="13">-&gt;<pos:position pos:line="56" pos:column="18"/></operator><name pos:line="56" pos:column="15">num_entries<pos:position pos:line="56" pos:column="26"/></name></name> <operator pos:line="56" pos:column="27">=<pos:position pos:line="56" pos:column="28"/></operator> <name pos:line="56" pos:column="29">new_number<pos:position pos:line="56" pos:column="39"/></name></expr>;<pos:position pos:line="56" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="57" pos:column="9">repl<pos:position pos:line="57" pos:column="13"/></name><operator pos:line="57" pos:column="13">-&gt;<pos:position pos:line="57" pos:column="18"/></operator><name pos:line="57" pos:column="15">size<pos:position pos:line="57" pos:column="19"/></name></name> <operator pos:line="57" pos:column="20">=<pos:position pos:line="57" pos:column="21"/></operator> <name pos:line="57" pos:column="22">new_size<pos:position pos:line="57" pos:column="30"/></name></expr>;<pos:position pos:line="57" pos:column="31"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="59" pos:column="9">repl<pos:position pos:line="59" pos:column="13"/></name><operator pos:line="59" pos:column="13">-&gt;<pos:position pos:line="59" pos:column="18"/></operator><name pos:line="59" pos:column="15">num_counters<pos:position pos:line="59" pos:column="27"/></name></name> <operator pos:line="59" pos:column="28">=<pos:position pos:line="59" pos:column="29"/></operator> <name><operator pos:line="59" pos:column="30">(<pos:position pos:line="59" pos:column="31"/></operator><operator pos:line="59" pos:column="31">*<pos:position pos:line="59" pos:column="32"/></operator><name pos:line="59" pos:column="32">handle<pos:position pos:line="59" pos:column="38"/></name><operator pos:line="59" pos:column="38">)<pos:position pos:line="59" pos:column="39"/></operator><operator pos:line="59" pos:column="39">-&gt;<pos:position pos:line="59" pos:column="44"/></operator><name><name pos:line="59" pos:column="41">info<pos:position pos:line="59" pos:column="45"/></name><operator pos:line="59" pos:column="45">.<pos:position pos:line="59" pos:column="46"/></operator><name pos:line="59" pos:column="46">num_entries<pos:position pos:line="59" pos:column="57"/></name></name></name></expr>;<pos:position pos:line="59" pos:column="58"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="60" pos:column="9">repl<pos:position pos:line="60" pos:column="13"/></name><operator pos:line="60" pos:column="13">-&gt;<pos:position pos:line="60" pos:column="18"/></operator><name pos:line="60" pos:column="15">valid_hooks<pos:position pos:line="60" pos:column="26"/></name></name> <operator pos:line="60" pos:column="27">=<pos:position pos:line="60" pos:column="28"/></operator> <name><operator pos:line="60" pos:column="29">(<pos:position pos:line="60" pos:column="30"/></operator><operator pos:line="60" pos:column="30">*<pos:position pos:line="60" pos:column="31"/></operator><name pos:line="60" pos:column="31">handle<pos:position pos:line="60" pos:column="37"/></name><operator pos:line="60" pos:column="37">)<pos:position pos:line="60" pos:column="38"/></operator><operator pos:line="60" pos:column="38">-&gt;<pos:position pos:line="60" pos:column="43"/></operator><name><name pos:line="60" pos:column="40">info<pos:position pos:line="60" pos:column="44"/></name><operator pos:line="60" pos:column="44">.<pos:position pos:line="60" pos:column="45"/></operator><name pos:line="60" pos:column="45">valid_hooks<pos:position pos:line="60" pos:column="56"/></name></name></name></expr>;<pos:position pos:line="60" pos:column="57"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="62" pos:column="9">DEBUGP<pos:position pos:line="62" pos:column="15"/></name><argument_list pos:line="62" pos:column="15">(<argument><expr><literal type="string" pos:line="62" pos:column="16">"num_entries=%u, size=%u, num_counters=%u\n"<pos:position pos:line="62" pos:column="60"/></literal></expr></argument>,
		<argument><expr><name><name pos:line="63" pos:column="17">repl<pos:position pos:line="63" pos:column="21"/></name><operator pos:line="63" pos:column="21">-&gt;<pos:position pos:line="63" pos:column="26"/></operator><name pos:line="63" pos:column="23">num_entries<pos:position pos:line="63" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="36">repl<pos:position pos:line="63" pos:column="40"/></name><operator pos:line="63" pos:column="40">-&gt;<pos:position pos:line="63" pos:column="45"/></operator><name pos:line="63" pos:column="42">size<pos:position pos:line="63" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="48">repl<pos:position pos:line="63" pos:column="52"/></name><operator pos:line="63" pos:column="52">-&gt;<pos:position pos:line="63" pos:column="57"/></operator><name pos:line="63" pos:column="54">num_counters<pos:position pos:line="63" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="68"/></expr_stmt>

	<expr_stmt><expr><name pos:line="65" pos:column="9">ret<pos:position pos:line="65" pos:column="12"/></name> <operator pos:line="65" pos:column="13">=<pos:position pos:line="65" pos:column="14"/></operator> <call><name pos:line="65" pos:column="15">iptcc_compile_table<pos:position pos:line="65" pos:column="34"/></name><argument_list pos:line="65" pos:column="34">(<argument><expr><operator pos:line="65" pos:column="35">*<pos:position pos:line="65" pos:column="36"/></operator><name pos:line="65" pos:column="36">handle<pos:position pos:line="65" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="44">repl<pos:position pos:line="65" pos:column="48"/></name></expr></argument>)<pos:position pos:line="65" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="50"/></expr_stmt>
	<if pos:line="66" pos:column="9">if <condition pos:line="66" pos:column="12">(<expr><name pos:line="66" pos:column="13">ret<pos:position pos:line="66" pos:column="16"/></name> <operator pos:line="66" pos:column="17">&lt;<pos:position pos:line="66" pos:column="21"/></operator> <literal type="number" pos:line="66" pos:column="19">0<pos:position pos:line="66" pos:column="20"/></literal></expr>)<pos:position pos:line="66" pos:column="21"/></condition><then pos:line="66" pos:column="21"> <block pos:line="66" pos:column="22">{
		<expr_stmt><expr><name pos:line="67" pos:column="17">errno<pos:position pos:line="67" pos:column="22"/></name> <operator pos:line="67" pos:column="23">=<pos:position pos:line="67" pos:column="24"/></operator> <name pos:line="67" pos:column="25">ret<pos:position pos:line="67" pos:column="28"/></name></expr>;<pos:position pos:line="67" pos:column="29"/></expr_stmt>
		<goto pos:line="68" pos:column="17">goto <name pos:line="68" pos:column="22">out_free_newcounters<pos:position pos:line="68" pos:column="42"/></name>;<pos:position pos:line="68" pos:column="43"/></goto>
	}<pos:position pos:line="69" pos:column="10"/></block></then></if>


<cpp:ifdef pos:line="72" pos:column="1">#<cpp:directive pos:line="72" pos:column="2">ifdef<pos:position pos:line="72" pos:column="7"/></cpp:directive> <name pos:line="72" pos:column="8">IPTC_DEBUG2<pos:position pos:line="72" pos:column="19"/></name></cpp:ifdef>
	<block pos:line="73" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="74" pos:column="17">int<pos:position pos:line="74" pos:column="20"/></name></type> <name pos:line="74" pos:column="21">fd<pos:position pos:line="74" pos:column="23"/></name> <init pos:line="74" pos:column="24">= <expr><call><name pos:line="74" pos:column="26">open<pos:position pos:line="74" pos:column="30"/></name><argument_list pos:line="74" pos:column="30">(<argument><expr><literal type="string" pos:line="74" pos:column="31">"/tmp/libiptc-so_set_replace.blob"<pos:position pos:line="74" pos:column="65"/></literal></expr></argument>, 
				<argument><expr><name pos:line="75" pos:column="33">O_CREAT<pos:position pos:line="75" pos:column="40"/></name><operator pos:line="75" pos:column="40">|<pos:position pos:line="75" pos:column="41"/></operator><name pos:line="75" pos:column="41">O_WRONLY<pos:position pos:line="75" pos:column="49"/></name></expr></argument>)<pos:position pos:line="75" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="75" pos:column="51"/></decl_stmt>
		<if pos:line="76" pos:column="17">if <condition pos:line="76" pos:column="20">(<expr><name pos:line="76" pos:column="21">fd<pos:position pos:line="76" pos:column="23"/></name> <operator pos:line="76" pos:column="24">&gt;=<pos:position pos:line="76" pos:column="29"/></operator> <literal type="number" pos:line="76" pos:column="27">0<pos:position pos:line="76" pos:column="28"/></literal></expr>)<pos:position pos:line="76" pos:column="29"/></condition><then pos:line="76" pos:column="29"> <block pos:line="76" pos:column="30">{
			<expr_stmt><expr><call><name pos:line="77" pos:column="25">write<pos:position pos:line="77" pos:column="30"/></name><argument_list pos:line="77" pos:column="30">(<argument><expr><name pos:line="77" pos:column="31">fd<pos:position pos:line="77" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="35">repl<pos:position pos:line="77" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="77" pos:column="41">sizeof<argument_list pos:line="77" pos:column="47">(<argument><expr><operator pos:line="77" pos:column="48">*<pos:position pos:line="77" pos:column="49"/></operator><name pos:line="77" pos:column="49">repl<pos:position pos:line="77" pos:column="53"/></name></expr></argument>)<pos:position pos:line="77" pos:column="54"/></argument_list></sizeof> <operator pos:line="77" pos:column="55">+<pos:position pos:line="77" pos:column="56"/></operator> <name><name pos:line="77" pos:column="57">repl<pos:position pos:line="77" pos:column="61"/></name><operator pos:line="77" pos:column="61">-&gt;<pos:position pos:line="77" pos:column="66"/></operator><name pos:line="77" pos:column="63">size<pos:position pos:line="77" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="69"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="78" pos:column="25">close<pos:position pos:line="78" pos:column="30"/></name><argument_list pos:line="78" pos:column="30">(<argument><expr><name pos:line="78" pos:column="31">fd<pos:position pos:line="78" pos:column="33"/></name></expr></argument>)<pos:position pos:line="78" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="35"/></expr_stmt>
		}<pos:position pos:line="79" pos:column="18"/></block></then></if>
	}<pos:position pos:line="80" pos:column="10"/></block>
<cpp:endif pos:line="81" pos:column="1">#<cpp:directive pos:line="81" pos:column="2">endif<pos:position pos:line="81" pos:column="7"/></cpp:directive></cpp:endif>

	<expr_stmt><expr><name pos:line="83" pos:column="9">ret<pos:position pos:line="83" pos:column="12"/></name> <operator pos:line="83" pos:column="13">=<pos:position pos:line="83" pos:column="14"/></operator> <call><name pos:line="83" pos:column="15">setsockopt<pos:position pos:line="83" pos:column="25"/></name><argument_list pos:line="83" pos:column="25">(<argument><expr><name pos:line="83" pos:column="26">sockfd<pos:position pos:line="83" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="34">TC_IPPROTO<pos:position pos:line="83" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="46">SO_SET_REPLACE<pos:position pos:line="83" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="62">repl<pos:position pos:line="83" pos:column="66"/></name></expr></argument>,
			 <argument><expr><sizeof pos:line="84" pos:column="26">sizeof<argument_list pos:line="84" pos:column="32">(<argument><expr><operator pos:line="84" pos:column="33">*<pos:position pos:line="84" pos:column="34"/></operator><name pos:line="84" pos:column="34">repl<pos:position pos:line="84" pos:column="38"/></name></expr></argument>)<pos:position pos:line="84" pos:column="39"/></argument_list></sizeof> <operator pos:line="84" pos:column="40">+<pos:position pos:line="84" pos:column="41"/></operator> <name><name pos:line="84" pos:column="42">repl<pos:position pos:line="84" pos:column="46"/></name><operator pos:line="84" pos:column="46">-&gt;<pos:position pos:line="84" pos:column="51"/></operator><name pos:line="84" pos:column="48">size<pos:position pos:line="84" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="54"/></expr_stmt>
	<if pos:line="85" pos:column="9">if <condition pos:line="85" pos:column="12">(<expr><name pos:line="85" pos:column="13">ret<pos:position pos:line="85" pos:column="16"/></name> <operator pos:line="85" pos:column="17">&lt;<pos:position pos:line="85" pos:column="21"/></operator> <literal type="number" pos:line="85" pos:column="19">0<pos:position pos:line="85" pos:column="20"/></literal></expr>)<pos:position pos:line="85" pos:column="21"/></condition><then pos:line="85" pos:column="21">
		<block type="pseudo"><goto pos:line="86" pos:column="17">goto <name pos:line="86" pos:column="22">out_free_newcounters<pos:position pos:line="86" pos:column="42"/></name>;<pos:position pos:line="86" pos:column="43"/></goto></block></then></if>

	<comment type="block" pos:line="88" pos:column="9">/* Put counters back. */</comment>
	<expr_stmt><expr><call><name pos:line="89" pos:column="9">strcpy<pos:position pos:line="89" pos:column="15"/></name><argument_list pos:line="89" pos:column="15">(<argument><expr><name><name pos:line="89" pos:column="16">newcounters<pos:position pos:line="89" pos:column="27"/></name><operator pos:line="89" pos:column="27">-&gt;<pos:position pos:line="89" pos:column="32"/></operator><name pos:line="89" pos:column="29">name<pos:position pos:line="89" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><operator pos:line="89" pos:column="35">(<pos:position pos:line="89" pos:column="36"/></operator><operator pos:line="89" pos:column="36">*<pos:position pos:line="89" pos:column="37"/></operator><name pos:line="89" pos:column="37">handle<pos:position pos:line="89" pos:column="43"/></name><operator pos:line="89" pos:column="43">)<pos:position pos:line="89" pos:column="44"/></operator><operator pos:line="89" pos:column="44">-&gt;<pos:position pos:line="89" pos:column="49"/></operator><name><name pos:line="89" pos:column="46">info<pos:position pos:line="89" pos:column="50"/></name><operator pos:line="89" pos:column="50">.<pos:position pos:line="89" pos:column="51"/></operator><name pos:line="89" pos:column="51">name<pos:position pos:line="89" pos:column="55"/></name></name></name></expr></argument>)<pos:position pos:line="89" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="57"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="90" pos:column="9">newcounters<pos:position pos:line="90" pos:column="20"/></name><operator pos:line="90" pos:column="20">-&gt;<pos:position pos:line="90" pos:column="25"/></operator><name pos:line="90" pos:column="22">num_counters<pos:position pos:line="90" pos:column="34"/></name></name> <operator pos:line="90" pos:column="35">=<pos:position pos:line="90" pos:column="36"/></operator> <name pos:line="90" pos:column="37">new_number<pos:position pos:line="90" pos:column="47"/></name></expr>;<pos:position pos:line="90" pos:column="48"/></expr_stmt>

	<macro><name pos:line="92" pos:column="9">list_for_each_entry<pos:position pos:line="92" pos:column="28"/></name><argument_list pos:line="92" pos:column="28">(<argument pos:line="92" pos:column="29">c<pos:position pos:line="92" pos:column="30"/></argument>, <argument pos:line="92" pos:column="32">&amp;(*handle)-&gt;chains<pos:position pos:line="92" pos:column="50"/></argument>, <argument pos:line="92" pos:column="52">list<pos:position pos:line="92" pos:column="56"/></argument>)<pos:position pos:line="92" pos:column="57"/></argument_list></macro> <block pos:line="92" pos:column="58">{
		<decl_stmt><decl><type><name><name pos:line="93" pos:column="17">struct<pos:position pos:line="93" pos:column="23"/></name> <name pos:line="93" pos:column="24">rule_head<pos:position pos:line="93" pos:column="33"/></name></name> <modifier pos:line="93" pos:column="34">*<pos:position pos:line="93" pos:column="35"/></modifier></type><name pos:line="93" pos:column="35">r<pos:position pos:line="93" pos:column="36"/></name></decl>;<pos:position pos:line="93" pos:column="37"/></decl_stmt>

		<comment type="block" pos:line="95" pos:column="17">/* Builtin chains have their own counters */</comment>
		<if pos:line="96" pos:column="17">if <condition pos:line="96" pos:column="20">(<expr><call><name pos:line="96" pos:column="21">iptcc_is_builtin<pos:position pos:line="96" pos:column="37"/></name><argument_list pos:line="96" pos:column="37">(<argument><expr><name pos:line="96" pos:column="38">c<pos:position pos:line="96" pos:column="39"/></name></expr></argument>)<pos:position pos:line="96" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="96" pos:column="41"/></condition><then pos:line="96" pos:column="41"> <block pos:line="96" pos:column="42">{
			<expr_stmt><expr><call><name pos:line="97" pos:column="25">DEBUGP<pos:position pos:line="97" pos:column="31"/></name><argument_list pos:line="97" pos:column="31">(<argument><expr><literal type="string" pos:line="97" pos:column="32">"counter for chain-index %u: "<pos:position pos:line="97" pos:column="62"/></literal></expr></argument>, <argument><expr><name><name pos:line="97" pos:column="64">c<pos:position pos:line="97" pos:column="65"/></name><operator pos:line="97" pos:column="65">-&gt;<pos:position pos:line="97" pos:column="70"/></operator><name pos:line="97" pos:column="67">foot_index<pos:position pos:line="97" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="97" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="79"/></expr_stmt>
			<switch pos:line="98" pos:column="25">switch<condition pos:line="98" pos:column="31">(<expr><name><name pos:line="98" pos:column="32">c<pos:position pos:line="98" pos:column="33"/></name><operator pos:line="98" pos:column="33">-&gt;<pos:position pos:line="98" pos:column="38"/></operator><name pos:line="98" pos:column="35">counter_map<pos:position pos:line="98" pos:column="46"/></name><operator pos:line="98" pos:column="46">.<pos:position pos:line="98" pos:column="47"/></operator><name pos:line="98" pos:column="47">maptype<pos:position pos:line="98" pos:column="54"/></name></name></expr>)<pos:position pos:line="98" pos:column="55"/></condition> <block pos:line="98" pos:column="56">{
			<case pos:line="99" pos:column="25">case <expr><name pos:line="99" pos:column="30">COUNTER_MAP_NOMAP<pos:position pos:line="99" pos:column="47"/></name></expr>:<pos:position pos:line="99" pos:column="48"/></case>
				<expr_stmt><expr><call><name pos:line="100" pos:column="33">counters_nomap<pos:position pos:line="100" pos:column="47"/></name><argument_list pos:line="100" pos:column="47">(<argument><expr><name pos:line="100" pos:column="48">newcounters<pos:position pos:line="100" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="100" pos:column="61">c<pos:position pos:line="100" pos:column="62"/></name><operator pos:line="100" pos:column="62">-&gt;<pos:position pos:line="100" pos:column="67"/></operator><name pos:line="100" pos:column="64">foot_index<pos:position pos:line="100" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="100" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="76"/></expr_stmt>
				<break pos:line="101" pos:column="33">break;<pos:position pos:line="101" pos:column="39"/></break>
			<case pos:line="102" pos:column="25">case <expr><name pos:line="102" pos:column="30">COUNTER_MAP_NORMAL_MAP<pos:position pos:line="102" pos:column="52"/></name></expr>:<pos:position pos:line="102" pos:column="53"/></case>
				<expr_stmt><expr><call><name pos:line="103" pos:column="33">counters_normal_map<pos:position pos:line="103" pos:column="52"/></name><argument_list pos:line="103" pos:column="52">(<argument><expr><name pos:line="103" pos:column="53">newcounters<pos:position pos:line="103" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="66">repl<pos:position pos:line="103" pos:column="70"/></name></expr></argument>,
						    <argument><expr><name><name pos:line="104" pos:column="53">c<pos:position pos:line="104" pos:column="54"/></name><operator pos:line="104" pos:column="54">-&gt;<pos:position pos:line="104" pos:column="59"/></operator><name pos:line="104" pos:column="56">foot_index<pos:position pos:line="104" pos:column="66"/></name></name></expr></argument>, 
						    <argument><expr><name><name pos:line="105" pos:column="53">c<pos:position pos:line="105" pos:column="54"/></name><operator pos:line="105" pos:column="54">-&gt;<pos:position pos:line="105" pos:column="59"/></operator><name pos:line="105" pos:column="56">counter_map<pos:position pos:line="105" pos:column="67"/></name><operator pos:line="105" pos:column="67">.<pos:position pos:line="105" pos:column="68"/></operator><name pos:line="105" pos:column="68">mappos<pos:position pos:line="105" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="105" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="76"/></expr_stmt>
				<break pos:line="106" pos:column="33">break;<pos:position pos:line="106" pos:column="39"/></break>
			<case pos:line="107" pos:column="25">case <expr><name pos:line="107" pos:column="30">COUNTER_MAP_ZEROED<pos:position pos:line="107" pos:column="48"/></name></expr>:<pos:position pos:line="107" pos:column="49"/></case>
				<expr_stmt><expr><call><name pos:line="108" pos:column="33">counters_map_zeroed<pos:position pos:line="108" pos:column="52"/></name><argument_list pos:line="108" pos:column="52">(<argument><expr><name pos:line="108" pos:column="53">newcounters<pos:position pos:line="108" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="66">repl<pos:position pos:line="108" pos:column="70"/></name></expr></argument>,
						    <argument><expr><name><name pos:line="109" pos:column="53">c<pos:position pos:line="109" pos:column="54"/></name><operator pos:line="109" pos:column="54">-&gt;<pos:position pos:line="109" pos:column="59"/></operator><name pos:line="109" pos:column="56">foot_index<pos:position pos:line="109" pos:column="66"/></name></name></expr></argument>, 
						    <argument><expr><name><name pos:line="110" pos:column="53">c<pos:position pos:line="110" pos:column="54"/></name><operator pos:line="110" pos:column="54">-&gt;<pos:position pos:line="110" pos:column="59"/></operator><name pos:line="110" pos:column="56">counter_map<pos:position pos:line="110" pos:column="67"/></name><operator pos:line="110" pos:column="67">.<pos:position pos:line="110" pos:column="68"/></operator><name pos:line="110" pos:column="68">mappos<pos:position pos:line="110" pos:column="74"/></name></name></expr></argument>,
						    <argument><expr><operator pos:line="111" pos:column="53">&amp;<pos:position pos:line="111" pos:column="58"/></operator><name><name pos:line="111" pos:column="54">c<pos:position pos:line="111" pos:column="55"/></name><operator pos:line="111" pos:column="55">-&gt;<pos:position pos:line="111" pos:column="60"/></operator><name pos:line="111" pos:column="57">counters<pos:position pos:line="111" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="111" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="67"/></expr_stmt>
				<break pos:line="112" pos:column="33">break;<pos:position pos:line="112" pos:column="39"/></break>
			<case pos:line="113" pos:column="25">case <expr><name pos:line="113" pos:column="30">COUNTER_MAP_SET<pos:position pos:line="113" pos:column="45"/></name></expr>:<pos:position pos:line="113" pos:column="46"/></case>
				<expr_stmt><expr><call><name pos:line="114" pos:column="33">counters_map_set<pos:position pos:line="114" pos:column="49"/></name><argument_list pos:line="114" pos:column="49">(<argument><expr><name pos:line="114" pos:column="50">newcounters<pos:position pos:line="114" pos:column="61"/></name></expr></argument>, <argument><expr><name><name pos:line="114" pos:column="63">c<pos:position pos:line="114" pos:column="64"/></name><operator pos:line="114" pos:column="64">-&gt;<pos:position pos:line="114" pos:column="69"/></operator><name pos:line="114" pos:column="66">foot_index<pos:position pos:line="114" pos:column="76"/></name></name></expr></argument>,
						 <argument><expr><operator pos:line="115" pos:column="50">&amp;<pos:position pos:line="115" pos:column="55"/></operator><name><name pos:line="115" pos:column="51">c<pos:position pos:line="115" pos:column="52"/></name><operator pos:line="115" pos:column="52">-&gt;<pos:position pos:line="115" pos:column="57"/></operator><name pos:line="115" pos:column="54">counters<pos:position pos:line="115" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="115" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="64"/></expr_stmt>
				<break pos:line="116" pos:column="33">break;<pos:position pos:line="116" pos:column="39"/></break>
			}<pos:position pos:line="117" pos:column="26"/></block></switch>
		}<pos:position pos:line="118" pos:column="18"/></block></then></if>

		<macro><name pos:line="120" pos:column="17">list_for_each_entry<pos:position pos:line="120" pos:column="36"/></name><argument_list pos:line="120" pos:column="36">(<argument pos:line="120" pos:column="37">r<pos:position pos:line="120" pos:column="38"/></argument>, <argument pos:line="120" pos:column="40">&amp;c-&gt;rules<pos:position pos:line="120" pos:column="49"/></argument>, <argument pos:line="120" pos:column="51">list<pos:position pos:line="120" pos:column="55"/></argument>)<pos:position pos:line="120" pos:column="56"/></argument_list></macro> <block pos:line="120" pos:column="57">{
			<expr_stmt><expr><call><name pos:line="121" pos:column="25">DEBUGP<pos:position pos:line="121" pos:column="31"/></name><argument_list pos:line="121" pos:column="31">(<argument><expr><literal type="string" pos:line="121" pos:column="32">"counter for index %u: "<pos:position pos:line="121" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="121" pos:column="58">r<pos:position pos:line="121" pos:column="59"/></name><operator pos:line="121" pos:column="59">-&gt;<pos:position pos:line="121" pos:column="64"/></operator><name pos:line="121" pos:column="61">index<pos:position pos:line="121" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="121" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="68"/></expr_stmt>
			<switch pos:line="122" pos:column="25">switch <condition pos:line="122" pos:column="32">(<expr><name><name pos:line="122" pos:column="33">r<pos:position pos:line="122" pos:column="34"/></name><operator pos:line="122" pos:column="34">-&gt;<pos:position pos:line="122" pos:column="39"/></operator><name pos:line="122" pos:column="36">counter_map<pos:position pos:line="122" pos:column="47"/></name><operator pos:line="122" pos:column="47">.<pos:position pos:line="122" pos:column="48"/></operator><name pos:line="122" pos:column="48">maptype<pos:position pos:line="122" pos:column="55"/></name></name></expr>)<pos:position pos:line="122" pos:column="56"/></condition> <block pos:line="122" pos:column="57">{
			<case pos:line="123" pos:column="25">case <expr><name pos:line="123" pos:column="30">COUNTER_MAP_NOMAP<pos:position pos:line="123" pos:column="47"/></name></expr>:<pos:position pos:line="123" pos:column="48"/></case>
				<expr_stmt><expr><call><name pos:line="124" pos:column="33">counters_nomap<pos:position pos:line="124" pos:column="47"/></name><argument_list pos:line="124" pos:column="47">(<argument><expr><name pos:line="124" pos:column="48">newcounters<pos:position pos:line="124" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="124" pos:column="61">r<pos:position pos:line="124" pos:column="62"/></name><operator pos:line="124" pos:column="62">-&gt;<pos:position pos:line="124" pos:column="67"/></operator><name pos:line="124" pos:column="64">index<pos:position pos:line="124" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="124" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="71"/></expr_stmt>
				<break pos:line="125" pos:column="33">break;<pos:position pos:line="125" pos:column="39"/></break>

			<case pos:line="127" pos:column="25">case <expr><name pos:line="127" pos:column="30">COUNTER_MAP_NORMAL_MAP<pos:position pos:line="127" pos:column="52"/></name></expr>:<pos:position pos:line="127" pos:column="53"/></case>
				<expr_stmt><expr><call><name pos:line="128" pos:column="33">counters_normal_map<pos:position pos:line="128" pos:column="52"/></name><argument_list pos:line="128" pos:column="52">(<argument><expr><name pos:line="128" pos:column="53">newcounters<pos:position pos:line="128" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="66">repl<pos:position pos:line="128" pos:column="70"/></name></expr></argument>,
						    <argument><expr><name><name pos:line="129" pos:column="53">r<pos:position pos:line="129" pos:column="54"/></name><operator pos:line="129" pos:column="54">-&gt;<pos:position pos:line="129" pos:column="59"/></operator><name pos:line="129" pos:column="56">index<pos:position pos:line="129" pos:column="61"/></name></name></expr></argument>, 
						    <argument><expr><name><name pos:line="130" pos:column="53">r<pos:position pos:line="130" pos:column="54"/></name><operator pos:line="130" pos:column="54">-&gt;<pos:position pos:line="130" pos:column="59"/></operator><name pos:line="130" pos:column="56">counter_map<pos:position pos:line="130" pos:column="67"/></name><operator pos:line="130" pos:column="67">.<pos:position pos:line="130" pos:column="68"/></operator><name pos:line="130" pos:column="68">mappos<pos:position pos:line="130" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="130" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="76"/></expr_stmt>
				<break pos:line="131" pos:column="33">break;<pos:position pos:line="131" pos:column="39"/></break>

			<case pos:line="133" pos:column="25">case <expr><name pos:line="133" pos:column="30">COUNTER_MAP_ZEROED<pos:position pos:line="133" pos:column="48"/></name></expr>:<pos:position pos:line="133" pos:column="49"/></case>
				<expr_stmt><expr><call><name pos:line="134" pos:column="33">counters_map_zeroed<pos:position pos:line="134" pos:column="52"/></name><argument_list pos:line="134" pos:column="52">(<argument><expr><name pos:line="134" pos:column="53">newcounters<pos:position pos:line="134" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="66">repl<pos:position pos:line="134" pos:column="70"/></name></expr></argument>,
						    <argument><expr><name><name pos:line="135" pos:column="53">r<pos:position pos:line="135" pos:column="54"/></name><operator pos:line="135" pos:column="54">-&gt;<pos:position pos:line="135" pos:column="59"/></operator><name pos:line="135" pos:column="56">index<pos:position pos:line="135" pos:column="61"/></name></name></expr></argument>,
						    <argument><expr><name><name pos:line="136" pos:column="53">r<pos:position pos:line="136" pos:column="54"/></name><operator pos:line="136" pos:column="54">-&gt;<pos:position pos:line="136" pos:column="59"/></operator><name pos:line="136" pos:column="56">counter_map<pos:position pos:line="136" pos:column="67"/></name><operator pos:line="136" pos:column="67">.<pos:position pos:line="136" pos:column="68"/></operator><name pos:line="136" pos:column="68">mappos<pos:position pos:line="136" pos:column="74"/></name></name></expr></argument>,
						    <argument><expr><operator pos:line="137" pos:column="53">&amp;<pos:position pos:line="137" pos:column="58"/></operator><name><name pos:line="137" pos:column="54">r<pos:position pos:line="137" pos:column="55"/></name><operator pos:line="137" pos:column="55">-&gt;<pos:position pos:line="137" pos:column="60"/></operator><name pos:line="137" pos:column="57">entry<pos:position pos:line="137" pos:column="62"/></name><operator pos:line="137" pos:column="62">-&gt;<pos:position pos:line="137" pos:column="67"/></operator><name pos:line="137" pos:column="64">counters<pos:position pos:line="137" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="137" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="74"/></expr_stmt>
				<break pos:line="138" pos:column="33">break;<pos:position pos:line="138" pos:column="39"/></break>

			<case pos:line="140" pos:column="25">case <expr><name pos:line="140" pos:column="30">COUNTER_MAP_SET<pos:position pos:line="140" pos:column="45"/></name></expr>:<pos:position pos:line="140" pos:column="46"/></case>
				<expr_stmt><expr><call><name pos:line="141" pos:column="33">counters_map_set<pos:position pos:line="141" pos:column="49"/></name><argument_list pos:line="141" pos:column="49">(<argument><expr><name pos:line="141" pos:column="50">newcounters<pos:position pos:line="141" pos:column="61"/></name></expr></argument>, <argument><expr><name><name pos:line="141" pos:column="63">r<pos:position pos:line="141" pos:column="64"/></name><operator pos:line="141" pos:column="64">-&gt;<pos:position pos:line="141" pos:column="69"/></operator><name pos:line="141" pos:column="66">index<pos:position pos:line="141" pos:column="71"/></name></name></expr></argument>,
						 <argument><expr><operator pos:line="142" pos:column="50">&amp;<pos:position pos:line="142" pos:column="55"/></operator><name><name pos:line="142" pos:column="51">r<pos:position pos:line="142" pos:column="52"/></name><operator pos:line="142" pos:column="52">-&gt;<pos:position pos:line="142" pos:column="57"/></operator><name pos:line="142" pos:column="54">entry<pos:position pos:line="142" pos:column="59"/></name><operator pos:line="142" pos:column="59">-&gt;<pos:position pos:line="142" pos:column="64"/></operator><name pos:line="142" pos:column="61">counters<pos:position pos:line="142" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="142" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="71"/></expr_stmt>
				<break pos:line="143" pos:column="33">break;<pos:position pos:line="143" pos:column="39"/></break>
			}<pos:position pos:line="144" pos:column="26"/></block></switch>
		}<pos:position pos:line="145" pos:column="18"/></block>
	}<pos:position pos:line="146" pos:column="10"/></block>

<cpp:ifdef pos:line="148" pos:column="1">#<cpp:directive pos:line="148" pos:column="2">ifdef<pos:position pos:line="148" pos:column="7"/></cpp:directive> <name pos:line="148" pos:column="8">IPTC_DEBUG2<pos:position pos:line="148" pos:column="19"/></name></cpp:ifdef>
	<block pos:line="149" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="150" pos:column="17">int<pos:position pos:line="150" pos:column="20"/></name></type> <name pos:line="150" pos:column="21">fd<pos:position pos:line="150" pos:column="23"/></name> <init pos:line="150" pos:column="24">= <expr><call><name pos:line="150" pos:column="26">open<pos:position pos:line="150" pos:column="30"/></name><argument_list pos:line="150" pos:column="30">(<argument><expr><literal type="string" pos:line="150" pos:column="31">"/tmp/libiptc-so_set_add_counters.blob"<pos:position pos:line="150" pos:column="70"/></literal></expr></argument>, 
				<argument><expr><name pos:line="151" pos:column="33">O_CREAT<pos:position pos:line="151" pos:column="40"/></name><operator pos:line="151" pos:column="40">|<pos:position pos:line="151" pos:column="41"/></operator><name pos:line="151" pos:column="41">O_WRONLY<pos:position pos:line="151" pos:column="49"/></name></expr></argument>)<pos:position pos:line="151" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="151" pos:column="51"/></decl_stmt>
		<if pos:line="152" pos:column="17">if <condition pos:line="152" pos:column="20">(<expr><name pos:line="152" pos:column="21">fd<pos:position pos:line="152" pos:column="23"/></name> <operator pos:line="152" pos:column="24">&gt;=<pos:position pos:line="152" pos:column="29"/></operator> <literal type="number" pos:line="152" pos:column="27">0<pos:position pos:line="152" pos:column="28"/></literal></expr>)<pos:position pos:line="152" pos:column="29"/></condition><then pos:line="152" pos:column="29"> <block pos:line="152" pos:column="30">{
			<expr_stmt><expr><call><name pos:line="153" pos:column="25">write<pos:position pos:line="153" pos:column="30"/></name><argument_list pos:line="153" pos:column="30">(<argument><expr><name pos:line="153" pos:column="31">fd<pos:position pos:line="153" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="35">newcounters<pos:position pos:line="153" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="48">counterlen<pos:position pos:line="153" pos:column="58"/></name></expr></argument>)<pos:position pos:line="153" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="154" pos:column="25">close<pos:position pos:line="154" pos:column="30"/></name><argument_list pos:line="154" pos:column="30">(<argument><expr><name pos:line="154" pos:column="31">fd<pos:position pos:line="154" pos:column="33"/></name></expr></argument>)<pos:position pos:line="154" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="35"/></expr_stmt>
		}<pos:position pos:line="155" pos:column="18"/></block></then></if>
	}<pos:position pos:line="156" pos:column="10"/></block>
<cpp:endif pos:line="157" pos:column="1">#<cpp:directive pos:line="157" pos:column="2">endif<pos:position pos:line="157" pos:column="7"/></cpp:directive></cpp:endif>

	<expr_stmt><expr><name pos:line="159" pos:column="9">ret<pos:position pos:line="159" pos:column="12"/></name> <operator pos:line="159" pos:column="13">=<pos:position pos:line="159" pos:column="14"/></operator> <call><name pos:line="159" pos:column="15">setsockopt<pos:position pos:line="159" pos:column="25"/></name><argument_list pos:line="159" pos:column="25">(<argument><expr><name pos:line="159" pos:column="26">sockfd<pos:position pos:line="159" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="159" pos:column="34">TC_IPPROTO<pos:position pos:line="159" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="159" pos:column="46">SO_SET_ADD_COUNTERS<pos:position pos:line="159" pos:column="65"/></name></expr></argument>,
			 <argument><expr><name pos:line="160" pos:column="26">newcounters<pos:position pos:line="160" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="39">counterlen<pos:position pos:line="160" pos:column="49"/></name></expr></argument>)<pos:position pos:line="160" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="51"/></expr_stmt>
	<if pos:line="161" pos:column="9">if <condition pos:line="161" pos:column="12">(<expr><name pos:line="161" pos:column="13">ret<pos:position pos:line="161" pos:column="16"/></name> <operator pos:line="161" pos:column="17">&lt;<pos:position pos:line="161" pos:column="21"/></operator> <literal type="number" pos:line="161" pos:column="19">0<pos:position pos:line="161" pos:column="20"/></literal></expr>)<pos:position pos:line="161" pos:column="21"/></condition><then pos:line="161" pos:column="21">
		<block type="pseudo"><goto pos:line="162" pos:column="17">goto <name pos:line="162" pos:column="22">out_free_newcounters<pos:position pos:line="162" pos:column="42"/></name>;<pos:position pos:line="162" pos:column="43"/></goto></block></then></if>

	<expr_stmt><expr><call><name pos:line="164" pos:column="9">free<pos:position pos:line="164" pos:column="13"/></name><argument_list pos:line="164" pos:column="13">(<argument><expr><name><name pos:line="164" pos:column="14">repl<pos:position pos:line="164" pos:column="18"/></name><operator pos:line="164" pos:column="18">-&gt;<pos:position pos:line="164" pos:column="23"/></operator><name pos:line="164" pos:column="20">counters<pos:position pos:line="164" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="164" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="165" pos:column="9">free<pos:position pos:line="165" pos:column="13"/></name><argument_list pos:line="165" pos:column="13">(<argument><expr><name pos:line="165" pos:column="14">repl<pos:position pos:line="165" pos:column="18"/></name></expr></argument>)<pos:position pos:line="165" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="166" pos:column="9">free<pos:position pos:line="166" pos:column="13"/></name><argument_list pos:line="166" pos:column="13">(<argument><expr><name pos:line="166" pos:column="14">newcounters<pos:position pos:line="166" pos:column="25"/></name></expr></argument>)<pos:position pos:line="166" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="27"/></expr_stmt>

<label><name pos:line="168" pos:column="1">finished<pos:position pos:line="168" pos:column="9"/></name>:<pos:position pos:line="168" pos:column="10"/></label>
	<expr_stmt><expr><call><name pos:line="169" pos:column="9">TC_FREE<pos:position pos:line="169" pos:column="16"/></name><argument_list pos:line="169" pos:column="16">(<argument><expr><name pos:line="169" pos:column="17">handle<pos:position pos:line="169" pos:column="23"/></name></expr></argument>)<pos:position pos:line="169" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="25"/></expr_stmt>
	<return pos:line="170" pos:column="9">return <expr><literal type="number" pos:line="170" pos:column="16">1<pos:position pos:line="170" pos:column="17"/></literal></expr>;<pos:position pos:line="170" pos:column="18"/></return>

<label><name pos:line="172" pos:column="1">out_free_newcounters<pos:position pos:line="172" pos:column="21"/></name>:<pos:position pos:line="172" pos:column="22"/></label>
	<expr_stmt><expr><call><name pos:line="173" pos:column="9">free<pos:position pos:line="173" pos:column="13"/></name><argument_list pos:line="173" pos:column="13">(<argument><expr><name pos:line="173" pos:column="14">newcounters<pos:position pos:line="173" pos:column="25"/></name></expr></argument>)<pos:position pos:line="173" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="27"/></expr_stmt>
<label><name pos:line="174" pos:column="1">out_free_repl_counters<pos:position pos:line="174" pos:column="23"/></name>:<pos:position pos:line="174" pos:column="24"/></label>
	<expr_stmt><expr><call><name pos:line="175" pos:column="9">free<pos:position pos:line="175" pos:column="13"/></name><argument_list pos:line="175" pos:column="13">(<argument><expr><name><name pos:line="175" pos:column="14">repl<pos:position pos:line="175" pos:column="18"/></name><operator pos:line="175" pos:column="18">-&gt;<pos:position pos:line="175" pos:column="23"/></operator><name pos:line="175" pos:column="20">counters<pos:position pos:line="175" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="175" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="30"/></expr_stmt>
<label><name pos:line="176" pos:column="1">out_free_repl<pos:position pos:line="176" pos:column="14"/></name>:<pos:position pos:line="176" pos:column="15"/></label>
	<expr_stmt><expr><call><name pos:line="177" pos:column="9">free<pos:position pos:line="177" pos:column="13"/></name><argument_list pos:line="177" pos:column="13">(<argument><expr><name pos:line="177" pos:column="14">repl<pos:position pos:line="177" pos:column="18"/></name></expr></argument>)<pos:position pos:line="177" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="20"/></expr_stmt>
<label><name pos:line="178" pos:column="1">out_zero<pos:position pos:line="178" pos:column="9"/></name>:<pos:position pos:line="178" pos:column="10"/></label>
	<return pos:line="179" pos:column="9">return <expr><literal type="number" pos:line="179" pos:column="16">0<pos:position pos:line="179" pos:column="17"/></literal></expr>;<pos:position pos:line="179" pos:column="18"/></return>
}<pos:position pos:line="180" pos:column="2"/></block></function></unit>

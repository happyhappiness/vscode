<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1386_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">counter_list_t<pos:position pos:line="1" pos:column="22"/></name> <modifier pos:line="1" pos:column="23">*<pos:position pos:line="1" pos:column="24"/></modifier></type><name pos:line="1" pos:column="24">counter_list_create<pos:position pos:line="1" pos:column="43"/></name><parameter_list pos:line="1" pos:column="43">(<parameter><decl><type><name pos:line="1" pos:column="44">counter_list_t<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier><modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">list<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
                                           <parameter><decl><type><name pos:line="2" pos:column="44">unsigned<pos:position pos:line="2" pos:column="52"/></name> <name pos:line="2" pos:column="53">int<pos:position pos:line="2" pos:column="56"/></name></type> <name pos:line="2" pos:column="57">key<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>,
                                           <parameter><decl><type><name pos:line="3" pos:column="44">unsigned<pos:position pos:line="3" pos:column="52"/></name> <name pos:line="3" pos:column="53">int<pos:position pos:line="3" pos:column="56"/></name></type> <name pos:line="3" pos:column="57">value<pos:position pos:line="3" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="63"/></parameter_list> <block pos:line="3" pos:column="64">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">counter_list_t<pos:position pos:line="4" pos:column="17"/></name> <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">entry<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">entry<pos:position pos:line="6" pos:column="8"/></name> <operator pos:line="6" pos:column="9">=<pos:position pos:line="6" pos:column="10"/></operator> <call><name pos:line="6" pos:column="11">calloc<pos:position pos:line="6" pos:column="17"/></name><argument_list pos:line="6" pos:column="17">(<argument><expr><literal type="number" pos:line="6" pos:column="18">1<pos:position pos:line="6" pos:column="19"/></literal></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="21">sizeof<argument_list pos:line="6" pos:column="27">(<argument><expr><operator pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="29">entry<pos:position pos:line="6" pos:column="34"/></name></expr></argument>)<pos:position pos:line="6" pos:column="35"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="37"/></expr_stmt>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">entry<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">==<pos:position pos:line="7" pos:column="15"/></operator> <name pos:line="7" pos:column="16">NULL<pos:position pos:line="7" pos:column="20"/></name></expr>)<pos:position pos:line="7" pos:column="21"/></condition><then pos:line="7" pos:column="21">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="13">NULL<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">)<pos:position pos:line="8" pos:column="18"/></operator></expr>;<pos:position pos:line="8" pos:column="19"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="10" pos:column="3">entry<pos:position pos:line="10" pos:column="8"/></name><operator pos:line="10" pos:column="8">-&gt;<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="10">key<pos:position pos:line="10" pos:column="13"/></name></name> <operator pos:line="10" pos:column="14">=<pos:position pos:line="10" pos:column="15"/></operator> <name pos:line="10" pos:column="16">key<pos:position pos:line="10" pos:column="19"/></name></expr>;<pos:position pos:line="10" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="11" pos:column="3">entry<pos:position pos:line="11" pos:column="8"/></name><operator pos:line="11" pos:column="8">-&gt;<pos:position pos:line="11" pos:column="13"/></operator><name pos:line="11" pos:column="10">value<pos:position pos:line="11" pos:column="15"/></name></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <name pos:line="11" pos:column="18">value<pos:position pos:line="11" pos:column="23"/></name></expr>;<pos:position pos:line="11" pos:column="24"/></expr_stmt>

  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><operator pos:line="13" pos:column="7">*<pos:position pos:line="13" pos:column="8"/></operator><name pos:line="13" pos:column="8">list<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">==<pos:position pos:line="13" pos:column="15"/></operator> <name pos:line="13" pos:column="16">NULL<pos:position pos:line="13" pos:column="20"/></name></expr>)<pos:position pos:line="13" pos:column="21"/></condition><then pos:line="13" pos:column="21"> <block pos:line="13" pos:column="22">{
    <expr_stmt><expr><operator pos:line="14" pos:column="5">*<pos:position pos:line="14" pos:column="6"/></operator><name pos:line="14" pos:column="6">list<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <name pos:line="14" pos:column="13">entry<pos:position pos:line="14" pos:column="18"/></name></expr>;<pos:position pos:line="14" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="15" pos:column="4"/></block></then> <else pos:line="15" pos:column="5">else <block pos:line="15" pos:column="10">{
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">counter_list_t<pos:position pos:line="16" pos:column="19"/></name> <modifier pos:line="16" pos:column="20">*<pos:position pos:line="16" pos:column="21"/></modifier></type><name pos:line="16" pos:column="21">last<pos:position pos:line="16" pos:column="25"/></name></decl>;<pos:position pos:line="16" pos:column="26"/></decl_stmt>

    <expr_stmt><expr><name pos:line="18" pos:column="5">last<pos:position pos:line="18" pos:column="9"/></name> <operator pos:line="18" pos:column="10">=<pos:position pos:line="18" pos:column="11"/></operator> <operator pos:line="18" pos:column="12">*<pos:position pos:line="18" pos:column="13"/></operator><name pos:line="18" pos:column="13">list<pos:position pos:line="18" pos:column="17"/></name></expr>;<pos:position pos:line="18" pos:column="18"/></expr_stmt>
    <while pos:line="19" pos:column="5">while <condition pos:line="19" pos:column="11">(<expr><name><name pos:line="19" pos:column="12">last<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">-&gt;<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="18">next<pos:position pos:line="19" pos:column="22"/></name></name> <operator pos:line="19" pos:column="23">!=<pos:position pos:line="19" pos:column="25"/></operator> <name pos:line="19" pos:column="26">NULL<pos:position pos:line="19" pos:column="30"/></name></expr>)<pos:position pos:line="19" pos:column="31"/></condition>
      <block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="7">last<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">=<pos:position pos:line="20" pos:column="13"/></operator> <name><name pos:line="20" pos:column="14">last<pos:position pos:line="20" pos:column="18"/></name><operator pos:line="20" pos:column="18">-&gt;<pos:position pos:line="20" pos:column="23"/></operator><name pos:line="20" pos:column="20">next<pos:position pos:line="20" pos:column="24"/></name></name></expr>;<pos:position pos:line="20" pos:column="25"/></expr_stmt></block></while>

    <expr_stmt><expr><name><name pos:line="22" pos:column="5">last<pos:position pos:line="22" pos:column="9"/></name><operator pos:line="22" pos:column="9">-&gt;<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="11">next<pos:position pos:line="22" pos:column="15"/></name></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <name pos:line="22" pos:column="18">entry<pos:position pos:line="22" pos:column="23"/></name></expr>;<pos:position pos:line="22" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="23" pos:column="4"/></block></else></if>

  <return pos:line="25" pos:column="3">return <expr><operator pos:line="25" pos:column="10">(<pos:position pos:line="25" pos:column="11"/></operator><name pos:line="25" pos:column="11">entry<pos:position pos:line="25" pos:column="16"/></name><operator pos:line="25" pos:column="16">)<pos:position pos:line="25" pos:column="17"/></operator></expr>;<pos:position pos:line="25" pos:column="18"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2130_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">lcc_tracef<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">char<pos:position pos:line="1" pos:column="27"/></name> <specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">format<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><modifier pos:line="1" pos:column="43">...<pos:position pos:line="1" pos:column="46"/></modifier></type></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">va_list<pos:position pos:line="3" pos:column="10"/></name></type> <name pos:line="3" pos:column="11">ap<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <specifier pos:line="6" pos:column="8">const<pos:position pos:line="6" pos:column="13"/></specifier> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">trace<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><call><name pos:line="6" pos:column="23">getenv<pos:position pos:line="6" pos:column="29"/></name> <argument_list pos:line="6" pos:column="30">(<argument><expr><name pos:line="6" pos:column="31">LCC_TRACE_ENV<pos:position pos:line="6" pos:column="44"/></name></expr></argument>)<pos:position pos:line="6" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="46"/></decl_stmt>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><operator pos:line="7" pos:column="7">!<pos:position pos:line="7" pos:column="8"/></operator><name pos:line="7" pos:column="8">trace<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">||<pos:position pos:line="7" pos:column="16"/></operator> <operator pos:line="7" pos:column="17">(<pos:position pos:line="7" pos:column="18"/></operator><call><name pos:line="7" pos:column="18">strcmp<pos:position pos:line="7" pos:column="24"/></name> <argument_list pos:line="7" pos:column="25">(<argument><expr><literal type="string" pos:line="7" pos:column="26">""<pos:position pos:line="7" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="30">trace<pos:position pos:line="7" pos:column="35"/></name></expr></argument>)<pos:position pos:line="7" pos:column="36"/></argument_list></call> <operator pos:line="7" pos:column="37">==<pos:position pos:line="7" pos:column="39"/></operator> <literal type="number" pos:line="7" pos:column="40">0<pos:position pos:line="7" pos:column="41"/></literal><operator pos:line="7" pos:column="41">)<pos:position pos:line="7" pos:column="42"/></operator> <operator pos:line="7" pos:column="43">||<pos:position pos:line="7" pos:column="45"/></operator> <operator pos:line="7" pos:column="46">(<pos:position pos:line="7" pos:column="47"/></operator><call><name pos:line="7" pos:column="47">strcmp<pos:position pos:line="7" pos:column="53"/></name> <argument_list pos:line="7" pos:column="54">(<argument><expr><literal type="string" pos:line="7" pos:column="55">"0"<pos:position pos:line="7" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="60">trace<pos:position pos:line="7" pos:column="65"/></name></expr></argument>)<pos:position pos:line="7" pos:column="66"/></argument_list></call> <operator pos:line="7" pos:column="67">==<pos:position pos:line="7" pos:column="69"/></operator> <literal type="number" pos:line="7" pos:column="70">0<pos:position pos:line="7" pos:column="71"/></literal><operator pos:line="7" pos:column="71">)<pos:position pos:line="7" pos:column="72"/></operator></expr>)<pos:position pos:line="7" pos:column="73"/></condition><then pos:line="7" pos:column="73">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><literal type="number" pos:line="8" pos:column="12">0<pos:position pos:line="8" pos:column="13"/></literal></expr>;<pos:position pos:line="8" pos:column="14"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="10" pos:column="3">va_start<pos:position pos:line="10" pos:column="11"/></name> <argument_list pos:line="10" pos:column="12">(<argument><expr><name pos:line="10" pos:column="13">ap<pos:position pos:line="10" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="17">format<pos:position pos:line="10" pos:column="23"/></name></expr></argument>)<pos:position pos:line="10" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name pos:line="11" pos:column="3">status<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">=<pos:position pos:line="11" pos:column="11"/></operator> <call><name pos:line="11" pos:column="12">vprintf<pos:position pos:line="11" pos:column="19"/></name> <argument_list pos:line="11" pos:column="20">(<argument><expr><name pos:line="11" pos:column="21">format<pos:position pos:line="11" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="29">ap<pos:position pos:line="11" pos:column="31"/></name></expr></argument>)<pos:position pos:line="11" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">va_end<pos:position pos:line="12" pos:column="9"/></name> <argument_list pos:line="12" pos:column="10">(<argument><expr><name pos:line="12" pos:column="11">ap<pos:position pos:line="12" pos:column="13"/></name></expr></argument>)<pos:position pos:line="12" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="15"/></expr_stmt>

  <return pos:line="14" pos:column="3">return <expr><name pos:line="14" pos:column="10">status<pos:position pos:line="14" pos:column="16"/></name></expr>;<pos:position pos:line="14" pos:column="17"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_405_collectd-4.8.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">jint<pos:position pos:line="1" pos:column="12"/></name> <name pos:line="1" pos:column="13">JNICALL<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">cjni_api_register_log<pos:position pos:line="1" pos:column="42"/></name> <parameter_list pos:line="1" pos:column="43">(<parameter><decl><type><name pos:line="1" pos:column="44">JNIEnv<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">jvm_env<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="61">/* {{{ */</comment>
    <parameter><decl><type><name pos:line="2" pos:column="5">jobject<pos:position pos:line="2" pos:column="12"/></name></type> <name pos:line="2" pos:column="13">this<pos:position pos:line="2" pos:column="17"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="19">jobject<pos:position pos:line="2" pos:column="26"/></name></type> <name pos:line="2" pos:column="27">o_name<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="35">jobject<pos:position pos:line="2" pos:column="42"/></name></type> <name pos:line="2" pos:column="43">o_log<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="49"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">user_data_t<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">ud<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">cjni_callback_info_t<pos:position pos:line="5" pos:column="23"/></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">cbi<pos:position pos:line="5" pos:column="28"/></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">cbi<pos:position pos:line="7" pos:column="6"/></name> <operator pos:line="7" pos:column="7">=<pos:position pos:line="7" pos:column="8"/></operator> <call><name pos:line="7" pos:column="9">cjni_callback_info_create<pos:position pos:line="7" pos:column="34"/></name> <argument_list pos:line="7" pos:column="35">(<argument><expr><name pos:line="7" pos:column="36">jvm_env<pos:position pos:line="7" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="45">o_name<pos:position pos:line="7" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="53">o_log<pos:position pos:line="7" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="60">CB_TYPE_LOG<pos:position pos:line="7" pos:column="71"/></name></expr></argument>)<pos:position pos:line="7" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="73"/></expr_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">cbi<pos:position pos:line="8" pos:column="10"/></name> <operator pos:line="8" pos:column="11">==<pos:position pos:line="8" pos:column="13"/></operator> <name pos:line="8" pos:column="14">NULL<pos:position pos:line="8" pos:column="18"/></name></expr>)<pos:position pos:line="8" pos:column="19"/></condition><then pos:line="8" pos:column="19">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><operator pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></operator><operator pos:line="9" pos:column="13">-<pos:position pos:line="9" pos:column="14"/></operator><literal type="number" pos:line="9" pos:column="14">1<pos:position pos:line="9" pos:column="15"/></literal><operator pos:line="9" pos:column="15">)<pos:position pos:line="9" pos:column="16"/></operator></expr>;<pos:position pos:line="9" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="11" pos:column="3">DEBUG<pos:position pos:line="11" pos:column="8"/></name> <argument_list pos:line="11" pos:column="9">(<argument><expr><literal type="string" pos:line="11" pos:column="10">"java plugin: Registering new log callback: %s"<pos:position pos:line="11" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="59">cbi<pos:position pos:line="11" pos:column="62"/></name><operator pos:line="11" pos:column="62">-&gt;<pos:position pos:line="11" pos:column="67"/></operator><name pos:line="11" pos:column="64">name<pos:position pos:line="11" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="70"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="13" pos:column="3">memset<pos:position pos:line="13" pos:column="9"/></name> <argument_list pos:line="13" pos:column="10">(<argument><expr><operator pos:line="13" pos:column="11">&amp;<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="12">ud<pos:position pos:line="13" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="16">0<pos:position pos:line="13" pos:column="17"/></literal></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="19">sizeof <argument_list pos:line="13" pos:column="26">(<argument><expr><name pos:line="13" pos:column="27">ud<pos:position pos:line="13" pos:column="29"/></name></expr></argument>)<pos:position pos:line="13" pos:column="30"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="14" pos:column="3">ud<pos:position pos:line="14" pos:column="5"/></name><operator pos:line="14" pos:column="5">.<pos:position pos:line="14" pos:column="6"/></operator><name pos:line="14" pos:column="6">data<pos:position pos:line="14" pos:column="10"/></name></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <operator pos:line="14" pos:column="13">(<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">void<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">*<pos:position pos:line="14" pos:column="20"/></operator><operator pos:line="14" pos:column="20">)<pos:position pos:line="14" pos:column="21"/></operator> <name pos:line="14" pos:column="22">cbi<pos:position pos:line="14" pos:column="25"/></name></expr>;<pos:position pos:line="14" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="15" pos:column="3">ud<pos:position pos:line="15" pos:column="5"/></name><operator pos:line="15" pos:column="5">.<pos:position pos:line="15" pos:column="6"/></operator><name pos:line="15" pos:column="6">free_func<pos:position pos:line="15" pos:column="15"/></name></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <name pos:line="15" pos:column="18">cjni_callback_info_destroy<pos:position pos:line="15" pos:column="44"/></name></expr>;<pos:position pos:line="15" pos:column="45"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">plugin_register_log<pos:position pos:line="17" pos:column="22"/></name> <argument_list pos:line="17" pos:column="23">(<argument><expr><name><name pos:line="17" pos:column="24">cbi<pos:position pos:line="17" pos:column="27"/></name><operator pos:line="17" pos:column="27">-&gt;<pos:position pos:line="17" pos:column="32"/></operator><name pos:line="17" pos:column="29">name<pos:position pos:line="17" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="35">cjni_log<pos:position pos:line="17" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="45">&amp;<pos:position pos:line="17" pos:column="50"/></operator><name pos:line="17" pos:column="46">ud<pos:position pos:line="17" pos:column="48"/></name></expr></argument>)<pos:position pos:line="17" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="50"/></expr_stmt>

  <expr_stmt><expr><call><name><operator pos:line="19" pos:column="3">(<pos:position pos:line="19" pos:column="4"/></operator><operator pos:line="19" pos:column="4">*<pos:position pos:line="19" pos:column="5"/></operator><name pos:line="19" pos:column="5">jvm_env<pos:position pos:line="19" pos:column="12"/></name><operator pos:line="19" pos:column="12">)<pos:position pos:line="19" pos:column="13"/></operator><operator pos:line="19" pos:column="13">-&gt;<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="15">DeleteLocalRef<pos:position pos:line="19" pos:column="29"/></name></name> <argument_list pos:line="19" pos:column="30">(<argument><expr><name pos:line="19" pos:column="31">jvm_env<pos:position pos:line="19" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="40">o_log<pos:position pos:line="19" pos:column="45"/></name></expr></argument>)<pos:position pos:line="19" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="47"/></expr_stmt>

  <return pos:line="21" pos:column="3">return <expr><operator pos:line="21" pos:column="10">(<pos:position pos:line="21" pos:column="11"/></operator><literal type="number" pos:line="21" pos:column="11">0<pos:position pos:line="21" pos:column="12"/></literal><operator pos:line="21" pos:column="12">)<pos:position pos:line="21" pos:column="13"/></operator></expr>;<pos:position pos:line="21" pos:column="14"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

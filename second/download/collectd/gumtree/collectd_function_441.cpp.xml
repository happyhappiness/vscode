<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_function_441.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">cmd_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">cmd_handle_flush<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">FILE<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">fh<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">char<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">buffer<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list> <block pos:line="1" pos:column="55">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">cmd_error_handler_t<pos:position pos:line="2" pos:column="22"/></name></type> <name pos:line="2" pos:column="23">err<pos:position pos:line="2" pos:column="26"/></name> <init pos:line="2" pos:column="27">= <expr><block pos:line="2" pos:column="29">{<expr><name pos:line="2" pos:column="30">cmd_error_fh<pos:position pos:line="2" pos:column="42"/></name></expr>, <expr><name pos:line="2" pos:column="44">fh<pos:position pos:line="2" pos:column="46"/></name></expr>}<pos:position pos:line="2" pos:column="47"/></block></expr></init></decl>;<pos:position pos:line="2" pos:column="48"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">cmd_t<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">cmd<pos:position pos:line="3" pos:column="12"/></name></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">success<pos:position pos:line="5" pos:column="14"/></name> <init pos:line="5" pos:column="15">= <expr><literal type="number" pos:line="5" pos:column="17">0<pos:position pos:line="5" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">error<pos:position pos:line="6" pos:column="12"/></name> <init pos:line="6" pos:column="13">= <expr><literal type="number" pos:line="6" pos:column="15">0<pos:position pos:line="6" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">status<pos:position pos:line="7" pos:column="13"/></name></decl>;<pos:position pos:line="7" pos:column="14"/></decl_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">(<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">fh<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">==<pos:position pos:line="9" pos:column="13"/></operator> <name pos:line="9" pos:column="14">NULL<pos:position pos:line="9" pos:column="18"/></name><operator pos:line="9" pos:column="18">)<pos:position pos:line="9" pos:column="19"/></operator> <operator pos:line="9" pos:column="20">||<pos:position pos:line="9" pos:column="22"/></operator> <operator pos:line="9" pos:column="23">(<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="24">buffer<pos:position pos:line="9" pos:column="30"/></name> <operator pos:line="9" pos:column="31">==<pos:position pos:line="9" pos:column="33"/></operator> <name pos:line="9" pos:column="34">NULL<pos:position pos:line="9" pos:column="38"/></name><operator pos:line="9" pos:column="38">)<pos:position pos:line="9" pos:column="39"/></operator></expr>)<pos:position pos:line="9" pos:column="40"/></condition><then pos:line="9" pos:column="40">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">(<pos:position pos:line="10" pos:column="13"/></operator><operator pos:line="10" pos:column="13">-<pos:position pos:line="10" pos:column="14"/></operator><literal type="number" pos:line="10" pos:column="14">1<pos:position pos:line="10" pos:column="15"/></literal><operator pos:line="10" pos:column="15">)<pos:position pos:line="10" pos:column="16"/></operator></expr>;<pos:position pos:line="10" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="12" pos:column="3">DEBUG<pos:position pos:line="12" pos:column="8"/></name><argument_list pos:line="12" pos:column="8">(<argument><expr><literal type="string" pos:line="12" pos:column="9">"utils_cmd_flush: cmd_handle_flush (fh = %p, buffer = %s);"<pos:position pos:line="12" pos:column="68"/></literal></expr></argument>, <argument><expr><operator pos:line="12" pos:column="70">(<pos:position pos:line="12" pos:column="71"/></operator><name pos:line="12" pos:column="71">void<pos:position pos:line="12" pos:column="75"/></name> <operator pos:line="12" pos:column="76">*<pos:position pos:line="12" pos:column="77"/></operator><operator pos:line="12" pos:column="77">)<pos:position pos:line="12" pos:column="78"/></operator><name pos:line="12" pos:column="78">fh<pos:position pos:line="12" pos:column="80"/></name></expr></argument>,
        <argument><expr><name pos:line="13" pos:column="9">buffer<pos:position pos:line="13" pos:column="15"/></name></expr></argument>)<pos:position pos:line="13" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="17"/></expr_stmt>

  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><operator pos:line="15" pos:column="7">(<pos:position pos:line="15" pos:column="8"/></operator><name pos:line="15" pos:column="8">status<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">=<pos:position pos:line="15" pos:column="16"/></operator> <call><name pos:line="15" pos:column="17">cmd_parse<pos:position pos:line="15" pos:column="26"/></name><argument_list pos:line="15" pos:column="26">(<argument><expr><name pos:line="15" pos:column="27">buffer<pos:position pos:line="15" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="35">&amp;<pos:position pos:line="15" pos:column="40"/></operator><name pos:line="15" pos:column="36">cmd<pos:position pos:line="15" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="41">NULL<pos:position pos:line="15" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="47">&amp;<pos:position pos:line="15" pos:column="52"/></operator><name pos:line="15" pos:column="48">err<pos:position pos:line="15" pos:column="51"/></name></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></call><operator pos:line="15" pos:column="52">)<pos:position pos:line="15" pos:column="53"/></operator> <operator pos:line="15" pos:column="54">!=<pos:position pos:line="15" pos:column="56"/></operator> <name pos:line="15" pos:column="57">CMD_OK<pos:position pos:line="15" pos:column="63"/></name></expr>)<pos:position pos:line="15" pos:column="64"/></condition><then pos:line="15" pos:column="64">
    <block type="pseudo"><return pos:line="16" pos:column="5">return <expr><operator pos:line="16" pos:column="12">(<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="13">status<pos:position pos:line="16" pos:column="19"/></name><operator pos:line="16" pos:column="19">)<pos:position pos:line="16" pos:column="20"/></operator></expr>;<pos:position pos:line="16" pos:column="21"/></return></block></then></if>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name><name pos:line="17" pos:column="7">cmd<pos:position pos:line="17" pos:column="10"/></name><operator pos:line="17" pos:column="10">.<pos:position pos:line="17" pos:column="11"/></operator><name pos:line="17" pos:column="11">type<pos:position pos:line="17" pos:column="15"/></name></name> <operator pos:line="17" pos:column="16">!=<pos:position pos:line="17" pos:column="18"/></operator> <name pos:line="17" pos:column="19">CMD_FLUSH<pos:position pos:line="17" pos:column="28"/></name></expr>)<pos:position pos:line="17" pos:column="29"/></condition><then pos:line="17" pos:column="29"> <block pos:line="17" pos:column="30">{
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">cmd_error<pos:position pos:line="18" pos:column="14"/></name><argument_list pos:line="18" pos:column="14">(<argument><expr><name pos:line="18" pos:column="15">CMD_UNKNOWN_COMMAND<pos:position pos:line="18" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="36">&amp;<pos:position pos:line="18" pos:column="41"/></operator><name pos:line="18" pos:column="37">err<pos:position pos:line="18" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="42">"Unexpected command: `%s'."<pos:position pos:line="18" pos:column="69"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="19" pos:column="15">CMD_TO_STRING<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><name><name pos:line="19" pos:column="29">cmd<pos:position pos:line="19" pos:column="32"/></name><operator pos:line="19" pos:column="32">.<pos:position pos:line="19" pos:column="33"/></operator><name pos:line="19" pos:column="33">type<pos:position pos:line="19" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">cmd_destroy<pos:position pos:line="20" pos:column="16"/></name><argument_list pos:line="20" pos:column="16">(<argument><expr><operator pos:line="20" pos:column="17">&amp;<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="18">cmd<pos:position pos:line="20" pos:column="21"/></name></expr></argument>)<pos:position pos:line="20" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="23"/></expr_stmt>
    <return pos:line="21" pos:column="5">return <expr><operator pos:line="21" pos:column="12">(<pos:position pos:line="21" pos:column="13"/></operator><name pos:line="21" pos:column="13">CMD_UNKNOWN_COMMAND<pos:position pos:line="21" pos:column="32"/></name><operator pos:line="21" pos:column="32">)<pos:position pos:line="21" pos:column="33"/></operator></expr>;<pos:position pos:line="21" pos:column="34"/></return>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>

  <for pos:line="24" pos:column="3">for <control pos:line="24" pos:column="7">(<init><decl><type><name pos:line="24" pos:column="8">size_t<pos:position pos:line="24" pos:column="14"/></name></type> <name pos:line="24" pos:column="15">i<pos:position pos:line="24" pos:column="16"/></name> <init pos:line="24" pos:column="17">= <expr><literal type="number" pos:line="24" pos:column="19">0<pos:position pos:line="24" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="24" pos:column="21"/></init> <condition><expr><operator pos:line="24" pos:column="22">(<pos:position pos:line="24" pos:column="23"/></operator><name pos:line="24" pos:column="23">i<pos:position pos:line="24" pos:column="24"/></name> <operator pos:line="24" pos:column="25">==<pos:position pos:line="24" pos:column="27"/></operator> <literal type="number" pos:line="24" pos:column="28">0<pos:position pos:line="24" pos:column="29"/></literal><operator pos:line="24" pos:column="29">)<pos:position pos:line="24" pos:column="30"/></operator> <operator pos:line="24" pos:column="31">||<pos:position pos:line="24" pos:column="33"/></operator> <operator pos:line="24" pos:column="34">(<pos:position pos:line="24" pos:column="35"/></operator><name pos:line="24" pos:column="35">i<pos:position pos:line="24" pos:column="36"/></name> <operator pos:line="24" pos:column="37">&lt;<pos:position pos:line="24" pos:column="41"/></operator> <name><name pos:line="24" pos:column="39">cmd<pos:position pos:line="24" pos:column="42"/></name><operator pos:line="24" pos:column="42">.<pos:position pos:line="24" pos:column="43"/></operator><name pos:line="24" pos:column="43">cmd<pos:position pos:line="24" pos:column="46"/></name><operator pos:line="24" pos:column="46">.<pos:position pos:line="24" pos:column="47"/></operator><name pos:line="24" pos:column="47">flush<pos:position pos:line="24" pos:column="52"/></name><operator pos:line="24" pos:column="52">.<pos:position pos:line="24" pos:column="53"/></operator><name pos:line="24" pos:column="53">plugins_num<pos:position pos:line="24" pos:column="64"/></name></name><operator pos:line="24" pos:column="64">)<pos:position pos:line="24" pos:column="65"/></operator></expr>;<pos:position pos:line="24" pos:column="66"/></condition> <incr><expr><name pos:line="24" pos:column="67">i<pos:position pos:line="24" pos:column="68"/></name><operator pos:line="24" pos:column="68">++<pos:position pos:line="24" pos:column="70"/></operator></expr></incr>)<pos:position pos:line="24" pos:column="71"/></control> <block pos:line="24" pos:column="72">{
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">char<pos:position pos:line="25" pos:column="9"/></name> <modifier pos:line="25" pos:column="10">*<pos:position pos:line="25" pos:column="11"/></modifier></type><name pos:line="25" pos:column="11">plugin<pos:position pos:line="25" pos:column="17"/></name> <init pos:line="25" pos:column="18">= <expr><name pos:line="25" pos:column="20">NULL<pos:position pos:line="25" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="25" pos:column="25"/></decl_stmt>

    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name><name pos:line="27" pos:column="9">cmd<pos:position pos:line="27" pos:column="12"/></name><operator pos:line="27" pos:column="12">.<pos:position pos:line="27" pos:column="13"/></operator><name pos:line="27" pos:column="13">cmd<pos:position pos:line="27" pos:column="16"/></name><operator pos:line="27" pos:column="16">.<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="17">flush<pos:position pos:line="27" pos:column="22"/></name><operator pos:line="27" pos:column="22">.<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="23">plugins_num<pos:position pos:line="27" pos:column="34"/></name></name> <operator pos:line="27" pos:column="35">!=<pos:position pos:line="27" pos:column="37"/></operator> <literal type="number" pos:line="27" pos:column="38">0<pos:position pos:line="27" pos:column="39"/></literal></expr>)<pos:position pos:line="27" pos:column="40"/></condition><then pos:line="27" pos:column="40">
      <block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="7">plugin<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">=<pos:position pos:line="28" pos:column="15"/></operator> <name><name pos:line="28" pos:column="16">cmd<pos:position pos:line="28" pos:column="19"/></name><operator pos:line="28" pos:column="19">.<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="20">cmd<pos:position pos:line="28" pos:column="23"/></name><operator pos:line="28" pos:column="23">.<pos:position pos:line="28" pos:column="24"/></operator><name pos:line="28" pos:column="24">flush<pos:position pos:line="28" pos:column="29"/></name><operator pos:line="28" pos:column="29">.<pos:position pos:line="28" pos:column="30"/></operator><name pos:line="28" pos:column="30">plugins<pos:position pos:line="28" pos:column="37"/></name><index pos:line="28" pos:column="37">[<expr><name pos:line="28" pos:column="38">i<pos:position pos:line="28" pos:column="39"/></name></expr>]<pos:position pos:line="28" pos:column="40"/></index></name></expr>;<pos:position pos:line="28" pos:column="41"/></expr_stmt></block></then></if>

    <for pos:line="30" pos:column="5">for <control pos:line="30" pos:column="9">(<init><decl><type><name pos:line="30" pos:column="10">size_t<pos:position pos:line="30" pos:column="16"/></name></type> <name pos:line="30" pos:column="17">j<pos:position pos:line="30" pos:column="18"/></name> <init pos:line="30" pos:column="19">= <expr><literal type="number" pos:line="30" pos:column="21">0<pos:position pos:line="30" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="30" pos:column="23"/></init> <condition><expr><operator pos:line="30" pos:column="24">(<pos:position pos:line="30" pos:column="25"/></operator><name pos:line="30" pos:column="25">j<pos:position pos:line="30" pos:column="26"/></name> <operator pos:line="30" pos:column="27">==<pos:position pos:line="30" pos:column="29"/></operator> <literal type="number" pos:line="30" pos:column="30">0<pos:position pos:line="30" pos:column="31"/></literal><operator pos:line="30" pos:column="31">)<pos:position pos:line="30" pos:column="32"/></operator> <operator pos:line="30" pos:column="33">||<pos:position pos:line="30" pos:column="35"/></operator> <operator pos:line="30" pos:column="36">(<pos:position pos:line="30" pos:column="37"/></operator><name pos:line="30" pos:column="37">j<pos:position pos:line="30" pos:column="38"/></name> <operator pos:line="30" pos:column="39">&lt;<pos:position pos:line="30" pos:column="43"/></operator> <name><name pos:line="30" pos:column="41">cmd<pos:position pos:line="30" pos:column="44"/></name><operator pos:line="30" pos:column="44">.<pos:position pos:line="30" pos:column="45"/></operator><name pos:line="30" pos:column="45">cmd<pos:position pos:line="30" pos:column="48"/></name><operator pos:line="30" pos:column="48">.<pos:position pos:line="30" pos:column="49"/></operator><name pos:line="30" pos:column="49">flush<pos:position pos:line="30" pos:column="54"/></name><operator pos:line="30" pos:column="54">.<pos:position pos:line="30" pos:column="55"/></operator><name pos:line="30" pos:column="55">identifiers_num<pos:position pos:line="30" pos:column="70"/></name></name><operator pos:line="30" pos:column="70">)<pos:position pos:line="30" pos:column="71"/></operator></expr>;<pos:position pos:line="30" pos:column="72"/></condition> <incr><expr><name pos:line="30" pos:column="73">j<pos:position pos:line="30" pos:column="74"/></name><operator pos:line="30" pos:column="74">++<pos:position pos:line="30" pos:column="76"/></operator></expr></incr>)<pos:position pos:line="30" pos:column="77"/></control> <block pos:line="30" pos:column="78">{
      <decl_stmt><decl><type><name pos:line="31" pos:column="7">char<pos:position pos:line="31" pos:column="11"/></name> <modifier pos:line="31" pos:column="12">*<pos:position pos:line="31" pos:column="13"/></modifier></type><name pos:line="31" pos:column="13">identifier<pos:position pos:line="31" pos:column="23"/></name> <init pos:line="31" pos:column="24">= <expr><name pos:line="31" pos:column="26">NULL<pos:position pos:line="31" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="31" pos:column="31"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="32" pos:column="7">char<pos:position pos:line="32" pos:column="11"/></name></type> <name><name pos:line="32" pos:column="12">buffer<pos:position pos:line="32" pos:column="18"/></name><index pos:line="32" pos:column="18">[<expr><literal type="number" pos:line="32" pos:column="19">1024<pos:position pos:line="32" pos:column="23"/></literal></expr>]<pos:position pos:line="32" pos:column="24"/></index></name></decl>;<pos:position pos:line="32" pos:column="25"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="33" pos:column="7">int<pos:position pos:line="33" pos:column="10"/></name></type> <name pos:line="33" pos:column="11">status<pos:position pos:line="33" pos:column="17"/></name></decl>;<pos:position pos:line="33" pos:column="18"/></decl_stmt>

      <if pos:line="35" pos:column="7">if <condition pos:line="35" pos:column="10">(<expr><name><name pos:line="35" pos:column="11">cmd<pos:position pos:line="35" pos:column="14"/></name><operator pos:line="35" pos:column="14">.<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="15">cmd<pos:position pos:line="35" pos:column="18"/></name><operator pos:line="35" pos:column="18">.<pos:position pos:line="35" pos:column="19"/></operator><name pos:line="35" pos:column="19">flush<pos:position pos:line="35" pos:column="24"/></name><operator pos:line="35" pos:column="24">.<pos:position pos:line="35" pos:column="25"/></operator><name pos:line="35" pos:column="25">identifiers_num<pos:position pos:line="35" pos:column="40"/></name></name> <operator pos:line="35" pos:column="41">!=<pos:position pos:line="35" pos:column="43"/></operator> <literal type="number" pos:line="35" pos:column="44">0<pos:position pos:line="35" pos:column="45"/></literal></expr>)<pos:position pos:line="35" pos:column="46"/></condition><then pos:line="35" pos:column="46"> <block pos:line="35" pos:column="47">{
        <decl_stmt><decl><type><name pos:line="36" pos:column="9">identifier_t<pos:position pos:line="36" pos:column="21"/></name> <modifier pos:line="36" pos:column="22">*<pos:position pos:line="36" pos:column="23"/></modifier></type><name pos:line="36" pos:column="23">id<pos:position pos:line="36" pos:column="25"/></name> <init pos:line="36" pos:column="26">= <expr><name><name pos:line="36" pos:column="28">cmd<pos:position pos:line="36" pos:column="31"/></name><operator pos:line="36" pos:column="31">.<pos:position pos:line="36" pos:column="32"/></operator><name pos:line="36" pos:column="32">cmd<pos:position pos:line="36" pos:column="35"/></name><operator pos:line="36" pos:column="35">.<pos:position pos:line="36" pos:column="36"/></operator><name pos:line="36" pos:column="36">flush<pos:position pos:line="36" pos:column="41"/></name><operator pos:line="36" pos:column="41">.<pos:position pos:line="36" pos:column="42"/></operator><name pos:line="36" pos:column="42">identifiers<pos:position pos:line="36" pos:column="53"/></name></name> <operator pos:line="36" pos:column="54">+<pos:position pos:line="36" pos:column="55"/></operator> <name pos:line="36" pos:column="56">j<pos:position pos:line="36" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="36" pos:column="58"/></decl_stmt>
        <if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><call><name pos:line="37" pos:column="13">format_name<pos:position pos:line="37" pos:column="24"/></name><argument_list pos:line="37" pos:column="24">(<argument><expr><name pos:line="37" pos:column="25">buffer<pos:position pos:line="37" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="37" pos:column="33">sizeof<argument_list pos:line="37" pos:column="39">(<argument><expr><name pos:line="37" pos:column="40">buffer<pos:position pos:line="37" pos:column="46"/></name></expr></argument>)<pos:position pos:line="37" pos:column="47"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="49">id<pos:position pos:line="37" pos:column="51"/></name><operator pos:line="37" pos:column="51">-&gt;<pos:position pos:line="37" pos:column="56"/></operator><name pos:line="37" pos:column="53">host<pos:position pos:line="37" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="59">id<pos:position pos:line="37" pos:column="61"/></name><operator pos:line="37" pos:column="61">-&gt;<pos:position pos:line="37" pos:column="66"/></operator><name pos:line="37" pos:column="63">plugin<pos:position pos:line="37" pos:column="69"/></name></name></expr></argument>,
                        <argument><expr><name><name pos:line="38" pos:column="25">id<pos:position pos:line="38" pos:column="27"/></name><operator pos:line="38" pos:column="27">-&gt;<pos:position pos:line="38" pos:column="32"/></operator><name pos:line="38" pos:column="29">plugin_instance<pos:position pos:line="38" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="46">id<pos:position pos:line="38" pos:column="48"/></name><operator pos:line="38" pos:column="48">-&gt;<pos:position pos:line="38" pos:column="53"/></operator><name pos:line="38" pos:column="50">type<pos:position pos:line="38" pos:column="54"/></name></name></expr></argument>,
                        <argument><expr><name><name pos:line="39" pos:column="25">id<pos:position pos:line="39" pos:column="27"/></name><operator pos:line="39" pos:column="27">-&gt;<pos:position pos:line="39" pos:column="32"/></operator><name pos:line="39" pos:column="29">type_instance<pos:position pos:line="39" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="43"/></argument_list></call> <operator pos:line="39" pos:column="44">!=<pos:position pos:line="39" pos:column="46"/></operator> <literal type="number" pos:line="39" pos:column="47">0<pos:position pos:line="39" pos:column="48"/></literal></expr>)<pos:position pos:line="39" pos:column="49"/></condition><then pos:line="39" pos:column="49"> <block pos:line="39" pos:column="50">{
          <expr_stmt><expr><name pos:line="40" pos:column="11">error<pos:position pos:line="40" pos:column="16"/></name><operator pos:line="40" pos:column="16">++<pos:position pos:line="40" pos:column="18"/></operator></expr>;<pos:position pos:line="40" pos:column="19"/></expr_stmt>
          <continue pos:line="41" pos:column="11">continue;<pos:position pos:line="41" pos:column="20"/></continue>
        }<pos:position pos:line="42" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="43" pos:column="9">identifier<pos:position pos:line="43" pos:column="19"/></name> <operator pos:line="43" pos:column="20">=<pos:position pos:line="43" pos:column="21"/></operator> <name pos:line="43" pos:column="22">buffer<pos:position pos:line="43" pos:column="28"/></name></expr>;<pos:position pos:line="43" pos:column="29"/></expr_stmt>
      }<pos:position pos:line="44" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name pos:line="46" pos:column="7">status<pos:position pos:line="46" pos:column="13"/></name> <operator pos:line="46" pos:column="14">=<pos:position pos:line="46" pos:column="15"/></operator> <call><name pos:line="46" pos:column="16">plugin_flush<pos:position pos:line="46" pos:column="28"/></name><argument_list pos:line="46" pos:column="28">(<argument><expr><name pos:line="46" pos:column="29">plugin<pos:position pos:line="46" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="46" pos:column="37">DOUBLE_TO_CDTIME_T<pos:position pos:line="46" pos:column="55"/></name><argument_list pos:line="46" pos:column="55">(<argument><expr><name><name pos:line="46" pos:column="56">cmd<pos:position pos:line="46" pos:column="59"/></name><operator pos:line="46" pos:column="59">.<pos:position pos:line="46" pos:column="60"/></operator><name pos:line="46" pos:column="60">cmd<pos:position pos:line="46" pos:column="63"/></name><operator pos:line="46" pos:column="63">.<pos:position pos:line="46" pos:column="64"/></operator><name pos:line="46" pos:column="64">flush<pos:position pos:line="46" pos:column="69"/></name><operator pos:line="46" pos:column="69">.<pos:position pos:line="46" pos:column="70"/></operator><name pos:line="46" pos:column="70">timeout<pos:position pos:line="46" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="78"/></argument_list></call></expr></argument>,
                            <argument><expr><name pos:line="47" pos:column="29">identifier<pos:position pos:line="47" pos:column="39"/></name></expr></argument>)<pos:position pos:line="47" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="41"/></expr_stmt>
      <if pos:line="48" pos:column="7">if <condition pos:line="48" pos:column="10">(<expr><name pos:line="48" pos:column="11">status<pos:position pos:line="48" pos:column="17"/></name> <operator pos:line="48" pos:column="18">==<pos:position pos:line="48" pos:column="20"/></operator> <literal type="number" pos:line="48" pos:column="21">0<pos:position pos:line="48" pos:column="22"/></literal></expr>)<pos:position pos:line="48" pos:column="23"/></condition><then pos:line="48" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><name pos:line="49" pos:column="9">success<pos:position pos:line="49" pos:column="16"/></name><operator pos:line="49" pos:column="16">++<pos:position pos:line="49" pos:column="18"/></operator></expr>;<pos:position pos:line="49" pos:column="19"/></expr_stmt></block></then>
      <else pos:line="50" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="9">error<pos:position pos:line="51" pos:column="14"/></name><operator pos:line="51" pos:column="14">++<pos:position pos:line="51" pos:column="16"/></operator></expr>;<pos:position pos:line="51" pos:column="17"/></expr_stmt></block></else></if>
    }<pos:position pos:line="52" pos:column="6"/></block></for>
  }<pos:position pos:line="53" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="55" pos:column="3">cmd_error<pos:position pos:line="55" pos:column="12"/></name><argument_list pos:line="55" pos:column="12">(<argument><expr><name pos:line="55" pos:column="13">CMD_OK<pos:position pos:line="55" pos:column="19"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="21">&amp;<pos:position pos:line="55" pos:column="26"/></operator><name pos:line="55" pos:column="22">err<pos:position pos:line="55" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="27">"Done: %i successful, %i errors"<pos:position pos:line="55" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="61">success<pos:position pos:line="55" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="70">error<pos:position pos:line="55" pos:column="75"/></name></expr></argument>)<pos:position pos:line="55" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="77"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="57" pos:column="3">cmd_destroy<pos:position pos:line="57" pos:column="14"/></name><argument_list pos:line="57" pos:column="14">(<argument><expr><operator pos:line="57" pos:column="15">&amp;<pos:position pos:line="57" pos:column="20"/></operator><name pos:line="57" pos:column="16">cmd<pos:position pos:line="57" pos:column="19"/></name></expr></argument>)<pos:position pos:line="57" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="21"/></expr_stmt>
  <return pos:line="58" pos:column="3">return <expr><operator pos:line="58" pos:column="10">(<pos:position pos:line="58" pos:column="11"/></operator><literal type="number" pos:line="58" pos:column="11">0<pos:position pos:line="58" pos:column="12"/></literal><operator pos:line="58" pos:column="12">)<pos:position pos:line="58" pos:column="13"/></operator></expr>;<pos:position pos:line="58" pos:column="14"/></return>
<cpp:undef pos:line="59" pos:column="1">#<cpp:directive pos:line="59" pos:column="2">undef<pos:position pos:line="59" pos:column="7"/></cpp:directive> <name pos:line="59" pos:column="8">PRINT_TO_SOCK<pos:position pos:line="59" pos:column="21"/></name></cpp:undef>
}<pos:position pos:line="60" pos:column="2"/></block></function></unit>

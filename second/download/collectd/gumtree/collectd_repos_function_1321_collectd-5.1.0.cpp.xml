<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1321_collectd-5.1.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">oconfig_item_t<pos:position pos:line="1" pos:column="22"/></name> <modifier pos:line="1" pos:column="23">*<pos:position pos:line="1" pos:column="24"/></modifier></type><name pos:line="1" pos:column="24">cf_read_generic<pos:position pos:line="1" pos:column="39"/></name> <parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">path<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">int<pos:position pos:line="1" pos:column="62"/></name></type> <name pos:line="1" pos:column="63">depth<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">stat<pos:position pos:line="3" pos:column="20"/></name></name></type> <name pos:line="3" pos:column="21">statbuf<pos:position pos:line="3" pos:column="28"/></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">status<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">depth<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">&gt;=<pos:position pos:line="6" pos:column="24"/></operator> <name pos:line="6" pos:column="22">CF_MAX_DEPTH<pos:position pos:line="6" pos:column="34"/></name></expr>)<pos:position pos:line="6" pos:column="35"/></condition><then pos:line="6" pos:column="35">
	<block pos:line="7" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">ERROR<pos:position pos:line="8" pos:column="22"/></name> <argument_list pos:line="8" pos:column="23">(<argument><expr><literal type="string" pos:line="8" pos:column="24">"configfile: Not including `%s' because the maximum "<pos:position pos:line="8" pos:column="77"/></literal>
				<literal type="string" pos:line="9" pos:column="33">"nesting depth has been reached."<pos:position pos:line="9" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="68">path<pos:position pos:line="9" pos:column="72"/></name></expr></argument>)<pos:position pos:line="9" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="74"/></expr_stmt>
		<return pos:line="10" pos:column="17">return <expr><operator pos:line="10" pos:column="24">(<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">NULL<pos:position pos:line="10" pos:column="29"/></name><operator pos:line="10" pos:column="29">)<pos:position pos:line="10" pos:column="30"/></operator></expr>;<pos:position pos:line="10" pos:column="31"/></return>
	}<pos:position pos:line="11" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="13" pos:column="9">status<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <call><name pos:line="13" pos:column="18">stat<pos:position pos:line="13" pos:column="22"/></name> <argument_list pos:line="13" pos:column="23">(<argument><expr><name pos:line="13" pos:column="24">path<pos:position pos:line="13" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="30">&amp;<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="31">statbuf<pos:position pos:line="13" pos:column="38"/></name></expr></argument>)<pos:position pos:line="13" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="40"/></expr_stmt>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">status<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">!=<pos:position pos:line="14" pos:column="22"/></operator> <literal type="number" pos:line="14" pos:column="23">0<pos:position pos:line="14" pos:column="24"/></literal></expr>)<pos:position pos:line="14" pos:column="25"/></condition><then pos:line="14" pos:column="25">
	<block pos:line="15" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="16" pos:column="17">char<pos:position pos:line="16" pos:column="21"/></name></type> <name><name pos:line="16" pos:column="22">errbuf<pos:position pos:line="16" pos:column="28"/></name><index pos:line="16" pos:column="28">[<expr><literal type="number" pos:line="16" pos:column="29">1024<pos:position pos:line="16" pos:column="33"/></literal></expr>]<pos:position pos:line="16" pos:column="34"/></index></name></decl>;<pos:position pos:line="16" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">ERROR<pos:position pos:line="17" pos:column="22"/></name> <argument_list pos:line="17" pos:column="23">(<argument><expr><literal type="string" pos:line="17" pos:column="24">"configfile: stat (%s) failed: %s"<pos:position pos:line="17" pos:column="58"/></literal></expr></argument>,
				<argument><expr><name pos:line="18" pos:column="33">path<pos:position pos:line="18" pos:column="37"/></name></expr></argument>,
				<argument><expr><call><name pos:line="19" pos:column="33">sstrerror<pos:position pos:line="19" pos:column="42"/></name> <argument_list pos:line="19" pos:column="43">(<argument><expr><name pos:line="19" pos:column="44">errno<pos:position pos:line="19" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="51">errbuf<pos:position pos:line="19" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="59">sizeof <argument_list pos:line="19" pos:column="66">(<argument><expr><name pos:line="19" pos:column="67">errbuf<pos:position pos:line="19" pos:column="73"/></name></expr></argument>)<pos:position pos:line="19" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="77"/></expr_stmt>
		<return pos:line="20" pos:column="17">return <expr><operator pos:line="20" pos:column="24">(<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="25">NULL<pos:position pos:line="20" pos:column="29"/></name><operator pos:line="20" pos:column="29">)<pos:position pos:line="20" pos:column="30"/></operator></expr>;<pos:position pos:line="20" pos:column="31"/></return>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>

	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><call><name pos:line="23" pos:column="13">S_ISREG<pos:position pos:line="23" pos:column="20"/></name> <argument_list pos:line="23" pos:column="21">(<argument><expr><name><name pos:line="23" pos:column="22">statbuf<pos:position pos:line="23" pos:column="29"/></name><operator pos:line="23" pos:column="29">.<pos:position pos:line="23" pos:column="30"/></operator><name pos:line="23" pos:column="30">st_mode<pos:position pos:line="23" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="39"/></condition><then pos:line="23" pos:column="39">
		<block type="pseudo"><return pos:line="24" pos:column="17">return <expr><operator pos:line="24" pos:column="24">(<pos:position pos:line="24" pos:column="25"/></operator><call><name pos:line="24" pos:column="25">cf_read_file<pos:position pos:line="24" pos:column="37"/></name> <argument_list pos:line="24" pos:column="38">(<argument><expr><name pos:line="24" pos:column="39">path<pos:position pos:line="24" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="45">depth<pos:position pos:line="24" pos:column="50"/></name></expr></argument>)<pos:position pos:line="24" pos:column="51"/></argument_list></call><operator pos:line="24" pos:column="51">)<pos:position pos:line="24" pos:column="52"/></operator></expr>;<pos:position pos:line="24" pos:column="53"/></return></block></then>
	<elseif pos:line="25" pos:column="9">else <if pos:line="25" pos:column="14">if <condition pos:line="25" pos:column="17">(<expr><call><name pos:line="25" pos:column="18">S_ISDIR<pos:position pos:line="25" pos:column="25"/></name> <argument_list pos:line="25" pos:column="26">(<argument><expr><name><name pos:line="25" pos:column="27">statbuf<pos:position pos:line="25" pos:column="34"/></name><operator pos:line="25" pos:column="34">.<pos:position pos:line="25" pos:column="35"/></operator><name pos:line="25" pos:column="35">st_mode<pos:position pos:line="25" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="44"/></condition><then pos:line="25" pos:column="44">
		<block type="pseudo"><return pos:line="26" pos:column="17">return <expr><operator pos:line="26" pos:column="24">(<pos:position pos:line="26" pos:column="25"/></operator><call><name pos:line="26" pos:column="25">cf_read_dir<pos:position pos:line="26" pos:column="36"/></name> <argument_list pos:line="26" pos:column="37">(<argument><expr><name pos:line="26" pos:column="38">path<pos:position pos:line="26" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="44">depth<pos:position pos:line="26" pos:column="49"/></name></expr></argument>)<pos:position pos:line="26" pos:column="50"/></argument_list></call><operator pos:line="26" pos:column="50">)<pos:position pos:line="26" pos:column="51"/></operator></expr>;<pos:position pos:line="26" pos:column="52"/></return></block></then></if></elseif></if>

	<expr_stmt><expr><call><name pos:line="28" pos:column="9">ERROR<pos:position pos:line="28" pos:column="14"/></name> <argument_list pos:line="28" pos:column="15">(<argument><expr><literal type="string" pos:line="28" pos:column="16">"configfile: %s is neither a file nor a directory."<pos:position pos:line="28" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="69">path<pos:position pos:line="28" pos:column="73"/></name></expr></argument>)<pos:position pos:line="28" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="75"/></expr_stmt>
	<return pos:line="29" pos:column="9">return <expr><operator pos:line="29" pos:column="16">(<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="17">NULL<pos:position pos:line="29" pos:column="21"/></name><operator pos:line="29" pos:column="21">)<pos:position pos:line="29" pos:column="22"/></operator></expr>;<pos:position pos:line="29" pos:column="23"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

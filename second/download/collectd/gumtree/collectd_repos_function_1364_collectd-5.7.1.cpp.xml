<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1364_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cldap_read_host<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">user_data_t<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">ud<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list> <comment type="block" pos:line="1" pos:column="45">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">cldap_t<pos:position pos:line="3" pos:column="10"/></name> <modifier pos:line="3" pos:column="11">*<pos:position pos:line="3" pos:column="12"/></modifier></type><name pos:line="3" pos:column="12">st<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">LDAPMessage<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">result<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">dn<pos:position pos:line="5" pos:column="11"/></name></decl>;<pos:position pos:line="5" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">rc<pos:position pos:line="6" pos:column="9"/></name></decl>;<pos:position pos:line="6" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">status<pos:position pos:line="7" pos:column="13"/></name></decl>;<pos:position pos:line="7" pos:column="14"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name><name pos:line="9" pos:column="9">attrs<pos:position pos:line="9" pos:column="14"/></name><index pos:line="9" pos:column="14">[<expr><literal type="number" pos:line="9" pos:column="15">9<pos:position pos:line="9" pos:column="16"/></literal></expr>]<pos:position pos:line="9" pos:column="17"/></index></name> <init pos:line="9" pos:column="18">= <expr><block pos:line="9" pos:column="20">{
      <expr><literal type="string" pos:line="10" pos:column="7">"monitorCounter"<pos:position pos:line="10" pos:column="23"/></literal></expr>, <expr><literal type="string" pos:line="10" pos:column="25">"monitorOpCompleted"<pos:position pos:line="10" pos:column="45"/></literal></expr>, <expr><literal type="string" pos:line="10" pos:column="47">"monitorOpInitiated"<pos:position pos:line="10" pos:column="67"/></literal></expr>,
      <expr><literal type="string" pos:line="11" pos:column="7">"monitoredInfo"<pos:position pos:line="11" pos:column="22"/></literal></expr>,  <expr><literal type="string" pos:line="11" pos:column="25">"olmBDBEntryCache"<pos:position pos:line="11" pos:column="43"/></literal></expr>,   <expr><literal type="string" pos:line="11" pos:column="47">"olmBDBDNCache"<pos:position pos:line="11" pos:column="62"/></literal></expr>,
      <expr><literal type="string" pos:line="12" pos:column="7">"olmBDBIDLCache"<pos:position pos:line="12" pos:column="23"/></literal></expr>, <expr><literal type="string" pos:line="12" pos:column="25">"namingContexts"<pos:position pos:line="12" pos:column="41"/></literal></expr>,     <expr><name pos:line="12" pos:column="47">NULL<pos:position pos:line="12" pos:column="51"/></name></expr>}<pos:position pos:line="12" pos:column="52"/></block></expr></init></decl>;<pos:position pos:line="12" pos:column="53"/></decl_stmt>

  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><operator pos:line="14" pos:column="7">(<pos:position pos:line="14" pos:column="8"/></operator><name pos:line="14" pos:column="8">ud<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">==<pos:position pos:line="14" pos:column="13"/></operator> <name pos:line="14" pos:column="14">NULL<pos:position pos:line="14" pos:column="18"/></name><operator pos:line="14" pos:column="18">)<pos:position pos:line="14" pos:column="19"/></operator> <operator pos:line="14" pos:column="20">||<pos:position pos:line="14" pos:column="22"/></operator> <operator pos:line="14" pos:column="23">(<pos:position pos:line="14" pos:column="24"/></operator><name><name pos:line="14" pos:column="24">ud<pos:position pos:line="14" pos:column="26"/></name><operator pos:line="14" pos:column="26">-&gt;<pos:position pos:line="14" pos:column="31"/></operator><name pos:line="14" pos:column="28">data<pos:position pos:line="14" pos:column="32"/></name></name> <operator pos:line="14" pos:column="33">==<pos:position pos:line="14" pos:column="35"/></operator> <name pos:line="14" pos:column="36">NULL<pos:position pos:line="14" pos:column="40"/></name><operator pos:line="14" pos:column="40">)<pos:position pos:line="14" pos:column="41"/></operator></expr>)<pos:position pos:line="14" pos:column="42"/></condition><then pos:line="14" pos:column="42"> <block pos:line="14" pos:column="43">{
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">ERROR<pos:position pos:line="15" pos:column="10"/></name><argument_list pos:line="15" pos:column="10">(<argument><expr><literal type="string" pos:line="15" pos:column="11">"openldap plugin: cldap_read_host: Invalid user data."<pos:position pos:line="15" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="67"/></expr_stmt>
    <return pos:line="16" pos:column="5">return <expr><operator pos:line="16" pos:column="12">(<pos:position pos:line="16" pos:column="13"/></operator><operator pos:line="16" pos:column="13">-<pos:position pos:line="16" pos:column="14"/></operator><literal type="number" pos:line="16" pos:column="14">1<pos:position pos:line="16" pos:column="15"/></literal><operator pos:line="16" pos:column="15">)<pos:position pos:line="16" pos:column="16"/></operator></expr>;<pos:position pos:line="16" pos:column="17"/></return>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="19" pos:column="3">st<pos:position pos:line="19" pos:column="5"/></name> <operator pos:line="19" pos:column="6">=<pos:position pos:line="19" pos:column="7"/></operator> <operator pos:line="19" pos:column="8">(<pos:position pos:line="19" pos:column="9"/></operator><name pos:line="19" pos:column="9">cldap_t<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">*<pos:position pos:line="19" pos:column="18"/></operator><operator pos:line="19" pos:column="18">)<pos:position pos:line="19" pos:column="19"/></operator><name><name pos:line="19" pos:column="19">ud<pos:position pos:line="19" pos:column="21"/></name><operator pos:line="19" pos:column="21">-&gt;<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="23">data<pos:position pos:line="19" pos:column="27"/></name></name></expr>;<pos:position pos:line="19" pos:column="28"/></expr_stmt>

  <expr_stmt><expr><name pos:line="21" pos:column="3">status<pos:position pos:line="21" pos:column="9"/></name> <operator pos:line="21" pos:column="10">=<pos:position pos:line="21" pos:column="11"/></operator> <call><name pos:line="21" pos:column="12">cldap_init_host<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><name pos:line="21" pos:column="28">st<pos:position pos:line="21" pos:column="30"/></name></expr></argument>)<pos:position pos:line="21" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="32"/></expr_stmt>
  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><name pos:line="22" pos:column="7">status<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">!=<pos:position pos:line="22" pos:column="16"/></operator> <literal type="number" pos:line="22" pos:column="17">0<pos:position pos:line="22" pos:column="18"/></literal></expr>)<pos:position pos:line="22" pos:column="19"/></condition><then pos:line="22" pos:column="19">
    <block type="pseudo"><return pos:line="23" pos:column="5">return <expr><operator pos:line="23" pos:column="12">(<pos:position pos:line="23" pos:column="13"/></operator><operator pos:line="23" pos:column="13">-<pos:position pos:line="23" pos:column="14"/></operator><literal type="number" pos:line="23" pos:column="14">1<pos:position pos:line="23" pos:column="15"/></literal><operator pos:line="23" pos:column="15">)<pos:position pos:line="23" pos:column="16"/></operator></expr>;<pos:position pos:line="23" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="25" pos:column="3">rc<pos:position pos:line="25" pos:column="5"/></name> <operator pos:line="25" pos:column="6">=<pos:position pos:line="25" pos:column="7"/></operator> <call><name pos:line="25" pos:column="8">ldap_search_ext_s<pos:position pos:line="25" pos:column="25"/></name><argument_list pos:line="25" pos:column="25">(<argument><expr><name><name pos:line="25" pos:column="26">st<pos:position pos:line="25" pos:column="28"/></name><operator pos:line="25" pos:column="28">-&gt;<pos:position pos:line="25" pos:column="33"/></operator><name pos:line="25" pos:column="30">ld<pos:position pos:line="25" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="34">"cn=Monitor"<pos:position pos:line="25" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="48">LDAP_SCOPE_SUBTREE<pos:position pos:line="25" pos:column="66"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="26" pos:column="26">"(|(!(cn=* *))(cn=Database*))"<pos:position pos:line="26" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="58">attrs<pos:position pos:line="26" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="65">0<pos:position pos:line="26" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="68">NULL<pos:position pos:line="26" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="74">NULL<pos:position pos:line="26" pos:column="78"/></name></expr></argument>,
                         <argument><expr><name pos:line="27" pos:column="26">NULL<pos:position pos:line="27" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="32">0<pos:position pos:line="27" pos:column="33"/></literal></expr></argument>, <argument><expr><operator pos:line="27" pos:column="35">&amp;<pos:position pos:line="27" pos:column="40"/></operator><name pos:line="27" pos:column="36">result<pos:position pos:line="27" pos:column="42"/></name></expr></argument>)<pos:position pos:line="27" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="44"/></expr_stmt>

  <if pos:line="29" pos:column="3">if <condition pos:line="29" pos:column="6">(<expr><name pos:line="29" pos:column="7">rc<pos:position pos:line="29" pos:column="9"/></name> <operator pos:line="29" pos:column="10">!=<pos:position pos:line="29" pos:column="12"/></operator> <name pos:line="29" pos:column="13">LDAP_SUCCESS<pos:position pos:line="29" pos:column="25"/></name></expr>)<pos:position pos:line="29" pos:column="26"/></condition><then pos:line="29" pos:column="26"> <block pos:line="29" pos:column="27">{
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">ERROR<pos:position pos:line="30" pos:column="10"/></name><argument_list pos:line="30" pos:column="10">(<argument><expr><literal type="string" pos:line="30" pos:column="11">"openldap plugin: Failed to execute search: %s"<pos:position pos:line="30" pos:column="58"/></literal></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="60">ldap_err2string<pos:position pos:line="30" pos:column="75"/></name><argument_list pos:line="30" pos:column="75">(<argument><expr><name pos:line="30" pos:column="76">rc<pos:position pos:line="30" pos:column="78"/></name></expr></argument>)<pos:position pos:line="30" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="81"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">ldap_msgfree<pos:position pos:line="31" pos:column="17"/></name><argument_list pos:line="31" pos:column="17">(<argument><expr><name pos:line="31" pos:column="18">result<pos:position pos:line="31" pos:column="24"/></name></expr></argument>)<pos:position pos:line="31" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">st<pos:position pos:line="32" pos:column="7"/></name><operator pos:line="32" pos:column="7">-&gt;<pos:position pos:line="32" pos:column="12"/></operator><name pos:line="32" pos:column="9">state<pos:position pos:line="32" pos:column="14"/></name></name> <operator pos:line="32" pos:column="15">=<pos:position pos:line="32" pos:column="16"/></operator> <literal type="number" pos:line="32" pos:column="17">0<pos:position pos:line="32" pos:column="18"/></literal></expr>;<pos:position pos:line="32" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">ldap_unbind_ext_s<pos:position pos:line="33" pos:column="22"/></name><argument_list pos:line="33" pos:column="22">(<argument><expr><name><name pos:line="33" pos:column="23">st<pos:position pos:line="33" pos:column="25"/></name><operator pos:line="33" pos:column="25">-&gt;<pos:position pos:line="33" pos:column="30"/></operator><name pos:line="33" pos:column="27">ld<pos:position pos:line="33" pos:column="29"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="31">NULL<pos:position pos:line="33" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="37">NULL<pos:position pos:line="33" pos:column="41"/></name></expr></argument>)<pos:position pos:line="33" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="43"/></expr_stmt>
    <return pos:line="34" pos:column="5">return <expr><operator pos:line="34" pos:column="12">(<pos:position pos:line="34" pos:column="13"/></operator><operator pos:line="34" pos:column="13">-<pos:position pos:line="34" pos:column="14"/></operator><literal type="number" pos:line="34" pos:column="14">1<pos:position pos:line="34" pos:column="15"/></literal><operator pos:line="34" pos:column="15">)<pos:position pos:line="34" pos:column="16"/></operator></expr>;<pos:position pos:line="34" pos:column="17"/></return>
  }<pos:position pos:line="35" pos:column="4"/></block></then></if>

  <for pos:line="37" pos:column="3">for <control pos:line="37" pos:column="7">(<init><decl><type><name pos:line="37" pos:column="8">LDAPMessage<pos:position pos:line="37" pos:column="19"/></name> <modifier pos:line="37" pos:column="20">*<pos:position pos:line="37" pos:column="21"/></modifier></type><name pos:line="37" pos:column="21">e<pos:position pos:line="37" pos:column="22"/></name> <init pos:line="37" pos:column="23">= <expr><call><name pos:line="37" pos:column="25">ldap_first_entry<pos:position pos:line="37" pos:column="41"/></name><argument_list pos:line="37" pos:column="41">(<argument><expr><name><name pos:line="37" pos:column="42">st<pos:position pos:line="37" pos:column="44"/></name><operator pos:line="37" pos:column="44">-&gt;<pos:position pos:line="37" pos:column="49"/></operator><name pos:line="37" pos:column="46">ld<pos:position pos:line="37" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="50">result<pos:position pos:line="37" pos:column="56"/></name></expr></argument>)<pos:position pos:line="37" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="37" pos:column="58"/></init> <condition><expr><name pos:line="37" pos:column="59">e<pos:position pos:line="37" pos:column="60"/></name> <operator pos:line="37" pos:column="61">!=<pos:position pos:line="37" pos:column="63"/></operator> <name pos:line="37" pos:column="64">NULL<pos:position pos:line="37" pos:column="68"/></name></expr>;<pos:position pos:line="37" pos:column="69"/></condition>
       <incr><expr><name pos:line="38" pos:column="8">e<pos:position pos:line="38" pos:column="9"/></name> <operator pos:line="38" pos:column="10">=<pos:position pos:line="38" pos:column="11"/></operator> <call><name pos:line="38" pos:column="12">ldap_next_entry<pos:position pos:line="38" pos:column="27"/></name><argument_list pos:line="38" pos:column="27">(<argument><expr><name><name pos:line="38" pos:column="28">st<pos:position pos:line="38" pos:column="30"/></name><operator pos:line="38" pos:column="30">-&gt;<pos:position pos:line="38" pos:column="35"/></operator><name pos:line="38" pos:column="32">ld<pos:position pos:line="38" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="36">e<pos:position pos:line="38" pos:column="37"/></name></expr></argument>)<pos:position pos:line="38" pos:column="38"/></argument_list></call></expr></incr>)<pos:position pos:line="38" pos:column="39"/></control> <block pos:line="38" pos:column="40">{
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><operator pos:line="39" pos:column="9">(<pos:position pos:line="39" pos:column="10"/></operator><name pos:line="39" pos:column="10">dn<pos:position pos:line="39" pos:column="12"/></name> <operator pos:line="39" pos:column="13">=<pos:position pos:line="39" pos:column="14"/></operator> <call><name pos:line="39" pos:column="15">ldap_get_dn<pos:position pos:line="39" pos:column="26"/></name><argument_list pos:line="39" pos:column="26">(<argument><expr><name><name pos:line="39" pos:column="27">st<pos:position pos:line="39" pos:column="29"/></name><operator pos:line="39" pos:column="29">-&gt;<pos:position pos:line="39" pos:column="34"/></operator><name pos:line="39" pos:column="31">ld<pos:position pos:line="39" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="35">e<pos:position pos:line="39" pos:column="36"/></name></expr></argument>)<pos:position pos:line="39" pos:column="37"/></argument_list></call><operator pos:line="39" pos:column="37">)<pos:position pos:line="39" pos:column="38"/></operator> <operator pos:line="39" pos:column="39">!=<pos:position pos:line="39" pos:column="41"/></operator> <name pos:line="39" pos:column="42">NULL<pos:position pos:line="39" pos:column="46"/></name></expr>)<pos:position pos:line="39" pos:column="47"/></condition><then pos:line="39" pos:column="47"> <block pos:line="39" pos:column="48">{
      <decl_stmt><decl><type><name pos:line="40" pos:column="7">unsigned<pos:position pos:line="40" pos:column="15"/></name> <name pos:line="40" pos:column="16">long<pos:position pos:line="40" pos:column="20"/></name> <name pos:line="40" pos:column="21">long<pos:position pos:line="40" pos:column="25"/></name></type> <name pos:line="40" pos:column="26">counter<pos:position pos:line="40" pos:column="33"/></name> <init pos:line="40" pos:column="34">= <expr><literal type="number" pos:line="40" pos:column="36">0<pos:position pos:line="40" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="40" pos:column="38"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="41" pos:column="7">unsigned<pos:position pos:line="41" pos:column="15"/></name> <name pos:line="41" pos:column="16">long<pos:position pos:line="41" pos:column="20"/></name> <name pos:line="41" pos:column="21">long<pos:position pos:line="41" pos:column="25"/></name></type> <name pos:line="41" pos:column="26">opc<pos:position pos:line="41" pos:column="29"/></name> <init pos:line="41" pos:column="30">= <expr><literal type="number" pos:line="41" pos:column="32">0<pos:position pos:line="41" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="41" pos:column="34"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="42" pos:column="7">unsigned<pos:position pos:line="42" pos:column="15"/></name> <name pos:line="42" pos:column="16">long<pos:position pos:line="42" pos:column="20"/></name> <name pos:line="42" pos:column="21">long<pos:position pos:line="42" pos:column="25"/></name></type> <name pos:line="42" pos:column="26">opi<pos:position pos:line="42" pos:column="29"/></name> <init pos:line="42" pos:column="30">= <expr><literal type="number" pos:line="42" pos:column="32">0<pos:position pos:line="42" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="42" pos:column="34"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="43" pos:column="7">unsigned<pos:position pos:line="43" pos:column="15"/></name> <name pos:line="43" pos:column="16">long<pos:position pos:line="43" pos:column="20"/></name> <name pos:line="43" pos:column="21">long<pos:position pos:line="43" pos:column="25"/></name></type> <name pos:line="43" pos:column="26">info<pos:position pos:line="43" pos:column="30"/></name> <init pos:line="43" pos:column="31">= <expr><literal type="number" pos:line="43" pos:column="33">0<pos:position pos:line="43" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="43" pos:column="35"/></decl_stmt>

      <decl_stmt><decl><type><name><name pos:line="45" pos:column="7">struct<pos:position pos:line="45" pos:column="13"/></name> <name pos:line="45" pos:column="14">berval<pos:position pos:line="45" pos:column="20"/></name></name></type> <name pos:line="45" pos:column="21">counter_data<pos:position pos:line="45" pos:column="33"/></name></decl>;<pos:position pos:line="45" pos:column="34"/></decl_stmt>
      <decl_stmt><decl><type><name><name pos:line="46" pos:column="7">struct<pos:position pos:line="46" pos:column="13"/></name> <name pos:line="46" pos:column="14">berval<pos:position pos:line="46" pos:column="20"/></name></name></type> <name pos:line="46" pos:column="21">opc_data<pos:position pos:line="46" pos:column="29"/></name></decl>;<pos:position pos:line="46" pos:column="30"/></decl_stmt>
      <decl_stmt><decl><type><name><name pos:line="47" pos:column="7">struct<pos:position pos:line="47" pos:column="13"/></name> <name pos:line="47" pos:column="14">berval<pos:position pos:line="47" pos:column="20"/></name></name></type> <name pos:line="47" pos:column="21">opi_data<pos:position pos:line="47" pos:column="29"/></name></decl>;<pos:position pos:line="47" pos:column="30"/></decl_stmt>
      <decl_stmt><decl><type><name><name pos:line="48" pos:column="7">struct<pos:position pos:line="48" pos:column="13"/></name> <name pos:line="48" pos:column="14">berval<pos:position pos:line="48" pos:column="20"/></name></name></type> <name pos:line="48" pos:column="21">info_data<pos:position pos:line="48" pos:column="30"/></name></decl>;<pos:position pos:line="48" pos:column="31"/></decl_stmt>
      <decl_stmt><decl><type><name><name pos:line="49" pos:column="7">struct<pos:position pos:line="49" pos:column="13"/></name> <name pos:line="49" pos:column="14">berval<pos:position pos:line="49" pos:column="20"/></name></name></type> <name pos:line="49" pos:column="21">olmbdb_data<pos:position pos:line="49" pos:column="32"/></name></decl>;<pos:position pos:line="49" pos:column="33"/></decl_stmt>
      <decl_stmt><decl><type><name><name pos:line="50" pos:column="7">struct<pos:position pos:line="50" pos:column="13"/></name> <name pos:line="50" pos:column="14">berval<pos:position pos:line="50" pos:column="20"/></name></name></type> <name pos:line="50" pos:column="21">nc_data<pos:position pos:line="50" pos:column="28"/></name></decl>;<pos:position pos:line="50" pos:column="29"/></decl_stmt>

      <decl_stmt><decl><type><name><name pos:line="52" pos:column="7">struct<pos:position pos:line="52" pos:column="13"/></name> <name pos:line="52" pos:column="14">berval<pos:position pos:line="52" pos:column="20"/></name></name> <modifier pos:line="52" pos:column="21">*<pos:position pos:line="52" pos:column="22"/></modifier><modifier pos:line="52" pos:column="22">*<pos:position pos:line="52" pos:column="23"/></modifier></type><name pos:line="52" pos:column="23">counter_list<pos:position pos:line="52" pos:column="35"/></name></decl>;<pos:position pos:line="52" pos:column="36"/></decl_stmt>
      <decl_stmt><decl><type><name><name pos:line="53" pos:column="7">struct<pos:position pos:line="53" pos:column="13"/></name> <name pos:line="53" pos:column="14">berval<pos:position pos:line="53" pos:column="20"/></name></name> <modifier pos:line="53" pos:column="21">*<pos:position pos:line="53" pos:column="22"/></modifier><modifier pos:line="53" pos:column="22">*<pos:position pos:line="53" pos:column="23"/></modifier></type><name pos:line="53" pos:column="23">opc_list<pos:position pos:line="53" pos:column="31"/></name></decl>;<pos:position pos:line="53" pos:column="32"/></decl_stmt>
      <decl_stmt><decl><type><name><name pos:line="54" pos:column="7">struct<pos:position pos:line="54" pos:column="13"/></name> <name pos:line="54" pos:column="14">berval<pos:position pos:line="54" pos:column="20"/></name></name> <modifier pos:line="54" pos:column="21">*<pos:position pos:line="54" pos:column="22"/></modifier><modifier pos:line="54" pos:column="22">*<pos:position pos:line="54" pos:column="23"/></modifier></type><name pos:line="54" pos:column="23">opi_list<pos:position pos:line="54" pos:column="31"/></name></decl>;<pos:position pos:line="54" pos:column="32"/></decl_stmt>
      <decl_stmt><decl><type><name><name pos:line="55" pos:column="7">struct<pos:position pos:line="55" pos:column="13"/></name> <name pos:line="55" pos:column="14">berval<pos:position pos:line="55" pos:column="20"/></name></name> <modifier pos:line="55" pos:column="21">*<pos:position pos:line="55" pos:column="22"/></modifier><modifier pos:line="55" pos:column="22">*<pos:position pos:line="55" pos:column="23"/></modifier></type><name pos:line="55" pos:column="23">info_list<pos:position pos:line="55" pos:column="32"/></name></decl>;<pos:position pos:line="55" pos:column="33"/></decl_stmt>
      <decl_stmt><decl><type><name><name pos:line="56" pos:column="7">struct<pos:position pos:line="56" pos:column="13"/></name> <name pos:line="56" pos:column="14">berval<pos:position pos:line="56" pos:column="20"/></name></name> <modifier pos:line="56" pos:column="21">*<pos:position pos:line="56" pos:column="22"/></modifier><modifier pos:line="56" pos:column="22">*<pos:position pos:line="56" pos:column="23"/></modifier></type><name pos:line="56" pos:column="23">olmbdb_list<pos:position pos:line="56" pos:column="34"/></name></decl>;<pos:position pos:line="56" pos:column="35"/></decl_stmt>
      <decl_stmt><decl><type><name><name pos:line="57" pos:column="7">struct<pos:position pos:line="57" pos:column="13"/></name> <name pos:line="57" pos:column="14">berval<pos:position pos:line="57" pos:column="20"/></name></name> <modifier pos:line="57" pos:column="21">*<pos:position pos:line="57" pos:column="22"/></modifier><modifier pos:line="57" pos:column="22">*<pos:position pos:line="57" pos:column="23"/></modifier></type><name pos:line="57" pos:column="23">nc_list<pos:position pos:line="57" pos:column="30"/></name></decl>;<pos:position pos:line="57" pos:column="31"/></decl_stmt>

      <if pos:line="59" pos:column="7">if <condition pos:line="59" pos:column="10">(<expr><operator pos:line="59" pos:column="11">(<pos:position pos:line="59" pos:column="12"/></operator><name pos:line="59" pos:column="12">counter_list<pos:position pos:line="59" pos:column="24"/></name> <operator pos:line="59" pos:column="25">=<pos:position pos:line="59" pos:column="26"/></operator> <call><name pos:line="59" pos:column="27">ldap_get_values_len<pos:position pos:line="59" pos:column="46"/></name><argument_list pos:line="59" pos:column="46">(<argument><expr><name><name pos:line="59" pos:column="47">st<pos:position pos:line="59" pos:column="49"/></name><operator pos:line="59" pos:column="49">-&gt;<pos:position pos:line="59" pos:column="54"/></operator><name pos:line="59" pos:column="51">ld<pos:position pos:line="59" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="55">e<pos:position pos:line="59" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="58">"monitorCounter"<pos:position pos:line="59" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="75"/></argument_list></call><operator pos:line="59" pos:column="75">)<pos:position pos:line="59" pos:column="76"/></operator> <operator pos:line="59" pos:column="77">!=<pos:position pos:line="59" pos:column="79"/></operator>
          <name pos:line="60" pos:column="11">NULL<pos:position pos:line="60" pos:column="15"/></name></expr>)<pos:position pos:line="60" pos:column="16"/></condition><then pos:line="60" pos:column="16"> <block pos:line="60" pos:column="17">{
        <expr_stmt><expr><name pos:line="61" pos:column="9">counter_data<pos:position pos:line="61" pos:column="21"/></name> <operator pos:line="61" pos:column="22">=<pos:position pos:line="61" pos:column="23"/></operator> <operator pos:line="61" pos:column="24">*<pos:position pos:line="61" pos:column="25"/></operator><name><name pos:line="61" pos:column="25">counter_list<pos:position pos:line="61" pos:column="37"/></name><index pos:line="61" pos:column="37">[<expr><literal type="number" pos:line="61" pos:column="38">0<pos:position pos:line="61" pos:column="39"/></literal></expr>]<pos:position pos:line="61" pos:column="40"/></index></name></expr>;<pos:position pos:line="61" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name pos:line="62" pos:column="9">counter<pos:position pos:line="62" pos:column="16"/></name> <operator pos:line="62" pos:column="17">=<pos:position pos:line="62" pos:column="18"/></operator> <call><name pos:line="62" pos:column="19">atoll<pos:position pos:line="62" pos:column="24"/></name><argument_list pos:line="62" pos:column="24">(<argument><expr><name><name pos:line="62" pos:column="25">counter_data<pos:position pos:line="62" pos:column="37"/></name><operator pos:line="62" pos:column="37">.<pos:position pos:line="62" pos:column="38"/></operator><name pos:line="62" pos:column="38">bv_val<pos:position pos:line="62" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="46"/></expr_stmt>
      }<pos:position pos:line="63" pos:column="8"/></block></then></if>

      <if pos:line="65" pos:column="7">if <condition pos:line="65" pos:column="10">(<expr><operator pos:line="65" pos:column="11">(<pos:position pos:line="65" pos:column="12"/></operator><name pos:line="65" pos:column="12">opc_list<pos:position pos:line="65" pos:column="20"/></name> <operator pos:line="65" pos:column="21">=<pos:position pos:line="65" pos:column="22"/></operator> <call><name pos:line="65" pos:column="23">ldap_get_values_len<pos:position pos:line="65" pos:column="42"/></name><argument_list pos:line="65" pos:column="42">(<argument><expr><name><name pos:line="65" pos:column="43">st<pos:position pos:line="65" pos:column="45"/></name><operator pos:line="65" pos:column="45">-&gt;<pos:position pos:line="65" pos:column="50"/></operator><name pos:line="65" pos:column="47">ld<pos:position pos:line="65" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="51">e<pos:position pos:line="65" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="54">"monitorOpCompleted"<pos:position pos:line="65" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="75"/></argument_list></call><operator pos:line="65" pos:column="75">)<pos:position pos:line="65" pos:column="76"/></operator> <operator pos:line="65" pos:column="77">!=<pos:position pos:line="65" pos:column="79"/></operator>
          <name pos:line="66" pos:column="11">NULL<pos:position pos:line="66" pos:column="15"/></name></expr>)<pos:position pos:line="66" pos:column="16"/></condition><then pos:line="66" pos:column="16"> <block pos:line="66" pos:column="17">{
        <expr_stmt><expr><name pos:line="67" pos:column="9">opc_data<pos:position pos:line="67" pos:column="17"/></name> <operator pos:line="67" pos:column="18">=<pos:position pos:line="67" pos:column="19"/></operator> <operator pos:line="67" pos:column="20">*<pos:position pos:line="67" pos:column="21"/></operator><name><name pos:line="67" pos:column="21">opc_list<pos:position pos:line="67" pos:column="29"/></name><index pos:line="67" pos:column="29">[<expr><literal type="number" pos:line="67" pos:column="30">0<pos:position pos:line="67" pos:column="31"/></literal></expr>]<pos:position pos:line="67" pos:column="32"/></index></name></expr>;<pos:position pos:line="67" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name pos:line="68" pos:column="9">opc<pos:position pos:line="68" pos:column="12"/></name> <operator pos:line="68" pos:column="13">=<pos:position pos:line="68" pos:column="14"/></operator> <call><name pos:line="68" pos:column="15">atoll<pos:position pos:line="68" pos:column="20"/></name><argument_list pos:line="68" pos:column="20">(<argument><expr><name><name pos:line="68" pos:column="21">opc_data<pos:position pos:line="68" pos:column="29"/></name><operator pos:line="68" pos:column="29">.<pos:position pos:line="68" pos:column="30"/></operator><name pos:line="68" pos:column="30">bv_val<pos:position pos:line="68" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="38"/></expr_stmt>
      }<pos:position pos:line="69" pos:column="8"/></block></then></if>

      <if pos:line="71" pos:column="7">if <condition pos:line="71" pos:column="10">(<expr><operator pos:line="71" pos:column="11">(<pos:position pos:line="71" pos:column="12"/></operator><name pos:line="71" pos:column="12">opi_list<pos:position pos:line="71" pos:column="20"/></name> <operator pos:line="71" pos:column="21">=<pos:position pos:line="71" pos:column="22"/></operator> <call><name pos:line="71" pos:column="23">ldap_get_values_len<pos:position pos:line="71" pos:column="42"/></name><argument_list pos:line="71" pos:column="42">(<argument><expr><name><name pos:line="71" pos:column="43">st<pos:position pos:line="71" pos:column="45"/></name><operator pos:line="71" pos:column="45">-&gt;<pos:position pos:line="71" pos:column="50"/></operator><name pos:line="71" pos:column="47">ld<pos:position pos:line="71" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="51">e<pos:position pos:line="71" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="54">"monitorOpInitiated"<pos:position pos:line="71" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="75"/></argument_list></call><operator pos:line="71" pos:column="75">)<pos:position pos:line="71" pos:column="76"/></operator> <operator pos:line="71" pos:column="77">!=<pos:position pos:line="71" pos:column="79"/></operator>
          <name pos:line="72" pos:column="11">NULL<pos:position pos:line="72" pos:column="15"/></name></expr>)<pos:position pos:line="72" pos:column="16"/></condition><then pos:line="72" pos:column="16"> <block pos:line="72" pos:column="17">{
        <expr_stmt><expr><name pos:line="73" pos:column="9">opi_data<pos:position pos:line="73" pos:column="17"/></name> <operator pos:line="73" pos:column="18">=<pos:position pos:line="73" pos:column="19"/></operator> <operator pos:line="73" pos:column="20">*<pos:position pos:line="73" pos:column="21"/></operator><name><name pos:line="73" pos:column="21">opi_list<pos:position pos:line="73" pos:column="29"/></name><index pos:line="73" pos:column="29">[<expr><literal type="number" pos:line="73" pos:column="30">0<pos:position pos:line="73" pos:column="31"/></literal></expr>]<pos:position pos:line="73" pos:column="32"/></index></name></expr>;<pos:position pos:line="73" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name pos:line="74" pos:column="9">opi<pos:position pos:line="74" pos:column="12"/></name> <operator pos:line="74" pos:column="13">=<pos:position pos:line="74" pos:column="14"/></operator> <call><name pos:line="74" pos:column="15">atoll<pos:position pos:line="74" pos:column="20"/></name><argument_list pos:line="74" pos:column="20">(<argument><expr><name><name pos:line="74" pos:column="21">opi_data<pos:position pos:line="74" pos:column="29"/></name><operator pos:line="74" pos:column="29">.<pos:position pos:line="74" pos:column="30"/></operator><name pos:line="74" pos:column="30">bv_val<pos:position pos:line="74" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="38"/></expr_stmt>
      }<pos:position pos:line="75" pos:column="8"/></block></then></if>

      <if pos:line="77" pos:column="7">if <condition pos:line="77" pos:column="10">(<expr><operator pos:line="77" pos:column="11">(<pos:position pos:line="77" pos:column="12"/></operator><name pos:line="77" pos:column="12">info_list<pos:position pos:line="77" pos:column="21"/></name> <operator pos:line="77" pos:column="22">=<pos:position pos:line="77" pos:column="23"/></operator> <call><name pos:line="77" pos:column="24">ldap_get_values_len<pos:position pos:line="77" pos:column="43"/></name><argument_list pos:line="77" pos:column="43">(<argument><expr><name><name pos:line="77" pos:column="44">st<pos:position pos:line="77" pos:column="46"/></name><operator pos:line="77" pos:column="46">-&gt;<pos:position pos:line="77" pos:column="51"/></operator><name pos:line="77" pos:column="48">ld<pos:position pos:line="77" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="52">e<pos:position pos:line="77" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="55">"monitoredInfo"<pos:position pos:line="77" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="71"/></argument_list></call><operator pos:line="77" pos:column="71">)<pos:position pos:line="77" pos:column="72"/></operator> <operator pos:line="77" pos:column="73">!=<pos:position pos:line="77" pos:column="75"/></operator>
          <name pos:line="78" pos:column="11">NULL<pos:position pos:line="78" pos:column="15"/></name></expr>)<pos:position pos:line="78" pos:column="16"/></condition><then pos:line="78" pos:column="16"> <block pos:line="78" pos:column="17">{
        <expr_stmt><expr><name pos:line="79" pos:column="9">info_data<pos:position pos:line="79" pos:column="18"/></name> <operator pos:line="79" pos:column="19">=<pos:position pos:line="79" pos:column="20"/></operator> <operator pos:line="79" pos:column="21">*<pos:position pos:line="79" pos:column="22"/></operator><name><name pos:line="79" pos:column="22">info_list<pos:position pos:line="79" pos:column="31"/></name><index pos:line="79" pos:column="31">[<expr><literal type="number" pos:line="79" pos:column="32">0<pos:position pos:line="79" pos:column="33"/></literal></expr>]<pos:position pos:line="79" pos:column="34"/></index></name></expr>;<pos:position pos:line="79" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name pos:line="80" pos:column="9">info<pos:position pos:line="80" pos:column="13"/></name> <operator pos:line="80" pos:column="14">=<pos:position pos:line="80" pos:column="15"/></operator> <call><name pos:line="80" pos:column="16">atoll<pos:position pos:line="80" pos:column="21"/></name><argument_list pos:line="80" pos:column="21">(<argument><expr><name><name pos:line="80" pos:column="22">info_data<pos:position pos:line="80" pos:column="31"/></name><operator pos:line="80" pos:column="31">.<pos:position pos:line="80" pos:column="32"/></operator><name pos:line="80" pos:column="32">bv_val<pos:position pos:line="80" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="40"/></expr_stmt>
      }<pos:position pos:line="81" pos:column="8"/></block></then></if>

      <if pos:line="83" pos:column="7">if <condition pos:line="83" pos:column="10">(<expr><call><name pos:line="83" pos:column="11">strcmp<pos:position pos:line="83" pos:column="17"/></name><argument_list pos:line="83" pos:column="17">(<argument><expr><name pos:line="83" pos:column="18">dn<pos:position pos:line="83" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="22">"cn=Total,cn=Connections,cn=Monitor"<pos:position pos:line="83" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="59"/></argument_list></call> <operator pos:line="83" pos:column="60">==<pos:position pos:line="83" pos:column="62"/></operator> <literal type="number" pos:line="83" pos:column="63">0<pos:position pos:line="83" pos:column="64"/></literal></expr>)<pos:position pos:line="83" pos:column="65"/></condition><then pos:line="83" pos:column="65"> <block pos:line="83" pos:column="66">{
        <expr_stmt><expr><call><name pos:line="84" pos:column="9">cldap_submit_derive<pos:position pos:line="84" pos:column="28"/></name><argument_list pos:line="84" pos:column="28">(<argument><expr><literal type="string" pos:line="84" pos:column="29">"total_connections"<pos:position pos:line="84" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="84" pos:column="50">NULL<pos:position pos:line="84" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="56">counter<pos:position pos:line="84" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="65">st<pos:position pos:line="84" pos:column="67"/></name></expr></argument>)<pos:position pos:line="84" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="69"/></expr_stmt>
      }<pos:position pos:line="85" pos:column="8"/></block></then> <elseif pos:line="85" pos:column="9">else <if pos:line="85" pos:column="14">if <condition pos:line="85" pos:column="17">(<expr><call><name pos:line="85" pos:column="18">strcmp<pos:position pos:line="85" pos:column="24"/></name><argument_list pos:line="85" pos:column="24">(<argument><expr><name pos:line="85" pos:column="25">dn<pos:position pos:line="85" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="29">"cn=Current,cn=Connections,cn=Monitor"<pos:position pos:line="85" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="68"/></argument_list></call> <operator pos:line="85" pos:column="69">==<pos:position pos:line="85" pos:column="71"/></operator> <literal type="number" pos:line="85" pos:column="72">0<pos:position pos:line="85" pos:column="73"/></literal></expr>)<pos:position pos:line="85" pos:column="74"/></condition><then pos:line="85" pos:column="74"> <block pos:line="85" pos:column="75">{
        <expr_stmt><expr><call><name pos:line="86" pos:column="9">cldap_submit_gauge<pos:position pos:line="86" pos:column="27"/></name><argument_list pos:line="86" pos:column="27">(<argument><expr><literal type="string" pos:line="86" pos:column="28">"current_connections"<pos:position pos:line="86" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="86" pos:column="51">NULL<pos:position pos:line="86" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="57">counter<pos:position pos:line="86" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="66">st<pos:position pos:line="86" pos:column="68"/></name></expr></argument>)<pos:position pos:line="86" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="70"/></expr_stmt>
      }<pos:position pos:line="87" pos:column="8"/></block></then></if></elseif> <elseif pos:line="87" pos:column="9">else <if pos:line="87" pos:column="14">if <condition pos:line="87" pos:column="17">(<expr><call><name pos:line="87" pos:column="18">strcmp<pos:position pos:line="87" pos:column="24"/></name><argument_list pos:line="87" pos:column="24">(<argument><expr><name pos:line="87" pos:column="25">dn<pos:position pos:line="87" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="29">"cn=Operations,cn=Monitor"<pos:position pos:line="87" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="56"/></argument_list></call> <operator pos:line="87" pos:column="57">==<pos:position pos:line="87" pos:column="59"/></operator> <literal type="number" pos:line="87" pos:column="60">0<pos:position pos:line="87" pos:column="61"/></literal></expr>)<pos:position pos:line="87" pos:column="62"/></condition><then pos:line="87" pos:column="62"> <block pos:line="87" pos:column="63">{
        <expr_stmt><expr><call><name pos:line="88" pos:column="9">cldap_submit_derive<pos:position pos:line="88" pos:column="28"/></name><argument_list pos:line="88" pos:column="28">(<argument><expr><literal type="string" pos:line="88" pos:column="29">"operations"<pos:position pos:line="88" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="43">"completed"<pos:position pos:line="88" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="88" pos:column="56">opc<pos:position pos:line="88" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="61">st<pos:position pos:line="88" pos:column="63"/></name></expr></argument>)<pos:position pos:line="88" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="89" pos:column="9">cldap_submit_derive<pos:position pos:line="89" pos:column="28"/></name><argument_list pos:line="89" pos:column="28">(<argument><expr><literal type="string" pos:line="89" pos:column="29">"operations"<pos:position pos:line="89" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="89" pos:column="43">"initiated"<pos:position pos:line="89" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="89" pos:column="56">opi<pos:position pos:line="89" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="61">st<pos:position pos:line="89" pos:column="63"/></name></expr></argument>)<pos:position pos:line="89" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="65"/></expr_stmt>
      }<pos:position pos:line="90" pos:column="8"/></block></then></if></elseif> <elseif pos:line="90" pos:column="9">else <if pos:line="90" pos:column="14">if <condition pos:line="90" pos:column="17">(<expr><call><name pos:line="90" pos:column="18">strcmp<pos:position pos:line="90" pos:column="24"/></name><argument_list pos:line="90" pos:column="24">(<argument><expr><name pos:line="90" pos:column="25">dn<pos:position pos:line="90" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="29">"cn=Bind,cn=Operations,cn=Monitor"<pos:position pos:line="90" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="64"/></argument_list></call> <operator pos:line="90" pos:column="65">==<pos:position pos:line="90" pos:column="67"/></operator> <literal type="number" pos:line="90" pos:column="68">0<pos:position pos:line="90" pos:column="69"/></literal></expr>)<pos:position pos:line="90" pos:column="70"/></condition><then pos:line="90" pos:column="70"> <block pos:line="90" pos:column="71">{
        <expr_stmt><expr><call><name pos:line="91" pos:column="9">cldap_submit_derive<pos:position pos:line="91" pos:column="28"/></name><argument_list pos:line="91" pos:column="28">(<argument><expr><literal type="string" pos:line="91" pos:column="29">"operations"<pos:position pos:line="91" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="43">"bind-completed"<pos:position pos:line="91" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="91" pos:column="61">opc<pos:position pos:line="91" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="66">st<pos:position pos:line="91" pos:column="68"/></name></expr></argument>)<pos:position pos:line="91" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="70"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="92" pos:column="9">cldap_submit_derive<pos:position pos:line="92" pos:column="28"/></name><argument_list pos:line="92" pos:column="28">(<argument><expr><literal type="string" pos:line="92" pos:column="29">"operations"<pos:position pos:line="92" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="43">"bind-initiated"<pos:position pos:line="92" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="92" pos:column="61">opi<pos:position pos:line="92" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="66">st<pos:position pos:line="92" pos:column="68"/></name></expr></argument>)<pos:position pos:line="92" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="70"/></expr_stmt>
      }<pos:position pos:line="93" pos:column="8"/></block></then></if></elseif> <elseif pos:line="93" pos:column="9">else <if pos:line="93" pos:column="14">if <condition pos:line="93" pos:column="17">(<expr><call><name pos:line="93" pos:column="18">strcmp<pos:position pos:line="93" pos:column="24"/></name><argument_list pos:line="93" pos:column="24">(<argument><expr><name pos:line="93" pos:column="25">dn<pos:position pos:line="93" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="29">"cn=UnBind,cn=Operations,cn=Monitor"<pos:position pos:line="93" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="66"/></argument_list></call> <operator pos:line="93" pos:column="67">==<pos:position pos:line="93" pos:column="69"/></operator> <literal type="number" pos:line="93" pos:column="70">0<pos:position pos:line="93" pos:column="71"/></literal></expr>)<pos:position pos:line="93" pos:column="72"/></condition><then pos:line="93" pos:column="72"> <block pos:line="93" pos:column="73">{
        <expr_stmt><expr><call><name pos:line="94" pos:column="9">cldap_submit_derive<pos:position pos:line="94" pos:column="28"/></name><argument_list pos:line="94" pos:column="28">(<argument><expr><literal type="string" pos:line="94" pos:column="29">"operations"<pos:position pos:line="94" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="94" pos:column="43">"unbind-completed"<pos:position pos:line="94" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="94" pos:column="63">opc<pos:position pos:line="94" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="68">st<pos:position pos:line="94" pos:column="70"/></name></expr></argument>)<pos:position pos:line="94" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="95" pos:column="9">cldap_submit_derive<pos:position pos:line="95" pos:column="28"/></name><argument_list pos:line="95" pos:column="28">(<argument><expr><literal type="string" pos:line="95" pos:column="29">"operations"<pos:position pos:line="95" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="95" pos:column="43">"unbind-initiated"<pos:position pos:line="95" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="95" pos:column="63">opi<pos:position pos:line="95" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="68">st<pos:position pos:line="95" pos:column="70"/></name></expr></argument>)<pos:position pos:line="95" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="72"/></expr_stmt>
      }<pos:position pos:line="96" pos:column="8"/></block></then></if></elseif> <elseif pos:line="96" pos:column="9">else <if pos:line="96" pos:column="14">if <condition pos:line="96" pos:column="17">(<expr><call><name pos:line="96" pos:column="18">strcmp<pos:position pos:line="96" pos:column="24"/></name><argument_list pos:line="96" pos:column="24">(<argument><expr><name pos:line="96" pos:column="25">dn<pos:position pos:line="96" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="96" pos:column="29">"cn=Search,cn=Operations,cn=Monitor"<pos:position pos:line="96" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="96" pos:column="66"/></argument_list></call> <operator pos:line="96" pos:column="67">==<pos:position pos:line="96" pos:column="69"/></operator> <literal type="number" pos:line="96" pos:column="70">0<pos:position pos:line="96" pos:column="71"/></literal></expr>)<pos:position pos:line="96" pos:column="72"/></condition><then pos:line="96" pos:column="72"> <block pos:line="96" pos:column="73">{
        <expr_stmt><expr><call><name pos:line="97" pos:column="9">cldap_submit_derive<pos:position pos:line="97" pos:column="28"/></name><argument_list pos:line="97" pos:column="28">(<argument><expr><literal type="string" pos:line="97" pos:column="29">"operations"<pos:position pos:line="97" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="43">"search-completed"<pos:position pos:line="97" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="97" pos:column="63">opc<pos:position pos:line="97" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="68">st<pos:position pos:line="97" pos:column="70"/></name></expr></argument>)<pos:position pos:line="97" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="98" pos:column="9">cldap_submit_derive<pos:position pos:line="98" pos:column="28"/></name><argument_list pos:line="98" pos:column="28">(<argument><expr><literal type="string" pos:line="98" pos:column="29">"operations"<pos:position pos:line="98" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="43">"search-initiated"<pos:position pos:line="98" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="98" pos:column="63">opi<pos:position pos:line="98" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="68">st<pos:position pos:line="98" pos:column="70"/></name></expr></argument>)<pos:position pos:line="98" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="72"/></expr_stmt>
      }<pos:position pos:line="99" pos:column="8"/></block></then></if></elseif> <elseif pos:line="99" pos:column="9">else <if pos:line="99" pos:column="14">if <condition pos:line="99" pos:column="17">(<expr><call><name pos:line="99" pos:column="18">strcmp<pos:position pos:line="99" pos:column="24"/></name><argument_list pos:line="99" pos:column="24">(<argument><expr><name pos:line="99" pos:column="25">dn<pos:position pos:line="99" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="99" pos:column="29">"cn=Compare,cn=Operations,cn=Monitor"<pos:position pos:line="99" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="67"/></argument_list></call> <operator pos:line="99" pos:column="68">==<pos:position pos:line="99" pos:column="70"/></operator> <literal type="number" pos:line="99" pos:column="71">0<pos:position pos:line="99" pos:column="72"/></literal></expr>)<pos:position pos:line="99" pos:column="73"/></condition><then pos:line="99" pos:column="73"> <block pos:line="99" pos:column="74">{
        <expr_stmt><expr><call><name pos:line="100" pos:column="9">cldap_submit_derive<pos:position pos:line="100" pos:column="28"/></name><argument_list pos:line="100" pos:column="28">(<argument><expr><literal type="string" pos:line="100" pos:column="29">"operations"<pos:position pos:line="100" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="100" pos:column="43">"compare-completed"<pos:position pos:line="100" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="100" pos:column="64">opc<pos:position pos:line="100" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="69">st<pos:position pos:line="100" pos:column="71"/></name></expr></argument>)<pos:position pos:line="100" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="73"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="101" pos:column="9">cldap_submit_derive<pos:position pos:line="101" pos:column="28"/></name><argument_list pos:line="101" pos:column="28">(<argument><expr><literal type="string" pos:line="101" pos:column="29">"operations"<pos:position pos:line="101" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="43">"compare-initiated"<pos:position pos:line="101" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="101" pos:column="64">opi<pos:position pos:line="101" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="69">st<pos:position pos:line="101" pos:column="71"/></name></expr></argument>)<pos:position pos:line="101" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="73"/></expr_stmt>
      }<pos:position pos:line="102" pos:column="8"/></block></then></if></elseif> <elseif pos:line="102" pos:column="9">else <if pos:line="102" pos:column="14">if <condition pos:line="102" pos:column="17">(<expr><call><name pos:line="102" pos:column="18">strcmp<pos:position pos:line="102" pos:column="24"/></name><argument_list pos:line="102" pos:column="24">(<argument><expr><name pos:line="102" pos:column="25">dn<pos:position pos:line="102" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="29">"cn=Modify,cn=Operations,cn=Monitor"<pos:position pos:line="102" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="66"/></argument_list></call> <operator pos:line="102" pos:column="67">==<pos:position pos:line="102" pos:column="69"/></operator> <literal type="number" pos:line="102" pos:column="70">0<pos:position pos:line="102" pos:column="71"/></literal></expr>)<pos:position pos:line="102" pos:column="72"/></condition><then pos:line="102" pos:column="72"> <block pos:line="102" pos:column="73">{
        <expr_stmt><expr><call><name pos:line="103" pos:column="9">cldap_submit_derive<pos:position pos:line="103" pos:column="28"/></name><argument_list pos:line="103" pos:column="28">(<argument><expr><literal type="string" pos:line="103" pos:column="29">"operations"<pos:position pos:line="103" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="103" pos:column="43">"modify-completed"<pos:position pos:line="103" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="103" pos:column="63">opc<pos:position pos:line="103" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="68">st<pos:position pos:line="103" pos:column="70"/></name></expr></argument>)<pos:position pos:line="103" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="104" pos:column="9">cldap_submit_derive<pos:position pos:line="104" pos:column="28"/></name><argument_list pos:line="104" pos:column="28">(<argument><expr><literal type="string" pos:line="104" pos:column="29">"operations"<pos:position pos:line="104" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="104" pos:column="43">"modify-initiated"<pos:position pos:line="104" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="104" pos:column="63">opi<pos:position pos:line="104" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="68">st<pos:position pos:line="104" pos:column="70"/></name></expr></argument>)<pos:position pos:line="104" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="72"/></expr_stmt>
      }<pos:position pos:line="105" pos:column="8"/></block></then></if></elseif> <elseif pos:line="105" pos:column="9">else <if pos:line="105" pos:column="14">if <condition pos:line="105" pos:column="17">(<expr><call><name pos:line="105" pos:column="18">strcmp<pos:position pos:line="105" pos:column="24"/></name><argument_list pos:line="105" pos:column="24">(<argument><expr><name pos:line="105" pos:column="25">dn<pos:position pos:line="105" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="105" pos:column="29">"cn=Modrdn,cn=Operations,cn=Monitor"<pos:position pos:line="105" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="66"/></argument_list></call> <operator pos:line="105" pos:column="67">==<pos:position pos:line="105" pos:column="69"/></operator> <literal type="number" pos:line="105" pos:column="70">0<pos:position pos:line="105" pos:column="71"/></literal></expr>)<pos:position pos:line="105" pos:column="72"/></condition><then pos:line="105" pos:column="72"> <block pos:line="105" pos:column="73">{
        <expr_stmt><expr><call><name pos:line="106" pos:column="9">cldap_submit_derive<pos:position pos:line="106" pos:column="28"/></name><argument_list pos:line="106" pos:column="28">(<argument><expr><literal type="string" pos:line="106" pos:column="29">"operations"<pos:position pos:line="106" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="106" pos:column="43">"modrdn-completed"<pos:position pos:line="106" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="106" pos:column="63">opc<pos:position pos:line="106" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="68">st<pos:position pos:line="106" pos:column="70"/></name></expr></argument>)<pos:position pos:line="106" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="107" pos:column="9">cldap_submit_derive<pos:position pos:line="107" pos:column="28"/></name><argument_list pos:line="107" pos:column="28">(<argument><expr><literal type="string" pos:line="107" pos:column="29">"operations"<pos:position pos:line="107" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="43">"modrdn-initiated"<pos:position pos:line="107" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="107" pos:column="63">opi<pos:position pos:line="107" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="68">st<pos:position pos:line="107" pos:column="70"/></name></expr></argument>)<pos:position pos:line="107" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="72"/></expr_stmt>
      }<pos:position pos:line="108" pos:column="8"/></block></then></if></elseif> <elseif pos:line="108" pos:column="9">else <if pos:line="108" pos:column="14">if <condition pos:line="108" pos:column="17">(<expr><call><name pos:line="108" pos:column="18">strcmp<pos:position pos:line="108" pos:column="24"/></name><argument_list pos:line="108" pos:column="24">(<argument><expr><name pos:line="108" pos:column="25">dn<pos:position pos:line="108" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="108" pos:column="29">"cn=Add,cn=Operations,cn=Monitor"<pos:position pos:line="108" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="63"/></argument_list></call> <operator pos:line="108" pos:column="64">==<pos:position pos:line="108" pos:column="66"/></operator> <literal type="number" pos:line="108" pos:column="67">0<pos:position pos:line="108" pos:column="68"/></literal></expr>)<pos:position pos:line="108" pos:column="69"/></condition><then pos:line="108" pos:column="69"> <block pos:line="108" pos:column="70">{
        <expr_stmt><expr><call><name pos:line="109" pos:column="9">cldap_submit_derive<pos:position pos:line="109" pos:column="28"/></name><argument_list pos:line="109" pos:column="28">(<argument><expr><literal type="string" pos:line="109" pos:column="29">"operations"<pos:position pos:line="109" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="109" pos:column="43">"add-completed"<pos:position pos:line="109" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="109" pos:column="60">opc<pos:position pos:line="109" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="65">st<pos:position pos:line="109" pos:column="67"/></name></expr></argument>)<pos:position pos:line="109" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="69"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="110" pos:column="9">cldap_submit_derive<pos:position pos:line="110" pos:column="28"/></name><argument_list pos:line="110" pos:column="28">(<argument><expr><literal type="string" pos:line="110" pos:column="29">"operations"<pos:position pos:line="110" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="110" pos:column="43">"add-initiated"<pos:position pos:line="110" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="110" pos:column="60">opi<pos:position pos:line="110" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="65">st<pos:position pos:line="110" pos:column="67"/></name></expr></argument>)<pos:position pos:line="110" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="69"/></expr_stmt>
      }<pos:position pos:line="111" pos:column="8"/></block></then></if></elseif> <elseif pos:line="111" pos:column="9">else <if pos:line="111" pos:column="14">if <condition pos:line="111" pos:column="17">(<expr><call><name pos:line="111" pos:column="18">strcmp<pos:position pos:line="111" pos:column="24"/></name><argument_list pos:line="111" pos:column="24">(<argument><expr><name pos:line="111" pos:column="25">dn<pos:position pos:line="111" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="29">"cn=Delete,cn=Operations,cn=Monitor"<pos:position pos:line="111" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="66"/></argument_list></call> <operator pos:line="111" pos:column="67">==<pos:position pos:line="111" pos:column="69"/></operator> <literal type="number" pos:line="111" pos:column="70">0<pos:position pos:line="111" pos:column="71"/></literal></expr>)<pos:position pos:line="111" pos:column="72"/></condition><then pos:line="111" pos:column="72"> <block pos:line="111" pos:column="73">{
        <expr_stmt><expr><call><name pos:line="112" pos:column="9">cldap_submit_derive<pos:position pos:line="112" pos:column="28"/></name><argument_list pos:line="112" pos:column="28">(<argument><expr><literal type="string" pos:line="112" pos:column="29">"operations"<pos:position pos:line="112" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="112" pos:column="43">"delete-completed"<pos:position pos:line="112" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="112" pos:column="63">opc<pos:position pos:line="112" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="68">st<pos:position pos:line="112" pos:column="70"/></name></expr></argument>)<pos:position pos:line="112" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="113" pos:column="9">cldap_submit_derive<pos:position pos:line="113" pos:column="28"/></name><argument_list pos:line="113" pos:column="28">(<argument><expr><literal type="string" pos:line="113" pos:column="29">"operations"<pos:position pos:line="113" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="113" pos:column="43">"delete-initiated"<pos:position pos:line="113" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="113" pos:column="63">opi<pos:position pos:line="113" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="68">st<pos:position pos:line="113" pos:column="70"/></name></expr></argument>)<pos:position pos:line="113" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="72"/></expr_stmt>
      }<pos:position pos:line="114" pos:column="8"/></block></then></if></elseif> <elseif pos:line="114" pos:column="9">else <if pos:line="114" pos:column="14">if <condition pos:line="114" pos:column="17">(<expr><call><name pos:line="114" pos:column="18">strcmp<pos:position pos:line="114" pos:column="24"/></name><argument_list pos:line="114" pos:column="24">(<argument><expr><name pos:line="114" pos:column="25">dn<pos:position pos:line="114" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="114" pos:column="29">"cn=Abandon,cn=Operations,cn=Monitor"<pos:position pos:line="114" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="67"/></argument_list></call> <operator pos:line="114" pos:column="68">==<pos:position pos:line="114" pos:column="70"/></operator> <literal type="number" pos:line="114" pos:column="71">0<pos:position pos:line="114" pos:column="72"/></literal></expr>)<pos:position pos:line="114" pos:column="73"/></condition><then pos:line="114" pos:column="73"> <block pos:line="114" pos:column="74">{
        <expr_stmt><expr><call><name pos:line="115" pos:column="9">cldap_submit_derive<pos:position pos:line="115" pos:column="28"/></name><argument_list pos:line="115" pos:column="28">(<argument><expr><literal type="string" pos:line="115" pos:column="29">"operations"<pos:position pos:line="115" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="115" pos:column="43">"abandon-completed"<pos:position pos:line="115" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="115" pos:column="64">opc<pos:position pos:line="115" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="69">st<pos:position pos:line="115" pos:column="71"/></name></expr></argument>)<pos:position pos:line="115" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="73"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="116" pos:column="9">cldap_submit_derive<pos:position pos:line="116" pos:column="28"/></name><argument_list pos:line="116" pos:column="28">(<argument><expr><literal type="string" pos:line="116" pos:column="29">"operations"<pos:position pos:line="116" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="116" pos:column="43">"abandon-initiated"<pos:position pos:line="116" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="116" pos:column="64">opi<pos:position pos:line="116" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="69">st<pos:position pos:line="116" pos:column="71"/></name></expr></argument>)<pos:position pos:line="116" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="73"/></expr_stmt>
      }<pos:position pos:line="117" pos:column="8"/></block></then></if></elseif> <elseif pos:line="117" pos:column="9">else <if pos:line="117" pos:column="14">if <condition pos:line="117" pos:column="17">(<expr><call><name pos:line="117" pos:column="18">strcmp<pos:position pos:line="117" pos:column="24"/></name><argument_list pos:line="117" pos:column="24">(<argument><expr><name pos:line="117" pos:column="25">dn<pos:position pos:line="117" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="117" pos:column="29">"cn=Extended,cn=Operations,cn=Monitor"<pos:position pos:line="117" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="117" pos:column="68"/></argument_list></call> <operator pos:line="117" pos:column="69">==<pos:position pos:line="117" pos:column="71"/></operator> <literal type="number" pos:line="117" pos:column="72">0<pos:position pos:line="117" pos:column="73"/></literal></expr>)<pos:position pos:line="117" pos:column="74"/></condition><then pos:line="117" pos:column="74"> <block pos:line="117" pos:column="75">{
        <expr_stmt><expr><call><name pos:line="118" pos:column="9">cldap_submit_derive<pos:position pos:line="118" pos:column="28"/></name><argument_list pos:line="118" pos:column="28">(<argument><expr><literal type="string" pos:line="118" pos:column="29">"operations"<pos:position pos:line="118" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="118" pos:column="43">"extended-completed"<pos:position pos:line="118" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="118" pos:column="65">opc<pos:position pos:line="118" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="70">st<pos:position pos:line="118" pos:column="72"/></name></expr></argument>)<pos:position pos:line="118" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="74"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="119" pos:column="9">cldap_submit_derive<pos:position pos:line="119" pos:column="28"/></name><argument_list pos:line="119" pos:column="28">(<argument><expr><literal type="string" pos:line="119" pos:column="29">"operations"<pos:position pos:line="119" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="119" pos:column="43">"extended-initiated"<pos:position pos:line="119" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="119" pos:column="65">opi<pos:position pos:line="119" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="70">st<pos:position pos:line="119" pos:column="72"/></name></expr></argument>)<pos:position pos:line="119" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="74"/></expr_stmt>
      }<pos:position pos:line="120" pos:column="8"/></block></then></if></elseif> <elseif pos:line="120" pos:column="9">else <if pos:line="120" pos:column="14">if <condition pos:line="120" pos:column="17">(<expr><operator pos:line="120" pos:column="18">(<pos:position pos:line="120" pos:column="19"/></operator><call><name pos:line="120" pos:column="19">strncmp<pos:position pos:line="120" pos:column="26"/></name><argument_list pos:line="120" pos:column="26">(<argument><expr><name pos:line="120" pos:column="27">dn<pos:position pos:line="120" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="120" pos:column="31">"cn=Database"<pos:position pos:line="120" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="120" pos:column="46">11<pos:position pos:line="120" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="120" pos:column="49"/></argument_list></call> <operator pos:line="120" pos:column="50">==<pos:position pos:line="120" pos:column="52"/></operator> <literal type="number" pos:line="120" pos:column="53">0<pos:position pos:line="120" pos:column="54"/></literal><operator pos:line="120" pos:column="54">)<pos:position pos:line="120" pos:column="55"/></operator> <operator pos:line="120" pos:column="56">&amp;&amp;<pos:position pos:line="120" pos:column="66"/></operator>
                 <operator pos:line="121" pos:column="18">(<pos:position pos:line="121" pos:column="19"/></operator><operator pos:line="121" pos:column="19">(<pos:position pos:line="121" pos:column="20"/></operator><name pos:line="121" pos:column="20">nc_list<pos:position pos:line="121" pos:column="27"/></name> <operator pos:line="121" pos:column="28">=<pos:position pos:line="121" pos:column="29"/></operator> <call><name pos:line="121" pos:column="30">ldap_get_values_len<pos:position pos:line="121" pos:column="49"/></name><argument_list pos:line="121" pos:column="49">(<argument><expr><name><name pos:line="121" pos:column="50">st<pos:position pos:line="121" pos:column="52"/></name><operator pos:line="121" pos:column="52">-&gt;<pos:position pos:line="121" pos:column="57"/></operator><name pos:line="121" pos:column="54">ld<pos:position pos:line="121" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="58">e<pos:position pos:line="121" pos:column="59"/></name></expr></argument>,
                                                 <argument><expr><literal type="string" pos:line="122" pos:column="50">"namingContexts"<pos:position pos:line="122" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="67"/></argument_list></call><operator pos:line="122" pos:column="67">)<pos:position pos:line="122" pos:column="68"/></operator> <operator pos:line="122" pos:column="69">!=<pos:position pos:line="122" pos:column="71"/></operator> <name pos:line="122" pos:column="72">NULL<pos:position pos:line="122" pos:column="76"/></name><operator pos:line="122" pos:column="76">)<pos:position pos:line="122" pos:column="77"/></operator></expr>)<pos:position pos:line="122" pos:column="78"/></condition><then pos:line="122" pos:column="78"> <block pos:line="122" pos:column="79">{
        <expr_stmt><expr><name pos:line="123" pos:column="9">nc_data<pos:position pos:line="123" pos:column="16"/></name> <operator pos:line="123" pos:column="17">=<pos:position pos:line="123" pos:column="18"/></operator> <operator pos:line="123" pos:column="19">*<pos:position pos:line="123" pos:column="20"/></operator><name><name pos:line="123" pos:column="20">nc_list<pos:position pos:line="123" pos:column="27"/></name><index pos:line="123" pos:column="27">[<expr><literal type="number" pos:line="123" pos:column="28">0<pos:position pos:line="123" pos:column="29"/></literal></expr>]<pos:position pos:line="123" pos:column="30"/></index></name></expr>;<pos:position pos:line="123" pos:column="31"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="124" pos:column="9">char<pos:position pos:line="124" pos:column="13"/></name></type> <name><name pos:line="124" pos:column="14">typeinst<pos:position pos:line="124" pos:column="22"/></name><index pos:line="124" pos:column="22">[<expr><name pos:line="124" pos:column="23">DATA_MAX_NAME_LEN<pos:position pos:line="124" pos:column="40"/></name></expr>]<pos:position pos:line="124" pos:column="41"/></index></name></decl>;<pos:position pos:line="124" pos:column="42"/></decl_stmt>

        <if pos:line="126" pos:column="9">if <condition pos:line="126" pos:column="12">(<expr><operator pos:line="126" pos:column="13">(<pos:position pos:line="126" pos:column="14"/></operator><name pos:line="126" pos:column="14">olmbdb_list<pos:position pos:line="126" pos:column="25"/></name> <operator pos:line="126" pos:column="26">=<pos:position pos:line="126" pos:column="27"/></operator>
                 <call><name pos:line="127" pos:column="18">ldap_get_values_len<pos:position pos:line="127" pos:column="37"/></name><argument_list pos:line="127" pos:column="37">(<argument><expr><name><name pos:line="127" pos:column="38">st<pos:position pos:line="127" pos:column="40"/></name><operator pos:line="127" pos:column="40">-&gt;<pos:position pos:line="127" pos:column="45"/></operator><name pos:line="127" pos:column="42">ld<pos:position pos:line="127" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="46">e<pos:position pos:line="127" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="127" pos:column="49">"olmBDBEntryCache"<pos:position pos:line="127" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="127" pos:column="68"/></argument_list></call><operator pos:line="127" pos:column="68">)<pos:position pos:line="127" pos:column="69"/></operator> <operator pos:line="127" pos:column="70">!=<pos:position pos:line="127" pos:column="72"/></operator> <name pos:line="127" pos:column="73">NULL<pos:position pos:line="127" pos:column="77"/></name></expr>)<pos:position pos:line="127" pos:column="78"/></condition><then pos:line="127" pos:column="78"> <block pos:line="127" pos:column="79">{
          <expr_stmt><expr><name pos:line="128" pos:column="11">olmbdb_data<pos:position pos:line="128" pos:column="22"/></name> <operator pos:line="128" pos:column="23">=<pos:position pos:line="128" pos:column="24"/></operator> <operator pos:line="128" pos:column="25">*<pos:position pos:line="128" pos:column="26"/></operator><name><name pos:line="128" pos:column="26">olmbdb_list<pos:position pos:line="128" pos:column="37"/></name><index pos:line="128" pos:column="37">[<expr><literal type="number" pos:line="128" pos:column="38">0<pos:position pos:line="128" pos:column="39"/></literal></expr>]<pos:position pos:line="128" pos:column="40"/></index></name></expr>;<pos:position pos:line="128" pos:column="41"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="129" pos:column="11">ssnprintf<pos:position pos:line="129" pos:column="20"/></name><argument_list pos:line="129" pos:column="20">(<argument><expr><name pos:line="129" pos:column="21">typeinst<pos:position pos:line="129" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="129" pos:column="31">sizeof<argument_list pos:line="129" pos:column="37">(<argument><expr><name pos:line="129" pos:column="38">typeinst<pos:position pos:line="129" pos:column="46"/></name></expr></argument>)<pos:position pos:line="129" pos:column="47"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="129" pos:column="49">"bdbentrycache-%s"<pos:position pos:line="129" pos:column="67"/></literal></expr></argument>,
                    <argument><expr><name><name pos:line="130" pos:column="21">nc_data<pos:position pos:line="130" pos:column="28"/></name><operator pos:line="130" pos:column="28">.<pos:position pos:line="130" pos:column="29"/></operator><name pos:line="130" pos:column="29">bv_val<pos:position pos:line="130" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="130" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="37"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="131" pos:column="11">cldap_submit_gauge<pos:position pos:line="131" pos:column="29"/></name><argument_list pos:line="131" pos:column="29">(<argument><expr><literal type="string" pos:line="131" pos:column="30">"cache_size"<pos:position pos:line="131" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="131" pos:column="44">typeinst<pos:position pos:line="131" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="131" pos:column="54">atoll<pos:position pos:line="131" pos:column="59"/></name><argument_list pos:line="131" pos:column="59">(<argument><expr><name><name pos:line="131" pos:column="60">olmbdb_data<pos:position pos:line="131" pos:column="71"/></name><operator pos:line="131" pos:column="71">.<pos:position pos:line="131" pos:column="72"/></operator><name pos:line="131" pos:column="72">bv_val<pos:position pos:line="131" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="131" pos:column="79"/></argument_list></call></expr></argument>,
                             <argument><expr><name pos:line="132" pos:column="30">st<pos:position pos:line="132" pos:column="32"/></name></expr></argument>)<pos:position pos:line="132" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="34"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="133" pos:column="11">ldap_value_free_len<pos:position pos:line="133" pos:column="30"/></name><argument_list pos:line="133" pos:column="30">(<argument><expr><name pos:line="133" pos:column="31">olmbdb_list<pos:position pos:line="133" pos:column="42"/></name></expr></argument>)<pos:position pos:line="133" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="134" pos:column="10"/></block></then></if>

        <if pos:line="136" pos:column="9">if <condition pos:line="136" pos:column="12">(<expr><operator pos:line="136" pos:column="13">(<pos:position pos:line="136" pos:column="14"/></operator><name pos:line="136" pos:column="14">olmbdb_list<pos:position pos:line="136" pos:column="25"/></name> <operator pos:line="136" pos:column="26">=<pos:position pos:line="136" pos:column="27"/></operator> <call><name pos:line="136" pos:column="28">ldap_get_values_len<pos:position pos:line="136" pos:column="47"/></name><argument_list pos:line="136" pos:column="47">(<argument><expr><name><name pos:line="136" pos:column="48">st<pos:position pos:line="136" pos:column="50"/></name><operator pos:line="136" pos:column="50">-&gt;<pos:position pos:line="136" pos:column="55"/></operator><name pos:line="136" pos:column="52">ld<pos:position pos:line="136" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="136" pos:column="56">e<pos:position pos:line="136" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="136" pos:column="59">"olmBDBDNCache"<pos:position pos:line="136" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="136" pos:column="75"/></argument_list></call><operator pos:line="136" pos:column="75">)<pos:position pos:line="136" pos:column="76"/></operator> <operator pos:line="136" pos:column="77">!=<pos:position pos:line="136" pos:column="79"/></operator>
            <name pos:line="137" pos:column="13">NULL<pos:position pos:line="137" pos:column="17"/></name></expr>)<pos:position pos:line="137" pos:column="18"/></condition><then pos:line="137" pos:column="18"> <block pos:line="137" pos:column="19">{
          <expr_stmt><expr><name pos:line="138" pos:column="11">olmbdb_data<pos:position pos:line="138" pos:column="22"/></name> <operator pos:line="138" pos:column="23">=<pos:position pos:line="138" pos:column="24"/></operator> <operator pos:line="138" pos:column="25">*<pos:position pos:line="138" pos:column="26"/></operator><name><name pos:line="138" pos:column="26">olmbdb_list<pos:position pos:line="138" pos:column="37"/></name><index pos:line="138" pos:column="37">[<expr><literal type="number" pos:line="138" pos:column="38">0<pos:position pos:line="138" pos:column="39"/></literal></expr>]<pos:position pos:line="138" pos:column="40"/></index></name></expr>;<pos:position pos:line="138" pos:column="41"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="139" pos:column="11">ssnprintf<pos:position pos:line="139" pos:column="20"/></name><argument_list pos:line="139" pos:column="20">(<argument><expr><name pos:line="139" pos:column="21">typeinst<pos:position pos:line="139" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="139" pos:column="31">sizeof<argument_list pos:line="139" pos:column="37">(<argument><expr><name pos:line="139" pos:column="38">typeinst<pos:position pos:line="139" pos:column="46"/></name></expr></argument>)<pos:position pos:line="139" pos:column="47"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="139" pos:column="49">"bdbdncache-%s"<pos:position pos:line="139" pos:column="64"/></literal></expr></argument>,
                    <argument><expr><name><name pos:line="140" pos:column="21">nc_data<pos:position pos:line="140" pos:column="28"/></name><operator pos:line="140" pos:column="28">.<pos:position pos:line="140" pos:column="29"/></operator><name pos:line="140" pos:column="29">bv_val<pos:position pos:line="140" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="140" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="37"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="141" pos:column="11">cldap_submit_gauge<pos:position pos:line="141" pos:column="29"/></name><argument_list pos:line="141" pos:column="29">(<argument><expr><literal type="string" pos:line="141" pos:column="30">"cache_size"<pos:position pos:line="141" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="141" pos:column="44">typeinst<pos:position pos:line="141" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="141" pos:column="54">atoll<pos:position pos:line="141" pos:column="59"/></name><argument_list pos:line="141" pos:column="59">(<argument><expr><name><name pos:line="141" pos:column="60">olmbdb_data<pos:position pos:line="141" pos:column="71"/></name><operator pos:line="141" pos:column="71">.<pos:position pos:line="141" pos:column="72"/></operator><name pos:line="141" pos:column="72">bv_val<pos:position pos:line="141" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="141" pos:column="79"/></argument_list></call></expr></argument>,
                             <argument><expr><name pos:line="142" pos:column="30">st<pos:position pos:line="142" pos:column="32"/></name></expr></argument>)<pos:position pos:line="142" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="34"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="143" pos:column="11">ldap_value_free_len<pos:position pos:line="143" pos:column="30"/></name><argument_list pos:line="143" pos:column="30">(<argument><expr><name pos:line="143" pos:column="31">olmbdb_list<pos:position pos:line="143" pos:column="42"/></name></expr></argument>)<pos:position pos:line="143" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="144" pos:column="10"/></block></then></if>

        <if pos:line="146" pos:column="9">if <condition pos:line="146" pos:column="12">(<expr><operator pos:line="146" pos:column="13">(<pos:position pos:line="146" pos:column="14"/></operator><name pos:line="146" pos:column="14">olmbdb_list<pos:position pos:line="146" pos:column="25"/></name> <operator pos:line="146" pos:column="26">=<pos:position pos:line="146" pos:column="27"/></operator> <call><name pos:line="146" pos:column="28">ldap_get_values_len<pos:position pos:line="146" pos:column="47"/></name><argument_list pos:line="146" pos:column="47">(<argument><expr><name><name pos:line="146" pos:column="48">st<pos:position pos:line="146" pos:column="50"/></name><operator pos:line="146" pos:column="50">-&gt;<pos:position pos:line="146" pos:column="55"/></operator><name pos:line="146" pos:column="52">ld<pos:position pos:line="146" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="146" pos:column="56">e<pos:position pos:line="146" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="146" pos:column="59">"olmBDBIDLCache"<pos:position pos:line="146" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="146" pos:column="76"/></argument_list></call><operator pos:line="146" pos:column="76">)<pos:position pos:line="146" pos:column="77"/></operator> <operator pos:line="146" pos:column="78">!=<pos:position pos:line="146" pos:column="80"/></operator>
            <name pos:line="147" pos:column="13">NULL<pos:position pos:line="147" pos:column="17"/></name></expr>)<pos:position pos:line="147" pos:column="18"/></condition><then pos:line="147" pos:column="18"> <block pos:line="147" pos:column="19">{
          <expr_stmt><expr><name pos:line="148" pos:column="11">olmbdb_data<pos:position pos:line="148" pos:column="22"/></name> <operator pos:line="148" pos:column="23">=<pos:position pos:line="148" pos:column="24"/></operator> <operator pos:line="148" pos:column="25">*<pos:position pos:line="148" pos:column="26"/></operator><name><name pos:line="148" pos:column="26">olmbdb_list<pos:position pos:line="148" pos:column="37"/></name><index pos:line="148" pos:column="37">[<expr><literal type="number" pos:line="148" pos:column="38">0<pos:position pos:line="148" pos:column="39"/></literal></expr>]<pos:position pos:line="148" pos:column="40"/></index></name></expr>;<pos:position pos:line="148" pos:column="41"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="149" pos:column="11">ssnprintf<pos:position pos:line="149" pos:column="20"/></name><argument_list pos:line="149" pos:column="20">(<argument><expr><name pos:line="149" pos:column="21">typeinst<pos:position pos:line="149" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="149" pos:column="31">sizeof<argument_list pos:line="149" pos:column="37">(<argument><expr><name pos:line="149" pos:column="38">typeinst<pos:position pos:line="149" pos:column="46"/></name></expr></argument>)<pos:position pos:line="149" pos:column="47"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="149" pos:column="49">"bdbidlcache-%s"<pos:position pos:line="149" pos:column="65"/></literal></expr></argument>,
                    <argument><expr><name><name pos:line="150" pos:column="21">nc_data<pos:position pos:line="150" pos:column="28"/></name><operator pos:line="150" pos:column="28">.<pos:position pos:line="150" pos:column="29"/></operator><name pos:line="150" pos:column="29">bv_val<pos:position pos:line="150" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="150" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="37"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="151" pos:column="11">cldap_submit_gauge<pos:position pos:line="151" pos:column="29"/></name><argument_list pos:line="151" pos:column="29">(<argument><expr><literal type="string" pos:line="151" pos:column="30">"cache_size"<pos:position pos:line="151" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="151" pos:column="44">typeinst<pos:position pos:line="151" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="151" pos:column="54">atoll<pos:position pos:line="151" pos:column="59"/></name><argument_list pos:line="151" pos:column="59">(<argument><expr><name><name pos:line="151" pos:column="60">olmbdb_data<pos:position pos:line="151" pos:column="71"/></name><operator pos:line="151" pos:column="71">.<pos:position pos:line="151" pos:column="72"/></operator><name pos:line="151" pos:column="72">bv_val<pos:position pos:line="151" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="151" pos:column="79"/></argument_list></call></expr></argument>,
                             <argument><expr><name pos:line="152" pos:column="30">st<pos:position pos:line="152" pos:column="32"/></name></expr></argument>)<pos:position pos:line="152" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="34"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="153" pos:column="11">ldap_value_free_len<pos:position pos:line="153" pos:column="30"/></name><argument_list pos:line="153" pos:column="30">(<argument><expr><name pos:line="153" pos:column="31">olmbdb_list<pos:position pos:line="153" pos:column="42"/></name></expr></argument>)<pos:position pos:line="153" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="154" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="156" pos:column="9">ldap_value_free_len<pos:position pos:line="156" pos:column="28"/></name><argument_list pos:line="156" pos:column="28">(<argument><expr><name pos:line="156" pos:column="29">nc_list<pos:position pos:line="156" pos:column="36"/></name></expr></argument>)<pos:position pos:line="156" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="38"/></expr_stmt>
      }<pos:position pos:line="157" pos:column="8"/></block></then></if></elseif> <elseif pos:line="157" pos:column="9">else <if pos:line="157" pos:column="14">if <condition pos:line="157" pos:column="17">(<expr><call><name pos:line="157" pos:column="18">strcmp<pos:position pos:line="157" pos:column="24"/></name><argument_list pos:line="157" pos:column="24">(<argument><expr><name pos:line="157" pos:column="25">dn<pos:position pos:line="157" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="157" pos:column="29">"cn=Bytes,cn=Statistics,cn=Monitor"<pos:position pos:line="157" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="157" pos:column="65"/></argument_list></call> <operator pos:line="157" pos:column="66">==<pos:position pos:line="157" pos:column="68"/></operator> <literal type="number" pos:line="157" pos:column="69">0<pos:position pos:line="157" pos:column="70"/></literal></expr>)<pos:position pos:line="157" pos:column="71"/></condition><then pos:line="157" pos:column="71"> <block pos:line="157" pos:column="72">{
        <expr_stmt><expr><call><name pos:line="158" pos:column="9">cldap_submit_derive<pos:position pos:line="158" pos:column="28"/></name><argument_list pos:line="158" pos:column="28">(<argument><expr><literal type="string" pos:line="158" pos:column="29">"derive"<pos:position pos:line="158" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="158" pos:column="39">"statistics-bytes"<pos:position pos:line="158" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="158" pos:column="59">counter<pos:position pos:line="158" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="68">st<pos:position pos:line="158" pos:column="70"/></name></expr></argument>)<pos:position pos:line="158" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="72"/></expr_stmt>
      }<pos:position pos:line="159" pos:column="8"/></block></then></if></elseif> <elseif pos:line="159" pos:column="9">else <if pos:line="159" pos:column="14">if <condition pos:line="159" pos:column="17">(<expr><call><name pos:line="159" pos:column="18">strcmp<pos:position pos:line="159" pos:column="24"/></name><argument_list pos:line="159" pos:column="24">(<argument><expr><name pos:line="159" pos:column="25">dn<pos:position pos:line="159" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="159" pos:column="29">"cn=PDU,cn=Statistics,cn=Monitor"<pos:position pos:line="159" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="159" pos:column="63"/></argument_list></call> <operator pos:line="159" pos:column="64">==<pos:position pos:line="159" pos:column="66"/></operator> <literal type="number" pos:line="159" pos:column="67">0<pos:position pos:line="159" pos:column="68"/></literal></expr>)<pos:position pos:line="159" pos:column="69"/></condition><then pos:line="159" pos:column="69"> <block pos:line="159" pos:column="70">{
        <expr_stmt><expr><call><name pos:line="160" pos:column="9">cldap_submit_derive<pos:position pos:line="160" pos:column="28"/></name><argument_list pos:line="160" pos:column="28">(<argument><expr><literal type="string" pos:line="160" pos:column="29">"derive"<pos:position pos:line="160" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="160" pos:column="39">"statistics-pdu"<pos:position pos:line="160" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="160" pos:column="57">counter<pos:position pos:line="160" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="66">st<pos:position pos:line="160" pos:column="68"/></name></expr></argument>)<pos:position pos:line="160" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="70"/></expr_stmt>
      }<pos:position pos:line="161" pos:column="8"/></block></then></if></elseif> <elseif pos:line="161" pos:column="9">else <if pos:line="161" pos:column="14">if <condition pos:line="161" pos:column="17">(<expr><call><name pos:line="161" pos:column="18">strcmp<pos:position pos:line="161" pos:column="24"/></name><argument_list pos:line="161" pos:column="24">(<argument><expr><name pos:line="161" pos:column="25">dn<pos:position pos:line="161" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="161" pos:column="29">"cn=Entries,cn=Statistics,cn=Monitor"<pos:position pos:line="161" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="161" pos:column="67"/></argument_list></call> <operator pos:line="161" pos:column="68">==<pos:position pos:line="161" pos:column="70"/></operator> <literal type="number" pos:line="161" pos:column="71">0<pos:position pos:line="161" pos:column="72"/></literal></expr>)<pos:position pos:line="161" pos:column="73"/></condition><then pos:line="161" pos:column="73"> <block pos:line="161" pos:column="74">{
        <expr_stmt><expr><call><name pos:line="162" pos:column="9">cldap_submit_derive<pos:position pos:line="162" pos:column="28"/></name><argument_list pos:line="162" pos:column="28">(<argument><expr><literal type="string" pos:line="162" pos:column="29">"derive"<pos:position pos:line="162" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="162" pos:column="39">"statistics-entries"<pos:position pos:line="162" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="162" pos:column="61">counter<pos:position pos:line="162" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="70">st<pos:position pos:line="162" pos:column="72"/></name></expr></argument>)<pos:position pos:line="162" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="74"/></expr_stmt>
      }<pos:position pos:line="163" pos:column="8"/></block></then></if></elseif> <elseif pos:line="163" pos:column="9">else <if pos:line="163" pos:column="14">if <condition pos:line="163" pos:column="17">(<expr><call><name pos:line="163" pos:column="18">strcmp<pos:position pos:line="163" pos:column="24"/></name><argument_list pos:line="163" pos:column="24">(<argument><expr><name pos:line="163" pos:column="25">dn<pos:position pos:line="163" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="163" pos:column="29">"cn=Referrals,cn=Statistics,cn=Monitor"<pos:position pos:line="163" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="163" pos:column="69"/></argument_list></call> <operator pos:line="163" pos:column="70">==<pos:position pos:line="163" pos:column="72"/></operator> <literal type="number" pos:line="163" pos:column="73">0<pos:position pos:line="163" pos:column="74"/></literal></expr>)<pos:position pos:line="163" pos:column="75"/></condition><then pos:line="163" pos:column="75"> <block pos:line="163" pos:column="76">{
        <expr_stmt><expr><call><name pos:line="164" pos:column="9">cldap_submit_derive<pos:position pos:line="164" pos:column="28"/></name><argument_list pos:line="164" pos:column="28">(<argument><expr><literal type="string" pos:line="164" pos:column="29">"derive"<pos:position pos:line="164" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="164" pos:column="39">"statistics-referrals"<pos:position pos:line="164" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="164" pos:column="63">counter<pos:position pos:line="164" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="72">st<pos:position pos:line="164" pos:column="74"/></name></expr></argument>)<pos:position pos:line="164" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="76"/></expr_stmt>
      }<pos:position pos:line="165" pos:column="8"/></block></then></if></elseif> <elseif pos:line="165" pos:column="9">else <if pos:line="165" pos:column="14">if <condition pos:line="165" pos:column="17">(<expr><call><name pos:line="165" pos:column="18">strcmp<pos:position pos:line="165" pos:column="24"/></name><argument_list pos:line="165" pos:column="24">(<argument><expr><name pos:line="165" pos:column="25">dn<pos:position pos:line="165" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="165" pos:column="29">"cn=Open,cn=Threads,cn=Monitor"<pos:position pos:line="165" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="165" pos:column="61"/></argument_list></call> <operator pos:line="165" pos:column="62">==<pos:position pos:line="165" pos:column="64"/></operator> <literal type="number" pos:line="165" pos:column="65">0<pos:position pos:line="165" pos:column="66"/></literal></expr>)<pos:position pos:line="165" pos:column="67"/></condition><then pos:line="165" pos:column="67"> <block pos:line="165" pos:column="68">{
        <expr_stmt><expr><call><name pos:line="166" pos:column="9">cldap_submit_gauge<pos:position pos:line="166" pos:column="27"/></name><argument_list pos:line="166" pos:column="27">(<argument><expr><literal type="string" pos:line="166" pos:column="28">"threads"<pos:position pos:line="166" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="166" pos:column="39">"threads-open"<pos:position pos:line="166" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="166" pos:column="55">info<pos:position pos:line="166" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="61">st<pos:position pos:line="166" pos:column="63"/></name></expr></argument>)<pos:position pos:line="166" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="65"/></expr_stmt>
      }<pos:position pos:line="167" pos:column="8"/></block></then></if></elseif> <elseif pos:line="167" pos:column="9">else <if pos:line="167" pos:column="14">if <condition pos:line="167" pos:column="17">(<expr><call><name pos:line="167" pos:column="18">strcmp<pos:position pos:line="167" pos:column="24"/></name><argument_list pos:line="167" pos:column="24">(<argument><expr><name pos:line="167" pos:column="25">dn<pos:position pos:line="167" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="167" pos:column="29">"cn=Starting,cn=Threads,cn=Monitor"<pos:position pos:line="167" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="167" pos:column="65"/></argument_list></call> <operator pos:line="167" pos:column="66">==<pos:position pos:line="167" pos:column="68"/></operator> <literal type="number" pos:line="167" pos:column="69">0<pos:position pos:line="167" pos:column="70"/></literal></expr>)<pos:position pos:line="167" pos:column="71"/></condition><then pos:line="167" pos:column="71"> <block pos:line="167" pos:column="72">{
        <expr_stmt><expr><call><name pos:line="168" pos:column="9">cldap_submit_gauge<pos:position pos:line="168" pos:column="27"/></name><argument_list pos:line="168" pos:column="27">(<argument><expr><literal type="string" pos:line="168" pos:column="28">"threads"<pos:position pos:line="168" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="168" pos:column="39">"threads-starting"<pos:position pos:line="168" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="168" pos:column="59">info<pos:position pos:line="168" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="168" pos:column="65">st<pos:position pos:line="168" pos:column="67"/></name></expr></argument>)<pos:position pos:line="168" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="69"/></expr_stmt>
      }<pos:position pos:line="169" pos:column="8"/></block></then></if></elseif> <elseif pos:line="169" pos:column="9">else <if pos:line="169" pos:column="14">if <condition pos:line="169" pos:column="17">(<expr><call><name pos:line="169" pos:column="18">strcmp<pos:position pos:line="169" pos:column="24"/></name><argument_list pos:line="169" pos:column="24">(<argument><expr><name pos:line="169" pos:column="25">dn<pos:position pos:line="169" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="169" pos:column="29">"cn=Active,cn=Threads,cn=Monitor"<pos:position pos:line="169" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="169" pos:column="63"/></argument_list></call> <operator pos:line="169" pos:column="64">==<pos:position pos:line="169" pos:column="66"/></operator> <literal type="number" pos:line="169" pos:column="67">0<pos:position pos:line="169" pos:column="68"/></literal></expr>)<pos:position pos:line="169" pos:column="69"/></condition><then pos:line="169" pos:column="69"> <block pos:line="169" pos:column="70">{
        <expr_stmt><expr><call><name pos:line="170" pos:column="9">cldap_submit_gauge<pos:position pos:line="170" pos:column="27"/></name><argument_list pos:line="170" pos:column="27">(<argument><expr><literal type="string" pos:line="170" pos:column="28">"threads"<pos:position pos:line="170" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="170" pos:column="39">"threads-active"<pos:position pos:line="170" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="170" pos:column="57">info<pos:position pos:line="170" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="170" pos:column="63">st<pos:position pos:line="170" pos:column="65"/></name></expr></argument>)<pos:position pos:line="170" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="67"/></expr_stmt>
      }<pos:position pos:line="171" pos:column="8"/></block></then></if></elseif> <elseif pos:line="171" pos:column="9">else <if pos:line="171" pos:column="14">if <condition pos:line="171" pos:column="17">(<expr><call><name pos:line="171" pos:column="18">strcmp<pos:position pos:line="171" pos:column="24"/></name><argument_list pos:line="171" pos:column="24">(<argument><expr><name pos:line="171" pos:column="25">dn<pos:position pos:line="171" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="171" pos:column="29">"cn=Pending,cn=Threads,cn=Monitor"<pos:position pos:line="171" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="171" pos:column="64"/></argument_list></call> <operator pos:line="171" pos:column="65">==<pos:position pos:line="171" pos:column="67"/></operator> <literal type="number" pos:line="171" pos:column="68">0<pos:position pos:line="171" pos:column="69"/></literal></expr>)<pos:position pos:line="171" pos:column="70"/></condition><then pos:line="171" pos:column="70"> <block pos:line="171" pos:column="71">{
        <expr_stmt><expr><call><name pos:line="172" pos:column="9">cldap_submit_gauge<pos:position pos:line="172" pos:column="27"/></name><argument_list pos:line="172" pos:column="27">(<argument><expr><literal type="string" pos:line="172" pos:column="28">"threads"<pos:position pos:line="172" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="172" pos:column="39">"threads-pending"<pos:position pos:line="172" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="172" pos:column="58">info<pos:position pos:line="172" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="172" pos:column="64">st<pos:position pos:line="172" pos:column="66"/></name></expr></argument>)<pos:position pos:line="172" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="68"/></expr_stmt>
      }<pos:position pos:line="173" pos:column="8"/></block></then></if></elseif> <elseif pos:line="173" pos:column="9">else <if pos:line="173" pos:column="14">if <condition pos:line="173" pos:column="17">(<expr><call><name pos:line="173" pos:column="18">strcmp<pos:position pos:line="173" pos:column="24"/></name><argument_list pos:line="173" pos:column="24">(<argument><expr><name pos:line="173" pos:column="25">dn<pos:position pos:line="173" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="173" pos:column="29">"cn=Backload,cn=Threads,cn=Monitor"<pos:position pos:line="173" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="173" pos:column="65"/></argument_list></call> <operator pos:line="173" pos:column="66">==<pos:position pos:line="173" pos:column="68"/></operator> <literal type="number" pos:line="173" pos:column="69">0<pos:position pos:line="173" pos:column="70"/></literal></expr>)<pos:position pos:line="173" pos:column="71"/></condition><then pos:line="173" pos:column="71"> <block pos:line="173" pos:column="72">{
        <expr_stmt><expr><call><name pos:line="174" pos:column="9">cldap_submit_gauge<pos:position pos:line="174" pos:column="27"/></name><argument_list pos:line="174" pos:column="27">(<argument><expr><literal type="string" pos:line="174" pos:column="28">"threads"<pos:position pos:line="174" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="174" pos:column="39">"threads-backload"<pos:position pos:line="174" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="174" pos:column="59">info<pos:position pos:line="174" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="174" pos:column="65">st<pos:position pos:line="174" pos:column="67"/></name></expr></argument>)<pos:position pos:line="174" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="69"/></expr_stmt>
      }<pos:position pos:line="175" pos:column="8"/></block></then></if></elseif> <elseif pos:line="175" pos:column="9">else <if pos:line="175" pos:column="14">if <condition pos:line="175" pos:column="17">(<expr><call><name pos:line="175" pos:column="18">strcmp<pos:position pos:line="175" pos:column="24"/></name><argument_list pos:line="175" pos:column="24">(<argument><expr><name pos:line="175" pos:column="25">dn<pos:position pos:line="175" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="175" pos:column="29">"cn=Read,cn=Waiters,cn=Monitor"<pos:position pos:line="175" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="175" pos:column="61"/></argument_list></call> <operator pos:line="175" pos:column="62">==<pos:position pos:line="175" pos:column="64"/></operator> <literal type="number" pos:line="175" pos:column="65">0<pos:position pos:line="175" pos:column="66"/></literal></expr>)<pos:position pos:line="175" pos:column="67"/></condition><then pos:line="175" pos:column="67"> <block pos:line="175" pos:column="68">{
        <expr_stmt><expr><call><name pos:line="176" pos:column="9">cldap_submit_derive<pos:position pos:line="176" pos:column="28"/></name><argument_list pos:line="176" pos:column="28">(<argument><expr><literal type="string" pos:line="176" pos:column="29">"derive"<pos:position pos:line="176" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="176" pos:column="39">"waiters-read"<pos:position pos:line="176" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="176" pos:column="55">counter<pos:position pos:line="176" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="176" pos:column="64">st<pos:position pos:line="176" pos:column="66"/></name></expr></argument>)<pos:position pos:line="176" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="68"/></expr_stmt>
      }<pos:position pos:line="177" pos:column="8"/></block></then></if></elseif> <elseif pos:line="177" pos:column="9">else <if pos:line="177" pos:column="14">if <condition pos:line="177" pos:column="17">(<expr><call><name pos:line="177" pos:column="18">strcmp<pos:position pos:line="177" pos:column="24"/></name><argument_list pos:line="177" pos:column="24">(<argument><expr><name pos:line="177" pos:column="25">dn<pos:position pos:line="177" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="177" pos:column="29">"cn=Write,cn=Waiters,cn=Monitor"<pos:position pos:line="177" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="177" pos:column="62"/></argument_list></call> <operator pos:line="177" pos:column="63">==<pos:position pos:line="177" pos:column="65"/></operator> <literal type="number" pos:line="177" pos:column="66">0<pos:position pos:line="177" pos:column="67"/></literal></expr>)<pos:position pos:line="177" pos:column="68"/></condition><then pos:line="177" pos:column="68"> <block pos:line="177" pos:column="69">{
        <expr_stmt><expr><call><name pos:line="178" pos:column="9">cldap_submit_derive<pos:position pos:line="178" pos:column="28"/></name><argument_list pos:line="178" pos:column="28">(<argument><expr><literal type="string" pos:line="178" pos:column="29">"derive"<pos:position pos:line="178" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="178" pos:column="39">"waiters-write"<pos:position pos:line="178" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="178" pos:column="56">counter<pos:position pos:line="178" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="178" pos:column="65">st<pos:position pos:line="178" pos:column="67"/></name></expr></argument>)<pos:position pos:line="178" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="69"/></expr_stmt>
      }<pos:position pos:line="179" pos:column="8"/></block></then></if></elseif></if>

      <expr_stmt><expr><call><name pos:line="181" pos:column="7">ldap_value_free_len<pos:position pos:line="181" pos:column="26"/></name><argument_list pos:line="181" pos:column="26">(<argument><expr><name pos:line="181" pos:column="27">counter_list<pos:position pos:line="181" pos:column="39"/></name></expr></argument>)<pos:position pos:line="181" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="182" pos:column="7">ldap_value_free_len<pos:position pos:line="182" pos:column="26"/></name><argument_list pos:line="182" pos:column="26">(<argument><expr><name pos:line="182" pos:column="27">opc_list<pos:position pos:line="182" pos:column="35"/></name></expr></argument>)<pos:position pos:line="182" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="37"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="183" pos:column="7">ldap_value_free_len<pos:position pos:line="183" pos:column="26"/></name><argument_list pos:line="183" pos:column="26">(<argument><expr><name pos:line="183" pos:column="27">opi_list<pos:position pos:line="183" pos:column="35"/></name></expr></argument>)<pos:position pos:line="183" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="37"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="184" pos:column="7">ldap_value_free_len<pos:position pos:line="184" pos:column="26"/></name><argument_list pos:line="184" pos:column="26">(<argument><expr><name pos:line="184" pos:column="27">info_list<pos:position pos:line="184" pos:column="36"/></name></expr></argument>)<pos:position pos:line="184" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="185" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="187" pos:column="5">ldap_memfree<pos:position pos:line="187" pos:column="17"/></name><argument_list pos:line="187" pos:column="17">(<argument><expr><name pos:line="187" pos:column="18">dn<pos:position pos:line="187" pos:column="20"/></name></expr></argument>)<pos:position pos:line="187" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="188" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="190" pos:column="3">ldap_msgfree<pos:position pos:line="190" pos:column="15"/></name><argument_list pos:line="190" pos:column="15">(<argument><expr><name pos:line="190" pos:column="16">result<pos:position pos:line="190" pos:column="22"/></name></expr></argument>)<pos:position pos:line="190" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="24"/></expr_stmt>
  <return pos:line="191" pos:column="3">return <expr><operator pos:line="191" pos:column="10">(<pos:position pos:line="191" pos:column="11"/></operator><literal type="number" pos:line="191" pos:column="11">0<pos:position pos:line="191" pos:column="12"/></literal><operator pos:line="191" pos:column="12">)<pos:position pos:line="191" pos:column="13"/></operator></expr>;<pos:position pos:line="191" pos:column="14"/></return>
}<pos:position pos:line="192" pos:column="2"/></block></function></unit>

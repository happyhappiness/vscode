<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1216_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">pinba_socket_t<pos:position pos:line="1" pos:column="22"/></name> <modifier pos:line="1" pos:column="23">*<pos:position pos:line="1" pos:column="24"/></modifier></type><name pos:line="1" pos:column="24">pinba_socket_open<pos:position pos:line="1" pos:column="41"/></name> <parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">node<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="61">/* {{{ */</comment>
    <parameter><decl><type><specifier pos:line="2" pos:column="5">const<pos:position pos:line="2" pos:column="10"/></specifier> <name pos:line="2" pos:column="11">char<pos:position pos:line="2" pos:column="15"/></name> <modifier pos:line="2" pos:column="16">*<pos:position pos:line="2" pos:column="17"/></modifier></type><name pos:line="2" pos:column="17">service<pos:position pos:line="2" pos:column="24"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="25"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">pinba_socket_t<pos:position pos:line="4" pos:column="17"/></name> <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">s<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">addrinfo<pos:position pos:line="5" pos:column="18"/></name></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">ai_list<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">addrinfo<pos:position pos:line="6" pos:column="18"/></name></name> <modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier></type><name pos:line="6" pos:column="20">ai_ptr<pos:position pos:line="6" pos:column="26"/></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">addrinfo<pos:position pos:line="7" pos:column="18"/></name></name></type>  <name pos:line="7" pos:column="20">ai_hints<pos:position pos:line="7" pos:column="28"/></name></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">status<pos:position pos:line="8" pos:column="13"/></name></decl>;<pos:position pos:line="8" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="10" pos:column="3">memset<pos:position pos:line="10" pos:column="9"/></name> <argument_list pos:line="10" pos:column="10">(<argument><expr><operator pos:line="10" pos:column="11">&amp;<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="12">ai_hints<pos:position pos:line="10" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="22">0<pos:position pos:line="10" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="25">sizeof <argument_list pos:line="10" pos:column="32">(<argument><expr><name pos:line="10" pos:column="33">ai_hints<pos:position pos:line="10" pos:column="41"/></name></expr></argument>)<pos:position pos:line="10" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="11" pos:column="3">ai_hints<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">.<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="12">ai_flags<pos:position pos:line="11" pos:column="20"/></name></name> <operator pos:line="11" pos:column="21">=<pos:position pos:line="11" pos:column="22"/></operator> <name pos:line="11" pos:column="23">AI_PASSIVE<pos:position pos:line="11" pos:column="33"/></name></expr>;<pos:position pos:line="11" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="12" pos:column="3">ai_hints<pos:position pos:line="12" pos:column="11"/></name><operator pos:line="12" pos:column="11">.<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="12">ai_family<pos:position pos:line="12" pos:column="21"/></name></name> <operator pos:line="12" pos:column="22">=<pos:position pos:line="12" pos:column="23"/></operator> <name pos:line="12" pos:column="24">AF_UNSPEC<pos:position pos:line="12" pos:column="33"/></name></expr>;<pos:position pos:line="12" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="13" pos:column="3">ai_hints<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">.<pos:position pos:line="13" pos:column="12"/></operator><name pos:line="13" pos:column="12">ai_socktype<pos:position pos:line="13" pos:column="23"/></name></name> <operator pos:line="13" pos:column="24">=<pos:position pos:line="13" pos:column="25"/></operator> <name pos:line="13" pos:column="26">SOCK_DGRAM<pos:position pos:line="13" pos:column="36"/></name></expr>;<pos:position pos:line="13" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="14" pos:column="3">ai_hints<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">.<pos:position pos:line="14" pos:column="12"/></operator><name pos:line="14" pos:column="12">ai_addr<pos:position pos:line="14" pos:column="19"/></name></name> <operator pos:line="14" pos:column="20">=<pos:position pos:line="14" pos:column="21"/></operator> <name pos:line="14" pos:column="22">NULL<pos:position pos:line="14" pos:column="26"/></name></expr>;<pos:position pos:line="14" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="15" pos:column="3">ai_hints<pos:position pos:line="15" pos:column="11"/></name><operator pos:line="15" pos:column="11">.<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="12">ai_canonname<pos:position pos:line="15" pos:column="24"/></name></name> <operator pos:line="15" pos:column="25">=<pos:position pos:line="15" pos:column="26"/></operator> <name pos:line="15" pos:column="27">NULL<pos:position pos:line="15" pos:column="31"/></name></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">ai_hints<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">.<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="12">ai_next<pos:position pos:line="16" pos:column="19"/></name></name> <operator pos:line="16" pos:column="20">=<pos:position pos:line="16" pos:column="21"/></operator> <name pos:line="16" pos:column="22">NULL<pos:position pos:line="16" pos:column="26"/></name></expr>;<pos:position pos:line="16" pos:column="27"/></expr_stmt>

  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name pos:line="18" pos:column="7">node<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">==<pos:position pos:line="18" pos:column="14"/></operator> <name pos:line="18" pos:column="15">NULL<pos:position pos:line="18" pos:column="19"/></name></expr>)<pos:position pos:line="18" pos:column="20"/></condition><then pos:line="18" pos:column="20">
    <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="5">node<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <name pos:line="19" pos:column="12">PINBA_DEFAULT_NODE<pos:position pos:line="19" pos:column="30"/></name></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt></block></then></if>

  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><name pos:line="21" pos:column="7">service<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">==<pos:position pos:line="21" pos:column="17"/></operator> <name pos:line="21" pos:column="18">NULL<pos:position pos:line="21" pos:column="22"/></name></expr>)<pos:position pos:line="21" pos:column="23"/></condition><then pos:line="21" pos:column="23">
    <block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="5">service<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <name pos:line="22" pos:column="15">PINBA_DEFAULT_SERVICE<pos:position pos:line="22" pos:column="36"/></name></expr>;<pos:position pos:line="22" pos:column="37"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="24" pos:column="3">ai_list<pos:position pos:line="24" pos:column="10"/></name> <operator pos:line="24" pos:column="11">=<pos:position pos:line="24" pos:column="12"/></operator> <name pos:line="24" pos:column="13">NULL<pos:position pos:line="24" pos:column="17"/></name></expr>;<pos:position pos:line="24" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name pos:line="25" pos:column="3">status<pos:position pos:line="25" pos:column="9"/></name> <operator pos:line="25" pos:column="10">=<pos:position pos:line="25" pos:column="11"/></operator> <call><name pos:line="25" pos:column="12">getaddrinfo<pos:position pos:line="25" pos:column="23"/></name> <argument_list pos:line="25" pos:column="24">(<argument><expr><name pos:line="25" pos:column="25">node<pos:position pos:line="25" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="31">service<pos:position pos:line="25" pos:column="38"/></name></expr></argument>,
      <argument><expr><operator pos:line="26" pos:column="7">&amp;<pos:position pos:line="26" pos:column="12"/></operator><name pos:line="26" pos:column="8">ai_hints<pos:position pos:line="26" pos:column="16"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="18">&amp;<pos:position pos:line="26" pos:column="23"/></operator><name pos:line="26" pos:column="19">ai_list<pos:position pos:line="26" pos:column="26"/></name></expr></argument>)<pos:position pos:line="26" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="28"/></expr_stmt>
  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><name pos:line="27" pos:column="7">status<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">!=<pos:position pos:line="27" pos:column="16"/></operator> <literal type="number" pos:line="27" pos:column="17">0<pos:position pos:line="27" pos:column="18"/></literal></expr>)<pos:position pos:line="27" pos:column="19"/></condition><then pos:line="27" pos:column="19">
  <block pos:line="28" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">ERROR<pos:position pos:line="29" pos:column="10"/></name> <argument_list pos:line="29" pos:column="11">(<argument><expr><literal type="string" pos:line="29" pos:column="12">"pinba plugin: getaddrinfo(3) failed: %s"<pos:position pos:line="29" pos:column="53"/></literal></expr></argument>,
        <argument><expr><call><name pos:line="30" pos:column="9">gai_strerror<pos:position pos:line="30" pos:column="21"/></name> <argument_list pos:line="30" pos:column="22">(<argument><expr><name pos:line="30" pos:column="23">status<pos:position pos:line="30" pos:column="29"/></name></expr></argument>)<pos:position pos:line="30" pos:column="30"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="32"/></expr_stmt>
    <return pos:line="31" pos:column="5">return <expr><operator pos:line="31" pos:column="12">(<pos:position pos:line="31" pos:column="13"/></operator><name pos:line="31" pos:column="13">NULL<pos:position pos:line="31" pos:column="17"/></name><operator pos:line="31" pos:column="17">)<pos:position pos:line="31" pos:column="18"/></operator></expr>;<pos:position pos:line="31" pos:column="19"/></return>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="33" pos:column="3">assert<pos:position pos:line="33" pos:column="9"/></name> <argument_list pos:line="33" pos:column="10">(<argument><expr><name pos:line="33" pos:column="11">ai_list<pos:position pos:line="33" pos:column="18"/></name> <operator pos:line="33" pos:column="19">!=<pos:position pos:line="33" pos:column="21"/></operator> <name pos:line="33" pos:column="22">NULL<pos:position pos:line="33" pos:column="26"/></name></expr></argument>)<pos:position pos:line="33" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="28"/></expr_stmt>

  <expr_stmt><expr><name pos:line="35" pos:column="3">s<pos:position pos:line="35" pos:column="4"/></name> <operator pos:line="35" pos:column="5">=<pos:position pos:line="35" pos:column="6"/></operator> <call><name pos:line="35" pos:column="7">malloc<pos:position pos:line="35" pos:column="13"/></name> <argument_list pos:line="35" pos:column="14">(<argument><expr><sizeof pos:line="35" pos:column="15">sizeof <argument_list pos:line="35" pos:column="22">(<argument><expr><operator pos:line="35" pos:column="23">*<pos:position pos:line="35" pos:column="24"/></operator><name pos:line="35" pos:column="24">s<pos:position pos:line="35" pos:column="25"/></name></expr></argument>)<pos:position pos:line="35" pos:column="26"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="35" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="28"/></expr_stmt>
  <if pos:line="36" pos:column="3">if <condition pos:line="36" pos:column="6">(<expr><name pos:line="36" pos:column="7">s<pos:position pos:line="36" pos:column="8"/></name> <operator pos:line="36" pos:column="9">==<pos:position pos:line="36" pos:column="11"/></operator> <name pos:line="36" pos:column="12">NULL<pos:position pos:line="36" pos:column="16"/></name></expr>)<pos:position pos:line="36" pos:column="17"/></condition><then pos:line="36" pos:column="17">
  <block pos:line="37" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">freeaddrinfo<pos:position pos:line="38" pos:column="17"/></name> <argument_list pos:line="38" pos:column="18">(<argument><expr><name pos:line="38" pos:column="19">ai_list<pos:position pos:line="38" pos:column="26"/></name></expr></argument>)<pos:position pos:line="38" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">ERROR<pos:position pos:line="39" pos:column="10"/></name> <argument_list pos:line="39" pos:column="11">(<argument><expr><literal type="string" pos:line="39" pos:column="12">"pinba plugin: malloc failed."<pos:position pos:line="39" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="44"/></expr_stmt>
    <return pos:line="40" pos:column="5">return <expr><operator pos:line="40" pos:column="12">(<pos:position pos:line="40" pos:column="13"/></operator><name pos:line="40" pos:column="13">NULL<pos:position pos:line="40" pos:column="17"/></name><operator pos:line="40" pos:column="17">)<pos:position pos:line="40" pos:column="18"/></operator></expr>;<pos:position pos:line="40" pos:column="19"/></return>
  }<pos:position pos:line="41" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="42" pos:column="3">memset<pos:position pos:line="42" pos:column="9"/></name> <argument_list pos:line="42" pos:column="10">(<argument><expr><name pos:line="42" pos:column="11">s<pos:position pos:line="42" pos:column="12"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="14">0<pos:position pos:line="42" pos:column="15"/></literal></expr></argument>, <argument><expr><sizeof pos:line="42" pos:column="17">sizeof <argument_list pos:line="42" pos:column="24">(<argument><expr><operator pos:line="42" pos:column="25">*<pos:position pos:line="42" pos:column="26"/></operator><name pos:line="42" pos:column="26">s<pos:position pos:line="42" pos:column="27"/></name></expr></argument>)<pos:position pos:line="42" pos:column="28"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="42" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="30"/></expr_stmt>

  <for pos:line="44" pos:column="3">for <control pos:line="44" pos:column="7">(<init><expr><name pos:line="44" pos:column="8">ai_ptr<pos:position pos:line="44" pos:column="14"/></name> <operator pos:line="44" pos:column="15">=<pos:position pos:line="44" pos:column="16"/></operator> <name pos:line="44" pos:column="17">ai_list<pos:position pos:line="44" pos:column="24"/></name></expr>;<pos:position pos:line="44" pos:column="25"/></init> <condition><expr><name pos:line="44" pos:column="26">ai_ptr<pos:position pos:line="44" pos:column="32"/></name> <operator pos:line="44" pos:column="33">!=<pos:position pos:line="44" pos:column="35"/></operator> <name pos:line="44" pos:column="36">NULL<pos:position pos:line="44" pos:column="40"/></name></expr>;<pos:position pos:line="44" pos:column="41"/></condition> <incr><expr><name pos:line="44" pos:column="42">ai_ptr<pos:position pos:line="44" pos:column="48"/></name> <operator pos:line="44" pos:column="49">=<pos:position pos:line="44" pos:column="50"/></operator> <name><name pos:line="44" pos:column="51">ai_ptr<pos:position pos:line="44" pos:column="57"/></name><operator pos:line="44" pos:column="57">-&gt;<pos:position pos:line="44" pos:column="62"/></operator><name pos:line="44" pos:column="59">ai_next<pos:position pos:line="44" pos:column="66"/></name></name></expr></incr>)<pos:position pos:line="44" pos:column="67"/></control>
  <block pos:line="45" pos:column="3">{
    <expr_stmt><expr><name pos:line="46" pos:column="5">status<pos:position pos:line="46" pos:column="11"/></name> <operator pos:line="46" pos:column="12">=<pos:position pos:line="46" pos:column="13"/></operator> <call><name pos:line="46" pos:column="14">pb_add_socket<pos:position pos:line="46" pos:column="27"/></name> <argument_list pos:line="46" pos:column="28">(<argument><expr><name pos:line="46" pos:column="29">s<pos:position pos:line="46" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="32">ai_ptr<pos:position pos:line="46" pos:column="38"/></name></expr></argument>)<pos:position pos:line="46" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="40"/></expr_stmt>
    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><name pos:line="47" pos:column="9">status<pos:position pos:line="47" pos:column="15"/></name> <operator pos:line="47" pos:column="16">!=<pos:position pos:line="47" pos:column="18"/></operator> <literal type="number" pos:line="47" pos:column="19">0<pos:position pos:line="47" pos:column="20"/></literal></expr>)<pos:position pos:line="47" pos:column="21"/></condition><then pos:line="47" pos:column="21">
      <block type="pseudo"><break pos:line="48" pos:column="7">break;<pos:position pos:line="48" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="49" pos:column="4"/></block></for> <comment type="block" pos:line="49" pos:column="5">/* for (ai_list) */</comment>
  
  <expr_stmt><expr><call><name pos:line="51" pos:column="3">freeaddrinfo<pos:position pos:line="51" pos:column="15"/></name> <argument_list pos:line="51" pos:column="16">(<argument><expr><name pos:line="51" pos:column="17">ai_list<pos:position pos:line="51" pos:column="24"/></name></expr></argument>)<pos:position pos:line="51" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="26"/></expr_stmt>

  <if pos:line="53" pos:column="3">if <condition pos:line="53" pos:column="6">(<expr><name><name pos:line="53" pos:column="7">s<pos:position pos:line="53" pos:column="8"/></name><operator pos:line="53" pos:column="8">-&gt;<pos:position pos:line="53" pos:column="13"/></operator><name pos:line="53" pos:column="10">fd_num<pos:position pos:line="53" pos:column="16"/></name></name> <operator pos:line="53" pos:column="17">&lt;<pos:position pos:line="53" pos:column="21"/></operator> <literal type="number" pos:line="53" pos:column="19">1<pos:position pos:line="53" pos:column="20"/></literal></expr>)<pos:position pos:line="53" pos:column="21"/></condition><then pos:line="53" pos:column="21">
  <block pos:line="54" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="55" pos:column="5">WARNING<pos:position pos:line="55" pos:column="12"/></name> <argument_list pos:line="55" pos:column="13">(<argument><expr><literal type="string" pos:line="55" pos:column="14">"pinba plugin: Unable to open socket for address %s."<pos:position pos:line="55" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="69">node<pos:position pos:line="55" pos:column="73"/></name></expr></argument>)<pos:position pos:line="55" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="75"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">sfree<pos:position pos:line="56" pos:column="10"/></name> <argument_list pos:line="56" pos:column="11">(<argument><expr><name pos:line="56" pos:column="12">s<pos:position pos:line="56" pos:column="13"/></name></expr></argument>)<pos:position pos:line="56" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name pos:line="57" pos:column="5">s<pos:position pos:line="57" pos:column="6"/></name> <operator pos:line="57" pos:column="7">=<pos:position pos:line="57" pos:column="8"/></operator> <name pos:line="57" pos:column="9">NULL<pos:position pos:line="57" pos:column="13"/></name></expr>;<pos:position pos:line="57" pos:column="14"/></expr_stmt>
  }<pos:position pos:line="58" pos:column="4"/></block></then></if>

  <return pos:line="60" pos:column="3">return <expr><operator pos:line="60" pos:column="10">(<pos:position pos:line="60" pos:column="11"/></operator><name pos:line="60" pos:column="11">s<pos:position pos:line="60" pos:column="12"/></name><operator pos:line="60" pos:column="12">)<pos:position pos:line="60" pos:column="13"/></operator></expr>;<pos:position pos:line="60" pos:column="14"/></return>
}<pos:position pos:line="61" pos:column="2"/></block></function></unit>

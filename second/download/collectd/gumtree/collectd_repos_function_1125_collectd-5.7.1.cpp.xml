<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1125_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">version_detect<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">filename<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list> <block pos:line="1" pos:column="49">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">FILE<pos:position pos:line="2" pos:column="7"/></name> <modifier pos:line="2" pos:column="8">*<pos:position pos:line="2" pos:column="9"/></modifier></type><name pos:line="2" pos:column="9">fh<pos:position pos:line="2" pos:column="11"/></name></decl>;<pos:position pos:line="2" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">buffer<pos:position pos:line="3" pos:column="14"/></name><index pos:line="3" pos:column="14">[<expr><literal type="number" pos:line="3" pos:column="15">1024<pos:position pos:line="3" pos:column="19"/></literal></expr>]<pos:position pos:line="3" pos:column="20"/></index></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">version<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><literal type="number" pos:line="4" pos:column="17">0<pos:position pos:line="4" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>

  <comment type="block" pos:line="6" pos:column="3">/* Sanity checking. We're called from the config handling routine, so
   * better play it save. */</comment>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">(<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">filename<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">==<pos:position pos:line="8" pos:column="19"/></operator> <name pos:line="8" pos:column="20">NULL<pos:position pos:line="8" pos:column="24"/></name><operator pos:line="8" pos:column="24">)<pos:position pos:line="8" pos:column="25"/></operator> <operator pos:line="8" pos:column="26">||<pos:position pos:line="8" pos:column="28"/></operator> <operator pos:line="8" pos:column="29">(<pos:position pos:line="8" pos:column="30"/></operator><operator pos:line="8" pos:column="30">*<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="31">filename<pos:position pos:line="8" pos:column="39"/></name> <operator pos:line="8" pos:column="40">==<pos:position pos:line="8" pos:column="42"/></operator> <literal type="number" pos:line="8" pos:column="43">0<pos:position pos:line="8" pos:column="44"/></literal><operator pos:line="8" pos:column="44">)<pos:position pos:line="8" pos:column="45"/></operator></expr>)<pos:position pos:line="8" pos:column="46"/></condition><then pos:line="8" pos:column="46">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><operator pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></operator><literal type="number" pos:line="9" pos:column="13">0<pos:position pos:line="9" pos:column="14"/></literal><operator pos:line="9" pos:column="14">)<pos:position pos:line="9" pos:column="15"/></operator></expr>;<pos:position pos:line="9" pos:column="16"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="11" pos:column="3">fh<pos:position pos:line="11" pos:column="5"/></name> <operator pos:line="11" pos:column="6">=<pos:position pos:line="11" pos:column="7"/></operator> <call><name pos:line="11" pos:column="8">fopen<pos:position pos:line="11" pos:column="13"/></name><argument_list pos:line="11" pos:column="13">(<argument><expr><name pos:line="11" pos:column="14">filename<pos:position pos:line="11" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="24">"r"<pos:position pos:line="11" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="29"/></expr_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">fh<pos:position pos:line="12" pos:column="9"/></name> <operator pos:line="12" pos:column="10">==<pos:position pos:line="12" pos:column="12"/></operator> <name pos:line="12" pos:column="13">NULL<pos:position pos:line="12" pos:column="17"/></name></expr>)<pos:position pos:line="12" pos:column="18"/></condition><then pos:line="12" pos:column="18"> <block pos:line="12" pos:column="19">{
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">char<pos:position pos:line="13" pos:column="9"/></name></type> <name><name pos:line="13" pos:column="10">errbuf<pos:position pos:line="13" pos:column="16"/></name><index pos:line="13" pos:column="16">[<expr><literal type="number" pos:line="13" pos:column="17">1024<pos:position pos:line="13" pos:column="21"/></literal></expr>]<pos:position pos:line="13" pos:column="22"/></index></name></decl>;<pos:position pos:line="13" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">WARNING<pos:position pos:line="14" pos:column="12"/></name><argument_list pos:line="14" pos:column="12">(<argument><expr><literal type="string" pos:line="14" pos:column="13">"openvpn plugin: Unable to read \"%s\": %s"<pos:position pos:line="14" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="58">filename<pos:position pos:line="14" pos:column="66"/></name></expr></argument>,
            <argument><expr><call><name pos:line="15" pos:column="13">sstrerror<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><name pos:line="15" pos:column="23">errno<pos:position pos:line="15" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="30">errbuf<pos:position pos:line="15" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="38">sizeof<argument_list pos:line="15" pos:column="44">(<argument><expr><name pos:line="15" pos:column="45">errbuf<pos:position pos:line="15" pos:column="51"/></name></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="55"/></expr_stmt>
    <return pos:line="16" pos:column="5">return <expr><operator pos:line="16" pos:column="12">(<pos:position pos:line="16" pos:column="13"/></operator><literal type="number" pos:line="16" pos:column="13">0<pos:position pos:line="16" pos:column="14"/></literal><operator pos:line="16" pos:column="14">)<pos:position pos:line="16" pos:column="15"/></operator></expr>;<pos:position pos:line="16" pos:column="16"/></return>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="19" pos:column="3">/* now search for the specific multimode data format */</comment>
  <while pos:line="20" pos:column="3">while <condition pos:line="20" pos:column="9">(<expr><operator pos:line="20" pos:column="10">(<pos:position pos:line="20" pos:column="11"/></operator><call><name pos:line="20" pos:column="11">fgets<pos:position pos:line="20" pos:column="16"/></name><argument_list pos:line="20" pos:column="16">(<argument><expr><name pos:line="20" pos:column="17">buffer<pos:position pos:line="20" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="25">sizeof<argument_list pos:line="20" pos:column="31">(<argument><expr><name pos:line="20" pos:column="32">buffer<pos:position pos:line="20" pos:column="38"/></name></expr></argument>)<pos:position pos:line="20" pos:column="39"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="20" pos:column="41">fh<pos:position pos:line="20" pos:column="43"/></name></expr></argument>)<pos:position pos:line="20" pos:column="44"/></argument_list></call><operator pos:line="20" pos:column="44">)<pos:position pos:line="20" pos:column="45"/></operator> <operator pos:line="20" pos:column="46">!=<pos:position pos:line="20" pos:column="48"/></operator> <name pos:line="20" pos:column="49">NULL<pos:position pos:line="20" pos:column="53"/></name></expr>)<pos:position pos:line="20" pos:column="54"/></condition> <block pos:line="20" pos:column="55">{
    <comment type="block" pos:line="21" pos:column="5">/* we look at the first line searching for SINGLE mode configuration */</comment>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><call><name pos:line="22" pos:column="9">strcmp<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><name pos:line="22" pos:column="16">buffer<pos:position pos:line="22" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="24">VSSTRING<pos:position pos:line="22" pos:column="32"/></name></expr></argument>)<pos:position pos:line="22" pos:column="33"/></argument_list></call> <operator pos:line="22" pos:column="34">==<pos:position pos:line="22" pos:column="36"/></operator> <literal type="number" pos:line="22" pos:column="37">0<pos:position pos:line="22" pos:column="38"/></literal></expr>)<pos:position pos:line="22" pos:column="39"/></condition><then pos:line="22" pos:column="39"> <block pos:line="22" pos:column="40">{
      <expr_stmt><expr><call><name pos:line="23" pos:column="7">DEBUG<pos:position pos:line="23" pos:column="12"/></name><argument_list pos:line="23" pos:column="12">(<argument><expr><literal type="string" pos:line="23" pos:column="13">"openvpn plugin: found status file version SINGLE"<pos:position pos:line="23" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="65"/></expr_stmt>
      <expr_stmt><expr><name pos:line="24" pos:column="7">version<pos:position pos:line="24" pos:column="14"/></name> <operator pos:line="24" pos:column="15">=<pos:position pos:line="24" pos:column="16"/></operator> <name pos:line="24" pos:column="17">SINGLE<pos:position pos:line="24" pos:column="23"/></name></expr>;<pos:position pos:line="24" pos:column="24"/></expr_stmt>
      <break pos:line="25" pos:column="7">break;<pos:position pos:line="25" pos:column="13"/></break>
    }<pos:position pos:line="26" pos:column="6"/></block></then>
    <comment type="block" pos:line="27" pos:column="5">/* searching for multi version 1 */</comment>
    <elseif pos:line="28" pos:column="5">else <if pos:line="28" pos:column="10">if <condition pos:line="28" pos:column="13">(<expr><call><name pos:line="28" pos:column="14">strcmp<pos:position pos:line="28" pos:column="20"/></name><argument_list pos:line="28" pos:column="20">(<argument><expr><name pos:line="28" pos:column="21">buffer<pos:position pos:line="28" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="29">V1STRING<pos:position pos:line="28" pos:column="37"/></name></expr></argument>)<pos:position pos:line="28" pos:column="38"/></argument_list></call> <operator pos:line="28" pos:column="39">==<pos:position pos:line="28" pos:column="41"/></operator> <literal type="number" pos:line="28" pos:column="42">0<pos:position pos:line="28" pos:column="43"/></literal></expr>)<pos:position pos:line="28" pos:column="44"/></condition><then pos:line="28" pos:column="44"> <block pos:line="28" pos:column="45">{
      <expr_stmt><expr><call><name pos:line="29" pos:column="7">DEBUG<pos:position pos:line="29" pos:column="12"/></name><argument_list pos:line="29" pos:column="12">(<argument><expr><literal type="string" pos:line="29" pos:column="13">"openvpn plugin: found status file version MULTI1"<pos:position pos:line="29" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="65"/></expr_stmt>
      <expr_stmt><expr><name pos:line="30" pos:column="7">version<pos:position pos:line="30" pos:column="14"/></name> <operator pos:line="30" pos:column="15">=<pos:position pos:line="30" pos:column="16"/></operator> <name pos:line="30" pos:column="17">MULTI1<pos:position pos:line="30" pos:column="23"/></name></expr>;<pos:position pos:line="30" pos:column="24"/></expr_stmt>
      <break pos:line="31" pos:column="7">break;<pos:position pos:line="31" pos:column="13"/></break>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if></elseif>
    <comment type="block" pos:line="33" pos:column="5">/* searching for multi version 2 */</comment>
    <elseif pos:line="34" pos:column="5">else <if pos:line="34" pos:column="10">if <condition pos:line="34" pos:column="13">(<expr><call><name pos:line="34" pos:column="14">strcmp<pos:position pos:line="34" pos:column="20"/></name><argument_list pos:line="34" pos:column="20">(<argument><expr><name pos:line="34" pos:column="21">buffer<pos:position pos:line="34" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="29">V2STRING<pos:position pos:line="34" pos:column="37"/></name></expr></argument>)<pos:position pos:line="34" pos:column="38"/></argument_list></call> <operator pos:line="34" pos:column="39">==<pos:position pos:line="34" pos:column="41"/></operator> <literal type="number" pos:line="34" pos:column="42">0<pos:position pos:line="34" pos:column="43"/></literal></expr>)<pos:position pos:line="34" pos:column="44"/></condition><then pos:line="34" pos:column="44"> <block pos:line="34" pos:column="45">{
      <expr_stmt><expr><call><name pos:line="35" pos:column="7">DEBUG<pos:position pos:line="35" pos:column="12"/></name><argument_list pos:line="35" pos:column="12">(<argument><expr><literal type="string" pos:line="35" pos:column="13">"openvpn plugin: found status file version MULTI2"<pos:position pos:line="35" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="65"/></expr_stmt>
      <expr_stmt><expr><name pos:line="36" pos:column="7">version<pos:position pos:line="36" pos:column="14"/></name> <operator pos:line="36" pos:column="15">=<pos:position pos:line="36" pos:column="16"/></operator> <name pos:line="36" pos:column="17">MULTI2<pos:position pos:line="36" pos:column="23"/></name></expr>;<pos:position pos:line="36" pos:column="24"/></expr_stmt>
      <break pos:line="37" pos:column="7">break;<pos:position pos:line="37" pos:column="13"/></break>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if></elseif>
    <comment type="block" pos:line="39" pos:column="5">/* searching for multi version 3 */</comment>
    <elseif pos:line="40" pos:column="5">else <if pos:line="40" pos:column="10">if <condition pos:line="40" pos:column="13">(<expr><call><name pos:line="40" pos:column="14">strcmp<pos:position pos:line="40" pos:column="20"/></name><argument_list pos:line="40" pos:column="20">(<argument><expr><name pos:line="40" pos:column="21">buffer<pos:position pos:line="40" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="29">V3STRING<pos:position pos:line="40" pos:column="37"/></name></expr></argument>)<pos:position pos:line="40" pos:column="38"/></argument_list></call> <operator pos:line="40" pos:column="39">==<pos:position pos:line="40" pos:column="41"/></operator> <literal type="number" pos:line="40" pos:column="42">0<pos:position pos:line="40" pos:column="43"/></literal></expr>)<pos:position pos:line="40" pos:column="44"/></condition><then pos:line="40" pos:column="44"> <block pos:line="40" pos:column="45">{
      <expr_stmt><expr><call><name pos:line="41" pos:column="7">DEBUG<pos:position pos:line="41" pos:column="12"/></name><argument_list pos:line="41" pos:column="12">(<argument><expr><literal type="string" pos:line="41" pos:column="13">"openvpn plugin: found status file version MULTI3"<pos:position pos:line="41" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="65"/></expr_stmt>
      <expr_stmt><expr><name pos:line="42" pos:column="7">version<pos:position pos:line="42" pos:column="14"/></name> <operator pos:line="42" pos:column="15">=<pos:position pos:line="42" pos:column="16"/></operator> <name pos:line="42" pos:column="17">MULTI3<pos:position pos:line="42" pos:column="23"/></name></expr>;<pos:position pos:line="42" pos:column="24"/></expr_stmt>
      <break pos:line="43" pos:column="7">break;<pos:position pos:line="43" pos:column="13"/></break>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if></elseif>
    <comment type="block" pos:line="45" pos:column="5">/* searching for multi version 4 */</comment>
    <elseif pos:line="46" pos:column="5">else <if pos:line="46" pos:column="10">if <condition pos:line="46" pos:column="13">(<expr><call><name pos:line="46" pos:column="14">strcmp<pos:position pos:line="46" pos:column="20"/></name><argument_list pos:line="46" pos:column="20">(<argument><expr><name pos:line="46" pos:column="21">buffer<pos:position pos:line="46" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="29">V4STRING<pos:position pos:line="46" pos:column="37"/></name></expr></argument>)<pos:position pos:line="46" pos:column="38"/></argument_list></call> <operator pos:line="46" pos:column="39">==<pos:position pos:line="46" pos:column="41"/></operator> <literal type="number" pos:line="46" pos:column="42">0<pos:position pos:line="46" pos:column="43"/></literal></expr>)<pos:position pos:line="46" pos:column="44"/></condition><then pos:line="46" pos:column="44"> <block pos:line="46" pos:column="45">{
      <expr_stmt><expr><call><name pos:line="47" pos:column="7">DEBUG<pos:position pos:line="47" pos:column="12"/></name><argument_list pos:line="47" pos:column="12">(<argument><expr><literal type="string" pos:line="47" pos:column="13">"openvpn plugin: found status file version MULTI4"<pos:position pos:line="47" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="65"/></expr_stmt>
      <expr_stmt><expr><name pos:line="48" pos:column="7">version<pos:position pos:line="48" pos:column="14"/></name> <operator pos:line="48" pos:column="15">=<pos:position pos:line="48" pos:column="16"/></operator> <name pos:line="48" pos:column="17">MULTI4<pos:position pos:line="48" pos:column="23"/></name></expr>;<pos:position pos:line="48" pos:column="24"/></expr_stmt>
      <break pos:line="49" pos:column="7">break;<pos:position pos:line="49" pos:column="13"/></break>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if></elseif></if>
  }<pos:position pos:line="51" pos:column="4"/></block></while>

  <if pos:line="53" pos:column="3">if <condition pos:line="53" pos:column="6">(<expr><name pos:line="53" pos:column="7">version<pos:position pos:line="53" pos:column="14"/></name> <operator pos:line="53" pos:column="15">==<pos:position pos:line="53" pos:column="17"/></operator> <literal type="number" pos:line="53" pos:column="18">0<pos:position pos:line="53" pos:column="19"/></literal></expr>)<pos:position pos:line="53" pos:column="20"/></condition><then pos:line="53" pos:column="20"> <block pos:line="53" pos:column="21">{
    <comment type="block" pos:line="54" pos:column="5">/* This is only reached during configuration, so complaining to
     * the user is in order. */</comment>
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">NOTICE<pos:position pos:line="56" pos:column="11"/></name><argument_list pos:line="56" pos:column="11">(<argument><expr><literal type="string" pos:line="56" pos:column="12">"openvpn plugin: %s: Unknown file format, please "<pos:position pos:line="56" pos:column="62"/></literal>
           <literal type="string" pos:line="57" pos:column="12">"report this as bug. Make sure to include "<pos:position pos:line="57" pos:column="55"/></literal>
           <literal type="string" pos:line="58" pos:column="12">"your status file, so the plugin can "<pos:position pos:line="58" pos:column="50"/></literal>
           <literal type="string" pos:line="59" pos:column="12">"be adapted."<pos:position pos:line="59" pos:column="25"/></literal></expr></argument>,
           <argument><expr><name pos:line="60" pos:column="12">filename<pos:position pos:line="60" pos:column="20"/></name></expr></argument>)<pos:position pos:line="60" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="61" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="63" pos:column="3">fclose<pos:position pos:line="63" pos:column="9"/></name><argument_list pos:line="63" pos:column="9">(<argument><expr><name pos:line="63" pos:column="10">fh<pos:position pos:line="63" pos:column="12"/></name></expr></argument>)<pos:position pos:line="63" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="14"/></expr_stmt>

  <return pos:line="65" pos:column="3">return <expr><name pos:line="65" pos:column="10">version<pos:position pos:line="65" pos:column="17"/></name></expr>;<pos:position pos:line="65" pos:column="18"/></return>
}<pos:position pos:line="66" pos:column="2"/></block></function></unit>

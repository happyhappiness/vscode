<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1274_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">chrony_set_timeout<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">void<pos:position pos:line="1" pos:column="35"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list> <block pos:line="1" pos:column="37">{
  <comment type="block" pos:line="2" pos:column="3">/* Set the socket's  timeout to g_chrony_timeout; a value of 0 signals
   * infinite timeout */</comment>
  <comment type="block" pos:line="4" pos:column="3">/* Returns 0 on success, !0 on error (check errno) */</comment>

  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">timeval<pos:position pos:line="6" pos:column="17"/></name></name></type> <name pos:line="6" pos:column="18">tv<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
  <expr_stmt><expr><name><name pos:line="7" pos:column="3">tv<pos:position pos:line="7" pos:column="5"/></name><operator pos:line="7" pos:column="5">.<pos:position pos:line="7" pos:column="6"/></operator><name pos:line="7" pos:column="6">tv_sec<pos:position pos:line="7" pos:column="12"/></name></name> <operator pos:line="7" pos:column="13">=<pos:position pos:line="7" pos:column="14"/></operator> <name pos:line="7" pos:column="15">g_chrony_timeout<pos:position pos:line="7" pos:column="31"/></name></expr>;<pos:position pos:line="7" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="8" pos:column="3">tv<pos:position pos:line="8" pos:column="5"/></name><operator pos:line="8" pos:column="5">.<pos:position pos:line="8" pos:column="6"/></operator><name pos:line="8" pos:column="6">tv_usec<pos:position pos:line="8" pos:column="13"/></name></name> <operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator> <literal type="number" pos:line="8" pos:column="16">0<pos:position pos:line="8" pos:column="17"/></literal></expr>;<pos:position pos:line="8" pos:column="18"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="10" pos:column="3">assert<pos:position pos:line="10" pos:column="9"/></name><argument_list pos:line="10" pos:column="9">(<argument><expr><name pos:line="10" pos:column="10">g_chrony_socket<pos:position pos:line="10" pos:column="25"/></name> <operator pos:line="10" pos:column="26">&gt;=<pos:position pos:line="10" pos:column="31"/></operator> <literal type="number" pos:line="10" pos:column="29">0<pos:position pos:line="10" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="32"/></expr_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><call><name pos:line="11" pos:column="7">setsockopt<pos:position pos:line="11" pos:column="17"/></name><argument_list pos:line="11" pos:column="17">(<argument><expr><name pos:line="11" pos:column="18">g_chrony_socket<pos:position pos:line="11" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="35">SOL_SOCKET<pos:position pos:line="11" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="47">SO_RCVTIMEO<pos:position pos:line="11" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="60">(<pos:position pos:line="11" pos:column="61"/></operator><name pos:line="11" pos:column="61">char<pos:position pos:line="11" pos:column="65"/></name> <operator pos:line="11" pos:column="66">*<pos:position pos:line="11" pos:column="67"/></operator><operator pos:line="11" pos:column="67">)<pos:position pos:line="11" pos:column="68"/></operator><operator pos:line="11" pos:column="68">&amp;<pos:position pos:line="11" pos:column="73"/></operator><name pos:line="11" pos:column="69">tv<pos:position pos:line="11" pos:column="71"/></name></expr></argument>,
                 <argument><expr><sizeof pos:line="12" pos:column="18">sizeof<argument_list pos:line="12" pos:column="24">(<argument><expr pos:line="12" pos:column="25">struct <name pos:line="12" pos:column="32">timeval<pos:position pos:line="12" pos:column="39"/></name></expr></argument>)<pos:position pos:line="12" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="41"/></argument_list></call> <operator pos:line="12" pos:column="42">&lt;<pos:position pos:line="12" pos:column="46"/></operator> <literal type="number" pos:line="12" pos:column="44">0<pos:position pos:line="12" pos:column="45"/></literal></expr>)<pos:position pos:line="12" pos:column="46"/></condition><then pos:line="12" pos:column="46"> <block pos:line="12" pos:column="47">{
    <return pos:line="13" pos:column="5">return <expr><name pos:line="13" pos:column="12">CHRONY_RC_FAIL<pos:position pos:line="13" pos:column="26"/></name></expr>;<pos:position pos:line="13" pos:column="27"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>
  <return pos:line="15" pos:column="3">return <expr><name pos:line="15" pos:column="10">CHRONY_RC_OK<pos:position pos:line="15" pos:column="22"/></name></expr>;<pos:position pos:line="15" pos:column="23"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

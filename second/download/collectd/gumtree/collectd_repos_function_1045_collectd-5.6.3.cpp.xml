<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1045_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">vserver_read<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">void<pos:position pos:line="1" pos:column="29"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="30"/></parameter_list> <block pos:line="1" pos:column="31">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">DIR<pos:position pos:line="2" pos:column="6"/></name> <modifier pos:line="2" pos:column="7">*<pos:position pos:line="2" pos:column="8"/></modifier></type><name pos:line="2" pos:column="8">proc<pos:position pos:line="2" pos:column="12"/></name></decl>;<pos:position pos:line="2" pos:column="13"/></decl_stmt>

  <expr_stmt><expr><name pos:line="4" pos:column="3">errno<pos:position pos:line="4" pos:column="8"/></name> <operator pos:line="4" pos:column="9">=<pos:position pos:line="4" pos:column="10"/></operator> <literal type="number" pos:line="4" pos:column="11">0<pos:position pos:line="4" pos:column="12"/></literal></expr>;<pos:position pos:line="4" pos:column="13"/></expr_stmt>
  <expr_stmt><expr><name pos:line="5" pos:column="3">proc<pos:position pos:line="5" pos:column="7"/></name> <operator pos:line="5" pos:column="8">=<pos:position pos:line="5" pos:column="9"/></operator> <call><name pos:line="5" pos:column="10">opendir<pos:position pos:line="5" pos:column="17"/></name><argument_list pos:line="5" pos:column="17">(<argument><expr><name pos:line="5" pos:column="18">PROCDIR<pos:position pos:line="5" pos:column="25"/></name></expr></argument>)<pos:position pos:line="5" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="27"/></expr_stmt>
  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">proc<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">==<pos:position pos:line="6" pos:column="14"/></operator> <name pos:line="6" pos:column="15">NULL<pos:position pos:line="6" pos:column="19"/></name></expr>)<pos:position pos:line="6" pos:column="20"/></condition><then pos:line="6" pos:column="20"> <block pos:line="6" pos:column="21">{
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name></type> <name><name pos:line="7" pos:column="10">errbuf<pos:position pos:line="7" pos:column="16"/></name><index pos:line="7" pos:column="16">[<expr><literal type="number" pos:line="7" pos:column="17">1024<pos:position pos:line="7" pos:column="21"/></literal></expr>]<pos:position pos:line="7" pos:column="22"/></index></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">ERROR<pos:position pos:line="8" pos:column="10"/></name><argument_list pos:line="8" pos:column="10">(<argument><expr><literal type="string" pos:line="8" pos:column="11">"vserver plugin: fopen (%s): %s"<pos:position pos:line="8" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="45">PROCDIR<pos:position pos:line="8" pos:column="52"/></name></expr></argument>,
          <argument><expr><call><name pos:line="9" pos:column="11">sstrerror<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><name pos:line="9" pos:column="21">errno<pos:position pos:line="9" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="28">errbuf<pos:position pos:line="9" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="36">sizeof<argument_list pos:line="9" pos:column="42">(<argument><expr><name pos:line="9" pos:column="43">errbuf<pos:position pos:line="9" pos:column="49"/></name></expr></argument>)<pos:position pos:line="9" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="53"/></expr_stmt>
    <return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">(<pos:position pos:line="10" pos:column="13"/></operator><operator pos:line="10" pos:column="13">-<pos:position pos:line="10" pos:column="14"/></operator><literal type="number" pos:line="10" pos:column="14">1<pos:position pos:line="10" pos:column="15"/></literal><operator pos:line="10" pos:column="15">)<pos:position pos:line="10" pos:column="16"/></operator></expr>;<pos:position pos:line="10" pos:column="17"/></return>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>

  <while pos:line="13" pos:column="3">while <condition pos:line="13" pos:column="9">(<expr><literal type="number" pos:line="13" pos:column="10">42<pos:position pos:line="13" pos:column="12"/></literal></expr>)<pos:position pos:line="13" pos:column="13"/></condition> <block pos:line="13" pos:column="14">{
    <decl_stmt><decl><type><name><name pos:line="14" pos:column="5">struct<pos:position pos:line="14" pos:column="11"/></name> <name pos:line="14" pos:column="12">dirent<pos:position pos:line="14" pos:column="18"/></name></name> <modifier pos:line="14" pos:column="19">*<pos:position pos:line="14" pos:column="20"/></modifier></type><name pos:line="14" pos:column="20">dent<pos:position pos:line="14" pos:column="24"/></name></decl>;<pos:position pos:line="14" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">int<pos:position pos:line="15" pos:column="8"/></name></type> <name pos:line="15" pos:column="9">len<pos:position pos:line="15" pos:column="12"/></name></decl>;<pos:position pos:line="15" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">char<pos:position pos:line="16" pos:column="9"/></name></type> <name><name pos:line="16" pos:column="10">file<pos:position pos:line="16" pos:column="14"/></name><index pos:line="16" pos:column="14">[<expr><name pos:line="16" pos:column="15">BUFSIZE<pos:position pos:line="16" pos:column="22"/></name></expr>]<pos:position pos:line="16" pos:column="23"/></index></name></decl>;<pos:position pos:line="16" pos:column="24"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="18" pos:column="5">FILE<pos:position pos:line="18" pos:column="9"/></name> <modifier pos:line="18" pos:column="10">*<pos:position pos:line="18" pos:column="11"/></modifier></type><name pos:line="18" pos:column="11">fh<pos:position pos:line="18" pos:column="13"/></name></decl>;<pos:position pos:line="18" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">char<pos:position pos:line="19" pos:column="9"/></name></type> <name><name pos:line="19" pos:column="10">buffer<pos:position pos:line="19" pos:column="16"/></name><index pos:line="19" pos:column="16">[<expr><name pos:line="19" pos:column="17">BUFSIZE<pos:position pos:line="19" pos:column="24"/></name></expr>]<pos:position pos:line="19" pos:column="25"/></index></name></decl>;<pos:position pos:line="19" pos:column="26"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="21" pos:column="5">struct<pos:position pos:line="21" pos:column="11"/></name> <name pos:line="21" pos:column="12">stat<pos:position pos:line="21" pos:column="16"/></name></name></type> <name pos:line="21" pos:column="17">statbuf<pos:position pos:line="21" pos:column="24"/></name></decl>;<pos:position pos:line="21" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">char<pos:position pos:line="22" pos:column="9"/></name> <modifier pos:line="22" pos:column="10">*<pos:position pos:line="22" pos:column="11"/></modifier></type><name><name pos:line="22" pos:column="11">cols<pos:position pos:line="22" pos:column="15"/></name><index pos:line="22" pos:column="15">[<expr><literal type="number" pos:line="22" pos:column="16">4<pos:position pos:line="22" pos:column="17"/></literal></expr>]<pos:position pos:line="22" pos:column="18"/></index></name></decl>;<pos:position pos:line="22" pos:column="19"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="24" pos:column="5">int<pos:position pos:line="24" pos:column="8"/></name></type> <name pos:line="24" pos:column="9">status<pos:position pos:line="24" pos:column="15"/></name></decl>;<pos:position pos:line="24" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><name pos:line="26" pos:column="5">errno<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">=<pos:position pos:line="26" pos:column="12"/></operator> <literal type="number" pos:line="26" pos:column="13">0<pos:position pos:line="26" pos:column="14"/></literal></expr>;<pos:position pos:line="26" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name pos:line="27" pos:column="5">dent<pos:position pos:line="27" pos:column="9"/></name> <operator pos:line="27" pos:column="10">=<pos:position pos:line="27" pos:column="11"/></operator> <call><name pos:line="27" pos:column="12">readdir<pos:position pos:line="27" pos:column="19"/></name><argument_list pos:line="27" pos:column="19">(<argument><expr><name pos:line="27" pos:column="20">proc<pos:position pos:line="27" pos:column="24"/></name></expr></argument>)<pos:position pos:line="27" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="26"/></expr_stmt>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name pos:line="28" pos:column="9">dent<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">==<pos:position pos:line="28" pos:column="16"/></operator> <name pos:line="28" pos:column="17">NULL<pos:position pos:line="28" pos:column="21"/></name></expr>)<pos:position pos:line="28" pos:column="22"/></condition><then pos:line="28" pos:column="22"> <block pos:line="28" pos:column="23">{
      <decl_stmt><decl><type><name pos:line="29" pos:column="7">char<pos:position pos:line="29" pos:column="11"/></name></type> <name><name pos:line="29" pos:column="12">errbuf<pos:position pos:line="29" pos:column="18"/></name><index pos:line="29" pos:column="18">[<expr><literal type="number" pos:line="29" pos:column="19">4096<pos:position pos:line="29" pos:column="23"/></literal></expr>]<pos:position pos:line="29" pos:column="24"/></index></name></decl>;<pos:position pos:line="29" pos:column="25"/></decl_stmt>

      <if pos:line="31" pos:column="7">if <condition pos:line="31" pos:column="10">(<expr><name pos:line="31" pos:column="11">errno<pos:position pos:line="31" pos:column="16"/></name> <operator pos:line="31" pos:column="17">==<pos:position pos:line="31" pos:column="19"/></operator> <literal type="number" pos:line="31" pos:column="20">0<pos:position pos:line="31" pos:column="21"/></literal></expr>)<pos:position pos:line="31" pos:column="22"/></condition><then pos:line="31" pos:column="22"> <comment type="block" pos:line="31" pos:column="23">/* end of directory */</comment>
        <block type="pseudo"><break pos:line="32" pos:column="9">break;<pos:position pos:line="32" pos:column="15"/></break></block></then></if>

      <expr_stmt><expr><call><name pos:line="34" pos:column="7">ERROR<pos:position pos:line="34" pos:column="12"/></name><argument_list pos:line="34" pos:column="12">(<argument><expr><literal type="string" pos:line="34" pos:column="13">"vserver plugin: failed to read directory %s: %s"<pos:position pos:line="34" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="64">PROCDIR<pos:position pos:line="34" pos:column="71"/></name></expr></argument>,
            <argument><expr><call><name pos:line="35" pos:column="13">sstrerror<pos:position pos:line="35" pos:column="22"/></name><argument_list pos:line="35" pos:column="22">(<argument><expr><name pos:line="35" pos:column="23">errno<pos:position pos:line="35" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="30">errbuf<pos:position pos:line="35" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="38">sizeof<argument_list pos:line="35" pos:column="44">(<argument><expr><name pos:line="35" pos:column="45">errbuf<pos:position pos:line="35" pos:column="51"/></name></expr></argument>)<pos:position pos:line="35" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="35" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="55"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="36" pos:column="7">closedir<pos:position pos:line="36" pos:column="15"/></name><argument_list pos:line="36" pos:column="15">(<argument><expr><name pos:line="36" pos:column="16">proc<pos:position pos:line="36" pos:column="20"/></name></expr></argument>)<pos:position pos:line="36" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="22"/></expr_stmt>
      <return pos:line="37" pos:column="7">return <expr><operator pos:line="37" pos:column="14">(<pos:position pos:line="37" pos:column="15"/></operator><operator pos:line="37" pos:column="15">-<pos:position pos:line="37" pos:column="16"/></operator><literal type="number" pos:line="37" pos:column="16">1<pos:position pos:line="37" pos:column="17"/></literal><operator pos:line="37" pos:column="17">)<pos:position pos:line="37" pos:column="18"/></operator></expr>;<pos:position pos:line="37" pos:column="19"/></return>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name><name pos:line="40" pos:column="9">dent<pos:position pos:line="40" pos:column="13"/></name><operator pos:line="40" pos:column="13">-&gt;<pos:position pos:line="40" pos:column="18"/></operator><name pos:line="40" pos:column="15">d_name<pos:position pos:line="40" pos:column="21"/></name><index pos:line="40" pos:column="21">[<expr><literal type="number" pos:line="40" pos:column="22">0<pos:position pos:line="40" pos:column="23"/></literal></expr>]<pos:position pos:line="40" pos:column="24"/></index></name> <operator pos:line="40" pos:column="25">==<pos:position pos:line="40" pos:column="27"/></operator> <literal type="char" pos:line="40" pos:column="28">'.'<pos:position pos:line="40" pos:column="31"/></literal></expr>)<pos:position pos:line="40" pos:column="32"/></condition><then pos:line="40" pos:column="32">
      <block type="pseudo"><continue pos:line="41" pos:column="7">continue;<pos:position pos:line="41" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="43" pos:column="5">len<pos:position pos:line="43" pos:column="8"/></name> <operator pos:line="43" pos:column="9">=<pos:position pos:line="43" pos:column="10"/></operator> <call><name pos:line="43" pos:column="11">ssnprintf<pos:position pos:line="43" pos:column="20"/></name><argument_list pos:line="43" pos:column="20">(<argument><expr><name pos:line="43" pos:column="21">file<pos:position pos:line="43" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="43" pos:column="27">sizeof<argument_list pos:line="43" pos:column="33">(<argument><expr><name pos:line="43" pos:column="34">file<pos:position pos:line="43" pos:column="38"/></name></expr></argument>)<pos:position pos:line="43" pos:column="39"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="43" pos:column="41">PROCDIR<pos:position pos:line="43" pos:column="48"/></name> <literal type="string" pos:line="43" pos:column="49">"/%s"<pos:position pos:line="43" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="56">dent<pos:position pos:line="43" pos:column="60"/></name><operator pos:line="43" pos:column="60">-&gt;<pos:position pos:line="43" pos:column="65"/></operator><name pos:line="43" pos:column="62">d_name<pos:position pos:line="43" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="70"/></expr_stmt>
    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><operator pos:line="44" pos:column="9">(<pos:position pos:line="44" pos:column="10"/></operator><name pos:line="44" pos:column="10">len<pos:position pos:line="44" pos:column="13"/></name> <operator pos:line="44" pos:column="14">&lt;<pos:position pos:line="44" pos:column="18"/></operator> <literal type="number" pos:line="44" pos:column="16">0<pos:position pos:line="44" pos:column="17"/></literal><operator pos:line="44" pos:column="17">)<pos:position pos:line="44" pos:column="18"/></operator> <operator pos:line="44" pos:column="19">||<pos:position pos:line="44" pos:column="21"/></operator> <operator pos:line="44" pos:column="22">(<pos:position pos:line="44" pos:column="23"/></operator><name pos:line="44" pos:column="23">len<pos:position pos:line="44" pos:column="26"/></name> <operator pos:line="44" pos:column="27">&gt;=<pos:position pos:line="44" pos:column="32"/></operator> <name pos:line="44" pos:column="30">BUFSIZE<pos:position pos:line="44" pos:column="37"/></name><operator pos:line="44" pos:column="37">)<pos:position pos:line="44" pos:column="38"/></operator></expr>)<pos:position pos:line="44" pos:column="39"/></condition><then pos:line="44" pos:column="39">
      <block type="pseudo"><continue pos:line="45" pos:column="7">continue;<pos:position pos:line="45" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="47" pos:column="5">status<pos:position pos:line="47" pos:column="11"/></name> <operator pos:line="47" pos:column="12">=<pos:position pos:line="47" pos:column="13"/></operator> <call><name pos:line="47" pos:column="14">stat<pos:position pos:line="47" pos:column="18"/></name><argument_list pos:line="47" pos:column="18">(<argument><expr><name pos:line="47" pos:column="19">file<pos:position pos:line="47" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="25">&amp;<pos:position pos:line="47" pos:column="30"/></operator><name pos:line="47" pos:column="26">statbuf<pos:position pos:line="47" pos:column="33"/></name></expr></argument>)<pos:position pos:line="47" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="35"/></expr_stmt>
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><name pos:line="48" pos:column="9">status<pos:position pos:line="48" pos:column="15"/></name> <operator pos:line="48" pos:column="16">!=<pos:position pos:line="48" pos:column="18"/></operator> <literal type="number" pos:line="48" pos:column="19">0<pos:position pos:line="48" pos:column="20"/></literal></expr>)<pos:position pos:line="48" pos:column="21"/></condition><then pos:line="48" pos:column="21"> <block pos:line="48" pos:column="22">{
      <decl_stmt><decl><type><name pos:line="49" pos:column="7">char<pos:position pos:line="49" pos:column="11"/></name></type> <name><name pos:line="49" pos:column="12">errbuf<pos:position pos:line="49" pos:column="18"/></name><index pos:line="49" pos:column="18">[<expr><literal type="number" pos:line="49" pos:column="19">4096<pos:position pos:line="49" pos:column="23"/></literal></expr>]<pos:position pos:line="49" pos:column="24"/></index></name></decl>;<pos:position pos:line="49" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="50" pos:column="7">WARNING<pos:position pos:line="50" pos:column="14"/></name><argument_list pos:line="50" pos:column="14">(<argument><expr><literal type="string" pos:line="50" pos:column="15">"vserver plugin: stat (%s) failed: %s"<pos:position pos:line="50" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="55">file<pos:position pos:line="50" pos:column="59"/></name></expr></argument>,
              <argument><expr><call><name pos:line="51" pos:column="15">sstrerror<pos:position pos:line="51" pos:column="24"/></name><argument_list pos:line="51" pos:column="24">(<argument><expr><name pos:line="51" pos:column="25">errno<pos:position pos:line="51" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="32">errbuf<pos:position pos:line="51" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="51" pos:column="40">sizeof<argument_list pos:line="51" pos:column="46">(<argument><expr><name pos:line="51" pos:column="47">errbuf<pos:position pos:line="51" pos:column="53"/></name></expr></argument>)<pos:position pos:line="51" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="51" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="51" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="57"/></expr_stmt>
      <continue pos:line="52" pos:column="7">continue;<pos:position pos:line="52" pos:column="16"/></continue>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>

    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><operator pos:line="55" pos:column="9">!<pos:position pos:line="55" pos:column="10"/></operator><call><name pos:line="55" pos:column="10">S_ISDIR<pos:position pos:line="55" pos:column="17"/></name><argument_list pos:line="55" pos:column="17">(<argument><expr><name><name pos:line="55" pos:column="18">statbuf<pos:position pos:line="55" pos:column="25"/></name><operator pos:line="55" pos:column="25">.<pos:position pos:line="55" pos:column="26"/></operator><name pos:line="55" pos:column="26">st_mode<pos:position pos:line="55" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="35"/></condition><then pos:line="55" pos:column="35">
      <block type="pseudo"><continue pos:line="56" pos:column="7">continue;<pos:position pos:line="56" pos:column="16"/></continue></block></then></if>

    <comment type="block" pos:line="58" pos:column="5">/* socket message accounting */</comment>
    <expr_stmt><expr><name pos:line="59" pos:column="5">len<pos:position pos:line="59" pos:column="8"/></name> <operator pos:line="59" pos:column="9">=<pos:position pos:line="59" pos:column="10"/></operator> <call><name pos:line="59" pos:column="11">ssnprintf<pos:position pos:line="59" pos:column="20"/></name><argument_list pos:line="59" pos:column="20">(<argument><expr><name pos:line="59" pos:column="21">file<pos:position pos:line="59" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="59" pos:column="27">sizeof<argument_list pos:line="59" pos:column="33">(<argument><expr><name pos:line="59" pos:column="34">file<pos:position pos:line="59" pos:column="38"/></name></expr></argument>)<pos:position pos:line="59" pos:column="39"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="59" pos:column="41">PROCDIR<pos:position pos:line="59" pos:column="48"/></name> <literal type="string" pos:line="59" pos:column="49">"/%s/cacct"<pos:position pos:line="59" pos:column="60"/></literal></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="62">dent<pos:position pos:line="59" pos:column="66"/></name><operator pos:line="59" pos:column="66">-&gt;<pos:position pos:line="59" pos:column="71"/></operator><name pos:line="59" pos:column="68">d_name<pos:position pos:line="59" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="76"/></expr_stmt>
    <if pos:line="60" pos:column="5">if <condition pos:line="60" pos:column="8">(<expr><operator pos:line="60" pos:column="9">(<pos:position pos:line="60" pos:column="10"/></operator><name pos:line="60" pos:column="10">len<pos:position pos:line="60" pos:column="13"/></name> <operator pos:line="60" pos:column="14">&lt;<pos:position pos:line="60" pos:column="18"/></operator> <literal type="number" pos:line="60" pos:column="16">0<pos:position pos:line="60" pos:column="17"/></literal><operator pos:line="60" pos:column="17">)<pos:position pos:line="60" pos:column="18"/></operator> <operator pos:line="60" pos:column="19">||<pos:position pos:line="60" pos:column="21"/></operator> <operator pos:line="60" pos:column="22">(<pos:position pos:line="60" pos:column="23"/></operator><operator pos:line="60" pos:column="23">(<pos:position pos:line="60" pos:column="24"/></operator><name pos:line="60" pos:column="24">size_t<pos:position pos:line="60" pos:column="30"/></name><operator pos:line="60" pos:column="30">)<pos:position pos:line="60" pos:column="31"/></operator><name pos:line="60" pos:column="31">len<pos:position pos:line="60" pos:column="34"/></name> <operator pos:line="60" pos:column="35">&gt;=<pos:position pos:line="60" pos:column="40"/></operator> <sizeof pos:line="60" pos:column="38">sizeof<argument_list pos:line="60" pos:column="44">(<argument><expr><name pos:line="60" pos:column="45">file<pos:position pos:line="60" pos:column="49"/></name></expr></argument>)<pos:position pos:line="60" pos:column="50"/></argument_list></sizeof><operator pos:line="60" pos:column="50">)<pos:position pos:line="60" pos:column="51"/></operator></expr>)<pos:position pos:line="60" pos:column="52"/></condition><then pos:line="60" pos:column="52">
      <block type="pseudo"><continue pos:line="61" pos:column="7">continue;<pos:position pos:line="61" pos:column="16"/></continue></block></then></if>

    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><name pos:line="63" pos:column="9">NULL<pos:position pos:line="63" pos:column="13"/></name> <operator pos:line="63" pos:column="14">==<pos:position pos:line="63" pos:column="16"/></operator> <operator pos:line="63" pos:column="17">(<pos:position pos:line="63" pos:column="18"/></operator><name pos:line="63" pos:column="18">fh<pos:position pos:line="63" pos:column="20"/></name> <operator pos:line="63" pos:column="21">=<pos:position pos:line="63" pos:column="22"/></operator> <call><name pos:line="63" pos:column="23">fopen<pos:position pos:line="63" pos:column="28"/></name><argument_list pos:line="63" pos:column="28">(<argument><expr><name pos:line="63" pos:column="29">file<pos:position pos:line="63" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="35">"r"<pos:position pos:line="63" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="39"/></argument_list></call><operator pos:line="63" pos:column="39">)<pos:position pos:line="63" pos:column="40"/></operator></expr>)<pos:position pos:line="63" pos:column="41"/></condition><then pos:line="63" pos:column="41"> <block pos:line="63" pos:column="42">{
      <decl_stmt><decl><type><name pos:line="64" pos:column="7">char<pos:position pos:line="64" pos:column="11"/></name></type> <name><name pos:line="64" pos:column="12">errbuf<pos:position pos:line="64" pos:column="18"/></name><index pos:line="64" pos:column="18">[<expr><literal type="number" pos:line="64" pos:column="19">1024<pos:position pos:line="64" pos:column="23"/></literal></expr>]<pos:position pos:line="64" pos:column="24"/></index></name></decl>;<pos:position pos:line="64" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="65" pos:column="7">ERROR<pos:position pos:line="65" pos:column="12"/></name><argument_list pos:line="65" pos:column="12">(<argument><expr><literal type="string" pos:line="65" pos:column="13">"Cannot open '%s': %s"<pos:position pos:line="65" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="37">file<pos:position pos:line="65" pos:column="41"/></name></expr></argument>,
            <argument><expr><call><name pos:line="66" pos:column="13">sstrerror<pos:position pos:line="66" pos:column="22"/></name><argument_list pos:line="66" pos:column="22">(<argument><expr><name pos:line="66" pos:column="23">errno<pos:position pos:line="66" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="30">errbuf<pos:position pos:line="66" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="66" pos:column="38">sizeof<argument_list pos:line="66" pos:column="44">(<argument><expr><name pos:line="66" pos:column="45">errbuf<pos:position pos:line="66" pos:column="51"/></name></expr></argument>)<pos:position pos:line="66" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="66" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="66" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="67" pos:column="6"/></block></then></if>

    <while pos:line="69" pos:column="5">while <condition pos:line="69" pos:column="11">(<expr><operator pos:line="69" pos:column="12">(<pos:position pos:line="69" pos:column="13"/></operator><name pos:line="69" pos:column="13">fh<pos:position pos:line="69" pos:column="15"/></name> <operator pos:line="69" pos:column="16">!=<pos:position pos:line="69" pos:column="18"/></operator> <name pos:line="69" pos:column="19">NULL<pos:position pos:line="69" pos:column="23"/></name><operator pos:line="69" pos:column="23">)<pos:position pos:line="69" pos:column="24"/></operator> <operator pos:line="69" pos:column="25">&amp;&amp;<pos:position pos:line="69" pos:column="35"/></operator> <operator pos:line="69" pos:column="28">(<pos:position pos:line="69" pos:column="29"/></operator><name pos:line="69" pos:column="29">NULL<pos:position pos:line="69" pos:column="33"/></name> <operator pos:line="69" pos:column="34">!=<pos:position pos:line="69" pos:column="36"/></operator> <call><name pos:line="69" pos:column="37">fgets<pos:position pos:line="69" pos:column="42"/></name><argument_list pos:line="69" pos:column="42">(<argument><expr><name pos:line="69" pos:column="43">buffer<pos:position pos:line="69" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="51">BUFSIZE<pos:position pos:line="69" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="60">fh<pos:position pos:line="69" pos:column="62"/></name></expr></argument>)<pos:position pos:line="69" pos:column="63"/></argument_list></call><operator pos:line="69" pos:column="63">)<pos:position pos:line="69" pos:column="64"/></operator></expr>)<pos:position pos:line="69" pos:column="65"/></condition> <block pos:line="69" pos:column="66">{
      <decl_stmt><decl><type><name pos:line="70" pos:column="7">derive_t<pos:position pos:line="70" pos:column="15"/></name></type> <name pos:line="70" pos:column="16">rx<pos:position pos:line="70" pos:column="18"/></name></decl>;<pos:position pos:line="70" pos:column="19"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="71" pos:column="7">derive_t<pos:position pos:line="71" pos:column="15"/></name></type> <name pos:line="71" pos:column="16">tx<pos:position pos:line="71" pos:column="18"/></name></decl>;<pos:position pos:line="71" pos:column="19"/></decl_stmt>
      <decl_stmt><decl><type><specifier pos:line="72" pos:column="7">const<pos:position pos:line="72" pos:column="12"/></specifier> <name pos:line="72" pos:column="13">char<pos:position pos:line="72" pos:column="17"/></name> <modifier pos:line="72" pos:column="18">*<pos:position pos:line="72" pos:column="19"/></modifier></type><name pos:line="72" pos:column="19">type_instance<pos:position pos:line="72" pos:column="32"/></name></decl>;<pos:position pos:line="72" pos:column="33"/></decl_stmt>

      <if pos:line="74" pos:column="7">if <condition pos:line="74" pos:column="10">(<expr><call><name pos:line="74" pos:column="11">strsplit<pos:position pos:line="74" pos:column="19"/></name><argument_list pos:line="74" pos:column="19">(<argument><expr><name pos:line="74" pos:column="20">buffer<pos:position pos:line="74" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="28">cols<pos:position pos:line="74" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="74" pos:column="34">4<pos:position pos:line="74" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="36"/></argument_list></call> <operator pos:line="74" pos:column="37">&lt;<pos:position pos:line="74" pos:column="41"/></operator> <literal type="number" pos:line="74" pos:column="39">4<pos:position pos:line="74" pos:column="40"/></literal></expr>)<pos:position pos:line="74" pos:column="41"/></condition><then pos:line="74" pos:column="41">
        <block type="pseudo"><continue pos:line="75" pos:column="9">continue;<pos:position pos:line="75" pos:column="18"/></continue></block></then></if>

      <if pos:line="77" pos:column="7">if <condition pos:line="77" pos:column="10">(<expr><literal type="number" pos:line="77" pos:column="11">0<pos:position pos:line="77" pos:column="12"/></literal> <operator pos:line="77" pos:column="13">==<pos:position pos:line="77" pos:column="15"/></operator> <call><name pos:line="77" pos:column="16">strcmp<pos:position pos:line="77" pos:column="22"/></name><argument_list pos:line="77" pos:column="22">(<argument><expr><name><name pos:line="77" pos:column="23">cols<pos:position pos:line="77" pos:column="27"/></name><index pos:line="77" pos:column="27">[<expr><literal type="number" pos:line="77" pos:column="28">0<pos:position pos:line="77" pos:column="29"/></literal></expr>]<pos:position pos:line="77" pos:column="30"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="32">"UNIX:"<pos:position pos:line="77" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="77" pos:column="41"/></condition><then pos:line="77" pos:column="41">
        <block type="pseudo"><expr_stmt><expr><name pos:line="78" pos:column="9">type_instance<pos:position pos:line="78" pos:column="22"/></name> <operator pos:line="78" pos:column="23">=<pos:position pos:line="78" pos:column="24"/></operator> <literal type="string" pos:line="78" pos:column="25">"unix"<pos:position pos:line="78" pos:column="31"/></literal></expr>;<pos:position pos:line="78" pos:column="32"/></expr_stmt></block></then>
      <elseif pos:line="79" pos:column="7">else <if pos:line="79" pos:column="12">if <condition pos:line="79" pos:column="15">(<expr><literal type="number" pos:line="79" pos:column="16">0<pos:position pos:line="79" pos:column="17"/></literal> <operator pos:line="79" pos:column="18">==<pos:position pos:line="79" pos:column="20"/></operator> <call><name pos:line="79" pos:column="21">strcmp<pos:position pos:line="79" pos:column="27"/></name><argument_list pos:line="79" pos:column="27">(<argument><expr><name><name pos:line="79" pos:column="28">cols<pos:position pos:line="79" pos:column="32"/></name><index pos:line="79" pos:column="32">[<expr><literal type="number" pos:line="79" pos:column="33">0<pos:position pos:line="79" pos:column="34"/></literal></expr>]<pos:position pos:line="79" pos:column="35"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="37">"INET:"<pos:position pos:line="79" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="79" pos:column="46"/></condition><then pos:line="79" pos:column="46">
        <block type="pseudo"><expr_stmt><expr><name pos:line="80" pos:column="9">type_instance<pos:position pos:line="80" pos:column="22"/></name> <operator pos:line="80" pos:column="23">=<pos:position pos:line="80" pos:column="24"/></operator> <literal type="string" pos:line="80" pos:column="25">"inet"<pos:position pos:line="80" pos:column="31"/></literal></expr>;<pos:position pos:line="80" pos:column="32"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="81" pos:column="7">else <if pos:line="81" pos:column="12">if <condition pos:line="81" pos:column="15">(<expr><literal type="number" pos:line="81" pos:column="16">0<pos:position pos:line="81" pos:column="17"/></literal> <operator pos:line="81" pos:column="18">==<pos:position pos:line="81" pos:column="20"/></operator> <call><name pos:line="81" pos:column="21">strcmp<pos:position pos:line="81" pos:column="27"/></name><argument_list pos:line="81" pos:column="27">(<argument><expr><name><name pos:line="81" pos:column="28">cols<pos:position pos:line="81" pos:column="32"/></name><index pos:line="81" pos:column="32">[<expr><literal type="number" pos:line="81" pos:column="33">0<pos:position pos:line="81" pos:column="34"/></literal></expr>]<pos:position pos:line="81" pos:column="35"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="37">"INET6:"<pos:position pos:line="81" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="81" pos:column="47"/></condition><then pos:line="81" pos:column="47">
        <block type="pseudo"><expr_stmt><expr><name pos:line="82" pos:column="9">type_instance<pos:position pos:line="82" pos:column="22"/></name> <operator pos:line="82" pos:column="23">=<pos:position pos:line="82" pos:column="24"/></operator> <literal type="string" pos:line="82" pos:column="25">"inet6"<pos:position pos:line="82" pos:column="32"/></literal></expr>;<pos:position pos:line="82" pos:column="33"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="83" pos:column="7">else <if pos:line="83" pos:column="12">if <condition pos:line="83" pos:column="15">(<expr><literal type="number" pos:line="83" pos:column="16">0<pos:position pos:line="83" pos:column="17"/></literal> <operator pos:line="83" pos:column="18">==<pos:position pos:line="83" pos:column="20"/></operator> <call><name pos:line="83" pos:column="21">strcmp<pos:position pos:line="83" pos:column="27"/></name><argument_list pos:line="83" pos:column="27">(<argument><expr><name><name pos:line="83" pos:column="28">cols<pos:position pos:line="83" pos:column="32"/></name><index pos:line="83" pos:column="32">[<expr><literal type="number" pos:line="83" pos:column="33">0<pos:position pos:line="83" pos:column="34"/></literal></expr>]<pos:position pos:line="83" pos:column="35"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="37">"OTHER:"<pos:position pos:line="83" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="83" pos:column="47"/></condition><then pos:line="83" pos:column="47">
        <block type="pseudo"><expr_stmt><expr><name pos:line="84" pos:column="9">type_instance<pos:position pos:line="84" pos:column="22"/></name> <operator pos:line="84" pos:column="23">=<pos:position pos:line="84" pos:column="24"/></operator> <literal type="string" pos:line="84" pos:column="25">"other"<pos:position pos:line="84" pos:column="32"/></literal></expr>;<pos:position pos:line="84" pos:column="33"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="85" pos:column="7">else <if pos:line="85" pos:column="12">if <condition pos:line="85" pos:column="15">(<expr><literal type="number" pos:line="85" pos:column="16">0<pos:position pos:line="85" pos:column="17"/></literal> <operator pos:line="85" pos:column="18">==<pos:position pos:line="85" pos:column="20"/></operator> <call><name pos:line="85" pos:column="21">strcmp<pos:position pos:line="85" pos:column="27"/></name><argument_list pos:line="85" pos:column="27">(<argument><expr><name><name pos:line="85" pos:column="28">cols<pos:position pos:line="85" pos:column="32"/></name><index pos:line="85" pos:column="32">[<expr><literal type="number" pos:line="85" pos:column="33">0<pos:position pos:line="85" pos:column="34"/></literal></expr>]<pos:position pos:line="85" pos:column="35"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="37">"UNSPEC:"<pos:position pos:line="85" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="85" pos:column="48"/></condition><then pos:line="85" pos:column="48">
        <block type="pseudo"><expr_stmt><expr><name pos:line="86" pos:column="9">type_instance<pos:position pos:line="86" pos:column="22"/></name> <operator pos:line="86" pos:column="23">=<pos:position pos:line="86" pos:column="24"/></operator> <literal type="string" pos:line="86" pos:column="25">"unspec"<pos:position pos:line="86" pos:column="33"/></literal></expr>;<pos:position pos:line="86" pos:column="34"/></expr_stmt></block></then></if></elseif>
      <else pos:line="87" pos:column="7">else
        <block type="pseudo"><continue pos:line="88" pos:column="9">continue;<pos:position pos:line="88" pos:column="18"/></continue></block></else></if>

      <expr_stmt><expr><name pos:line="90" pos:column="7">rx<pos:position pos:line="90" pos:column="9"/></name> <operator pos:line="90" pos:column="10">=<pos:position pos:line="90" pos:column="11"/></operator> <call><name pos:line="90" pos:column="12">vserver_get_sock_bytes<pos:position pos:line="90" pos:column="34"/></name><argument_list pos:line="90" pos:column="34">(<argument><expr><name><name pos:line="90" pos:column="35">cols<pos:position pos:line="90" pos:column="39"/></name><index pos:line="90" pos:column="39">[<expr><literal type="number" pos:line="90" pos:column="40">1<pos:position pos:line="90" pos:column="41"/></literal></expr>]<pos:position pos:line="90" pos:column="42"/></index></name></expr></argument>)<pos:position pos:line="90" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="44"/></expr_stmt>
      <expr_stmt><expr><name pos:line="91" pos:column="7">tx<pos:position pos:line="91" pos:column="9"/></name> <operator pos:line="91" pos:column="10">=<pos:position pos:line="91" pos:column="11"/></operator> <call><name pos:line="91" pos:column="12">vserver_get_sock_bytes<pos:position pos:line="91" pos:column="34"/></name><argument_list pos:line="91" pos:column="34">(<argument><expr><name><name pos:line="91" pos:column="35">cols<pos:position pos:line="91" pos:column="39"/></name><index pos:line="91" pos:column="39">[<expr><literal type="number" pos:line="91" pos:column="40">2<pos:position pos:line="91" pos:column="41"/></literal></expr>]<pos:position pos:line="91" pos:column="42"/></index></name></expr></argument>)<pos:position pos:line="91" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="44"/></expr_stmt>
      <comment type="block" pos:line="92" pos:column="7">/* cols[3] == errors */</comment>

      <expr_stmt><expr><call><name pos:line="94" pos:column="7">traffic_submit<pos:position pos:line="94" pos:column="21"/></name><argument_list pos:line="94" pos:column="21">(<argument><expr><name><name pos:line="94" pos:column="22">dent<pos:position pos:line="94" pos:column="26"/></name><operator pos:line="94" pos:column="26">-&gt;<pos:position pos:line="94" pos:column="31"/></operator><name pos:line="94" pos:column="28">d_name<pos:position pos:line="94" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="36">type_instance<pos:position pos:line="94" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="51">rx<pos:position pos:line="94" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="55">tx<pos:position pos:line="94" pos:column="57"/></name></expr></argument>)<pos:position pos:line="94" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="95" pos:column="6"/></block></while> <comment type="block" pos:line="95" pos:column="7">/* while (fgets) */</comment>

    <if pos:line="97" pos:column="5">if <condition pos:line="97" pos:column="8">(<expr><name pos:line="97" pos:column="9">fh<pos:position pos:line="97" pos:column="11"/></name> <operator pos:line="97" pos:column="12">!=<pos:position pos:line="97" pos:column="14"/></operator> <name pos:line="97" pos:column="15">NULL<pos:position pos:line="97" pos:column="19"/></name></expr>)<pos:position pos:line="97" pos:column="20"/></condition><then pos:line="97" pos:column="20"> <block pos:line="97" pos:column="21">{
      <expr_stmt><expr><call><name pos:line="98" pos:column="7">fclose<pos:position pos:line="98" pos:column="13"/></name><argument_list pos:line="98" pos:column="13">(<argument><expr><name pos:line="98" pos:column="14">fh<pos:position pos:line="98" pos:column="16"/></name></expr></argument>)<pos:position pos:line="98" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="18"/></expr_stmt>
      <expr_stmt><expr><name pos:line="99" pos:column="7">fh<pos:position pos:line="99" pos:column="9"/></name> <operator pos:line="99" pos:column="10">=<pos:position pos:line="99" pos:column="11"/></operator> <name pos:line="99" pos:column="12">NULL<pos:position pos:line="99" pos:column="16"/></name></expr>;<pos:position pos:line="99" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="100" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="102" pos:column="5">/* thread information and load */</comment>
    <expr_stmt><expr><name pos:line="103" pos:column="5">len<pos:position pos:line="103" pos:column="8"/></name> <operator pos:line="103" pos:column="9">=<pos:position pos:line="103" pos:column="10"/></operator> <call><name pos:line="103" pos:column="11">ssnprintf<pos:position pos:line="103" pos:column="20"/></name><argument_list pos:line="103" pos:column="20">(<argument><expr><name pos:line="103" pos:column="21">file<pos:position pos:line="103" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="103" pos:column="27">sizeof<argument_list pos:line="103" pos:column="33">(<argument><expr><name pos:line="103" pos:column="34">file<pos:position pos:line="103" pos:column="38"/></name></expr></argument>)<pos:position pos:line="103" pos:column="39"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="103" pos:column="41">PROCDIR<pos:position pos:line="103" pos:column="48"/></name> <literal type="string" pos:line="103" pos:column="49">"/%s/cvirt"<pos:position pos:line="103" pos:column="60"/></literal></expr></argument>, <argument><expr><name><name pos:line="103" pos:column="62">dent<pos:position pos:line="103" pos:column="66"/></name><operator pos:line="103" pos:column="66">-&gt;<pos:position pos:line="103" pos:column="71"/></operator><name pos:line="103" pos:column="68">d_name<pos:position pos:line="103" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="103" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="76"/></expr_stmt>
    <if pos:line="104" pos:column="5">if <condition pos:line="104" pos:column="8">(<expr><operator pos:line="104" pos:column="9">(<pos:position pos:line="104" pos:column="10"/></operator><name pos:line="104" pos:column="10">len<pos:position pos:line="104" pos:column="13"/></name> <operator pos:line="104" pos:column="14">&lt;<pos:position pos:line="104" pos:column="18"/></operator> <literal type="number" pos:line="104" pos:column="16">0<pos:position pos:line="104" pos:column="17"/></literal><operator pos:line="104" pos:column="17">)<pos:position pos:line="104" pos:column="18"/></operator> <operator pos:line="104" pos:column="19">||<pos:position pos:line="104" pos:column="21"/></operator> <operator pos:line="104" pos:column="22">(<pos:position pos:line="104" pos:column="23"/></operator><operator pos:line="104" pos:column="23">(<pos:position pos:line="104" pos:column="24"/></operator><name pos:line="104" pos:column="24">size_t<pos:position pos:line="104" pos:column="30"/></name><operator pos:line="104" pos:column="30">)<pos:position pos:line="104" pos:column="31"/></operator><name pos:line="104" pos:column="31">len<pos:position pos:line="104" pos:column="34"/></name> <operator pos:line="104" pos:column="35">&gt;=<pos:position pos:line="104" pos:column="40"/></operator> <sizeof pos:line="104" pos:column="38">sizeof<argument_list pos:line="104" pos:column="44">(<argument><expr><name pos:line="104" pos:column="45">file<pos:position pos:line="104" pos:column="49"/></name></expr></argument>)<pos:position pos:line="104" pos:column="50"/></argument_list></sizeof><operator pos:line="104" pos:column="50">)<pos:position pos:line="104" pos:column="51"/></operator></expr>)<pos:position pos:line="104" pos:column="52"/></condition><then pos:line="104" pos:column="52">
      <block type="pseudo"><continue pos:line="105" pos:column="7">continue;<pos:position pos:line="105" pos:column="16"/></continue></block></then></if>

    <if pos:line="107" pos:column="5">if <condition pos:line="107" pos:column="8">(<expr><name pos:line="107" pos:column="9">NULL<pos:position pos:line="107" pos:column="13"/></name> <operator pos:line="107" pos:column="14">==<pos:position pos:line="107" pos:column="16"/></operator> <operator pos:line="107" pos:column="17">(<pos:position pos:line="107" pos:column="18"/></operator><name pos:line="107" pos:column="18">fh<pos:position pos:line="107" pos:column="20"/></name> <operator pos:line="107" pos:column="21">=<pos:position pos:line="107" pos:column="22"/></operator> <call><name pos:line="107" pos:column="23">fopen<pos:position pos:line="107" pos:column="28"/></name><argument_list pos:line="107" pos:column="28">(<argument><expr><name pos:line="107" pos:column="29">file<pos:position pos:line="107" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="35">"r"<pos:position pos:line="107" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="39"/></argument_list></call><operator pos:line="107" pos:column="39">)<pos:position pos:line="107" pos:column="40"/></operator></expr>)<pos:position pos:line="107" pos:column="41"/></condition><then pos:line="107" pos:column="41"> <block pos:line="107" pos:column="42">{
      <decl_stmt><decl><type><name pos:line="108" pos:column="7">char<pos:position pos:line="108" pos:column="11"/></name></type> <name><name pos:line="108" pos:column="12">errbuf<pos:position pos:line="108" pos:column="18"/></name><index pos:line="108" pos:column="18">[<expr><literal type="number" pos:line="108" pos:column="19">1024<pos:position pos:line="108" pos:column="23"/></literal></expr>]<pos:position pos:line="108" pos:column="24"/></index></name></decl>;<pos:position pos:line="108" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="109" pos:column="7">ERROR<pos:position pos:line="109" pos:column="12"/></name><argument_list pos:line="109" pos:column="12">(<argument><expr><literal type="string" pos:line="109" pos:column="13">"Cannot open '%s': %s"<pos:position pos:line="109" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="109" pos:column="37">file<pos:position pos:line="109" pos:column="41"/></name></expr></argument>,
            <argument><expr><call><name pos:line="110" pos:column="13">sstrerror<pos:position pos:line="110" pos:column="22"/></name><argument_list pos:line="110" pos:column="22">(<argument><expr><name pos:line="110" pos:column="23">errno<pos:position pos:line="110" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="30">errbuf<pos:position pos:line="110" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="110" pos:column="38">sizeof<argument_list pos:line="110" pos:column="44">(<argument><expr><name pos:line="110" pos:column="45">errbuf<pos:position pos:line="110" pos:column="51"/></name></expr></argument>)<pos:position pos:line="110" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="110" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="110" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="111" pos:column="6"/></block></then></if>

    <while pos:line="113" pos:column="5">while <condition pos:line="113" pos:column="11">(<expr><operator pos:line="113" pos:column="12">(<pos:position pos:line="113" pos:column="13"/></operator><name pos:line="113" pos:column="13">fh<pos:position pos:line="113" pos:column="15"/></name> <operator pos:line="113" pos:column="16">!=<pos:position pos:line="113" pos:column="18"/></operator> <name pos:line="113" pos:column="19">NULL<pos:position pos:line="113" pos:column="23"/></name><operator pos:line="113" pos:column="23">)<pos:position pos:line="113" pos:column="24"/></operator> <operator pos:line="113" pos:column="25">&amp;&amp;<pos:position pos:line="113" pos:column="35"/></operator> <operator pos:line="113" pos:column="28">(<pos:position pos:line="113" pos:column="29"/></operator><name pos:line="113" pos:column="29">NULL<pos:position pos:line="113" pos:column="33"/></name> <operator pos:line="113" pos:column="34">!=<pos:position pos:line="113" pos:column="36"/></operator> <call><name pos:line="113" pos:column="37">fgets<pos:position pos:line="113" pos:column="42"/></name><argument_list pos:line="113" pos:column="42">(<argument><expr><name pos:line="113" pos:column="43">buffer<pos:position pos:line="113" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="51">BUFSIZE<pos:position pos:line="113" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="60">fh<pos:position pos:line="113" pos:column="62"/></name></expr></argument>)<pos:position pos:line="113" pos:column="63"/></argument_list></call><operator pos:line="113" pos:column="63">)<pos:position pos:line="113" pos:column="64"/></operator></expr>)<pos:position pos:line="113" pos:column="65"/></condition> <block pos:line="113" pos:column="66">{
      <decl_stmt><decl><type><name pos:line="114" pos:column="7">int<pos:position pos:line="114" pos:column="10"/></name></type> <name pos:line="114" pos:column="11">n<pos:position pos:line="114" pos:column="12"/></name> <init pos:line="114" pos:column="13">= <expr><call><name pos:line="114" pos:column="15">strsplit<pos:position pos:line="114" pos:column="23"/></name><argument_list pos:line="114" pos:column="23">(<argument><expr><name pos:line="114" pos:column="24">buffer<pos:position pos:line="114" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="32">cols<pos:position pos:line="114" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="114" pos:column="38">4<pos:position pos:line="114" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="114" pos:column="41"/></decl_stmt>

      <if pos:line="116" pos:column="7">if <condition pos:line="116" pos:column="10">(<expr><literal type="number" pos:line="116" pos:column="11">2<pos:position pos:line="116" pos:column="12"/></literal> <operator pos:line="116" pos:column="13">==<pos:position pos:line="116" pos:column="15"/></operator> <name pos:line="116" pos:column="16">n<pos:position pos:line="116" pos:column="17"/></name></expr>)<pos:position pos:line="116" pos:column="18"/></condition><then pos:line="116" pos:column="18"> <block pos:line="116" pos:column="19">{
        <decl_stmt><decl><type><specifier pos:line="117" pos:column="9">const<pos:position pos:line="117" pos:column="14"/></specifier> <name pos:line="117" pos:column="15">char<pos:position pos:line="117" pos:column="19"/></name> <modifier pos:line="117" pos:column="20">*<pos:position pos:line="117" pos:column="21"/></modifier></type><name pos:line="117" pos:column="21">type_instance<pos:position pos:line="117" pos:column="34"/></name></decl>;<pos:position pos:line="117" pos:column="35"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="118" pos:column="9">gauge_t<pos:position pos:line="118" pos:column="16"/></name></type> <name pos:line="118" pos:column="17">value<pos:position pos:line="118" pos:column="22"/></name></decl>;<pos:position pos:line="118" pos:column="23"/></decl_stmt>

        <if pos:line="120" pos:column="9">if <condition pos:line="120" pos:column="12">(<expr><literal type="number" pos:line="120" pos:column="13">0<pos:position pos:line="120" pos:column="14"/></literal> <operator pos:line="120" pos:column="15">==<pos:position pos:line="120" pos:column="17"/></operator> <call><name pos:line="120" pos:column="18">strcmp<pos:position pos:line="120" pos:column="24"/></name><argument_list pos:line="120" pos:column="24">(<argument><expr><name><name pos:line="120" pos:column="25">cols<pos:position pos:line="120" pos:column="29"/></name><index pos:line="120" pos:column="29">[<expr><literal type="number" pos:line="120" pos:column="30">0<pos:position pos:line="120" pos:column="31"/></literal></expr>]<pos:position pos:line="120" pos:column="32"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="120" pos:column="34">"nr_threads:"<pos:position pos:line="120" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="120" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="120" pos:column="49"/></condition><then pos:line="120" pos:column="49">
          <block type="pseudo"><expr_stmt><expr><name pos:line="121" pos:column="11">type_instance<pos:position pos:line="121" pos:column="24"/></name> <operator pos:line="121" pos:column="25">=<pos:position pos:line="121" pos:column="26"/></operator> <literal type="string" pos:line="121" pos:column="27">"total"<pos:position pos:line="121" pos:column="34"/></literal></expr>;<pos:position pos:line="121" pos:column="35"/></expr_stmt></block></then>
        <elseif pos:line="122" pos:column="9">else <if pos:line="122" pos:column="14">if <condition pos:line="122" pos:column="17">(<expr><literal type="number" pos:line="122" pos:column="18">0<pos:position pos:line="122" pos:column="19"/></literal> <operator pos:line="122" pos:column="20">==<pos:position pos:line="122" pos:column="22"/></operator> <call><name pos:line="122" pos:column="23">strcmp<pos:position pos:line="122" pos:column="29"/></name><argument_list pos:line="122" pos:column="29">(<argument><expr><name><name pos:line="122" pos:column="30">cols<pos:position pos:line="122" pos:column="34"/></name><index pos:line="122" pos:column="34">[<expr><literal type="number" pos:line="122" pos:column="35">0<pos:position pos:line="122" pos:column="36"/></literal></expr>]<pos:position pos:line="122" pos:column="37"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="122" pos:column="39">"nr_running:"<pos:position pos:line="122" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="122" pos:column="54"/></condition><then pos:line="122" pos:column="54">
          <block type="pseudo"><expr_stmt><expr><name pos:line="123" pos:column="11">type_instance<pos:position pos:line="123" pos:column="24"/></name> <operator pos:line="123" pos:column="25">=<pos:position pos:line="123" pos:column="26"/></operator> <literal type="string" pos:line="123" pos:column="27">"running"<pos:position pos:line="123" pos:column="36"/></literal></expr>;<pos:position pos:line="123" pos:column="37"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="124" pos:column="9">else <if pos:line="124" pos:column="14">if <condition pos:line="124" pos:column="17">(<expr><literal type="number" pos:line="124" pos:column="18">0<pos:position pos:line="124" pos:column="19"/></literal> <operator pos:line="124" pos:column="20">==<pos:position pos:line="124" pos:column="22"/></operator> <call><name pos:line="124" pos:column="23">strcmp<pos:position pos:line="124" pos:column="29"/></name><argument_list pos:line="124" pos:column="29">(<argument><expr><name><name pos:line="124" pos:column="30">cols<pos:position pos:line="124" pos:column="34"/></name><index pos:line="124" pos:column="34">[<expr><literal type="number" pos:line="124" pos:column="35">0<pos:position pos:line="124" pos:column="36"/></literal></expr>]<pos:position pos:line="124" pos:column="37"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="124" pos:column="39">"nr_unintr:"<pos:position pos:line="124" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="124" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="124" pos:column="53"/></condition><then pos:line="124" pos:column="53">
          <block type="pseudo"><expr_stmt><expr><name pos:line="125" pos:column="11">type_instance<pos:position pos:line="125" pos:column="24"/></name> <operator pos:line="125" pos:column="25">=<pos:position pos:line="125" pos:column="26"/></operator> <literal type="string" pos:line="125" pos:column="27">"uninterruptable"<pos:position pos:line="125" pos:column="44"/></literal></expr>;<pos:position pos:line="125" pos:column="45"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="126" pos:column="9">else <if pos:line="126" pos:column="14">if <condition pos:line="126" pos:column="17">(<expr><literal type="number" pos:line="126" pos:column="18">0<pos:position pos:line="126" pos:column="19"/></literal> <operator pos:line="126" pos:column="20">==<pos:position pos:line="126" pos:column="22"/></operator> <call><name pos:line="126" pos:column="23">strcmp<pos:position pos:line="126" pos:column="29"/></name><argument_list pos:line="126" pos:column="29">(<argument><expr><name><name pos:line="126" pos:column="30">cols<pos:position pos:line="126" pos:column="34"/></name><index pos:line="126" pos:column="34">[<expr><literal type="number" pos:line="126" pos:column="35">0<pos:position pos:line="126" pos:column="36"/></literal></expr>]<pos:position pos:line="126" pos:column="37"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="126" pos:column="39">"nr_onhold:"<pos:position pos:line="126" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="126" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="126" pos:column="53"/></condition><then pos:line="126" pos:column="53">
          <block type="pseudo"><expr_stmt><expr><name pos:line="127" pos:column="11">type_instance<pos:position pos:line="127" pos:column="24"/></name> <operator pos:line="127" pos:column="25">=<pos:position pos:line="127" pos:column="26"/></operator> <literal type="string" pos:line="127" pos:column="27">"onhold"<pos:position pos:line="127" pos:column="35"/></literal></expr>;<pos:position pos:line="127" pos:column="36"/></expr_stmt></block></then></if></elseif>
        <else pos:line="128" pos:column="9">else
          <block type="pseudo"><continue pos:line="129" pos:column="11">continue;<pos:position pos:line="129" pos:column="20"/></continue></block></else></if>

        <expr_stmt><expr><name pos:line="131" pos:column="9">value<pos:position pos:line="131" pos:column="14"/></name> <operator pos:line="131" pos:column="15">=<pos:position pos:line="131" pos:column="16"/></operator> <call><name pos:line="131" pos:column="17">atof<pos:position pos:line="131" pos:column="21"/></name><argument_list pos:line="131" pos:column="21">(<argument><expr><name><name pos:line="131" pos:column="22">cols<pos:position pos:line="131" pos:column="26"/></name><index pos:line="131" pos:column="26">[<expr><literal type="number" pos:line="131" pos:column="27">1<pos:position pos:line="131" pos:column="28"/></literal></expr>]<pos:position pos:line="131" pos:column="29"/></index></name></expr></argument>)<pos:position pos:line="131" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="132" pos:column="9">submit_gauge<pos:position pos:line="132" pos:column="21"/></name><argument_list pos:line="132" pos:column="21">(<argument><expr><name><name pos:line="132" pos:column="22">dent<pos:position pos:line="132" pos:column="26"/></name><operator pos:line="132" pos:column="26">-&gt;<pos:position pos:line="132" pos:column="31"/></operator><name pos:line="132" pos:column="28">d_name<pos:position pos:line="132" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="132" pos:column="36">"vs_threads"<pos:position pos:line="132" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="132" pos:column="50">type_instance<pos:position pos:line="132" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="65">value<pos:position pos:line="132" pos:column="70"/></name></expr></argument>)<pos:position pos:line="132" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="72"/></expr_stmt>
      }<pos:position pos:line="133" pos:column="8"/></block></then> <elseif pos:line="133" pos:column="9">else <if pos:line="133" pos:column="14">if <condition pos:line="133" pos:column="17">(<expr><literal type="number" pos:line="133" pos:column="18">4<pos:position pos:line="133" pos:column="19"/></literal> <operator pos:line="133" pos:column="20">==<pos:position pos:line="133" pos:column="22"/></operator> <name pos:line="133" pos:column="23">n<pos:position pos:line="133" pos:column="24"/></name></expr>)<pos:position pos:line="133" pos:column="25"/></condition><then pos:line="133" pos:column="25"> <block pos:line="133" pos:column="26">{
        <if pos:line="134" pos:column="9">if <condition pos:line="134" pos:column="12">(<expr><literal type="number" pos:line="134" pos:column="13">0<pos:position pos:line="134" pos:column="14"/></literal> <operator pos:line="134" pos:column="15">==<pos:position pos:line="134" pos:column="17"/></operator> <call><name pos:line="134" pos:column="18">strcmp<pos:position pos:line="134" pos:column="24"/></name><argument_list pos:line="134" pos:column="24">(<argument><expr><name><name pos:line="134" pos:column="25">cols<pos:position pos:line="134" pos:column="29"/></name><index pos:line="134" pos:column="29">[<expr><literal type="number" pos:line="134" pos:column="30">0<pos:position pos:line="134" pos:column="31"/></literal></expr>]<pos:position pos:line="134" pos:column="32"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="134" pos:column="34">"loadavg:"<pos:position pos:line="134" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="134" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="134" pos:column="46"/></condition><then pos:line="134" pos:column="46"> <block pos:line="134" pos:column="47">{
          <decl_stmt><decl><type><name pos:line="135" pos:column="11">gauge_t<pos:position pos:line="135" pos:column="18"/></name></type> <name pos:line="135" pos:column="19">snum<pos:position pos:line="135" pos:column="23"/></name> <init pos:line="135" pos:column="24">= <expr><call><name pos:line="135" pos:column="26">atof<pos:position pos:line="135" pos:column="30"/></name><argument_list pos:line="135" pos:column="30">(<argument><expr><name><name pos:line="135" pos:column="31">cols<pos:position pos:line="135" pos:column="35"/></name><index pos:line="135" pos:column="35">[<expr><literal type="number" pos:line="135" pos:column="36">1<pos:position pos:line="135" pos:column="37"/></literal></expr>]<pos:position pos:line="135" pos:column="38"/></index></name></expr></argument>)<pos:position pos:line="135" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="135" pos:column="40"/></decl_stmt>
          <decl_stmt><decl><type><name pos:line="136" pos:column="11">gauge_t<pos:position pos:line="136" pos:column="18"/></name></type> <name pos:line="136" pos:column="19">mnum<pos:position pos:line="136" pos:column="23"/></name> <init pos:line="136" pos:column="24">= <expr><call><name pos:line="136" pos:column="26">atof<pos:position pos:line="136" pos:column="30"/></name><argument_list pos:line="136" pos:column="30">(<argument><expr><name><name pos:line="136" pos:column="31">cols<pos:position pos:line="136" pos:column="35"/></name><index pos:line="136" pos:column="35">[<expr><literal type="number" pos:line="136" pos:column="36">2<pos:position pos:line="136" pos:column="37"/></literal></expr>]<pos:position pos:line="136" pos:column="38"/></index></name></expr></argument>)<pos:position pos:line="136" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="136" pos:column="40"/></decl_stmt>
          <decl_stmt><decl><type><name pos:line="137" pos:column="11">gauge_t<pos:position pos:line="137" pos:column="18"/></name></type> <name pos:line="137" pos:column="19">lnum<pos:position pos:line="137" pos:column="23"/></name> <init pos:line="137" pos:column="24">= <expr><call><name pos:line="137" pos:column="26">atof<pos:position pos:line="137" pos:column="30"/></name><argument_list pos:line="137" pos:column="30">(<argument><expr><name><name pos:line="137" pos:column="31">cols<pos:position pos:line="137" pos:column="35"/></name><index pos:line="137" pos:column="35">[<expr><literal type="number" pos:line="137" pos:column="36">3<pos:position pos:line="137" pos:column="37"/></literal></expr>]<pos:position pos:line="137" pos:column="38"/></index></name></expr></argument>)<pos:position pos:line="137" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="137" pos:column="40"/></decl_stmt>
          <expr_stmt><expr><call><name pos:line="138" pos:column="11">load_submit<pos:position pos:line="138" pos:column="22"/></name><argument_list pos:line="138" pos:column="22">(<argument><expr><name><name pos:line="138" pos:column="23">dent<pos:position pos:line="138" pos:column="27"/></name><operator pos:line="138" pos:column="27">-&gt;<pos:position pos:line="138" pos:column="32"/></operator><name pos:line="138" pos:column="29">d_name<pos:position pos:line="138" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="138" pos:column="37">snum<pos:position pos:line="138" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="138" pos:column="43">mnum<pos:position pos:line="138" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="138" pos:column="49">lnum<pos:position pos:line="138" pos:column="53"/></name></expr></argument>)<pos:position pos:line="138" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="55"/></expr_stmt>
        }<pos:position pos:line="139" pos:column="10"/></block></then></if>
      }<pos:position pos:line="140" pos:column="8"/></block></then></if></elseif></if>
    }<pos:position pos:line="141" pos:column="6"/></block></while> <comment type="block" pos:line="141" pos:column="7">/* while (fgets) */</comment>

    <if pos:line="143" pos:column="5">if <condition pos:line="143" pos:column="8">(<expr><name pos:line="143" pos:column="9">fh<pos:position pos:line="143" pos:column="11"/></name> <operator pos:line="143" pos:column="12">!=<pos:position pos:line="143" pos:column="14"/></operator> <name pos:line="143" pos:column="15">NULL<pos:position pos:line="143" pos:column="19"/></name></expr>)<pos:position pos:line="143" pos:column="20"/></condition><then pos:line="143" pos:column="20"> <block pos:line="143" pos:column="21">{
      <expr_stmt><expr><call><name pos:line="144" pos:column="7">fclose<pos:position pos:line="144" pos:column="13"/></name><argument_list pos:line="144" pos:column="13">(<argument><expr><name pos:line="144" pos:column="14">fh<pos:position pos:line="144" pos:column="16"/></name></expr></argument>)<pos:position pos:line="144" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="18"/></expr_stmt>
      <expr_stmt><expr><name pos:line="145" pos:column="7">fh<pos:position pos:line="145" pos:column="9"/></name> <operator pos:line="145" pos:column="10">=<pos:position pos:line="145" pos:column="11"/></operator> <name pos:line="145" pos:column="12">NULL<pos:position pos:line="145" pos:column="16"/></name></expr>;<pos:position pos:line="145" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="146" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="148" pos:column="5">/* processes and memory usage */</comment>
    <expr_stmt><expr><name pos:line="149" pos:column="5">len<pos:position pos:line="149" pos:column="8"/></name> <operator pos:line="149" pos:column="9">=<pos:position pos:line="149" pos:column="10"/></operator> <call><name pos:line="149" pos:column="11">ssnprintf<pos:position pos:line="149" pos:column="20"/></name><argument_list pos:line="149" pos:column="20">(<argument><expr><name pos:line="149" pos:column="21">file<pos:position pos:line="149" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="149" pos:column="27">sizeof<argument_list pos:line="149" pos:column="33">(<argument><expr><name pos:line="149" pos:column="34">file<pos:position pos:line="149" pos:column="38"/></name></expr></argument>)<pos:position pos:line="149" pos:column="39"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="149" pos:column="41">PROCDIR<pos:position pos:line="149" pos:column="48"/></name> <literal type="string" pos:line="149" pos:column="49">"/%s/limit"<pos:position pos:line="149" pos:column="60"/></literal></expr></argument>, <argument><expr><name><name pos:line="149" pos:column="62">dent<pos:position pos:line="149" pos:column="66"/></name><operator pos:line="149" pos:column="66">-&gt;<pos:position pos:line="149" pos:column="71"/></operator><name pos:line="149" pos:column="68">d_name<pos:position pos:line="149" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="149" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="76"/></expr_stmt>
    <if pos:line="150" pos:column="5">if <condition pos:line="150" pos:column="8">(<expr><operator pos:line="150" pos:column="9">(<pos:position pos:line="150" pos:column="10"/></operator><name pos:line="150" pos:column="10">len<pos:position pos:line="150" pos:column="13"/></name> <operator pos:line="150" pos:column="14">&lt;<pos:position pos:line="150" pos:column="18"/></operator> <literal type="number" pos:line="150" pos:column="16">0<pos:position pos:line="150" pos:column="17"/></literal><operator pos:line="150" pos:column="17">)<pos:position pos:line="150" pos:column="18"/></operator> <operator pos:line="150" pos:column="19">||<pos:position pos:line="150" pos:column="21"/></operator> <operator pos:line="150" pos:column="22">(<pos:position pos:line="150" pos:column="23"/></operator><operator pos:line="150" pos:column="23">(<pos:position pos:line="150" pos:column="24"/></operator><name pos:line="150" pos:column="24">size_t<pos:position pos:line="150" pos:column="30"/></name><operator pos:line="150" pos:column="30">)<pos:position pos:line="150" pos:column="31"/></operator><name pos:line="150" pos:column="31">len<pos:position pos:line="150" pos:column="34"/></name> <operator pos:line="150" pos:column="35">&gt;=<pos:position pos:line="150" pos:column="40"/></operator> <sizeof pos:line="150" pos:column="38">sizeof<argument_list pos:line="150" pos:column="44">(<argument><expr><name pos:line="150" pos:column="45">file<pos:position pos:line="150" pos:column="49"/></name></expr></argument>)<pos:position pos:line="150" pos:column="50"/></argument_list></sizeof><operator pos:line="150" pos:column="50">)<pos:position pos:line="150" pos:column="51"/></operator></expr>)<pos:position pos:line="150" pos:column="52"/></condition><then pos:line="150" pos:column="52">
      <block type="pseudo"><continue pos:line="151" pos:column="7">continue;<pos:position pos:line="151" pos:column="16"/></continue></block></then></if>

    <if pos:line="153" pos:column="5">if <condition pos:line="153" pos:column="8">(<expr><name pos:line="153" pos:column="9">NULL<pos:position pos:line="153" pos:column="13"/></name> <operator pos:line="153" pos:column="14">==<pos:position pos:line="153" pos:column="16"/></operator> <operator pos:line="153" pos:column="17">(<pos:position pos:line="153" pos:column="18"/></operator><name pos:line="153" pos:column="18">fh<pos:position pos:line="153" pos:column="20"/></name> <operator pos:line="153" pos:column="21">=<pos:position pos:line="153" pos:column="22"/></operator> <call><name pos:line="153" pos:column="23">fopen<pos:position pos:line="153" pos:column="28"/></name><argument_list pos:line="153" pos:column="28">(<argument><expr><name pos:line="153" pos:column="29">file<pos:position pos:line="153" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="153" pos:column="35">"r"<pos:position pos:line="153" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="153" pos:column="39"/></argument_list></call><operator pos:line="153" pos:column="39">)<pos:position pos:line="153" pos:column="40"/></operator></expr>)<pos:position pos:line="153" pos:column="41"/></condition><then pos:line="153" pos:column="41"> <block pos:line="153" pos:column="42">{
      <decl_stmt><decl><type><name pos:line="154" pos:column="7">char<pos:position pos:line="154" pos:column="11"/></name></type> <name><name pos:line="154" pos:column="12">errbuf<pos:position pos:line="154" pos:column="18"/></name><index pos:line="154" pos:column="18">[<expr><literal type="number" pos:line="154" pos:column="19">1024<pos:position pos:line="154" pos:column="23"/></literal></expr>]<pos:position pos:line="154" pos:column="24"/></index></name></decl>;<pos:position pos:line="154" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="155" pos:column="7">ERROR<pos:position pos:line="155" pos:column="12"/></name><argument_list pos:line="155" pos:column="12">(<argument><expr><literal type="string" pos:line="155" pos:column="13">"Cannot open '%s': %s"<pos:position pos:line="155" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="155" pos:column="37">file<pos:position pos:line="155" pos:column="41"/></name></expr></argument>,
            <argument><expr><call><name pos:line="156" pos:column="13">sstrerror<pos:position pos:line="156" pos:column="22"/></name><argument_list pos:line="156" pos:column="22">(<argument><expr><name pos:line="156" pos:column="23">errno<pos:position pos:line="156" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="156" pos:column="30">errbuf<pos:position pos:line="156" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="156" pos:column="38">sizeof<argument_list pos:line="156" pos:column="44">(<argument><expr><name pos:line="156" pos:column="45">errbuf<pos:position pos:line="156" pos:column="51"/></name></expr></argument>)<pos:position pos:line="156" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="156" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="156" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="157" pos:column="6"/></block></then></if>

    <while pos:line="159" pos:column="5">while <condition pos:line="159" pos:column="11">(<expr><operator pos:line="159" pos:column="12">(<pos:position pos:line="159" pos:column="13"/></operator><name pos:line="159" pos:column="13">fh<pos:position pos:line="159" pos:column="15"/></name> <operator pos:line="159" pos:column="16">!=<pos:position pos:line="159" pos:column="18"/></operator> <name pos:line="159" pos:column="19">NULL<pos:position pos:line="159" pos:column="23"/></name><operator pos:line="159" pos:column="23">)<pos:position pos:line="159" pos:column="24"/></operator> <operator pos:line="159" pos:column="25">&amp;&amp;<pos:position pos:line="159" pos:column="35"/></operator> <operator pos:line="159" pos:column="28">(<pos:position pos:line="159" pos:column="29"/></operator><name pos:line="159" pos:column="29">NULL<pos:position pos:line="159" pos:column="33"/></name> <operator pos:line="159" pos:column="34">!=<pos:position pos:line="159" pos:column="36"/></operator> <call><name pos:line="159" pos:column="37">fgets<pos:position pos:line="159" pos:column="42"/></name><argument_list pos:line="159" pos:column="42">(<argument><expr><name pos:line="159" pos:column="43">buffer<pos:position pos:line="159" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="159" pos:column="51">BUFSIZE<pos:position pos:line="159" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="159" pos:column="60">fh<pos:position pos:line="159" pos:column="62"/></name></expr></argument>)<pos:position pos:line="159" pos:column="63"/></argument_list></call><operator pos:line="159" pos:column="63">)<pos:position pos:line="159" pos:column="64"/></operator></expr>)<pos:position pos:line="159" pos:column="65"/></condition> <block pos:line="159" pos:column="66">{
      <decl_stmt><decl><type><specifier pos:line="160" pos:column="7">const<pos:position pos:line="160" pos:column="12"/></specifier> <name pos:line="160" pos:column="13">char<pos:position pos:line="160" pos:column="17"/></name> <modifier pos:line="160" pos:column="18">*<pos:position pos:line="160" pos:column="19"/></modifier></type><name pos:line="160" pos:column="19">type<pos:position pos:line="160" pos:column="23"/></name> <init pos:line="160" pos:column="24">= <expr><literal type="string" pos:line="160" pos:column="26">"vs_memory"<pos:position pos:line="160" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="160" pos:column="38"/></decl_stmt>
      <decl_stmt><decl><type><specifier pos:line="161" pos:column="7">const<pos:position pos:line="161" pos:column="12"/></specifier> <name pos:line="161" pos:column="13">char<pos:position pos:line="161" pos:column="17"/></name> <modifier pos:line="161" pos:column="18">*<pos:position pos:line="161" pos:column="19"/></modifier></type><name pos:line="161" pos:column="19">type_instance<pos:position pos:line="161" pos:column="32"/></name></decl>;<pos:position pos:line="161" pos:column="33"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="162" pos:column="7">gauge_t<pos:position pos:line="162" pos:column="14"/></name></type> <name pos:line="162" pos:column="15">value<pos:position pos:line="162" pos:column="20"/></name></decl>;<pos:position pos:line="162" pos:column="21"/></decl_stmt>

      <if pos:line="164" pos:column="7">if <condition pos:line="164" pos:column="10">(<expr><call><name pos:line="164" pos:column="11">strsplit<pos:position pos:line="164" pos:column="19"/></name><argument_list pos:line="164" pos:column="19">(<argument><expr><name pos:line="164" pos:column="20">buffer<pos:position pos:line="164" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="28">cols<pos:position pos:line="164" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="164" pos:column="34">2<pos:position pos:line="164" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="164" pos:column="36"/></argument_list></call> <operator pos:line="164" pos:column="37">&lt;<pos:position pos:line="164" pos:column="41"/></operator> <literal type="number" pos:line="164" pos:column="39">2<pos:position pos:line="164" pos:column="40"/></literal></expr>)<pos:position pos:line="164" pos:column="41"/></condition><then pos:line="164" pos:column="41">
        <block type="pseudo"><continue pos:line="165" pos:column="9">continue;<pos:position pos:line="165" pos:column="18"/></continue></block></then></if>

      <if pos:line="167" pos:column="7">if <condition pos:line="167" pos:column="10">(<expr><literal type="number" pos:line="167" pos:column="11">0<pos:position pos:line="167" pos:column="12"/></literal> <operator pos:line="167" pos:column="13">==<pos:position pos:line="167" pos:column="15"/></operator> <call><name pos:line="167" pos:column="16">strcmp<pos:position pos:line="167" pos:column="22"/></name><argument_list pos:line="167" pos:column="22">(<argument><expr><name><name pos:line="167" pos:column="23">cols<pos:position pos:line="167" pos:column="27"/></name><index pos:line="167" pos:column="27">[<expr><literal type="number" pos:line="167" pos:column="28">0<pos:position pos:line="167" pos:column="29"/></literal></expr>]<pos:position pos:line="167" pos:column="30"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="167" pos:column="32">"PROC:"<pos:position pos:line="167" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="167" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="167" pos:column="41"/></condition><then pos:line="167" pos:column="41"> <block pos:line="167" pos:column="42">{
        <expr_stmt><expr><name pos:line="168" pos:column="9">type<pos:position pos:line="168" pos:column="13"/></name> <operator pos:line="168" pos:column="14">=<pos:position pos:line="168" pos:column="15"/></operator> <literal type="string" pos:line="168" pos:column="16">"vs_processes"<pos:position pos:line="168" pos:column="30"/></literal></expr>;<pos:position pos:line="168" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name pos:line="169" pos:column="9">type_instance<pos:position pos:line="169" pos:column="22"/></name> <operator pos:line="169" pos:column="23">=<pos:position pos:line="169" pos:column="24"/></operator> <literal type="string" pos:line="169" pos:column="25">""<pos:position pos:line="169" pos:column="27"/></literal></expr>;<pos:position pos:line="169" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name pos:line="170" pos:column="9">value<pos:position pos:line="170" pos:column="14"/></name> <operator pos:line="170" pos:column="15">=<pos:position pos:line="170" pos:column="16"/></operator> <call><name pos:line="170" pos:column="17">atof<pos:position pos:line="170" pos:column="21"/></name><argument_list pos:line="170" pos:column="21">(<argument><expr><name><name pos:line="170" pos:column="22">cols<pos:position pos:line="170" pos:column="26"/></name><index pos:line="170" pos:column="26">[<expr><literal type="number" pos:line="170" pos:column="27">1<pos:position pos:line="170" pos:column="28"/></literal></expr>]<pos:position pos:line="170" pos:column="29"/></index></name></expr></argument>)<pos:position pos:line="170" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="31"/></expr_stmt>
      }<pos:position pos:line="171" pos:column="8"/></block></then> <else pos:line="171" pos:column="9">else <block pos:line="171" pos:column="14">{
        <if pos:line="172" pos:column="9">if <condition pos:line="172" pos:column="12">(<expr><literal type="number" pos:line="172" pos:column="13">0<pos:position pos:line="172" pos:column="14"/></literal> <operator pos:line="172" pos:column="15">==<pos:position pos:line="172" pos:column="17"/></operator> <call><name pos:line="172" pos:column="18">strcmp<pos:position pos:line="172" pos:column="24"/></name><argument_list pos:line="172" pos:column="24">(<argument><expr><name><name pos:line="172" pos:column="25">cols<pos:position pos:line="172" pos:column="29"/></name><index pos:line="172" pos:column="29">[<expr><literal type="number" pos:line="172" pos:column="30">0<pos:position pos:line="172" pos:column="31"/></literal></expr>]<pos:position pos:line="172" pos:column="32"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="172" pos:column="34">"VM:"<pos:position pos:line="172" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="172" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="172" pos:column="41"/></condition><then pos:line="172" pos:column="41">
          <block type="pseudo"><expr_stmt><expr><name pos:line="173" pos:column="11">type_instance<pos:position pos:line="173" pos:column="24"/></name> <operator pos:line="173" pos:column="25">=<pos:position pos:line="173" pos:column="26"/></operator> <literal type="string" pos:line="173" pos:column="27">"vm"<pos:position pos:line="173" pos:column="31"/></literal></expr>;<pos:position pos:line="173" pos:column="32"/></expr_stmt></block></then>
        <elseif pos:line="174" pos:column="9">else <if pos:line="174" pos:column="14">if <condition pos:line="174" pos:column="17">(<expr><literal type="number" pos:line="174" pos:column="18">0<pos:position pos:line="174" pos:column="19"/></literal> <operator pos:line="174" pos:column="20">==<pos:position pos:line="174" pos:column="22"/></operator> <call><name pos:line="174" pos:column="23">strcmp<pos:position pos:line="174" pos:column="29"/></name><argument_list pos:line="174" pos:column="29">(<argument><expr><name><name pos:line="174" pos:column="30">cols<pos:position pos:line="174" pos:column="34"/></name><index pos:line="174" pos:column="34">[<expr><literal type="number" pos:line="174" pos:column="35">0<pos:position pos:line="174" pos:column="36"/></literal></expr>]<pos:position pos:line="174" pos:column="37"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="174" pos:column="39">"VML:"<pos:position pos:line="174" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="174" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="174" pos:column="47"/></condition><then pos:line="174" pos:column="47">
          <block type="pseudo"><expr_stmt><expr><name pos:line="175" pos:column="11">type_instance<pos:position pos:line="175" pos:column="24"/></name> <operator pos:line="175" pos:column="25">=<pos:position pos:line="175" pos:column="26"/></operator> <literal type="string" pos:line="175" pos:column="27">"vml"<pos:position pos:line="175" pos:column="32"/></literal></expr>;<pos:position pos:line="175" pos:column="33"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="176" pos:column="9">else <if pos:line="176" pos:column="14">if <condition pos:line="176" pos:column="17">(<expr><literal type="number" pos:line="176" pos:column="18">0<pos:position pos:line="176" pos:column="19"/></literal> <operator pos:line="176" pos:column="20">==<pos:position pos:line="176" pos:column="22"/></operator> <call><name pos:line="176" pos:column="23">strcmp<pos:position pos:line="176" pos:column="29"/></name><argument_list pos:line="176" pos:column="29">(<argument><expr><name><name pos:line="176" pos:column="30">cols<pos:position pos:line="176" pos:column="34"/></name><index pos:line="176" pos:column="34">[<expr><literal type="number" pos:line="176" pos:column="35">0<pos:position pos:line="176" pos:column="36"/></literal></expr>]<pos:position pos:line="176" pos:column="37"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="176" pos:column="39">"RSS:"<pos:position pos:line="176" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="176" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="176" pos:column="47"/></condition><then pos:line="176" pos:column="47">
          <block type="pseudo"><expr_stmt><expr><name pos:line="177" pos:column="11">type_instance<pos:position pos:line="177" pos:column="24"/></name> <operator pos:line="177" pos:column="25">=<pos:position pos:line="177" pos:column="26"/></operator> <literal type="string" pos:line="177" pos:column="27">"rss"<pos:position pos:line="177" pos:column="32"/></literal></expr>;<pos:position pos:line="177" pos:column="33"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="178" pos:column="9">else <if pos:line="178" pos:column="14">if <condition pos:line="178" pos:column="17">(<expr><literal type="number" pos:line="178" pos:column="18">0<pos:position pos:line="178" pos:column="19"/></literal> <operator pos:line="178" pos:column="20">==<pos:position pos:line="178" pos:column="22"/></operator> <call><name pos:line="178" pos:column="23">strcmp<pos:position pos:line="178" pos:column="29"/></name><argument_list pos:line="178" pos:column="29">(<argument><expr><name><name pos:line="178" pos:column="30">cols<pos:position pos:line="178" pos:column="34"/></name><index pos:line="178" pos:column="34">[<expr><literal type="number" pos:line="178" pos:column="35">0<pos:position pos:line="178" pos:column="36"/></literal></expr>]<pos:position pos:line="178" pos:column="37"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="178" pos:column="39">"ANON:"<pos:position pos:line="178" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="178" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="178" pos:column="48"/></condition><then pos:line="178" pos:column="48">
          <block type="pseudo"><expr_stmt><expr><name pos:line="179" pos:column="11">type_instance<pos:position pos:line="179" pos:column="24"/></name> <operator pos:line="179" pos:column="25">=<pos:position pos:line="179" pos:column="26"/></operator> <literal type="string" pos:line="179" pos:column="27">"anon"<pos:position pos:line="179" pos:column="33"/></literal></expr>;<pos:position pos:line="179" pos:column="34"/></expr_stmt></block></then></if></elseif>
        <else pos:line="180" pos:column="9">else
          <block type="pseudo"><continue pos:line="181" pos:column="11">continue;<pos:position pos:line="181" pos:column="20"/></continue></block></else></if>

        <expr_stmt><expr><name pos:line="183" pos:column="9">value<pos:position pos:line="183" pos:column="14"/></name> <operator pos:line="183" pos:column="15">=<pos:position pos:line="183" pos:column="16"/></operator> <call><name pos:line="183" pos:column="17">atof<pos:position pos:line="183" pos:column="21"/></name><argument_list pos:line="183" pos:column="21">(<argument><expr><name><name pos:line="183" pos:column="22">cols<pos:position pos:line="183" pos:column="26"/></name><index pos:line="183" pos:column="26">[<expr><literal type="number" pos:line="183" pos:column="27">1<pos:position pos:line="183" pos:column="28"/></literal></expr>]<pos:position pos:line="183" pos:column="29"/></index></name></expr></argument>)<pos:position pos:line="183" pos:column="30"/></argument_list></call> <operator pos:line="183" pos:column="31">*<pos:position pos:line="183" pos:column="32"/></operator> <name pos:line="183" pos:column="33">pagesize<pos:position pos:line="183" pos:column="41"/></name></expr>;<pos:position pos:line="183" pos:column="42"/></expr_stmt>
      }<pos:position pos:line="184" pos:column="8"/></block></else></if>

      <expr_stmt><expr><call><name pos:line="186" pos:column="7">submit_gauge<pos:position pos:line="186" pos:column="19"/></name><argument_list pos:line="186" pos:column="19">(<argument><expr><name><name pos:line="186" pos:column="20">dent<pos:position pos:line="186" pos:column="24"/></name><operator pos:line="186" pos:column="24">-&gt;<pos:position pos:line="186" pos:column="29"/></operator><name pos:line="186" pos:column="26">d_name<pos:position pos:line="186" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="34">type<pos:position pos:line="186" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="40">type_instance<pos:position pos:line="186" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="55">value<pos:position pos:line="186" pos:column="60"/></name></expr></argument>)<pos:position pos:line="186" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="187" pos:column="6"/></block></while> <comment type="block" pos:line="187" pos:column="7">/* while (fgets) */</comment>

    <if pos:line="189" pos:column="5">if <condition pos:line="189" pos:column="8">(<expr><name pos:line="189" pos:column="9">fh<pos:position pos:line="189" pos:column="11"/></name> <operator pos:line="189" pos:column="12">!=<pos:position pos:line="189" pos:column="14"/></operator> <name pos:line="189" pos:column="15">NULL<pos:position pos:line="189" pos:column="19"/></name></expr>)<pos:position pos:line="189" pos:column="20"/></condition><then pos:line="189" pos:column="20"> <block pos:line="189" pos:column="21">{
      <expr_stmt><expr><call><name pos:line="190" pos:column="7">fclose<pos:position pos:line="190" pos:column="13"/></name><argument_list pos:line="190" pos:column="13">(<argument><expr><name pos:line="190" pos:column="14">fh<pos:position pos:line="190" pos:column="16"/></name></expr></argument>)<pos:position pos:line="190" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="18"/></expr_stmt>
      <expr_stmt><expr><name pos:line="191" pos:column="7">fh<pos:position pos:line="191" pos:column="9"/></name> <operator pos:line="191" pos:column="10">=<pos:position pos:line="191" pos:column="11"/></operator> <name pos:line="191" pos:column="12">NULL<pos:position pos:line="191" pos:column="16"/></name></expr>;<pos:position pos:line="191" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="192" pos:column="6"/></block></then></if>
  }<pos:position pos:line="193" pos:column="4"/></block></while> <comment type="block" pos:line="193" pos:column="5">/* while (readdir) */</comment>

  <expr_stmt><expr><call><name pos:line="195" pos:column="3">closedir<pos:position pos:line="195" pos:column="11"/></name><argument_list pos:line="195" pos:column="11">(<argument><expr><name pos:line="195" pos:column="12">proc<pos:position pos:line="195" pos:column="16"/></name></expr></argument>)<pos:position pos:line="195" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="18"/></expr_stmt>

  <return pos:line="197" pos:column="3">return <expr><operator pos:line="197" pos:column="10">(<pos:position pos:line="197" pos:column="11"/></operator><literal type="number" pos:line="197" pos:column="11">0<pos:position pos:line="197" pos:column="12"/></literal><operator pos:line="197" pos:column="12">)<pos:position pos:line="197" pos:column="13"/></operator></expr>;<pos:position pos:line="197" pos:column="14"/></return>
}<pos:position pos:line="198" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1661_collectd-5.0.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cr_config_router<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">oconfig_item_t<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">ci<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list> <comment type="block" pos:line="1" pos:column="50">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">cr_data_t<pos:position pos:line="3" pos:column="12"/></name> <modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier></type><name pos:line="3" pos:column="14">router_data<pos:position pos:line="3" pos:column="25"/></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">read_name<pos:position pos:line="4" pos:column="17"/></name><index pos:line="4" pos:column="17">[<expr><literal type="number" pos:line="4" pos:column="18">128<pos:position pos:line="4" pos:column="21"/></literal></expr>]<pos:position pos:line="4" pos:column="22"/></index></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">user_data_t<pos:position pos:line="5" pos:column="14"/></name></type> <name pos:line="5" pos:column="15">user_data<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">status<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">i<pos:position pos:line="7" pos:column="8"/></name></decl>;<pos:position pos:line="7" pos:column="9"/></decl_stmt>

  <expr_stmt><expr><name pos:line="9" pos:column="3">router_data<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">=<pos:position pos:line="9" pos:column="16"/></operator> <call><name pos:line="9" pos:column="17">malloc<pos:position pos:line="9" pos:column="23"/></name> <argument_list pos:line="9" pos:column="24">(<argument><expr><sizeof pos:line="9" pos:column="25">sizeof <argument_list pos:line="9" pos:column="32">(<argument><expr><operator pos:line="9" pos:column="33">*<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="34">router_data<pos:position pos:line="9" pos:column="45"/></name></expr></argument>)<pos:position pos:line="9" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="48"/></expr_stmt>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">router_data<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">==<pos:position pos:line="10" pos:column="21"/></operator> <name pos:line="10" pos:column="22">NULL<pos:position pos:line="10" pos:column="26"/></name></expr>)<pos:position pos:line="10" pos:column="27"/></condition><then pos:line="10" pos:column="27">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><operator pos:line="11" pos:column="13">-<pos:position pos:line="11" pos:column="14"/></operator><literal type="number" pos:line="11" pos:column="14">1<pos:position pos:line="11" pos:column="15"/></literal><operator pos:line="11" pos:column="15">)<pos:position pos:line="11" pos:column="16"/></operator></expr>;<pos:position pos:line="11" pos:column="17"/></return></block></then></if>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">memset<pos:position pos:line="12" pos:column="9"/></name> <argument_list pos:line="12" pos:column="10">(<argument><expr><name pos:line="12" pos:column="11">router_data<pos:position pos:line="12" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="24">0<pos:position pos:line="12" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="27">sizeof <argument_list pos:line="12" pos:column="34">(<argument><expr><name pos:line="12" pos:column="35">router_data<pos:position pos:line="12" pos:column="46"/></name></expr></argument>)<pos:position pos:line="12" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="13" pos:column="3">router_data<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">-&gt;<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="16">connection<pos:position pos:line="13" pos:column="26"/></name></name> <operator pos:line="13" pos:column="27">=<pos:position pos:line="13" pos:column="28"/></operator> <name pos:line="13" pos:column="29">NULL<pos:position pos:line="13" pos:column="33"/></name></expr>;<pos:position pos:line="13" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="14" pos:column="3">router_data<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">-&gt;<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="16">node<pos:position pos:line="14" pos:column="20"/></name></name> <operator pos:line="14" pos:column="21">=<pos:position pos:line="14" pos:column="22"/></operator> <name pos:line="14" pos:column="23">NULL<pos:position pos:line="14" pos:column="27"/></name></expr>;<pos:position pos:line="14" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="15" pos:column="3">router_data<pos:position pos:line="15" pos:column="14"/></name><operator pos:line="15" pos:column="14">-&gt;<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="16">service<pos:position pos:line="15" pos:column="23"/></name></name> <operator pos:line="15" pos:column="24">=<pos:position pos:line="15" pos:column="25"/></operator> <name pos:line="15" pos:column="26">NULL<pos:position pos:line="15" pos:column="30"/></name></expr>;<pos:position pos:line="15" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">router_data<pos:position pos:line="16" pos:column="14"/></name><operator pos:line="16" pos:column="14">-&gt;<pos:position pos:line="16" pos:column="19"/></operator><name pos:line="16" pos:column="16">username<pos:position pos:line="16" pos:column="24"/></name></name> <operator pos:line="16" pos:column="25">=<pos:position pos:line="16" pos:column="26"/></operator> <name pos:line="16" pos:column="27">NULL<pos:position pos:line="16" pos:column="31"/></name></expr>;<pos:position pos:line="16" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">router_data<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">-&gt;<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="16">password<pos:position pos:line="17" pos:column="24"/></name></name> <operator pos:line="17" pos:column="25">=<pos:position pos:line="17" pos:column="26"/></operator> <name pos:line="17" pos:column="27">NULL<pos:position pos:line="17" pos:column="31"/></name></expr>;<pos:position pos:line="17" pos:column="32"/></expr_stmt>

  <expr_stmt><expr><name pos:line="19" pos:column="3">status<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <literal type="number" pos:line="19" pos:column="12">0<pos:position pos:line="19" pos:column="13"/></literal></expr>;<pos:position pos:line="19" pos:column="14"/></expr_stmt>
  <for pos:line="20" pos:column="3">for <control pos:line="20" pos:column="7">(<init><expr><name pos:line="20" pos:column="8">i<pos:position pos:line="20" pos:column="9"/></name> <operator pos:line="20" pos:column="10">=<pos:position pos:line="20" pos:column="11"/></operator> <literal type="number" pos:line="20" pos:column="12">0<pos:position pos:line="20" pos:column="13"/></literal></expr>;<pos:position pos:line="20" pos:column="14"/></init> <condition><expr><name pos:line="20" pos:column="15">i<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">&lt;<pos:position pos:line="20" pos:column="21"/></operator> <name><name pos:line="20" pos:column="19">ci<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">-&gt;<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="23">children_num<pos:position pos:line="20" pos:column="35"/></name></name></expr>;<pos:position pos:line="20" pos:column="36"/></condition> <incr><expr><name pos:line="20" pos:column="37">i<pos:position pos:line="20" pos:column="38"/></name><operator pos:line="20" pos:column="38">++<pos:position pos:line="20" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="20" pos:column="41"/></control>
  <block pos:line="21" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">oconfig_item_t<pos:position pos:line="22" pos:column="19"/></name> <modifier pos:line="22" pos:column="20">*<pos:position pos:line="22" pos:column="21"/></modifier></type><name pos:line="22" pos:column="21">child<pos:position pos:line="22" pos:column="26"/></name> <init pos:line="22" pos:column="27">= <expr><name><name pos:line="22" pos:column="29">ci<pos:position pos:line="22" pos:column="31"/></name><operator pos:line="22" pos:column="31">-&gt;<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="33">children<pos:position pos:line="22" pos:column="41"/></name></name> <operator pos:line="22" pos:column="42">+<pos:position pos:line="22" pos:column="43"/></operator> <name pos:line="22" pos:column="44">i<pos:position pos:line="22" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="22" pos:column="46"/></decl_stmt>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><call><name pos:line="24" pos:column="9">strcasecmp<pos:position pos:line="24" pos:column="19"/></name> <argument_list pos:line="24" pos:column="20">(<argument><expr><literal type="string" pos:line="24" pos:column="21">"Host"<pos:position pos:line="24" pos:column="27"/></literal></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="29">child<pos:position pos:line="24" pos:column="34"/></name><operator pos:line="24" pos:column="34">-&gt;<pos:position pos:line="24" pos:column="39"/></operator><name pos:line="24" pos:column="36">key<pos:position pos:line="24" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="40"/></argument_list></call> <operator pos:line="24" pos:column="41">==<pos:position pos:line="24" pos:column="43"/></operator> <literal type="number" pos:line="24" pos:column="44">0<pos:position pos:line="24" pos:column="45"/></literal></expr>)<pos:position pos:line="24" pos:column="46"/></condition><then pos:line="24" pos:column="46">
      <block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="7">status<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">=<pos:position pos:line="25" pos:column="15"/></operator> <call><name pos:line="25" pos:column="16">cf_util_get_string<pos:position pos:line="25" pos:column="34"/></name> <argument_list pos:line="25" pos:column="35">(<argument><expr><name pos:line="25" pos:column="36">child<pos:position pos:line="25" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="43">&amp;<pos:position pos:line="25" pos:column="48"/></operator><name><name pos:line="25" pos:column="44">router_data<pos:position pos:line="25" pos:column="55"/></name><operator pos:line="25" pos:column="55">-&gt;<pos:position pos:line="25" pos:column="60"/></operator><name pos:line="25" pos:column="57">node<pos:position pos:line="25" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="63"/></expr_stmt></block></then>
    <elseif pos:line="26" pos:column="5">else <if pos:line="26" pos:column="10">if <condition pos:line="26" pos:column="13">(<expr><call><name pos:line="26" pos:column="14">strcasecmp<pos:position pos:line="26" pos:column="24"/></name> <argument_list pos:line="26" pos:column="25">(<argument><expr><literal type="string" pos:line="26" pos:column="26">"Port"<pos:position pos:line="26" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="34">child<pos:position pos:line="26" pos:column="39"/></name><operator pos:line="26" pos:column="39">-&gt;<pos:position pos:line="26" pos:column="44"/></operator><name pos:line="26" pos:column="41">key<pos:position pos:line="26" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="45"/></argument_list></call> <operator pos:line="26" pos:column="46">==<pos:position pos:line="26" pos:column="48"/></operator> <literal type="number" pos:line="26" pos:column="49">0<pos:position pos:line="26" pos:column="50"/></literal></expr>)<pos:position pos:line="26" pos:column="51"/></condition><then pos:line="26" pos:column="51">
      <block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="7">status<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <call><name pos:line="27" pos:column="16">cf_util_get_string<pos:position pos:line="27" pos:column="34"/></name> <argument_list pos:line="27" pos:column="35">(<argument><expr><name pos:line="27" pos:column="36">child<pos:position pos:line="27" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="43">&amp;<pos:position pos:line="27" pos:column="48"/></operator><name><name pos:line="27" pos:column="44">router_data<pos:position pos:line="27" pos:column="55"/></name><operator pos:line="27" pos:column="55">-&gt;<pos:position pos:line="27" pos:column="60"/></operator><name pos:line="27" pos:column="57">service<pos:position pos:line="27" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="66"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="28" pos:column="5">else <if pos:line="28" pos:column="10">if <condition pos:line="28" pos:column="13">(<expr><call><name pos:line="28" pos:column="14">strcasecmp<pos:position pos:line="28" pos:column="24"/></name> <argument_list pos:line="28" pos:column="25">(<argument><expr><literal type="string" pos:line="28" pos:column="26">"User"<pos:position pos:line="28" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="34">child<pos:position pos:line="28" pos:column="39"/></name><operator pos:line="28" pos:column="39">-&gt;<pos:position pos:line="28" pos:column="44"/></operator><name pos:line="28" pos:column="41">key<pos:position pos:line="28" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="45"/></argument_list></call> <operator pos:line="28" pos:column="46">==<pos:position pos:line="28" pos:column="48"/></operator> <literal type="number" pos:line="28" pos:column="49">0<pos:position pos:line="28" pos:column="50"/></literal></expr>)<pos:position pos:line="28" pos:column="51"/></condition><then pos:line="28" pos:column="51">
      <block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="7">status<pos:position pos:line="29" pos:column="13"/></name> <operator pos:line="29" pos:column="14">=<pos:position pos:line="29" pos:column="15"/></operator> <call><name pos:line="29" pos:column="16">cf_util_get_string<pos:position pos:line="29" pos:column="34"/></name> <argument_list pos:line="29" pos:column="35">(<argument><expr><name pos:line="29" pos:column="36">child<pos:position pos:line="29" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="43">&amp;<pos:position pos:line="29" pos:column="48"/></operator><name><name pos:line="29" pos:column="44">router_data<pos:position pos:line="29" pos:column="55"/></name><operator pos:line="29" pos:column="55">-&gt;<pos:position pos:line="29" pos:column="60"/></operator><name pos:line="29" pos:column="57">username<pos:position pos:line="29" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="67"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="30" pos:column="5">else <if pos:line="30" pos:column="10">if <condition pos:line="30" pos:column="13">(<expr><call><name pos:line="30" pos:column="14">strcasecmp<pos:position pos:line="30" pos:column="24"/></name> <argument_list pos:line="30" pos:column="25">(<argument><expr><literal type="string" pos:line="30" pos:column="26">"Password"<pos:position pos:line="30" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="38">child<pos:position pos:line="30" pos:column="43"/></name><operator pos:line="30" pos:column="43">-&gt;<pos:position pos:line="30" pos:column="48"/></operator><name pos:line="30" pos:column="45">key<pos:position pos:line="30" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="49"/></argument_list></call> <operator pos:line="30" pos:column="50">==<pos:position pos:line="30" pos:column="52"/></operator> <literal type="number" pos:line="30" pos:column="53">0<pos:position pos:line="30" pos:column="54"/></literal></expr>)<pos:position pos:line="30" pos:column="55"/></condition><then pos:line="30" pos:column="55">
      <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="7">status<pos:position pos:line="31" pos:column="13"/></name> <operator pos:line="31" pos:column="14">=<pos:position pos:line="31" pos:column="15"/></operator> <call><name pos:line="31" pos:column="16">cf_util_get_string<pos:position pos:line="31" pos:column="34"/></name> <argument_list pos:line="31" pos:column="35">(<argument><expr><name pos:line="31" pos:column="36">child<pos:position pos:line="31" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="43">&amp;<pos:position pos:line="31" pos:column="48"/></operator><name><name pos:line="31" pos:column="44">router_data<pos:position pos:line="31" pos:column="55"/></name><operator pos:line="31" pos:column="55">-&gt;<pos:position pos:line="31" pos:column="60"/></operator><name pos:line="31" pos:column="57">password<pos:position pos:line="31" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="67"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="32" pos:column="5">else <if pos:line="32" pos:column="10">if <condition pos:line="32" pos:column="13">(<expr><call><name pos:line="32" pos:column="14">strcasecmp<pos:position pos:line="32" pos:column="24"/></name> <argument_list pos:line="32" pos:column="25">(<argument><expr><literal type="string" pos:line="32" pos:column="26">"CollectInterface"<pos:position pos:line="32" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="46">child<pos:position pos:line="32" pos:column="51"/></name><operator pos:line="32" pos:column="51">-&gt;<pos:position pos:line="32" pos:column="56"/></operator><name pos:line="32" pos:column="53">key<pos:position pos:line="32" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="57"/></argument_list></call> <operator pos:line="32" pos:column="58">==<pos:position pos:line="32" pos:column="60"/></operator> <literal type="number" pos:line="32" pos:column="61">0<pos:position pos:line="32" pos:column="62"/></literal></expr>)<pos:position pos:line="32" pos:column="63"/></condition><then pos:line="32" pos:column="63">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="7">cf_util_get_boolean<pos:position pos:line="33" pos:column="26"/></name> <argument_list pos:line="33" pos:column="27">(<argument><expr><name pos:line="33" pos:column="28">child<pos:position pos:line="33" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="35">&amp;<pos:position pos:line="33" pos:column="40"/></operator><name><name pos:line="33" pos:column="36">router_data<pos:position pos:line="33" pos:column="47"/></name><operator pos:line="33" pos:column="47">-&gt;<pos:position pos:line="33" pos:column="52"/></operator><name pos:line="33" pos:column="49">collect_interface<pos:position pos:line="33" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="68"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="34" pos:column="5">else <if pos:line="34" pos:column="10">if <condition pos:line="34" pos:column="13">(<expr><call><name pos:line="34" pos:column="14">strcasecmp<pos:position pos:line="34" pos:column="24"/></name> <argument_list pos:line="34" pos:column="25">(<argument><expr><literal type="string" pos:line="34" pos:column="26">"CollectRegistrationTable"<pos:position pos:line="34" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="54">child<pos:position pos:line="34" pos:column="59"/></name><operator pos:line="34" pos:column="59">-&gt;<pos:position pos:line="34" pos:column="64"/></operator><name pos:line="34" pos:column="61">key<pos:position pos:line="34" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="65"/></argument_list></call> <operator pos:line="34" pos:column="66">==<pos:position pos:line="34" pos:column="68"/></operator> <literal type="number" pos:line="34" pos:column="69">0<pos:position pos:line="34" pos:column="70"/></literal></expr>)<pos:position pos:line="34" pos:column="71"/></condition><then pos:line="34" pos:column="71">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="7">cf_util_get_boolean<pos:position pos:line="35" pos:column="26"/></name> <argument_list pos:line="35" pos:column="27">(<argument><expr><name pos:line="35" pos:column="28">child<pos:position pos:line="35" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="35">&amp;<pos:position pos:line="35" pos:column="40"/></operator><name><name pos:line="35" pos:column="36">router_data<pos:position pos:line="35" pos:column="47"/></name><operator pos:line="35" pos:column="47">-&gt;<pos:position pos:line="35" pos:column="52"/></operator><name pos:line="35" pos:column="49">collect_regtable<pos:position pos:line="35" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="67"/></expr_stmt></block></then></if></elseif>
<cpp:if pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">if<pos:position pos:line="36" pos:column="4"/></cpp:directive> <expr><name pos:line="36" pos:column="5">ROS_VERSION<pos:position pos:line="36" pos:column="16"/></name> <operator pos:line="36" pos:column="17">&gt;=<pos:position pos:line="36" pos:column="22"/></operator> <call><name pos:line="36" pos:column="20">ROS_VERSION_ENCODE<pos:position pos:line="36" pos:column="38"/></name><argument_list pos:line="36" pos:column="38">(<argument><expr><literal type="number" pos:line="36" pos:column="39">1<pos:position pos:line="36" pos:column="40"/></literal><operator pos:line="36" pos:column="40">,<pos:position pos:line="36" pos:column="41"/></operator> <literal type="number" pos:line="36" pos:column="42">1<pos:position pos:line="36" pos:column="43"/></literal><operator pos:line="36" pos:column="43">,<pos:position pos:line="36" pos:column="44"/></operator> <literal type="number" pos:line="36" pos:column="45">0<pos:position pos:line="36" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="47"/></argument_list></call></expr></cpp:if>
    <elseif pos:line="37" pos:column="5">else <if pos:line="37" pos:column="10">if <condition pos:line="37" pos:column="13">(<expr><call><name pos:line="37" pos:column="14">strcasecmp<pos:position pos:line="37" pos:column="24"/></name> <argument_list pos:line="37" pos:column="25">(<argument><expr><literal type="string" pos:line="37" pos:column="26">"CollectCPULoad"<pos:position pos:line="37" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="44">child<pos:position pos:line="37" pos:column="49"/></name><operator pos:line="37" pos:column="49">-&gt;<pos:position pos:line="37" pos:column="54"/></operator><name pos:line="37" pos:column="51">key<pos:position pos:line="37" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="55"/></argument_list></call> <operator pos:line="37" pos:column="56">==<pos:position pos:line="37" pos:column="58"/></operator> <literal type="number" pos:line="37" pos:column="59">0<pos:position pos:line="37" pos:column="60"/></literal></expr>)<pos:position pos:line="37" pos:column="61"/></condition><then pos:line="37" pos:column="61">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="7">cf_util_get_boolean<pos:position pos:line="38" pos:column="26"/></name> <argument_list pos:line="38" pos:column="27">(<argument><expr><name pos:line="38" pos:column="28">child<pos:position pos:line="38" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="35">&amp;<pos:position pos:line="38" pos:column="40"/></operator><name><name pos:line="38" pos:column="36">router_data<pos:position pos:line="38" pos:column="47"/></name><operator pos:line="38" pos:column="47">-&gt;<pos:position pos:line="38" pos:column="52"/></operator><name pos:line="38" pos:column="49">collect_cpu_load<pos:position pos:line="38" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="67"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="39" pos:column="5">else <if pos:line="39" pos:column="10">if <condition pos:line="39" pos:column="13">(<expr><call><name pos:line="39" pos:column="14">strcasecmp<pos:position pos:line="39" pos:column="24"/></name> <argument_list pos:line="39" pos:column="25">(<argument><expr><literal type="string" pos:line="39" pos:column="26">"CollectMemory"<pos:position pos:line="39" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="43">child<pos:position pos:line="39" pos:column="48"/></name><operator pos:line="39" pos:column="48">-&gt;<pos:position pos:line="39" pos:column="53"/></operator><name pos:line="39" pos:column="50">key<pos:position pos:line="39" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="54"/></argument_list></call> <operator pos:line="39" pos:column="55">==<pos:position pos:line="39" pos:column="57"/></operator> <literal type="number" pos:line="39" pos:column="58">0<pos:position pos:line="39" pos:column="59"/></literal></expr>)<pos:position pos:line="39" pos:column="60"/></condition><then pos:line="39" pos:column="60">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="7">cf_util_get_boolean<pos:position pos:line="40" pos:column="26"/></name> <argument_list pos:line="40" pos:column="27">(<argument><expr><name pos:line="40" pos:column="28">child<pos:position pos:line="40" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="35">&amp;<pos:position pos:line="40" pos:column="40"/></operator><name><name pos:line="40" pos:column="36">router_data<pos:position pos:line="40" pos:column="47"/></name><operator pos:line="40" pos:column="47">-&gt;<pos:position pos:line="40" pos:column="52"/></operator><name pos:line="40" pos:column="49">collect_memory<pos:position pos:line="40" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="65"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="41" pos:column="5">else <if pos:line="41" pos:column="10">if <condition pos:line="41" pos:column="13">(<expr><call><name pos:line="41" pos:column="14">strcasecmp<pos:position pos:line="41" pos:column="24"/></name> <argument_list pos:line="41" pos:column="25">(<argument><expr><literal type="string" pos:line="41" pos:column="26">"CollectDF"<pos:position pos:line="41" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="39">child<pos:position pos:line="41" pos:column="44"/></name><operator pos:line="41" pos:column="44">-&gt;<pos:position pos:line="41" pos:column="49"/></operator><name pos:line="41" pos:column="46">key<pos:position pos:line="41" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="50"/></argument_list></call> <operator pos:line="41" pos:column="51">==<pos:position pos:line="41" pos:column="53"/></operator> <literal type="number" pos:line="41" pos:column="54">0<pos:position pos:line="41" pos:column="55"/></literal></expr>)<pos:position pos:line="41" pos:column="56"/></condition><then pos:line="41" pos:column="56">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="7">cf_util_get_boolean<pos:position pos:line="42" pos:column="26"/></name> <argument_list pos:line="42" pos:column="27">(<argument><expr><name pos:line="42" pos:column="28">child<pos:position pos:line="42" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="35">&amp;<pos:position pos:line="42" pos:column="40"/></operator><name><name pos:line="42" pos:column="36">router_data<pos:position pos:line="42" pos:column="47"/></name><operator pos:line="42" pos:column="47">-&gt;<pos:position pos:line="42" pos:column="52"/></operator><name pos:line="42" pos:column="49">collect_df<pos:position pos:line="42" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="61"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="43" pos:column="5">else <if pos:line="43" pos:column="10">if <condition pos:line="43" pos:column="13">(<expr><call><name pos:line="43" pos:column="14">strcasecmp<pos:position pos:line="43" pos:column="24"/></name> <argument_list pos:line="43" pos:column="25">(<argument><expr><literal type="string" pos:line="43" pos:column="26">"CollectDisk"<pos:position pos:line="43" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="41">child<pos:position pos:line="43" pos:column="46"/></name><operator pos:line="43" pos:column="46">-&gt;<pos:position pos:line="43" pos:column="51"/></operator><name pos:line="43" pos:column="48">key<pos:position pos:line="43" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="52"/></argument_list></call> <operator pos:line="43" pos:column="53">==<pos:position pos:line="43" pos:column="55"/></operator> <literal type="number" pos:line="43" pos:column="56">0<pos:position pos:line="43" pos:column="57"/></literal></expr>)<pos:position pos:line="43" pos:column="58"/></condition><then pos:line="43" pos:column="58">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="7">cf_util_get_boolean<pos:position pos:line="44" pos:column="26"/></name> <argument_list pos:line="44" pos:column="27">(<argument><expr><name pos:line="44" pos:column="28">child<pos:position pos:line="44" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="35">&amp;<pos:position pos:line="44" pos:column="40"/></operator><name><name pos:line="44" pos:column="36">router_data<pos:position pos:line="44" pos:column="47"/></name><operator pos:line="44" pos:column="47">-&gt;<pos:position pos:line="44" pos:column="52"/></operator><name pos:line="44" pos:column="49">collect_disk<pos:position pos:line="44" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="63"/></expr_stmt></block></then></if></elseif>
<cpp:endif pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">endif<pos:position pos:line="45" pos:column="7"/></cpp:directive></cpp:endif>
    <else pos:line="46" pos:column="5">else
    <block pos:line="47" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="48" pos:column="7">WARNING<pos:position pos:line="48" pos:column="14"/></name> <argument_list pos:line="48" pos:column="15">(<argument><expr><literal type="string" pos:line="48" pos:column="16">"routeros plugin: Unknown config option `%s'."<pos:position pos:line="48" pos:column="62"/></literal></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="64">child<pos:position pos:line="48" pos:column="69"/></name><operator pos:line="48" pos:column="69">-&gt;<pos:position pos:line="48" pos:column="74"/></operator><name pos:line="48" pos:column="71">key<pos:position pos:line="48" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="76"/></expr_stmt>
    }<pos:position pos:line="49" pos:column="6"/></block></else></if>

    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><name pos:line="51" pos:column="9">status<pos:position pos:line="51" pos:column="15"/></name> <operator pos:line="51" pos:column="16">!=<pos:position pos:line="51" pos:column="18"/></operator> <literal type="number" pos:line="51" pos:column="19">0<pos:position pos:line="51" pos:column="20"/></literal></expr>)<pos:position pos:line="51" pos:column="21"/></condition><then pos:line="51" pos:column="21">
      <block type="pseudo"><break pos:line="52" pos:column="7">break;<pos:position pos:line="52" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="53" pos:column="4"/></block></for>

  <if pos:line="55" pos:column="3">if <condition pos:line="55" pos:column="6">(<expr><name pos:line="55" pos:column="7">status<pos:position pos:line="55" pos:column="13"/></name> <operator pos:line="55" pos:column="14">==<pos:position pos:line="55" pos:column="16"/></operator> <literal type="number" pos:line="55" pos:column="17">0<pos:position pos:line="55" pos:column="18"/></literal></expr>)<pos:position pos:line="55" pos:column="19"/></condition><then pos:line="55" pos:column="19">
  <block pos:line="56" pos:column="3">{
    <if pos:line="57" pos:column="5">if <condition pos:line="57" pos:column="8">(<expr><name><name pos:line="57" pos:column="9">router_data<pos:position pos:line="57" pos:column="20"/></name><operator pos:line="57" pos:column="20">-&gt;<pos:position pos:line="57" pos:column="25"/></operator><name pos:line="57" pos:column="22">node<pos:position pos:line="57" pos:column="26"/></name></name> <operator pos:line="57" pos:column="27">==<pos:position pos:line="57" pos:column="29"/></operator> <name pos:line="57" pos:column="30">NULL<pos:position pos:line="57" pos:column="34"/></name></expr>)<pos:position pos:line="57" pos:column="35"/></condition><then pos:line="57" pos:column="35">
    <block pos:line="58" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="59" pos:column="7">ERROR<pos:position pos:line="59" pos:column="12"/></name> <argument_list pos:line="59" pos:column="13">(<argument><expr><literal type="string" pos:line="59" pos:column="14">"routeros plugin: No `Host' option within a `Router' block. "<pos:position pos:line="59" pos:column="75"/></literal>
	  <literal type="string" pos:line="60" pos:column="11">"Where should I connect to?"<pos:position pos:line="60" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><name pos:line="61" pos:column="7">status<pos:position pos:line="61" pos:column="13"/></name> <operator pos:line="61" pos:column="14">=<pos:position pos:line="61" pos:column="15"/></operator> <operator pos:line="61" pos:column="16">-<pos:position pos:line="61" pos:column="17"/></operator><literal type="number" pos:line="61" pos:column="17">1<pos:position pos:line="61" pos:column="18"/></literal></expr>;<pos:position pos:line="61" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if>

    <if pos:line="64" pos:column="5">if <condition pos:line="64" pos:column="8">(<expr><name><name pos:line="64" pos:column="9">router_data<pos:position pos:line="64" pos:column="20"/></name><operator pos:line="64" pos:column="20">-&gt;<pos:position pos:line="64" pos:column="25"/></operator><name pos:line="64" pos:column="22">password<pos:position pos:line="64" pos:column="30"/></name></name> <operator pos:line="64" pos:column="31">==<pos:position pos:line="64" pos:column="33"/></operator> <name pos:line="64" pos:column="34">NULL<pos:position pos:line="64" pos:column="38"/></name></expr>)<pos:position pos:line="64" pos:column="39"/></condition><then pos:line="64" pos:column="39">
    <block pos:line="65" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="66" pos:column="7">ERROR<pos:position pos:line="66" pos:column="12"/></name> <argument_list pos:line="66" pos:column="13">(<argument><expr><literal type="string" pos:line="66" pos:column="14">"routeros plugin: No `Password' option within a `Router' block. "<pos:position pos:line="66" pos:column="79"/></literal>
	  <literal type="string" pos:line="67" pos:column="11">"How should I authenticate?"<pos:position pos:line="67" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><name pos:line="68" pos:column="7">status<pos:position pos:line="68" pos:column="13"/></name> <operator pos:line="68" pos:column="14">=<pos:position pos:line="68" pos:column="15"/></operator> <operator pos:line="68" pos:column="16">-<pos:position pos:line="68" pos:column="17"/></operator><literal type="number" pos:line="68" pos:column="17">1<pos:position pos:line="68" pos:column="18"/></literal></expr>;<pos:position pos:line="68" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="69" pos:column="6"/></block></then></if>

    <if pos:line="71" pos:column="5">if <condition pos:line="71" pos:column="8">(<expr><operator pos:line="71" pos:column="9">!<pos:position pos:line="71" pos:column="10"/></operator><name><name pos:line="71" pos:column="10">router_data<pos:position pos:line="71" pos:column="21"/></name><operator pos:line="71" pos:column="21">-&gt;<pos:position pos:line="71" pos:column="26"/></operator><name pos:line="71" pos:column="23">collect_interface<pos:position pos:line="71" pos:column="40"/></name></name>
	<operator pos:line="72" pos:column="9">&amp;&amp;<pos:position pos:line="72" pos:column="19"/></operator> <operator pos:line="72" pos:column="12">!<pos:position pos:line="72" pos:column="13"/></operator><name><name pos:line="72" pos:column="13">router_data<pos:position pos:line="72" pos:column="24"/></name><operator pos:line="72" pos:column="24">-&gt;<pos:position pos:line="72" pos:column="29"/></operator><name pos:line="72" pos:column="26">collect_regtable<pos:position pos:line="72" pos:column="42"/></name></name></expr>)<pos:position pos:line="72" pos:column="43"/></condition><then pos:line="72" pos:column="43">
    <block pos:line="73" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="74" pos:column="7">ERROR<pos:position pos:line="74" pos:column="12"/></name> <argument_list pos:line="74" pos:column="13">(<argument><expr><literal type="string" pos:line="74" pos:column="14">"routeros plugin: No `Collect*' option within a `Router' block. "<pos:position pos:line="74" pos:column="79"/></literal>
	  <literal type="string" pos:line="75" pos:column="11">"What statistics should I collect?"<pos:position pos:line="75" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><name pos:line="76" pos:column="7">status<pos:position pos:line="76" pos:column="13"/></name> <operator pos:line="76" pos:column="14">=<pos:position pos:line="76" pos:column="15"/></operator> <operator pos:line="76" pos:column="16">-<pos:position pos:line="76" pos:column="17"/></operator><literal type="number" pos:line="76" pos:column="17">1<pos:position pos:line="76" pos:column="18"/></literal></expr>;<pos:position pos:line="76" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="77" pos:column="6"/></block></then></if>
  }<pos:position pos:line="78" pos:column="4"/></block></then></if>

  <if pos:line="80" pos:column="3">if <condition pos:line="80" pos:column="6">(<expr><operator pos:line="80" pos:column="7">(<pos:position pos:line="80" pos:column="8"/></operator><name pos:line="80" pos:column="8">status<pos:position pos:line="80" pos:column="14"/></name> <operator pos:line="80" pos:column="15">==<pos:position pos:line="80" pos:column="17"/></operator> <literal type="number" pos:line="80" pos:column="18">0<pos:position pos:line="80" pos:column="19"/></literal><operator pos:line="80" pos:column="19">)<pos:position pos:line="80" pos:column="20"/></operator> <operator pos:line="80" pos:column="21">&amp;&amp;<pos:position pos:line="80" pos:column="31"/></operator> <operator pos:line="80" pos:column="24">(<pos:position pos:line="80" pos:column="25"/></operator><name><name pos:line="80" pos:column="25">router_data<pos:position pos:line="80" pos:column="36"/></name><operator pos:line="80" pos:column="36">-&gt;<pos:position pos:line="80" pos:column="41"/></operator><name pos:line="80" pos:column="38">username<pos:position pos:line="80" pos:column="46"/></name></name> <operator pos:line="80" pos:column="47">==<pos:position pos:line="80" pos:column="49"/></operator> <name pos:line="80" pos:column="50">NULL<pos:position pos:line="80" pos:column="54"/></name><operator pos:line="80" pos:column="54">)<pos:position pos:line="80" pos:column="55"/></operator></expr>)<pos:position pos:line="80" pos:column="56"/></condition><then pos:line="80" pos:column="56">
  <block pos:line="81" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="82" pos:column="5">router_data<pos:position pos:line="82" pos:column="16"/></name><operator pos:line="82" pos:column="16">-&gt;<pos:position pos:line="82" pos:column="21"/></operator><name pos:line="82" pos:column="18">username<pos:position pos:line="82" pos:column="26"/></name></name> <operator pos:line="82" pos:column="27">=<pos:position pos:line="82" pos:column="28"/></operator> <call><name pos:line="82" pos:column="29">sstrdup<pos:position pos:line="82" pos:column="36"/></name> <argument_list pos:line="82" pos:column="37">(<argument><expr><literal type="string" pos:line="82" pos:column="38">"admin"<pos:position pos:line="82" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="47"/></expr_stmt>
    <if pos:line="83" pos:column="5">if <condition pos:line="83" pos:column="8">(<expr><name><name pos:line="83" pos:column="9">router_data<pos:position pos:line="83" pos:column="20"/></name><operator pos:line="83" pos:column="20">-&gt;<pos:position pos:line="83" pos:column="25"/></operator><name pos:line="83" pos:column="22">username<pos:position pos:line="83" pos:column="30"/></name></name> <operator pos:line="83" pos:column="31">==<pos:position pos:line="83" pos:column="33"/></operator> <name pos:line="83" pos:column="34">NULL<pos:position pos:line="83" pos:column="38"/></name></expr>)<pos:position pos:line="83" pos:column="39"/></condition><then pos:line="83" pos:column="39">
    <block pos:line="84" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="85" pos:column="7">ERROR<pos:position pos:line="85" pos:column="12"/></name> <argument_list pos:line="85" pos:column="13">(<argument><expr><literal type="string" pos:line="85" pos:column="14">"routeros plugin: sstrdup failed."<pos:position pos:line="85" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="50"/></expr_stmt>
      <expr_stmt><expr><name pos:line="86" pos:column="7">status<pos:position pos:line="86" pos:column="13"/></name> <operator pos:line="86" pos:column="14">=<pos:position pos:line="86" pos:column="15"/></operator> <operator pos:line="86" pos:column="16">-<pos:position pos:line="86" pos:column="17"/></operator><literal type="number" pos:line="86" pos:column="17">1<pos:position pos:line="86" pos:column="18"/></literal></expr>;<pos:position pos:line="86" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="87" pos:column="6"/></block></then></if>
  }<pos:position pos:line="88" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="90" pos:column="3">ssnprintf<pos:position pos:line="90" pos:column="12"/></name> <argument_list pos:line="90" pos:column="13">(<argument><expr><name pos:line="90" pos:column="14">read_name<pos:position pos:line="90" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="90" pos:column="25">sizeof <argument_list pos:line="90" pos:column="32">(<argument><expr><name pos:line="90" pos:column="33">read_name<pos:position pos:line="90" pos:column="42"/></name></expr></argument>)<pos:position pos:line="90" pos:column="43"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="45">"routeros/%s"<pos:position pos:line="90" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="90" pos:column="60">router_data<pos:position pos:line="90" pos:column="71"/></name><operator pos:line="90" pos:column="71">-&gt;<pos:position pos:line="90" pos:column="76"/></operator><name pos:line="90" pos:column="73">node<pos:position pos:line="90" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="79"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="91" pos:column="3">user_data<pos:position pos:line="91" pos:column="12"/></name><operator pos:line="91" pos:column="12">.<pos:position pos:line="91" pos:column="13"/></operator><name pos:line="91" pos:column="13">data<pos:position pos:line="91" pos:column="17"/></name></name> <operator pos:line="91" pos:column="18">=<pos:position pos:line="91" pos:column="19"/></operator> <name pos:line="91" pos:column="20">router_data<pos:position pos:line="91" pos:column="31"/></name></expr>;<pos:position pos:line="91" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="92" pos:column="3">user_data<pos:position pos:line="92" pos:column="12"/></name><operator pos:line="92" pos:column="12">.<pos:position pos:line="92" pos:column="13"/></operator><name pos:line="92" pos:column="13">free_func<pos:position pos:line="92" pos:column="22"/></name></name> <operator pos:line="92" pos:column="23">=<pos:position pos:line="92" pos:column="24"/></operator> <operator pos:line="92" pos:column="25">(<pos:position pos:line="92" pos:column="26"/></operator><name pos:line="92" pos:column="26">void<pos:position pos:line="92" pos:column="30"/></name> <operator pos:line="92" pos:column="31">*<pos:position pos:line="92" pos:column="32"/></operator><operator pos:line="92" pos:column="32">)<pos:position pos:line="92" pos:column="33"/></operator> <name pos:line="92" pos:column="34">cr_free_data<pos:position pos:line="92" pos:column="46"/></name></expr>;<pos:position pos:line="92" pos:column="47"/></expr_stmt>
  <if pos:line="93" pos:column="3">if <condition pos:line="93" pos:column="6">(<expr><name pos:line="93" pos:column="7">status<pos:position pos:line="93" pos:column="13"/></name> <operator pos:line="93" pos:column="14">==<pos:position pos:line="93" pos:column="16"/></operator> <literal type="number" pos:line="93" pos:column="17">0<pos:position pos:line="93" pos:column="18"/></literal></expr>)<pos:position pos:line="93" pos:column="19"/></condition><then pos:line="93" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><name pos:line="94" pos:column="5">status<pos:position pos:line="94" pos:column="11"/></name> <operator pos:line="94" pos:column="12">=<pos:position pos:line="94" pos:column="13"/></operator> <call><name pos:line="94" pos:column="14">plugin_register_complex_read<pos:position pos:line="94" pos:column="42"/></name> <argument_list pos:line="94" pos:column="43">(<comment type="block" pos:line="94" pos:column="44">/* group = */</comment> <argument><expr><name pos:line="94" pos:column="58">NULL<pos:position pos:line="94" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="64">read_name<pos:position pos:line="94" pos:column="73"/></name></expr></argument>,
	<argument><expr><name pos:line="95" pos:column="9">cr_read<pos:position pos:line="95" pos:column="16"/></name></expr></argument>, <comment type="block" pos:line="95" pos:column="18">/* interval = */</comment> <argument><expr><name pos:line="95" pos:column="35">NULL<pos:position pos:line="95" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="95" pos:column="41">&amp;<pos:position pos:line="95" pos:column="46"/></operator><name pos:line="95" pos:column="42">user_data<pos:position pos:line="95" pos:column="51"/></name></expr></argument>)<pos:position pos:line="95" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="53"/></expr_stmt></block></then></if>

  <if pos:line="97" pos:column="3">if <condition pos:line="97" pos:column="6">(<expr><name pos:line="97" pos:column="7">status<pos:position pos:line="97" pos:column="13"/></name> <operator pos:line="97" pos:column="14">!=<pos:position pos:line="97" pos:column="16"/></operator> <literal type="number" pos:line="97" pos:column="17">0<pos:position pos:line="97" pos:column="18"/></literal></expr>)<pos:position pos:line="97" pos:column="19"/></condition><then pos:line="97" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="98" pos:column="5">cr_free_data<pos:position pos:line="98" pos:column="17"/></name> <argument_list pos:line="98" pos:column="18">(<argument><expr><name pos:line="98" pos:column="19">router_data<pos:position pos:line="98" pos:column="30"/></name></expr></argument>)<pos:position pos:line="98" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="32"/></expr_stmt></block></then></if>

  <return pos:line="100" pos:column="3">return <expr><operator pos:line="100" pos:column="10">(<pos:position pos:line="100" pos:column="11"/></operator><name pos:line="100" pos:column="11">status<pos:position pos:line="100" pos:column="17"/></name><operator pos:line="100" pos:column="17">)<pos:position pos:line="100" pos:column="18"/></operator></expr>;<pos:position pos:line="100" pos:column="19"/></return>
}<pos:position pos:line="101" pos:column="2"/></block></function></unit>

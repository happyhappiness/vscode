<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1260_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">PyObject<pos:position pos:line="1" pos:column="16"/></name> <modifier pos:line="1" pos:column="17">*<pos:position pos:line="1" pos:column="18"/></modifier></type><name pos:line="1" pos:column="18">Config_repr<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">PyObject<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">s<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list> <block pos:line="1" pos:column="43">{
	<decl_stmt><decl><type><name pos:line="2" pos:column="9">Config<pos:position pos:line="2" pos:column="15"/></name> <modifier pos:line="2" pos:column="16">*<pos:position pos:line="2" pos:column="17"/></modifier></type><name pos:line="2" pos:column="17">self<pos:position pos:line="2" pos:column="21"/></name> <init pos:line="2" pos:column="22">= <expr><operator pos:line="2" pos:column="24">(<pos:position pos:line="2" pos:column="25"/></operator><name pos:line="2" pos:column="25">Config<pos:position pos:line="2" pos:column="31"/></name> <operator pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></operator><operator pos:line="2" pos:column="33">)<pos:position pos:line="2" pos:column="34"/></operator> <name pos:line="2" pos:column="35">s<pos:position pos:line="2" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="2" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">PyObject<pos:position pos:line="3" pos:column="17"/></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">ret<pos:position pos:line="3" pos:column="22"/></name> <init pos:line="3" pos:column="23">= <expr><name pos:line="3" pos:column="25">NULL<pos:position pos:line="3" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><name pos:line="4" pos:column="16">PyObject<pos:position pos:line="4" pos:column="24"/></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="26">node_prefix<pos:position pos:line="4" pos:column="37"/></name> <init pos:line="4" pos:column="38">= <expr><name pos:line="4" pos:column="40">NULL<pos:position pos:line="4" pos:column="44"/></name></expr></init></decl>, <modifier pos:line="4" pos:column="46">*<pos:position pos:line="4" pos:column="47"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="47">root_prefix<pos:position pos:line="4" pos:column="58"/></name> <init pos:line="4" pos:column="59">= <expr><name pos:line="4" pos:column="61">NULL<pos:position pos:line="4" pos:column="65"/></name></expr></init></decl>, <modifier pos:line="4" pos:column="67">*<pos:position pos:line="4" pos:column="68"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="68">ending<pos:position pos:line="4" pos:column="74"/></name> <init pos:line="4" pos:column="75">= <expr><name pos:line="4" pos:column="77">NULL<pos:position pos:line="4" pos:column="81"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="82"/></decl_stmt>

	<comment type="block" pos:line="6" pos:column="9">/* This is ok because we have the GIL, so this is thread-save by default. */</comment>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">node_prefix<pos:position pos:line="7" pos:column="24"/></name> <operator pos:line="7" pos:column="25">==<pos:position pos:line="7" pos:column="27"/></operator> <name pos:line="7" pos:column="28">NULL<pos:position pos:line="7" pos:column="32"/></name></expr>)<pos:position pos:line="7" pos:column="33"/></condition><then pos:line="7" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="17">node_prefix<pos:position pos:line="8" pos:column="28"/></name> <operator pos:line="8" pos:column="29">=<pos:position pos:line="8" pos:column="30"/></operator> <call><name pos:line="8" pos:column="31">cpy_string_to_unicode_or_bytes<pos:position pos:line="8" pos:column="61"/></name><argument_list pos:line="8" pos:column="61">(<argument><expr><literal type="string" pos:line="8" pos:column="62">"&lt;collectd.Config node "<pos:position pos:line="8" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="88"/></expr_stmt></block></then></if>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">root_prefix<pos:position pos:line="9" pos:column="24"/></name> <operator pos:line="9" pos:column="25">==<pos:position pos:line="9" pos:column="27"/></operator> <name pos:line="9" pos:column="28">NULL<pos:position pos:line="9" pos:column="32"/></name></expr>)<pos:position pos:line="9" pos:column="33"/></condition><then pos:line="9" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="17">root_prefix<pos:position pos:line="10" pos:column="28"/></name> <operator pos:line="10" pos:column="29">=<pos:position pos:line="10" pos:column="30"/></operator> <call><name pos:line="10" pos:column="31">cpy_string_to_unicode_or_bytes<pos:position pos:line="10" pos:column="61"/></name><argument_list pos:line="10" pos:column="61">(<argument><expr><literal type="string" pos:line="10" pos:column="62">"&lt;collectd.Config root node "<pos:position pos:line="10" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="93"/></expr_stmt></block></then></if>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">ending<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">==<pos:position pos:line="11" pos:column="22"/></operator> <name pos:line="11" pos:column="23">NULL<pos:position pos:line="11" pos:column="27"/></name></expr>)<pos:position pos:line="11" pos:column="28"/></condition><then pos:line="11" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="17">ending<pos:position pos:line="12" pos:column="23"/></name> <operator pos:line="12" pos:column="24">=<pos:position pos:line="12" pos:column="25"/></operator> <call><name pos:line="12" pos:column="26">cpy_string_to_unicode_or_bytes<pos:position pos:line="12" pos:column="56"/></name><argument_list pos:line="12" pos:column="56">(<argument><expr><literal type="string" pos:line="12" pos:column="57">"&gt;"<pos:position pos:line="12" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="62"/></expr_stmt></block></then></if>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">node_prefix<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">==<pos:position pos:line="13" pos:column="27"/></operator> <name pos:line="13" pos:column="28">NULL<pos:position pos:line="13" pos:column="32"/></name> <operator pos:line="13" pos:column="33">||<pos:position pos:line="13" pos:column="35"/></operator> <name pos:line="13" pos:column="36">root_prefix<pos:position pos:line="13" pos:column="47"/></name> <operator pos:line="13" pos:column="48">==<pos:position pos:line="13" pos:column="50"/></operator> <name pos:line="13" pos:column="51">NULL<pos:position pos:line="13" pos:column="55"/></name> <operator pos:line="13" pos:column="56">||<pos:position pos:line="13" pos:column="58"/></operator> <name pos:line="13" pos:column="59">ending<pos:position pos:line="13" pos:column="65"/></name> <operator pos:line="13" pos:column="66">==<pos:position pos:line="13" pos:column="68"/></operator> <name pos:line="13" pos:column="69">NULL<pos:position pos:line="13" pos:column="73"/></name></expr>)<pos:position pos:line="13" pos:column="74"/></condition><then pos:line="13" pos:column="74">
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><name pos:line="14" pos:column="24">NULL<pos:position pos:line="14" pos:column="28"/></name></expr>;<pos:position pos:line="14" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="16" pos:column="9">ret<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <call><name pos:line="16" pos:column="15">PyObject_Str<pos:position pos:line="16" pos:column="27"/></name><argument_list pos:line="16" pos:column="27">(<argument><expr><name><name pos:line="16" pos:column="28">self<pos:position pos:line="16" pos:column="32"/></name><operator pos:line="16" pos:column="32">-&gt;<pos:position pos:line="16" pos:column="37"/></operator><name pos:line="16" pos:column="34">key<pos:position pos:line="16" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="17" pos:column="9">CPY_SUBSTITUTE<pos:position pos:line="17" pos:column="23"/></name><argument_list pos:line="17" pos:column="23">(<argument><expr><name pos:line="17" pos:column="24">PyObject_Repr<pos:position pos:line="17" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="39">ret<pos:position pos:line="17" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="44">ret<pos:position pos:line="17" pos:column="47"/></name></expr></argument>)<pos:position pos:line="17" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="49"/></expr_stmt>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name><name pos:line="18" pos:column="13">self<pos:position pos:line="18" pos:column="17"/></name><operator pos:line="18" pos:column="17">-&gt;<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="19">parent<pos:position pos:line="18" pos:column="25"/></name></name> <operator pos:line="18" pos:column="26">==<pos:position pos:line="18" pos:column="28"/></operator> <name pos:line="18" pos:column="29">NULL<pos:position pos:line="18" pos:column="33"/></name> <operator pos:line="18" pos:column="34">||<pos:position pos:line="18" pos:column="36"/></operator> <name><name pos:line="18" pos:column="37">self<pos:position pos:line="18" pos:column="41"/></name><operator pos:line="18" pos:column="41">-&gt;<pos:position pos:line="18" pos:column="46"/></operator><name pos:line="18" pos:column="43">parent<pos:position pos:line="18" pos:column="49"/></name></name> <operator pos:line="18" pos:column="50">==<pos:position pos:line="18" pos:column="52"/></operator> <name pos:line="18" pos:column="53">Py_None<pos:position pos:line="18" pos:column="60"/></name></expr>)<pos:position pos:line="18" pos:column="61"/></condition><then pos:line="18" pos:column="61">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="17">CPY_STRCAT<pos:position pos:line="19" pos:column="27"/></name><argument_list pos:line="19" pos:column="27">(<argument><expr><operator pos:line="19" pos:column="28">&amp;<pos:position pos:line="19" pos:column="33"/></operator><name pos:line="19" pos:column="29">ret<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="34">root_prefix<pos:position pos:line="19" pos:column="45"/></name></expr></argument>)<pos:position pos:line="19" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="47"/></expr_stmt></block></then>
	<else pos:line="20" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="17">CPY_STRCAT<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><operator pos:line="21" pos:column="28">&amp;<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="29">ret<pos:position pos:line="21" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="34">node_prefix<pos:position pos:line="21" pos:column="45"/></name></expr></argument>)<pos:position pos:line="21" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="47"/></expr_stmt></block></else></if>
	<expr_stmt><expr><call><name pos:line="22" pos:column="9">CPY_STRCAT<pos:position pos:line="22" pos:column="19"/></name><argument_list pos:line="22" pos:column="19">(<argument><expr><operator pos:line="22" pos:column="20">&amp;<pos:position pos:line="22" pos:column="25"/></operator><name pos:line="22" pos:column="21">ret<pos:position pos:line="22" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="26">ending<pos:position pos:line="22" pos:column="32"/></name></expr></argument>)<pos:position pos:line="22" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="34"/></expr_stmt>

	<return pos:line="24" pos:column="9">return <expr><name pos:line="24" pos:column="16">ret<pos:position pos:line="24" pos:column="19"/></name></expr>;<pos:position pos:line="24" pos:column="20"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2407_collectd-5.6.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">set_sock_opts<pos:position pos:line="1" pos:column="19"/></name> <parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">int<pos:position pos:line="1" pos:column="24"/></name></type> <name pos:line="1" pos:column="25">sockfd<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list> <comment type="block" pos:line="1" pos:column="33">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">status<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">socktype<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="6" pos:column="9">socklen_t<pos:position pos:line="6" pos:column="18"/></name></type> <name pos:line="6" pos:column="19">socklen<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><sizeof pos:line="6" pos:column="29">sizeof <argument_list pos:line="6" pos:column="36">(<argument><expr><name pos:line="6" pos:column="37">socklen_t<pos:position pos:line="6" pos:column="46"/></name></expr></argument>)<pos:position pos:line="6" pos:column="47"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="6" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">so_keepalive<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><literal type="number" pos:line="7" pos:column="28">1<pos:position pos:line="7" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>

	<expr_stmt><expr><name pos:line="9" pos:column="9">status<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <call><name pos:line="9" pos:column="18">getsockopt<pos:position pos:line="9" pos:column="28"/></name> <argument_list pos:line="9" pos:column="29">(<argument><expr><name pos:line="9" pos:column="30">sockfd<pos:position pos:line="9" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="38">SOL_SOCKET<pos:position pos:line="9" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="50">SO_TYPE<pos:position pos:line="9" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="59">&amp;<pos:position pos:line="9" pos:column="64"/></operator><name pos:line="9" pos:column="60">socktype<pos:position pos:line="9" pos:column="68"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="70">&amp;<pos:position pos:line="9" pos:column="75"/></operator><name pos:line="9" pos:column="71">socklen<pos:position pos:line="9" pos:column="78"/></name></expr></argument>)<pos:position pos:line="9" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="80"/></expr_stmt>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">status<pos:position pos:line="10" pos:column="19"/></name> <operator pos:line="10" pos:column="20">!=<pos:position pos:line="10" pos:column="22"/></operator> <literal type="number" pos:line="10" pos:column="23">0<pos:position pos:line="10" pos:column="24"/></literal></expr>)<pos:position pos:line="10" pos:column="25"/></condition><then pos:line="10" pos:column="25">
	<block pos:line="11" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">WARNING<pos:position pos:line="12" pos:column="24"/></name> <argument_list pos:line="12" pos:column="25">(<argument><expr><literal type="string" pos:line="12" pos:column="26">"set_sock_opts: failed to determine socket type"<pos:position pos:line="12" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="76"/></expr_stmt>
		<return pos:line="13" pos:column="17">return;<pos:position pos:line="13" pos:column="24"/></return>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">socktype<pos:position pos:line="16" pos:column="21"/></name> <operator pos:line="16" pos:column="22">==<pos:position pos:line="16" pos:column="24"/></operator> <name pos:line="16" pos:column="25">SOCK_STREAM<pos:position pos:line="16" pos:column="36"/></name></expr>)<pos:position pos:line="16" pos:column="37"/></condition><then pos:line="16" pos:column="37">
	<block pos:line="17" pos:column="9">{
		<expr_stmt><expr><name pos:line="18" pos:column="17">status<pos:position pos:line="18" pos:column="23"/></name> <operator pos:line="18" pos:column="24">=<pos:position pos:line="18" pos:column="25"/></operator> <call><name pos:line="18" pos:column="26">setsockopt<pos:position pos:line="18" pos:column="36"/></name><argument_list pos:line="18" pos:column="36">(<argument><expr><name pos:line="18" pos:column="37">sockfd<pos:position pos:line="18" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="45">SOL_SOCKET<pos:position pos:line="18" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="57">SO_KEEPALIVE<pos:position pos:line="18" pos:column="69"/></name></expr></argument>,
				<argument><expr><operator pos:line="19" pos:column="33">&amp;<pos:position pos:line="19" pos:column="38"/></operator><name pos:line="19" pos:column="34">so_keepalive<pos:position pos:line="19" pos:column="46"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="48">sizeof <argument_list pos:line="19" pos:column="55">(<argument><expr><name pos:line="19" pos:column="56">so_keepalive<pos:position pos:line="19" pos:column="68"/></name></expr></argument>)<pos:position pos:line="19" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="71"/></expr_stmt>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><name pos:line="20" pos:column="21">status<pos:position pos:line="20" pos:column="27"/></name> <operator pos:line="20" pos:column="28">!=<pos:position pos:line="20" pos:column="30"/></operator> <literal type="number" pos:line="20" pos:column="31">0<pos:position pos:line="20" pos:column="32"/></literal></expr>)<pos:position pos:line="20" pos:column="33"/></condition><then pos:line="20" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="25">WARNING<pos:position pos:line="21" pos:column="32"/></name> <argument_list pos:line="21" pos:column="33">(<argument><expr><literal type="string" pos:line="21" pos:column="34">"set_sock_opts: failed to set socket keepalive flag"<pos:position pos:line="21" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="88"/></expr_stmt></block></then></if>

<cpp:ifdef pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">ifdef<pos:position pos:line="23" pos:column="7"/></cpp:directive> <name pos:line="23" pos:column="8">TCP_KEEPIDLE<pos:position pos:line="23" pos:column="20"/></name></cpp:ifdef>
		<decl_stmt><decl><type><name pos:line="24" pos:column="17">int<pos:position pos:line="24" pos:column="20"/></name></type> <name pos:line="24" pos:column="21">tcp_keepidle<pos:position pos:line="24" pos:column="33"/></name> <init pos:line="24" pos:column="34">= <expr><operator pos:line="24" pos:column="36">(<pos:position pos:line="24" pos:column="37"/></operator><operator pos:line="24" pos:column="37">(<pos:position pos:line="24" pos:column="38"/></operator><call><name pos:line="24" pos:column="38">CDTIME_T_TO_MS<pos:position pos:line="24" pos:column="52"/></name><argument_list pos:line="24" pos:column="52">(<argument><expr><call><name pos:line="24" pos:column="53">plugin_get_interval<pos:position pos:line="24" pos:column="72"/></name><argument_list pos:line="24" pos:column="72">()<pos:position pos:line="24" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="75"/></argument_list></call> <operator pos:line="24" pos:column="76">-<pos:position pos:line="24" pos:column="77"/></operator> <literal type="number" pos:line="24" pos:column="78">1<pos:position pos:line="24" pos:column="79"/></literal><operator pos:line="24" pos:column="79">)<pos:position pos:line="24" pos:column="80"/></operator> <operator pos:line="24" pos:column="81">/<pos:position pos:line="24" pos:column="82"/></operator> <literal type="number" pos:line="24" pos:column="83">100<pos:position pos:line="24" pos:column="86"/></literal> <operator pos:line="24" pos:column="87">+<pos:position pos:line="24" pos:column="88"/></operator> <literal type="number" pos:line="24" pos:column="89">1<pos:position pos:line="24" pos:column="90"/></literal><operator pos:line="24" pos:column="90">)<pos:position pos:line="24" pos:column="91"/></operator></expr></init></decl>;<pos:position pos:line="24" pos:column="92"/></decl_stmt>
		<expr_stmt><expr><name pos:line="25" pos:column="17">status<pos:position pos:line="25" pos:column="23"/></name> <operator pos:line="25" pos:column="24">=<pos:position pos:line="25" pos:column="25"/></operator> <call><name pos:line="25" pos:column="26">setsockopt<pos:position pos:line="25" pos:column="36"/></name><argument_list pos:line="25" pos:column="36">(<argument><expr><name pos:line="25" pos:column="37">sockfd<pos:position pos:line="25" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="45">IPPROTO_TCP<pos:position pos:line="25" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="58">TCP_KEEPIDLE<pos:position pos:line="25" pos:column="70"/></name></expr></argument>,
				<argument><expr><operator pos:line="26" pos:column="33">&amp;<pos:position pos:line="26" pos:column="38"/></operator><name pos:line="26" pos:column="34">tcp_keepidle<pos:position pos:line="26" pos:column="46"/></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="48">sizeof <argument_list pos:line="26" pos:column="55">(<argument><expr><name pos:line="26" pos:column="56">tcp_keepidle<pos:position pos:line="26" pos:column="68"/></name></expr></argument>)<pos:position pos:line="26" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="71"/></expr_stmt>
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><name pos:line="27" pos:column="21">status<pos:position pos:line="27" pos:column="27"/></name> <operator pos:line="27" pos:column="28">!=<pos:position pos:line="27" pos:column="30"/></operator> <literal type="number" pos:line="27" pos:column="31">0<pos:position pos:line="27" pos:column="32"/></literal></expr>)<pos:position pos:line="27" pos:column="33"/></condition><then pos:line="27" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="25">WARNING<pos:position pos:line="28" pos:column="32"/></name> <argument_list pos:line="28" pos:column="33">(<argument><expr><literal type="string" pos:line="28" pos:column="34">"set_sock_opts: failed to set socket tcp keepalive time"<pos:position pos:line="28" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="92"/></expr_stmt></block></then></if>
<cpp:endif pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">endif<pos:position pos:line="29" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">ifdef<pos:position pos:line="31" pos:column="7"/></cpp:directive> <name pos:line="31" pos:column="8">TCP_KEEPINTVL<pos:position pos:line="31" pos:column="21"/></name></cpp:ifdef>
		<decl_stmt><decl><type><name pos:line="32" pos:column="17">int<pos:position pos:line="32" pos:column="20"/></name></type> <name pos:line="32" pos:column="21">tcp_keepintvl<pos:position pos:line="32" pos:column="34"/></name> <init pos:line="32" pos:column="35">= <expr><operator pos:line="32" pos:column="37">(<pos:position pos:line="32" pos:column="38"/></operator><operator pos:line="32" pos:column="38">(<pos:position pos:line="32" pos:column="39"/></operator><call><name pos:line="32" pos:column="39">CDTIME_T_TO_MS<pos:position pos:line="32" pos:column="53"/></name><argument_list pos:line="32" pos:column="53">(<argument><expr><call><name pos:line="32" pos:column="54">plugin_get_interval<pos:position pos:line="32" pos:column="73"/></name><argument_list pos:line="32" pos:column="73">()<pos:position pos:line="32" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="76"/></argument_list></call> <operator pos:line="32" pos:column="77">-<pos:position pos:line="32" pos:column="78"/></operator> <literal type="number" pos:line="32" pos:column="79">1<pos:position pos:line="32" pos:column="80"/></literal><operator pos:line="32" pos:column="80">)<pos:position pos:line="32" pos:column="81"/></operator> <operator pos:line="32" pos:column="82">/<pos:position pos:line="32" pos:column="83"/></operator> <literal type="number" pos:line="32" pos:column="84">1000<pos:position pos:line="32" pos:column="88"/></literal> <operator pos:line="32" pos:column="89">+<pos:position pos:line="32" pos:column="90"/></operator> <literal type="number" pos:line="32" pos:column="91">1<pos:position pos:line="32" pos:column="92"/></literal><operator pos:line="32" pos:column="92">)<pos:position pos:line="32" pos:column="93"/></operator></expr></init></decl>;<pos:position pos:line="32" pos:column="94"/></decl_stmt>
		<expr_stmt><expr><name pos:line="33" pos:column="17">status<pos:position pos:line="33" pos:column="23"/></name> <operator pos:line="33" pos:column="24">=<pos:position pos:line="33" pos:column="25"/></operator> <call><name pos:line="33" pos:column="26">setsockopt<pos:position pos:line="33" pos:column="36"/></name><argument_list pos:line="33" pos:column="36">(<argument><expr><name pos:line="33" pos:column="37">sockfd<pos:position pos:line="33" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="45">IPPROTO_TCP<pos:position pos:line="33" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="58">TCP_KEEPINTVL<pos:position pos:line="33" pos:column="71"/></name></expr></argument>,
				<argument><expr><operator pos:line="34" pos:column="33">&amp;<pos:position pos:line="34" pos:column="38"/></operator><name pos:line="34" pos:column="34">tcp_keepintvl<pos:position pos:line="34" pos:column="47"/></name></expr></argument>, <argument><expr><sizeof pos:line="34" pos:column="49">sizeof <argument_list pos:line="34" pos:column="56">(<argument><expr><name pos:line="34" pos:column="57">tcp_keepintvl<pos:position pos:line="34" pos:column="70"/></name></expr></argument>)<pos:position pos:line="34" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="34" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="73"/></expr_stmt>
		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><name pos:line="35" pos:column="21">status<pos:position pos:line="35" pos:column="27"/></name> <operator pos:line="35" pos:column="28">!=<pos:position pos:line="35" pos:column="30"/></operator> <literal type="number" pos:line="35" pos:column="31">0<pos:position pos:line="35" pos:column="32"/></literal></expr>)<pos:position pos:line="35" pos:column="33"/></condition><then pos:line="35" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="25">WARNING<pos:position pos:line="36" pos:column="32"/></name> <argument_list pos:line="36" pos:column="33">(<argument><expr><literal type="string" pos:line="36" pos:column="34">"set_sock_opts: failed to set socket tcp keepalive interval"<pos:position pos:line="36" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="96"/></expr_stmt></block></then></if>
<cpp:endif pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">endif<pos:position pos:line="37" pos:column="7"/></cpp:directive></cpp:endif>
	}<pos:position pos:line="38" pos:column="10"/></block></then></if>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_501_collectd-4.5.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">c_ithread_t<pos:position pos:line="1" pos:column="19"/></name> <modifier pos:line="1" pos:column="20">*<pos:position pos:line="1" pos:column="21"/></modifier></type><name pos:line="1" pos:column="21">c_ithread_create<pos:position pos:line="1" pos:column="37"/></name> <parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">PerlInterpreter<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">base<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">c_ithread_t<pos:position pos:line="3" pos:column="20"/></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">t<pos:position pos:line="3" pos:column="23"/></name> <init pos:line="3" pos:column="24">= <expr><name pos:line="3" pos:column="26">NULL<pos:position pos:line="3" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="4" pos:column="9">dTHXa<pos:position pos:line="4" pos:column="14"/></name> <argument_list pos:line="4" pos:column="15">(<argument><expr><name pos:line="4" pos:column="16">NULL<pos:position pos:line="4" pos:column="20"/></name></expr></argument>)<pos:position pos:line="4" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="22"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="6" pos:column="9">assert<pos:position pos:line="6" pos:column="15"/></name> <argument_list pos:line="6" pos:column="16">(<argument><expr><name pos:line="6" pos:column="17">NULL<pos:position pos:line="6" pos:column="21"/></name> <operator pos:line="6" pos:column="22">!=<pos:position pos:line="6" pos:column="24"/></operator> <name pos:line="6" pos:column="25">perl_threads<pos:position pos:line="6" pos:column="37"/></name></expr></argument>)<pos:position pos:line="6" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="39"/></expr_stmt>

	<expr_stmt><expr><name pos:line="8" pos:column="9">t<pos:position pos:line="8" pos:column="10"/></name> <operator pos:line="8" pos:column="11">=<pos:position pos:line="8" pos:column="12"/></operator> <operator pos:line="8" pos:column="13">(<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">c_ithread_t<pos:position pos:line="8" pos:column="25"/></name> <operator pos:line="8" pos:column="26">*<pos:position pos:line="8" pos:column="27"/></operator><operator pos:line="8" pos:column="27">)<pos:position pos:line="8" pos:column="28"/></operator><call><name pos:line="8" pos:column="28">smalloc<pos:position pos:line="8" pos:column="35"/></name> <argument_list pos:line="8" pos:column="36">(<argument><expr><sizeof pos:line="8" pos:column="37">sizeof <argument_list pos:line="8" pos:column="44">(<argument><expr><name pos:line="8" pos:column="45">c_ithread_t<pos:position pos:line="8" pos:column="56"/></name></expr></argument>)<pos:position pos:line="8" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="59"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">memset<pos:position pos:line="9" pos:column="15"/></name> <argument_list pos:line="9" pos:column="16">(<argument><expr><name pos:line="9" pos:column="17">t<pos:position pos:line="9" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="20">0<pos:position pos:line="9" pos:column="21"/></literal></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="23">sizeof <argument_list pos:line="9" pos:column="30">(<argument><expr><name pos:line="9" pos:column="31">c_ithread_t<pos:position pos:line="9" pos:column="42"/></name></expr></argument>)<pos:position pos:line="9" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="45"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="11" pos:column="9">t<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">-&gt;<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="12">interp<pos:position pos:line="11" pos:column="18"/></name></name> <operator pos:line="11" pos:column="19">=<pos:position pos:line="11" pos:column="20"/></operator> <ternary><condition><expr><operator pos:line="11" pos:column="21">(<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="22">NULL<pos:position pos:line="11" pos:column="26"/></name> <operator pos:line="11" pos:column="27">==<pos:position pos:line="11" pos:column="29"/></operator> <name pos:line="11" pos:column="30">base<pos:position pos:line="11" pos:column="34"/></name><operator pos:line="11" pos:column="34">)<pos:position pos:line="11" pos:column="35"/></operator></expr>
		?<pos:position pos:line="12" pos:column="18"/></condition><then pos:line="12" pos:column="18"> <expr><name pos:line="12" pos:column="19">NULL<pos:position pos:line="12" pos:column="23"/></name></expr>
		<pos:position pos:line="13" pos:column="3"/></then><else pos:line="13" pos:column="17">: <expr><call><name pos:line="13" pos:column="19">perl_clone<pos:position pos:line="13" pos:column="29"/></name> <argument_list pos:line="13" pos:column="30">(<argument><expr><name pos:line="13" pos:column="31">base<pos:position pos:line="13" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="37">CLONEf_KEEP_PTR_TABLE<pos:position pos:line="13" pos:column="58"/></name></expr></argument>)<pos:position pos:line="13" pos:column="59"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="13" pos:column="60"/></expr_stmt>

	<expr_stmt><expr><name pos:line="15" pos:column="9">aTHX<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <name><name pos:line="15" pos:column="16">t<pos:position pos:line="15" pos:column="17"/></name><operator pos:line="15" pos:column="17">-&gt;<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="19">interp<pos:position pos:line="15" pos:column="25"/></name></name></expr>;<pos:position pos:line="15" pos:column="26"/></expr_stmt>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">(<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">NULL<pos:position pos:line="17" pos:column="18"/></name> <operator pos:line="17" pos:column="19">!=<pos:position pos:line="17" pos:column="21"/></operator> <name pos:line="17" pos:column="22">base<pos:position pos:line="17" pos:column="26"/></name><operator pos:line="17" pos:column="26">)<pos:position pos:line="17" pos:column="27"/></operator> <operator pos:line="17" pos:column="28">&amp;&amp;<pos:position pos:line="17" pos:column="38"/></operator> <operator pos:line="17" pos:column="31">(<pos:position pos:line="17" pos:column="32"/></operator><name pos:line="17" pos:column="32">NULL<pos:position pos:line="17" pos:column="36"/></name> <operator pos:line="17" pos:column="37">!=<pos:position pos:line="17" pos:column="39"/></operator> <name pos:line="17" pos:column="40">PL_endav<pos:position pos:line="17" pos:column="48"/></name><operator pos:line="17" pos:column="48">)<pos:position pos:line="17" pos:column="49"/></operator></expr>)<pos:position pos:line="17" pos:column="50"/></condition><then pos:line="17" pos:column="50"> <block pos:line="17" pos:column="51">{
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">av_clear<pos:position pos:line="18" pos:column="25"/></name> <argument_list pos:line="18" pos:column="26">(<argument><expr><name pos:line="18" pos:column="27">PL_endav<pos:position pos:line="18" pos:column="35"/></name></expr></argument>)<pos:position pos:line="18" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">av_undef<pos:position pos:line="19" pos:column="25"/></name> <argument_list pos:line="19" pos:column="26">(<argument><expr><name pos:line="19" pos:column="27">PL_endav<pos:position pos:line="19" pos:column="35"/></name></expr></argument>)<pos:position pos:line="19" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name pos:line="20" pos:column="17">PL_endav<pos:position pos:line="20" pos:column="25"/></name> <operator pos:line="20" pos:column="26">=<pos:position pos:line="20" pos:column="27"/></operator> <name pos:line="20" pos:column="28">Nullav<pos:position pos:line="20" pos:column="34"/></name></expr>;<pos:position pos:line="20" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>

<cpp:if pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">if<pos:position pos:line="23" pos:column="4"/></cpp:directive> <expr><name pos:line="23" pos:column="5">COLLECT_DEBUG<pos:position pos:line="23" pos:column="18"/></name></expr></cpp:if>
	<expr_stmt><expr><operator pos:line="24" pos:column="9">++<pos:position pos:line="24" pos:column="11"/></operator><name><name pos:line="24" pos:column="11">perl_threads<pos:position pos:line="24" pos:column="23"/></name><operator pos:line="24" pos:column="23">-&gt;<pos:position pos:line="24" pos:column="28"/></operator><name pos:line="24" pos:column="25">number_of_threads<pos:position pos:line="24" pos:column="42"/></name></name></expr>;<pos:position pos:line="24" pos:column="43"/></expr_stmt>
<cpp:endif pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">endif<pos:position pos:line="25" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="25" pos:column="8">/* COLLECT_DEBUG */</comment>

	<expr_stmt><expr><name><name pos:line="27" pos:column="9">t<pos:position pos:line="27" pos:column="10"/></name><operator pos:line="27" pos:column="10">-&gt;<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="12">next<pos:position pos:line="27" pos:column="16"/></name></name> <operator pos:line="27" pos:column="17">=<pos:position pos:line="27" pos:column="18"/></operator> <name pos:line="27" pos:column="19">NULL<pos:position pos:line="27" pos:column="23"/></name></expr>;<pos:position pos:line="27" pos:column="24"/></expr_stmt>

	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">NULL<pos:position pos:line="29" pos:column="17"/></name> <operator pos:line="29" pos:column="18">==<pos:position pos:line="29" pos:column="20"/></operator> <name><name pos:line="29" pos:column="21">perl_threads<pos:position pos:line="29" pos:column="33"/></name><operator pos:line="29" pos:column="33">-&gt;<pos:position pos:line="29" pos:column="38"/></operator><name pos:line="29" pos:column="35">tail<pos:position pos:line="29" pos:column="39"/></name></name></expr>)<pos:position pos:line="29" pos:column="40"/></condition><then pos:line="29" pos:column="40"> <block pos:line="29" pos:column="41">{
		<expr_stmt><expr><name><name pos:line="30" pos:column="17">perl_threads<pos:position pos:line="30" pos:column="29"/></name><operator pos:line="30" pos:column="29">-&gt;<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="31">head<pos:position pos:line="30" pos:column="35"/></name></name> <operator pos:line="30" pos:column="36">=<pos:position pos:line="30" pos:column="37"/></operator> <name pos:line="30" pos:column="38">t<pos:position pos:line="30" pos:column="39"/></name></expr>;<pos:position pos:line="30" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="31" pos:column="17">t<pos:position pos:line="31" pos:column="18"/></name><operator pos:line="31" pos:column="18">-&gt;<pos:position pos:line="31" pos:column="23"/></operator><name pos:line="31" pos:column="20">prev<pos:position pos:line="31" pos:column="24"/></name></name> <operator pos:line="31" pos:column="25">=<pos:position pos:line="31" pos:column="26"/></operator> <name pos:line="31" pos:column="27">NULL<pos:position pos:line="31" pos:column="31"/></name></expr>;<pos:position pos:line="31" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="32" pos:column="10"/></block></then>
	<else pos:line="33" pos:column="9">else <block pos:line="33" pos:column="14">{
		<expr_stmt><expr><name><name pos:line="34" pos:column="17">perl_threads<pos:position pos:line="34" pos:column="29"/></name><operator pos:line="34" pos:column="29">-&gt;<pos:position pos:line="34" pos:column="34"/></operator><name pos:line="34" pos:column="31">tail<pos:position pos:line="34" pos:column="35"/></name><operator pos:line="34" pos:column="35">-&gt;<pos:position pos:line="34" pos:column="40"/></operator><name pos:line="34" pos:column="37">next<pos:position pos:line="34" pos:column="41"/></name></name> <operator pos:line="34" pos:column="42">=<pos:position pos:line="34" pos:column="43"/></operator> <name pos:line="34" pos:column="44">t<pos:position pos:line="34" pos:column="45"/></name></expr>;<pos:position pos:line="34" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="35" pos:column="17">t<pos:position pos:line="35" pos:column="18"/></name><operator pos:line="35" pos:column="18">-&gt;<pos:position pos:line="35" pos:column="23"/></operator><name pos:line="35" pos:column="20">prev<pos:position pos:line="35" pos:column="24"/></name></name> <operator pos:line="35" pos:column="25">=<pos:position pos:line="35" pos:column="26"/></operator> <name><name pos:line="35" pos:column="27">perl_threads<pos:position pos:line="35" pos:column="39"/></name><operator pos:line="35" pos:column="39">-&gt;<pos:position pos:line="35" pos:column="44"/></operator><name pos:line="35" pos:column="41">tail<pos:position pos:line="35" pos:column="45"/></name></name></expr>;<pos:position pos:line="35" pos:column="46"/></expr_stmt>
	}<pos:position pos:line="36" pos:column="10"/></block></else></if>

	<expr_stmt><expr><name><name pos:line="38" pos:column="9">perl_threads<pos:position pos:line="38" pos:column="21"/></name><operator pos:line="38" pos:column="21">-&gt;<pos:position pos:line="38" pos:column="26"/></operator><name pos:line="38" pos:column="23">tail<pos:position pos:line="38" pos:column="27"/></name></name> <operator pos:line="38" pos:column="28">=<pos:position pos:line="38" pos:column="29"/></operator> <name pos:line="38" pos:column="30">t<pos:position pos:line="38" pos:column="31"/></name></expr>;<pos:position pos:line="38" pos:column="32"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="40" pos:column="9">pthread_setspecific<pos:position pos:line="40" pos:column="28"/></name> <argument_list pos:line="40" pos:column="29">(<argument><expr><name pos:line="40" pos:column="30">perl_thr_key<pos:position pos:line="40" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="44">(<pos:position pos:line="40" pos:column="45"/></operator><specifier pos:line="40" pos:column="45">const<pos:position pos:line="40" pos:column="50"/></specifier> <name pos:line="40" pos:column="51">void<pos:position pos:line="40" pos:column="55"/></name> <operator pos:line="40" pos:column="56">*<pos:position pos:line="40" pos:column="57"/></operator><operator pos:line="40" pos:column="57">)<pos:position pos:line="40" pos:column="58"/></operator><name pos:line="40" pos:column="58">t<pos:position pos:line="40" pos:column="59"/></name></expr></argument>)<pos:position pos:line="40" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="61"/></expr_stmt>
	<return pos:line="41" pos:column="9">return <expr><name pos:line="41" pos:column="16">t<pos:position pos:line="41" pos:column="17"/></name></expr>;<pos:position pos:line="41" pos:column="18"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

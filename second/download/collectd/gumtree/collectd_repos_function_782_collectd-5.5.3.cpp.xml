<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_782_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">sl_config<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">key<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="40">const<pos:position pos:line="1" pos:column="45"/></specifier> <name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">value<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><call><name pos:line="3" pos:column="13">strcasecmp<pos:position pos:line="3" pos:column="23"/></name> <argument_list pos:line="3" pos:column="24">(<argument><expr><name pos:line="3" pos:column="25">key<pos:position pos:line="3" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="30">"LogLevel"<pos:position pos:line="3" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="41"/></argument_list></call> <operator pos:line="3" pos:column="42">==<pos:position pos:line="3" pos:column="44"/></operator> <literal type="number" pos:line="3" pos:column="45">0<pos:position pos:line="3" pos:column="46"/></literal></expr>)<pos:position pos:line="3" pos:column="47"/></condition><then pos:line="3" pos:column="47">
	<block pos:line="4" pos:column="9">{
		<expr_stmt><expr><name pos:line="5" pos:column="17">log_level<pos:position pos:line="5" pos:column="26"/></name> <operator pos:line="5" pos:column="27">=<pos:position pos:line="5" pos:column="28"/></operator> <call><name pos:line="5" pos:column="29">parse_log_severity<pos:position pos:line="5" pos:column="47"/></name> <argument_list pos:line="5" pos:column="48">(<argument><expr><name pos:line="5" pos:column="49">value<pos:position pos:line="5" pos:column="54"/></name></expr></argument>)<pos:position pos:line="5" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="56"/></expr_stmt>
		<if pos:line="6" pos:column="17">if <condition pos:line="6" pos:column="20">(<expr><name pos:line="6" pos:column="21">log_level<pos:position pos:line="6" pos:column="30"/></name> <operator pos:line="6" pos:column="31">&lt;<pos:position pos:line="6" pos:column="35"/></operator> <literal type="number" pos:line="6" pos:column="33">0<pos:position pos:line="6" pos:column="34"/></literal></expr>)<pos:position pos:line="6" pos:column="35"/></condition><then pos:line="6" pos:column="35">
		<block pos:line="7" pos:column="17">{
			<expr_stmt><expr><name pos:line="8" pos:column="25">log_level<pos:position pos:line="8" pos:column="34"/></name> <operator pos:line="8" pos:column="35">=<pos:position pos:line="8" pos:column="36"/></operator> <name pos:line="8" pos:column="37">LOG_INFO<pos:position pos:line="8" pos:column="45"/></name></expr>;<pos:position pos:line="8" pos:column="46"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="9" pos:column="25">ERROR<pos:position pos:line="9" pos:column="30"/></name> <argument_list pos:line="9" pos:column="31">(<argument><expr><literal type="string" pos:line="9" pos:column="32">"syslog: invalid loglevel [%s] defaulting to 'info'"<pos:position pos:line="9" pos:column="84"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="86">value<pos:position pos:line="9" pos:column="91"/></name></expr></argument>)<pos:position pos:line="9" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="93"/></expr_stmt>
			<return pos:line="10" pos:column="25">return <expr><operator pos:line="10" pos:column="32">(<pos:position pos:line="10" pos:column="33"/></operator><literal type="number" pos:line="10" pos:column="33">1<pos:position pos:line="10" pos:column="34"/></literal><operator pos:line="10" pos:column="34">)<pos:position pos:line="10" pos:column="35"/></operator></expr>;<pos:position pos:line="10" pos:column="36"/></return>
		}<pos:position pos:line="11" pos:column="18"/></block></then></if>
	}<pos:position pos:line="12" pos:column="10"/></block></then>
	<elseif pos:line="13" pos:column="9">else <if pos:line="13" pos:column="14">if <condition pos:line="13" pos:column="17">(<expr><call><name pos:line="13" pos:column="18">strcasecmp<pos:position pos:line="13" pos:column="28"/></name> <argument_list pos:line="13" pos:column="29">(<argument><expr><name pos:line="13" pos:column="30">key<pos:position pos:line="13" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="35">"NotifyLevel"<pos:position pos:line="13" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></call> <operator pos:line="13" pos:column="50">==<pos:position pos:line="13" pos:column="52"/></operator> <literal type="number" pos:line="13" pos:column="53">0<pos:position pos:line="13" pos:column="54"/></literal></expr>)<pos:position pos:line="13" pos:column="55"/></condition><then pos:line="13" pos:column="55">
	<block pos:line="14" pos:column="9">{
		<expr_stmt><expr><name pos:line="15" pos:column="17">notif_severity<pos:position pos:line="15" pos:column="31"/></name> <operator pos:line="15" pos:column="32">=<pos:position pos:line="15" pos:column="33"/></operator> <call><name pos:line="15" pos:column="34">parse_notif_severity<pos:position pos:line="15" pos:column="54"/></name> <argument_list pos:line="15" pos:column="55">(<argument><expr><name pos:line="15" pos:column="56">value<pos:position pos:line="15" pos:column="61"/></name></expr></argument>)<pos:position pos:line="15" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="63"/></expr_stmt>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name pos:line="16" pos:column="21">notif_severity<pos:position pos:line="16" pos:column="35"/></name> <operator pos:line="16" pos:column="36">&lt;<pos:position pos:line="16" pos:column="40"/></operator> <literal type="number" pos:line="16" pos:column="38">0<pos:position pos:line="16" pos:column="39"/></literal></expr>)<pos:position pos:line="16" pos:column="40"/></condition><then pos:line="16" pos:column="40">
			<block type="pseudo"><return pos:line="17" pos:column="25">return <expr><operator pos:line="17" pos:column="32">(<pos:position pos:line="17" pos:column="33"/></operator><literal type="number" pos:line="17" pos:column="33">1<pos:position pos:line="17" pos:column="34"/></literal><operator pos:line="17" pos:column="34">)<pos:position pos:line="17" pos:column="35"/></operator></expr>;<pos:position pos:line="17" pos:column="36"/></return></block></then></if>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if></elseif></if>

	<return pos:line="20" pos:column="9">return <expr><operator pos:line="20" pos:column="16">(<pos:position pos:line="20" pos:column="17"/></operator><literal type="number" pos:line="20" pos:column="17">0<pos:position pos:line="20" pos:column="18"/></literal><operator pos:line="20" pos:column="18">)<pos:position pos:line="20" pos:column="19"/></operator></expr>;<pos:position pos:line="20" pos:column="20"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

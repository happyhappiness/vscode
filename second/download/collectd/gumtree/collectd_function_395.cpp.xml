<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_function_395.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">plugin_load<pos:position pos:line="1" pos:column="16"/></name> <parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><specifier pos:line="1" pos:column="18">const<pos:position pos:line="1" pos:column="23"/></specifier> <name pos:line="1" pos:column="24">char<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">type<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">uint32_t<pos:position pos:line="1" pos:column="44"/></name></type> <name pos:line="1" pos:column="45">flags<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">DIR<pos:position pos:line="3" pos:column="12"/></name>  <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">dh<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">dir<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name></type>  <name><name pos:line="5" pos:column="15">filename<pos:position pos:line="5" pos:column="23"/></name><index pos:line="5" pos:column="23">[<expr><name pos:line="5" pos:column="24">BUFSIZE<pos:position pos:line="5" pos:column="31"/></name></expr>]<pos:position pos:line="5" pos:column="32"/></index></name> <init pos:line="5" pos:column="33">= <expr><literal type="string" pos:line="5" pos:column="35">""<pos:position pos:line="5" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="38"/></decl_stmt>
	<expr_stmt><expr><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name>  <name><typename pos:line="6" pos:column="15">typename<pos:position pos:line="6" pos:column="23"/></typename><index pos:line="6" pos:column="23">[<expr><name pos:line="6" pos:column="24">BUFSIZE<pos:position pos:line="6" pos:column="31"/></name></expr>]<pos:position pos:line="6" pos:column="32"/></index></name></expr>;<pos:position pos:line="6" pos:column="33"/></expr_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type>   <name pos:line="7" pos:column="15">typename_len<pos:position pos:line="7" pos:column="27"/></name></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type>   <name pos:line="8" pos:column="15">ret<pos:position pos:line="8" pos:column="18"/></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">stat<pos:position pos:line="9" pos:column="20"/></name></name></type>    <name pos:line="9" pos:column="24">statbuf<pos:position pos:line="9" pos:column="31"/></name></decl>;<pos:position pos:line="9" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">dirent<pos:position pos:line="10" pos:column="22"/></name></name> <modifier pos:line="10" pos:column="23">*<pos:position pos:line="10" pos:column="24"/></modifier></type><name pos:line="10" pos:column="24">de<pos:position pos:line="10" pos:column="26"/></name></decl>;<pos:position pos:line="10" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">status<pos:position pos:line="11" pos:column="19"/></name></decl>;<pos:position pos:line="11" pos:column="20"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="13" pos:column="9">DEBUG<pos:position pos:line="13" pos:column="14"/></name> <argument_list pos:line="13" pos:column="15">(<argument><expr><literal type="string" pos:line="13" pos:column="16">"type = %s"<pos:position pos:line="13" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="29">type<pos:position pos:line="13" pos:column="33"/></name></expr></argument>)<pos:position pos:line="13" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="35"/></expr_stmt>

	<expr_stmt><expr><name pos:line="15" pos:column="9">dir<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <call><name pos:line="15" pos:column="15">plugin_get_dir<pos:position pos:line="15" pos:column="29"/></name> <argument_list pos:line="15" pos:column="30">()<pos:position pos:line="15" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name pos:line="16" pos:column="9">ret<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <literal type="number" pos:line="16" pos:column="15">1<pos:position pos:line="16" pos:column="16"/></literal></expr>;<pos:position pos:line="16" pos:column="17"/></expr_stmt>

	<comment type="block" pos:line="18" pos:column="9">/* `cpu' should not match `cpufreq'. To solve this we add `.so' to the
	 * type when matching the filename */</comment>
	<expr_stmt><expr><name pos:line="20" pos:column="9">status<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <call><name pos:line="20" pos:column="18">ssnprintf<pos:position pos:line="20" pos:column="27"/></name> <argument_list pos:line="20" pos:column="28">(<argument><expr><name><typename pos:line="20" pos:column="29">typename<pos:position pos:line="20" pos:column="37"/></typename></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="39">sizeof <argument_list pos:line="20" pos:column="46">(<argument><expr><name><typename pos:line="20" pos:column="47">typename<pos:position pos:line="20" pos:column="55"/></typename></name></expr></argument>)<pos:position pos:line="20" pos:column="56"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="58">"%s.so"<pos:position pos:line="20" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="67">type<pos:position pos:line="20" pos:column="71"/></name></expr></argument>)<pos:position pos:line="20" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="73"/></expr_stmt>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">(<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="14">status<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">&lt;<pos:position pos:line="21" pos:column="25"/></operator> <literal type="number" pos:line="21" pos:column="23">0<pos:position pos:line="21" pos:column="24"/></literal><operator pos:line="21" pos:column="24">)<pos:position pos:line="21" pos:column="25"/></operator> <operator pos:line="21" pos:column="26">||<pos:position pos:line="21" pos:column="28"/></operator> <operator pos:line="21" pos:column="29">(<pos:position pos:line="21" pos:column="30"/></operator><operator pos:line="21" pos:column="30">(<pos:position pos:line="21" pos:column="31"/></operator><name pos:line="21" pos:column="31">size_t<pos:position pos:line="21" pos:column="37"/></name><operator pos:line="21" pos:column="37">)<pos:position pos:line="21" pos:column="38"/></operator> <name pos:line="21" pos:column="39">status<pos:position pos:line="21" pos:column="45"/></name> <operator pos:line="21" pos:column="46">&gt;=<pos:position pos:line="21" pos:column="51"/></operator> <sizeof pos:line="21" pos:column="49">sizeof <argument_list pos:line="21" pos:column="56">(<argument><expr><name><typename pos:line="21" pos:column="57">typename<pos:position pos:line="21" pos:column="65"/></typename></name></expr></argument>)<pos:position pos:line="21" pos:column="66"/></argument_list></sizeof><operator pos:line="21" pos:column="66">)<pos:position pos:line="21" pos:column="67"/></operator></expr>)<pos:position pos:line="21" pos:column="68"/></condition><then pos:line="21" pos:column="68">
	<block pos:line="22" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="23" pos:column="17">WARNING<pos:position pos:line="23" pos:column="24"/></name> <argument_list pos:line="23" pos:column="25">(<argument><expr><literal type="string" pos:line="23" pos:column="26">"snprintf: truncated: `%s.so'"<pos:position pos:line="23" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="58">type<pos:position pos:line="23" pos:column="62"/></name></expr></argument>)<pos:position pos:line="23" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="64"/></expr_stmt>
		<return pos:line="24" pos:column="17">return <expr><operator pos:line="24" pos:column="24">(<pos:position pos:line="24" pos:column="25"/></operator><operator pos:line="24" pos:column="25">-<pos:position pos:line="24" pos:column="26"/></operator><literal type="number" pos:line="24" pos:column="26">1<pos:position pos:line="24" pos:column="27"/></literal><operator pos:line="24" pos:column="27">)<pos:position pos:line="24" pos:column="28"/></operator></expr>;<pos:position pos:line="24" pos:column="29"/></return>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="26" pos:column="9">typename_len<pos:position pos:line="26" pos:column="21"/></name> <operator pos:line="26" pos:column="22">=<pos:position pos:line="26" pos:column="23"/></operator> <call><name pos:line="26" pos:column="24">strlen<pos:position pos:line="26" pos:column="30"/></name> <argument_list pos:line="26" pos:column="31">(<argument><expr><name><typename pos:line="26" pos:column="32">typename<pos:position pos:line="26" pos:column="40"/></typename></name></expr></argument>)<pos:position pos:line="26" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="42"/></expr_stmt>

	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">(<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">dh<pos:position pos:line="28" pos:column="16"/></name> <operator pos:line="28" pos:column="17">=<pos:position pos:line="28" pos:column="18"/></operator> <call><name pos:line="28" pos:column="19">opendir<pos:position pos:line="28" pos:column="26"/></name> <argument_list pos:line="28" pos:column="27">(<argument><expr><name pos:line="28" pos:column="28">dir<pos:position pos:line="28" pos:column="31"/></name></expr></argument>)<pos:position pos:line="28" pos:column="32"/></argument_list></call><operator pos:line="28" pos:column="32">)<pos:position pos:line="28" pos:column="33"/></operator> <operator pos:line="28" pos:column="34">==<pos:position pos:line="28" pos:column="36"/></operator> <name pos:line="28" pos:column="37">NULL<pos:position pos:line="28" pos:column="41"/></name></expr>)<pos:position pos:line="28" pos:column="42"/></condition><then pos:line="28" pos:column="42">
	<block pos:line="29" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="30" pos:column="17">char<pos:position pos:line="30" pos:column="21"/></name></type> <name><name pos:line="30" pos:column="22">errbuf<pos:position pos:line="30" pos:column="28"/></name><index pos:line="30" pos:column="28">[<expr><literal type="number" pos:line="30" pos:column="29">1024<pos:position pos:line="30" pos:column="33"/></literal></expr>]<pos:position pos:line="30" pos:column="34"/></index></name></decl>;<pos:position pos:line="30" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">ERROR<pos:position pos:line="31" pos:column="22"/></name> <argument_list pos:line="31" pos:column="23">(<argument><expr><literal type="string" pos:line="31" pos:column="24">"opendir (%s): %s"<pos:position pos:line="31" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="44">dir<pos:position pos:line="31" pos:column="47"/></name></expr></argument>,
				<argument><expr><call><name pos:line="32" pos:column="33">sstrerror<pos:position pos:line="32" pos:column="42"/></name> <argument_list pos:line="32" pos:column="43">(<argument><expr><name pos:line="32" pos:column="44">errno<pos:position pos:line="32" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="51">errbuf<pos:position pos:line="32" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="32" pos:column="59">sizeof <argument_list pos:line="32" pos:column="66">(<argument><expr><name pos:line="32" pos:column="67">errbuf<pos:position pos:line="32" pos:column="73"/></name></expr></argument>)<pos:position pos:line="32" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="32" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="77"/></expr_stmt>
		<return pos:line="33" pos:column="17">return <expr><operator pos:line="33" pos:column="24">(<pos:position pos:line="33" pos:column="25"/></operator><operator pos:line="33" pos:column="25">-<pos:position pos:line="33" pos:column="26"/></operator><literal type="number" pos:line="33" pos:column="26">1<pos:position pos:line="33" pos:column="27"/></literal><operator pos:line="33" pos:column="27">)<pos:position pos:line="33" pos:column="28"/></operator></expr>;<pos:position pos:line="33" pos:column="29"/></return>
	}<pos:position pos:line="34" pos:column="10"/></block></then></if>

	<while pos:line="36" pos:column="9">while <condition pos:line="36" pos:column="15">(<expr><operator pos:line="36" pos:column="16">(<pos:position pos:line="36" pos:column="17"/></operator><name pos:line="36" pos:column="17">de<pos:position pos:line="36" pos:column="19"/></name> <operator pos:line="36" pos:column="20">=<pos:position pos:line="36" pos:column="21"/></operator> <call><name pos:line="36" pos:column="22">readdir<pos:position pos:line="36" pos:column="29"/></name> <argument_list pos:line="36" pos:column="30">(<argument><expr><name pos:line="36" pos:column="31">dh<pos:position pos:line="36" pos:column="33"/></name></expr></argument>)<pos:position pos:line="36" pos:column="34"/></argument_list></call><operator pos:line="36" pos:column="34">)<pos:position pos:line="36" pos:column="35"/></operator> <operator pos:line="36" pos:column="36">!=<pos:position pos:line="36" pos:column="38"/></operator> <name pos:line="36" pos:column="39">NULL<pos:position pos:line="36" pos:column="43"/></name></expr>)<pos:position pos:line="36" pos:column="44"/></condition>
	<block pos:line="37" pos:column="9">{
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><call><name pos:line="38" pos:column="21">strncasecmp<pos:position pos:line="38" pos:column="32"/></name> <argument_list pos:line="38" pos:column="33">(<argument><expr><name><name pos:line="38" pos:column="34">de<pos:position pos:line="38" pos:column="36"/></name><operator pos:line="38" pos:column="36">-&gt;<pos:position pos:line="38" pos:column="41"/></operator><name pos:line="38" pos:column="38">d_name<pos:position pos:line="38" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><typename pos:line="38" pos:column="46">typename<pos:position pos:line="38" pos:column="54"/></typename></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="56">typename_len<pos:position pos:line="38" pos:column="68"/></name></expr></argument>)<pos:position pos:line="38" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="70"/></condition><then pos:line="38" pos:column="70">
			<block type="pseudo"><continue pos:line="39" pos:column="25">continue;<pos:position pos:line="39" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="41" pos:column="17">status<pos:position pos:line="41" pos:column="23"/></name> <operator pos:line="41" pos:column="24">=<pos:position pos:line="41" pos:column="25"/></operator> <call><name pos:line="41" pos:column="26">ssnprintf<pos:position pos:line="41" pos:column="35"/></name> <argument_list pos:line="41" pos:column="36">(<argument><expr><name pos:line="41" pos:column="37">filename<pos:position pos:line="41" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="41" pos:column="47">sizeof <argument_list pos:line="41" pos:column="54">(<argument><expr><name pos:line="41" pos:column="55">filename<pos:position pos:line="41" pos:column="63"/></name></expr></argument>)<pos:position pos:line="41" pos:column="64"/></argument_list></sizeof></expr></argument>,
				<argument><expr><literal type="string" pos:line="42" pos:column="33">"%s/%s"<pos:position pos:line="42" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="42">dir<pos:position pos:line="42" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="47">de<pos:position pos:line="42" pos:column="49"/></name><operator pos:line="42" pos:column="49">-&gt;<pos:position pos:line="42" pos:column="54"/></operator><name pos:line="42" pos:column="51">d_name<pos:position pos:line="42" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="59"/></expr_stmt>
		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><operator pos:line="43" pos:column="21">(<pos:position pos:line="43" pos:column="22"/></operator><name pos:line="43" pos:column="22">status<pos:position pos:line="43" pos:column="28"/></name> <operator pos:line="43" pos:column="29">&lt;<pos:position pos:line="43" pos:column="33"/></operator> <literal type="number" pos:line="43" pos:column="31">0<pos:position pos:line="43" pos:column="32"/></literal><operator pos:line="43" pos:column="32">)<pos:position pos:line="43" pos:column="33"/></operator> <operator pos:line="43" pos:column="34">||<pos:position pos:line="43" pos:column="36"/></operator> <operator pos:line="43" pos:column="37">(<pos:position pos:line="43" pos:column="38"/></operator><operator pos:line="43" pos:column="38">(<pos:position pos:line="43" pos:column="39"/></operator><name pos:line="43" pos:column="39">size_t<pos:position pos:line="43" pos:column="45"/></name><operator pos:line="43" pos:column="45">)<pos:position pos:line="43" pos:column="46"/></operator> <name pos:line="43" pos:column="47">status<pos:position pos:line="43" pos:column="53"/></name> <operator pos:line="43" pos:column="54">&gt;=<pos:position pos:line="43" pos:column="59"/></operator> <sizeof pos:line="43" pos:column="57">sizeof <argument_list pos:line="43" pos:column="64">(<argument><expr><name pos:line="43" pos:column="65">filename<pos:position pos:line="43" pos:column="73"/></name></expr></argument>)<pos:position pos:line="43" pos:column="74"/></argument_list></sizeof><operator pos:line="43" pos:column="74">)<pos:position pos:line="43" pos:column="75"/></operator></expr>)<pos:position pos:line="43" pos:column="76"/></condition><then pos:line="43" pos:column="76">
		<block pos:line="44" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="45" pos:column="25">WARNING<pos:position pos:line="45" pos:column="32"/></name> <argument_list pos:line="45" pos:column="33">(<argument><expr><literal type="string" pos:line="45" pos:column="34">"snprintf: truncated: `%s/%s'"<pos:position pos:line="45" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="66">dir<pos:position pos:line="45" pos:column="69"/></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="71">de<pos:position pos:line="45" pos:column="73"/></name><operator pos:line="45" pos:column="73">-&gt;<pos:position pos:line="45" pos:column="78"/></operator><name pos:line="45" pos:column="75">d_name<pos:position pos:line="45" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="83"/></expr_stmt>
			<continue pos:line="46" pos:column="25">continue;<pos:position pos:line="46" pos:column="34"/></continue>
		}<pos:position pos:line="47" pos:column="18"/></block></then></if>

		<if pos:line="49" pos:column="17">if <condition pos:line="49" pos:column="20">(<expr><call><name pos:line="49" pos:column="21">lstat<pos:position pos:line="49" pos:column="26"/></name> <argument_list pos:line="49" pos:column="27">(<argument><expr><name pos:line="49" pos:column="28">filename<pos:position pos:line="49" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="38">&amp;<pos:position pos:line="49" pos:column="43"/></operator><name pos:line="49" pos:column="39">statbuf<pos:position pos:line="49" pos:column="46"/></name></expr></argument>)<pos:position pos:line="49" pos:column="47"/></argument_list></call> <operator pos:line="49" pos:column="48">==<pos:position pos:line="49" pos:column="50"/></operator> <operator pos:line="49" pos:column="51">-<pos:position pos:line="49" pos:column="52"/></operator><literal type="number" pos:line="49" pos:column="52">1<pos:position pos:line="49" pos:column="53"/></literal></expr>)<pos:position pos:line="49" pos:column="54"/></condition><then pos:line="49" pos:column="54">
		<block pos:line="50" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="51" pos:column="25">char<pos:position pos:line="51" pos:column="29"/></name></type> <name><name pos:line="51" pos:column="30">errbuf<pos:position pos:line="51" pos:column="36"/></name><index pos:line="51" pos:column="36">[<expr><literal type="number" pos:line="51" pos:column="37">1024<pos:position pos:line="51" pos:column="41"/></literal></expr>]<pos:position pos:line="51" pos:column="42"/></index></name></decl>;<pos:position pos:line="51" pos:column="43"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="52" pos:column="25">WARNING<pos:position pos:line="52" pos:column="32"/></name> <argument_list pos:line="52" pos:column="33">(<argument><expr><literal type="string" pos:line="52" pos:column="34">"stat %s: %s"<pos:position pos:line="52" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="52" pos:column="49">filename<pos:position pos:line="52" pos:column="57"/></name></expr></argument>,
					<argument><expr><call><name pos:line="53" pos:column="41">sstrerror<pos:position pos:line="53" pos:column="50"/></name> <argument_list pos:line="53" pos:column="51">(<argument><expr><name pos:line="53" pos:column="52">errno<pos:position pos:line="53" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="59">errbuf<pos:position pos:line="53" pos:column="65"/></name></expr></argument>, <argument><expr><sizeof pos:line="53" pos:column="67">sizeof <argument_list pos:line="53" pos:column="74">(<argument><expr><name pos:line="53" pos:column="75">errbuf<pos:position pos:line="53" pos:column="81"/></name></expr></argument>)<pos:position pos:line="53" pos:column="82"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="53" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="53" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="85"/></expr_stmt>
			<continue pos:line="54" pos:column="25">continue;<pos:position pos:line="54" pos:column="34"/></continue>
		}<pos:position pos:line="55" pos:column="18"/></block></then>
		<elseif pos:line="56" pos:column="17">else <if pos:line="56" pos:column="22">if <condition pos:line="56" pos:column="25">(<expr><operator pos:line="56" pos:column="26">!<pos:position pos:line="56" pos:column="27"/></operator><call><name pos:line="56" pos:column="27">S_ISREG<pos:position pos:line="56" pos:column="34"/></name> <argument_list pos:line="56" pos:column="35">(<argument><expr><name><name pos:line="56" pos:column="36">statbuf<pos:position pos:line="56" pos:column="43"/></name><operator pos:line="56" pos:column="43">.<pos:position pos:line="56" pos:column="44"/></operator><name pos:line="56" pos:column="44">st_mode<pos:position pos:line="56" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="53"/></condition><then pos:line="56" pos:column="53">
		<block pos:line="57" pos:column="17">{
			<comment type="block" pos:line="58" pos:column="25">/* don't follow symlinks */</comment>
			<expr_stmt><expr><call><name pos:line="59" pos:column="25">WARNING<pos:position pos:line="59" pos:column="32"/></name> <argument_list pos:line="59" pos:column="33">(<argument><expr><literal type="string" pos:line="59" pos:column="34">"stat %s: not a regular file"<pos:position pos:line="59" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="65">filename<pos:position pos:line="59" pos:column="73"/></name></expr></argument>)<pos:position pos:line="59" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="75"/></expr_stmt>
			<continue pos:line="60" pos:column="25">continue;<pos:position pos:line="60" pos:column="34"/></continue>
		}<pos:position pos:line="61" pos:column="18"/></block></then></if></elseif></if>

		<if pos:line="63" pos:column="17">if <condition pos:line="63" pos:column="20">(<expr><call><name pos:line="63" pos:column="21">plugin_load_file<pos:position pos:line="63" pos:column="37"/></name> <argument_list pos:line="63" pos:column="38">(<argument><expr><name pos:line="63" pos:column="39">filename<pos:position pos:line="63" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="49">flags<pos:position pos:line="63" pos:column="54"/></name></expr></argument>)<pos:position pos:line="63" pos:column="55"/></argument_list></call> <operator pos:line="63" pos:column="56">==<pos:position pos:line="63" pos:column="58"/></operator> <literal type="number" pos:line="63" pos:column="59">0<pos:position pos:line="63" pos:column="60"/></literal></expr>)<pos:position pos:line="63" pos:column="61"/></condition><then pos:line="63" pos:column="61">
		<block pos:line="64" pos:column="17">{
			<comment type="block" pos:line="65" pos:column="25">/* success */</comment>
			<expr_stmt><expr><name pos:line="66" pos:column="25">ret<pos:position pos:line="66" pos:column="28"/></name> <operator pos:line="66" pos:column="29">=<pos:position pos:line="66" pos:column="30"/></operator> <literal type="number" pos:line="66" pos:column="31">0<pos:position pos:line="66" pos:column="32"/></literal></expr>;<pos:position pos:line="66" pos:column="33"/></expr_stmt>
			<break pos:line="67" pos:column="25">break;<pos:position pos:line="67" pos:column="31"/></break>
		}<pos:position pos:line="68" pos:column="18"/></block></then>
		<else pos:line="69" pos:column="17">else
		<block pos:line="70" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="71" pos:column="25">fprintf<pos:position pos:line="71" pos:column="32"/></name> <argument_list pos:line="71" pos:column="33">(<argument><expr><name pos:line="71" pos:column="34">stderr<pos:position pos:line="71" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="42">"Unable to load plugin %s.\n"<pos:position pos:line="71" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="73">type<pos:position pos:line="71" pos:column="77"/></name></expr></argument>)<pos:position pos:line="71" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="79"/></expr_stmt>
		}<pos:position pos:line="72" pos:column="18"/></block></else></if>
	}<pos:position pos:line="73" pos:column="10"/></block></while>

	<expr_stmt><expr><call><name pos:line="75" pos:column="9">closedir<pos:position pos:line="75" pos:column="17"/></name> <argument_list pos:line="75" pos:column="18">(<argument><expr><name pos:line="75" pos:column="19">dh<pos:position pos:line="75" pos:column="21"/></name></expr></argument>)<pos:position pos:line="75" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="23"/></expr_stmt>

	<if pos:line="77" pos:column="9">if <condition pos:line="77" pos:column="12">(<expr><name><name pos:line="77" pos:column="13">filename<pos:position pos:line="77" pos:column="21"/></name><index pos:line="77" pos:column="21">[<expr><literal type="number" pos:line="77" pos:column="22">0<pos:position pos:line="77" pos:column="23"/></literal></expr>]<pos:position pos:line="77" pos:column="24"/></index></name> <operator pos:line="77" pos:column="25">==<pos:position pos:line="77" pos:column="27"/></operator> <literal type="char" pos:line="77" pos:column="28">'\0'<pos:position pos:line="77" pos:column="32"/></literal></expr>)<pos:position pos:line="77" pos:column="33"/></condition><then pos:line="77" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="78" pos:column="17">fprintf<pos:position pos:line="78" pos:column="24"/></name> <argument_list pos:line="78" pos:column="25">(<argument><expr><name pos:line="78" pos:column="26">stderr<pos:position pos:line="78" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="34">"Could not find plugin %s.\n"<pos:position pos:line="78" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="78" pos:column="65">type<pos:position pos:line="78" pos:column="69"/></name></expr></argument>)<pos:position pos:line="78" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="71"/></expr_stmt></block></then></if>

	<return pos:line="80" pos:column="9">return <expr><operator pos:line="80" pos:column="16">(<pos:position pos:line="80" pos:column="17"/></operator><name pos:line="80" pos:column="17">ret<pos:position pos:line="80" pos:column="20"/></name><operator pos:line="80" pos:column="20">)<pos:position pos:line="80" pos:column="21"/></operator></expr>;<pos:position pos:line="80" pos:column="22"/></return>
}<pos:position pos:line="81" pos:column="2"/></block></function></unit>

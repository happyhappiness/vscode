<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1105_collectd-4.10.7.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">tail_match_add_match_simple<pos:position pos:line="1" pos:column="32"/></name> <parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">cu_tail_match_t<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">obj<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>,
    <parameter><decl><type><specifier pos:line="2" pos:column="5">const<pos:position pos:line="2" pos:column="10"/></specifier> <name pos:line="2" pos:column="11">char<pos:position pos:line="2" pos:column="15"/></name> <modifier pos:line="2" pos:column="16">*<pos:position pos:line="2" pos:column="17"/></modifier></type><name pos:line="2" pos:column="17">regex<pos:position pos:line="2" pos:column="22"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="24">const<pos:position pos:line="2" pos:column="29"/></specifier> <name pos:line="2" pos:column="30">char<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">excluderegex<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="50">int<pos:position pos:line="2" pos:column="53"/></name></type> <name pos:line="2" pos:column="54">ds_type<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>,
    <parameter><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">char<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">plugin<pos:position pos:line="3" pos:column="23"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="25">const<pos:position pos:line="3" pos:column="30"/></specifier> <name pos:line="3" pos:column="31">char<pos:position pos:line="3" pos:column="35"/></name> <modifier pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></modifier></type><name pos:line="3" pos:column="37">plugin_instance<pos:position pos:line="3" pos:column="52"/></name></decl></parameter>,
    <parameter><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">type<pos:position pos:line="4" pos:column="21"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="4" pos:column="23">const<pos:position pos:line="4" pos:column="28"/></specifier> <name pos:line="4" pos:column="29">char<pos:position pos:line="4" pos:column="33"/></name> <modifier pos:line="4" pos:column="34">*<pos:position pos:line="4" pos:column="35"/></modifier></type><name pos:line="4" pos:column="35">type_instance<pos:position pos:line="4" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="49"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">cu_match_t<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">match<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">cu_tail_match_simple_t<pos:position pos:line="7" pos:column="25"/></name> <modifier pos:line="7" pos:column="26">*<pos:position pos:line="7" pos:column="27"/></modifier></type><name pos:line="7" pos:column="27">user_data<pos:position pos:line="7" pos:column="36"/></name></decl>;<pos:position pos:line="7" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">status<pos:position pos:line="8" pos:column="13"/></name></decl>;<pos:position pos:line="8" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><name pos:line="10" pos:column="3">match<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">=<pos:position pos:line="10" pos:column="10"/></operator> <call><name pos:line="10" pos:column="11">match_create_simple<pos:position pos:line="10" pos:column="30"/></name> <argument_list pos:line="10" pos:column="31">(<argument><expr><name pos:line="10" pos:column="32">regex<pos:position pos:line="10" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="39">excluderegex<pos:position pos:line="10" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="53">ds_type<pos:position pos:line="10" pos:column="60"/></name></expr></argument>)<pos:position pos:line="10" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="62"/></expr_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">match<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">==<pos:position pos:line="11" pos:column="15"/></operator> <name pos:line="11" pos:column="16">NULL<pos:position pos:line="11" pos:column="20"/></name></expr>)<pos:position pos:line="11" pos:column="21"/></condition><then pos:line="11" pos:column="21">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">(<pos:position pos:line="12" pos:column="13"/></operator><operator pos:line="12" pos:column="13">-<pos:position pos:line="12" pos:column="14"/></operator><literal type="number" pos:line="12" pos:column="14">1<pos:position pos:line="12" pos:column="15"/></literal><operator pos:line="12" pos:column="15">)<pos:position pos:line="12" pos:column="16"/></operator></expr>;<pos:position pos:line="12" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="14" pos:column="3">user_data<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <operator pos:line="14" pos:column="15">(<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="16">cu_tail_match_simple_t<pos:position pos:line="14" pos:column="38"/></name> <operator pos:line="14" pos:column="39">*<pos:position pos:line="14" pos:column="40"/></operator><operator pos:line="14" pos:column="40">)<pos:position pos:line="14" pos:column="41"/></operator> <call><name pos:line="14" pos:column="42">malloc<pos:position pos:line="14" pos:column="48"/></name> <argument_list pos:line="14" pos:column="49">(<argument><expr><sizeof pos:line="14" pos:column="50">sizeof <argument_list pos:line="14" pos:column="57">(<argument><expr><name pos:line="14" pos:column="58">cu_tail_match_simple_t<pos:position pos:line="14" pos:column="80"/></name></expr></argument>)<pos:position pos:line="14" pos:column="81"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="83"/></expr_stmt>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name pos:line="15" pos:column="7">user_data<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">==<pos:position pos:line="15" pos:column="19"/></operator> <name pos:line="15" pos:column="20">NULL<pos:position pos:line="15" pos:column="24"/></name></expr>)<pos:position pos:line="15" pos:column="25"/></condition><then pos:line="15" pos:column="25">
  <block pos:line="16" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">match_destroy<pos:position pos:line="17" pos:column="18"/></name> <argument_list pos:line="17" pos:column="19">(<argument><expr><name pos:line="17" pos:column="20">match<pos:position pos:line="17" pos:column="25"/></name></expr></argument>)<pos:position pos:line="17" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="27"/></expr_stmt>
    <return pos:line="18" pos:column="5">return <expr><operator pos:line="18" pos:column="12">(<pos:position pos:line="18" pos:column="13"/></operator><operator pos:line="18" pos:column="13">-<pos:position pos:line="18" pos:column="14"/></operator><literal type="number" pos:line="18" pos:column="14">1<pos:position pos:line="18" pos:column="15"/></literal><operator pos:line="18" pos:column="15">)<pos:position pos:line="18" pos:column="16"/></operator></expr>;<pos:position pos:line="18" pos:column="17"/></return>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="20" pos:column="3">memset<pos:position pos:line="20" pos:column="9"/></name> <argument_list pos:line="20" pos:column="10">(<argument><expr><name pos:line="20" pos:column="11">user_data<pos:position pos:line="20" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="20" pos:column="22">'\0'<pos:position pos:line="20" pos:column="26"/></literal></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="28">sizeof <argument_list pos:line="20" pos:column="35">(<argument><expr><name pos:line="20" pos:column="36">cu_tail_match_simple_t<pos:position pos:line="20" pos:column="58"/></name></expr></argument>)<pos:position pos:line="20" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="61"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="22" pos:column="3">sstrncpy<pos:position pos:line="22" pos:column="11"/></name> <argument_list pos:line="22" pos:column="12">(<argument><expr><name><name pos:line="22" pos:column="13">user_data<pos:position pos:line="22" pos:column="22"/></name><operator pos:line="22" pos:column="22">-&gt;<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="24">plugin<pos:position pos:line="22" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="32">plugin<pos:position pos:line="22" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="40">sizeof <argument_list pos:line="22" pos:column="47">(<argument><expr><name><name pos:line="22" pos:column="48">user_data<pos:position pos:line="22" pos:column="57"/></name><operator pos:line="22" pos:column="57">-&gt;<pos:position pos:line="22" pos:column="62"/></operator><name pos:line="22" pos:column="59">plugin<pos:position pos:line="22" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="68"/></expr_stmt>
  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><name pos:line="23" pos:column="7">plugin_instance<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">!=<pos:position pos:line="23" pos:column="25"/></operator> <name pos:line="23" pos:column="26">NULL<pos:position pos:line="23" pos:column="30"/></name></expr>)<pos:position pos:line="23" pos:column="31"/></condition><then pos:line="23" pos:column="31">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="5">sstrncpy<pos:position pos:line="24" pos:column="13"/></name> <argument_list pos:line="24" pos:column="14">(<argument><expr><name><name pos:line="24" pos:column="15">user_data<pos:position pos:line="24" pos:column="24"/></name><operator pos:line="24" pos:column="24">-&gt;<pos:position pos:line="24" pos:column="29"/></operator><name pos:line="24" pos:column="26">plugin_instance<pos:position pos:line="24" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="43">plugin_instance<pos:position pos:line="24" pos:column="58"/></name></expr></argument>,
	<argument><expr><sizeof pos:line="25" pos:column="9">sizeof <argument_list pos:line="25" pos:column="16">(<argument><expr><name><name pos:line="25" pos:column="17">user_data<pos:position pos:line="25" pos:column="26"/></name><operator pos:line="25" pos:column="26">-&gt;<pos:position pos:line="25" pos:column="31"/></operator><name pos:line="25" pos:column="28">plugin_instance<pos:position pos:line="25" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="46"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="27" pos:column="3">sstrncpy<pos:position pos:line="27" pos:column="11"/></name> <argument_list pos:line="27" pos:column="12">(<argument><expr><name><name pos:line="27" pos:column="13">user_data<pos:position pos:line="27" pos:column="22"/></name><operator pos:line="27" pos:column="22">-&gt;<pos:position pos:line="27" pos:column="27"/></operator><name pos:line="27" pos:column="24">type<pos:position pos:line="27" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="30">type<pos:position pos:line="27" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="36">sizeof <argument_list pos:line="27" pos:column="43">(<argument><expr><name><name pos:line="27" pos:column="44">user_data<pos:position pos:line="27" pos:column="53"/></name><operator pos:line="27" pos:column="53">-&gt;<pos:position pos:line="27" pos:column="58"/></operator><name pos:line="27" pos:column="55">type<pos:position pos:line="27" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="62"/></expr_stmt>
  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name pos:line="28" pos:column="7">type_instance<pos:position pos:line="28" pos:column="20"/></name> <operator pos:line="28" pos:column="21">!=<pos:position pos:line="28" pos:column="23"/></operator> <name pos:line="28" pos:column="24">NULL<pos:position pos:line="28" pos:column="28"/></name></expr>)<pos:position pos:line="28" pos:column="29"/></condition><then pos:line="28" pos:column="29">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="5">sstrncpy<pos:position pos:line="29" pos:column="13"/></name> <argument_list pos:line="29" pos:column="14">(<argument><expr><name><name pos:line="29" pos:column="15">user_data<pos:position pos:line="29" pos:column="24"/></name><operator pos:line="29" pos:column="24">-&gt;<pos:position pos:line="29" pos:column="29"/></operator><name pos:line="29" pos:column="26">type_instance<pos:position pos:line="29" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="41">type_instance<pos:position pos:line="29" pos:column="54"/></name></expr></argument>,
	<argument><expr><sizeof pos:line="30" pos:column="9">sizeof <argument_list pos:line="30" pos:column="16">(<argument><expr><name><name pos:line="30" pos:column="17">user_data<pos:position pos:line="30" pos:column="26"/></name><operator pos:line="30" pos:column="26">-&gt;<pos:position pos:line="30" pos:column="31"/></operator><name pos:line="30" pos:column="28">type_instance<pos:position pos:line="30" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="30" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="44"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="32" pos:column="3">status<pos:position pos:line="32" pos:column="9"/></name> <operator pos:line="32" pos:column="10">=<pos:position pos:line="32" pos:column="11"/></operator> <call><name pos:line="32" pos:column="12">tail_match_add_match<pos:position pos:line="32" pos:column="32"/></name> <argument_list pos:line="32" pos:column="33">(<argument><expr><name pos:line="32" pos:column="34">obj<pos:position pos:line="32" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="39">match<pos:position pos:line="32" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="46">simple_submit_match<pos:position pos:line="32" pos:column="65"/></name></expr></argument>,
      <argument><expr><name pos:line="33" pos:column="7">user_data<pos:position pos:line="33" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="18">free<pos:position pos:line="33" pos:column="22"/></name></expr></argument>)<pos:position pos:line="33" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="24"/></expr_stmt>

  <if pos:line="35" pos:column="3">if <condition pos:line="35" pos:column="6">(<expr><name pos:line="35" pos:column="7">status<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">!=<pos:position pos:line="35" pos:column="16"/></operator> <literal type="number" pos:line="35" pos:column="17">0<pos:position pos:line="35" pos:column="18"/></literal></expr>)<pos:position pos:line="35" pos:column="19"/></condition><then pos:line="35" pos:column="19">
  <block pos:line="36" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">match_destroy<pos:position pos:line="37" pos:column="18"/></name> <argument_list pos:line="37" pos:column="19">(<argument><expr><name pos:line="37" pos:column="20">match<pos:position pos:line="37" pos:column="25"/></name></expr></argument>)<pos:position pos:line="37" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">sfree<pos:position pos:line="38" pos:column="10"/></name> <argument_list pos:line="38" pos:column="11">(<argument><expr><name pos:line="38" pos:column="12">user_data<pos:position pos:line="38" pos:column="21"/></name></expr></argument>)<pos:position pos:line="38" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="39" pos:column="4"/></block></then></if>

  <return pos:line="41" pos:column="3">return <expr><operator pos:line="41" pos:column="10">(<pos:position pos:line="41" pos:column="11"/></operator><name pos:line="41" pos:column="11">status<pos:position pos:line="41" pos:column="17"/></name><operator pos:line="41" pos:column="17">)<pos:position pos:line="41" pos:column="18"/></operator></expr>;<pos:position pos:line="41" pos:column="19"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_548_collectd-4.10.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">getpwnam_r<pos:position pos:line="1" pos:column="15"/></name> <parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><specifier pos:line="1" pos:column="17">const<pos:position pos:line="1" pos:column="22"/></specifier> <name pos:line="1" pos:column="23">char<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">name<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">passwd<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">pwbuf<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">char<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">buf<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="2" pos:column="17">size_t<pos:position pos:line="2" pos:column="23"/></name></type> <name pos:line="2" pos:column="24">buflen<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="32">struct<pos:position pos:line="2" pos:column="38"/></name> <name pos:line="2" pos:column="39">passwd<pos:position pos:line="2" pos:column="45"/></name></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier><modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">pwbufp<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">status<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><literal type="number" pos:line="4" pos:column="22">0<pos:position pos:line="4" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">passwd<pos:position pos:line="5" pos:column="22"/></name></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">pw<pos:position pos:line="5" pos:column="26"/></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">memset<pos:position pos:line="7" pos:column="15"/></name> <argument_list pos:line="7" pos:column="16">(<argument><expr><name pos:line="7" pos:column="17">pwbuf<pos:position pos:line="7" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="7" pos:column="24">'\0'<pos:position pos:line="7" pos:column="28"/></literal></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="30">sizeof <argument_list pos:line="7" pos:column="37">(<argument><expr pos:line="7" pos:column="38">struct <name pos:line="7" pos:column="45">passwd<pos:position pos:line="7" pos:column="51"/></name></expr></argument>)<pos:position pos:line="7" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="54"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="9" pos:column="9">pthread_mutex_lock<pos:position pos:line="9" pos:column="27"/></name> <argument_list pos:line="9" pos:column="28">(<argument><expr><operator pos:line="9" pos:column="29">&amp;<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="30">getpwnam_r_lock<pos:position pos:line="9" pos:column="45"/></name></expr></argument>)<pos:position pos:line="9" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="47"/></expr_stmt>

	<do pos:line="11" pos:column="9">do
	<block pos:line="12" pos:column="9">{
		<expr_stmt><expr><name pos:line="13" pos:column="17">pw<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">=<pos:position pos:line="13" pos:column="21"/></operator> <call><name pos:line="13" pos:column="22">getpwnam<pos:position pos:line="13" pos:column="30"/></name> <argument_list pos:line="13" pos:column="31">(<argument><expr><name pos:line="13" pos:column="32">name<pos:position pos:line="13" pos:column="36"/></name></expr></argument>)<pos:position pos:line="13" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="38"/></expr_stmt>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name pos:line="14" pos:column="21">pw<pos:position pos:line="14" pos:column="23"/></name> <operator pos:line="14" pos:column="24">==<pos:position pos:line="14" pos:column="26"/></operator> <name pos:line="14" pos:column="27">NULL<pos:position pos:line="14" pos:column="31"/></name></expr>)<pos:position pos:line="14" pos:column="32"/></condition><then pos:line="14" pos:column="32">
		<block pos:line="15" pos:column="17">{
			<expr_stmt><expr><name pos:line="16" pos:column="25">status<pos:position pos:line="16" pos:column="31"/></name> <operator pos:line="16" pos:column="32">=<pos:position pos:line="16" pos:column="33"/></operator> <ternary><condition><expr><operator pos:line="16" pos:column="34">(<pos:position pos:line="16" pos:column="35"/></operator><name pos:line="16" pos:column="35">errno<pos:position pos:line="16" pos:column="40"/></name> <operator pos:line="16" pos:column="41">!=<pos:position pos:line="16" pos:column="43"/></operator> <literal type="number" pos:line="16" pos:column="44">0<pos:position pos:line="16" pos:column="45"/></literal><operator pos:line="16" pos:column="45">)<pos:position pos:line="16" pos:column="46"/></operator></expr> ?<pos:position pos:line="16" pos:column="48"/></condition><then pos:line="16" pos:column="48"> <expr><name pos:line="16" pos:column="49">errno<pos:position pos:line="16" pos:column="54"/></name></expr> <pos:position pos:line="16" pos:column="55"/></then><else pos:line="16" pos:column="55">: <expr><name pos:line="16" pos:column="57">ENOENT<pos:position pos:line="16" pos:column="63"/></name></expr></else></ternary></expr>;<pos:position pos:line="16" pos:column="64"/></expr_stmt>
			<break pos:line="17" pos:column="25">break;<pos:position pos:line="17" pos:column="31"/></break>
		}<pos:position pos:line="18" pos:column="18"/></block></then></if>

<cpp:define pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">define<pos:position pos:line="20" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="20" pos:column="9">GETPWNAM_COPY_MEMBER<pos:position pos:line="20" pos:column="29"/></name><parameter_list pos:line="20" pos:column="29">(<parameter><type><name pos:line="20" pos:column="30">member<pos:position pos:line="20" pos:column="36"/></name></type></parameter>)<pos:position pos:line="20" pos:column="37"/></parameter_list></cpp:macro> \
		<cpp:value pos:line="21" pos:column="17">if (pw-&gt;member != NULL) \
		{ \
			int len = strlen (pw-&gt;member); \
			if (len &gt;= buflen) \
			{ \
				status = ENOMEM; \
				break; \
			} \
			sstrncpy (buf, pw-&gt;member, buflen); \
			pwbuf-&gt;member = buf; \
			buf    += (len + 1); \
			buflen -= (len + 1); \
		}<pos:position pos:line="33" pos:column="18"/></cpp:value></cpp:define>
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">GETPWNAM_COPY_MEMBER<pos:position pos:line="34" pos:column="37"/></name><argument_list pos:line="34" pos:column="37">(<argument><expr><name pos:line="34" pos:column="38">pw_name<pos:position pos:line="34" pos:column="45"/></name></expr></argument>)<pos:position pos:line="34" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="35" pos:column="17">GETPWNAM_COPY_MEMBER<pos:position pos:line="35" pos:column="37"/></name><argument_list pos:line="35" pos:column="37">(<argument><expr><name pos:line="35" pos:column="38">pw_passwd<pos:position pos:line="35" pos:column="47"/></name></expr></argument>)<pos:position pos:line="35" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">GETPWNAM_COPY_MEMBER<pos:position pos:line="36" pos:column="37"/></name><argument_list pos:line="36" pos:column="37">(<argument><expr><name pos:line="36" pos:column="38">pw_gecos<pos:position pos:line="36" pos:column="46"/></name></expr></argument>)<pos:position pos:line="36" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">GETPWNAM_COPY_MEMBER<pos:position pos:line="37" pos:column="37"/></name><argument_list pos:line="37" pos:column="37">(<argument><expr><name pos:line="37" pos:column="38">pw_dir<pos:position pos:line="37" pos:column="44"/></name></expr></argument>)<pos:position pos:line="37" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="38" pos:column="17">GETPWNAM_COPY_MEMBER<pos:position pos:line="38" pos:column="37"/></name><argument_list pos:line="38" pos:column="37">(<argument><expr><name pos:line="38" pos:column="38">pw_shell<pos:position pos:line="38" pos:column="46"/></name></expr></argument>)<pos:position pos:line="38" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="48"/></expr_stmt>

		<expr_stmt><expr><name><name pos:line="40" pos:column="17">pwbuf<pos:position pos:line="40" pos:column="22"/></name><operator pos:line="40" pos:column="22">-&gt;<pos:position pos:line="40" pos:column="27"/></operator><name pos:line="40" pos:column="24">pw_uid<pos:position pos:line="40" pos:column="30"/></name></name> <operator pos:line="40" pos:column="31">=<pos:position pos:line="40" pos:column="32"/></operator> <name><name pos:line="40" pos:column="33">pw<pos:position pos:line="40" pos:column="35"/></name><operator pos:line="40" pos:column="35">-&gt;<pos:position pos:line="40" pos:column="40"/></operator><name pos:line="40" pos:column="37">pw_uid<pos:position pos:line="40" pos:column="43"/></name></name></expr>;<pos:position pos:line="40" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="41" pos:column="17">pwbuf<pos:position pos:line="41" pos:column="22"/></name><operator pos:line="41" pos:column="22">-&gt;<pos:position pos:line="41" pos:column="27"/></operator><name pos:line="41" pos:column="24">pw_gid<pos:position pos:line="41" pos:column="30"/></name></name> <operator pos:line="41" pos:column="31">=<pos:position pos:line="41" pos:column="32"/></operator> <name><name pos:line="41" pos:column="33">pw<pos:position pos:line="41" pos:column="35"/></name><operator pos:line="41" pos:column="35">-&gt;<pos:position pos:line="41" pos:column="40"/></operator><name pos:line="41" pos:column="37">pw_gid<pos:position pos:line="41" pos:column="43"/></name></name></expr>;<pos:position pos:line="41" pos:column="44"/></expr_stmt>

		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><name pos:line="43" pos:column="21">pwbufp<pos:position pos:line="43" pos:column="27"/></name> <operator pos:line="43" pos:column="28">!=<pos:position pos:line="43" pos:column="30"/></operator> <name pos:line="43" pos:column="31">NULL<pos:position pos:line="43" pos:column="35"/></name></expr>)<pos:position pos:line="43" pos:column="36"/></condition><then pos:line="43" pos:column="36">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="44" pos:column="25">*<pos:position pos:line="44" pos:column="26"/></operator><name pos:line="44" pos:column="26">pwbufp<pos:position pos:line="44" pos:column="32"/></name> <operator pos:line="44" pos:column="33">=<pos:position pos:line="44" pos:column="34"/></operator> <name pos:line="44" pos:column="35">pwbuf<pos:position pos:line="44" pos:column="40"/></name></expr>;<pos:position pos:line="44" pos:column="41"/></expr_stmt></block></then></if>
	}<pos:position pos:line="45" pos:column="10"/></block> while <condition pos:line="45" pos:column="17">(<expr><literal type="number" pos:line="45" pos:column="18">0<pos:position pos:line="45" pos:column="19"/></literal></expr>)<pos:position pos:line="45" pos:column="20"/></condition>;<pos:position pos:line="45" pos:column="21"/></do>

	<expr_stmt><expr><call><name pos:line="47" pos:column="9">pthread_mutex_unlock<pos:position pos:line="47" pos:column="29"/></name> <argument_list pos:line="47" pos:column="30">(<argument><expr><operator pos:line="47" pos:column="31">&amp;<pos:position pos:line="47" pos:column="36"/></operator><name pos:line="47" pos:column="32">getpwnam_r_lock<pos:position pos:line="47" pos:column="47"/></name></expr></argument>)<pos:position pos:line="47" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="49"/></expr_stmt>

	<return pos:line="49" pos:column="9">return <expr><operator pos:line="49" pos:column="16">(<pos:position pos:line="49" pos:column="17"/></operator><name pos:line="49" pos:column="17">status<pos:position pos:line="49" pos:column="23"/></name><operator pos:line="49" pos:column="23">)<pos:position pos:line="49" pos:column="24"/></operator></expr>;<pos:position pos:line="49" pos:column="25"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1224_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">niptoha<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <name pos:line="1" pos:column="28">tChrony_IPAddr<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">addr<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">char<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">p_buf<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
                     <parameter><decl><type><name pos:line="2" pos:column="22">size_t<pos:position pos:line="2" pos:column="28"/></name></type> <name pos:line="2" pos:column="29">p_buf_size<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list> <block pos:line="2" pos:column="41">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">rc<pos:position pos:line="3" pos:column="9"/></name> <init pos:line="3" pos:column="10">= <expr><literal type="number" pos:line="3" pos:column="12">1<pos:position pos:line="3" pos:column="13"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">unsigned<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">long<pos:position pos:line="4" pos:column="16"/></name></type> <name pos:line="4" pos:column="17">a<pos:position pos:line="4" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="20">b<pos:position pos:line="4" pos:column="21"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="23">c<pos:position pos:line="4" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="26">d<pos:position pos:line="4" pos:column="27"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="29">ip<pos:position pos:line="4" pos:column="31"/></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>

  <switch pos:line="6" pos:column="3">switch <condition pos:line="6" pos:column="10">(<expr><call><name pos:line="6" pos:column="11">ntohs<pos:position pos:line="6" pos:column="16"/></name><argument_list pos:line="6" pos:column="16">(<argument><expr><name><name pos:line="6" pos:column="17">addr<pos:position pos:line="6" pos:column="21"/></name><operator pos:line="6" pos:column="21">-&gt;<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="23">f_family<pos:position pos:line="6" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="33"/></condition> <block pos:line="6" pos:column="34">{
  <case pos:line="7" pos:column="3">case <expr><name pos:line="7" pos:column="8">IPADDR_UNSPEC<pos:position pos:line="7" pos:column="21"/></name></expr>:<pos:position pos:line="7" pos:column="22"/></case>
    <expr_stmt><expr><name pos:line="8" pos:column="5">rc<pos:position pos:line="8" pos:column="7"/></name> <operator pos:line="8" pos:column="8">=<pos:position pos:line="8" pos:column="9"/></operator> <call><name pos:line="8" pos:column="10">snprintf<pos:position pos:line="8" pos:column="18"/></name><argument_list pos:line="8" pos:column="18">(<argument><expr><name pos:line="8" pos:column="19">p_buf<pos:position pos:line="8" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="26">p_buf_size<pos:position pos:line="8" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="38">"[UNSPEC]"<pos:position pos:line="8" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="50"/></expr_stmt>
    <break pos:line="9" pos:column="5">break;<pos:position pos:line="9" pos:column="11"/></break>
  <case pos:line="10" pos:column="3">case <expr><name pos:line="10" pos:column="8">IPADDR_INET4<pos:position pos:line="10" pos:column="20"/></name></expr>:<pos:position pos:line="10" pos:column="21"/></case>
    <expr_stmt><expr><name pos:line="11" pos:column="5">ip<pos:position pos:line="11" pos:column="7"/></name> <operator pos:line="11" pos:column="8">=<pos:position pos:line="11" pos:column="9"/></operator> <call><name pos:line="11" pos:column="10">ntohl<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><name><name pos:line="11" pos:column="16">addr<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">-&gt;<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="22">addr<pos:position pos:line="11" pos:column="26"/></name><operator pos:line="11" pos:column="26">.<pos:position pos:line="11" pos:column="27"/></operator><name pos:line="11" pos:column="27">ip4<pos:position pos:line="11" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="12" pos:column="5">a<pos:position pos:line="12" pos:column="6"/></name> <operator pos:line="12" pos:column="7">=<pos:position pos:line="12" pos:column="8"/></operator> <operator pos:line="12" pos:column="9">(<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">ip<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">&gt;&gt;<pos:position pos:line="12" pos:column="18"/></operator> <literal type="number" pos:line="12" pos:column="16">24<pos:position pos:line="12" pos:column="18"/></literal><operator pos:line="12" pos:column="18">)<pos:position pos:line="12" pos:column="19"/></operator> <operator pos:line="12" pos:column="20">&amp;<pos:position pos:line="12" pos:column="25"/></operator> <literal type="number" pos:line="12" pos:column="22">0xff<pos:position pos:line="12" pos:column="26"/></literal></expr>;<pos:position pos:line="12" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">b<pos:position pos:line="13" pos:column="6"/></name> <operator pos:line="13" pos:column="7">=<pos:position pos:line="13" pos:column="8"/></operator> <operator pos:line="13" pos:column="9">(<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">ip<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">&gt;&gt;<pos:position pos:line="13" pos:column="18"/></operator> <literal type="number" pos:line="13" pos:column="16">16<pos:position pos:line="13" pos:column="18"/></literal><operator pos:line="13" pos:column="18">)<pos:position pos:line="13" pos:column="19"/></operator> <operator pos:line="13" pos:column="20">&amp;<pos:position pos:line="13" pos:column="25"/></operator> <literal type="number" pos:line="13" pos:column="22">0xff<pos:position pos:line="13" pos:column="26"/></literal></expr>;<pos:position pos:line="13" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">c<pos:position pos:line="14" pos:column="6"/></name> <operator pos:line="14" pos:column="7">=<pos:position pos:line="14" pos:column="8"/></operator> <operator pos:line="14" pos:column="9">(<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">ip<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">&gt;&gt;<pos:position pos:line="14" pos:column="18"/></operator> <literal type="number" pos:line="14" pos:column="16">8<pos:position pos:line="14" pos:column="17"/></literal><operator pos:line="14" pos:column="17">)<pos:position pos:line="14" pos:column="18"/></operator> <operator pos:line="14" pos:column="19">&amp;<pos:position pos:line="14" pos:column="24"/></operator> <literal type="number" pos:line="14" pos:column="21">0xff<pos:position pos:line="14" pos:column="25"/></literal></expr>;<pos:position pos:line="14" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="15" pos:column="5">d<pos:position pos:line="15" pos:column="6"/></name> <operator pos:line="15" pos:column="7">=<pos:position pos:line="15" pos:column="8"/></operator> <operator pos:line="15" pos:column="9">(<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">ip<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">&gt;&gt;<pos:position pos:line="15" pos:column="18"/></operator> <literal type="number" pos:line="15" pos:column="16">0<pos:position pos:line="15" pos:column="17"/></literal><operator pos:line="15" pos:column="17">)<pos:position pos:line="15" pos:column="18"/></operator> <operator pos:line="15" pos:column="19">&amp;<pos:position pos:line="15" pos:column="24"/></operator> <literal type="number" pos:line="15" pos:column="21">0xff<pos:position pos:line="15" pos:column="25"/></literal></expr>;<pos:position pos:line="15" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="16" pos:column="5">rc<pos:position pos:line="16" pos:column="7"/></name> <operator pos:line="16" pos:column="8">=<pos:position pos:line="16" pos:column="9"/></operator> <call><name pos:line="16" pos:column="10">snprintf<pos:position pos:line="16" pos:column="18"/></name><argument_list pos:line="16" pos:column="18">(<argument><expr><name pos:line="16" pos:column="19">p_buf<pos:position pos:line="16" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="26">p_buf_size<pos:position pos:line="16" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="38">"%ld.%ld.%ld.%ld"<pos:position pos:line="16" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="57">a<pos:position pos:line="16" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="60">b<pos:position pos:line="16" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="63">c<pos:position pos:line="16" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="66">d<pos:position pos:line="16" pos:column="67"/></name></expr></argument>)<pos:position pos:line="16" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="69"/></expr_stmt>
    <break pos:line="17" pos:column="5">break;<pos:position pos:line="17" pos:column="11"/></break>
  <case pos:line="18" pos:column="3">case <expr><name pos:line="18" pos:column="8">IPADDR_INET6<pos:position pos:line="18" pos:column="20"/></name></expr>:<pos:position pos:line="18" pos:column="21"/></case> <block pos:line="18" pos:column="22">{
    <decl_stmt><decl><type><specifier pos:line="19" pos:column="5">const<pos:position pos:line="19" pos:column="10"/></specifier> <name pos:line="19" pos:column="11">char<pos:position pos:line="19" pos:column="15"/></name> <modifier pos:line="19" pos:column="16">*<pos:position pos:line="19" pos:column="17"/></modifier></type><name pos:line="19" pos:column="17">rp<pos:position pos:line="19" pos:column="19"/></name> <init pos:line="19" pos:column="20">= <expr><call><name pos:line="19" pos:column="22">inet_ntop<pos:position pos:line="19" pos:column="31"/></name><argument_list pos:line="19" pos:column="31">(<argument><expr><name pos:line="19" pos:column="32">AF_INET6<pos:position pos:line="19" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="42">addr<pos:position pos:line="19" pos:column="46"/></name><operator pos:line="19" pos:column="46">-&gt;<pos:position pos:line="19" pos:column="51"/></operator><name pos:line="19" pos:column="48">addr<pos:position pos:line="19" pos:column="52"/></name><operator pos:line="19" pos:column="52">.<pos:position pos:line="19" pos:column="53"/></operator><name pos:line="19" pos:column="53">ip6<pos:position pos:line="19" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="58">p_buf<pos:position pos:line="19" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="65">p_buf_size<pos:position pos:line="19" pos:column="75"/></name></expr></argument>)<pos:position pos:line="19" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="77"/></decl_stmt>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">rp<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">==<pos:position pos:line="20" pos:column="14"/></operator> <name pos:line="20" pos:column="15">NULL<pos:position pos:line="20" pos:column="19"/></name></expr>)<pos:position pos:line="20" pos:column="20"/></condition><then pos:line="20" pos:column="20"> <block pos:line="20" pos:column="21">{
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">ERROR<pos:position pos:line="21" pos:column="12"/></name><argument_list pos:line="21" pos:column="12">(<argument><expr><name pos:line="21" pos:column="13">PLUGIN_NAME<pos:position pos:line="21" pos:column="24"/></name> <literal type="string" pos:line="21" pos:column="25">": Error converting ipv6 address to string. Errno = %d"<pos:position pos:line="21" pos:column="80"/></literal></expr></argument>,
            <argument><expr><name pos:line="22" pos:column="13">errno<pos:position pos:line="22" pos:column="18"/></name></expr></argument>)<pos:position pos:line="22" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="20"/></expr_stmt>
      <expr_stmt><expr><name pos:line="23" pos:column="7">rc<pos:position pos:line="23" pos:column="9"/></name> <operator pos:line="23" pos:column="10">=<pos:position pos:line="23" pos:column="11"/></operator> <call><name pos:line="23" pos:column="12">snprintf<pos:position pos:line="23" pos:column="20"/></name><argument_list pos:line="23" pos:column="20">(<argument><expr><name pos:line="23" pos:column="21">p_buf<pos:position pos:line="23" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="28">p_buf_size<pos:position pos:line="23" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="40">"[UNKNOWN]"<pos:position pos:line="23" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>
    <break pos:line="25" pos:column="5">break;<pos:position pos:line="25" pos:column="11"/></break>
  }<pos:position pos:line="26" pos:column="4"/></block>
  <default pos:line="27" pos:column="3">default:<pos:position pos:line="27" pos:column="11"/></default>
    <expr_stmt><expr><name pos:line="28" pos:column="5">rc<pos:position pos:line="28" pos:column="7"/></name> <operator pos:line="28" pos:column="8">=<pos:position pos:line="28" pos:column="9"/></operator> <call><name pos:line="28" pos:column="10">snprintf<pos:position pos:line="28" pos:column="18"/></name><argument_list pos:line="28" pos:column="18">(<argument><expr><name pos:line="28" pos:column="19">p_buf<pos:position pos:line="28" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="26">p_buf_size<pos:position pos:line="28" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="38">"[UNKNOWN]"<pos:position pos:line="28" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="51"/></expr_stmt>
  }<pos:position pos:line="29" pos:column="4"/></block></switch>
  <expr_stmt><expr><call><name pos:line="30" pos:column="3">assert<pos:position pos:line="30" pos:column="9"/></name><argument_list pos:line="30" pos:column="9">(<argument><expr><name pos:line="30" pos:column="10">rc<pos:position pos:line="30" pos:column="12"/></name> <operator pos:line="30" pos:column="13">&gt;<pos:position pos:line="30" pos:column="17"/></operator> <literal type="number" pos:line="30" pos:column="15">0<pos:position pos:line="30" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="18"/></expr_stmt>
  <return pos:line="31" pos:column="3">return <expr><name pos:line="31" pos:column="10">p_buf<pos:position pos:line="31" pos:column="15"/></name></expr>;<pos:position pos:line="31" pos:column="16"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_884_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">memcached_free<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">void<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">arg<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list> <block pos:line="1" pos:column="39">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">memcached_t<pos:position pos:line="2" pos:column="14"/></name> <modifier pos:line="2" pos:column="15">*<pos:position pos:line="2" pos:column="16"/></modifier></type><name pos:line="2" pos:column="16">st<pos:position pos:line="2" pos:column="18"/></name> <init pos:line="2" pos:column="19">= <expr><name pos:line="2" pos:column="21">arg<pos:position pos:line="2" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="2" pos:column="25"/></decl_stmt>
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><name pos:line="3" pos:column="7">st<pos:position pos:line="3" pos:column="9"/></name> <operator pos:line="3" pos:column="10">==<pos:position pos:line="3" pos:column="12"/></operator> <name pos:line="3" pos:column="13">NULL<pos:position pos:line="3" pos:column="17"/></name></expr>)<pos:position pos:line="3" pos:column="18"/></condition><then pos:line="3" pos:column="18">
    <block type="pseudo"><return pos:line="4" pos:column="5">return;<pos:position pos:line="4" pos:column="12"/></return></block></then></if>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name><name pos:line="6" pos:column="7">st<pos:position pos:line="6" pos:column="9"/></name><operator pos:line="6" pos:column="9">-&gt;<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="11">fd<pos:position pos:line="6" pos:column="13"/></name></name> <operator pos:line="6" pos:column="14">&gt;=<pos:position pos:line="6" pos:column="19"/></operator> <literal type="number" pos:line="6" pos:column="17">0<pos:position pos:line="6" pos:column="18"/></literal></expr>)<pos:position pos:line="6" pos:column="19"/></condition><then pos:line="6" pos:column="19"> <block pos:line="6" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">shutdown<pos:position pos:line="7" pos:column="13"/></name><argument_list pos:line="7" pos:column="13">(<argument><expr><name><name pos:line="7" pos:column="14">st<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">-&gt;<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="18">fd<pos:position pos:line="7" pos:column="20"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="22">SHUT_RDWR<pos:position pos:line="7" pos:column="31"/></name></expr></argument>)<pos:position pos:line="7" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">close<pos:position pos:line="8" pos:column="10"/></name><argument_list pos:line="8" pos:column="10">(<argument><expr><name><name pos:line="8" pos:column="11">st<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">-&gt;<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="15">fd<pos:position pos:line="8" pos:column="17"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">st<pos:position pos:line="9" pos:column="7"/></name><operator pos:line="9" pos:column="7">-&gt;<pos:position pos:line="9" pos:column="12"/></operator><name pos:line="9" pos:column="9">fd<pos:position pos:line="9" pos:column="11"/></name></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <operator pos:line="9" pos:column="14">-<pos:position pos:line="9" pos:column="15"/></operator><literal type="number" pos:line="9" pos:column="15">1<pos:position pos:line="9" pos:column="16"/></literal></expr>;<pos:position pos:line="9" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="12" pos:column="3">sfree<pos:position pos:line="12" pos:column="8"/></name><argument_list pos:line="12" pos:column="8">(<argument><expr><name><name pos:line="12" pos:column="9">st<pos:position pos:line="12" pos:column="11"/></name><operator pos:line="12" pos:column="11">-&gt;<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="13">name<pos:position pos:line="12" pos:column="17"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">sfree<pos:position pos:line="13" pos:column="8"/></name><argument_list pos:line="13" pos:column="8">(<argument><expr><name><name pos:line="13" pos:column="9">st<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">-&gt;<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="13">host<pos:position pos:line="13" pos:column="17"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="14" pos:column="3">sfree<pos:position pos:line="14" pos:column="8"/></name><argument_list pos:line="14" pos:column="8">(<argument><expr><name><name pos:line="14" pos:column="9">st<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">-&gt;<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="13">socket<pos:position pos:line="14" pos:column="19"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="15" pos:column="3">sfree<pos:position pos:line="15" pos:column="8"/></name><argument_list pos:line="15" pos:column="8">(<argument><expr><name><name pos:line="15" pos:column="9">st<pos:position pos:line="15" pos:column="11"/></name><operator pos:line="15" pos:column="11">-&gt;<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="13">connhost<pos:position pos:line="15" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="16" pos:column="3">sfree<pos:position pos:line="16" pos:column="8"/></name><argument_list pos:line="16" pos:column="8">(<argument><expr><name><name pos:line="16" pos:column="9">st<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">-&gt;<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="13">connport<pos:position pos:line="16" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">sfree<pos:position pos:line="17" pos:column="8"/></name><argument_list pos:line="17" pos:column="8">(<argument><expr><name pos:line="17" pos:column="9">st<pos:position pos:line="17" pos:column="11"/></name></expr></argument>)<pos:position pos:line="17" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="13"/></expr_stmt>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

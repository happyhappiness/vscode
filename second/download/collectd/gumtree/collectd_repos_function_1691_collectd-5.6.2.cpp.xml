<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1691_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ut_config<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">oconfig_item_t<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">ci<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list> <block pos:line="1" pos:column="42">{ <comment type="block" pos:line="1" pos:column="44">/* {{{ */</comment>
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">status<pos:position pos:line="2" pos:column="13"/></name> <init pos:line="2" pos:column="14">= <expr><literal type="number" pos:line="2" pos:column="16">0<pos:position pos:line="2" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="2" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">old_size<pos:position pos:line="3" pos:column="15"/></name> <init pos:line="3" pos:column="16">= <expr><call><name pos:line="3" pos:column="18">c_avl_size<pos:position pos:line="3" pos:column="28"/></name><argument_list pos:line="3" pos:column="28">(<argument><expr><name pos:line="3" pos:column="29">threshold_tree<pos:position pos:line="3" pos:column="43"/></name></expr></argument>)<pos:position pos:line="3" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="45"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">threshold_tree<pos:position pos:line="5" pos:column="21"/></name> <operator pos:line="5" pos:column="22">==<pos:position pos:line="5" pos:column="24"/></operator> <name pos:line="5" pos:column="25">NULL<pos:position pos:line="5" pos:column="29"/></name></expr>)<pos:position pos:line="5" pos:column="30"/></condition><then pos:line="5" pos:column="30"> <block pos:line="5" pos:column="31">{
    <expr_stmt><expr><name pos:line="6" pos:column="5">threshold_tree<pos:position pos:line="6" pos:column="19"/></name> <operator pos:line="6" pos:column="20">=<pos:position pos:line="6" pos:column="21"/></operator> <call><name pos:line="6" pos:column="22">c_avl_create<pos:position pos:line="6" pos:column="34"/></name><argument_list pos:line="6" pos:column="34">(<argument><expr><operator pos:line="6" pos:column="35">(<pos:position pos:line="6" pos:column="36"/></operator><call><call><name pos:line="6" pos:column="36">int<pos:position pos:line="6" pos:column="39"/></name> <argument_list pos:line="6" pos:column="40">(<argument><expr><operator pos:line="6" pos:column="41">*<pos:position pos:line="6" pos:column="42"/></operator></expr></argument>)<pos:position pos:line="6" pos:column="43"/></argument_list></call><argument_list pos:line="6" pos:column="43">(<argument><expr><specifier pos:line="6" pos:column="44">const<pos:position pos:line="6" pos:column="49"/></specifier> <name pos:line="6" pos:column="50">void<pos:position pos:line="6" pos:column="54"/></name> <operator pos:line="6" pos:column="55">*<pos:position pos:line="6" pos:column="56"/></operator></expr></argument>, <argument><expr><specifier pos:line="6" pos:column="58">const<pos:position pos:line="6" pos:column="63"/></specifier> <name pos:line="6" pos:column="64">void<pos:position pos:line="6" pos:column="68"/></name> <operator pos:line="6" pos:column="69">*<pos:position pos:line="6" pos:column="70"/></operator></expr></argument>)<pos:position pos:line="6" pos:column="71"/></argument_list></call><operator pos:line="6" pos:column="71">)<pos:position pos:line="6" pos:column="72"/></operator><name pos:line="6" pos:column="72">strcmp<pos:position pos:line="6" pos:column="78"/></name></expr></argument>)<pos:position pos:line="6" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="80"/></expr_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">threshold_tree<pos:position pos:line="7" pos:column="23"/></name> <operator pos:line="7" pos:column="24">==<pos:position pos:line="7" pos:column="26"/></operator> <name pos:line="7" pos:column="27">NULL<pos:position pos:line="7" pos:column="31"/></name></expr>)<pos:position pos:line="7" pos:column="32"/></condition><then pos:line="7" pos:column="32"> <block pos:line="7" pos:column="33">{
      <expr_stmt><expr><call><name pos:line="8" pos:column="7">ERROR<pos:position pos:line="8" pos:column="12"/></name><argument_list pos:line="8" pos:column="12">(<argument><expr><literal type="string" pos:line="8" pos:column="13">"ut_config: c_avl_create failed."<pos:position pos:line="8" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="48"/></expr_stmt>
      <return pos:line="9" pos:column="7">return <expr><operator pos:line="9" pos:column="14">(<pos:position pos:line="9" pos:column="15"/></operator><operator pos:line="9" pos:column="15">-<pos:position pos:line="9" pos:column="16"/></operator><literal type="number" pos:line="9" pos:column="16">1<pos:position pos:line="9" pos:column="17"/></literal><operator pos:line="9" pos:column="17">)<pos:position pos:line="9" pos:column="18"/></operator></expr>;<pos:position pos:line="9" pos:column="19"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name pos:line="13" pos:column="3">threshold_t<pos:position pos:line="13" pos:column="14"/></name></type> <name pos:line="13" pos:column="15">th<pos:position pos:line="13" pos:column="17"/></name> <init pos:line="13" pos:column="18">= <expr><block pos:line="13" pos:column="20">{
      <expr><operator pos:line="14" pos:column="7">.<pos:position pos:line="14" pos:column="8"/></operator><name pos:line="14" pos:column="8">warning_min<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">=<pos:position pos:line="14" pos:column="21"/></operator> <name pos:line="14" pos:column="22">NAN<pos:position pos:line="14" pos:column="25"/></name></expr>,
      <expr><operator pos:line="15" pos:column="7">.<pos:position pos:line="15" pos:column="8"/></operator><name pos:line="15" pos:column="8">warning_max<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">=<pos:position pos:line="15" pos:column="21"/></operator> <name pos:line="15" pos:column="22">NAN<pos:position pos:line="15" pos:column="25"/></name></expr>,
      <expr><operator pos:line="16" pos:column="7">.<pos:position pos:line="16" pos:column="8"/></operator><name pos:line="16" pos:column="8">failure_min<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">=<pos:position pos:line="16" pos:column="21"/></operator> <name pos:line="16" pos:column="22">NAN<pos:position pos:line="16" pos:column="25"/></name></expr>,
      <expr><operator pos:line="17" pos:column="7">.<pos:position pos:line="17" pos:column="8"/></operator><name pos:line="17" pos:column="8">failure_max<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">=<pos:position pos:line="17" pos:column="21"/></operator> <name pos:line="17" pos:column="22">NAN<pos:position pos:line="17" pos:column="25"/></name></expr>,
      <expr><operator pos:line="18" pos:column="7">.<pos:position pos:line="18" pos:column="8"/></operator><name pos:line="18" pos:column="8">flags<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <name pos:line="18" pos:column="16">UT_FLAG_INTERESTING<pos:position pos:line="18" pos:column="35"/></name></expr> <comment type="block" pos:line="18" pos:column="36">/* interesting by default */</comment>
  }<pos:position pos:line="19" pos:column="4"/></block></expr></init></decl>;<pos:position pos:line="19" pos:column="5"/></decl_stmt>

  <for pos:line="21" pos:column="3">for <control pos:line="21" pos:column="7">(<init><decl><type><name pos:line="21" pos:column="8">int<pos:position pos:line="21" pos:column="11"/></name></type> <name pos:line="21" pos:column="12">i<pos:position pos:line="21" pos:column="13"/></name> <init pos:line="21" pos:column="14">= <expr><literal type="number" pos:line="21" pos:column="16">0<pos:position pos:line="21" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="21" pos:column="18"/></init> <condition><expr><name pos:line="21" pos:column="19">i<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">&lt;<pos:position pos:line="21" pos:column="25"/></operator> <name><name pos:line="21" pos:column="23">ci<pos:position pos:line="21" pos:column="25"/></name><operator pos:line="21" pos:column="25">-&gt;<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="27">children_num<pos:position pos:line="21" pos:column="39"/></name></name></expr>;<pos:position pos:line="21" pos:column="40"/></condition> <incr><expr><name pos:line="21" pos:column="41">i<pos:position pos:line="21" pos:column="42"/></name><operator pos:line="21" pos:column="42">++<pos:position pos:line="21" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="21" pos:column="45"/></control> <block pos:line="21" pos:column="46">{
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">oconfig_item_t<pos:position pos:line="22" pos:column="19"/></name> <modifier pos:line="22" pos:column="20">*<pos:position pos:line="22" pos:column="21"/></modifier></type><name pos:line="22" pos:column="21">option<pos:position pos:line="22" pos:column="27"/></name> <init pos:line="22" pos:column="28">= <expr><name><name pos:line="22" pos:column="30">ci<pos:position pos:line="22" pos:column="32"/></name><operator pos:line="22" pos:column="32">-&gt;<pos:position pos:line="22" pos:column="37"/></operator><name pos:line="22" pos:column="34">children<pos:position pos:line="22" pos:column="42"/></name></name> <operator pos:line="22" pos:column="43">+<pos:position pos:line="22" pos:column="44"/></operator> <name pos:line="22" pos:column="45">i<pos:position pos:line="22" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="22" pos:column="47"/></decl_stmt>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><call><name pos:line="24" pos:column="9">strcasecmp<pos:position pos:line="24" pos:column="19"/></name><argument_list pos:line="24" pos:column="19">(<argument><expr><literal type="string" pos:line="24" pos:column="20">"Type"<pos:position pos:line="24" pos:column="26"/></literal></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="28">option<pos:position pos:line="24" pos:column="34"/></name><operator pos:line="24" pos:column="34">-&gt;<pos:position pos:line="24" pos:column="39"/></operator><name pos:line="24" pos:column="36">key<pos:position pos:line="24" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="40"/></argument_list></call> <operator pos:line="24" pos:column="41">==<pos:position pos:line="24" pos:column="43"/></operator> <literal type="number" pos:line="24" pos:column="44">0<pos:position pos:line="24" pos:column="45"/></literal></expr>)<pos:position pos:line="24" pos:column="46"/></condition><then pos:line="24" pos:column="46">
      <block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="7">status<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">=<pos:position pos:line="25" pos:column="15"/></operator> <call><name pos:line="25" pos:column="16">ut_config_type<pos:position pos:line="25" pos:column="30"/></name><argument_list pos:line="25" pos:column="30">(<argument><expr><operator pos:line="25" pos:column="31">&amp;<pos:position pos:line="25" pos:column="36"/></operator><name pos:line="25" pos:column="32">th<pos:position pos:line="25" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="36">option<pos:position pos:line="25" pos:column="42"/></name></expr></argument>)<pos:position pos:line="25" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="44"/></expr_stmt></block></then>
    <elseif pos:line="26" pos:column="5">else <if pos:line="26" pos:column="10">if <condition pos:line="26" pos:column="13">(<expr><call><name pos:line="26" pos:column="14">strcasecmp<pos:position pos:line="26" pos:column="24"/></name><argument_list pos:line="26" pos:column="24">(<argument><expr><literal type="string" pos:line="26" pos:column="25">"Plugin"<pos:position pos:line="26" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="35">option<pos:position pos:line="26" pos:column="41"/></name><operator pos:line="26" pos:column="41">-&gt;<pos:position pos:line="26" pos:column="46"/></operator><name pos:line="26" pos:column="43">key<pos:position pos:line="26" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="47"/></argument_list></call> <operator pos:line="26" pos:column="48">==<pos:position pos:line="26" pos:column="50"/></operator> <literal type="number" pos:line="26" pos:column="51">0<pos:position pos:line="26" pos:column="52"/></literal></expr>)<pos:position pos:line="26" pos:column="53"/></condition><then pos:line="26" pos:column="53">
      <block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="7">status<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <call><name pos:line="27" pos:column="16">ut_config_plugin<pos:position pos:line="27" pos:column="32"/></name><argument_list pos:line="27" pos:column="32">(<argument><expr><operator pos:line="27" pos:column="33">&amp;<pos:position pos:line="27" pos:column="38"/></operator><name pos:line="27" pos:column="34">th<pos:position pos:line="27" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="38">option<pos:position pos:line="27" pos:column="44"/></name></expr></argument>)<pos:position pos:line="27" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="46"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="28" pos:column="5">else <if pos:line="28" pos:column="10">if <condition pos:line="28" pos:column="13">(<expr><call><name pos:line="28" pos:column="14">strcasecmp<pos:position pos:line="28" pos:column="24"/></name><argument_list pos:line="28" pos:column="24">(<argument><expr><literal type="string" pos:line="28" pos:column="25">"Host"<pos:position pos:line="28" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="33">option<pos:position pos:line="28" pos:column="39"/></name><operator pos:line="28" pos:column="39">-&gt;<pos:position pos:line="28" pos:column="44"/></operator><name pos:line="28" pos:column="41">key<pos:position pos:line="28" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="45"/></argument_list></call> <operator pos:line="28" pos:column="46">==<pos:position pos:line="28" pos:column="48"/></operator> <literal type="number" pos:line="28" pos:column="49">0<pos:position pos:line="28" pos:column="50"/></literal></expr>)<pos:position pos:line="28" pos:column="51"/></condition><then pos:line="28" pos:column="51">
      <block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="7">status<pos:position pos:line="29" pos:column="13"/></name> <operator pos:line="29" pos:column="14">=<pos:position pos:line="29" pos:column="15"/></operator> <call><name pos:line="29" pos:column="16">ut_config_host<pos:position pos:line="29" pos:column="30"/></name><argument_list pos:line="29" pos:column="30">(<argument><expr><operator pos:line="29" pos:column="31">&amp;<pos:position pos:line="29" pos:column="36"/></operator><name pos:line="29" pos:column="32">th<pos:position pos:line="29" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="36">option<pos:position pos:line="29" pos:column="42"/></name></expr></argument>)<pos:position pos:line="29" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="44"/></expr_stmt></block></then></if></elseif>
    <else pos:line="30" pos:column="5">else <block pos:line="30" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="31" pos:column="7">WARNING<pos:position pos:line="31" pos:column="14"/></name><argument_list pos:line="31" pos:column="14">(<argument><expr><literal type="string" pos:line="31" pos:column="15">"threshold values: Option `%s' not allowed here."<pos:position pos:line="31" pos:column="64"/></literal></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="66">option<pos:position pos:line="31" pos:column="72"/></name><operator pos:line="31" pos:column="72">-&gt;<pos:position pos:line="31" pos:column="77"/></operator><name pos:line="31" pos:column="74">key<pos:position pos:line="31" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="79"/></expr_stmt>
      <expr_stmt><expr><name pos:line="32" pos:column="7">status<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">=<pos:position pos:line="32" pos:column="15"/></operator> <operator pos:line="32" pos:column="16">-<pos:position pos:line="32" pos:column="17"/></operator><literal type="number" pos:line="32" pos:column="17">1<pos:position pos:line="32" pos:column="18"/></literal></expr>;<pos:position pos:line="32" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></else></if>

    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name pos:line="35" pos:column="9">status<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">!=<pos:position pos:line="35" pos:column="18"/></operator> <literal type="number" pos:line="35" pos:column="19">0<pos:position pos:line="35" pos:column="20"/></literal></expr>)<pos:position pos:line="35" pos:column="21"/></condition><then pos:line="35" pos:column="21">
      <block type="pseudo"><break pos:line="36" pos:column="7">break;<pos:position pos:line="36" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="37" pos:column="4"/></block></for>

  <comment type="block" pos:line="39" pos:column="3">/* register callbacks if this is the first time we see a valid config */</comment>
  <if pos:line="40" pos:column="3">if <condition pos:line="40" pos:column="6">(<expr><operator pos:line="40" pos:column="7">(<pos:position pos:line="40" pos:column="8"/></operator><name pos:line="40" pos:column="8">old_size<pos:position pos:line="40" pos:column="16"/></name> <operator pos:line="40" pos:column="17">==<pos:position pos:line="40" pos:column="19"/></operator> <literal type="number" pos:line="40" pos:column="20">0<pos:position pos:line="40" pos:column="21"/></literal><operator pos:line="40" pos:column="21">)<pos:position pos:line="40" pos:column="22"/></operator> <operator pos:line="40" pos:column="23">&amp;&amp;<pos:position pos:line="40" pos:column="33"/></operator> <operator pos:line="40" pos:column="26">(<pos:position pos:line="40" pos:column="27"/></operator><call><name pos:line="40" pos:column="27">c_avl_size<pos:position pos:line="40" pos:column="37"/></name><argument_list pos:line="40" pos:column="37">(<argument><expr><name pos:line="40" pos:column="38">threshold_tree<pos:position pos:line="40" pos:column="52"/></name></expr></argument>)<pos:position pos:line="40" pos:column="53"/></argument_list></call> <operator pos:line="40" pos:column="54">&gt;<pos:position pos:line="40" pos:column="58"/></operator> <literal type="number" pos:line="40" pos:column="56">0<pos:position pos:line="40" pos:column="57"/></literal><operator pos:line="40" pos:column="57">)<pos:position pos:line="40" pos:column="58"/></operator></expr>)<pos:position pos:line="40" pos:column="59"/></condition><then pos:line="40" pos:column="59"> <block pos:line="40" pos:column="60">{
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">plugin_register_missing<pos:position pos:line="41" pos:column="28"/></name><argument_list pos:line="41" pos:column="28">(<argument><expr><literal type="string" pos:line="41" pos:column="29">"threshold"<pos:position pos:line="41" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="42">ut_missing<pos:position pos:line="41" pos:column="52"/></name></expr></argument>,
                            <comment type="block" pos:line="42" pos:column="29">/* user data = */</comment> <argument><expr><name pos:line="42" pos:column="47">NULL<pos:position pos:line="42" pos:column="51"/></name></expr></argument>)<pos:position pos:line="42" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">plugin_register_write<pos:position pos:line="43" pos:column="26"/></name><argument_list pos:line="43" pos:column="26">(<argument><expr><literal type="string" pos:line="43" pos:column="27">"threshold"<pos:position pos:line="43" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="40">ut_check_threshold<pos:position pos:line="43" pos:column="58"/></name></expr></argument>,
                          <comment type="block" pos:line="44" pos:column="27">/* user data = */</comment> <argument><expr><name pos:line="44" pos:column="45">NULL<pos:position pos:line="44" pos:column="49"/></name></expr></argument>)<pos:position pos:line="44" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="51"/></expr_stmt>
  }<pos:position pos:line="45" pos:column="4"/></block></then></if>

  <return pos:line="47" pos:column="3">return <expr><operator pos:line="47" pos:column="10">(<pos:position pos:line="47" pos:column="11"/></operator><name pos:line="47" pos:column="11">status<pos:position pos:line="47" pos:column="17"/></name><operator pos:line="47" pos:column="17">)<pos:position pos:line="47" pos:column="18"/></operator></expr>;<pos:position pos:line="47" pos:column="19"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

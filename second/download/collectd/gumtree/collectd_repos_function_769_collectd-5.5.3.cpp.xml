<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_769_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">email_config<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">key<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">value<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><literal type="number" pos:line="3" pos:column="13">0<pos:position pos:line="3" pos:column="14"/></literal> <operator pos:line="3" pos:column="15">==<pos:position pos:line="3" pos:column="17"/></operator> <call><name pos:line="3" pos:column="18">strcasecmp<pos:position pos:line="3" pos:column="28"/></name> <argument_list pos:line="3" pos:column="29">(<argument><expr><name pos:line="3" pos:column="30">key<pos:position pos:line="3" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="35">"SocketFile"<pos:position pos:line="3" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="49"/></condition><then pos:line="3" pos:column="49"> <block pos:line="3" pos:column="50">{
		<if pos:line="4" pos:column="17">if <condition pos:line="4" pos:column="20">(<expr><name pos:line="4" pos:column="21">NULL<pos:position pos:line="4" pos:column="25"/></name> <operator pos:line="4" pos:column="26">!=<pos:position pos:line="4" pos:column="28"/></operator> <name pos:line="4" pos:column="29">sock_file<pos:position pos:line="4" pos:column="38"/></name></expr>)<pos:position pos:line="4" pos:column="39"/></condition><then pos:line="4" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="5" pos:column="25">free<pos:position pos:line="5" pos:column="29"/></name> <argument_list pos:line="5" pos:column="30">(<argument><expr><name pos:line="5" pos:column="31">sock_file<pos:position pos:line="5" pos:column="40"/></name></expr></argument>)<pos:position pos:line="5" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="42"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="6" pos:column="17">sock_file<pos:position pos:line="6" pos:column="26"/></name> <operator pos:line="6" pos:column="27">=<pos:position pos:line="6" pos:column="28"/></operator> <call><name pos:line="6" pos:column="29">sstrdup<pos:position pos:line="6" pos:column="36"/></name> <argument_list pos:line="6" pos:column="37">(<argument><expr><name pos:line="6" pos:column="38">value<pos:position pos:line="6" pos:column="43"/></name></expr></argument>)<pos:position pos:line="6" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="7" pos:column="10"/></block></then>
	<elseif pos:line="8" pos:column="9">else <if pos:line="8" pos:column="14">if <condition pos:line="8" pos:column="17">(<expr><literal type="number" pos:line="8" pos:column="18">0<pos:position pos:line="8" pos:column="19"/></literal> <operator pos:line="8" pos:column="20">==<pos:position pos:line="8" pos:column="22"/></operator> <call><name pos:line="8" pos:column="23">strcasecmp<pos:position pos:line="8" pos:column="33"/></name> <argument_list pos:line="8" pos:column="34">(<argument><expr><name pos:line="8" pos:column="35">key<pos:position pos:line="8" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="40">"SocketGroup"<pos:position pos:line="8" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="55"/></condition><then pos:line="8" pos:column="55"> <block pos:line="8" pos:column="56">{
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><name pos:line="9" pos:column="21">NULL<pos:position pos:line="9" pos:column="25"/></name> <operator pos:line="9" pos:column="26">!=<pos:position pos:line="9" pos:column="28"/></operator> <name pos:line="9" pos:column="29">sock_group<pos:position pos:line="9" pos:column="39"/></name></expr>)<pos:position pos:line="9" pos:column="40"/></condition><then pos:line="9" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="25">free<pos:position pos:line="10" pos:column="29"/></name> <argument_list pos:line="10" pos:column="30">(<argument><expr><name pos:line="10" pos:column="31">sock_group<pos:position pos:line="10" pos:column="41"/></name></expr></argument>)<pos:position pos:line="10" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="43"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="11" pos:column="17">sock_group<pos:position pos:line="11" pos:column="27"/></name> <operator pos:line="11" pos:column="28">=<pos:position pos:line="11" pos:column="29"/></operator> <call><name pos:line="11" pos:column="30">sstrdup<pos:position pos:line="11" pos:column="37"/></name> <argument_list pos:line="11" pos:column="38">(<argument><expr><name pos:line="11" pos:column="39">value<pos:position pos:line="11" pos:column="44"/></name></expr></argument>)<pos:position pos:line="11" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="46"/></expr_stmt>
	}<pos:position pos:line="12" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="13" pos:column="9">else <if pos:line="13" pos:column="14">if <condition pos:line="13" pos:column="17">(<expr><literal type="number" pos:line="13" pos:column="18">0<pos:position pos:line="13" pos:column="19"/></literal> <operator pos:line="13" pos:column="20">==<pos:position pos:line="13" pos:column="22"/></operator> <call><name pos:line="13" pos:column="23">strcasecmp<pos:position pos:line="13" pos:column="33"/></name> <argument_list pos:line="13" pos:column="34">(<argument><expr><name pos:line="13" pos:column="35">key<pos:position pos:line="13" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="40">"SocketPerms"<pos:position pos:line="13" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="55"/></condition><then pos:line="13" pos:column="55"> <block pos:line="13" pos:column="56">{
		<comment type="block" pos:line="14" pos:column="17">/* the user is responsible for providing reasonable values */</comment>
		<expr_stmt><expr><name pos:line="15" pos:column="17">sock_perms<pos:position pos:line="15" pos:column="27"/></name> <operator pos:line="15" pos:column="28">=<pos:position pos:line="15" pos:column="29"/></operator> <operator pos:line="15" pos:column="30">(<pos:position pos:line="15" pos:column="31"/></operator><name pos:line="15" pos:column="31">int<pos:position pos:line="15" pos:column="34"/></name><operator pos:line="15" pos:column="34">)<pos:position pos:line="15" pos:column="35"/></operator><call><name pos:line="15" pos:column="35">strtol<pos:position pos:line="15" pos:column="41"/></name> <argument_list pos:line="15" pos:column="42">(<argument><expr><name pos:line="15" pos:column="43">value<pos:position pos:line="15" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="50">NULL<pos:position pos:line="15" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="56">8<pos:position pos:line="15" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="59"/></expr_stmt>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="17" pos:column="9">else <if pos:line="17" pos:column="14">if <condition pos:line="17" pos:column="17">(<expr><literal type="number" pos:line="17" pos:column="18">0<pos:position pos:line="17" pos:column="19"/></literal> <operator pos:line="17" pos:column="20">==<pos:position pos:line="17" pos:column="22"/></operator> <call><name pos:line="17" pos:column="23">strcasecmp<pos:position pos:line="17" pos:column="33"/></name> <argument_list pos:line="17" pos:column="34">(<argument><expr><name pos:line="17" pos:column="35">key<pos:position pos:line="17" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="40">"MaxConns"<pos:position pos:line="17" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="52"/></condition><then pos:line="17" pos:column="52"> <block pos:line="17" pos:column="53">{
		<decl_stmt><decl><type><name pos:line="18" pos:column="17">long<pos:position pos:line="18" pos:column="21"/></name> <name pos:line="18" pos:column="22">int<pos:position pos:line="18" pos:column="25"/></name></type> <name pos:line="18" pos:column="26">tmp<pos:position pos:line="18" pos:column="29"/></name> <init pos:line="18" pos:column="30">= <expr><call><name pos:line="18" pos:column="32">strtol<pos:position pos:line="18" pos:column="38"/></name> <argument_list pos:line="18" pos:column="39">(<argument><expr><name pos:line="18" pos:column="40">value<pos:position pos:line="18" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="47">NULL<pos:position pos:line="18" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="53">0<pos:position pos:line="18" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="56"/></decl_stmt>

		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><name pos:line="20" pos:column="21">tmp<pos:position pos:line="20" pos:column="24"/></name> <operator pos:line="20" pos:column="25">&lt;<pos:position pos:line="20" pos:column="29"/></operator> <literal type="number" pos:line="20" pos:column="27">1<pos:position pos:line="20" pos:column="28"/></literal></expr>)<pos:position pos:line="20" pos:column="29"/></condition><then pos:line="20" pos:column="29"> <block pos:line="20" pos:column="30">{
			<expr_stmt><expr><call><name pos:line="21" pos:column="25">fprintf<pos:position pos:line="21" pos:column="32"/></name> <argument_list pos:line="21" pos:column="33">(<argument><expr><name pos:line="21" pos:column="34">stderr<pos:position pos:line="21" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="42">"email plugin: `MaxConns' was set to invalid "<pos:position pos:line="21" pos:column="88"/></literal>
					<literal type="string" pos:line="22" pos:column="41">"value %li, will use default %i.\n"<pos:position pos:line="22" pos:column="76"/></literal></expr></argument>,
					<argument><expr><name pos:line="23" pos:column="41">tmp<pos:position pos:line="23" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="46">MAX_CONNS<pos:position pos:line="23" pos:column="55"/></name></expr></argument>)<pos:position pos:line="23" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="57"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="24" pos:column="25">ERROR<pos:position pos:line="24" pos:column="30"/></name> <argument_list pos:line="24" pos:column="31">(<argument><expr><literal type="string" pos:line="24" pos:column="32">"email plugin: `MaxConns' was set to invalid "<pos:position pos:line="24" pos:column="78"/></literal>
					<literal type="string" pos:line="25" pos:column="41">"value %li, will use default %i.\n"<pos:position pos:line="25" pos:column="76"/></literal></expr></argument>,
					<argument><expr><name pos:line="26" pos:column="41">tmp<pos:position pos:line="26" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="46">MAX_CONNS<pos:position pos:line="26" pos:column="55"/></name></expr></argument>)<pos:position pos:line="26" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="57"/></expr_stmt>
			<expr_stmt><expr><name pos:line="27" pos:column="25">max_conns<pos:position pos:line="27" pos:column="34"/></name> <operator pos:line="27" pos:column="35">=<pos:position pos:line="27" pos:column="36"/></operator> <name pos:line="27" pos:column="37">MAX_CONNS<pos:position pos:line="27" pos:column="46"/></name></expr>;<pos:position pos:line="27" pos:column="47"/></expr_stmt>
		}<pos:position pos:line="28" pos:column="18"/></block></then>
		<elseif pos:line="29" pos:column="17">else <if pos:line="29" pos:column="22">if <condition pos:line="29" pos:column="25">(<expr><name pos:line="29" pos:column="26">tmp<pos:position pos:line="29" pos:column="29"/></name> <operator pos:line="29" pos:column="30">&gt;<pos:position pos:line="29" pos:column="34"/></operator> <name pos:line="29" pos:column="32">MAX_CONNS_LIMIT<pos:position pos:line="29" pos:column="47"/></name></expr>)<pos:position pos:line="29" pos:column="48"/></condition><then pos:line="29" pos:column="48"> <block pos:line="29" pos:column="49">{
			<expr_stmt><expr><call><name pos:line="30" pos:column="25">fprintf<pos:position pos:line="30" pos:column="32"/></name> <argument_list pos:line="30" pos:column="33">(<argument><expr><name pos:line="30" pos:column="34">stderr<pos:position pos:line="30" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="42">"email plugin: `MaxConns' was set to invalid "<pos:position pos:line="30" pos:column="88"/></literal>
					<literal type="string" pos:line="31" pos:column="41">"value %li, will use hardcoded limit %i.\n"<pos:position pos:line="31" pos:column="84"/></literal></expr></argument>,
					<argument><expr><name pos:line="32" pos:column="41">tmp<pos:position pos:line="32" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="46">MAX_CONNS_LIMIT<pos:position pos:line="32" pos:column="61"/></name></expr></argument>)<pos:position pos:line="32" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="63"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="33" pos:column="25">ERROR<pos:position pos:line="33" pos:column="30"/></name> <argument_list pos:line="33" pos:column="31">(<argument><expr><literal type="string" pos:line="33" pos:column="32">"email plugin: `MaxConns' was set to invalid "<pos:position pos:line="33" pos:column="78"/></literal>
					<literal type="string" pos:line="34" pos:column="41">"value %li, will use hardcoded limit %i.\n"<pos:position pos:line="34" pos:column="84"/></literal></expr></argument>,
					<argument><expr><name pos:line="35" pos:column="41">tmp<pos:position pos:line="35" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="46">MAX_CONNS_LIMIT<pos:position pos:line="35" pos:column="61"/></name></expr></argument>)<pos:position pos:line="35" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="63"/></expr_stmt>
			<expr_stmt><expr><name pos:line="36" pos:column="25">max_conns<pos:position pos:line="36" pos:column="34"/></name> <operator pos:line="36" pos:column="35">=<pos:position pos:line="36" pos:column="36"/></operator> <name pos:line="36" pos:column="37">MAX_CONNS_LIMIT<pos:position pos:line="36" pos:column="52"/></name></expr>;<pos:position pos:line="36" pos:column="53"/></expr_stmt>
		}<pos:position pos:line="37" pos:column="18"/></block></then></if></elseif>
		<else pos:line="38" pos:column="17">else <block pos:line="38" pos:column="22">{
			<expr_stmt><expr><name pos:line="39" pos:column="25">max_conns<pos:position pos:line="39" pos:column="34"/></name> <operator pos:line="39" pos:column="35">=<pos:position pos:line="39" pos:column="36"/></operator> <operator pos:line="39" pos:column="37">(<pos:position pos:line="39" pos:column="38"/></operator><name pos:line="39" pos:column="38">int<pos:position pos:line="39" pos:column="41"/></name><operator pos:line="39" pos:column="41">)<pos:position pos:line="39" pos:column="42"/></operator><name pos:line="39" pos:column="42">tmp<pos:position pos:line="39" pos:column="45"/></name></expr>;<pos:position pos:line="39" pos:column="46"/></expr_stmt>
		}<pos:position pos:line="40" pos:column="18"/></block></else></if>
	}<pos:position pos:line="41" pos:column="10"/></block></then></if></elseif>
	<else pos:line="42" pos:column="9">else <block pos:line="42" pos:column="14">{
		<return pos:line="43" pos:column="17">return <expr><operator pos:line="43" pos:column="24">-<pos:position pos:line="43" pos:column="25"/></operator><literal type="number" pos:line="43" pos:column="25">1<pos:position pos:line="43" pos:column="26"/></literal></expr>;<pos:position pos:line="43" pos:column="27"/></return>
	}<pos:position pos:line="44" pos:column="10"/></block></else></if>
	<return pos:line="45" pos:column="9">return <expr><literal type="number" pos:line="45" pos:column="16">0<pos:position pos:line="45" pos:column="17"/></literal></expr>;<pos:position pos:line="45" pos:column="18"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

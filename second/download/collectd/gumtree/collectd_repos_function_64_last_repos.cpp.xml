<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_64_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">get_block_info<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">lv_block_info<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">binfo<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="2" pos:column="27">virTypedParameterPtr<pos:position pos:line="2" pos:column="47"/></name></type> <name pos:line="2" pos:column="48">param<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="55">int<pos:position pos:line="2" pos:column="58"/></name></type> <name pos:line="2" pos:column="59">nparams<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="67"/></parameter_list> <block pos:line="2" pos:column="68">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><name pos:line="3" pos:column="7">binfo<pos:position pos:line="3" pos:column="12"/></name> <operator pos:line="3" pos:column="13">==<pos:position pos:line="3" pos:column="15"/></operator> <name pos:line="3" pos:column="16">NULL<pos:position pos:line="3" pos:column="20"/></name> <operator pos:line="3" pos:column="21">||<pos:position pos:line="3" pos:column="23"/></operator> <name pos:line="3" pos:column="24">param<pos:position pos:line="3" pos:column="29"/></name> <operator pos:line="3" pos:column="30">==<pos:position pos:line="3" pos:column="32"/></operator> <name pos:line="3" pos:column="33">NULL<pos:position pos:line="3" pos:column="37"/></name></expr>)<pos:position pos:line="3" pos:column="38"/></condition><then pos:line="3" pos:column="38">
    <block type="pseudo"><return pos:line="4" pos:column="5">return <expr><operator pos:line="4" pos:column="12">-<pos:position pos:line="4" pos:column="13"/></operator><literal type="number" pos:line="4" pos:column="13">1<pos:position pos:line="4" pos:column="14"/></literal></expr>;<pos:position pos:line="4" pos:column="15"/></return></block></then></if>

  <for pos:line="6" pos:column="3">for <control pos:line="6" pos:column="7">(<init><decl><type><name pos:line="6" pos:column="8">int<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">i<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <expr><literal type="number" pos:line="6" pos:column="16">0<pos:position pos:line="6" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="18"/></init> <condition><expr><name pos:line="6" pos:column="19">i<pos:position pos:line="6" pos:column="20"/></name> <operator pos:line="6" pos:column="21">&lt;<pos:position pos:line="6" pos:column="25"/></operator> <name pos:line="6" pos:column="23">nparams<pos:position pos:line="6" pos:column="30"/></name></expr>;<pos:position pos:line="6" pos:column="31"/></condition> <incr><expr><operator pos:line="6" pos:column="32">++<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="34">i<pos:position pos:line="6" pos:column="35"/></name></expr></incr>)<pos:position pos:line="6" pos:column="36"/></control> <block pos:line="6" pos:column="37">{
    <comment type="block" pos:line="7" pos:column="5">/* ignore type. Everything must be LLONG anyway. */</comment>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">GET_BLOCK_INFO_VALUE<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><literal type="string" pos:line="8" pos:column="26">"rd_operations"<pos:position pos:line="8" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="43">bi<pos:position pos:line="8" pos:column="45"/></name><operator pos:line="8" pos:column="45">.<pos:position pos:line="8" pos:column="46"/></operator><name pos:line="8" pos:column="46">rd_req<pos:position pos:line="8" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">GET_BLOCK_INFO_VALUE<pos:position pos:line="9" pos:column="25"/></name><argument_list pos:line="9" pos:column="25">(<argument><expr><literal type="string" pos:line="9" pos:column="26">"wr_operations"<pos:position pos:line="9" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="43">bi<pos:position pos:line="9" pos:column="45"/></name><operator pos:line="9" pos:column="45">.<pos:position pos:line="9" pos:column="46"/></operator><name pos:line="9" pos:column="46">wr_req<pos:position pos:line="9" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">GET_BLOCK_INFO_VALUE<pos:position pos:line="10" pos:column="25"/></name><argument_list pos:line="10" pos:column="25">(<argument><expr><literal type="string" pos:line="10" pos:column="26">"rd_bytes"<pos:position pos:line="10" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="38">bi<pos:position pos:line="10" pos:column="40"/></name><operator pos:line="10" pos:column="40">.<pos:position pos:line="10" pos:column="41"/></operator><name pos:line="10" pos:column="41">rd_bytes<pos:position pos:line="10" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">GET_BLOCK_INFO_VALUE<pos:position pos:line="11" pos:column="25"/></name><argument_list pos:line="11" pos:column="25">(<argument><expr><literal type="string" pos:line="11" pos:column="26">"wr_bytes"<pos:position pos:line="11" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="38">bi<pos:position pos:line="11" pos:column="40"/></name><operator pos:line="11" pos:column="40">.<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="41">wr_bytes<pos:position pos:line="11" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">GET_BLOCK_INFO_VALUE<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">(<argument><expr><literal type="string" pos:line="12" pos:column="26">"rd_total_times"<pos:position pos:line="12" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="44">rd_total_times<pos:position pos:line="12" pos:column="58"/></name></expr></argument>)<pos:position pos:line="12" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">GET_BLOCK_INFO_VALUE<pos:position pos:line="13" pos:column="25"/></name><argument_list pos:line="13" pos:column="25">(<argument><expr><literal type="string" pos:line="13" pos:column="26">"wr_total_times"<pos:position pos:line="13" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="44">wr_total_times<pos:position pos:line="13" pos:column="58"/></name></expr></argument>)<pos:position pos:line="13" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">GET_BLOCK_INFO_VALUE<pos:position pos:line="14" pos:column="25"/></name><argument_list pos:line="14" pos:column="25">(<argument><expr><literal type="string" pos:line="14" pos:column="26">"flush_operations"<pos:position pos:line="14" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="46">fl_req<pos:position pos:line="14" pos:column="52"/></name></expr></argument>)<pos:position pos:line="14" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">GET_BLOCK_INFO_VALUE<pos:position pos:line="15" pos:column="25"/></name><argument_list pos:line="15" pos:column="25">(<argument><expr><literal type="string" pos:line="15" pos:column="26">"flush_total_times"<pos:position pos:line="15" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="47">fl_total_times<pos:position pos:line="15" pos:column="61"/></name></expr></argument>)<pos:position pos:line="15" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="63"/></expr_stmt>
  }<pos:position pos:line="16" pos:column="4"/></block></for>

  <return pos:line="18" pos:column="3">return <expr><literal type="number" pos:line="18" pos:column="10">0<pos:position pos:line="18" pos:column="11"/></literal></expr>;<pos:position pos:line="18" pos:column="12"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1174_collectd-4.7.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">sensors_load_conf<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">void<pos:position pos:line="1" pos:column="35"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">FILE<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">fh<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">featurelist_t<pos:position pos:line="4" pos:column="22"/></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">last_feature<pos:position pos:line="4" pos:column="36"/></name> <init pos:line="4" pos:column="37">= <expr><name pos:line="4" pos:column="39">NULL<pos:position pos:line="4" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="44"/></decl_stmt>
	
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">sensors_chip_name<pos:position pos:line="6" pos:column="32"/></name> <modifier pos:line="6" pos:column="33">*<pos:position pos:line="6" pos:column="34"/></modifier></type><name pos:line="6" pos:column="34">chip<pos:position pos:line="6" pos:column="38"/></name></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">chip_num<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">stat<pos:position pos:line="9" pos:column="20"/></name></name></type> <name pos:line="9" pos:column="21">statbuf<pos:position pos:line="9" pos:column="28"/></name></decl>;<pos:position pos:line="9" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">status<pos:position pos:line="10" pos:column="19"/></name></decl>;<pos:position pos:line="10" pos:column="20"/></decl_stmt>
	
	<expr_stmt><expr><name pos:line="12" pos:column="9">status<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <call><name pos:line="12" pos:column="18">stat<pos:position pos:line="12" pos:column="22"/></name> <argument_list pos:line="12" pos:column="23">(<argument><expr><name pos:line="12" pos:column="24">conffile<pos:position pos:line="12" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="34">&amp;<pos:position pos:line="12" pos:column="39"/></operator><name pos:line="12" pos:column="35">statbuf<pos:position pos:line="12" pos:column="42"/></name></expr></argument>)<pos:position pos:line="12" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="44"/></expr_stmt>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">status<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">!=<pos:position pos:line="13" pos:column="22"/></operator> <literal type="number" pos:line="13" pos:column="23">0<pos:position pos:line="13" pos:column="24"/></literal></expr>)<pos:position pos:line="13" pos:column="25"/></condition><then pos:line="13" pos:column="25">
	<block pos:line="14" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="15" pos:column="17">char<pos:position pos:line="15" pos:column="21"/></name></type> <name><name pos:line="15" pos:column="22">errbuf<pos:position pos:line="15" pos:column="28"/></name><index pos:line="15" pos:column="28">[<expr><literal type="number" pos:line="15" pos:column="29">1024<pos:position pos:line="15" pos:column="33"/></literal></expr>]<pos:position pos:line="15" pos:column="34"/></index></name></decl>;<pos:position pos:line="15" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">ERROR<pos:position pos:line="16" pos:column="22"/></name> <argument_list pos:line="16" pos:column="23">(<argument><expr><literal type="string" pos:line="16" pos:column="24">"sensors plugin: stat (%s) failed: %s"<pos:position pos:line="16" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="64">conffile<pos:position pos:line="16" pos:column="72"/></name></expr></argument>,
				<argument><expr><call><name pos:line="17" pos:column="33">sstrerror<pos:position pos:line="17" pos:column="42"/></name> <argument_list pos:line="17" pos:column="43">(<argument><expr><name pos:line="17" pos:column="44">errno<pos:position pos:line="17" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="51">errbuf<pos:position pos:line="17" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="59">sizeof <argument_list pos:line="17" pos:column="66">(<argument><expr><name pos:line="17" pos:column="67">errbuf<pos:position pos:line="17" pos:column="73"/></name></expr></argument>)<pos:position pos:line="17" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="77"/></expr_stmt>
		<expr_stmt><expr><name pos:line="18" pos:column="17">sensors_config_mtime<pos:position pos:line="18" pos:column="37"/></name> <operator pos:line="18" pos:column="38">=<pos:position pos:line="18" pos:column="39"/></operator> <literal type="number" pos:line="18" pos:column="40">0<pos:position pos:line="18" pos:column="41"/></literal></expr>;<pos:position pos:line="18" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>

	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">(<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="14">sensors_config_mtime<pos:position pos:line="21" pos:column="34"/></name> <operator pos:line="21" pos:column="35">!=<pos:position pos:line="21" pos:column="37"/></operator> <literal type="number" pos:line="21" pos:column="38">0<pos:position pos:line="21" pos:column="39"/></literal><operator pos:line="21" pos:column="39">)<pos:position pos:line="21" pos:column="40"/></operator>
			<operator pos:line="22" pos:column="25">&amp;&amp;<pos:position pos:line="22" pos:column="35"/></operator> <operator pos:line="22" pos:column="28">(<pos:position pos:line="22" pos:column="29"/></operator><name pos:line="22" pos:column="29">sensors_config_mtime<pos:position pos:line="22" pos:column="49"/></name> <operator pos:line="22" pos:column="50">==<pos:position pos:line="22" pos:column="52"/></operator> <name><name pos:line="22" pos:column="53">statbuf<pos:position pos:line="22" pos:column="60"/></name><operator pos:line="22" pos:column="60">.<pos:position pos:line="22" pos:column="61"/></operator><name pos:line="22" pos:column="61">st_mtime<pos:position pos:line="22" pos:column="69"/></name></name><operator pos:line="22" pos:column="69">)<pos:position pos:line="22" pos:column="70"/></operator></expr>)<pos:position pos:line="22" pos:column="71"/></condition><then pos:line="22" pos:column="71">
		<block type="pseudo"><return pos:line="23" pos:column="17">return <expr><operator pos:line="23" pos:column="24">(<pos:position pos:line="23" pos:column="25"/></operator><literal type="number" pos:line="23" pos:column="25">0<pos:position pos:line="23" pos:column="26"/></literal><operator pos:line="23" pos:column="26">)<pos:position pos:line="23" pos:column="27"/></operator></expr>;<pos:position pos:line="23" pos:column="28"/></return></block></then></if>

	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">sensors_config_mtime<pos:position pos:line="25" pos:column="33"/></name> <operator pos:line="25" pos:column="34">!=<pos:position pos:line="25" pos:column="36"/></operator> <literal type="number" pos:line="25" pos:column="37">0<pos:position pos:line="25" pos:column="38"/></literal></expr>)<pos:position pos:line="25" pos:column="39"/></condition><then pos:line="25" pos:column="39">
	<block pos:line="26" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">NOTICE<pos:position pos:line="27" pos:column="23"/></name> <argument_list pos:line="27" pos:column="24">(<argument><expr><literal type="string" pos:line="27" pos:column="25">"sensors plugin: Reloading config from %s"<pos:position pos:line="27" pos:column="67"/></literal></expr></argument>,
				<argument><expr><name pos:line="28" pos:column="33">conffile<pos:position pos:line="28" pos:column="41"/></name></expr></argument>)<pos:position pos:line="28" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">sensors_free_features<pos:position pos:line="29" pos:column="38"/></name> <argument_list pos:line="29" pos:column="39">()<pos:position pos:line="29" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name pos:line="30" pos:column="17">sensors_config_mtime<pos:position pos:line="30" pos:column="37"/></name> <operator pos:line="30" pos:column="38">=<pos:position pos:line="30" pos:column="39"/></operator> <literal type="number" pos:line="30" pos:column="40">0<pos:position pos:line="30" pos:column="41"/></literal></expr>;<pos:position pos:line="30" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="31" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="33" pos:column="9">fh<pos:position pos:line="33" pos:column="11"/></name> <operator pos:line="33" pos:column="12">=<pos:position pos:line="33" pos:column="13"/></operator> <call><name pos:line="33" pos:column="14">fopen<pos:position pos:line="33" pos:column="19"/></name> <argument_list pos:line="33" pos:column="20">(<argument><expr><name pos:line="33" pos:column="21">conffile<pos:position pos:line="33" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="31">"r"<pos:position pos:line="33" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="36"/></expr_stmt>
	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name pos:line="34" pos:column="13">fh<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">==<pos:position pos:line="34" pos:column="18"/></operator> <name pos:line="34" pos:column="19">NULL<pos:position pos:line="34" pos:column="23"/></name></expr>)<pos:position pos:line="34" pos:column="24"/></condition><then pos:line="34" pos:column="24">
	<block pos:line="35" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="36" pos:column="17">char<pos:position pos:line="36" pos:column="21"/></name></type> <name><name pos:line="36" pos:column="22">errbuf<pos:position pos:line="36" pos:column="28"/></name><index pos:line="36" pos:column="28">[<expr><literal type="number" pos:line="36" pos:column="29">1024<pos:position pos:line="36" pos:column="33"/></literal></expr>]<pos:position pos:line="36" pos:column="34"/></index></name></decl>;<pos:position pos:line="36" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">ERROR<pos:position pos:line="37" pos:column="22"/></name> <argument_list pos:line="37" pos:column="23">(<argument><expr><literal type="string" pos:line="37" pos:column="24">"sensors plugin: fopen(%s) failed: %s"<pos:position pos:line="37" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="64">conffile<pos:position pos:line="37" pos:column="72"/></name></expr></argument>,
				<argument><expr><call><name pos:line="38" pos:column="33">sstrerror<pos:position pos:line="38" pos:column="42"/></name> <argument_list pos:line="38" pos:column="43">(<argument><expr><name pos:line="38" pos:column="44">errno<pos:position pos:line="38" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="51">errbuf<pos:position pos:line="38" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="59">sizeof <argument_list pos:line="38" pos:column="66">(<argument><expr><name pos:line="38" pos:column="67">errbuf<pos:position pos:line="38" pos:column="73"/></name></expr></argument>)<pos:position pos:line="38" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="38" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="77"/></expr_stmt>
		<return pos:line="39" pos:column="17">return <expr><operator pos:line="39" pos:column="24">(<pos:position pos:line="39" pos:column="25"/></operator><operator pos:line="39" pos:column="25">-<pos:position pos:line="39" pos:column="26"/></operator><literal type="number" pos:line="39" pos:column="26">1<pos:position pos:line="39" pos:column="27"/></literal><operator pos:line="39" pos:column="27">)<pos:position pos:line="39" pos:column="28"/></operator></expr>;<pos:position pos:line="39" pos:column="29"/></return>
	}<pos:position pos:line="40" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="42" pos:column="9">status<pos:position pos:line="42" pos:column="15"/></name> <operator pos:line="42" pos:column="16">=<pos:position pos:line="42" pos:column="17"/></operator> <call><name pos:line="42" pos:column="18">sensors_init<pos:position pos:line="42" pos:column="30"/></name> <argument_list pos:line="42" pos:column="31">(<argument><expr><name pos:line="42" pos:column="32">fh<pos:position pos:line="42" pos:column="34"/></name></expr></argument>)<pos:position pos:line="42" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="43" pos:column="9">fclose<pos:position pos:line="43" pos:column="15"/></name> <argument_list pos:line="43" pos:column="16">(<argument><expr><name pos:line="43" pos:column="17">fh<pos:position pos:line="43" pos:column="19"/></name></expr></argument>)<pos:position pos:line="43" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="21"/></expr_stmt>
	<if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name pos:line="44" pos:column="13">status<pos:position pos:line="44" pos:column="19"/></name> <operator pos:line="44" pos:column="20">!=<pos:position pos:line="44" pos:column="22"/></operator> <literal type="number" pos:line="44" pos:column="23">0<pos:position pos:line="44" pos:column="24"/></literal></expr>)<pos:position pos:line="44" pos:column="25"/></condition><then pos:line="44" pos:column="25">
	<block pos:line="45" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="46" pos:column="17">ERROR<pos:position pos:line="46" pos:column="22"/></name> <argument_list pos:line="46" pos:column="23">(<argument><expr><literal type="string" pos:line="46" pos:column="24">"sensors plugin: Cannot initialize sensors. "<pos:position pos:line="46" pos:column="69"/></literal>
				<literal type="string" pos:line="47" pos:column="33">"Data will not be collected."<pos:position pos:line="47" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="64"/></expr_stmt>
		<return pos:line="48" pos:column="17">return <expr><operator pos:line="48" pos:column="24">(<pos:position pos:line="48" pos:column="25"/></operator><operator pos:line="48" pos:column="25">-<pos:position pos:line="48" pos:column="26"/></operator><literal type="number" pos:line="48" pos:column="26">1<pos:position pos:line="48" pos:column="27"/></literal><operator pos:line="48" pos:column="27">)<pos:position pos:line="48" pos:column="28"/></operator></expr>;<pos:position pos:line="48" pos:column="29"/></return>
	}<pos:position pos:line="49" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="51" pos:column="9">sensors_config_mtime<pos:position pos:line="51" pos:column="29"/></name> <operator pos:line="51" pos:column="30">=<pos:position pos:line="51" pos:column="31"/></operator> <name><name pos:line="51" pos:column="32">statbuf<pos:position pos:line="51" pos:column="39"/></name><operator pos:line="51" pos:column="39">.<pos:position pos:line="51" pos:column="40"/></operator><name pos:line="51" pos:column="40">st_mtime<pos:position pos:line="51" pos:column="48"/></name></name></expr>;<pos:position pos:line="51" pos:column="49"/></expr_stmt>

<cpp:if pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">if<pos:position pos:line="53" pos:column="4"/></cpp:directive> <expr><name pos:line="53" pos:column="5">SENSORS_API_VERSION<pos:position pos:line="53" pos:column="24"/></name> <operator pos:line="53" pos:column="25">&lt;<pos:position pos:line="53" pos:column="29"/></operator> <literal type="number" pos:line="53" pos:column="27">0x400<pos:position pos:line="53" pos:column="32"/></literal></expr></cpp:if>
	<expr_stmt><expr><name pos:line="54" pos:column="9">chip_num<pos:position pos:line="54" pos:column="17"/></name> <operator pos:line="54" pos:column="18">=<pos:position pos:line="54" pos:column="19"/></operator> <literal type="number" pos:line="54" pos:column="20">0<pos:position pos:line="54" pos:column="21"/></literal></expr>;<pos:position pos:line="54" pos:column="22"/></expr_stmt>
	<while pos:line="55" pos:column="9">while <condition pos:line="55" pos:column="15">(<expr><operator pos:line="55" pos:column="16">(<pos:position pos:line="55" pos:column="17"/></operator><name pos:line="55" pos:column="17">chip<pos:position pos:line="55" pos:column="21"/></name> <operator pos:line="55" pos:column="22">=<pos:position pos:line="55" pos:column="23"/></operator> <call><name pos:line="55" pos:column="24">sensors_get_detected_chips<pos:position pos:line="55" pos:column="50"/></name> <argument_list pos:line="55" pos:column="51">(<argument><expr><operator pos:line="55" pos:column="52">&amp;<pos:position pos:line="55" pos:column="57"/></operator><name pos:line="55" pos:column="53">chip_num<pos:position pos:line="55" pos:column="61"/></name></expr></argument>)<pos:position pos:line="55" pos:column="62"/></argument_list></call><operator pos:line="55" pos:column="62">)<pos:position pos:line="55" pos:column="63"/></operator> <operator pos:line="55" pos:column="64">!=<pos:position pos:line="55" pos:column="66"/></operator> <name pos:line="55" pos:column="67">NULL<pos:position pos:line="55" pos:column="71"/></name></expr>)<pos:position pos:line="55" pos:column="72"/></condition>
	<block pos:line="56" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="57" pos:column="17">int<pos:position pos:line="57" pos:column="20"/></name></type> <name pos:line="57" pos:column="21">feature_num0<pos:position pos:line="57" pos:column="33"/></name> <init pos:line="57" pos:column="34">= <expr><literal type="number" pos:line="57" pos:column="36">0<pos:position pos:line="57" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="57" pos:column="38"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="58" pos:column="17">int<pos:position pos:line="58" pos:column="20"/></name></type> <name pos:line="58" pos:column="21">feature_num1<pos:position pos:line="58" pos:column="33"/></name> <init pos:line="58" pos:column="34">= <expr><literal type="number" pos:line="58" pos:column="36">0<pos:position pos:line="58" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="58" pos:column="38"/></decl_stmt>

		<while pos:line="60" pos:column="17">while <condition pos:line="60" pos:column="23">(<expr><literal type="number" pos:line="60" pos:column="24">42<pos:position pos:line="60" pos:column="26"/></literal></expr>)<pos:position pos:line="60" pos:column="27"/></condition>
		<block pos:line="61" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="62" pos:column="25">const<pos:position pos:line="62" pos:column="30"/></specifier> <name pos:line="62" pos:column="31">sensors_feature_data<pos:position pos:line="62" pos:column="51"/></name> <modifier pos:line="62" pos:column="52">*<pos:position pos:line="62" pos:column="53"/></modifier></type><name pos:line="62" pos:column="53">feature<pos:position pos:line="62" pos:column="60"/></name></decl>;<pos:position pos:line="62" pos:column="61"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="63" pos:column="25">int<pos:position pos:line="63" pos:column="28"/></name></type> <name pos:line="63" pos:column="29">feature_type<pos:position pos:line="63" pos:column="41"/></name></decl>;<pos:position pos:line="63" pos:column="42"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="64" pos:column="25">featurelist_t<pos:position pos:line="64" pos:column="38"/></name> <modifier pos:line="64" pos:column="39">*<pos:position pos:line="64" pos:column="40"/></modifier></type><name pos:line="64" pos:column="40">fl<pos:position pos:line="64" pos:column="42"/></name></decl>;<pos:position pos:line="64" pos:column="43"/></decl_stmt>

			<expr_stmt><expr><name pos:line="66" pos:column="25">feature<pos:position pos:line="66" pos:column="32"/></name> <operator pos:line="66" pos:column="33">=<pos:position pos:line="66" pos:column="34"/></operator> <call><name pos:line="66" pos:column="35">sensors_get_all_features<pos:position pos:line="66" pos:column="59"/></name> <argument_list pos:line="66" pos:column="60">(<argument><expr><operator pos:line="66" pos:column="61">*<pos:position pos:line="66" pos:column="62"/></operator><name pos:line="66" pos:column="62">chip<pos:position pos:line="66" pos:column="66"/></name></expr></argument>,
					<argument><expr><operator pos:line="67" pos:column="41">&amp;<pos:position pos:line="67" pos:column="46"/></operator><name pos:line="67" pos:column="42">feature_num0<pos:position pos:line="67" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="67" pos:column="56">&amp;<pos:position pos:line="67" pos:column="61"/></operator><name pos:line="67" pos:column="57">feature_num1<pos:position pos:line="67" pos:column="69"/></name></expr></argument>)<pos:position pos:line="67" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="71"/></expr_stmt>

			<comment type="block" pos:line="69" pos:column="25">/* Check if all features have been read. */</comment>
			<if pos:line="70" pos:column="25">if <condition pos:line="70" pos:column="28">(<expr><name pos:line="70" pos:column="29">feature<pos:position pos:line="70" pos:column="36"/></name> <operator pos:line="70" pos:column="37">==<pos:position pos:line="70" pos:column="39"/></operator> <name pos:line="70" pos:column="40">NULL<pos:position pos:line="70" pos:column="44"/></name></expr>)<pos:position pos:line="70" pos:column="45"/></condition><then pos:line="70" pos:column="45">
				<block type="pseudo"><break pos:line="71" pos:column="33">break;<pos:position pos:line="71" pos:column="39"/></break></block></then></if>

			<comment type="block" pos:line="73" pos:column="25">/* "master features" only */</comment>
			<if pos:line="74" pos:column="25">if <condition pos:line="74" pos:column="28">(<expr><name><name pos:line="74" pos:column="29">feature<pos:position pos:line="74" pos:column="36"/></name><operator pos:line="74" pos:column="36">-&gt;<pos:position pos:line="74" pos:column="41"/></operator><name pos:line="74" pos:column="38">mapping<pos:position pos:line="74" pos:column="45"/></name></name> <operator pos:line="74" pos:column="46">!=<pos:position pos:line="74" pos:column="48"/></operator> <name pos:line="74" pos:column="49">SENSORS_NO_MAPPING<pos:position pos:line="74" pos:column="67"/></name></expr>)<pos:position pos:line="74" pos:column="68"/></condition><then pos:line="74" pos:column="68">
			<block pos:line="75" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="76" pos:column="33">DEBUG<pos:position pos:line="76" pos:column="38"/></name> <argument_list pos:line="76" pos:column="39">(<argument><expr><literal type="string" pos:line="76" pos:column="40">"sensors plugin: sensors_load_conf: "<pos:position pos:line="76" pos:column="77"/></literal>
						<literal type="string" pos:line="77" pos:column="49">"Ignoring subfeature `%s', "<pos:position pos:line="77" pos:column="77"/></literal>
						<literal type="string" pos:line="78" pos:column="49">"because (feature-&gt;mapping "<pos:position pos:line="78" pos:column="80"/></literal>
						<literal type="string" pos:line="79" pos:column="49">"!= SENSORS_NO_MAPPING)."<pos:position pos:line="79" pos:column="74"/></literal></expr></argument>,
						<argument><expr><name><name pos:line="80" pos:column="49">feature<pos:position pos:line="80" pos:column="56"/></name><operator pos:line="80" pos:column="56">-&gt;<pos:position pos:line="80" pos:column="61"/></operator><name pos:line="80" pos:column="58">name<pos:position pos:line="80" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="64"/></expr_stmt>
				<continue pos:line="81" pos:column="33">continue;<pos:position pos:line="81" pos:column="42"/></continue>
			}<pos:position pos:line="82" pos:column="26"/></block></then></if>

			<comment type="block" pos:line="84" pos:column="25">/* skip ignored in sensors.conf */</comment>
			<if pos:line="85" pos:column="25">if <condition pos:line="85" pos:column="28">(<expr><call><name pos:line="85" pos:column="29">sensors_get_ignored<pos:position pos:line="85" pos:column="48"/></name> <argument_list pos:line="85" pos:column="49">(<argument><expr><operator pos:line="85" pos:column="50">*<pos:position pos:line="85" pos:column="51"/></operator><name pos:line="85" pos:column="51">chip<pos:position pos:line="85" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="85" pos:column="57">feature<pos:position pos:line="85" pos:column="64"/></name><operator pos:line="85" pos:column="64">-&gt;<pos:position pos:line="85" pos:column="69"/></operator><name pos:line="85" pos:column="66">number<pos:position pos:line="85" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="85" pos:column="73"/></argument_list></call> <operator pos:line="85" pos:column="74">==<pos:position pos:line="85" pos:column="76"/></operator> <literal type="number" pos:line="85" pos:column="77">0<pos:position pos:line="85" pos:column="78"/></literal></expr>)<pos:position pos:line="85" pos:column="79"/></condition><then pos:line="85" pos:column="79">
			<block pos:line="86" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="87" pos:column="33">DEBUG<pos:position pos:line="87" pos:column="38"/></name> <argument_list pos:line="87" pos:column="39">(<argument><expr><literal type="string" pos:line="87" pos:column="40">"sensors plugin: sensors_load_conf: "<pos:position pos:line="87" pos:column="77"/></literal>
						<literal type="string" pos:line="88" pos:column="49">"Ignoring subfeature `%s', "<pos:position pos:line="88" pos:column="77"/></literal>
						<literal type="string" pos:line="89" pos:column="49">"because "<pos:position pos:line="89" pos:column="59"/></literal>
						<literal type="string" pos:line="90" pos:column="49">"`sensors_get_ignored' told "<pos:position pos:line="90" pos:column="78"/></literal>
						<literal type="string" pos:line="91" pos:column="49">"me so."<pos:position pos:line="91" pos:column="57"/></literal></expr></argument>,
						<argument><expr><name><name pos:line="92" pos:column="49">feature<pos:position pos:line="92" pos:column="56"/></name><operator pos:line="92" pos:column="56">-&gt;<pos:position pos:line="92" pos:column="61"/></operator><name pos:line="92" pos:column="58">name<pos:position pos:line="92" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="92" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="64"/></expr_stmt>
				<continue pos:line="93" pos:column="33">continue;<pos:position pos:line="93" pos:column="42"/></continue>
			}<pos:position pos:line="94" pos:column="26"/></block></then></if>

			<expr_stmt><expr><name pos:line="96" pos:column="25">feature_type<pos:position pos:line="96" pos:column="37"/></name> <operator pos:line="96" pos:column="38">=<pos:position pos:line="96" pos:column="39"/></operator> <call><name pos:line="96" pos:column="40">sensors_feature_name_to_type<pos:position pos:line="96" pos:column="68"/></name> <argument_list pos:line="96" pos:column="69">(
					<argument><expr><name><name pos:line="97" pos:column="41">feature<pos:position pos:line="97" pos:column="48"/></name><operator pos:line="97" pos:column="48">-&gt;<pos:position pos:line="97" pos:column="53"/></operator><name pos:line="97" pos:column="50">name<pos:position pos:line="97" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="97" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="56"/></expr_stmt>
			<if pos:line="98" pos:column="25">if <condition pos:line="98" pos:column="28">(<expr><name pos:line="98" pos:column="29">feature_type<pos:position pos:line="98" pos:column="41"/></name> <operator pos:line="98" pos:column="42">==<pos:position pos:line="98" pos:column="44"/></operator> <name pos:line="98" pos:column="45">SENSOR_TYPE_UNKNOWN<pos:position pos:line="98" pos:column="64"/></name></expr>)<pos:position pos:line="98" pos:column="65"/></condition><then pos:line="98" pos:column="65">
			<block pos:line="99" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="100" pos:column="33">DEBUG<pos:position pos:line="100" pos:column="38"/></name> <argument_list pos:line="100" pos:column="39">(<argument><expr><literal type="string" pos:line="100" pos:column="40">"sensors plugin: sensors_load_conf: "<pos:position pos:line="100" pos:column="77"/></literal>
						<literal type="string" pos:line="101" pos:column="49">"Ignoring subfeature `%s', "<pos:position pos:line="101" pos:column="77"/></literal>
						<literal type="string" pos:line="102" pos:column="49">"because its type is "<pos:position pos:line="102" pos:column="71"/></literal>
						<literal type="string" pos:line="103" pos:column="49">"unknown."<pos:position pos:line="103" pos:column="59"/></literal></expr></argument>,
						<argument><expr><name><name pos:line="104" pos:column="49">feature<pos:position pos:line="104" pos:column="56"/></name><operator pos:line="104" pos:column="56">-&gt;<pos:position pos:line="104" pos:column="61"/></operator><name pos:line="104" pos:column="58">name<pos:position pos:line="104" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="104" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="64"/></expr_stmt>
				<continue pos:line="105" pos:column="33">continue;<pos:position pos:line="105" pos:column="42"/></continue>
			}<pos:position pos:line="106" pos:column="26"/></block></then></if>

			<expr_stmt><expr><name pos:line="108" pos:column="25">fl<pos:position pos:line="108" pos:column="27"/></name> <operator pos:line="108" pos:column="28">=<pos:position pos:line="108" pos:column="29"/></operator> <operator pos:line="108" pos:column="30">(<pos:position pos:line="108" pos:column="31"/></operator><name pos:line="108" pos:column="31">featurelist_t<pos:position pos:line="108" pos:column="44"/></name> <operator pos:line="108" pos:column="45">*<pos:position pos:line="108" pos:column="46"/></operator><operator pos:line="108" pos:column="46">)<pos:position pos:line="108" pos:column="47"/></operator> <call><name pos:line="108" pos:column="48">malloc<pos:position pos:line="108" pos:column="54"/></name> <argument_list pos:line="108" pos:column="55">(<argument><expr><sizeof pos:line="108" pos:column="56">sizeof <argument_list pos:line="108" pos:column="63">(<argument><expr><name pos:line="108" pos:column="64">featurelist_t<pos:position pos:line="108" pos:column="77"/></name></expr></argument>)<pos:position pos:line="108" pos:column="78"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="108" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="80"/></expr_stmt>
			<if pos:line="109" pos:column="25">if <condition pos:line="109" pos:column="28">(<expr><name pos:line="109" pos:column="29">fl<pos:position pos:line="109" pos:column="31"/></name> <operator pos:line="109" pos:column="32">==<pos:position pos:line="109" pos:column="34"/></operator> <name pos:line="109" pos:column="35">NULL<pos:position pos:line="109" pos:column="39"/></name></expr>)<pos:position pos:line="109" pos:column="40"/></condition><then pos:line="109" pos:column="40">
			<block pos:line="110" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="111" pos:column="33">ERROR<pos:position pos:line="111" pos:column="38"/></name> <argument_list pos:line="111" pos:column="39">(<argument><expr><literal type="string" pos:line="111" pos:column="40">"sensors plugin: malloc failed."<pos:position pos:line="111" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="74"/></expr_stmt>
				<continue pos:line="112" pos:column="33">continue;<pos:position pos:line="112" pos:column="42"/></continue>
			}<pos:position pos:line="113" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="114" pos:column="25">memset<pos:position pos:line="114" pos:column="31"/></name> <argument_list pos:line="114" pos:column="32">(<argument><expr><name pos:line="114" pos:column="33">fl<pos:position pos:line="114" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="114" pos:column="37">'\0'<pos:position pos:line="114" pos:column="41"/></literal></expr></argument>, <argument><expr><sizeof pos:line="114" pos:column="43">sizeof <argument_list pos:line="114" pos:column="50">(<argument><expr><name pos:line="114" pos:column="51">featurelist_t<pos:position pos:line="114" pos:column="64"/></name></expr></argument>)<pos:position pos:line="114" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="114" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="67"/></expr_stmt>

			<expr_stmt><expr><name><name pos:line="116" pos:column="25">fl<pos:position pos:line="116" pos:column="27"/></name><operator pos:line="116" pos:column="27">-&gt;<pos:position pos:line="116" pos:column="32"/></operator><name pos:line="116" pos:column="29">chip<pos:position pos:line="116" pos:column="33"/></name></name> <operator pos:line="116" pos:column="34">=<pos:position pos:line="116" pos:column="35"/></operator> <name pos:line="116" pos:column="36">chip<pos:position pos:line="116" pos:column="40"/></name></expr>;<pos:position pos:line="116" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="117" pos:column="25">fl<pos:position pos:line="117" pos:column="27"/></name><operator pos:line="117" pos:column="27">-&gt;<pos:position pos:line="117" pos:column="32"/></operator><name pos:line="117" pos:column="29">data<pos:position pos:line="117" pos:column="33"/></name></name> <operator pos:line="117" pos:column="34">=<pos:position pos:line="117" pos:column="35"/></operator> <name pos:line="117" pos:column="36">feature<pos:position pos:line="117" pos:column="43"/></name></expr>;<pos:position pos:line="117" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="118" pos:column="25">fl<pos:position pos:line="118" pos:column="27"/></name><operator pos:line="118" pos:column="27">-&gt;<pos:position pos:line="118" pos:column="32"/></operator><name pos:line="118" pos:column="29">type<pos:position pos:line="118" pos:column="33"/></name></name> <operator pos:line="118" pos:column="34">=<pos:position pos:line="118" pos:column="35"/></operator> <name pos:line="118" pos:column="36">feature_type<pos:position pos:line="118" pos:column="48"/></name></expr>;<pos:position pos:line="118" pos:column="49"/></expr_stmt>

			<if pos:line="120" pos:column="25">if <condition pos:line="120" pos:column="28">(<expr><name pos:line="120" pos:column="29">first_feature<pos:position pos:line="120" pos:column="42"/></name> <operator pos:line="120" pos:column="43">==<pos:position pos:line="120" pos:column="45"/></operator> <name pos:line="120" pos:column="46">NULL<pos:position pos:line="120" pos:column="50"/></name></expr>)<pos:position pos:line="120" pos:column="51"/></condition><then pos:line="120" pos:column="51">
				<block type="pseudo"><expr_stmt><expr><name pos:line="121" pos:column="33">first_feature<pos:position pos:line="121" pos:column="46"/></name> <operator pos:line="121" pos:column="47">=<pos:position pos:line="121" pos:column="48"/></operator> <name pos:line="121" pos:column="49">fl<pos:position pos:line="121" pos:column="51"/></name></expr>;<pos:position pos:line="121" pos:column="52"/></expr_stmt></block></then>
			<else pos:line="122" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="123" pos:column="33">last_feature<pos:position pos:line="123" pos:column="45"/></name><operator pos:line="123" pos:column="45">-&gt;<pos:position pos:line="123" pos:column="50"/></operator><name pos:line="123" pos:column="47">next<pos:position pos:line="123" pos:column="51"/></name></name> <operator pos:line="123" pos:column="52">=<pos:position pos:line="123" pos:column="53"/></operator> <name pos:line="123" pos:column="54">fl<pos:position pos:line="123" pos:column="56"/></name></expr>;<pos:position pos:line="123" pos:column="57"/></expr_stmt></block></else></if>
			<expr_stmt><expr><name pos:line="124" pos:column="25">last_feature<pos:position pos:line="124" pos:column="37"/></name> <operator pos:line="124" pos:column="38">=<pos:position pos:line="124" pos:column="39"/></operator> <name pos:line="124" pos:column="40">fl<pos:position pos:line="124" pos:column="42"/></name></expr>;<pos:position pos:line="124" pos:column="43"/></expr_stmt>
		}<pos:position pos:line="125" pos:column="18"/></block></while> <comment type="block" pos:line="125" pos:column="19">/* while sensors_get_all_features */</comment>
	}<pos:position pos:line="126" pos:column="10"/></block></while> <comment type="block" pos:line="126" pos:column="11">/* while sensors_get_detected_chips */</comment>
<comment type="block" pos:line="127" pos:column="1">/* #endif SENSORS_API_VERSION &lt; 0x400 */</comment>

<cpp:elif pos:line="129" pos:column="1">#<cpp:directive pos:line="129" pos:column="2">elif<pos:position pos:line="129" pos:column="6"/></cpp:directive> <expr><operator pos:line="129" pos:column="7">(<pos:position pos:line="129" pos:column="8"/></operator><name pos:line="129" pos:column="8">SENSORS_API_VERSION<pos:position pos:line="129" pos:column="27"/></name> <operator pos:line="129" pos:column="28">&gt;=<pos:position pos:line="129" pos:column="33"/></operator> <literal type="number" pos:line="129" pos:column="31">0x400<pos:position pos:line="129" pos:column="36"/></literal><operator pos:line="129" pos:column="36">)<pos:position pos:line="129" pos:column="37"/></operator> <operator pos:line="129" pos:column="38">&amp;&amp;<pos:position pos:line="129" pos:column="48"/></operator> <operator pos:line="129" pos:column="41">(<pos:position pos:line="129" pos:column="42"/></operator><name pos:line="129" pos:column="42">SENSORS_API_VERSION<pos:position pos:line="129" pos:column="61"/></name> <operator pos:line="129" pos:column="62">&lt;<pos:position pos:line="129" pos:column="66"/></operator> <literal type="number" pos:line="129" pos:column="64">0x500<pos:position pos:line="129" pos:column="69"/></literal><operator pos:line="129" pos:column="69">)<pos:position pos:line="129" pos:column="70"/></operator></expr></cpp:elif>
	<expr_stmt><expr><name pos:line="130" pos:column="9">chip_num<pos:position pos:line="130" pos:column="17"/></name> <operator pos:line="130" pos:column="18">=<pos:position pos:line="130" pos:column="19"/></operator> <literal type="number" pos:line="130" pos:column="20">0<pos:position pos:line="130" pos:column="21"/></literal></expr>;<pos:position pos:line="130" pos:column="22"/></expr_stmt>
	<while pos:line="131" pos:column="9">while <condition pos:line="131" pos:column="15">(<expr><operator pos:line="131" pos:column="16">(<pos:position pos:line="131" pos:column="17"/></operator><name pos:line="131" pos:column="17">chip<pos:position pos:line="131" pos:column="21"/></name> <operator pos:line="131" pos:column="22">=<pos:position pos:line="131" pos:column="23"/></operator> <call><name pos:line="131" pos:column="24">sensors_get_detected_chips<pos:position pos:line="131" pos:column="50"/></name> <argument_list pos:line="131" pos:column="51">(<argument><expr><name pos:line="131" pos:column="52">NULL<pos:position pos:line="131" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="131" pos:column="58">&amp;<pos:position pos:line="131" pos:column="63"/></operator><name pos:line="131" pos:column="59">chip_num<pos:position pos:line="131" pos:column="67"/></name></expr></argument>)<pos:position pos:line="131" pos:column="68"/></argument_list></call><operator pos:line="131" pos:column="68">)<pos:position pos:line="131" pos:column="69"/></operator> <operator pos:line="131" pos:column="70">!=<pos:position pos:line="131" pos:column="72"/></operator> <name pos:line="131" pos:column="73">NULL<pos:position pos:line="131" pos:column="77"/></name></expr>)<pos:position pos:line="131" pos:column="78"/></condition>
	<block pos:line="132" pos:column="9">{
		<decl_stmt><decl><type><specifier pos:line="133" pos:column="17">const<pos:position pos:line="133" pos:column="22"/></specifier> <name pos:line="133" pos:column="23">sensors_feature<pos:position pos:line="133" pos:column="38"/></name> <modifier pos:line="133" pos:column="39">*<pos:position pos:line="133" pos:column="40"/></modifier></type><name pos:line="133" pos:column="40">feature<pos:position pos:line="133" pos:column="47"/></name></decl>;<pos:position pos:line="133" pos:column="48"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="134" pos:column="17">int<pos:position pos:line="134" pos:column="20"/></name></type> <name pos:line="134" pos:column="21">feature_num<pos:position pos:line="134" pos:column="32"/></name> <init pos:line="134" pos:column="33">= <expr><literal type="number" pos:line="134" pos:column="35">0<pos:position pos:line="134" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="134" pos:column="37"/></decl_stmt>

		<while pos:line="136" pos:column="17">while <condition pos:line="136" pos:column="23">(<expr><operator pos:line="136" pos:column="24">(<pos:position pos:line="136" pos:column="25"/></operator><name pos:line="136" pos:column="25">feature<pos:position pos:line="136" pos:column="32"/></name> <operator pos:line="136" pos:column="33">=<pos:position pos:line="136" pos:column="34"/></operator> <call><name pos:line="136" pos:column="35">sensors_get_features<pos:position pos:line="136" pos:column="55"/></name> <argument_list pos:line="136" pos:column="56">(<argument><expr><name pos:line="136" pos:column="57">chip<pos:position pos:line="136" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="136" pos:column="63">&amp;<pos:position pos:line="136" pos:column="68"/></operator><name pos:line="136" pos:column="64">feature_num<pos:position pos:line="136" pos:column="75"/></name></expr></argument>)<pos:position pos:line="136" pos:column="76"/></argument_list></call><operator pos:line="136" pos:column="76">)<pos:position pos:line="136" pos:column="77"/></operator> <operator pos:line="136" pos:column="78">!=<pos:position pos:line="136" pos:column="80"/></operator> <name pos:line="136" pos:column="81">NULL<pos:position pos:line="136" pos:column="85"/></name></expr>)<pos:position pos:line="136" pos:column="86"/></condition>
		<block pos:line="137" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="138" pos:column="25">const<pos:position pos:line="138" pos:column="30"/></specifier> <name pos:line="138" pos:column="31">sensors_subfeature<pos:position pos:line="138" pos:column="49"/></name> <modifier pos:line="138" pos:column="50">*<pos:position pos:line="138" pos:column="51"/></modifier></type><name pos:line="138" pos:column="51">subfeature<pos:position pos:line="138" pos:column="61"/></name></decl>;<pos:position pos:line="138" pos:column="62"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="139" pos:column="25">int<pos:position pos:line="139" pos:column="28"/></name></type> <name pos:line="139" pos:column="29">subfeature_num<pos:position pos:line="139" pos:column="43"/></name> <init pos:line="139" pos:column="44">= <expr><literal type="number" pos:line="139" pos:column="46">0<pos:position pos:line="139" pos:column="47"/></literal></expr></init></decl>;<pos:position pos:line="139" pos:column="48"/></decl_stmt>

			<comment type="block" pos:line="141" pos:column="25">/* Only handle voltage, fanspeeds and temperatures */</comment>
			<if pos:line="142" pos:column="25">if <condition pos:line="142" pos:column="28">(<expr><operator pos:line="142" pos:column="29">(<pos:position pos:line="142" pos:column="30"/></operator><name><name pos:line="142" pos:column="30">feature<pos:position pos:line="142" pos:column="37"/></name><operator pos:line="142" pos:column="37">-&gt;<pos:position pos:line="142" pos:column="42"/></operator><name pos:line="142" pos:column="39">type<pos:position pos:line="142" pos:column="43"/></name></name> <operator pos:line="142" pos:column="44">!=<pos:position pos:line="142" pos:column="46"/></operator> <name pos:line="142" pos:column="47">SENSORS_FEATURE_IN<pos:position pos:line="142" pos:column="65"/></name><operator pos:line="142" pos:column="65">)<pos:position pos:line="142" pos:column="66"/></operator>
					<operator pos:line="143" pos:column="41">&amp;&amp;<pos:position pos:line="143" pos:column="51"/></operator> <operator pos:line="143" pos:column="44">(<pos:position pos:line="143" pos:column="45"/></operator><name><name pos:line="143" pos:column="45">feature<pos:position pos:line="143" pos:column="52"/></name><operator pos:line="143" pos:column="52">-&gt;<pos:position pos:line="143" pos:column="57"/></operator><name pos:line="143" pos:column="54">type<pos:position pos:line="143" pos:column="58"/></name></name> <operator pos:line="143" pos:column="59">!=<pos:position pos:line="143" pos:column="61"/></operator> <name pos:line="143" pos:column="62">SENSORS_FEATURE_FAN<pos:position pos:line="143" pos:column="81"/></name><operator pos:line="143" pos:column="81">)<pos:position pos:line="143" pos:column="82"/></operator>
					<operator pos:line="144" pos:column="41">&amp;&amp;<pos:position pos:line="144" pos:column="51"/></operator> <operator pos:line="144" pos:column="44">(<pos:position pos:line="144" pos:column="45"/></operator><name><name pos:line="144" pos:column="45">feature<pos:position pos:line="144" pos:column="52"/></name><operator pos:line="144" pos:column="52">-&gt;<pos:position pos:line="144" pos:column="57"/></operator><name pos:line="144" pos:column="54">type<pos:position pos:line="144" pos:column="58"/></name></name> <operator pos:line="144" pos:column="59">!=<pos:position pos:line="144" pos:column="61"/></operator> <name pos:line="144" pos:column="62">SENSORS_FEATURE_TEMP<pos:position pos:line="144" pos:column="82"/></name><operator pos:line="144" pos:column="82">)<pos:position pos:line="144" pos:column="83"/></operator></expr>)<pos:position pos:line="144" pos:column="84"/></condition><then pos:line="144" pos:column="84">
			<block pos:line="145" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="146" pos:column="33">DEBUG<pos:position pos:line="146" pos:column="38"/></name> <argument_list pos:line="146" pos:column="39">(<argument><expr><literal type="string" pos:line="146" pos:column="40">"sensors plugin: sensors_load_conf: "<pos:position pos:line="146" pos:column="77"/></literal>
						<literal type="string" pos:line="147" pos:column="49">"Ignoring feature `%s', "<pos:position pos:line="147" pos:column="74"/></literal>
						<literal type="string" pos:line="148" pos:column="49">"because its type is not "<pos:position pos:line="148" pos:column="75"/></literal>
						<literal type="string" pos:line="149" pos:column="49">"supported."<pos:position pos:line="149" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="149" pos:column="63">feature<pos:position pos:line="149" pos:column="70"/></name><operator pos:line="149" pos:column="70">-&gt;<pos:position pos:line="149" pos:column="75"/></operator><name pos:line="149" pos:column="72">name<pos:position pos:line="149" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="149" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="78"/></expr_stmt>
				<continue pos:line="150" pos:column="33">continue;<pos:position pos:line="150" pos:column="42"/></continue>
			}<pos:position pos:line="151" pos:column="26"/></block></then></if>

			<while pos:line="153" pos:column="25">while <condition pos:line="153" pos:column="31">(<expr><operator pos:line="153" pos:column="32">(<pos:position pos:line="153" pos:column="33"/></operator><name pos:line="153" pos:column="33">subfeature<pos:position pos:line="153" pos:column="43"/></name> <operator pos:line="153" pos:column="44">=<pos:position pos:line="153" pos:column="45"/></operator> <call><name pos:line="153" pos:column="46">sensors_get_all_subfeatures<pos:position pos:line="153" pos:column="73"/></name> <argument_list pos:line="153" pos:column="74">(<argument><expr><name pos:line="153" pos:column="75">chip<pos:position pos:line="153" pos:column="79"/></name></expr></argument>,
							<argument><expr><name pos:line="154" pos:column="57">feature<pos:position pos:line="154" pos:column="64"/></name></expr></argument>, <argument><expr><operator pos:line="154" pos:column="66">&amp;<pos:position pos:line="154" pos:column="71"/></operator><name pos:line="154" pos:column="67">subfeature_num<pos:position pos:line="154" pos:column="81"/></name></expr></argument>)<pos:position pos:line="154" pos:column="82"/></argument_list></call><operator pos:line="154" pos:column="82">)<pos:position pos:line="154" pos:column="83"/></operator> <operator pos:line="154" pos:column="84">!=<pos:position pos:line="154" pos:column="86"/></operator> <name pos:line="154" pos:column="87">NULL<pos:position pos:line="154" pos:column="91"/></name></expr>)<pos:position pos:line="154" pos:column="92"/></condition>
			<block pos:line="155" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="156" pos:column="33">featurelist_t<pos:position pos:line="156" pos:column="46"/></name> <modifier pos:line="156" pos:column="47">*<pos:position pos:line="156" pos:column="48"/></modifier></type><name pos:line="156" pos:column="48">fl<pos:position pos:line="156" pos:column="50"/></name></decl>;<pos:position pos:line="156" pos:column="51"/></decl_stmt>

				<if pos:line="158" pos:column="33">if <condition pos:line="158" pos:column="36">(<expr><operator pos:line="158" pos:column="37">(<pos:position pos:line="158" pos:column="38"/></operator><name><name pos:line="158" pos:column="38">subfeature<pos:position pos:line="158" pos:column="48"/></name><operator pos:line="158" pos:column="48">-&gt;<pos:position pos:line="158" pos:column="53"/></operator><name pos:line="158" pos:column="50">type<pos:position pos:line="158" pos:column="54"/></name></name> <operator pos:line="158" pos:column="55">!=<pos:position pos:line="158" pos:column="57"/></operator> <name pos:line="158" pos:column="58">SENSORS_SUBFEATURE_IN_INPUT<pos:position pos:line="158" pos:column="85"/></name><operator pos:line="158" pos:column="85">)<pos:position pos:line="158" pos:column="86"/></operator>
						<operator pos:line="159" pos:column="49">&amp;&amp;<pos:position pos:line="159" pos:column="59"/></operator> <operator pos:line="159" pos:column="52">(<pos:position pos:line="159" pos:column="53"/></operator><name><name pos:line="159" pos:column="53">subfeature<pos:position pos:line="159" pos:column="63"/></name><operator pos:line="159" pos:column="63">-&gt;<pos:position pos:line="159" pos:column="68"/></operator><name pos:line="159" pos:column="65">type<pos:position pos:line="159" pos:column="69"/></name></name> <operator pos:line="159" pos:column="70">!=<pos:position pos:line="159" pos:column="72"/></operator> <name pos:line="159" pos:column="73">SENSORS_SUBFEATURE_FAN_INPUT<pos:position pos:line="159" pos:column="101"/></name><operator pos:line="159" pos:column="101">)<pos:position pos:line="159" pos:column="102"/></operator>
						<operator pos:line="160" pos:column="49">&amp;&amp;<pos:position pos:line="160" pos:column="59"/></operator> <operator pos:line="160" pos:column="52">(<pos:position pos:line="160" pos:column="53"/></operator><name><name pos:line="160" pos:column="53">subfeature<pos:position pos:line="160" pos:column="63"/></name><operator pos:line="160" pos:column="63">-&gt;<pos:position pos:line="160" pos:column="68"/></operator><name pos:line="160" pos:column="65">type<pos:position pos:line="160" pos:column="69"/></name></name> <operator pos:line="160" pos:column="70">!=<pos:position pos:line="160" pos:column="72"/></operator> <name pos:line="160" pos:column="73">SENSORS_SUBFEATURE_TEMP_INPUT<pos:position pos:line="160" pos:column="102"/></name><operator pos:line="160" pos:column="102">)<pos:position pos:line="160" pos:column="103"/></operator></expr>)<pos:position pos:line="160" pos:column="104"/></condition><then pos:line="160" pos:column="104">
					<block type="pseudo"><continue pos:line="161" pos:column="41">continue;<pos:position pos:line="161" pos:column="50"/></continue></block></then></if>

				<expr_stmt><expr><name pos:line="163" pos:column="33">fl<pos:position pos:line="163" pos:column="35"/></name> <operator pos:line="163" pos:column="36">=<pos:position pos:line="163" pos:column="37"/></operator> <operator pos:line="163" pos:column="38">(<pos:position pos:line="163" pos:column="39"/></operator><name pos:line="163" pos:column="39">featurelist_t<pos:position pos:line="163" pos:column="52"/></name> <operator pos:line="163" pos:column="53">*<pos:position pos:line="163" pos:column="54"/></operator><operator pos:line="163" pos:column="54">)<pos:position pos:line="163" pos:column="55"/></operator> <call><name pos:line="163" pos:column="56">malloc<pos:position pos:line="163" pos:column="62"/></name> <argument_list pos:line="163" pos:column="63">(<argument><expr><sizeof pos:line="163" pos:column="64">sizeof <argument_list pos:line="163" pos:column="71">(<argument><expr><name pos:line="163" pos:column="72">featurelist_t<pos:position pos:line="163" pos:column="85"/></name></expr></argument>)<pos:position pos:line="163" pos:column="86"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="163" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="88"/></expr_stmt>
				<if pos:line="164" pos:column="33">if <condition pos:line="164" pos:column="36">(<expr><name pos:line="164" pos:column="37">fl<pos:position pos:line="164" pos:column="39"/></name> <operator pos:line="164" pos:column="40">==<pos:position pos:line="164" pos:column="42"/></operator> <name pos:line="164" pos:column="43">NULL<pos:position pos:line="164" pos:column="47"/></name></expr>)<pos:position pos:line="164" pos:column="48"/></condition><then pos:line="164" pos:column="48">
				<block pos:line="165" pos:column="33">{
					<expr_stmt><expr><call><name pos:line="166" pos:column="41">ERROR<pos:position pos:line="166" pos:column="46"/></name> <argument_list pos:line="166" pos:column="47">(<argument><expr><literal type="string" pos:line="166" pos:column="48">"sensors plugin: malloc failed."<pos:position pos:line="166" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="166" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="82"/></expr_stmt>
					<continue pos:line="167" pos:column="41">continue;<pos:position pos:line="167" pos:column="50"/></continue>
				}<pos:position pos:line="168" pos:column="34"/></block></then></if>
				<expr_stmt><expr><call><name pos:line="169" pos:column="33">memset<pos:position pos:line="169" pos:column="39"/></name> <argument_list pos:line="169" pos:column="40">(<argument><expr><name pos:line="169" pos:column="41">fl<pos:position pos:line="169" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="169" pos:column="45">'\0'<pos:position pos:line="169" pos:column="49"/></literal></expr></argument>, <argument><expr><sizeof pos:line="169" pos:column="51">sizeof <argument_list pos:line="169" pos:column="58">(<argument><expr><name pos:line="169" pos:column="59">featurelist_t<pos:position pos:line="169" pos:column="72"/></name></expr></argument>)<pos:position pos:line="169" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="169" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="75"/></expr_stmt>

				<expr_stmt><expr><name><name pos:line="171" pos:column="33">fl<pos:position pos:line="171" pos:column="35"/></name><operator pos:line="171" pos:column="35">-&gt;<pos:position pos:line="171" pos:column="40"/></operator><name pos:line="171" pos:column="37">chip<pos:position pos:line="171" pos:column="41"/></name></name> <operator pos:line="171" pos:column="42">=<pos:position pos:line="171" pos:column="43"/></operator> <name pos:line="171" pos:column="44">chip<pos:position pos:line="171" pos:column="48"/></name></expr>;<pos:position pos:line="171" pos:column="49"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="172" pos:column="33">fl<pos:position pos:line="172" pos:column="35"/></name><operator pos:line="172" pos:column="35">-&gt;<pos:position pos:line="172" pos:column="40"/></operator><name pos:line="172" pos:column="37">feature<pos:position pos:line="172" pos:column="44"/></name></name> <operator pos:line="172" pos:column="45">=<pos:position pos:line="172" pos:column="46"/></operator> <name pos:line="172" pos:column="47">feature<pos:position pos:line="172" pos:column="54"/></name></expr>;<pos:position pos:line="172" pos:column="55"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="173" pos:column="33">fl<pos:position pos:line="173" pos:column="35"/></name><operator pos:line="173" pos:column="35">-&gt;<pos:position pos:line="173" pos:column="40"/></operator><name pos:line="173" pos:column="37">subfeature<pos:position pos:line="173" pos:column="47"/></name></name> <operator pos:line="173" pos:column="48">=<pos:position pos:line="173" pos:column="49"/></operator> <name pos:line="173" pos:column="50">subfeature<pos:position pos:line="173" pos:column="60"/></name></expr>;<pos:position pos:line="173" pos:column="61"/></expr_stmt>

				<if pos:line="175" pos:column="33">if <condition pos:line="175" pos:column="36">(<expr><name pos:line="175" pos:column="37">first_feature<pos:position pos:line="175" pos:column="50"/></name> <operator pos:line="175" pos:column="51">==<pos:position pos:line="175" pos:column="53"/></operator> <name pos:line="175" pos:column="54">NULL<pos:position pos:line="175" pos:column="58"/></name></expr>)<pos:position pos:line="175" pos:column="59"/></condition><then pos:line="175" pos:column="59">
					<block type="pseudo"><expr_stmt><expr><name pos:line="176" pos:column="41">first_feature<pos:position pos:line="176" pos:column="54"/></name> <operator pos:line="176" pos:column="55">=<pos:position pos:line="176" pos:column="56"/></operator> <name pos:line="176" pos:column="57">fl<pos:position pos:line="176" pos:column="59"/></name></expr>;<pos:position pos:line="176" pos:column="60"/></expr_stmt></block></then>
				<else pos:line="177" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><name><name pos:line="178" pos:column="41">last_feature<pos:position pos:line="178" pos:column="53"/></name><operator pos:line="178" pos:column="53">-&gt;<pos:position pos:line="178" pos:column="58"/></operator><name pos:line="178" pos:column="55">next<pos:position pos:line="178" pos:column="59"/></name></name> <operator pos:line="178" pos:column="60">=<pos:position pos:line="178" pos:column="61"/></operator> <name pos:line="178" pos:column="62">fl<pos:position pos:line="178" pos:column="64"/></name></expr>;<pos:position pos:line="178" pos:column="65"/></expr_stmt></block></else></if>
				<expr_stmt><expr><name pos:line="179" pos:column="33">last_feature<pos:position pos:line="179" pos:column="45"/></name>  <operator pos:line="179" pos:column="47">=<pos:position pos:line="179" pos:column="48"/></operator> <name pos:line="179" pos:column="49">fl<pos:position pos:line="179" pos:column="51"/></name></expr>;<pos:position pos:line="179" pos:column="52"/></expr_stmt>
			}<pos:position pos:line="180" pos:column="26"/></block></while> <comment type="block" pos:line="180" pos:column="27">/* while (subfeature) */</comment>
		}<pos:position pos:line="181" pos:column="18"/></block></while> <comment type="block" pos:line="181" pos:column="19">/* while (feature) */</comment>
	}<pos:position pos:line="182" pos:column="10"/></block></while> <comment type="block" pos:line="182" pos:column="11">/* while (chip) */</comment>
<cpp:endif pos:line="183" pos:column="1">#<cpp:directive pos:line="183" pos:column="2">endif<pos:position pos:line="183" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="183" pos:column="8">/* (SENSORS_API_VERSION &gt;= 0x400) &amp;&amp; (SENSORS_API_VERSION &lt; 0x500) */</comment>

	<if pos:line="185" pos:column="9">if <condition pos:line="185" pos:column="12">(<expr><name pos:line="185" pos:column="13">first_feature<pos:position pos:line="185" pos:column="26"/></name> <operator pos:line="185" pos:column="27">==<pos:position pos:line="185" pos:column="29"/></operator> <name pos:line="185" pos:column="30">NULL<pos:position pos:line="185" pos:column="34"/></name></expr>)<pos:position pos:line="185" pos:column="35"/></condition><then pos:line="185" pos:column="35">
	<block pos:line="186" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="187" pos:column="17">sensors_cleanup<pos:position pos:line="187" pos:column="32"/></name> <argument_list pos:line="187" pos:column="33">()<pos:position pos:line="187" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="188" pos:column="17">INFO<pos:position pos:line="188" pos:column="21"/></name> <argument_list pos:line="188" pos:column="22">(<argument><expr><literal type="string" pos:line="188" pos:column="23">"sensors plugin: lm_sensors reports no "<pos:position pos:line="188" pos:column="63"/></literal>
				<literal type="string" pos:line="189" pos:column="33">"features. Data will not be collected."<pos:position pos:line="189" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="189" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="74"/></expr_stmt>
		<return pos:line="190" pos:column="17">return <expr><operator pos:line="190" pos:column="24">(<pos:position pos:line="190" pos:column="25"/></operator><operator pos:line="190" pos:column="25">-<pos:position pos:line="190" pos:column="26"/></operator><literal type="number" pos:line="190" pos:column="26">1<pos:position pos:line="190" pos:column="27"/></literal><operator pos:line="190" pos:column="27">)<pos:position pos:line="190" pos:column="28"/></operator></expr>;<pos:position pos:line="190" pos:column="29"/></return>
	}<pos:position pos:line="191" pos:column="10"/></block></then></if>

	<return pos:line="193" pos:column="9">return <expr><operator pos:line="193" pos:column="16">(<pos:position pos:line="193" pos:column="17"/></operator><literal type="number" pos:line="193" pos:column="17">0<pos:position pos:line="193" pos:column="18"/></literal><operator pos:line="193" pos:column="18">)<pos:position pos:line="193" pos:column="19"/></operator></expr>;<pos:position pos:line="193" pos:column="20"/></return>
}<pos:position pos:line="194" pos:column="2"/></block></function></unit>

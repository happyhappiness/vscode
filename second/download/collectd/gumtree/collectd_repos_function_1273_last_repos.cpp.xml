<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1273_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">nreftostr<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">uint32_t<pos:position pos:line="1" pos:column="31"/></name></type> <name pos:line="1" pos:column="32">nrefid<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">p_buf<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">size_t<pos:position pos:line="1" pos:column="59"/></name></type> <name pos:line="1" pos:column="60">p_buf_size<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list> <block pos:line="1" pos:column="72">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">size_t<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">j<pos:position pos:line="2" pos:column="11"/></name> <init pos:line="2" pos:column="12">= <expr><literal type="number" pos:line="2" pos:column="14">0<pos:position pos:line="2" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="2" pos:column="16"/></decl_stmt>

  <for pos:line="4" pos:column="3">for <control pos:line="4" pos:column="7">(<init><decl><type><name pos:line="4" pos:column="8">int<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">i<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><literal type="number" pos:line="4" pos:column="16">0<pos:position pos:line="4" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="18"/></init> <condition><expr><name pos:line="4" pos:column="19">i<pos:position pos:line="4" pos:column="20"/></name> <operator pos:line="4" pos:column="21">&lt;<pos:position pos:line="4" pos:column="25"/></operator> <literal type="number" pos:line="4" pos:column="23">4<pos:position pos:line="4" pos:column="24"/></literal></expr>;<pos:position pos:line="4" pos:column="25"/></condition> <incr><expr><name pos:line="4" pos:column="26">i<pos:position pos:line="4" pos:column="27"/></name><operator pos:line="4" pos:column="27">++<pos:position pos:line="4" pos:column="29"/></operator></expr></incr>)<pos:position pos:line="4" pos:column="30"/></control> <block pos:line="4" pos:column="31">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">c<pos:position pos:line="5" pos:column="10"/></name> <init pos:line="5" pos:column="11">= <expr><call><name pos:line="5" pos:column="13">ntohl<pos:position pos:line="5" pos:column="18"/></name><argument_list pos:line="5" pos:column="18">(<argument><expr><name pos:line="5" pos:column="19">nrefid<pos:position pos:line="5" pos:column="25"/></name></expr></argument>)<pos:position pos:line="5" pos:column="26"/></argument_list></call> <operator pos:line="5" pos:column="27">&lt;&lt;<pos:position pos:line="5" pos:column="35"/></operator> <name pos:line="5" pos:column="30">i<pos:position pos:line="5" pos:column="31"/></name> <operator pos:line="5" pos:column="32">*<pos:position pos:line="5" pos:column="33"/></operator> <literal type="number" pos:line="5" pos:column="34">8<pos:position pos:line="5" pos:column="35"/></literal> <operator pos:line="5" pos:column="36">&gt;&gt;<pos:position pos:line="5" pos:column="41"/></operator> <literal type="number" pos:line="5" pos:column="39">24<pos:position pos:line="5" pos:column="41"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="42"/></decl_stmt>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">!<pos:position pos:line="6" pos:column="10"/></operator><call><name pos:line="6" pos:column="10">isalnum<pos:position pos:line="6" pos:column="17"/></name><argument_list pos:line="6" pos:column="17">(<argument><expr><name pos:line="6" pos:column="18">c<pos:position pos:line="6" pos:column="19"/></name></expr></argument>)<pos:position pos:line="6" pos:column="20"/></argument_list></call> <operator pos:line="6" pos:column="21">||<pos:position pos:line="6" pos:column="23"/></operator> <name pos:line="6" pos:column="24">j<pos:position pos:line="6" pos:column="25"/></name> <operator pos:line="6" pos:column="26">+<pos:position pos:line="6" pos:column="27"/></operator> <literal type="number" pos:line="6" pos:column="28">1<pos:position pos:line="6" pos:column="29"/></literal> <operator pos:line="6" pos:column="30">&gt;=<pos:position pos:line="6" pos:column="35"/></operator> <name pos:line="6" pos:column="33">p_buf_size<pos:position pos:line="6" pos:column="43"/></name></expr>)<pos:position pos:line="6" pos:column="44"/></condition><then pos:line="6" pos:column="44">
      <block type="pseudo"><continue pos:line="7" pos:column="7">continue;<pos:position pos:line="7" pos:column="16"/></continue></block></then></if>
    <expr_stmt><expr><name><name pos:line="8" pos:column="5">p_buf<pos:position pos:line="8" pos:column="10"/></name><index pos:line="8" pos:column="10">[<expr><name pos:line="8" pos:column="11">j<pos:position pos:line="8" pos:column="12"/></name><operator pos:line="8" pos:column="12">++<pos:position pos:line="8" pos:column="14"/></operator></expr>]<pos:position pos:line="8" pos:column="15"/></index></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <name pos:line="8" pos:column="18">c<pos:position pos:line="8" pos:column="19"/></name></expr>;<pos:position pos:line="8" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="9" pos:column="4"/></block></for>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">j<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">&lt;<pos:position pos:line="10" pos:column="13"/></operator> <name pos:line="10" pos:column="11">p_buf_size<pos:position pos:line="10" pos:column="21"/></name></expr>)<pos:position pos:line="10" pos:column="22"/></condition><then pos:line="10" pos:column="22">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="11" pos:column="5">p_buf<pos:position pos:line="11" pos:column="10"/></name><index pos:line="11" pos:column="10">[<expr><name pos:line="11" pos:column="11">j<pos:position pos:line="11" pos:column="12"/></name></expr>]<pos:position pos:line="11" pos:column="13"/></index></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <literal type="char" pos:line="11" pos:column="16">'\0'<pos:position pos:line="11" pos:column="20"/></literal></expr>;<pos:position pos:line="11" pos:column="21"/></expr_stmt></block></then></if>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

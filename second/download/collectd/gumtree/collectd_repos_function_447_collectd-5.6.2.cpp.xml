<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_447_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">csnmp_config_add_data<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">oconfig_item_t<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">ci<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list> <block pos:line="1" pos:column="54">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">data_definition_t<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name pos:line="2" pos:column="22">dd<pos:position pos:line="2" pos:column="24"/></name></decl>;<pos:position pos:line="2" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">status<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><literal type="number" pos:line="3" pos:column="16">0<pos:position pos:line="3" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>

  <expr_stmt><expr><name pos:line="5" pos:column="3">dd<pos:position pos:line="5" pos:column="5"/></name> <operator pos:line="5" pos:column="6">=<pos:position pos:line="5" pos:column="7"/></operator> <call><name pos:line="5" pos:column="8">calloc<pos:position pos:line="5" pos:column="14"/></name><argument_list pos:line="5" pos:column="14">(<argument><expr><literal type="number" pos:line="5" pos:column="15">1<pos:position pos:line="5" pos:column="16"/></literal></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="18">sizeof<argument_list pos:line="5" pos:column="24">(<argument><expr><operator pos:line="5" pos:column="25">*<pos:position pos:line="5" pos:column="26"/></operator><name pos:line="5" pos:column="26">dd<pos:position pos:line="5" pos:column="28"/></name></expr></argument>)<pos:position pos:line="5" pos:column="29"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="31"/></expr_stmt>
  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">dd<pos:position pos:line="6" pos:column="9"/></name> <operator pos:line="6" pos:column="10">==<pos:position pos:line="6" pos:column="12"/></operator> <name pos:line="6" pos:column="13">NULL<pos:position pos:line="6" pos:column="17"/></name></expr>)<pos:position pos:line="6" pos:column="18"/></condition><then pos:line="6" pos:column="18">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><operator pos:line="7" pos:column="12">(<pos:position pos:line="7" pos:column="13"/></operator><operator pos:line="7" pos:column="13">-<pos:position pos:line="7" pos:column="14"/></operator><literal type="number" pos:line="7" pos:column="14">1<pos:position pos:line="7" pos:column="15"/></literal><operator pos:line="7" pos:column="15">)<pos:position pos:line="7" pos:column="16"/></operator></expr>;<pos:position pos:line="7" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="9" pos:column="3">status<pos:position pos:line="9" pos:column="9"/></name> <operator pos:line="9" pos:column="10">=<pos:position pos:line="9" pos:column="11"/></operator> <call><name pos:line="9" pos:column="12">cf_util_get_string<pos:position pos:line="9" pos:column="30"/></name><argument_list pos:line="9" pos:column="30">(<argument><expr><name pos:line="9" pos:column="31">ci<pos:position pos:line="9" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="35">&amp;<pos:position pos:line="9" pos:column="40"/></operator><name><name pos:line="9" pos:column="36">dd<pos:position pos:line="9" pos:column="38"/></name><operator pos:line="9" pos:column="38">-&gt;<pos:position pos:line="9" pos:column="43"/></operator><name pos:line="9" pos:column="40">name<pos:position pos:line="9" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="46"/></expr_stmt>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">status<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">!=<pos:position pos:line="10" pos:column="16"/></operator> <literal type="number" pos:line="10" pos:column="17">0<pos:position pos:line="10" pos:column="18"/></literal></expr>)<pos:position pos:line="10" pos:column="19"/></condition><then pos:line="10" pos:column="19"> <block pos:line="10" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">free<pos:position pos:line="11" pos:column="9"/></name><argument_list pos:line="11" pos:column="9">(<argument><expr><name pos:line="11" pos:column="10">dd<pos:position pos:line="11" pos:column="12"/></name></expr></argument>)<pos:position pos:line="11" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="14"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">(<pos:position pos:line="12" pos:column="13"/></operator><operator pos:line="12" pos:column="13">-<pos:position pos:line="12" pos:column="14"/></operator><literal type="number" pos:line="12" pos:column="14">1<pos:position pos:line="12" pos:column="15"/></literal><operator pos:line="12" pos:column="15">)<pos:position pos:line="12" pos:column="16"/></operator></expr>;<pos:position pos:line="12" pos:column="17"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="15" pos:column="3">dd<pos:position pos:line="15" pos:column="5"/></name><operator pos:line="15" pos:column="5">-&gt;<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="7">scale<pos:position pos:line="15" pos:column="12"/></name></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <literal type="number" pos:line="15" pos:column="15">1.0<pos:position pos:line="15" pos:column="18"/></literal></expr>;<pos:position pos:line="15" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">dd<pos:position pos:line="16" pos:column="5"/></name><operator pos:line="16" pos:column="5">-&gt;<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="7">shift<pos:position pos:line="16" pos:column="12"/></name></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <literal type="number" pos:line="16" pos:column="15">0.0<pos:position pos:line="16" pos:column="18"/></literal></expr>;<pos:position pos:line="16" pos:column="19"/></expr_stmt>

  <for pos:line="18" pos:column="3">for <control pos:line="18" pos:column="7">(<init><decl><type><name pos:line="18" pos:column="8">int<pos:position pos:line="18" pos:column="11"/></name></type> <name pos:line="18" pos:column="12">i<pos:position pos:line="18" pos:column="13"/></name> <init pos:line="18" pos:column="14">= <expr><literal type="number" pos:line="18" pos:column="16">0<pos:position pos:line="18" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="18" pos:column="18"/></init> <condition><expr><name pos:line="18" pos:column="19">i<pos:position pos:line="18" pos:column="20"/></name> <operator pos:line="18" pos:column="21">&lt;<pos:position pos:line="18" pos:column="25"/></operator> <name><name pos:line="18" pos:column="23">ci<pos:position pos:line="18" pos:column="25"/></name><operator pos:line="18" pos:column="25">-&gt;<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="27">children_num<pos:position pos:line="18" pos:column="39"/></name></name></expr>;<pos:position pos:line="18" pos:column="40"/></condition> <incr><expr><name pos:line="18" pos:column="41">i<pos:position pos:line="18" pos:column="42"/></name><operator pos:line="18" pos:column="42">++<pos:position pos:line="18" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="45"/></control> <block pos:line="18" pos:column="46">{
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">oconfig_item_t<pos:position pos:line="19" pos:column="19"/></name> <modifier pos:line="19" pos:column="20">*<pos:position pos:line="19" pos:column="21"/></modifier></type><name pos:line="19" pos:column="21">option<pos:position pos:line="19" pos:column="27"/></name> <init pos:line="19" pos:column="28">= <expr><name><name pos:line="19" pos:column="30">ci<pos:position pos:line="19" pos:column="32"/></name><operator pos:line="19" pos:column="32">-&gt;<pos:position pos:line="19" pos:column="37"/></operator><name pos:line="19" pos:column="34">children<pos:position pos:line="19" pos:column="42"/></name></name> <operator pos:line="19" pos:column="43">+<pos:position pos:line="19" pos:column="44"/></operator> <name pos:line="19" pos:column="45">i<pos:position pos:line="19" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="47"/></decl_stmt>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><call><name pos:line="21" pos:column="9">strcasecmp<pos:position pos:line="21" pos:column="19"/></name><argument_list pos:line="21" pos:column="19">(<argument><expr><literal type="string" pos:line="21" pos:column="20">"Type"<pos:position pos:line="21" pos:column="26"/></literal></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="28">option<pos:position pos:line="21" pos:column="34"/></name><operator pos:line="21" pos:column="34">-&gt;<pos:position pos:line="21" pos:column="39"/></operator><name pos:line="21" pos:column="36">key<pos:position pos:line="21" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="40"/></argument_list></call> <operator pos:line="21" pos:column="41">==<pos:position pos:line="21" pos:column="43"/></operator> <literal type="number" pos:line="21" pos:column="44">0<pos:position pos:line="21" pos:column="45"/></literal></expr>)<pos:position pos:line="21" pos:column="46"/></condition><then pos:line="21" pos:column="46">
      <block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="7">status<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">=<pos:position pos:line="22" pos:column="15"/></operator> <call><name pos:line="22" pos:column="16">cf_util_get_string<pos:position pos:line="22" pos:column="34"/></name><argument_list pos:line="22" pos:column="34">(<argument><expr><name pos:line="22" pos:column="35">option<pos:position pos:line="22" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="43">&amp;<pos:position pos:line="22" pos:column="48"/></operator><name><name pos:line="22" pos:column="44">dd<pos:position pos:line="22" pos:column="46"/></name><operator pos:line="22" pos:column="46">-&gt;<pos:position pos:line="22" pos:column="51"/></operator><name pos:line="22" pos:column="48">type<pos:position pos:line="22" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="54"/></expr_stmt></block></then>
    <elseif pos:line="23" pos:column="5">else <if pos:line="23" pos:column="10">if <condition pos:line="23" pos:column="13">(<expr><call><name pos:line="23" pos:column="14">strcasecmp<pos:position pos:line="23" pos:column="24"/></name><argument_list pos:line="23" pos:column="24">(<argument><expr><literal type="string" pos:line="23" pos:column="25">"Table"<pos:position pos:line="23" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="34">option<pos:position pos:line="23" pos:column="40"/></name><operator pos:line="23" pos:column="40">-&gt;<pos:position pos:line="23" pos:column="45"/></operator><name pos:line="23" pos:column="42">key<pos:position pos:line="23" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="46"/></argument_list></call> <operator pos:line="23" pos:column="47">==<pos:position pos:line="23" pos:column="49"/></operator> <literal type="number" pos:line="23" pos:column="50">0<pos:position pos:line="23" pos:column="51"/></literal></expr>)<pos:position pos:line="23" pos:column="52"/></condition><then pos:line="23" pos:column="52">
      <block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="7">status<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">=<pos:position pos:line="24" pos:column="15"/></operator> <call><name pos:line="24" pos:column="16">cf_util_get_boolean<pos:position pos:line="24" pos:column="35"/></name><argument_list pos:line="24" pos:column="35">(<argument><expr><name pos:line="24" pos:column="36">option<pos:position pos:line="24" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="44">&amp;<pos:position pos:line="24" pos:column="49"/></operator><name><name pos:line="24" pos:column="45">dd<pos:position pos:line="24" pos:column="47"/></name><operator pos:line="24" pos:column="47">-&gt;<pos:position pos:line="24" pos:column="52"/></operator><name pos:line="24" pos:column="49">is_table<pos:position pos:line="24" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="59"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="25" pos:column="5">else <if pos:line="25" pos:column="10">if <condition pos:line="25" pos:column="13">(<expr><call><name pos:line="25" pos:column="14">strcasecmp<pos:position pos:line="25" pos:column="24"/></name><argument_list pos:line="25" pos:column="24">(<argument><expr><literal type="string" pos:line="25" pos:column="25">"Instance"<pos:position pos:line="25" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="37">option<pos:position pos:line="25" pos:column="43"/></name><operator pos:line="25" pos:column="43">-&gt;<pos:position pos:line="25" pos:column="48"/></operator><name pos:line="25" pos:column="45">key<pos:position pos:line="25" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="49"/></argument_list></call> <operator pos:line="25" pos:column="50">==<pos:position pos:line="25" pos:column="52"/></operator> <literal type="number" pos:line="25" pos:column="53">0<pos:position pos:line="25" pos:column="54"/></literal></expr>)<pos:position pos:line="25" pos:column="55"/></condition><then pos:line="25" pos:column="55">
      <block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="7">status<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">=<pos:position pos:line="26" pos:column="15"/></operator> <call><name pos:line="26" pos:column="16">csnmp_config_add_data_instance<pos:position pos:line="26" pos:column="46"/></name><argument_list pos:line="26" pos:column="46">(<argument><expr><name pos:line="26" pos:column="47">dd<pos:position pos:line="26" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="51">option<pos:position pos:line="26" pos:column="57"/></name></expr></argument>)<pos:position pos:line="26" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="59"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="27" pos:column="5">else <if pos:line="27" pos:column="10">if <condition pos:line="27" pos:column="13">(<expr><call><name pos:line="27" pos:column="14">strcasecmp<pos:position pos:line="27" pos:column="24"/></name><argument_list pos:line="27" pos:column="24">(<argument><expr><literal type="string" pos:line="27" pos:column="25">"InstancePrefix"<pos:position pos:line="27" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="43">option<pos:position pos:line="27" pos:column="49"/></name><operator pos:line="27" pos:column="49">-&gt;<pos:position pos:line="27" pos:column="54"/></operator><name pos:line="27" pos:column="51">key<pos:position pos:line="27" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="55"/></argument_list></call> <operator pos:line="27" pos:column="56">==<pos:position pos:line="27" pos:column="58"/></operator> <literal type="number" pos:line="27" pos:column="59">0<pos:position pos:line="27" pos:column="60"/></literal></expr>)<pos:position pos:line="27" pos:column="61"/></condition><then pos:line="27" pos:column="61">
      <block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="7">status<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">=<pos:position pos:line="28" pos:column="15"/></operator> <call><name pos:line="28" pos:column="16">csnmp_config_add_data_instance_prefix<pos:position pos:line="28" pos:column="53"/></name><argument_list pos:line="28" pos:column="53">(<argument><expr><name pos:line="28" pos:column="54">dd<pos:position pos:line="28" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="58">option<pos:position pos:line="28" pos:column="64"/></name></expr></argument>)<pos:position pos:line="28" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="66"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="29" pos:column="5">else <if pos:line="29" pos:column="10">if <condition pos:line="29" pos:column="13">(<expr><call><name pos:line="29" pos:column="14">strcasecmp<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">(<argument><expr><literal type="string" pos:line="29" pos:column="25">"Values"<pos:position pos:line="29" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="35">option<pos:position pos:line="29" pos:column="41"/></name><operator pos:line="29" pos:column="41">-&gt;<pos:position pos:line="29" pos:column="46"/></operator><name pos:line="29" pos:column="43">key<pos:position pos:line="29" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="47"/></argument_list></call> <operator pos:line="29" pos:column="48">==<pos:position pos:line="29" pos:column="50"/></operator> <literal type="number" pos:line="29" pos:column="51">0<pos:position pos:line="29" pos:column="52"/></literal></expr>)<pos:position pos:line="29" pos:column="53"/></condition><then pos:line="29" pos:column="53">
      <block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="7">status<pos:position pos:line="30" pos:column="13"/></name> <operator pos:line="30" pos:column="14">=<pos:position pos:line="30" pos:column="15"/></operator> <call><name pos:line="30" pos:column="16">csnmp_config_add_data_values<pos:position pos:line="30" pos:column="44"/></name><argument_list pos:line="30" pos:column="44">(<argument><expr><name pos:line="30" pos:column="45">dd<pos:position pos:line="30" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="49">option<pos:position pos:line="30" pos:column="55"/></name></expr></argument>)<pos:position pos:line="30" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="57"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="31" pos:column="5">else <if pos:line="31" pos:column="10">if <condition pos:line="31" pos:column="13">(<expr><call><name pos:line="31" pos:column="14">strcasecmp<pos:position pos:line="31" pos:column="24"/></name><argument_list pos:line="31" pos:column="24">(<argument><expr><literal type="string" pos:line="31" pos:column="25">"Shift"<pos:position pos:line="31" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="34">option<pos:position pos:line="31" pos:column="40"/></name><operator pos:line="31" pos:column="40">-&gt;<pos:position pos:line="31" pos:column="45"/></operator><name pos:line="31" pos:column="42">key<pos:position pos:line="31" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="46"/></argument_list></call> <operator pos:line="31" pos:column="47">==<pos:position pos:line="31" pos:column="49"/></operator> <literal type="number" pos:line="31" pos:column="50">0<pos:position pos:line="31" pos:column="51"/></literal></expr>)<pos:position pos:line="31" pos:column="52"/></condition><then pos:line="31" pos:column="52">
      <block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="7">status<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">=<pos:position pos:line="32" pos:column="15"/></operator> <call><name pos:line="32" pos:column="16">cf_util_get_double<pos:position pos:line="32" pos:column="34"/></name><argument_list pos:line="32" pos:column="34">(<argument><expr><name pos:line="32" pos:column="35">option<pos:position pos:line="32" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="43">&amp;<pos:position pos:line="32" pos:column="48"/></operator><name><name pos:line="32" pos:column="44">dd<pos:position pos:line="32" pos:column="46"/></name><operator pos:line="32" pos:column="46">-&gt;<pos:position pos:line="32" pos:column="51"/></operator><name pos:line="32" pos:column="48">shift<pos:position pos:line="32" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="55"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="33" pos:column="5">else <if pos:line="33" pos:column="10">if <condition pos:line="33" pos:column="13">(<expr><call><name pos:line="33" pos:column="14">strcasecmp<pos:position pos:line="33" pos:column="24"/></name><argument_list pos:line="33" pos:column="24">(<argument><expr><literal type="string" pos:line="33" pos:column="25">"Scale"<pos:position pos:line="33" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="34">option<pos:position pos:line="33" pos:column="40"/></name><operator pos:line="33" pos:column="40">-&gt;<pos:position pos:line="33" pos:column="45"/></operator><name pos:line="33" pos:column="42">key<pos:position pos:line="33" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="46"/></argument_list></call> <operator pos:line="33" pos:column="47">==<pos:position pos:line="33" pos:column="49"/></operator> <literal type="number" pos:line="33" pos:column="50">0<pos:position pos:line="33" pos:column="51"/></literal></expr>)<pos:position pos:line="33" pos:column="52"/></condition><then pos:line="33" pos:column="52">
      <block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="7">status<pos:position pos:line="34" pos:column="13"/></name> <operator pos:line="34" pos:column="14">=<pos:position pos:line="34" pos:column="15"/></operator> <call><name pos:line="34" pos:column="16">cf_util_get_double<pos:position pos:line="34" pos:column="34"/></name><argument_list pos:line="34" pos:column="34">(<argument><expr><name pos:line="34" pos:column="35">option<pos:position pos:line="34" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="43">&amp;<pos:position pos:line="34" pos:column="48"/></operator><name><name pos:line="34" pos:column="44">dd<pos:position pos:line="34" pos:column="46"/></name><operator pos:line="34" pos:column="46">-&gt;<pos:position pos:line="34" pos:column="51"/></operator><name pos:line="34" pos:column="48">scale<pos:position pos:line="34" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="55"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="35" pos:column="5">else <if pos:line="35" pos:column="10">if <condition pos:line="35" pos:column="13">(<expr><call><name pos:line="35" pos:column="14">strcasecmp<pos:position pos:line="35" pos:column="24"/></name><argument_list pos:line="35" pos:column="24">(<argument><expr><literal type="string" pos:line="35" pos:column="25">"Ignore"<pos:position pos:line="35" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="35">option<pos:position pos:line="35" pos:column="41"/></name><operator pos:line="35" pos:column="41">-&gt;<pos:position pos:line="35" pos:column="46"/></operator><name pos:line="35" pos:column="43">key<pos:position pos:line="35" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="47"/></argument_list></call> <operator pos:line="35" pos:column="48">==<pos:position pos:line="35" pos:column="50"/></operator> <literal type="number" pos:line="35" pos:column="51">0<pos:position pos:line="35" pos:column="52"/></literal></expr>)<pos:position pos:line="35" pos:column="53"/></condition><then pos:line="35" pos:column="53">
      <block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="7">status<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">=<pos:position pos:line="36" pos:column="15"/></operator> <call><name pos:line="36" pos:column="16">csnmp_config_add_data_blacklist<pos:position pos:line="36" pos:column="47"/></name><argument_list pos:line="36" pos:column="47">(<argument><expr><name pos:line="36" pos:column="48">dd<pos:position pos:line="36" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="52">option<pos:position pos:line="36" pos:column="58"/></name></expr></argument>)<pos:position pos:line="36" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="60"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="37" pos:column="5">else <if pos:line="37" pos:column="10">if <condition pos:line="37" pos:column="13">(<expr><call><name pos:line="37" pos:column="14">strcasecmp<pos:position pos:line="37" pos:column="24"/></name><argument_list pos:line="37" pos:column="24">(<argument><expr><literal type="string" pos:line="37" pos:column="25">"InvertMatch"<pos:position pos:line="37" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="40">option<pos:position pos:line="37" pos:column="46"/></name><operator pos:line="37" pos:column="46">-&gt;<pos:position pos:line="37" pos:column="51"/></operator><name pos:line="37" pos:column="48">key<pos:position pos:line="37" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="52"/></argument_list></call> <operator pos:line="37" pos:column="53">==<pos:position pos:line="37" pos:column="55"/></operator> <literal type="number" pos:line="37" pos:column="56">0<pos:position pos:line="37" pos:column="57"/></literal></expr>)<pos:position pos:line="37" pos:column="58"/></condition><then pos:line="37" pos:column="58">
      <block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="7">status<pos:position pos:line="38" pos:column="13"/></name> <operator pos:line="38" pos:column="14">=<pos:position pos:line="38" pos:column="15"/></operator> <call><name pos:line="38" pos:column="16">csnmp_config_add_data_blacklist_match_inverted<pos:position pos:line="38" pos:column="62"/></name><argument_list pos:line="38" pos:column="62">(<argument><expr><name pos:line="38" pos:column="63">dd<pos:position pos:line="38" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="67">option<pos:position pos:line="38" pos:column="73"/></name></expr></argument>)<pos:position pos:line="38" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="75"/></expr_stmt></block></then></if></elseif>
    <else pos:line="39" pos:column="5">else <block pos:line="39" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="40" pos:column="7">WARNING<pos:position pos:line="40" pos:column="14"/></name><argument_list pos:line="40" pos:column="14">(<argument><expr><literal type="string" pos:line="40" pos:column="15">"snmp plugin: Option `%s' not allowed here."<pos:position pos:line="40" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="61">option<pos:position pos:line="40" pos:column="67"/></name><operator pos:line="40" pos:column="67">-&gt;<pos:position pos:line="40" pos:column="72"/></operator><name pos:line="40" pos:column="69">key<pos:position pos:line="40" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="74"/></expr_stmt>
      <expr_stmt><expr><name pos:line="41" pos:column="7">status<pos:position pos:line="41" pos:column="13"/></name> <operator pos:line="41" pos:column="14">=<pos:position pos:line="41" pos:column="15"/></operator> <operator pos:line="41" pos:column="16">-<pos:position pos:line="41" pos:column="17"/></operator><literal type="number" pos:line="41" pos:column="17">1<pos:position pos:line="41" pos:column="18"/></literal></expr>;<pos:position pos:line="41" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="42" pos:column="6"/></block></else></if>

    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><name pos:line="44" pos:column="9">status<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">!=<pos:position pos:line="44" pos:column="18"/></operator> <literal type="number" pos:line="44" pos:column="19">0<pos:position pos:line="44" pos:column="20"/></literal></expr>)<pos:position pos:line="44" pos:column="21"/></condition><then pos:line="44" pos:column="21">
      <block type="pseudo"><break pos:line="45" pos:column="7">break;<pos:position pos:line="45" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="46" pos:column="4"/></block></for> <comment type="block" pos:line="46" pos:column="5">/* for (ci-&gt;children) */</comment>

  <while pos:line="48" pos:column="3">while <condition pos:line="48" pos:column="9">(<expr><name pos:line="48" pos:column="10">status<pos:position pos:line="48" pos:column="16"/></name> <operator pos:line="48" pos:column="17">==<pos:position pos:line="48" pos:column="19"/></operator> <literal type="number" pos:line="48" pos:column="20">0<pos:position pos:line="48" pos:column="21"/></literal></expr>)<pos:position pos:line="48" pos:column="22"/></condition> <block pos:line="48" pos:column="23">{
    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><name><name pos:line="49" pos:column="9">dd<pos:position pos:line="49" pos:column="11"/></name><operator pos:line="49" pos:column="11">-&gt;<pos:position pos:line="49" pos:column="16"/></operator><name pos:line="49" pos:column="13">type<pos:position pos:line="49" pos:column="17"/></name></name> <operator pos:line="49" pos:column="18">==<pos:position pos:line="49" pos:column="20"/></operator> <name pos:line="49" pos:column="21">NULL<pos:position pos:line="49" pos:column="25"/></name></expr>)<pos:position pos:line="49" pos:column="26"/></condition><then pos:line="49" pos:column="26"> <block pos:line="49" pos:column="27">{
      <expr_stmt><expr><call><name pos:line="50" pos:column="7">WARNING<pos:position pos:line="50" pos:column="14"/></name><argument_list pos:line="50" pos:column="14">(<argument><expr><literal type="string" pos:line="50" pos:column="15">"snmp plugin: `Type' not given for data `%s'"<pos:position pos:line="50" pos:column="60"/></literal></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="62">dd<pos:position pos:line="50" pos:column="64"/></name><operator pos:line="50" pos:column="64">-&gt;<pos:position pos:line="50" pos:column="69"/></operator><name pos:line="50" pos:column="66">name<pos:position pos:line="50" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="72"/></expr_stmt>
      <expr_stmt><expr><name pos:line="51" pos:column="7">status<pos:position pos:line="51" pos:column="13"/></name> <operator pos:line="51" pos:column="14">=<pos:position pos:line="51" pos:column="15"/></operator> <operator pos:line="51" pos:column="16">-<pos:position pos:line="51" pos:column="17"/></operator><literal type="number" pos:line="51" pos:column="17">1<pos:position pos:line="51" pos:column="18"/></literal></expr>;<pos:position pos:line="51" pos:column="19"/></expr_stmt>
      <break pos:line="52" pos:column="7">break;<pos:position pos:line="52" pos:column="13"/></break>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>
    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><name><name pos:line="54" pos:column="9">dd<pos:position pos:line="54" pos:column="11"/></name><operator pos:line="54" pos:column="11">-&gt;<pos:position pos:line="54" pos:column="16"/></operator><name pos:line="54" pos:column="13">values<pos:position pos:line="54" pos:column="19"/></name></name> <operator pos:line="54" pos:column="20">==<pos:position pos:line="54" pos:column="22"/></operator> <name pos:line="54" pos:column="23">NULL<pos:position pos:line="54" pos:column="27"/></name></expr>)<pos:position pos:line="54" pos:column="28"/></condition><then pos:line="54" pos:column="28"> <block pos:line="54" pos:column="29">{
      <expr_stmt><expr><call><name pos:line="55" pos:column="7">WARNING<pos:position pos:line="55" pos:column="14"/></name><argument_list pos:line="55" pos:column="14">(<argument><expr><literal type="string" pos:line="55" pos:column="15">"snmp plugin: No `Value' given for data `%s'"<pos:position pos:line="55" pos:column="60"/></literal></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="62">dd<pos:position pos:line="55" pos:column="64"/></name><operator pos:line="55" pos:column="64">-&gt;<pos:position pos:line="55" pos:column="69"/></operator><name pos:line="55" pos:column="66">name<pos:position pos:line="55" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="72"/></expr_stmt>
      <expr_stmt><expr><name pos:line="56" pos:column="7">status<pos:position pos:line="56" pos:column="13"/></name> <operator pos:line="56" pos:column="14">=<pos:position pos:line="56" pos:column="15"/></operator> <operator pos:line="56" pos:column="16">-<pos:position pos:line="56" pos:column="17"/></operator><literal type="number" pos:line="56" pos:column="17">1<pos:position pos:line="56" pos:column="18"/></literal></expr>;<pos:position pos:line="56" pos:column="19"/></expr_stmt>
      <break pos:line="57" pos:column="7">break;<pos:position pos:line="57" pos:column="13"/></break>
    }<pos:position pos:line="58" pos:column="6"/></block></then></if>

    <break pos:line="60" pos:column="5">break;<pos:position pos:line="60" pos:column="11"/></break>
  }<pos:position pos:line="61" pos:column="4"/></block></while> <comment type="block" pos:line="61" pos:column="5">/* while (status == 0) */</comment>

  <if pos:line="63" pos:column="3">if <condition pos:line="63" pos:column="6">(<expr><name pos:line="63" pos:column="7">status<pos:position pos:line="63" pos:column="13"/></name> <operator pos:line="63" pos:column="14">!=<pos:position pos:line="63" pos:column="16"/></operator> <literal type="number" pos:line="63" pos:column="17">0<pos:position pos:line="63" pos:column="18"/></literal></expr>)<pos:position pos:line="63" pos:column="19"/></condition><then pos:line="63" pos:column="19"> <block pos:line="63" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="64" pos:column="5">sfree<pos:position pos:line="64" pos:column="10"/></name><argument_list pos:line="64" pos:column="10">(<argument><expr><name><name pos:line="64" pos:column="11">dd<pos:position pos:line="64" pos:column="13"/></name><operator pos:line="64" pos:column="13">-&gt;<pos:position pos:line="64" pos:column="18"/></operator><name pos:line="64" pos:column="15">name<pos:position pos:line="64" pos:column="19"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="65" pos:column="5">sfree<pos:position pos:line="65" pos:column="10"/></name><argument_list pos:line="65" pos:column="10">(<argument><expr><name><name pos:line="65" pos:column="11">dd<pos:position pos:line="65" pos:column="13"/></name><operator pos:line="65" pos:column="13">-&gt;<pos:position pos:line="65" pos:column="18"/></operator><name pos:line="65" pos:column="15">instance_prefix<pos:position pos:line="65" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">sfree<pos:position pos:line="66" pos:column="10"/></name><argument_list pos:line="66" pos:column="10">(<argument><expr><name><name pos:line="66" pos:column="11">dd<pos:position pos:line="66" pos:column="13"/></name><operator pos:line="66" pos:column="13">-&gt;<pos:position pos:line="66" pos:column="18"/></operator><name pos:line="66" pos:column="15">values<pos:position pos:line="66" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">sfree<pos:position pos:line="67" pos:column="10"/></name><argument_list pos:line="67" pos:column="10">(<argument><expr><name><name pos:line="67" pos:column="11">dd<pos:position pos:line="67" pos:column="13"/></name><operator pos:line="67" pos:column="13">-&gt;<pos:position pos:line="67" pos:column="18"/></operator><name pos:line="67" pos:column="15">ignores<pos:position pos:line="67" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="68" pos:column="5">sfree<pos:position pos:line="68" pos:column="10"/></name><argument_list pos:line="68" pos:column="10">(<argument><expr><name pos:line="68" pos:column="11">dd<pos:position pos:line="68" pos:column="13"/></name></expr></argument>)<pos:position pos:line="68" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="15"/></expr_stmt>
    <return pos:line="69" pos:column="5">return <expr><operator pos:line="69" pos:column="12">(<pos:position pos:line="69" pos:column="13"/></operator><operator pos:line="69" pos:column="13">-<pos:position pos:line="69" pos:column="14"/></operator><literal type="number" pos:line="69" pos:column="14">1<pos:position pos:line="69" pos:column="15"/></literal><operator pos:line="69" pos:column="15">)<pos:position pos:line="69" pos:column="16"/></operator></expr>;<pos:position pos:line="69" pos:column="17"/></return>
  }<pos:position pos:line="70" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="72" pos:column="3">DEBUG<pos:position pos:line="72" pos:column="8"/></name><argument_list pos:line="72" pos:column="8">(<argument><expr><literal type="string" pos:line="72" pos:column="9">"snmp plugin: dd = { name = %s, type = %s, is_table = %s, values_len = "<pos:position pos:line="72" pos:column="81"/></literal>
        <literal type="string" pos:line="73" pos:column="9">"%zu }"<pos:position pos:line="73" pos:column="16"/></literal></expr></argument>,
        <argument><expr><name><name pos:line="74" pos:column="9">dd<pos:position pos:line="74" pos:column="11"/></name><operator pos:line="74" pos:column="11">-&gt;<pos:position pos:line="74" pos:column="16"/></operator><name pos:line="74" pos:column="13">name<pos:position pos:line="74" pos:column="17"/></name></name></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="19">dd<pos:position pos:line="74" pos:column="21"/></name><operator pos:line="74" pos:column="21">-&gt;<pos:position pos:line="74" pos:column="26"/></operator><name pos:line="74" pos:column="23">type<pos:position pos:line="74" pos:column="27"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="74" pos:column="29">(<pos:position pos:line="74" pos:column="30"/></operator><name><name pos:line="74" pos:column="30">dd<pos:position pos:line="74" pos:column="32"/></name><operator pos:line="74" pos:column="32">-&gt;<pos:position pos:line="74" pos:column="37"/></operator><name pos:line="74" pos:column="34">is_table<pos:position pos:line="74" pos:column="42"/></name></name> <operator pos:line="74" pos:column="43">!=<pos:position pos:line="74" pos:column="45"/></operator> <literal type="number" pos:line="74" pos:column="46">0<pos:position pos:line="74" pos:column="47"/></literal><operator pos:line="74" pos:column="47">)<pos:position pos:line="74" pos:column="48"/></operator></expr> ?<pos:position pos:line="74" pos:column="50"/></condition><then pos:line="74" pos:column="50"> <expr><literal type="string" pos:line="74" pos:column="51">"true"<pos:position pos:line="74" pos:column="57"/></literal></expr> <pos:position pos:line="74" pos:column="58"/></then><else pos:line="74" pos:column="58">: <expr><literal type="string" pos:line="74" pos:column="60">"false"<pos:position pos:line="74" pos:column="67"/></literal></expr></else></ternary></expr></argument>,
        <argument><expr><name><name pos:line="75" pos:column="9">dd<pos:position pos:line="75" pos:column="11"/></name><operator pos:line="75" pos:column="11">-&gt;<pos:position pos:line="75" pos:column="16"/></operator><name pos:line="75" pos:column="13">values_len<pos:position pos:line="75" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="25"/></expr_stmt>

  <if pos:line="77" pos:column="3">if <condition pos:line="77" pos:column="6">(<expr><name pos:line="77" pos:column="7">data_head<pos:position pos:line="77" pos:column="16"/></name> <operator pos:line="77" pos:column="17">==<pos:position pos:line="77" pos:column="19"/></operator> <name pos:line="77" pos:column="20">NULL<pos:position pos:line="77" pos:column="24"/></name></expr>)<pos:position pos:line="77" pos:column="25"/></condition><then pos:line="77" pos:column="25">
    <block type="pseudo"><expr_stmt><expr><name pos:line="78" pos:column="5">data_head<pos:position pos:line="78" pos:column="14"/></name> <operator pos:line="78" pos:column="15">=<pos:position pos:line="78" pos:column="16"/></operator> <name pos:line="78" pos:column="17">dd<pos:position pos:line="78" pos:column="19"/></name></expr>;<pos:position pos:line="78" pos:column="20"/></expr_stmt></block></then>
  <else pos:line="79" pos:column="3">else <block pos:line="79" pos:column="8">{
    <decl_stmt><decl><type><name pos:line="80" pos:column="5">data_definition_t<pos:position pos:line="80" pos:column="22"/></name> <modifier pos:line="80" pos:column="23">*<pos:position pos:line="80" pos:column="24"/></modifier></type><name pos:line="80" pos:column="24">last<pos:position pos:line="80" pos:column="28"/></name></decl>;<pos:position pos:line="80" pos:column="29"/></decl_stmt>
    <expr_stmt><expr><name pos:line="81" pos:column="5">last<pos:position pos:line="81" pos:column="9"/></name> <operator pos:line="81" pos:column="10">=<pos:position pos:line="81" pos:column="11"/></operator> <name pos:line="81" pos:column="12">data_head<pos:position pos:line="81" pos:column="21"/></name></expr>;<pos:position pos:line="81" pos:column="22"/></expr_stmt>
    <while pos:line="82" pos:column="5">while <condition pos:line="82" pos:column="11">(<expr><name><name pos:line="82" pos:column="12">last<pos:position pos:line="82" pos:column="16"/></name><operator pos:line="82" pos:column="16">-&gt;<pos:position pos:line="82" pos:column="21"/></operator><name pos:line="82" pos:column="18">next<pos:position pos:line="82" pos:column="22"/></name></name> <operator pos:line="82" pos:column="23">!=<pos:position pos:line="82" pos:column="25"/></operator> <name pos:line="82" pos:column="26">NULL<pos:position pos:line="82" pos:column="30"/></name></expr>)<pos:position pos:line="82" pos:column="31"/></condition>
      <block type="pseudo"><expr_stmt><expr><name pos:line="83" pos:column="7">last<pos:position pos:line="83" pos:column="11"/></name> <operator pos:line="83" pos:column="12">=<pos:position pos:line="83" pos:column="13"/></operator> <name><name pos:line="83" pos:column="14">last<pos:position pos:line="83" pos:column="18"/></name><operator pos:line="83" pos:column="18">-&gt;<pos:position pos:line="83" pos:column="23"/></operator><name pos:line="83" pos:column="20">next<pos:position pos:line="83" pos:column="24"/></name></name></expr>;<pos:position pos:line="83" pos:column="25"/></expr_stmt></block></while>
    <expr_stmt><expr><name><name pos:line="84" pos:column="5">last<pos:position pos:line="84" pos:column="9"/></name><operator pos:line="84" pos:column="9">-&gt;<pos:position pos:line="84" pos:column="14"/></operator><name pos:line="84" pos:column="11">next<pos:position pos:line="84" pos:column="15"/></name></name> <operator pos:line="84" pos:column="16">=<pos:position pos:line="84" pos:column="17"/></operator> <name pos:line="84" pos:column="18">dd<pos:position pos:line="84" pos:column="20"/></name></expr>;<pos:position pos:line="84" pos:column="21"/></expr_stmt>
  }<pos:position pos:line="85" pos:column="4"/></block></else></if>

  <return pos:line="87" pos:column="3">return <expr><operator pos:line="87" pos:column="10">(<pos:position pos:line="87" pos:column="11"/></operator><literal type="number" pos:line="87" pos:column="11">0<pos:position pos:line="87" pos:column="12"/></literal><operator pos:line="87" pos:column="12">)<pos:position pos:line="87" pos:column="13"/></operator></expr>;<pos:position pos:line="87" pos:column="14"/></return>
}<pos:position pos:line="88" pos:column="2"/></block></function></unit>

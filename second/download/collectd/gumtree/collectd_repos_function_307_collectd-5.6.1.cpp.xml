<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_307_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">aggregate<pos:position pos:line="1" pos:column="22"/></name> <parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">gauge_t<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">sum_by_state<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list> <comment type="block" pos:line="1" pos:column="47">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
	<for pos:line="3" pos:column="9">for <control pos:line="3" pos:column="13">(<init><decl><type><name pos:line="3" pos:column="14">size_t<pos:position pos:line="3" pos:column="20"/></name></type> <name pos:line="3" pos:column="21">state<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><literal type="number" pos:line="3" pos:column="29">0<pos:position pos:line="3" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="31"/></init> <condition><expr><name pos:line="3" pos:column="32">state<pos:position pos:line="3" pos:column="37"/></name> <operator pos:line="3" pos:column="38">&lt;<pos:position pos:line="3" pos:column="42"/></operator> <name pos:line="3" pos:column="40">COLLECTD_CPU_STATE_MAX<pos:position pos:line="3" pos:column="62"/></name></expr>;<pos:position pos:line="3" pos:column="63"/></condition> <incr><expr><name pos:line="3" pos:column="64">state<pos:position pos:line="3" pos:column="69"/></name><operator pos:line="3" pos:column="69">++<pos:position pos:line="3" pos:column="71"/></operator></expr></incr>)<pos:position pos:line="3" pos:column="72"/></control>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="4" pos:column="17">sum_by_state<pos:position pos:line="4" pos:column="29"/></name><index pos:line="4" pos:column="29">[<expr><name pos:line="4" pos:column="30">state<pos:position pos:line="4" pos:column="35"/></name></expr>]<pos:position pos:line="4" pos:column="36"/></index></name> <operator pos:line="4" pos:column="37">=<pos:position pos:line="4" pos:column="38"/></operator> <name pos:line="4" pos:column="39">NAN<pos:position pos:line="4" pos:column="42"/></name></expr>;<pos:position pos:line="4" pos:column="43"/></expr_stmt></block></for>

	<for pos:line="6" pos:column="9">for <control pos:line="6" pos:column="13">(<init><decl><type><name pos:line="6" pos:column="14">size_t<pos:position pos:line="6" pos:column="20"/></name></type> <name pos:line="6" pos:column="21">cpu_num<pos:position pos:line="6" pos:column="28"/></name> <init pos:line="6" pos:column="29">= <expr><literal type="number" pos:line="6" pos:column="31">0<pos:position pos:line="6" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="33"/></init> <condition><expr><name pos:line="6" pos:column="34">cpu_num<pos:position pos:line="6" pos:column="41"/></name> <operator pos:line="6" pos:column="42">&lt;<pos:position pos:line="6" pos:column="46"/></operator> <name pos:line="6" pos:column="44">global_cpu_num<pos:position pos:line="6" pos:column="58"/></name></expr>;<pos:position pos:line="6" pos:column="59"/></condition> <incr><expr><name pos:line="6" pos:column="60">cpu_num<pos:position pos:line="6" pos:column="67"/></name><operator pos:line="6" pos:column="67">++<pos:position pos:line="6" pos:column="69"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="70"/></control>
	<block pos:line="7" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="8" pos:column="17">cpu_state_t<pos:position pos:line="8" pos:column="28"/></name> <modifier pos:line="8" pos:column="29">*<pos:position pos:line="8" pos:column="30"/></modifier></type><name pos:line="8" pos:column="30">this_cpu_states<pos:position pos:line="8" pos:column="45"/></name> <init pos:line="8" pos:column="46">= <expr><call><name pos:line="8" pos:column="48">get_cpu_state<pos:position pos:line="8" pos:column="61"/></name> <argument_list pos:line="8" pos:column="62">(<argument><expr><name pos:line="8" pos:column="63">cpu_num<pos:position pos:line="8" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="72">0<pos:position pos:line="8" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="75"/></decl_stmt>

		<expr_stmt><expr><name><name pos:line="10" pos:column="17">this_cpu_states<pos:position pos:line="10" pos:column="32"/></name><index pos:line="10" pos:column="32">[<expr><name pos:line="10" pos:column="33">COLLECTD_CPU_STATE_ACTIVE<pos:position pos:line="10" pos:column="58"/></name></expr>]<pos:position pos:line="10" pos:column="59"/></index></name><operator pos:line="10" pos:column="59">.<pos:position pos:line="10" pos:column="60"/></operator><name pos:line="10" pos:column="60">rate<pos:position pos:line="10" pos:column="64"/></name> <operator pos:line="10" pos:column="65">=<pos:position pos:line="10" pos:column="66"/></operator> <name pos:line="10" pos:column="67">NAN<pos:position pos:line="10" pos:column="70"/></name></expr>;<pos:position pos:line="10" pos:column="71"/></expr_stmt>

		<for pos:line="12" pos:column="17">for <control pos:line="12" pos:column="21">(<init><decl><type><name pos:line="12" pos:column="22">size_t<pos:position pos:line="12" pos:column="28"/></name></type> <name pos:line="12" pos:column="29">state<pos:position pos:line="12" pos:column="34"/></name> <init pos:line="12" pos:column="35">= <expr><literal type="number" pos:line="12" pos:column="37">0<pos:position pos:line="12" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="39"/></init> <condition><expr><name pos:line="12" pos:column="40">state<pos:position pos:line="12" pos:column="45"/></name> <operator pos:line="12" pos:column="46">&lt;<pos:position pos:line="12" pos:column="50"/></operator> <name pos:line="12" pos:column="48">COLLECTD_CPU_STATE_ACTIVE<pos:position pos:line="12" pos:column="73"/></name></expr>;<pos:position pos:line="12" pos:column="74"/></condition> <incr><expr><name pos:line="12" pos:column="75">state<pos:position pos:line="12" pos:column="80"/></name><operator pos:line="12" pos:column="80">++<pos:position pos:line="12" pos:column="82"/></operator></expr></incr>)<pos:position pos:line="12" pos:column="83"/></control>
		<block pos:line="13" pos:column="17">{
			<if pos:line="14" pos:column="25">if <condition pos:line="14" pos:column="28">(<expr><operator pos:line="14" pos:column="29">!<pos:position pos:line="14" pos:column="30"/></operator><name><name pos:line="14" pos:column="30">this_cpu_states<pos:position pos:line="14" pos:column="45"/></name><index pos:line="14" pos:column="45">[<expr><name pos:line="14" pos:column="46">state<pos:position pos:line="14" pos:column="51"/></name></expr>]<pos:position pos:line="14" pos:column="52"/></index></name><operator pos:line="14" pos:column="52">.<pos:position pos:line="14" pos:column="53"/></operator><name pos:line="14" pos:column="53">has_value<pos:position pos:line="14" pos:column="62"/></name></expr>)<pos:position pos:line="14" pos:column="63"/></condition><then pos:line="14" pos:column="63">
				<block type="pseudo"><continue pos:line="15" pos:column="33">continue;<pos:position pos:line="15" pos:column="42"/></continue></block></then></if>

			<expr_stmt><expr><call><name pos:line="17" pos:column="25">RATE_ADD<pos:position pos:line="17" pos:column="33"/></name> <argument_list pos:line="17" pos:column="34">(<argument><expr><name><name pos:line="17" pos:column="35">sum_by_state<pos:position pos:line="17" pos:column="47"/></name><index pos:line="17" pos:column="47">[<expr><name pos:line="17" pos:column="48">state<pos:position pos:line="17" pos:column="53"/></name></expr>]<pos:position pos:line="17" pos:column="54"/></index></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="56">this_cpu_states<pos:position pos:line="17" pos:column="71"/></name><index pos:line="17" pos:column="71">[<expr><name pos:line="17" pos:column="72">state<pos:position pos:line="17" pos:column="77"/></name></expr>]<pos:position pos:line="17" pos:column="78"/></index></name><operator pos:line="17" pos:column="78">.<pos:position pos:line="17" pos:column="79"/></operator><name pos:line="17" pos:column="79">rate<pos:position pos:line="17" pos:column="83"/></name></expr></argument>)<pos:position pos:line="17" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="85"/></expr_stmt>
			<if pos:line="18" pos:column="25">if <condition pos:line="18" pos:column="28">(<expr><name pos:line="18" pos:column="29">state<pos:position pos:line="18" pos:column="34"/></name> <operator pos:line="18" pos:column="35">!=<pos:position pos:line="18" pos:column="37"/></operator> <name pos:line="18" pos:column="38">COLLECTD_CPU_STATE_IDLE<pos:position pos:line="18" pos:column="61"/></name></expr>)<pos:position pos:line="18" pos:column="62"/></condition><then pos:line="18" pos:column="62">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="33">RATE_ADD<pos:position pos:line="19" pos:column="41"/></name> <argument_list pos:line="19" pos:column="42">(<argument><expr><name><name pos:line="19" pos:column="43">this_cpu_states<pos:position pos:line="19" pos:column="58"/></name><index pos:line="19" pos:column="58">[<expr><name pos:line="19" pos:column="59">COLLECTD_CPU_STATE_ACTIVE<pos:position pos:line="19" pos:column="84"/></name></expr>]<pos:position pos:line="19" pos:column="85"/></index></name><operator pos:line="19" pos:column="85">.<pos:position pos:line="19" pos:column="86"/></operator><name pos:line="19" pos:column="86">rate<pos:position pos:line="19" pos:column="90"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="92">this_cpu_states<pos:position pos:line="19" pos:column="107"/></name><index pos:line="19" pos:column="107">[<expr><name pos:line="19" pos:column="108">state<pos:position pos:line="19" pos:column="113"/></name></expr>]<pos:position pos:line="19" pos:column="114"/></index></name><operator pos:line="19" pos:column="114">.<pos:position pos:line="19" pos:column="115"/></operator><name pos:line="19" pos:column="115">rate<pos:position pos:line="19" pos:column="119"/></name></expr></argument>)<pos:position pos:line="19" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="121"/></expr_stmt></block></then></if>
		}<pos:position pos:line="20" pos:column="18"/></block></for>

		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><operator pos:line="22" pos:column="21">!<pos:position pos:line="22" pos:column="22"/></operator><call><name pos:line="22" pos:column="22">isnan<pos:position pos:line="22" pos:column="27"/></name> <argument_list pos:line="22" pos:column="28">(<argument><expr><name><name pos:line="22" pos:column="29">this_cpu_states<pos:position pos:line="22" pos:column="44"/></name><index pos:line="22" pos:column="44">[<expr><name pos:line="22" pos:column="45">COLLECTD_CPU_STATE_ACTIVE<pos:position pos:line="22" pos:column="70"/></name></expr>]<pos:position pos:line="22" pos:column="71"/></index></name><operator pos:line="22" pos:column="71">.<pos:position pos:line="22" pos:column="72"/></operator><name pos:line="22" pos:column="72">rate<pos:position pos:line="22" pos:column="76"/></name></expr></argument>)<pos:position pos:line="22" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="78"/></condition><then pos:line="22" pos:column="78">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="23" pos:column="25">this_cpu_states<pos:position pos:line="23" pos:column="40"/></name><index pos:line="23" pos:column="40">[<expr><name pos:line="23" pos:column="41">COLLECTD_CPU_STATE_ACTIVE<pos:position pos:line="23" pos:column="66"/></name></expr>]<pos:position pos:line="23" pos:column="67"/></index></name><operator pos:line="23" pos:column="67">.<pos:position pos:line="23" pos:column="68"/></operator><name pos:line="23" pos:column="68">has_value<pos:position pos:line="23" pos:column="77"/></name> <operator pos:line="23" pos:column="78">=<pos:position pos:line="23" pos:column="79"/></operator> <literal type="number" pos:line="23" pos:column="80">1<pos:position pos:line="23" pos:column="81"/></literal></expr>;<pos:position pos:line="23" pos:column="82"/></expr_stmt></block></then></if>

		<expr_stmt><expr><call><name pos:line="25" pos:column="17">RATE_ADD<pos:position pos:line="25" pos:column="25"/></name> <argument_list pos:line="25" pos:column="26">(<argument><expr><name><name pos:line="25" pos:column="27">sum_by_state<pos:position pos:line="25" pos:column="39"/></name><index pos:line="25" pos:column="39">[<expr><name pos:line="25" pos:column="40">COLLECTD_CPU_STATE_ACTIVE<pos:position pos:line="25" pos:column="65"/></name></expr>]<pos:position pos:line="25" pos:column="66"/></index></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="68">this_cpu_states<pos:position pos:line="25" pos:column="83"/></name><index pos:line="25" pos:column="83">[<expr><name pos:line="25" pos:column="84">COLLECTD_CPU_STATE_ACTIVE<pos:position pos:line="25" pos:column="109"/></name></expr>]<pos:position pos:line="25" pos:column="110"/></index></name><operator pos:line="25" pos:column="110">.<pos:position pos:line="25" pos:column="111"/></operator><name pos:line="25" pos:column="111">rate<pos:position pos:line="25" pos:column="115"/></name></expr></argument>)<pos:position pos:line="25" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="117"/></expr_stmt>
	}<pos:position pos:line="26" pos:column="10"/></block></for>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

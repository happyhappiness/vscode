<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1644_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">pidfile_create<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">void<pos:position pos:line="1" pos:column="31"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list> <block pos:line="1" pos:column="33">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">FILE<pos:position pos:line="2" pos:column="7"/></name> <modifier pos:line="2" pos:column="8">*<pos:position pos:line="2" pos:column="9"/></modifier></type><name pos:line="2" pos:column="9">file<pos:position pos:line="2" pos:column="13"/></name> <init pos:line="2" pos:column="14">= <expr><name pos:line="2" pos:column="16">NULL<pos:position pos:line="2" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="2" pos:column="21"/></decl_stmt>

  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><name pos:line="4" pos:column="7">NULL<pos:position pos:line="4" pos:column="11"/></name> <operator pos:line="4" pos:column="12">==<pos:position pos:line="4" pos:column="14"/></operator> <name pos:line="4" pos:column="15">pidfile<pos:position pos:line="4" pos:column="22"/></name></expr>)<pos:position pos:line="4" pos:column="23"/></condition><then pos:line="4" pos:column="23">
    <block type="pseudo"><expr_stmt><expr><name pos:line="5" pos:column="5">pidfile<pos:position pos:line="5" pos:column="12"/></name> <operator pos:line="5" pos:column="13">=<pos:position pos:line="5" pos:column="14"/></operator> <name pos:line="5" pos:column="15">COLLECTDMON_PIDFILE<pos:position pos:line="5" pos:column="34"/></name></expr>;<pos:position pos:line="5" pos:column="35"/></expr_stmt></block></then></if>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">NULL<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">==<pos:position pos:line="7" pos:column="14"/></operator> <operator pos:line="7" pos:column="15">(<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="16">file<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">=<pos:position pos:line="7" pos:column="22"/></operator> <call><name pos:line="7" pos:column="23">fopen<pos:position pos:line="7" pos:column="28"/></name><argument_list pos:line="7" pos:column="28">(<argument><expr><name pos:line="7" pos:column="29">pidfile<pos:position pos:line="7" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="38">"w"<pos:position pos:line="7" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="42"/></argument_list></call><operator pos:line="7" pos:column="42">)<pos:position pos:line="7" pos:column="43"/></operator></expr>)<pos:position pos:line="7" pos:column="44"/></condition><then pos:line="7" pos:column="44"> <block pos:line="7" pos:column="45">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">syslog<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><name pos:line="8" pos:column="12">LOG_ERR<pos:position pos:line="8" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="21">"Error: couldn't open PID-file (%s) for writing: %s"<pos:position pos:line="8" pos:column="73"/></literal></expr></argument>,
           <argument><expr><name pos:line="9" pos:column="12">pidfile<pos:position pos:line="9" pos:column="19"/></name></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="21">strerror<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><name pos:line="9" pos:column="30">errno<pos:position pos:line="9" pos:column="35"/></name></expr></argument>)<pos:position pos:line="9" pos:column="36"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="38"/></expr_stmt>
    <return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">-<pos:position pos:line="10" pos:column="13"/></operator><literal type="number" pos:line="10" pos:column="13">1<pos:position pos:line="10" pos:column="14"/></literal></expr>;<pos:position pos:line="10" pos:column="15"/></return>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="13" pos:column="3">fprintf<pos:position pos:line="13" pos:column="10"/></name><argument_list pos:line="13" pos:column="10">(<argument><expr><name pos:line="13" pos:column="11">file<pos:position pos:line="13" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="17">"%i\n"<pos:position pos:line="13" pos:column="23"/></literal></expr></argument>, <argument><expr><operator pos:line="13" pos:column="25">(<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="26">int<pos:position pos:line="13" pos:column="29"/></name><operator pos:line="13" pos:column="29">)<pos:position pos:line="13" pos:column="30"/></operator><call><name pos:line="13" pos:column="30">getpid<pos:position pos:line="13" pos:column="36"/></name><argument_list pos:line="13" pos:column="36">()<pos:position pos:line="13" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="14" pos:column="3">fclose<pos:position pos:line="14" pos:column="9"/></name><argument_list pos:line="14" pos:column="9">(<argument><expr><name pos:line="14" pos:column="10">file<pos:position pos:line="14" pos:column="14"/></name></expr></argument>)<pos:position pos:line="14" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="16"/></expr_stmt>
  <return pos:line="15" pos:column="3">return <expr><literal type="number" pos:line="15" pos:column="10">0<pos:position pos:line="15" pos:column="11"/></literal></expr>;<pos:position pos:line="15" pos:column="12"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1538_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">rrd_init<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">void<pos:position pos:line="1" pos:column="26"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="27"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">int<pos:position pos:line="3" pos:column="19"/></name></type> <name pos:line="3" pos:column="20">init_once<pos:position pos:line="3" pos:column="29"/></name> <init pos:line="3" pos:column="30">= <expr><literal type="number" pos:line="3" pos:column="32">0<pos:position pos:line="3" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">status<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">init_once<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">!=<pos:position pos:line="6" pos:column="25"/></operator> <literal type="number" pos:line="6" pos:column="26">0<pos:position pos:line="6" pos:column="27"/></literal></expr>)<pos:position pos:line="6" pos:column="28"/></condition><then pos:line="6" pos:column="28">
		<block type="pseudo"><return pos:line="7" pos:column="17">return <expr><operator pos:line="7" pos:column="24">(<pos:position pos:line="7" pos:column="25"/></operator><literal type="number" pos:line="7" pos:column="25">0<pos:position pos:line="7" pos:column="26"/></literal><operator pos:line="7" pos:column="26">)<pos:position pos:line="7" pos:column="27"/></operator></expr>;<pos:position pos:line="7" pos:column="28"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="8" pos:column="9">init_once<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">=<pos:position pos:line="8" pos:column="20"/></operator> <literal type="number" pos:line="8" pos:column="21">1<pos:position pos:line="8" pos:column="22"/></literal></expr>;<pos:position pos:line="8" pos:column="23"/></expr_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name><name pos:line="10" pos:column="13">rrdcreate_config<pos:position pos:line="10" pos:column="29"/></name><operator pos:line="10" pos:column="29">.<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="30">heartbeat<pos:position pos:line="10" pos:column="39"/></name></name> <operator pos:line="10" pos:column="40">&lt;=<pos:position pos:line="10" pos:column="45"/></operator> <literal type="number" pos:line="10" pos:column="43">0<pos:position pos:line="10" pos:column="44"/></literal></expr>)<pos:position pos:line="10" pos:column="45"/></condition><then pos:line="10" pos:column="45">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="11" pos:column="17">rrdcreate_config<pos:position pos:line="11" pos:column="33"/></name><operator pos:line="11" pos:column="33">.<pos:position pos:line="11" pos:column="34"/></operator><name pos:line="11" pos:column="34">heartbeat<pos:position pos:line="11" pos:column="43"/></name></name> <operator pos:line="11" pos:column="44">=<pos:position pos:line="11" pos:column="45"/></operator> <literal type="number" pos:line="11" pos:column="46">2<pos:position pos:line="11" pos:column="47"/></literal> <operator pos:line="11" pos:column="48">*<pos:position pos:line="11" pos:column="49"/></operator> <name><name pos:line="11" pos:column="50">rrdcreate_config<pos:position pos:line="11" pos:column="66"/></name><operator pos:line="11" pos:column="66">.<pos:position pos:line="11" pos:column="67"/></operator><name pos:line="11" pos:column="67">stepsize<pos:position pos:line="11" pos:column="75"/></name></name></expr>;<pos:position pos:line="11" pos:column="76"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="13" pos:column="9">/* Set the cache up */</comment>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">pthread_mutex_lock<pos:position pos:line="14" pos:column="27"/></name> <argument_list pos:line="14" pos:column="28">(<argument><expr><operator pos:line="14" pos:column="29">&amp;<pos:position pos:line="14" pos:column="34"/></operator><name pos:line="14" pos:column="30">cache_lock<pos:position pos:line="14" pos:column="40"/></name></expr></argument>)<pos:position pos:line="14" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="42"/></expr_stmt>

	<expr_stmt><expr><name pos:line="16" pos:column="9">cache<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <call><name pos:line="16" pos:column="17">c_avl_create<pos:position pos:line="16" pos:column="29"/></name> <argument_list pos:line="16" pos:column="30">(<argument><expr><operator pos:line="16" pos:column="31">(<pos:position pos:line="16" pos:column="32"/></operator><call><call><name pos:line="16" pos:column="32">int<pos:position pos:line="16" pos:column="35"/></name> <argument_list pos:line="16" pos:column="36">(<argument><expr><operator pos:line="16" pos:column="37">*<pos:position pos:line="16" pos:column="38"/></operator></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></call> <argument_list pos:line="16" pos:column="40">(<argument><expr><specifier pos:line="16" pos:column="41">const<pos:position pos:line="16" pos:column="46"/></specifier> <name pos:line="16" pos:column="47">void<pos:position pos:line="16" pos:column="51"/></name> <operator pos:line="16" pos:column="52">*<pos:position pos:line="16" pos:column="53"/></operator></expr></argument>, <argument><expr><specifier pos:line="16" pos:column="55">const<pos:position pos:line="16" pos:column="60"/></specifier> <name pos:line="16" pos:column="61">void<pos:position pos:line="16" pos:column="65"/></name> <operator pos:line="16" pos:column="66">*<pos:position pos:line="16" pos:column="67"/></operator></expr></argument>)<pos:position pos:line="16" pos:column="68"/></argument_list></call><operator pos:line="16" pos:column="68">)<pos:position pos:line="16" pos:column="69"/></operator> <name pos:line="16" pos:column="70">strcmp<pos:position pos:line="16" pos:column="76"/></name></expr></argument>)<pos:position pos:line="16" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="78"/></expr_stmt>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">cache<pos:position pos:line="17" pos:column="18"/></name> <operator pos:line="17" pos:column="19">==<pos:position pos:line="17" pos:column="21"/></operator> <name pos:line="17" pos:column="22">NULL<pos:position pos:line="17" pos:column="26"/></name></expr>)<pos:position pos:line="17" pos:column="27"/></condition><then pos:line="17" pos:column="27">
	<block pos:line="18" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">pthread_mutex_unlock<pos:position pos:line="19" pos:column="37"/></name> <argument_list pos:line="19" pos:column="38">(<argument><expr><operator pos:line="19" pos:column="39">&amp;<pos:position pos:line="19" pos:column="44"/></operator><name pos:line="19" pos:column="40">cache_lock<pos:position pos:line="19" pos:column="50"/></name></expr></argument>)<pos:position pos:line="19" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">ERROR<pos:position pos:line="20" pos:column="22"/></name> <argument_list pos:line="20" pos:column="23">(<argument><expr><literal type="string" pos:line="20" pos:column="24">"rrdtool plugin: c_avl_create failed."<pos:position pos:line="20" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="64"/></expr_stmt>
		<return pos:line="21" pos:column="17">return <expr><operator pos:line="21" pos:column="24">(<pos:position pos:line="21" pos:column="25"/></operator><operator pos:line="21" pos:column="25">-<pos:position pos:line="21" pos:column="26"/></operator><literal type="number" pos:line="21" pos:column="26">1<pos:position pos:line="21" pos:column="27"/></literal><operator pos:line="21" pos:column="27">)<pos:position pos:line="21" pos:column="28"/></operator></expr>;<pos:position pos:line="21" pos:column="29"/></return>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="24" pos:column="9">cache_flush_last<pos:position pos:line="24" pos:column="25"/></name> <operator pos:line="24" pos:column="26">=<pos:position pos:line="24" pos:column="27"/></operator> <call><name pos:line="24" pos:column="28">cdtime<pos:position pos:line="24" pos:column="34"/></name> <argument_list pos:line="24" pos:column="35">()<pos:position pos:line="24" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="38"/></expr_stmt>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">cache_timeout<pos:position pos:line="25" pos:column="26"/></name> <operator pos:line="25" pos:column="27">==<pos:position pos:line="25" pos:column="29"/></operator> <literal type="number" pos:line="25" pos:column="30">0<pos:position pos:line="25" pos:column="31"/></literal></expr>)<pos:position pos:line="25" pos:column="32"/></condition><then pos:line="25" pos:column="32">
	<block pos:line="26" pos:column="9">{
		<expr_stmt><expr><name pos:line="27" pos:column="17">cache_flush_timeout<pos:position pos:line="27" pos:column="36"/></name> <operator pos:line="27" pos:column="37">=<pos:position pos:line="27" pos:column="38"/></operator> <literal type="number" pos:line="27" pos:column="39">0<pos:position pos:line="27" pos:column="40"/></literal></expr>;<pos:position pos:line="27" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="28" pos:column="10"/></block></then>
	<elseif pos:line="29" pos:column="9">else <if pos:line="29" pos:column="14">if <condition pos:line="29" pos:column="17">(<expr><name pos:line="29" pos:column="18">cache_flush_timeout<pos:position pos:line="29" pos:column="37"/></name> <operator pos:line="29" pos:column="38">&lt;<pos:position pos:line="29" pos:column="42"/></operator> <name pos:line="29" pos:column="40">cache_timeout<pos:position pos:line="29" pos:column="53"/></name></expr>)<pos:position pos:line="29" pos:column="54"/></condition><then pos:line="29" pos:column="54">
		<block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="17">cache_flush_timeout<pos:position pos:line="30" pos:column="36"/></name> <operator pos:line="30" pos:column="37">=<pos:position pos:line="30" pos:column="38"/></operator> <literal type="number" pos:line="30" pos:column="39">10<pos:position pos:line="30" pos:column="41"/></literal> <operator pos:line="30" pos:column="42">*<pos:position pos:line="30" pos:column="43"/></operator> <name pos:line="30" pos:column="44">cache_timeout<pos:position pos:line="30" pos:column="57"/></name></expr>;<pos:position pos:line="30" pos:column="58"/></expr_stmt></block></then></if></elseif></if>

	<expr_stmt><expr><call><name pos:line="32" pos:column="9">pthread_mutex_unlock<pos:position pos:line="32" pos:column="29"/></name> <argument_list pos:line="32" pos:column="30">(<argument><expr><operator pos:line="32" pos:column="31">&amp;<pos:position pos:line="32" pos:column="36"/></operator><name pos:line="32" pos:column="32">cache_lock<pos:position pos:line="32" pos:column="42"/></name></expr></argument>)<pos:position pos:line="32" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="44"/></expr_stmt>

	<expr_stmt><expr><name pos:line="34" pos:column="9">status<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">=<pos:position pos:line="34" pos:column="17"/></operator> <call><name pos:line="34" pos:column="18">plugin_thread_create<pos:position pos:line="34" pos:column="38"/></name> <argument_list pos:line="34" pos:column="39">(<argument><expr><operator pos:line="34" pos:column="40">&amp;<pos:position pos:line="34" pos:column="45"/></operator><name pos:line="34" pos:column="41">queue_thread<pos:position pos:line="34" pos:column="53"/></name></expr></argument>, <comment type="block" pos:line="34" pos:column="55">/* attr = */</comment> <argument><expr><name pos:line="34" pos:column="68">NULL<pos:position pos:line="34" pos:column="72"/></name></expr></argument>,
			<argument><expr><name pos:line="35" pos:column="25">rrd_queue_thread<pos:position pos:line="35" pos:column="41"/></name></expr></argument>, <comment type="block" pos:line="35" pos:column="43">/* args = */</comment> <argument><expr><name pos:line="35" pos:column="56">NULL<pos:position pos:line="35" pos:column="60"/></name></expr></argument>)<pos:position pos:line="35" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="62"/></expr_stmt>
	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">status<pos:position pos:line="36" pos:column="19"/></name> <operator pos:line="36" pos:column="20">!=<pos:position pos:line="36" pos:column="22"/></operator> <literal type="number" pos:line="36" pos:column="23">0<pos:position pos:line="36" pos:column="24"/></literal></expr>)<pos:position pos:line="36" pos:column="25"/></condition><then pos:line="36" pos:column="25">
	<block pos:line="37" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="38" pos:column="17">ERROR<pos:position pos:line="38" pos:column="22"/></name> <argument_list pos:line="38" pos:column="23">(<argument><expr><literal type="string" pos:line="38" pos:column="24">"rrdtool plugin: Cannot create queue-thread."<pos:position pos:line="38" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="71"/></expr_stmt>
		<return pos:line="39" pos:column="17">return <expr><operator pos:line="39" pos:column="24">(<pos:position pos:line="39" pos:column="25"/></operator><operator pos:line="39" pos:column="25">-<pos:position pos:line="39" pos:column="26"/></operator><literal type="number" pos:line="39" pos:column="26">1<pos:position pos:line="39" pos:column="27"/></literal><operator pos:line="39" pos:column="27">)<pos:position pos:line="39" pos:column="28"/></operator></expr>;<pos:position pos:line="39" pos:column="29"/></return>
	}<pos:position pos:line="40" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="41" pos:column="9">queue_thread_running<pos:position pos:line="41" pos:column="29"/></name> <operator pos:line="41" pos:column="30">=<pos:position pos:line="41" pos:column="31"/></operator> <literal type="number" pos:line="41" pos:column="32">1<pos:position pos:line="41" pos:column="33"/></literal></expr>;<pos:position pos:line="41" pos:column="34"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="43" pos:column="9">DEBUG<pos:position pos:line="43" pos:column="14"/></name> <argument_list pos:line="43" pos:column="15">(<argument><expr><literal type="string" pos:line="43" pos:column="16">"rrdtool plugin: rrd_init: datadir = %s; stepsize = %lu;"<pos:position pos:line="43" pos:column="73"/></literal>
			<literal type="string" pos:line="44" pos:column="25">" heartbeat = %i; rrarows = %i; xff = %lf;"<pos:position pos:line="44" pos:column="68"/></literal></expr></argument>,
			<argument><expr><ternary><condition><expr><operator pos:line="45" pos:column="25">(<pos:position pos:line="45" pos:column="26"/></operator><name pos:line="45" pos:column="26">datadir<pos:position pos:line="45" pos:column="33"/></name> <operator pos:line="45" pos:column="34">==<pos:position pos:line="45" pos:column="36"/></operator> <name pos:line="45" pos:column="37">NULL<pos:position pos:line="45" pos:column="41"/></name><operator pos:line="45" pos:column="41">)<pos:position pos:line="45" pos:column="42"/></operator></expr> ?<pos:position pos:line="45" pos:column="44"/></condition><then pos:line="45" pos:column="44"> <expr><literal type="string" pos:line="45" pos:column="45">"(null)"<pos:position pos:line="45" pos:column="53"/></literal></expr> <pos:position pos:line="45" pos:column="54"/></then><else pos:line="45" pos:column="54">: <expr><name pos:line="45" pos:column="56">datadir<pos:position pos:line="45" pos:column="63"/></name></expr></else></ternary></expr></argument>,
			<argument><expr><name><name pos:line="46" pos:column="25">rrdcreate_config<pos:position pos:line="46" pos:column="41"/></name><operator pos:line="46" pos:column="41">.<pos:position pos:line="46" pos:column="42"/></operator><name pos:line="46" pos:column="42">stepsize<pos:position pos:line="46" pos:column="50"/></name></name></expr></argument>,
			<argument><expr><name><name pos:line="47" pos:column="25">rrdcreate_config<pos:position pos:line="47" pos:column="41"/></name><operator pos:line="47" pos:column="41">.<pos:position pos:line="47" pos:column="42"/></operator><name pos:line="47" pos:column="42">heartbeat<pos:position pos:line="47" pos:column="51"/></name></name></expr></argument>,
			<argument><expr><name><name pos:line="48" pos:column="25">rrdcreate_config<pos:position pos:line="48" pos:column="41"/></name><operator pos:line="48" pos:column="41">.<pos:position pos:line="48" pos:column="42"/></operator><name pos:line="48" pos:column="42">rrarows<pos:position pos:line="48" pos:column="49"/></name></name></expr></argument>,
			<argument><expr><name><name pos:line="49" pos:column="25">rrdcreate_config<pos:position pos:line="49" pos:column="41"/></name><operator pos:line="49" pos:column="41">.<pos:position pos:line="49" pos:column="42"/></operator><name pos:line="49" pos:column="42">xff<pos:position pos:line="49" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="47"/></expr_stmt>

	<return pos:line="51" pos:column="9">return <expr><operator pos:line="51" pos:column="16">(<pos:position pos:line="51" pos:column="17"/></operator><literal type="number" pos:line="51" pos:column="17">0<pos:position pos:line="51" pos:column="18"/></literal><operator pos:line="51" pos:column="18">)<pos:position pos:line="51" pos:column="19"/></operator></expr>;<pos:position pos:line="51" pos:column="20"/></return>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

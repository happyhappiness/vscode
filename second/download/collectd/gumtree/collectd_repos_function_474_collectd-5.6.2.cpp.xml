<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_474_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">interface_read<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">void<pos:position pos:line="1" pos:column="31"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list> <block pos:line="1" pos:column="33">{
<cpp:if pos:line="2" pos:column="1">#<cpp:directive pos:line="2" pos:column="2">if<pos:position pos:line="2" pos:column="4"/></cpp:directive> <expr><name pos:line="2" pos:column="5">HAVE_GETIFADDRS<pos:position pos:line="2" pos:column="20"/></name></expr></cpp:if>
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">ifaddrs<pos:position pos:line="3" pos:column="17"/></name></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">if_list<pos:position pos:line="3" pos:column="26"/></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>

<comment type="block" pos:line="5" pos:column="1">/* Darwin/Mac OS X and possible other *BSDs */</comment>
<cpp:if pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">if<pos:position pos:line="6" pos:column="4"/></cpp:directive> <expr><name pos:line="6" pos:column="5">HAVE_STRUCT_IF_DATA<pos:position pos:line="6" pos:column="24"/></name></expr></cpp:if>
<cpp:define pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">define<pos:position pos:line="7" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="7" pos:column="9">IFA_DATA<pos:position pos:line="7" pos:column="17"/></name></cpp:macro> <cpp:value pos:line="7" pos:column="18">if_data<pos:position pos:line="7" pos:column="25"/></cpp:value></cpp:define>
<cpp:define pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">define<pos:position pos:line="8" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="8" pos:column="9">IFA_RX_BYTES<pos:position pos:line="8" pos:column="21"/></name></cpp:macro> <cpp:value pos:line="8" pos:column="22">ifi_ibytes<pos:position pos:line="8" pos:column="32"/></cpp:value></cpp:define>
<cpp:define pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">define<pos:position pos:line="9" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="9" pos:column="9">IFA_TX_BYTES<pos:position pos:line="9" pos:column="21"/></name></cpp:macro> <cpp:value pos:line="9" pos:column="22">ifi_obytes<pos:position pos:line="9" pos:column="32"/></cpp:value></cpp:define>
<cpp:define pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">define<pos:position pos:line="10" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="10" pos:column="9">IFA_RX_PACKT<pos:position pos:line="10" pos:column="21"/></name></cpp:macro> <cpp:value pos:line="10" pos:column="22">ifi_ipackets<pos:position pos:line="10" pos:column="34"/></cpp:value></cpp:define>
<cpp:define pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">define<pos:position pos:line="11" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="11" pos:column="9">IFA_TX_PACKT<pos:position pos:line="11" pos:column="21"/></name></cpp:macro> <cpp:value pos:line="11" pos:column="22">ifi_opackets<pos:position pos:line="11" pos:column="34"/></cpp:value></cpp:define>
<cpp:define pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">define<pos:position pos:line="12" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="12" pos:column="9">IFA_RX_ERROR<pos:position pos:line="12" pos:column="21"/></name></cpp:macro> <cpp:value pos:line="12" pos:column="22">ifi_ierrors<pos:position pos:line="12" pos:column="33"/></cpp:value></cpp:define>
<cpp:define pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">define<pos:position pos:line="13" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="13" pos:column="9">IFA_TX_ERROR<pos:position pos:line="13" pos:column="21"/></name></cpp:macro> <cpp:value pos:line="13" pos:column="22">ifi_oerrors<pos:position pos:line="13" pos:column="33"/></cpp:value></cpp:define>
<comment type="block" pos:line="14" pos:column="1">/* #endif HAVE_STRUCT_IF_DATA */</comment>

<cpp:elif pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">elif<pos:position pos:line="16" pos:column="6"/></cpp:directive> <expr><name pos:line="16" pos:column="7">HAVE_STRUCT_NET_DEVICE_STATS<pos:position pos:line="16" pos:column="35"/></name></expr></cpp:elif>
<cpp:define pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">define<pos:position pos:line="17" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="17" pos:column="9">IFA_DATA<pos:position pos:line="17" pos:column="17"/></name></cpp:macro> <cpp:value pos:line="17" pos:column="18">net_device_stats<pos:position pos:line="17" pos:column="34"/></cpp:value></cpp:define>
<cpp:define pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">define<pos:position pos:line="18" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="18" pos:column="9">IFA_RX_BYTES<pos:position pos:line="18" pos:column="21"/></name></cpp:macro> <cpp:value pos:line="18" pos:column="22">rx_bytes<pos:position pos:line="18" pos:column="30"/></cpp:value></cpp:define>
<cpp:define pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">define<pos:position pos:line="19" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="19" pos:column="9">IFA_TX_BYTES<pos:position pos:line="19" pos:column="21"/></name></cpp:macro> <cpp:value pos:line="19" pos:column="22">tx_bytes<pos:position pos:line="19" pos:column="30"/></cpp:value></cpp:define>
<cpp:define pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">define<pos:position pos:line="20" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="20" pos:column="9">IFA_RX_PACKT<pos:position pos:line="20" pos:column="21"/></name></cpp:macro> <cpp:value pos:line="20" pos:column="22">rx_packets<pos:position pos:line="20" pos:column="32"/></cpp:value></cpp:define>
<cpp:define pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">define<pos:position pos:line="21" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="21" pos:column="9">IFA_TX_PACKT<pos:position pos:line="21" pos:column="21"/></name></cpp:macro> <cpp:value pos:line="21" pos:column="22">tx_packets<pos:position pos:line="21" pos:column="32"/></cpp:value></cpp:define>
<cpp:define pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">define<pos:position pos:line="22" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="22" pos:column="9">IFA_RX_ERROR<pos:position pos:line="22" pos:column="21"/></name></cpp:macro> <cpp:value pos:line="22" pos:column="22">rx_errors<pos:position pos:line="22" pos:column="31"/></cpp:value></cpp:define>
<cpp:define pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">define<pos:position pos:line="23" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="23" pos:column="9">IFA_TX_ERROR<pos:position pos:line="23" pos:column="21"/></name></cpp:macro> <cpp:value pos:line="23" pos:column="22">tx_errors<pos:position pos:line="23" pos:column="31"/></cpp:value></cpp:define>
<cpp:else pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">else<pos:position pos:line="24" pos:column="6"/></cpp:directive></cpp:else>
<cpp:error pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">error<pos:position pos:line="25" pos:column="7"/></cpp:directive> <cpp:literal pos:line="25" pos:column="8">"No suitable type for `struct ifaddrs-&gt;ifa_data' found."<pos:position pos:line="25" pos:column="67"/></cpp:literal></cpp:error>
<cpp:endif pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">endif<pos:position pos:line="26" pos:column="7"/></cpp:directive></cpp:endif>

  <decl_stmt><decl><type><name><name pos:line="28" pos:column="3">struct<pos:position pos:line="28" pos:column="9"/></name> <name pos:line="28" pos:column="10">IFA_DATA<pos:position pos:line="28" pos:column="18"/></name></name> <modifier pos:line="28" pos:column="19">*<pos:position pos:line="28" pos:column="20"/></modifier></type><name pos:line="28" pos:column="20">if_data<pos:position pos:line="28" pos:column="27"/></name></decl>;<pos:position pos:line="28" pos:column="28"/></decl_stmt>

  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><call><name pos:line="30" pos:column="7">getifaddrs<pos:position pos:line="30" pos:column="17"/></name><argument_list pos:line="30" pos:column="17">(<argument><expr><operator pos:line="30" pos:column="18">&amp;<pos:position pos:line="30" pos:column="23"/></operator><name pos:line="30" pos:column="19">if_list<pos:position pos:line="30" pos:column="26"/></name></expr></argument>)<pos:position pos:line="30" pos:column="27"/></argument_list></call> <operator pos:line="30" pos:column="28">!=<pos:position pos:line="30" pos:column="30"/></operator> <literal type="number" pos:line="30" pos:column="31">0<pos:position pos:line="30" pos:column="32"/></literal></expr>)<pos:position pos:line="30" pos:column="33"/></condition><then pos:line="30" pos:column="33">
    <block type="pseudo"><return pos:line="31" pos:column="5">return <expr><operator pos:line="31" pos:column="12">(<pos:position pos:line="31" pos:column="13"/></operator><operator pos:line="31" pos:column="13">-<pos:position pos:line="31" pos:column="14"/></operator><literal type="number" pos:line="31" pos:column="14">1<pos:position pos:line="31" pos:column="15"/></literal><operator pos:line="31" pos:column="15">)<pos:position pos:line="31" pos:column="16"/></operator></expr>;<pos:position pos:line="31" pos:column="17"/></return></block></then></if>

  <for pos:line="33" pos:column="3">for <control pos:line="33" pos:column="7">(<init><decl><type><name><name pos:line="33" pos:column="8">struct<pos:position pos:line="33" pos:column="14"/></name> <name pos:line="33" pos:column="15">ifaddrs<pos:position pos:line="33" pos:column="22"/></name></name> <modifier pos:line="33" pos:column="23">*<pos:position pos:line="33" pos:column="24"/></modifier><name pos:line="33" pos:column="24">if_ptr<pos:position pos:line="33" pos:column="30"/></name></type> <init pos:line="33" pos:column="31">= <expr><name pos:line="33" pos:column="33">if_list<pos:position pos:line="33" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="33" pos:column="41"/></init> <condition><expr><name pos:line="33" pos:column="42">if_ptr<pos:position pos:line="33" pos:column="48"/></name> <operator pos:line="33" pos:column="49">!=<pos:position pos:line="33" pos:column="51"/></operator> <name pos:line="33" pos:column="52">NULL<pos:position pos:line="33" pos:column="56"/></name></expr>;<pos:position pos:line="33" pos:column="57"/></condition>
       <incr><expr><name pos:line="34" pos:column="8">if_ptr<pos:position pos:line="34" pos:column="14"/></name> <operator pos:line="34" pos:column="15">=<pos:position pos:line="34" pos:column="16"/></operator> <name><name pos:line="34" pos:column="17">if_ptr<pos:position pos:line="34" pos:column="23"/></name><operator pos:line="34" pos:column="23">-&gt;<pos:position pos:line="34" pos:column="28"/></operator><name pos:line="34" pos:column="25">ifa_next<pos:position pos:line="34" pos:column="33"/></name></name></expr></incr>)<pos:position pos:line="34" pos:column="34"/></control> <block pos:line="34" pos:column="35">{
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name><name pos:line="35" pos:column="9">if_ptr<pos:position pos:line="35" pos:column="15"/></name><operator pos:line="35" pos:column="15">-&gt;<pos:position pos:line="35" pos:column="20"/></operator><name pos:line="35" pos:column="17">ifa_addr<pos:position pos:line="35" pos:column="25"/></name></name> <operator pos:line="35" pos:column="26">!=<pos:position pos:line="35" pos:column="28"/></operator> <name pos:line="35" pos:column="29">NULL<pos:position pos:line="35" pos:column="33"/></name> <operator pos:line="35" pos:column="34">&amp;&amp;<pos:position pos:line="35" pos:column="44"/></operator> <name><name pos:line="35" pos:column="37">if_ptr<pos:position pos:line="35" pos:column="43"/></name><operator pos:line="35" pos:column="43">-&gt;<pos:position pos:line="35" pos:column="48"/></operator><name pos:line="35" pos:column="45">ifa_addr<pos:position pos:line="35" pos:column="53"/></name><operator pos:line="35" pos:column="53">-&gt;<pos:position pos:line="35" pos:column="58"/></operator><name pos:line="35" pos:column="55">sa_family<pos:position pos:line="35" pos:column="64"/></name></name> <operator pos:line="35" pos:column="65">==<pos:position pos:line="35" pos:column="67"/></operator> <name pos:line="35" pos:column="68">AF_LINK<pos:position pos:line="35" pos:column="75"/></name></expr>)<pos:position pos:line="35" pos:column="76"/></condition><then pos:line="35" pos:column="76"> <block pos:line="35" pos:column="77">{
      <expr_stmt><expr><name pos:line="36" pos:column="7">if_data<pos:position pos:line="36" pos:column="14"/></name> <operator pos:line="36" pos:column="15">=<pos:position pos:line="36" pos:column="16"/></operator> <operator pos:line="36" pos:column="17">(<pos:position pos:line="36" pos:column="18"/></operator>struct <name pos:line="36" pos:column="25">IFA_DATA<pos:position pos:line="36" pos:column="33"/></name> <operator pos:line="36" pos:column="34">*<pos:position pos:line="36" pos:column="35"/></operator><operator pos:line="36" pos:column="35">)<pos:position pos:line="36" pos:column="36"/></operator><name><name pos:line="36" pos:column="36">if_ptr<pos:position pos:line="36" pos:column="42"/></name><operator pos:line="36" pos:column="42">-&gt;<pos:position pos:line="36" pos:column="47"/></operator><name pos:line="36" pos:column="44">ifa_data<pos:position pos:line="36" pos:column="52"/></name></name></expr>;<pos:position pos:line="36" pos:column="53"/></expr_stmt>

      <if pos:line="38" pos:column="7">if <condition pos:line="38" pos:column="10">(<expr><operator pos:line="38" pos:column="11">!<pos:position pos:line="38" pos:column="12"/></operator><name pos:line="38" pos:column="12">report_inactive<pos:position pos:line="38" pos:column="27"/></name> <operator pos:line="38" pos:column="28">&amp;&amp;<pos:position pos:line="38" pos:column="38"/></operator> <name><name pos:line="38" pos:column="31">if_data<pos:position pos:line="38" pos:column="38"/></name><operator pos:line="38" pos:column="38">-&gt;<pos:position pos:line="38" pos:column="43"/></operator><name pos:line="38" pos:column="40">IFA_RX_PACKT<pos:position pos:line="38" pos:column="52"/></name></name> <operator pos:line="38" pos:column="53">==<pos:position pos:line="38" pos:column="55"/></operator> <literal type="number" pos:line="38" pos:column="56">0<pos:position pos:line="38" pos:column="57"/></literal> <operator pos:line="38" pos:column="58">&amp;&amp;<pos:position pos:line="38" pos:column="68"/></operator>
          <name><name pos:line="39" pos:column="11">if_data<pos:position pos:line="39" pos:column="18"/></name><operator pos:line="39" pos:column="18">-&gt;<pos:position pos:line="39" pos:column="23"/></operator><name pos:line="39" pos:column="20">IFA_TX_PACKT<pos:position pos:line="39" pos:column="32"/></name></name> <operator pos:line="39" pos:column="33">==<pos:position pos:line="39" pos:column="35"/></operator> <literal type="number" pos:line="39" pos:column="36">0<pos:position pos:line="39" pos:column="37"/></literal></expr>)<pos:position pos:line="39" pos:column="38"/></condition><then pos:line="39" pos:column="38">
        <block type="pseudo"><continue pos:line="40" pos:column="9">continue;<pos:position pos:line="40" pos:column="18"/></continue></block></then></if>

      <expr_stmt><expr><call><name pos:line="42" pos:column="7">if_submit<pos:position pos:line="42" pos:column="16"/></name><argument_list pos:line="42" pos:column="16">(<argument><expr><name><name pos:line="42" pos:column="17">if_ptr<pos:position pos:line="42" pos:column="23"/></name><operator pos:line="42" pos:column="23">-&gt;<pos:position pos:line="42" pos:column="28"/></operator><name pos:line="42" pos:column="25">ifa_name<pos:position pos:line="42" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="35">"if_octets"<pos:position pos:line="42" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="48">if_data<pos:position pos:line="42" pos:column="55"/></name><operator pos:line="42" pos:column="55">-&gt;<pos:position pos:line="42" pos:column="60"/></operator><name pos:line="42" pos:column="57">IFA_RX_BYTES<pos:position pos:line="42" pos:column="69"/></name></name></expr></argument>,
                <argument><expr><name><name pos:line="43" pos:column="17">if_data<pos:position pos:line="43" pos:column="24"/></name><operator pos:line="43" pos:column="24">-&gt;<pos:position pos:line="43" pos:column="29"/></operator><name pos:line="43" pos:column="26">IFA_TX_BYTES<pos:position pos:line="43" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="40"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="44" pos:column="7">if_submit<pos:position pos:line="44" pos:column="16"/></name><argument_list pos:line="44" pos:column="16">(<argument><expr><name><name pos:line="44" pos:column="17">if_ptr<pos:position pos:line="44" pos:column="23"/></name><operator pos:line="44" pos:column="23">-&gt;<pos:position pos:line="44" pos:column="28"/></operator><name pos:line="44" pos:column="25">ifa_name<pos:position pos:line="44" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="35">"if_packets"<pos:position pos:line="44" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="49">if_data<pos:position pos:line="44" pos:column="56"/></name><operator pos:line="44" pos:column="56">-&gt;<pos:position pos:line="44" pos:column="61"/></operator><name pos:line="44" pos:column="58">IFA_RX_PACKT<pos:position pos:line="44" pos:column="70"/></name></name></expr></argument>,
                <argument><expr><name><name pos:line="45" pos:column="17">if_data<pos:position pos:line="45" pos:column="24"/></name><operator pos:line="45" pos:column="24">-&gt;<pos:position pos:line="45" pos:column="29"/></operator><name pos:line="45" pos:column="26">IFA_TX_PACKT<pos:position pos:line="45" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="40"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="46" pos:column="7">if_submit<pos:position pos:line="46" pos:column="16"/></name><argument_list pos:line="46" pos:column="16">(<argument><expr><name><name pos:line="46" pos:column="17">if_ptr<pos:position pos:line="46" pos:column="23"/></name><operator pos:line="46" pos:column="23">-&gt;<pos:position pos:line="46" pos:column="28"/></operator><name pos:line="46" pos:column="25">ifa_name<pos:position pos:line="46" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="35">"if_errors"<pos:position pos:line="46" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="48">if_data<pos:position pos:line="46" pos:column="55"/></name><operator pos:line="46" pos:column="55">-&gt;<pos:position pos:line="46" pos:column="60"/></operator><name pos:line="46" pos:column="57">IFA_RX_ERROR<pos:position pos:line="46" pos:column="69"/></name></name></expr></argument>,
                <argument><expr><name><name pos:line="47" pos:column="17">if_data<pos:position pos:line="47" pos:column="24"/></name><operator pos:line="47" pos:column="24">-&gt;<pos:position pos:line="47" pos:column="29"/></operator><name pos:line="47" pos:column="26">IFA_TX_ERROR<pos:position pos:line="47" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="48" pos:column="6"/></block></then></if>
  }<pos:position pos:line="49" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="51" pos:column="3">freeifaddrs<pos:position pos:line="51" pos:column="14"/></name><argument_list pos:line="51" pos:column="14">(<argument><expr><name pos:line="51" pos:column="15">if_list<pos:position pos:line="51" pos:column="22"/></name></expr></argument>)<pos:position pos:line="51" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="24"/></expr_stmt>
<comment type="block" pos:line="52" pos:column="1">/* #endif HAVE_GETIFADDRS */</comment>

<cpp:elif pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">elif<pos:position pos:line="54" pos:column="6"/></cpp:directive> <expr><name pos:line="54" pos:column="7">KERNEL_LINUX<pos:position pos:line="54" pos:column="19"/></name></expr></cpp:elif>
  <decl_stmt><decl><type><name pos:line="55" pos:column="3">FILE<pos:position pos:line="55" pos:column="7"/></name> <modifier pos:line="55" pos:column="8">*<pos:position pos:line="55" pos:column="9"/></modifier></type><name pos:line="55" pos:column="9">fh<pos:position pos:line="55" pos:column="11"/></name></decl>;<pos:position pos:line="55" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="56" pos:column="3">char<pos:position pos:line="56" pos:column="7"/></name></type> <name><name pos:line="56" pos:column="8">buffer<pos:position pos:line="56" pos:column="14"/></name><index pos:line="56" pos:column="14">[<expr><literal type="number" pos:line="56" pos:column="15">1024<pos:position pos:line="56" pos:column="19"/></literal></expr>]<pos:position pos:line="56" pos:column="20"/></index></name></decl>;<pos:position pos:line="56" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="57" pos:column="3">derive_t<pos:position pos:line="57" pos:column="11"/></name></type> <name pos:line="57" pos:column="12">incoming<pos:position pos:line="57" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="57" pos:column="22">outgoing<pos:position pos:line="57" pos:column="30"/></name></decl>;<pos:position pos:line="57" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="58" pos:column="3">char<pos:position pos:line="58" pos:column="7"/></name> <modifier pos:line="58" pos:column="8">*<pos:position pos:line="58" pos:column="9"/></modifier></type><name pos:line="58" pos:column="9">device<pos:position pos:line="58" pos:column="15"/></name></decl>;<pos:position pos:line="58" pos:column="16"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="60" pos:column="3">char<pos:position pos:line="60" pos:column="7"/></name> <modifier pos:line="60" pos:column="8">*<pos:position pos:line="60" pos:column="9"/></modifier></type><name pos:line="60" pos:column="9">dummy<pos:position pos:line="60" pos:column="14"/></name></decl>;<pos:position pos:line="60" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="61" pos:column="3">char<pos:position pos:line="61" pos:column="7"/></name> <modifier pos:line="61" pos:column="8">*<pos:position pos:line="61" pos:column="9"/></modifier></type><name><name pos:line="61" pos:column="9">fields<pos:position pos:line="61" pos:column="15"/></name><index pos:line="61" pos:column="15">[<expr><literal type="number" pos:line="61" pos:column="16">16<pos:position pos:line="61" pos:column="18"/></literal></expr>]<pos:position pos:line="61" pos:column="19"/></index></name></decl>;<pos:position pos:line="61" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="62" pos:column="3">int<pos:position pos:line="62" pos:column="6"/></name></type> <name pos:line="62" pos:column="7">numfields<pos:position pos:line="62" pos:column="16"/></name></decl>;<pos:position pos:line="62" pos:column="17"/></decl_stmt>

  <if pos:line="64" pos:column="3">if <condition pos:line="64" pos:column="6">(<expr><operator pos:line="64" pos:column="7">(<pos:position pos:line="64" pos:column="8"/></operator><name pos:line="64" pos:column="8">fh<pos:position pos:line="64" pos:column="10"/></name> <operator pos:line="64" pos:column="11">=<pos:position pos:line="64" pos:column="12"/></operator> <call><name pos:line="64" pos:column="13">fopen<pos:position pos:line="64" pos:column="18"/></name><argument_list pos:line="64" pos:column="18">(<argument><expr><literal type="string" pos:line="64" pos:column="19">"/proc/net/dev"<pos:position pos:line="64" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="36">"r"<pos:position pos:line="64" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="40"/></argument_list></call><operator pos:line="64" pos:column="40">)<pos:position pos:line="64" pos:column="41"/></operator> <operator pos:line="64" pos:column="42">==<pos:position pos:line="64" pos:column="44"/></operator> <name pos:line="64" pos:column="45">NULL<pos:position pos:line="64" pos:column="49"/></name></expr>)<pos:position pos:line="64" pos:column="50"/></condition><then pos:line="64" pos:column="50"> <block pos:line="64" pos:column="51">{
    <decl_stmt><decl><type><name pos:line="65" pos:column="5">char<pos:position pos:line="65" pos:column="9"/></name></type> <name><name pos:line="65" pos:column="10">errbuf<pos:position pos:line="65" pos:column="16"/></name><index pos:line="65" pos:column="16">[<expr><literal type="number" pos:line="65" pos:column="17">1024<pos:position pos:line="65" pos:column="21"/></literal></expr>]<pos:position pos:line="65" pos:column="22"/></index></name></decl>;<pos:position pos:line="65" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">WARNING<pos:position pos:line="66" pos:column="12"/></name><argument_list pos:line="66" pos:column="12">(<argument><expr><literal type="string" pos:line="66" pos:column="13">"interface plugin: fopen: %s"<pos:position pos:line="66" pos:column="42"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="67" pos:column="13">sstrerror<pos:position pos:line="67" pos:column="22"/></name><argument_list pos:line="67" pos:column="22">(<argument><expr><name pos:line="67" pos:column="23">errno<pos:position pos:line="67" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="30">errbuf<pos:position pos:line="67" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="67" pos:column="38">sizeof<argument_list pos:line="67" pos:column="44">(<argument><expr><name pos:line="67" pos:column="45">errbuf<pos:position pos:line="67" pos:column="51"/></name></expr></argument>)<pos:position pos:line="67" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="67" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="67" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="55"/></expr_stmt>
    <return pos:line="68" pos:column="5">return <expr><operator pos:line="68" pos:column="12">(<pos:position pos:line="68" pos:column="13"/></operator><operator pos:line="68" pos:column="13">-<pos:position pos:line="68" pos:column="14"/></operator><literal type="number" pos:line="68" pos:column="14">1<pos:position pos:line="68" pos:column="15"/></literal><operator pos:line="68" pos:column="15">)<pos:position pos:line="68" pos:column="16"/></operator></expr>;<pos:position pos:line="68" pos:column="17"/></return>
  }<pos:position pos:line="69" pos:column="4"/></block></then></if>

  <while pos:line="71" pos:column="3">while <condition pos:line="71" pos:column="9">(<expr><call><name pos:line="71" pos:column="10">fgets<pos:position pos:line="71" pos:column="15"/></name><argument_list pos:line="71" pos:column="15">(<argument><expr><name pos:line="71" pos:column="16">buffer<pos:position pos:line="71" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="71" pos:column="24">1024<pos:position pos:line="71" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="30">fh<pos:position pos:line="71" pos:column="32"/></name></expr></argument>)<pos:position pos:line="71" pos:column="33"/></argument_list></call> <operator pos:line="71" pos:column="34">!=<pos:position pos:line="71" pos:column="36"/></operator> <name pos:line="71" pos:column="37">NULL<pos:position pos:line="71" pos:column="41"/></name></expr>)<pos:position pos:line="71" pos:column="42"/></condition> <block pos:line="71" pos:column="43">{
    <if pos:line="72" pos:column="5">if <condition pos:line="72" pos:column="8">(<expr><operator pos:line="72" pos:column="9">!<pos:position pos:line="72" pos:column="10"/></operator><operator pos:line="72" pos:column="10">(<pos:position pos:line="72" pos:column="11"/></operator><name pos:line="72" pos:column="11">dummy<pos:position pos:line="72" pos:column="16"/></name> <operator pos:line="72" pos:column="17">=<pos:position pos:line="72" pos:column="18"/></operator> <call><name pos:line="72" pos:column="19">strchr<pos:position pos:line="72" pos:column="25"/></name><argument_list pos:line="72" pos:column="25">(<argument><expr><name pos:line="72" pos:column="26">buffer<pos:position pos:line="72" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="72" pos:column="34">':'<pos:position pos:line="72" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="38"/></argument_list></call><operator pos:line="72" pos:column="38">)<pos:position pos:line="72" pos:column="39"/></operator></expr>)<pos:position pos:line="72" pos:column="40"/></condition><then pos:line="72" pos:column="40">
      <block type="pseudo"><continue pos:line="73" pos:column="7">continue;<pos:position pos:line="73" pos:column="16"/></continue></block></then></if>
    <expr_stmt><expr><name><name pos:line="74" pos:column="5">dummy<pos:position pos:line="74" pos:column="10"/></name><index pos:line="74" pos:column="10">[<expr><literal type="number" pos:line="74" pos:column="11">0<pos:position pos:line="74" pos:column="12"/></literal></expr>]<pos:position pos:line="74" pos:column="13"/></index></name> <operator pos:line="74" pos:column="14">=<pos:position pos:line="74" pos:column="15"/></operator> <literal type="char" pos:line="74" pos:column="16">'\0'<pos:position pos:line="74" pos:column="20"/></literal></expr>;<pos:position pos:line="74" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name pos:line="75" pos:column="5">dummy<pos:position pos:line="75" pos:column="10"/></name><operator pos:line="75" pos:column="10">++<pos:position pos:line="75" pos:column="12"/></operator></expr>;<pos:position pos:line="75" pos:column="13"/></expr_stmt>

    <expr_stmt><expr><name pos:line="77" pos:column="5">device<pos:position pos:line="77" pos:column="11"/></name> <operator pos:line="77" pos:column="12">=<pos:position pos:line="77" pos:column="13"/></operator> <name pos:line="77" pos:column="14">buffer<pos:position pos:line="77" pos:column="20"/></name></expr>;<pos:position pos:line="77" pos:column="21"/></expr_stmt>
    <while pos:line="78" pos:column="5">while <condition pos:line="78" pos:column="11">(<expr><name><name pos:line="78" pos:column="12">device<pos:position pos:line="78" pos:column="18"/></name><index pos:line="78" pos:column="18">[<expr><literal type="number" pos:line="78" pos:column="19">0<pos:position pos:line="78" pos:column="20"/></literal></expr>]<pos:position pos:line="78" pos:column="21"/></index></name> <operator pos:line="78" pos:column="22">==<pos:position pos:line="78" pos:column="24"/></operator> <literal type="char" pos:line="78" pos:column="25">' '<pos:position pos:line="78" pos:column="28"/></literal></expr>)<pos:position pos:line="78" pos:column="29"/></condition>
      <block type="pseudo"><expr_stmt><expr><name pos:line="79" pos:column="7">device<pos:position pos:line="79" pos:column="13"/></name><operator pos:line="79" pos:column="13">++<pos:position pos:line="79" pos:column="15"/></operator></expr>;<pos:position pos:line="79" pos:column="16"/></expr_stmt></block></while>

    <if pos:line="81" pos:column="5">if <condition pos:line="81" pos:column="8">(<expr><name><name pos:line="81" pos:column="9">device<pos:position pos:line="81" pos:column="15"/></name><index pos:line="81" pos:column="15">[<expr><literal type="number" pos:line="81" pos:column="16">0<pos:position pos:line="81" pos:column="17"/></literal></expr>]<pos:position pos:line="81" pos:column="18"/></index></name> <operator pos:line="81" pos:column="19">==<pos:position pos:line="81" pos:column="21"/></operator> <literal type="char" pos:line="81" pos:column="22">'\0'<pos:position pos:line="81" pos:column="26"/></literal></expr>)<pos:position pos:line="81" pos:column="27"/></condition><then pos:line="81" pos:column="27">
      <block type="pseudo"><continue pos:line="82" pos:column="7">continue;<pos:position pos:line="82" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="84" pos:column="5">numfields<pos:position pos:line="84" pos:column="14"/></name> <operator pos:line="84" pos:column="15">=<pos:position pos:line="84" pos:column="16"/></operator> <call><name pos:line="84" pos:column="17">strsplit<pos:position pos:line="84" pos:column="25"/></name><argument_list pos:line="84" pos:column="25">(<argument><expr><name pos:line="84" pos:column="26">dummy<pos:position pos:line="84" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="33">fields<pos:position pos:line="84" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="84" pos:column="41">16<pos:position pos:line="84" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="45"/></expr_stmt>

    <if pos:line="86" pos:column="5">if <condition pos:line="86" pos:column="8">(<expr><name pos:line="86" pos:column="9">numfields<pos:position pos:line="86" pos:column="18"/></name> <operator pos:line="86" pos:column="19">&lt;<pos:position pos:line="86" pos:column="23"/></operator> <literal type="number" pos:line="86" pos:column="21">11<pos:position pos:line="86" pos:column="23"/></literal></expr>)<pos:position pos:line="86" pos:column="24"/></condition><then pos:line="86" pos:column="24">
      <block type="pseudo"><continue pos:line="87" pos:column="7">continue;<pos:position pos:line="87" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="89" pos:column="5">incoming<pos:position pos:line="89" pos:column="13"/></name> <operator pos:line="89" pos:column="14">=<pos:position pos:line="89" pos:column="15"/></operator> <call><name pos:line="89" pos:column="16">atoll<pos:position pos:line="89" pos:column="21"/></name><argument_list pos:line="89" pos:column="21">(<argument><expr><name><name pos:line="89" pos:column="22">fields<pos:position pos:line="89" pos:column="28"/></name><index pos:line="89" pos:column="28">[<expr><literal type="number" pos:line="89" pos:column="29">1<pos:position pos:line="89" pos:column="30"/></literal></expr>]<pos:position pos:line="89" pos:column="31"/></index></name></expr></argument>)<pos:position pos:line="89" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name pos:line="90" pos:column="5">outgoing<pos:position pos:line="90" pos:column="13"/></name> <operator pos:line="90" pos:column="14">=<pos:position pos:line="90" pos:column="15"/></operator> <call><name pos:line="90" pos:column="16">atoll<pos:position pos:line="90" pos:column="21"/></name><argument_list pos:line="90" pos:column="21">(<argument><expr><name><name pos:line="90" pos:column="22">fields<pos:position pos:line="90" pos:column="28"/></name><index pos:line="90" pos:column="28">[<expr><literal type="number" pos:line="90" pos:column="29">9<pos:position pos:line="90" pos:column="30"/></literal></expr>]<pos:position pos:line="90" pos:column="31"/></index></name></expr></argument>)<pos:position pos:line="90" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="33"/></expr_stmt>
    <if pos:line="91" pos:column="5">if <condition pos:line="91" pos:column="8">(<expr><operator pos:line="91" pos:column="9">!<pos:position pos:line="91" pos:column="10"/></operator><name pos:line="91" pos:column="10">report_inactive<pos:position pos:line="91" pos:column="25"/></name> <operator pos:line="91" pos:column="26">&amp;&amp;<pos:position pos:line="91" pos:column="36"/></operator> <name pos:line="91" pos:column="29">incoming<pos:position pos:line="91" pos:column="37"/></name> <operator pos:line="91" pos:column="38">==<pos:position pos:line="91" pos:column="40"/></operator> <literal type="number" pos:line="91" pos:column="41">0<pos:position pos:line="91" pos:column="42"/></literal> <operator pos:line="91" pos:column="43">&amp;&amp;<pos:position pos:line="91" pos:column="53"/></operator> <name pos:line="91" pos:column="46">outgoing<pos:position pos:line="91" pos:column="54"/></name> <operator pos:line="91" pos:column="55">==<pos:position pos:line="91" pos:column="57"/></operator> <literal type="number" pos:line="91" pos:column="58">0<pos:position pos:line="91" pos:column="59"/></literal></expr>)<pos:position pos:line="91" pos:column="60"/></condition><then pos:line="91" pos:column="60">
      <block type="pseudo"><continue pos:line="92" pos:column="7">continue;<pos:position pos:line="92" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><call><name pos:line="94" pos:column="5">if_submit<pos:position pos:line="94" pos:column="14"/></name><argument_list pos:line="94" pos:column="14">(<argument><expr><name pos:line="94" pos:column="15">device<pos:position pos:line="94" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="94" pos:column="23">"if_packets"<pos:position pos:line="94" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="94" pos:column="37">incoming<pos:position pos:line="94" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="47">outgoing<pos:position pos:line="94" pos:column="55"/></name></expr></argument>)<pos:position pos:line="94" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="57"/></expr_stmt>

    <expr_stmt><expr><name pos:line="96" pos:column="5">incoming<pos:position pos:line="96" pos:column="13"/></name> <operator pos:line="96" pos:column="14">=<pos:position pos:line="96" pos:column="15"/></operator> <call><name pos:line="96" pos:column="16">atoll<pos:position pos:line="96" pos:column="21"/></name><argument_list pos:line="96" pos:column="21">(<argument><expr><name><name pos:line="96" pos:column="22">fields<pos:position pos:line="96" pos:column="28"/></name><index pos:line="96" pos:column="28">[<expr><literal type="number" pos:line="96" pos:column="29">0<pos:position pos:line="96" pos:column="30"/></literal></expr>]<pos:position pos:line="96" pos:column="31"/></index></name></expr></argument>)<pos:position pos:line="96" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name pos:line="97" pos:column="5">outgoing<pos:position pos:line="97" pos:column="13"/></name> <operator pos:line="97" pos:column="14">=<pos:position pos:line="97" pos:column="15"/></operator> <call><name pos:line="97" pos:column="16">atoll<pos:position pos:line="97" pos:column="21"/></name><argument_list pos:line="97" pos:column="21">(<argument><expr><name><name pos:line="97" pos:column="22">fields<pos:position pos:line="97" pos:column="28"/></name><index pos:line="97" pos:column="28">[<expr><literal type="number" pos:line="97" pos:column="29">8<pos:position pos:line="97" pos:column="30"/></literal></expr>]<pos:position pos:line="97" pos:column="31"/></index></name></expr></argument>)<pos:position pos:line="97" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="98" pos:column="5">if_submit<pos:position pos:line="98" pos:column="14"/></name><argument_list pos:line="98" pos:column="14">(<argument><expr><name pos:line="98" pos:column="15">device<pos:position pos:line="98" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="23">"if_octets"<pos:position pos:line="98" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="98" pos:column="36">incoming<pos:position pos:line="98" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="46">outgoing<pos:position pos:line="98" pos:column="54"/></name></expr></argument>)<pos:position pos:line="98" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="56"/></expr_stmt>

    <expr_stmt><expr><name pos:line="100" pos:column="5">incoming<pos:position pos:line="100" pos:column="13"/></name> <operator pos:line="100" pos:column="14">=<pos:position pos:line="100" pos:column="15"/></operator> <call><name pos:line="100" pos:column="16">atoll<pos:position pos:line="100" pos:column="21"/></name><argument_list pos:line="100" pos:column="21">(<argument><expr><name><name pos:line="100" pos:column="22">fields<pos:position pos:line="100" pos:column="28"/></name><index pos:line="100" pos:column="28">[<expr><literal type="number" pos:line="100" pos:column="29">2<pos:position pos:line="100" pos:column="30"/></literal></expr>]<pos:position pos:line="100" pos:column="31"/></index></name></expr></argument>)<pos:position pos:line="100" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name pos:line="101" pos:column="5">outgoing<pos:position pos:line="101" pos:column="13"/></name> <operator pos:line="101" pos:column="14">=<pos:position pos:line="101" pos:column="15"/></operator> <call><name pos:line="101" pos:column="16">atoll<pos:position pos:line="101" pos:column="21"/></name><argument_list pos:line="101" pos:column="21">(<argument><expr><name><name pos:line="101" pos:column="22">fields<pos:position pos:line="101" pos:column="28"/></name><index pos:line="101" pos:column="28">[<expr><literal type="number" pos:line="101" pos:column="29">10<pos:position pos:line="101" pos:column="31"/></literal></expr>]<pos:position pos:line="101" pos:column="32"/></index></name></expr></argument>)<pos:position pos:line="101" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="102" pos:column="5">if_submit<pos:position pos:line="102" pos:column="14"/></name><argument_list pos:line="102" pos:column="14">(<argument><expr><name pos:line="102" pos:column="15">device<pos:position pos:line="102" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="23">"if_errors"<pos:position pos:line="102" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="102" pos:column="36">incoming<pos:position pos:line="102" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="46">outgoing<pos:position pos:line="102" pos:column="54"/></name></expr></argument>)<pos:position pos:line="102" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="56"/></expr_stmt>

    <expr_stmt><expr><name pos:line="104" pos:column="5">incoming<pos:position pos:line="104" pos:column="13"/></name> <operator pos:line="104" pos:column="14">=<pos:position pos:line="104" pos:column="15"/></operator> <call><name pos:line="104" pos:column="16">atoll<pos:position pos:line="104" pos:column="21"/></name><argument_list pos:line="104" pos:column="21">(<argument><expr><name><name pos:line="104" pos:column="22">fields<pos:position pos:line="104" pos:column="28"/></name><index pos:line="104" pos:column="28">[<expr><literal type="number" pos:line="104" pos:column="29">3<pos:position pos:line="104" pos:column="30"/></literal></expr>]<pos:position pos:line="104" pos:column="31"/></index></name></expr></argument>)<pos:position pos:line="104" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name pos:line="105" pos:column="5">outgoing<pos:position pos:line="105" pos:column="13"/></name> <operator pos:line="105" pos:column="14">=<pos:position pos:line="105" pos:column="15"/></operator> <call><name pos:line="105" pos:column="16">atoll<pos:position pos:line="105" pos:column="21"/></name><argument_list pos:line="105" pos:column="21">(<argument><expr><name><name pos:line="105" pos:column="22">fields<pos:position pos:line="105" pos:column="28"/></name><index pos:line="105" pos:column="28">[<expr><literal type="number" pos:line="105" pos:column="29">11<pos:position pos:line="105" pos:column="31"/></literal></expr>]<pos:position pos:line="105" pos:column="32"/></index></name></expr></argument>)<pos:position pos:line="105" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="106" pos:column="5">if_submit<pos:position pos:line="106" pos:column="14"/></name><argument_list pos:line="106" pos:column="14">(<argument><expr><name pos:line="106" pos:column="15">device<pos:position pos:line="106" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="106" pos:column="23">"if_dropped"<pos:position pos:line="106" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="106" pos:column="37">incoming<pos:position pos:line="106" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="47">outgoing<pos:position pos:line="106" pos:column="55"/></name></expr></argument>)<pos:position pos:line="106" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="57"/></expr_stmt>
  }<pos:position pos:line="107" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="109" pos:column="3">fclose<pos:position pos:line="109" pos:column="9"/></name><argument_list pos:line="109" pos:column="9">(<argument><expr><name pos:line="109" pos:column="10">fh<pos:position pos:line="109" pos:column="12"/></name></expr></argument>)<pos:position pos:line="109" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="14"/></expr_stmt>
<comment type="block" pos:line="110" pos:column="1">/* #endif KERNEL_LINUX */</comment>

<cpp:elif pos:line="112" pos:column="1">#<cpp:directive pos:line="112" pos:column="2">elif<pos:position pos:line="112" pos:column="6"/></cpp:directive> <expr><name pos:line="112" pos:column="7">HAVE_LIBKSTAT<pos:position pos:line="112" pos:column="20"/></name></expr></cpp:elif>
  <decl_stmt><decl><type><name pos:line="113" pos:column="3">derive_t<pos:position pos:line="113" pos:column="11"/></name></type> <name pos:line="113" pos:column="12">rx<pos:position pos:line="113" pos:column="14"/></name></decl>;<pos:position pos:line="113" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="114" pos:column="3">derive_t<pos:position pos:line="114" pos:column="11"/></name></type> <name pos:line="114" pos:column="12">tx<pos:position pos:line="114" pos:column="14"/></name></decl>;<pos:position pos:line="114" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="115" pos:column="3">char<pos:position pos:line="115" pos:column="7"/></name></type> <name><name pos:line="115" pos:column="8">iname<pos:position pos:line="115" pos:column="13"/></name><index pos:line="115" pos:column="13">[<expr><name pos:line="115" pos:column="14">DATA_MAX_NAME_LEN<pos:position pos:line="115" pos:column="31"/></name></expr>]<pos:position pos:line="115" pos:column="32"/></index></name></decl>;<pos:position pos:line="115" pos:column="33"/></decl_stmt>

  <if pos:line="117" pos:column="3">if <condition pos:line="117" pos:column="6">(<expr><name pos:line="117" pos:column="7">kc<pos:position pos:line="117" pos:column="9"/></name> <operator pos:line="117" pos:column="10">==<pos:position pos:line="117" pos:column="12"/></operator> <name pos:line="117" pos:column="13">NULL<pos:position pos:line="117" pos:column="17"/></name></expr>)<pos:position pos:line="117" pos:column="18"/></condition><then pos:line="117" pos:column="18">
    <block type="pseudo"><return pos:line="118" pos:column="5">return <expr><operator pos:line="118" pos:column="12">(<pos:position pos:line="118" pos:column="13"/></operator><operator pos:line="118" pos:column="13">-<pos:position pos:line="118" pos:column="14"/></operator><literal type="number" pos:line="118" pos:column="14">1<pos:position pos:line="118" pos:column="15"/></literal><operator pos:line="118" pos:column="15">)<pos:position pos:line="118" pos:column="16"/></operator></expr>;<pos:position pos:line="118" pos:column="17"/></return></block></then></if>

  <for pos:line="120" pos:column="3">for <control pos:line="120" pos:column="7">(<init><decl><type><name pos:line="120" pos:column="8">int<pos:position pos:line="120" pos:column="11"/></name></type> <name pos:line="120" pos:column="12">i<pos:position pos:line="120" pos:column="13"/></name> <init pos:line="120" pos:column="14">= <expr><literal type="number" pos:line="120" pos:column="16">0<pos:position pos:line="120" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="120" pos:column="18"/></init> <condition><expr><name pos:line="120" pos:column="19">i<pos:position pos:line="120" pos:column="20"/></name> <operator pos:line="120" pos:column="21">&lt;<pos:position pos:line="120" pos:column="25"/></operator> <name pos:line="120" pos:column="23">numif<pos:position pos:line="120" pos:column="28"/></name></expr>;<pos:position pos:line="120" pos:column="29"/></condition> <incr><expr><name pos:line="120" pos:column="30">i<pos:position pos:line="120" pos:column="31"/></name><operator pos:line="120" pos:column="31">++<pos:position pos:line="120" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="120" pos:column="34"/></control> <block pos:line="120" pos:column="35">{
    <if pos:line="121" pos:column="5">if <condition pos:line="121" pos:column="8">(<expr><call><name pos:line="121" pos:column="9">kstat_read<pos:position pos:line="121" pos:column="19"/></name><argument_list pos:line="121" pos:column="19">(<argument><expr><name pos:line="121" pos:column="20">kc<pos:position pos:line="121" pos:column="22"/></name></expr></argument>, <argument><expr><name><name pos:line="121" pos:column="24">ksp<pos:position pos:line="121" pos:column="27"/></name><index pos:line="121" pos:column="27">[<expr><name pos:line="121" pos:column="28">i<pos:position pos:line="121" pos:column="29"/></name></expr>]<pos:position pos:line="121" pos:column="30"/></index></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="32">NULL<pos:position pos:line="121" pos:column="36"/></name></expr></argument>)<pos:position pos:line="121" pos:column="37"/></argument_list></call> <operator pos:line="121" pos:column="38">==<pos:position pos:line="121" pos:column="40"/></operator> <operator pos:line="121" pos:column="41">-<pos:position pos:line="121" pos:column="42"/></operator><literal type="number" pos:line="121" pos:column="42">1<pos:position pos:line="121" pos:column="43"/></literal></expr>)<pos:position pos:line="121" pos:column="44"/></condition><then pos:line="121" pos:column="44">
      <block type="pseudo"><continue pos:line="122" pos:column="7">continue;<pos:position pos:line="122" pos:column="16"/></continue></block></then></if>

    <if pos:line="124" pos:column="5">if <condition pos:line="124" pos:column="8">(<expr><name pos:line="124" pos:column="9">unique_name<pos:position pos:line="124" pos:column="20"/></name></expr>)<pos:position pos:line="124" pos:column="21"/></condition><then pos:line="124" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="125" pos:column="7">ssnprintf<pos:position pos:line="125" pos:column="16"/></name><argument_list pos:line="125" pos:column="16">(<argument><expr><name pos:line="125" pos:column="17">iname<pos:position pos:line="125" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="125" pos:column="24">sizeof<argument_list pos:line="125" pos:column="30">(<argument><expr><name pos:line="125" pos:column="31">iname<pos:position pos:line="125" pos:column="36"/></name></expr></argument>)<pos:position pos:line="125" pos:column="37"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="125" pos:column="39">"%s_%d_%s"<pos:position pos:line="125" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="125" pos:column="51">ksp<pos:position pos:line="125" pos:column="54"/></name><index pos:line="125" pos:column="54">[<expr><name pos:line="125" pos:column="55">i<pos:position pos:line="125" pos:column="56"/></name></expr>]<pos:position pos:line="125" pos:column="57"/></index></name><operator pos:line="125" pos:column="57">-&gt;<pos:position pos:line="125" pos:column="62"/></operator><name pos:line="125" pos:column="59">ks_module<pos:position pos:line="125" pos:column="68"/></name></expr></argument>,
                <argument><expr><name><name pos:line="126" pos:column="17">ksp<pos:position pos:line="126" pos:column="20"/></name><index pos:line="126" pos:column="20">[<expr><name pos:line="126" pos:column="21">i<pos:position pos:line="126" pos:column="22"/></name></expr>]<pos:position pos:line="126" pos:column="23"/></index></name><operator pos:line="126" pos:column="23">-&gt;<pos:position pos:line="126" pos:column="28"/></operator><name pos:line="126" pos:column="25">ks_instance<pos:position pos:line="126" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="126" pos:column="38">ksp<pos:position pos:line="126" pos:column="41"/></name><index pos:line="126" pos:column="41">[<expr><name pos:line="126" pos:column="42">i<pos:position pos:line="126" pos:column="43"/></name></expr>]<pos:position pos:line="126" pos:column="44"/></index></name><operator pos:line="126" pos:column="44">-&gt;<pos:position pos:line="126" pos:column="49"/></operator><name pos:line="126" pos:column="46">ks_name<pos:position pos:line="126" pos:column="53"/></name></expr></argument>)<pos:position pos:line="126" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="55"/></expr_stmt></block></then>
    <else pos:line="127" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="128" pos:column="7">sstrncpy<pos:position pos:line="128" pos:column="15"/></name><argument_list pos:line="128" pos:column="15">(<argument><expr><name pos:line="128" pos:column="16">iname<pos:position pos:line="128" pos:column="21"/></name></expr></argument>, <argument><expr><name><name pos:line="128" pos:column="23">ksp<pos:position pos:line="128" pos:column="26"/></name><index pos:line="128" pos:column="26">[<expr><name pos:line="128" pos:column="27">i<pos:position pos:line="128" pos:column="28"/></name></expr>]<pos:position pos:line="128" pos:column="29"/></index></name><operator pos:line="128" pos:column="29">-&gt;<pos:position pos:line="128" pos:column="34"/></operator><name pos:line="128" pos:column="31">ks_name<pos:position pos:line="128" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="128" pos:column="40">sizeof<argument_list pos:line="128" pos:column="46">(<argument><expr><name pos:line="128" pos:column="47">iname<pos:position pos:line="128" pos:column="52"/></name></expr></argument>)<pos:position pos:line="128" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="128" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="55"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="130" pos:column="5">/* try to get 64bit counters */</comment>
    <expr_stmt><expr><name pos:line="131" pos:column="5">rx<pos:position pos:line="131" pos:column="7"/></name> <operator pos:line="131" pos:column="8">=<pos:position pos:line="131" pos:column="9"/></operator> <call><name pos:line="131" pos:column="10">get_kstat_value<pos:position pos:line="131" pos:column="25"/></name><argument_list pos:line="131" pos:column="25">(<argument><expr><name><name pos:line="131" pos:column="26">ksp<pos:position pos:line="131" pos:column="29"/></name><index pos:line="131" pos:column="29">[<expr><name pos:line="131" pos:column="30">i<pos:position pos:line="131" pos:column="31"/></name></expr>]<pos:position pos:line="131" pos:column="32"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="131" pos:column="34">"ipackets64"<pos:position pos:line="131" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="131" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name pos:line="132" pos:column="5">tx<pos:position pos:line="132" pos:column="7"/></name> <operator pos:line="132" pos:column="8">=<pos:position pos:line="132" pos:column="9"/></operator> <call><name pos:line="132" pos:column="10">get_kstat_value<pos:position pos:line="132" pos:column="25"/></name><argument_list pos:line="132" pos:column="25">(<argument><expr><name><name pos:line="132" pos:column="26">ksp<pos:position pos:line="132" pos:column="29"/></name><index pos:line="132" pos:column="29">[<expr><name pos:line="132" pos:column="30">i<pos:position pos:line="132" pos:column="31"/></name></expr>]<pos:position pos:line="132" pos:column="32"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="132" pos:column="34">"opackets64"<pos:position pos:line="132" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="132" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="48"/></expr_stmt>
    <comment type="block" pos:line="133" pos:column="5">/* or fallback to 32bit */</comment>
    <if pos:line="134" pos:column="5">if <condition pos:line="134" pos:column="8">(<expr><name pos:line="134" pos:column="9">rx<pos:position pos:line="134" pos:column="11"/></name> <operator pos:line="134" pos:column="12">==<pos:position pos:line="134" pos:column="14"/></operator> <operator pos:line="134" pos:column="15">-<pos:position pos:line="134" pos:column="16"/></operator><literal type="number" pos:line="134" pos:column="16">1LL<pos:position pos:line="134" pos:column="19"/></literal></expr>)<pos:position pos:line="134" pos:column="20"/></condition><then pos:line="134" pos:column="20">
      <block type="pseudo"><expr_stmt><expr><name pos:line="135" pos:column="7">rx<pos:position pos:line="135" pos:column="9"/></name> <operator pos:line="135" pos:column="10">=<pos:position pos:line="135" pos:column="11"/></operator> <call><name pos:line="135" pos:column="12">get_kstat_value<pos:position pos:line="135" pos:column="27"/></name><argument_list pos:line="135" pos:column="27">(<argument><expr><name><name pos:line="135" pos:column="28">ksp<pos:position pos:line="135" pos:column="31"/></name><index pos:line="135" pos:column="31">[<expr><name pos:line="135" pos:column="32">i<pos:position pos:line="135" pos:column="33"/></name></expr>]<pos:position pos:line="135" pos:column="34"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="135" pos:column="36">"ipackets"<pos:position pos:line="135" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="135" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="48"/></expr_stmt></block></then></if>
    <if pos:line="136" pos:column="5">if <condition pos:line="136" pos:column="8">(<expr><name pos:line="136" pos:column="9">tx<pos:position pos:line="136" pos:column="11"/></name> <operator pos:line="136" pos:column="12">==<pos:position pos:line="136" pos:column="14"/></operator> <operator pos:line="136" pos:column="15">-<pos:position pos:line="136" pos:column="16"/></operator><literal type="number" pos:line="136" pos:column="16">1LL<pos:position pos:line="136" pos:column="19"/></literal></expr>)<pos:position pos:line="136" pos:column="20"/></condition><then pos:line="136" pos:column="20">
      <block type="pseudo"><expr_stmt><expr><name pos:line="137" pos:column="7">tx<pos:position pos:line="137" pos:column="9"/></name> <operator pos:line="137" pos:column="10">=<pos:position pos:line="137" pos:column="11"/></operator> <call><name pos:line="137" pos:column="12">get_kstat_value<pos:position pos:line="137" pos:column="27"/></name><argument_list pos:line="137" pos:column="27">(<argument><expr><name><name pos:line="137" pos:column="28">ksp<pos:position pos:line="137" pos:column="31"/></name><index pos:line="137" pos:column="31">[<expr><name pos:line="137" pos:column="32">i<pos:position pos:line="137" pos:column="33"/></name></expr>]<pos:position pos:line="137" pos:column="34"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="137" pos:column="36">"opackets"<pos:position pos:line="137" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="137" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="48"/></expr_stmt></block></then></if>
    <if pos:line="138" pos:column="5">if <condition pos:line="138" pos:column="8">(<expr><operator pos:line="138" pos:column="9">!<pos:position pos:line="138" pos:column="10"/></operator><name pos:line="138" pos:column="10">report_inactive<pos:position pos:line="138" pos:column="25"/></name> <operator pos:line="138" pos:column="26">&amp;&amp;<pos:position pos:line="138" pos:column="36"/></operator> <name pos:line="138" pos:column="29">rx<pos:position pos:line="138" pos:column="31"/></name> <operator pos:line="138" pos:column="32">==<pos:position pos:line="138" pos:column="34"/></operator> <literal type="number" pos:line="138" pos:column="35">0<pos:position pos:line="138" pos:column="36"/></literal> <operator pos:line="138" pos:column="37">&amp;&amp;<pos:position pos:line="138" pos:column="47"/></operator> <name pos:line="138" pos:column="40">tx<pos:position pos:line="138" pos:column="42"/></name> <operator pos:line="138" pos:column="43">==<pos:position pos:line="138" pos:column="45"/></operator> <literal type="number" pos:line="138" pos:column="46">0<pos:position pos:line="138" pos:column="47"/></literal></expr>)<pos:position pos:line="138" pos:column="48"/></condition><then pos:line="138" pos:column="48">
      <block type="pseudo"><continue pos:line="139" pos:column="7">continue;<pos:position pos:line="139" pos:column="16"/></continue></block></then></if>
    <if pos:line="140" pos:column="5">if <condition pos:line="140" pos:column="8">(<expr><operator pos:line="140" pos:column="9">(<pos:position pos:line="140" pos:column="10"/></operator><name pos:line="140" pos:column="10">rx<pos:position pos:line="140" pos:column="12"/></name> <operator pos:line="140" pos:column="13">!=<pos:position pos:line="140" pos:column="15"/></operator> <operator pos:line="140" pos:column="16">-<pos:position pos:line="140" pos:column="17"/></operator><literal type="number" pos:line="140" pos:column="17">1LL<pos:position pos:line="140" pos:column="20"/></literal><operator pos:line="140" pos:column="20">)<pos:position pos:line="140" pos:column="21"/></operator> <operator pos:line="140" pos:column="22">||<pos:position pos:line="140" pos:column="24"/></operator> <operator pos:line="140" pos:column="25">(<pos:position pos:line="140" pos:column="26"/></operator><name pos:line="140" pos:column="26">tx<pos:position pos:line="140" pos:column="28"/></name> <operator pos:line="140" pos:column="29">!=<pos:position pos:line="140" pos:column="31"/></operator> <operator pos:line="140" pos:column="32">-<pos:position pos:line="140" pos:column="33"/></operator><literal type="number" pos:line="140" pos:column="33">1LL<pos:position pos:line="140" pos:column="36"/></literal><operator pos:line="140" pos:column="36">)<pos:position pos:line="140" pos:column="37"/></operator></expr>)<pos:position pos:line="140" pos:column="38"/></condition><then pos:line="140" pos:column="38">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="141" pos:column="7">if_submit<pos:position pos:line="141" pos:column="16"/></name><argument_list pos:line="141" pos:column="16">(<argument><expr><name pos:line="141" pos:column="17">iname<pos:position pos:line="141" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="141" pos:column="24">"if_packets"<pos:position pos:line="141" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="141" pos:column="38">rx<pos:position pos:line="141" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="42">tx<pos:position pos:line="141" pos:column="44"/></name></expr></argument>)<pos:position pos:line="141" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="46"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="143" pos:column="5">/* try to get 64bit counters */</comment>
    <expr_stmt><expr><name pos:line="144" pos:column="5">rx<pos:position pos:line="144" pos:column="7"/></name> <operator pos:line="144" pos:column="8">=<pos:position pos:line="144" pos:column="9"/></operator> <call><name pos:line="144" pos:column="10">get_kstat_value<pos:position pos:line="144" pos:column="25"/></name><argument_list pos:line="144" pos:column="25">(<argument><expr><name><name pos:line="144" pos:column="26">ksp<pos:position pos:line="144" pos:column="29"/></name><index pos:line="144" pos:column="29">[<expr><name pos:line="144" pos:column="30">i<pos:position pos:line="144" pos:column="31"/></name></expr>]<pos:position pos:line="144" pos:column="32"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="144" pos:column="34">"rbytes64"<pos:position pos:line="144" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="144" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name pos:line="145" pos:column="5">tx<pos:position pos:line="145" pos:column="7"/></name> <operator pos:line="145" pos:column="8">=<pos:position pos:line="145" pos:column="9"/></operator> <call><name pos:line="145" pos:column="10">get_kstat_value<pos:position pos:line="145" pos:column="25"/></name><argument_list pos:line="145" pos:column="25">(<argument><expr><name><name pos:line="145" pos:column="26">ksp<pos:position pos:line="145" pos:column="29"/></name><index pos:line="145" pos:column="29">[<expr><name pos:line="145" pos:column="30">i<pos:position pos:line="145" pos:column="31"/></name></expr>]<pos:position pos:line="145" pos:column="32"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="145" pos:column="34">"obytes64"<pos:position pos:line="145" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="145" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="46"/></expr_stmt>
    <comment type="block" pos:line="146" pos:column="5">/* or fallback to 32bit */</comment>
    <if pos:line="147" pos:column="5">if <condition pos:line="147" pos:column="8">(<expr><name pos:line="147" pos:column="9">rx<pos:position pos:line="147" pos:column="11"/></name> <operator pos:line="147" pos:column="12">==<pos:position pos:line="147" pos:column="14"/></operator> <operator pos:line="147" pos:column="15">-<pos:position pos:line="147" pos:column="16"/></operator><literal type="number" pos:line="147" pos:column="16">1LL<pos:position pos:line="147" pos:column="19"/></literal></expr>)<pos:position pos:line="147" pos:column="20"/></condition><then pos:line="147" pos:column="20">
      <block type="pseudo"><expr_stmt><expr><name pos:line="148" pos:column="7">rx<pos:position pos:line="148" pos:column="9"/></name> <operator pos:line="148" pos:column="10">=<pos:position pos:line="148" pos:column="11"/></operator> <call><name pos:line="148" pos:column="12">get_kstat_value<pos:position pos:line="148" pos:column="27"/></name><argument_list pos:line="148" pos:column="27">(<argument><expr><name><name pos:line="148" pos:column="28">ksp<pos:position pos:line="148" pos:column="31"/></name><index pos:line="148" pos:column="31">[<expr><name pos:line="148" pos:column="32">i<pos:position pos:line="148" pos:column="33"/></name></expr>]<pos:position pos:line="148" pos:column="34"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="148" pos:column="36">"rbytes"<pos:position pos:line="148" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="148" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="46"/></expr_stmt></block></then></if>
    <if pos:line="149" pos:column="5">if <condition pos:line="149" pos:column="8">(<expr><name pos:line="149" pos:column="9">tx<pos:position pos:line="149" pos:column="11"/></name> <operator pos:line="149" pos:column="12">==<pos:position pos:line="149" pos:column="14"/></operator> <operator pos:line="149" pos:column="15">-<pos:position pos:line="149" pos:column="16"/></operator><literal type="number" pos:line="149" pos:column="16">1LL<pos:position pos:line="149" pos:column="19"/></literal></expr>)<pos:position pos:line="149" pos:column="20"/></condition><then pos:line="149" pos:column="20">
      <block type="pseudo"><expr_stmt><expr><name pos:line="150" pos:column="7">tx<pos:position pos:line="150" pos:column="9"/></name> <operator pos:line="150" pos:column="10">=<pos:position pos:line="150" pos:column="11"/></operator> <call><name pos:line="150" pos:column="12">get_kstat_value<pos:position pos:line="150" pos:column="27"/></name><argument_list pos:line="150" pos:column="27">(<argument><expr><name><name pos:line="150" pos:column="28">ksp<pos:position pos:line="150" pos:column="31"/></name><index pos:line="150" pos:column="31">[<expr><name pos:line="150" pos:column="32">i<pos:position pos:line="150" pos:column="33"/></name></expr>]<pos:position pos:line="150" pos:column="34"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="150" pos:column="36">"obytes"<pos:position pos:line="150" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="150" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="46"/></expr_stmt></block></then></if>
    <if pos:line="151" pos:column="5">if <condition pos:line="151" pos:column="8">(<expr><operator pos:line="151" pos:column="9">(<pos:position pos:line="151" pos:column="10"/></operator><name pos:line="151" pos:column="10">rx<pos:position pos:line="151" pos:column="12"/></name> <operator pos:line="151" pos:column="13">!=<pos:position pos:line="151" pos:column="15"/></operator> <operator pos:line="151" pos:column="16">-<pos:position pos:line="151" pos:column="17"/></operator><literal type="number" pos:line="151" pos:column="17">1LL<pos:position pos:line="151" pos:column="20"/></literal><operator pos:line="151" pos:column="20">)<pos:position pos:line="151" pos:column="21"/></operator> <operator pos:line="151" pos:column="22">||<pos:position pos:line="151" pos:column="24"/></operator> <operator pos:line="151" pos:column="25">(<pos:position pos:line="151" pos:column="26"/></operator><name pos:line="151" pos:column="26">tx<pos:position pos:line="151" pos:column="28"/></name> <operator pos:line="151" pos:column="29">!=<pos:position pos:line="151" pos:column="31"/></operator> <operator pos:line="151" pos:column="32">-<pos:position pos:line="151" pos:column="33"/></operator><literal type="number" pos:line="151" pos:column="33">1LL<pos:position pos:line="151" pos:column="36"/></literal><operator pos:line="151" pos:column="36">)<pos:position pos:line="151" pos:column="37"/></operator></expr>)<pos:position pos:line="151" pos:column="38"/></condition><then pos:line="151" pos:column="38">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="152" pos:column="7">if_submit<pos:position pos:line="152" pos:column="16"/></name><argument_list pos:line="152" pos:column="16">(<argument><expr><name pos:line="152" pos:column="17">iname<pos:position pos:line="152" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="152" pos:column="24">"if_octets"<pos:position pos:line="152" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="152" pos:column="37">rx<pos:position pos:line="152" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="41">tx<pos:position pos:line="152" pos:column="43"/></name></expr></argument>)<pos:position pos:line="152" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="45"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="154" pos:column="5">/* no 64bit error counters yet */</comment>
    <expr_stmt><expr><name pos:line="155" pos:column="5">rx<pos:position pos:line="155" pos:column="7"/></name> <operator pos:line="155" pos:column="8">=<pos:position pos:line="155" pos:column="9"/></operator> <call><name pos:line="155" pos:column="10">get_kstat_value<pos:position pos:line="155" pos:column="25"/></name><argument_list pos:line="155" pos:column="25">(<argument><expr><name><name pos:line="155" pos:column="26">ksp<pos:position pos:line="155" pos:column="29"/></name><index pos:line="155" pos:column="29">[<expr><name pos:line="155" pos:column="30">i<pos:position pos:line="155" pos:column="31"/></name></expr>]<pos:position pos:line="155" pos:column="32"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="155" pos:column="34">"ierrors"<pos:position pos:line="155" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="155" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name pos:line="156" pos:column="5">tx<pos:position pos:line="156" pos:column="7"/></name> <operator pos:line="156" pos:column="8">=<pos:position pos:line="156" pos:column="9"/></operator> <call><name pos:line="156" pos:column="10">get_kstat_value<pos:position pos:line="156" pos:column="25"/></name><argument_list pos:line="156" pos:column="25">(<argument><expr><name><name pos:line="156" pos:column="26">ksp<pos:position pos:line="156" pos:column="29"/></name><index pos:line="156" pos:column="29">[<expr><name pos:line="156" pos:column="30">i<pos:position pos:line="156" pos:column="31"/></name></expr>]<pos:position pos:line="156" pos:column="32"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="156" pos:column="34">"oerrors"<pos:position pos:line="156" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="156" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="45"/></expr_stmt>
    <if pos:line="157" pos:column="5">if <condition pos:line="157" pos:column="8">(<expr><operator pos:line="157" pos:column="9">(<pos:position pos:line="157" pos:column="10"/></operator><name pos:line="157" pos:column="10">rx<pos:position pos:line="157" pos:column="12"/></name> <operator pos:line="157" pos:column="13">!=<pos:position pos:line="157" pos:column="15"/></operator> <operator pos:line="157" pos:column="16">-<pos:position pos:line="157" pos:column="17"/></operator><literal type="number" pos:line="157" pos:column="17">1LL<pos:position pos:line="157" pos:column="20"/></literal><operator pos:line="157" pos:column="20">)<pos:position pos:line="157" pos:column="21"/></operator> <operator pos:line="157" pos:column="22">||<pos:position pos:line="157" pos:column="24"/></operator> <operator pos:line="157" pos:column="25">(<pos:position pos:line="157" pos:column="26"/></operator><name pos:line="157" pos:column="26">tx<pos:position pos:line="157" pos:column="28"/></name> <operator pos:line="157" pos:column="29">!=<pos:position pos:line="157" pos:column="31"/></operator> <operator pos:line="157" pos:column="32">-<pos:position pos:line="157" pos:column="33"/></operator><literal type="number" pos:line="157" pos:column="33">1LL<pos:position pos:line="157" pos:column="36"/></literal><operator pos:line="157" pos:column="36">)<pos:position pos:line="157" pos:column="37"/></operator></expr>)<pos:position pos:line="157" pos:column="38"/></condition><then pos:line="157" pos:column="38">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="158" pos:column="7">if_submit<pos:position pos:line="158" pos:column="16"/></name><argument_list pos:line="158" pos:column="16">(<argument><expr><name pos:line="158" pos:column="17">iname<pos:position pos:line="158" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="158" pos:column="24">"if_errors"<pos:position pos:line="158" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="158" pos:column="37">rx<pos:position pos:line="158" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="41">tx<pos:position pos:line="158" pos:column="43"/></name></expr></argument>)<pos:position pos:line="158" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="45"/></expr_stmt></block></then></if>
  }<pos:position pos:line="159" pos:column="4"/></block></for>
<comment type="block" pos:line="160" pos:column="1">/* #endif HAVE_LIBKSTAT */</comment>

<cpp:elif pos:line="162" pos:column="1">#<cpp:directive pos:line="162" pos:column="2">elif<pos:position pos:line="162" pos:column="6"/></cpp:directive> <expr><call><name pos:line="162" pos:column="7">defined<pos:position pos:line="162" pos:column="14"/></name><argument_list pos:line="162" pos:column="14">(<argument><expr><name pos:line="162" pos:column="15">HAVE_LIBSTATGRAB<pos:position pos:line="162" pos:column="31"/></name></expr></argument>)<pos:position pos:line="162" pos:column="32"/></argument_list></call></expr></cpp:elif>
  <decl_stmt><decl><type><name pos:line="163" pos:column="3">sg_network_io_stats<pos:position pos:line="163" pos:column="22"/></name> <modifier pos:line="163" pos:column="23">*<pos:position pos:line="163" pos:column="24"/></modifier></type><name pos:line="163" pos:column="24">ios<pos:position pos:line="163" pos:column="27"/></name></decl>;<pos:position pos:line="163" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="164" pos:column="3">int<pos:position pos:line="164" pos:column="6"/></name></type> <name pos:line="164" pos:column="7">num<pos:position pos:line="164" pos:column="10"/></name></decl>;<pos:position pos:line="164" pos:column="11"/></decl_stmt>

  <expr_stmt><expr><name pos:line="166" pos:column="3">ios<pos:position pos:line="166" pos:column="6"/></name> <operator pos:line="166" pos:column="7">=<pos:position pos:line="166" pos:column="8"/></operator> <call><name pos:line="166" pos:column="9">sg_get_network_io_stats<pos:position pos:line="166" pos:column="32"/></name><argument_list pos:line="166" pos:column="32">(<argument><expr><operator pos:line="166" pos:column="33">&amp;<pos:position pos:line="166" pos:column="38"/></operator><name pos:line="166" pos:column="34">num<pos:position pos:line="166" pos:column="37"/></name></expr></argument>)<pos:position pos:line="166" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="39"/></expr_stmt>

  <for pos:line="168" pos:column="3">for <control pos:line="168" pos:column="7">(<init><decl><type><name pos:line="168" pos:column="8">int<pos:position pos:line="168" pos:column="11"/></name></type> <name pos:line="168" pos:column="12">i<pos:position pos:line="168" pos:column="13"/></name> <init pos:line="168" pos:column="14">= <expr><literal type="number" pos:line="168" pos:column="16">0<pos:position pos:line="168" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="168" pos:column="18"/></init> <condition><expr><name pos:line="168" pos:column="19">i<pos:position pos:line="168" pos:column="20"/></name> <operator pos:line="168" pos:column="21">&lt;<pos:position pos:line="168" pos:column="25"/></operator> <name pos:line="168" pos:column="23">num<pos:position pos:line="168" pos:column="26"/></name></expr>;<pos:position pos:line="168" pos:column="27"/></condition> <incr><expr><name pos:line="168" pos:column="28">i<pos:position pos:line="168" pos:column="29"/></name><operator pos:line="168" pos:column="29">++<pos:position pos:line="168" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="168" pos:column="32"/></control> <block pos:line="168" pos:column="33">{
    <if pos:line="169" pos:column="5">if <condition pos:line="169" pos:column="8">(<expr><operator pos:line="169" pos:column="9">!<pos:position pos:line="169" pos:column="10"/></operator><name pos:line="169" pos:column="10">report_inactive<pos:position pos:line="169" pos:column="25"/></name> <operator pos:line="169" pos:column="26">&amp;&amp;<pos:position pos:line="169" pos:column="36"/></operator> <name><name pos:line="169" pos:column="29">ios<pos:position pos:line="169" pos:column="32"/></name><index pos:line="169" pos:column="32">[<expr><name pos:line="169" pos:column="33">i<pos:position pos:line="169" pos:column="34"/></name></expr>]<pos:position pos:line="169" pos:column="35"/></index></name><operator pos:line="169" pos:column="35">.<pos:position pos:line="169" pos:column="36"/></operator><name pos:line="169" pos:column="36">rx<pos:position pos:line="169" pos:column="38"/></name> <operator pos:line="169" pos:column="39">==<pos:position pos:line="169" pos:column="41"/></operator> <literal type="number" pos:line="169" pos:column="42">0<pos:position pos:line="169" pos:column="43"/></literal> <operator pos:line="169" pos:column="44">&amp;&amp;<pos:position pos:line="169" pos:column="54"/></operator> <name><name pos:line="169" pos:column="47">ios<pos:position pos:line="169" pos:column="50"/></name><index pos:line="169" pos:column="50">[<expr><name pos:line="169" pos:column="51">i<pos:position pos:line="169" pos:column="52"/></name></expr>]<pos:position pos:line="169" pos:column="53"/></index></name><operator pos:line="169" pos:column="53">.<pos:position pos:line="169" pos:column="54"/></operator><name pos:line="169" pos:column="54">tx<pos:position pos:line="169" pos:column="56"/></name> <operator pos:line="169" pos:column="57">==<pos:position pos:line="169" pos:column="59"/></operator> <literal type="number" pos:line="169" pos:column="60">0<pos:position pos:line="169" pos:column="61"/></literal></expr>)<pos:position pos:line="169" pos:column="62"/></condition><then pos:line="169" pos:column="62">
      <block type="pseudo"><continue pos:line="170" pos:column="7">continue;<pos:position pos:line="170" pos:column="16"/></continue></block></then></if>
    <expr_stmt><expr><call><name pos:line="171" pos:column="5">if_submit<pos:position pos:line="171" pos:column="14"/></name><argument_list pos:line="171" pos:column="14">(<argument><expr><name><name pos:line="171" pos:column="15">ios<pos:position pos:line="171" pos:column="18"/></name><index pos:line="171" pos:column="18">[<expr><name pos:line="171" pos:column="19">i<pos:position pos:line="171" pos:column="20"/></name></expr>]<pos:position pos:line="171" pos:column="21"/></index></name><operator pos:line="171" pos:column="21">.<pos:position pos:line="171" pos:column="22"/></operator><name pos:line="171" pos:column="22">interface_name<pos:position pos:line="171" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="171" pos:column="38">"if_octets"<pos:position pos:line="171" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="171" pos:column="51">ios<pos:position pos:line="171" pos:column="54"/></name><index pos:line="171" pos:column="54">[<expr><name pos:line="171" pos:column="55">i<pos:position pos:line="171" pos:column="56"/></name></expr>]<pos:position pos:line="171" pos:column="57"/></index></name><operator pos:line="171" pos:column="57">.<pos:position pos:line="171" pos:column="58"/></operator><name pos:line="171" pos:column="58">rx<pos:position pos:line="171" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="171" pos:column="62">ios<pos:position pos:line="171" pos:column="65"/></name><index pos:line="171" pos:column="65">[<expr><name pos:line="171" pos:column="66">i<pos:position pos:line="171" pos:column="67"/></name></expr>]<pos:position pos:line="171" pos:column="68"/></index></name><operator pos:line="171" pos:column="68">.<pos:position pos:line="171" pos:column="69"/></operator><name pos:line="171" pos:column="69">tx<pos:position pos:line="171" pos:column="71"/></name></expr></argument>)<pos:position pos:line="171" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="73"/></expr_stmt>
  }<pos:position pos:line="172" pos:column="4"/></block></for>
<comment type="block" pos:line="173" pos:column="1">/* #endif HAVE_LIBSTATGRAB */</comment>

<cpp:elif pos:line="175" pos:column="1">#<cpp:directive pos:line="175" pos:column="2">elif<pos:position pos:line="175" pos:column="6"/></cpp:directive> <expr><call><name pos:line="175" pos:column="7">defined<pos:position pos:line="175" pos:column="14"/></name><argument_list pos:line="175" pos:column="14">(<argument><expr><name pos:line="175" pos:column="15">HAVE_PERFSTAT<pos:position pos:line="175" pos:column="28"/></name></expr></argument>)<pos:position pos:line="175" pos:column="29"/></argument_list></call></expr></cpp:elif>
  <decl_stmt><decl><type><name pos:line="176" pos:column="3">perfstat_id_t<pos:position pos:line="176" pos:column="16"/></name></type> <name pos:line="176" pos:column="17">id<pos:position pos:line="176" pos:column="19"/></name></decl>;<pos:position pos:line="176" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="177" pos:column="3">int<pos:position pos:line="177" pos:column="6"/></name></type> <name pos:line="177" pos:column="7">ifs<pos:position pos:line="177" pos:column="10"/></name></decl>;<pos:position pos:line="177" pos:column="11"/></decl_stmt>

  <if pos:line="179" pos:column="3">if <condition pos:line="179" pos:column="6">(<expr><operator pos:line="179" pos:column="7">(<pos:position pos:line="179" pos:column="8"/></operator><name pos:line="179" pos:column="8">nif<pos:position pos:line="179" pos:column="11"/></name> <operator pos:line="179" pos:column="12">=<pos:position pos:line="179" pos:column="13"/></operator> <call><name pos:line="179" pos:column="14">perfstat_netinterface<pos:position pos:line="179" pos:column="35"/></name><argument_list pos:line="179" pos:column="35">(<argument><expr><name pos:line="179" pos:column="36">NULL<pos:position pos:line="179" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="179" pos:column="42">NULL<pos:position pos:line="179" pos:column="46"/></name></expr></argument>, <argument><expr><sizeof pos:line="179" pos:column="48">sizeof<argument_list pos:line="179" pos:column="54">(<argument><expr><name pos:line="179" pos:column="55">perfstat_netinterface_t<pos:position pos:line="179" pos:column="78"/></name></expr></argument>)<pos:position pos:line="179" pos:column="79"/></argument_list></sizeof></expr></argument>,
                                   <argument><expr><literal type="number" pos:line="180" pos:column="36">0<pos:position pos:line="180" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="180" pos:column="38"/></argument_list></call><operator pos:line="180" pos:column="38">)<pos:position pos:line="180" pos:column="39"/></operator> <operator pos:line="180" pos:column="40">&lt;<pos:position pos:line="180" pos:column="44"/></operator> <literal type="number" pos:line="180" pos:column="42">0<pos:position pos:line="180" pos:column="43"/></literal></expr>)<pos:position pos:line="180" pos:column="44"/></condition><then pos:line="180" pos:column="44"> <block pos:line="180" pos:column="45">{
    <decl_stmt><decl><type><name pos:line="181" pos:column="5">char<pos:position pos:line="181" pos:column="9"/></name></type> <name><name pos:line="181" pos:column="10">errbuf<pos:position pos:line="181" pos:column="16"/></name><index pos:line="181" pos:column="16">[<expr><literal type="number" pos:line="181" pos:column="17">1024<pos:position pos:line="181" pos:column="21"/></literal></expr>]<pos:position pos:line="181" pos:column="22"/></index></name></decl>;<pos:position pos:line="181" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="182" pos:column="5">WARNING<pos:position pos:line="182" pos:column="12"/></name><argument_list pos:line="182" pos:column="12">(<argument><expr><literal type="string" pos:line="182" pos:column="13">"interface plugin: perfstat_netinterface: %s"<pos:position pos:line="182" pos:column="58"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="183" pos:column="13">sstrerror<pos:position pos:line="183" pos:column="22"/></name><argument_list pos:line="183" pos:column="22">(<argument><expr><name pos:line="183" pos:column="23">errno<pos:position pos:line="183" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="183" pos:column="30">errbuf<pos:position pos:line="183" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="183" pos:column="38">sizeof<argument_list pos:line="183" pos:column="44">(<argument><expr><name pos:line="183" pos:column="45">errbuf<pos:position pos:line="183" pos:column="51"/></name></expr></argument>)<pos:position pos:line="183" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="183" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="183" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="55"/></expr_stmt>
    <return pos:line="184" pos:column="5">return <expr><operator pos:line="184" pos:column="12">(<pos:position pos:line="184" pos:column="13"/></operator><operator pos:line="184" pos:column="13">-<pos:position pos:line="184" pos:column="14"/></operator><literal type="number" pos:line="184" pos:column="14">1<pos:position pos:line="184" pos:column="15"/></literal><operator pos:line="184" pos:column="15">)<pos:position pos:line="184" pos:column="16"/></operator></expr>;<pos:position pos:line="184" pos:column="17"/></return>
  }<pos:position pos:line="185" pos:column="4"/></block></then></if>

  <if pos:line="187" pos:column="3">if <condition pos:line="187" pos:column="6">(<expr><name pos:line="187" pos:column="7">pnif<pos:position pos:line="187" pos:column="11"/></name> <operator pos:line="187" pos:column="12">!=<pos:position pos:line="187" pos:column="14"/></operator> <name pos:line="187" pos:column="15">nif<pos:position pos:line="187" pos:column="18"/></name> <operator pos:line="187" pos:column="19">||<pos:position pos:line="187" pos:column="21"/></operator> <name pos:line="187" pos:column="22">ifstat<pos:position pos:line="187" pos:column="28"/></name> <operator pos:line="187" pos:column="29">==<pos:position pos:line="187" pos:column="31"/></operator> <name pos:line="187" pos:column="32">NULL<pos:position pos:line="187" pos:column="36"/></name></expr>)<pos:position pos:line="187" pos:column="37"/></condition><then pos:line="187" pos:column="37"> <block pos:line="187" pos:column="38">{
    <expr_stmt><expr><call><name pos:line="188" pos:column="5">free<pos:position pos:line="188" pos:column="9"/></name><argument_list pos:line="188" pos:column="9">(<argument><expr><name pos:line="188" pos:column="10">ifstat<pos:position pos:line="188" pos:column="16"/></name></expr></argument>)<pos:position pos:line="188" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name pos:line="189" pos:column="5">ifstat<pos:position pos:line="189" pos:column="11"/></name> <operator pos:line="189" pos:column="12">=<pos:position pos:line="189" pos:column="13"/></operator> <call><name pos:line="189" pos:column="14">malloc<pos:position pos:line="189" pos:column="20"/></name><argument_list pos:line="189" pos:column="20">(<argument><expr><name pos:line="189" pos:column="21">nif<pos:position pos:line="189" pos:column="24"/></name> <operator pos:line="189" pos:column="25">*<pos:position pos:line="189" pos:column="26"/></operator> <sizeof pos:line="189" pos:column="27">sizeof<argument_list pos:line="189" pos:column="33">(<argument><expr><operator pos:line="189" pos:column="34">*<pos:position pos:line="189" pos:column="35"/></operator><name pos:line="189" pos:column="35">ifstat<pos:position pos:line="189" pos:column="41"/></name></expr></argument>)<pos:position pos:line="189" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="189" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="44"/></expr_stmt>
  }<pos:position pos:line="190" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="191" pos:column="3">pnif<pos:position pos:line="191" pos:column="7"/></name> <operator pos:line="191" pos:column="8">=<pos:position pos:line="191" pos:column="9"/></operator> <name pos:line="191" pos:column="10">nif<pos:position pos:line="191" pos:column="13"/></name></expr>;<pos:position pos:line="191" pos:column="14"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="193" pos:column="3">id<pos:position pos:line="193" pos:column="5"/></name><operator pos:line="193" pos:column="5">.<pos:position pos:line="193" pos:column="6"/></operator><name pos:line="193" pos:column="6">name<pos:position pos:line="193" pos:column="10"/></name><index pos:line="193" pos:column="10">[<expr><literal type="number" pos:line="193" pos:column="11">0<pos:position pos:line="193" pos:column="12"/></literal></expr>]<pos:position pos:line="193" pos:column="13"/></index></name> <operator pos:line="193" pos:column="14">=<pos:position pos:line="193" pos:column="15"/></operator> <literal type="char" pos:line="193" pos:column="16">'\0'<pos:position pos:line="193" pos:column="20"/></literal></expr>;<pos:position pos:line="193" pos:column="21"/></expr_stmt>
  <if pos:line="194" pos:column="3">if <condition pos:line="194" pos:column="6">(<expr><operator pos:line="194" pos:column="7">(<pos:position pos:line="194" pos:column="8"/></operator><name pos:line="194" pos:column="8">ifs<pos:position pos:line="194" pos:column="11"/></name> <operator pos:line="194" pos:column="12">=<pos:position pos:line="194" pos:column="13"/></operator> <call><name pos:line="194" pos:column="14">perfstat_netinterface<pos:position pos:line="194" pos:column="35"/></name><argument_list pos:line="194" pos:column="35">(<argument><expr><operator pos:line="194" pos:column="36">&amp;<pos:position pos:line="194" pos:column="41"/></operator><name pos:line="194" pos:column="37">id<pos:position pos:line="194" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="194" pos:column="41">ifstat<pos:position pos:line="194" pos:column="47"/></name></expr></argument>, <argument><expr><sizeof pos:line="194" pos:column="49">sizeof<argument_list pos:line="194" pos:column="55">(<argument><expr><name pos:line="194" pos:column="56">perfstat_netinterface_t<pos:position pos:line="194" pos:column="79"/></name></expr></argument>)<pos:position pos:line="194" pos:column="80"/></argument_list></sizeof></expr></argument>,
                                   <argument><expr><name pos:line="195" pos:column="36">nif<pos:position pos:line="195" pos:column="39"/></name></expr></argument>)<pos:position pos:line="195" pos:column="40"/></argument_list></call><operator pos:line="195" pos:column="40">)<pos:position pos:line="195" pos:column="41"/></operator> <operator pos:line="195" pos:column="42">&lt;<pos:position pos:line="195" pos:column="46"/></operator> <literal type="number" pos:line="195" pos:column="44">0<pos:position pos:line="195" pos:column="45"/></literal></expr>)<pos:position pos:line="195" pos:column="46"/></condition><then pos:line="195" pos:column="46"> <block pos:line="195" pos:column="47">{
    <decl_stmt><decl><type><name pos:line="196" pos:column="5">char<pos:position pos:line="196" pos:column="9"/></name></type> <name><name pos:line="196" pos:column="10">errbuf<pos:position pos:line="196" pos:column="16"/></name><index pos:line="196" pos:column="16">[<expr><literal type="number" pos:line="196" pos:column="17">1024<pos:position pos:line="196" pos:column="21"/></literal></expr>]<pos:position pos:line="196" pos:column="22"/></index></name></decl>;<pos:position pos:line="196" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="197" pos:column="5">WARNING<pos:position pos:line="197" pos:column="12"/></name><argument_list pos:line="197" pos:column="12">(<argument><expr><literal type="string" pos:line="197" pos:column="13">"interface plugin: perfstat_netinterface (interfaces=%d): %s"<pos:position pos:line="197" pos:column="74"/></literal></expr></argument>, <argument><expr><name pos:line="197" pos:column="76">nif<pos:position pos:line="197" pos:column="79"/></name></expr></argument>,
            <argument><expr><call><name pos:line="198" pos:column="13">sstrerror<pos:position pos:line="198" pos:column="22"/></name><argument_list pos:line="198" pos:column="22">(<argument><expr><name pos:line="198" pos:column="23">errno<pos:position pos:line="198" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="198" pos:column="30">errbuf<pos:position pos:line="198" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="198" pos:column="38">sizeof<argument_list pos:line="198" pos:column="44">(<argument><expr><name pos:line="198" pos:column="45">errbuf<pos:position pos:line="198" pos:column="51"/></name></expr></argument>)<pos:position pos:line="198" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="198" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="198" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="55"/></expr_stmt>
    <return pos:line="199" pos:column="5">return <expr><operator pos:line="199" pos:column="12">(<pos:position pos:line="199" pos:column="13"/></operator><operator pos:line="199" pos:column="13">-<pos:position pos:line="199" pos:column="14"/></operator><literal type="number" pos:line="199" pos:column="14">1<pos:position pos:line="199" pos:column="15"/></literal><operator pos:line="199" pos:column="15">)<pos:position pos:line="199" pos:column="16"/></operator></expr>;<pos:position pos:line="199" pos:column="17"/></return>
  }<pos:position pos:line="200" pos:column="4"/></block></then></if>

  <for pos:line="202" pos:column="3">for <control pos:line="202" pos:column="7">(<init><decl><type><name pos:line="202" pos:column="8">int<pos:position pos:line="202" pos:column="11"/></name></type> <name pos:line="202" pos:column="12">i<pos:position pos:line="202" pos:column="13"/></name> <init pos:line="202" pos:column="14">= <expr><literal type="number" pos:line="202" pos:column="16">0<pos:position pos:line="202" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="202" pos:column="18"/></init> <condition><expr><name pos:line="202" pos:column="19">i<pos:position pos:line="202" pos:column="20"/></name> <operator pos:line="202" pos:column="21">&lt;<pos:position pos:line="202" pos:column="25"/></operator> <name pos:line="202" pos:column="23">ifs<pos:position pos:line="202" pos:column="26"/></name></expr>;<pos:position pos:line="202" pos:column="27"/></condition> <incr><expr><name pos:line="202" pos:column="28">i<pos:position pos:line="202" pos:column="29"/></name><operator pos:line="202" pos:column="29">++<pos:position pos:line="202" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="202" pos:column="32"/></control> <block pos:line="202" pos:column="33">{
    <if pos:line="203" pos:column="5">if <condition pos:line="203" pos:column="8">(<expr><operator pos:line="203" pos:column="9">!<pos:position pos:line="203" pos:column="10"/></operator><name pos:line="203" pos:column="10">report_inactive<pos:position pos:line="203" pos:column="25"/></name> <operator pos:line="203" pos:column="26">&amp;&amp;<pos:position pos:line="203" pos:column="36"/></operator> <name><name pos:line="203" pos:column="29">ifstat<pos:position pos:line="203" pos:column="35"/></name><index pos:line="203" pos:column="35">[<expr><name pos:line="203" pos:column="36">i<pos:position pos:line="203" pos:column="37"/></name></expr>]<pos:position pos:line="203" pos:column="38"/></index></name><operator pos:line="203" pos:column="38">.<pos:position pos:line="203" pos:column="39"/></operator><name pos:line="203" pos:column="39">ipackets<pos:position pos:line="203" pos:column="47"/></name> <operator pos:line="203" pos:column="48">==<pos:position pos:line="203" pos:column="50"/></operator> <literal type="number" pos:line="203" pos:column="51">0<pos:position pos:line="203" pos:column="52"/></literal> <operator pos:line="203" pos:column="53">&amp;&amp;<pos:position pos:line="203" pos:column="63"/></operator> <name><name pos:line="203" pos:column="56">ifstat<pos:position pos:line="203" pos:column="62"/></name><index pos:line="203" pos:column="62">[<expr><name pos:line="203" pos:column="63">i<pos:position pos:line="203" pos:column="64"/></name></expr>]<pos:position pos:line="203" pos:column="65"/></index></name><operator pos:line="203" pos:column="65">.<pos:position pos:line="203" pos:column="66"/></operator><name pos:line="203" pos:column="66">opackets<pos:position pos:line="203" pos:column="74"/></name> <operator pos:line="203" pos:column="75">==<pos:position pos:line="203" pos:column="77"/></operator> <literal type="number" pos:line="203" pos:column="78">0<pos:position pos:line="203" pos:column="79"/></literal></expr>)<pos:position pos:line="203" pos:column="80"/></condition><then pos:line="203" pos:column="80">
      <block type="pseudo"><continue pos:line="204" pos:column="7">continue;<pos:position pos:line="204" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><call><name pos:line="206" pos:column="5">if_submit<pos:position pos:line="206" pos:column="14"/></name><argument_list pos:line="206" pos:column="14">(<argument><expr><name><name pos:line="206" pos:column="15">ifstat<pos:position pos:line="206" pos:column="21"/></name><index pos:line="206" pos:column="21">[<expr><name pos:line="206" pos:column="22">i<pos:position pos:line="206" pos:column="23"/></name></expr>]<pos:position pos:line="206" pos:column="24"/></index></name><operator pos:line="206" pos:column="24">.<pos:position pos:line="206" pos:column="25"/></operator><name pos:line="206" pos:column="25">name<pos:position pos:line="206" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="206" pos:column="31">"if_octets"<pos:position pos:line="206" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="206" pos:column="44">ifstat<pos:position pos:line="206" pos:column="50"/></name><index pos:line="206" pos:column="50">[<expr><name pos:line="206" pos:column="51">i<pos:position pos:line="206" pos:column="52"/></name></expr>]<pos:position pos:line="206" pos:column="53"/></index></name><operator pos:line="206" pos:column="53">.<pos:position pos:line="206" pos:column="54"/></operator><name pos:line="206" pos:column="54">ibytes<pos:position pos:line="206" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="206" pos:column="62">ifstat<pos:position pos:line="206" pos:column="68"/></name><index pos:line="206" pos:column="68">[<expr><name pos:line="206" pos:column="69">i<pos:position pos:line="206" pos:column="70"/></name></expr>]<pos:position pos:line="206" pos:column="71"/></index></name><operator pos:line="206" pos:column="71">.<pos:position pos:line="206" pos:column="72"/></operator><name pos:line="206" pos:column="72">obytes<pos:position pos:line="206" pos:column="78"/></name></expr></argument>)<pos:position pos:line="206" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="80"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="207" pos:column="5">if_submit<pos:position pos:line="207" pos:column="14"/></name><argument_list pos:line="207" pos:column="14">(<argument><expr><name><name pos:line="207" pos:column="15">ifstat<pos:position pos:line="207" pos:column="21"/></name><index pos:line="207" pos:column="21">[<expr><name pos:line="207" pos:column="22">i<pos:position pos:line="207" pos:column="23"/></name></expr>]<pos:position pos:line="207" pos:column="24"/></index></name><operator pos:line="207" pos:column="24">.<pos:position pos:line="207" pos:column="25"/></operator><name pos:line="207" pos:column="25">name<pos:position pos:line="207" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="207" pos:column="31">"if_packets"<pos:position pos:line="207" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="207" pos:column="45">ifstat<pos:position pos:line="207" pos:column="51"/></name><index pos:line="207" pos:column="51">[<expr><name pos:line="207" pos:column="52">i<pos:position pos:line="207" pos:column="53"/></name></expr>]<pos:position pos:line="207" pos:column="54"/></index></name><operator pos:line="207" pos:column="54">.<pos:position pos:line="207" pos:column="55"/></operator><name pos:line="207" pos:column="55">ipackets<pos:position pos:line="207" pos:column="63"/></name></expr></argument>,
              <argument><expr><name><name pos:line="208" pos:column="15">ifstat<pos:position pos:line="208" pos:column="21"/></name><index pos:line="208" pos:column="21">[<expr><name pos:line="208" pos:column="22">i<pos:position pos:line="208" pos:column="23"/></name></expr>]<pos:position pos:line="208" pos:column="24"/></index></name><operator pos:line="208" pos:column="24">.<pos:position pos:line="208" pos:column="25"/></operator><name pos:line="208" pos:column="25">opackets<pos:position pos:line="208" pos:column="33"/></name></expr></argument>)<pos:position pos:line="208" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="209" pos:column="5">if_submit<pos:position pos:line="209" pos:column="14"/></name><argument_list pos:line="209" pos:column="14">(<argument><expr><name><name pos:line="209" pos:column="15">ifstat<pos:position pos:line="209" pos:column="21"/></name><index pos:line="209" pos:column="21">[<expr><name pos:line="209" pos:column="22">i<pos:position pos:line="209" pos:column="23"/></name></expr>]<pos:position pos:line="209" pos:column="24"/></index></name><operator pos:line="209" pos:column="24">.<pos:position pos:line="209" pos:column="25"/></operator><name pos:line="209" pos:column="25">name<pos:position pos:line="209" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="209" pos:column="31">"if_errors"<pos:position pos:line="209" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="209" pos:column="44">ifstat<pos:position pos:line="209" pos:column="50"/></name><index pos:line="209" pos:column="50">[<expr><name pos:line="209" pos:column="51">i<pos:position pos:line="209" pos:column="52"/></name></expr>]<pos:position pos:line="209" pos:column="53"/></index></name><operator pos:line="209" pos:column="53">.<pos:position pos:line="209" pos:column="54"/></operator><name pos:line="209" pos:column="54">ierrors<pos:position pos:line="209" pos:column="61"/></name></expr></argument>,
              <argument><expr><name><name pos:line="210" pos:column="15">ifstat<pos:position pos:line="210" pos:column="21"/></name><index pos:line="210" pos:column="21">[<expr><name pos:line="210" pos:column="22">i<pos:position pos:line="210" pos:column="23"/></name></expr>]<pos:position pos:line="210" pos:column="24"/></index></name><operator pos:line="210" pos:column="24">.<pos:position pos:line="210" pos:column="25"/></operator><name pos:line="210" pos:column="25">oerrors<pos:position pos:line="210" pos:column="32"/></name></expr></argument>)<pos:position pos:line="210" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="34"/></expr_stmt>
  }<pos:position pos:line="211" pos:column="4"/></block></for>
<cpp:endif pos:line="212" pos:column="1">#<cpp:directive pos:line="212" pos:column="2">endif<pos:position pos:line="212" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="212" pos:column="8">/* HAVE_PERFSTAT */</comment>

  <return pos:line="214" pos:column="3">return <expr><operator pos:line="214" pos:column="10">(<pos:position pos:line="214" pos:column="11"/></operator><literal type="number" pos:line="214" pos:column="11">0<pos:position pos:line="214" pos:column="12"/></literal><operator pos:line="214" pos:column="12">)<pos:position pos:line="214" pos:column="13"/></operator></expr>;<pos:position pos:line="214" pos:column="14"/></return>
}<pos:position pos:line="215" pos:column="2"/></block></function></unit>

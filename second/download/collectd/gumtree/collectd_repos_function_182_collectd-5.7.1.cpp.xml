<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_182_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">submit_derive<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">type<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">type_instance<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="2" pos:column="27">derive_t<pos:position pos:line="2" pos:column="35"/></name></type> <name pos:line="2" pos:column="36">d<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="39">apache_t<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">st<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list> <block pos:line="2" pos:column="53">{
  <expr_stmt><expr><call><name pos:line="3" pos:column="3">submit_value<pos:position pos:line="3" pos:column="15"/></name><argument_list pos:line="3" pos:column="15">(<argument><expr><name pos:line="3" pos:column="16">type<pos:position pos:line="3" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="22">type_instance<pos:position pos:line="3" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="3" pos:column="37">(<pos:position pos:line="3" pos:column="38"/></operator><name pos:line="3" pos:column="38">value_t<pos:position pos:line="3" pos:column="45"/></name><operator pos:line="3" pos:column="45">)<pos:position pos:line="3" pos:column="46"/></operator><block pos:line="3" pos:column="46">{<expr><operator pos:line="3" pos:column="47">.<pos:position pos:line="3" pos:column="48"/></operator><name pos:line="3" pos:column="48">derive<pos:position pos:line="3" pos:column="54"/></name> <operator pos:line="3" pos:column="55">=<pos:position pos:line="3" pos:column="56"/></operator> <name pos:line="3" pos:column="57">d<pos:position pos:line="3" pos:column="58"/></name></expr>}<pos:position pos:line="3" pos:column="59"/></block></expr></argument>, <argument><expr><name pos:line="3" pos:column="61">st<pos:position pos:line="3" pos:column="63"/></name></expr></argument>)<pos:position pos:line="3" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="65"/></expr_stmt>
}<pos:position pos:line="4" pos:column="2"/></block></function></unit>

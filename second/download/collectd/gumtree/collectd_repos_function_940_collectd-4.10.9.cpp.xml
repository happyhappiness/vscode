<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_940_collectd-4.10.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">set_option<pos:position pos:line="1" pos:column="22"/></name> <parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">notification_t<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">n<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">option<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="63">const<pos:position pos:line="1" pos:column="68"/></specifier> <name pos:line="1" pos:column="69">char<pos:position pos:line="1" pos:column="73"/></name> <modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier></type><name pos:line="1" pos:column="75">value<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="81"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><operator pos:line="3" pos:column="7">(<pos:position pos:line="3" pos:column="8"/></operator><name pos:line="3" pos:column="8">n<pos:position pos:line="3" pos:column="9"/></name> <operator pos:line="3" pos:column="10">==<pos:position pos:line="3" pos:column="12"/></operator> <name pos:line="3" pos:column="13">NULL<pos:position pos:line="3" pos:column="17"/></name><operator pos:line="3" pos:column="17">)<pos:position pos:line="3" pos:column="18"/></operator> <operator pos:line="3" pos:column="19">||<pos:position pos:line="3" pos:column="21"/></operator> <operator pos:line="3" pos:column="22">(<pos:position pos:line="3" pos:column="23"/></operator><name pos:line="3" pos:column="23">option<pos:position pos:line="3" pos:column="29"/></name> <operator pos:line="3" pos:column="30">==<pos:position pos:line="3" pos:column="32"/></operator> <name pos:line="3" pos:column="33">NULL<pos:position pos:line="3" pos:column="37"/></name><operator pos:line="3" pos:column="37">)<pos:position pos:line="3" pos:column="38"/></operator> <operator pos:line="3" pos:column="39">||<pos:position pos:line="3" pos:column="41"/></operator> <operator pos:line="3" pos:column="42">(<pos:position pos:line="3" pos:column="43"/></operator><name pos:line="3" pos:column="43">value<pos:position pos:line="3" pos:column="48"/></name> <operator pos:line="3" pos:column="49">==<pos:position pos:line="3" pos:column="51"/></operator> <name pos:line="3" pos:column="52">NULL<pos:position pos:line="3" pos:column="56"/></name><operator pos:line="3" pos:column="56">)<pos:position pos:line="3" pos:column="57"/></operator></expr>)<pos:position pos:line="3" pos:column="58"/></condition><then pos:line="3" pos:column="58">
    <block type="pseudo"><return pos:line="4" pos:column="5">return <expr><operator pos:line="4" pos:column="12">(<pos:position pos:line="4" pos:column="13"/></operator><operator pos:line="4" pos:column="13">-<pos:position pos:line="4" pos:column="14"/></operator><literal type="number" pos:line="4" pos:column="14">1<pos:position pos:line="4" pos:column="15"/></literal><operator pos:line="4" pos:column="15">)<pos:position pos:line="4" pos:column="16"/></operator></expr>;<pos:position pos:line="4" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">DEBUG<pos:position pos:line="6" pos:column="8"/></name> <argument_list pos:line="6" pos:column="9">(<argument><expr><literal type="string" pos:line="6" pos:column="10">"utils_cmd_putnotif: set_option (option = %s, value = %s);"<pos:position pos:line="6" pos:column="69"/></literal></expr></argument>,
      <argument><expr><name pos:line="7" pos:column="7">option<pos:position pos:line="7" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="15">value<pos:position pos:line="7" pos:column="20"/></name></expr></argument>)<pos:position pos:line="7" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="22"/></expr_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><call><name pos:line="9" pos:column="7">strcasecmp<pos:position pos:line="9" pos:column="17"/></name> <argument_list pos:line="9" pos:column="18">(<argument><expr><literal type="string" pos:line="9" pos:column="19">"severity"<pos:position pos:line="9" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="31">option<pos:position pos:line="9" pos:column="37"/></name></expr></argument>)<pos:position pos:line="9" pos:column="38"/></argument_list></call> <operator pos:line="9" pos:column="39">==<pos:position pos:line="9" pos:column="41"/></operator> <literal type="number" pos:line="9" pos:column="42">0<pos:position pos:line="9" pos:column="43"/></literal></expr>)<pos:position pos:line="9" pos:column="44"/></condition><then pos:line="9" pos:column="44">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">(<pos:position pos:line="10" pos:column="13"/></operator><call><name pos:line="10" pos:column="13">set_option_severity<pos:position pos:line="10" pos:column="32"/></name> <argument_list pos:line="10" pos:column="33">(<argument><expr><name pos:line="10" pos:column="34">n<pos:position pos:line="10" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="37">value<pos:position pos:line="10" pos:column="42"/></name></expr></argument>)<pos:position pos:line="10" pos:column="43"/></argument_list></call><operator pos:line="10" pos:column="43">)<pos:position pos:line="10" pos:column="44"/></operator></expr>;<pos:position pos:line="10" pos:column="45"/></return></block></then>
  <elseif pos:line="11" pos:column="3">else <if pos:line="11" pos:column="8">if <condition pos:line="11" pos:column="11">(<expr><call><name pos:line="11" pos:column="12">strcasecmp<pos:position pos:line="11" pos:column="22"/></name> <argument_list pos:line="11" pos:column="23">(<argument><expr><literal type="string" pos:line="11" pos:column="24">"time"<pos:position pos:line="11" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="32">option<pos:position pos:line="11" pos:column="38"/></name></expr></argument>)<pos:position pos:line="11" pos:column="39"/></argument_list></call> <operator pos:line="11" pos:column="40">==<pos:position pos:line="11" pos:column="42"/></operator> <literal type="number" pos:line="11" pos:column="43">0<pos:position pos:line="11" pos:column="44"/></literal></expr>)<pos:position pos:line="11" pos:column="45"/></condition><then pos:line="11" pos:column="45">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">(<pos:position pos:line="12" pos:column="13"/></operator><call><name pos:line="12" pos:column="13">set_option_time<pos:position pos:line="12" pos:column="28"/></name> <argument_list pos:line="12" pos:column="29">(<argument><expr><name pos:line="12" pos:column="30">n<pos:position pos:line="12" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="33">value<pos:position pos:line="12" pos:column="38"/></name></expr></argument>)<pos:position pos:line="12" pos:column="39"/></argument_list></call><operator pos:line="12" pos:column="39">)<pos:position pos:line="12" pos:column="40"/></operator></expr>;<pos:position pos:line="12" pos:column="41"/></return></block></then></if></elseif>
  <elseif pos:line="13" pos:column="3">else <if pos:line="13" pos:column="8">if <condition pos:line="13" pos:column="11">(<expr><call><name pos:line="13" pos:column="12">strcasecmp<pos:position pos:line="13" pos:column="22"/></name> <argument_list pos:line="13" pos:column="23">(<argument><expr><literal type="string" pos:line="13" pos:column="24">"message"<pos:position pos:line="13" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="35">option<pos:position pos:line="13" pos:column="41"/></name></expr></argument>)<pos:position pos:line="13" pos:column="42"/></argument_list></call> <operator pos:line="13" pos:column="43">==<pos:position pos:line="13" pos:column="45"/></operator> <literal type="number" pos:line="13" pos:column="46">0<pos:position pos:line="13" pos:column="47"/></literal></expr>)<pos:position pos:line="13" pos:column="48"/></condition><then pos:line="13" pos:column="48">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="5">sstrncpy<pos:position pos:line="14" pos:column="13"/></name> <argument_list pos:line="14" pos:column="14">(<argument><expr><name><name pos:line="14" pos:column="15">n<pos:position pos:line="14" pos:column="16"/></name><operator pos:line="14" pos:column="16">-&gt;<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="18">message<pos:position pos:line="14" pos:column="25"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="27">value<pos:position pos:line="14" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="34">sizeof <argument_list pos:line="14" pos:column="41">(<argument><expr><name><name pos:line="14" pos:column="42">n<pos:position pos:line="14" pos:column="43"/></name><operator pos:line="14" pos:column="43">-&gt;<pos:position pos:line="14" pos:column="48"/></operator><name pos:line="14" pos:column="45">message<pos:position pos:line="14" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="55"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="15" pos:column="3">else <if pos:line="15" pos:column="8">if <condition pos:line="15" pos:column="11">(<expr><call><name pos:line="15" pos:column="12">strcasecmp<pos:position pos:line="15" pos:column="22"/></name> <argument_list pos:line="15" pos:column="23">(<argument><expr><literal type="string" pos:line="15" pos:column="24">"host"<pos:position pos:line="15" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="32">option<pos:position pos:line="15" pos:column="38"/></name></expr></argument>)<pos:position pos:line="15" pos:column="39"/></argument_list></call> <operator pos:line="15" pos:column="40">==<pos:position pos:line="15" pos:column="42"/></operator> <literal type="number" pos:line="15" pos:column="43">0<pos:position pos:line="15" pos:column="44"/></literal></expr>)<pos:position pos:line="15" pos:column="45"/></condition><then pos:line="15" pos:column="45">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="5">sstrncpy<pos:position pos:line="16" pos:column="13"/></name> <argument_list pos:line="16" pos:column="14">(<argument><expr><name><name pos:line="16" pos:column="15">n<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">-&gt;<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="18">host<pos:position pos:line="16" pos:column="22"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="24">value<pos:position pos:line="16" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="31">sizeof <argument_list pos:line="16" pos:column="38">(<argument><expr><name><name pos:line="16" pos:column="39">n<pos:position pos:line="16" pos:column="40"/></name><operator pos:line="16" pos:column="40">-&gt;<pos:position pos:line="16" pos:column="45"/></operator><name pos:line="16" pos:column="42">host<pos:position pos:line="16" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="49"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="17" pos:column="3">else <if pos:line="17" pos:column="8">if <condition pos:line="17" pos:column="11">(<expr><call><name pos:line="17" pos:column="12">strcasecmp<pos:position pos:line="17" pos:column="22"/></name> <argument_list pos:line="17" pos:column="23">(<argument><expr><literal type="string" pos:line="17" pos:column="24">"plugin"<pos:position pos:line="17" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="34">option<pos:position pos:line="17" pos:column="40"/></name></expr></argument>)<pos:position pos:line="17" pos:column="41"/></argument_list></call> <operator pos:line="17" pos:column="42">==<pos:position pos:line="17" pos:column="44"/></operator> <literal type="number" pos:line="17" pos:column="45">0<pos:position pos:line="17" pos:column="46"/></literal></expr>)<pos:position pos:line="17" pos:column="47"/></condition><then pos:line="17" pos:column="47">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="5">sstrncpy<pos:position pos:line="18" pos:column="13"/></name> <argument_list pos:line="18" pos:column="14">(<argument><expr><name><name pos:line="18" pos:column="15">n<pos:position pos:line="18" pos:column="16"/></name><operator pos:line="18" pos:column="16">-&gt;<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="18">plugin<pos:position pos:line="18" pos:column="24"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="26">value<pos:position pos:line="18" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="33">sizeof <argument_list pos:line="18" pos:column="40">(<argument><expr><name><name pos:line="18" pos:column="41">n<pos:position pos:line="18" pos:column="42"/></name><operator pos:line="18" pos:column="42">-&gt;<pos:position pos:line="18" pos:column="47"/></operator><name pos:line="18" pos:column="44">plugin<pos:position pos:line="18" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="53"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="19" pos:column="3">else <if pos:line="19" pos:column="8">if <condition pos:line="19" pos:column="11">(<expr><call><name pos:line="19" pos:column="12">strcasecmp<pos:position pos:line="19" pos:column="22"/></name> <argument_list pos:line="19" pos:column="23">(<argument><expr><literal type="string" pos:line="19" pos:column="24">"plugin_instance"<pos:position pos:line="19" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="43">option<pos:position pos:line="19" pos:column="49"/></name></expr></argument>)<pos:position pos:line="19" pos:column="50"/></argument_list></call> <operator pos:line="19" pos:column="51">==<pos:position pos:line="19" pos:column="53"/></operator> <literal type="number" pos:line="19" pos:column="54">0<pos:position pos:line="19" pos:column="55"/></literal></expr>)<pos:position pos:line="19" pos:column="56"/></condition><then pos:line="19" pos:column="56">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="5">sstrncpy<pos:position pos:line="20" pos:column="13"/></name> <argument_list pos:line="20" pos:column="14">(<argument><expr><name><name pos:line="20" pos:column="15">n<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">-&gt;<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="18">plugin_instance<pos:position pos:line="20" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="35">value<pos:position pos:line="20" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="42">sizeof <argument_list pos:line="20" pos:column="49">(<argument><expr><name><name pos:line="20" pos:column="50">n<pos:position pos:line="20" pos:column="51"/></name><operator pos:line="20" pos:column="51">-&gt;<pos:position pos:line="20" pos:column="56"/></operator><name pos:line="20" pos:column="53">plugin_instance<pos:position pos:line="20" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="71"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="21" pos:column="3">else <if pos:line="21" pos:column="8">if <condition pos:line="21" pos:column="11">(<expr><call><name pos:line="21" pos:column="12">strcasecmp<pos:position pos:line="21" pos:column="22"/></name> <argument_list pos:line="21" pos:column="23">(<argument><expr><literal type="string" pos:line="21" pos:column="24">"type"<pos:position pos:line="21" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="32">option<pos:position pos:line="21" pos:column="38"/></name></expr></argument>)<pos:position pos:line="21" pos:column="39"/></argument_list></call> <operator pos:line="21" pos:column="40">==<pos:position pos:line="21" pos:column="42"/></operator> <literal type="number" pos:line="21" pos:column="43">0<pos:position pos:line="21" pos:column="44"/></literal></expr>)<pos:position pos:line="21" pos:column="45"/></condition><then pos:line="21" pos:column="45">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="5">sstrncpy<pos:position pos:line="22" pos:column="13"/></name> <argument_list pos:line="22" pos:column="14">(<argument><expr><name><name pos:line="22" pos:column="15">n<pos:position pos:line="22" pos:column="16"/></name><operator pos:line="22" pos:column="16">-&gt;<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="18">type<pos:position pos:line="22" pos:column="22"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="24">value<pos:position pos:line="22" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="31">sizeof <argument_list pos:line="22" pos:column="38">(<argument><expr><name><name pos:line="22" pos:column="39">n<pos:position pos:line="22" pos:column="40"/></name><operator pos:line="22" pos:column="40">-&gt;<pos:position pos:line="22" pos:column="45"/></operator><name pos:line="22" pos:column="42">type<pos:position pos:line="22" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="49"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="23" pos:column="3">else <if pos:line="23" pos:column="8">if <condition pos:line="23" pos:column="11">(<expr><call><name pos:line="23" pos:column="12">strcasecmp<pos:position pos:line="23" pos:column="22"/></name> <argument_list pos:line="23" pos:column="23">(<argument><expr><literal type="string" pos:line="23" pos:column="24">"type_instance"<pos:position pos:line="23" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="41">option<pos:position pos:line="23" pos:column="47"/></name></expr></argument>)<pos:position pos:line="23" pos:column="48"/></argument_list></call> <operator pos:line="23" pos:column="49">==<pos:position pos:line="23" pos:column="51"/></operator> <literal type="number" pos:line="23" pos:column="52">0<pos:position pos:line="23" pos:column="53"/></literal></expr>)<pos:position pos:line="23" pos:column="54"/></condition><then pos:line="23" pos:column="54">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="5">sstrncpy<pos:position pos:line="24" pos:column="13"/></name> <argument_list pos:line="24" pos:column="14">(<argument><expr><name><name pos:line="24" pos:column="15">n<pos:position pos:line="24" pos:column="16"/></name><operator pos:line="24" pos:column="16">-&gt;<pos:position pos:line="24" pos:column="21"/></operator><name pos:line="24" pos:column="18">type_instance<pos:position pos:line="24" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="33">value<pos:position pos:line="24" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="40">sizeof <argument_list pos:line="24" pos:column="47">(<argument><expr><name><name pos:line="24" pos:column="48">n<pos:position pos:line="24" pos:column="49"/></name><operator pos:line="24" pos:column="49">-&gt;<pos:position pos:line="24" pos:column="54"/></operator><name pos:line="24" pos:column="51">type_instance<pos:position pos:line="24" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="67"/></expr_stmt></block></then></if></elseif>
  <else pos:line="25" pos:column="3">else
    <block type="pseudo"><return pos:line="26" pos:column="5">return <expr><operator pos:line="26" pos:column="12">(<pos:position pos:line="26" pos:column="13"/></operator><literal type="number" pos:line="26" pos:column="13">1<pos:position pos:line="26" pos:column="14"/></literal><operator pos:line="26" pos:column="14">)<pos:position pos:line="26" pos:column="15"/></operator></expr>;<pos:position pos:line="26" pos:column="16"/></return></block></else></if>

  <return pos:line="28" pos:column="3">return <expr><operator pos:line="28" pos:column="10">(<pos:position pos:line="28" pos:column="11"/></operator><literal type="number" pos:line="28" pos:column="11">0<pos:position pos:line="28" pos:column="12"/></literal><operator pos:line="28" pos:column="12">)<pos:position pos:line="28" pos:column="13"/></operator></expr>;<pos:position pos:line="28" pos:column="14"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

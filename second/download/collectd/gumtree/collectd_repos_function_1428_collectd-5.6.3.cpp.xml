<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1428_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">get_label_uuid<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">device<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier><modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">label<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">char<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">uuid<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list> <block pos:line="1" pos:column="73">{
  <comment type="block" pos:line="2" pos:column="3">/* start with ext2 and xfs tests, taken from mount_guess_fstype */</comment>
  <comment type="block" pos:line="3" pos:column="3">/* should merge these later */</comment>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">fd<pos:position pos:line="4" pos:column="9"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="11">rv<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><literal type="number" pos:line="4" pos:column="16">1<pos:position pos:line="4" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">namesize<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">ext2_super_block<pos:position pos:line="6" pos:column="26"/></name></name></type> <name pos:line="6" pos:column="27">e2sb<pos:position pos:line="6" pos:column="31"/></name></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>
<cpp:if pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">if<pos:position pos:line="7" pos:column="4"/></cpp:directive> <expr><name pos:line="7" pos:column="5">HAVE_XFS_XQM_H<pos:position pos:line="7" pos:column="19"/></name></expr></cpp:if>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">xfs_super_block<pos:position pos:line="8" pos:column="25"/></name></name></type> <name pos:line="8" pos:column="26">xfsb<pos:position pos:line="8" pos:column="30"/></name></decl>;<pos:position pos:line="8" pos:column="31"/></decl_stmt>
<cpp:endif pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">endif<pos:position pos:line="9" pos:column="7"/></cpp:directive></cpp:endif>
  <decl_stmt><decl><type><name><name pos:line="10" pos:column="3">struct<pos:position pos:line="10" pos:column="9"/></name> <name pos:line="10" pos:column="10">reiserfs_super_block<pos:position pos:line="10" pos:column="30"/></name></name></type> <name pos:line="10" pos:column="31">reisersb<pos:position pos:line="10" pos:column="39"/></name></decl>;<pos:position pos:line="10" pos:column="40"/></decl_stmt>

  <expr_stmt><expr><name pos:line="12" pos:column="3">fd<pos:position pos:line="12" pos:column="5"/></name> <operator pos:line="12" pos:column="6">=<pos:position pos:line="12" pos:column="7"/></operator> <call><name pos:line="12" pos:column="8">open<pos:position pos:line="12" pos:column="12"/></name><argument_list pos:line="12" pos:column="12">(<argument><expr><name pos:line="12" pos:column="13">device<pos:position pos:line="12" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="21">O_RDONLY<pos:position pos:line="12" pos:column="29"/></name></expr></argument>)<pos:position pos:line="12" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="31"/></expr_stmt>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">fd<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">==<pos:position pos:line="13" pos:column="12"/></operator> <operator pos:line="13" pos:column="13">-<pos:position pos:line="13" pos:column="14"/></operator><literal type="number" pos:line="13" pos:column="14">1<pos:position pos:line="13" pos:column="15"/></literal></expr>)<pos:position pos:line="13" pos:column="16"/></condition><then pos:line="13" pos:column="16"> <block pos:line="13" pos:column="17">{
    <return pos:line="14" pos:column="5">return <expr><name pos:line="14" pos:column="12">rv<pos:position pos:line="14" pos:column="14"/></name></expr>;<pos:position pos:line="14" pos:column="15"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><call><name pos:line="17" pos:column="7">lseek<pos:position pos:line="17" pos:column="12"/></name><argument_list pos:line="17" pos:column="12">(<argument><expr><name pos:line="17" pos:column="13">fd<pos:position pos:line="17" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="17">1024<pos:position pos:line="17" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="23">SEEK_SET<pos:position pos:line="17" pos:column="31"/></name></expr></argument>)<pos:position pos:line="17" pos:column="32"/></argument_list></call> <operator pos:line="17" pos:column="33">==<pos:position pos:line="17" pos:column="35"/></operator> <literal type="number" pos:line="17" pos:column="36">1024<pos:position pos:line="17" pos:column="40"/></literal> <operator pos:line="17" pos:column="41">&amp;&amp;<pos:position pos:line="17" pos:column="51"/></operator>
      <call><name pos:line="18" pos:column="7">read<pos:position pos:line="18" pos:column="11"/></name><argument_list pos:line="18" pos:column="11">(<argument><expr><name pos:line="18" pos:column="12">fd<pos:position pos:line="18" pos:column="14"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="16">(<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="17">char<pos:position pos:line="18" pos:column="21"/></name> <operator pos:line="18" pos:column="22">*<pos:position pos:line="18" pos:column="23"/></operator><operator pos:line="18" pos:column="23">)<pos:position pos:line="18" pos:column="24"/></operator><operator pos:line="18" pos:column="24">&amp;<pos:position pos:line="18" pos:column="29"/></operator><name pos:line="18" pos:column="25">e2sb<pos:position pos:line="18" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="31">sizeof<argument_list pos:line="18" pos:column="37">(<argument><expr><name pos:line="18" pos:column="38">e2sb<pos:position pos:line="18" pos:column="42"/></name></expr></argument>)<pos:position pos:line="18" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="44"/></argument_list></call> <operator pos:line="18" pos:column="45">==<pos:position pos:line="18" pos:column="47"/></operator> <sizeof pos:line="18" pos:column="48">sizeof<argument_list pos:line="18" pos:column="54">(<argument><expr><name pos:line="18" pos:column="55">e2sb<pos:position pos:line="18" pos:column="59"/></name></expr></argument>)<pos:position pos:line="18" pos:column="60"/></argument_list></sizeof> <operator pos:line="18" pos:column="61">&amp;&amp;<pos:position pos:line="18" pos:column="71"/></operator>
      <call><name pos:line="19" pos:column="7">ext2magic<pos:position pos:line="19" pos:column="16"/></name><argument_list pos:line="19" pos:column="16">(<argument><expr><name pos:line="19" pos:column="17">e2sb<pos:position pos:line="19" pos:column="21"/></name></expr></argument>)<pos:position pos:line="19" pos:column="22"/></argument_list></call> <operator pos:line="19" pos:column="23">==<pos:position pos:line="19" pos:column="25"/></operator> <name pos:line="19" pos:column="26">EXT2_SUPER_MAGIC<pos:position pos:line="19" pos:column="42"/></name></expr>)<pos:position pos:line="19" pos:column="43"/></condition><then pos:line="19" pos:column="43"> <block pos:line="19" pos:column="44">{
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">memcpy<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><name pos:line="20" pos:column="12">uuid<pos:position pos:line="20" pos:column="16"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="18">e2sb<pos:position pos:line="20" pos:column="22"/></name><operator pos:line="20" pos:column="22">.<pos:position pos:line="20" pos:column="23"/></operator><name pos:line="20" pos:column="23">s_uuid<pos:position pos:line="20" pos:column="29"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="31">sizeof<argument_list pos:line="20" pos:column="37">(<argument><expr><name><name pos:line="20" pos:column="38">e2sb<pos:position pos:line="20" pos:column="42"/></name><operator pos:line="20" pos:column="42">.<pos:position pos:line="20" pos:column="43"/></operator><name pos:line="20" pos:column="43">s_uuid<pos:position pos:line="20" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><name pos:line="21" pos:column="5">namesize<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">=<pos:position pos:line="21" pos:column="15"/></operator> <sizeof pos:line="21" pos:column="16">sizeof<argument_list pos:line="21" pos:column="22">(<argument><expr><name><name pos:line="21" pos:column="23">e2sb<pos:position pos:line="21" pos:column="27"/></name><operator pos:line="21" pos:column="27">.<pos:position pos:line="21" pos:column="28"/></operator><name pos:line="21" pos:column="28">s_volume_name<pos:position pos:line="21" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="42"/></argument_list></sizeof></expr>;<pos:position pos:line="21" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="22" pos:column="5">*<pos:position pos:line="22" pos:column="6"/></operator><name pos:line="22" pos:column="6">label<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <call><name pos:line="22" pos:column="14">smalloc<pos:position pos:line="22" pos:column="21"/></name><argument_list pos:line="22" pos:column="21">(<argument><expr><name pos:line="22" pos:column="22">namesize<pos:position pos:line="22" pos:column="30"/></name> <operator pos:line="22" pos:column="31">+<pos:position pos:line="22" pos:column="32"/></operator> <literal type="number" pos:line="22" pos:column="33">1<pos:position pos:line="22" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">sstrncpy<pos:position pos:line="23" pos:column="13"/></name><argument_list pos:line="23" pos:column="13">(<argument><expr><operator pos:line="23" pos:column="14">*<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="15">label<pos:position pos:line="23" pos:column="20"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="22">e2sb<pos:position pos:line="23" pos:column="26"/></name><operator pos:line="23" pos:column="26">.<pos:position pos:line="23" pos:column="27"/></operator><name pos:line="23" pos:column="27">s_volume_name<pos:position pos:line="23" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="42">namesize<pos:position pos:line="23" pos:column="50"/></name></expr></argument>)<pos:position pos:line="23" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><name pos:line="24" pos:column="5">rv<pos:position pos:line="24" pos:column="7"/></name> <operator pos:line="24" pos:column="8">=<pos:position pos:line="24" pos:column="9"/></operator> <literal type="number" pos:line="24" pos:column="10">0<pos:position pos:line="24" pos:column="11"/></literal></expr>;<pos:position pos:line="24" pos:column="12"/></expr_stmt>
<cpp:if pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">if<pos:position pos:line="25" pos:column="4"/></cpp:directive> <expr><name pos:line="25" pos:column="5">HAVE_XFS_XQM_H<pos:position pos:line="25" pos:column="19"/></name></expr></cpp:if>
  }<pos:position pos:line="26" pos:column="4"/></block></then> <elseif pos:line="26" pos:column="5">else <if pos:line="26" pos:column="10">if <condition pos:line="26" pos:column="13">(<expr><call><name pos:line="26" pos:column="14">lseek<pos:position pos:line="26" pos:column="19"/></name><argument_list pos:line="26" pos:column="19">(<argument><expr><name pos:line="26" pos:column="20">fd<pos:position pos:line="26" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="24">0<pos:position pos:line="26" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="27">SEEK_SET<pos:position pos:line="26" pos:column="35"/></name></expr></argument>)<pos:position pos:line="26" pos:column="36"/></argument_list></call> <operator pos:line="26" pos:column="37">==<pos:position pos:line="26" pos:column="39"/></operator> <literal type="number" pos:line="26" pos:column="40">0<pos:position pos:line="26" pos:column="41"/></literal> <operator pos:line="26" pos:column="42">&amp;&amp;<pos:position pos:line="26" pos:column="52"/></operator>
             <call><name pos:line="27" pos:column="14">read<pos:position pos:line="27" pos:column="18"/></name><argument_list pos:line="27" pos:column="18">(<argument><expr><name pos:line="27" pos:column="19">fd<pos:position pos:line="27" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="23">(<pos:position pos:line="27" pos:column="24"/></operator><name pos:line="27" pos:column="24">char<pos:position pos:line="27" pos:column="28"/></name> <operator pos:line="27" pos:column="29">*<pos:position pos:line="27" pos:column="30"/></operator><operator pos:line="27" pos:column="30">)<pos:position pos:line="27" pos:column="31"/></operator><operator pos:line="27" pos:column="31">&amp;<pos:position pos:line="27" pos:column="36"/></operator><name pos:line="27" pos:column="32">xfsb<pos:position pos:line="27" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="38">sizeof<argument_list pos:line="27" pos:column="44">(<argument><expr><name pos:line="27" pos:column="45">xfsb<pos:position pos:line="27" pos:column="49"/></name></expr></argument>)<pos:position pos:line="27" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="51"/></argument_list></call> <operator pos:line="27" pos:column="52">==<pos:position pos:line="27" pos:column="54"/></operator> <sizeof pos:line="27" pos:column="55">sizeof<argument_list pos:line="27" pos:column="61">(<argument><expr><name pos:line="27" pos:column="62">xfsb<pos:position pos:line="27" pos:column="66"/></name></expr></argument>)<pos:position pos:line="27" pos:column="67"/></argument_list></sizeof> <operator pos:line="27" pos:column="68">&amp;&amp;<pos:position pos:line="27" pos:column="78"/></operator>
             <operator pos:line="28" pos:column="14">(<pos:position pos:line="28" pos:column="15"/></operator><call><name pos:line="28" pos:column="15">strncmp<pos:position pos:line="28" pos:column="22"/></name><argument_list pos:line="28" pos:column="22">(<argument><expr><operator pos:line="28" pos:column="23">(<pos:position pos:line="28" pos:column="24"/></operator><name pos:line="28" pos:column="24">char<pos:position pos:line="28" pos:column="28"/></name> <operator pos:line="28" pos:column="29">*<pos:position pos:line="28" pos:column="30"/></operator><operator pos:line="28" pos:column="30">)<pos:position pos:line="28" pos:column="31"/></operator><operator pos:line="28" pos:column="31">&amp;<pos:position pos:line="28" pos:column="36"/></operator><name><name pos:line="28" pos:column="32">xfsb<pos:position pos:line="28" pos:column="36"/></name><operator pos:line="28" pos:column="36">.<pos:position pos:line="28" pos:column="37"/></operator><name pos:line="28" pos:column="37">s_magic<pos:position pos:line="28" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="46">XFS_SUPER_MAGIC_STR<pos:position pos:line="28" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="67">4<pos:position pos:line="28" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="69"/></argument_list></call> <operator pos:line="28" pos:column="70">==<pos:position pos:line="28" pos:column="72"/></operator> <literal type="number" pos:line="28" pos:column="73">0<pos:position pos:line="28" pos:column="74"/></literal> <operator pos:line="28" pos:column="75">||<pos:position pos:line="28" pos:column="77"/></operator>
              <call><name pos:line="29" pos:column="15">strncmp<pos:position pos:line="29" pos:column="22"/></name><argument_list pos:line="29" pos:column="22">(<argument><expr><operator pos:line="29" pos:column="23">(<pos:position pos:line="29" pos:column="24"/></operator><name pos:line="29" pos:column="24">char<pos:position pos:line="29" pos:column="28"/></name> <operator pos:line="29" pos:column="29">*<pos:position pos:line="29" pos:column="30"/></operator><operator pos:line="29" pos:column="30">)<pos:position pos:line="29" pos:column="31"/></operator><operator pos:line="29" pos:column="31">&amp;<pos:position pos:line="29" pos:column="36"/></operator><name><name pos:line="29" pos:column="32">xfsb<pos:position pos:line="29" pos:column="36"/></name><operator pos:line="29" pos:column="36">.<pos:position pos:line="29" pos:column="37"/></operator><name pos:line="29" pos:column="37">s_magic<pos:position pos:line="29" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="46">XFS_SUPER_MAGIC2_STR<pos:position pos:line="29" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="68">4<pos:position pos:line="29" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="70"/></argument_list></call> <operator pos:line="29" pos:column="71">==<pos:position pos:line="29" pos:column="73"/></operator> <literal type="number" pos:line="29" pos:column="74">0<pos:position pos:line="29" pos:column="75"/></literal><operator pos:line="29" pos:column="75">)<pos:position pos:line="29" pos:column="76"/></operator></expr>)<pos:position pos:line="29" pos:column="77"/></condition><then pos:line="29" pos:column="77"> <block pos:line="29" pos:column="78">{
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">memcpy<pos:position pos:line="30" pos:column="11"/></name><argument_list pos:line="30" pos:column="11">(<argument><expr><name pos:line="30" pos:column="12">uuid<pos:position pos:line="30" pos:column="16"/></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="18">xfsb<pos:position pos:line="30" pos:column="22"/></name><operator pos:line="30" pos:column="22">.<pos:position pos:line="30" pos:column="23"/></operator><name pos:line="30" pos:column="23">s_uuid<pos:position pos:line="30" pos:column="29"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="31">sizeof<argument_list pos:line="30" pos:column="37">(<argument><expr><name><name pos:line="30" pos:column="38">xfsb<pos:position pos:line="30" pos:column="42"/></name><operator pos:line="30" pos:column="42">.<pos:position pos:line="30" pos:column="43"/></operator><name pos:line="30" pos:column="43">s_uuid<pos:position pos:line="30" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="30" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><name pos:line="31" pos:column="5">namesize<pos:position pos:line="31" pos:column="13"/></name> <operator pos:line="31" pos:column="14">=<pos:position pos:line="31" pos:column="15"/></operator> <sizeof pos:line="31" pos:column="16">sizeof<argument_list pos:line="31" pos:column="22">(<argument><expr><name><name pos:line="31" pos:column="23">xfsb<pos:position pos:line="31" pos:column="27"/></name><operator pos:line="31" pos:column="27">.<pos:position pos:line="31" pos:column="28"/></operator><name pos:line="31" pos:column="28">s_fsname<pos:position pos:line="31" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="37"/></argument_list></sizeof></expr>;<pos:position pos:line="31" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="32" pos:column="5">*<pos:position pos:line="32" pos:column="6"/></operator><name pos:line="32" pos:column="6">label<pos:position pos:line="32" pos:column="11"/></name> <operator pos:line="32" pos:column="12">=<pos:position pos:line="32" pos:column="13"/></operator> <call><name pos:line="32" pos:column="14">smalloc<pos:position pos:line="32" pos:column="21"/></name><argument_list pos:line="32" pos:column="21">(<argument><expr><name pos:line="32" pos:column="22">namesize<pos:position pos:line="32" pos:column="30"/></name> <operator pos:line="32" pos:column="31">+<pos:position pos:line="32" pos:column="32"/></operator> <literal type="number" pos:line="32" pos:column="33">1<pos:position pos:line="32" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">sstrncpy<pos:position pos:line="33" pos:column="13"/></name><argument_list pos:line="33" pos:column="13">(<argument><expr><operator pos:line="33" pos:column="14">*<pos:position pos:line="33" pos:column="15"/></operator><name pos:line="33" pos:column="15">label<pos:position pos:line="33" pos:column="20"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="22">xfsb<pos:position pos:line="33" pos:column="26"/></name><operator pos:line="33" pos:column="26">.<pos:position pos:line="33" pos:column="27"/></operator><name pos:line="33" pos:column="27">s_fsname<pos:position pos:line="33" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="37">namesize<pos:position pos:line="33" pos:column="45"/></name></expr></argument>)<pos:position pos:line="33" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name pos:line="34" pos:column="5">rv<pos:position pos:line="34" pos:column="7"/></name> <operator pos:line="34" pos:column="8">=<pos:position pos:line="34" pos:column="9"/></operator> <literal type="number" pos:line="34" pos:column="10">0<pos:position pos:line="34" pos:column="11"/></literal></expr>;<pos:position pos:line="34" pos:column="12"/></expr_stmt>
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif<pos:position pos:line="35" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="35" pos:column="8">/* HAVE_XFS_XQM_H */</comment>
  }<pos:position pos:line="36" pos:column="4"/></block></then></if></elseif> <elseif pos:line="36" pos:column="5">else <if pos:line="36" pos:column="10">if <condition pos:line="36" pos:column="13">(<expr><call><name pos:line="36" pos:column="14">lseek<pos:position pos:line="36" pos:column="19"/></name><argument_list pos:line="36" pos:column="19">(<argument><expr><name pos:line="36" pos:column="20">fd<pos:position pos:line="36" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="24">65536<pos:position pos:line="36" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="31">SEEK_SET<pos:position pos:line="36" pos:column="39"/></name></expr></argument>)<pos:position pos:line="36" pos:column="40"/></argument_list></call> <operator pos:line="36" pos:column="41">==<pos:position pos:line="36" pos:column="43"/></operator> <literal type="number" pos:line="36" pos:column="44">65536<pos:position pos:line="36" pos:column="49"/></literal> <operator pos:line="36" pos:column="50">&amp;&amp;<pos:position pos:line="36" pos:column="60"/></operator>
             <call><name pos:line="37" pos:column="14">read<pos:position pos:line="37" pos:column="18"/></name><argument_list pos:line="37" pos:column="18">(<argument><expr><name pos:line="37" pos:column="19">fd<pos:position pos:line="37" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="23">(<pos:position pos:line="37" pos:column="24"/></operator><name pos:line="37" pos:column="24">char<pos:position pos:line="37" pos:column="28"/></name> <operator pos:line="37" pos:column="29">*<pos:position pos:line="37" pos:column="30"/></operator><operator pos:line="37" pos:column="30">)<pos:position pos:line="37" pos:column="31"/></operator><operator pos:line="37" pos:column="31">&amp;<pos:position pos:line="37" pos:column="36"/></operator><name pos:line="37" pos:column="32">reisersb<pos:position pos:line="37" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="37" pos:column="42">sizeof<argument_list pos:line="37" pos:column="48">(<argument><expr><name pos:line="37" pos:column="49">reisersb<pos:position pos:line="37" pos:column="57"/></name></expr></argument>)<pos:position pos:line="37" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="37" pos:column="59"/></argument_list></call> <operator pos:line="37" pos:column="60">==<pos:position pos:line="37" pos:column="62"/></operator>
                 <sizeof pos:line="38" pos:column="18">sizeof<argument_list pos:line="38" pos:column="24">(<argument><expr><name pos:line="38" pos:column="25">reisersb<pos:position pos:line="38" pos:column="33"/></name></expr></argument>)<pos:position pos:line="38" pos:column="34"/></argument_list></sizeof> <operator pos:line="38" pos:column="35">&amp;&amp;<pos:position pos:line="38" pos:column="45"/></operator>
             <operator pos:line="39" pos:column="14">!<pos:position pos:line="39" pos:column="15"/></operator><call><name pos:line="39" pos:column="15">strncmp<pos:position pos:line="39" pos:column="22"/></name><argument_list pos:line="39" pos:column="22">(<argument><expr><operator pos:line="39" pos:column="23">(<pos:position pos:line="39" pos:column="24"/></operator><name pos:line="39" pos:column="24">char<pos:position pos:line="39" pos:column="28"/></name> <operator pos:line="39" pos:column="29">*<pos:position pos:line="39" pos:column="30"/></operator><operator pos:line="39" pos:column="30">)<pos:position pos:line="39" pos:column="31"/></operator><operator pos:line="39" pos:column="31">&amp;<pos:position pos:line="39" pos:column="36"/></operator><name><name pos:line="39" pos:column="32">reisersb<pos:position pos:line="39" pos:column="40"/></name><operator pos:line="39" pos:column="40">.<pos:position pos:line="39" pos:column="41"/></operator><name pos:line="39" pos:column="41">s_magic<pos:position pos:line="39" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="50">REISER_SUPER_MAGIC<pos:position pos:line="39" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="70">9<pos:position pos:line="39" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="73"/></condition><then pos:line="39" pos:column="73"> <block pos:line="39" pos:column="74">{
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">memcpy<pos:position pos:line="40" pos:column="11"/></name><argument_list pos:line="40" pos:column="11">(<argument><expr><name pos:line="40" pos:column="12">uuid<pos:position pos:line="40" pos:column="16"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="18">reisersb<pos:position pos:line="40" pos:column="26"/></name><operator pos:line="40" pos:column="26">.<pos:position pos:line="40" pos:column="27"/></operator><name pos:line="40" pos:column="27">s_uuid<pos:position pos:line="40" pos:column="33"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="40" pos:column="35">sizeof<argument_list pos:line="40" pos:column="41">(<argument><expr><name><name pos:line="40" pos:column="42">reisersb<pos:position pos:line="40" pos:column="50"/></name><operator pos:line="40" pos:column="50">.<pos:position pos:line="40" pos:column="51"/></operator><name pos:line="40" pos:column="51">s_uuid<pos:position pos:line="40" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="40" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><name pos:line="41" pos:column="5">namesize<pos:position pos:line="41" pos:column="13"/></name> <operator pos:line="41" pos:column="14">=<pos:position pos:line="41" pos:column="15"/></operator> <sizeof pos:line="41" pos:column="16">sizeof<argument_list pos:line="41" pos:column="22">(<argument><expr><name><name pos:line="41" pos:column="23">reisersb<pos:position pos:line="41" pos:column="31"/></name><operator pos:line="41" pos:column="31">.<pos:position pos:line="41" pos:column="32"/></operator><name pos:line="41" pos:column="32">s_volume_name<pos:position pos:line="41" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="46"/></argument_list></sizeof></expr>;<pos:position pos:line="41" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="42" pos:column="5">*<pos:position pos:line="42" pos:column="6"/></operator><name pos:line="42" pos:column="6">label<pos:position pos:line="42" pos:column="11"/></name> <operator pos:line="42" pos:column="12">=<pos:position pos:line="42" pos:column="13"/></operator> <call><name pos:line="42" pos:column="14">smalloc<pos:position pos:line="42" pos:column="21"/></name><argument_list pos:line="42" pos:column="21">(<argument><expr><name pos:line="42" pos:column="22">namesize<pos:position pos:line="42" pos:column="30"/></name> <operator pos:line="42" pos:column="31">+<pos:position pos:line="42" pos:column="32"/></operator> <literal type="number" pos:line="42" pos:column="33">1<pos:position pos:line="42" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">sstrncpy<pos:position pos:line="43" pos:column="13"/></name><argument_list pos:line="43" pos:column="13">(<argument><expr><operator pos:line="43" pos:column="14">*<pos:position pos:line="43" pos:column="15"/></operator><name pos:line="43" pos:column="15">label<pos:position pos:line="43" pos:column="20"/></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="22">reisersb<pos:position pos:line="43" pos:column="30"/></name><operator pos:line="43" pos:column="30">.<pos:position pos:line="43" pos:column="31"/></operator><name pos:line="43" pos:column="31">s_volume_name<pos:position pos:line="43" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="46">namesize<pos:position pos:line="43" pos:column="54"/></name></expr></argument>)<pos:position pos:line="43" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><name pos:line="44" pos:column="5">rv<pos:position pos:line="44" pos:column="7"/></name> <operator pos:line="44" pos:column="8">=<pos:position pos:line="44" pos:column="9"/></operator> <literal type="number" pos:line="44" pos:column="10">0<pos:position pos:line="44" pos:column="11"/></literal></expr>;<pos:position pos:line="44" pos:column="12"/></expr_stmt>
  }<pos:position pos:line="45" pos:column="4"/></block></then></if></elseif></if>
  <expr_stmt><expr><call><name pos:line="46" pos:column="3">close<pos:position pos:line="46" pos:column="8"/></name><argument_list pos:line="46" pos:column="8">(<argument><expr><name pos:line="46" pos:column="9">fd<pos:position pos:line="46" pos:column="11"/></name></expr></argument>)<pos:position pos:line="46" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="13"/></expr_stmt>
  <return pos:line="47" pos:column="3">return <expr><name pos:line="47" pos:column="10">rv<pos:position pos:line="47" pos:column="12"/></name></expr>;<pos:position pos:line="47" pos:column="13"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

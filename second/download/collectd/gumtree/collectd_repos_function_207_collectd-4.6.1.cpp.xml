<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_207_collectd-4.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">df_read<pos:position pos:line="1" pos:column="19"/></name> <parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">void<pos:position pos:line="1" pos:column="25"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="26"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><name pos:line="3" pos:column="5">HAVE_STATVFS<pos:position pos:line="3" pos:column="17"/></name></expr></cpp:if>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">statvfs<pos:position pos:line="4" pos:column="23"/></name></name></type> <name pos:line="4" pos:column="24">statbuf<pos:position pos:line="4" pos:column="31"/></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
<cpp:elif pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">elif<pos:position pos:line="5" pos:column="6"/></cpp:directive> <expr><name pos:line="5" pos:column="7">HAVE_STATFS<pos:position pos:line="5" pos:column="18"/></name></expr></cpp:elif>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">statfs<pos:position pos:line="6" pos:column="22"/></name></name></type> <name pos:line="6" pos:column="23">statbuf<pos:position pos:line="6" pos:column="30"/></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
<cpp:endif pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">endif<pos:position pos:line="7" pos:column="7"/></cpp:directive></cpp:endif>
	<comment type="block" pos:line="8" pos:column="9">/* struct STATANYFS statbuf; */</comment>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">cu_mount_t<pos:position pos:line="9" pos:column="19"/></name> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier></type><name pos:line="9" pos:column="21">mnt_list<pos:position pos:line="9" pos:column="29"/></name></decl>;<pos:position pos:line="9" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">cu_mount_t<pos:position pos:line="10" pos:column="19"/></name> <modifier pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></modifier></type><name pos:line="10" pos:column="21">mnt_ptr<pos:position pos:line="10" pos:column="28"/></name></decl>;<pos:position pos:line="10" pos:column="29"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="12" pos:column="9">unsigned<pos:position pos:line="12" pos:column="17"/></name> <name pos:line="12" pos:column="18">long<pos:position pos:line="12" pos:column="22"/></name> <name pos:line="12" pos:column="23">long<pos:position pos:line="12" pos:column="27"/></name></type> <name pos:line="12" pos:column="28">blocksize<pos:position pos:line="12" pos:column="37"/></name></decl>;<pos:position pos:line="12" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">gauge_t<pos:position pos:line="13" pos:column="16"/></name></type> <name pos:line="13" pos:column="17">df_free<pos:position pos:line="13" pos:column="24"/></name></decl>;<pos:position pos:line="13" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">gauge_t<pos:position pos:line="14" pos:column="16"/></name></type> <name pos:line="14" pos:column="17">df_used<pos:position pos:line="14" pos:column="24"/></name></decl>;<pos:position pos:line="14" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">char<pos:position pos:line="15" pos:column="13"/></name></type> <name><name pos:line="15" pos:column="14">mnt_name<pos:position pos:line="15" pos:column="22"/></name><index pos:line="15" pos:column="22">[<expr><literal type="number" pos:line="15" pos:column="23">256<pos:position pos:line="15" pos:column="26"/></literal></expr>]<pos:position pos:line="15" pos:column="27"/></index></name></decl>;<pos:position pos:line="15" pos:column="28"/></decl_stmt>

	<expr_stmt><expr><name pos:line="17" pos:column="9">mnt_list<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">=<pos:position pos:line="17" pos:column="19"/></operator> <name pos:line="17" pos:column="20">NULL<pos:position pos:line="17" pos:column="24"/></name></expr>;<pos:position pos:line="17" pos:column="25"/></expr_stmt>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><call><name pos:line="18" pos:column="13">cu_mount_getlist<pos:position pos:line="18" pos:column="29"/></name> <argument_list pos:line="18" pos:column="30">(<argument><expr><operator pos:line="18" pos:column="31">&amp;<pos:position pos:line="18" pos:column="36"/></operator><name pos:line="18" pos:column="32">mnt_list<pos:position pos:line="18" pos:column="40"/></name></expr></argument>)<pos:position pos:line="18" pos:column="41"/></argument_list></call> <operator pos:line="18" pos:column="42">==<pos:position pos:line="18" pos:column="44"/></operator> <name pos:line="18" pos:column="45">NULL<pos:position pos:line="18" pos:column="49"/></name></expr>)<pos:position pos:line="18" pos:column="50"/></condition><then pos:line="18" pos:column="50">
		<block type="pseudo"><return pos:line="19" pos:column="17">return <expr><operator pos:line="19" pos:column="24">(<pos:position pos:line="19" pos:column="25"/></operator><operator pos:line="19" pos:column="25">-<pos:position pos:line="19" pos:column="26"/></operator><literal type="number" pos:line="19" pos:column="26">1<pos:position pos:line="19" pos:column="27"/></literal><operator pos:line="19" pos:column="27">)<pos:position pos:line="19" pos:column="28"/></operator></expr>;<pos:position pos:line="19" pos:column="29"/></return></block></then></if>

	<for pos:line="21" pos:column="9">for <control pos:line="21" pos:column="13">(<init><expr><name pos:line="21" pos:column="14">mnt_ptr<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">=<pos:position pos:line="21" pos:column="23"/></operator> <name pos:line="21" pos:column="24">mnt_list<pos:position pos:line="21" pos:column="32"/></name></expr>;<pos:position pos:line="21" pos:column="33"/></init> <condition><expr><name pos:line="21" pos:column="34">mnt_ptr<pos:position pos:line="21" pos:column="41"/></name> <operator pos:line="21" pos:column="42">!=<pos:position pos:line="21" pos:column="44"/></operator> <name pos:line="21" pos:column="45">NULL<pos:position pos:line="21" pos:column="49"/></name></expr>;<pos:position pos:line="21" pos:column="50"/></condition> <incr><expr><name pos:line="21" pos:column="51">mnt_ptr<pos:position pos:line="21" pos:column="58"/></name> <operator pos:line="21" pos:column="59">=<pos:position pos:line="21" pos:column="60"/></operator> <name><name pos:line="21" pos:column="61">mnt_ptr<pos:position pos:line="21" pos:column="68"/></name><operator pos:line="21" pos:column="68">-&gt;<pos:position pos:line="21" pos:column="73"/></operator><name pos:line="21" pos:column="70">next<pos:position pos:line="21" pos:column="74"/></name></name></expr></incr>)<pos:position pos:line="21" pos:column="75"/></control>
	<block pos:line="22" pos:column="9">{
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><call><name pos:line="23" pos:column="21">STATANYFS<pos:position pos:line="23" pos:column="30"/></name> <argument_list pos:line="23" pos:column="31">(<argument><expr><name><name pos:line="23" pos:column="32">mnt_ptr<pos:position pos:line="23" pos:column="39"/></name><operator pos:line="23" pos:column="39">-&gt;<pos:position pos:line="23" pos:column="44"/></operator><name pos:line="23" pos:column="41">dir<pos:position pos:line="23" pos:column="44"/></name></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="46">&amp;<pos:position pos:line="23" pos:column="51"/></operator><name pos:line="23" pos:column="47">statbuf<pos:position pos:line="23" pos:column="54"/></name></expr></argument>)<pos:position pos:line="23" pos:column="55"/></argument_list></call> <operator pos:line="23" pos:column="56">&lt;<pos:position pos:line="23" pos:column="60"/></operator> <literal type="number" pos:line="23" pos:column="58">0<pos:position pos:line="23" pos:column="59"/></literal></expr>)<pos:position pos:line="23" pos:column="60"/></condition><then pos:line="23" pos:column="60">
		<block pos:line="24" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="25" pos:column="25">char<pos:position pos:line="25" pos:column="29"/></name></type> <name><name pos:line="25" pos:column="30">errbuf<pos:position pos:line="25" pos:column="36"/></name><index pos:line="25" pos:column="36">[<expr><literal type="number" pos:line="25" pos:column="37">1024<pos:position pos:line="25" pos:column="41"/></literal></expr>]<pos:position pos:line="25" pos:column="42"/></index></name></decl>;<pos:position pos:line="25" pos:column="43"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="26" pos:column="25">ERROR<pos:position pos:line="26" pos:column="30"/></name> <argument_list pos:line="26" pos:column="31">(<argument><expr><literal type="string" pos:line="26" pos:column="32">"statv?fs failed: %s"<pos:position pos:line="26" pos:column="53"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="27" pos:column="41">sstrerror<pos:position pos:line="27" pos:column="50"/></name> <argument_list pos:line="27" pos:column="51">(<argument><expr><name pos:line="27" pos:column="52">errno<pos:position pos:line="27" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="59">errbuf<pos:position pos:line="27" pos:column="65"/></name></expr></argument>,
						<argument><expr><sizeof pos:line="28" pos:column="49">sizeof <argument_list pos:line="28" pos:column="56">(<argument><expr><name pos:line="28" pos:column="57">errbuf<pos:position pos:line="28" pos:column="63"/></name></expr></argument>)<pos:position pos:line="28" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="67"/></expr_stmt>
			<continue pos:line="29" pos:column="25">continue;<pos:position pos:line="29" pos:column="34"/></continue>
		}<pos:position pos:line="30" pos:column="18"/></block></then></if>

		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><operator pos:line="32" pos:column="21">!<pos:position pos:line="32" pos:column="22"/></operator><name><name pos:line="32" pos:column="22">statbuf<pos:position pos:line="32" pos:column="29"/></name><operator pos:line="32" pos:column="29">.<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="30">f_blocks<pos:position pos:line="32" pos:column="38"/></name></name></expr>)<pos:position pos:line="32" pos:column="39"/></condition><then pos:line="32" pos:column="39">
			<block type="pseudo"><continue pos:line="33" pos:column="25">continue;<pos:position pos:line="33" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="35" pos:column="17">blocksize<pos:position pos:line="35" pos:column="26"/></name> <operator pos:line="35" pos:column="27">=<pos:position pos:line="35" pos:column="28"/></operator> <call><name pos:line="35" pos:column="29">BLOCKSIZE<pos:position pos:line="35" pos:column="38"/></name><argument_list pos:line="35" pos:column="38">(<argument><expr><name pos:line="35" pos:column="39">statbuf<pos:position pos:line="35" pos:column="46"/></name></expr></argument>)<pos:position pos:line="35" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><name pos:line="36" pos:column="17">df_free<pos:position pos:line="36" pos:column="24"/></name> <operator pos:line="36" pos:column="25">=<pos:position pos:line="36" pos:column="26"/></operator> <name><name pos:line="36" pos:column="27">statbuf<pos:position pos:line="36" pos:column="34"/></name><operator pos:line="36" pos:column="34">.<pos:position pos:line="36" pos:column="35"/></operator><name pos:line="36" pos:column="35">f_bfree<pos:position pos:line="36" pos:column="42"/></name></name> <operator pos:line="36" pos:column="43">*<pos:position pos:line="36" pos:column="44"/></operator> <name pos:line="36" pos:column="45">blocksize<pos:position pos:line="36" pos:column="54"/></name></expr>;<pos:position pos:line="36" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><name pos:line="37" pos:column="17">df_used<pos:position pos:line="37" pos:column="24"/></name> <operator pos:line="37" pos:column="25">=<pos:position pos:line="37" pos:column="26"/></operator> <operator pos:line="37" pos:column="27">(<pos:position pos:line="37" pos:column="28"/></operator><name><name pos:line="37" pos:column="28">statbuf<pos:position pos:line="37" pos:column="35"/></name><operator pos:line="37" pos:column="35">.<pos:position pos:line="37" pos:column="36"/></operator><name pos:line="37" pos:column="36">f_blocks<pos:position pos:line="37" pos:column="44"/></name></name> <operator pos:line="37" pos:column="45">-<pos:position pos:line="37" pos:column="46"/></operator> <name><name pos:line="37" pos:column="47">statbuf<pos:position pos:line="37" pos:column="54"/></name><operator pos:line="37" pos:column="54">.<pos:position pos:line="37" pos:column="55"/></operator><name pos:line="37" pos:column="55">f_bfree<pos:position pos:line="37" pos:column="62"/></name></name><operator pos:line="37" pos:column="62">)<pos:position pos:line="37" pos:column="63"/></operator> <operator pos:line="37" pos:column="64">*<pos:position pos:line="37" pos:column="65"/></operator> <name pos:line="37" pos:column="66">blocksize<pos:position pos:line="37" pos:column="75"/></name></expr>;<pos:position pos:line="37" pos:column="76"/></expr_stmt>

		<if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><call><name pos:line="39" pos:column="21">strcmp<pos:position pos:line="39" pos:column="27"/></name> <argument_list pos:line="39" pos:column="28">(<argument><expr><name><name pos:line="39" pos:column="29">mnt_ptr<pos:position pos:line="39" pos:column="36"/></name><operator pos:line="39" pos:column="36">-&gt;<pos:position pos:line="39" pos:column="41"/></operator><name pos:line="39" pos:column="38">dir<pos:position pos:line="39" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="43">"/"<pos:position pos:line="39" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="47"/></argument_list></call> <operator pos:line="39" pos:column="48">==<pos:position pos:line="39" pos:column="50"/></operator> <literal type="number" pos:line="39" pos:column="51">0<pos:position pos:line="39" pos:column="52"/></literal></expr>)<pos:position pos:line="39" pos:column="53"/></condition><then pos:line="39" pos:column="53">
		<block pos:line="40" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="41" pos:column="25">sstrncpy<pos:position pos:line="41" pos:column="33"/></name> <argument_list pos:line="41" pos:column="34">(<argument><expr><name pos:line="41" pos:column="35">mnt_name<pos:position pos:line="41" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="45">"root"<pos:position pos:line="41" pos:column="51"/></literal></expr></argument>, <argument><expr><sizeof pos:line="41" pos:column="53">sizeof <argument_list pos:line="41" pos:column="60">(<argument><expr><name pos:line="41" pos:column="61">mnt_name<pos:position pos:line="41" pos:column="69"/></name></expr></argument>)<pos:position pos:line="41" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="41" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="72"/></expr_stmt>
		}<pos:position pos:line="42" pos:column="18"/></block></then>
		<else pos:line="43" pos:column="17">else
		<block pos:line="44" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="45" pos:column="25">int<pos:position pos:line="45" pos:column="28"/></name></type> <name pos:line="45" pos:column="29">i<pos:position pos:line="45" pos:column="30"/></name></decl>, <decl><type ref="prev"/><name pos:line="45" pos:column="32">len<pos:position pos:line="45" pos:column="35"/></name></decl>;<pos:position pos:line="45" pos:column="36"/></decl_stmt>

			<expr_stmt><expr><call><name pos:line="47" pos:column="25">sstrncpy<pos:position pos:line="47" pos:column="33"/></name> <argument_list pos:line="47" pos:column="34">(<argument><expr><name pos:line="47" pos:column="35">mnt_name<pos:position pos:line="47" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="45">mnt_ptr<pos:position pos:line="47" pos:column="52"/></name><operator pos:line="47" pos:column="52">-&gt;<pos:position pos:line="47" pos:column="57"/></operator><name pos:line="47" pos:column="54">dir<pos:position pos:line="47" pos:column="57"/></name></name> <operator pos:line="47" pos:column="58">+<pos:position pos:line="47" pos:column="59"/></operator> <literal type="number" pos:line="47" pos:column="60">1<pos:position pos:line="47" pos:column="61"/></literal></expr></argument>, <argument><expr><sizeof pos:line="47" pos:column="63">sizeof <argument_list pos:line="47" pos:column="70">(<argument><expr><name pos:line="47" pos:column="71">mnt_name<pos:position pos:line="47" pos:column="79"/></name></expr></argument>)<pos:position pos:line="47" pos:column="80"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="47" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="82"/></expr_stmt>
			<expr_stmt><expr><name pos:line="48" pos:column="25">len<pos:position pos:line="48" pos:column="28"/></name> <operator pos:line="48" pos:column="29">=<pos:position pos:line="48" pos:column="30"/></operator> <call><name pos:line="48" pos:column="31">strlen<pos:position pos:line="48" pos:column="37"/></name> <argument_list pos:line="48" pos:column="38">(<argument><expr><name pos:line="48" pos:column="39">mnt_name<pos:position pos:line="48" pos:column="47"/></name></expr></argument>)<pos:position pos:line="48" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="49"/></expr_stmt>

			<for pos:line="50" pos:column="25">for <control pos:line="50" pos:column="29">(<init><expr><name pos:line="50" pos:column="30">i<pos:position pos:line="50" pos:column="31"/></name> <operator pos:line="50" pos:column="32">=<pos:position pos:line="50" pos:column="33"/></operator> <literal type="number" pos:line="50" pos:column="34">0<pos:position pos:line="50" pos:column="35"/></literal></expr>;<pos:position pos:line="50" pos:column="36"/></init> <condition><expr><name pos:line="50" pos:column="37">i<pos:position pos:line="50" pos:column="38"/></name> <operator pos:line="50" pos:column="39">&lt;<pos:position pos:line="50" pos:column="43"/></operator> <name pos:line="50" pos:column="41">len<pos:position pos:line="50" pos:column="44"/></name></expr>;<pos:position pos:line="50" pos:column="45"/></condition> <incr><expr><name pos:line="50" pos:column="46">i<pos:position pos:line="50" pos:column="47"/></name><operator pos:line="50" pos:column="47">++<pos:position pos:line="50" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="50" pos:column="50"/></control>
				<block type="pseudo"><if pos:line="51" pos:column="33">if <condition pos:line="51" pos:column="36">(<expr><name><name pos:line="51" pos:column="37">mnt_name<pos:position pos:line="51" pos:column="45"/></name><index pos:line="51" pos:column="45">[<expr><name pos:line="51" pos:column="46">i<pos:position pos:line="51" pos:column="47"/></name></expr>]<pos:position pos:line="51" pos:column="48"/></index></name> <operator pos:line="51" pos:column="49">==<pos:position pos:line="51" pos:column="51"/></operator> <literal type="char" pos:line="51" pos:column="52">'/'<pos:position pos:line="51" pos:column="55"/></literal></expr>)<pos:position pos:line="51" pos:column="56"/></condition><then pos:line="51" pos:column="56">
					<block type="pseudo"><expr_stmt><expr><name><name pos:line="52" pos:column="41">mnt_name<pos:position pos:line="52" pos:column="49"/></name><index pos:line="52" pos:column="49">[<expr><name pos:line="52" pos:column="50">i<pos:position pos:line="52" pos:column="51"/></name></expr>]<pos:position pos:line="52" pos:column="52"/></index></name> <operator pos:line="52" pos:column="53">=<pos:position pos:line="52" pos:column="54"/></operator> <literal type="char" pos:line="52" pos:column="55">'-'<pos:position pos:line="52" pos:column="58"/></literal></expr>;<pos:position pos:line="52" pos:column="59"/></expr_stmt></block></then></if></block></for>
		}<pos:position pos:line="53" pos:column="18"/></block></else></if>

		<if pos:line="55" pos:column="17">if <condition pos:line="55" pos:column="20">(<expr><call><name pos:line="55" pos:column="21">ignorelist_match<pos:position pos:line="55" pos:column="37"/></name> <argument_list pos:line="55" pos:column="38">(<argument><expr><name pos:line="55" pos:column="39">il_device<pos:position pos:line="55" pos:column="48"/></name></expr></argument>,
					<argument><expr><ternary><condition><expr><operator pos:line="56" pos:column="41">(<pos:position pos:line="56" pos:column="42"/></operator><name><name pos:line="56" pos:column="42">mnt_ptr<pos:position pos:line="56" pos:column="49"/></name><operator pos:line="56" pos:column="49">-&gt;<pos:position pos:line="56" pos:column="54"/></operator><name pos:line="56" pos:column="51">spec_device<pos:position pos:line="56" pos:column="62"/></name></name> <operator pos:line="56" pos:column="63">!=<pos:position pos:line="56" pos:column="65"/></operator> <name pos:line="56" pos:column="66">NULL<pos:position pos:line="56" pos:column="70"/></name><operator pos:line="56" pos:column="70">)<pos:position pos:line="56" pos:column="71"/></operator></expr>
					?<pos:position pos:line="57" pos:column="42"/></condition><then pos:line="57" pos:column="42"> <expr><name><name pos:line="57" pos:column="43">mnt_ptr<pos:position pos:line="57" pos:column="50"/></name><operator pos:line="57" pos:column="50">-&gt;<pos:position pos:line="57" pos:column="55"/></operator><name pos:line="57" pos:column="52">spec_device<pos:position pos:line="57" pos:column="63"/></name></name></expr>
					<pos:position pos:line="58" pos:column="6"/></then><else pos:line="58" pos:column="41">: <expr><name><name pos:line="58" pos:column="43">mnt_ptr<pos:position pos:line="58" pos:column="50"/></name><operator pos:line="58" pos:column="50">-&gt;<pos:position pos:line="58" pos:column="55"/></operator><name pos:line="58" pos:column="52">device<pos:position pos:line="58" pos:column="58"/></name></name></expr></else></ternary></expr></argument>)<pos:position pos:line="58" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="58" pos:column="60"/></condition><then pos:line="58" pos:column="60">
			<block type="pseudo"><continue pos:line="59" pos:column="25">continue;<pos:position pos:line="59" pos:column="34"/></continue></block></then></if>
		<if pos:line="60" pos:column="17">if <condition pos:line="60" pos:column="20">(<expr><call><name pos:line="60" pos:column="21">ignorelist_match<pos:position pos:line="60" pos:column="37"/></name> <argument_list pos:line="60" pos:column="38">(<argument><expr><name pos:line="60" pos:column="39">il_mountpoint<pos:position pos:line="60" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="54">mnt_ptr<pos:position pos:line="60" pos:column="61"/></name><operator pos:line="60" pos:column="61">-&gt;<pos:position pos:line="60" pos:column="66"/></operator><name pos:line="60" pos:column="63">dir<pos:position pos:line="60" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="60" pos:column="68"/></condition><then pos:line="60" pos:column="68">
			<block type="pseudo"><continue pos:line="61" pos:column="25">continue;<pos:position pos:line="61" pos:column="34"/></continue></block></then></if>
		<if pos:line="62" pos:column="17">if <condition pos:line="62" pos:column="20">(<expr><call><name pos:line="62" pos:column="21">ignorelist_match<pos:position pos:line="62" pos:column="37"/></name> <argument_list pos:line="62" pos:column="38">(<argument><expr><name pos:line="62" pos:column="39">il_fstype<pos:position pos:line="62" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="50">mnt_ptr<pos:position pos:line="62" pos:column="57"/></name><operator pos:line="62" pos:column="57">-&gt;<pos:position pos:line="62" pos:column="62"/></operator><name pos:line="62" pos:column="59">type<pos:position pos:line="62" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="65"/></condition><then pos:line="62" pos:column="65">
			<block type="pseudo"><continue pos:line="63" pos:column="25">continue;<pos:position pos:line="63" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><call><name pos:line="65" pos:column="17">df_submit<pos:position pos:line="65" pos:column="26"/></name> <argument_list pos:line="65" pos:column="27">(<argument><expr><name pos:line="65" pos:column="28">mnt_name<pos:position pos:line="65" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="38">df_used<pos:position pos:line="65" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="47">df_free<pos:position pos:line="65" pos:column="54"/></name></expr></argument>)<pos:position pos:line="65" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="56"/></expr_stmt>
	}<pos:position pos:line="66" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="68" pos:column="9">cu_mount_freelist<pos:position pos:line="68" pos:column="26"/></name> <argument_list pos:line="68" pos:column="27">(<argument><expr><name pos:line="68" pos:column="28">mnt_list<pos:position pos:line="68" pos:column="36"/></name></expr></argument>)<pos:position pos:line="68" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="38"/></expr_stmt>

	<return pos:line="70" pos:column="9">return <expr><operator pos:line="70" pos:column="16">(<pos:position pos:line="70" pos:column="17"/></operator><literal type="number" pos:line="70" pos:column="17">0<pos:position pos:line="70" pos:column="18"/></literal><operator pos:line="70" pos:column="18">)<pos:position pos:line="70" pos:column="19"/></operator></expr>;<pos:position pos:line="70" pos:column="20"/></return>
}<pos:position pos:line="71" pos:column="2"/></block></function></unit>

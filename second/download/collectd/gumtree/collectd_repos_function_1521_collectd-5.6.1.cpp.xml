<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1521_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">read_options<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">int<pos:position pos:line="1" pos:column="29"/></name></type> <name pos:line="1" pos:column="30">argc<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier><modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">argv<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list> <comment type="block" pos:line="1" pos:column="49">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">opt<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>

  <while pos:line="5" pos:column="3">while <condition pos:line="5" pos:column="9">(<expr><operator pos:line="5" pos:column="10">(<pos:position pos:line="5" pos:column="11"/></operator><name pos:line="5" pos:column="11">opt<pos:position pos:line="5" pos:column="14"/></name> <operator pos:line="5" pos:column="15">=<pos:position pos:line="5" pos:column="16"/></operator> <call><name pos:line="5" pos:column="17">getopt<pos:position pos:line="5" pos:column="23"/></name> <argument_list pos:line="5" pos:column="24">(<argument><expr><name pos:line="5" pos:column="25">argc<pos:position pos:line="5" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="31">argv<pos:position pos:line="5" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="37">"n:H:p:i:d:D:h"<pos:position pos:line="5" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="53"/></argument_list></call><operator pos:line="5" pos:column="53">)<pos:position pos:line="5" pos:column="54"/></operator> <operator pos:line="5" pos:column="55">!=<pos:position pos:line="5" pos:column="57"/></operator> <operator pos:line="5" pos:column="58">-<pos:position pos:line="5" pos:column="59"/></operator><literal type="number" pos:line="5" pos:column="59">1<pos:position pos:line="5" pos:column="60"/></literal></expr>)<pos:position pos:line="5" pos:column="61"/></condition>
  <block pos:line="6" pos:column="3">{
    <switch pos:line="7" pos:column="5">switch <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">opt<pos:position pos:line="7" pos:column="16"/></name></expr>)<pos:position pos:line="7" pos:column="17"/></condition>
    <block pos:line="8" pos:column="5">{
      <case pos:line="9" pos:column="7">case <expr><literal type="char" pos:line="9" pos:column="12">'n'<pos:position pos:line="9" pos:column="15"/></literal></expr>:<pos:position pos:line="9" pos:column="16"/></case>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">get_integer_opt<pos:position pos:line="10" pos:column="24"/></name> <argument_list pos:line="10" pos:column="25">(<argument><expr><name pos:line="10" pos:column="26">optarg<pos:position pos:line="10" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="34">&amp;<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="35">conf_num_values<pos:position pos:line="10" pos:column="50"/></name></expr></argument>)<pos:position pos:line="10" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="52"/></expr_stmt>
        <break pos:line="11" pos:column="9">break;<pos:position pos:line="11" pos:column="15"/></break>

      <case pos:line="13" pos:column="7">case <expr><literal type="char" pos:line="13" pos:column="12">'H'<pos:position pos:line="13" pos:column="15"/></literal></expr>:<pos:position pos:line="13" pos:column="16"/></case>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">get_integer_opt<pos:position pos:line="14" pos:column="24"/></name> <argument_list pos:line="14" pos:column="25">(<argument><expr><name pos:line="14" pos:column="26">optarg<pos:position pos:line="14" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="34">&amp;<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="35">conf_num_hosts<pos:position pos:line="14" pos:column="49"/></name></expr></argument>)<pos:position pos:line="14" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="51"/></expr_stmt>
        <break pos:line="15" pos:column="9">break;<pos:position pos:line="15" pos:column="15"/></break>

      <case pos:line="17" pos:column="7">case <expr><literal type="char" pos:line="17" pos:column="12">'p'<pos:position pos:line="17" pos:column="15"/></literal></expr>:<pos:position pos:line="17" pos:column="16"/></case>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">get_integer_opt<pos:position pos:line="18" pos:column="24"/></name> <argument_list pos:line="18" pos:column="25">(<argument><expr><name pos:line="18" pos:column="26">optarg<pos:position pos:line="18" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="34">&amp;<pos:position pos:line="18" pos:column="39"/></operator><name pos:line="18" pos:column="35">conf_num_plugins<pos:position pos:line="18" pos:column="51"/></name></expr></argument>)<pos:position pos:line="18" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="53"/></expr_stmt>
        <break pos:line="19" pos:column="9">break;<pos:position pos:line="19" pos:column="15"/></break>

      <case pos:line="21" pos:column="7">case <expr><literal type="char" pos:line="21" pos:column="12">'i'<pos:position pos:line="21" pos:column="15"/></literal></expr>:<pos:position pos:line="21" pos:column="16"/></case>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">get_double_opt<pos:position pos:line="22" pos:column="23"/></name> <argument_list pos:line="22" pos:column="24">(<argument><expr><name pos:line="22" pos:column="25">optarg<pos:position pos:line="22" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="33">&amp;<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="34">conf_interval<pos:position pos:line="22" pos:column="47"/></name></expr></argument>)<pos:position pos:line="22" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="49"/></expr_stmt>
        <break pos:line="23" pos:column="9">break;<pos:position pos:line="23" pos:column="15"/></break>

      <case pos:line="25" pos:column="7">case <expr><literal type="char" pos:line="25" pos:column="12">'d'<pos:position pos:line="25" pos:column="15"/></literal></expr>:<pos:position pos:line="25" pos:column="16"/></case>
        <expr_stmt><expr><name pos:line="26" pos:column="9">conf_destination<pos:position pos:line="26" pos:column="25"/></name> <operator pos:line="26" pos:column="26">=<pos:position pos:line="26" pos:column="27"/></operator> <name pos:line="26" pos:column="28">optarg<pos:position pos:line="26" pos:column="34"/></name></expr>;<pos:position pos:line="26" pos:column="35"/></expr_stmt>
        <break pos:line="27" pos:column="9">break;<pos:position pos:line="27" pos:column="15"/></break>

      <case pos:line="29" pos:column="7">case <expr><literal type="char" pos:line="29" pos:column="12">'D'<pos:position pos:line="29" pos:column="15"/></literal></expr>:<pos:position pos:line="29" pos:column="16"/></case>
        <expr_stmt><expr><name pos:line="30" pos:column="9">conf_service<pos:position pos:line="30" pos:column="21"/></name> <operator pos:line="30" pos:column="22">=<pos:position pos:line="30" pos:column="23"/></operator> <name pos:line="30" pos:column="24">optarg<pos:position pos:line="30" pos:column="30"/></name></expr>;<pos:position pos:line="30" pos:column="31"/></expr_stmt>
        <break pos:line="31" pos:column="9">break;<pos:position pos:line="31" pos:column="15"/></break>

      <case pos:line="33" pos:column="7">case <expr><literal type="char" pos:line="33" pos:column="12">'h'<pos:position pos:line="33" pos:column="15"/></literal></expr>:<pos:position pos:line="33" pos:column="16"/></case>
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">exit_usage<pos:position pos:line="34" pos:column="19"/></name> <argument_list pos:line="34" pos:column="20">(<argument><expr><name pos:line="34" pos:column="21">EXIT_SUCCESS<pos:position pos:line="34" pos:column="33"/></name></expr></argument>)<pos:position pos:line="34" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="35"/></expr_stmt>

      <default pos:line="36" pos:column="7">default:<pos:position pos:line="36" pos:column="15"/></default>
        <expr_stmt><expr><call><name pos:line="37" pos:column="9">exit_usage<pos:position pos:line="37" pos:column="19"/></name> <argument_list pos:line="37" pos:column="20">(<argument><expr><name pos:line="37" pos:column="21">EXIT_FAILURE<pos:position pos:line="37" pos:column="33"/></name></expr></argument>)<pos:position pos:line="37" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></switch> <comment type="block" pos:line="38" pos:column="7">/* switch (opt) */</comment>
  }<pos:position pos:line="39" pos:column="4"/></block></while> <comment type="block" pos:line="39" pos:column="5">/* while (getopt) */</comment>

  <return pos:line="41" pos:column="3">return <expr><operator pos:line="41" pos:column="10">(<pos:position pos:line="41" pos:column="11"/></operator><literal type="number" pos:line="41" pos:column="11">0<pos:position pos:line="41" pos:column="12"/></literal><operator pos:line="41" pos:column="12">)<pos:position pos:line="41" pos:column="13"/></operator></expr>;<pos:position pos:line="41" pos:column="14"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

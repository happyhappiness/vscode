<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1536_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">prom_init<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">()<pos:position pos:line="1" pos:column="23"/></parameter_list> <block pos:line="1" pos:column="24">{
  <if pos:line="2" pos:column="3">if <condition pos:line="2" pos:column="6">(<expr><name pos:line="2" pos:column="7">metrics<pos:position pos:line="2" pos:column="14"/></name> <operator pos:line="2" pos:column="15">==<pos:position pos:line="2" pos:column="17"/></operator> <name pos:line="2" pos:column="18">NULL<pos:position pos:line="2" pos:column="22"/></name></expr>)<pos:position pos:line="2" pos:column="23"/></condition><then pos:line="2" pos:column="23"> <block pos:line="2" pos:column="24">{
    <expr_stmt><expr><name pos:line="3" pos:column="5">metrics<pos:position pos:line="3" pos:column="12"/></name> <operator pos:line="3" pos:column="13">=<pos:position pos:line="3" pos:column="14"/></operator> <call><name pos:line="3" pos:column="15">c_avl_create<pos:position pos:line="3" pos:column="27"/></name><argument_list pos:line="3" pos:column="27">(<argument><expr><operator pos:line="3" pos:column="28">(<pos:position pos:line="3" pos:column="29"/></operator><name pos:line="3" pos:column="29">void<pos:position pos:line="3" pos:column="33"/></name> <operator pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></operator><operator pos:line="3" pos:column="35">)<pos:position pos:line="3" pos:column="36"/></operator><name pos:line="3" pos:column="36">strcmp<pos:position pos:line="3" pos:column="42"/></name></expr></argument>)<pos:position pos:line="3" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="44"/></expr_stmt>
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">metrics<pos:position pos:line="4" pos:column="16"/></name> <operator pos:line="4" pos:column="17">==<pos:position pos:line="4" pos:column="19"/></operator> <name pos:line="4" pos:column="20">NULL<pos:position pos:line="4" pos:column="24"/></name></expr>)<pos:position pos:line="4" pos:column="25"/></condition><then pos:line="4" pos:column="25"> <block pos:line="4" pos:column="26">{
      <expr_stmt><expr><call><name pos:line="5" pos:column="7">ERROR<pos:position pos:line="5" pos:column="12"/></name><argument_list pos:line="5" pos:column="12">(<argument><expr><literal type="string" pos:line="5" pos:column="13">"write_prometheus plugin: c_avl_create() failed."<pos:position pos:line="5" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="64"/></expr_stmt>
      <return pos:line="6" pos:column="7">return <expr><operator pos:line="6" pos:column="14">-<pos:position pos:line="6" pos:column="15"/></operator><literal type="number" pos:line="6" pos:column="15">1<pos:position pos:line="6" pos:column="16"/></literal></expr>;<pos:position pos:line="6" pos:column="17"/></return>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>
  }<pos:position pos:line="8" pos:column="4"/></block></then></if>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">httpd<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">==<pos:position pos:line="10" pos:column="15"/></operator> <name pos:line="10" pos:column="16">NULL<pos:position pos:line="10" pos:column="20"/></name></expr>)<pos:position pos:line="10" pos:column="21"/></condition><then pos:line="10" pos:column="21"> <block pos:line="10" pos:column="22">{
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">unsigned<pos:position pos:line="11" pos:column="13"/></name> <name pos:line="11" pos:column="14">int<pos:position pos:line="11" pos:column="17"/></name></type> <name pos:line="11" pos:column="18">flags<pos:position pos:line="11" pos:column="23"/></name> <init pos:line="11" pos:column="24">= <expr><name pos:line="11" pos:column="26">MHD_USE_THREAD_PER_CONNECTION<pos:position pos:line="11" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="56"/></decl_stmt>
<cpp:if pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">if<pos:position pos:line="12" pos:column="4"/></cpp:directive> <expr><name pos:line="12" pos:column="5">MHD_VERSION<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">&gt;=<pos:position pos:line="12" pos:column="22"/></operator> <literal type="number" pos:line="12" pos:column="20">0x00093300<pos:position pos:line="12" pos:column="30"/></literal></expr></cpp:if>
    <expr_stmt><expr><name pos:line="13" pos:column="5">flags<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">|=<pos:position pos:line="13" pos:column="13"/></operator> <name pos:line="13" pos:column="14">MHD_USE_DUAL_STACK<pos:position pos:line="13" pos:column="32"/></name></expr>;<pos:position pos:line="13" pos:column="33"/></expr_stmt>
<cpp:endif pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">endif<pos:position pos:line="14" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><name pos:line="16" pos:column="5">httpd<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <call><name pos:line="16" pos:column="13">MHD_start_daemon<pos:position pos:line="16" pos:column="29"/></name><argument_list pos:line="16" pos:column="29">(<argument><expr><name pos:line="16" pos:column="30">flags<pos:position pos:line="16" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="37">httpd_port<pos:position pos:line="16" pos:column="47"/></name></expr></argument>,
                             <comment type="block" pos:line="17" pos:column="30">/* MHD_AcceptPolicyCallback = */</comment> <argument><expr><name pos:line="17" pos:column="63">NULL<pos:position pos:line="17" pos:column="67"/></name></expr></argument>,
                             <comment type="block" pos:line="18" pos:column="30">/* MHD_AcceptPolicyCallback arg = */</comment> <argument><expr><name pos:line="18" pos:column="67">NULL<pos:position pos:line="18" pos:column="71"/></name></expr></argument>,
                             <argument><expr><name pos:line="19" pos:column="30">http_handler<pos:position pos:line="19" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="44">NULL<pos:position pos:line="19" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="50">MHD_OPTION_END<pos:position pos:line="19" pos:column="64"/></name></expr></argument>)<pos:position pos:line="19" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="66"/></expr_stmt>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">httpd<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">==<pos:position pos:line="20" pos:column="17"/></operator> <name pos:line="20" pos:column="18">NULL<pos:position pos:line="20" pos:column="22"/></name></expr>)<pos:position pos:line="20" pos:column="23"/></condition><then pos:line="20" pos:column="23"> <block pos:line="20" pos:column="24">{
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">ERROR<pos:position pos:line="21" pos:column="12"/></name><argument_list pos:line="21" pos:column="12">(<argument><expr><literal type="string" pos:line="21" pos:column="13">"write_prometheus plugin: MHD_start_daemon() failed."<pos:position pos:line="21" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="68"/></expr_stmt>
      <return pos:line="22" pos:column="7">return <expr><operator pos:line="22" pos:column="14">-<pos:position pos:line="22" pos:column="15"/></operator><literal type="number" pos:line="22" pos:column="15">1<pos:position pos:line="22" pos:column="16"/></literal></expr>;<pos:position pos:line="22" pos:column="17"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">DEBUG<pos:position pos:line="24" pos:column="10"/></name><argument_list pos:line="24" pos:column="10">(<argument><expr><literal type="string" pos:line="24" pos:column="11">"write_prometheus plugin: Successfully started microhttpd %s"<pos:position pos:line="24" pos:column="72"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="25" pos:column="11">MHD_get_version<pos:position pos:line="25" pos:column="26"/></name><argument_list pos:line="25" pos:column="26">()<pos:position pos:line="25" pos:column="28"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="30"/></expr_stmt>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>

  <return pos:line="28" pos:column="3">return <expr><literal type="number" pos:line="28" pos:column="10">0<pos:position pos:line="28" pos:column="11"/></literal></expr>;<pos:position pos:line="28" pos:column="12"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

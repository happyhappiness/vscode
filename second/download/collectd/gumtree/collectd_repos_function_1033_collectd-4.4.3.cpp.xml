<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1033_collectd-4.4.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ping_receive_all<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">pingobj_t<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">obj<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">fd_set<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">readfds<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">num_readfds<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">max_readfds<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="7" pos:column="9">pinghost_t<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">ph<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">pinghost_t<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">ptr<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">timeval<pos:position pos:line="10" pos:column="23"/></name></name></type> <name pos:line="10" pos:column="24">endtime<pos:position pos:line="10" pos:column="31"/></name></decl>;<pos:position pos:line="10" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="11" pos:column="9">struct<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">timeval<pos:position pos:line="11" pos:column="23"/></name></name></type> <name pos:line="11" pos:column="24">nowtime<pos:position pos:line="11" pos:column="31"/></name></decl>;<pos:position pos:line="11" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="12" pos:column="9">struct<pos:position pos:line="12" pos:column="15"/></name> <name pos:line="12" pos:column="16">timeval<pos:position pos:line="12" pos:column="23"/></name></name></type> <name pos:line="12" pos:column="24">timeout<pos:position pos:line="12" pos:column="31"/></name></decl>;<pos:position pos:line="12" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">int<pos:position pos:line="13" pos:column="12"/></name></type> <name pos:line="13" pos:column="13">status<pos:position pos:line="13" pos:column="19"/></name></decl>;<pos:position pos:line="13" pos:column="20"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="15" pos:column="9">int<pos:position pos:line="15" pos:column="12"/></name></type> <name pos:line="15" pos:column="13">ret<pos:position pos:line="15" pos:column="16"/></name></decl>;<pos:position pos:line="15" pos:column="17"/></decl_stmt>

	<expr_stmt><expr><name pos:line="17" pos:column="9">ph<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <name><name pos:line="17" pos:column="14">obj<pos:position pos:line="17" pos:column="17"/></name><operator pos:line="17" pos:column="17">-&gt;<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="19">head<pos:position pos:line="17" pos:column="23"/></name></name></expr>;<pos:position pos:line="17" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name pos:line="18" pos:column="9">ret<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <literal type="number" pos:line="18" pos:column="15">0<pos:position pos:line="18" pos:column="16"/></literal></expr>;<pos:position pos:line="18" pos:column="17"/></expr_stmt>

	<for pos:line="20" pos:column="9">for <control pos:line="20" pos:column="13">(<init><expr><name pos:line="20" pos:column="14">ptr<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <name pos:line="20" pos:column="20">ph<pos:position pos:line="20" pos:column="22"/></name></expr>;<pos:position pos:line="20" pos:column="23"/></init> <condition><expr><name pos:line="20" pos:column="24">ptr<pos:position pos:line="20" pos:column="27"/></name> <operator pos:line="20" pos:column="28">!=<pos:position pos:line="20" pos:column="30"/></operator> <name pos:line="20" pos:column="31">NULL<pos:position pos:line="20" pos:column="35"/></name></expr>;<pos:position pos:line="20" pos:column="36"/></condition> <incr><expr><name pos:line="20" pos:column="37">ptr<pos:position pos:line="20" pos:column="40"/></name> <operator pos:line="20" pos:column="41">=<pos:position pos:line="20" pos:column="42"/></operator> <name><name pos:line="20" pos:column="43">ptr<pos:position pos:line="20" pos:column="46"/></name><operator pos:line="20" pos:column="46">-&gt;<pos:position pos:line="20" pos:column="51"/></operator><name pos:line="20" pos:column="48">next<pos:position pos:line="20" pos:column="52"/></name></name></expr></incr>)<pos:position pos:line="20" pos:column="53"/></control>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="21" pos:column="17">ptr<pos:position pos:line="21" pos:column="20"/></name><operator pos:line="21" pos:column="20">-&gt;<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="22">latency<pos:position pos:line="21" pos:column="29"/></name></name> <operator pos:line="21" pos:column="30">=<pos:position pos:line="21" pos:column="31"/></operator> <operator pos:line="21" pos:column="32">-<pos:position pos:line="21" pos:column="33"/></operator><literal type="number" pos:line="21" pos:column="33">1.0<pos:position pos:line="21" pos:column="36"/></literal></expr>;<pos:position pos:line="21" pos:column="37"/></expr_stmt></block></for>

	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><call><name pos:line="23" pos:column="13">gettimeofday<pos:position pos:line="23" pos:column="25"/></name> <argument_list pos:line="23" pos:column="26">(<argument><expr><operator pos:line="23" pos:column="27">&amp;<pos:position pos:line="23" pos:column="32"/></operator><name pos:line="23" pos:column="28">nowtime<pos:position pos:line="23" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="37">NULL<pos:position pos:line="23" pos:column="41"/></name></expr></argument>)<pos:position pos:line="23" pos:column="42"/></argument_list></call> <operator pos:line="23" pos:column="43">==<pos:position pos:line="23" pos:column="45"/></operator> <operator pos:line="23" pos:column="46">-<pos:position pos:line="23" pos:column="47"/></operator><literal type="number" pos:line="23" pos:column="47">1<pos:position pos:line="23" pos:column="48"/></literal></expr>)<pos:position pos:line="23" pos:column="49"/></condition><then pos:line="23" pos:column="49">
	<block pos:line="24" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">ping_set_error<pos:position pos:line="25" pos:column="31"/></name> <argument_list pos:line="25" pos:column="32">(<argument><expr><name pos:line="25" pos:column="33">obj<pos:position pos:line="25" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="38">"gettimeofday"<pos:position pos:line="25" pos:column="52"/></literal></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="54">strerror<pos:position pos:line="25" pos:column="62"/></name> <argument_list pos:line="25" pos:column="63">(<argument><expr><name pos:line="25" pos:column="64">errno<pos:position pos:line="25" pos:column="69"/></name></expr></argument>)<pos:position pos:line="25" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="72"/></expr_stmt>
		<return pos:line="26" pos:column="17">return <expr><operator pos:line="26" pos:column="24">(<pos:position pos:line="26" pos:column="25"/></operator><operator pos:line="26" pos:column="25">-<pos:position pos:line="26" pos:column="26"/></operator><literal type="number" pos:line="26" pos:column="26">1<pos:position pos:line="26" pos:column="27"/></literal><operator pos:line="26" pos:column="27">)<pos:position pos:line="26" pos:column="28"/></operator></expr>;<pos:position pos:line="26" pos:column="29"/></return>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="29" pos:column="9">/* Set up timeout */</comment>
	<expr_stmt><expr><name><name pos:line="30" pos:column="9">timeout<pos:position pos:line="30" pos:column="16"/></name><operator pos:line="30" pos:column="16">.<pos:position pos:line="30" pos:column="17"/></operator><name pos:line="30" pos:column="17">tv_sec<pos:position pos:line="30" pos:column="23"/></name></name> <operator pos:line="30" pos:column="24">=<pos:position pos:line="30" pos:column="25"/></operator> <operator pos:line="30" pos:column="26">(<pos:position pos:line="30" pos:column="27"/></operator><name pos:line="30" pos:column="27">time_t<pos:position pos:line="30" pos:column="33"/></name><operator pos:line="30" pos:column="33">)<pos:position pos:line="30" pos:column="34"/></operator> <name><name pos:line="30" pos:column="35">obj<pos:position pos:line="30" pos:column="38"/></name><operator pos:line="30" pos:column="38">-&gt;<pos:position pos:line="30" pos:column="43"/></operator><name pos:line="30" pos:column="40">timeout<pos:position pos:line="30" pos:column="47"/></name></name></expr>;<pos:position pos:line="30" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="31" pos:column="9">timeout<pos:position pos:line="31" pos:column="16"/></name><operator pos:line="31" pos:column="16">.<pos:position pos:line="31" pos:column="17"/></operator><name pos:line="31" pos:column="17">tv_usec<pos:position pos:line="31" pos:column="24"/></name></name> <operator pos:line="31" pos:column="25">=<pos:position pos:line="31" pos:column="26"/></operator> <call pos:line="31" pos:column="27">(<name pos:line="31" pos:column="28">suseconds_t<pos:position pos:line="31" pos:column="39"/></name>) <argument_list pos:line="31" pos:column="41">(<argument><expr><literal type="number" pos:line="31" pos:column="42">1000000<pos:position pos:line="31" pos:column="49"/></literal> <operator pos:line="31" pos:column="50">*<pos:position pos:line="31" pos:column="51"/></operator> <operator pos:line="31" pos:column="52">(<pos:position pos:line="31" pos:column="53"/></operator><name><name pos:line="31" pos:column="53">obj<pos:position pos:line="31" pos:column="56"/></name><operator pos:line="31" pos:column="56">-&gt;<pos:position pos:line="31" pos:column="61"/></operator><name pos:line="31" pos:column="58">timeout<pos:position pos:line="31" pos:column="65"/></name></name> <operator pos:line="31" pos:column="66">-<pos:position pos:line="31" pos:column="67"/></operator> <operator pos:line="31" pos:column="68">(<pos:position pos:line="31" pos:column="69"/></operator><operator pos:line="31" pos:column="69">(<pos:position pos:line="31" pos:column="70"/></operator><name pos:line="31" pos:column="70">double<pos:position pos:line="31" pos:column="76"/></name><operator pos:line="31" pos:column="76">)<pos:position pos:line="31" pos:column="77"/></operator> <name><name pos:line="31" pos:column="78">timeout<pos:position pos:line="31" pos:column="85"/></name><operator pos:line="31" pos:column="85">.<pos:position pos:line="31" pos:column="86"/></operator><name pos:line="31" pos:column="86">tv_sec<pos:position pos:line="31" pos:column="92"/></name></name><operator pos:line="31" pos:column="92">)<pos:position pos:line="31" pos:column="93"/></operator><operator pos:line="31" pos:column="93">)<pos:position pos:line="31" pos:column="94"/></operator></expr></argument>)<pos:position pos:line="31" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="96"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="33" pos:column="9">dprintf<pos:position pos:line="33" pos:column="16"/></name> <argument_list pos:line="33" pos:column="17">(<argument><expr><literal type="string" pos:line="33" pos:column="18">"Set timeout to %i.%06i seconds\n"<pos:position pos:line="33" pos:column="52"/></literal></expr></argument>,
			<argument><expr><operator pos:line="34" pos:column="25">(<pos:position pos:line="34" pos:column="26"/></operator><name pos:line="34" pos:column="26">int<pos:position pos:line="34" pos:column="29"/></name><operator pos:line="34" pos:column="29">)<pos:position pos:line="34" pos:column="30"/></operator> <name><name pos:line="34" pos:column="31">timeout<pos:position pos:line="34" pos:column="38"/></name><operator pos:line="34" pos:column="38">.<pos:position pos:line="34" pos:column="39"/></operator><name pos:line="34" pos:column="39">tv_sec<pos:position pos:line="34" pos:column="45"/></name></name></expr></argument>,
			<argument><expr><operator pos:line="35" pos:column="25">(<pos:position pos:line="35" pos:column="26"/></operator><name pos:line="35" pos:column="26">int<pos:position pos:line="35" pos:column="29"/></name><operator pos:line="35" pos:column="29">)<pos:position pos:line="35" pos:column="30"/></operator> <name><name pos:line="35" pos:column="31">timeout<pos:position pos:line="35" pos:column="38"/></name><operator pos:line="35" pos:column="38">.<pos:position pos:line="35" pos:column="39"/></operator><name pos:line="35" pos:column="39">tv_usec<pos:position pos:line="35" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="48"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="37" pos:column="9">ping_timeval_add<pos:position pos:line="37" pos:column="25"/></name> <argument_list pos:line="37" pos:column="26">(<argument><expr><operator pos:line="37" pos:column="27">&amp;<pos:position pos:line="37" pos:column="32"/></operator><name pos:line="37" pos:column="28">nowtime<pos:position pos:line="37" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="37">&amp;<pos:position pos:line="37" pos:column="42"/></operator><name pos:line="37" pos:column="38">timeout<pos:position pos:line="37" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="47">&amp;<pos:position pos:line="37" pos:column="52"/></operator><name pos:line="37" pos:column="48">endtime<pos:position pos:line="37" pos:column="55"/></name></expr></argument>)<pos:position pos:line="37" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="57"/></expr_stmt>

	<while pos:line="39" pos:column="9">while <condition pos:line="39" pos:column="15">(<expr><literal type="number" pos:line="39" pos:column="16">1<pos:position pos:line="39" pos:column="17"/></literal></expr>)<pos:position pos:line="39" pos:column="18"/></condition>
	<block pos:line="40" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="41" pos:column="17">FD_ZERO<pos:position pos:line="41" pos:column="24"/></name> <argument_list pos:line="41" pos:column="25">(<argument><expr><operator pos:line="41" pos:column="26">&amp;<pos:position pos:line="41" pos:column="31"/></operator><name pos:line="41" pos:column="27">readfds<pos:position pos:line="41" pos:column="34"/></name></expr></argument>)<pos:position pos:line="41" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><name pos:line="42" pos:column="17">num_readfds<pos:position pos:line="42" pos:column="28"/></name> <operator pos:line="42" pos:column="29">=<pos:position pos:line="42" pos:column="30"/></operator>  <literal type="number" pos:line="42" pos:column="32">0<pos:position pos:line="42" pos:column="33"/></literal></expr>;<pos:position pos:line="42" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name pos:line="43" pos:column="17">max_readfds<pos:position pos:line="43" pos:column="28"/></name> <operator pos:line="43" pos:column="29">=<pos:position pos:line="43" pos:column="30"/></operator> <operator pos:line="43" pos:column="31">-<pos:position pos:line="43" pos:column="32"/></operator><literal type="number" pos:line="43" pos:column="32">1<pos:position pos:line="43" pos:column="33"/></literal></expr>;<pos:position pos:line="43" pos:column="34"/></expr_stmt>

		<for pos:line="45" pos:column="17">for <control pos:line="45" pos:column="21">(<init><expr><name pos:line="45" pos:column="22">ptr<pos:position pos:line="45" pos:column="25"/></name> <operator pos:line="45" pos:column="26">=<pos:position pos:line="45" pos:column="27"/></operator> <name pos:line="45" pos:column="28">ph<pos:position pos:line="45" pos:column="30"/></name></expr>;<pos:position pos:line="45" pos:column="31"/></init> <condition><expr><name pos:line="45" pos:column="32">ptr<pos:position pos:line="45" pos:column="35"/></name> <operator pos:line="45" pos:column="36">!=<pos:position pos:line="45" pos:column="38"/></operator> <name pos:line="45" pos:column="39">NULL<pos:position pos:line="45" pos:column="43"/></name></expr>;<pos:position pos:line="45" pos:column="44"/></condition> <incr><expr><name pos:line="45" pos:column="45">ptr<pos:position pos:line="45" pos:column="48"/></name> <operator pos:line="45" pos:column="49">=<pos:position pos:line="45" pos:column="50"/></operator> <name><name pos:line="45" pos:column="51">ptr<pos:position pos:line="45" pos:column="54"/></name><operator pos:line="45" pos:column="54">-&gt;<pos:position pos:line="45" pos:column="59"/></operator><name pos:line="45" pos:column="56">next<pos:position pos:line="45" pos:column="60"/></name></name></expr></incr>)<pos:position pos:line="45" pos:column="61"/></control>
		<block pos:line="46" pos:column="17">{
			<if pos:line="47" pos:column="25">if <condition pos:line="47" pos:column="28">(<expr><operator pos:line="47" pos:column="29">!<pos:position pos:line="47" pos:column="30"/></operator><call><name pos:line="47" pos:column="30">timerisset<pos:position pos:line="47" pos:column="40"/></name> <argument_list pos:line="47" pos:column="41">(<argument><expr><name><name pos:line="47" pos:column="42">ptr<pos:position pos:line="47" pos:column="45"/></name><operator pos:line="47" pos:column="45">-&gt;<pos:position pos:line="47" pos:column="50"/></operator><name pos:line="47" pos:column="47">timer<pos:position pos:line="47" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="54"/></condition><then pos:line="47" pos:column="54">
				<block type="pseudo"><continue pos:line="48" pos:column="33">continue;<pos:position pos:line="48" pos:column="42"/></continue></block></then></if>

			<expr_stmt><expr><call><name pos:line="50" pos:column="25">FD_SET<pos:position pos:line="50" pos:column="31"/></name> <argument_list pos:line="50" pos:column="32">(<argument><expr><name><name pos:line="50" pos:column="33">ptr<pos:position pos:line="50" pos:column="36"/></name><operator pos:line="50" pos:column="36">-&gt;<pos:position pos:line="50" pos:column="41"/></operator><name pos:line="50" pos:column="38">fd<pos:position pos:line="50" pos:column="40"/></name></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="42">&amp;<pos:position pos:line="50" pos:column="47"/></operator><name pos:line="50" pos:column="43">readfds<pos:position pos:line="50" pos:column="50"/></name></expr></argument>)<pos:position pos:line="50" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="52"/></expr_stmt>
			<expr_stmt><expr><name pos:line="51" pos:column="25">num_readfds<pos:position pos:line="51" pos:column="36"/></name><operator pos:line="51" pos:column="36">++<pos:position pos:line="51" pos:column="38"/></operator></expr>;<pos:position pos:line="51" pos:column="39"/></expr_stmt>

			<if pos:line="53" pos:column="25">if <condition pos:line="53" pos:column="28">(<expr><name pos:line="53" pos:column="29">max_readfds<pos:position pos:line="53" pos:column="40"/></name> <operator pos:line="53" pos:column="41">&lt;<pos:position pos:line="53" pos:column="45"/></operator> <name><name pos:line="53" pos:column="43">ptr<pos:position pos:line="53" pos:column="46"/></name><operator pos:line="53" pos:column="46">-&gt;<pos:position pos:line="53" pos:column="51"/></operator><name pos:line="53" pos:column="48">fd<pos:position pos:line="53" pos:column="50"/></name></name></expr>)<pos:position pos:line="53" pos:column="51"/></condition><then pos:line="53" pos:column="51">
				<block type="pseudo"><expr_stmt><expr><name pos:line="54" pos:column="33">max_readfds<pos:position pos:line="54" pos:column="44"/></name> <operator pos:line="54" pos:column="45">=<pos:position pos:line="54" pos:column="46"/></operator> <name><name pos:line="54" pos:column="47">ptr<pos:position pos:line="54" pos:column="50"/></name><operator pos:line="54" pos:column="50">-&gt;<pos:position pos:line="54" pos:column="55"/></operator><name pos:line="54" pos:column="52">fd<pos:position pos:line="54" pos:column="54"/></name></name></expr>;<pos:position pos:line="54" pos:column="55"/></expr_stmt></block></then></if>
		}<pos:position pos:line="55" pos:column="18"/></block></for>

		<if pos:line="57" pos:column="17">if <condition pos:line="57" pos:column="20">(<expr><name pos:line="57" pos:column="21">num_readfds<pos:position pos:line="57" pos:column="32"/></name> <operator pos:line="57" pos:column="33">==<pos:position pos:line="57" pos:column="35"/></operator> <literal type="number" pos:line="57" pos:column="36">0<pos:position pos:line="57" pos:column="37"/></literal></expr>)<pos:position pos:line="57" pos:column="38"/></condition><then pos:line="57" pos:column="38">
			<block type="pseudo"><break pos:line="58" pos:column="25">break;<pos:position pos:line="58" pos:column="31"/></break></block></then></if>

		<if pos:line="60" pos:column="17">if <condition pos:line="60" pos:column="20">(<expr><call><name pos:line="60" pos:column="21">gettimeofday<pos:position pos:line="60" pos:column="33"/></name> <argument_list pos:line="60" pos:column="34">(<argument><expr><operator pos:line="60" pos:column="35">&amp;<pos:position pos:line="60" pos:column="40"/></operator><name pos:line="60" pos:column="36">nowtime<pos:position pos:line="60" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="45">NULL<pos:position pos:line="60" pos:column="49"/></name></expr></argument>)<pos:position pos:line="60" pos:column="50"/></argument_list></call> <operator pos:line="60" pos:column="51">==<pos:position pos:line="60" pos:column="53"/></operator> <operator pos:line="60" pos:column="54">-<pos:position pos:line="60" pos:column="55"/></operator><literal type="number" pos:line="60" pos:column="55">1<pos:position pos:line="60" pos:column="56"/></literal></expr>)<pos:position pos:line="60" pos:column="57"/></condition><then pos:line="60" pos:column="57">
		<block pos:line="61" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="62" pos:column="25">ping_set_error<pos:position pos:line="62" pos:column="39"/></name> <argument_list pos:line="62" pos:column="40">(<argument><expr><name pos:line="62" pos:column="41">obj<pos:position pos:line="62" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="46">"gettimeofday"<pos:position pos:line="62" pos:column="60"/></literal></expr></argument>, <argument><expr><call><name pos:line="62" pos:column="62">strerror<pos:position pos:line="62" pos:column="70"/></name> <argument_list pos:line="62" pos:column="71">(<argument><expr><name pos:line="62" pos:column="72">errno<pos:position pos:line="62" pos:column="77"/></name></expr></argument>)<pos:position pos:line="62" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="62" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="80"/></expr_stmt>
			<return pos:line="63" pos:column="25">return <expr><operator pos:line="63" pos:column="32">(<pos:position pos:line="63" pos:column="33"/></operator><operator pos:line="63" pos:column="33">-<pos:position pos:line="63" pos:column="34"/></operator><literal type="number" pos:line="63" pos:column="34">1<pos:position pos:line="63" pos:column="35"/></literal><operator pos:line="63" pos:column="35">)<pos:position pos:line="63" pos:column="36"/></operator></expr>;<pos:position pos:line="63" pos:column="37"/></return>
		}<pos:position pos:line="64" pos:column="18"/></block></then></if>

		<if pos:line="66" pos:column="17">if <condition pos:line="66" pos:column="20">(<expr><call><name pos:line="66" pos:column="21">ping_timeval_sub<pos:position pos:line="66" pos:column="37"/></name> <argument_list pos:line="66" pos:column="38">(<argument><expr><operator pos:line="66" pos:column="39">&amp;<pos:position pos:line="66" pos:column="44"/></operator><name pos:line="66" pos:column="40">endtime<pos:position pos:line="66" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="66" pos:column="49">&amp;<pos:position pos:line="66" pos:column="54"/></operator><name pos:line="66" pos:column="50">nowtime<pos:position pos:line="66" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="66" pos:column="59">&amp;<pos:position pos:line="66" pos:column="64"/></operator><name pos:line="66" pos:column="60">timeout<pos:position pos:line="66" pos:column="67"/></name></expr></argument>)<pos:position pos:line="66" pos:column="68"/></argument_list></call> <operator pos:line="66" pos:column="69">==<pos:position pos:line="66" pos:column="71"/></operator> <operator pos:line="66" pos:column="72">-<pos:position pos:line="66" pos:column="73"/></operator><literal type="number" pos:line="66" pos:column="73">1<pos:position pos:line="66" pos:column="74"/></literal></expr>)<pos:position pos:line="66" pos:column="75"/></condition><then pos:line="66" pos:column="75">
			<block type="pseudo"><break pos:line="67" pos:column="25">break;<pos:position pos:line="67" pos:column="31"/></break></block></then></if>

		<expr_stmt><expr><call><name pos:line="69" pos:column="17">dprintf<pos:position pos:line="69" pos:column="24"/></name> <argument_list pos:line="69" pos:column="25">(<argument><expr><literal type="string" pos:line="69" pos:column="26">"Waiting on %i sockets for %i.%06i seconds\n"<pos:position pos:line="69" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="69" pos:column="73">num_readfds<pos:position pos:line="69" pos:column="84"/></name></expr></argument>,
				<argument><expr><operator pos:line="70" pos:column="33">(<pos:position pos:line="70" pos:column="34"/></operator><name pos:line="70" pos:column="34">int<pos:position pos:line="70" pos:column="37"/></name><operator pos:line="70" pos:column="37">)<pos:position pos:line="70" pos:column="38"/></operator> <name><name pos:line="70" pos:column="39">timeout<pos:position pos:line="70" pos:column="46"/></name><operator pos:line="70" pos:column="46">.<pos:position pos:line="70" pos:column="47"/></operator><name pos:line="70" pos:column="47">tv_sec<pos:position pos:line="70" pos:column="53"/></name></name></expr></argument>,
				<argument><expr><operator pos:line="71" pos:column="33">(<pos:position pos:line="71" pos:column="34"/></operator><name pos:line="71" pos:column="34">int<pos:position pos:line="71" pos:column="37"/></name><operator pos:line="71" pos:column="37">)<pos:position pos:line="71" pos:column="38"/></operator> <name><name pos:line="71" pos:column="39">timeout<pos:position pos:line="71" pos:column="46"/></name><operator pos:line="71" pos:column="46">.<pos:position pos:line="71" pos:column="47"/></operator><name pos:line="71" pos:column="47">tv_usec<pos:position pos:line="71" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="56"/></expr_stmt>

		<expr_stmt><expr><name pos:line="73" pos:column="17">status<pos:position pos:line="73" pos:column="23"/></name> <operator pos:line="73" pos:column="24">=<pos:position pos:line="73" pos:column="25"/></operator> <call><name pos:line="73" pos:column="26">select<pos:position pos:line="73" pos:column="32"/></name> <argument_list pos:line="73" pos:column="33">(<argument><expr><name pos:line="73" pos:column="34">max_readfds<pos:position pos:line="73" pos:column="45"/></name> <operator pos:line="73" pos:column="46">+<pos:position pos:line="73" pos:column="47"/></operator> <literal type="number" pos:line="73" pos:column="48">1<pos:position pos:line="73" pos:column="49"/></literal></expr></argument>, <argument><expr><operator pos:line="73" pos:column="51">&amp;<pos:position pos:line="73" pos:column="56"/></operator><name pos:line="73" pos:column="52">readfds<pos:position pos:line="73" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="61">NULL<pos:position pos:line="73" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="67">NULL<pos:position pos:line="73" pos:column="71"/></name></expr></argument>, <argument><expr><operator pos:line="73" pos:column="73">&amp;<pos:position pos:line="73" pos:column="78"/></operator><name pos:line="73" pos:column="74">timeout<pos:position pos:line="73" pos:column="81"/></name></expr></argument>)<pos:position pos:line="73" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="83"/></expr_stmt>

		<if pos:line="75" pos:column="17">if <condition pos:line="75" pos:column="20">(<expr><call><name pos:line="75" pos:column="21">gettimeofday<pos:position pos:line="75" pos:column="33"/></name> <argument_list pos:line="75" pos:column="34">(<argument><expr><operator pos:line="75" pos:column="35">&amp;<pos:position pos:line="75" pos:column="40"/></operator><name pos:line="75" pos:column="36">nowtime<pos:position pos:line="75" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="45">NULL<pos:position pos:line="75" pos:column="49"/></name></expr></argument>)<pos:position pos:line="75" pos:column="50"/></argument_list></call> <operator pos:line="75" pos:column="51">==<pos:position pos:line="75" pos:column="53"/></operator> <operator pos:line="75" pos:column="54">-<pos:position pos:line="75" pos:column="55"/></operator><literal type="number" pos:line="75" pos:column="55">1<pos:position pos:line="75" pos:column="56"/></literal></expr>)<pos:position pos:line="75" pos:column="57"/></condition><then pos:line="75" pos:column="57">
		<block pos:line="76" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="77" pos:column="25">ping_set_error<pos:position pos:line="77" pos:column="39"/></name> <argument_list pos:line="77" pos:column="40">(<argument><expr><name pos:line="77" pos:column="41">obj<pos:position pos:line="77" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="46">"gettimeofday"<pos:position pos:line="77" pos:column="60"/></literal></expr></argument>, <argument><expr><call><name pos:line="77" pos:column="62">strerror<pos:position pos:line="77" pos:column="70"/></name> <argument_list pos:line="77" pos:column="71">(<argument><expr><name pos:line="77" pos:column="72">errno<pos:position pos:line="77" pos:column="77"/></name></expr></argument>)<pos:position pos:line="77" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="77" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="80"/></expr_stmt>
			<return pos:line="78" pos:column="25">return <expr><operator pos:line="78" pos:column="32">(<pos:position pos:line="78" pos:column="33"/></operator><operator pos:line="78" pos:column="33">-<pos:position pos:line="78" pos:column="34"/></operator><literal type="number" pos:line="78" pos:column="34">1<pos:position pos:line="78" pos:column="35"/></literal><operator pos:line="78" pos:column="35">)<pos:position pos:line="78" pos:column="36"/></operator></expr>;<pos:position pos:line="78" pos:column="37"/></return>
		}<pos:position pos:line="79" pos:column="18"/></block></then></if>
		
		<if pos:line="81" pos:column="17">if <condition pos:line="81" pos:column="20">(<expr><operator pos:line="81" pos:column="21">(<pos:position pos:line="81" pos:column="22"/></operator><name pos:line="81" pos:column="22">status<pos:position pos:line="81" pos:column="28"/></name> <operator pos:line="81" pos:column="29">==<pos:position pos:line="81" pos:column="31"/></operator> <operator pos:line="81" pos:column="32">-<pos:position pos:line="81" pos:column="33"/></operator><literal type="number" pos:line="81" pos:column="33">1<pos:position pos:line="81" pos:column="34"/></literal><operator pos:line="81" pos:column="34">)<pos:position pos:line="81" pos:column="35"/></operator> <operator pos:line="81" pos:column="36">&amp;&amp;<pos:position pos:line="81" pos:column="46"/></operator> <operator pos:line="81" pos:column="39">(<pos:position pos:line="81" pos:column="40"/></operator><name pos:line="81" pos:column="40">errno<pos:position pos:line="81" pos:column="45"/></name> <operator pos:line="81" pos:column="46">==<pos:position pos:line="81" pos:column="48"/></operator> <name pos:line="81" pos:column="49">EINTR<pos:position pos:line="81" pos:column="54"/></name><operator pos:line="81" pos:column="54">)<pos:position pos:line="81" pos:column="55"/></operator></expr>)<pos:position pos:line="81" pos:column="56"/></condition><then pos:line="81" pos:column="56">
		<block pos:line="82" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="83" pos:column="25">dprintf<pos:position pos:line="83" pos:column="32"/></name> <argument_list pos:line="83" pos:column="33">(<argument><expr><literal type="string" pos:line="83" pos:column="34">"select was interrupted by signal..\n"<pos:position pos:line="83" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="74"/></expr_stmt>
			<continue pos:line="84" pos:column="25">continue;<pos:position pos:line="84" pos:column="34"/></continue>
		}<pos:position pos:line="85" pos:column="18"/></block></then>
		<elseif pos:line="86" pos:column="17">else <if pos:line="86" pos:column="22">if <condition pos:line="86" pos:column="25">(<expr><name pos:line="86" pos:column="26">status<pos:position pos:line="86" pos:column="32"/></name> <operator pos:line="86" pos:column="33">&lt;<pos:position pos:line="86" pos:column="37"/></operator> <literal type="number" pos:line="86" pos:column="35">0<pos:position pos:line="86" pos:column="36"/></literal></expr>)<pos:position pos:line="86" pos:column="37"/></condition><then pos:line="86" pos:column="37">
		<block pos:line="87" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="88" pos:column="25">dprintf<pos:position pos:line="88" pos:column="32"/></name> <argument_list pos:line="88" pos:column="33">(<argument><expr><literal type="string" pos:line="88" pos:column="34">"select: %s\n"<pos:position pos:line="88" pos:column="48"/></literal></expr></argument>, <argument><expr><call><name pos:line="88" pos:column="50">strerror<pos:position pos:line="88" pos:column="58"/></name> <argument_list pos:line="88" pos:column="59">(<argument><expr><name pos:line="88" pos:column="60">errno<pos:position pos:line="88" pos:column="65"/></name></expr></argument>)<pos:position pos:line="88" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="88" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="68"/></expr_stmt>
			<break pos:line="89" pos:column="25">break;<pos:position pos:line="89" pos:column="31"/></break>
		}<pos:position pos:line="90" pos:column="18"/></block></then></if></elseif>
		<elseif pos:line="91" pos:column="17">else <if pos:line="91" pos:column="22">if <condition pos:line="91" pos:column="25">(<expr><name pos:line="91" pos:column="26">status<pos:position pos:line="91" pos:column="32"/></name> <operator pos:line="91" pos:column="33">==<pos:position pos:line="91" pos:column="35"/></operator> <literal type="number" pos:line="91" pos:column="36">0<pos:position pos:line="91" pos:column="37"/></literal></expr>)<pos:position pos:line="91" pos:column="38"/></condition><then pos:line="91" pos:column="38">
		<block pos:line="92" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="93" pos:column="25">dprintf<pos:position pos:line="93" pos:column="32"/></name> <argument_list pos:line="93" pos:column="33">(<argument><expr><literal type="string" pos:line="93" pos:column="34">"select timed out\n"<pos:position pos:line="93" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="56"/></expr_stmt>
			<break pos:line="94" pos:column="25">break;<pos:position pos:line="94" pos:column="31"/></break>
		}<pos:position pos:line="95" pos:column="18"/></block></then></if></elseif></if>

		<for pos:line="97" pos:column="17">for <control pos:line="97" pos:column="21">(<init><expr><name pos:line="97" pos:column="22">ptr<pos:position pos:line="97" pos:column="25"/></name> <operator pos:line="97" pos:column="26">=<pos:position pos:line="97" pos:column="27"/></operator> <name pos:line="97" pos:column="28">ph<pos:position pos:line="97" pos:column="30"/></name></expr>;<pos:position pos:line="97" pos:column="31"/></init> <condition><expr><name pos:line="97" pos:column="32">ptr<pos:position pos:line="97" pos:column="35"/></name> <operator pos:line="97" pos:column="36">!=<pos:position pos:line="97" pos:column="38"/></operator> <name pos:line="97" pos:column="39">NULL<pos:position pos:line="97" pos:column="43"/></name></expr>;<pos:position pos:line="97" pos:column="44"/></condition> <incr><expr><name pos:line="97" pos:column="45">ptr<pos:position pos:line="97" pos:column="48"/></name> <operator pos:line="97" pos:column="49">=<pos:position pos:line="97" pos:column="50"/></operator> <name><name pos:line="97" pos:column="51">ptr<pos:position pos:line="97" pos:column="54"/></name><operator pos:line="97" pos:column="54">-&gt;<pos:position pos:line="97" pos:column="59"/></operator><name pos:line="97" pos:column="56">next<pos:position pos:line="97" pos:column="60"/></name></name></expr></incr>)<pos:position pos:line="97" pos:column="61"/></control>
		<block pos:line="98" pos:column="17">{
			<if pos:line="99" pos:column="25">if <condition pos:line="99" pos:column="28">(<expr><call><name pos:line="99" pos:column="29">FD_ISSET<pos:position pos:line="99" pos:column="37"/></name> <argument_list pos:line="99" pos:column="38">(<argument><expr><name><name pos:line="99" pos:column="39">ptr<pos:position pos:line="99" pos:column="42"/></name><operator pos:line="99" pos:column="42">-&gt;<pos:position pos:line="99" pos:column="47"/></operator><name pos:line="99" pos:column="44">fd<pos:position pos:line="99" pos:column="46"/></name></name></expr></argument>, <argument><expr><operator pos:line="99" pos:column="48">&amp;<pos:position pos:line="99" pos:column="53"/></operator><name pos:line="99" pos:column="49">readfds<pos:position pos:line="99" pos:column="56"/></name></expr></argument>)<pos:position pos:line="99" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="99" pos:column="58"/></condition><then pos:line="99" pos:column="58">
				<block type="pseudo"><if pos:line="100" pos:column="33">if <condition pos:line="100" pos:column="36">(<expr><call><name pos:line="100" pos:column="37">ping_receive_one<pos:position pos:line="100" pos:column="53"/></name> <argument_list pos:line="100" pos:column="54">(<argument><expr><name><name pos:line="100" pos:column="55">ptr<pos:position pos:line="100" pos:column="58"/></name><operator pos:line="100" pos:column="58">-&gt;<pos:position pos:line="100" pos:column="63"/></operator><name pos:line="100" pos:column="60">fd<pos:position pos:line="100" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="64">ph<pos:position pos:line="100" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="100" pos:column="68">&amp;<pos:position pos:line="100" pos:column="73"/></operator><name pos:line="100" pos:column="69">nowtime<pos:position pos:line="100" pos:column="76"/></name></expr></argument>)<pos:position pos:line="100" pos:column="77"/></argument_list></call> <operator pos:line="100" pos:column="78">==<pos:position pos:line="100" pos:column="80"/></operator> <literal type="number" pos:line="100" pos:column="81">0<pos:position pos:line="100" pos:column="82"/></literal></expr>)<pos:position pos:line="100" pos:column="83"/></condition><then pos:line="100" pos:column="83">
					<block type="pseudo"><expr_stmt><expr><name pos:line="101" pos:column="41">ret<pos:position pos:line="101" pos:column="44"/></name><operator pos:line="101" pos:column="44">++<pos:position pos:line="101" pos:column="46"/></operator></expr>;<pos:position pos:line="101" pos:column="47"/></expr_stmt></block></then></if></block></then></if>
		}<pos:position pos:line="102" pos:column="18"/></block></for>
	}<pos:position pos:line="103" pos:column="10"/></block></while> <comment type="block" pos:line="103" pos:column="11">/* while (1) */</comment>
	
	<return pos:line="105" pos:column="9">return <expr><operator pos:line="105" pos:column="16">(<pos:position pos:line="105" pos:column="17"/></operator><name pos:line="105" pos:column="17">ret<pos:position pos:line="105" pos:column="20"/></name><operator pos:line="105" pos:column="20">)<pos:position pos:line="105" pos:column="21"/></operator></expr>;<pos:position pos:line="105" pos:column="22"/></return>
}<pos:position pos:line="106" pos:column="2"/></block></function></unit>

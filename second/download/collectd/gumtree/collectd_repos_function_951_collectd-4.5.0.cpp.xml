<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_951_collectd-4.5.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">cipvs_submit_service<pos:position pos:line="1" pos:column="33"/></name> <parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">ip_vs_service_entry<pos:position pos:line="1" pos:column="61"/></name></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">se<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">ip_vs_stats_user<pos:position pos:line="3" pos:column="32"/></name></name></type>  <name pos:line="3" pos:column="34">stats<pos:position pos:line="3" pos:column="39"/></name> <init pos:line="3" pos:column="40">= <expr><name><name pos:line="3" pos:column="42">se<pos:position pos:line="3" pos:column="44"/></name><operator pos:line="3" pos:column="44">-&gt;<pos:position pos:line="3" pos:column="49"/></operator><name pos:line="3" pos:column="46">stats<pos:position pos:line="3" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="52"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">ip_vs_get_dests<pos:position pos:line="4" pos:column="31"/></name></name>  <modifier pos:line="4" pos:column="33">*<pos:position pos:line="4" pos:column="34"/></modifier></type><name pos:line="4" pos:column="34">dests<pos:position pos:line="4" pos:column="39"/></name> <init pos:line="4" pos:column="40">= <expr><call><name pos:line="4" pos:column="42">ipvs_get_dests<pos:position pos:line="4" pos:column="56"/></name> <argument_list pos:line="4" pos:column="57">(<argument><expr><name pos:line="4" pos:column="58">se<pos:position pos:line="4" pos:column="60"/></name></expr></argument>)<pos:position pos:line="4" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="62"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name></type> <name><name pos:line="6" pos:column="14">pi<pos:position pos:line="6" pos:column="16"/></name><index pos:line="6" pos:column="16">[<expr><name pos:line="6" pos:column="17">DATA_MAX_NAME_LEN<pos:position pos:line="6" pos:column="34"/></name></expr>]<pos:position pos:line="6" pos:column="35"/></index></name></decl>;<pos:position pos:line="6" pos:column="36"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">i<pos:position pos:line="8" pos:column="14"/></name> <init pos:line="8" pos:column="15">= <expr><literal type="number" pos:line="8" pos:column="17">0<pos:position pos:line="8" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><literal type="number" pos:line="10" pos:column="13">0<pos:position pos:line="10" pos:column="14"/></literal> <operator pos:line="10" pos:column="15">!=<pos:position pos:line="10" pos:column="17"/></operator> <call><name pos:line="10" pos:column="18">get_pi<pos:position pos:line="10" pos:column="24"/></name> <argument_list pos:line="10" pos:column="25">(<argument><expr><name pos:line="10" pos:column="26">se<pos:position pos:line="10" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="30">pi<pos:position pos:line="10" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="34">DATA_MAX_NAME_LEN<pos:position pos:line="10" pos:column="51"/></name></expr></argument>)<pos:position pos:line="10" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="53"/></condition><then pos:line="10" pos:column="53">
		<block type="pseudo"><return pos:line="11" pos:column="17">return;<pos:position pos:line="11" pos:column="24"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="13" pos:column="9">cipvs_submit_connections<pos:position pos:line="13" pos:column="33"/></name> <argument_list pos:line="13" pos:column="34">(<argument><expr><name pos:line="13" pos:column="35">pi<pos:position pos:line="13" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="39">NULL<pos:position pos:line="13" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="45">stats<pos:position pos:line="13" pos:column="50"/></name><operator pos:line="13" pos:column="50">.<pos:position pos:line="13" pos:column="51"/></operator><name pos:line="13" pos:column="51">conns<pos:position pos:line="13" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="58"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">cipvs_submit_if<pos:position pos:line="14" pos:column="24"/></name> <argument_list pos:line="14" pos:column="25">(<argument><expr><name pos:line="14" pos:column="26">pi<pos:position pos:line="14" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="30">"if_packets"<pos:position pos:line="14" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="44">NULL<pos:position pos:line="14" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="50">stats<pos:position pos:line="14" pos:column="55"/></name><operator pos:line="14" pos:column="55">.<pos:position pos:line="14" pos:column="56"/></operator><name pos:line="14" pos:column="56">inpkts<pos:position pos:line="14" pos:column="62"/></name></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="64">stats<pos:position pos:line="14" pos:column="69"/></name><operator pos:line="14" pos:column="69">.<pos:position pos:line="14" pos:column="70"/></operator><name pos:line="14" pos:column="70">outpkts<pos:position pos:line="14" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="79"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">cipvs_submit_if<pos:position pos:line="15" pos:column="24"/></name> <argument_list pos:line="15" pos:column="25">(<argument><expr><name pos:line="15" pos:column="26">pi<pos:position pos:line="15" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="30">"if_octets"<pos:position pos:line="15" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="43">NULL<pos:position pos:line="15" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="49">stats<pos:position pos:line="15" pos:column="54"/></name><operator pos:line="15" pos:column="54">.<pos:position pos:line="15" pos:column="55"/></operator><name pos:line="15" pos:column="55">inbytes<pos:position pos:line="15" pos:column="62"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="64">stats<pos:position pos:line="15" pos:column="69"/></name><operator pos:line="15" pos:column="69">.<pos:position pos:line="15" pos:column="70"/></operator><name pos:line="15" pos:column="70">outbytes<pos:position pos:line="15" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="80"/></expr_stmt>

	<for pos:line="17" pos:column="9">for <control pos:line="17" pos:column="13">(<init><expr><name pos:line="17" pos:column="14">i<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <literal type="number" pos:line="17" pos:column="18">0<pos:position pos:line="17" pos:column="19"/></literal></expr>;<pos:position pos:line="17" pos:column="20"/></init> <condition><expr><name pos:line="17" pos:column="21">i<pos:position pos:line="17" pos:column="22"/></name> <operator pos:line="17" pos:column="23">&lt;<pos:position pos:line="17" pos:column="27"/></operator> <name><name pos:line="17" pos:column="25">dests<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">-&gt;<pos:position pos:line="17" pos:column="35"/></operator><name pos:line="17" pos:column="32">num_dests<pos:position pos:line="17" pos:column="41"/></name></name></expr>;<pos:position pos:line="17" pos:column="42"/></condition> <incr><expr><operator pos:line="17" pos:column="43">++<pos:position pos:line="17" pos:column="45"/></operator><name pos:line="17" pos:column="45">i<pos:position pos:line="17" pos:column="46"/></name></expr></incr>)<pos:position pos:line="17" pos:column="47"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="17">cipvs_submit_dest<pos:position pos:line="18" pos:column="34"/></name> <argument_list pos:line="18" pos:column="35">(<argument><expr><name pos:line="18" pos:column="36">pi<pos:position pos:line="18" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="40">&amp;<pos:position pos:line="18" pos:column="45"/></operator><name><name pos:line="18" pos:column="41">dests<pos:position pos:line="18" pos:column="46"/></name><operator pos:line="18" pos:column="46">-&gt;<pos:position pos:line="18" pos:column="51"/></operator><name pos:line="18" pos:column="48">entrytable<pos:position pos:line="18" pos:column="58"/></name><index pos:line="18" pos:column="58">[<expr><name pos:line="18" pos:column="59">i<pos:position pos:line="18" pos:column="60"/></name></expr>]<pos:position pos:line="18" pos:column="61"/></index></name></expr></argument>)<pos:position pos:line="18" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="63"/></expr_stmt></block></for>

	<expr_stmt><expr><call><name pos:line="20" pos:column="9">free<pos:position pos:line="20" pos:column="13"/></name> <argument_list pos:line="20" pos:column="14">(<argument><expr><name pos:line="20" pos:column="15">dests<pos:position pos:line="20" pos:column="20"/></name></expr></argument>)<pos:position pos:line="20" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="22"/></expr_stmt>
	<return pos:line="21" pos:column="9">return;<pos:position pos:line="21" pos:column="16"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

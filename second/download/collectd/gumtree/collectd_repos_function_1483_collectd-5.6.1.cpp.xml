<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1483_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">as_read<pos:position pos:line="1" pos:column="19"/></name> <parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">void<pos:position pos:line="1" pos:column="25"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="26"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">kern_return_t<pos:position pos:line="3" pos:column="22"/></name></type>   <name pos:line="3" pos:column="25">status<pos:position pos:line="3" pos:column="31"/></name></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">io_iterator_t<pos:position pos:line="4" pos:column="22"/></name></type>   <name pos:line="4" pos:column="25">iterator<pos:position pos:line="4" pos:column="33"/></name></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">io_object_t<pos:position pos:line="5" pos:column="20"/></name></type>     <name pos:line="5" pos:column="25">io_obj<pos:position pos:line="5" pos:column="31"/></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">CFMutableDictionaryRef<pos:position pos:line="6" pos:column="31"/></name></type> <name pos:line="6" pos:column="32">prop_dict<pos:position pos:line="6" pos:column="41"/></name></decl>;<pos:position pos:line="6" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">CFTypeRef<pos:position pos:line="7" pos:column="18"/></name></type>       <name pos:line="7" pos:column="25">property<pos:position pos:line="7" pos:column="33"/></name></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name></type>   <name><name pos:line="9" pos:column="16">type<pos:position pos:line="9" pos:column="20"/></name><index pos:line="9" pos:column="20">[<expr><literal type="number" pos:line="9" pos:column="21">128<pos:position pos:line="9" pos:column="24"/></literal></expr>]<pos:position pos:line="9" pos:column="25"/></index></name></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name></type>   <name><name pos:line="10" pos:column="16">inst<pos:position pos:line="10" pos:column="20"/></name><index pos:line="10" pos:column="20">[<expr><literal type="number" pos:line="10" pos:column="21">128<pos:position pos:line="10" pos:column="24"/></literal></expr>]<pos:position pos:line="10" pos:column="25"/></index></name></decl>;<pos:position pos:line="10" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type>    <name pos:line="11" pos:column="16">value_int<pos:position pos:line="11" pos:column="25"/></name></decl>;<pos:position pos:line="11" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">double<pos:position pos:line="12" pos:column="15"/></name></type> <name pos:line="12" pos:column="16">value_double<pos:position pos:line="12" pos:column="28"/></name></decl>;<pos:position pos:line="12" pos:column="29"/></decl_stmt>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">io_master_port<pos:position pos:line="13" pos:column="28"/></name> <operator pos:line="13" pos:column="29">||<pos:position pos:line="13" pos:column="31"/></operator> <operator pos:line="13" pos:column="32">(<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="33">io_master_port<pos:position pos:line="13" pos:column="47"/></name> <operator pos:line="13" pos:column="48">==<pos:position pos:line="13" pos:column="50"/></operator> <name pos:line="13" pos:column="51">MACH_PORT_NULL<pos:position pos:line="13" pos:column="65"/></name><operator pos:line="13" pos:column="65">)<pos:position pos:line="13" pos:column="66"/></operator></expr>)<pos:position pos:line="13" pos:column="67"/></condition><then pos:line="13" pos:column="67">
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><operator pos:line="14" pos:column="24">(<pos:position pos:line="14" pos:column="25"/></operator><operator pos:line="14" pos:column="25">-<pos:position pos:line="14" pos:column="26"/></operator><literal type="number" pos:line="14" pos:column="26">1<pos:position pos:line="14" pos:column="27"/></literal><operator pos:line="14" pos:column="27">)<pos:position pos:line="14" pos:column="28"/></operator></expr>;<pos:position pos:line="14" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="16" pos:column="9">status<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <call><name pos:line="16" pos:column="18">IOServiceGetMatchingServices<pos:position pos:line="16" pos:column="46"/></name> <argument_list pos:line="16" pos:column="47">(<argument><expr><name pos:line="16" pos:column="48">io_master_port<pos:position pos:line="16" pos:column="62"/></name></expr></argument>,
		       	<argument><expr><call><name pos:line="17" pos:column="25">IOServiceNameMatching<pos:position pos:line="17" pos:column="46"/></name><argument_list pos:line="17" pos:column="46">(<argument><expr><literal type="string" pos:line="17" pos:column="47">"IOHWSensor"<pos:position pos:line="17" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="60"/></argument_list></call></expr></argument>,
		       	<argument><expr><operator pos:line="18" pos:column="25">&amp;<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="26">iterator<pos:position pos:line="18" pos:column="34"/></name></expr></argument>)<pos:position pos:line="18" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="36"/></expr_stmt>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">status<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">!=<pos:position pos:line="19" pos:column="22"/></operator> <name pos:line="19" pos:column="23">kIOReturnSuccess<pos:position pos:line="19" pos:column="39"/></name></expr>)<pos:position pos:line="19" pos:column="40"/></condition><then pos:line="19" pos:column="40">
       	<block pos:line="20" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">ERROR<pos:position pos:line="21" pos:column="22"/></name> <argument_list pos:line="21" pos:column="23">(<argument><expr><literal type="string" pos:line="21" pos:column="24">"IOServiceGetMatchingServices failed: %s"<pos:position pos:line="21" pos:column="65"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="22" pos:column="33">mach_error_string<pos:position pos:line="22" pos:column="50"/></name> <argument_list pos:line="22" pos:column="51">(<argument><expr><name pos:line="22" pos:column="52">status<pos:position pos:line="22" pos:column="58"/></name></expr></argument>)<pos:position pos:line="22" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="61"/></expr_stmt>
		<return pos:line="23" pos:column="17">return <expr><operator pos:line="23" pos:column="24">(<pos:position pos:line="23" pos:column="25"/></operator><operator pos:line="23" pos:column="25">-<pos:position pos:line="23" pos:column="26"/></operator><literal type="number" pos:line="23" pos:column="26">1<pos:position pos:line="23" pos:column="27"/></literal><operator pos:line="23" pos:column="27">)<pos:position pos:line="23" pos:column="28"/></operator></expr>;<pos:position pos:line="23" pos:column="29"/></return>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>

	<while pos:line="26" pos:column="9">while <condition pos:line="26" pos:column="15">(<expr><operator pos:line="26" pos:column="16">(<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="17">io_obj<pos:position pos:line="26" pos:column="23"/></name> <operator pos:line="26" pos:column="24">=<pos:position pos:line="26" pos:column="25"/></operator> <call><name pos:line="26" pos:column="26">IOIteratorNext<pos:position pos:line="26" pos:column="40"/></name> <argument_list pos:line="26" pos:column="41">(<argument><expr><name pos:line="26" pos:column="42">iterator<pos:position pos:line="26" pos:column="50"/></name></expr></argument>)<pos:position pos:line="26" pos:column="51"/></argument_list></call><operator pos:line="26" pos:column="51">)<pos:position pos:line="26" pos:column="52"/></operator></expr>)<pos:position pos:line="26" pos:column="53"/></condition>
	<block pos:line="27" pos:column="9">{
		<expr_stmt><expr><name pos:line="28" pos:column="17">prop_dict<pos:position pos:line="28" pos:column="26"/></name> <operator pos:line="28" pos:column="27">=<pos:position pos:line="28" pos:column="28"/></operator> <name pos:line="28" pos:column="29">NULL<pos:position pos:line="28" pos:column="33"/></name></expr>;<pos:position pos:line="28" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name pos:line="29" pos:column="17">status<pos:position pos:line="29" pos:column="23"/></name> <operator pos:line="29" pos:column="24">=<pos:position pos:line="29" pos:column="25"/></operator> <call><name pos:line="29" pos:column="26">IORegistryEntryCreateCFProperties<pos:position pos:line="29" pos:column="59"/></name> <argument_list pos:line="29" pos:column="60">(<argument><expr><name pos:line="29" pos:column="61">io_obj<pos:position pos:line="29" pos:column="67"/></name></expr></argument>,
				<argument><expr><operator pos:line="30" pos:column="33">&amp;<pos:position pos:line="30" pos:column="38"/></operator><name pos:line="30" pos:column="34">prop_dict<pos:position pos:line="30" pos:column="43"/></name></expr></argument>,
				<argument><expr><name pos:line="31" pos:column="33">kCFAllocatorDefault<pos:position pos:line="31" pos:column="52"/></name></expr></argument>,
				<argument><expr><name pos:line="32" pos:column="33">kNilOptions<pos:position pos:line="32" pos:column="44"/></name></expr></argument>)<pos:position pos:line="32" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="46"/></expr_stmt>
		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><name pos:line="33" pos:column="21">status<pos:position pos:line="33" pos:column="27"/></name> <operator pos:line="33" pos:column="28">!=<pos:position pos:line="33" pos:column="30"/></operator> <name pos:line="33" pos:column="31">kIOReturnSuccess<pos:position pos:line="33" pos:column="47"/></name></expr>)<pos:position pos:line="33" pos:column="48"/></condition><then pos:line="33" pos:column="48">
		<block pos:line="34" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="35" pos:column="25">DEBUG<pos:position pos:line="35" pos:column="30"/></name> <argument_list pos:line="35" pos:column="31">(<argument><expr><literal type="string" pos:line="35" pos:column="32">"IORegistryEntryCreateCFProperties failed: %s"<pos:position pos:line="35" pos:column="78"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="36" pos:column="41">mach_error_string<pos:position pos:line="36" pos:column="58"/></name> <argument_list pos:line="36" pos:column="59">(<argument><expr><name pos:line="36" pos:column="60">status<pos:position pos:line="36" pos:column="66"/></name></expr></argument>)<pos:position pos:line="36" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="69"/></expr_stmt>
			<continue pos:line="37" pos:column="25">continue;<pos:position pos:line="37" pos:column="34"/></continue>
		}<pos:position pos:line="38" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="40" pos:column="17">/* Copy the sensor type. */</comment>
		<expr_stmt><expr><name pos:line="41" pos:column="17">property<pos:position pos:line="41" pos:column="25"/></name> <operator pos:line="41" pos:column="26">=<pos:position pos:line="41" pos:column="27"/></operator> <name pos:line="41" pos:column="28">NULL<pos:position pos:line="41" pos:column="32"/></name></expr>;<pos:position pos:line="41" pos:column="33"/></expr_stmt>
		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><operator pos:line="42" pos:column="21">!<pos:position pos:line="42" pos:column="22"/></operator><call><name pos:line="42" pos:column="22">CFDictionaryGetValueIfPresent<pos:position pos:line="42" pos:column="51"/></name> <argument_list pos:line="42" pos:column="52">(<argument><expr><name pos:line="42" pos:column="53">prop_dict<pos:position pos:line="42" pos:column="62"/></name></expr></argument>,
					<argument><expr><call><name pos:line="43" pos:column="41">CFSTR<pos:position pos:line="43" pos:column="46"/></name> <argument_list pos:line="43" pos:column="47">(<argument><expr><literal type="string" pos:line="43" pos:column="48">"type"<pos:position pos:line="43" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="55"/></argument_list></call></expr></argument>,
					<argument><expr><operator pos:line="44" pos:column="41">&amp;<pos:position pos:line="44" pos:column="46"/></operator><name pos:line="44" pos:column="42">property<pos:position pos:line="44" pos:column="50"/></name></expr></argument>)<pos:position pos:line="44" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="52"/></condition><then pos:line="44" pos:column="52">
			<block type="pseudo"><continue pos:line="45" pos:column="25">continue;<pos:position pos:line="45" pos:column="34"/></continue></block></then></if>
		<if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><call><name pos:line="46" pos:column="21">CFGetTypeID<pos:position pos:line="46" pos:column="32"/></name> <argument_list pos:line="46" pos:column="33">(<argument><expr><name pos:line="46" pos:column="34">property<pos:position pos:line="46" pos:column="42"/></name></expr></argument>)<pos:position pos:line="46" pos:column="43"/></argument_list></call> <operator pos:line="46" pos:column="44">!=<pos:position pos:line="46" pos:column="46"/></operator> <call><name pos:line="46" pos:column="47">CFStringGetTypeID<pos:position pos:line="46" pos:column="64"/></name> <argument_list pos:line="46" pos:column="65">()<pos:position pos:line="46" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="68"/></condition><then pos:line="46" pos:column="68">
			<block type="pseudo"><continue pos:line="47" pos:column="25">continue;<pos:position pos:line="47" pos:column="34"/></continue></block></then></if>
		<if pos:line="48" pos:column="17">if <condition pos:line="48" pos:column="20">(<expr><operator pos:line="48" pos:column="21">!<pos:position pos:line="48" pos:column="22"/></operator><call><name pos:line="48" pos:column="22">CFStringGetCString<pos:position pos:line="48" pos:column="40"/></name> <argument_list pos:line="48" pos:column="41">(<argument><expr><name pos:line="48" pos:column="42">property<pos:position pos:line="48" pos:column="50"/></name></expr></argument>,
					<argument><expr><name pos:line="49" pos:column="41">type<pos:position pos:line="49" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="49" pos:column="47">sizeof <argument_list pos:line="49" pos:column="54">(<argument><expr><name pos:line="49" pos:column="55">type<pos:position pos:line="49" pos:column="59"/></name></expr></argument>)<pos:position pos:line="49" pos:column="60"/></argument_list></sizeof></expr></argument>,
					<argument><expr><name pos:line="50" pos:column="41">kCFStringEncodingASCII<pos:position pos:line="50" pos:column="63"/></name></expr></argument>)<pos:position pos:line="50" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="65"/></condition><then pos:line="50" pos:column="65">
			<block type="pseudo"><continue pos:line="51" pos:column="25">continue;<pos:position pos:line="51" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><name><name pos:line="52" pos:column="17">type<pos:position pos:line="52" pos:column="21"/></name><index pos:line="52" pos:column="21">[<expr><sizeof pos:line="52" pos:column="22">sizeof <argument_list pos:line="52" pos:column="29">(<argument><expr><name pos:line="52" pos:column="30">type<pos:position pos:line="52" pos:column="34"/></name></expr></argument>)<pos:position pos:line="52" pos:column="35"/></argument_list></sizeof> <operator pos:line="52" pos:column="36">-<pos:position pos:line="52" pos:column="37"/></operator> <literal type="number" pos:line="52" pos:column="38">1<pos:position pos:line="52" pos:column="39"/></literal></expr>]<pos:position pos:line="52" pos:column="40"/></index></name> <operator pos:line="52" pos:column="41">=<pos:position pos:line="52" pos:column="42"/></operator> <literal type="char" pos:line="52" pos:column="43">'\0'<pos:position pos:line="52" pos:column="47"/></literal></expr>;<pos:position pos:line="52" pos:column="48"/></expr_stmt>

		<comment type="block" pos:line="54" pos:column="17">/* Copy the sensor location. This will be used as `instance'. */</comment>
		<expr_stmt><expr><name pos:line="55" pos:column="17">property<pos:position pos:line="55" pos:column="25"/></name> <operator pos:line="55" pos:column="26">=<pos:position pos:line="55" pos:column="27"/></operator> <name pos:line="55" pos:column="28">NULL<pos:position pos:line="55" pos:column="32"/></name></expr>;<pos:position pos:line="55" pos:column="33"/></expr_stmt>
		<if pos:line="56" pos:column="17">if <condition pos:line="56" pos:column="20">(<expr><operator pos:line="56" pos:column="21">!<pos:position pos:line="56" pos:column="22"/></operator><call><name pos:line="56" pos:column="22">CFDictionaryGetValueIfPresent<pos:position pos:line="56" pos:column="51"/></name> <argument_list pos:line="56" pos:column="52">(<argument><expr><name pos:line="56" pos:column="53">prop_dict<pos:position pos:line="56" pos:column="62"/></name></expr></argument>,
					<argument><expr><call><name pos:line="57" pos:column="41">CFSTR<pos:position pos:line="57" pos:column="46"/></name> <argument_list pos:line="57" pos:column="47">(<argument><expr><literal type="string" pos:line="57" pos:column="48">"location"<pos:position pos:line="57" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="59"/></argument_list></call></expr></argument>,
					<argument><expr><operator pos:line="58" pos:column="41">&amp;<pos:position pos:line="58" pos:column="46"/></operator><name pos:line="58" pos:column="42">property<pos:position pos:line="58" pos:column="50"/></name></expr></argument>)<pos:position pos:line="58" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="58" pos:column="52"/></condition><then pos:line="58" pos:column="52">
			<block type="pseudo"><continue pos:line="59" pos:column="25">continue;<pos:position pos:line="59" pos:column="34"/></continue></block></then></if>
		<if pos:line="60" pos:column="17">if <condition pos:line="60" pos:column="20">(<expr><call><name pos:line="60" pos:column="21">CFGetTypeID<pos:position pos:line="60" pos:column="32"/></name> <argument_list pos:line="60" pos:column="33">(<argument><expr><name pos:line="60" pos:column="34">property<pos:position pos:line="60" pos:column="42"/></name></expr></argument>)<pos:position pos:line="60" pos:column="43"/></argument_list></call> <operator pos:line="60" pos:column="44">!=<pos:position pos:line="60" pos:column="46"/></operator> <call><name pos:line="60" pos:column="47">CFStringGetTypeID<pos:position pos:line="60" pos:column="64"/></name> <argument_list pos:line="60" pos:column="65">()<pos:position pos:line="60" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="60" pos:column="68"/></condition><then pos:line="60" pos:column="68">
			<block type="pseudo"><continue pos:line="61" pos:column="25">continue;<pos:position pos:line="61" pos:column="34"/></continue></block></then></if>
		<if pos:line="62" pos:column="17">if <condition pos:line="62" pos:column="20">(<expr><operator pos:line="62" pos:column="21">!<pos:position pos:line="62" pos:column="22"/></operator><call><name pos:line="62" pos:column="22">CFStringGetCString<pos:position pos:line="62" pos:column="40"/></name> <argument_list pos:line="62" pos:column="41">(<argument><expr><name pos:line="62" pos:column="42">property<pos:position pos:line="62" pos:column="50"/></name></expr></argument>,
					<argument><expr><name pos:line="63" pos:column="41">inst<pos:position pos:line="63" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="63" pos:column="47">sizeof <argument_list pos:line="63" pos:column="54">(<argument><expr><name pos:line="63" pos:column="55">inst<pos:position pos:line="63" pos:column="59"/></name></expr></argument>)<pos:position pos:line="63" pos:column="60"/></argument_list></sizeof></expr></argument>,
					<argument><expr><name pos:line="64" pos:column="41">kCFStringEncodingASCII<pos:position pos:line="64" pos:column="63"/></name></expr></argument>)<pos:position pos:line="64" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="64" pos:column="65"/></condition><then pos:line="64" pos:column="65">
			<block type="pseudo"><continue pos:line="65" pos:column="25">continue;<pos:position pos:line="65" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><name><name pos:line="66" pos:column="17">inst<pos:position pos:line="66" pos:column="21"/></name><index pos:line="66" pos:column="21">[<expr><sizeof pos:line="66" pos:column="22">sizeof <argument_list pos:line="66" pos:column="29">(<argument><expr><name pos:line="66" pos:column="30">inst<pos:position pos:line="66" pos:column="34"/></name></expr></argument>)<pos:position pos:line="66" pos:column="35"/></argument_list></sizeof> <operator pos:line="66" pos:column="36">-<pos:position pos:line="66" pos:column="37"/></operator> <literal type="number" pos:line="66" pos:column="38">1<pos:position pos:line="66" pos:column="39"/></literal></expr>]<pos:position pos:line="66" pos:column="40"/></index></name> <operator pos:line="66" pos:column="41">=<pos:position pos:line="66" pos:column="42"/></operator> <literal type="char" pos:line="66" pos:column="43">'\0'<pos:position pos:line="66" pos:column="47"/></literal></expr>;<pos:position pos:line="66" pos:column="48"/></expr_stmt>
		<for pos:line="67" pos:column="17">for <control pos:line="67" pos:column="21">(<init><decl><type><name pos:line="67" pos:column="22">int<pos:position pos:line="67" pos:column="25"/></name></type> <name pos:line="67" pos:column="26">i<pos:position pos:line="67" pos:column="27"/></name> <init pos:line="67" pos:column="28">= <expr><literal type="number" pos:line="67" pos:column="30">0<pos:position pos:line="67" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="67" pos:column="32"/></init> <condition><expr><name pos:line="67" pos:column="33">i<pos:position pos:line="67" pos:column="34"/></name> <operator pos:line="67" pos:column="35">&lt;<pos:position pos:line="67" pos:column="39"/></operator> <literal type="number" pos:line="67" pos:column="37">128<pos:position pos:line="67" pos:column="40"/></literal></expr>;<pos:position pos:line="67" pos:column="41"/></condition> <incr><expr><name pos:line="67" pos:column="42">i<pos:position pos:line="67" pos:column="43"/></name><operator pos:line="67" pos:column="43">++<pos:position pos:line="67" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="67" pos:column="46"/></control>
		<block pos:line="68" pos:column="17">{
			<if pos:line="69" pos:column="25">if <condition pos:line="69" pos:column="28">(<expr><name><name pos:line="69" pos:column="29">inst<pos:position pos:line="69" pos:column="33"/></name><index pos:line="69" pos:column="33">[<expr><name pos:line="69" pos:column="34">i<pos:position pos:line="69" pos:column="35"/></name></expr>]<pos:position pos:line="69" pos:column="36"/></index></name> <operator pos:line="69" pos:column="37">==<pos:position pos:line="69" pos:column="39"/></operator> <literal type="char" pos:line="69" pos:column="40">'\0'<pos:position pos:line="69" pos:column="44"/></literal></expr>)<pos:position pos:line="69" pos:column="45"/></condition><then pos:line="69" pos:column="45">
				<block type="pseudo"><break pos:line="70" pos:column="33">break;<pos:position pos:line="70" pos:column="39"/></break></block></then>
			<elseif pos:line="71" pos:column="25">else <if pos:line="71" pos:column="30">if <condition pos:line="71" pos:column="33">(<expr><call><name pos:line="71" pos:column="34">isalnum<pos:position pos:line="71" pos:column="41"/></name> <argument_list pos:line="71" pos:column="42">(<argument><expr><name><name pos:line="71" pos:column="43">inst<pos:position pos:line="71" pos:column="47"/></name><index pos:line="71" pos:column="47">[<expr><name pos:line="71" pos:column="48">i<pos:position pos:line="71" pos:column="49"/></name></expr>]<pos:position pos:line="71" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="71" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="71" pos:column="52"/></condition><then pos:line="71" pos:column="52">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="72" pos:column="33">inst<pos:position pos:line="72" pos:column="37"/></name><index pos:line="72" pos:column="37">[<expr><name pos:line="72" pos:column="38">i<pos:position pos:line="72" pos:column="39"/></name></expr>]<pos:position pos:line="72" pos:column="40"/></index></name> <operator pos:line="72" pos:column="41">=<pos:position pos:line="72" pos:column="42"/></operator> <operator pos:line="72" pos:column="43">(<pos:position pos:line="72" pos:column="44"/></operator><name pos:line="72" pos:column="44">char<pos:position pos:line="72" pos:column="48"/></name><operator pos:line="72" pos:column="48">)<pos:position pos:line="72" pos:column="49"/></operator> <call><name pos:line="72" pos:column="50">tolower<pos:position pos:line="72" pos:column="57"/></name> <argument_list pos:line="72" pos:column="58">(<argument><expr><name><name pos:line="72" pos:column="59">inst<pos:position pos:line="72" pos:column="63"/></name><index pos:line="72" pos:column="63">[<expr><name pos:line="72" pos:column="64">i<pos:position pos:line="72" pos:column="65"/></name></expr>]<pos:position pos:line="72" pos:column="66"/></index></name></expr></argument>)<pos:position pos:line="72" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="68"/></expr_stmt></block></then></if></elseif>
			<else pos:line="73" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="74" pos:column="33">inst<pos:position pos:line="74" pos:column="37"/></name><index pos:line="74" pos:column="37">[<expr><name pos:line="74" pos:column="38">i<pos:position pos:line="74" pos:column="39"/></name></expr>]<pos:position pos:line="74" pos:column="40"/></index></name> <operator pos:line="74" pos:column="41">=<pos:position pos:line="74" pos:column="42"/></operator> <literal type="char" pos:line="74" pos:column="43">'_'<pos:position pos:line="74" pos:column="46"/></literal></expr>;<pos:position pos:line="74" pos:column="47"/></expr_stmt></block></else></if>
		}<pos:position pos:line="75" pos:column="18"/></block></for>

		<comment type="block" pos:line="77" pos:column="17">/* Get the actual value. Some computation, based on the `type'
		 * is neccessary. */</comment>
		<expr_stmt><expr><name pos:line="79" pos:column="17">property<pos:position pos:line="79" pos:column="25"/></name> <operator pos:line="79" pos:column="26">=<pos:position pos:line="79" pos:column="27"/></operator> <name pos:line="79" pos:column="28">NULL<pos:position pos:line="79" pos:column="32"/></name></expr>;<pos:position pos:line="79" pos:column="33"/></expr_stmt>
		<if pos:line="80" pos:column="17">if <condition pos:line="80" pos:column="20">(<expr><operator pos:line="80" pos:column="21">!<pos:position pos:line="80" pos:column="22"/></operator><call><name pos:line="80" pos:column="22">CFDictionaryGetValueIfPresent<pos:position pos:line="80" pos:column="51"/></name> <argument_list pos:line="80" pos:column="52">(<argument><expr><name pos:line="80" pos:column="53">prop_dict<pos:position pos:line="80" pos:column="62"/></name></expr></argument>,
					<argument><expr><call><name pos:line="81" pos:column="41">CFSTR<pos:position pos:line="81" pos:column="46"/></name> <argument_list pos:line="81" pos:column="47">(<argument><expr><literal type="string" pos:line="81" pos:column="48">"current-value"<pos:position pos:line="81" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="64"/></argument_list></call></expr></argument>,
					<argument><expr><operator pos:line="82" pos:column="41">&amp;<pos:position pos:line="82" pos:column="46"/></operator><name pos:line="82" pos:column="42">property<pos:position pos:line="82" pos:column="50"/></name></expr></argument>)<pos:position pos:line="82" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="82" pos:column="52"/></condition><then pos:line="82" pos:column="52">
			<block type="pseudo"><continue pos:line="83" pos:column="25">continue;<pos:position pos:line="83" pos:column="34"/></continue></block></then></if>
		<if pos:line="84" pos:column="17">if <condition pos:line="84" pos:column="20">(<expr><call><name pos:line="84" pos:column="21">CFGetTypeID<pos:position pos:line="84" pos:column="32"/></name> <argument_list pos:line="84" pos:column="33">(<argument><expr><name pos:line="84" pos:column="34">property<pos:position pos:line="84" pos:column="42"/></name></expr></argument>)<pos:position pos:line="84" pos:column="43"/></argument_list></call> <operator pos:line="84" pos:column="44">!=<pos:position pos:line="84" pos:column="46"/></operator> <call><name pos:line="84" pos:column="47">CFNumberGetTypeID<pos:position pos:line="84" pos:column="64"/></name> <argument_list pos:line="84" pos:column="65">()<pos:position pos:line="84" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="84" pos:column="68"/></condition><then pos:line="84" pos:column="68">
			<block type="pseudo"><continue pos:line="85" pos:column="25">continue;<pos:position pos:line="85" pos:column="34"/></continue></block></then></if>
		<if pos:line="86" pos:column="17">if <condition pos:line="86" pos:column="20">(<expr><operator pos:line="86" pos:column="21">!<pos:position pos:line="86" pos:column="22"/></operator><call><name pos:line="86" pos:column="22">CFNumberGetValue<pos:position pos:line="86" pos:column="38"/></name> <argument_list pos:line="86" pos:column="39">(<argument><expr><name pos:line="86" pos:column="40">property<pos:position pos:line="86" pos:column="48"/></name></expr></argument>,
				       	<argument><expr><name pos:line="87" pos:column="41">kCFNumberIntType<pos:position pos:line="87" pos:column="57"/></name></expr></argument>,
				       	<argument><expr><operator pos:line="88" pos:column="41">&amp;<pos:position pos:line="88" pos:column="46"/></operator><name pos:line="88" pos:column="42">value_int<pos:position pos:line="88" pos:column="51"/></name></expr></argument>)<pos:position pos:line="88" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="88" pos:column="53"/></condition><then pos:line="88" pos:column="53">
			<block type="pseudo"><continue pos:line="89" pos:column="25">continue;<pos:position pos:line="89" pos:column="34"/></continue></block></then></if>

		<comment type="block" pos:line="91" pos:column="17">/* Found e.g. in the 1.5GHz PowerBooks */</comment>
		<if pos:line="92" pos:column="17">if <condition pos:line="92" pos:column="20">(<expr><call><name pos:line="92" pos:column="21">strcmp<pos:position pos:line="92" pos:column="27"/></name> <argument_list pos:line="92" pos:column="28">(<argument><expr><name pos:line="92" pos:column="29">type<pos:position pos:line="92" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="35">"temperature"<pos:position pos:line="92" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="49"/></argument_list></call> <operator pos:line="92" pos:column="50">==<pos:position pos:line="92" pos:column="52"/></operator> <literal type="number" pos:line="92" pos:column="53">0<pos:position pos:line="92" pos:column="54"/></literal></expr>)<pos:position pos:line="92" pos:column="55"/></condition><then pos:line="92" pos:column="55">
		<block pos:line="93" pos:column="17">{
			<expr_stmt><expr><name pos:line="94" pos:column="25">value_double<pos:position pos:line="94" pos:column="37"/></name> <operator pos:line="94" pos:column="38">=<pos:position pos:line="94" pos:column="39"/></operator> <operator pos:line="94" pos:column="40">(<pos:position pos:line="94" pos:column="41"/></operator><operator pos:line="94" pos:column="41">(<pos:position pos:line="94" pos:column="42"/></operator><name pos:line="94" pos:column="42">double<pos:position pos:line="94" pos:column="48"/></name><operator pos:line="94" pos:column="48">)<pos:position pos:line="94" pos:column="49"/></operator> <name pos:line="94" pos:column="50">value_int<pos:position pos:line="94" pos:column="59"/></name><operator pos:line="94" pos:column="59">)<pos:position pos:line="94" pos:column="60"/></operator> <operator pos:line="94" pos:column="61">/<pos:position pos:line="94" pos:column="62"/></operator> <literal type="number" pos:line="94" pos:column="63">65536.0<pos:position pos:line="94" pos:column="70"/></literal></expr>;<pos:position pos:line="94" pos:column="71"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="95" pos:column="25">sstrncpy<pos:position pos:line="95" pos:column="33"/></name> <argument_list pos:line="95" pos:column="34">(<argument><expr><name pos:line="95" pos:column="35">type<pos:position pos:line="95" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="95" pos:column="41">"temperature"<pos:position pos:line="95" pos:column="54"/></literal></expr></argument>, <argument><expr><sizeof pos:line="95" pos:column="56">sizeof <argument_list pos:line="95" pos:column="63">(<argument><expr><name pos:line="95" pos:column="64">type<pos:position pos:line="95" pos:column="68"/></name></expr></argument>)<pos:position pos:line="95" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="95" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="71"/></expr_stmt>
		}<pos:position pos:line="96" pos:column="18"/></block></then>
		<elseif pos:line="97" pos:column="17">else <if pos:line="97" pos:column="22">if <condition pos:line="97" pos:column="25">(<expr><call><name pos:line="97" pos:column="26">strcmp<pos:position pos:line="97" pos:column="32"/></name> <argument_list pos:line="97" pos:column="33">(<argument><expr><name pos:line="97" pos:column="34">type<pos:position pos:line="97" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="40">"temp"<pos:position pos:line="97" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="47"/></argument_list></call> <operator pos:line="97" pos:column="48">==<pos:position pos:line="97" pos:column="50"/></operator> <literal type="number" pos:line="97" pos:column="51">0<pos:position pos:line="97" pos:column="52"/></literal></expr>)<pos:position pos:line="97" pos:column="53"/></condition><then pos:line="97" pos:column="53">
		<block pos:line="98" pos:column="17">{
			<expr_stmt><expr><name pos:line="99" pos:column="25">value_double<pos:position pos:line="99" pos:column="37"/></name> <operator pos:line="99" pos:column="38">=<pos:position pos:line="99" pos:column="39"/></operator> <operator pos:line="99" pos:column="40">(<pos:position pos:line="99" pos:column="41"/></operator><operator pos:line="99" pos:column="41">(<pos:position pos:line="99" pos:column="42"/></operator><name pos:line="99" pos:column="42">double<pos:position pos:line="99" pos:column="48"/></name><operator pos:line="99" pos:column="48">)<pos:position pos:line="99" pos:column="49"/></operator> <name pos:line="99" pos:column="50">value_int<pos:position pos:line="99" pos:column="59"/></name><operator pos:line="99" pos:column="59">)<pos:position pos:line="99" pos:column="60"/></operator> <operator pos:line="99" pos:column="61">/<pos:position pos:line="99" pos:column="62"/></operator> <literal type="number" pos:line="99" pos:column="63">10.0<pos:position pos:line="99" pos:column="67"/></literal></expr>;<pos:position pos:line="99" pos:column="68"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="100" pos:column="25">sstrncpy<pos:position pos:line="100" pos:column="33"/></name> <argument_list pos:line="100" pos:column="34">(<argument><expr><name pos:line="100" pos:column="35">type<pos:position pos:line="100" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="100" pos:column="41">"temperature"<pos:position pos:line="100" pos:column="54"/></literal></expr></argument>, <argument><expr><sizeof pos:line="100" pos:column="56">sizeof <argument_list pos:line="100" pos:column="63">(<argument><expr><name pos:line="100" pos:column="64">type<pos:position pos:line="100" pos:column="68"/></name></expr></argument>)<pos:position pos:line="100" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="100" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="71"/></expr_stmt>
		}<pos:position pos:line="101" pos:column="18"/></block></then></if></elseif>
		<elseif pos:line="102" pos:column="17">else <if pos:line="102" pos:column="22">if <condition pos:line="102" pos:column="25">(<expr><call><name pos:line="102" pos:column="26">strcmp<pos:position pos:line="102" pos:column="32"/></name> <argument_list pos:line="102" pos:column="33">(<argument><expr><name pos:line="102" pos:column="34">type<pos:position pos:line="102" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="40">"fanspeed"<pos:position pos:line="102" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="51"/></argument_list></call> <operator pos:line="102" pos:column="52">==<pos:position pos:line="102" pos:column="54"/></operator> <literal type="number" pos:line="102" pos:column="55">0<pos:position pos:line="102" pos:column="56"/></literal></expr>)<pos:position pos:line="102" pos:column="57"/></condition><then pos:line="102" pos:column="57">
		<block pos:line="103" pos:column="17">{
			<expr_stmt><expr><name pos:line="104" pos:column="25">value_double<pos:position pos:line="104" pos:column="37"/></name> <operator pos:line="104" pos:column="38">=<pos:position pos:line="104" pos:column="39"/></operator> <operator pos:line="104" pos:column="40">(<pos:position pos:line="104" pos:column="41"/></operator><operator pos:line="104" pos:column="41">(<pos:position pos:line="104" pos:column="42"/></operator><name pos:line="104" pos:column="42">double<pos:position pos:line="104" pos:column="48"/></name><operator pos:line="104" pos:column="48">)<pos:position pos:line="104" pos:column="49"/></operator> <name pos:line="104" pos:column="50">value_int<pos:position pos:line="104" pos:column="59"/></name><operator pos:line="104" pos:column="59">)<pos:position pos:line="104" pos:column="60"/></operator> <operator pos:line="104" pos:column="61">/<pos:position pos:line="104" pos:column="62"/></operator> <literal type="number" pos:line="104" pos:column="63">65536.0<pos:position pos:line="104" pos:column="70"/></literal></expr>;<pos:position pos:line="104" pos:column="71"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="105" pos:column="25">sstrncpy<pos:position pos:line="105" pos:column="33"/></name> <argument_list pos:line="105" pos:column="34">(<argument><expr><name pos:line="105" pos:column="35">type<pos:position pos:line="105" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="105" pos:column="41">"fanspeed"<pos:position pos:line="105" pos:column="51"/></literal></expr></argument>, <argument><expr><sizeof pos:line="105" pos:column="53">sizeof <argument_list pos:line="105" pos:column="60">(<argument><expr><name pos:line="105" pos:column="61">type<pos:position pos:line="105" pos:column="65"/></name></expr></argument>)<pos:position pos:line="105" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="105" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="68"/></expr_stmt>
		}<pos:position pos:line="106" pos:column="18"/></block></then></if></elseif>
		<elseif pos:line="107" pos:column="17">else <if pos:line="107" pos:column="22">if <condition pos:line="107" pos:column="25">(<expr><call><name pos:line="107" pos:column="26">strcmp<pos:position pos:line="107" pos:column="32"/></name> <argument_list pos:line="107" pos:column="33">(<argument><expr><name pos:line="107" pos:column="34">type<pos:position pos:line="107" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="40">"voltage"<pos:position pos:line="107" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="50"/></argument_list></call> <operator pos:line="107" pos:column="51">==<pos:position pos:line="107" pos:column="53"/></operator> <literal type="number" pos:line="107" pos:column="54">0<pos:position pos:line="107" pos:column="55"/></literal></expr>)<pos:position pos:line="107" pos:column="56"/></condition><then pos:line="107" pos:column="56">
		<block pos:line="108" pos:column="17">{
			<comment type="block" pos:line="109" pos:column="25">/* Leave this to the battery plugin. */</comment>
			<continue pos:line="110" pos:column="25">continue;<pos:position pos:line="110" pos:column="34"/></continue>
		}<pos:position pos:line="111" pos:column="18"/></block></then></if></elseif>
		<elseif pos:line="112" pos:column="17">else <if pos:line="112" pos:column="22">if <condition pos:line="112" pos:column="25">(<expr><call><name pos:line="112" pos:column="26">strcmp<pos:position pos:line="112" pos:column="32"/></name> <argument_list pos:line="112" pos:column="33">(<argument><expr><name pos:line="112" pos:column="34">type<pos:position pos:line="112" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="112" pos:column="40">"adc"<pos:position pos:line="112" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="112" pos:column="46"/></argument_list></call> <operator pos:line="112" pos:column="47">==<pos:position pos:line="112" pos:column="49"/></operator> <literal type="number" pos:line="112" pos:column="50">0<pos:position pos:line="112" pos:column="51"/></literal></expr>)<pos:position pos:line="112" pos:column="52"/></condition><then pos:line="112" pos:column="52">
		<block pos:line="113" pos:column="17">{
			<expr_stmt><expr><name pos:line="114" pos:column="25">value_double<pos:position pos:line="114" pos:column="37"/></name> <operator pos:line="114" pos:column="38">=<pos:position pos:line="114" pos:column="39"/></operator> <operator pos:line="114" pos:column="40">(<pos:position pos:line="114" pos:column="41"/></operator><operator pos:line="114" pos:column="41">(<pos:position pos:line="114" pos:column="42"/></operator><name pos:line="114" pos:column="42">double<pos:position pos:line="114" pos:column="48"/></name><operator pos:line="114" pos:column="48">)<pos:position pos:line="114" pos:column="49"/></operator> <name pos:line="114" pos:column="50">value_int<pos:position pos:line="114" pos:column="59"/></name><operator pos:line="114" pos:column="59">)<pos:position pos:line="114" pos:column="60"/></operator> <operator pos:line="114" pos:column="61">/<pos:position pos:line="114" pos:column="62"/></operator> <literal type="number" pos:line="114" pos:column="63">10.0<pos:position pos:line="114" pos:column="67"/></literal></expr>;<pos:position pos:line="114" pos:column="68"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="115" pos:column="25">sstrncpy<pos:position pos:line="115" pos:column="33"/></name> <argument_list pos:line="115" pos:column="34">(<argument><expr><name pos:line="115" pos:column="35">type<pos:position pos:line="115" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="115" pos:column="41">"fanspeed"<pos:position pos:line="115" pos:column="51"/></literal></expr></argument>, <argument><expr><sizeof pos:line="115" pos:column="53">sizeof <argument_list pos:line="115" pos:column="60">(<argument><expr><name pos:line="115" pos:column="61">type<pos:position pos:line="115" pos:column="65"/></name></expr></argument>)<pos:position pos:line="115" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="115" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="68"/></expr_stmt>
		}<pos:position pos:line="116" pos:column="18"/></block></then></if></elseif>
		<else pos:line="117" pos:column="17">else
		<block pos:line="118" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="119" pos:column="25">DEBUG<pos:position pos:line="119" pos:column="30"/></name> <argument_list pos:line="119" pos:column="31">(<argument><expr><literal type="string" pos:line="119" pos:column="32">"apple_sensors: Read unknown sensor type: %s"<pos:position pos:line="119" pos:column="77"/></literal></expr></argument>,
					<argument><expr><name pos:line="120" pos:column="41">type<pos:position pos:line="120" pos:column="45"/></name></expr></argument>)<pos:position pos:line="120" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="47"/></expr_stmt>
			<expr_stmt><expr><name pos:line="121" pos:column="25">value_double<pos:position pos:line="121" pos:column="37"/></name> <operator pos:line="121" pos:column="38">=<pos:position pos:line="121" pos:column="39"/></operator> <operator pos:line="121" pos:column="40">(<pos:position pos:line="121" pos:column="41"/></operator><name pos:line="121" pos:column="41">double<pos:position pos:line="121" pos:column="47"/></name><operator pos:line="121" pos:column="47">)<pos:position pos:line="121" pos:column="48"/></operator> <name pos:line="121" pos:column="49">value_int<pos:position pos:line="121" pos:column="58"/></name></expr>;<pos:position pos:line="121" pos:column="59"/></expr_stmt>
		}<pos:position pos:line="122" pos:column="18"/></block></else></if>

		<expr_stmt><expr><call><name pos:line="124" pos:column="17">as_submit<pos:position pos:line="124" pos:column="26"/></name> <argument_list pos:line="124" pos:column="27">(<argument><expr><name pos:line="124" pos:column="28">type<pos:position pos:line="124" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="34">inst<pos:position pos:line="124" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="40">value_double<pos:position pos:line="124" pos:column="52"/></name></expr></argument>)<pos:position pos:line="124" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="54"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="126" pos:column="17">CFRelease<pos:position pos:line="126" pos:column="26"/></name> <argument_list pos:line="126" pos:column="27">(<argument><expr><name pos:line="126" pos:column="28">prop_dict<pos:position pos:line="126" pos:column="37"/></name></expr></argument>)<pos:position pos:line="126" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="127" pos:column="17">IOObjectRelease<pos:position pos:line="127" pos:column="32"/></name> <argument_list pos:line="127" pos:column="33">(<argument><expr><name pos:line="127" pos:column="34">io_obj<pos:position pos:line="127" pos:column="40"/></name></expr></argument>)<pos:position pos:line="127" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="128" pos:column="10"/></block></while> <comment type="block" pos:line="128" pos:column="11">/* while (iterator) */</comment>

	<expr_stmt><expr><call><name pos:line="130" pos:column="9">IOObjectRelease<pos:position pos:line="130" pos:column="24"/></name> <argument_list pos:line="130" pos:column="25">(<argument><expr><name pos:line="130" pos:column="26">iterator<pos:position pos:line="130" pos:column="34"/></name></expr></argument>)<pos:position pos:line="130" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="36"/></expr_stmt>

	<return pos:line="132" pos:column="9">return <expr><operator pos:line="132" pos:column="16">(<pos:position pos:line="132" pos:column="17"/></operator><literal type="number" pos:line="132" pos:column="17">0<pos:position pos:line="132" pos:column="18"/></literal><operator pos:line="132" pos:column="18">)<pos:position pos:line="132" pos:column="19"/></operator></expr>;<pos:position pos:line="132" pos:column="20"/></return>
}<pos:position pos:line="133" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1578_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">md_process<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">int<pos:position pos:line="1" pos:column="34"/></name></type> <name pos:line="1" pos:column="35">minor<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier> <name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">path<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">errbuf<pos:position pos:line="3" pos:column="14"/></name><index pos:line="3" pos:column="14">[<expr><literal type="number" pos:line="3" pos:column="15">1024<pos:position pos:line="3" pos:column="19"/></literal></expr>]<pos:position pos:line="3" pos:column="20"/></index></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">fd<pos:position pos:line="4" pos:column="9"/></name></decl>;<pos:position pos:line="4" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">stat<pos:position pos:line="5" pos:column="14"/></name></name></type> <name pos:line="5" pos:column="15">st<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">mdu_array_info_t<pos:position pos:line="6" pos:column="19"/></name></type> <name pos:line="6" pos:column="20">array<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">gauge_t<pos:position pos:line="7" pos:column="10"/></name></type> <name pos:line="7" pos:column="11">disks_missing<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>

  <expr_stmt><expr><name pos:line="9" pos:column="3">fd<pos:position pos:line="9" pos:column="5"/></name> <operator pos:line="9" pos:column="6">=<pos:position pos:line="9" pos:column="7"/></operator> <call><name pos:line="9" pos:column="8">open<pos:position pos:line="9" pos:column="12"/></name> <argument_list pos:line="9" pos:column="13">(<argument><expr><name pos:line="9" pos:column="14">path<pos:position pos:line="9" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="20">O_RDONLY<pos:position pos:line="9" pos:column="28"/></name></expr></argument>)<pos:position pos:line="9" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="30"/></expr_stmt>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">fd<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">&lt;<pos:position pos:line="10" pos:column="14"/></operator> <literal type="number" pos:line="10" pos:column="12">0<pos:position pos:line="10" pos:column="13"/></literal></expr>)<pos:position pos:line="10" pos:column="14"/></condition><then pos:line="10" pos:column="14">
  <block pos:line="11" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">WARNING<pos:position pos:line="12" pos:column="12"/></name> <argument_list pos:line="12" pos:column="13">(<argument><expr><literal type="string" pos:line="12" pos:column="14">"md: open(%s): %s"<pos:position pos:line="12" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="34">path<pos:position pos:line="12" pos:column="38"/></name></expr></argument>,
        <argument><expr><call><name pos:line="13" pos:column="9">sstrerror<pos:position pos:line="13" pos:column="18"/></name> <argument_list pos:line="13" pos:column="19">(<argument><expr><name pos:line="13" pos:column="20">errno<pos:position pos:line="13" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="27">errbuf<pos:position pos:line="13" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="35">sizeof <argument_list pos:line="13" pos:column="42">(<argument><expr><name pos:line="13" pos:column="43">errbuf<pos:position pos:line="13" pos:column="49"/></name></expr></argument>)<pos:position pos:line="13" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="53"/></expr_stmt>
    <return pos:line="14" pos:column="5">return;<pos:position pos:line="14" pos:column="12"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><call><name pos:line="17" pos:column="7">fstat<pos:position pos:line="17" pos:column="12"/></name> <argument_list pos:line="17" pos:column="13">(<argument><expr><name pos:line="17" pos:column="14">fd<pos:position pos:line="17" pos:column="16"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="18">&amp;<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="19">st<pos:position pos:line="17" pos:column="21"/></name></expr></argument>)<pos:position pos:line="17" pos:column="22"/></argument_list></call> <operator pos:line="17" pos:column="23">&lt;<pos:position pos:line="17" pos:column="27"/></operator> <literal type="number" pos:line="17" pos:column="25">0<pos:position pos:line="17" pos:column="26"/></literal></expr>)<pos:position pos:line="17" pos:column="27"/></condition><then pos:line="17" pos:column="27">
  <block pos:line="18" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">WARNING<pos:position pos:line="19" pos:column="12"/></name> <argument_list pos:line="19" pos:column="13">(<argument><expr><literal type="string" pos:line="19" pos:column="14">"md: Unable to fstat file descriptor for %s: %s"<pos:position pos:line="19" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="64">path<pos:position pos:line="19" pos:column="68"/></name></expr></argument>,
        <argument><expr><call><name pos:line="20" pos:column="9">sstrerror<pos:position pos:line="20" pos:column="18"/></name> <argument_list pos:line="20" pos:column="19">(<argument><expr><name pos:line="20" pos:column="20">errno<pos:position pos:line="20" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="27">errbuf<pos:position pos:line="20" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="35">sizeof <argument_list pos:line="20" pos:column="42">(<argument><expr><name pos:line="20" pos:column="43">errbuf<pos:position pos:line="20" pos:column="49"/></name></expr></argument>)<pos:position pos:line="20" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">close<pos:position pos:line="21" pos:column="10"/></name> <argument_list pos:line="21" pos:column="11">(<argument><expr><name pos:line="21" pos:column="12">fd<pos:position pos:line="21" pos:column="14"/></name></expr></argument>)<pos:position pos:line="21" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="16"/></expr_stmt>
    <return pos:line="22" pos:column="5">return;<pos:position pos:line="22" pos:column="12"/></return>
  }<pos:position pos:line="23" pos:column="4"/></block></then></if>

  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><operator pos:line="25" pos:column="7">!<pos:position pos:line="25" pos:column="8"/></operator> <call><name pos:line="25" pos:column="9">S_ISBLK<pos:position pos:line="25" pos:column="16"/></name> <argument_list pos:line="25" pos:column="17">(<argument><expr><name><name pos:line="25" pos:column="18">st<pos:position pos:line="25" pos:column="20"/></name><operator pos:line="25" pos:column="20">.<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="21">st_mode<pos:position pos:line="25" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="30"/></condition><then pos:line="25" pos:column="30">
  <block pos:line="26" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">WARNING<pos:position pos:line="27" pos:column="12"/></name> <argument_list pos:line="27" pos:column="13">(<argument><expr><literal type="string" pos:line="27" pos:column="14">"md: %s is no block device"<pos:position pos:line="27" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="43">path<pos:position pos:line="27" pos:column="47"/></name></expr></argument>)<pos:position pos:line="27" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">close<pos:position pos:line="28" pos:column="10"/></name> <argument_list pos:line="28" pos:column="11">(<argument><expr><name pos:line="28" pos:column="12">fd<pos:position pos:line="28" pos:column="14"/></name></expr></argument>)<pos:position pos:line="28" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="16"/></expr_stmt>
    <return pos:line="29" pos:column="5">return;<pos:position pos:line="29" pos:column="12"/></return>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>

  <if pos:line="32" pos:column="3">if <condition pos:line="32" pos:column="6">(<expr><name><name pos:line="32" pos:column="7">st<pos:position pos:line="32" pos:column="9"/></name><operator pos:line="32" pos:column="9">.<pos:position pos:line="32" pos:column="10"/></operator><name pos:line="32" pos:column="10">st_rdev<pos:position pos:line="32" pos:column="17"/></name></name> <operator pos:line="32" pos:column="18">!=<pos:position pos:line="32" pos:column="20"/></operator> <call><name pos:line="32" pos:column="21">makedev<pos:position pos:line="32" pos:column="28"/></name> <argument_list pos:line="32" pos:column="29">(<argument><expr><name pos:line="32" pos:column="30">MD_MAJOR<pos:position pos:line="32" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="40">minor<pos:position pos:line="32" pos:column="45"/></name></expr></argument>)<pos:position pos:line="32" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="47"/></condition><then pos:line="32" pos:column="47">
  <block pos:line="33" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">WARNING<pos:position pos:line="34" pos:column="12"/></name> <argument_list pos:line="34" pos:column="13">(<argument><expr><literal type="string" pos:line="34" pos:column="14">"md: Major/minor of %s are %i:%i, should be %i:%i"<pos:position pos:line="34" pos:column="64"/></literal></expr></argument>,
        <argument><expr><name pos:line="35" pos:column="9">path<pos:position pos:line="35" pos:column="13"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="15">(<pos:position pos:line="35" pos:column="16"/></operator><name pos:line="35" pos:column="16">int<pos:position pos:line="35" pos:column="19"/></name><operator pos:line="35" pos:column="19">)<pos:position pos:line="35" pos:column="20"/></operator><call><name pos:line="35" pos:column="20">major<pos:position pos:line="35" pos:column="25"/></name><argument_list pos:line="35" pos:column="25">(<argument><expr><name><name pos:line="35" pos:column="26">st<pos:position pos:line="35" pos:column="28"/></name><operator pos:line="35" pos:column="28">.<pos:position pos:line="35" pos:column="29"/></operator><name pos:line="35" pos:column="29">st_rdev<pos:position pos:line="35" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="37"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="35" pos:column="39">(<pos:position pos:line="35" pos:column="40"/></operator><name pos:line="35" pos:column="40">int<pos:position pos:line="35" pos:column="43"/></name><operator pos:line="35" pos:column="43">)<pos:position pos:line="35" pos:column="44"/></operator><call><name pos:line="35" pos:column="44">minor<pos:position pos:line="35" pos:column="49"/></name><argument_list pos:line="35" pos:column="49">(<argument><expr><name><name pos:line="35" pos:column="50">st<pos:position pos:line="35" pos:column="52"/></name><operator pos:line="35" pos:column="52">.<pos:position pos:line="35" pos:column="53"/></operator><name pos:line="35" pos:column="53">st_rdev<pos:position pos:line="35" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="61"/></argument_list></call></expr></argument>,
        <argument><expr><operator pos:line="36" pos:column="9">(<pos:position pos:line="36" pos:column="10"/></operator><name pos:line="36" pos:column="10">int<pos:position pos:line="36" pos:column="13"/></name><operator pos:line="36" pos:column="13">)<pos:position pos:line="36" pos:column="14"/></operator><name pos:line="36" pos:column="14">MD_MAJOR<pos:position pos:line="36" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="24">minor<pos:position pos:line="36" pos:column="29"/></name></expr></argument>)<pos:position pos:line="36" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">close<pos:position pos:line="37" pos:column="10"/></name> <argument_list pos:line="37" pos:column="11">(<argument><expr><name pos:line="37" pos:column="12">fd<pos:position pos:line="37" pos:column="14"/></name></expr></argument>)<pos:position pos:line="37" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="16"/></expr_stmt>
    <return pos:line="38" pos:column="5">return;<pos:position pos:line="38" pos:column="12"/></return>
  }<pos:position pos:line="39" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="41" pos:column="3">/* Retrieve md information */</comment>
  <if pos:line="42" pos:column="3">if <condition pos:line="42" pos:column="6">(<expr><call><name pos:line="42" pos:column="7">ioctl<pos:position pos:line="42" pos:column="12"/></name> <argument_list pos:line="42" pos:column="13">(<argument><expr><name pos:line="42" pos:column="14">fd<pos:position pos:line="42" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="18">GET_ARRAY_INFO<pos:position pos:line="42" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="34">&amp;<pos:position pos:line="42" pos:column="39"/></operator><name pos:line="42" pos:column="35">array<pos:position pos:line="42" pos:column="40"/></name></expr></argument>)<pos:position pos:line="42" pos:column="41"/></argument_list></call> <operator pos:line="42" pos:column="42">&lt;<pos:position pos:line="42" pos:column="46"/></operator> <literal type="number" pos:line="42" pos:column="44">0<pos:position pos:line="42" pos:column="45"/></literal></expr>)<pos:position pos:line="42" pos:column="46"/></condition><then pos:line="42" pos:column="46"> <block pos:line="42" pos:column="47">{
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">WARNING<pos:position pos:line="43" pos:column="12"/></name> <argument_list pos:line="43" pos:column="13">(<argument><expr><literal type="string" pos:line="43" pos:column="14">"md: Unable to retrieve array info from %s: %s"<pos:position pos:line="43" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="63">path<pos:position pos:line="43" pos:column="67"/></name></expr></argument>,
        <argument><expr><call><name pos:line="44" pos:column="9">sstrerror<pos:position pos:line="44" pos:column="18"/></name> <argument_list pos:line="44" pos:column="19">(<argument><expr><name pos:line="44" pos:column="20">errno<pos:position pos:line="44" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="27">errbuf<pos:position pos:line="44" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="35">sizeof <argument_list pos:line="44" pos:column="42">(<argument><expr><name pos:line="44" pos:column="43">errbuf<pos:position pos:line="44" pos:column="49"/></name></expr></argument>)<pos:position pos:line="44" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="44" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">close<pos:position pos:line="45" pos:column="10"/></name> <argument_list pos:line="45" pos:column="11">(<argument><expr><name pos:line="45" pos:column="12">fd<pos:position pos:line="45" pos:column="14"/></name></expr></argument>)<pos:position pos:line="45" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="16"/></expr_stmt>
    <return pos:line="46" pos:column="5">return;<pos:position pos:line="46" pos:column="12"/></return>
  }<pos:position pos:line="47" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="49" pos:column="3">close<pos:position pos:line="49" pos:column="8"/></name> <argument_list pos:line="49" pos:column="9">(<argument><expr><name pos:line="49" pos:column="10">fd<pos:position pos:line="49" pos:column="12"/></name></expr></argument>)<pos:position pos:line="49" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="14"/></expr_stmt>

  <comment type="block" pos:line="51" pos:column="3">/*
   * The mdu_array_info_t structure contains numbers of disks in the array.
   * However, disks are accounted for more than once:
   *
   * active:  Number of active (in sync) disks.
   * spare:   Number of stand-by disks.
   * working: Number of working disks. (active + sync)
   * failed:  Number of failed disks.
   * nr:      Number of physically present disks. (working + failed)
   * raid:    Number of disks in the RAID. This may be larger than "nr" if
   *          disks are missing and smaller than "nr" when spare disks are
   *          around.
   */</comment>
  <expr_stmt><expr><call><name pos:line="64" pos:column="3">md_submit<pos:position pos:line="64" pos:column="12"/></name> <argument_list pos:line="64" pos:column="13">(<argument><expr><name pos:line="64" pos:column="14">minor<pos:position pos:line="64" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="21">"active"<pos:position pos:line="64" pos:column="29"/></literal></expr></argument>,  <argument><expr><operator pos:line="64" pos:column="32">(<pos:position pos:line="64" pos:column="33"/></operator><name pos:line="64" pos:column="33">gauge_t<pos:position pos:line="64" pos:column="40"/></name><operator pos:line="64" pos:column="40">)<pos:position pos:line="64" pos:column="41"/></operator> <name><name pos:line="64" pos:column="42">array<pos:position pos:line="64" pos:column="47"/></name><operator pos:line="64" pos:column="47">.<pos:position pos:line="64" pos:column="48"/></operator><name pos:line="64" pos:column="48">active_disks<pos:position pos:line="64" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="62"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="65" pos:column="3">md_submit<pos:position pos:line="65" pos:column="12"/></name> <argument_list pos:line="65" pos:column="13">(<argument><expr><name pos:line="65" pos:column="14">minor<pos:position pos:line="65" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="21">"failed"<pos:position pos:line="65" pos:column="29"/></literal></expr></argument>,  <argument><expr><operator pos:line="65" pos:column="32">(<pos:position pos:line="65" pos:column="33"/></operator><name pos:line="65" pos:column="33">gauge_t<pos:position pos:line="65" pos:column="40"/></name><operator pos:line="65" pos:column="40">)<pos:position pos:line="65" pos:column="41"/></operator> <name><name pos:line="65" pos:column="42">array<pos:position pos:line="65" pos:column="47"/></name><operator pos:line="65" pos:column="47">.<pos:position pos:line="65" pos:column="48"/></operator><name pos:line="65" pos:column="48">failed_disks<pos:position pos:line="65" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="62"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="66" pos:column="3">md_submit<pos:position pos:line="66" pos:column="12"/></name> <argument_list pos:line="66" pos:column="13">(<argument><expr><name pos:line="66" pos:column="14">minor<pos:position pos:line="66" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="21">"spare"<pos:position pos:line="66" pos:column="28"/></literal></expr></argument>,   <argument><expr><operator pos:line="66" pos:column="32">(<pos:position pos:line="66" pos:column="33"/></operator><name pos:line="66" pos:column="33">gauge_t<pos:position pos:line="66" pos:column="40"/></name><operator pos:line="66" pos:column="40">)<pos:position pos:line="66" pos:column="41"/></operator> <name><name pos:line="66" pos:column="42">array<pos:position pos:line="66" pos:column="47"/></name><operator pos:line="66" pos:column="47">.<pos:position pos:line="66" pos:column="48"/></operator><name pos:line="66" pos:column="48">spare_disks<pos:position pos:line="66" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="61"/></expr_stmt>

  <expr_stmt><expr><name pos:line="68" pos:column="3">disks_missing<pos:position pos:line="68" pos:column="16"/></name> <operator pos:line="68" pos:column="17">=<pos:position pos:line="68" pos:column="18"/></operator> <literal type="number" pos:line="68" pos:column="19">0.0<pos:position pos:line="68" pos:column="22"/></literal></expr>;<pos:position pos:line="68" pos:column="23"/></expr_stmt>
  <if pos:line="69" pos:column="3">if <condition pos:line="69" pos:column="6">(<expr><name><name pos:line="69" pos:column="7">array<pos:position pos:line="69" pos:column="12"/></name><operator pos:line="69" pos:column="12">.<pos:position pos:line="69" pos:column="13"/></operator><name pos:line="69" pos:column="13">raid_disks<pos:position pos:line="69" pos:column="23"/></name></name> <operator pos:line="69" pos:column="24">&gt;<pos:position pos:line="69" pos:column="28"/></operator> <name><name pos:line="69" pos:column="26">array<pos:position pos:line="69" pos:column="31"/></name><operator pos:line="69" pos:column="31">.<pos:position pos:line="69" pos:column="32"/></operator><name pos:line="69" pos:column="32">nr_disks<pos:position pos:line="69" pos:column="40"/></name></name></expr>)<pos:position pos:line="69" pos:column="41"/></condition><then pos:line="69" pos:column="41">
    <block type="pseudo"><expr_stmt><expr><name pos:line="70" pos:column="5">disks_missing<pos:position pos:line="70" pos:column="18"/></name> <operator pos:line="70" pos:column="19">=<pos:position pos:line="70" pos:column="20"/></operator> <call pos:line="70" pos:column="21">(<name pos:line="70" pos:column="22">gauge_t<pos:position pos:line="70" pos:column="29"/></name>) <argument_list pos:line="70" pos:column="31">(<argument><expr><name><name pos:line="70" pos:column="32">array<pos:position pos:line="70" pos:column="37"/></name><operator pos:line="70" pos:column="37">.<pos:position pos:line="70" pos:column="38"/></operator><name pos:line="70" pos:column="38">raid_disks<pos:position pos:line="70" pos:column="48"/></name></name> <operator pos:line="70" pos:column="49">-<pos:position pos:line="70" pos:column="50"/></operator> <name><name pos:line="70" pos:column="51">array<pos:position pos:line="70" pos:column="56"/></name><operator pos:line="70" pos:column="56">.<pos:position pos:line="70" pos:column="57"/></operator><name pos:line="70" pos:column="57">nr_disks<pos:position pos:line="70" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="67"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="71" pos:column="3">md_submit<pos:position pos:line="71" pos:column="12"/></name> <argument_list pos:line="71" pos:column="13">(<argument><expr><name pos:line="71" pos:column="14">minor<pos:position pos:line="71" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="21">"missing"<pos:position pos:line="71" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="32">disks_missing<pos:position pos:line="71" pos:column="45"/></name></expr></argument>)<pos:position pos:line="71" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="47"/></expr_stmt>
}<pos:position pos:line="72" pos:column="2"/></block></function></unit>

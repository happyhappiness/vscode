<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_293_collectd-5.0.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">thermal_init<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">void<pos:position pos:line="1" pos:column="30"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="31"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">ret<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><operator pos:line="3" pos:column="19">-<pos:position pos:line="3" pos:column="20"/></operator><literal type="number" pos:line="3" pos:column="20">1<pos:position pos:line="3" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">force_procfs<pos:position pos:line="5" pos:column="26"/></name> <operator pos:line="5" pos:column="27">&amp;&amp;<pos:position pos:line="5" pos:column="37"/></operator> <call><name pos:line="5" pos:column="30">access<pos:position pos:line="5" pos:column="36"/></name> <argument_list pos:line="5" pos:column="37">(<argument><expr><name pos:line="5" pos:column="38">dirname_sysfs<pos:position pos:line="5" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="53">R_OK<pos:position pos:line="5" pos:column="57"/></name> <operator pos:line="5" pos:column="58">|<pos:position pos:line="5" pos:column="59"/></operator> <name pos:line="5" pos:column="60">X_OK<pos:position pos:line="5" pos:column="64"/></name></expr></argument>)<pos:position pos:line="5" pos:column="65"/></argument_list></call> <operator pos:line="5" pos:column="66">==<pos:position pos:line="5" pos:column="68"/></operator> <literal type="number" pos:line="5" pos:column="69">0<pos:position pos:line="5" pos:column="70"/></literal></expr>)<pos:position pos:line="5" pos:column="71"/></condition><then pos:line="5" pos:column="71"> <block pos:line="5" pos:column="72">{
		<expr_stmt><expr><name pos:line="6" pos:column="17">ret<pos:position pos:line="6" pos:column="20"/></name> <operator pos:line="6" pos:column="21">=<pos:position pos:line="6" pos:column="22"/></operator> <call><name pos:line="6" pos:column="23">plugin_register_read<pos:position pos:line="6" pos:column="43"/></name> <argument_list pos:line="6" pos:column="44">(<argument><expr><literal type="string" pos:line="6" pos:column="45">"thermal"<pos:position pos:line="6" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="56">thermal_sysfs_read<pos:position pos:line="6" pos:column="74"/></name></expr></argument>)<pos:position pos:line="6" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="76"/></expr_stmt>
	}<pos:position pos:line="7" pos:column="10"/></block></then> <elseif pos:line="7" pos:column="11">else <if pos:line="7" pos:column="16">if <condition pos:line="7" pos:column="19">(<expr><call><name pos:line="7" pos:column="20">access<pos:position pos:line="7" pos:column="26"/></name> <argument_list pos:line="7" pos:column="27">(<argument><expr><name pos:line="7" pos:column="28">dirname_procfs<pos:position pos:line="7" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="44">R_OK<pos:position pos:line="7" pos:column="48"/></name> <operator pos:line="7" pos:column="49">|<pos:position pos:line="7" pos:column="50"/></operator> <name pos:line="7" pos:column="51">X_OK<pos:position pos:line="7" pos:column="55"/></name></expr></argument>)<pos:position pos:line="7" pos:column="56"/></argument_list></call> <operator pos:line="7" pos:column="57">==<pos:position pos:line="7" pos:column="59"/></operator> <literal type="number" pos:line="7" pos:column="60">0<pos:position pos:line="7" pos:column="61"/></literal></expr>)<pos:position pos:line="7" pos:column="62"/></condition><then pos:line="7" pos:column="62"> <block pos:line="7" pos:column="63">{
		<expr_stmt><expr><name pos:line="8" pos:column="17">ret<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">=<pos:position pos:line="8" pos:column="22"/></operator> <call><name pos:line="8" pos:column="23">plugin_register_read<pos:position pos:line="8" pos:column="43"/></name> <argument_list pos:line="8" pos:column="44">(<argument><expr><literal type="string" pos:line="8" pos:column="45">"thermal"<pos:position pos:line="8" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="56">thermal_procfs_read<pos:position pos:line="8" pos:column="75"/></name></expr></argument>)<pos:position pos:line="8" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="77"/></expr_stmt>
	}<pos:position pos:line="9" pos:column="10"/></block></then></if></elseif></if>

	<return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">ret<pos:position pos:line="11" pos:column="19"/></name></expr>;<pos:position pos:line="11" pos:column="20"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

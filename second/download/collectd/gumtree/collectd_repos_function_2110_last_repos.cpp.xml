<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2110_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">host_free<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">void<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">void_host<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="39"/></parameter_list> <comment type="block" pos:line="1" pos:column="40">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">mb_host_t<pos:position pos:line="3" pos:column="12"/></name> <modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier></type><name pos:line="3" pos:column="14">host<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">void_host<pos:position pos:line="3" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">host<pos:position pos:line="5" pos:column="11"/></name> <operator pos:line="5" pos:column="12">==<pos:position pos:line="5" pos:column="14"/></operator> <name pos:line="5" pos:column="15">NULL<pos:position pos:line="5" pos:column="19"/></name></expr>)<pos:position pos:line="5" pos:column="20"/></condition><then pos:line="5" pos:column="20">
    <block type="pseudo"><return pos:line="6" pos:column="5">return;<pos:position pos:line="6" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">slaves_free_all<pos:position pos:line="8" pos:column="18"/></name><argument_list pos:line="8" pos:column="18">(<argument><expr><name><name pos:line="8" pos:column="19">host<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">-&gt;<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="25">slaves<pos:position pos:line="8" pos:column="31"/></name></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="33">host<pos:position pos:line="8" pos:column="37"/></name><operator pos:line="8" pos:column="37">-&gt;<pos:position pos:line="8" pos:column="42"/></operator><name pos:line="8" pos:column="39">slaves_num<pos:position pos:line="8" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="51"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">sfree<pos:position pos:line="9" pos:column="8"/></name><argument_list pos:line="9" pos:column="8">(<argument><expr><name pos:line="9" pos:column="9">host<pos:position pos:line="9" pos:column="13"/></name></expr></argument>)<pos:position pos:line="9" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="15"/></expr_stmt>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

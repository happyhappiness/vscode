<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_236_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">set_environment<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">void<pos:position pos:line="1" pos:column="33"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="34"/></parameter_list> <comment type="block" pos:line="1" pos:column="35">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">buffer<pos:position pos:line="3" pos:column="14"/></name><index pos:line="3" pos:column="14">[<expr><literal type="number" pos:line="3" pos:column="15">1024<pos:position pos:line="3" pos:column="19"/></literal></expr>]<pos:position pos:line="3" pos:column="20"/></index></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>

<cpp:ifdef pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">ifdef<pos:position pos:line="5" pos:column="7"/></cpp:directive> <name pos:line="5" pos:column="8">HAVE_SETENV<pos:position pos:line="5" pos:column="19"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="6" pos:column="3">ssnprintf<pos:position pos:line="6" pos:column="12"/></name><argument_list pos:line="6" pos:column="12">(<argument><expr><name pos:line="6" pos:column="13">buffer<pos:position pos:line="6" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="21">sizeof<argument_list pos:line="6" pos:column="27">(<argument><expr><name pos:line="6" pos:column="28">buffer<pos:position pos:line="6" pos:column="34"/></name></expr></argument>)<pos:position pos:line="6" pos:column="35"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="37">"%.3f"<pos:position pos:line="6" pos:column="43"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="7" pos:column="13">CDTIME_T_TO_DOUBLE<pos:position pos:line="7" pos:column="31"/></name><argument_list pos:line="7" pos:column="31">(<argument><expr><call><name pos:line="7" pos:column="32">plugin_get_interval<pos:position pos:line="7" pos:column="51"/></name><argument_list pos:line="7" pos:column="51">()<pos:position pos:line="7" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="56"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">setenv<pos:position pos:line="8" pos:column="9"/></name><argument_list pos:line="8" pos:column="9">(<argument><expr><literal type="string" pos:line="8" pos:column="10">"COLLECTD_INTERVAL"<pos:position pos:line="8" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="31">buffer<pos:position pos:line="8" pos:column="37"/></name></expr></argument>, <comment type="block" pos:line="8" pos:column="39">/* overwrite = */</comment> <argument><expr><literal type="number" pos:line="8" pos:column="57">1<pos:position pos:line="8" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="60"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="10" pos:column="3">ssnprintf<pos:position pos:line="10" pos:column="12"/></name><argument_list pos:line="10" pos:column="12">(<argument><expr><name pos:line="10" pos:column="13">buffer<pos:position pos:line="10" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="21">sizeof<argument_list pos:line="10" pos:column="27">(<argument><expr><name pos:line="10" pos:column="28">buffer<pos:position pos:line="10" pos:column="34"/></name></expr></argument>)<pos:position pos:line="10" pos:column="35"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="37">"%s"<pos:position pos:line="10" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="43">hostname_g<pos:position pos:line="10" pos:column="53"/></name></expr></argument>)<pos:position pos:line="10" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="55"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">setenv<pos:position pos:line="11" pos:column="9"/></name><argument_list pos:line="11" pos:column="9">(<argument><expr><literal type="string" pos:line="11" pos:column="10">"COLLECTD_HOSTNAME"<pos:position pos:line="11" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="31">buffer<pos:position pos:line="11" pos:column="37"/></name></expr></argument>, <comment type="block" pos:line="11" pos:column="39">/* overwrite = */</comment> <argument><expr><literal type="number" pos:line="11" pos:column="57">1<pos:position pos:line="11" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="60"/></expr_stmt>
<cpp:else pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">else<pos:position pos:line="12" pos:column="6"/></cpp:directive></cpp:else>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">ssnprintf<pos:position pos:line="13" pos:column="12"/></name><argument_list pos:line="13" pos:column="12">(<argument><expr><name pos:line="13" pos:column="13">buffer<pos:position pos:line="13" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="21">sizeof<argument_list pos:line="13" pos:column="27">(<argument><expr><name pos:line="13" pos:column="28">buffer<pos:position pos:line="13" pos:column="34"/></name></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="37">"COLLECTD_INTERVAL=%.3f"<pos:position pos:line="13" pos:column="61"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="14" pos:column="13">CDTIME_T_TO_DOUBLE<pos:position pos:line="14" pos:column="31"/></name><argument_list pos:line="14" pos:column="31">(<argument><expr><call><name pos:line="14" pos:column="32">plugin_get_interval<pos:position pos:line="14" pos:column="51"/></name><argument_list pos:line="14" pos:column="51">()<pos:position pos:line="14" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="56"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="15" pos:column="3">putenv<pos:position pos:line="15" pos:column="9"/></name><argument_list pos:line="15" pos:column="9">(<argument><expr><name pos:line="15" pos:column="10">buffer<pos:position pos:line="15" pos:column="16"/></name></expr></argument>)<pos:position pos:line="15" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="18"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">ssnprintf<pos:position pos:line="17" pos:column="12"/></name><argument_list pos:line="17" pos:column="12">(<argument><expr><name pos:line="17" pos:column="13">buffer<pos:position pos:line="17" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="21">sizeof<argument_list pos:line="17" pos:column="27">(<argument><expr><name pos:line="17" pos:column="28">buffer<pos:position pos:line="17" pos:column="34"/></name></expr></argument>)<pos:position pos:line="17" pos:column="35"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="37">"COLLECTD_HOSTNAME=%s"<pos:position pos:line="17" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="61">hostname_g<pos:position pos:line="17" pos:column="71"/></name></expr></argument>)<pos:position pos:line="17" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="73"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">putenv<pos:position pos:line="18" pos:column="9"/></name><argument_list pos:line="18" pos:column="9">(<argument><expr><name pos:line="18" pos:column="10">buffer<pos:position pos:line="18" pos:column="16"/></name></expr></argument>)<pos:position pos:line="18" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="18"/></expr_stmt>
<cpp:endif pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">endif<pos:position pos:line="19" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_238_collectd-4.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">csnmp_host_open_session<pos:position pos:line="1" pos:column="36"/></name> <parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">host_definition_t<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">host<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">snmp_session<pos:position pos:line="3" pos:column="22"/></name></name></type> <name pos:line="3" pos:column="23">sess<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name><name pos:line="5" pos:column="7">host<pos:position pos:line="5" pos:column="11"/></name><operator pos:line="5" pos:column="11">-&gt;<pos:position pos:line="5" pos:column="16"/></operator><name pos:line="5" pos:column="13">sess_handle<pos:position pos:line="5" pos:column="24"/></name></name> <operator pos:line="5" pos:column="25">!=<pos:position pos:line="5" pos:column="27"/></operator> <name pos:line="5" pos:column="28">NULL<pos:position pos:line="5" pos:column="32"/></name></expr>)<pos:position pos:line="5" pos:column="33"/></condition><then pos:line="5" pos:column="33">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="5">csnmp_host_close_session<pos:position pos:line="6" pos:column="29"/></name> <argument_list pos:line="6" pos:column="30">(<argument><expr><name pos:line="6" pos:column="31">host<pos:position pos:line="6" pos:column="35"/></name></expr></argument>)<pos:position pos:line="6" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="37"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">snmp_sess_init<pos:position pos:line="8" pos:column="17"/></name> <argument_list pos:line="8" pos:column="18">(<argument><expr><operator pos:line="8" pos:column="19">&amp;<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="20">sess<pos:position pos:line="8" pos:column="24"/></name></expr></argument>)<pos:position pos:line="8" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="9" pos:column="3">sess<pos:position pos:line="9" pos:column="7"/></name><operator pos:line="9" pos:column="7">.<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">peername<pos:position pos:line="9" pos:column="16"/></name></name> <operator pos:line="9" pos:column="17">=<pos:position pos:line="9" pos:column="18"/></operator> <name><name pos:line="9" pos:column="19">host<pos:position pos:line="9" pos:column="23"/></name><operator pos:line="9" pos:column="23">-&gt;<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="25">address<pos:position pos:line="9" pos:column="32"/></name></name></expr>;<pos:position pos:line="9" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="10" pos:column="3">sess<pos:position pos:line="10" pos:column="7"/></name><operator pos:line="10" pos:column="7">.<pos:position pos:line="10" pos:column="8"/></operator><name pos:line="10" pos:column="8">community<pos:position pos:line="10" pos:column="17"/></name></name> <operator pos:line="10" pos:column="18">=<pos:position pos:line="10" pos:column="19"/></operator> <operator pos:line="10" pos:column="20">(<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="21">u_char<pos:position pos:line="10" pos:column="27"/></name> <operator pos:line="10" pos:column="28">*<pos:position pos:line="10" pos:column="29"/></operator><operator pos:line="10" pos:column="29">)<pos:position pos:line="10" pos:column="30"/></operator> <name><name pos:line="10" pos:column="31">host<pos:position pos:line="10" pos:column="35"/></name><operator pos:line="10" pos:column="35">-&gt;<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="37">community<pos:position pos:line="10" pos:column="46"/></name></name></expr>;<pos:position pos:line="10" pos:column="47"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="11" pos:column="3">sess<pos:position pos:line="11" pos:column="7"/></name><operator pos:line="11" pos:column="7">.<pos:position pos:line="11" pos:column="8"/></operator><name pos:line="11" pos:column="8">community_len<pos:position pos:line="11" pos:column="21"/></name></name> <operator pos:line="11" pos:column="22">=<pos:position pos:line="11" pos:column="23"/></operator> <call><name pos:line="11" pos:column="24">strlen<pos:position pos:line="11" pos:column="30"/></name> <argument_list pos:line="11" pos:column="31">(<argument><expr><name><name pos:line="11" pos:column="32">host<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">-&gt;<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="38">community<pos:position pos:line="11" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="12" pos:column="3">sess<pos:position pos:line="12" pos:column="7"/></name><operator pos:line="12" pos:column="7">.<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">version<pos:position pos:line="12" pos:column="15"/></name></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <ternary><condition><expr><operator pos:line="12" pos:column="18">(<pos:position pos:line="12" pos:column="19"/></operator><name><name pos:line="12" pos:column="19">host<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">-&gt;<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="25">version<pos:position pos:line="12" pos:column="32"/></name></name> <operator pos:line="12" pos:column="33">==<pos:position pos:line="12" pos:column="35"/></operator> <literal type="number" pos:line="12" pos:column="36">1<pos:position pos:line="12" pos:column="37"/></literal><operator pos:line="12" pos:column="37">)<pos:position pos:line="12" pos:column="38"/></operator></expr> ?<pos:position pos:line="12" pos:column="40"/></condition><then pos:line="12" pos:column="40"> <expr><name pos:line="12" pos:column="41">SNMP_VERSION_1<pos:position pos:line="12" pos:column="55"/></name></expr> <pos:position pos:line="12" pos:column="56"/></then><else pos:line="12" pos:column="56">: <expr><name pos:line="12" pos:column="58">SNMP_VERSION_2c<pos:position pos:line="12" pos:column="73"/></name></expr></else></ternary></expr>;<pos:position pos:line="12" pos:column="74"/></expr_stmt>

  <comment type="block" pos:line="14" pos:column="3">/* snmp_sess_open will copy the `struct snmp_session *'. */</comment>
  <expr_stmt><expr><name><name pos:line="15" pos:column="3">host<pos:position pos:line="15" pos:column="7"/></name><operator pos:line="15" pos:column="7">-&gt;<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="9">sess_handle<pos:position pos:line="15" pos:column="20"/></name></name> <operator pos:line="15" pos:column="21">=<pos:position pos:line="15" pos:column="22"/></operator> <call><name pos:line="15" pos:column="23">snmp_sess_open<pos:position pos:line="15" pos:column="37"/></name> <argument_list pos:line="15" pos:column="38">(<argument><expr><operator pos:line="15" pos:column="39">&amp;<pos:position pos:line="15" pos:column="44"/></operator><name pos:line="15" pos:column="40">sess<pos:position pos:line="15" pos:column="44"/></name></expr></argument>)<pos:position pos:line="15" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="46"/></expr_stmt>

  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name><name pos:line="17" pos:column="7">host<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">-&gt;<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="13">sess_handle<pos:position pos:line="17" pos:column="24"/></name></name> <operator pos:line="17" pos:column="25">==<pos:position pos:line="17" pos:column="27"/></operator> <name pos:line="17" pos:column="28">NULL<pos:position pos:line="17" pos:column="32"/></name></expr>)<pos:position pos:line="17" pos:column="33"/></condition><then pos:line="17" pos:column="33">
  <block pos:line="18" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">char<pos:position pos:line="19" pos:column="9"/></name> <modifier pos:line="19" pos:column="10">*<pos:position pos:line="19" pos:column="11"/></modifier></type><name pos:line="19" pos:column="11">errstr<pos:position pos:line="19" pos:column="17"/></name> <init pos:line="19" pos:column="18">= <expr><name pos:line="19" pos:column="20">NULL<pos:position pos:line="19" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="25"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="21" pos:column="5">snmp_error<pos:position pos:line="21" pos:column="15"/></name> <argument_list pos:line="21" pos:column="16">(<argument><expr><operator pos:line="21" pos:column="17">&amp;<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="18">sess<pos:position pos:line="21" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="24">NULL<pos:position pos:line="21" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="30">NULL<pos:position pos:line="21" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="36">&amp;<pos:position pos:line="21" pos:column="41"/></operator><name pos:line="21" pos:column="37">errstr<pos:position pos:line="21" pos:column="43"/></name></expr></argument>)<pos:position pos:line="21" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="45"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="23" pos:column="5">ERROR<pos:position pos:line="23" pos:column="10"/></name> <argument_list pos:line="23" pos:column="11">(<argument><expr><literal type="string" pos:line="23" pos:column="12">"snmp plugin: host %s: snmp_sess_open failed: %s"<pos:position pos:line="23" pos:column="61"/></literal></expr></argument>,
	<argument><expr><name><name pos:line="24" pos:column="9">host<pos:position pos:line="24" pos:column="13"/></name><operator pos:line="24" pos:column="13">-&gt;<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="15">name<pos:position pos:line="24" pos:column="19"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="24" pos:column="21">(<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="22">errstr<pos:position pos:line="24" pos:column="28"/></name> <operator pos:line="24" pos:column="29">==<pos:position pos:line="24" pos:column="31"/></operator> <name pos:line="24" pos:column="32">NULL<pos:position pos:line="24" pos:column="36"/></name><operator pos:line="24" pos:column="36">)<pos:position pos:line="24" pos:column="37"/></operator></expr> ?<pos:position pos:line="24" pos:column="39"/></condition><then pos:line="24" pos:column="39"> <expr><literal type="string" pos:line="24" pos:column="40">"Unknown problem"<pos:position pos:line="24" pos:column="57"/></literal></expr> <pos:position pos:line="24" pos:column="58"/></then><else pos:line="24" pos:column="58">: <expr><name pos:line="24" pos:column="60">errstr<pos:position pos:line="24" pos:column="66"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="24" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="68"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">sfree<pos:position pos:line="25" pos:column="10"/></name> <argument_list pos:line="25" pos:column="11">(<argument><expr><name pos:line="25" pos:column="12">errstr<pos:position pos:line="25" pos:column="18"/></name></expr></argument>)<pos:position pos:line="25" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

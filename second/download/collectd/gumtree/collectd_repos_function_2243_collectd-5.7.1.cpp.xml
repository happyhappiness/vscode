<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2243_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">vmem_read<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">void<pos:position pos:line="1" pos:column="26"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="27"/></parameter_list> <block pos:line="1" pos:column="28">{
<cpp:if pos:line="2" pos:column="1">#<cpp:directive pos:line="2" pos:column="2">if<pos:position pos:line="2" pos:column="4"/></cpp:directive> <expr><name pos:line="2" pos:column="5">KERNEL_LINUX<pos:position pos:line="2" pos:column="17"/></name></expr></cpp:if>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">derive_t<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">pgpgin<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><literal type="number" pos:line="3" pos:column="21">0<pos:position pos:line="3" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">derive_t<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">pgpgout<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><literal type="number" pos:line="4" pos:column="22">0<pos:position pos:line="4" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">pgpgvalid<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><literal type="number" pos:line="5" pos:column="19">0<pos:position pos:line="5" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="7" pos:column="3">derive_t<pos:position pos:line="7" pos:column="11"/></name></type> <name pos:line="7" pos:column="12">pswpin<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><literal type="number" pos:line="7" pos:column="21">0<pos:position pos:line="7" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">derive_t<pos:position pos:line="8" pos:column="11"/></name></type> <name pos:line="8" pos:column="12">pswpout<pos:position pos:line="8" pos:column="19"/></name> <init pos:line="8" pos:column="20">= <expr><literal type="number" pos:line="8" pos:column="22">0<pos:position pos:line="8" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">pswpvalid<pos:position pos:line="9" pos:column="16"/></name> <init pos:line="9" pos:column="17">= <expr><literal type="number" pos:line="9" pos:column="19">0<pos:position pos:line="9" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="11" pos:column="3">derive_t<pos:position pos:line="11" pos:column="11"/></name></type> <name pos:line="11" pos:column="12">pgfault<pos:position pos:line="11" pos:column="19"/></name> <init pos:line="11" pos:column="20">= <expr><literal type="number" pos:line="11" pos:column="22">0<pos:position pos:line="11" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">derive_t<pos:position pos:line="12" pos:column="11"/></name></type> <name pos:line="12" pos:column="12">pgmajfault<pos:position pos:line="12" pos:column="22"/></name> <init pos:line="12" pos:column="23">= <expr><literal type="number" pos:line="12" pos:column="25">0<pos:position pos:line="12" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">int<pos:position pos:line="13" pos:column="6"/></name></type> <name pos:line="13" pos:column="7">pgfaultvalid<pos:position pos:line="13" pos:column="19"/></name> <init pos:line="13" pos:column="20">= <expr><literal type="number" pos:line="13" pos:column="22">0<pos:position pos:line="13" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="24"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="15" pos:column="3">FILE<pos:position pos:line="15" pos:column="7"/></name> <modifier pos:line="15" pos:column="8">*<pos:position pos:line="15" pos:column="9"/></modifier></type><name pos:line="15" pos:column="9">fh<pos:position pos:line="15" pos:column="11"/></name></decl>;<pos:position pos:line="15" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">char<pos:position pos:line="16" pos:column="7"/></name></type> <name><name pos:line="16" pos:column="8">buffer<pos:position pos:line="16" pos:column="14"/></name><index pos:line="16" pos:column="14">[<expr><literal type="number" pos:line="16" pos:column="15">1024<pos:position pos:line="16" pos:column="19"/></literal></expr>]<pos:position pos:line="16" pos:column="20"/></index></name></decl>;<pos:position pos:line="16" pos:column="21"/></decl_stmt>

  <expr_stmt><expr><name pos:line="18" pos:column="3">fh<pos:position pos:line="18" pos:column="5"/></name> <operator pos:line="18" pos:column="6">=<pos:position pos:line="18" pos:column="7"/></operator> <call><name pos:line="18" pos:column="8">fopen<pos:position pos:line="18" pos:column="13"/></name><argument_list pos:line="18" pos:column="13">(<argument><expr><literal type="string" pos:line="18" pos:column="14">"/proc/vmstat"<pos:position pos:line="18" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="30">"r"<pos:position pos:line="18" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="35"/></expr_stmt>
  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><name pos:line="19" pos:column="7">fh<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">==<pos:position pos:line="19" pos:column="12"/></operator> <name pos:line="19" pos:column="13">NULL<pos:position pos:line="19" pos:column="17"/></name></expr>)<pos:position pos:line="19" pos:column="18"/></condition><then pos:line="19" pos:column="18"> <block pos:line="19" pos:column="19">{
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">char<pos:position pos:line="20" pos:column="9"/></name></type> <name><name pos:line="20" pos:column="10">errbuf<pos:position pos:line="20" pos:column="16"/></name><index pos:line="20" pos:column="16">[<expr><literal type="number" pos:line="20" pos:column="17">1024<pos:position pos:line="20" pos:column="21"/></literal></expr>]<pos:position pos:line="20" pos:column="22"/></index></name></decl>;<pos:position pos:line="20" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">ERROR<pos:position pos:line="21" pos:column="10"/></name><argument_list pos:line="21" pos:column="10">(<argument><expr><literal type="string" pos:line="21" pos:column="11">"vmem plugin: fopen (/proc/vmstat) failed: %s"<pos:position pos:line="21" pos:column="57"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="22" pos:column="11">sstrerror<pos:position pos:line="22" pos:column="20"/></name><argument_list pos:line="22" pos:column="20">(<argument><expr><name pos:line="22" pos:column="21">errno<pos:position pos:line="22" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="28">errbuf<pos:position pos:line="22" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="36">sizeof<argument_list pos:line="22" pos:column="42">(<argument><expr><name pos:line="22" pos:column="43">errbuf<pos:position pos:line="22" pos:column="49"/></name></expr></argument>)<pos:position pos:line="22" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="53"/></expr_stmt>
    <return pos:line="23" pos:column="5">return <expr><operator pos:line="23" pos:column="12">(<pos:position pos:line="23" pos:column="13"/></operator><operator pos:line="23" pos:column="13">-<pos:position pos:line="23" pos:column="14"/></operator><literal type="number" pos:line="23" pos:column="14">1<pos:position pos:line="23" pos:column="15"/></literal><operator pos:line="23" pos:column="15">)<pos:position pos:line="23" pos:column="16"/></operator></expr>;<pos:position pos:line="23" pos:column="17"/></return>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>

  <while pos:line="26" pos:column="3">while <condition pos:line="26" pos:column="9">(<expr><call><name pos:line="26" pos:column="10">fgets<pos:position pos:line="26" pos:column="15"/></name><argument_list pos:line="26" pos:column="15">(<argument><expr><name pos:line="26" pos:column="16">buffer<pos:position pos:line="26" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="24">sizeof<argument_list pos:line="26" pos:column="30">(<argument><expr><name pos:line="26" pos:column="31">buffer<pos:position pos:line="26" pos:column="37"/></name></expr></argument>)<pos:position pos:line="26" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="26" pos:column="40">fh<pos:position pos:line="26" pos:column="42"/></name></expr></argument>)<pos:position pos:line="26" pos:column="43"/></argument_list></call> <operator pos:line="26" pos:column="44">!=<pos:position pos:line="26" pos:column="46"/></operator> <name pos:line="26" pos:column="47">NULL<pos:position pos:line="26" pos:column="51"/></name></expr>)<pos:position pos:line="26" pos:column="52"/></condition> <block pos:line="26" pos:column="53">{
    <decl_stmt><decl><type><name pos:line="27" pos:column="5">char<pos:position pos:line="27" pos:column="9"/></name> <modifier pos:line="27" pos:column="10">*<pos:position pos:line="27" pos:column="11"/></modifier></type><name><name pos:line="27" pos:column="11">fields<pos:position pos:line="27" pos:column="17"/></name><index pos:line="27" pos:column="17">[<expr><literal type="number" pos:line="27" pos:column="18">4<pos:position pos:line="27" pos:column="19"/></literal></expr>]<pos:position pos:line="27" pos:column="20"/></index></name></decl>;<pos:position pos:line="27" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="28" pos:column="5">int<pos:position pos:line="28" pos:column="8"/></name></type> <name pos:line="28" pos:column="9">fields_num<pos:position pos:line="28" pos:column="19"/></name></decl>;<pos:position pos:line="28" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="29" pos:column="5">char<pos:position pos:line="29" pos:column="9"/></name> <modifier pos:line="29" pos:column="10">*<pos:position pos:line="29" pos:column="11"/></modifier></type><name pos:line="29" pos:column="11">key<pos:position pos:line="29" pos:column="14"/></name></decl>;<pos:position pos:line="29" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="30" pos:column="5">char<pos:position pos:line="30" pos:column="9"/></name> <modifier pos:line="30" pos:column="10">*<pos:position pos:line="30" pos:column="11"/></modifier></type><name pos:line="30" pos:column="11">endptr<pos:position pos:line="30" pos:column="17"/></name></decl>;<pos:position pos:line="30" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="31" pos:column="5">derive_t<pos:position pos:line="31" pos:column="13"/></name></type> <name pos:line="31" pos:column="14">counter<pos:position pos:line="31" pos:column="21"/></name></decl>;<pos:position pos:line="31" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="32" pos:column="5">gauge_t<pos:position pos:line="32" pos:column="12"/></name></type> <name pos:line="32" pos:column="13">gauge<pos:position pos:line="32" pos:column="18"/></name></decl>;<pos:position pos:line="32" pos:column="19"/></decl_stmt>

    <expr_stmt><expr><name pos:line="34" pos:column="5">fields_num<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">=<pos:position pos:line="34" pos:column="17"/></operator> <call><name pos:line="34" pos:column="18">strsplit<pos:position pos:line="34" pos:column="26"/></name><argument_list pos:line="34" pos:column="26">(<argument><expr><name pos:line="34" pos:column="27">buffer<pos:position pos:line="34" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="35">fields<pos:position pos:line="34" pos:column="41"/></name></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="43">STATIC_ARRAY_SIZE<pos:position pos:line="34" pos:column="60"/></name><argument_list pos:line="34" pos:column="60">(<argument><expr><name pos:line="34" pos:column="61">fields<pos:position pos:line="34" pos:column="67"/></name></expr></argument>)<pos:position pos:line="34" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="70"/></expr_stmt>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name pos:line="35" pos:column="9">fields_num<pos:position pos:line="35" pos:column="19"/></name> <operator pos:line="35" pos:column="20">!=<pos:position pos:line="35" pos:column="22"/></operator> <literal type="number" pos:line="35" pos:column="23">2<pos:position pos:line="35" pos:column="24"/></literal></expr>)<pos:position pos:line="35" pos:column="25"/></condition><then pos:line="35" pos:column="25">
      <block type="pseudo"><continue pos:line="36" pos:column="7">continue;<pos:position pos:line="36" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="38" pos:column="5">key<pos:position pos:line="38" pos:column="8"/></name> <operator pos:line="38" pos:column="9">=<pos:position pos:line="38" pos:column="10"/></operator> <name><name pos:line="38" pos:column="11">fields<pos:position pos:line="38" pos:column="17"/></name><index pos:line="38" pos:column="17">[<expr><literal type="number" pos:line="38" pos:column="18">0<pos:position pos:line="38" pos:column="19"/></literal></expr>]<pos:position pos:line="38" pos:column="20"/></index></name></expr>;<pos:position pos:line="38" pos:column="21"/></expr_stmt>

    <expr_stmt><expr><name pos:line="40" pos:column="5">endptr<pos:position pos:line="40" pos:column="11"/></name> <operator pos:line="40" pos:column="12">=<pos:position pos:line="40" pos:column="13"/></operator> <name pos:line="40" pos:column="14">NULL<pos:position pos:line="40" pos:column="18"/></name></expr>;<pos:position pos:line="40" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="41" pos:column="5">counter<pos:position pos:line="41" pos:column="12"/></name> <operator pos:line="41" pos:column="13">=<pos:position pos:line="41" pos:column="14"/></operator> <call><name pos:line="41" pos:column="15">strtoll<pos:position pos:line="41" pos:column="22"/></name><argument_list pos:line="41" pos:column="22">(<argument><expr><name><name pos:line="41" pos:column="23">fields<pos:position pos:line="41" pos:column="29"/></name><index pos:line="41" pos:column="29">[<expr><literal type="number" pos:line="41" pos:column="30">1<pos:position pos:line="41" pos:column="31"/></literal></expr>]<pos:position pos:line="41" pos:column="32"/></index></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="34">&amp;<pos:position pos:line="41" pos:column="39"/></operator><name pos:line="41" pos:column="35">endptr<pos:position pos:line="41" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="43">10<pos:position pos:line="41" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="47"/></expr_stmt>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name><name pos:line="42" pos:column="9">fields<pos:position pos:line="42" pos:column="15"/></name><index pos:line="42" pos:column="15">[<expr><literal type="number" pos:line="42" pos:column="16">1<pos:position pos:line="42" pos:column="17"/></literal></expr>]<pos:position pos:line="42" pos:column="18"/></index></name> <operator pos:line="42" pos:column="19">==<pos:position pos:line="42" pos:column="21"/></operator> <name pos:line="42" pos:column="22">endptr<pos:position pos:line="42" pos:column="28"/></name></expr>)<pos:position pos:line="42" pos:column="29"/></condition><then pos:line="42" pos:column="29">
      <block type="pseudo"><continue pos:line="43" pos:column="7">continue;<pos:position pos:line="43" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="45" pos:column="5">endptr<pos:position pos:line="45" pos:column="11"/></name> <operator pos:line="45" pos:column="12">=<pos:position pos:line="45" pos:column="13"/></operator> <name pos:line="45" pos:column="14">NULL<pos:position pos:line="45" pos:column="18"/></name></expr>;<pos:position pos:line="45" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="46" pos:column="5">gauge<pos:position pos:line="46" pos:column="10"/></name> <operator pos:line="46" pos:column="11">=<pos:position pos:line="46" pos:column="12"/></operator> <call><name pos:line="46" pos:column="13">strtod<pos:position pos:line="46" pos:column="19"/></name><argument_list pos:line="46" pos:column="19">(<argument><expr><name><name pos:line="46" pos:column="20">fields<pos:position pos:line="46" pos:column="26"/></name><index pos:line="46" pos:column="26">[<expr><literal type="number" pos:line="46" pos:column="27">1<pos:position pos:line="46" pos:column="28"/></literal></expr>]<pos:position pos:line="46" pos:column="29"/></index></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="31">&amp;<pos:position pos:line="46" pos:column="36"/></operator><name pos:line="46" pos:column="32">endptr<pos:position pos:line="46" pos:column="38"/></name></expr></argument>)<pos:position pos:line="46" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="40"/></expr_stmt>
    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><name><name pos:line="47" pos:column="9">fields<pos:position pos:line="47" pos:column="15"/></name><index pos:line="47" pos:column="15">[<expr><literal type="number" pos:line="47" pos:column="16">1<pos:position pos:line="47" pos:column="17"/></literal></expr>]<pos:position pos:line="47" pos:column="18"/></index></name> <operator pos:line="47" pos:column="19">==<pos:position pos:line="47" pos:column="21"/></operator> <name pos:line="47" pos:column="22">endptr<pos:position pos:line="47" pos:column="28"/></name></expr>)<pos:position pos:line="47" pos:column="29"/></condition><then pos:line="47" pos:column="29">
      <block type="pseudo"><continue pos:line="48" pos:column="7">continue;<pos:position pos:line="48" pos:column="16"/></continue></block></then></if>

    <comment type="block" pos:line="50" pos:column="5">/*
     * Number of pages
     *
     * The total number of {inst} pages, e. g dirty pages.
     */</comment>
    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><call><name pos:line="55" pos:column="9">strncmp<pos:position pos:line="55" pos:column="16"/></name><argument_list pos:line="55" pos:column="16">(<argument><expr><literal type="string" pos:line="55" pos:column="17">"nr_"<pos:position pos:line="55" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="24">key<pos:position pos:line="55" pos:column="27"/></name></expr></argument>, <argument><expr><call><name pos:line="55" pos:column="29">strlen<pos:position pos:line="55" pos:column="35"/></name><argument_list pos:line="55" pos:column="35">(<argument><expr><literal type="string" pos:line="55" pos:column="36">"nr_"<pos:position pos:line="55" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="55" pos:column="43"/></argument_list></call> <operator pos:line="55" pos:column="44">==<pos:position pos:line="55" pos:column="46"/></operator> <literal type="number" pos:line="55" pos:column="47">0<pos:position pos:line="55" pos:column="48"/></literal></expr>)<pos:position pos:line="55" pos:column="49"/></condition><then pos:line="55" pos:column="49"> <block pos:line="55" pos:column="50">{
      <decl_stmt><decl><type><name pos:line="56" pos:column="7">char<pos:position pos:line="56" pos:column="11"/></name> <modifier pos:line="56" pos:column="12">*<pos:position pos:line="56" pos:column="13"/></modifier></type><name pos:line="56" pos:column="13">inst<pos:position pos:line="56" pos:column="17"/></name> <init pos:line="56" pos:column="18">= <expr><name pos:line="56" pos:column="20">key<pos:position pos:line="56" pos:column="23"/></name> <operator pos:line="56" pos:column="24">+<pos:position pos:line="56" pos:column="25"/></operator> <call><name pos:line="56" pos:column="26">strlen<pos:position pos:line="56" pos:column="32"/></name><argument_list pos:line="56" pos:column="32">(<argument><expr><literal type="string" pos:line="56" pos:column="33">"nr_"<pos:position pos:line="56" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="56" pos:column="40"/></decl_stmt>
      <if pos:line="57" pos:column="7">if <condition pos:line="57" pos:column="10">(<expr><call><name pos:line="57" pos:column="11">strcmp<pos:position pos:line="57" pos:column="17"/></name><argument_list pos:line="57" pos:column="17">(<argument><expr><name pos:line="57" pos:column="18">inst<pos:position pos:line="57" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="24">"dirtied"<pos:position pos:line="57" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="34"/></argument_list></call> <operator pos:line="57" pos:column="35">==<pos:position pos:line="57" pos:column="37"/></operator> <literal type="number" pos:line="57" pos:column="38">0<pos:position pos:line="57" pos:column="39"/></literal> <operator pos:line="57" pos:column="40">||<pos:position pos:line="57" pos:column="42"/></operator> <call><name pos:line="57" pos:column="43">strcmp<pos:position pos:line="57" pos:column="49"/></name><argument_list pos:line="57" pos:column="49">(<argument><expr><name pos:line="57" pos:column="50">inst<pos:position pos:line="57" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="56">"written"<pos:position pos:line="57" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="66"/></argument_list></call> <operator pos:line="57" pos:column="67">==<pos:position pos:line="57" pos:column="69"/></operator> <literal type="number" pos:line="57" pos:column="70">0<pos:position pos:line="57" pos:column="71"/></literal></expr>)<pos:position pos:line="57" pos:column="72"/></condition><then pos:line="57" pos:column="72"> <block pos:line="57" pos:column="73">{
        <decl_stmt><decl><type><name pos:line="58" pos:column="9">value_t<pos:position pos:line="58" pos:column="16"/></name></type> <name pos:line="58" pos:column="17">value<pos:position pos:line="58" pos:column="22"/></name> <init pos:line="58" pos:column="23">= <expr><block pos:line="58" pos:column="25">{<expr><operator pos:line="58" pos:column="26">.<pos:position pos:line="58" pos:column="27"/></operator><name pos:line="58" pos:column="27">derive<pos:position pos:line="58" pos:column="33"/></name> <operator pos:line="58" pos:column="34">=<pos:position pos:line="58" pos:column="35"/></operator> <name pos:line="58" pos:column="36">counter<pos:position pos:line="58" pos:column="43"/></name></expr>}<pos:position pos:line="58" pos:column="44"/></block></expr></init></decl>;<pos:position pos:line="58" pos:column="45"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="59" pos:column="9">submit_one<pos:position pos:line="59" pos:column="19"/></name><argument_list pos:line="59" pos:column="19">(<argument><expr><name pos:line="59" pos:column="20">NULL<pos:position pos:line="59" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="26">"vmpage_action"<pos:position pos:line="59" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="43">inst<pos:position pos:line="59" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="49">value<pos:position pos:line="59" pos:column="54"/></name></expr></argument>)<pos:position pos:line="59" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="56"/></expr_stmt>
      }<pos:position pos:line="60" pos:column="8"/></block></then> <else pos:line="60" pos:column="9">else <block pos:line="60" pos:column="14">{
        <decl_stmt><decl><type><name pos:line="61" pos:column="9">value_t<pos:position pos:line="61" pos:column="16"/></name></type> <name pos:line="61" pos:column="17">value<pos:position pos:line="61" pos:column="22"/></name> <init pos:line="61" pos:column="23">= <expr><block pos:line="61" pos:column="25">{<expr><operator pos:line="61" pos:column="26">.<pos:position pos:line="61" pos:column="27"/></operator><name pos:line="61" pos:column="27">gauge<pos:position pos:line="61" pos:column="32"/></name> <operator pos:line="61" pos:column="33">=<pos:position pos:line="61" pos:column="34"/></operator> <name pos:line="61" pos:column="35">gauge<pos:position pos:line="61" pos:column="40"/></name></expr>}<pos:position pos:line="61" pos:column="41"/></block></expr></init></decl>;<pos:position pos:line="61" pos:column="42"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="62" pos:column="9">submit_one<pos:position pos:line="62" pos:column="19"/></name><argument_list pos:line="62" pos:column="19">(<argument><expr><name pos:line="62" pos:column="20">NULL<pos:position pos:line="62" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="26">"vmpage_number"<pos:position pos:line="62" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="43">inst<pos:position pos:line="62" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="49">value<pos:position pos:line="62" pos:column="54"/></name></expr></argument>)<pos:position pos:line="62" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="56"/></expr_stmt>
      }<pos:position pos:line="63" pos:column="8"/></block></else></if>
    }<pos:position pos:line="64" pos:column="6"/></block></then>

    <comment type="block" pos:line="66" pos:column="5">/*
     * Page in and page outs. For memory and swap.
     */</comment>
    <elseif pos:line="69" pos:column="5">else <if pos:line="69" pos:column="10">if <condition pos:line="69" pos:column="13">(<expr><call><name pos:line="69" pos:column="14">strcmp<pos:position pos:line="69" pos:column="20"/></name><argument_list pos:line="69" pos:column="20">(<argument><expr><literal type="string" pos:line="69" pos:column="21">"pgpgin"<pos:position pos:line="69" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="69" pos:column="31">key<pos:position pos:line="69" pos:column="34"/></name></expr></argument>)<pos:position pos:line="69" pos:column="35"/></argument_list></call> <operator pos:line="69" pos:column="36">==<pos:position pos:line="69" pos:column="38"/></operator> <literal type="number" pos:line="69" pos:column="39">0<pos:position pos:line="69" pos:column="40"/></literal></expr>)<pos:position pos:line="69" pos:column="41"/></condition><then pos:line="69" pos:column="41"> <block pos:line="69" pos:column="42">{
      <expr_stmt><expr><name pos:line="70" pos:column="7">pgpgin<pos:position pos:line="70" pos:column="13"/></name> <operator pos:line="70" pos:column="14">=<pos:position pos:line="70" pos:column="15"/></operator> <name pos:line="70" pos:column="16">counter<pos:position pos:line="70" pos:column="23"/></name></expr>;<pos:position pos:line="70" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><name pos:line="71" pos:column="7">pgpgvalid<pos:position pos:line="71" pos:column="16"/></name> <operator pos:line="71" pos:column="17">|=<pos:position pos:line="71" pos:column="19"/></operator> <literal type="number" pos:line="71" pos:column="20">0x01<pos:position pos:line="71" pos:column="24"/></literal></expr>;<pos:position pos:line="71" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="72" pos:column="6"/></block></then></if></elseif> <elseif pos:line="72" pos:column="7">else <if pos:line="72" pos:column="12">if <condition pos:line="72" pos:column="15">(<expr><call><name pos:line="72" pos:column="16">strcmp<pos:position pos:line="72" pos:column="22"/></name><argument_list pos:line="72" pos:column="22">(<argument><expr><literal type="string" pos:line="72" pos:column="23">"pgpgout"<pos:position pos:line="72" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="72" pos:column="34">key<pos:position pos:line="72" pos:column="37"/></name></expr></argument>)<pos:position pos:line="72" pos:column="38"/></argument_list></call> <operator pos:line="72" pos:column="39">==<pos:position pos:line="72" pos:column="41"/></operator> <literal type="number" pos:line="72" pos:column="42">0<pos:position pos:line="72" pos:column="43"/></literal></expr>)<pos:position pos:line="72" pos:column="44"/></condition><then pos:line="72" pos:column="44"> <block pos:line="72" pos:column="45">{
      <expr_stmt><expr><name pos:line="73" pos:column="7">pgpgout<pos:position pos:line="73" pos:column="14"/></name> <operator pos:line="73" pos:column="15">=<pos:position pos:line="73" pos:column="16"/></operator> <name pos:line="73" pos:column="17">counter<pos:position pos:line="73" pos:column="24"/></name></expr>;<pos:position pos:line="73" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name pos:line="74" pos:column="7">pgpgvalid<pos:position pos:line="74" pos:column="16"/></name> <operator pos:line="74" pos:column="17">|=<pos:position pos:line="74" pos:column="19"/></operator> <literal type="number" pos:line="74" pos:column="20">0x02<pos:position pos:line="74" pos:column="24"/></literal></expr>;<pos:position pos:line="74" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="75" pos:column="6"/></block></then></if></elseif> <elseif pos:line="75" pos:column="7">else <if pos:line="75" pos:column="12">if <condition pos:line="75" pos:column="15">(<expr><call><name pos:line="75" pos:column="16">strcmp<pos:position pos:line="75" pos:column="22"/></name><argument_list pos:line="75" pos:column="22">(<argument><expr><literal type="string" pos:line="75" pos:column="23">"pswpin"<pos:position pos:line="75" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="33">key<pos:position pos:line="75" pos:column="36"/></name></expr></argument>)<pos:position pos:line="75" pos:column="37"/></argument_list></call> <operator pos:line="75" pos:column="38">==<pos:position pos:line="75" pos:column="40"/></operator> <literal type="number" pos:line="75" pos:column="41">0<pos:position pos:line="75" pos:column="42"/></literal></expr>)<pos:position pos:line="75" pos:column="43"/></condition><then pos:line="75" pos:column="43"> <block pos:line="75" pos:column="44">{
      <expr_stmt><expr><name pos:line="76" pos:column="7">pswpin<pos:position pos:line="76" pos:column="13"/></name> <operator pos:line="76" pos:column="14">=<pos:position pos:line="76" pos:column="15"/></operator> <name pos:line="76" pos:column="16">counter<pos:position pos:line="76" pos:column="23"/></name></expr>;<pos:position pos:line="76" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><name pos:line="77" pos:column="7">pswpvalid<pos:position pos:line="77" pos:column="16"/></name> <operator pos:line="77" pos:column="17">|=<pos:position pos:line="77" pos:column="19"/></operator> <literal type="number" pos:line="77" pos:column="20">0x01<pos:position pos:line="77" pos:column="24"/></literal></expr>;<pos:position pos:line="77" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="78" pos:column="6"/></block></then></if></elseif> <elseif pos:line="78" pos:column="7">else <if pos:line="78" pos:column="12">if <condition pos:line="78" pos:column="15">(<expr><call><name pos:line="78" pos:column="16">strcmp<pos:position pos:line="78" pos:column="22"/></name><argument_list pos:line="78" pos:column="22">(<argument><expr><literal type="string" pos:line="78" pos:column="23">"pswpout"<pos:position pos:line="78" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="78" pos:column="34">key<pos:position pos:line="78" pos:column="37"/></name></expr></argument>)<pos:position pos:line="78" pos:column="38"/></argument_list></call> <operator pos:line="78" pos:column="39">==<pos:position pos:line="78" pos:column="41"/></operator> <literal type="number" pos:line="78" pos:column="42">0<pos:position pos:line="78" pos:column="43"/></literal></expr>)<pos:position pos:line="78" pos:column="44"/></condition><then pos:line="78" pos:column="44"> <block pos:line="78" pos:column="45">{
      <expr_stmt><expr><name pos:line="79" pos:column="7">pswpout<pos:position pos:line="79" pos:column="14"/></name> <operator pos:line="79" pos:column="15">=<pos:position pos:line="79" pos:column="16"/></operator> <name pos:line="79" pos:column="17">counter<pos:position pos:line="79" pos:column="24"/></name></expr>;<pos:position pos:line="79" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name pos:line="80" pos:column="7">pswpvalid<pos:position pos:line="80" pos:column="16"/></name> <operator pos:line="80" pos:column="17">|=<pos:position pos:line="80" pos:column="19"/></operator> <literal type="number" pos:line="80" pos:column="20">0x02<pos:position pos:line="80" pos:column="24"/></literal></expr>;<pos:position pos:line="80" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="81" pos:column="6"/></block></then></if></elseif>

    <comment type="block" pos:line="83" pos:column="5">/*
     * Pagefaults
     */</comment>
    <elseif pos:line="86" pos:column="5">else <if pos:line="86" pos:column="10">if <condition pos:line="86" pos:column="13">(<expr><call><name pos:line="86" pos:column="14">strcmp<pos:position pos:line="86" pos:column="20"/></name><argument_list pos:line="86" pos:column="20">(<argument><expr><literal type="string" pos:line="86" pos:column="21">"pgfault"<pos:position pos:line="86" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="86" pos:column="32">key<pos:position pos:line="86" pos:column="35"/></name></expr></argument>)<pos:position pos:line="86" pos:column="36"/></argument_list></call> <operator pos:line="86" pos:column="37">==<pos:position pos:line="86" pos:column="39"/></operator> <literal type="number" pos:line="86" pos:column="40">0<pos:position pos:line="86" pos:column="41"/></literal></expr>)<pos:position pos:line="86" pos:column="42"/></condition><then pos:line="86" pos:column="42"> <block pos:line="86" pos:column="43">{
      <expr_stmt><expr><name pos:line="87" pos:column="7">pgfault<pos:position pos:line="87" pos:column="14"/></name> <operator pos:line="87" pos:column="15">=<pos:position pos:line="87" pos:column="16"/></operator> <name pos:line="87" pos:column="17">counter<pos:position pos:line="87" pos:column="24"/></name></expr>;<pos:position pos:line="87" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name pos:line="88" pos:column="7">pgfaultvalid<pos:position pos:line="88" pos:column="19"/></name> <operator pos:line="88" pos:column="20">|=<pos:position pos:line="88" pos:column="22"/></operator> <literal type="number" pos:line="88" pos:column="23">0x01<pos:position pos:line="88" pos:column="27"/></literal></expr>;<pos:position pos:line="88" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="89" pos:column="6"/></block></then></if></elseif> <elseif pos:line="89" pos:column="7">else <if pos:line="89" pos:column="12">if <condition pos:line="89" pos:column="15">(<expr><call><name pos:line="89" pos:column="16">strcmp<pos:position pos:line="89" pos:column="22"/></name><argument_list pos:line="89" pos:column="22">(<argument><expr><literal type="string" pos:line="89" pos:column="23">"pgmajfault"<pos:position pos:line="89" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="89" pos:column="37">key<pos:position pos:line="89" pos:column="40"/></name></expr></argument>)<pos:position pos:line="89" pos:column="41"/></argument_list></call> <operator pos:line="89" pos:column="42">==<pos:position pos:line="89" pos:column="44"/></operator> <literal type="number" pos:line="89" pos:column="45">0<pos:position pos:line="89" pos:column="46"/></literal></expr>)<pos:position pos:line="89" pos:column="47"/></condition><then pos:line="89" pos:column="47"> <block pos:line="89" pos:column="48">{
      <expr_stmt><expr><name pos:line="90" pos:column="7">pgmajfault<pos:position pos:line="90" pos:column="17"/></name> <operator pos:line="90" pos:column="18">=<pos:position pos:line="90" pos:column="19"/></operator> <name pos:line="90" pos:column="20">counter<pos:position pos:line="90" pos:column="27"/></name></expr>;<pos:position pos:line="90" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><name pos:line="91" pos:column="7">pgfaultvalid<pos:position pos:line="91" pos:column="19"/></name> <operator pos:line="91" pos:column="20">|=<pos:position pos:line="91" pos:column="22"/></operator> <literal type="number" pos:line="91" pos:column="23">0x02<pos:position pos:line="91" pos:column="27"/></literal></expr>;<pos:position pos:line="91" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="92" pos:column="6"/></block></then></if></elseif>

    <comment type="block" pos:line="94" pos:column="5">/*
     * Skip the other statistics if verbose output is disabled.
     */</comment>
    <elseif pos:line="97" pos:column="5">else <if pos:line="97" pos:column="10">if <condition pos:line="97" pos:column="13">(<expr><name pos:line="97" pos:column="14">verbose_output<pos:position pos:line="97" pos:column="28"/></name> <operator pos:line="97" pos:column="29">==<pos:position pos:line="97" pos:column="31"/></operator> <literal type="number" pos:line="97" pos:column="32">0<pos:position pos:line="97" pos:column="33"/></literal></expr>)<pos:position pos:line="97" pos:column="34"/></condition><then pos:line="97" pos:column="34">
      <block type="pseudo"><continue pos:line="98" pos:column="7">continue;<pos:position pos:line="98" pos:column="16"/></continue></block></then></if></elseif>

    <comment type="block" pos:line="100" pos:column="5">/*
     * Number of page allocations, refills, steals and scans. This is collected
     * ``per zone'', i. e. for DMA, DMA32, normal and possibly highmem.
     */</comment>
    <elseif pos:line="104" pos:column="5">else <if pos:line="104" pos:column="10">if <condition pos:line="104" pos:column="13">(<expr><call><name pos:line="104" pos:column="14">strncmp<pos:position pos:line="104" pos:column="21"/></name><argument_list pos:line="104" pos:column="21">(<argument><expr><literal type="string" pos:line="104" pos:column="22">"pgalloc_"<pos:position pos:line="104" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="104" pos:column="34">key<pos:position pos:line="104" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="104" pos:column="39">strlen<pos:position pos:line="104" pos:column="45"/></name><argument_list pos:line="104" pos:column="45">(<argument><expr><literal type="string" pos:line="104" pos:column="46">"pgalloc_"<pos:position pos:line="104" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="104" pos:column="58"/></argument_list></call> <operator pos:line="104" pos:column="59">==<pos:position pos:line="104" pos:column="61"/></operator> <literal type="number" pos:line="104" pos:column="62">0<pos:position pos:line="104" pos:column="63"/></literal></expr>)<pos:position pos:line="104" pos:column="64"/></condition><then pos:line="104" pos:column="64"> <block pos:line="104" pos:column="65">{
      <decl_stmt><decl><type><name pos:line="105" pos:column="7">char<pos:position pos:line="105" pos:column="11"/></name> <modifier pos:line="105" pos:column="12">*<pos:position pos:line="105" pos:column="13"/></modifier></type><name pos:line="105" pos:column="13">inst<pos:position pos:line="105" pos:column="17"/></name> <init pos:line="105" pos:column="18">= <expr><name pos:line="105" pos:column="20">key<pos:position pos:line="105" pos:column="23"/></name> <operator pos:line="105" pos:column="24">+<pos:position pos:line="105" pos:column="25"/></operator> <call><name pos:line="105" pos:column="26">strlen<pos:position pos:line="105" pos:column="32"/></name><argument_list pos:line="105" pos:column="32">(<argument><expr><literal type="string" pos:line="105" pos:column="33">"pgalloc_"<pos:position pos:line="105" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="105" pos:column="45"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="106" pos:column="7">value_t<pos:position pos:line="106" pos:column="14"/></name></type> <name pos:line="106" pos:column="15">value<pos:position pos:line="106" pos:column="20"/></name> <init pos:line="106" pos:column="21">= <expr><block pos:line="106" pos:column="23">{<expr><operator pos:line="106" pos:column="24">.<pos:position pos:line="106" pos:column="25"/></operator><name pos:line="106" pos:column="25">derive<pos:position pos:line="106" pos:column="31"/></name> <operator pos:line="106" pos:column="32">=<pos:position pos:line="106" pos:column="33"/></operator> <name pos:line="106" pos:column="34">counter<pos:position pos:line="106" pos:column="41"/></name></expr>}<pos:position pos:line="106" pos:column="42"/></block></expr></init></decl>;<pos:position pos:line="106" pos:column="43"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="107" pos:column="7">submit_one<pos:position pos:line="107" pos:column="17"/></name><argument_list pos:line="107" pos:column="17">(<argument><expr><name pos:line="107" pos:column="18">inst<pos:position pos:line="107" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="24">"vmpage_action"<pos:position pos:line="107" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="41">"alloc"<pos:position pos:line="107" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="107" pos:column="50">value<pos:position pos:line="107" pos:column="55"/></name></expr></argument>)<pos:position pos:line="107" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="108" pos:column="6"/></block></then></if></elseif> <elseif pos:line="108" pos:column="7">else <if pos:line="108" pos:column="12">if <condition pos:line="108" pos:column="15">(<expr><call><name pos:line="108" pos:column="16">strncmp<pos:position pos:line="108" pos:column="23"/></name><argument_list pos:line="108" pos:column="23">(<argument><expr><literal type="string" pos:line="108" pos:column="24">"pgrefill_"<pos:position pos:line="108" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="108" pos:column="37">key<pos:position pos:line="108" pos:column="40"/></name></expr></argument>, <argument><expr><call><name pos:line="108" pos:column="42">strlen<pos:position pos:line="108" pos:column="48"/></name><argument_list pos:line="108" pos:column="48">(<argument><expr><literal type="string" pos:line="108" pos:column="49">"pgrefill_"<pos:position pos:line="108" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="108" pos:column="62"/></argument_list></call> <operator pos:line="108" pos:column="63">==<pos:position pos:line="108" pos:column="65"/></operator> <literal type="number" pos:line="108" pos:column="66">0<pos:position pos:line="108" pos:column="67"/></literal></expr>)<pos:position pos:line="108" pos:column="68"/></condition><then pos:line="108" pos:column="68"> <block pos:line="108" pos:column="69">{
      <decl_stmt><decl><type><name pos:line="109" pos:column="7">char<pos:position pos:line="109" pos:column="11"/></name> <modifier pos:line="109" pos:column="12">*<pos:position pos:line="109" pos:column="13"/></modifier></type><name pos:line="109" pos:column="13">inst<pos:position pos:line="109" pos:column="17"/></name> <init pos:line="109" pos:column="18">= <expr><name pos:line="109" pos:column="20">key<pos:position pos:line="109" pos:column="23"/></name> <operator pos:line="109" pos:column="24">+<pos:position pos:line="109" pos:column="25"/></operator> <call><name pos:line="109" pos:column="26">strlen<pos:position pos:line="109" pos:column="32"/></name><argument_list pos:line="109" pos:column="32">(<argument><expr><literal type="string" pos:line="109" pos:column="33">"pgrefill_"<pos:position pos:line="109" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="109" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="109" pos:column="46"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="110" pos:column="7">value_t<pos:position pos:line="110" pos:column="14"/></name></type> <name pos:line="110" pos:column="15">value<pos:position pos:line="110" pos:column="20"/></name> <init pos:line="110" pos:column="21">= <expr><block pos:line="110" pos:column="23">{<expr><operator pos:line="110" pos:column="24">.<pos:position pos:line="110" pos:column="25"/></operator><name pos:line="110" pos:column="25">derive<pos:position pos:line="110" pos:column="31"/></name> <operator pos:line="110" pos:column="32">=<pos:position pos:line="110" pos:column="33"/></operator> <name pos:line="110" pos:column="34">counter<pos:position pos:line="110" pos:column="41"/></name></expr>}<pos:position pos:line="110" pos:column="42"/></block></expr></init></decl>;<pos:position pos:line="110" pos:column="43"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="111" pos:column="7">submit_one<pos:position pos:line="111" pos:column="17"/></name><argument_list pos:line="111" pos:column="17">(<argument><expr><name pos:line="111" pos:column="18">inst<pos:position pos:line="111" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="24">"vmpage_action"<pos:position pos:line="111" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="41">"refill"<pos:position pos:line="111" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="111" pos:column="51">value<pos:position pos:line="111" pos:column="56"/></name></expr></argument>)<pos:position pos:line="111" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="112" pos:column="6"/></block></then></if></elseif> <elseif pos:line="112" pos:column="7">else <if pos:line="112" pos:column="12">if <condition pos:line="112" pos:column="15">(<expr><call><name pos:line="112" pos:column="16">strncmp<pos:position pos:line="112" pos:column="23"/></name><argument_list pos:line="112" pos:column="23">(<argument><expr><literal type="string" pos:line="112" pos:column="24">"pgsteal_kswapd_"<pos:position pos:line="112" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="112" pos:column="43">key<pos:position pos:line="112" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="112" pos:column="48">strlen<pos:position pos:line="112" pos:column="54"/></name><argument_list pos:line="112" pos:column="54">(<argument><expr><literal type="string" pos:line="112" pos:column="55">"pgsteal_kswapd_"<pos:position pos:line="112" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="112" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="112" pos:column="74"/></argument_list></call> <operator pos:line="112" pos:column="75">==<pos:position pos:line="112" pos:column="77"/></operator>
               <literal type="number" pos:line="113" pos:column="16">0<pos:position pos:line="113" pos:column="17"/></literal></expr>)<pos:position pos:line="113" pos:column="18"/></condition><then pos:line="113" pos:column="18"> <block pos:line="113" pos:column="19">{
      <decl_stmt><decl><type><name pos:line="114" pos:column="7">char<pos:position pos:line="114" pos:column="11"/></name> <modifier pos:line="114" pos:column="12">*<pos:position pos:line="114" pos:column="13"/></modifier></type><name pos:line="114" pos:column="13">inst<pos:position pos:line="114" pos:column="17"/></name> <init pos:line="114" pos:column="18">= <expr><name pos:line="114" pos:column="20">key<pos:position pos:line="114" pos:column="23"/></name> <operator pos:line="114" pos:column="24">+<pos:position pos:line="114" pos:column="25"/></operator> <call><name pos:line="114" pos:column="26">strlen<pos:position pos:line="114" pos:column="32"/></name><argument_list pos:line="114" pos:column="32">(<argument><expr><literal type="string" pos:line="114" pos:column="33">"pgsteal_kswapd_"<pos:position pos:line="114" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="114" pos:column="52"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="115" pos:column="7">value_t<pos:position pos:line="115" pos:column="14"/></name></type> <name pos:line="115" pos:column="15">value<pos:position pos:line="115" pos:column="20"/></name> <init pos:line="115" pos:column="21">= <expr><block pos:line="115" pos:column="23">{<expr><operator pos:line="115" pos:column="24">.<pos:position pos:line="115" pos:column="25"/></operator><name pos:line="115" pos:column="25">derive<pos:position pos:line="115" pos:column="31"/></name> <operator pos:line="115" pos:column="32">=<pos:position pos:line="115" pos:column="33"/></operator> <name pos:line="115" pos:column="34">counter<pos:position pos:line="115" pos:column="41"/></name></expr>}<pos:position pos:line="115" pos:column="42"/></block></expr></init></decl>;<pos:position pos:line="115" pos:column="43"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="116" pos:column="7">submit_one<pos:position pos:line="116" pos:column="17"/></name><argument_list pos:line="116" pos:column="17">(<argument><expr><name pos:line="116" pos:column="18">inst<pos:position pos:line="116" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="116" pos:column="24">"vmpage_action"<pos:position pos:line="116" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="116" pos:column="41">"steal_kswapd"<pos:position pos:line="116" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="116" pos:column="57">value<pos:position pos:line="116" pos:column="62"/></name></expr></argument>)<pos:position pos:line="116" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="64"/></expr_stmt>
    }<pos:position pos:line="117" pos:column="6"/></block></then></if></elseif> <elseif pos:line="117" pos:column="7">else <if pos:line="117" pos:column="12">if <condition pos:line="117" pos:column="15">(<expr><call><name pos:line="117" pos:column="16">strncmp<pos:position pos:line="117" pos:column="23"/></name><argument_list pos:line="117" pos:column="23">(<argument><expr><literal type="string" pos:line="117" pos:column="24">"pgsteal_direct_"<pos:position pos:line="117" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="117" pos:column="43">key<pos:position pos:line="117" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="117" pos:column="48">strlen<pos:position pos:line="117" pos:column="54"/></name><argument_list pos:line="117" pos:column="54">(<argument><expr><literal type="string" pos:line="117" pos:column="55">"pgsteal_direct_"<pos:position pos:line="117" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="117" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="117" pos:column="74"/></argument_list></call> <operator pos:line="117" pos:column="75">==<pos:position pos:line="117" pos:column="77"/></operator>
               <literal type="number" pos:line="118" pos:column="16">0<pos:position pos:line="118" pos:column="17"/></literal></expr>)<pos:position pos:line="118" pos:column="18"/></condition><then pos:line="118" pos:column="18"> <block pos:line="118" pos:column="19">{
      <decl_stmt><decl><type><name pos:line="119" pos:column="7">char<pos:position pos:line="119" pos:column="11"/></name> <modifier pos:line="119" pos:column="12">*<pos:position pos:line="119" pos:column="13"/></modifier></type><name pos:line="119" pos:column="13">inst<pos:position pos:line="119" pos:column="17"/></name> <init pos:line="119" pos:column="18">= <expr><name pos:line="119" pos:column="20">key<pos:position pos:line="119" pos:column="23"/></name> <operator pos:line="119" pos:column="24">+<pos:position pos:line="119" pos:column="25"/></operator> <call><name pos:line="119" pos:column="26">strlen<pos:position pos:line="119" pos:column="32"/></name><argument_list pos:line="119" pos:column="32">(<argument><expr><literal type="string" pos:line="119" pos:column="33">"pgsteal_direct_"<pos:position pos:line="119" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="119" pos:column="52"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="120" pos:column="7">value_t<pos:position pos:line="120" pos:column="14"/></name></type> <name pos:line="120" pos:column="15">value<pos:position pos:line="120" pos:column="20"/></name> <init pos:line="120" pos:column="21">= <expr><block pos:line="120" pos:column="23">{<expr><operator pos:line="120" pos:column="24">.<pos:position pos:line="120" pos:column="25"/></operator><name pos:line="120" pos:column="25">derive<pos:position pos:line="120" pos:column="31"/></name> <operator pos:line="120" pos:column="32">=<pos:position pos:line="120" pos:column="33"/></operator> <name pos:line="120" pos:column="34">counter<pos:position pos:line="120" pos:column="41"/></name></expr>}<pos:position pos:line="120" pos:column="42"/></block></expr></init></decl>;<pos:position pos:line="120" pos:column="43"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="121" pos:column="7">submit_one<pos:position pos:line="121" pos:column="17"/></name><argument_list pos:line="121" pos:column="17">(<argument><expr><name pos:line="121" pos:column="18">inst<pos:position pos:line="121" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="121" pos:column="24">"vmpage_action"<pos:position pos:line="121" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="121" pos:column="41">"steal_direct"<pos:position pos:line="121" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="121" pos:column="57">value<pos:position pos:line="121" pos:column="62"/></name></expr></argument>)<pos:position pos:line="121" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="64"/></expr_stmt>
    }<pos:position pos:line="122" pos:column="6"/></block></then></if></elseif>
    <comment type="block" pos:line="123" pos:column="5">/* For backwards compatibility (somewhen before 4.2.3) */</comment>
    <elseif pos:line="124" pos:column="5">else <if pos:line="124" pos:column="10">if <condition pos:line="124" pos:column="13">(<expr><call><name pos:line="124" pos:column="14">strncmp<pos:position pos:line="124" pos:column="21"/></name><argument_list pos:line="124" pos:column="21">(<argument><expr><literal type="string" pos:line="124" pos:column="22">"pgsteal_"<pos:position pos:line="124" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="124" pos:column="34">key<pos:position pos:line="124" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="124" pos:column="39">strlen<pos:position pos:line="124" pos:column="45"/></name><argument_list pos:line="124" pos:column="45">(<argument><expr><literal type="string" pos:line="124" pos:column="46">"pgsteal_"<pos:position pos:line="124" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="124" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="124" pos:column="58"/></argument_list></call> <operator pos:line="124" pos:column="59">==<pos:position pos:line="124" pos:column="61"/></operator> <literal type="number" pos:line="124" pos:column="62">0<pos:position pos:line="124" pos:column="63"/></literal></expr>)<pos:position pos:line="124" pos:column="64"/></condition><then pos:line="124" pos:column="64"> <block pos:line="124" pos:column="65">{
      <decl_stmt><decl><type><name pos:line="125" pos:column="7">char<pos:position pos:line="125" pos:column="11"/></name> <modifier pos:line="125" pos:column="12">*<pos:position pos:line="125" pos:column="13"/></modifier></type><name pos:line="125" pos:column="13">inst<pos:position pos:line="125" pos:column="17"/></name> <init pos:line="125" pos:column="18">= <expr><name pos:line="125" pos:column="20">key<pos:position pos:line="125" pos:column="23"/></name> <operator pos:line="125" pos:column="24">+<pos:position pos:line="125" pos:column="25"/></operator> <call><name pos:line="125" pos:column="26">strlen<pos:position pos:line="125" pos:column="32"/></name><argument_list pos:line="125" pos:column="32">(<argument><expr><literal type="string" pos:line="125" pos:column="33">"pgsteal_"<pos:position pos:line="125" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="125" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="125" pos:column="45"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="126" pos:column="7">value_t<pos:position pos:line="126" pos:column="14"/></name></type> <name pos:line="126" pos:column="15">value<pos:position pos:line="126" pos:column="20"/></name> <init pos:line="126" pos:column="21">= <expr><block pos:line="126" pos:column="23">{<expr><operator pos:line="126" pos:column="24">.<pos:position pos:line="126" pos:column="25"/></operator><name pos:line="126" pos:column="25">derive<pos:position pos:line="126" pos:column="31"/></name> <operator pos:line="126" pos:column="32">=<pos:position pos:line="126" pos:column="33"/></operator> <name pos:line="126" pos:column="34">counter<pos:position pos:line="126" pos:column="41"/></name></expr>}<pos:position pos:line="126" pos:column="42"/></block></expr></init></decl>;<pos:position pos:line="126" pos:column="43"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="127" pos:column="7">submit_one<pos:position pos:line="127" pos:column="17"/></name><argument_list pos:line="127" pos:column="17">(<argument><expr><name pos:line="127" pos:column="18">inst<pos:position pos:line="127" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="127" pos:column="24">"vmpage_action"<pos:position pos:line="127" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="127" pos:column="41">"steal"<pos:position pos:line="127" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="127" pos:column="50">value<pos:position pos:line="127" pos:column="55"/></name></expr></argument>)<pos:position pos:line="127" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="128" pos:column="6"/></block></then></if></elseif> <elseif pos:line="128" pos:column="7">else <if pos:line="128" pos:column="12">if <condition pos:line="128" pos:column="15">(<expr><call><name pos:line="128" pos:column="16">strncmp<pos:position pos:line="128" pos:column="23"/></name><argument_list pos:line="128" pos:column="23">(<argument><expr><literal type="string" pos:line="128" pos:column="24">"pgscan_kswapd_"<pos:position pos:line="128" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="128" pos:column="42">key<pos:position pos:line="128" pos:column="45"/></name></expr></argument>, <argument><expr><call><name pos:line="128" pos:column="47">strlen<pos:position pos:line="128" pos:column="53"/></name><argument_list pos:line="128" pos:column="53">(<argument><expr><literal type="string" pos:line="128" pos:column="54">"pgscan_kswapd_"<pos:position pos:line="128" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="128" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="128" pos:column="72"/></argument_list></call> <operator pos:line="128" pos:column="73">==<pos:position pos:line="128" pos:column="75"/></operator> <literal type="number" pos:line="128" pos:column="76">0<pos:position pos:line="128" pos:column="77"/></literal></expr>)<pos:position pos:line="128" pos:column="78"/></condition><then pos:line="128" pos:column="78"> <block pos:line="128" pos:column="79">{
      <decl_stmt><decl><type><name pos:line="129" pos:column="7">char<pos:position pos:line="129" pos:column="11"/></name> <modifier pos:line="129" pos:column="12">*<pos:position pos:line="129" pos:column="13"/></modifier></type><name pos:line="129" pos:column="13">inst<pos:position pos:line="129" pos:column="17"/></name> <init pos:line="129" pos:column="18">= <expr><name pos:line="129" pos:column="20">key<pos:position pos:line="129" pos:column="23"/></name> <operator pos:line="129" pos:column="24">+<pos:position pos:line="129" pos:column="25"/></operator> <call><name pos:line="129" pos:column="26">strlen<pos:position pos:line="129" pos:column="32"/></name><argument_list pos:line="129" pos:column="32">(<argument><expr><literal type="string" pos:line="129" pos:column="33">"pgscan_kswapd_"<pos:position pos:line="129" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="129" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="129" pos:column="51"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="130" pos:column="7">value_t<pos:position pos:line="130" pos:column="14"/></name></type> <name pos:line="130" pos:column="15">value<pos:position pos:line="130" pos:column="20"/></name> <init pos:line="130" pos:column="21">= <expr><block pos:line="130" pos:column="23">{<expr><operator pos:line="130" pos:column="24">.<pos:position pos:line="130" pos:column="25"/></operator><name pos:line="130" pos:column="25">derive<pos:position pos:line="130" pos:column="31"/></name> <operator pos:line="130" pos:column="32">=<pos:position pos:line="130" pos:column="33"/></operator> <name pos:line="130" pos:column="34">counter<pos:position pos:line="130" pos:column="41"/></name></expr>}<pos:position pos:line="130" pos:column="42"/></block></expr></init></decl>;<pos:position pos:line="130" pos:column="43"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="131" pos:column="7">submit_one<pos:position pos:line="131" pos:column="17"/></name><argument_list pos:line="131" pos:column="17">(<argument><expr><name pos:line="131" pos:column="18">inst<pos:position pos:line="131" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="131" pos:column="24">"vmpage_action"<pos:position pos:line="131" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="131" pos:column="41">"scan_kswapd"<pos:position pos:line="131" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="131" pos:column="56">value<pos:position pos:line="131" pos:column="61"/></name></expr></argument>)<pos:position pos:line="131" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="63"/></expr_stmt>
    }<pos:position pos:line="132" pos:column="6"/></block></then></if></elseif> <elseif pos:line="132" pos:column="7">else <if pos:line="132" pos:column="12">if <condition pos:line="132" pos:column="15">(<expr><call><name pos:line="132" pos:column="16">strncmp<pos:position pos:line="132" pos:column="23"/></name><argument_list pos:line="132" pos:column="23">(<argument><expr><literal type="string" pos:line="132" pos:column="24">"pgscan_direct_"<pos:position pos:line="132" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="132" pos:column="42">key<pos:position pos:line="132" pos:column="45"/></name></expr></argument>, <argument><expr><call><name pos:line="132" pos:column="47">strlen<pos:position pos:line="132" pos:column="53"/></name><argument_list pos:line="132" pos:column="53">(<argument><expr><literal type="string" pos:line="132" pos:column="54">"pgscan_direct_"<pos:position pos:line="132" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="132" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="132" pos:column="72"/></argument_list></call> <operator pos:line="132" pos:column="73">==<pos:position pos:line="132" pos:column="75"/></operator> <literal type="number" pos:line="132" pos:column="76">0<pos:position pos:line="132" pos:column="77"/></literal></expr>)<pos:position pos:line="132" pos:column="78"/></condition><then pos:line="132" pos:column="78"> <block pos:line="132" pos:column="79">{
      <decl_stmt><decl><type><name pos:line="133" pos:column="7">char<pos:position pos:line="133" pos:column="11"/></name> <modifier pos:line="133" pos:column="12">*<pos:position pos:line="133" pos:column="13"/></modifier></type><name pos:line="133" pos:column="13">inst<pos:position pos:line="133" pos:column="17"/></name> <init pos:line="133" pos:column="18">= <expr><name pos:line="133" pos:column="20">key<pos:position pos:line="133" pos:column="23"/></name> <operator pos:line="133" pos:column="24">+<pos:position pos:line="133" pos:column="25"/></operator> <call><name pos:line="133" pos:column="26">strlen<pos:position pos:line="133" pos:column="32"/></name><argument_list pos:line="133" pos:column="32">(<argument><expr><literal type="string" pos:line="133" pos:column="33">"pgscan_direct_"<pos:position pos:line="133" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="133" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="133" pos:column="51"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="134" pos:column="7">value_t<pos:position pos:line="134" pos:column="14"/></name></type> <name pos:line="134" pos:column="15">value<pos:position pos:line="134" pos:column="20"/></name> <init pos:line="134" pos:column="21">= <expr><block pos:line="134" pos:column="23">{<expr><operator pos:line="134" pos:column="24">.<pos:position pos:line="134" pos:column="25"/></operator><name pos:line="134" pos:column="25">derive<pos:position pos:line="134" pos:column="31"/></name> <operator pos:line="134" pos:column="32">=<pos:position pos:line="134" pos:column="33"/></operator> <name pos:line="134" pos:column="34">counter<pos:position pos:line="134" pos:column="41"/></name></expr>}<pos:position pos:line="134" pos:column="42"/></block></expr></init></decl>;<pos:position pos:line="134" pos:column="43"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="135" pos:column="7">submit_one<pos:position pos:line="135" pos:column="17"/></name><argument_list pos:line="135" pos:column="17">(<argument><expr><name pos:line="135" pos:column="18">inst<pos:position pos:line="135" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="135" pos:column="24">"vmpage_action"<pos:position pos:line="135" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="135" pos:column="41">"scan_direct"<pos:position pos:line="135" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="135" pos:column="56">value<pos:position pos:line="135" pos:column="61"/></name></expr></argument>)<pos:position pos:line="135" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="63"/></expr_stmt>
    }<pos:position pos:line="136" pos:column="6"/></block></then></if></elseif>

    <comment type="block" pos:line="138" pos:column="5">/*
     * Page action
     *
     * number of pages moved to the active or inactive lists and freed, i. e.
     * removed from either list.
     */</comment>
    <elseif pos:line="144" pos:column="5">else <if pos:line="144" pos:column="10">if <condition pos:line="144" pos:column="13">(<expr><call><name pos:line="144" pos:column="14">strcmp<pos:position pos:line="144" pos:column="20"/></name><argument_list pos:line="144" pos:column="20">(<argument><expr><literal type="string" pos:line="144" pos:column="21">"pgfree"<pos:position pos:line="144" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="144" pos:column="31">key<pos:position pos:line="144" pos:column="34"/></name></expr></argument>)<pos:position pos:line="144" pos:column="35"/></argument_list></call> <operator pos:line="144" pos:column="36">==<pos:position pos:line="144" pos:column="38"/></operator> <literal type="number" pos:line="144" pos:column="39">0<pos:position pos:line="144" pos:column="40"/></literal></expr>)<pos:position pos:line="144" pos:column="41"/></condition><then pos:line="144" pos:column="41"> <block pos:line="144" pos:column="42">{
      <decl_stmt><decl><type><name pos:line="145" pos:column="7">value_t<pos:position pos:line="145" pos:column="14"/></name></type> <name pos:line="145" pos:column="15">value<pos:position pos:line="145" pos:column="20"/></name> <init pos:line="145" pos:column="21">= <expr><block pos:line="145" pos:column="23">{<expr><operator pos:line="145" pos:column="24">.<pos:position pos:line="145" pos:column="25"/></operator><name pos:line="145" pos:column="25">derive<pos:position pos:line="145" pos:column="31"/></name> <operator pos:line="145" pos:column="32">=<pos:position pos:line="145" pos:column="33"/></operator> <name pos:line="145" pos:column="34">counter<pos:position pos:line="145" pos:column="41"/></name></expr>}<pos:position pos:line="145" pos:column="42"/></block></expr></init></decl>;<pos:position pos:line="145" pos:column="43"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="146" pos:column="7">submit_one<pos:position pos:line="146" pos:column="17"/></name><argument_list pos:line="146" pos:column="17">(<argument><expr><name pos:line="146" pos:column="18">NULL<pos:position pos:line="146" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="146" pos:column="24">"vmpage_action"<pos:position pos:line="146" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="146" pos:column="41">"free"<pos:position pos:line="146" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="146" pos:column="49">value<pos:position pos:line="146" pos:column="54"/></name></expr></argument>)<pos:position pos:line="146" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="56"/></expr_stmt>
    }<pos:position pos:line="147" pos:column="6"/></block></then></if></elseif> <elseif pos:line="147" pos:column="7">else <if pos:line="147" pos:column="12">if <condition pos:line="147" pos:column="15">(<expr><call><name pos:line="147" pos:column="16">strcmp<pos:position pos:line="147" pos:column="22"/></name><argument_list pos:line="147" pos:column="22">(<argument><expr><literal type="string" pos:line="147" pos:column="23">"pgactivate"<pos:position pos:line="147" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="147" pos:column="37">key<pos:position pos:line="147" pos:column="40"/></name></expr></argument>)<pos:position pos:line="147" pos:column="41"/></argument_list></call> <operator pos:line="147" pos:column="42">==<pos:position pos:line="147" pos:column="44"/></operator> <literal type="number" pos:line="147" pos:column="45">0<pos:position pos:line="147" pos:column="46"/></literal></expr>)<pos:position pos:line="147" pos:column="47"/></condition><then pos:line="147" pos:column="47"> <block pos:line="147" pos:column="48">{
      <decl_stmt><decl><type><name pos:line="148" pos:column="7">value_t<pos:position pos:line="148" pos:column="14"/></name></type> <name pos:line="148" pos:column="15">value<pos:position pos:line="148" pos:column="20"/></name> <init pos:line="148" pos:column="21">= <expr><block pos:line="148" pos:column="23">{<expr><operator pos:line="148" pos:column="24">.<pos:position pos:line="148" pos:column="25"/></operator><name pos:line="148" pos:column="25">derive<pos:position pos:line="148" pos:column="31"/></name> <operator pos:line="148" pos:column="32">=<pos:position pos:line="148" pos:column="33"/></operator> <name pos:line="148" pos:column="34">counter<pos:position pos:line="148" pos:column="41"/></name></expr>}<pos:position pos:line="148" pos:column="42"/></block></expr></init></decl>;<pos:position pos:line="148" pos:column="43"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="149" pos:column="7">submit_one<pos:position pos:line="149" pos:column="17"/></name><argument_list pos:line="149" pos:column="17">(<argument><expr><name pos:line="149" pos:column="18">NULL<pos:position pos:line="149" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="149" pos:column="24">"vmpage_action"<pos:position pos:line="149" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="149" pos:column="41">"activate"<pos:position pos:line="149" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="149" pos:column="53">value<pos:position pos:line="149" pos:column="58"/></name></expr></argument>)<pos:position pos:line="149" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="150" pos:column="6"/></block></then></if></elseif> <elseif pos:line="150" pos:column="7">else <if pos:line="150" pos:column="12">if <condition pos:line="150" pos:column="15">(<expr><call><name pos:line="150" pos:column="16">strcmp<pos:position pos:line="150" pos:column="22"/></name><argument_list pos:line="150" pos:column="22">(<argument><expr><literal type="string" pos:line="150" pos:column="23">"pgdeactivate"<pos:position pos:line="150" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="150" pos:column="39">key<pos:position pos:line="150" pos:column="42"/></name></expr></argument>)<pos:position pos:line="150" pos:column="43"/></argument_list></call> <operator pos:line="150" pos:column="44">==<pos:position pos:line="150" pos:column="46"/></operator> <literal type="number" pos:line="150" pos:column="47">0<pos:position pos:line="150" pos:column="48"/></literal></expr>)<pos:position pos:line="150" pos:column="49"/></condition><then pos:line="150" pos:column="49"> <block pos:line="150" pos:column="50">{
      <decl_stmt><decl><type><name pos:line="151" pos:column="7">value_t<pos:position pos:line="151" pos:column="14"/></name></type> <name pos:line="151" pos:column="15">value<pos:position pos:line="151" pos:column="20"/></name> <init pos:line="151" pos:column="21">= <expr><block pos:line="151" pos:column="23">{<expr><operator pos:line="151" pos:column="24">.<pos:position pos:line="151" pos:column="25"/></operator><name pos:line="151" pos:column="25">derive<pos:position pos:line="151" pos:column="31"/></name> <operator pos:line="151" pos:column="32">=<pos:position pos:line="151" pos:column="33"/></operator> <name pos:line="151" pos:column="34">counter<pos:position pos:line="151" pos:column="41"/></name></expr>}<pos:position pos:line="151" pos:column="42"/></block></expr></init></decl>;<pos:position pos:line="151" pos:column="43"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="152" pos:column="7">submit_one<pos:position pos:line="152" pos:column="17"/></name><argument_list pos:line="152" pos:column="17">(<argument><expr><name pos:line="152" pos:column="18">NULL<pos:position pos:line="152" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="152" pos:column="24">"vmpage_action"<pos:position pos:line="152" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="152" pos:column="41">"deactivate"<pos:position pos:line="152" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="152" pos:column="55">value<pos:position pos:line="152" pos:column="60"/></name></expr></argument>)<pos:position pos:line="152" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="153" pos:column="6"/></block></then></if></elseif></if>
  }<pos:position pos:line="154" pos:column="4"/></block></while> <comment type="block" pos:line="154" pos:column="5">/* while (fgets) */</comment>

  <expr_stmt><expr><call><name pos:line="156" pos:column="3">fclose<pos:position pos:line="156" pos:column="9"/></name><argument_list pos:line="156" pos:column="9">(<argument><expr><name pos:line="156" pos:column="10">fh<pos:position pos:line="156" pos:column="12"/></name></expr></argument>)<pos:position pos:line="156" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><name pos:line="157" pos:column="3">fh<pos:position pos:line="157" pos:column="5"/></name> <operator pos:line="157" pos:column="6">=<pos:position pos:line="157" pos:column="7"/></operator> <name pos:line="157" pos:column="8">NULL<pos:position pos:line="157" pos:column="12"/></name></expr>;<pos:position pos:line="157" pos:column="13"/></expr_stmt>

  <if pos:line="159" pos:column="3">if <condition pos:line="159" pos:column="6">(<expr><name pos:line="159" pos:column="7">pgfaultvalid<pos:position pos:line="159" pos:column="19"/></name> <operator pos:line="159" pos:column="20">==<pos:position pos:line="159" pos:column="22"/></operator> <literal type="number" pos:line="159" pos:column="23">0x03<pos:position pos:line="159" pos:column="27"/></literal></expr>)<pos:position pos:line="159" pos:column="28"/></condition><then pos:line="159" pos:column="28">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="160" pos:column="5">submit_two<pos:position pos:line="160" pos:column="15"/></name><argument_list pos:line="160" pos:column="15">(<argument><expr><name pos:line="160" pos:column="16">NULL<pos:position pos:line="160" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="160" pos:column="22">"vmpage_faults"<pos:position pos:line="160" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="160" pos:column="39">NULL<pos:position pos:line="160" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="45">pgfault<pos:position pos:line="160" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="54">pgmajfault<pos:position pos:line="160" pos:column="64"/></name></expr></argument>)<pos:position pos:line="160" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="66"/></expr_stmt></block></then></if>

  <if pos:line="162" pos:column="3">if <condition pos:line="162" pos:column="6">(<expr><name pos:line="162" pos:column="7">pgpgvalid<pos:position pos:line="162" pos:column="16"/></name> <operator pos:line="162" pos:column="17">==<pos:position pos:line="162" pos:column="19"/></operator> <literal type="number" pos:line="162" pos:column="20">0x03<pos:position pos:line="162" pos:column="24"/></literal></expr>)<pos:position pos:line="162" pos:column="25"/></condition><then pos:line="162" pos:column="25">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="163" pos:column="5">submit_two<pos:position pos:line="163" pos:column="15"/></name><argument_list pos:line="163" pos:column="15">(<argument><expr><name pos:line="163" pos:column="16">NULL<pos:position pos:line="163" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="163" pos:column="22">"vmpage_io"<pos:position pos:line="163" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="163" pos:column="35">"memory"<pos:position pos:line="163" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="163" pos:column="45">pgpgin<pos:position pos:line="163" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="163" pos:column="53">pgpgout<pos:position pos:line="163" pos:column="60"/></name></expr></argument>)<pos:position pos:line="163" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="62"/></expr_stmt></block></then></if>

  <if pos:line="165" pos:column="3">if <condition pos:line="165" pos:column="6">(<expr><name pos:line="165" pos:column="7">pswpvalid<pos:position pos:line="165" pos:column="16"/></name> <operator pos:line="165" pos:column="17">==<pos:position pos:line="165" pos:column="19"/></operator> <literal type="number" pos:line="165" pos:column="20">0x03<pos:position pos:line="165" pos:column="24"/></literal></expr>)<pos:position pos:line="165" pos:column="25"/></condition><then pos:line="165" pos:column="25">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="166" pos:column="5">submit_two<pos:position pos:line="166" pos:column="15"/></name><argument_list pos:line="166" pos:column="15">(<argument><expr><name pos:line="166" pos:column="16">NULL<pos:position pos:line="166" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="166" pos:column="22">"vmpage_io"<pos:position pos:line="166" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="166" pos:column="35">"swap"<pos:position pos:line="166" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="166" pos:column="43">pswpin<pos:position pos:line="166" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="51">pswpout<pos:position pos:line="166" pos:column="58"/></name></expr></argument>)<pos:position pos:line="166" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="60"/></expr_stmt></block></then></if>
<cpp:endif pos:line="167" pos:column="1">#<cpp:directive pos:line="167" pos:column="2">endif<pos:position pos:line="167" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="167" pos:column="8">/* KERNEL_LINUX */</comment>

  <return pos:line="169" pos:column="3">return <expr><operator pos:line="169" pos:column="10">(<pos:position pos:line="169" pos:column="11"/></operator><literal type="number" pos:line="169" pos:column="11">0<pos:position pos:line="169" pos:column="12"/></literal><operator pos:line="169" pos:column="12">)<pos:position pos:line="169" pos:column="13"/></operator></expr>;<pos:position pos:line="169" pos:column="14"/></return>
}<pos:position pos:line="170" pos:column="2"/></block></function></unit>

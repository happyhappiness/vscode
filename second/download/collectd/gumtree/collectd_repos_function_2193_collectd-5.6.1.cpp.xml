<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2193_collectd-5.6.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">lookup_search<pos:position pos:line="1" pos:column="18"/></name> <parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">lookup_t<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">obj<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="35">/* {{{ */</comment>
    <parameter><decl><type><name pos:line="2" pos:column="5">data_set_t<pos:position pos:line="2" pos:column="15"/></name> <specifier pos:line="2" pos:column="16">const<pos:position pos:line="2" pos:column="21"/></specifier> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">ds<pos:position pos:line="2" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="27">value_list_t<pos:position pos:line="2" pos:column="39"/></name> <specifier pos:line="2" pos:column="40">const<pos:position pos:line="2" pos:column="45"/></specifier> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">vl<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">by_type_entry_t<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">by_type<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><name pos:line="4" pos:column="30">NULL<pos:position pos:line="4" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">user_class_list_t<pos:position pos:line="5" pos:column="20"/></name> <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">user_class_list<pos:position pos:line="5" pos:column="37"/></name> <init pos:line="5" pos:column="38">= <expr><name pos:line="5" pos:column="40">NULL<pos:position pos:line="5" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">retval<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <expr><literal type="number" pos:line="6" pos:column="16">0<pos:position pos:line="6" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">status<pos:position pos:line="7" pos:column="13"/></name></decl>;<pos:position pos:line="7" pos:column="14"/></decl_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">(<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">obj<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">==<pos:position pos:line="9" pos:column="14"/></operator> <name pos:line="9" pos:column="15">NULL<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">)<pos:position pos:line="9" pos:column="20"/></operator> <operator pos:line="9" pos:column="21">||<pos:position pos:line="9" pos:column="23"/></operator> <operator pos:line="9" pos:column="24">(<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="25">ds<pos:position pos:line="9" pos:column="27"/></name> <operator pos:line="9" pos:column="28">==<pos:position pos:line="9" pos:column="30"/></operator> <name pos:line="9" pos:column="31">NULL<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">)<pos:position pos:line="9" pos:column="36"/></operator> <operator pos:line="9" pos:column="37">||<pos:position pos:line="9" pos:column="39"/></operator> <operator pos:line="9" pos:column="40">(<pos:position pos:line="9" pos:column="41"/></operator><name pos:line="9" pos:column="41">vl<pos:position pos:line="9" pos:column="43"/></name> <operator pos:line="9" pos:column="44">==<pos:position pos:line="9" pos:column="46"/></operator> <name pos:line="9" pos:column="47">NULL<pos:position pos:line="9" pos:column="51"/></name><operator pos:line="9" pos:column="51">)<pos:position pos:line="9" pos:column="52"/></operator></expr>)<pos:position pos:line="9" pos:column="53"/></condition><then pos:line="9" pos:column="53">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">(<pos:position pos:line="10" pos:column="13"/></operator><operator pos:line="10" pos:column="13">-<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">EINVAL<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">)<pos:position pos:line="10" pos:column="21"/></operator></expr>;<pos:position pos:line="10" pos:column="22"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="12" pos:column="3">by_type<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">=<pos:position pos:line="12" pos:column="12"/></operator> <call><name pos:line="12" pos:column="13">lu_search_by_type<pos:position pos:line="12" pos:column="30"/></name> <argument_list pos:line="12" pos:column="31">(<argument><expr><name pos:line="12" pos:column="32">obj<pos:position pos:line="12" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="37">vl<pos:position pos:line="12" pos:column="39"/></name><operator pos:line="12" pos:column="39">-&gt;<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="41">type<pos:position pos:line="12" pos:column="45"/></name></name></expr></argument>, <comment type="block" pos:line="12" pos:column="47">/* allocate = */</comment> <argument><expr><literal type="number" pos:line="12" pos:column="64">0<pos:position pos:line="12" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="67"/></expr_stmt>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">by_type<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">==<pos:position pos:line="13" pos:column="17"/></operator> <name pos:line="13" pos:column="18">NULL<pos:position pos:line="13" pos:column="22"/></name></expr>)<pos:position pos:line="13" pos:column="23"/></condition><then pos:line="13" pos:column="23">
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">(<pos:position pos:line="14" pos:column="13"/></operator><literal type="number" pos:line="14" pos:column="13">0<pos:position pos:line="14" pos:column="14"/></literal><operator pos:line="14" pos:column="14">)<pos:position pos:line="14" pos:column="15"/></operator></expr>;<pos:position pos:line="14" pos:column="16"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="16" pos:column="3">status<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">=<pos:position pos:line="16" pos:column="11"/></operator> <call><name pos:line="16" pos:column="12">c_avl_get<pos:position pos:line="16" pos:column="21"/></name> <argument_list pos:line="16" pos:column="22">(<argument><expr><name><name pos:line="16" pos:column="23">by_type<pos:position pos:line="16" pos:column="30"/></name><operator pos:line="16" pos:column="30">-&gt;<pos:position pos:line="16" pos:column="35"/></operator><name pos:line="16" pos:column="32">by_plugin_tree<pos:position pos:line="16" pos:column="46"/></name></name></expr></argument>,
      <argument><expr><name><name pos:line="17" pos:column="7">vl<pos:position pos:line="17" pos:column="9"/></name><operator pos:line="17" pos:column="9">-&gt;<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="11">plugin<pos:position pos:line="17" pos:column="17"/></name></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="19">(<pos:position pos:line="17" pos:column="20"/></operator><name pos:line="17" pos:column="20">void<pos:position pos:line="17" pos:column="24"/></name> <operator pos:line="17" pos:column="25">*<pos:position pos:line="17" pos:column="26"/></operator><operator pos:line="17" pos:column="26">)<pos:position pos:line="17" pos:column="27"/></operator> <operator pos:line="17" pos:column="28">&amp;<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="29">user_class_list<pos:position pos:line="17" pos:column="44"/></name></expr></argument>)<pos:position pos:line="17" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="46"/></expr_stmt>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name pos:line="18" pos:column="7">status<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">==<pos:position pos:line="18" pos:column="16"/></operator> <literal type="number" pos:line="18" pos:column="17">0<pos:position pos:line="18" pos:column="18"/></literal></expr>)<pos:position pos:line="18" pos:column="19"/></condition><then pos:line="18" pos:column="19">
  <block pos:line="19" pos:column="3">{
    <expr_stmt><expr><name pos:line="20" pos:column="5">status<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">=<pos:position pos:line="20" pos:column="13"/></operator> <call><name pos:line="20" pos:column="14">lu_handle_user_class_list<pos:position pos:line="20" pos:column="39"/></name> <argument_list pos:line="20" pos:column="40">(<argument><expr><name pos:line="20" pos:column="41">obj<pos:position pos:line="20" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="46">ds<pos:position pos:line="20" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="50">vl<pos:position pos:line="20" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="54">user_class_list<pos:position pos:line="20" pos:column="69"/></name></expr></argument>)<pos:position pos:line="20" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="71"/></expr_stmt>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">status<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">&lt;<pos:position pos:line="21" pos:column="20"/></operator> <literal type="number" pos:line="21" pos:column="18">0<pos:position pos:line="21" pos:column="19"/></literal></expr>)<pos:position pos:line="21" pos:column="20"/></condition><then pos:line="21" pos:column="20">
      <block type="pseudo"><return pos:line="22" pos:column="7">return <expr><operator pos:line="22" pos:column="14">(<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="15">status<pos:position pos:line="22" pos:column="21"/></name><operator pos:line="22" pos:column="21">)<pos:position pos:line="22" pos:column="22"/></operator></expr>;<pos:position pos:line="22" pos:column="23"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="23" pos:column="5">retval<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">+=<pos:position pos:line="23" pos:column="14"/></operator> <name pos:line="23" pos:column="15">status<pos:position pos:line="23" pos:column="21"/></name></expr>;<pos:position pos:line="23" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>

  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><name><name pos:line="26" pos:column="7">by_type<pos:position pos:line="26" pos:column="14"/></name><operator pos:line="26" pos:column="14">-&gt;<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="16">wildcard_plugin_list<pos:position pos:line="26" pos:column="36"/></name></name> <operator pos:line="26" pos:column="37">!=<pos:position pos:line="26" pos:column="39"/></operator> <name pos:line="26" pos:column="40">NULL<pos:position pos:line="26" pos:column="44"/></name></expr>)<pos:position pos:line="26" pos:column="45"/></condition><then pos:line="26" pos:column="45">
  <block pos:line="27" pos:column="3">{
    <expr_stmt><expr><name pos:line="28" pos:column="5">status<pos:position pos:line="28" pos:column="11"/></name> <operator pos:line="28" pos:column="12">=<pos:position pos:line="28" pos:column="13"/></operator> <call><name pos:line="28" pos:column="14">lu_handle_user_class_list<pos:position pos:line="28" pos:column="39"/></name> <argument_list pos:line="28" pos:column="40">(<argument><expr><name pos:line="28" pos:column="41">obj<pos:position pos:line="28" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="46">ds<pos:position pos:line="28" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="50">vl<pos:position pos:line="28" pos:column="52"/></name></expr></argument>,
        <argument><expr><name><name pos:line="29" pos:column="9">by_type<pos:position pos:line="29" pos:column="16"/></name><operator pos:line="29" pos:column="16">-&gt;<pos:position pos:line="29" pos:column="21"/></operator><name pos:line="29" pos:column="18">wildcard_plugin_list<pos:position pos:line="29" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="40"/></expr_stmt>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name pos:line="30" pos:column="9">status<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">&lt;<pos:position pos:line="30" pos:column="20"/></operator> <literal type="number" pos:line="30" pos:column="18">0<pos:position pos:line="30" pos:column="19"/></literal></expr>)<pos:position pos:line="30" pos:column="20"/></condition><then pos:line="30" pos:column="20">
      <block type="pseudo"><return pos:line="31" pos:column="7">return <expr><operator pos:line="31" pos:column="14">(<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="15">status<pos:position pos:line="31" pos:column="21"/></name><operator pos:line="31" pos:column="21">)<pos:position pos:line="31" pos:column="22"/></operator></expr>;<pos:position pos:line="31" pos:column="23"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="32" pos:column="5">retval<pos:position pos:line="32" pos:column="11"/></name> <operator pos:line="32" pos:column="12">+=<pos:position pos:line="32" pos:column="14"/></operator> <name pos:line="32" pos:column="15">status<pos:position pos:line="32" pos:column="21"/></name></expr>;<pos:position pos:line="32" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="33" pos:column="4"/></block></then></if>

  <return pos:line="35" pos:column="3">return <expr><operator pos:line="35" pos:column="10">(<pos:position pos:line="35" pos:column="11"/></operator><name pos:line="35" pos:column="11">retval<pos:position pos:line="35" pos:column="17"/></name><operator pos:line="35" pos:column="17">)<pos:position pos:line="35" pos:column="18"/></operator></expr>;<pos:position pos:line="35" pos:column="19"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_154_collectd-4.8.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">srrd_create<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">filename<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="47">/* {{{ */</comment>
    <parameter><decl><type><name pos:line="2" pos:column="5">unsigned<pos:position pos:line="2" pos:column="13"/></name> <name pos:line="2" pos:column="14">long<pos:position pos:line="2" pos:column="18"/></name></type> <name pos:line="2" pos:column="19">pdp_step<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="29">time_t<pos:position pos:line="2" pos:column="35"/></name></type> <name pos:line="2" pos:column="36">last_up<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">argc<pos:position pos:line="3" pos:column="13"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="15">const<pos:position pos:line="3" pos:column="20"/></specifier> <name pos:line="3" pos:column="21">char<pos:position pos:line="3" pos:column="25"/></name> <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier><modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type><name pos:line="3" pos:column="28">argv<pos:position pos:line="3" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="33"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">status<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">new_argc<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier><modifier pos:line="8" pos:column="9">*<pos:position pos:line="8" pos:column="10"/></modifier></type><name pos:line="8" pos:column="10">new_argv<pos:position pos:line="8" pos:column="18"/></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name></type> <name><name pos:line="10" pos:column="8">pdp_step_str<pos:position pos:line="10" pos:column="20"/></name><index pos:line="10" pos:column="20">[<expr><literal type="number" pos:line="10" pos:column="21">16<pos:position pos:line="10" pos:column="23"/></literal></expr>]<pos:position pos:line="10" pos:column="24"/></index></name></decl>;<pos:position pos:line="10" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name></type> <name><name pos:line="11" pos:column="8">last_up_str<pos:position pos:line="11" pos:column="19"/></name><index pos:line="11" pos:column="19">[<expr><literal type="number" pos:line="11" pos:column="20">16<pos:position pos:line="11" pos:column="22"/></literal></expr>]<pos:position pos:line="11" pos:column="23"/></index></name></decl>;<pos:position pos:line="11" pos:column="24"/></decl_stmt>

  <expr_stmt><expr><name pos:line="13" pos:column="3">new_argc<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <literal type="number" pos:line="13" pos:column="14">6<pos:position pos:line="13" pos:column="15"/></literal> <operator pos:line="13" pos:column="16">+<pos:position pos:line="13" pos:column="17"/></operator> <name pos:line="13" pos:column="18">argc<pos:position pos:line="13" pos:column="22"/></name></expr>;<pos:position pos:line="13" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name pos:line="14" pos:column="3">new_argv<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <operator pos:line="14" pos:column="14">(<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="15">char<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">*<pos:position pos:line="14" pos:column="21"/></operator><operator pos:line="14" pos:column="21">*<pos:position pos:line="14" pos:column="22"/></operator><operator pos:line="14" pos:column="22">)<pos:position pos:line="14" pos:column="23"/></operator> <call><name pos:line="14" pos:column="24">malloc<pos:position pos:line="14" pos:column="30"/></name> <argument_list pos:line="14" pos:column="31">(<argument><expr><operator pos:line="14" pos:column="32">(<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="33">new_argc<pos:position pos:line="14" pos:column="41"/></name> <operator pos:line="14" pos:column="42">+<pos:position pos:line="14" pos:column="43"/></operator> <literal type="number" pos:line="14" pos:column="44">1<pos:position pos:line="14" pos:column="45"/></literal><operator pos:line="14" pos:column="45">)<pos:position pos:line="14" pos:column="46"/></operator> <operator pos:line="14" pos:column="47">*<pos:position pos:line="14" pos:column="48"/></operator> <sizeof pos:line="14" pos:column="49">sizeof <argument_list pos:line="14" pos:column="56">(<argument><expr><name pos:line="14" pos:column="57">char<pos:position pos:line="14" pos:column="61"/></name> <operator pos:line="14" pos:column="62">*<pos:position pos:line="14" pos:column="63"/></operator></expr></argument>)<pos:position pos:line="14" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="66"/></expr_stmt>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name pos:line="15" pos:column="7">new_argv<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">==<pos:position pos:line="15" pos:column="18"/></operator> <name pos:line="15" pos:column="19">NULL<pos:position pos:line="15" pos:column="23"/></name></expr>)<pos:position pos:line="15" pos:column="24"/></condition><then pos:line="15" pos:column="24">
  <block pos:line="16" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">ERROR<pos:position pos:line="17" pos:column="10"/></name> <argument_list pos:line="17" pos:column="11">(<argument><expr><literal type="string" pos:line="17" pos:column="12">"rrdtool plugin: malloc failed."<pos:position pos:line="17" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="46"/></expr_stmt>
    <return pos:line="18" pos:column="5">return <expr><operator pos:line="18" pos:column="12">(<pos:position pos:line="18" pos:column="13"/></operator><operator pos:line="18" pos:column="13">-<pos:position pos:line="18" pos:column="14"/></operator><literal type="number" pos:line="18" pos:column="14">1<pos:position pos:line="18" pos:column="15"/></literal><operator pos:line="18" pos:column="15">)<pos:position pos:line="18" pos:column="16"/></operator></expr>;<pos:position pos:line="18" pos:column="17"/></return>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>

  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><name pos:line="21" pos:column="7">last_up<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">==<pos:position pos:line="21" pos:column="17"/></operator> <literal type="number" pos:line="21" pos:column="18">0<pos:position pos:line="21" pos:column="19"/></literal></expr>)<pos:position pos:line="21" pos:column="20"/></condition><then pos:line="21" pos:column="20">
    <block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="5">last_up<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <call><name pos:line="22" pos:column="15">time<pos:position pos:line="22" pos:column="19"/></name> <argument_list pos:line="22" pos:column="20">(<argument><expr><name pos:line="22" pos:column="21">NULL<pos:position pos:line="22" pos:column="25"/></name></expr></argument>)<pos:position pos:line="22" pos:column="26"/></argument_list></call> <operator pos:line="22" pos:column="27">-<pos:position pos:line="22" pos:column="28"/></operator> <literal type="number" pos:line="22" pos:column="29">10<pos:position pos:line="22" pos:column="31"/></literal></expr>;<pos:position pos:line="22" pos:column="32"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="24" pos:column="3">ssnprintf<pos:position pos:line="24" pos:column="12"/></name> <argument_list pos:line="24" pos:column="13">(<argument><expr><name pos:line="24" pos:column="14">pdp_step_str<pos:position pos:line="24" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="28">sizeof <argument_list pos:line="24" pos:column="35">(<argument><expr><name pos:line="24" pos:column="36">pdp_step_str<pos:position pos:line="24" pos:column="48"/></name></expr></argument>)<pos:position pos:line="24" pos:column="49"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="51">"%lu"<pos:position pos:line="24" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="58">pdp_step<pos:position pos:line="24" pos:column="66"/></name></expr></argument>)<pos:position pos:line="24" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="68"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">ssnprintf<pos:position pos:line="25" pos:column="12"/></name> <argument_list pos:line="25" pos:column="13">(<argument><expr><name pos:line="25" pos:column="14">last_up_str<pos:position pos:line="25" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="27">sizeof <argument_list pos:line="25" pos:column="34">(<argument><expr><name pos:line="25" pos:column="35">last_up_str<pos:position pos:line="25" pos:column="46"/></name></expr></argument>)<pos:position pos:line="25" pos:column="47"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="49">"%u"<pos:position pos:line="25" pos:column="53"/></literal></expr></argument>, <argument><expr><operator pos:line="25" pos:column="55">(<pos:position pos:line="25" pos:column="56"/></operator><name pos:line="25" pos:column="56">unsigned<pos:position pos:line="25" pos:column="64"/></name> <name pos:line="25" pos:column="65">int<pos:position pos:line="25" pos:column="68"/></name><operator pos:line="25" pos:column="68">)<pos:position pos:line="25" pos:column="69"/></operator> <name pos:line="25" pos:column="70">last_up<pos:position pos:line="25" pos:column="77"/></name></expr></argument>)<pos:position pos:line="25" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="79"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="27" pos:column="3">new_argv<pos:position pos:line="27" pos:column="11"/></name><index pos:line="27" pos:column="11">[<expr><literal type="number" pos:line="27" pos:column="12">0<pos:position pos:line="27" pos:column="13"/></literal></expr>]<pos:position pos:line="27" pos:column="14"/></index></name> <operator pos:line="27" pos:column="15">=<pos:position pos:line="27" pos:column="16"/></operator> <literal type="string" pos:line="27" pos:column="17">"create"<pos:position pos:line="27" pos:column="25"/></literal></expr>;<pos:position pos:line="27" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="28" pos:column="3">new_argv<pos:position pos:line="28" pos:column="11"/></name><index pos:line="28" pos:column="11">[<expr><literal type="number" pos:line="28" pos:column="12">1<pos:position pos:line="28" pos:column="13"/></literal></expr>]<pos:position pos:line="28" pos:column="14"/></index></name> <operator pos:line="28" pos:column="15">=<pos:position pos:line="28" pos:column="16"/></operator> <operator pos:line="28" pos:column="17">(<pos:position pos:line="28" pos:column="18"/></operator><name pos:line="28" pos:column="18">void<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">*<pos:position pos:line="28" pos:column="24"/></operator><operator pos:line="28" pos:column="24">)<pos:position pos:line="28" pos:column="25"/></operator> <name pos:line="28" pos:column="26">filename<pos:position pos:line="28" pos:column="34"/></name></expr>;<pos:position pos:line="28" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="29" pos:column="3">new_argv<pos:position pos:line="29" pos:column="11"/></name><index pos:line="29" pos:column="11">[<expr><literal type="number" pos:line="29" pos:column="12">2<pos:position pos:line="29" pos:column="13"/></literal></expr>]<pos:position pos:line="29" pos:column="14"/></index></name> <operator pos:line="29" pos:column="15">=<pos:position pos:line="29" pos:column="16"/></operator> <literal type="string" pos:line="29" pos:column="17">"-s"<pos:position pos:line="29" pos:column="21"/></literal></expr>;<pos:position pos:line="29" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="30" pos:column="3">new_argv<pos:position pos:line="30" pos:column="11"/></name><index pos:line="30" pos:column="11">[<expr><literal type="number" pos:line="30" pos:column="12">3<pos:position pos:line="30" pos:column="13"/></literal></expr>]<pos:position pos:line="30" pos:column="14"/></index></name> <operator pos:line="30" pos:column="15">=<pos:position pos:line="30" pos:column="16"/></operator> <name pos:line="30" pos:column="17">pdp_step_str<pos:position pos:line="30" pos:column="29"/></name></expr>;<pos:position pos:line="30" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="31" pos:column="3">new_argv<pos:position pos:line="31" pos:column="11"/></name><index pos:line="31" pos:column="11">[<expr><literal type="number" pos:line="31" pos:column="12">4<pos:position pos:line="31" pos:column="13"/></literal></expr>]<pos:position pos:line="31" pos:column="14"/></index></name> <operator pos:line="31" pos:column="15">=<pos:position pos:line="31" pos:column="16"/></operator> <literal type="string" pos:line="31" pos:column="17">"-b"<pos:position pos:line="31" pos:column="21"/></literal></expr>;<pos:position pos:line="31" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="32" pos:column="3">new_argv<pos:position pos:line="32" pos:column="11"/></name><index pos:line="32" pos:column="11">[<expr><literal type="number" pos:line="32" pos:column="12">5<pos:position pos:line="32" pos:column="13"/></literal></expr>]<pos:position pos:line="32" pos:column="14"/></index></name> <operator pos:line="32" pos:column="15">=<pos:position pos:line="32" pos:column="16"/></operator> <name pos:line="32" pos:column="17">last_up_str<pos:position pos:line="32" pos:column="28"/></name></expr>;<pos:position pos:line="32" pos:column="29"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="34" pos:column="3">memcpy<pos:position pos:line="34" pos:column="9"/></name> <argument_list pos:line="34" pos:column="10">(<argument><expr><name pos:line="34" pos:column="11">new_argv<pos:position pos:line="34" pos:column="19"/></name> <operator pos:line="34" pos:column="20">+<pos:position pos:line="34" pos:column="21"/></operator> <literal type="number" pos:line="34" pos:column="22">6<pos:position pos:line="34" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="25">argv<pos:position pos:line="34" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="31">argc<pos:position pos:line="34" pos:column="35"/></name> <operator pos:line="34" pos:column="36">*<pos:position pos:line="34" pos:column="37"/></operator> <sizeof pos:line="34" pos:column="38">sizeof <argument_list pos:line="34" pos:column="45">(<argument><expr><name pos:line="34" pos:column="46">char<pos:position pos:line="34" pos:column="50"/></name> <operator pos:line="34" pos:column="51">*<pos:position pos:line="34" pos:column="52"/></operator></expr></argument>)<pos:position pos:line="34" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="34" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="55"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="35" pos:column="3">new_argv<pos:position pos:line="35" pos:column="11"/></name><index pos:line="35" pos:column="11">[<expr><name pos:line="35" pos:column="12">new_argc<pos:position pos:line="35" pos:column="20"/></name></expr>]<pos:position pos:line="35" pos:column="21"/></index></name> <operator pos:line="35" pos:column="22">=<pos:position pos:line="35" pos:column="23"/></operator> <name pos:line="35" pos:column="24">NULL<pos:position pos:line="35" pos:column="28"/></name></expr>;<pos:position pos:line="35" pos:column="29"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="37" pos:column="3">pthread_mutex_lock<pos:position pos:line="37" pos:column="21"/></name> <argument_list pos:line="37" pos:column="22">(<argument><expr><operator pos:line="37" pos:column="23">&amp;<pos:position pos:line="37" pos:column="28"/></operator><name pos:line="37" pos:column="24">librrd_lock<pos:position pos:line="37" pos:column="35"/></name></expr></argument>)<pos:position pos:line="37" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><name pos:line="38" pos:column="3">optind<pos:position pos:line="38" pos:column="9"/></name> <operator pos:line="38" pos:column="10">=<pos:position pos:line="38" pos:column="11"/></operator> <literal type="number" pos:line="38" pos:column="12">0<pos:position pos:line="38" pos:column="13"/></literal></expr>;<pos:position pos:line="38" pos:column="14"/></expr_stmt> <comment type="block" pos:line="38" pos:column="15">/* bug in librrd? */</comment>
  <expr_stmt><expr><call><name pos:line="39" pos:column="3">rrd_clear_error<pos:position pos:line="39" pos:column="18"/></name> <argument_list pos:line="39" pos:column="19">()<pos:position pos:line="39" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="22"/></expr_stmt>

  <expr_stmt><expr><name pos:line="41" pos:column="3">status<pos:position pos:line="41" pos:column="9"/></name> <operator pos:line="41" pos:column="10">=<pos:position pos:line="41" pos:column="11"/></operator> <call><name pos:line="41" pos:column="12">rrd_create<pos:position pos:line="41" pos:column="22"/></name> <argument_list pos:line="41" pos:column="23">(<argument><expr><name pos:line="41" pos:column="24">new_argc<pos:position pos:line="41" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="34">new_argv<pos:position pos:line="41" pos:column="42"/></name></expr></argument>)<pos:position pos:line="41" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="42" pos:column="3">pthread_mutex_unlock<pos:position pos:line="42" pos:column="23"/></name> <argument_list pos:line="42" pos:column="24">(<argument><expr><operator pos:line="42" pos:column="25">&amp;<pos:position pos:line="42" pos:column="30"/></operator><name pos:line="42" pos:column="26">librrd_lock<pos:position pos:line="42" pos:column="37"/></name></expr></argument>)<pos:position pos:line="42" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="39"/></expr_stmt>

  <if pos:line="44" pos:column="3">if <condition pos:line="44" pos:column="6">(<expr><name pos:line="44" pos:column="7">status<pos:position pos:line="44" pos:column="13"/></name> <operator pos:line="44" pos:column="14">!=<pos:position pos:line="44" pos:column="16"/></operator> <literal type="number" pos:line="44" pos:column="17">0<pos:position pos:line="44" pos:column="18"/></literal></expr>)<pos:position pos:line="44" pos:column="19"/></condition><then pos:line="44" pos:column="19">
  <block pos:line="45" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">WARNING<pos:position pos:line="46" pos:column="12"/></name> <argument_list pos:line="46" pos:column="13">(<argument><expr><literal type="string" pos:line="46" pos:column="14">"rrdtool plugin: rrd_create (%s) failed: %s"<pos:position pos:line="46" pos:column="58"/></literal></expr></argument>,
        <argument><expr><name pos:line="47" pos:column="9">filename<pos:position pos:line="47" pos:column="17"/></name></expr></argument>, <argument><expr><call><name pos:line="47" pos:column="19">rrd_get_error<pos:position pos:line="47" pos:column="32"/></name> <argument_list pos:line="47" pos:column="33">()<pos:position pos:line="47" pos:column="35"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="37"/></expr_stmt>
  }<pos:position pos:line="48" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="50" pos:column="3">sfree<pos:position pos:line="50" pos:column="8"/></name> <argument_list pos:line="50" pos:column="9">(<argument><expr><name pos:line="50" pos:column="10">new_argv<pos:position pos:line="50" pos:column="18"/></name></expr></argument>)<pos:position pos:line="50" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="20"/></expr_stmt>

  <return pos:line="52" pos:column="3">return <expr><operator pos:line="52" pos:column="10">(<pos:position pos:line="52" pos:column="11"/></operator><name pos:line="52" pos:column="11">status<pos:position pos:line="52" pos:column="17"/></name><operator pos:line="52" pos:column="17">)<pos:position pos:line="52" pos:column="18"/></operator></expr>;<pos:position pos:line="52" pos:column="19"/></return>
}<pos:position pos:line="53" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_761_collectd-4.4.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cu_tail_reopen<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">cu_tail_t<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">obj<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">seek_end<pos:position pos:line="3" pos:column="15"/></name> <init pos:line="3" pos:column="16">= <expr><literal type="number" pos:line="3" pos:column="18">0<pos:position pos:line="3" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">FILE<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">fh<pos:position pos:line="4" pos:column="11"/></name></decl>;<pos:position pos:line="4" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">stat<pos:position pos:line="5" pos:column="14"/></name></name></type> <name pos:line="5" pos:column="15">stat_buf<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">status<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">memset<pos:position pos:line="8" pos:column="9"/></name> <argument_list pos:line="8" pos:column="10">(<argument><expr><operator pos:line="8" pos:column="11">&amp;<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="12">stat_buf<pos:position pos:line="8" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="22">0<pos:position pos:line="8" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="25">sizeof <argument_list pos:line="8" pos:column="32">(<argument><expr><name pos:line="8" pos:column="33">stat_buf<pos:position pos:line="8" pos:column="41"/></name></expr></argument>)<pos:position pos:line="8" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><name pos:line="9" pos:column="3">status<pos:position pos:line="9" pos:column="9"/></name> <operator pos:line="9" pos:column="10">=<pos:position pos:line="9" pos:column="11"/></operator> <call><name pos:line="9" pos:column="12">stat<pos:position pos:line="9" pos:column="16"/></name> <argument_list pos:line="9" pos:column="17">(<argument><expr><name><name pos:line="9" pos:column="18">obj<pos:position pos:line="9" pos:column="21"/></name><operator pos:line="9" pos:column="21">-&gt;<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="23">file<pos:position pos:line="9" pos:column="27"/></name></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="29">&amp;<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="30">stat_buf<pos:position pos:line="9" pos:column="38"/></name></expr></argument>)<pos:position pos:line="9" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="40"/></expr_stmt>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">status<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">!=<pos:position pos:line="10" pos:column="16"/></operator> <literal type="number" pos:line="10" pos:column="17">0<pos:position pos:line="10" pos:column="18"/></literal></expr>)<pos:position pos:line="10" pos:column="19"/></condition><then pos:line="10" pos:column="19">
  <block pos:line="11" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">char<pos:position pos:line="12" pos:column="9"/></name></type> <name><name pos:line="12" pos:column="10">errbuf<pos:position pos:line="12" pos:column="16"/></name><index pos:line="12" pos:column="16">[<expr><literal type="number" pos:line="12" pos:column="17">1024<pos:position pos:line="12" pos:column="21"/></literal></expr>]<pos:position pos:line="12" pos:column="22"/></index></name></decl>;<pos:position pos:line="12" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">ERROR<pos:position pos:line="13" pos:column="10"/></name> <argument_list pos:line="13" pos:column="11">(<argument><expr><literal type="string" pos:line="13" pos:column="12">"utils_tail: stat (%s) failed: %s"<pos:position pos:line="13" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="48">obj<pos:position pos:line="13" pos:column="51"/></name><operator pos:line="13" pos:column="51">-&gt;<pos:position pos:line="13" pos:column="56"/></operator><name pos:line="13" pos:column="53">file<pos:position pos:line="13" pos:column="57"/></name></name></expr></argument>,
	<argument><expr><call><name pos:line="14" pos:column="9">sstrerror<pos:position pos:line="14" pos:column="18"/></name> <argument_list pos:line="14" pos:column="19">(<argument><expr><name pos:line="14" pos:column="20">errno<pos:position pos:line="14" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="27">errbuf<pos:position pos:line="14" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="35">sizeof <argument_list pos:line="14" pos:column="42">(<argument><expr><name pos:line="14" pos:column="43">errbuf<pos:position pos:line="14" pos:column="49"/></name></expr></argument>)<pos:position pos:line="14" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="53"/></expr_stmt>
    <return pos:line="15" pos:column="5">return <expr><operator pos:line="15" pos:column="12">(<pos:position pos:line="15" pos:column="13"/></operator><operator pos:line="15" pos:column="13">-<pos:position pos:line="15" pos:column="14"/></operator><literal type="number" pos:line="15" pos:column="14">1<pos:position pos:line="15" pos:column="15"/></literal><operator pos:line="15" pos:column="15">)<pos:position pos:line="15" pos:column="16"/></operator></expr>;<pos:position pos:line="15" pos:column="17"/></return>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="18" pos:column="3">/* The file is already open.. */</comment>
  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><operator pos:line="19" pos:column="7">(<pos:position pos:line="19" pos:column="8"/></operator><name><name pos:line="19" pos:column="8">obj<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">-&gt;<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="13">fh<pos:position pos:line="19" pos:column="15"/></name></name> <operator pos:line="19" pos:column="16">!=<pos:position pos:line="19" pos:column="18"/></operator> <name pos:line="19" pos:column="19">NULL<pos:position pos:line="19" pos:column="23"/></name><operator pos:line="19" pos:column="23">)<pos:position pos:line="19" pos:column="24"/></operator> <operator pos:line="19" pos:column="25">&amp;&amp;<pos:position pos:line="19" pos:column="35"/></operator> <operator pos:line="19" pos:column="28">(<pos:position pos:line="19" pos:column="29"/></operator><name><name pos:line="19" pos:column="29">stat_buf<pos:position pos:line="19" pos:column="37"/></name><operator pos:line="19" pos:column="37">.<pos:position pos:line="19" pos:column="38"/></operator><name pos:line="19" pos:column="38">st_ino<pos:position pos:line="19" pos:column="44"/></name></name> <operator pos:line="19" pos:column="45">==<pos:position pos:line="19" pos:column="47"/></operator> <name><name pos:line="19" pos:column="48">obj<pos:position pos:line="19" pos:column="51"/></name><operator pos:line="19" pos:column="51">-&gt;<pos:position pos:line="19" pos:column="56"/></operator><name pos:line="19" pos:column="53">stat<pos:position pos:line="19" pos:column="57"/></name><operator pos:line="19" pos:column="57">.<pos:position pos:line="19" pos:column="58"/></operator><name pos:line="19" pos:column="58">st_ino<pos:position pos:line="19" pos:column="64"/></name></name><operator pos:line="19" pos:column="64">)<pos:position pos:line="19" pos:column="65"/></operator></expr>)<pos:position pos:line="19" pos:column="66"/></condition><then pos:line="19" pos:column="66">
  <block pos:line="20" pos:column="3">{
    <comment type="block" pos:line="21" pos:column="5">/* Seek to the beginning if file was truncated */</comment>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name><name pos:line="22" pos:column="9">stat_buf<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">.<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="18">st_size<pos:position pos:line="22" pos:column="25"/></name></name> <operator pos:line="22" pos:column="26">&lt;<pos:position pos:line="22" pos:column="30"/></operator> <name><name pos:line="22" pos:column="28">obj<pos:position pos:line="22" pos:column="31"/></name><operator pos:line="22" pos:column="31">-&gt;<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="33">stat<pos:position pos:line="22" pos:column="37"/></name><operator pos:line="22" pos:column="37">.<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="38">st_size<pos:position pos:line="22" pos:column="45"/></name></name></expr>)<pos:position pos:line="22" pos:column="46"/></condition><then pos:line="22" pos:column="46">
    <block pos:line="23" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="24" pos:column="7">INFO<pos:position pos:line="24" pos:column="11"/></name> <argument_list pos:line="24" pos:column="12">(<argument><expr><literal type="string" pos:line="24" pos:column="13">"utils_tail: File `%s' was truncated."<pos:position pos:line="24" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="53">obj<pos:position pos:line="24" pos:column="56"/></name><operator pos:line="24" pos:column="56">-&gt;<pos:position pos:line="24" pos:column="61"/></operator><name pos:line="24" pos:column="58">file<pos:position pos:line="24" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="64"/></expr_stmt>
      <expr_stmt><expr><name pos:line="25" pos:column="7">status<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">=<pos:position pos:line="25" pos:column="15"/></operator> <call><name pos:line="25" pos:column="16">fseek<pos:position pos:line="25" pos:column="21"/></name> <argument_list pos:line="25" pos:column="22">(<argument><expr><name><name pos:line="25" pos:column="23">obj<pos:position pos:line="25" pos:column="26"/></name><operator pos:line="25" pos:column="26">-&gt;<pos:position pos:line="25" pos:column="31"/></operator><name pos:line="25" pos:column="28">fh<pos:position pos:line="25" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="32">0<pos:position pos:line="25" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="35">SEEK_SET<pos:position pos:line="25" pos:column="43"/></name></expr></argument>)<pos:position pos:line="25" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="45"/></expr_stmt>
      <if pos:line="26" pos:column="7">if <condition pos:line="26" pos:column="10">(<expr><name pos:line="26" pos:column="11">status<pos:position pos:line="26" pos:column="17"/></name> <operator pos:line="26" pos:column="18">!=<pos:position pos:line="26" pos:column="20"/></operator> <literal type="number" pos:line="26" pos:column="21">0<pos:position pos:line="26" pos:column="22"/></literal></expr>)<pos:position pos:line="26" pos:column="23"/></condition><then pos:line="26" pos:column="23">
      <block pos:line="27" pos:column="7">{
	<decl_stmt><decl><type><name pos:line="28" pos:column="9">char<pos:position pos:line="28" pos:column="13"/></name></type> <name><name pos:line="28" pos:column="14">errbuf<pos:position pos:line="28" pos:column="20"/></name><index pos:line="28" pos:column="20">[<expr><literal type="number" pos:line="28" pos:column="21">1024<pos:position pos:line="28" pos:column="25"/></literal></expr>]<pos:position pos:line="28" pos:column="26"/></index></name></decl>;<pos:position pos:line="28" pos:column="27"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">ERROR<pos:position pos:line="29" pos:column="14"/></name> <argument_list pos:line="29" pos:column="15">(<argument><expr><literal type="string" pos:line="29" pos:column="16">"utils_tail: fseek (%s) failed: %s"<pos:position pos:line="29" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="53">obj<pos:position pos:line="29" pos:column="56"/></name><operator pos:line="29" pos:column="56">-&gt;<pos:position pos:line="29" pos:column="61"/></operator><name pos:line="29" pos:column="58">file<pos:position pos:line="29" pos:column="62"/></name></name></expr></argument>,
	    <argument><expr><call><name pos:line="30" pos:column="13">sstrerror<pos:position pos:line="30" pos:column="22"/></name> <argument_list pos:line="30" pos:column="23">(<argument><expr><name pos:line="30" pos:column="24">errno<pos:position pos:line="30" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="31">errbuf<pos:position pos:line="30" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="39">sizeof <argument_list pos:line="30" pos:column="46">(<argument><expr><name pos:line="30" pos:column="47">errbuf<pos:position pos:line="30" pos:column="53"/></name></expr></argument>)<pos:position pos:line="30" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="30" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="57"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="31" pos:column="9">fclose<pos:position pos:line="31" pos:column="15"/></name> <argument_list pos:line="31" pos:column="16">(<argument><expr><name><name pos:line="31" pos:column="17">obj<pos:position pos:line="31" pos:column="20"/></name><operator pos:line="31" pos:column="20">-&gt;<pos:position pos:line="31" pos:column="25"/></operator><name pos:line="31" pos:column="22">fh<pos:position pos:line="31" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="32" pos:column="9">obj<pos:position pos:line="32" pos:column="12"/></name><operator pos:line="32" pos:column="12">-&gt;<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="14">fh<pos:position pos:line="32" pos:column="16"/></name></name> <operator pos:line="32" pos:column="17">=<pos:position pos:line="32" pos:column="18"/></operator> <name pos:line="32" pos:column="19">NULL<pos:position pos:line="32" pos:column="23"/></name></expr>;<pos:position pos:line="32" pos:column="24"/></expr_stmt>
	<return pos:line="33" pos:column="9">return <expr><operator pos:line="33" pos:column="16">(<pos:position pos:line="33" pos:column="17"/></operator><operator pos:line="33" pos:column="17">-<pos:position pos:line="33" pos:column="18"/></operator><literal type="number" pos:line="33" pos:column="18">1<pos:position pos:line="33" pos:column="19"/></literal><operator pos:line="33" pos:column="19">)<pos:position pos:line="33" pos:column="20"/></operator></expr>;<pos:position pos:line="33" pos:column="21"/></return>
      }<pos:position pos:line="34" pos:column="8"/></block></then></if>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">memcpy<pos:position pos:line="36" pos:column="11"/></name> <argument_list pos:line="36" pos:column="12">(<argument><expr><operator pos:line="36" pos:column="13">&amp;<pos:position pos:line="36" pos:column="18"/></operator><name><name pos:line="36" pos:column="14">obj<pos:position pos:line="36" pos:column="17"/></name><operator pos:line="36" pos:column="17">-&gt;<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="19">stat<pos:position pos:line="36" pos:column="23"/></name></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="25">&amp;<pos:position pos:line="36" pos:column="30"/></operator><name pos:line="36" pos:column="26">stat_buf<pos:position pos:line="36" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="36" pos:column="36">sizeof <argument_list pos:line="36" pos:column="43">(<argument><expr pos:line="36" pos:column="44">struct <name pos:line="36" pos:column="51">stat<pos:position pos:line="36" pos:column="55"/></name></expr></argument>)<pos:position pos:line="36" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="36" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="58"/></expr_stmt>
    <return pos:line="37" pos:column="5">return <expr><operator pos:line="37" pos:column="12">(<pos:position pos:line="37" pos:column="13"/></operator><literal type="number" pos:line="37" pos:column="13">1<pos:position pos:line="37" pos:column="14"/></literal><operator pos:line="37" pos:column="14">)<pos:position pos:line="37" pos:column="15"/></operator></expr>;<pos:position pos:line="37" pos:column="16"/></return>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="40" pos:column="3">/* Seek to the end if we re-open the same file again or the file opened
   * is the first at all or the first after an error */</comment>
  <if pos:line="42" pos:column="3">if <condition pos:line="42" pos:column="6">(<expr><operator pos:line="42" pos:column="7">(<pos:position pos:line="42" pos:column="8"/></operator><name><name pos:line="42" pos:column="8">obj<pos:position pos:line="42" pos:column="11"/></name><operator pos:line="42" pos:column="11">-&gt;<pos:position pos:line="42" pos:column="16"/></operator><name pos:line="42" pos:column="13">stat<pos:position pos:line="42" pos:column="17"/></name><operator pos:line="42" pos:column="17">.<pos:position pos:line="42" pos:column="18"/></operator><name pos:line="42" pos:column="18">st_ino<pos:position pos:line="42" pos:column="24"/></name></name> <operator pos:line="42" pos:column="25">==<pos:position pos:line="42" pos:column="27"/></operator> <literal type="number" pos:line="42" pos:column="28">0<pos:position pos:line="42" pos:column="29"/></literal><operator pos:line="42" pos:column="29">)<pos:position pos:line="42" pos:column="30"/></operator> <operator pos:line="42" pos:column="31">||<pos:position pos:line="42" pos:column="33"/></operator> <operator pos:line="42" pos:column="34">(<pos:position pos:line="42" pos:column="35"/></operator><name><name pos:line="42" pos:column="35">obj<pos:position pos:line="42" pos:column="38"/></name><operator pos:line="42" pos:column="38">-&gt;<pos:position pos:line="42" pos:column="43"/></operator><name pos:line="42" pos:column="40">stat<pos:position pos:line="42" pos:column="44"/></name><operator pos:line="42" pos:column="44">.<pos:position pos:line="42" pos:column="45"/></operator><name pos:line="42" pos:column="45">st_ino<pos:position pos:line="42" pos:column="51"/></name></name> <operator pos:line="42" pos:column="52">==<pos:position pos:line="42" pos:column="54"/></operator> <name><name pos:line="42" pos:column="55">stat_buf<pos:position pos:line="42" pos:column="63"/></name><operator pos:line="42" pos:column="63">.<pos:position pos:line="42" pos:column="64"/></operator><name pos:line="42" pos:column="64">st_ino<pos:position pos:line="42" pos:column="70"/></name></name><operator pos:line="42" pos:column="70">)<pos:position pos:line="42" pos:column="71"/></operator></expr>)<pos:position pos:line="42" pos:column="72"/></condition><then pos:line="42" pos:column="72">
    <block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="5">seek_end<pos:position pos:line="43" pos:column="13"/></name> <operator pos:line="43" pos:column="14">=<pos:position pos:line="43" pos:column="15"/></operator> <literal type="number" pos:line="43" pos:column="16">1<pos:position pos:line="43" pos:column="17"/></literal></expr>;<pos:position pos:line="43" pos:column="18"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="45" pos:column="3">fh<pos:position pos:line="45" pos:column="5"/></name> <operator pos:line="45" pos:column="6">=<pos:position pos:line="45" pos:column="7"/></operator> <call><name pos:line="45" pos:column="8">fopen<pos:position pos:line="45" pos:column="13"/></name> <argument_list pos:line="45" pos:column="14">(<argument><expr><name><name pos:line="45" pos:column="15">obj<pos:position pos:line="45" pos:column="18"/></name><operator pos:line="45" pos:column="18">-&gt;<pos:position pos:line="45" pos:column="23"/></operator><name pos:line="45" pos:column="20">file<pos:position pos:line="45" pos:column="24"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="26">"r"<pos:position pos:line="45" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="31"/></expr_stmt>
  <if pos:line="46" pos:column="3">if <condition pos:line="46" pos:column="6">(<expr><name pos:line="46" pos:column="7">fh<pos:position pos:line="46" pos:column="9"/></name> <operator pos:line="46" pos:column="10">==<pos:position pos:line="46" pos:column="12"/></operator> <name pos:line="46" pos:column="13">NULL<pos:position pos:line="46" pos:column="17"/></name></expr>)<pos:position pos:line="46" pos:column="18"/></condition><then pos:line="46" pos:column="18">
  <block pos:line="47" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="48" pos:column="5">char<pos:position pos:line="48" pos:column="9"/></name></type> <name><name pos:line="48" pos:column="10">errbuf<pos:position pos:line="48" pos:column="16"/></name><index pos:line="48" pos:column="16">[<expr><literal type="number" pos:line="48" pos:column="17">1024<pos:position pos:line="48" pos:column="21"/></literal></expr>]<pos:position pos:line="48" pos:column="22"/></index></name></decl>;<pos:position pos:line="48" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">ERROR<pos:position pos:line="49" pos:column="10"/></name> <argument_list pos:line="49" pos:column="11">(<argument><expr><literal type="string" pos:line="49" pos:column="12">"utils_tail: fopen (%s) failed: %s"<pos:position pos:line="49" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="49">obj<pos:position pos:line="49" pos:column="52"/></name><operator pos:line="49" pos:column="52">-&gt;<pos:position pos:line="49" pos:column="57"/></operator><name pos:line="49" pos:column="54">file<pos:position pos:line="49" pos:column="58"/></name></name></expr></argument>,
	<argument><expr><call><name pos:line="50" pos:column="9">sstrerror<pos:position pos:line="50" pos:column="18"/></name> <argument_list pos:line="50" pos:column="19">(<argument><expr><name pos:line="50" pos:column="20">errno<pos:position pos:line="50" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="27">errbuf<pos:position pos:line="50" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="50" pos:column="35">sizeof <argument_list pos:line="50" pos:column="42">(<argument><expr><name pos:line="50" pos:column="43">errbuf<pos:position pos:line="50" pos:column="49"/></name></expr></argument>)<pos:position pos:line="50" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="50" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="50" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="53"/></expr_stmt>
    <return pos:line="51" pos:column="5">return <expr><operator pos:line="51" pos:column="12">(<pos:position pos:line="51" pos:column="13"/></operator><operator pos:line="51" pos:column="13">-<pos:position pos:line="51" pos:column="14"/></operator><literal type="number" pos:line="51" pos:column="14">1<pos:position pos:line="51" pos:column="15"/></literal><operator pos:line="51" pos:column="15">)<pos:position pos:line="51" pos:column="16"/></operator></expr>;<pos:position pos:line="51" pos:column="17"/></return>
  }<pos:position pos:line="52" pos:column="4"/></block></then></if>

  <if pos:line="54" pos:column="3">if <condition pos:line="54" pos:column="6">(<expr><name pos:line="54" pos:column="7">seek_end<pos:position pos:line="54" pos:column="15"/></name> <operator pos:line="54" pos:column="16">!=<pos:position pos:line="54" pos:column="18"/></operator> <literal type="number" pos:line="54" pos:column="19">0<pos:position pos:line="54" pos:column="20"/></literal></expr>)<pos:position pos:line="54" pos:column="21"/></condition><then pos:line="54" pos:column="21">
  <block pos:line="55" pos:column="3">{
    <expr_stmt><expr><name pos:line="56" pos:column="5">status<pos:position pos:line="56" pos:column="11"/></name> <operator pos:line="56" pos:column="12">=<pos:position pos:line="56" pos:column="13"/></operator> <call><name pos:line="56" pos:column="14">fseek<pos:position pos:line="56" pos:column="19"/></name> <argument_list pos:line="56" pos:column="20">(<argument><expr><name pos:line="56" pos:column="21">fh<pos:position pos:line="56" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="25">0<pos:position pos:line="56" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="28">SEEK_END<pos:position pos:line="56" pos:column="36"/></name></expr></argument>)<pos:position pos:line="56" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="38"/></expr_stmt>
    <if pos:line="57" pos:column="5">if <condition pos:line="57" pos:column="8">(<expr><name pos:line="57" pos:column="9">status<pos:position pos:line="57" pos:column="15"/></name> <operator pos:line="57" pos:column="16">!=<pos:position pos:line="57" pos:column="18"/></operator> <literal type="number" pos:line="57" pos:column="19">0<pos:position pos:line="57" pos:column="20"/></literal></expr>)<pos:position pos:line="57" pos:column="21"/></condition><then pos:line="57" pos:column="21">
    <block pos:line="58" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="59" pos:column="7">char<pos:position pos:line="59" pos:column="11"/></name></type> <name><name pos:line="59" pos:column="12">errbuf<pos:position pos:line="59" pos:column="18"/></name><index pos:line="59" pos:column="18">[<expr><literal type="number" pos:line="59" pos:column="19">1024<pos:position pos:line="59" pos:column="23"/></literal></expr>]<pos:position pos:line="59" pos:column="24"/></index></name></decl>;<pos:position pos:line="59" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="60" pos:column="7">ERROR<pos:position pos:line="60" pos:column="12"/></name> <argument_list pos:line="60" pos:column="13">(<argument><expr><literal type="string" pos:line="60" pos:column="14">"utils_tail: fseek (%s) failed: %s"<pos:position pos:line="60" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="51">obj<pos:position pos:line="60" pos:column="54"/></name><operator pos:line="60" pos:column="54">-&gt;<pos:position pos:line="60" pos:column="59"/></operator><name pos:line="60" pos:column="56">file<pos:position pos:line="60" pos:column="60"/></name></name></expr></argument>,
	  <argument><expr><call><name pos:line="61" pos:column="11">sstrerror<pos:position pos:line="61" pos:column="20"/></name> <argument_list pos:line="61" pos:column="21">(<argument><expr><name pos:line="61" pos:column="22">errno<pos:position pos:line="61" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="29">errbuf<pos:position pos:line="61" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="61" pos:column="37">sizeof <argument_list pos:line="61" pos:column="44">(<argument><expr><name pos:line="61" pos:column="45">errbuf<pos:position pos:line="61" pos:column="51"/></name></expr></argument>)<pos:position pos:line="61" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="61" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="61" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="55"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="62" pos:column="7">fclose<pos:position pos:line="62" pos:column="13"/></name> <argument_list pos:line="62" pos:column="14">(<argument><expr><name pos:line="62" pos:column="15">fh<pos:position pos:line="62" pos:column="17"/></name></expr></argument>)<pos:position pos:line="62" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="19"/></expr_stmt>
      <return pos:line="63" pos:column="7">return <expr><operator pos:line="63" pos:column="14">(<pos:position pos:line="63" pos:column="15"/></operator><operator pos:line="63" pos:column="15">-<pos:position pos:line="63" pos:column="16"/></operator><literal type="number" pos:line="63" pos:column="16">1<pos:position pos:line="63" pos:column="17"/></literal><operator pos:line="63" pos:column="17">)<pos:position pos:line="63" pos:column="18"/></operator></expr>;<pos:position pos:line="63" pos:column="19"/></return>
    }<pos:position pos:line="64" pos:column="6"/></block></then></if>
  }<pos:position pos:line="65" pos:column="4"/></block></then></if>

  <if pos:line="67" pos:column="3">if <condition pos:line="67" pos:column="6">(<expr><name><name pos:line="67" pos:column="7">obj<pos:position pos:line="67" pos:column="10"/></name><operator pos:line="67" pos:column="10">-&gt;<pos:position pos:line="67" pos:column="15"/></operator><name pos:line="67" pos:column="12">fh<pos:position pos:line="67" pos:column="14"/></name></name> <operator pos:line="67" pos:column="15">!=<pos:position pos:line="67" pos:column="17"/></operator> <name pos:line="67" pos:column="18">NULL<pos:position pos:line="67" pos:column="22"/></name></expr>)<pos:position pos:line="67" pos:column="23"/></condition><then pos:line="67" pos:column="23">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="68" pos:column="5">fclose<pos:position pos:line="68" pos:column="11"/></name> <argument_list pos:line="68" pos:column="12">(<argument><expr><name><name pos:line="68" pos:column="13">obj<pos:position pos:line="68" pos:column="16"/></name><operator pos:line="68" pos:column="16">-&gt;<pos:position pos:line="68" pos:column="21"/></operator><name pos:line="68" pos:column="18">fh<pos:position pos:line="68" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="22"/></expr_stmt></block></then></if>
  <expr_stmt><expr><name><name pos:line="69" pos:column="3">obj<pos:position pos:line="69" pos:column="6"/></name><operator pos:line="69" pos:column="6">-&gt;<pos:position pos:line="69" pos:column="11"/></operator><name pos:line="69" pos:column="8">fh<pos:position pos:line="69" pos:column="10"/></name></name> <operator pos:line="69" pos:column="11">=<pos:position pos:line="69" pos:column="12"/></operator> <name pos:line="69" pos:column="13">fh<pos:position pos:line="69" pos:column="15"/></name></expr>;<pos:position pos:line="69" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="70" pos:column="3">memcpy<pos:position pos:line="70" pos:column="9"/></name> <argument_list pos:line="70" pos:column="10">(<argument><expr><operator pos:line="70" pos:column="11">&amp;<pos:position pos:line="70" pos:column="16"/></operator><name><name pos:line="70" pos:column="12">obj<pos:position pos:line="70" pos:column="15"/></name><operator pos:line="70" pos:column="15">-&gt;<pos:position pos:line="70" pos:column="20"/></operator><name pos:line="70" pos:column="17">stat<pos:position pos:line="70" pos:column="21"/></name></name></expr></argument>, <argument><expr><operator pos:line="70" pos:column="23">&amp;<pos:position pos:line="70" pos:column="28"/></operator><name pos:line="70" pos:column="24">stat_buf<pos:position pos:line="70" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="70" pos:column="34">sizeof <argument_list pos:line="70" pos:column="41">(<argument><expr pos:line="70" pos:column="42">struct <name pos:line="70" pos:column="49">stat<pos:position pos:line="70" pos:column="53"/></name></expr></argument>)<pos:position pos:line="70" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="70" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="56"/></expr_stmt>

  <return pos:line="72" pos:column="3">return <expr><operator pos:line="72" pos:column="10">(<pos:position pos:line="72" pos:column="11"/></operator><literal type="number" pos:line="72" pos:column="11">0<pos:position pos:line="72" pos:column="12"/></literal><operator pos:line="72" pos:column="12">)<pos:position pos:line="72" pos:column="13"/></operator></expr>;<pos:position pos:line="72" pos:column="14"/></return>
}<pos:position pos:line="73" pos:column="2"/></block></function></unit>

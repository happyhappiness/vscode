<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1693_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">snmp_agent_config_data<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">oconfig_item_t<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">ci<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list> <block pos:line="1" pos:column="55">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">data_definition_t<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name pos:line="2" pos:column="22">dd<pos:position pos:line="2" pos:column="24"/></name></decl>;<pos:position pos:line="2" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">ret<pos:position pos:line="3" pos:column="10"/></name> <init pos:line="3" pos:column="11">= <expr><literal type="number" pos:line="3" pos:column="13">0<pos:position pos:line="3" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="5" pos:column="3">assert<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">(<argument><expr><name pos:line="5" pos:column="10">ci<pos:position pos:line="5" pos:column="12"/></name> <operator pos:line="5" pos:column="13">!=<pos:position pos:line="5" pos:column="15"/></operator> <name pos:line="5" pos:column="16">NULL<pos:position pos:line="5" pos:column="20"/></name></expr></argument>)<pos:position pos:line="5" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="22"/></expr_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">dd<pos:position pos:line="7" pos:column="5"/></name> <operator pos:line="7" pos:column="6">=<pos:position pos:line="7" pos:column="7"/></operator> <call><name pos:line="7" pos:column="8">calloc<pos:position pos:line="7" pos:column="14"/></name><argument_list pos:line="7" pos:column="14">(<argument><expr><literal type="number" pos:line="7" pos:column="15">1<pos:position pos:line="7" pos:column="16"/></literal></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="18">sizeof<argument_list pos:line="7" pos:column="24">(<argument><expr><operator pos:line="7" pos:column="25">*<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="26">dd<pos:position pos:line="7" pos:column="28"/></name></expr></argument>)<pos:position pos:line="7" pos:column="29"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="31"/></expr_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">dd<pos:position pos:line="8" pos:column="9"/></name> <operator pos:line="8" pos:column="10">==<pos:position pos:line="8" pos:column="12"/></operator> <name pos:line="8" pos:column="13">NULL<pos:position pos:line="8" pos:column="17"/></name></expr>)<pos:position pos:line="8" pos:column="18"/></condition><then pos:line="8" pos:column="18"> <block pos:line="8" pos:column="19">{
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">ERROR<pos:position pos:line="9" pos:column="10"/></name><argument_list pos:line="9" pos:column="10">(<argument><expr><name pos:line="9" pos:column="11">PLUGIN_NAME<pos:position pos:line="9" pos:column="22"/></name> <literal type="string" pos:line="9" pos:column="23">": Failed to allocate memory for data definition"<pos:position pos:line="9" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="74"/></expr_stmt>
    <return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">-<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="13">ENOMEM<pos:position pos:line="10" pos:column="19"/></name></expr>;<pos:position pos:line="10" pos:column="20"/></return>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="13" pos:column="3">ret<pos:position pos:line="13" pos:column="6"/></name> <operator pos:line="13" pos:column="7">=<pos:position pos:line="13" pos:column="8"/></operator> <call><name pos:line="13" pos:column="9">cf_util_get_string<pos:position pos:line="13" pos:column="27"/></name><argument_list pos:line="13" pos:column="27">(<argument><expr><name pos:line="13" pos:column="28">ci<pos:position pos:line="13" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="32">&amp;<pos:position pos:line="13" pos:column="37"/></operator><name><name pos:line="13" pos:column="33">dd<pos:position pos:line="13" pos:column="35"/></name><operator pos:line="13" pos:column="35">-&gt;<pos:position pos:line="13" pos:column="40"/></operator><name pos:line="13" pos:column="37">name<pos:position pos:line="13" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="43"/></expr_stmt>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">ret<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">!=<pos:position pos:line="14" pos:column="13"/></operator> <literal type="number" pos:line="14" pos:column="14">0<pos:position pos:line="14" pos:column="15"/></literal></expr>)<pos:position pos:line="14" pos:column="16"/></condition><then pos:line="14" pos:column="16"> <block pos:line="14" pos:column="17">{
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">free<pos:position pos:line="15" pos:column="9"/></name><argument_list pos:line="15" pos:column="9">(<argument><expr><name pos:line="15" pos:column="10">dd<pos:position pos:line="15" pos:column="12"/></name></expr></argument>)<pos:position pos:line="15" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="14"/></expr_stmt>
    <return pos:line="16" pos:column="5">return <expr><operator pos:line="16" pos:column="12">-<pos:position pos:line="16" pos:column="13"/></operator><literal type="number" pos:line="16" pos:column="13">1<pos:position pos:line="16" pos:column="14"/></literal></expr>;<pos:position pos:line="16" pos:column="15"/></return>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="19" pos:column="3">dd<pos:position pos:line="19" pos:column="5"/></name><operator pos:line="19" pos:column="5">-&gt;<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="7">scale<pos:position pos:line="19" pos:column="12"/></name></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <literal type="number" pos:line="19" pos:column="15">1.0<pos:position pos:line="19" pos:column="18"/></literal></expr>;<pos:position pos:line="19" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="20" pos:column="3">dd<pos:position pos:line="20" pos:column="5"/></name><operator pos:line="20" pos:column="5">-&gt;<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="7">shift<pos:position pos:line="20" pos:column="12"/></name></name> <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <literal type="number" pos:line="20" pos:column="15">0.0<pos:position pos:line="20" pos:column="18"/></literal></expr>;<pos:position pos:line="20" pos:column="19"/></expr_stmt>

  <for pos:line="22" pos:column="3">for <control pos:line="22" pos:column="7">(<init><decl><type><name pos:line="22" pos:column="8">int<pos:position pos:line="22" pos:column="11"/></name></type> <name pos:line="22" pos:column="12">i<pos:position pos:line="22" pos:column="13"/></name> <init pos:line="22" pos:column="14">= <expr><literal type="number" pos:line="22" pos:column="16">0<pos:position pos:line="22" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="22" pos:column="18"/></init> <condition><expr><name pos:line="22" pos:column="19">i<pos:position pos:line="22" pos:column="20"/></name> <operator pos:line="22" pos:column="21">&lt;<pos:position pos:line="22" pos:column="25"/></operator> <name><name pos:line="22" pos:column="23">ci<pos:position pos:line="22" pos:column="25"/></name><operator pos:line="22" pos:column="25">-&gt;<pos:position pos:line="22" pos:column="30"/></operator><name pos:line="22" pos:column="27">children_num<pos:position pos:line="22" pos:column="39"/></name></name></expr>;<pos:position pos:line="22" pos:column="40"/></condition> <incr><expr><name pos:line="22" pos:column="41">i<pos:position pos:line="22" pos:column="42"/></name><operator pos:line="22" pos:column="42">++<pos:position pos:line="22" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="22" pos:column="45"/></control> <block pos:line="22" pos:column="46">{
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">oconfig_item_t<pos:position pos:line="23" pos:column="19"/></name> <modifier pos:line="23" pos:column="20">*<pos:position pos:line="23" pos:column="21"/></modifier></type><name pos:line="23" pos:column="21">option<pos:position pos:line="23" pos:column="27"/></name> <init pos:line="23" pos:column="28">= <expr><name><name pos:line="23" pos:column="30">ci<pos:position pos:line="23" pos:column="32"/></name><operator pos:line="23" pos:column="32">-&gt;<pos:position pos:line="23" pos:column="37"/></operator><name pos:line="23" pos:column="34">children<pos:position pos:line="23" pos:column="42"/></name></name> <operator pos:line="23" pos:column="43">+<pos:position pos:line="23" pos:column="44"/></operator> <name pos:line="23" pos:column="45">i<pos:position pos:line="23" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="23" pos:column="47"/></decl_stmt>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><call><name pos:line="25" pos:column="9">strcasecmp<pos:position pos:line="25" pos:column="19"/></name><argument_list pos:line="25" pos:column="19">(<argument><expr><literal type="string" pos:line="25" pos:column="20">"Instance"<pos:position pos:line="25" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="32">option<pos:position pos:line="25" pos:column="38"/></name><operator pos:line="25" pos:column="38">-&gt;<pos:position pos:line="25" pos:column="43"/></operator><name pos:line="25" pos:column="40">key<pos:position pos:line="25" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="44"/></argument_list></call> <operator pos:line="25" pos:column="45">==<pos:position pos:line="25" pos:column="47"/></operator> <literal type="number" pos:line="25" pos:column="48">0<pos:position pos:line="25" pos:column="49"/></literal></expr>)<pos:position pos:line="25" pos:column="50"/></condition><then pos:line="25" pos:column="50">
      <block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="7">ret<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">=<pos:position pos:line="26" pos:column="12"/></operator> <call><name pos:line="26" pos:column="13">cf_util_get_boolean<pos:position pos:line="26" pos:column="32"/></name><argument_list pos:line="26" pos:column="32">(<argument><expr><name pos:line="26" pos:column="33">option<pos:position pos:line="26" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="41">&amp;<pos:position pos:line="26" pos:column="46"/></operator><name><name pos:line="26" pos:column="42">dd<pos:position pos:line="26" pos:column="44"/></name><operator pos:line="26" pos:column="44">-&gt;<pos:position pos:line="26" pos:column="49"/></operator><name pos:line="26" pos:column="46">is_instance<pos:position pos:line="26" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="59"/></expr_stmt></block></then>
    <elseif pos:line="27" pos:column="5">else <if pos:line="27" pos:column="10">if <condition pos:line="27" pos:column="13">(<expr><call><name pos:line="27" pos:column="14">strcasecmp<pos:position pos:line="27" pos:column="24"/></name><argument_list pos:line="27" pos:column="24">(<argument><expr><literal type="string" pos:line="27" pos:column="25">"Plugin"<pos:position pos:line="27" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="35">option<pos:position pos:line="27" pos:column="41"/></name><operator pos:line="27" pos:column="41">-&gt;<pos:position pos:line="27" pos:column="46"/></operator><name pos:line="27" pos:column="43">key<pos:position pos:line="27" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="47"/></argument_list></call> <operator pos:line="27" pos:column="48">==<pos:position pos:line="27" pos:column="50"/></operator> <literal type="number" pos:line="27" pos:column="51">0<pos:position pos:line="27" pos:column="52"/></literal></expr>)<pos:position pos:line="27" pos:column="53"/></condition><then pos:line="27" pos:column="53">
      <block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="7">ret<pos:position pos:line="28" pos:column="10"/></name> <operator pos:line="28" pos:column="11">=<pos:position pos:line="28" pos:column="12"/></operator> <call><name pos:line="28" pos:column="13">cf_util_get_string<pos:position pos:line="28" pos:column="31"/></name><argument_list pos:line="28" pos:column="31">(<argument><expr><name pos:line="28" pos:column="32">option<pos:position pos:line="28" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="40">&amp;<pos:position pos:line="28" pos:column="45"/></operator><name><name pos:line="28" pos:column="41">dd<pos:position pos:line="28" pos:column="43"/></name><operator pos:line="28" pos:column="43">-&gt;<pos:position pos:line="28" pos:column="48"/></operator><name pos:line="28" pos:column="45">plugin<pos:position pos:line="28" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="53"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="29" pos:column="5">else <if pos:line="29" pos:column="10">if <condition pos:line="29" pos:column="13">(<expr><call><name pos:line="29" pos:column="14">strcasecmp<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">(<argument><expr><literal type="string" pos:line="29" pos:column="25">"PluginInstance"<pos:position pos:line="29" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="43">option<pos:position pos:line="29" pos:column="49"/></name><operator pos:line="29" pos:column="49">-&gt;<pos:position pos:line="29" pos:column="54"/></operator><name pos:line="29" pos:column="51">key<pos:position pos:line="29" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="55"/></argument_list></call> <operator pos:line="29" pos:column="56">==<pos:position pos:line="29" pos:column="58"/></operator> <literal type="number" pos:line="29" pos:column="59">0<pos:position pos:line="29" pos:column="60"/></literal></expr>)<pos:position pos:line="29" pos:column="61"/></condition><then pos:line="29" pos:column="61">
      <block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="7">ret<pos:position pos:line="30" pos:column="10"/></name> <operator pos:line="30" pos:column="11">=<pos:position pos:line="30" pos:column="12"/></operator> <call><name pos:line="30" pos:column="13">cf_util_get_string<pos:position pos:line="30" pos:column="31"/></name><argument_list pos:line="30" pos:column="31">(<argument><expr><name pos:line="30" pos:column="32">option<pos:position pos:line="30" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="40">&amp;<pos:position pos:line="30" pos:column="45"/></operator><name><name pos:line="30" pos:column="41">dd<pos:position pos:line="30" pos:column="43"/></name><operator pos:line="30" pos:column="43">-&gt;<pos:position pos:line="30" pos:column="48"/></operator><name pos:line="30" pos:column="45">plugin_instance<pos:position pos:line="30" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="62"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="31" pos:column="5">else <if pos:line="31" pos:column="10">if <condition pos:line="31" pos:column="13">(<expr><call><name pos:line="31" pos:column="14">strcasecmp<pos:position pos:line="31" pos:column="24"/></name><argument_list pos:line="31" pos:column="24">(<argument><expr><literal type="string" pos:line="31" pos:column="25">"Type"<pos:position pos:line="31" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="33">option<pos:position pos:line="31" pos:column="39"/></name><operator pos:line="31" pos:column="39">-&gt;<pos:position pos:line="31" pos:column="44"/></operator><name pos:line="31" pos:column="41">key<pos:position pos:line="31" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="45"/></argument_list></call> <operator pos:line="31" pos:column="46">==<pos:position pos:line="31" pos:column="48"/></operator> <literal type="number" pos:line="31" pos:column="49">0<pos:position pos:line="31" pos:column="50"/></literal></expr>)<pos:position pos:line="31" pos:column="51"/></condition><then pos:line="31" pos:column="51">
      <block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="7">ret<pos:position pos:line="32" pos:column="10"/></name> <operator pos:line="32" pos:column="11">=<pos:position pos:line="32" pos:column="12"/></operator> <call><name pos:line="32" pos:column="13">cf_util_get_string<pos:position pos:line="32" pos:column="31"/></name><argument_list pos:line="32" pos:column="31">(<argument><expr><name pos:line="32" pos:column="32">option<pos:position pos:line="32" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="40">&amp;<pos:position pos:line="32" pos:column="45"/></operator><name><name pos:line="32" pos:column="41">dd<pos:position pos:line="32" pos:column="43"/></name><operator pos:line="32" pos:column="43">-&gt;<pos:position pos:line="32" pos:column="48"/></operator><name pos:line="32" pos:column="45">type<pos:position pos:line="32" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="51"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="33" pos:column="5">else <if pos:line="33" pos:column="10">if <condition pos:line="33" pos:column="13">(<expr><call><name pos:line="33" pos:column="14">strcasecmp<pos:position pos:line="33" pos:column="24"/></name><argument_list pos:line="33" pos:column="24">(<argument><expr><literal type="string" pos:line="33" pos:column="25">"TypeInstance"<pos:position pos:line="33" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="41">option<pos:position pos:line="33" pos:column="47"/></name><operator pos:line="33" pos:column="47">-&gt;<pos:position pos:line="33" pos:column="52"/></operator><name pos:line="33" pos:column="49">key<pos:position pos:line="33" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="53"/></argument_list></call> <operator pos:line="33" pos:column="54">==<pos:position pos:line="33" pos:column="56"/></operator> <literal type="number" pos:line="33" pos:column="57">0<pos:position pos:line="33" pos:column="58"/></literal></expr>)<pos:position pos:line="33" pos:column="59"/></condition><then pos:line="33" pos:column="59">
      <block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="7">ret<pos:position pos:line="34" pos:column="10"/></name> <operator pos:line="34" pos:column="11">=<pos:position pos:line="34" pos:column="12"/></operator> <call><name pos:line="34" pos:column="13">cf_util_get_string<pos:position pos:line="34" pos:column="31"/></name><argument_list pos:line="34" pos:column="31">(<argument><expr><name pos:line="34" pos:column="32">option<pos:position pos:line="34" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="40">&amp;<pos:position pos:line="34" pos:column="45"/></operator><name><name pos:line="34" pos:column="41">dd<pos:position pos:line="34" pos:column="43"/></name><operator pos:line="34" pos:column="43">-&gt;<pos:position pos:line="34" pos:column="48"/></operator><name pos:line="34" pos:column="45">type_instance<pos:position pos:line="34" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="60"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="35" pos:column="5">else <if pos:line="35" pos:column="10">if <condition pos:line="35" pos:column="13">(<expr><call><name pos:line="35" pos:column="14">strcasecmp<pos:position pos:line="35" pos:column="24"/></name><argument_list pos:line="35" pos:column="24">(<argument><expr><literal type="string" pos:line="35" pos:column="25">"Shift"<pos:position pos:line="35" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="34">option<pos:position pos:line="35" pos:column="40"/></name><operator pos:line="35" pos:column="40">-&gt;<pos:position pos:line="35" pos:column="45"/></operator><name pos:line="35" pos:column="42">key<pos:position pos:line="35" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="46"/></argument_list></call> <operator pos:line="35" pos:column="47">==<pos:position pos:line="35" pos:column="49"/></operator> <literal type="number" pos:line="35" pos:column="50">0<pos:position pos:line="35" pos:column="51"/></literal></expr>)<pos:position pos:line="35" pos:column="52"/></condition><then pos:line="35" pos:column="52">
      <block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="7">ret<pos:position pos:line="36" pos:column="10"/></name> <operator pos:line="36" pos:column="11">=<pos:position pos:line="36" pos:column="12"/></operator> <call><name pos:line="36" pos:column="13">cf_util_get_double<pos:position pos:line="36" pos:column="31"/></name><argument_list pos:line="36" pos:column="31">(<argument><expr><name pos:line="36" pos:column="32">option<pos:position pos:line="36" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="40">&amp;<pos:position pos:line="36" pos:column="45"/></operator><name><name pos:line="36" pos:column="41">dd<pos:position pos:line="36" pos:column="43"/></name><operator pos:line="36" pos:column="43">-&gt;<pos:position pos:line="36" pos:column="48"/></operator><name pos:line="36" pos:column="45">shift<pos:position pos:line="36" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="52"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="37" pos:column="5">else <if pos:line="37" pos:column="10">if <condition pos:line="37" pos:column="13">(<expr><call><name pos:line="37" pos:column="14">strcasecmp<pos:position pos:line="37" pos:column="24"/></name><argument_list pos:line="37" pos:column="24">(<argument><expr><literal type="string" pos:line="37" pos:column="25">"Scale"<pos:position pos:line="37" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="34">option<pos:position pos:line="37" pos:column="40"/></name><operator pos:line="37" pos:column="40">-&gt;<pos:position pos:line="37" pos:column="45"/></operator><name pos:line="37" pos:column="42">key<pos:position pos:line="37" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="46"/></argument_list></call> <operator pos:line="37" pos:column="47">==<pos:position pos:line="37" pos:column="49"/></operator> <literal type="number" pos:line="37" pos:column="50">0<pos:position pos:line="37" pos:column="51"/></literal></expr>)<pos:position pos:line="37" pos:column="52"/></condition><then pos:line="37" pos:column="52">
      <block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="7">ret<pos:position pos:line="38" pos:column="10"/></name> <operator pos:line="38" pos:column="11">=<pos:position pos:line="38" pos:column="12"/></operator> <call><name pos:line="38" pos:column="13">cf_util_get_double<pos:position pos:line="38" pos:column="31"/></name><argument_list pos:line="38" pos:column="31">(<argument><expr><name pos:line="38" pos:column="32">option<pos:position pos:line="38" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="40">&amp;<pos:position pos:line="38" pos:column="45"/></operator><name><name pos:line="38" pos:column="41">dd<pos:position pos:line="38" pos:column="43"/></name><operator pos:line="38" pos:column="43">-&gt;<pos:position pos:line="38" pos:column="48"/></operator><name pos:line="38" pos:column="45">scale<pos:position pos:line="38" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="52"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="39" pos:column="5">else <if pos:line="39" pos:column="10">if <condition pos:line="39" pos:column="13">(<expr><call><name pos:line="39" pos:column="14">strcasecmp<pos:position pos:line="39" pos:column="24"/></name><argument_list pos:line="39" pos:column="24">(<argument><expr><literal type="string" pos:line="39" pos:column="25">"OIDs"<pos:position pos:line="39" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="33">option<pos:position pos:line="39" pos:column="39"/></name><operator pos:line="39" pos:column="39">-&gt;<pos:position pos:line="39" pos:column="44"/></operator><name pos:line="39" pos:column="41">key<pos:position pos:line="39" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="45"/></argument_list></call> <operator pos:line="39" pos:column="46">==<pos:position pos:line="39" pos:column="48"/></operator> <literal type="number" pos:line="39" pos:column="49">0<pos:position pos:line="39" pos:column="50"/></literal></expr>)<pos:position pos:line="39" pos:column="51"/></condition><then pos:line="39" pos:column="51">
      <block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="7">ret<pos:position pos:line="40" pos:column="10"/></name> <operator pos:line="40" pos:column="11">=<pos:position pos:line="40" pos:column="12"/></operator> <call><name pos:line="40" pos:column="13">snmp_agent_config_data_oids<pos:position pos:line="40" pos:column="40"/></name><argument_list pos:line="40" pos:column="40">(<argument><expr><name pos:line="40" pos:column="41">dd<pos:position pos:line="40" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="45">option<pos:position pos:line="40" pos:column="51"/></name></expr></argument>)<pos:position pos:line="40" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="53"/></expr_stmt></block></then></if></elseif>
    <else pos:line="41" pos:column="5">else <block pos:line="41" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="42" pos:column="7">WARNING<pos:position pos:line="42" pos:column="14"/></name><argument_list pos:line="42" pos:column="14">(<argument><expr><name pos:line="42" pos:column="15">PLUGIN_NAME<pos:position pos:line="42" pos:column="26"/></name> <literal type="string" pos:line="42" pos:column="27">": Option `%s' not allowed here"<pos:position pos:line="42" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="61">option<pos:position pos:line="42" pos:column="67"/></name><operator pos:line="42" pos:column="67">-&gt;<pos:position pos:line="42" pos:column="72"/></operator><name pos:line="42" pos:column="69">key<pos:position pos:line="42" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="74"/></expr_stmt>
      <expr_stmt><expr><name pos:line="43" pos:column="7">ret<pos:position pos:line="43" pos:column="10"/></name> <operator pos:line="43" pos:column="11">=<pos:position pos:line="43" pos:column="12"/></operator> <operator pos:line="43" pos:column="13">-<pos:position pos:line="43" pos:column="14"/></operator><literal type="number" pos:line="43" pos:column="14">1<pos:position pos:line="43" pos:column="15"/></literal></expr>;<pos:position pos:line="43" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="44" pos:column="6"/></block></else></if>

    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><name pos:line="46" pos:column="9">ret<pos:position pos:line="46" pos:column="12"/></name> <operator pos:line="46" pos:column="13">!=<pos:position pos:line="46" pos:column="15"/></operator> <literal type="number" pos:line="46" pos:column="16">0<pos:position pos:line="46" pos:column="17"/></literal></expr>)<pos:position pos:line="46" pos:column="18"/></condition><then pos:line="46" pos:column="18"> <block pos:line="46" pos:column="19">{
      <expr_stmt><expr><call><name pos:line="47" pos:column="7">snmp_agent_free_data<pos:position pos:line="47" pos:column="27"/></name><argument_list pos:line="47" pos:column="27">(<argument><expr><operator pos:line="47" pos:column="28">&amp;<pos:position pos:line="47" pos:column="33"/></operator><name pos:line="47" pos:column="29">dd<pos:position pos:line="47" pos:column="31"/></name></expr></argument>)<pos:position pos:line="47" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="33"/></expr_stmt>
      <return pos:line="48" pos:column="7">return <expr><operator pos:line="48" pos:column="14">-<pos:position pos:line="48" pos:column="15"/></operator><literal type="number" pos:line="48" pos:column="15">1<pos:position pos:line="48" pos:column="16"/></literal></expr>;<pos:position pos:line="48" pos:column="17"/></return>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>
  }<pos:position pos:line="50" pos:column="4"/></block></for>

  <decl_stmt><decl><type><name pos:line="52" pos:column="3">llentry_t<pos:position pos:line="52" pos:column="12"/></name> <modifier pos:line="52" pos:column="13">*<pos:position pos:line="52" pos:column="14"/></modifier></type><name pos:line="52" pos:column="14">entry<pos:position pos:line="52" pos:column="19"/></name> <init pos:line="52" pos:column="20">= <expr><call><name pos:line="52" pos:column="22">llentry_create<pos:position pos:line="52" pos:column="36"/></name><argument_list pos:line="52" pos:column="36">(<argument><expr><name><name pos:line="52" pos:column="37">dd<pos:position pos:line="52" pos:column="39"/></name><operator pos:line="52" pos:column="39">-&gt;<pos:position pos:line="52" pos:column="44"/></operator><name pos:line="52" pos:column="41">name<pos:position pos:line="52" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="47">dd<pos:position pos:line="52" pos:column="49"/></name></expr></argument>)<pos:position pos:line="52" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="52" pos:column="51"/></decl_stmt>
  <if pos:line="53" pos:column="3">if <condition pos:line="53" pos:column="6">(<expr><name pos:line="53" pos:column="7">entry<pos:position pos:line="53" pos:column="12"/></name> <operator pos:line="53" pos:column="13">==<pos:position pos:line="53" pos:column="15"/></operator> <name pos:line="53" pos:column="16">NULL<pos:position pos:line="53" pos:column="20"/></name></expr>)<pos:position pos:line="53" pos:column="21"/></condition><then pos:line="53" pos:column="21"> <block pos:line="53" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="54" pos:column="5">snmp_agent_free_data<pos:position pos:line="54" pos:column="25"/></name><argument_list pos:line="54" pos:column="25">(<argument><expr><operator pos:line="54" pos:column="26">&amp;<pos:position pos:line="54" pos:column="31"/></operator><name pos:line="54" pos:column="27">dd<pos:position pos:line="54" pos:column="29"/></name></expr></argument>)<pos:position pos:line="54" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="31"/></expr_stmt>
    <return pos:line="55" pos:column="5">return <expr><operator pos:line="55" pos:column="12">-<pos:position pos:line="55" pos:column="13"/></operator><name pos:line="55" pos:column="13">ENOMEM<pos:position pos:line="55" pos:column="19"/></name></expr>;<pos:position pos:line="55" pos:column="20"/></return>
  }<pos:position pos:line="56" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="58" pos:column="3">llist_append<pos:position pos:line="58" pos:column="15"/></name><argument_list pos:line="58" pos:column="15">(<argument><expr><name><name pos:line="58" pos:column="16">g_agent<pos:position pos:line="58" pos:column="23"/></name><operator pos:line="58" pos:column="23">-&gt;<pos:position pos:line="58" pos:column="28"/></operator><name pos:line="58" pos:column="25">scalars<pos:position pos:line="58" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="34">entry<pos:position pos:line="58" pos:column="39"/></name></expr></argument>)<pos:position pos:line="58" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="41"/></expr_stmt>

  <return pos:line="60" pos:column="3">return <expr><literal type="number" pos:line="60" pos:column="10">0<pos:position pos:line="60" pos:column="11"/></literal></expr>;<pos:position pos:line="60" pos:column="12"/></return>
}<pos:position pos:line="61" pos:column="2"/></block></function></unit>

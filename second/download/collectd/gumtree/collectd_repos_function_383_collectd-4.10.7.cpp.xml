<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_383_collectd-4.10.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">config_set_i<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">name<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">int<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">var<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">oconfig_item_t<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">ci<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">int<pos:position pos:line="2" pos:column="46"/></name></type> <name pos:line="2" pos:column="47">min<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">value<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">(<pos:position pos:line="6" pos:column="14"/></operator><literal type="number" pos:line="6" pos:column="14">0<pos:position pos:line="6" pos:column="15"/></literal> <operator pos:line="6" pos:column="16">!=<pos:position pos:line="6" pos:column="18"/></operator> <name><name pos:line="6" pos:column="19">ci<pos:position pos:line="6" pos:column="21"/></name><operator pos:line="6" pos:column="21">-&gt;<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="23">children_num<pos:position pos:line="6" pos:column="35"/></name></name><operator pos:line="6" pos:column="35">)<pos:position pos:line="6" pos:column="36"/></operator> <operator pos:line="6" pos:column="37">||<pos:position pos:line="6" pos:column="39"/></operator> <operator pos:line="6" pos:column="40">(<pos:position pos:line="6" pos:column="41"/></operator><literal type="number" pos:line="6" pos:column="41">1<pos:position pos:line="6" pos:column="42"/></literal> <operator pos:line="6" pos:column="43">!=<pos:position pos:line="6" pos:column="45"/></operator> <name><name pos:line="6" pos:column="46">ci<pos:position pos:line="6" pos:column="48"/></name><operator pos:line="6" pos:column="48">-&gt;<pos:position pos:line="6" pos:column="53"/></operator><name pos:line="6" pos:column="50">values_num<pos:position pos:line="6" pos:column="60"/></name></name><operator pos:line="6" pos:column="60">)<pos:position pos:line="6" pos:column="61"/></operator>
			<operator pos:line="7" pos:column="25">||<pos:position pos:line="7" pos:column="27"/></operator> <operator pos:line="7" pos:column="28">(<pos:position pos:line="7" pos:column="29"/></operator><name pos:line="7" pos:column="29">OCONFIG_TYPE_NUMBER<pos:position pos:line="7" pos:column="48"/></name> <operator pos:line="7" pos:column="49">!=<pos:position pos:line="7" pos:column="51"/></operator> <name><name pos:line="7" pos:column="52">ci<pos:position pos:line="7" pos:column="54"/></name><operator pos:line="7" pos:column="54">-&gt;<pos:position pos:line="7" pos:column="59"/></operator><name pos:line="7" pos:column="56">values<pos:position pos:line="7" pos:column="62"/></name><index pos:line="7" pos:column="62">[<expr><literal type="number" pos:line="7" pos:column="63">0<pos:position pos:line="7" pos:column="64"/></literal></expr>]<pos:position pos:line="7" pos:column="65"/></index></name><operator pos:line="7" pos:column="65">.<pos:position pos:line="7" pos:column="66"/></operator><name pos:line="7" pos:column="66">type<pos:position pos:line="7" pos:column="70"/></name><operator pos:line="7" pos:column="70">)<pos:position pos:line="7" pos:column="71"/></operator></expr>)<pos:position pos:line="7" pos:column="72"/></condition><then pos:line="7" pos:column="72"> <block pos:line="7" pos:column="73">{
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">log_err<pos:position pos:line="8" pos:column="24"/></name> <argument_list pos:line="8" pos:column="25">(<argument><expr><literal type="string" pos:line="8" pos:column="26">"%s expects a single number argument."<pos:position pos:line="8" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="66">name<pos:position pos:line="8" pos:column="70"/></name></expr></argument>)<pos:position pos:line="8" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="72"/></expr_stmt>
		<return pos:line="9" pos:column="17">return <expr><literal type="number" pos:line="9" pos:column="24">1<pos:position pos:line="9" pos:column="25"/></literal></expr>;<pos:position pos:line="9" pos:column="26"/></return>
	}<pos:position pos:line="10" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="12" pos:column="9">value<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <operator pos:line="12" pos:column="17">(<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="18">int<pos:position pos:line="12" pos:column="21"/></name><operator pos:line="12" pos:column="21">)<pos:position pos:line="12" pos:column="22"/></operator><name><name pos:line="12" pos:column="22">ci<pos:position pos:line="12" pos:column="24"/></name><operator pos:line="12" pos:column="24">-&gt;<pos:position pos:line="12" pos:column="29"/></operator><name pos:line="12" pos:column="26">values<pos:position pos:line="12" pos:column="32"/></name><index pos:line="12" pos:column="32">[<expr><literal type="number" pos:line="12" pos:column="33">0<pos:position pos:line="12" pos:column="34"/></literal></expr>]<pos:position pos:line="12" pos:column="35"/></index></name><operator pos:line="12" pos:column="35">.<pos:position pos:line="12" pos:column="36"/></operator><name><name pos:line="12" pos:column="36">value<pos:position pos:line="12" pos:column="41"/></name><operator pos:line="12" pos:column="41">.<pos:position pos:line="12" pos:column="42"/></operator><name pos:line="12" pos:column="42">number<pos:position pos:line="12" pos:column="48"/></name></name></expr>;<pos:position pos:line="12" pos:column="49"/></expr_stmt>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">value<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">&lt;<pos:position pos:line="14" pos:column="23"/></operator> <name pos:line="14" pos:column="21">min<pos:position pos:line="14" pos:column="24"/></name></expr>)<pos:position pos:line="14" pos:column="25"/></condition><then pos:line="14" pos:column="25"> <block pos:line="14" pos:column="26">{
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">log_err<pos:position pos:line="15" pos:column="24"/></name> <argument_list pos:line="15" pos:column="25">(<argument><expr><literal type="string" pos:line="15" pos:column="26">"%s expects a number greater or equal to %i."<pos:position pos:line="15" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="73">name<pos:position pos:line="15" pos:column="77"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="79">min<pos:position pos:line="15" pos:column="82"/></name></expr></argument>)<pos:position pos:line="15" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="84"/></expr_stmt>
		<return pos:line="16" pos:column="17">return <expr><literal type="number" pos:line="16" pos:column="24">1<pos:position pos:line="16" pos:column="25"/></literal></expr>;<pos:position pos:line="16" pos:column="26"/></return>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>

	<expr_stmt><expr><operator pos:line="19" pos:column="9">*<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">var<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">=<pos:position pos:line="19" pos:column="15"/></operator> <name pos:line="19" pos:column="16">value<pos:position pos:line="19" pos:column="21"/></name></expr>;<pos:position pos:line="19" pos:column="22"/></expr_stmt>
	<return pos:line="20" pos:column="9">return <expr><literal type="number" pos:line="20" pos:column="16">0<pos:position pos:line="20" pos:column="17"/></literal></expr>;<pos:position pos:line="20" pos:column="18"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

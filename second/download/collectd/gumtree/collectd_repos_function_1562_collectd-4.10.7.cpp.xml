<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1562_collectd-4.10.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ctail_config_add_match<pos:position pos:line="1" pos:column="34"/></name> <parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">cu_tail_match_t<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">tm<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
    <parameter><decl><type><specifier pos:line="2" pos:column="5">const<pos:position pos:line="2" pos:column="10"/></specifier> <name pos:line="2" pos:column="11">char<pos:position pos:line="2" pos:column="15"/></name> <modifier pos:line="2" pos:column="16">*<pos:position pos:line="2" pos:column="17"/></modifier></type><name pos:line="2" pos:column="17">plugin_instance<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="34">oconfig_item_t<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">ci<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">ctail_config_match_t<pos:position pos:line="4" pos:column="23"/></name></type> <name pos:line="4" pos:column="24">cm<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">status<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">i<pos:position pos:line="6" pos:column="8"/></name></decl>;<pos:position pos:line="6" pos:column="9"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">memset<pos:position pos:line="8" pos:column="9"/></name> <argument_list pos:line="8" pos:column="10">(<argument><expr><operator pos:line="8" pos:column="11">&amp;<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="12">cm<pos:position pos:line="8" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="8" pos:column="16">'\0'<pos:position pos:line="8" pos:column="20"/></literal></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="22">sizeof <argument_list pos:line="8" pos:column="29">(<argument><expr><name pos:line="8" pos:column="30">cm<pos:position pos:line="8" pos:column="32"/></name></expr></argument>)<pos:position pos:line="8" pos:column="33"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="35"/></expr_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name><name pos:line="10" pos:column="7">ci<pos:position pos:line="10" pos:column="9"/></name><operator pos:line="10" pos:column="9">-&gt;<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="11">values_num<pos:position pos:line="10" pos:column="21"/></name></name> <operator pos:line="10" pos:column="22">!=<pos:position pos:line="10" pos:column="24"/></operator> <literal type="number" pos:line="10" pos:column="25">0<pos:position pos:line="10" pos:column="26"/></literal></expr>)<pos:position pos:line="10" pos:column="27"/></condition><then pos:line="10" pos:column="27">
  <block pos:line="11" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">WARNING<pos:position pos:line="12" pos:column="12"/></name> <argument_list pos:line="12" pos:column="13">(<argument><expr><literal type="string" pos:line="12" pos:column="14">"tail plugin: Ignoring arguments for the `Match' block."<pos:position pos:line="12" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="72"/></expr_stmt>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="15" pos:column="3">status<pos:position pos:line="15" pos:column="9"/></name> <operator pos:line="15" pos:column="10">=<pos:position pos:line="15" pos:column="11"/></operator> <literal type="number" pos:line="15" pos:column="12">0<pos:position pos:line="15" pos:column="13"/></literal></expr>;<pos:position pos:line="15" pos:column="14"/></expr_stmt>
  <for pos:line="16" pos:column="3">for <control pos:line="16" pos:column="7">(<init><expr><name pos:line="16" pos:column="8">i<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">=<pos:position pos:line="16" pos:column="11"/></operator> <literal type="number" pos:line="16" pos:column="12">0<pos:position pos:line="16" pos:column="13"/></literal></expr>;<pos:position pos:line="16" pos:column="14"/></init> <condition><expr><name pos:line="16" pos:column="15">i<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">&lt;<pos:position pos:line="16" pos:column="21"/></operator> <name><name pos:line="16" pos:column="19">ci<pos:position pos:line="16" pos:column="21"/></name><operator pos:line="16" pos:column="21">-&gt;<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="23">children_num<pos:position pos:line="16" pos:column="35"/></name></name></expr>;<pos:position pos:line="16" pos:column="36"/></condition> <incr><expr><name pos:line="16" pos:column="37">i<pos:position pos:line="16" pos:column="38"/></name><operator pos:line="16" pos:column="38">++<pos:position pos:line="16" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="16" pos:column="41"/></control>
  <block pos:line="17" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">oconfig_item_t<pos:position pos:line="18" pos:column="19"/></name> <modifier pos:line="18" pos:column="20">*<pos:position pos:line="18" pos:column="21"/></modifier></type><name pos:line="18" pos:column="21">option<pos:position pos:line="18" pos:column="27"/></name> <init pos:line="18" pos:column="28">= <expr><name><name pos:line="18" pos:column="30">ci<pos:position pos:line="18" pos:column="32"/></name><operator pos:line="18" pos:column="32">-&gt;<pos:position pos:line="18" pos:column="37"/></operator><name pos:line="18" pos:column="34">children<pos:position pos:line="18" pos:column="42"/></name></name> <operator pos:line="18" pos:column="43">+<pos:position pos:line="18" pos:column="44"/></operator> <name pos:line="18" pos:column="45">i<pos:position pos:line="18" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="18" pos:column="47"/></decl_stmt>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><call><name pos:line="20" pos:column="9">strcasecmp<pos:position pos:line="20" pos:column="19"/></name> <argument_list pos:line="20" pos:column="20">(<argument><expr><literal type="string" pos:line="20" pos:column="21">"Regex"<pos:position pos:line="20" pos:column="28"/></literal></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="30">option<pos:position pos:line="20" pos:column="36"/></name><operator pos:line="20" pos:column="36">-&gt;<pos:position pos:line="20" pos:column="41"/></operator><name pos:line="20" pos:column="38">key<pos:position pos:line="20" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="42"/></argument_list></call> <operator pos:line="20" pos:column="43">==<pos:position pos:line="20" pos:column="45"/></operator> <literal type="number" pos:line="20" pos:column="46">0<pos:position pos:line="20" pos:column="47"/></literal></expr>)<pos:position pos:line="20" pos:column="48"/></condition><then pos:line="20" pos:column="48">
      <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="7">status<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">=<pos:position pos:line="21" pos:column="15"/></operator> <call><name pos:line="21" pos:column="16">ctail_config_add_string<pos:position pos:line="21" pos:column="39"/></name> <argument_list pos:line="21" pos:column="40">(<argument><expr><literal type="string" pos:line="21" pos:column="41">"Regex"<pos:position pos:line="21" pos:column="48"/></literal></expr></argument>, <argument><expr><operator pos:line="21" pos:column="50">&amp;<pos:position pos:line="21" pos:column="55"/></operator><name><name pos:line="21" pos:column="51">cm<pos:position pos:line="21" pos:column="53"/></name><operator pos:line="21" pos:column="53">.<pos:position pos:line="21" pos:column="54"/></operator><name pos:line="21" pos:column="54">regex<pos:position pos:line="21" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="61">option<pos:position pos:line="21" pos:column="67"/></name></expr></argument>)<pos:position pos:line="21" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="69"/></expr_stmt></block></then>
    <elseif pos:line="22" pos:column="5">else <if pos:line="22" pos:column="10">if <condition pos:line="22" pos:column="13">(<expr><call><name pos:line="22" pos:column="14">strcasecmp<pos:position pos:line="22" pos:column="24"/></name> <argument_list pos:line="22" pos:column="25">(<argument><expr><literal type="string" pos:line="22" pos:column="26">"ExcludeRegex"<pos:position pos:line="22" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="42">option<pos:position pos:line="22" pos:column="48"/></name><operator pos:line="22" pos:column="48">-&gt;<pos:position pos:line="22" pos:column="53"/></operator><name pos:line="22" pos:column="50">key<pos:position pos:line="22" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="54"/></argument_list></call> <operator pos:line="22" pos:column="55">==<pos:position pos:line="22" pos:column="57"/></operator> <literal type="number" pos:line="22" pos:column="58">0<pos:position pos:line="22" pos:column="59"/></literal></expr>)<pos:position pos:line="22" pos:column="60"/></condition><then pos:line="22" pos:column="60">
      <block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="7">status<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">=<pos:position pos:line="23" pos:column="15"/></operator> <call><name pos:line="23" pos:column="16">ctail_config_add_string<pos:position pos:line="23" pos:column="39"/></name> <argument_list pos:line="23" pos:column="40">(<argument><expr><literal type="string" pos:line="23" pos:column="41">"ExcludeRegex"<pos:position pos:line="23" pos:column="55"/></literal></expr></argument>, <argument><expr><operator pos:line="23" pos:column="57">&amp;<pos:position pos:line="23" pos:column="62"/></operator><name><name pos:line="23" pos:column="58">cm<pos:position pos:line="23" pos:column="60"/></name><operator pos:line="23" pos:column="60">.<pos:position pos:line="23" pos:column="61"/></operator><name pos:line="23" pos:column="61">excluderegex<pos:position pos:line="23" pos:column="73"/></name></name></expr></argument>,
					<argument><expr><name pos:line="24" pos:column="41">option<pos:position pos:line="24" pos:column="47"/></name></expr></argument>)<pos:position pos:line="24" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="49"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="25" pos:column="5">else <if pos:line="25" pos:column="10">if <condition pos:line="25" pos:column="13">(<expr><call><name pos:line="25" pos:column="14">strcasecmp<pos:position pos:line="25" pos:column="24"/></name> <argument_list pos:line="25" pos:column="25">(<argument><expr><literal type="string" pos:line="25" pos:column="26">"DSType"<pos:position pos:line="25" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="36">option<pos:position pos:line="25" pos:column="42"/></name><operator pos:line="25" pos:column="42">-&gt;<pos:position pos:line="25" pos:column="47"/></operator><name pos:line="25" pos:column="44">key<pos:position pos:line="25" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="48"/></argument_list></call> <operator pos:line="25" pos:column="49">==<pos:position pos:line="25" pos:column="51"/></operator> <literal type="number" pos:line="25" pos:column="52">0<pos:position pos:line="25" pos:column="53"/></literal></expr>)<pos:position pos:line="25" pos:column="54"/></condition><then pos:line="25" pos:column="54">
      <block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="7">status<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">=<pos:position pos:line="26" pos:column="15"/></operator> <call><name pos:line="26" pos:column="16">ctail_config_add_match_dstype<pos:position pos:line="26" pos:column="45"/></name> <argument_list pos:line="26" pos:column="46">(<argument><expr><operator pos:line="26" pos:column="47">&amp;<pos:position pos:line="26" pos:column="52"/></operator><name pos:line="26" pos:column="48">cm<pos:position pos:line="26" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="52">option<pos:position pos:line="26" pos:column="58"/></name></expr></argument>)<pos:position pos:line="26" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="60"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="27" pos:column="5">else <if pos:line="27" pos:column="10">if <condition pos:line="27" pos:column="13">(<expr><call><name pos:line="27" pos:column="14">strcasecmp<pos:position pos:line="27" pos:column="24"/></name> <argument_list pos:line="27" pos:column="25">(<argument><expr><literal type="string" pos:line="27" pos:column="26">"Type"<pos:position pos:line="27" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="34">option<pos:position pos:line="27" pos:column="40"/></name><operator pos:line="27" pos:column="40">-&gt;<pos:position pos:line="27" pos:column="45"/></operator><name pos:line="27" pos:column="42">key<pos:position pos:line="27" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="46"/></argument_list></call> <operator pos:line="27" pos:column="47">==<pos:position pos:line="27" pos:column="49"/></operator> <literal type="number" pos:line="27" pos:column="50">0<pos:position pos:line="27" pos:column="51"/></literal></expr>)<pos:position pos:line="27" pos:column="52"/></condition><then pos:line="27" pos:column="52">
      <block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="7">status<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">=<pos:position pos:line="28" pos:column="15"/></operator> <call><name pos:line="28" pos:column="16">ctail_config_add_string<pos:position pos:line="28" pos:column="39"/></name> <argument_list pos:line="28" pos:column="40">(<argument><expr><literal type="string" pos:line="28" pos:column="41">"Type"<pos:position pos:line="28" pos:column="47"/></literal></expr></argument>, <argument><expr><operator pos:line="28" pos:column="49">&amp;<pos:position pos:line="28" pos:column="54"/></operator><name><name pos:line="28" pos:column="50">cm<pos:position pos:line="28" pos:column="52"/></name><operator pos:line="28" pos:column="52">.<pos:position pos:line="28" pos:column="53"/></operator><name pos:line="28" pos:column="53">type<pos:position pos:line="28" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="59">option<pos:position pos:line="28" pos:column="65"/></name></expr></argument>)<pos:position pos:line="28" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="67"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="29" pos:column="5">else <if pos:line="29" pos:column="10">if <condition pos:line="29" pos:column="13">(<expr><call><name pos:line="29" pos:column="14">strcasecmp<pos:position pos:line="29" pos:column="24"/></name> <argument_list pos:line="29" pos:column="25">(<argument><expr><literal type="string" pos:line="29" pos:column="26">"Instance"<pos:position pos:line="29" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="38">option<pos:position pos:line="29" pos:column="44"/></name><operator pos:line="29" pos:column="44">-&gt;<pos:position pos:line="29" pos:column="49"/></operator><name pos:line="29" pos:column="46">key<pos:position pos:line="29" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="50"/></argument_list></call> <operator pos:line="29" pos:column="51">==<pos:position pos:line="29" pos:column="53"/></operator> <literal type="number" pos:line="29" pos:column="54">0<pos:position pos:line="29" pos:column="55"/></literal></expr>)<pos:position pos:line="29" pos:column="56"/></condition><then pos:line="29" pos:column="56">
      <block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="7">status<pos:position pos:line="30" pos:column="13"/></name> <operator pos:line="30" pos:column="14">=<pos:position pos:line="30" pos:column="15"/></operator> <call><name pos:line="30" pos:column="16">ctail_config_add_string<pos:position pos:line="30" pos:column="39"/></name> <argument_list pos:line="30" pos:column="40">(<argument><expr><literal type="string" pos:line="30" pos:column="41">"Instance"<pos:position pos:line="30" pos:column="51"/></literal></expr></argument>, <argument><expr><operator pos:line="30" pos:column="53">&amp;<pos:position pos:line="30" pos:column="58"/></operator><name><name pos:line="30" pos:column="54">cm<pos:position pos:line="30" pos:column="56"/></name><operator pos:line="30" pos:column="56">.<pos:position pos:line="30" pos:column="57"/></operator><name pos:line="30" pos:column="57">type_instance<pos:position pos:line="30" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="72">option<pos:position pos:line="30" pos:column="78"/></name></expr></argument>)<pos:position pos:line="30" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="80"/></expr_stmt></block></then></if></elseif>
    <else pos:line="31" pos:column="5">else
    <block pos:line="32" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="33" pos:column="7">WARNING<pos:position pos:line="33" pos:column="14"/></name> <argument_list pos:line="33" pos:column="15">(<argument><expr><literal type="string" pos:line="33" pos:column="16">"tail plugin: Option `%s' not allowed here."<pos:position pos:line="33" pos:column="60"/></literal></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="62">option<pos:position pos:line="33" pos:column="68"/></name><operator pos:line="33" pos:column="68">-&gt;<pos:position pos:line="33" pos:column="73"/></operator><name pos:line="33" pos:column="70">key<pos:position pos:line="33" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="75"/></expr_stmt>
      <expr_stmt><expr><name pos:line="34" pos:column="7">status<pos:position pos:line="34" pos:column="13"/></name> <operator pos:line="34" pos:column="14">=<pos:position pos:line="34" pos:column="15"/></operator> <operator pos:line="34" pos:column="16">-<pos:position pos:line="34" pos:column="17"/></operator><literal type="number" pos:line="34" pos:column="17">1<pos:position pos:line="34" pos:column="18"/></literal></expr>;<pos:position pos:line="34" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></else></if>

    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name pos:line="37" pos:column="9">status<pos:position pos:line="37" pos:column="15"/></name> <operator pos:line="37" pos:column="16">!=<pos:position pos:line="37" pos:column="18"/></operator> <literal type="number" pos:line="37" pos:column="19">0<pos:position pos:line="37" pos:column="20"/></literal></expr>)<pos:position pos:line="37" pos:column="21"/></condition><then pos:line="37" pos:column="21">
      <block type="pseudo"><break pos:line="38" pos:column="7">break;<pos:position pos:line="38" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="39" pos:column="4"/></block></for> <comment type="block" pos:line="39" pos:column="5">/* for (i = 0; i &lt; ci-&gt;children_num; i++) */</comment>

  <while pos:line="41" pos:column="3">while <condition pos:line="41" pos:column="9">(<expr><name pos:line="41" pos:column="10">status<pos:position pos:line="41" pos:column="16"/></name> <operator pos:line="41" pos:column="17">==<pos:position pos:line="41" pos:column="19"/></operator> <literal type="number" pos:line="41" pos:column="20">0<pos:position pos:line="41" pos:column="21"/></literal></expr>)<pos:position pos:line="41" pos:column="22"/></condition>
  <block pos:line="42" pos:column="3">{
    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name><name pos:line="43" pos:column="9">cm<pos:position pos:line="43" pos:column="11"/></name><operator pos:line="43" pos:column="11">.<pos:position pos:line="43" pos:column="12"/></operator><name pos:line="43" pos:column="12">regex<pos:position pos:line="43" pos:column="17"/></name></name> <operator pos:line="43" pos:column="18">==<pos:position pos:line="43" pos:column="20"/></operator> <name pos:line="43" pos:column="21">NULL<pos:position pos:line="43" pos:column="25"/></name></expr>)<pos:position pos:line="43" pos:column="26"/></condition><then pos:line="43" pos:column="26">
    <block pos:line="44" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="45" pos:column="7">WARNING<pos:position pos:line="45" pos:column="14"/></name> <argument_list pos:line="45" pos:column="15">(<argument><expr><literal type="string" pos:line="45" pos:column="16">"tail plugin: `Regex' missing in `Match' block."<pos:position pos:line="45" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="66"/></expr_stmt>
      <expr_stmt><expr><name pos:line="46" pos:column="7">status<pos:position pos:line="46" pos:column="13"/></name> <operator pos:line="46" pos:column="14">=<pos:position pos:line="46" pos:column="15"/></operator> <operator pos:line="46" pos:column="16">-<pos:position pos:line="46" pos:column="17"/></operator><literal type="number" pos:line="46" pos:column="17">1<pos:position pos:line="46" pos:column="18"/></literal></expr>;<pos:position pos:line="46" pos:column="19"/></expr_stmt>
      <break pos:line="47" pos:column="7">break;<pos:position pos:line="47" pos:column="13"/></break>
    }<pos:position pos:line="48" pos:column="6"/></block></then></if>

    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><name><name pos:line="50" pos:column="9">cm<pos:position pos:line="50" pos:column="11"/></name><operator pos:line="50" pos:column="11">.<pos:position pos:line="50" pos:column="12"/></operator><name pos:line="50" pos:column="12">type<pos:position pos:line="50" pos:column="16"/></name></name> <operator pos:line="50" pos:column="17">==<pos:position pos:line="50" pos:column="19"/></operator> <name pos:line="50" pos:column="20">NULL<pos:position pos:line="50" pos:column="24"/></name></expr>)<pos:position pos:line="50" pos:column="25"/></condition><then pos:line="50" pos:column="25">
    <block pos:line="51" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="52" pos:column="7">WARNING<pos:position pos:line="52" pos:column="14"/></name> <argument_list pos:line="52" pos:column="15">(<argument><expr><literal type="string" pos:line="52" pos:column="16">"tail plugin: `Type' missing in `Match' block."<pos:position pos:line="52" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="65"/></expr_stmt>
      <expr_stmt><expr><name pos:line="53" pos:column="7">status<pos:position pos:line="53" pos:column="13"/></name> <operator pos:line="53" pos:column="14">=<pos:position pos:line="53" pos:column="15"/></operator> <operator pos:line="53" pos:column="16">-<pos:position pos:line="53" pos:column="17"/></operator><literal type="number" pos:line="53" pos:column="17">1<pos:position pos:line="53" pos:column="18"/></literal></expr>;<pos:position pos:line="53" pos:column="19"/></expr_stmt>
      <break pos:line="54" pos:column="7">break;<pos:position pos:line="54" pos:column="13"/></break>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if>

    <if pos:line="57" pos:column="5">if <condition pos:line="57" pos:column="8">(<expr><name><name pos:line="57" pos:column="9">cm<pos:position pos:line="57" pos:column="11"/></name><operator pos:line="57" pos:column="11">.<pos:position pos:line="57" pos:column="12"/></operator><name pos:line="57" pos:column="12">flags<pos:position pos:line="57" pos:column="17"/></name></name> <operator pos:line="57" pos:column="18">==<pos:position pos:line="57" pos:column="20"/></operator> <literal type="number" pos:line="57" pos:column="21">0<pos:position pos:line="57" pos:column="22"/></literal></expr>)<pos:position pos:line="57" pos:column="23"/></condition><then pos:line="57" pos:column="23">
    <block pos:line="58" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="59" pos:column="7">WARNING<pos:position pos:line="59" pos:column="14"/></name> <argument_list pos:line="59" pos:column="15">(<argument><expr><literal type="string" pos:line="59" pos:column="16">"tail plugin: `DSType' missing in `Match' block."<pos:position pos:line="59" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="67"/></expr_stmt>
      <expr_stmt><expr><name pos:line="60" pos:column="7">status<pos:position pos:line="60" pos:column="13"/></name> <operator pos:line="60" pos:column="14">=<pos:position pos:line="60" pos:column="15"/></operator> <operator pos:line="60" pos:column="16">-<pos:position pos:line="60" pos:column="17"/></operator><literal type="number" pos:line="60" pos:column="17">1<pos:position pos:line="60" pos:column="18"/></literal></expr>;<pos:position pos:line="60" pos:column="19"/></expr_stmt>
      <break pos:line="61" pos:column="7">break;<pos:position pos:line="61" pos:column="13"/></break>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if>

    <break pos:line="64" pos:column="5">break;<pos:position pos:line="64" pos:column="11"/></break>
  }<pos:position pos:line="65" pos:column="4"/></block></while> <comment type="block" pos:line="65" pos:column="5">/* while (status == 0) */</comment>

  <if pos:line="67" pos:column="3">if <condition pos:line="67" pos:column="6">(<expr><name pos:line="67" pos:column="7">status<pos:position pos:line="67" pos:column="13"/></name> <operator pos:line="67" pos:column="14">==<pos:position pos:line="67" pos:column="16"/></operator> <literal type="number" pos:line="67" pos:column="17">0<pos:position pos:line="67" pos:column="18"/></literal></expr>)<pos:position pos:line="67" pos:column="19"/></condition><then pos:line="67" pos:column="19">
  <block pos:line="68" pos:column="3">{
    <expr_stmt><expr><name pos:line="69" pos:column="5">status<pos:position pos:line="69" pos:column="11"/></name> <operator pos:line="69" pos:column="12">=<pos:position pos:line="69" pos:column="13"/></operator> <call><name pos:line="69" pos:column="14">tail_match_add_match_simple<pos:position pos:line="69" pos:column="41"/></name> <argument_list pos:line="69" pos:column="42">(<argument><expr><name pos:line="69" pos:column="43">tm<pos:position pos:line="69" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="47">cm<pos:position pos:line="69" pos:column="49"/></name><operator pos:line="69" pos:column="49">.<pos:position pos:line="69" pos:column="50"/></operator><name pos:line="69" pos:column="50">regex<pos:position pos:line="69" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="57">cm<pos:position pos:line="69" pos:column="59"/></name><operator pos:line="69" pos:column="59">.<pos:position pos:line="69" pos:column="60"/></operator><name pos:line="69" pos:column="60">excluderegex<pos:position pos:line="69" pos:column="72"/></name></name></expr></argument>,
	<argument><expr><name><name pos:line="70" pos:column="9">cm<pos:position pos:line="70" pos:column="11"/></name><operator pos:line="70" pos:column="11">.<pos:position pos:line="70" pos:column="12"/></operator><name pos:line="70" pos:column="12">flags<pos:position pos:line="70" pos:column="17"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="19">"tail"<pos:position pos:line="70" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="70" pos:column="27">plugin_instance<pos:position pos:line="70" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="44">cm<pos:position pos:line="70" pos:column="46"/></name><operator pos:line="70" pos:column="46">.<pos:position pos:line="70" pos:column="47"/></operator><name pos:line="70" pos:column="47">type<pos:position pos:line="70" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="53">cm<pos:position pos:line="70" pos:column="55"/></name><operator pos:line="70" pos:column="55">.<pos:position pos:line="70" pos:column="56"/></operator><name pos:line="70" pos:column="56">type_instance<pos:position pos:line="70" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="71"/></expr_stmt>

    <if pos:line="72" pos:column="5">if <condition pos:line="72" pos:column="8">(<expr><name pos:line="72" pos:column="9">status<pos:position pos:line="72" pos:column="15"/></name> <operator pos:line="72" pos:column="16">!=<pos:position pos:line="72" pos:column="18"/></operator> <literal type="number" pos:line="72" pos:column="19">0<pos:position pos:line="72" pos:column="20"/></literal></expr>)<pos:position pos:line="72" pos:column="21"/></condition><then pos:line="72" pos:column="21">
    <block pos:line="73" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="74" pos:column="7">ERROR<pos:position pos:line="74" pos:column="12"/></name> <argument_list pos:line="74" pos:column="13">(<argument><expr><literal type="string" pos:line="74" pos:column="14">"tail plugin: tail_match_add_match_simple failed."<pos:position pos:line="74" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="66"/></expr_stmt>
    }<pos:position pos:line="75" pos:column="6"/></block></then></if>
  }<pos:position pos:line="76" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="78" pos:column="3">sfree<pos:position pos:line="78" pos:column="8"/></name> <argument_list pos:line="78" pos:column="9">(<argument><expr><name><name pos:line="78" pos:column="10">cm<pos:position pos:line="78" pos:column="12"/></name><operator pos:line="78" pos:column="12">.<pos:position pos:line="78" pos:column="13"/></operator><name pos:line="78" pos:column="13">regex<pos:position pos:line="78" pos:column="18"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="79" pos:column="3">sfree<pos:position pos:line="79" pos:column="8"/></name> <argument_list pos:line="79" pos:column="9">(<argument><expr><name><name pos:line="79" pos:column="10">cm<pos:position pos:line="79" pos:column="12"/></name><operator pos:line="79" pos:column="12">.<pos:position pos:line="79" pos:column="13"/></operator><name pos:line="79" pos:column="13">excluderegex<pos:position pos:line="79" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="80" pos:column="3">sfree<pos:position pos:line="80" pos:column="8"/></name> <argument_list pos:line="80" pos:column="9">(<argument><expr><name><name pos:line="80" pos:column="10">cm<pos:position pos:line="80" pos:column="12"/></name><operator pos:line="80" pos:column="12">.<pos:position pos:line="80" pos:column="13"/></operator><name pos:line="80" pos:column="13">type<pos:position pos:line="80" pos:column="17"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="81" pos:column="3">sfree<pos:position pos:line="81" pos:column="8"/></name> <argument_list pos:line="81" pos:column="9">(<argument><expr><name><name pos:line="81" pos:column="10">cm<pos:position pos:line="81" pos:column="12"/></name><operator pos:line="81" pos:column="12">.<pos:position pos:line="81" pos:column="13"/></operator><name pos:line="81" pos:column="13">type_instance<pos:position pos:line="81" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="81" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="28"/></expr_stmt>

  <return pos:line="83" pos:column="3">return <expr><operator pos:line="83" pos:column="10">(<pos:position pos:line="83" pos:column="11"/></operator><name pos:line="83" pos:column="11">status<pos:position pos:line="83" pos:column="17"/></name><operator pos:line="83" pos:column="17">)<pos:position pos:line="83" pos:column="18"/></operator></expr>;<pos:position pos:line="83" pos:column="19"/></return>
}<pos:position pos:line="84" pos:column="2"/></block></function></unit>

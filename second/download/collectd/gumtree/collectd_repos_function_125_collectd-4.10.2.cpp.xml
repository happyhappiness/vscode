<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_125_collectd-4.10.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">NSSymbol<pos:position pos:line="1" pos:column="16"/></name></type>
<name pos:line="2" pos:column="1">lt__linkedlib_symbol<pos:position pos:line="2" pos:column="21"/></name> <parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier> <name pos:line="2" pos:column="29">char<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">symname<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="44">const<pos:position pos:line="2" pos:column="49"/></specifier> <name pos:line="2" pos:column="50">mach_header<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">mh<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="66"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">NSSymbol<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">symbol<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><literal type="number" pos:line="4" pos:column="21">0<pos:position pos:line="4" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">lt__image_symbol<pos:position pos:line="6" pos:column="23"/></name> <operator pos:line="6" pos:column="24">&amp;&amp;<pos:position pos:line="6" pos:column="34"/></operator> <call><name pos:line="6" pos:column="27">NSIsSymbolNameDefined<pos:position pos:line="6" pos:column="48"/></name> <argument_list pos:line="6" pos:column="49">(<argument><expr><name pos:line="6" pos:column="50">symname<pos:position pos:line="6" pos:column="57"/></name></expr></argument>)<pos:position pos:line="6" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="59"/></condition><then pos:line="6" pos:column="59">
    <block pos:line="7" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="8" pos:column="7">unsigned<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">long<pos:position pos:line="8" pos:column="20"/></name></type> <name pos:line="8" pos:column="21">offset<pos:position pos:line="8" pos:column="27"/></name> <init pos:line="8" pos:column="28">= <expr><sizeof pos:line="8" pos:column="30">sizeof<argument_list pos:line="8" pos:column="36">(<argument><expr><name pos:line="8" pos:column="37">mach_header<pos:position pos:line="8" pos:column="48"/></name></expr></argument>)<pos:position pos:line="8" pos:column="49"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="8" pos:column="50"/></decl_stmt>
      <decl_stmt><decl><type><name><name pos:line="9" pos:column="7">struct<pos:position pos:line="9" pos:column="13"/></name> <name pos:line="9" pos:column="14">load_command<pos:position pos:line="9" pos:column="26"/></name></name> <modifier pos:line="9" pos:column="27">*<pos:position pos:line="9" pos:column="28"/></modifier></type><name pos:line="9" pos:column="28">lc<pos:position pos:line="9" pos:column="30"/></name></decl>;<pos:position pos:line="9" pos:column="31"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="10" pos:column="7">int<pos:position pos:line="10" pos:column="10"/></name></type> <name pos:line="10" pos:column="11">j<pos:position pos:line="10" pos:column="12"/></name></decl>;<pos:position pos:line="10" pos:column="13"/></decl_stmt>

      <for pos:line="12" pos:column="7">for <control pos:line="12" pos:column="11">(<init><expr><name pos:line="12" pos:column="12">j<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <literal type="number" pos:line="12" pos:column="16">0<pos:position pos:line="12" pos:column="17"/></literal></expr>;<pos:position pos:line="12" pos:column="18"/></init> <condition><expr><name pos:line="12" pos:column="19">j<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">&lt;<pos:position pos:line="12" pos:column="25"/></operator> <name><name pos:line="12" pos:column="23">mh<pos:position pos:line="12" pos:column="25"/></name><operator pos:line="12" pos:column="25">-&gt;<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="27">ncmds<pos:position pos:line="12" pos:column="32"/></name></name></expr>;<pos:position pos:line="12" pos:column="33"/></condition> <incr><expr><name pos:line="12" pos:column="34">j<pos:position pos:line="12" pos:column="35"/></name><operator pos:line="12" pos:column="35">++<pos:position pos:line="12" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="12" pos:column="38"/></control>
	<block pos:line="13" pos:column="9">{
	  <expr_stmt><expr><name pos:line="14" pos:column="11">lc<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <operator pos:line="14" pos:column="16">(<pos:position pos:line="14" pos:column="17"/></operator>struct <name pos:line="14" pos:column="24">load_command<pos:position pos:line="14" pos:column="36"/></name><operator pos:line="14" pos:column="36">*<pos:position pos:line="14" pos:column="37"/></operator><operator pos:line="14" pos:column="37">)<pos:position pos:line="14" pos:column="38"/></operator> <operator pos:line="14" pos:column="39">(<pos:position pos:line="14" pos:column="40"/></operator><operator pos:line="14" pos:column="40">(<pos:position pos:line="14" pos:column="41"/></operator><operator pos:line="14" pos:column="41">(<pos:position pos:line="14" pos:column="42"/></operator><name pos:line="14" pos:column="42">unsigned<pos:position pos:line="14" pos:column="50"/></name> <name pos:line="14" pos:column="51">long<pos:position pos:line="14" pos:column="55"/></name><operator pos:line="14" pos:column="55">)<pos:position pos:line="14" pos:column="56"/></operator> <name pos:line="14" pos:column="57">mh<pos:position pos:line="14" pos:column="59"/></name><operator pos:line="14" pos:column="59">)<pos:position pos:line="14" pos:column="60"/></operator> <operator pos:line="14" pos:column="61">+<pos:position pos:line="14" pos:column="62"/></operator> <name pos:line="14" pos:column="63">offset<pos:position pos:line="14" pos:column="69"/></name><operator pos:line="14" pos:column="69">)<pos:position pos:line="14" pos:column="70"/></operator></expr>;<pos:position pos:line="14" pos:column="71"/></expr_stmt>
	  <if pos:line="15" pos:column="11">if <condition pos:line="15" pos:column="14">(<expr><operator pos:line="15" pos:column="15">(<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="16">LC_LOAD_DYLIB<pos:position pos:line="15" pos:column="29"/></name> <operator pos:line="15" pos:column="30">==<pos:position pos:line="15" pos:column="32"/></operator> <name><name pos:line="15" pos:column="33">lc<pos:position pos:line="15" pos:column="35"/></name><operator pos:line="15" pos:column="35">-&gt;<pos:position pos:line="15" pos:column="40"/></operator><name pos:line="15" pos:column="37">cmd<pos:position pos:line="15" pos:column="40"/></name></name><operator pos:line="15" pos:column="40">)<pos:position pos:line="15" pos:column="41"/></operator> <operator pos:line="15" pos:column="42">||<pos:position pos:line="15" pos:column="44"/></operator> <operator pos:line="15" pos:column="45">(<pos:position pos:line="15" pos:column="46"/></operator><name pos:line="15" pos:column="46">LC_LOAD_WEAK_DYLIB<pos:position pos:line="15" pos:column="64"/></name> <operator pos:line="15" pos:column="65">==<pos:position pos:line="15" pos:column="67"/></operator> <name><name pos:line="15" pos:column="68">lc<pos:position pos:line="15" pos:column="70"/></name><operator pos:line="15" pos:column="70">-&gt;<pos:position pos:line="15" pos:column="75"/></operator><name pos:line="15" pos:column="72">cmd<pos:position pos:line="15" pos:column="75"/></name></name><operator pos:line="15" pos:column="75">)<pos:position pos:line="15" pos:column="76"/></operator></expr>)<pos:position pos:line="15" pos:column="77"/></condition><then pos:line="15" pos:column="77">
	    <block pos:line="16" pos:column="13">{
	      <decl_stmt><decl><type><name pos:line="17" pos:column="15">unsigned<pos:position pos:line="17" pos:column="23"/></name> <name pos:line="17" pos:column="24">long<pos:position pos:line="17" pos:column="28"/></name></type> <name pos:line="17" pos:column="29">base<pos:position pos:line="17" pos:column="33"/></name> <init pos:line="17" pos:column="34">= <expr><operator pos:line="17" pos:column="36">(<pos:position pos:line="17" pos:column="37"/></operator><operator pos:line="17" pos:column="37">(<pos:position pos:line="17" pos:column="38"/></operator><name pos:line="17" pos:column="38">dylib_command<pos:position pos:line="17" pos:column="51"/></name> <operator pos:line="17" pos:column="52">*<pos:position pos:line="17" pos:column="53"/></operator><operator pos:line="17" pos:column="53">)<pos:position pos:line="17" pos:column="54"/></operator> <name pos:line="17" pos:column="55">lc<pos:position pos:line="17" pos:column="57"/></name><operator pos:line="17" pos:column="57">)<pos:position pos:line="17" pos:column="58"/></operator><operator pos:line="17" pos:column="58">-&gt;<pos:position pos:line="17" pos:column="63"/></operator><name><name pos:line="17" pos:column="60">dylib<pos:position pos:line="17" pos:column="65"/></name><operator pos:line="17" pos:column="65">.<pos:position pos:line="17" pos:column="66"/></operator><name pos:line="17" pos:column="66">name<pos:position pos:line="17" pos:column="70"/></name><operator pos:line="17" pos:column="70">.<pos:position pos:line="17" pos:column="71"/></operator><name pos:line="17" pos:column="71">offset<pos:position pos:line="17" pos:column="77"/></name></name></expr></init></decl>;<pos:position pos:line="17" pos:column="78"/></decl_stmt>
	      <decl_stmt><decl><type><name pos:line="18" pos:column="15">char<pos:position pos:line="18" pos:column="19"/></name> <modifier pos:line="18" pos:column="20">*<pos:position pos:line="18" pos:column="21"/></modifier></type><name pos:line="18" pos:column="21">name<pos:position pos:line="18" pos:column="25"/></name> <init pos:line="18" pos:column="26">= <expr><operator pos:line="18" pos:column="28">(<pos:position pos:line="18" pos:column="29"/></operator><name pos:line="18" pos:column="29">char<pos:position pos:line="18" pos:column="33"/></name> <operator pos:line="18" pos:column="34">*<pos:position pos:line="18" pos:column="35"/></operator><operator pos:line="18" pos:column="35">)<pos:position pos:line="18" pos:column="36"/></operator> <operator pos:line="18" pos:column="37">(<pos:position pos:line="18" pos:column="38"/></operator><name pos:line="18" pos:column="38">base<pos:position pos:line="18" pos:column="42"/></name> <operator pos:line="18" pos:column="43">+<pos:position pos:line="18" pos:column="44"/></operator> <operator pos:line="18" pos:column="45">(<pos:position pos:line="18" pos:column="46"/></operator><name pos:line="18" pos:column="46">unsigned<pos:position pos:line="18" pos:column="54"/></name> <name pos:line="18" pos:column="55">long<pos:position pos:line="18" pos:column="59"/></name><operator pos:line="18" pos:column="59">)<pos:position pos:line="18" pos:column="60"/></operator> <name pos:line="18" pos:column="61">lc<pos:position pos:line="18" pos:column="63"/></name><operator pos:line="18" pos:column="63">)<pos:position pos:line="18" pos:column="64"/></operator></expr></init></decl>;<pos:position pos:line="18" pos:column="65"/></decl_stmt>
	      <decl_stmt><decl><type><specifier pos:line="19" pos:column="15">const<pos:position pos:line="19" pos:column="20"/></specifier> <name pos:line="19" pos:column="21">mach_header<pos:position pos:line="19" pos:column="32"/></name> <modifier pos:line="19" pos:column="33">*<pos:position pos:line="19" pos:column="34"/></modifier></type><name pos:line="19" pos:column="34">mh1<pos:position pos:line="19" pos:column="37"/></name> <init pos:line="19" pos:column="38">= <expr><call><name pos:line="19" pos:column="40">lt__match_loadedlib<pos:position pos:line="19" pos:column="59"/></name> <argument_list pos:line="19" pos:column="60">(<argument><expr><name pos:line="19" pos:column="61">name<pos:position pos:line="19" pos:column="65"/></name></expr></argument>)<pos:position pos:line="19" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="67"/></decl_stmt>

	      <if pos:line="21" pos:column="15">if <condition pos:line="21" pos:column="18">(<expr><operator pos:line="21" pos:column="19">!<pos:position pos:line="21" pos:column="20"/></operator><name pos:line="21" pos:column="20">mh1<pos:position pos:line="21" pos:column="23"/></name></expr>)<pos:position pos:line="21" pos:column="24"/></condition><then pos:line="21" pos:column="24">
		<block pos:line="22" pos:column="17">{
		  <comment type="block" pos:line="23" pos:column="19">/* Maybe NSAddImage can find it */</comment>
		  <expr_stmt><expr><name pos:line="24" pos:column="19">mh1<pos:position pos:line="24" pos:column="22"/></name> <operator pos:line="24" pos:column="23">=<pos:position pos:line="24" pos:column="24"/></operator> <call><name pos:line="24" pos:column="25">lt__addimage<pos:position pos:line="24" pos:column="37"/></name> <argument_list pos:line="24" pos:column="38">(<argument><expr><name pos:line="24" pos:column="39">name<pos:position pos:line="24" pos:column="43"/></name></expr></argument>,
				      <argument><expr><name pos:line="25" pos:column="39">NSADDIMAGE_OPTION_RETURN_ONLY_IF_LOADED<pos:position pos:line="25" pos:column="78"/></name>
				      <operator pos:line="26" pos:column="39">|<pos:position pos:line="26" pos:column="40"/></operator> <name pos:line="26" pos:column="41">NSADDIMAGE_OPTION_WITH_SEARCHING<pos:position pos:line="26" pos:column="73"/></name>
				      <operator pos:line="27" pos:column="39">|<pos:position pos:line="27" pos:column="40"/></operator> <name pos:line="27" pos:column="41">NSADDIMAGE_OPTION_RETURN_ON_ERROR<pos:position pos:line="27" pos:column="74"/></name></expr></argument>)<pos:position pos:line="27" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="76"/></expr_stmt>
		}<pos:position pos:line="28" pos:column="18"/></block></then></if>

	      <if pos:line="30" pos:column="15">if <condition pos:line="30" pos:column="18">(<expr><name pos:line="30" pos:column="19">mh1<pos:position pos:line="30" pos:column="22"/></name></expr>)<pos:position pos:line="30" pos:column="23"/></condition><then pos:line="30" pos:column="23">
		<block pos:line="31" pos:column="17">{
		  <expr_stmt><expr><name pos:line="32" pos:column="19">symbol<pos:position pos:line="32" pos:column="25"/></name> <operator pos:line="32" pos:column="26">=<pos:position pos:line="32" pos:column="27"/></operator> <call><name pos:line="32" pos:column="28">lt__image_symbol<pos:position pos:line="32" pos:column="44"/></name> <argument_list pos:line="32" pos:column="45">(<argument><expr><name pos:line="32" pos:column="46">mh1<pos:position pos:line="32" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="51">symname<pos:position pos:line="32" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="60">LT__SYMLOOKUP_OPTS<pos:position pos:line="32" pos:column="78"/></name></expr></argument>)<pos:position pos:line="32" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="80"/></expr_stmt>
		  <if pos:line="33" pos:column="19">if <condition pos:line="33" pos:column="22">(<expr><name pos:line="33" pos:column="23">symbol<pos:position pos:line="33" pos:column="29"/></name></expr>)<pos:position pos:line="33" pos:column="30"/></condition><then pos:line="33" pos:column="30">
		    <block type="pseudo"><break pos:line="34" pos:column="21">break;<pos:position pos:line="34" pos:column="27"/></break></block></then></if>
		}<pos:position pos:line="35" pos:column="18"/></block></then></if>
	    }<pos:position pos:line="36" pos:column="14"/></block></then></if>

	  <expr_stmt><expr><name pos:line="38" pos:column="11">offset<pos:position pos:line="38" pos:column="17"/></name> <operator pos:line="38" pos:column="18">+=<pos:position pos:line="38" pos:column="20"/></operator> <name><name pos:line="38" pos:column="21">lc<pos:position pos:line="38" pos:column="23"/></name><operator pos:line="38" pos:column="23">-&gt;<pos:position pos:line="38" pos:column="28"/></operator><name pos:line="38" pos:column="25">cmdsize<pos:position pos:line="38" pos:column="32"/></name></name></expr>;<pos:position pos:line="38" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="39" pos:column="10"/></block></for>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>

  <return pos:line="42" pos:column="3">return <expr><name pos:line="42" pos:column="10">symbol<pos:position pos:line="42" pos:column="16"/></name></expr>;<pos:position pos:line="42" pos:column="17"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2375_collectd-5.7.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">oconfig_item_t<pos:position pos:line="1" pos:column="15"/></name> <modifier pos:line="1" pos:column="16">*<pos:position pos:line="1" pos:column="17"/></modifier></type><name pos:line="1" pos:column="17">oconfig_clone<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">oconfig_item_t<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">ci_orig<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list> <block pos:line="1" pos:column="62">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">oconfig_item_t<pos:position pos:line="2" pos:column="17"/></name> <modifier pos:line="2" pos:column="18">*<pos:position pos:line="2" pos:column="19"/></modifier></type><name pos:line="2" pos:column="19">ci_copy<pos:position pos:line="2" pos:column="26"/></name></decl>;<pos:position pos:line="2" pos:column="27"/></decl_stmt>

  <expr_stmt><expr><name pos:line="4" pos:column="3">ci_copy<pos:position pos:line="4" pos:column="10"/></name> <operator pos:line="4" pos:column="11">=<pos:position pos:line="4" pos:column="12"/></operator> <call><name pos:line="4" pos:column="13">calloc<pos:position pos:line="4" pos:column="19"/></name><argument_list pos:line="4" pos:column="19">(<argument><expr><literal type="number" pos:line="4" pos:column="20">1<pos:position pos:line="4" pos:column="21"/></literal></expr></argument>, <argument><expr><sizeof pos:line="4" pos:column="23">sizeof<argument_list pos:line="4" pos:column="29">(<argument><expr><operator pos:line="4" pos:column="30">*<pos:position pos:line="4" pos:column="31"/></operator><name pos:line="4" pos:column="31">ci_copy<pos:position pos:line="4" pos:column="38"/></name></expr></argument>)<pos:position pos:line="4" pos:column="39"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="4" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="41"/></expr_stmt>
  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">ci_copy<pos:position pos:line="5" pos:column="14"/></name> <operator pos:line="5" pos:column="15">==<pos:position pos:line="5" pos:column="17"/></operator> <name pos:line="5" pos:column="18">NULL<pos:position pos:line="5" pos:column="22"/></name></expr>)<pos:position pos:line="5" pos:column="23"/></condition><then pos:line="5" pos:column="23"> <block pos:line="5" pos:column="24">{
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">fprintf<pos:position pos:line="6" pos:column="12"/></name><argument_list pos:line="6" pos:column="12">(<argument><expr><name pos:line="6" pos:column="13">stderr<pos:position pos:line="6" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="21">"calloc failed.\n"<pos:position pos:line="6" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="41"/></expr_stmt>
    <return pos:line="7" pos:column="5">return <expr><operator pos:line="7" pos:column="12">(<pos:position pos:line="7" pos:column="13"/></operator><name pos:line="7" pos:column="13">NULL<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">)<pos:position pos:line="7" pos:column="18"/></operator></expr>;<pos:position pos:line="7" pos:column="19"/></return>
  }<pos:position pos:line="8" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="9" pos:column="3">ci_copy<pos:position pos:line="9" pos:column="10"/></name><operator pos:line="9" pos:column="10">-&gt;<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="12">values<pos:position pos:line="9" pos:column="18"/></name></name> <operator pos:line="9" pos:column="19">=<pos:position pos:line="9" pos:column="20"/></operator> <name pos:line="9" pos:column="21">NULL<pos:position pos:line="9" pos:column="25"/></name></expr>;<pos:position pos:line="9" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="10" pos:column="3">ci_copy<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">-&gt;<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="12">parent<pos:position pos:line="10" pos:column="18"/></name></name> <operator pos:line="10" pos:column="19">=<pos:position pos:line="10" pos:column="20"/></operator> <name pos:line="10" pos:column="21">NULL<pos:position pos:line="10" pos:column="25"/></name></expr>;<pos:position pos:line="10" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="11" pos:column="3">ci_copy<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">-&gt;<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="12">children<pos:position pos:line="11" pos:column="20"/></name></name> <operator pos:line="11" pos:column="21">=<pos:position pos:line="11" pos:column="22"/></operator> <name pos:line="11" pos:column="23">NULL<pos:position pos:line="11" pos:column="27"/></name></expr>;<pos:position pos:line="11" pos:column="28"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="13" pos:column="3">ci_copy<pos:position pos:line="13" pos:column="10"/></name><operator pos:line="13" pos:column="10">-&gt;<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="12">key<pos:position pos:line="13" pos:column="15"/></name></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <call><name pos:line="13" pos:column="18">strdup<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">(<argument><expr><name><name pos:line="13" pos:column="25">ci_orig<pos:position pos:line="13" pos:column="32"/></name><operator pos:line="13" pos:column="32">-&gt;<pos:position pos:line="13" pos:column="37"/></operator><name pos:line="13" pos:column="34">key<pos:position pos:line="13" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="39"/></expr_stmt>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name><name pos:line="14" pos:column="7">ci_copy<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">-&gt;<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="16">key<pos:position pos:line="14" pos:column="19"/></name></name> <operator pos:line="14" pos:column="20">==<pos:position pos:line="14" pos:column="22"/></operator> <name pos:line="14" pos:column="23">NULL<pos:position pos:line="14" pos:column="27"/></name></expr>)<pos:position pos:line="14" pos:column="28"/></condition><then pos:line="14" pos:column="28"> <block pos:line="14" pos:column="29">{
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">fprintf<pos:position pos:line="15" pos:column="12"/></name><argument_list pos:line="15" pos:column="12">(<argument><expr><name pos:line="15" pos:column="13">stderr<pos:position pos:line="15" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="21">"strdup failed.\n"<pos:position pos:line="15" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">free<pos:position pos:line="16" pos:column="9"/></name><argument_list pos:line="16" pos:column="9">(<argument><expr><name pos:line="16" pos:column="10">ci_copy<pos:position pos:line="16" pos:column="17"/></name></expr></argument>)<pos:position pos:line="16" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="19"/></expr_stmt>
    <return pos:line="17" pos:column="5">return <expr><operator pos:line="17" pos:column="12">(<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="13">NULL<pos:position pos:line="17" pos:column="17"/></name><operator pos:line="17" pos:column="17">)<pos:position pos:line="17" pos:column="18"/></operator></expr>;<pos:position pos:line="17" pos:column="19"/></return>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>

  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><name><name pos:line="20" pos:column="7">ci_orig<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">-&gt;<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="16">values_num<pos:position pos:line="20" pos:column="26"/></name></name> <operator pos:line="20" pos:column="27">&gt;<pos:position pos:line="20" pos:column="31"/></operator> <literal type="number" pos:line="20" pos:column="29">0<pos:position pos:line="20" pos:column="30"/></literal></expr>)<pos:position pos:line="20" pos:column="31"/></condition><then pos:line="20" pos:column="31"> <comment type="block" pos:line="20" pos:column="32">/* {{{ */</comment>
  <block pos:line="21" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">ci_copy<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">-&gt;<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="14">values<pos:position pos:line="22" pos:column="20"/></name></name> <operator pos:line="22" pos:column="21">=<pos:position pos:line="22" pos:column="22"/></operator> <operator pos:line="22" pos:column="23">(<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="24">oconfig_value_t<pos:position pos:line="22" pos:column="39"/></name> <operator pos:line="22" pos:column="40">*<pos:position pos:line="22" pos:column="41"/></operator><operator pos:line="22" pos:column="41">)<pos:position pos:line="22" pos:column="42"/></operator><call><name pos:line="22" pos:column="42">calloc<pos:position pos:line="22" pos:column="48"/></name><argument_list pos:line="22" pos:column="48">(<argument><expr><operator pos:line="22" pos:column="49">(<pos:position pos:line="22" pos:column="50"/></operator><name pos:line="22" pos:column="50">size_t<pos:position pos:line="22" pos:column="56"/></name><operator pos:line="22" pos:column="56">)<pos:position pos:line="22" pos:column="57"/></operator><name><name pos:line="22" pos:column="57">ci_orig<pos:position pos:line="22" pos:column="64"/></name><operator pos:line="22" pos:column="64">-&gt;<pos:position pos:line="22" pos:column="69"/></operator><name pos:line="22" pos:column="66">values_num<pos:position pos:line="22" pos:column="76"/></name></name></expr></argument>,
                                                <argument><expr><sizeof pos:line="23" pos:column="49">sizeof<argument_list pos:line="23" pos:column="55">(<argument><expr><operator pos:line="23" pos:column="56">*<pos:position pos:line="23" pos:column="57"/></operator><name><name pos:line="23" pos:column="57">ci_copy<pos:position pos:line="23" pos:column="64"/></name><operator pos:line="23" pos:column="64">-&gt;<pos:position pos:line="23" pos:column="69"/></operator><name pos:line="23" pos:column="66">values<pos:position pos:line="23" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="75"/></expr_stmt>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name><name pos:line="24" pos:column="9">ci_copy<pos:position pos:line="24" pos:column="16"/></name><operator pos:line="24" pos:column="16">-&gt;<pos:position pos:line="24" pos:column="21"/></operator><name pos:line="24" pos:column="18">values<pos:position pos:line="24" pos:column="24"/></name></name> <operator pos:line="24" pos:column="25">==<pos:position pos:line="24" pos:column="27"/></operator> <name pos:line="24" pos:column="28">NULL<pos:position pos:line="24" pos:column="32"/></name></expr>)<pos:position pos:line="24" pos:column="33"/></condition><then pos:line="24" pos:column="33"> <block pos:line="24" pos:column="34">{
      <expr_stmt><expr><call><name pos:line="25" pos:column="7">fprintf<pos:position pos:line="25" pos:column="14"/></name><argument_list pos:line="25" pos:column="14">(<argument><expr><name pos:line="25" pos:column="15">stderr<pos:position pos:line="25" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="23">"calloc failed.\n"<pos:position pos:line="25" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="43"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="26" pos:column="7">free<pos:position pos:line="26" pos:column="11"/></name><argument_list pos:line="26" pos:column="11">(<argument><expr><name><name pos:line="26" pos:column="12">ci_copy<pos:position pos:line="26" pos:column="19"/></name><operator pos:line="26" pos:column="19">-&gt;<pos:position pos:line="26" pos:column="24"/></operator><name pos:line="26" pos:column="21">key<pos:position pos:line="26" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="27" pos:column="7">free<pos:position pos:line="27" pos:column="11"/></name><argument_list pos:line="27" pos:column="11">(<argument><expr><name pos:line="27" pos:column="12">ci_copy<pos:position pos:line="27" pos:column="19"/></name></expr></argument>)<pos:position pos:line="27" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="21"/></expr_stmt>
      <return pos:line="28" pos:column="7">return <expr><operator pos:line="28" pos:column="14">(<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="15">NULL<pos:position pos:line="28" pos:column="19"/></name><operator pos:line="28" pos:column="19">)<pos:position pos:line="28" pos:column="20"/></operator></expr>;<pos:position pos:line="28" pos:column="21"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="30" pos:column="5">ci_copy<pos:position pos:line="30" pos:column="12"/></name><operator pos:line="30" pos:column="12">-&gt;<pos:position pos:line="30" pos:column="17"/></operator><name pos:line="30" pos:column="14">values_num<pos:position pos:line="30" pos:column="24"/></name></name> <operator pos:line="30" pos:column="25">=<pos:position pos:line="30" pos:column="26"/></operator> <name><name pos:line="30" pos:column="27">ci_orig<pos:position pos:line="30" pos:column="34"/></name><operator pos:line="30" pos:column="34">-&gt;<pos:position pos:line="30" pos:column="39"/></operator><name pos:line="30" pos:column="36">values_num<pos:position pos:line="30" pos:column="46"/></name></name></expr>;<pos:position pos:line="30" pos:column="47"/></expr_stmt>

    <for pos:line="32" pos:column="5">for <control pos:line="32" pos:column="9">(<init><decl><type><name pos:line="32" pos:column="10">int<pos:position pos:line="32" pos:column="13"/></name></type> <name pos:line="32" pos:column="14">i<pos:position pos:line="32" pos:column="15"/></name> <init pos:line="32" pos:column="16">= <expr><literal type="number" pos:line="32" pos:column="18">0<pos:position pos:line="32" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="32" pos:column="20"/></init> <condition><expr><name pos:line="32" pos:column="21">i<pos:position pos:line="32" pos:column="22"/></name> <operator pos:line="32" pos:column="23">&lt;<pos:position pos:line="32" pos:column="27"/></operator> <name><name pos:line="32" pos:column="25">ci_copy<pos:position pos:line="32" pos:column="32"/></name><operator pos:line="32" pos:column="32">-&gt;<pos:position pos:line="32" pos:column="37"/></operator><name pos:line="32" pos:column="34">values_num<pos:position pos:line="32" pos:column="44"/></name></name></expr>;<pos:position pos:line="32" pos:column="45"/></condition> <incr><expr><name pos:line="32" pos:column="46">i<pos:position pos:line="32" pos:column="47"/></name><operator pos:line="32" pos:column="47">++<pos:position pos:line="32" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="32" pos:column="50"/></control> <block pos:line="32" pos:column="51">{
      <expr_stmt><expr><name><name pos:line="33" pos:column="7">ci_copy<pos:position pos:line="33" pos:column="14"/></name><operator pos:line="33" pos:column="14">-&gt;<pos:position pos:line="33" pos:column="19"/></operator><name pos:line="33" pos:column="16">values<pos:position pos:line="33" pos:column="22"/></name><index pos:line="33" pos:column="22">[<expr><name pos:line="33" pos:column="23">i<pos:position pos:line="33" pos:column="24"/></name></expr>]<pos:position pos:line="33" pos:column="25"/></index></name><operator pos:line="33" pos:column="25">.<pos:position pos:line="33" pos:column="26"/></operator><name pos:line="33" pos:column="26">type<pos:position pos:line="33" pos:column="30"/></name> <operator pos:line="33" pos:column="31">=<pos:position pos:line="33" pos:column="32"/></operator> <name><name pos:line="33" pos:column="33">ci_orig<pos:position pos:line="33" pos:column="40"/></name><operator pos:line="33" pos:column="40">-&gt;<pos:position pos:line="33" pos:column="45"/></operator><name pos:line="33" pos:column="42">values<pos:position pos:line="33" pos:column="48"/></name><index pos:line="33" pos:column="48">[<expr><name pos:line="33" pos:column="49">i<pos:position pos:line="33" pos:column="50"/></name></expr>]<pos:position pos:line="33" pos:column="51"/></index></name><operator pos:line="33" pos:column="51">.<pos:position pos:line="33" pos:column="52"/></operator><name pos:line="33" pos:column="52">type<pos:position pos:line="33" pos:column="56"/></name></expr>;<pos:position pos:line="33" pos:column="57"/></expr_stmt>
      <if pos:line="34" pos:column="7">if <condition pos:line="34" pos:column="10">(<expr><name><name pos:line="34" pos:column="11">ci_copy<pos:position pos:line="34" pos:column="18"/></name><operator pos:line="34" pos:column="18">-&gt;<pos:position pos:line="34" pos:column="23"/></operator><name pos:line="34" pos:column="20">values<pos:position pos:line="34" pos:column="26"/></name><index pos:line="34" pos:column="26">[<expr><name pos:line="34" pos:column="27">i<pos:position pos:line="34" pos:column="28"/></name></expr>]<pos:position pos:line="34" pos:column="29"/></index></name><operator pos:line="34" pos:column="29">.<pos:position pos:line="34" pos:column="30"/></operator><name pos:line="34" pos:column="30">type<pos:position pos:line="34" pos:column="34"/></name> <operator pos:line="34" pos:column="35">==<pos:position pos:line="34" pos:column="37"/></operator> <name pos:line="34" pos:column="38">OCONFIG_TYPE_STRING<pos:position pos:line="34" pos:column="57"/></name></expr>)<pos:position pos:line="34" pos:column="58"/></condition><then pos:line="34" pos:column="58"> <block pos:line="34" pos:column="59">{
        <expr_stmt><expr><name><name pos:line="35" pos:column="9">ci_copy<pos:position pos:line="35" pos:column="16"/></name><operator pos:line="35" pos:column="16">-&gt;<pos:position pos:line="35" pos:column="21"/></operator><name pos:line="35" pos:column="18">values<pos:position pos:line="35" pos:column="24"/></name><index pos:line="35" pos:column="24">[<expr><name pos:line="35" pos:column="25">i<pos:position pos:line="35" pos:column="26"/></name></expr>]<pos:position pos:line="35" pos:column="27"/></index></name><operator pos:line="35" pos:column="27">.<pos:position pos:line="35" pos:column="28"/></operator><name><name pos:line="35" pos:column="28">value<pos:position pos:line="35" pos:column="33"/></name><operator pos:line="35" pos:column="33">.<pos:position pos:line="35" pos:column="34"/></operator><name pos:line="35" pos:column="34">string<pos:position pos:line="35" pos:column="40"/></name></name> <operator pos:line="35" pos:column="41">=<pos:position pos:line="35" pos:column="42"/></operator>
            <call><name pos:line="36" pos:column="13">strdup<pos:position pos:line="36" pos:column="19"/></name><argument_list pos:line="36" pos:column="19">(<argument><expr><name><name pos:line="36" pos:column="20">ci_orig<pos:position pos:line="36" pos:column="27"/></name><operator pos:line="36" pos:column="27">-&gt;<pos:position pos:line="36" pos:column="32"/></operator><name pos:line="36" pos:column="29">values<pos:position pos:line="36" pos:column="35"/></name><index pos:line="36" pos:column="35">[<expr><name pos:line="36" pos:column="36">i<pos:position pos:line="36" pos:column="37"/></name></expr>]<pos:position pos:line="36" pos:column="38"/></index></name><operator pos:line="36" pos:column="38">.<pos:position pos:line="36" pos:column="39"/></operator><name><name pos:line="36" pos:column="39">value<pos:position pos:line="36" pos:column="44"/></name><operator pos:line="36" pos:column="44">.<pos:position pos:line="36" pos:column="45"/></operator><name pos:line="36" pos:column="45">string<pos:position pos:line="36" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="53"/></expr_stmt>
        <if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name><name pos:line="37" pos:column="13">ci_copy<pos:position pos:line="37" pos:column="20"/></name><operator pos:line="37" pos:column="20">-&gt;<pos:position pos:line="37" pos:column="25"/></operator><name pos:line="37" pos:column="22">values<pos:position pos:line="37" pos:column="28"/></name><index pos:line="37" pos:column="28">[<expr><name pos:line="37" pos:column="29">i<pos:position pos:line="37" pos:column="30"/></name></expr>]<pos:position pos:line="37" pos:column="31"/></index></name><operator pos:line="37" pos:column="31">.<pos:position pos:line="37" pos:column="32"/></operator><name><name pos:line="37" pos:column="32">value<pos:position pos:line="37" pos:column="37"/></name><operator pos:line="37" pos:column="37">.<pos:position pos:line="37" pos:column="38"/></operator><name pos:line="37" pos:column="38">string<pos:position pos:line="37" pos:column="44"/></name></name> <operator pos:line="37" pos:column="45">==<pos:position pos:line="37" pos:column="47"/></operator> <name pos:line="37" pos:column="48">NULL<pos:position pos:line="37" pos:column="52"/></name></expr>)<pos:position pos:line="37" pos:column="53"/></condition><then pos:line="37" pos:column="53"> <block pos:line="37" pos:column="54">{
          <expr_stmt><expr><call><name pos:line="38" pos:column="11">fprintf<pos:position pos:line="38" pos:column="18"/></name><argument_list pos:line="38" pos:column="18">(<argument><expr><name pos:line="38" pos:column="19">stderr<pos:position pos:line="38" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="27">"strdup failed.\n"<pos:position pos:line="38" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="47"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="39" pos:column="11">oconfig_free<pos:position pos:line="39" pos:column="23"/></name><argument_list pos:line="39" pos:column="23">(<argument><expr><name pos:line="39" pos:column="24">ci_copy<pos:position pos:line="39" pos:column="31"/></name></expr></argument>)<pos:position pos:line="39" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="33"/></expr_stmt>
          <return pos:line="40" pos:column="11">return <expr><operator pos:line="40" pos:column="18">(<pos:position pos:line="40" pos:column="19"/></operator><name pos:line="40" pos:column="19">NULL<pos:position pos:line="40" pos:column="23"/></name><operator pos:line="40" pos:column="23">)<pos:position pos:line="40" pos:column="24"/></operator></expr>;<pos:position pos:line="40" pos:column="25"/></return>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if>
      }<pos:position pos:line="42" pos:column="8"/></block></then> <else pos:line="42" pos:column="9">else <comment type="block" pos:line="42" pos:column="14">/* ci_copy-&gt;values[i].type != OCONFIG_TYPE_STRING) */</comment>
      <block pos:line="43" pos:column="7">{
        <expr_stmt><expr><name><name pos:line="44" pos:column="9">ci_copy<pos:position pos:line="44" pos:column="16"/></name><operator pos:line="44" pos:column="16">-&gt;<pos:position pos:line="44" pos:column="21"/></operator><name pos:line="44" pos:column="18">values<pos:position pos:line="44" pos:column="24"/></name><index pos:line="44" pos:column="24">[<expr><name pos:line="44" pos:column="25">i<pos:position pos:line="44" pos:column="26"/></name></expr>]<pos:position pos:line="44" pos:column="27"/></index></name><operator pos:line="44" pos:column="27">.<pos:position pos:line="44" pos:column="28"/></operator><name pos:line="44" pos:column="28">value<pos:position pos:line="44" pos:column="33"/></name> <operator pos:line="44" pos:column="34">=<pos:position pos:line="44" pos:column="35"/></operator> <name><name pos:line="44" pos:column="36">ci_orig<pos:position pos:line="44" pos:column="43"/></name><operator pos:line="44" pos:column="43">-&gt;<pos:position pos:line="44" pos:column="48"/></operator><name pos:line="44" pos:column="45">values<pos:position pos:line="44" pos:column="51"/></name><index pos:line="44" pos:column="51">[<expr><name pos:line="44" pos:column="52">i<pos:position pos:line="44" pos:column="53"/></name></expr>]<pos:position pos:line="44" pos:column="54"/></index></name><operator pos:line="44" pos:column="54">.<pos:position pos:line="44" pos:column="55"/></operator><name pos:line="44" pos:column="55">value<pos:position pos:line="44" pos:column="60"/></name></expr>;<pos:position pos:line="44" pos:column="61"/></expr_stmt>
      }<pos:position pos:line="45" pos:column="8"/></block></else></if>
    }<pos:position pos:line="46" pos:column="6"/></block></for>
  }<pos:position pos:line="47" pos:column="4"/></block></then></if> <comment type="block" pos:line="47" pos:column="5">/* }}} if (ci_orig-&gt;values_num &gt; 0) */</comment>

  <if pos:line="49" pos:column="3">if <condition pos:line="49" pos:column="6">(<expr><name><name pos:line="49" pos:column="7">ci_orig<pos:position pos:line="49" pos:column="14"/></name><operator pos:line="49" pos:column="14">-&gt;<pos:position pos:line="49" pos:column="19"/></operator><name pos:line="49" pos:column="16">children_num<pos:position pos:line="49" pos:column="28"/></name></name> <operator pos:line="49" pos:column="29">&gt;<pos:position pos:line="49" pos:column="33"/></operator> <literal type="number" pos:line="49" pos:column="31">0<pos:position pos:line="49" pos:column="32"/></literal></expr>)<pos:position pos:line="49" pos:column="33"/></condition><then pos:line="49" pos:column="33"> <comment type="block" pos:line="49" pos:column="34">/* {{{ */</comment>
  <block pos:line="50" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="51" pos:column="5">ci_copy<pos:position pos:line="51" pos:column="12"/></name><operator pos:line="51" pos:column="12">-&gt;<pos:position pos:line="51" pos:column="17"/></operator><name pos:line="51" pos:column="14">children<pos:position pos:line="51" pos:column="22"/></name></name> <operator pos:line="51" pos:column="23">=<pos:position pos:line="51" pos:column="24"/></operator> <operator pos:line="51" pos:column="25">(<pos:position pos:line="51" pos:column="26"/></operator><name pos:line="51" pos:column="26">oconfig_item_t<pos:position pos:line="51" pos:column="40"/></name> <operator pos:line="51" pos:column="41">*<pos:position pos:line="51" pos:column="42"/></operator><operator pos:line="51" pos:column="42">)<pos:position pos:line="51" pos:column="43"/></operator><call><name pos:line="51" pos:column="43">calloc<pos:position pos:line="51" pos:column="49"/></name><argument_list pos:line="51" pos:column="49">(<argument><expr><operator pos:line="51" pos:column="50">(<pos:position pos:line="51" pos:column="51"/></operator><name pos:line="51" pos:column="51">size_t<pos:position pos:line="51" pos:column="57"/></name><operator pos:line="51" pos:column="57">)<pos:position pos:line="51" pos:column="58"/></operator><name><name pos:line="51" pos:column="58">ci_orig<pos:position pos:line="51" pos:column="65"/></name><operator pos:line="51" pos:column="65">-&gt;<pos:position pos:line="51" pos:column="70"/></operator><name pos:line="51" pos:column="67">children_num<pos:position pos:line="51" pos:column="79"/></name></name></expr></argument>,
                                                 <argument><expr><sizeof pos:line="52" pos:column="50">sizeof<argument_list pos:line="52" pos:column="56">(<argument><expr><operator pos:line="52" pos:column="57">*<pos:position pos:line="52" pos:column="58"/></operator><name><name pos:line="52" pos:column="58">ci_copy<pos:position pos:line="52" pos:column="65"/></name><operator pos:line="52" pos:column="65">-&gt;<pos:position pos:line="52" pos:column="70"/></operator><name pos:line="52" pos:column="67">children<pos:position pos:line="52" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="76"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="52" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="78"/></expr_stmt>
    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><name><name pos:line="53" pos:column="9">ci_copy<pos:position pos:line="53" pos:column="16"/></name><operator pos:line="53" pos:column="16">-&gt;<pos:position pos:line="53" pos:column="21"/></operator><name pos:line="53" pos:column="18">children<pos:position pos:line="53" pos:column="26"/></name></name> <operator pos:line="53" pos:column="27">==<pos:position pos:line="53" pos:column="29"/></operator> <name pos:line="53" pos:column="30">NULL<pos:position pos:line="53" pos:column="34"/></name></expr>)<pos:position pos:line="53" pos:column="35"/></condition><then pos:line="53" pos:column="35"> <block pos:line="53" pos:column="36">{
      <expr_stmt><expr><call><name pos:line="54" pos:column="7">fprintf<pos:position pos:line="54" pos:column="14"/></name><argument_list pos:line="54" pos:column="14">(<argument><expr><name pos:line="54" pos:column="15">stderr<pos:position pos:line="54" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="23">"calloc failed.\n"<pos:position pos:line="54" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="43"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="55" pos:column="7">oconfig_free<pos:position pos:line="55" pos:column="19"/></name><argument_list pos:line="55" pos:column="19">(<argument><expr><name pos:line="55" pos:column="20">ci_copy<pos:position pos:line="55" pos:column="27"/></name></expr></argument>)<pos:position pos:line="55" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="29"/></expr_stmt>
      <return pos:line="56" pos:column="7">return <expr><operator pos:line="56" pos:column="14">(<pos:position pos:line="56" pos:column="15"/></operator><name pos:line="56" pos:column="15">NULL<pos:position pos:line="56" pos:column="19"/></name><operator pos:line="56" pos:column="19">)<pos:position pos:line="56" pos:column="20"/></operator></expr>;<pos:position pos:line="56" pos:column="21"/></return>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="58" pos:column="5">ci_copy<pos:position pos:line="58" pos:column="12"/></name><operator pos:line="58" pos:column="12">-&gt;<pos:position pos:line="58" pos:column="17"/></operator><name pos:line="58" pos:column="14">children_num<pos:position pos:line="58" pos:column="26"/></name></name> <operator pos:line="58" pos:column="27">=<pos:position pos:line="58" pos:column="28"/></operator> <name><name pos:line="58" pos:column="29">ci_orig<pos:position pos:line="58" pos:column="36"/></name><operator pos:line="58" pos:column="36">-&gt;<pos:position pos:line="58" pos:column="41"/></operator><name pos:line="58" pos:column="38">children_num<pos:position pos:line="58" pos:column="50"/></name></name></expr>;<pos:position pos:line="58" pos:column="51"/></expr_stmt>

    <for pos:line="60" pos:column="5">for <control pos:line="60" pos:column="9">(<init><decl><type><name pos:line="60" pos:column="10">int<pos:position pos:line="60" pos:column="13"/></name></type> <name pos:line="60" pos:column="14">i<pos:position pos:line="60" pos:column="15"/></name> <init pos:line="60" pos:column="16">= <expr><literal type="number" pos:line="60" pos:column="18">0<pos:position pos:line="60" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="60" pos:column="20"/></init> <condition><expr><name pos:line="60" pos:column="21">i<pos:position pos:line="60" pos:column="22"/></name> <operator pos:line="60" pos:column="23">&lt;<pos:position pos:line="60" pos:column="27"/></operator> <name><name pos:line="60" pos:column="25">ci_copy<pos:position pos:line="60" pos:column="32"/></name><operator pos:line="60" pos:column="32">-&gt;<pos:position pos:line="60" pos:column="37"/></operator><name pos:line="60" pos:column="34">children_num<pos:position pos:line="60" pos:column="46"/></name></name></expr>;<pos:position pos:line="60" pos:column="47"/></condition> <incr><expr><name pos:line="60" pos:column="48">i<pos:position pos:line="60" pos:column="49"/></name><operator pos:line="60" pos:column="49">++<pos:position pos:line="60" pos:column="51"/></operator></expr></incr>)<pos:position pos:line="60" pos:column="52"/></control> <block pos:line="60" pos:column="53">{
      <decl_stmt><decl><type><name pos:line="61" pos:column="7">oconfig_item_t<pos:position pos:line="61" pos:column="21"/></name> <modifier pos:line="61" pos:column="22">*<pos:position pos:line="61" pos:column="23"/></modifier></type><name pos:line="61" pos:column="23">child<pos:position pos:line="61" pos:column="28"/></name></decl>;<pos:position pos:line="61" pos:column="29"/></decl_stmt>

      <expr_stmt><expr><name pos:line="63" pos:column="7">child<pos:position pos:line="63" pos:column="12"/></name> <operator pos:line="63" pos:column="13">=<pos:position pos:line="63" pos:column="14"/></operator> <call><name pos:line="63" pos:column="15">oconfig_clone<pos:position pos:line="63" pos:column="28"/></name><argument_list pos:line="63" pos:column="28">(<argument><expr><name><name pos:line="63" pos:column="29">ci_orig<pos:position pos:line="63" pos:column="36"/></name><operator pos:line="63" pos:column="36">-&gt;<pos:position pos:line="63" pos:column="41"/></operator><name pos:line="63" pos:column="38">children<pos:position pos:line="63" pos:column="46"/></name></name> <operator pos:line="63" pos:column="47">+<pos:position pos:line="63" pos:column="48"/></operator> <name pos:line="63" pos:column="49">i<pos:position pos:line="63" pos:column="50"/></name></expr></argument>)<pos:position pos:line="63" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="52"/></expr_stmt>
      <if pos:line="64" pos:column="7">if <condition pos:line="64" pos:column="10">(<expr><name pos:line="64" pos:column="11">child<pos:position pos:line="64" pos:column="16"/></name> <operator pos:line="64" pos:column="17">==<pos:position pos:line="64" pos:column="19"/></operator> <name pos:line="64" pos:column="20">NULL<pos:position pos:line="64" pos:column="24"/></name></expr>)<pos:position pos:line="64" pos:column="25"/></condition><then pos:line="64" pos:column="25"> <block pos:line="64" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="65" pos:column="9">oconfig_free<pos:position pos:line="65" pos:column="21"/></name><argument_list pos:line="65" pos:column="21">(<argument><expr><name pos:line="65" pos:column="22">ci_copy<pos:position pos:line="65" pos:column="29"/></name></expr></argument>)<pos:position pos:line="65" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="31"/></expr_stmt>
        <return pos:line="66" pos:column="9">return <expr><operator pos:line="66" pos:column="16">(<pos:position pos:line="66" pos:column="17"/></operator><name pos:line="66" pos:column="17">NULL<pos:position pos:line="66" pos:column="21"/></name><operator pos:line="66" pos:column="21">)<pos:position pos:line="66" pos:column="22"/></operator></expr>;<pos:position pos:line="66" pos:column="23"/></return>
      }<pos:position pos:line="67" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name><name pos:line="68" pos:column="7">child<pos:position pos:line="68" pos:column="12"/></name><operator pos:line="68" pos:column="12">-&gt;<pos:position pos:line="68" pos:column="17"/></operator><name pos:line="68" pos:column="14">parent<pos:position pos:line="68" pos:column="20"/></name></name> <operator pos:line="68" pos:column="21">=<pos:position pos:line="68" pos:column="22"/></operator> <name pos:line="68" pos:column="23">ci_copy<pos:position pos:line="68" pos:column="30"/></name></expr>;<pos:position pos:line="68" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="69" pos:column="7">ci_copy<pos:position pos:line="69" pos:column="14"/></name><operator pos:line="69" pos:column="14">-&gt;<pos:position pos:line="69" pos:column="19"/></operator><name pos:line="69" pos:column="16">children<pos:position pos:line="69" pos:column="24"/></name><index pos:line="69" pos:column="24">[<expr><name pos:line="69" pos:column="25">i<pos:position pos:line="69" pos:column="26"/></name></expr>]<pos:position pos:line="69" pos:column="27"/></index></name> <operator pos:line="69" pos:column="28">=<pos:position pos:line="69" pos:column="29"/></operator> <operator pos:line="69" pos:column="30">*<pos:position pos:line="69" pos:column="31"/></operator><name pos:line="69" pos:column="31">child<pos:position pos:line="69" pos:column="36"/></name></expr>;<pos:position pos:line="69" pos:column="37"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="70" pos:column="7">free<pos:position pos:line="70" pos:column="11"/></name><argument_list pos:line="70" pos:column="11">(<argument><expr><name pos:line="70" pos:column="12">child<pos:position pos:line="70" pos:column="17"/></name></expr></argument>)<pos:position pos:line="70" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="71" pos:column="6"/></block></for> <comment type="block" pos:line="71" pos:column="7">/* for (i = 0; i &lt; ci_copy-&gt;children_num; i++) */</comment>
  }<pos:position pos:line="72" pos:column="4"/></block></then></if>   <comment type="block" pos:line="72" pos:column="7">/* }}} if (ci_orig-&gt;children_num &gt; 0) */</comment>

  <return pos:line="74" pos:column="3">return <expr><operator pos:line="74" pos:column="10">(<pos:position pos:line="74" pos:column="11"/></operator><name pos:line="74" pos:column="11">ci_copy<pos:position pos:line="74" pos:column="18"/></name><operator pos:line="74" pos:column="18">)<pos:position pos:line="74" pos:column="19"/></operator></expr>;<pos:position pos:line="74" pos:column="20"/></return>
}<pos:position pos:line="75" pos:column="2"/></block></function></unit>

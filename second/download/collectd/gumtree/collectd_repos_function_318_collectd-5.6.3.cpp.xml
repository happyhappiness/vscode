<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_318_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">check_ignorelist<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">dev<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">type<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,
                            <parameter><decl><type><specifier pos:line="2" pos:column="29">const<pos:position pos:line="2" pos:column="34"/></specifier> <name pos:line="2" pos:column="35">char<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">type_instance<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list> <block pos:line="2" pos:column="56">{
  <expr_stmt><expr><call><name pos:line="3" pos:column="3">assert<pos:position pos:line="3" pos:column="9"/></name><argument_list pos:line="3" pos:column="9">(<argument><expr><operator pos:line="3" pos:column="10">(<pos:position pos:line="3" pos:column="11"/></operator><name pos:line="3" pos:column="11">dev<pos:position pos:line="3" pos:column="14"/></name> <operator pos:line="3" pos:column="15">!=<pos:position pos:line="3" pos:column="17"/></operator> <name pos:line="3" pos:column="18">NULL<pos:position pos:line="3" pos:column="22"/></name><operator pos:line="3" pos:column="22">)<pos:position pos:line="3" pos:column="23"/></operator> <operator pos:line="3" pos:column="24">&amp;&amp;<pos:position pos:line="3" pos:column="34"/></operator> <operator pos:line="3" pos:column="27">(<pos:position pos:line="3" pos:column="28"/></operator><name pos:line="3" pos:column="28">type<pos:position pos:line="3" pos:column="32"/></name> <operator pos:line="3" pos:column="33">!=<pos:position pos:line="3" pos:column="35"/></operator> <name pos:line="3" pos:column="36">NULL<pos:position pos:line="3" pos:column="40"/></name><operator pos:line="3" pos:column="40">)<pos:position pos:line="3" pos:column="41"/></operator></expr></argument>)<pos:position pos:line="3" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="43"/></expr_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">ir_ignorelist_head<pos:position pos:line="5" pos:column="25"/></name> <operator pos:line="5" pos:column="26">==<pos:position pos:line="5" pos:column="28"/></operator> <name pos:line="5" pos:column="29">NULL<pos:position pos:line="5" pos:column="33"/></name></expr>)<pos:position pos:line="5" pos:column="34"/></condition><then pos:line="5" pos:column="34">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><operator pos:line="6" pos:column="12">(<pos:position pos:line="6" pos:column="13"/></operator><ternary><condition><expr><name pos:line="6" pos:column="13">ir_ignorelist_invert<pos:position pos:line="6" pos:column="33"/></name></expr> ?<pos:position pos:line="6" pos:column="35"/></condition><then pos:line="6" pos:column="35"> <expr><literal type="number" pos:line="6" pos:column="36">0<pos:position pos:line="6" pos:column="37"/></literal></expr> <pos:position pos:line="6" pos:column="38"/></then><else pos:line="6" pos:column="38">: <expr><literal type="number" pos:line="6" pos:column="40">1<pos:position pos:line="6" pos:column="41"/></literal></expr></else></ternary><operator pos:line="6" pos:column="41">)<pos:position pos:line="6" pos:column="42"/></operator></expr>;<pos:position pos:line="6" pos:column="43"/></return></block></then></if>

  <for pos:line="8" pos:column="3">for <control pos:line="8" pos:column="7">(<init><decl><type><name pos:line="8" pos:column="8">ir_ignorelist_t<pos:position pos:line="8" pos:column="23"/></name> <modifier pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></modifier></type><name pos:line="8" pos:column="25">i<pos:position pos:line="8" pos:column="26"/></name> <init pos:line="8" pos:column="27">= <expr><name pos:line="8" pos:column="29">ir_ignorelist_head<pos:position pos:line="8" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="48"/></init> <condition><expr><name pos:line="8" pos:column="49">i<pos:position pos:line="8" pos:column="50"/></name> <operator pos:line="8" pos:column="51">!=<pos:position pos:line="8" pos:column="53"/></operator> <name pos:line="8" pos:column="54">NULL<pos:position pos:line="8" pos:column="58"/></name></expr>;<pos:position pos:line="8" pos:column="59"/></condition> <incr><expr><name pos:line="8" pos:column="60">i<pos:position pos:line="8" pos:column="61"/></name> <operator pos:line="8" pos:column="62">=<pos:position pos:line="8" pos:column="63"/></operator> <name><name pos:line="8" pos:column="64">i<pos:position pos:line="8" pos:column="65"/></name><operator pos:line="8" pos:column="65">-&gt;<pos:position pos:line="8" pos:column="70"/></operator><name pos:line="8" pos:column="67">next<pos:position pos:line="8" pos:column="71"/></name></name></expr></incr>)<pos:position pos:line="8" pos:column="72"/></control> <block pos:line="8" pos:column="73">{
    <comment type="block" pos:line="9" pos:column="5">/* i-&gt;device == NULL  =&gt;  match all devices */</comment>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">(<pos:position pos:line="10" pos:column="10"/></operator><name><name pos:line="10" pos:column="10">i<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">-&gt;<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="13">device<pos:position pos:line="10" pos:column="19"/></name></name> <operator pos:line="10" pos:column="20">!=<pos:position pos:line="10" pos:column="22"/></operator> <name pos:line="10" pos:column="23">NULL<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">)<pos:position pos:line="10" pos:column="28"/></operator> <operator pos:line="10" pos:column="29">&amp;&amp;<pos:position pos:line="10" pos:column="39"/></operator> <operator pos:line="10" pos:column="32">(<pos:position pos:line="10" pos:column="33"/></operator><call><name pos:line="10" pos:column="33">strcasecmp<pos:position pos:line="10" pos:column="43"/></name><argument_list pos:line="10" pos:column="43">(<argument><expr><name><name pos:line="10" pos:column="44">i<pos:position pos:line="10" pos:column="45"/></name><operator pos:line="10" pos:column="45">-&gt;<pos:position pos:line="10" pos:column="50"/></operator><name pos:line="10" pos:column="47">device<pos:position pos:line="10" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="55">dev<pos:position pos:line="10" pos:column="58"/></name></expr></argument>)<pos:position pos:line="10" pos:column="59"/></argument_list></call> <operator pos:line="10" pos:column="60">!=<pos:position pos:line="10" pos:column="62"/></operator> <literal type="number" pos:line="10" pos:column="63">0<pos:position pos:line="10" pos:column="64"/></literal><operator pos:line="10" pos:column="64">)<pos:position pos:line="10" pos:column="65"/></operator></expr>)<pos:position pos:line="10" pos:column="66"/></condition><then pos:line="10" pos:column="66">
      <block type="pseudo"><continue pos:line="11" pos:column="7">continue;<pos:position pos:line="11" pos:column="16"/></continue></block></then></if>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><call><name pos:line="13" pos:column="9">strcasecmp<pos:position pos:line="13" pos:column="19"/></name><argument_list pos:line="13" pos:column="19">(<argument><expr><name><name pos:line="13" pos:column="20">i<pos:position pos:line="13" pos:column="21"/></name><operator pos:line="13" pos:column="21">-&gt;<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="23">type<pos:position pos:line="13" pos:column="27"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="29">type<pos:position pos:line="13" pos:column="33"/></name></expr></argument>)<pos:position pos:line="13" pos:column="34"/></argument_list></call> <operator pos:line="13" pos:column="35">!=<pos:position pos:line="13" pos:column="37"/></operator> <literal type="number" pos:line="13" pos:column="38">0<pos:position pos:line="13" pos:column="39"/></literal></expr>)<pos:position pos:line="13" pos:column="40"/></condition><then pos:line="13" pos:column="40">
      <block type="pseudo"><continue pos:line="14" pos:column="7">continue;<pos:position pos:line="14" pos:column="16"/></continue></block></then></if>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">(<pos:position pos:line="16" pos:column="10"/></operator><name><name pos:line="16" pos:column="10">i<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">-&gt;<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="13">inst<pos:position pos:line="16" pos:column="17"/></name></name> <operator pos:line="16" pos:column="18">!=<pos:position pos:line="16" pos:column="20"/></operator> <name pos:line="16" pos:column="21">NULL<pos:position pos:line="16" pos:column="25"/></name><operator pos:line="16" pos:column="25">)<pos:position pos:line="16" pos:column="26"/></operator> <operator pos:line="16" pos:column="27">&amp;&amp;<pos:position pos:line="16" pos:column="37"/></operator> <operator pos:line="16" pos:column="30">(<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="31">type_instance<pos:position pos:line="16" pos:column="44"/></name> <operator pos:line="16" pos:column="45">!=<pos:position pos:line="16" pos:column="47"/></operator> <name pos:line="16" pos:column="48">NULL<pos:position pos:line="16" pos:column="52"/></name><operator pos:line="16" pos:column="52">)<pos:position pos:line="16" pos:column="53"/></operator> <operator pos:line="16" pos:column="54">&amp;&amp;<pos:position pos:line="16" pos:column="64"/></operator>
        <operator pos:line="17" pos:column="9">(<pos:position pos:line="17" pos:column="10"/></operator><call><name pos:line="17" pos:column="10">strcasecmp<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><name><name pos:line="17" pos:column="21">i<pos:position pos:line="17" pos:column="22"/></name><operator pos:line="17" pos:column="22">-&gt;<pos:position pos:line="17" pos:column="27"/></operator><name pos:line="17" pos:column="24">inst<pos:position pos:line="17" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="30">type_instance<pos:position pos:line="17" pos:column="43"/></name></expr></argument>)<pos:position pos:line="17" pos:column="44"/></argument_list></call> <operator pos:line="17" pos:column="45">!=<pos:position pos:line="17" pos:column="47"/></operator> <literal type="number" pos:line="17" pos:column="48">0<pos:position pos:line="17" pos:column="49"/></literal><operator pos:line="17" pos:column="49">)<pos:position pos:line="17" pos:column="50"/></operator></expr>)<pos:position pos:line="17" pos:column="51"/></condition><then pos:line="17" pos:column="51">
      <block type="pseudo"><continue pos:line="18" pos:column="7">continue;<pos:position pos:line="18" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><call><name pos:line="20" pos:column="5">DEBUG<pos:position pos:line="20" pos:column="10"/></name><argument_list pos:line="20" pos:column="10">(<argument><expr><literal type="string" pos:line="20" pos:column="11">"netlink plugin: check_ignorelist: "<pos:position pos:line="20" pos:column="47"/></literal>
          <literal type="string" pos:line="21" pos:column="11">"(dev = %s; type = %s; inst = %s) matched "<pos:position pos:line="21" pos:column="54"/></literal>
          <literal type="string" pos:line="22" pos:column="11">"(dev = %s; type = %s; inst = %s)"<pos:position pos:line="22" pos:column="45"/></literal></expr></argument>,
          <argument><expr><name pos:line="23" pos:column="11">dev<pos:position pos:line="23" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="16">type<pos:position pos:line="23" pos:column="20"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="23" pos:column="22">type_instance<pos:position pos:line="23" pos:column="35"/></name> <operator pos:line="23" pos:column="36">==<pos:position pos:line="23" pos:column="38"/></operator> <name pos:line="23" pos:column="39">NULL<pos:position pos:line="23" pos:column="43"/></name></expr> ?<pos:position pos:line="23" pos:column="45"/></condition><then pos:line="23" pos:column="45"> <expr><literal type="string" pos:line="23" pos:column="46">"(nil)"<pos:position pos:line="23" pos:column="53"/></literal></expr> <pos:position pos:line="23" pos:column="54"/></then><else pos:line="23" pos:column="54">: <expr><name pos:line="23" pos:column="56">type_instance<pos:position pos:line="23" pos:column="69"/></name></expr></else></ternary></expr></argument>,
          <argument><expr><ternary><condition><expr><name><name pos:line="24" pos:column="11">i<pos:position pos:line="24" pos:column="12"/></name><operator pos:line="24" pos:column="12">-&gt;<pos:position pos:line="24" pos:column="17"/></operator><name pos:line="24" pos:column="14">device<pos:position pos:line="24" pos:column="20"/></name></name> <operator pos:line="24" pos:column="21">==<pos:position pos:line="24" pos:column="23"/></operator> <name pos:line="24" pos:column="24">NULL<pos:position pos:line="24" pos:column="28"/></name></expr> ?<pos:position pos:line="24" pos:column="30"/></condition><then pos:line="24" pos:column="30"> <expr><literal type="string" pos:line="24" pos:column="31">"(nil)"<pos:position pos:line="24" pos:column="38"/></literal></expr> <pos:position pos:line="24" pos:column="39"/></then><else pos:line="24" pos:column="39">: <expr><name><name pos:line="24" pos:column="41">i<pos:position pos:line="24" pos:column="42"/></name><operator pos:line="24" pos:column="42">-&gt;<pos:position pos:line="24" pos:column="47"/></operator><name pos:line="24" pos:column="44">device<pos:position pos:line="24" pos:column="50"/></name></name></expr></else></ternary></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="52">i<pos:position pos:line="24" pos:column="53"/></name><operator pos:line="24" pos:column="53">-&gt;<pos:position pos:line="24" pos:column="58"/></operator><name pos:line="24" pos:column="55">type<pos:position pos:line="24" pos:column="59"/></name></name></expr></argument>,
          <argument><expr><ternary><condition><expr><name><name pos:line="25" pos:column="11">i<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">-&gt;<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="14">inst<pos:position pos:line="25" pos:column="18"/></name></name> <operator pos:line="25" pos:column="19">==<pos:position pos:line="25" pos:column="21"/></operator> <name pos:line="25" pos:column="22">NULL<pos:position pos:line="25" pos:column="26"/></name></expr> ?<pos:position pos:line="25" pos:column="28"/></condition><then pos:line="25" pos:column="28"> <expr><literal type="string" pos:line="25" pos:column="29">"(nil)"<pos:position pos:line="25" pos:column="36"/></literal></expr> <pos:position pos:line="25" pos:column="37"/></then><else pos:line="25" pos:column="37">: <expr><name><name pos:line="25" pos:column="39">i<pos:position pos:line="25" pos:column="40"/></name><operator pos:line="25" pos:column="40">-&gt;<pos:position pos:line="25" pos:column="45"/></operator><name pos:line="25" pos:column="42">inst<pos:position pos:line="25" pos:column="46"/></name></name></expr></else></ternary></expr></argument>)<pos:position pos:line="25" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="48"/></expr_stmt>

    <return pos:line="27" pos:column="5">return <expr><operator pos:line="27" pos:column="12">(<pos:position pos:line="27" pos:column="13"/></operator><ternary><condition><expr><name pos:line="27" pos:column="13">ir_ignorelist_invert<pos:position pos:line="27" pos:column="33"/></name></expr> ?<pos:position pos:line="27" pos:column="35"/></condition><then pos:line="27" pos:column="35"> <expr><literal type="number" pos:line="27" pos:column="36">0<pos:position pos:line="27" pos:column="37"/></literal></expr> <pos:position pos:line="27" pos:column="38"/></then><else pos:line="27" pos:column="38">: <expr><literal type="number" pos:line="27" pos:column="40">1<pos:position pos:line="27" pos:column="41"/></literal></expr></else></ternary><operator pos:line="27" pos:column="41">)<pos:position pos:line="27" pos:column="42"/></operator></expr>;<pos:position pos:line="27" pos:column="43"/></return>
  }<pos:position pos:line="28" pos:column="4"/></block></for> <comment type="block" pos:line="28" pos:column="5">/* for i */</comment>

  <return pos:line="30" pos:column="3">return <expr><operator pos:line="30" pos:column="10">(<pos:position pos:line="30" pos:column="11"/></operator><name pos:line="30" pos:column="11">ir_ignorelist_invert<pos:position pos:line="30" pos:column="31"/></name><operator pos:line="30" pos:column="31">)<pos:position pos:line="30" pos:column="32"/></operator></expr>;<pos:position pos:line="30" pos:column="33"/></return>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

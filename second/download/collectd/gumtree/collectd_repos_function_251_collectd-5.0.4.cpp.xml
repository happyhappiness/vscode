<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_251_collectd-5.0.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">varnish_config_instance<pos:position pos:line="1" pos:column="35"/></name> <parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><specifier pos:line="1" pos:column="37">const<pos:position pos:line="1" pos:column="42"/></specifier> <name pos:line="1" pos:column="43">oconfig_item_t<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">ci<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list> <comment type="block" pos:line="1" pos:column="63">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">user_config_t<pos:position pos:line="3" pos:column="22"/></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">conf<pos:position pos:line="3" pos:column="28"/></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">user_data_t<pos:position pos:line="4" pos:column="20"/></name></type> <name pos:line="4" pos:column="21">ud<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name></type> <name><name pos:line="5" pos:column="14">callback_name<pos:position pos:line="5" pos:column="27"/></name><index pos:line="5" pos:column="27">[<expr><name pos:line="5" pos:column="28">DATA_MAX_NAME_LEN<pos:position pos:line="5" pos:column="45"/></name></expr>]<pos:position pos:line="5" pos:column="46"/></index></name></decl>;<pos:position pos:line="5" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">i<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><name pos:line="8" pos:column="9">conf<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator> <call><name pos:line="8" pos:column="16">malloc<pos:position pos:line="8" pos:column="22"/></name> <argument_list pos:line="8" pos:column="23">(<argument><expr><sizeof pos:line="8" pos:column="24">sizeof <argument_list pos:line="8" pos:column="31">(<argument><expr><operator pos:line="8" pos:column="32">*<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="33">conf<pos:position pos:line="8" pos:column="37"/></name></expr></argument>)<pos:position pos:line="8" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="40"/></expr_stmt>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">conf<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">==<pos:position pos:line="9" pos:column="20"/></operator> <name pos:line="9" pos:column="21">NULL<pos:position pos:line="9" pos:column="25"/></name></expr>)<pos:position pos:line="9" pos:column="26"/></condition><then pos:line="9" pos:column="26">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><operator pos:line="10" pos:column="24">(<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">ENOMEM<pos:position pos:line="10" pos:column="31"/></name><operator pos:line="10" pos:column="31">)<pos:position pos:line="10" pos:column="32"/></operator></expr>;<pos:position pos:line="10" pos:column="33"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">memset<pos:position pos:line="11" pos:column="15"/></name> <argument_list pos:line="11" pos:column="16">(<argument><expr><name pos:line="11" pos:column="17">conf<pos:position pos:line="11" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="23">0<pos:position pos:line="11" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="26">sizeof <argument_list pos:line="11" pos:column="33">(<argument><expr><operator pos:line="11" pos:column="34">*<pos:position pos:line="11" pos:column="35"/></operator><name pos:line="11" pos:column="35">conf<pos:position pos:line="11" pos:column="39"/></name></expr></argument>)<pos:position pos:line="11" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="12" pos:column="9">conf<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">-&gt;<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="15">instance<pos:position pos:line="12" pos:column="23"/></name></name> <operator pos:line="12" pos:column="24">=<pos:position pos:line="12" pos:column="25"/></operator> <name pos:line="12" pos:column="26">NULL<pos:position pos:line="12" pos:column="30"/></name></expr>;<pos:position pos:line="12" pos:column="31"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="14" pos:column="9">varnish_config_apply_default<pos:position pos:line="14" pos:column="37"/></name> <argument_list pos:line="14" pos:column="38">(<argument><expr><name pos:line="14" pos:column="39">conf<pos:position pos:line="14" pos:column="43"/></name></expr></argument>)<pos:position pos:line="14" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="45"/></expr_stmt>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name><name pos:line="16" pos:column="13">ci<pos:position pos:line="16" pos:column="15"/></name><operator pos:line="16" pos:column="15">-&gt;<pos:position pos:line="16" pos:column="20"/></operator><name pos:line="16" pos:column="17">values_num<pos:position pos:line="16" pos:column="27"/></name></name> <operator pos:line="16" pos:column="28">==<pos:position pos:line="16" pos:column="30"/></operator> <literal type="number" pos:line="16" pos:column="31">1<pos:position pos:line="16" pos:column="32"/></literal></expr>)<pos:position pos:line="16" pos:column="33"/></condition><then pos:line="16" pos:column="33">
	<block pos:line="17" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="18" pos:column="17">int<pos:position pos:line="18" pos:column="20"/></name></type> <name pos:line="18" pos:column="21">status<pos:position pos:line="18" pos:column="27"/></name></decl>;<pos:position pos:line="18" pos:column="28"/></decl_stmt>

		<expr_stmt><expr><name pos:line="20" pos:column="17">status<pos:position pos:line="20" pos:column="23"/></name> <operator pos:line="20" pos:column="24">=<pos:position pos:line="20" pos:column="25"/></operator> <call><name pos:line="20" pos:column="26">cf_util_get_string<pos:position pos:line="20" pos:column="44"/></name> <argument_list pos:line="20" pos:column="45">(<argument><expr><name pos:line="20" pos:column="46">ci<pos:position pos:line="20" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="50">&amp;<pos:position pos:line="20" pos:column="55"/></operator><name><name pos:line="20" pos:column="51">conf<pos:position pos:line="20" pos:column="55"/></name><operator pos:line="20" pos:column="55">-&gt;<pos:position pos:line="20" pos:column="60"/></operator><name pos:line="20" pos:column="57">instance<pos:position pos:line="20" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="67"/></expr_stmt>
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><name pos:line="21" pos:column="21">status<pos:position pos:line="21" pos:column="27"/></name> <operator pos:line="21" pos:column="28">!=<pos:position pos:line="21" pos:column="30"/></operator> <literal type="number" pos:line="21" pos:column="31">0<pos:position pos:line="21" pos:column="32"/></literal></expr>)<pos:position pos:line="21" pos:column="33"/></condition><then pos:line="21" pos:column="33">
		<block pos:line="22" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="23" pos:column="25">sfree<pos:position pos:line="23" pos:column="30"/></name> <argument_list pos:line="23" pos:column="31">(<argument><expr><name pos:line="23" pos:column="32">conf<pos:position pos:line="23" pos:column="36"/></name></expr></argument>)<pos:position pos:line="23" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="38"/></expr_stmt>
			<return pos:line="24" pos:column="25">return <expr><operator pos:line="24" pos:column="32">(<pos:position pos:line="24" pos:column="33"/></operator><name pos:line="24" pos:column="33">status<pos:position pos:line="24" pos:column="39"/></name><operator pos:line="24" pos:column="39">)<pos:position pos:line="24" pos:column="40"/></operator></expr>;<pos:position pos:line="24" pos:column="41"/></return>
		}<pos:position pos:line="25" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">assert<pos:position pos:line="26" pos:column="23"/></name> <argument_list pos:line="26" pos:column="24">(<argument><expr><name><name pos:line="26" pos:column="25">conf<pos:position pos:line="26" pos:column="29"/></name><operator pos:line="26" pos:column="29">-&gt;<pos:position pos:line="26" pos:column="34"/></operator><name pos:line="26" pos:column="31">instance<pos:position pos:line="26" pos:column="39"/></name></name> <operator pos:line="26" pos:column="40">!=<pos:position pos:line="26" pos:column="42"/></operator> <name pos:line="26" pos:column="43">NULL<pos:position pos:line="26" pos:column="47"/></name></expr></argument>)<pos:position pos:line="26" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="49"/></expr_stmt>

		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><call><name pos:line="28" pos:column="21">strcmp<pos:position pos:line="28" pos:column="27"/></name> <argument_list pos:line="28" pos:column="28">(<argument><expr><literal type="string" pos:line="28" pos:column="29">"localhost"<pos:position pos:line="28" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="42">conf<pos:position pos:line="28" pos:column="46"/></name><operator pos:line="28" pos:column="46">-&gt;<pos:position pos:line="28" pos:column="51"/></operator><name pos:line="28" pos:column="48">instance<pos:position pos:line="28" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="57"/></argument_list></call> <operator pos:line="28" pos:column="58">==<pos:position pos:line="28" pos:column="60"/></operator> <literal type="number" pos:line="28" pos:column="61">0<pos:position pos:line="28" pos:column="62"/></literal></expr>)<pos:position pos:line="28" pos:column="63"/></condition><then pos:line="28" pos:column="63">
		<block pos:line="29" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="30" pos:column="25">sfree<pos:position pos:line="30" pos:column="30"/></name> <argument_list pos:line="30" pos:column="31">(<argument><expr><name><name pos:line="30" pos:column="32">conf<pos:position pos:line="30" pos:column="36"/></name><operator pos:line="30" pos:column="36">-&gt;<pos:position pos:line="30" pos:column="41"/></operator><name pos:line="30" pos:column="38">instance<pos:position pos:line="30" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="31" pos:column="25">conf<pos:position pos:line="31" pos:column="29"/></name><operator pos:line="31" pos:column="29">-&gt;<pos:position pos:line="31" pos:column="34"/></operator><name pos:line="31" pos:column="31">instance<pos:position pos:line="31" pos:column="39"/></name></name> <operator pos:line="31" pos:column="40">=<pos:position pos:line="31" pos:column="41"/></operator> <name pos:line="31" pos:column="42">NULL<pos:position pos:line="31" pos:column="46"/></name></expr>;<pos:position pos:line="31" pos:column="47"/></expr_stmt>
		}<pos:position pos:line="32" pos:column="18"/></block></then></if>
	}<pos:position pos:line="33" pos:column="10"/></block></then>
	<elseif pos:line="34" pos:column="9">else <if pos:line="34" pos:column="14">if <condition pos:line="34" pos:column="17">(<expr><name><name pos:line="34" pos:column="18">ci<pos:position pos:line="34" pos:column="20"/></name><operator pos:line="34" pos:column="20">-&gt;<pos:position pos:line="34" pos:column="25"/></operator><name pos:line="34" pos:column="22">values_num<pos:position pos:line="34" pos:column="32"/></name></name> <operator pos:line="34" pos:column="33">&gt;<pos:position pos:line="34" pos:column="37"/></operator> <literal type="number" pos:line="34" pos:column="35">1<pos:position pos:line="34" pos:column="36"/></literal></expr>)<pos:position pos:line="34" pos:column="37"/></condition><then pos:line="34" pos:column="37">
	<block pos:line="35" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">WARNING<pos:position pos:line="36" pos:column="24"/></name> <argument_list pos:line="36" pos:column="25">(<argument><expr><literal type="string" pos:line="36" pos:column="26">"Varnish plugin: \"Instance\" blocks accept only "<pos:position pos:line="36" pos:column="76"/></literal>
				<literal type="string" pos:line="37" pos:column="33">"one argument."<pos:position pos:line="37" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="50"/></expr_stmt>
		<return pos:line="38" pos:column="17">return <expr><operator pos:line="38" pos:column="24">(<pos:position pos:line="38" pos:column="25"/></operator><name pos:line="38" pos:column="25">EINVAL<pos:position pos:line="38" pos:column="31"/></name><operator pos:line="38" pos:column="31">)<pos:position pos:line="38" pos:column="32"/></operator></expr>;<pos:position pos:line="38" pos:column="33"/></return>
	}<pos:position pos:line="39" pos:column="10"/></block></then></if></elseif></if>

	<for pos:line="41" pos:column="9">for <control pos:line="41" pos:column="13">(<init><expr><name pos:line="41" pos:column="14">i<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">=<pos:position pos:line="41" pos:column="17"/></operator> <literal type="number" pos:line="41" pos:column="18">0<pos:position pos:line="41" pos:column="19"/></literal></expr>;<pos:position pos:line="41" pos:column="20"/></init> <condition><expr><name pos:line="41" pos:column="21">i<pos:position pos:line="41" pos:column="22"/></name> <operator pos:line="41" pos:column="23">&lt;<pos:position pos:line="41" pos:column="27"/></operator> <name><name pos:line="41" pos:column="25">ci<pos:position pos:line="41" pos:column="27"/></name><operator pos:line="41" pos:column="27">-&gt;<pos:position pos:line="41" pos:column="32"/></operator><name pos:line="41" pos:column="29">children_num<pos:position pos:line="41" pos:column="41"/></name></name></expr>;<pos:position pos:line="41" pos:column="42"/></condition> <incr><expr><name pos:line="41" pos:column="43">i<pos:position pos:line="41" pos:column="44"/></name><operator pos:line="41" pos:column="44">++<pos:position pos:line="41" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="41" pos:column="47"/></control>
	<block pos:line="42" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="43" pos:column="17">oconfig_item_t<pos:position pos:line="43" pos:column="31"/></name> <modifier pos:line="43" pos:column="32">*<pos:position pos:line="43" pos:column="33"/></modifier></type><name pos:line="43" pos:column="33">child<pos:position pos:line="43" pos:column="38"/></name> <init pos:line="43" pos:column="39">= <expr><name><name pos:line="43" pos:column="41">ci<pos:position pos:line="43" pos:column="43"/></name><operator pos:line="43" pos:column="43">-&gt;<pos:position pos:line="43" pos:column="48"/></operator><name pos:line="43" pos:column="45">children<pos:position pos:line="43" pos:column="53"/></name></name> <operator pos:line="43" pos:column="54">+<pos:position pos:line="43" pos:column="55"/></operator> <name pos:line="43" pos:column="56">i<pos:position pos:line="43" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="43" pos:column="58"/></decl_stmt>

		<if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><call><name pos:line="45" pos:column="21">strcasecmp<pos:position pos:line="45" pos:column="31"/></name> <argument_list pos:line="45" pos:column="32">(<argument><expr><literal type="string" pos:line="45" pos:column="33">"CollectCache"<pos:position pos:line="45" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="49">child<pos:position pos:line="45" pos:column="54"/></name><operator pos:line="45" pos:column="54">-&gt;<pos:position pos:line="45" pos:column="59"/></operator><name pos:line="45" pos:column="56">key<pos:position pos:line="45" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="60"/></argument_list></call> <operator pos:line="45" pos:column="61">==<pos:position pos:line="45" pos:column="63"/></operator> <literal type="number" pos:line="45" pos:column="64">0<pos:position pos:line="45" pos:column="65"/></literal></expr>)<pos:position pos:line="45" pos:column="66"/></condition><then pos:line="45" pos:column="66">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="25">cf_util_get_boolean<pos:position pos:line="46" pos:column="44"/></name> <argument_list pos:line="46" pos:column="45">(<argument><expr><name pos:line="46" pos:column="46">child<pos:position pos:line="46" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="53">&amp;<pos:position pos:line="46" pos:column="58"/></operator><name><name pos:line="46" pos:column="54">conf<pos:position pos:line="46" pos:column="58"/></name><operator pos:line="46" pos:column="58">-&gt;<pos:position pos:line="46" pos:column="63"/></operator><name pos:line="46" pos:column="60">collect_cache<pos:position pos:line="46" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="75"/></expr_stmt></block></then>
		<elseif pos:line="47" pos:column="17">else <if pos:line="47" pos:column="22">if <condition pos:line="47" pos:column="25">(<expr><call><name pos:line="47" pos:column="26">strcasecmp<pos:position pos:line="47" pos:column="36"/></name> <argument_list pos:line="47" pos:column="37">(<argument><expr><literal type="string" pos:line="47" pos:column="38">"CollectConnections"<pos:position pos:line="47" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="60">child<pos:position pos:line="47" pos:column="65"/></name><operator pos:line="47" pos:column="65">-&gt;<pos:position pos:line="47" pos:column="70"/></operator><name pos:line="47" pos:column="67">key<pos:position pos:line="47" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="71"/></argument_list></call> <operator pos:line="47" pos:column="72">==<pos:position pos:line="47" pos:column="74"/></operator> <literal type="number" pos:line="47" pos:column="75">0<pos:position pos:line="47" pos:column="76"/></literal></expr>)<pos:position pos:line="47" pos:column="77"/></condition><then pos:line="47" pos:column="77">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="25">cf_util_get_boolean<pos:position pos:line="48" pos:column="44"/></name> <argument_list pos:line="48" pos:column="45">(<argument><expr><name pos:line="48" pos:column="46">child<pos:position pos:line="48" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="53">&amp;<pos:position pos:line="48" pos:column="58"/></operator><name><name pos:line="48" pos:column="54">conf<pos:position pos:line="48" pos:column="58"/></name><operator pos:line="48" pos:column="58">-&gt;<pos:position pos:line="48" pos:column="63"/></operator><name pos:line="48" pos:column="60">collect_connections<pos:position pos:line="48" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="81"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="49" pos:column="17">else <if pos:line="49" pos:column="22">if <condition pos:line="49" pos:column="25">(<expr><call><name pos:line="49" pos:column="26">strcasecmp<pos:position pos:line="49" pos:column="36"/></name> <argument_list pos:line="49" pos:column="37">(<argument><expr><literal type="string" pos:line="49" pos:column="38">"CollectESI"<pos:position pos:line="49" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="52">child<pos:position pos:line="49" pos:column="57"/></name><operator pos:line="49" pos:column="57">-&gt;<pos:position pos:line="49" pos:column="62"/></operator><name pos:line="49" pos:column="59">key<pos:position pos:line="49" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="63"/></argument_list></call> <operator pos:line="49" pos:column="64">==<pos:position pos:line="49" pos:column="66"/></operator> <literal type="number" pos:line="49" pos:column="67">0<pos:position pos:line="49" pos:column="68"/></literal></expr>)<pos:position pos:line="49" pos:column="69"/></condition><then pos:line="49" pos:column="69">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="25">cf_util_get_boolean<pos:position pos:line="50" pos:column="44"/></name> <argument_list pos:line="50" pos:column="45">(<argument><expr><name pos:line="50" pos:column="46">child<pos:position pos:line="50" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="53">&amp;<pos:position pos:line="50" pos:column="58"/></operator><name><name pos:line="50" pos:column="54">conf<pos:position pos:line="50" pos:column="58"/></name><operator pos:line="50" pos:column="58">-&gt;<pos:position pos:line="50" pos:column="63"/></operator><name pos:line="50" pos:column="60">collect_esi<pos:position pos:line="50" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="73"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="51" pos:column="17">else <if pos:line="51" pos:column="22">if <condition pos:line="51" pos:column="25">(<expr><call><name pos:line="51" pos:column="26">strcasecmp<pos:position pos:line="51" pos:column="36"/></name> <argument_list pos:line="51" pos:column="37">(<argument><expr><literal type="string" pos:line="51" pos:column="38">"CollectBackend"<pos:position pos:line="51" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="56">child<pos:position pos:line="51" pos:column="61"/></name><operator pos:line="51" pos:column="61">-&gt;<pos:position pos:line="51" pos:column="66"/></operator><name pos:line="51" pos:column="63">key<pos:position pos:line="51" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="67"/></argument_list></call> <operator pos:line="51" pos:column="68">==<pos:position pos:line="51" pos:column="70"/></operator> <literal type="number" pos:line="51" pos:column="71">0<pos:position pos:line="51" pos:column="72"/></literal></expr>)<pos:position pos:line="51" pos:column="73"/></condition><then pos:line="51" pos:column="73">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="25">cf_util_get_boolean<pos:position pos:line="52" pos:column="44"/></name> <argument_list pos:line="52" pos:column="45">(<argument><expr><name pos:line="52" pos:column="46">child<pos:position pos:line="52" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="53">&amp;<pos:position pos:line="52" pos:column="58"/></operator><name><name pos:line="52" pos:column="54">conf<pos:position pos:line="52" pos:column="58"/></name><operator pos:line="52" pos:column="58">-&gt;<pos:position pos:line="52" pos:column="63"/></operator><name pos:line="52" pos:column="60">collect_backend<pos:position pos:line="52" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="77"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="53" pos:column="17">else <if pos:line="53" pos:column="22">if <condition pos:line="53" pos:column="25">(<expr><call><name pos:line="53" pos:column="26">strcasecmp<pos:position pos:line="53" pos:column="36"/></name> <argument_list pos:line="53" pos:column="37">(<argument><expr><literal type="string" pos:line="53" pos:column="38">"CollectFetch"<pos:position pos:line="53" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="54">child<pos:position pos:line="53" pos:column="59"/></name><operator pos:line="53" pos:column="59">-&gt;<pos:position pos:line="53" pos:column="64"/></operator><name pos:line="53" pos:column="61">key<pos:position pos:line="53" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="65"/></argument_list></call> <operator pos:line="53" pos:column="66">==<pos:position pos:line="53" pos:column="68"/></operator> <literal type="number" pos:line="53" pos:column="69">0<pos:position pos:line="53" pos:column="70"/></literal></expr>)<pos:position pos:line="53" pos:column="71"/></condition><then pos:line="53" pos:column="71">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="25">cf_util_get_boolean<pos:position pos:line="54" pos:column="44"/></name> <argument_list pos:line="54" pos:column="45">(<argument><expr><name pos:line="54" pos:column="46">child<pos:position pos:line="54" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="53">&amp;<pos:position pos:line="54" pos:column="58"/></operator><name><name pos:line="54" pos:column="54">conf<pos:position pos:line="54" pos:column="58"/></name><operator pos:line="54" pos:column="58">-&gt;<pos:position pos:line="54" pos:column="63"/></operator><name pos:line="54" pos:column="60">collect_fetch<pos:position pos:line="54" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="75"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="55" pos:column="17">else <if pos:line="55" pos:column="22">if <condition pos:line="55" pos:column="25">(<expr><call><name pos:line="55" pos:column="26">strcasecmp<pos:position pos:line="55" pos:column="36"/></name> <argument_list pos:line="55" pos:column="37">(<argument><expr><literal type="string" pos:line="55" pos:column="38">"CollectHCB"<pos:position pos:line="55" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="52">child<pos:position pos:line="55" pos:column="57"/></name><operator pos:line="55" pos:column="57">-&gt;<pos:position pos:line="55" pos:column="62"/></operator><name pos:line="55" pos:column="59">key<pos:position pos:line="55" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="63"/></argument_list></call> <operator pos:line="55" pos:column="64">==<pos:position pos:line="55" pos:column="66"/></operator> <literal type="number" pos:line="55" pos:column="67">0<pos:position pos:line="55" pos:column="68"/></literal></expr>)<pos:position pos:line="55" pos:column="69"/></condition><then pos:line="55" pos:column="69">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="56" pos:column="25">cf_util_get_boolean<pos:position pos:line="56" pos:column="44"/></name> <argument_list pos:line="56" pos:column="45">(<argument><expr><name pos:line="56" pos:column="46">child<pos:position pos:line="56" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="53">&amp;<pos:position pos:line="56" pos:column="58"/></operator><name><name pos:line="56" pos:column="54">conf<pos:position pos:line="56" pos:column="58"/></name><operator pos:line="56" pos:column="58">-&gt;<pos:position pos:line="56" pos:column="63"/></operator><name pos:line="56" pos:column="60">collect_hcb<pos:position pos:line="56" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="73"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="57" pos:column="17">else <if pos:line="57" pos:column="22">if <condition pos:line="57" pos:column="25">(<expr><call><name pos:line="57" pos:column="26">strcasecmp<pos:position pos:line="57" pos:column="36"/></name> <argument_list pos:line="57" pos:column="37">(<argument><expr><literal type="string" pos:line="57" pos:column="38">"CollectSHM"<pos:position pos:line="57" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="52">child<pos:position pos:line="57" pos:column="57"/></name><operator pos:line="57" pos:column="57">-&gt;<pos:position pos:line="57" pos:column="62"/></operator><name pos:line="57" pos:column="59">key<pos:position pos:line="57" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="63"/></argument_list></call> <operator pos:line="57" pos:column="64">==<pos:position pos:line="57" pos:column="66"/></operator> <literal type="number" pos:line="57" pos:column="67">0<pos:position pos:line="57" pos:column="68"/></literal></expr>)<pos:position pos:line="57" pos:column="69"/></condition><then pos:line="57" pos:column="69">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="25">cf_util_get_boolean<pos:position pos:line="58" pos:column="44"/></name> <argument_list pos:line="58" pos:column="45">(<argument><expr><name pos:line="58" pos:column="46">child<pos:position pos:line="58" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="58" pos:column="53">&amp;<pos:position pos:line="58" pos:column="58"/></operator><name><name pos:line="58" pos:column="54">conf<pos:position pos:line="58" pos:column="58"/></name><operator pos:line="58" pos:column="58">-&gt;<pos:position pos:line="58" pos:column="63"/></operator><name pos:line="58" pos:column="60">collect_shm<pos:position pos:line="58" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="73"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="59" pos:column="17">else <if pos:line="59" pos:column="22">if <condition pos:line="59" pos:column="25">(<expr><call><name pos:line="59" pos:column="26">strcasecmp<pos:position pos:line="59" pos:column="36"/></name> <argument_list pos:line="59" pos:column="37">(<argument><expr><literal type="string" pos:line="59" pos:column="38">"CollectSMA"<pos:position pos:line="59" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="52">child<pos:position pos:line="59" pos:column="57"/></name><operator pos:line="59" pos:column="57">-&gt;<pos:position pos:line="59" pos:column="62"/></operator><name pos:line="59" pos:column="59">key<pos:position pos:line="59" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="63"/></argument_list></call> <operator pos:line="59" pos:column="64">==<pos:position pos:line="59" pos:column="66"/></operator> <literal type="number" pos:line="59" pos:column="67">0<pos:position pos:line="59" pos:column="68"/></literal></expr>)<pos:position pos:line="59" pos:column="69"/></condition><then pos:line="59" pos:column="69">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="60" pos:column="25">cf_util_get_boolean<pos:position pos:line="60" pos:column="44"/></name> <argument_list pos:line="60" pos:column="45">(<argument><expr><name pos:line="60" pos:column="46">child<pos:position pos:line="60" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="53">&amp;<pos:position pos:line="60" pos:column="58"/></operator><name><name pos:line="60" pos:column="54">conf<pos:position pos:line="60" pos:column="58"/></name><operator pos:line="60" pos:column="58">-&gt;<pos:position pos:line="60" pos:column="63"/></operator><name pos:line="60" pos:column="60">collect_sma<pos:position pos:line="60" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="73"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="61" pos:column="17">else <if pos:line="61" pos:column="22">if <condition pos:line="61" pos:column="25">(<expr><call><name pos:line="61" pos:column="26">strcasecmp<pos:position pos:line="61" pos:column="36"/></name> <argument_list pos:line="61" pos:column="37">(<argument><expr><literal type="string" pos:line="61" pos:column="38">"CollectSMS"<pos:position pos:line="61" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="52">child<pos:position pos:line="61" pos:column="57"/></name><operator pos:line="61" pos:column="57">-&gt;<pos:position pos:line="61" pos:column="62"/></operator><name pos:line="61" pos:column="59">key<pos:position pos:line="61" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="63"/></argument_list></call> <operator pos:line="61" pos:column="64">==<pos:position pos:line="61" pos:column="66"/></operator> <literal type="number" pos:line="61" pos:column="67">0<pos:position pos:line="61" pos:column="68"/></literal></expr>)<pos:position pos:line="61" pos:column="69"/></condition><then pos:line="61" pos:column="69">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="25">cf_util_get_boolean<pos:position pos:line="62" pos:column="44"/></name> <argument_list pos:line="62" pos:column="45">(<argument><expr><name pos:line="62" pos:column="46">child<pos:position pos:line="62" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="53">&amp;<pos:position pos:line="62" pos:column="58"/></operator><name><name pos:line="62" pos:column="54">conf<pos:position pos:line="62" pos:column="58"/></name><operator pos:line="62" pos:column="58">-&gt;<pos:position pos:line="62" pos:column="63"/></operator><name pos:line="62" pos:column="60">collect_sms<pos:position pos:line="62" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="73"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="63" pos:column="17">else <if pos:line="63" pos:column="22">if <condition pos:line="63" pos:column="25">(<expr><call><name pos:line="63" pos:column="26">strcasecmp<pos:position pos:line="63" pos:column="36"/></name> <argument_list pos:line="63" pos:column="37">(<argument><expr><literal type="string" pos:line="63" pos:column="38">"CollectSM"<pos:position pos:line="63" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="51">child<pos:position pos:line="63" pos:column="56"/></name><operator pos:line="63" pos:column="56">-&gt;<pos:position pos:line="63" pos:column="61"/></operator><name pos:line="63" pos:column="58">key<pos:position pos:line="63" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="62"/></argument_list></call> <operator pos:line="63" pos:column="63">==<pos:position pos:line="63" pos:column="65"/></operator> <literal type="number" pos:line="63" pos:column="66">0<pos:position pos:line="63" pos:column="67"/></literal></expr>)<pos:position pos:line="63" pos:column="68"/></condition><then pos:line="63" pos:column="68">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="25">cf_util_get_boolean<pos:position pos:line="64" pos:column="44"/></name> <argument_list pos:line="64" pos:column="45">(<argument><expr><name pos:line="64" pos:column="46">child<pos:position pos:line="64" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="53">&amp;<pos:position pos:line="64" pos:column="58"/></operator><name><name pos:line="64" pos:column="54">conf<pos:position pos:line="64" pos:column="58"/></name><operator pos:line="64" pos:column="58">-&gt;<pos:position pos:line="64" pos:column="63"/></operator><name pos:line="64" pos:column="60">collect_sm<pos:position pos:line="64" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="72"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="65" pos:column="17">else <if pos:line="65" pos:column="22">if <condition pos:line="65" pos:column="25">(<expr><call><name pos:line="65" pos:column="26">strcasecmp<pos:position pos:line="65" pos:column="36"/></name> <argument_list pos:line="65" pos:column="37">(<argument><expr><literal type="string" pos:line="65" pos:column="38">"CollectTotals"<pos:position pos:line="65" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="55">child<pos:position pos:line="65" pos:column="60"/></name><operator pos:line="65" pos:column="60">-&gt;<pos:position pos:line="65" pos:column="65"/></operator><name pos:line="65" pos:column="62">key<pos:position pos:line="65" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="66"/></argument_list></call> <operator pos:line="65" pos:column="67">==<pos:position pos:line="65" pos:column="69"/></operator> <literal type="number" pos:line="65" pos:column="70">0<pos:position pos:line="65" pos:column="71"/></literal></expr>)<pos:position pos:line="65" pos:column="72"/></condition><then pos:line="65" pos:column="72">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="66" pos:column="25">cf_util_get_boolean<pos:position pos:line="66" pos:column="44"/></name> <argument_list pos:line="66" pos:column="45">(<argument><expr><name pos:line="66" pos:column="46">child<pos:position pos:line="66" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="66" pos:column="53">&amp;<pos:position pos:line="66" pos:column="58"/></operator><name><name pos:line="66" pos:column="54">conf<pos:position pos:line="66" pos:column="58"/></name><operator pos:line="66" pos:column="58">-&gt;<pos:position pos:line="66" pos:column="63"/></operator><name pos:line="66" pos:column="60">collect_totals<pos:position pos:line="66" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="76"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="67" pos:column="17">else <if pos:line="67" pos:column="22">if <condition pos:line="67" pos:column="25">(<expr><call><name pos:line="67" pos:column="26">strcasecmp<pos:position pos:line="67" pos:column="36"/></name> <argument_list pos:line="67" pos:column="37">(<argument><expr><literal type="string" pos:line="67" pos:column="38">"CollectWorkers"<pos:position pos:line="67" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="56">child<pos:position pos:line="67" pos:column="61"/></name><operator pos:line="67" pos:column="61">-&gt;<pos:position pos:line="67" pos:column="66"/></operator><name pos:line="67" pos:column="63">key<pos:position pos:line="67" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="67"/></argument_list></call> <operator pos:line="67" pos:column="68">==<pos:position pos:line="67" pos:column="70"/></operator> <literal type="number" pos:line="67" pos:column="71">0<pos:position pos:line="67" pos:column="72"/></literal></expr>)<pos:position pos:line="67" pos:column="73"/></condition><then pos:line="67" pos:column="73">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="68" pos:column="25">cf_util_get_boolean<pos:position pos:line="68" pos:column="44"/></name> <argument_list pos:line="68" pos:column="45">(<argument><expr><name pos:line="68" pos:column="46">child<pos:position pos:line="68" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="68" pos:column="53">&amp;<pos:position pos:line="68" pos:column="58"/></operator><name><name pos:line="68" pos:column="54">conf<pos:position pos:line="68" pos:column="58"/></name><operator pos:line="68" pos:column="58">-&gt;<pos:position pos:line="68" pos:column="63"/></operator><name pos:line="68" pos:column="60">collect_workers<pos:position pos:line="68" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="77"/></expr_stmt></block></then></if></elseif>
		<else pos:line="69" pos:column="17">else
		<block pos:line="70" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="71" pos:column="25">WARNING<pos:position pos:line="71" pos:column="32"/></name> <argument_list pos:line="71" pos:column="33">(<argument><expr><literal type="string" pos:line="71" pos:column="34">"Varnish plugin: Ignoring unknown "<pos:position pos:line="71" pos:column="69"/></literal>
					<literal type="string" pos:line="72" pos:column="41">"configuration option: \"%s\""<pos:position pos:line="72" pos:column="71"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="73" pos:column="41">child<pos:position pos:line="73" pos:column="46"/></name><operator pos:line="73" pos:column="46">-&gt;<pos:position pos:line="73" pos:column="51"/></operator><name pos:line="73" pos:column="48">key<pos:position pos:line="73" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="53"/></expr_stmt>
		}<pos:position pos:line="74" pos:column="18"/></block></else></if>
	}<pos:position pos:line="75" pos:column="10"/></block></for>

	<if pos:line="77" pos:column="9">if <condition pos:line="77" pos:column="12">(<expr><operator pos:line="77" pos:column="13">!<pos:position pos:line="77" pos:column="14"/></operator><name><name pos:line="77" pos:column="14">conf<pos:position pos:line="77" pos:column="18"/></name><operator pos:line="77" pos:column="18">-&gt;<pos:position pos:line="77" pos:column="23"/></operator><name pos:line="77" pos:column="20">collect_cache<pos:position pos:line="77" pos:column="33"/></name></name>
			<operator pos:line="78" pos:column="25">&amp;&amp;<pos:position pos:line="78" pos:column="35"/></operator> <operator pos:line="78" pos:column="28">!<pos:position pos:line="78" pos:column="29"/></operator><name><name pos:line="78" pos:column="29">conf<pos:position pos:line="78" pos:column="33"/></name><operator pos:line="78" pos:column="33">-&gt;<pos:position pos:line="78" pos:column="38"/></operator><name pos:line="78" pos:column="35">collect_connections<pos:position pos:line="78" pos:column="54"/></name></name>
			<operator pos:line="79" pos:column="25">&amp;&amp;<pos:position pos:line="79" pos:column="35"/></operator> <operator pos:line="79" pos:column="28">!<pos:position pos:line="79" pos:column="29"/></operator><name><name pos:line="79" pos:column="29">conf<pos:position pos:line="79" pos:column="33"/></name><operator pos:line="79" pos:column="33">-&gt;<pos:position pos:line="79" pos:column="38"/></operator><name pos:line="79" pos:column="35">collect_esi<pos:position pos:line="79" pos:column="46"/></name></name>
			<operator pos:line="80" pos:column="25">&amp;&amp;<pos:position pos:line="80" pos:column="35"/></operator> <operator pos:line="80" pos:column="28">!<pos:position pos:line="80" pos:column="29"/></operator><name><name pos:line="80" pos:column="29">conf<pos:position pos:line="80" pos:column="33"/></name><operator pos:line="80" pos:column="33">-&gt;<pos:position pos:line="80" pos:column="38"/></operator><name pos:line="80" pos:column="35">collect_backend<pos:position pos:line="80" pos:column="50"/></name></name>
			<operator pos:line="81" pos:column="25">&amp;&amp;<pos:position pos:line="81" pos:column="35"/></operator> <operator pos:line="81" pos:column="28">!<pos:position pos:line="81" pos:column="29"/></operator><name><name pos:line="81" pos:column="29">conf<pos:position pos:line="81" pos:column="33"/></name><operator pos:line="81" pos:column="33">-&gt;<pos:position pos:line="81" pos:column="38"/></operator><name pos:line="81" pos:column="35">collect_fetch<pos:position pos:line="81" pos:column="48"/></name></name>
			<operator pos:line="82" pos:column="25">&amp;&amp;<pos:position pos:line="82" pos:column="35"/></operator> <operator pos:line="82" pos:column="28">!<pos:position pos:line="82" pos:column="29"/></operator><name><name pos:line="82" pos:column="29">conf<pos:position pos:line="82" pos:column="33"/></name><operator pos:line="82" pos:column="33">-&gt;<pos:position pos:line="82" pos:column="38"/></operator><name pos:line="82" pos:column="35">collect_hcb<pos:position pos:line="82" pos:column="46"/></name></name>
			<operator pos:line="83" pos:column="25">&amp;&amp;<pos:position pos:line="83" pos:column="35"/></operator> <operator pos:line="83" pos:column="28">!<pos:position pos:line="83" pos:column="29"/></operator><name><name pos:line="83" pos:column="29">conf<pos:position pos:line="83" pos:column="33"/></name><operator pos:line="83" pos:column="33">-&gt;<pos:position pos:line="83" pos:column="38"/></operator><name pos:line="83" pos:column="35">collect_shm<pos:position pos:line="83" pos:column="46"/></name></name>
			<operator pos:line="84" pos:column="25">&amp;&amp;<pos:position pos:line="84" pos:column="35"/></operator> <operator pos:line="84" pos:column="28">!<pos:position pos:line="84" pos:column="29"/></operator><name><name pos:line="84" pos:column="29">conf<pos:position pos:line="84" pos:column="33"/></name><operator pos:line="84" pos:column="33">-&gt;<pos:position pos:line="84" pos:column="38"/></operator><name pos:line="84" pos:column="35">collect_sma<pos:position pos:line="84" pos:column="46"/></name></name>
			<operator pos:line="85" pos:column="25">&amp;&amp;<pos:position pos:line="85" pos:column="35"/></operator> <operator pos:line="85" pos:column="28">!<pos:position pos:line="85" pos:column="29"/></operator><name><name pos:line="85" pos:column="29">conf<pos:position pos:line="85" pos:column="33"/></name><operator pos:line="85" pos:column="33">-&gt;<pos:position pos:line="85" pos:column="38"/></operator><name pos:line="85" pos:column="35">collect_sms<pos:position pos:line="85" pos:column="46"/></name></name>
			<operator pos:line="86" pos:column="25">&amp;&amp;<pos:position pos:line="86" pos:column="35"/></operator> <operator pos:line="86" pos:column="28">!<pos:position pos:line="86" pos:column="29"/></operator><name><name pos:line="86" pos:column="29">conf<pos:position pos:line="86" pos:column="33"/></name><operator pos:line="86" pos:column="33">-&gt;<pos:position pos:line="86" pos:column="38"/></operator><name pos:line="86" pos:column="35">collect_sm<pos:position pos:line="86" pos:column="45"/></name></name>
			<operator pos:line="87" pos:column="25">&amp;&amp;<pos:position pos:line="87" pos:column="35"/></operator> <operator pos:line="87" pos:column="28">!<pos:position pos:line="87" pos:column="29"/></operator><name><name pos:line="87" pos:column="29">conf<pos:position pos:line="87" pos:column="33"/></name><operator pos:line="87" pos:column="33">-&gt;<pos:position pos:line="87" pos:column="38"/></operator><name pos:line="87" pos:column="35">collect_totals<pos:position pos:line="87" pos:column="49"/></name></name>
			<operator pos:line="88" pos:column="25">&amp;&amp;<pos:position pos:line="88" pos:column="35"/></operator> <operator pos:line="88" pos:column="28">!<pos:position pos:line="88" pos:column="29"/></operator><name><name pos:line="88" pos:column="29">conf<pos:position pos:line="88" pos:column="33"/></name><operator pos:line="88" pos:column="33">-&gt;<pos:position pos:line="88" pos:column="38"/></operator><name pos:line="88" pos:column="35">collect_workers<pos:position pos:line="88" pos:column="50"/></name></name></expr>)<pos:position pos:line="88" pos:column="51"/></condition><then pos:line="88" pos:column="51">
	<block pos:line="89" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="90" pos:column="17">WARNING<pos:position pos:line="90" pos:column="24"/></name> <argument_list pos:line="90" pos:column="25">(<argument><expr><literal type="string" pos:line="90" pos:column="26">"Varnish plugin: No metric has been configured for "<pos:position pos:line="90" pos:column="78"/></literal>
				<literal type="string" pos:line="91" pos:column="33">"instance \"%s\". Disabling this instance."<pos:position pos:line="91" pos:column="76"/></literal></expr></argument>,
				<argument><expr><ternary><condition><expr><operator pos:line="92" pos:column="33">(<pos:position pos:line="92" pos:column="34"/></operator><name><name pos:line="92" pos:column="34">conf<pos:position pos:line="92" pos:column="38"/></name><operator pos:line="92" pos:column="38">-&gt;<pos:position pos:line="92" pos:column="43"/></operator><name pos:line="92" pos:column="40">instance<pos:position pos:line="92" pos:column="48"/></name></name> <operator pos:line="92" pos:column="49">==<pos:position pos:line="92" pos:column="51"/></operator> <name pos:line="92" pos:column="52">NULL<pos:position pos:line="92" pos:column="56"/></name><operator pos:line="92" pos:column="56">)<pos:position pos:line="92" pos:column="57"/></operator></expr> ?<pos:position pos:line="92" pos:column="59"/></condition><then pos:line="92" pos:column="59"> <expr><literal type="string" pos:line="92" pos:column="60">"localhost"<pos:position pos:line="92" pos:column="71"/></literal></expr> <pos:position pos:line="92" pos:column="72"/></then><else pos:line="92" pos:column="72">: <expr><name><name pos:line="92" pos:column="74">conf<pos:position pos:line="92" pos:column="78"/></name><operator pos:line="92" pos:column="78">-&gt;<pos:position pos:line="92" pos:column="83"/></operator><name pos:line="92" pos:column="80">instance<pos:position pos:line="92" pos:column="88"/></name></name></expr></else></ternary></expr></argument>)<pos:position pos:line="92" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="90"/></expr_stmt>
		<return pos:line="93" pos:column="17">return <expr><operator pos:line="93" pos:column="24">(<pos:position pos:line="93" pos:column="25"/></operator><name pos:line="93" pos:column="25">EINVAL<pos:position pos:line="93" pos:column="31"/></name><operator pos:line="93" pos:column="31">)<pos:position pos:line="93" pos:column="32"/></operator></expr>;<pos:position pos:line="93" pos:column="33"/></return>
	}<pos:position pos:line="94" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="96" pos:column="9">ssnprintf<pos:position pos:line="96" pos:column="18"/></name> <argument_list pos:line="96" pos:column="19">(<argument><expr><name pos:line="96" pos:column="20">callback_name<pos:position pos:line="96" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="96" pos:column="35">sizeof <argument_list pos:line="96" pos:column="42">(<argument><expr><name pos:line="96" pos:column="43">callback_name<pos:position pos:line="96" pos:column="56"/></name></expr></argument>)<pos:position pos:line="96" pos:column="57"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="96" pos:column="59">"varnish/%s"<pos:position pos:line="96" pos:column="71"/></literal></expr></argument>,
			<argument><expr><ternary><condition><expr><operator pos:line="97" pos:column="25">(<pos:position pos:line="97" pos:column="26"/></operator><name><name pos:line="97" pos:column="26">conf<pos:position pos:line="97" pos:column="30"/></name><operator pos:line="97" pos:column="30">-&gt;<pos:position pos:line="97" pos:column="35"/></operator><name pos:line="97" pos:column="32">instance<pos:position pos:line="97" pos:column="40"/></name></name> <operator pos:line="97" pos:column="41">==<pos:position pos:line="97" pos:column="43"/></operator> <name pos:line="97" pos:column="44">NULL<pos:position pos:line="97" pos:column="48"/></name><operator pos:line="97" pos:column="48">)<pos:position pos:line="97" pos:column="49"/></operator></expr> ?<pos:position pos:line="97" pos:column="51"/></condition><then pos:line="97" pos:column="51"> <expr><literal type="string" pos:line="97" pos:column="52">"localhost"<pos:position pos:line="97" pos:column="63"/></literal></expr> <pos:position pos:line="97" pos:column="64"/></then><else pos:line="97" pos:column="64">: <expr><name><name pos:line="97" pos:column="66">conf<pos:position pos:line="97" pos:column="70"/></name><operator pos:line="97" pos:column="70">-&gt;<pos:position pos:line="97" pos:column="75"/></operator><name pos:line="97" pos:column="72">instance<pos:position pos:line="97" pos:column="80"/></name></name></expr></else></ternary></expr></argument>)<pos:position pos:line="97" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="82"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="99" pos:column="9">ud<pos:position pos:line="99" pos:column="11"/></name><operator pos:line="99" pos:column="11">.<pos:position pos:line="99" pos:column="12"/></operator><name pos:line="99" pos:column="12">data<pos:position pos:line="99" pos:column="16"/></name></name> <operator pos:line="99" pos:column="17">=<pos:position pos:line="99" pos:column="18"/></operator> <name pos:line="99" pos:column="19">conf<pos:position pos:line="99" pos:column="23"/></name></expr>;<pos:position pos:line="99" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="100" pos:column="9">ud<pos:position pos:line="100" pos:column="11"/></name><operator pos:line="100" pos:column="11">.<pos:position pos:line="100" pos:column="12"/></operator><name pos:line="100" pos:column="12">free_func<pos:position pos:line="100" pos:column="21"/></name></name> <operator pos:line="100" pos:column="22">=<pos:position pos:line="100" pos:column="23"/></operator> <name pos:line="100" pos:column="24">varnish_config_free<pos:position pos:line="100" pos:column="43"/></name></expr>;<pos:position pos:line="100" pos:column="44"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="102" pos:column="9">plugin_register_complex_read<pos:position pos:line="102" pos:column="37"/></name> <argument_list pos:line="102" pos:column="38">(<comment type="block" pos:line="102" pos:column="39">/* group = */</comment> <argument><expr><literal type="string" pos:line="102" pos:column="53">"varnish"<pos:position pos:line="102" pos:column="62"/></literal></expr></argument>,
			<comment type="block" pos:line="103" pos:column="25">/* name      = */</comment> <argument><expr><name pos:line="103" pos:column="43">callback_name<pos:position pos:line="103" pos:column="56"/></name></expr></argument>,
			<comment type="block" pos:line="104" pos:column="25">/* callback  = */</comment> <argument><expr><name pos:line="104" pos:column="43">varnish_read<pos:position pos:line="104" pos:column="55"/></name></expr></argument>,
			<comment type="block" pos:line="105" pos:column="25">/* interval  = */</comment> <argument><expr><name pos:line="105" pos:column="43">NULL<pos:position pos:line="105" pos:column="47"/></name></expr></argument>,
			<comment type="block" pos:line="106" pos:column="25">/* user data = */</comment> <argument><expr><operator pos:line="106" pos:column="43">&amp;<pos:position pos:line="106" pos:column="48"/></operator><name pos:line="106" pos:column="44">ud<pos:position pos:line="106" pos:column="46"/></name></expr></argument>)<pos:position pos:line="106" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="48"/></expr_stmt>

	<expr_stmt><expr><name pos:line="108" pos:column="9">have_instance<pos:position pos:line="108" pos:column="22"/></name> <operator pos:line="108" pos:column="23">=<pos:position pos:line="108" pos:column="24"/></operator> <literal type="number" pos:line="108" pos:column="25">1<pos:position pos:line="108" pos:column="26"/></literal></expr>;<pos:position pos:line="108" pos:column="27"/></expr_stmt>

	<return pos:line="110" pos:column="9">return <expr><operator pos:line="110" pos:column="16">(<pos:position pos:line="110" pos:column="17"/></operator><literal type="number" pos:line="110" pos:column="17">0<pos:position pos:line="110" pos:column="18"/></literal><operator pos:line="110" pos:column="18">)<pos:position pos:line="110" pos:column="19"/></operator></expr>;<pos:position pos:line="110" pos:column="20"/></return>
}<pos:position pos:line="111" pos:column="2"/></block></function></unit>

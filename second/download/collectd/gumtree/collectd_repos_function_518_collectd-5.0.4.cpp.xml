<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_518_collectd-5.0.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cjni_config_perform<pos:position pos:line="1" pos:column="31"/></name> <parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">oconfig_item_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">ci<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list> <comment type="block" pos:line="1" pos:column="53">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">success<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">errors<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">status<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">i<pos:position pos:line="6" pos:column="8"/></name></decl>;<pos:position pos:line="6" pos:column="9"/></decl_stmt>

  <expr_stmt><expr><name pos:line="8" pos:column="3">success<pos:position pos:line="8" pos:column="10"/></name> <operator pos:line="8" pos:column="11">=<pos:position pos:line="8" pos:column="12"/></operator> <literal type="number" pos:line="8" pos:column="13">0<pos:position pos:line="8" pos:column="14"/></literal></expr>;<pos:position pos:line="8" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><name pos:line="9" pos:column="3">errors<pos:position pos:line="9" pos:column="9"/></name> <operator pos:line="9" pos:column="10">=<pos:position pos:line="9" pos:column="11"/></operator> <literal type="number" pos:line="9" pos:column="12">0<pos:position pos:line="9" pos:column="13"/></literal></expr>;<pos:position pos:line="9" pos:column="14"/></expr_stmt>

  <for pos:line="11" pos:column="3">for <control pos:line="11" pos:column="7">(<init><expr><name pos:line="11" pos:column="8">i<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">=<pos:position pos:line="11" pos:column="11"/></operator> <literal type="number" pos:line="11" pos:column="12">0<pos:position pos:line="11" pos:column="13"/></literal></expr>;<pos:position pos:line="11" pos:column="14"/></init> <condition><expr><name pos:line="11" pos:column="15">i<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">&lt;<pos:position pos:line="11" pos:column="21"/></operator> <name><name pos:line="11" pos:column="19">ci<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">-&gt;<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="23">children_num<pos:position pos:line="11" pos:column="35"/></name></name></expr>;<pos:position pos:line="11" pos:column="36"/></condition> <incr><expr><name pos:line="11" pos:column="37">i<pos:position pos:line="11" pos:column="38"/></name><operator pos:line="11" pos:column="38">++<pos:position pos:line="11" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="41"/></control>
  <block pos:line="12" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">oconfig_item_t<pos:position pos:line="13" pos:column="19"/></name> <modifier pos:line="13" pos:column="20">*<pos:position pos:line="13" pos:column="21"/></modifier></type><name pos:line="13" pos:column="21">child<pos:position pos:line="13" pos:column="26"/></name> <init pos:line="13" pos:column="27">= <expr><name><name pos:line="13" pos:column="29">ci<pos:position pos:line="13" pos:column="31"/></name><operator pos:line="13" pos:column="31">-&gt;<pos:position pos:line="13" pos:column="36"/></operator><name pos:line="13" pos:column="33">children<pos:position pos:line="13" pos:column="41"/></name></name> <operator pos:line="13" pos:column="42">+<pos:position pos:line="13" pos:column="43"/></operator> <name pos:line="13" pos:column="44">i<pos:position pos:line="13" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="46"/></decl_stmt>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><call><name pos:line="15" pos:column="9">strcasecmp<pos:position pos:line="15" pos:column="19"/></name> <argument_list pos:line="15" pos:column="20">(<argument><expr><literal type="string" pos:line="15" pos:column="21">"JVMArg"<pos:position pos:line="15" pos:column="29"/></literal></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="31">child<pos:position pos:line="15" pos:column="36"/></name><operator pos:line="15" pos:column="36">-&gt;<pos:position pos:line="15" pos:column="41"/></operator><name pos:line="15" pos:column="38">key<pos:position pos:line="15" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></call> <operator pos:line="15" pos:column="43">==<pos:position pos:line="15" pos:column="45"/></operator> <literal type="number" pos:line="15" pos:column="46">0<pos:position pos:line="15" pos:column="47"/></literal></expr>)<pos:position pos:line="15" pos:column="48"/></condition><then pos:line="15" pos:column="48">
    <block pos:line="16" pos:column="5">{
      <expr_stmt><expr><name pos:line="17" pos:column="7">status<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator> <call><name pos:line="17" pos:column="16">cjni_config_add_jvm_arg<pos:position pos:line="17" pos:column="39"/></name> <argument_list pos:line="17" pos:column="40">(<argument><expr><name pos:line="17" pos:column="41">child<pos:position pos:line="17" pos:column="46"/></name></expr></argument>)<pos:position pos:line="17" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="48"/></expr_stmt>
      <if pos:line="18" pos:column="7">if <condition pos:line="18" pos:column="10">(<expr><name pos:line="18" pos:column="11">status<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">==<pos:position pos:line="18" pos:column="20"/></operator> <literal type="number" pos:line="18" pos:column="21">0<pos:position pos:line="18" pos:column="22"/></literal></expr>)<pos:position pos:line="18" pos:column="23"/></condition><then pos:line="18" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="9">success<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">++<pos:position pos:line="19" pos:column="18"/></operator></expr>;<pos:position pos:line="19" pos:column="19"/></expr_stmt></block></then>
      <else pos:line="20" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="9">errors<pos:position pos:line="21" pos:column="15"/></name><operator pos:line="21" pos:column="15">++<pos:position pos:line="21" pos:column="17"/></operator></expr>;<pos:position pos:line="21" pos:column="18"/></expr_stmt></block></else></if>
    }<pos:position pos:line="22" pos:column="6"/></block></then>
    <elseif pos:line="23" pos:column="5">else <if pos:line="23" pos:column="10">if <condition pos:line="23" pos:column="13">(<expr><call><name pos:line="23" pos:column="14">strcasecmp<pos:position pos:line="23" pos:column="24"/></name> <argument_list pos:line="23" pos:column="25">(<argument><expr><literal type="string" pos:line="23" pos:column="26">"LoadPlugin"<pos:position pos:line="23" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="40">child<pos:position pos:line="23" pos:column="45"/></name><operator pos:line="23" pos:column="45">-&gt;<pos:position pos:line="23" pos:column="50"/></operator><name pos:line="23" pos:column="47">key<pos:position pos:line="23" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="51"/></argument_list></call> <operator pos:line="23" pos:column="52">==<pos:position pos:line="23" pos:column="54"/></operator> <literal type="number" pos:line="23" pos:column="55">0<pos:position pos:line="23" pos:column="56"/></literal></expr>)<pos:position pos:line="23" pos:column="57"/></condition><then pos:line="23" pos:column="57">
    <block pos:line="24" pos:column="5">{
      <expr_stmt><expr><name pos:line="25" pos:column="7">status<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">=<pos:position pos:line="25" pos:column="15"/></operator> <call><name pos:line="25" pos:column="16">cjni_config_load_plugin<pos:position pos:line="25" pos:column="39"/></name> <argument_list pos:line="25" pos:column="40">(<argument><expr><name pos:line="25" pos:column="41">child<pos:position pos:line="25" pos:column="46"/></name></expr></argument>)<pos:position pos:line="25" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="48"/></expr_stmt>
      <if pos:line="26" pos:column="7">if <condition pos:line="26" pos:column="10">(<expr><name pos:line="26" pos:column="11">status<pos:position pos:line="26" pos:column="17"/></name> <operator pos:line="26" pos:column="18">==<pos:position pos:line="26" pos:column="20"/></operator> <literal type="number" pos:line="26" pos:column="21">0<pos:position pos:line="26" pos:column="22"/></literal></expr>)<pos:position pos:line="26" pos:column="23"/></condition><then pos:line="26" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="9">success<pos:position pos:line="27" pos:column="16"/></name><operator pos:line="27" pos:column="16">++<pos:position pos:line="27" pos:column="18"/></operator></expr>;<pos:position pos:line="27" pos:column="19"/></expr_stmt></block></then>
      <else pos:line="28" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="9">errors<pos:position pos:line="29" pos:column="15"/></name><operator pos:line="29" pos:column="15">++<pos:position pos:line="29" pos:column="17"/></operator></expr>;<pos:position pos:line="29" pos:column="18"/></expr_stmt></block></else></if>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="31" pos:column="5">else <if pos:line="31" pos:column="10">if <condition pos:line="31" pos:column="13">(<expr><call><name pos:line="31" pos:column="14">strcasecmp<pos:position pos:line="31" pos:column="24"/></name> <argument_list pos:line="31" pos:column="25">(<argument><expr><literal type="string" pos:line="31" pos:column="26">"Plugin"<pos:position pos:line="31" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="36">child<pos:position pos:line="31" pos:column="41"/></name><operator pos:line="31" pos:column="41">-&gt;<pos:position pos:line="31" pos:column="46"/></operator><name pos:line="31" pos:column="43">key<pos:position pos:line="31" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="47"/></argument_list></call> <operator pos:line="31" pos:column="48">==<pos:position pos:line="31" pos:column="50"/></operator> <literal type="number" pos:line="31" pos:column="51">0<pos:position pos:line="31" pos:column="52"/></literal></expr>)<pos:position pos:line="31" pos:column="53"/></condition><then pos:line="31" pos:column="53">
    <block pos:line="32" pos:column="5">{
      <expr_stmt><expr><name pos:line="33" pos:column="7">status<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">=<pos:position pos:line="33" pos:column="15"/></operator> <call><name pos:line="33" pos:column="16">cjni_config_plugin_block<pos:position pos:line="33" pos:column="40"/></name> <argument_list pos:line="33" pos:column="41">(<argument><expr><name pos:line="33" pos:column="42">child<pos:position pos:line="33" pos:column="47"/></name></expr></argument>)<pos:position pos:line="33" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="49"/></expr_stmt>
      <if pos:line="34" pos:column="7">if <condition pos:line="34" pos:column="10">(<expr><name pos:line="34" pos:column="11">status<pos:position pos:line="34" pos:column="17"/></name> <operator pos:line="34" pos:column="18">==<pos:position pos:line="34" pos:column="20"/></operator> <literal type="number" pos:line="34" pos:column="21">0<pos:position pos:line="34" pos:column="22"/></literal></expr>)<pos:position pos:line="34" pos:column="23"/></condition><then pos:line="34" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="9">success<pos:position pos:line="35" pos:column="16"/></name><operator pos:line="35" pos:column="16">++<pos:position pos:line="35" pos:column="18"/></operator></expr>;<pos:position pos:line="35" pos:column="19"/></expr_stmt></block></then>
      <else pos:line="36" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="9">errors<pos:position pos:line="37" pos:column="15"/></name><operator pos:line="37" pos:column="15">++<pos:position pos:line="37" pos:column="17"/></operator></expr>;<pos:position pos:line="37" pos:column="18"/></expr_stmt></block></else></if>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if></elseif>
    <else pos:line="39" pos:column="5">else
    <block pos:line="40" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="41" pos:column="7">WARNING<pos:position pos:line="41" pos:column="14"/></name> <argument_list pos:line="41" pos:column="15">(<argument><expr><literal type="string" pos:line="41" pos:column="16">"java plugin: Option `%s' not allowed here."<pos:position pos:line="41" pos:column="60"/></literal></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="62">child<pos:position pos:line="41" pos:column="67"/></name><operator pos:line="41" pos:column="67">-&gt;<pos:position pos:line="41" pos:column="72"/></operator><name pos:line="41" pos:column="69">key<pos:position pos:line="41" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="74"/></expr_stmt>
      <expr_stmt><expr><name pos:line="42" pos:column="7">errors<pos:position pos:line="42" pos:column="13"/></name><operator pos:line="42" pos:column="13">++<pos:position pos:line="42" pos:column="15"/></operator></expr>;<pos:position pos:line="42" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block></else></if>
  }<pos:position pos:line="44" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="46" pos:column="3">DEBUG<pos:position pos:line="46" pos:column="8"/></name> <argument_list pos:line="46" pos:column="9">(<argument><expr><literal type="string" pos:line="46" pos:column="10">"java plugin: jvm_argc = %zu;"<pos:position pos:line="46" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="42">jvm_argc<pos:position pos:line="46" pos:column="50"/></name></expr></argument>)<pos:position pos:line="46" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="52"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="47" pos:column="3">DEBUG<pos:position pos:line="47" pos:column="8"/></name> <argument_list pos:line="47" pos:column="9">(<argument><expr><literal type="string" pos:line="47" pos:column="10">"java plugin: java_classes_list_len = %zu;"<pos:position pos:line="47" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="55">java_classes_list_len<pos:position pos:line="47" pos:column="76"/></name></expr></argument>)<pos:position pos:line="47" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="78"/></expr_stmt>

  <if pos:line="49" pos:column="3">if <condition pos:line="49" pos:column="6">(<expr><operator pos:line="49" pos:column="7">(<pos:position pos:line="49" pos:column="8"/></operator><name pos:line="49" pos:column="8">success<pos:position pos:line="49" pos:column="15"/></name> <operator pos:line="49" pos:column="16">==<pos:position pos:line="49" pos:column="18"/></operator> <literal type="number" pos:line="49" pos:column="19">0<pos:position pos:line="49" pos:column="20"/></literal><operator pos:line="49" pos:column="20">)<pos:position pos:line="49" pos:column="21"/></operator> <operator pos:line="49" pos:column="22">&amp;&amp;<pos:position pos:line="49" pos:column="32"/></operator> <operator pos:line="49" pos:column="25">(<pos:position pos:line="49" pos:column="26"/></operator><name pos:line="49" pos:column="26">errors<pos:position pos:line="49" pos:column="32"/></name> <operator pos:line="49" pos:column="33">&gt;<pos:position pos:line="49" pos:column="37"/></operator> <literal type="number" pos:line="49" pos:column="35">0<pos:position pos:line="49" pos:column="36"/></literal><operator pos:line="49" pos:column="36">)<pos:position pos:line="49" pos:column="37"/></operator></expr>)<pos:position pos:line="49" pos:column="38"/></condition><then pos:line="49" pos:column="38">
  <block pos:line="50" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">ERROR<pos:position pos:line="51" pos:column="10"/></name> <argument_list pos:line="51" pos:column="11">(<argument><expr><literal type="string" pos:line="51" pos:column="12">"java plugin: All statements failed."<pos:position pos:line="51" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="51"/></expr_stmt>
    <return pos:line="52" pos:column="5">return <expr><operator pos:line="52" pos:column="12">(<pos:position pos:line="52" pos:column="13"/></operator><operator pos:line="52" pos:column="13">-<pos:position pos:line="52" pos:column="14"/></operator><literal type="number" pos:line="52" pos:column="14">1<pos:position pos:line="52" pos:column="15"/></literal><operator pos:line="52" pos:column="15">)<pos:position pos:line="52" pos:column="16"/></operator></expr>;<pos:position pos:line="52" pos:column="17"/></return>
  }<pos:position pos:line="53" pos:column="4"/></block></then></if>

  <return pos:line="55" pos:column="3">return <expr><operator pos:line="55" pos:column="10">(<pos:position pos:line="55" pos:column="11"/></operator><literal type="number" pos:line="55" pos:column="11">0<pos:position pos:line="55" pos:column="12"/></literal><operator pos:line="55" pos:column="12">)<pos:position pos:line="55" pos:column="13"/></operator></expr>;<pos:position pos:line="55" pos:column="14"/></return>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2390_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cj_cb_start_array<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">void<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">ctx<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list> <block pos:line="1" pos:column="41">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">cj_t<pos:position pos:line="2" pos:column="7"/></name> <modifier pos:line="2" pos:column="8">*<pos:position pos:line="2" pos:column="9"/></modifier></type><name pos:line="2" pos:column="9">db<pos:position pos:line="2" pos:column="11"/></name> <init pos:line="2" pos:column="12">= <expr><operator pos:line="2" pos:column="14">(<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">cj_t<pos:position pos:line="2" pos:column="19"/></name> <operator pos:line="2" pos:column="20">*<pos:position pos:line="2" pos:column="21"/></operator><operator pos:line="2" pos:column="21">)<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">ctx<pos:position pos:line="2" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="2" pos:column="26"/></decl_stmt>

  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><operator pos:line="4" pos:column="7">(<pos:position pos:line="4" pos:column="8"/></operator><name><name pos:line="4" pos:column="8">db<pos:position pos:line="4" pos:column="10"/></name><operator pos:line="4" pos:column="10">-&gt;<pos:position pos:line="4" pos:column="15"/></operator><name pos:line="4" pos:column="12">depth<pos:position pos:line="4" pos:column="17"/></name></name> <operator pos:line="4" pos:column="18">+<pos:position pos:line="4" pos:column="19"/></operator> <literal type="number" pos:line="4" pos:column="20">1<pos:position pos:line="4" pos:column="21"/></literal><operator pos:line="4" pos:column="21">)<pos:position pos:line="4" pos:column="22"/></operator> <operator pos:line="4" pos:column="23">&gt;=<pos:position pos:line="4" pos:column="28"/></operator> <name pos:line="4" pos:column="26">YAJL_MAX_DEPTH<pos:position pos:line="4" pos:column="40"/></name></expr>)<pos:position pos:line="4" pos:column="41"/></condition><then pos:line="4" pos:column="41"> <block pos:line="4" pos:column="42">{
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">ERROR<pos:position pos:line="5" pos:column="10"/></name><argument_list pos:line="5" pos:column="10">(<argument><expr><literal type="string" pos:line="5" pos:column="11">"curl_json plugin: %s depth exceeds max, aborting."<pos:position pos:line="5" pos:column="62"/></literal></expr></argument>,
          <argument><expr><ternary><condition><expr><name><name pos:line="6" pos:column="11">db<pos:position pos:line="6" pos:column="13"/></name><operator pos:line="6" pos:column="13">-&gt;<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="15">url<pos:position pos:line="6" pos:column="18"/></name></name></expr> ?<pos:position pos:line="6" pos:column="20"/></condition><then pos:line="6" pos:column="20"> <expr><name><name pos:line="6" pos:column="21">db<pos:position pos:line="6" pos:column="23"/></name><operator pos:line="6" pos:column="23">-&gt;<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="25">url<pos:position pos:line="6" pos:column="28"/></name></name></expr> <pos:position pos:line="6" pos:column="29"/></then><else pos:line="6" pos:column="29">: <expr><name><name pos:line="6" pos:column="31">db<pos:position pos:line="6" pos:column="33"/></name><operator pos:line="6" pos:column="33">-&gt;<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="35">sock<pos:position pos:line="6" pos:column="39"/></name></name></expr></else></ternary></expr></argument>)<pos:position pos:line="6" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="41"/></expr_stmt>
    <return pos:line="7" pos:column="5">return <expr><name pos:line="7" pos:column="12">CJ_CB_ABORT<pos:position pos:line="7" pos:column="23"/></name></expr>;<pos:position pos:line="7" pos:column="24"/></return>
  }<pos:position pos:line="8" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="9" pos:column="3">db<pos:position pos:line="9" pos:column="5"/></name><operator pos:line="9" pos:column="5">-&gt;<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="7">depth<pos:position pos:line="9" pos:column="12"/></name></name><operator pos:line="9" pos:column="12">++<pos:position pos:line="9" pos:column="14"/></operator></expr>;<pos:position pos:line="9" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="10" pos:column="3">db<pos:position pos:line="10" pos:column="5"/></name><operator pos:line="10" pos:column="5">-&gt;<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="7">state<pos:position pos:line="10" pos:column="12"/></name><index pos:line="10" pos:column="12">[<expr><name><name pos:line="10" pos:column="13">db<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">-&gt;<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="17">depth<pos:position pos:line="10" pos:column="22"/></name></name></expr>]<pos:position pos:line="10" pos:column="23"/></index></name><operator pos:line="10" pos:column="23">.<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="24">in_array<pos:position pos:line="10" pos:column="32"/></name> <operator pos:line="10" pos:column="33">=<pos:position pos:line="10" pos:column="34"/></operator> <literal type="number" pos:line="10" pos:column="35">1<pos:position pos:line="10" pos:column="36"/></literal></expr>;<pos:position pos:line="10" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="11" pos:column="3">db<pos:position pos:line="11" pos:column="5"/></name><operator pos:line="11" pos:column="5">-&gt;<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="7">state<pos:position pos:line="11" pos:column="12"/></name><index pos:line="11" pos:column="12">[<expr><name><name pos:line="11" pos:column="13">db<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">-&gt;<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="17">depth<pos:position pos:line="11" pos:column="22"/></name></name></expr>]<pos:position pos:line="11" pos:column="23"/></index></name><operator pos:line="11" pos:column="23">.<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="24">index<pos:position pos:line="11" pos:column="29"/></name> <operator pos:line="11" pos:column="30">=<pos:position pos:line="11" pos:column="31"/></operator> <literal type="number" pos:line="11" pos:column="32">0<pos:position pos:line="11" pos:column="33"/></literal></expr>;<pos:position pos:line="11" pos:column="34"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="13" pos:column="3">cj_load_key<pos:position pos:line="13" pos:column="14"/></name><argument_list pos:line="13" pos:column="14">(<argument><expr><name pos:line="13" pos:column="15">db<pos:position pos:line="13" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="19">"0"<pos:position pos:line="13" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="24"/></expr_stmt>

  <return pos:line="15" pos:column="3">return <expr><name pos:line="15" pos:column="10">CJ_CB_CONTINUE<pos:position pos:line="15" pos:column="24"/></name></expr>;<pos:position pos:line="15" pos:column="25"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

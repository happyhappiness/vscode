<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_816_collectd-4.7.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">counter_list_t<pos:position pos:line="1" pos:column="22"/></name> <modifier pos:line="1" pos:column="23">*<pos:position pos:line="1" pos:column="24"/></modifier></type><name pos:line="1" pos:column="24">counter_list_create<pos:position pos:line="1" pos:column="43"/></name> <parameter_list pos:line="1" pos:column="44">(<parameter><decl><type><name pos:line="1" pos:column="45">counter_list_t<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier><modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">list<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="2" pos:column="17">unsigned<pos:position pos:line="2" pos:column="25"/></name> <name pos:line="2" pos:column="26">int<pos:position pos:line="2" pos:column="29"/></name></type> <name pos:line="2" pos:column="30">key<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="35">unsigned<pos:position pos:line="2" pos:column="43"/></name> <name pos:line="2" pos:column="44">int<pos:position pos:line="2" pos:column="47"/></name></type> <name pos:line="2" pos:column="48">value<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">counter_list_t<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">entry<pos:position pos:line="4" pos:column="30"/></name></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="6" pos:column="9">DEBUG<pos:position pos:line="6" pos:column="14"/></name> <argument_list pos:line="6" pos:column="15">(<argument><expr><literal type="string" pos:line="6" pos:column="16">"counter_list_create (list = %p, key = %u, value = %u)"<pos:position pos:line="6" pos:column="71"/></literal></expr></argument>,
			<argument><expr><operator pos:line="7" pos:column="25">(<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="26">void<pos:position pos:line="7" pos:column="30"/></name> <operator pos:line="7" pos:column="31">*<pos:position pos:line="7" pos:column="32"/></operator><operator pos:line="7" pos:column="32">)<pos:position pos:line="7" pos:column="33"/></operator> <operator pos:line="7" pos:column="34">*<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="35">list<pos:position pos:line="7" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="41">key<pos:position pos:line="7" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="46">value<pos:position pos:line="7" pos:column="51"/></name></expr></argument>)<pos:position pos:line="7" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="53"/></expr_stmt>

	<expr_stmt><expr><name pos:line="9" pos:column="9">entry<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">=<pos:position pos:line="9" pos:column="16"/></operator> <operator pos:line="9" pos:column="17">(<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="18">counter_list_t<pos:position pos:line="9" pos:column="32"/></name> <operator pos:line="9" pos:column="33">*<pos:position pos:line="9" pos:column="34"/></operator><operator pos:line="9" pos:column="34">)<pos:position pos:line="9" pos:column="35"/></operator> <call><name pos:line="9" pos:column="36">malloc<pos:position pos:line="9" pos:column="42"/></name> <argument_list pos:line="9" pos:column="43">(<argument><expr><sizeof pos:line="9" pos:column="44">sizeof <argument_list pos:line="9" pos:column="51">(<argument><expr><name pos:line="9" pos:column="52">counter_list_t<pos:position pos:line="9" pos:column="66"/></name></expr></argument>)<pos:position pos:line="9" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="69"/></expr_stmt>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">entry<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">==<pos:position pos:line="10" pos:column="21"/></operator> <name pos:line="10" pos:column="22">NULL<pos:position pos:line="10" pos:column="26"/></name></expr>)<pos:position pos:line="10" pos:column="27"/></condition><then pos:line="10" pos:column="27">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><operator pos:line="11" pos:column="24">(<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="25">NULL<pos:position pos:line="11" pos:column="29"/></name><operator pos:line="11" pos:column="29">)<pos:position pos:line="11" pos:column="30"/></operator></expr>;<pos:position pos:line="11" pos:column="31"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="13" pos:column="9">memset<pos:position pos:line="13" pos:column="15"/></name> <argument_list pos:line="13" pos:column="16">(<argument><expr><name pos:line="13" pos:column="17">entry<pos:position pos:line="13" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="24">0<pos:position pos:line="13" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="27">sizeof <argument_list pos:line="13" pos:column="34">(<argument><expr><name pos:line="13" pos:column="35">counter_list_t<pos:position pos:line="13" pos:column="49"/></name></expr></argument>)<pos:position pos:line="13" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="14" pos:column="9">entry<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">-&gt;<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="16">key<pos:position pos:line="14" pos:column="19"/></name></name> <operator pos:line="14" pos:column="20">=<pos:position pos:line="14" pos:column="21"/></operator> <name pos:line="14" pos:column="22">key<pos:position pos:line="14" pos:column="25"/></name></expr>;<pos:position pos:line="14" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="15" pos:column="9">entry<pos:position pos:line="15" pos:column="14"/></name><operator pos:line="15" pos:column="14">-&gt;<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="16">value<pos:position pos:line="15" pos:column="21"/></name></name> <operator pos:line="15" pos:column="22">=<pos:position pos:line="15" pos:column="23"/></operator> <name pos:line="15" pos:column="24">value<pos:position pos:line="15" pos:column="29"/></name></expr>;<pos:position pos:line="15" pos:column="30"/></expr_stmt>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">*<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">list<pos:position pos:line="17" pos:column="18"/></name> <operator pos:line="17" pos:column="19">==<pos:position pos:line="17" pos:column="21"/></operator> <name pos:line="17" pos:column="22">NULL<pos:position pos:line="17" pos:column="26"/></name></expr>)<pos:position pos:line="17" pos:column="27"/></condition><then pos:line="17" pos:column="27">
	<block pos:line="18" pos:column="9">{
		<expr_stmt><expr><operator pos:line="19" pos:column="17">*<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="18">list<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">=<pos:position pos:line="19" pos:column="24"/></operator> <name pos:line="19" pos:column="25">entry<pos:position pos:line="19" pos:column="30"/></name></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></then>
	<else pos:line="21" pos:column="9">else
	<block pos:line="22" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="23" pos:column="17">counter_list_t<pos:position pos:line="23" pos:column="31"/></name> <modifier pos:line="23" pos:column="32">*<pos:position pos:line="23" pos:column="33"/></modifier></type><name pos:line="23" pos:column="33">last<pos:position pos:line="23" pos:column="37"/></name></decl>;<pos:position pos:line="23" pos:column="38"/></decl_stmt>

		<expr_stmt><expr><name pos:line="25" pos:column="17">last<pos:position pos:line="25" pos:column="21"/></name> <operator pos:line="25" pos:column="22">=<pos:position pos:line="25" pos:column="23"/></operator> <operator pos:line="25" pos:column="24">*<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="25">list<pos:position pos:line="25" pos:column="29"/></name></expr>;<pos:position pos:line="25" pos:column="30"/></expr_stmt>
		<while pos:line="26" pos:column="17">while <condition pos:line="26" pos:column="23">(<expr><name><name pos:line="26" pos:column="24">last<pos:position pos:line="26" pos:column="28"/></name><operator pos:line="26" pos:column="28">-&gt;<pos:position pos:line="26" pos:column="33"/></operator><name pos:line="26" pos:column="30">next<pos:position pos:line="26" pos:column="34"/></name></name> <operator pos:line="26" pos:column="35">!=<pos:position pos:line="26" pos:column="37"/></operator> <name pos:line="26" pos:column="38">NULL<pos:position pos:line="26" pos:column="42"/></name></expr>)<pos:position pos:line="26" pos:column="43"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="25">last<pos:position pos:line="27" pos:column="29"/></name> <operator pos:line="27" pos:column="30">=<pos:position pos:line="27" pos:column="31"/></operator> <name><name pos:line="27" pos:column="32">last<pos:position pos:line="27" pos:column="36"/></name><operator pos:line="27" pos:column="36">-&gt;<pos:position pos:line="27" pos:column="41"/></operator><name pos:line="27" pos:column="38">next<pos:position pos:line="27" pos:column="42"/></name></name></expr>;<pos:position pos:line="27" pos:column="43"/></expr_stmt></block></while>

		<expr_stmt><expr><name><name pos:line="29" pos:column="17">last<pos:position pos:line="29" pos:column="21"/></name><operator pos:line="29" pos:column="21">-&gt;<pos:position pos:line="29" pos:column="26"/></operator><name pos:line="29" pos:column="23">next<pos:position pos:line="29" pos:column="27"/></name></name> <operator pos:line="29" pos:column="28">=<pos:position pos:line="29" pos:column="29"/></operator> <name pos:line="29" pos:column="30">entry<pos:position pos:line="29" pos:column="35"/></name></expr>;<pos:position pos:line="29" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="30" pos:column="10"/></block></else></if>

	<expr_stmt><expr><call><name pos:line="32" pos:column="9">DEBUG<pos:position pos:line="32" pos:column="14"/></name> <argument_list pos:line="32" pos:column="15">(<argument><expr><literal type="string" pos:line="32" pos:column="16">"return (%p)"<pos:position pos:line="32" pos:column="29"/></literal></expr></argument>, <argument><expr><operator pos:line="32" pos:column="31">(<pos:position pos:line="32" pos:column="32"/></operator><name pos:line="32" pos:column="32">void<pos:position pos:line="32" pos:column="36"/></name> <operator pos:line="32" pos:column="37">*<pos:position pos:line="32" pos:column="38"/></operator><operator pos:line="32" pos:column="38">)<pos:position pos:line="32" pos:column="39"/></operator> <name pos:line="32" pos:column="40">entry<pos:position pos:line="32" pos:column="45"/></name></expr></argument>)<pos:position pos:line="32" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="47"/></expr_stmt>
	<return pos:line="33" pos:column="9">return <expr><operator pos:line="33" pos:column="16">(<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="17">entry<pos:position pos:line="33" pos:column="22"/></name><operator pos:line="33" pos:column="22">)<pos:position pos:line="33" pos:column="23"/></operator></expr>;<pos:position pos:line="33" pos:column="24"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

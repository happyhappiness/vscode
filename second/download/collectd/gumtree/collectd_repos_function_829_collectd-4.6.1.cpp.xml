<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_829_collectd-4.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">init_hostname<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">void<pos:position pos:line="1" pos:column="31"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">str<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">addrinfo<pos:position pos:line="5" pos:column="24"/></name></name></type>  <name pos:line="5" pos:column="26">ai_hints<pos:position pos:line="5" pos:column="34"/></name></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">addrinfo<pos:position pos:line="6" pos:column="24"/></name></name> <modifier pos:line="6" pos:column="25">*<pos:position pos:line="6" pos:column="26"/></modifier></type><name pos:line="6" pos:column="26">ai_list<pos:position pos:line="6" pos:column="33"/></name></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">addrinfo<pos:position pos:line="7" pos:column="24"/></name></name> <modifier pos:line="7" pos:column="25">*<pos:position pos:line="7" pos:column="26"/></modifier></type><name pos:line="7" pos:column="26">ai_ptr<pos:position pos:line="7" pos:column="32"/></name></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">status<pos:position pos:line="8" pos:column="19"/></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>

	<expr_stmt><expr><name pos:line="10" pos:column="9">str<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <call><name pos:line="10" pos:column="15">global_option_get<pos:position pos:line="10" pos:column="32"/></name> <argument_list pos:line="10" pos:column="33">(<argument><expr><literal type="string" pos:line="10" pos:column="34">"Hostname"<pos:position pos:line="10" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="46"/></expr_stmt>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">str<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">!=<pos:position pos:line="11" pos:column="19"/></operator> <name pos:line="11" pos:column="20">NULL<pos:position pos:line="11" pos:column="24"/></name></expr>)<pos:position pos:line="11" pos:column="25"/></condition><then pos:line="11" pos:column="25">
	<block pos:line="12" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">sstrncpy<pos:position pos:line="13" pos:column="25"/></name> <argument_list pos:line="13" pos:column="26">(<argument><expr><name pos:line="13" pos:column="27">hostname_g<pos:position pos:line="13" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="39">str<pos:position pos:line="13" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="44">sizeof <argument_list pos:line="13" pos:column="51">(<argument><expr><name pos:line="13" pos:column="52">hostname_g<pos:position pos:line="13" pos:column="62"/></name></expr></argument>)<pos:position pos:line="13" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="65"/></expr_stmt>
		<return pos:line="14" pos:column="17">return <expr><operator pos:line="14" pos:column="24">(<pos:position pos:line="14" pos:column="25"/></operator><literal type="number" pos:line="14" pos:column="25">0<pos:position pos:line="14" pos:column="26"/></literal><operator pos:line="14" pos:column="26">)<pos:position pos:line="14" pos:column="27"/></operator></expr>;<pos:position pos:line="14" pos:column="28"/></return>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><call><name pos:line="17" pos:column="13">gethostname<pos:position pos:line="17" pos:column="24"/></name> <argument_list pos:line="17" pos:column="25">(<argument><expr><name pos:line="17" pos:column="26">hostname_g<pos:position pos:line="17" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="38">sizeof <argument_list pos:line="17" pos:column="45">(<argument><expr><name pos:line="17" pos:column="46">hostname_g<pos:position pos:line="17" pos:column="56"/></name></expr></argument>)<pos:position pos:line="17" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="58"/></argument_list></call> <operator pos:line="17" pos:column="59">!=<pos:position pos:line="17" pos:column="61"/></operator> <literal type="number" pos:line="17" pos:column="62">0<pos:position pos:line="17" pos:column="63"/></literal></expr>)<pos:position pos:line="17" pos:column="64"/></condition><then pos:line="17" pos:column="64">
	<block pos:line="18" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">fprintf<pos:position pos:line="19" pos:column="24"/></name> <argument_list pos:line="19" pos:column="25">(<argument><expr><name pos:line="19" pos:column="26">stderr<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="34">"`gethostname' failed and no "<pos:position pos:line="19" pos:column="64"/></literal>
				<literal type="string" pos:line="20" pos:column="33">"hostname was configured.\n"<pos:position pos:line="20" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="63"/></expr_stmt>
		<return pos:line="21" pos:column="17">return <expr><operator pos:line="21" pos:column="24">(<pos:position pos:line="21" pos:column="25"/></operator><operator pos:line="21" pos:column="25">-<pos:position pos:line="21" pos:column="26"/></operator><literal type="number" pos:line="21" pos:column="26">1<pos:position pos:line="21" pos:column="27"/></literal><operator pos:line="21" pos:column="27">)<pos:position pos:line="21" pos:column="28"/></operator></expr>;<pos:position pos:line="21" pos:column="29"/></return>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="24" pos:column="9">str<pos:position pos:line="24" pos:column="12"/></name> <operator pos:line="24" pos:column="13">=<pos:position pos:line="24" pos:column="14"/></operator> <call><name pos:line="24" pos:column="15">global_option_get<pos:position pos:line="24" pos:column="32"/></name> <argument_list pos:line="24" pos:column="33">(<argument><expr><literal type="string" pos:line="24" pos:column="34">"FQDNLookup"<pos:position pos:line="24" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="48"/></expr_stmt>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><operator pos:line="25" pos:column="13">(<pos:position pos:line="25" pos:column="14"/></operator><call><name pos:line="25" pos:column="14">strcasecmp<pos:position pos:line="25" pos:column="24"/></name> <argument_list pos:line="25" pos:column="25">(<argument><expr><literal type="string" pos:line="25" pos:column="26">"false"<pos:position pos:line="25" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="35">str<pos:position pos:line="25" pos:column="38"/></name></expr></argument>)<pos:position pos:line="25" pos:column="39"/></argument_list></call> <operator pos:line="25" pos:column="40">==<pos:position pos:line="25" pos:column="42"/></operator> <literal type="number" pos:line="25" pos:column="43">0<pos:position pos:line="25" pos:column="44"/></literal><operator pos:line="25" pos:column="44">)<pos:position pos:line="25" pos:column="45"/></operator>
			<operator pos:line="26" pos:column="25">||<pos:position pos:line="26" pos:column="27"/></operator> <operator pos:line="26" pos:column="28">(<pos:position pos:line="26" pos:column="29"/></operator><call><name pos:line="26" pos:column="29">strcasecmp<pos:position pos:line="26" pos:column="39"/></name> <argument_list pos:line="26" pos:column="40">(<argument><expr><literal type="string" pos:line="26" pos:column="41">"no"<pos:position pos:line="26" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="47">str<pos:position pos:line="26" pos:column="50"/></name></expr></argument>)<pos:position pos:line="26" pos:column="51"/></argument_list></call> <operator pos:line="26" pos:column="52">==<pos:position pos:line="26" pos:column="54"/></operator> <literal type="number" pos:line="26" pos:column="55">0<pos:position pos:line="26" pos:column="56"/></literal><operator pos:line="26" pos:column="56">)<pos:position pos:line="26" pos:column="57"/></operator>
			<operator pos:line="27" pos:column="25">||<pos:position pos:line="27" pos:column="27"/></operator> <operator pos:line="27" pos:column="28">(<pos:position pos:line="27" pos:column="29"/></operator><call><name pos:line="27" pos:column="29">strcasecmp<pos:position pos:line="27" pos:column="39"/></name> <argument_list pos:line="27" pos:column="40">(<argument><expr><literal type="string" pos:line="27" pos:column="41">"off"<pos:position pos:line="27" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="48">str<pos:position pos:line="27" pos:column="51"/></name></expr></argument>)<pos:position pos:line="27" pos:column="52"/></argument_list></call> <operator pos:line="27" pos:column="53">==<pos:position pos:line="27" pos:column="55"/></operator> <literal type="number" pos:line="27" pos:column="56">0<pos:position pos:line="27" pos:column="57"/></literal><operator pos:line="27" pos:column="57">)<pos:position pos:line="27" pos:column="58"/></operator></expr>)<pos:position pos:line="27" pos:column="59"/></condition><then pos:line="27" pos:column="59">
		<block type="pseudo"><return pos:line="28" pos:column="17">return <expr><operator pos:line="28" pos:column="24">(<pos:position pos:line="28" pos:column="25"/></operator><literal type="number" pos:line="28" pos:column="25">0<pos:position pos:line="28" pos:column="26"/></literal><operator pos:line="28" pos:column="26">)<pos:position pos:line="28" pos:column="27"/></operator></expr>;<pos:position pos:line="28" pos:column="28"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="30" pos:column="9">memset<pos:position pos:line="30" pos:column="15"/></name> <argument_list pos:line="30" pos:column="16">(<argument><expr><operator pos:line="30" pos:column="17">&amp;<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="18">ai_hints<pos:position pos:line="30" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="30" pos:column="28">'\0'<pos:position pos:line="30" pos:column="32"/></literal></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="34">sizeof <argument_list pos:line="30" pos:column="41">(<argument><expr><name pos:line="30" pos:column="42">ai_hints<pos:position pos:line="30" pos:column="50"/></name></expr></argument>)<pos:position pos:line="30" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="30" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="31" pos:column="9">ai_hints<pos:position pos:line="31" pos:column="17"/></name><operator pos:line="31" pos:column="17">.<pos:position pos:line="31" pos:column="18"/></operator><name pos:line="31" pos:column="18">ai_flags<pos:position pos:line="31" pos:column="26"/></name></name> <operator pos:line="31" pos:column="27">=<pos:position pos:line="31" pos:column="28"/></operator> <name pos:line="31" pos:column="29">AI_CANONNAME<pos:position pos:line="31" pos:column="41"/></name></expr>;<pos:position pos:line="31" pos:column="42"/></expr_stmt>

	<expr_stmt><expr><name pos:line="33" pos:column="9">status<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">=<pos:position pos:line="33" pos:column="17"/></operator> <call><name pos:line="33" pos:column="18">getaddrinfo<pos:position pos:line="33" pos:column="29"/></name> <argument_list pos:line="33" pos:column="30">(<argument><expr><name pos:line="33" pos:column="31">hostname_g<pos:position pos:line="33" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="43">NULL<pos:position pos:line="33" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="49">&amp;<pos:position pos:line="33" pos:column="54"/></operator><name pos:line="33" pos:column="50">ai_hints<pos:position pos:line="33" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="60">&amp;<pos:position pos:line="33" pos:column="65"/></operator><name pos:line="33" pos:column="61">ai_list<pos:position pos:line="33" pos:column="68"/></name></expr></argument>)<pos:position pos:line="33" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="70"/></expr_stmt>
	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name pos:line="34" pos:column="13">status<pos:position pos:line="34" pos:column="19"/></name> <operator pos:line="34" pos:column="20">!=<pos:position pos:line="34" pos:column="22"/></operator> <literal type="number" pos:line="34" pos:column="23">0<pos:position pos:line="34" pos:column="24"/></literal></expr>)<pos:position pos:line="34" pos:column="25"/></condition><then pos:line="34" pos:column="25">
	<block pos:line="35" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">ERROR<pos:position pos:line="36" pos:column="22"/></name> <argument_list pos:line="36" pos:column="23">(<argument><expr><literal type="string" pos:line="36" pos:column="24">"Looking up \"%s\" failed. You have set the "<pos:position pos:line="36" pos:column="69"/></literal>
				<literal type="string" pos:line="37" pos:column="33">"\"FQDNLookup\" option, but I cannot resolve "<pos:position pos:line="37" pos:column="79"/></literal>
				<literal type="string" pos:line="38" pos:column="33">"my hostname to a fully qualified domain "<pos:position pos:line="38" pos:column="75"/></literal>
				<literal type="string" pos:line="39" pos:column="33">"name. Please fix you network "<pos:position pos:line="39" pos:column="64"/></literal>
				<literal type="string" pos:line="40" pos:column="33">"configuration."<pos:position pos:line="40" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="51">hostname_g<pos:position pos:line="40" pos:column="61"/></name></expr></argument>)<pos:position pos:line="40" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="63"/></expr_stmt>
		<return pos:line="41" pos:column="17">return <expr><operator pos:line="41" pos:column="24">(<pos:position pos:line="41" pos:column="25"/></operator><operator pos:line="41" pos:column="25">-<pos:position pos:line="41" pos:column="26"/></operator><literal type="number" pos:line="41" pos:column="26">1<pos:position pos:line="41" pos:column="27"/></literal><operator pos:line="41" pos:column="27">)<pos:position pos:line="41" pos:column="28"/></operator></expr>;<pos:position pos:line="41" pos:column="29"/></return>
	}<pos:position pos:line="42" pos:column="10"/></block></then></if>

	<for pos:line="44" pos:column="9">for <control pos:line="44" pos:column="13">(<init><expr><name pos:line="44" pos:column="14">ai_ptr<pos:position pos:line="44" pos:column="20"/></name> <operator pos:line="44" pos:column="21">=<pos:position pos:line="44" pos:column="22"/></operator> <name pos:line="44" pos:column="23">ai_list<pos:position pos:line="44" pos:column="30"/></name></expr>;<pos:position pos:line="44" pos:column="31"/></init> <condition><expr><name pos:line="44" pos:column="32">ai_ptr<pos:position pos:line="44" pos:column="38"/></name> <operator pos:line="44" pos:column="39">!=<pos:position pos:line="44" pos:column="41"/></operator> <name pos:line="44" pos:column="42">NULL<pos:position pos:line="44" pos:column="46"/></name></expr>;<pos:position pos:line="44" pos:column="47"/></condition> <incr><expr><name pos:line="44" pos:column="48">ai_ptr<pos:position pos:line="44" pos:column="54"/></name> <operator pos:line="44" pos:column="55">=<pos:position pos:line="44" pos:column="56"/></operator> <name><name pos:line="44" pos:column="57">ai_ptr<pos:position pos:line="44" pos:column="63"/></name><operator pos:line="44" pos:column="63">-&gt;<pos:position pos:line="44" pos:column="68"/></operator><name pos:line="44" pos:column="65">ai_next<pos:position pos:line="44" pos:column="72"/></name></name></expr></incr>)<pos:position pos:line="44" pos:column="73"/></control>
	<block pos:line="45" pos:column="9">{
		<if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><name><name pos:line="46" pos:column="21">ai_ptr<pos:position pos:line="46" pos:column="27"/></name><operator pos:line="46" pos:column="27">-&gt;<pos:position pos:line="46" pos:column="32"/></operator><name pos:line="46" pos:column="29">ai_canonname<pos:position pos:line="46" pos:column="41"/></name></name> <operator pos:line="46" pos:column="42">==<pos:position pos:line="46" pos:column="44"/></operator> <name pos:line="46" pos:column="45">NULL<pos:position pos:line="46" pos:column="49"/></name></expr>)<pos:position pos:line="46" pos:column="50"/></condition><then pos:line="46" pos:column="50">
			<block type="pseudo"><continue pos:line="47" pos:column="25">continue;<pos:position pos:line="47" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><call><name pos:line="49" pos:column="17">sstrncpy<pos:position pos:line="49" pos:column="25"/></name> <argument_list pos:line="49" pos:column="26">(<argument><expr><name pos:line="49" pos:column="27">hostname_g<pos:position pos:line="49" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="39">ai_ptr<pos:position pos:line="49" pos:column="45"/></name><operator pos:line="49" pos:column="45">-&gt;<pos:position pos:line="49" pos:column="50"/></operator><name pos:line="49" pos:column="47">ai_canonname<pos:position pos:line="49" pos:column="59"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="49" pos:column="61">sizeof <argument_list pos:line="49" pos:column="68">(<argument><expr><name pos:line="49" pos:column="69">hostname_g<pos:position pos:line="49" pos:column="79"/></name></expr></argument>)<pos:position pos:line="49" pos:column="80"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="49" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="82"/></expr_stmt>
		<break pos:line="50" pos:column="17">break;<pos:position pos:line="50" pos:column="23"/></break>
	}<pos:position pos:line="51" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="53" pos:column="9">freeaddrinfo<pos:position pos:line="53" pos:column="21"/></name> <argument_list pos:line="53" pos:column="22">(<argument><expr><name pos:line="53" pos:column="23">ai_list<pos:position pos:line="53" pos:column="30"/></name></expr></argument>)<pos:position pos:line="53" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="32"/></expr_stmt>
	<return pos:line="54" pos:column="9">return <expr><operator pos:line="54" pos:column="16">(<pos:position pos:line="54" pos:column="17"/></operator><literal type="number" pos:line="54" pos:column="17">0<pos:position pos:line="54" pos:column="18"/></literal><operator pos:line="54" pos:column="18">)<pos:position pos:line="54" pos:column="19"/></operator></expr>;<pos:position pos:line="54" pos:column="20"/></return>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1937_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">match_simple_free<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">void<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">data<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list> <block pos:line="1" pos:column="43">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">cu_match_value_t<pos:position pos:line="2" pos:column="19"/></name> <modifier pos:line="2" pos:column="20">*<pos:position pos:line="2" pos:column="21"/></modifier></type><name pos:line="2" pos:column="21">user_data<pos:position pos:line="2" pos:column="30"/></name> <init pos:line="2" pos:column="31">= <expr><operator pos:line="2" pos:column="33">(<pos:position pos:line="2" pos:column="34"/></operator><name pos:line="2" pos:column="34">cu_match_value_t<pos:position pos:line="2" pos:column="50"/></name> <operator pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></operator><operator pos:line="2" pos:column="52">)<pos:position pos:line="2" pos:column="53"/></operator><name pos:line="2" pos:column="53">data<pos:position pos:line="2" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="2" pos:column="58"/></decl_stmt>
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><name><name pos:line="3" pos:column="7">user_data<pos:position pos:line="3" pos:column="16"/></name><operator pos:line="3" pos:column="16">-&gt;<pos:position pos:line="3" pos:column="21"/></operator><name pos:line="3" pos:column="18">latency<pos:position pos:line="3" pos:column="25"/></name></name></expr>)<pos:position pos:line="3" pos:column="26"/></condition><then pos:line="3" pos:column="26">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="4" pos:column="5">latency_counter_destroy<pos:position pos:line="4" pos:column="28"/></name><argument_list pos:line="4" pos:column="28">(<argument><expr><name><name pos:line="4" pos:column="29">user_data<pos:position pos:line="4" pos:column="38"/></name><operator pos:line="4" pos:column="38">-&gt;<pos:position pos:line="4" pos:column="43"/></operator><name pos:line="4" pos:column="40">latency<pos:position pos:line="4" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="49"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">free<pos:position pos:line="6" pos:column="7"/></name><argument_list pos:line="6" pos:column="7">(<argument><expr><name pos:line="6" pos:column="8">data<pos:position pos:line="6" pos:column="12"/></name></expr></argument>)<pos:position pos:line="6" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="14"/></expr_stmt>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

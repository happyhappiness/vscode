<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2374_collectd-5.6.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">ssnprintf<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name pos:line="1" pos:column="15">char<pos:position pos:line="1" pos:column="19"/></name> <modifier pos:line="1" pos:column="20">*<pos:position pos:line="1" pos:column="21"/></modifier></type><name pos:line="1" pos:column="21">dest<pos:position pos:line="1" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="27">size_t<pos:position pos:line="1" pos:column="33"/></name></type> <name pos:line="1" pos:column="34">n<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="37">const<pos:position pos:line="1" pos:column="42"/></specifier> <name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">format<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><modifier pos:line="1" pos:column="57">...<pos:position pos:line="1" pos:column="60"/></modifier></type></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list> <block pos:line="1" pos:column="62">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">ret<pos:position pos:line="2" pos:column="10"/></name> <init pos:line="2" pos:column="11">= <expr><literal type="number" pos:line="2" pos:column="13">0<pos:position pos:line="2" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="2" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">va_list<pos:position pos:line="3" pos:column="10"/></name></type> <name pos:line="3" pos:column="11">ap<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="5" pos:column="3">va_start<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><name pos:line="5" pos:column="12">ap<pos:position pos:line="5" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="16">format<pos:position pos:line="5" pos:column="22"/></name></expr></argument>)<pos:position pos:line="5" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name pos:line="6" pos:column="3">ret<pos:position pos:line="6" pos:column="6"/></name> <operator pos:line="6" pos:column="7">=<pos:position pos:line="6" pos:column="8"/></operator> <call><name pos:line="6" pos:column="9">vsnprintf<pos:position pos:line="6" pos:column="18"/></name><argument_list pos:line="6" pos:column="18">(<argument><expr><name pos:line="6" pos:column="19">dest<pos:position pos:line="6" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="25">n<pos:position pos:line="6" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="28">format<pos:position pos:line="6" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="36">ap<pos:position pos:line="6" pos:column="38"/></name></expr></argument>)<pos:position pos:line="6" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="7" pos:column="3">dest<pos:position pos:line="7" pos:column="7"/></name><index pos:line="7" pos:column="7">[<expr><name pos:line="7" pos:column="8">n<pos:position pos:line="7" pos:column="9"/></name> <operator pos:line="7" pos:column="10">-<pos:position pos:line="7" pos:column="11"/></operator> <literal type="number" pos:line="7" pos:column="12">1<pos:position pos:line="7" pos:column="13"/></literal></expr>]<pos:position pos:line="7" pos:column="14"/></index></name> <operator pos:line="7" pos:column="15">=<pos:position pos:line="7" pos:column="16"/></operator> <literal type="char" pos:line="7" pos:column="17">'\0'<pos:position pos:line="7" pos:column="21"/></literal></expr>;<pos:position pos:line="7" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">va_end<pos:position pos:line="8" pos:column="9"/></name><argument_list pos:line="8" pos:column="9">(<argument><expr><name pos:line="8" pos:column="10">ap<pos:position pos:line="8" pos:column="12"/></name></expr></argument>)<pos:position pos:line="8" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="14"/></expr_stmt>

  <return pos:line="10" pos:column="3">return <expr><operator pos:line="10" pos:column="10">(<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="11">ret<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">)<pos:position pos:line="10" pos:column="15"/></operator></expr>;<pos:position pos:line="10" pos:column="16"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_585_collectd-4.3.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">pidfile_remove<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">void<pos:position pos:line="1" pos:column="32"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">file<pos:position pos:line="3" pos:column="25"/></name> <init pos:line="3" pos:column="26">= <expr><call><name pos:line="3" pos:column="28">global_option_get<pos:position pos:line="3" pos:column="45"/></name> <argument_list pos:line="3" pos:column="46">(<argument><expr><literal type="string" pos:line="3" pos:column="47">"PIDFile"<pos:position pos:line="3" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="58"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="5" pos:column="9">DEBUG<pos:position pos:line="5" pos:column="14"/></name> <argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="string" pos:line="5" pos:column="16">"unlink (%s)"<pos:position pos:line="5" pos:column="29"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="5" pos:column="31">(<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="32">file<pos:position pos:line="5" pos:column="36"/></name> <operator pos:line="5" pos:column="37">!=<pos:position pos:line="5" pos:column="39"/></operator> <name pos:line="5" pos:column="40">NULL<pos:position pos:line="5" pos:column="44"/></name><operator pos:line="5" pos:column="44">)<pos:position pos:line="5" pos:column="45"/></operator></expr> ?<pos:position pos:line="5" pos:column="47"/></condition><then pos:line="5" pos:column="47"> <expr><name pos:line="5" pos:column="48">file<pos:position pos:line="5" pos:column="52"/></name></expr> <pos:position pos:line="5" pos:column="53"/></then><else pos:line="5" pos:column="53">: <expr><literal type="string" pos:line="5" pos:column="55">"&lt;null&gt;"<pos:position pos:line="5" pos:column="69"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="5" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="65"/></expr_stmt>
	<return pos:line="6" pos:column="9">return <expr><operator pos:line="6" pos:column="16">(<pos:position pos:line="6" pos:column="17"/></operator><call><name pos:line="6" pos:column="17">unlink<pos:position pos:line="6" pos:column="23"/></name> <argument_list pos:line="6" pos:column="24">(<argument><expr><name pos:line="6" pos:column="25">file<pos:position pos:line="6" pos:column="29"/></name></expr></argument>)<pos:position pos:line="6" pos:column="30"/></argument_list></call><operator pos:line="6" pos:column="30">)<pos:position pos:line="6" pos:column="31"/></operator></expr>;<pos:position pos:line="6" pos:column="32"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1015_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">g_interval_get<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">pTHX_<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">SV<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">var<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">MAGIC<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">mg<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list> <block pos:line="1" pos:column="53">{
  <expr_stmt><expr><call><name pos:line="2" pos:column="3">log_warn<pos:position pos:line="2" pos:column="11"/></name><argument_list pos:line="2" pos:column="11">(<argument><expr><literal type="string" pos:line="2" pos:column="12">"Accessing $interval_g is deprecated (and might not "<pos:position pos:line="2" pos:column="65"/></literal>
           <literal type="string" pos:line="3" pos:column="12">"give the desired results) - plugin_get_interval() should "<pos:position pos:line="3" pos:column="71"/></literal>
           <literal type="string" pos:line="4" pos:column="12">"be used instead."<pos:position pos:line="4" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="5" pos:column="3">sv_setnv<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><name pos:line="5" pos:column="12">var<pos:position pos:line="5" pos:column="15"/></name></expr></argument>, <argument><expr><call><name pos:line="5" pos:column="17">CDTIME_T_TO_DOUBLE<pos:position pos:line="5" pos:column="35"/></name><argument_list pos:line="5" pos:column="35">(<argument><expr><name pos:line="5" pos:column="36">interval_g<pos:position pos:line="5" pos:column="46"/></name></expr></argument>)<pos:position pos:line="5" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="49"/></expr_stmt>
  <return pos:line="6" pos:column="3">return <expr><literal type="number" pos:line="6" pos:column="10">0<pos:position pos:line="6" pos:column="11"/></literal></expr>;<pos:position pos:line="6" pos:column="12"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1126_collectd-4.5.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ping_receive_one<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">int<pos:position pos:line="1" pos:column="33"/></name></type> <name pos:line="1" pos:column="34">fd<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">pinghost_t<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">ph<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="54">struct<pos:position pos:line="1" pos:column="60"/></name> <name pos:line="1" pos:column="61">timeval<pos:position pos:line="1" pos:column="68"/></name></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">now<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name></type>   <name><name pos:line="3" pos:column="16">buffer<pos:position pos:line="3" pos:column="22"/></name><index pos:line="3" pos:column="22">[<expr><literal type="number" pos:line="3" pos:column="23">4096<pos:position pos:line="3" pos:column="27"/></literal></expr>]<pos:position pos:line="3" pos:column="28"/></index></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">size_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">buffer_len<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">timeval<pos:position pos:line="6" pos:column="23"/></name></name></type> <name pos:line="6" pos:column="24">diff<pos:position pos:line="6" pos:column="28"/></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="8" pos:column="9">pinghost_t<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">host<pos:position pos:line="8" pos:column="25"/></name> <init pos:line="8" pos:column="26">= <expr><name pos:line="8" pos:column="28">NULL<pos:position pos:line="8" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">sockaddr_storage<pos:position pos:line="10" pos:column="32"/></name></name></type> <name pos:line="10" pos:column="33">sa<pos:position pos:line="10" pos:column="35"/></name></decl>;<pos:position pos:line="10" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">socklen_t<pos:position pos:line="11" pos:column="18"/></name></type>               <name pos:line="11" pos:column="33">sa_len<pos:position pos:line="11" pos:column="39"/></name></decl>;<pos:position pos:line="11" pos:column="40"/></decl_stmt>

	<expr_stmt><expr><name pos:line="13" pos:column="9">sa_len<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <sizeof pos:line="13" pos:column="18">sizeof <argument_list pos:line="13" pos:column="25">(<argument><expr><name pos:line="13" pos:column="26">sa<pos:position pos:line="13" pos:column="28"/></name></expr></argument>)<pos:position pos:line="13" pos:column="29"/></argument_list></sizeof></expr>;<pos:position pos:line="13" pos:column="30"/></expr_stmt>

	<expr_stmt><expr><name pos:line="15" pos:column="9">buffer_len<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">=<pos:position pos:line="15" pos:column="21"/></operator> <call><name pos:line="15" pos:column="22">recvfrom<pos:position pos:line="15" pos:column="30"/></name> <argument_list pos:line="15" pos:column="31">(<argument><expr><name pos:line="15" pos:column="32">fd<pos:position pos:line="15" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="36">buffer<pos:position pos:line="15" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="44">sizeof <argument_list pos:line="15" pos:column="51">(<argument><expr><name pos:line="15" pos:column="52">buffer<pos:position pos:line="15" pos:column="58"/></name></expr></argument>)<pos:position pos:line="15" pos:column="59"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="61">0<pos:position pos:line="15" pos:column="62"/></literal></expr></argument>,
			<argument><expr><operator pos:line="16" pos:column="25">(<pos:position pos:line="16" pos:column="26"/></operator>struct <name pos:line="16" pos:column="33">sockaddr<pos:position pos:line="16" pos:column="41"/></name> <operator pos:line="16" pos:column="42">*<pos:position pos:line="16" pos:column="43"/></operator><operator pos:line="16" pos:column="43">)<pos:position pos:line="16" pos:column="44"/></operator> <operator pos:line="16" pos:column="45">&amp;<pos:position pos:line="16" pos:column="50"/></operator><name pos:line="16" pos:column="46">sa<pos:position pos:line="16" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="50">&amp;<pos:position pos:line="16" pos:column="55"/></operator><name pos:line="16" pos:column="51">sa_len<pos:position pos:line="16" pos:column="57"/></name></expr></argument>)<pos:position pos:line="16" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="59"/></expr_stmt>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">buffer_len<pos:position pos:line="17" pos:column="23"/></name> <operator pos:line="17" pos:column="24">==<pos:position pos:line="17" pos:column="26"/></operator> <operator pos:line="17" pos:column="27">-<pos:position pos:line="17" pos:column="28"/></operator><literal type="number" pos:line="17" pos:column="28">1<pos:position pos:line="17" pos:column="29"/></literal></expr>)<pos:position pos:line="17" pos:column="30"/></condition><then pos:line="17" pos:column="30">
	<block pos:line="18" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">dprintf<pos:position pos:line="19" pos:column="24"/></name> <argument_list pos:line="19" pos:column="25">(<argument><expr><literal type="string" pos:line="19" pos:column="26">"recvfrom: %s\n"<pos:position pos:line="19" pos:column="42"/></literal></expr></argument>, <argument><expr><call><name pos:line="19" pos:column="44">strerror<pos:position pos:line="19" pos:column="52"/></name> <argument_list pos:line="19" pos:column="53">(<argument><expr><name pos:line="19" pos:column="54">errno<pos:position pos:line="19" pos:column="59"/></name></expr></argument>)<pos:position pos:line="19" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="62"/></expr_stmt>
		<return pos:line="20" pos:column="17">return <expr><operator pos:line="20" pos:column="24">(<pos:position pos:line="20" pos:column="25"/></operator><operator pos:line="20" pos:column="25">-<pos:position pos:line="20" pos:column="26"/></operator><literal type="number" pos:line="20" pos:column="26">1<pos:position pos:line="20" pos:column="27"/></literal><operator pos:line="20" pos:column="27">)<pos:position pos:line="20" pos:column="28"/></operator></expr>;<pos:position pos:line="20" pos:column="29"/></return>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="23" pos:column="9">dprintf<pos:position pos:line="23" pos:column="16"/></name> <argument_list pos:line="23" pos:column="17">(<argument><expr><literal type="string" pos:line="23" pos:column="18">"Read %u bytes from fd = %i\n"<pos:position pos:line="23" pos:column="48"/></literal></expr></argument>, <argument><expr><operator pos:line="23" pos:column="50">(<pos:position pos:line="23" pos:column="51"/></operator><name pos:line="23" pos:column="51">unsigned<pos:position pos:line="23" pos:column="59"/></name> <name pos:line="23" pos:column="60">int<pos:position pos:line="23" pos:column="63"/></name><operator pos:line="23" pos:column="63">)<pos:position pos:line="23" pos:column="64"/></operator> <name pos:line="23" pos:column="65">buffer_len<pos:position pos:line="23" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="77">fd<pos:position pos:line="23" pos:column="79"/></name></expr></argument>)<pos:position pos:line="23" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="81"/></expr_stmt>

	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name><name pos:line="25" pos:column="13">sa<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">.<pos:position pos:line="25" pos:column="16"/></operator><name pos:line="25" pos:column="16">ss_family<pos:position pos:line="25" pos:column="25"/></name></name> <operator pos:line="25" pos:column="26">==<pos:position pos:line="25" pos:column="28"/></operator> <name pos:line="25" pos:column="29">AF_INET<pos:position pos:line="25" pos:column="36"/></name></expr>)<pos:position pos:line="25" pos:column="37"/></condition><then pos:line="25" pos:column="37">
	<block pos:line="26" pos:column="9">{
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><operator pos:line="27" pos:column="21">(<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="22">host<pos:position pos:line="27" pos:column="26"/></name> <operator pos:line="27" pos:column="27">=<pos:position pos:line="27" pos:column="28"/></operator> <call><name pos:line="27" pos:column="29">ping_receive_ipv4<pos:position pos:line="27" pos:column="46"/></name> <argument_list pos:line="27" pos:column="47">(<argument><expr><name pos:line="27" pos:column="48">ph<pos:position pos:line="27" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="52">buffer<pos:position pos:line="27" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="60">buffer_len<pos:position pos:line="27" pos:column="70"/></name></expr></argument>)<pos:position pos:line="27" pos:column="71"/></argument_list></call><operator pos:line="27" pos:column="71">)<pos:position pos:line="27" pos:column="72"/></operator> <operator pos:line="27" pos:column="73">==<pos:position pos:line="27" pos:column="75"/></operator> <name pos:line="27" pos:column="76">NULL<pos:position pos:line="27" pos:column="80"/></name></expr>)<pos:position pos:line="27" pos:column="81"/></condition><then pos:line="27" pos:column="81">
			<block type="pseudo"><return pos:line="28" pos:column="25">return <expr><operator pos:line="28" pos:column="32">(<pos:position pos:line="28" pos:column="33"/></operator><operator pos:line="28" pos:column="33">-<pos:position pos:line="28" pos:column="34"/></operator><literal type="number" pos:line="28" pos:column="34">1<pos:position pos:line="28" pos:column="35"/></literal><operator pos:line="28" pos:column="35">)<pos:position pos:line="28" pos:column="36"/></operator></expr>;<pos:position pos:line="28" pos:column="37"/></return></block></then></if>
	}<pos:position pos:line="29" pos:column="10"/></block></then>
	<elseif pos:line="30" pos:column="9">else <if pos:line="30" pos:column="14">if <condition pos:line="30" pos:column="17">(<expr><name><name pos:line="30" pos:column="18">sa<pos:position pos:line="30" pos:column="20"/></name><operator pos:line="30" pos:column="20">.<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="21">ss_family<pos:position pos:line="30" pos:column="30"/></name></name> <operator pos:line="30" pos:column="31">==<pos:position pos:line="30" pos:column="33"/></operator> <name pos:line="30" pos:column="34">AF_INET6<pos:position pos:line="30" pos:column="42"/></name></expr>)<pos:position pos:line="30" pos:column="43"/></condition><then pos:line="30" pos:column="43">
	<block pos:line="31" pos:column="9">{
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><operator pos:line="32" pos:column="21">(<pos:position pos:line="32" pos:column="22"/></operator><name pos:line="32" pos:column="22">host<pos:position pos:line="32" pos:column="26"/></name> <operator pos:line="32" pos:column="27">=<pos:position pos:line="32" pos:column="28"/></operator> <call><name pos:line="32" pos:column="29">ping_receive_ipv6<pos:position pos:line="32" pos:column="46"/></name> <argument_list pos:line="32" pos:column="47">(<argument><expr><name pos:line="32" pos:column="48">ph<pos:position pos:line="32" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="52">buffer<pos:position pos:line="32" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="60">buffer_len<pos:position pos:line="32" pos:column="70"/></name></expr></argument>)<pos:position pos:line="32" pos:column="71"/></argument_list></call><operator pos:line="32" pos:column="71">)<pos:position pos:line="32" pos:column="72"/></operator> <operator pos:line="32" pos:column="73">==<pos:position pos:line="32" pos:column="75"/></operator> <name pos:line="32" pos:column="76">NULL<pos:position pos:line="32" pos:column="80"/></name></expr>)<pos:position pos:line="32" pos:column="81"/></condition><then pos:line="32" pos:column="81">
			<block type="pseudo"><return pos:line="33" pos:column="25">return <expr><operator pos:line="33" pos:column="32">(<pos:position pos:line="33" pos:column="33"/></operator><operator pos:line="33" pos:column="33">-<pos:position pos:line="33" pos:column="34"/></operator><literal type="number" pos:line="33" pos:column="34">1<pos:position pos:line="33" pos:column="35"/></literal><operator pos:line="33" pos:column="35">)<pos:position pos:line="33" pos:column="36"/></operator></expr>;<pos:position pos:line="33" pos:column="37"/></return></block></then></if>
	}<pos:position pos:line="34" pos:column="10"/></block></then></if></elseif></if>

	<expr_stmt><expr><call><name pos:line="36" pos:column="9">dprintf<pos:position pos:line="36" pos:column="16"/></name> <argument_list pos:line="36" pos:column="17">(<argument><expr><literal type="string" pos:line="36" pos:column="18">"rcvd: %12i.%06i\n"<pos:position pos:line="36" pos:column="37"/></literal></expr></argument>,
			<argument><expr><operator pos:line="37" pos:column="25">(<pos:position pos:line="37" pos:column="26"/></operator><name pos:line="37" pos:column="26">int<pos:position pos:line="37" pos:column="29"/></name><operator pos:line="37" pos:column="29">)<pos:position pos:line="37" pos:column="30"/></operator> <name><name pos:line="37" pos:column="31">now<pos:position pos:line="37" pos:column="34"/></name><operator pos:line="37" pos:column="34">-&gt;<pos:position pos:line="37" pos:column="39"/></operator><name pos:line="37" pos:column="36">tv_sec<pos:position pos:line="37" pos:column="42"/></name></name></expr></argument>,
			<argument><expr><operator pos:line="38" pos:column="25">(<pos:position pos:line="38" pos:column="26"/></operator><name pos:line="38" pos:column="26">int<pos:position pos:line="38" pos:column="29"/></name><operator pos:line="38" pos:column="29">)<pos:position pos:line="38" pos:column="30"/></operator> <name><name pos:line="38" pos:column="31">now<pos:position pos:line="38" pos:column="34"/></name><operator pos:line="38" pos:column="34">-&gt;<pos:position pos:line="38" pos:column="39"/></operator><name pos:line="38" pos:column="36">tv_usec<pos:position pos:line="38" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="39" pos:column="9">dprintf<pos:position pos:line="39" pos:column="16"/></name> <argument_list pos:line="39" pos:column="17">(<argument><expr><literal type="string" pos:line="39" pos:column="18">"sent: %12i.%06i\n"<pos:position pos:line="39" pos:column="37"/></literal></expr></argument>,
			<argument><expr><operator pos:line="40" pos:column="25">(<pos:position pos:line="40" pos:column="26"/></operator><name pos:line="40" pos:column="26">int<pos:position pos:line="40" pos:column="29"/></name><operator pos:line="40" pos:column="29">)<pos:position pos:line="40" pos:column="30"/></operator> <name><name pos:line="40" pos:column="31">host<pos:position pos:line="40" pos:column="35"/></name><operator pos:line="40" pos:column="35">-&gt;<pos:position pos:line="40" pos:column="40"/></operator><name pos:line="40" pos:column="37">timer<pos:position pos:line="40" pos:column="42"/></name><operator pos:line="40" pos:column="42">-&gt;<pos:position pos:line="40" pos:column="47"/></operator><name pos:line="40" pos:column="44">tv_sec<pos:position pos:line="40" pos:column="50"/></name></name></expr></argument>,
			<argument><expr><operator pos:line="41" pos:column="25">(<pos:position pos:line="41" pos:column="26"/></operator><name pos:line="41" pos:column="26">int<pos:position pos:line="41" pos:column="29"/></name><operator pos:line="41" pos:column="29">)<pos:position pos:line="41" pos:column="30"/></operator> <name><name pos:line="41" pos:column="31">host<pos:position pos:line="41" pos:column="35"/></name><operator pos:line="41" pos:column="35">-&gt;<pos:position pos:line="41" pos:column="40"/></operator><name pos:line="41" pos:column="37">timer<pos:position pos:line="41" pos:column="42"/></name><operator pos:line="41" pos:column="42">-&gt;<pos:position pos:line="41" pos:column="47"/></operator><name pos:line="41" pos:column="44">tv_usec<pos:position pos:line="41" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="53"/></expr_stmt>

	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><call><name pos:line="43" pos:column="13">ping_timeval_sub<pos:position pos:line="43" pos:column="29"/></name> <argument_list pos:line="43" pos:column="30">(<argument><expr><name pos:line="43" pos:column="31">now<pos:position pos:line="43" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="36">host<pos:position pos:line="43" pos:column="40"/></name><operator pos:line="43" pos:column="40">-&gt;<pos:position pos:line="43" pos:column="45"/></operator><name pos:line="43" pos:column="42">timer<pos:position pos:line="43" pos:column="47"/></name></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="49">&amp;<pos:position pos:line="43" pos:column="54"/></operator><name pos:line="43" pos:column="50">diff<pos:position pos:line="43" pos:column="54"/></name></expr></argument>)<pos:position pos:line="43" pos:column="55"/></argument_list></call> <operator pos:line="43" pos:column="56">&lt;<pos:position pos:line="43" pos:column="60"/></operator> <literal type="number" pos:line="43" pos:column="58">0<pos:position pos:line="43" pos:column="59"/></literal></expr>)<pos:position pos:line="43" pos:column="60"/></condition><then pos:line="43" pos:column="60">
	<block pos:line="44" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="45" pos:column="17">timerclear<pos:position pos:line="45" pos:column="27"/></name> <argument_list pos:line="45" pos:column="28">(<argument><expr><name><name pos:line="45" pos:column="29">host<pos:position pos:line="45" pos:column="33"/></name><operator pos:line="45" pos:column="33">-&gt;<pos:position pos:line="45" pos:column="38"/></operator><name pos:line="45" pos:column="35">timer<pos:position pos:line="45" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="42"/></expr_stmt>
		<return pos:line="46" pos:column="17">return <expr><operator pos:line="46" pos:column="24">(<pos:position pos:line="46" pos:column="25"/></operator><operator pos:line="46" pos:column="25">-<pos:position pos:line="46" pos:column="26"/></operator><literal type="number" pos:line="46" pos:column="26">1<pos:position pos:line="46" pos:column="27"/></literal><operator pos:line="46" pos:column="27">)<pos:position pos:line="46" pos:column="28"/></operator></expr>;<pos:position pos:line="46" pos:column="29"/></return>
	}<pos:position pos:line="47" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="49" pos:column="9">dprintf<pos:position pos:line="49" pos:column="16"/></name> <argument_list pos:line="49" pos:column="17">(<argument><expr><literal type="string" pos:line="49" pos:column="18">"diff: %12i.%06i\n"<pos:position pos:line="49" pos:column="37"/></literal></expr></argument>,
			<argument><expr><operator pos:line="50" pos:column="25">(<pos:position pos:line="50" pos:column="26"/></operator><name pos:line="50" pos:column="26">int<pos:position pos:line="50" pos:column="29"/></name><operator pos:line="50" pos:column="29">)<pos:position pos:line="50" pos:column="30"/></operator> <name><name pos:line="50" pos:column="31">diff<pos:position pos:line="50" pos:column="35"/></name><operator pos:line="50" pos:column="35">.<pos:position pos:line="50" pos:column="36"/></operator><name pos:line="50" pos:column="36">tv_sec<pos:position pos:line="50" pos:column="42"/></name></name></expr></argument>,
			<argument><expr><operator pos:line="51" pos:column="25">(<pos:position pos:line="51" pos:column="26"/></operator><name pos:line="51" pos:column="26">int<pos:position pos:line="51" pos:column="29"/></name><operator pos:line="51" pos:column="29">)<pos:position pos:line="51" pos:column="30"/></operator> <name><name pos:line="51" pos:column="31">diff<pos:position pos:line="51" pos:column="35"/></name><operator pos:line="51" pos:column="35">.<pos:position pos:line="51" pos:column="36"/></operator><name pos:line="51" pos:column="36">tv_usec<pos:position pos:line="51" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="45"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="53" pos:column="9">host<pos:position pos:line="53" pos:column="13"/></name><operator pos:line="53" pos:column="13">-&gt;<pos:position pos:line="53" pos:column="18"/></operator><name pos:line="53" pos:column="15">latency<pos:position pos:line="53" pos:column="22"/></name></name>  <operator pos:line="53" pos:column="24">=<pos:position pos:line="53" pos:column="25"/></operator> <operator pos:line="53" pos:column="26">(<pos:position pos:line="53" pos:column="27"/></operator><operator pos:line="53" pos:column="27">(<pos:position pos:line="53" pos:column="28"/></operator><name pos:line="53" pos:column="28">double<pos:position pos:line="53" pos:column="34"/></name><operator pos:line="53" pos:column="34">)<pos:position pos:line="53" pos:column="35"/></operator> <name><name pos:line="53" pos:column="36">diff<pos:position pos:line="53" pos:column="40"/></name><operator pos:line="53" pos:column="40">.<pos:position pos:line="53" pos:column="41"/></operator><name pos:line="53" pos:column="41">tv_usec<pos:position pos:line="53" pos:column="48"/></name></name><operator pos:line="53" pos:column="48">)<pos:position pos:line="53" pos:column="49"/></operator> <operator pos:line="53" pos:column="50">/<pos:position pos:line="53" pos:column="51"/></operator> <literal type="number" pos:line="53" pos:column="52">1000.0<pos:position pos:line="53" pos:column="58"/></literal></expr>;<pos:position pos:line="53" pos:column="59"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="54" pos:column="9">host<pos:position pos:line="54" pos:column="13"/></name><operator pos:line="54" pos:column="13">-&gt;<pos:position pos:line="54" pos:column="18"/></operator><name pos:line="54" pos:column="15">latency<pos:position pos:line="54" pos:column="22"/></name></name> <operator pos:line="54" pos:column="23">+=<pos:position pos:line="54" pos:column="25"/></operator> <operator pos:line="54" pos:column="26">(<pos:position pos:line="54" pos:column="27"/></operator><operator pos:line="54" pos:column="27">(<pos:position pos:line="54" pos:column="28"/></operator><name pos:line="54" pos:column="28">double<pos:position pos:line="54" pos:column="34"/></name><operator pos:line="54" pos:column="34">)<pos:position pos:line="54" pos:column="35"/></operator> <name><name pos:line="54" pos:column="36">diff<pos:position pos:line="54" pos:column="40"/></name><operator pos:line="54" pos:column="40">.<pos:position pos:line="54" pos:column="41"/></operator><name pos:line="54" pos:column="41">tv_sec<pos:position pos:line="54" pos:column="47"/></name></name><operator pos:line="54" pos:column="47">)<pos:position pos:line="54" pos:column="48"/></operator>  <operator pos:line="54" pos:column="50">*<pos:position pos:line="54" pos:column="51"/></operator> <literal type="number" pos:line="54" pos:column="52">1000.0<pos:position pos:line="54" pos:column="58"/></literal></expr>;<pos:position pos:line="54" pos:column="59"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="56" pos:column="9">timerclear<pos:position pos:line="56" pos:column="19"/></name> <argument_list pos:line="56" pos:column="20">(<argument><expr><name><name pos:line="56" pos:column="21">host<pos:position pos:line="56" pos:column="25"/></name><operator pos:line="56" pos:column="25">-&gt;<pos:position pos:line="56" pos:column="30"/></operator><name pos:line="56" pos:column="27">timer<pos:position pos:line="56" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="34"/></expr_stmt>

	<return pos:line="58" pos:column="9">return <expr><operator pos:line="58" pos:column="16">(<pos:position pos:line="58" pos:column="17"/></operator><literal type="number" pos:line="58" pos:column="17">0<pos:position pos:line="58" pos:column="18"/></literal><operator pos:line="58" pos:column="18">)<pos:position pos:line="58" pos:column="19"/></operator></expr>;<pos:position pos:line="58" pos:column="20"/></return>
}<pos:position pos:line="59" pos:column="2"/></block></function></unit>

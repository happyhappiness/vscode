<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1341_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">grpc<pos:position pos:line="1" pos:column="12"/></name><operator pos:line="1" pos:column="12">::<pos:position pos:line="1" pos:column="14"/></operator><name pos:line="1" pos:column="14">string<pos:position pos:line="1" pos:column="20"/></name></name></type> <name pos:line="1" pos:column="21">read_file<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">filename<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">std<pos:position pos:line="3" pos:column="12"/></name><operator pos:line="3" pos:column="12">::<pos:position pos:line="3" pos:column="14"/></operator><name pos:line="3" pos:column="14">ifstream<pos:position pos:line="3" pos:column="22"/></name></name></type> <name pos:line="3" pos:column="23">f<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">grpc<pos:position pos:line="4" pos:column="13"/></name><operator pos:line="4" pos:column="13">::<pos:position pos:line="4" pos:column="15"/></operator><name pos:line="4" pos:column="15">string<pos:position pos:line="4" pos:column="21"/></name></name></type> <name pos:line="4" pos:column="22">s<pos:position pos:line="4" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="25">content<pos:position pos:line="4" pos:column="32"/></name></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>

	<expr_stmt><expr><call><name><name pos:line="6" pos:column="9">f<pos:position pos:line="6" pos:column="10"/></name><operator pos:line="6" pos:column="10">.<pos:position pos:line="6" pos:column="11"/></operator><name pos:line="6" pos:column="11">open<pos:position pos:line="6" pos:column="15"/></name></name><argument_list pos:line="6" pos:column="15">(<argument><expr><name pos:line="6" pos:column="16">filename<pos:position pos:line="6" pos:column="24"/></name></expr></argument>)<pos:position pos:line="6" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="26"/></expr_stmt>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><call><name><name pos:line="7" pos:column="14">f<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">.<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="16">is_open<pos:position pos:line="7" pos:column="23"/></name></name><argument_list pos:line="7" pos:column="23">()<pos:position pos:line="7" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="26"/></condition><then pos:line="7" pos:column="26"> <block pos:line="7" pos:column="27">{
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">ERROR<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><literal type="string" pos:line="8" pos:column="23">"grpc: Failed to open '%s'"<pos:position pos:line="8" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="52">filename<pos:position pos:line="8" pos:column="60"/></name></expr></argument>)<pos:position pos:line="8" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="62"/></expr_stmt>
		<return pos:line="9" pos:column="17">return <expr><literal type="string" pos:line="9" pos:column="24">""<pos:position pos:line="9" pos:column="26"/></literal></expr>;<pos:position pos:line="9" pos:column="27"/></return>
	}<pos:position pos:line="10" pos:column="10"/></block></then></if>

	<while pos:line="12" pos:column="9">while <condition pos:line="12" pos:column="15">(<expr><call><name><name pos:line="12" pos:column="16">std<pos:position pos:line="12" pos:column="19"/></name><operator pos:line="12" pos:column="19">::<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="21">getline<pos:position pos:line="12" pos:column="28"/></name></name><argument_list pos:line="12" pos:column="28">(<argument><expr><name pos:line="12" pos:column="29">f<pos:position pos:line="12" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="32">s<pos:position pos:line="12" pos:column="33"/></name></expr></argument>)<pos:position pos:line="12" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="35"/></condition> <block pos:line="12" pos:column="36">{
		<expr_stmt><expr><name pos:line="13" pos:column="17">content<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">+=<pos:position pos:line="13" pos:column="27"/></operator> <name pos:line="13" pos:column="28">s<pos:position pos:line="13" pos:column="29"/></name></expr>;<pos:position pos:line="13" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="14" pos:column="17">content<pos:position pos:line="14" pos:column="24"/></name><operator pos:line="14" pos:column="24">.<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="25">push_back<pos:position pos:line="14" pos:column="34"/></name></name><argument_list pos:line="14" pos:column="34">(<argument><expr><literal type="char" pos:line="14" pos:column="35">'\n'<pos:position pos:line="14" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="15" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name><name pos:line="16" pos:column="9">f<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">.<pos:position pos:line="16" pos:column="11"/></operator><name pos:line="16" pos:column="11">close<pos:position pos:line="16" pos:column="16"/></name></name><argument_list pos:line="16" pos:column="16">()<pos:position pos:line="16" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="19"/></expr_stmt>
	<return pos:line="17" pos:column="9">return <expr><name pos:line="17" pos:column="16">content<pos:position pos:line="17" pos:column="23"/></name></expr>;<pos:position pos:line="17" pos:column="24"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

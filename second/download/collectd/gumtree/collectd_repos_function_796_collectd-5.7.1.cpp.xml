<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_796_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">handle_null<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">u_char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">pkt<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">int<pos:position pos:line="1" pos:column="46"/></name></type> <name pos:line="1" pos:column="47">len<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list> <block pos:line="1" pos:column="52">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">unsigned<pos:position pos:line="2" pos:column="11"/></name> <name pos:line="2" pos:column="12">int<pos:position pos:line="2" pos:column="15"/></name></type> <name pos:line="2" pos:column="16">family<pos:position pos:line="2" pos:column="22"/></name></decl>;<pos:position pos:line="2" pos:column="23"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="3" pos:column="3">memcpy<pos:position pos:line="3" pos:column="9"/></name><argument_list pos:line="3" pos:column="9">(<argument><expr><operator pos:line="3" pos:column="10">&amp;<pos:position pos:line="3" pos:column="15"/></operator><name pos:line="3" pos:column="11">family<pos:position pos:line="3" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="19">pkt<pos:position pos:line="3" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="3" pos:column="24">sizeof<argument_list pos:line="3" pos:column="30">(<argument><expr><name pos:line="3" pos:column="31">family<pos:position pos:line="3" pos:column="37"/></name></expr></argument>)<pos:position pos:line="3" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="3" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="40"/></expr_stmt>
  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><name pos:line="4" pos:column="7">AF_INET<pos:position pos:line="4" pos:column="14"/></name> <operator pos:line="4" pos:column="15">!=<pos:position pos:line="4" pos:column="17"/></operator> <name pos:line="4" pos:column="18">family<pos:position pos:line="4" pos:column="24"/></name></expr>)<pos:position pos:line="4" pos:column="25"/></condition><then pos:line="4" pos:column="25">
    <block type="pseudo"><return pos:line="5" pos:column="5">return <expr><literal type="number" pos:line="5" pos:column="12">0<pos:position pos:line="5" pos:column="13"/></literal></expr>;<pos:position pos:line="5" pos:column="14"/></return></block></then></if>
  <return pos:line="6" pos:column="3">return <expr><call><name pos:line="6" pos:column="10">handle_ip<pos:position pos:line="6" pos:column="19"/></name><argument_list pos:line="6" pos:column="19">(<argument><expr><operator pos:line="6" pos:column="20">(<pos:position pos:line="6" pos:column="21"/></operator>struct <name pos:line="6" pos:column="28">ip<pos:position pos:line="6" pos:column="30"/></name> <operator pos:line="6" pos:column="31">*<pos:position pos:line="6" pos:column="32"/></operator><operator pos:line="6" pos:column="32">)<pos:position pos:line="6" pos:column="33"/></operator><operator pos:line="6" pos:column="33">(<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="34">pkt<pos:position pos:line="6" pos:column="37"/></name> <operator pos:line="6" pos:column="38">+<pos:position pos:line="6" pos:column="39"/></operator> <literal type="number" pos:line="6" pos:column="40">4<pos:position pos:line="6" pos:column="41"/></literal><operator pos:line="6" pos:column="41">)<pos:position pos:line="6" pos:column="42"/></operator></expr></argument>, <argument><expr><name pos:line="6" pos:column="44">len<pos:position pos:line="6" pos:column="47"/></name> <operator pos:line="6" pos:column="48">-<pos:position pos:line="6" pos:column="49"/></operator> <literal type="number" pos:line="6" pos:column="50">4<pos:position pos:line="6" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="53"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

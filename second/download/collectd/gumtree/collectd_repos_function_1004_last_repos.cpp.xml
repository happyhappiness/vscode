<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1004_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">_plugin_register_generic_userdata<pos:position pos:line="1" pos:column="46"/></name><parameter_list pos:line="1" pos:column="46">(<parameter><decl><type><name pos:line="1" pos:column="47">pTHX<pos:position pos:line="1" pos:column="51"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">int<pos:position pos:line="1" pos:column="56"/></name></type> <name pos:line="1" pos:column="57">type<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
                                              <parameter><decl><type><specifier pos:line="2" pos:column="47">const<pos:position pos:line="2" pos:column="52"/></specifier> <name pos:line="2" pos:column="53">char<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">desc<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="64"/></parameter_list> <block pos:line="2" pos:column="65">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">ret<pos:position pos:line="3" pos:column="10"/></name> <init pos:line="3" pos:column="11">= <expr><literal type="number" pos:line="3" pos:column="13">0<pos:position pos:line="3" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">user_data_t<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">userdata<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">pluginname<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">dXSARGS<pos:position pos:line="7" pos:column="10"/></name></expr>;<pos:position pos:line="7" pos:column="11"/></expr_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><literal type="number" pos:line="9" pos:column="7">2<pos:position pos:line="9" pos:column="8"/></literal> <operator pos:line="9" pos:column="9">!=<pos:position pos:line="9" pos:column="11"/></operator> <name pos:line="9" pos:column="12">items<pos:position pos:line="9" pos:column="17"/></name></expr>)<pos:position pos:line="9" pos:column="18"/></condition><then pos:line="9" pos:column="18"> <block pos:line="9" pos:column="19">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">log_err<pos:position pos:line="10" pos:column="12"/></name><argument_list pos:line="10" pos:column="12">(<argument><expr><literal type="string" pos:line="10" pos:column="13">"Usage: Collectd::plugin_register_%s(pluginname, subname)"<pos:position pos:line="10" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="73">desc<pos:position pos:line="10" pos:column="77"/></name></expr></argument>)<pos:position pos:line="10" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="79"/></expr_stmt>
    <expr_stmt><expr><name pos:line="11" pos:column="5">XSRETURN_EMPTY<pos:position pos:line="11" pos:column="19"/></name></expr>;<pos:position pos:line="11" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>

  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><operator pos:line="14" pos:column="7">!<pos:position pos:line="14" pos:column="8"/></operator><call><name pos:line="14" pos:column="8">SvOK<pos:position pos:line="14" pos:column="12"/></name><argument_list pos:line="14" pos:column="12">(<argument><expr><call><name pos:line="14" pos:column="13">ST<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><literal type="number" pos:line="14" pos:column="16">0<pos:position pos:line="14" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="18"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="19"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="20"/></condition><then pos:line="14" pos:column="20"> <block pos:line="14" pos:column="21">{
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">log_err<pos:position pos:line="15" pos:column="12"/></name><argument_list pos:line="15" pos:column="12">(<argument><expr><literal type="string" pos:line="15" pos:column="13">"Collectd::plugin_register_%s(pluginname, subname): "<pos:position pos:line="15" pos:column="66"/></literal>
            <literal type="string" pos:line="16" pos:column="13">"Invalid pluginname"<pos:position pos:line="16" pos:column="33"/></literal></expr></argument>,
            <argument><expr><name pos:line="17" pos:column="13">desc<pos:position pos:line="17" pos:column="17"/></name></expr></argument>)<pos:position pos:line="17" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="18" pos:column="5">XSRETURN_EMPTY<pos:position pos:line="18" pos:column="19"/></name></expr>;<pos:position pos:line="18" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>
  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><operator pos:line="20" pos:column="7">!<pos:position pos:line="20" pos:column="8"/></operator><call><name pos:line="20" pos:column="8">SvOK<pos:position pos:line="20" pos:column="12"/></name><argument_list pos:line="20" pos:column="12">(<argument><expr><call><name pos:line="20" pos:column="13">ST<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><literal type="number" pos:line="20" pos:column="16">1<pos:position pos:line="20" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="18"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="19"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="20"/></condition><then pos:line="20" pos:column="20"> <block pos:line="20" pos:column="21">{
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">log_err<pos:position pos:line="21" pos:column="12"/></name><argument_list pos:line="21" pos:column="12">(<argument><expr><literal type="string" pos:line="21" pos:column="13">"Collectd::plugin_register_%s(pluginname, subname): "<pos:position pos:line="21" pos:column="66"/></literal>
            <literal type="string" pos:line="22" pos:column="13">"Invalid subname"<pos:position pos:line="22" pos:column="30"/></literal></expr></argument>,
            <argument><expr><name pos:line="23" pos:column="13">desc<pos:position pos:line="23" pos:column="17"/></name></expr></argument>)<pos:position pos:line="23" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="24" pos:column="5">XSRETURN_EMPTY<pos:position pos:line="24" pos:column="19"/></name></expr>;<pos:position pos:line="24" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="27" pos:column="3">/* Use pluginname as-is to allow flush a single perl plugin */</comment>
  <expr_stmt><expr><name pos:line="28" pos:column="3">pluginname<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">=<pos:position pos:line="28" pos:column="15"/></operator> <call><name pos:line="28" pos:column="16">SvPV_nolen<pos:position pos:line="28" pos:column="26"/></name><argument_list pos:line="28" pos:column="26">(<argument><expr><call><name pos:line="28" pos:column="27">ST<pos:position pos:line="28" pos:column="29"/></name><argument_list pos:line="28" pos:column="29">(<argument><expr><literal type="number" pos:line="28" pos:column="30">0<pos:position pos:line="28" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="32"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="34"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="30" pos:column="3">log_debug<pos:position pos:line="30" pos:column="12"/></name><argument_list pos:line="30" pos:column="12">(<argument><expr><literal type="string" pos:line="30" pos:column="13">"Collectd::plugin_register_%s: "<pos:position pos:line="30" pos:column="45"/></literal>
            <literal type="string" pos:line="31" pos:column="13">"plugin = \"%s\", sub = \"%s\""<pos:position pos:line="31" pos:column="44"/></literal></expr></argument>,
            <argument><expr><name pos:line="32" pos:column="13">desc<pos:position pos:line="32" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="19">pluginname<pos:position pos:line="32" pos:column="29"/></name></expr></argument>, <argument><expr><call><name pos:line="32" pos:column="31">SvPV_nolen<pos:position pos:line="32" pos:column="41"/></name><argument_list pos:line="32" pos:column="41">(<argument><expr><call><name pos:line="32" pos:column="42">ST<pos:position pos:line="32" pos:column="44"/></name><argument_list pos:line="32" pos:column="44">(<argument><expr><literal type="number" pos:line="32" pos:column="45">1<pos:position pos:line="32" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="50"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="34" pos:column="3">memset<pos:position pos:line="34" pos:column="9"/></name><argument_list pos:line="34" pos:column="9">(<argument><expr><operator pos:line="34" pos:column="10">&amp;<pos:position pos:line="34" pos:column="15"/></operator><name pos:line="34" pos:column="11">userdata<pos:position pos:line="34" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="21">0<pos:position pos:line="34" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="34" pos:column="24">sizeof<argument_list pos:line="34" pos:column="30">(<argument><expr><name pos:line="34" pos:column="31">userdata<pos:position pos:line="34" pos:column="39"/></name></expr></argument>)<pos:position pos:line="34" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="34" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="35" pos:column="3">userdata<pos:position pos:line="35" pos:column="11"/></name><operator pos:line="35" pos:column="11">.<pos:position pos:line="35" pos:column="12"/></operator><name pos:line="35" pos:column="12">data<pos:position pos:line="35" pos:column="16"/></name></name> <operator pos:line="35" pos:column="17">=<pos:position pos:line="35" pos:column="18"/></operator> <call><name pos:line="35" pos:column="19">strdup<pos:position pos:line="35" pos:column="25"/></name><argument_list pos:line="35" pos:column="25">(<argument><expr><call><name pos:line="35" pos:column="26">SvPV_nolen<pos:position pos:line="35" pos:column="36"/></name><argument_list pos:line="35" pos:column="36">(<argument><expr><call><name pos:line="35" pos:column="37">ST<pos:position pos:line="35" pos:column="39"/></name><argument_list pos:line="35" pos:column="39">(<argument><expr><literal type="number" pos:line="35" pos:column="40">1<pos:position pos:line="35" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="36" pos:column="3">userdata<pos:position pos:line="36" pos:column="11"/></name><operator pos:line="36" pos:column="11">.<pos:position pos:line="36" pos:column="12"/></operator><name pos:line="36" pos:column="12">free_func<pos:position pos:line="36" pos:column="21"/></name></name> <operator pos:line="36" pos:column="22">=<pos:position pos:line="36" pos:column="23"/></operator> <name pos:line="36" pos:column="24">free<pos:position pos:line="36" pos:column="28"/></name></expr>;<pos:position pos:line="36" pos:column="29"/></expr_stmt>

  <if pos:line="38" pos:column="3">if <condition pos:line="38" pos:column="6">(<expr><name pos:line="38" pos:column="7">PLUGIN_READ<pos:position pos:line="38" pos:column="18"/></name> <operator pos:line="38" pos:column="19">==<pos:position pos:line="38" pos:column="21"/></operator> <name pos:line="38" pos:column="22">type<pos:position pos:line="38" pos:column="26"/></name></expr>)<pos:position pos:line="38" pos:column="27"/></condition><then pos:line="38" pos:column="27"> <block pos:line="38" pos:column="28">{
    <expr_stmt><expr><name pos:line="39" pos:column="5">ret<pos:position pos:line="39" pos:column="8"/></name> <operator pos:line="39" pos:column="9">=<pos:position pos:line="39" pos:column="10"/></operator> <call><name pos:line="39" pos:column="11">plugin_register_complex_read<pos:position pos:line="39" pos:column="39"/></name><argument_list pos:line="39" pos:column="39">(
        <argument><expr><literal type="string" pos:line="40" pos:column="9">"perl"<pos:position pos:line="40" pos:column="15"/></literal></expr></argument>,                                       <comment type="block" pos:line="40" pos:column="55">/* group */</comment>
        <argument><expr><name pos:line="41" pos:column="9">pluginname<pos:position pos:line="41" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="21">perl_read<pos:position pos:line="41" pos:column="30"/></name></expr></argument>, <argument><expr><call><name pos:line="41" pos:column="32">plugin_get_interval<pos:position pos:line="41" pos:column="51"/></name><argument_list pos:line="41" pos:column="51">()<pos:position pos:line="41" pos:column="53"/></argument_list></call></expr></argument>, <comment type="block" pos:line="41" pos:column="55">/* Default interval */</comment>
        <argument><expr><operator pos:line="42" pos:column="9">&amp;<pos:position pos:line="42" pos:column="14"/></operator><name pos:line="42" pos:column="10">userdata<pos:position pos:line="42" pos:column="18"/></name></expr></argument>)<pos:position pos:line="42" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="43" pos:column="4"/></block></then> <elseif pos:line="43" pos:column="5">else <if pos:line="43" pos:column="10">if <condition pos:line="43" pos:column="13">(<expr><name pos:line="43" pos:column="14">PLUGIN_WRITE<pos:position pos:line="43" pos:column="26"/></name> <operator pos:line="43" pos:column="27">==<pos:position pos:line="43" pos:column="29"/></operator> <name pos:line="43" pos:column="30">type<pos:position pos:line="43" pos:column="34"/></name></expr>)<pos:position pos:line="43" pos:column="35"/></condition><then pos:line="43" pos:column="35"> <block pos:line="43" pos:column="36">{
    <expr_stmt><expr><name pos:line="44" pos:column="5">ret<pos:position pos:line="44" pos:column="8"/></name> <operator pos:line="44" pos:column="9">=<pos:position pos:line="44" pos:column="10"/></operator> <call><name pos:line="44" pos:column="11">plugin_register_write<pos:position pos:line="44" pos:column="32"/></name><argument_list pos:line="44" pos:column="32">(<argument><expr><name pos:line="44" pos:column="33">pluginname<pos:position pos:line="44" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="45">perl_write<pos:position pos:line="44" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="57">&amp;<pos:position pos:line="44" pos:column="62"/></operator><name pos:line="44" pos:column="58">userdata<pos:position pos:line="44" pos:column="66"/></name></expr></argument>)<pos:position pos:line="44" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="68"/></expr_stmt>
  }<pos:position pos:line="45" pos:column="4"/></block></then></if></elseif> <elseif pos:line="45" pos:column="5">else <if pos:line="45" pos:column="10">if <condition pos:line="45" pos:column="13">(<expr><name pos:line="45" pos:column="14">PLUGIN_LOG<pos:position pos:line="45" pos:column="24"/></name> <operator pos:line="45" pos:column="25">==<pos:position pos:line="45" pos:column="27"/></operator> <name pos:line="45" pos:column="28">type<pos:position pos:line="45" pos:column="32"/></name></expr>)<pos:position pos:line="45" pos:column="33"/></condition><then pos:line="45" pos:column="33"> <block pos:line="45" pos:column="34">{
    <expr_stmt><expr><name pos:line="46" pos:column="5">ret<pos:position pos:line="46" pos:column="8"/></name> <operator pos:line="46" pos:column="9">=<pos:position pos:line="46" pos:column="10"/></operator> <call><name pos:line="46" pos:column="11">plugin_register_log<pos:position pos:line="46" pos:column="30"/></name><argument_list pos:line="46" pos:column="30">(<argument><expr><name pos:line="46" pos:column="31">pluginname<pos:position pos:line="46" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="43">perl_log<pos:position pos:line="46" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="53">&amp;<pos:position pos:line="46" pos:column="58"/></operator><name pos:line="46" pos:column="54">userdata<pos:position pos:line="46" pos:column="62"/></name></expr></argument>)<pos:position pos:line="46" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="64"/></expr_stmt>
  }<pos:position pos:line="47" pos:column="4"/></block></then></if></elseif> <elseif pos:line="47" pos:column="5">else <if pos:line="47" pos:column="10">if <condition pos:line="47" pos:column="13">(<expr><name pos:line="47" pos:column="14">PLUGIN_NOTIF<pos:position pos:line="47" pos:column="26"/></name> <operator pos:line="47" pos:column="27">==<pos:position pos:line="47" pos:column="29"/></operator> <name pos:line="47" pos:column="30">type<pos:position pos:line="47" pos:column="34"/></name></expr>)<pos:position pos:line="47" pos:column="35"/></condition><then pos:line="47" pos:column="35"> <block pos:line="47" pos:column="36">{
    <expr_stmt><expr><name pos:line="48" pos:column="5">ret<pos:position pos:line="48" pos:column="8"/></name> <operator pos:line="48" pos:column="9">=<pos:position pos:line="48" pos:column="10"/></operator> <call><name pos:line="48" pos:column="11">plugin_register_notification<pos:position pos:line="48" pos:column="39"/></name><argument_list pos:line="48" pos:column="39">(<argument><expr><name pos:line="48" pos:column="40">pluginname<pos:position pos:line="48" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="52">perl_notify<pos:position pos:line="48" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="65">&amp;<pos:position pos:line="48" pos:column="70"/></operator><name pos:line="48" pos:column="66">userdata<pos:position pos:line="48" pos:column="74"/></name></expr></argument>)<pos:position pos:line="48" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="76"/></expr_stmt>
  }<pos:position pos:line="49" pos:column="4"/></block></then></if></elseif> <elseif pos:line="49" pos:column="5">else <if pos:line="49" pos:column="10">if <condition pos:line="49" pos:column="13">(<expr><name pos:line="49" pos:column="14">PLUGIN_FLUSH<pos:position pos:line="49" pos:column="26"/></name> <operator pos:line="49" pos:column="27">==<pos:position pos:line="49" pos:column="29"/></operator> <name pos:line="49" pos:column="30">type<pos:position pos:line="49" pos:column="34"/></name></expr>)<pos:position pos:line="49" pos:column="35"/></condition><then pos:line="49" pos:column="35"> <block pos:line="49" pos:column="36">{
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><literal type="number" pos:line="50" pos:column="9">1<pos:position pos:line="50" pos:column="10"/></literal> <operator pos:line="50" pos:column="11">==<pos:position pos:line="50" pos:column="13"/></operator> <name pos:line="50" pos:column="14">register_legacy_flush<pos:position pos:line="50" pos:column="35"/></name></expr>)<pos:position pos:line="50" pos:column="36"/></condition><then pos:line="50" pos:column="36"> <block pos:line="50" pos:column="37">{ <comment type="block" pos:line="50" pos:column="39">/* For collectd-5.7 only, #1731 */</comment>
      <expr_stmt><expr><name pos:line="51" pos:column="7">register_legacy_flush<pos:position pos:line="51" pos:column="28"/></name> <operator pos:line="51" pos:column="29">=<pos:position pos:line="51" pos:column="30"/></operator> <literal type="number" pos:line="51" pos:column="31">0<pos:position pos:line="51" pos:column="32"/></literal></expr>;<pos:position pos:line="51" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><name pos:line="52" pos:column="7">ret<pos:position pos:line="52" pos:column="10"/></name> <operator pos:line="52" pos:column="11">=<pos:position pos:line="52" pos:column="12"/></operator> <call><name pos:line="52" pos:column="13">plugin_register_flush<pos:position pos:line="52" pos:column="34"/></name><argument_list pos:line="52" pos:column="34">(<argument><expr><literal type="string" pos:line="52" pos:column="35">"perl"<pos:position pos:line="52" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="52" pos:column="43">perl_flush<pos:position pos:line="52" pos:column="53"/></name></expr></argument>, <comment type="block" pos:line="52" pos:column="55">/* user_data = */</comment> <argument><expr><name pos:line="52" pos:column="73">NULL<pos:position pos:line="52" pos:column="77"/></name></expr></argument>)<pos:position pos:line="52" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="79"/></expr_stmt>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>

    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><literal type="number" pos:line="55" pos:column="9">0<pos:position pos:line="55" pos:column="10"/></literal> <operator pos:line="55" pos:column="11">==<pos:position pos:line="55" pos:column="13"/></operator> <name pos:line="55" pos:column="14">ret<pos:position pos:line="55" pos:column="17"/></name></expr>)<pos:position pos:line="55" pos:column="18"/></condition><then pos:line="55" pos:column="18"> <block pos:line="55" pos:column="19">{
      <expr_stmt><expr><name pos:line="56" pos:column="7">ret<pos:position pos:line="56" pos:column="10"/></name> <operator pos:line="56" pos:column="11">=<pos:position pos:line="56" pos:column="12"/></operator> <call><name pos:line="56" pos:column="13">plugin_register_flush<pos:position pos:line="56" pos:column="34"/></name><argument_list pos:line="56" pos:column="34">(<argument><expr><name pos:line="56" pos:column="35">pluginname<pos:position pos:line="56" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="47">perl_flush<pos:position pos:line="56" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="59">&amp;<pos:position pos:line="56" pos:column="64"/></operator><name pos:line="56" pos:column="60">userdata<pos:position pos:line="56" pos:column="68"/></name></expr></argument>)<pos:position pos:line="56" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="70"/></expr_stmt>
    }<pos:position pos:line="57" pos:column="6"/></block></then> <else pos:line="57" pos:column="7">else <block pos:line="57" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="58" pos:column="7">free<pos:position pos:line="58" pos:column="11"/></name><argument_list pos:line="58" pos:column="11">(<argument><expr><name><name pos:line="58" pos:column="12">userdata<pos:position pos:line="58" pos:column="20"/></name><operator pos:line="58" pos:column="20">.<pos:position pos:line="58" pos:column="21"/></operator><name pos:line="58" pos:column="21">data<pos:position pos:line="58" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="59" pos:column="6"/></block></else></if>
  }<pos:position pos:line="60" pos:column="4"/></block></then></if></elseif> <else pos:line="60" pos:column="5">else <block pos:line="60" pos:column="10">{
    <expr_stmt><expr><name pos:line="61" pos:column="5">ret<pos:position pos:line="61" pos:column="8"/></name> <operator pos:line="61" pos:column="9">=<pos:position pos:line="61" pos:column="10"/></operator> <operator pos:line="61" pos:column="11">-<pos:position pos:line="61" pos:column="12"/></operator><literal type="number" pos:line="61" pos:column="12">1<pos:position pos:line="61" pos:column="13"/></literal></expr>;<pos:position pos:line="61" pos:column="14"/></expr_stmt>
  }<pos:position pos:line="62" pos:column="4"/></block></else></if>

  <if pos:line="64" pos:column="3">if <condition pos:line="64" pos:column="6">(<expr><literal type="number" pos:line="64" pos:column="7">0<pos:position pos:line="64" pos:column="8"/></literal> <operator pos:line="64" pos:column="9">==<pos:position pos:line="64" pos:column="11"/></operator> <name pos:line="64" pos:column="12">ret<pos:position pos:line="64" pos:column="15"/></name></expr>)<pos:position pos:line="64" pos:column="16"/></condition><then pos:line="64" pos:column="16">
    <block type="pseudo"><expr_stmt><expr><name pos:line="65" pos:column="5">XSRETURN_YES<pos:position pos:line="65" pos:column="17"/></name></expr>;<pos:position pos:line="65" pos:column="18"/></expr_stmt></block></then>
  <else pos:line="66" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="67" pos:column="5">XSRETURN_EMPTY<pos:position pos:line="67" pos:column="19"/></name></expr>;<pos:position pos:line="67" pos:column="20"/></expr_stmt></block></else></if>
}<pos:position pos:line="68" pos:column="2"/></block></function></unit>

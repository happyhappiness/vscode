<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1930_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">network_set_ttl<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">sockent_t<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">se<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier> <name><name pos:line="1" pos:column="55">struct<pos:position pos:line="1" pos:column="61"/></name> <name pos:line="1" pos:column="62">addrinfo<pos:position pos:line="1" pos:column="70"/></name></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">ai<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list> <block pos:line="1" pos:column="76">{
  <expr_stmt><expr><call><name pos:line="2" pos:column="3">DEBUG<pos:position pos:line="2" pos:column="8"/></name><argument_list pos:line="2" pos:column="8">(<argument><expr><literal type="string" pos:line="2" pos:column="9">"network plugin: network_set_ttl: network_config_ttl = %i;"<pos:position pos:line="2" pos:column="68"/></literal></expr></argument>,
        <argument><expr><name pos:line="3" pos:column="9">network_config_ttl<pos:position pos:line="3" pos:column="27"/></name></expr></argument>)<pos:position pos:line="3" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="29"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="5" pos:column="3">assert<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">(<argument><expr><name><name pos:line="5" pos:column="10">se<pos:position pos:line="5" pos:column="12"/></name><operator pos:line="5" pos:column="12">-&gt;<pos:position pos:line="5" pos:column="17"/></operator><name pos:line="5" pos:column="14">type<pos:position pos:line="5" pos:column="18"/></name></name> <operator pos:line="5" pos:column="19">==<pos:position pos:line="5" pos:column="21"/></operator> <name pos:line="5" pos:column="22">SOCKENT_TYPE_CLIENT<pos:position pos:line="5" pos:column="41"/></name></expr></argument>)<pos:position pos:line="5" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="43"/></expr_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><operator pos:line="7" pos:column="7">(<pos:position pos:line="7" pos:column="8"/></operator><name pos:line="7" pos:column="8">network_config_ttl<pos:position pos:line="7" pos:column="26"/></name> <operator pos:line="7" pos:column="27">&lt;<pos:position pos:line="7" pos:column="31"/></operator> <literal type="number" pos:line="7" pos:column="29">1<pos:position pos:line="7" pos:column="30"/></literal><operator pos:line="7" pos:column="30">)<pos:position pos:line="7" pos:column="31"/></operator> <operator pos:line="7" pos:column="32">||<pos:position pos:line="7" pos:column="34"/></operator> <operator pos:line="7" pos:column="35">(<pos:position pos:line="7" pos:column="36"/></operator><name pos:line="7" pos:column="36">network_config_ttl<pos:position pos:line="7" pos:column="54"/></name> <operator pos:line="7" pos:column="55">&gt;<pos:position pos:line="7" pos:column="59"/></operator> <literal type="number" pos:line="7" pos:column="57">255<pos:position pos:line="7" pos:column="60"/></literal><operator pos:line="7" pos:column="60">)<pos:position pos:line="7" pos:column="61"/></operator></expr>)<pos:position pos:line="7" pos:column="62"/></condition><then pos:line="7" pos:column="62">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><operator pos:line="8" pos:column="13">-<pos:position pos:line="8" pos:column="14"/></operator><literal type="number" pos:line="8" pos:column="14">1<pos:position pos:line="8" pos:column="15"/></literal><operator pos:line="8" pos:column="15">)<pos:position pos:line="8" pos:column="16"/></operator></expr>;<pos:position pos:line="8" pos:column="17"/></return></block></then></if>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name><name pos:line="10" pos:column="7">ai<pos:position pos:line="10" pos:column="9"/></name><operator pos:line="10" pos:column="9">-&gt;<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="11">ai_family<pos:position pos:line="10" pos:column="20"/></name></name> <operator pos:line="10" pos:column="21">==<pos:position pos:line="10" pos:column="23"/></operator> <name pos:line="10" pos:column="24">AF_INET<pos:position pos:line="10" pos:column="31"/></name></expr>)<pos:position pos:line="10" pos:column="32"/></condition><then pos:line="10" pos:column="32"> <block pos:line="10" pos:column="33">{
    <decl_stmt><decl><type><name><name pos:line="11" pos:column="5">struct<pos:position pos:line="11" pos:column="11"/></name> <name pos:line="11" pos:column="12">sockaddr_in<pos:position pos:line="11" pos:column="23"/></name></name> <modifier pos:line="11" pos:column="24">*<pos:position pos:line="11" pos:column="25"/></modifier></type><name pos:line="11" pos:column="25">addr<pos:position pos:line="11" pos:column="29"/></name> <init pos:line="11" pos:column="30">= <expr><operator pos:line="11" pos:column="32">(<pos:position pos:line="11" pos:column="33"/></operator>struct <name pos:line="11" pos:column="40">sockaddr_in<pos:position pos:line="11" pos:column="51"/></name> <operator pos:line="11" pos:column="52">*<pos:position pos:line="11" pos:column="53"/></operator><operator pos:line="11" pos:column="53">)<pos:position pos:line="11" pos:column="54"/></operator><name><name pos:line="11" pos:column="54">ai<pos:position pos:line="11" pos:column="56"/></name><operator pos:line="11" pos:column="56">-&gt;<pos:position pos:line="11" pos:column="61"/></operator><name pos:line="11" pos:column="58">ai_addr<pos:position pos:line="11" pos:column="65"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="66"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">optname<pos:position pos:line="12" pos:column="16"/></name></decl>;<pos:position pos:line="12" pos:column="17"/></decl_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><call><name pos:line="14" pos:column="9">IN_MULTICAST<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><call><name pos:line="14" pos:column="22">ntohl<pos:position pos:line="14" pos:column="27"/></name><argument_list pos:line="14" pos:column="27">(<argument><expr><name><name pos:line="14" pos:column="28">addr<pos:position pos:line="14" pos:column="32"/></name><operator pos:line="14" pos:column="32">-&gt;<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="34">sin_addr<pos:position pos:line="14" pos:column="42"/></name><operator pos:line="14" pos:column="42">.<pos:position pos:line="14" pos:column="43"/></operator><name pos:line="14" pos:column="43">s_addr<pos:position pos:line="14" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="52"/></condition><then pos:line="14" pos:column="52">
      <block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="7">optname<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">=<pos:position pos:line="15" pos:column="16"/></operator> <name pos:line="15" pos:column="17">IP_MULTICAST_TTL<pos:position pos:line="15" pos:column="33"/></name></expr>;<pos:position pos:line="15" pos:column="34"/></expr_stmt></block></then>
    <else pos:line="16" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="7">optname<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">=<pos:position pos:line="17" pos:column="16"/></operator> <name pos:line="17" pos:column="17">IP_TTL<pos:position pos:line="17" pos:column="23"/></name></expr>;<pos:position pos:line="17" pos:column="24"/></expr_stmt></block></else></if>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><call><name pos:line="19" pos:column="9">setsockopt<pos:position pos:line="19" pos:column="19"/></name><argument_list pos:line="19" pos:column="19">(<argument><expr><name><name pos:line="19" pos:column="20">se<pos:position pos:line="19" pos:column="22"/></name><operator pos:line="19" pos:column="22">-&gt;<pos:position pos:line="19" pos:column="27"/></operator><name pos:line="19" pos:column="24">data<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">.<pos:position pos:line="19" pos:column="29"/></operator><name pos:line="19" pos:column="29">client<pos:position pos:line="19" pos:column="35"/></name><operator pos:line="19" pos:column="35">.<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="36">fd<pos:position pos:line="19" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="40">IPPROTO_IP<pos:position pos:line="19" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="52">optname<pos:position pos:line="19" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="61">&amp;<pos:position pos:line="19" pos:column="66"/></operator><name pos:line="19" pos:column="62">network_config_ttl<pos:position pos:line="19" pos:column="80"/></name></expr></argument>,
                   <argument><expr><sizeof pos:line="20" pos:column="20">sizeof<argument_list pos:line="20" pos:column="26">(<argument><expr><name pos:line="20" pos:column="27">network_config_ttl<pos:position pos:line="20" pos:column="45"/></name></expr></argument>)<pos:position pos:line="20" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="47"/></argument_list></call> <operator pos:line="20" pos:column="48">!=<pos:position pos:line="20" pos:column="50"/></operator> <literal type="number" pos:line="20" pos:column="51">0<pos:position pos:line="20" pos:column="52"/></literal></expr>)<pos:position pos:line="20" pos:column="53"/></condition><then pos:line="20" pos:column="53"> <block pos:line="20" pos:column="54">{
      <decl_stmt><decl><type><name pos:line="21" pos:column="7">char<pos:position pos:line="21" pos:column="11"/></name></type> <name><name pos:line="21" pos:column="12">errbuf<pos:position pos:line="21" pos:column="18"/></name><index pos:line="21" pos:column="18">[<expr><literal type="number" pos:line="21" pos:column="19">1024<pos:position pos:line="21" pos:column="23"/></literal></expr>]<pos:position pos:line="21" pos:column="24"/></index></name></decl>;<pos:position pos:line="21" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="22" pos:column="7">ERROR<pos:position pos:line="22" pos:column="12"/></name><argument_list pos:line="22" pos:column="12">(<argument><expr><literal type="string" pos:line="22" pos:column="13">"network plugin: setsockopt (ipv4-ttl): %s"<pos:position pos:line="22" pos:column="56"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="23" pos:column="13">sstrerror<pos:position pos:line="23" pos:column="22"/></name><argument_list pos:line="23" pos:column="22">(<argument><expr><name pos:line="23" pos:column="23">errno<pos:position pos:line="23" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="30">errbuf<pos:position pos:line="23" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="38">sizeof<argument_list pos:line="23" pos:column="44">(<argument><expr><name pos:line="23" pos:column="45">errbuf<pos:position pos:line="23" pos:column="51"/></name></expr></argument>)<pos:position pos:line="23" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="55"/></expr_stmt>
      <return pos:line="24" pos:column="7">return <expr><operator pos:line="24" pos:column="14">(<pos:position pos:line="24" pos:column="15"/></operator><operator pos:line="24" pos:column="15">-<pos:position pos:line="24" pos:column="16"/></operator><literal type="number" pos:line="24" pos:column="16">1<pos:position pos:line="24" pos:column="17"/></literal><operator pos:line="24" pos:column="17">)<pos:position pos:line="24" pos:column="18"/></operator></expr>;<pos:position pos:line="24" pos:column="19"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>
  }<pos:position pos:line="26" pos:column="4"/></block></then> <elseif pos:line="26" pos:column="5">else <if pos:line="26" pos:column="10">if <condition pos:line="26" pos:column="13">(<expr><name><name pos:line="26" pos:column="14">ai<pos:position pos:line="26" pos:column="16"/></name><operator pos:line="26" pos:column="16">-&gt;<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="18">ai_family<pos:position pos:line="26" pos:column="27"/></name></name> <operator pos:line="26" pos:column="28">==<pos:position pos:line="26" pos:column="30"/></operator> <name pos:line="26" pos:column="31">AF_INET6<pos:position pos:line="26" pos:column="39"/></name></expr>)<pos:position pos:line="26" pos:column="40"/></condition><then pos:line="26" pos:column="40"> <block pos:line="26" pos:column="41">{
    <comment type="block" pos:line="27" pos:column="5">/* Useful example:
     * http://gsyc.escet.urjc.es/~eva/IPv6-web/examples/mcast.html */</comment>
    <decl_stmt><decl><type><name><name pos:line="29" pos:column="5">struct<pos:position pos:line="29" pos:column="11"/></name> <name pos:line="29" pos:column="12">sockaddr_in6<pos:position pos:line="29" pos:column="24"/></name></name> <modifier pos:line="29" pos:column="25">*<pos:position pos:line="29" pos:column="26"/></modifier></type><name pos:line="29" pos:column="26">addr<pos:position pos:line="29" pos:column="30"/></name> <init pos:line="29" pos:column="31">= <expr><operator pos:line="29" pos:column="33">(<pos:position pos:line="29" pos:column="34"/></operator>struct <name pos:line="29" pos:column="41">sockaddr_in6<pos:position pos:line="29" pos:column="53"/></name> <operator pos:line="29" pos:column="54">*<pos:position pos:line="29" pos:column="55"/></operator><operator pos:line="29" pos:column="55">)<pos:position pos:line="29" pos:column="56"/></operator><name><name pos:line="29" pos:column="56">ai<pos:position pos:line="29" pos:column="58"/></name><operator pos:line="29" pos:column="58">-&gt;<pos:position pos:line="29" pos:column="63"/></operator><name pos:line="29" pos:column="60">ai_addr<pos:position pos:line="29" pos:column="67"/></name></name></expr></init></decl>;<pos:position pos:line="29" pos:column="68"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="30" pos:column="5">int<pos:position pos:line="30" pos:column="8"/></name></type> <name pos:line="30" pos:column="9">optname<pos:position pos:line="30" pos:column="16"/></name></decl>;<pos:position pos:line="30" pos:column="17"/></decl_stmt>

    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><call><name pos:line="32" pos:column="9">IN6_IS_ADDR_MULTICAST<pos:position pos:line="32" pos:column="30"/></name><argument_list pos:line="32" pos:column="30">(<argument><expr><operator pos:line="32" pos:column="31">&amp;<pos:position pos:line="32" pos:column="36"/></operator><name><name pos:line="32" pos:column="32">addr<pos:position pos:line="32" pos:column="36"/></name><operator pos:line="32" pos:column="36">-&gt;<pos:position pos:line="32" pos:column="41"/></operator><name pos:line="32" pos:column="38">sin6_addr<pos:position pos:line="32" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="49"/></condition><then pos:line="32" pos:column="49">
      <block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="7">optname<pos:position pos:line="33" pos:column="14"/></name> <operator pos:line="33" pos:column="15">=<pos:position pos:line="33" pos:column="16"/></operator> <name pos:line="33" pos:column="17">IPV6_MULTICAST_HOPS<pos:position pos:line="33" pos:column="36"/></name></expr>;<pos:position pos:line="33" pos:column="37"/></expr_stmt></block></then>
    <else pos:line="34" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="7">optname<pos:position pos:line="35" pos:column="14"/></name> <operator pos:line="35" pos:column="15">=<pos:position pos:line="35" pos:column="16"/></operator> <name pos:line="35" pos:column="17">IPV6_UNICAST_HOPS<pos:position pos:line="35" pos:column="34"/></name></expr>;<pos:position pos:line="35" pos:column="35"/></expr_stmt></block></else></if>

    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><call><name pos:line="37" pos:column="9">setsockopt<pos:position pos:line="37" pos:column="19"/></name><argument_list pos:line="37" pos:column="19">(<argument><expr><name><name pos:line="37" pos:column="20">se<pos:position pos:line="37" pos:column="22"/></name><operator pos:line="37" pos:column="22">-&gt;<pos:position pos:line="37" pos:column="27"/></operator><name pos:line="37" pos:column="24">data<pos:position pos:line="37" pos:column="28"/></name><operator pos:line="37" pos:column="28">.<pos:position pos:line="37" pos:column="29"/></operator><name pos:line="37" pos:column="29">client<pos:position pos:line="37" pos:column="35"/></name><operator pos:line="37" pos:column="35">.<pos:position pos:line="37" pos:column="36"/></operator><name pos:line="37" pos:column="36">fd<pos:position pos:line="37" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="40">IPPROTO_IPV6<pos:position pos:line="37" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="54">optname<pos:position pos:line="37" pos:column="61"/></name></expr></argument>,
                   <argument><expr><operator pos:line="38" pos:column="20">&amp;<pos:position pos:line="38" pos:column="25"/></operator><name pos:line="38" pos:column="21">network_config_ttl<pos:position pos:line="38" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="41">sizeof<argument_list pos:line="38" pos:column="47">(<argument><expr><name pos:line="38" pos:column="48">network_config_ttl<pos:position pos:line="38" pos:column="66"/></name></expr></argument>)<pos:position pos:line="38" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="38" pos:column="68"/></argument_list></call> <operator pos:line="38" pos:column="69">!=<pos:position pos:line="38" pos:column="71"/></operator> <literal type="number" pos:line="38" pos:column="72">0<pos:position pos:line="38" pos:column="73"/></literal></expr>)<pos:position pos:line="38" pos:column="74"/></condition><then pos:line="38" pos:column="74"> <block pos:line="38" pos:column="75">{
      <decl_stmt><decl><type><name pos:line="39" pos:column="7">char<pos:position pos:line="39" pos:column="11"/></name></type> <name><name pos:line="39" pos:column="12">errbuf<pos:position pos:line="39" pos:column="18"/></name><index pos:line="39" pos:column="18">[<expr><literal type="number" pos:line="39" pos:column="19">1024<pos:position pos:line="39" pos:column="23"/></literal></expr>]<pos:position pos:line="39" pos:column="24"/></index></name></decl>;<pos:position pos:line="39" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="40" pos:column="7">ERROR<pos:position pos:line="40" pos:column="12"/></name><argument_list pos:line="40" pos:column="12">(<argument><expr><literal type="string" pos:line="40" pos:column="13">"network plugin: setsockopt(ipv6-ttl): %s"<pos:position pos:line="40" pos:column="55"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="41" pos:column="13">sstrerror<pos:position pos:line="41" pos:column="22"/></name><argument_list pos:line="41" pos:column="22">(<argument><expr><name pos:line="41" pos:column="23">errno<pos:position pos:line="41" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="30">errbuf<pos:position pos:line="41" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="41" pos:column="38">sizeof<argument_list pos:line="41" pos:column="44">(<argument><expr><name pos:line="41" pos:column="45">errbuf<pos:position pos:line="41" pos:column="51"/></name></expr></argument>)<pos:position pos:line="41" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="41" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="55"/></expr_stmt>
      <return pos:line="42" pos:column="7">return <expr><operator pos:line="42" pos:column="14">(<pos:position pos:line="42" pos:column="15"/></operator><operator pos:line="42" pos:column="15">-<pos:position pos:line="42" pos:column="16"/></operator><literal type="number" pos:line="42" pos:column="16">1<pos:position pos:line="42" pos:column="17"/></literal><operator pos:line="42" pos:column="17">)<pos:position pos:line="42" pos:column="18"/></operator></expr>;<pos:position pos:line="42" pos:column="19"/></return>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>
  }<pos:position pos:line="44" pos:column="4"/></block></then></if></elseif></if>

  <return pos:line="46" pos:column="3">return <expr><operator pos:line="46" pos:column="10">(<pos:position pos:line="46" pos:column="11"/></operator><literal type="number" pos:line="46" pos:column="11">0<pos:position pos:line="46" pos:column="12"/></literal><operator pos:line="46" pos:column="12">)<pos:position pos:line="46" pos:column="13"/></operator></expr>;<pos:position pos:line="46" pos:column="14"/></return>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

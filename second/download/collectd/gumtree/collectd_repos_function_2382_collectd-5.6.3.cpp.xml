<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2382_collectd-5.6.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">strjoin<pos:position pos:line="1" pos:column="12"/></name><parameter_list pos:line="1" pos:column="12">(<parameter><decl><type><name pos:line="1" pos:column="13">char<pos:position pos:line="1" pos:column="17"/></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type><name pos:line="1" pos:column="19">buffer<pos:position pos:line="1" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="27">size_t<pos:position pos:line="1" pos:column="33"/></name></type> <name pos:line="1" pos:column="34">buffer_size<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier><modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">fields<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">size_t<pos:position pos:line="1" pos:column="68"/></name></type> <name pos:line="1" pos:column="69">fields_num<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>,
            <parameter><decl><type><specifier pos:line="2" pos:column="13">const<pos:position pos:line="2" pos:column="18"/></specifier> <name pos:line="2" pos:column="19">char<pos:position pos:line="2" pos:column="23"/></name> <modifier pos:line="2" pos:column="24">*<pos:position pos:line="2" pos:column="25"/></modifier></type><name pos:line="2" pos:column="25">sep<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="29"/></parameter_list> <block pos:line="2" pos:column="30">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">avail<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">ptr<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">sep_len<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><operator pos:line="7" pos:column="7">(<pos:position pos:line="7" pos:column="8"/></operator><name pos:line="7" pos:column="8">buffer_size<pos:position pos:line="7" pos:column="19"/></name> <operator pos:line="7" pos:column="20">&lt;<pos:position pos:line="7" pos:column="24"/></operator> <literal type="number" pos:line="7" pos:column="22">1<pos:position pos:line="7" pos:column="23"/></literal><operator pos:line="7" pos:column="23">)<pos:position pos:line="7" pos:column="24"/></operator> <operator pos:line="7" pos:column="25">||<pos:position pos:line="7" pos:column="27"/></operator> <operator pos:line="7" pos:column="28">(<pos:position pos:line="7" pos:column="29"/></operator><name pos:line="7" pos:column="29">fields_num<pos:position pos:line="7" pos:column="39"/></name> <operator pos:line="7" pos:column="40">==<pos:position pos:line="7" pos:column="42"/></operator> <literal type="number" pos:line="7" pos:column="43">0<pos:position pos:line="7" pos:column="44"/></literal><operator pos:line="7" pos:column="44">)<pos:position pos:line="7" pos:column="45"/></operator></expr>)<pos:position pos:line="7" pos:column="46"/></condition><then pos:line="7" pos:column="46">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><operator pos:line="8" pos:column="13">-<pos:position pos:line="8" pos:column="14"/></operator><literal type="number" pos:line="8" pos:column="14">1<pos:position pos:line="8" pos:column="15"/></literal><operator pos:line="8" pos:column="15">)<pos:position pos:line="8" pos:column="16"/></operator></expr>;<pos:position pos:line="8" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="10" pos:column="3">memset<pos:position pos:line="10" pos:column="9"/></name><argument_list pos:line="10" pos:column="9">(<argument><expr><name pos:line="10" pos:column="10">buffer<pos:position pos:line="10" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="18">0<pos:position pos:line="10" pos:column="19"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="21">buffer_size<pos:position pos:line="10" pos:column="32"/></name></expr></argument>)<pos:position pos:line="10" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><name pos:line="11" pos:column="3">ptr<pos:position pos:line="11" pos:column="6"/></name> <operator pos:line="11" pos:column="7">=<pos:position pos:line="11" pos:column="8"/></operator> <name pos:line="11" pos:column="9">buffer<pos:position pos:line="11" pos:column="15"/></name></expr>;<pos:position pos:line="11" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><name pos:line="12" pos:column="3">avail<pos:position pos:line="12" pos:column="8"/></name> <operator pos:line="12" pos:column="9">=<pos:position pos:line="12" pos:column="10"/></operator> <name pos:line="12" pos:column="11">buffer_size<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">-<pos:position pos:line="12" pos:column="24"/></operator> <literal type="number" pos:line="12" pos:column="25">1<pos:position pos:line="12" pos:column="26"/></literal></expr>;<pos:position pos:line="12" pos:column="27"/></expr_stmt>

  <expr_stmt><expr><name pos:line="14" pos:column="3">sep_len<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <literal type="number" pos:line="14" pos:column="13">0<pos:position pos:line="14" pos:column="14"/></literal></expr>;<pos:position pos:line="14" pos:column="15"/></expr_stmt>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name pos:line="15" pos:column="7">sep<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">!=<pos:position pos:line="15" pos:column="13"/></operator> <name pos:line="15" pos:column="14">NULL<pos:position pos:line="15" pos:column="18"/></name></expr>)<pos:position pos:line="15" pos:column="19"/></condition><then pos:line="15" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="5">sep_len<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <call><name pos:line="16" pos:column="15">strlen<pos:position pos:line="16" pos:column="21"/></name><argument_list pos:line="16" pos:column="21">(<argument><expr><name pos:line="16" pos:column="22">sep<pos:position pos:line="16" pos:column="25"/></name></expr></argument>)<pos:position pos:line="16" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="27"/></expr_stmt></block></then></if>

  <for pos:line="18" pos:column="3">for <control pos:line="18" pos:column="7">(<init><decl><type><name pos:line="18" pos:column="8">size_t<pos:position pos:line="18" pos:column="14"/></name></type> <name pos:line="18" pos:column="15">i<pos:position pos:line="18" pos:column="16"/></name> <init pos:line="18" pos:column="17">= <expr><literal type="number" pos:line="18" pos:column="19">0<pos:position pos:line="18" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="18" pos:column="21"/></init> <condition><expr><name pos:line="18" pos:column="22">i<pos:position pos:line="18" pos:column="23"/></name> <operator pos:line="18" pos:column="24">&lt;<pos:position pos:line="18" pos:column="28"/></operator> <name pos:line="18" pos:column="26">fields_num<pos:position pos:line="18" pos:column="36"/></name></expr>;<pos:position pos:line="18" pos:column="37"/></condition> <incr><expr><name pos:line="18" pos:column="38">i<pos:position pos:line="18" pos:column="39"/></name><operator pos:line="18" pos:column="39">++<pos:position pos:line="18" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="42"/></control> <block pos:line="18" pos:column="43">{
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">size_t<pos:position pos:line="19" pos:column="11"/></name></type> <name pos:line="19" pos:column="12">field_len<pos:position pos:line="19" pos:column="21"/></name></decl>;<pos:position pos:line="19" pos:column="22"/></decl_stmt>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><operator pos:line="21" pos:column="9">(<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">i<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">&gt;<pos:position pos:line="21" pos:column="16"/></operator> <literal type="number" pos:line="21" pos:column="14">0<pos:position pos:line="21" pos:column="15"/></literal><operator pos:line="21" pos:column="15">)<pos:position pos:line="21" pos:column="16"/></operator> <operator pos:line="21" pos:column="17">&amp;&amp;<pos:position pos:line="21" pos:column="27"/></operator> <operator pos:line="21" pos:column="20">(<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="21">sep_len<pos:position pos:line="21" pos:column="28"/></name> <operator pos:line="21" pos:column="29">&gt;<pos:position pos:line="21" pos:column="33"/></operator> <literal type="number" pos:line="21" pos:column="31">0<pos:position pos:line="21" pos:column="32"/></literal><operator pos:line="21" pos:column="32">)<pos:position pos:line="21" pos:column="33"/></operator></expr>)<pos:position pos:line="21" pos:column="34"/></condition><then pos:line="21" pos:column="34"> <block pos:line="21" pos:column="35">{
      <if pos:line="22" pos:column="7">if <condition pos:line="22" pos:column="10">(<expr><name pos:line="22" pos:column="11">avail<pos:position pos:line="22" pos:column="16"/></name> <operator pos:line="22" pos:column="17">&lt;<pos:position pos:line="22" pos:column="21"/></operator> <name pos:line="22" pos:column="19">sep_len<pos:position pos:line="22" pos:column="26"/></name></expr>)<pos:position pos:line="22" pos:column="27"/></condition><then pos:line="22" pos:column="27">
        <block type="pseudo"><return pos:line="23" pos:column="9">return <expr><operator pos:line="23" pos:column="16">(<pos:position pos:line="23" pos:column="17"/></operator><operator pos:line="23" pos:column="17">-<pos:position pos:line="23" pos:column="18"/></operator><literal type="number" pos:line="23" pos:column="18">1<pos:position pos:line="23" pos:column="19"/></literal><operator pos:line="23" pos:column="19">)<pos:position pos:line="23" pos:column="20"/></operator></expr>;<pos:position pos:line="23" pos:column="21"/></return></block></then></if>

      <expr_stmt><expr><call><name pos:line="25" pos:column="7">memcpy<pos:position pos:line="25" pos:column="13"/></name><argument_list pos:line="25" pos:column="13">(<argument><expr><name pos:line="25" pos:column="14">ptr<pos:position pos:line="25" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="19">sep<pos:position pos:line="25" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="24">sep_len<pos:position pos:line="25" pos:column="31"/></name></expr></argument>)<pos:position pos:line="25" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><name pos:line="26" pos:column="7">ptr<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">+=<pos:position pos:line="26" pos:column="13"/></operator> <name pos:line="26" pos:column="14">sep_len<pos:position pos:line="26" pos:column="21"/></name></expr>;<pos:position pos:line="26" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><name pos:line="27" pos:column="7">avail<pos:position pos:line="27" pos:column="12"/></name> <operator pos:line="27" pos:column="13">-=<pos:position pos:line="27" pos:column="15"/></operator> <name pos:line="27" pos:column="16">sep_len<pos:position pos:line="27" pos:column="23"/></name></expr>;<pos:position pos:line="27" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="30" pos:column="5">field_len<pos:position pos:line="30" pos:column="14"/></name> <operator pos:line="30" pos:column="15">=<pos:position pos:line="30" pos:column="16"/></operator> <call><name pos:line="30" pos:column="17">strlen<pos:position pos:line="30" pos:column="23"/></name><argument_list pos:line="30" pos:column="23">(<argument><expr><name><name pos:line="30" pos:column="24">fields<pos:position pos:line="30" pos:column="30"/></name><index pos:line="30" pos:column="30">[<expr><name pos:line="30" pos:column="31">i<pos:position pos:line="30" pos:column="32"/></name></expr>]<pos:position pos:line="30" pos:column="33"/></index></name></expr></argument>)<pos:position pos:line="30" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="35"/></expr_stmt>
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name pos:line="31" pos:column="9">avail<pos:position pos:line="31" pos:column="14"/></name> <operator pos:line="31" pos:column="15">&lt;<pos:position pos:line="31" pos:column="19"/></operator> <name pos:line="31" pos:column="17">field_len<pos:position pos:line="31" pos:column="26"/></name></expr>)<pos:position pos:line="31" pos:column="27"/></condition><then pos:line="31" pos:column="27">
      <block type="pseudo"><return pos:line="32" pos:column="7">return <expr><operator pos:line="32" pos:column="14">(<pos:position pos:line="32" pos:column="15"/></operator><operator pos:line="32" pos:column="15">-<pos:position pos:line="32" pos:column="16"/></operator><literal type="number" pos:line="32" pos:column="16">1<pos:position pos:line="32" pos:column="17"/></literal><operator pos:line="32" pos:column="17">)<pos:position pos:line="32" pos:column="18"/></operator></expr>;<pos:position pos:line="32" pos:column="19"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="34" pos:column="5">memcpy<pos:position pos:line="34" pos:column="11"/></name><argument_list pos:line="34" pos:column="11">(<argument><expr><name pos:line="34" pos:column="12">ptr<pos:position pos:line="34" pos:column="15"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="17">fields<pos:position pos:line="34" pos:column="23"/></name><index pos:line="34" pos:column="23">[<expr><name pos:line="34" pos:column="24">i<pos:position pos:line="34" pos:column="25"/></name></expr>]<pos:position pos:line="34" pos:column="26"/></index></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="28">field_len<pos:position pos:line="34" pos:column="37"/></name></expr></argument>)<pos:position pos:line="34" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name pos:line="35" pos:column="5">ptr<pos:position pos:line="35" pos:column="8"/></name> <operator pos:line="35" pos:column="9">+=<pos:position pos:line="35" pos:column="11"/></operator> <name pos:line="35" pos:column="12">field_len<pos:position pos:line="35" pos:column="21"/></name></expr>;<pos:position pos:line="35" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="36" pos:column="5">avail<pos:position pos:line="36" pos:column="10"/></name> <operator pos:line="36" pos:column="11">-=<pos:position pos:line="36" pos:column="13"/></operator> <name pos:line="36" pos:column="14">field_len<pos:position pos:line="36" pos:column="23"/></name></expr>;<pos:position pos:line="36" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="37" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="39" pos:column="3">assert<pos:position pos:line="39" pos:column="9"/></name><argument_list pos:line="39" pos:column="9">(<argument><expr><name><name pos:line="39" pos:column="10">buffer<pos:position pos:line="39" pos:column="16"/></name><index pos:line="39" pos:column="16">[<expr><name pos:line="39" pos:column="17">buffer_size<pos:position pos:line="39" pos:column="28"/></name> <operator pos:line="39" pos:column="29">-<pos:position pos:line="39" pos:column="30"/></operator> <literal type="number" pos:line="39" pos:column="31">1<pos:position pos:line="39" pos:column="32"/></literal></expr>]<pos:position pos:line="39" pos:column="33"/></index></name> <operator pos:line="39" pos:column="34">==<pos:position pos:line="39" pos:column="36"/></operator> <literal type="number" pos:line="39" pos:column="37">0<pos:position pos:line="39" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="40"/></expr_stmt>
  <return pos:line="40" pos:column="3">return <expr><operator pos:line="40" pos:column="10">(<pos:position pos:line="40" pos:column="11"/></operator><operator pos:line="40" pos:column="11">(<pos:position pos:line="40" pos:column="12"/></operator><name pos:line="40" pos:column="12">int<pos:position pos:line="40" pos:column="15"/></name><operator pos:line="40" pos:column="15">)<pos:position pos:line="40" pos:column="16"/></operator><call><name pos:line="40" pos:column="16">strlen<pos:position pos:line="40" pos:column="22"/></name><argument_list pos:line="40" pos:column="22">(<argument><expr><name pos:line="40" pos:column="23">buffer<pos:position pos:line="40" pos:column="29"/></name></expr></argument>)<pos:position pos:line="40" pos:column="30"/></argument_list></call><operator pos:line="40" pos:column="30">)<pos:position pos:line="40" pos:column="31"/></operator></expr>;<pos:position pos:line="40" pos:column="32"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

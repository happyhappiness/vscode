<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_703_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">mic_read_memory<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">int<pos:position pos:line="1" pos:column="31"/></name></type> <name pos:line="1" pos:column="32">mic<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">U32<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">ret<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">U32<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">mem_total<pos:position pos:line="4" pos:column="22"/></name></decl>,<decl><type ref="prev"/><name pos:line="4" pos:column="23">mem_free<pos:position pos:line="4" pos:column="31"/></name></decl>,<decl><type ref="prev"/><name pos:line="4" pos:column="32">mem_bufs<pos:position pos:line="4" pos:column="40"/></name></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>

	<expr_stmt><expr><name pos:line="6" pos:column="9">ret<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">=<pos:position pos:line="6" pos:column="14"/></operator> <call><name pos:line="6" pos:column="15">MicGetMemoryUtilization<pos:position pos:line="6" pos:column="38"/></name><argument_list pos:line="6" pos:column="38">(<argument><expr><name pos:line="6" pos:column="39">mic_handle<pos:position pos:line="6" pos:column="49"/></name></expr></argument>,<argument><expr><operator pos:line="6" pos:column="50">&amp;<pos:position pos:line="6" pos:column="55"/></operator><name pos:line="6" pos:column="51">mem_total<pos:position pos:line="6" pos:column="60"/></name></expr></argument>,<argument><expr><operator pos:line="6" pos:column="61">&amp;<pos:position pos:line="6" pos:column="66"/></operator><name pos:line="6" pos:column="62">mem_free<pos:position pos:line="6" pos:column="70"/></name></expr></argument>,<argument><expr><operator pos:line="6" pos:column="71">&amp;<pos:position pos:line="6" pos:column="76"/></operator><name pos:line="6" pos:column="72">mem_bufs<pos:position pos:line="6" pos:column="80"/></name></expr></argument>)<pos:position pos:line="6" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="82"/></expr_stmt>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">ret<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">!=<pos:position pos:line="7" pos:column="19"/></operator> <name pos:line="7" pos:column="20">MIC_ACCESS_API_SUCCESS<pos:position pos:line="7" pos:column="42"/></name></expr>)<pos:position pos:line="7" pos:column="43"/></condition><then pos:line="7" pos:column="43"> <block pos:line="7" pos:column="44">{
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">ERROR<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><literal type="string" pos:line="8" pos:column="23">"mic plugin: Problem getting Memory Utilization: %s"<pos:position pos:line="8" pos:column="75"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="9" pos:column="33">MicGetErrorString<pos:position pos:line="9" pos:column="50"/></name><argument_list pos:line="9" pos:column="50">(<argument><expr><name pos:line="9" pos:column="51">ret<pos:position pos:line="9" pos:column="54"/></name></expr></argument>)<pos:position pos:line="9" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="57"/></expr_stmt>
		<return pos:line="10" pos:column="17">return <expr><operator pos:line="10" pos:column="24">(<pos:position pos:line="10" pos:column="25"/></operator><literal type="number" pos:line="10" pos:column="25">1<pos:position pos:line="10" pos:column="26"/></literal><operator pos:line="10" pos:column="26">)<pos:position pos:line="10" pos:column="27"/></operator></expr>;<pos:position pos:line="10" pos:column="28"/></return>
	}<pos:position pos:line="11" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">mic_submit_memory_use<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><name pos:line="12" pos:column="31">mic<pos:position pos:line="12" pos:column="34"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="12" pos:column="35">"free"<pos:position pos:line="12" pos:column="41"/></literal></expr></argument>,<argument><expr><name pos:line="12" pos:column="42">mem_free<pos:position pos:line="12" pos:column="50"/></name></expr></argument>)<pos:position pos:line="12" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="13" pos:column="9">mic_submit_memory_use<pos:position pos:line="13" pos:column="30"/></name><argument_list pos:line="13" pos:column="30">(<argument><expr><name pos:line="13" pos:column="31">mic<pos:position pos:line="13" pos:column="34"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="13" pos:column="35">"used"<pos:position pos:line="13" pos:column="41"/></literal></expr></argument>,<argument><expr><name pos:line="13" pos:column="42">mem_total<pos:position pos:line="13" pos:column="51"/></name><operator pos:line="13" pos:column="51">-<pos:position pos:line="13" pos:column="52"/></operator><name pos:line="13" pos:column="52">mem_free<pos:position pos:line="13" pos:column="60"/></name><operator pos:line="13" pos:column="60">-<pos:position pos:line="13" pos:column="61"/></operator><name pos:line="13" pos:column="61">mem_bufs<pos:position pos:line="13" pos:column="69"/></name></expr></argument>)<pos:position pos:line="13" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="71"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">mic_submit_memory_use<pos:position pos:line="14" pos:column="30"/></name><argument_list pos:line="14" pos:column="30">(<argument><expr><name pos:line="14" pos:column="31">mic<pos:position pos:line="14" pos:column="34"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="14" pos:column="35">"buffered"<pos:position pos:line="14" pos:column="45"/></literal></expr></argument>,<argument><expr><name pos:line="14" pos:column="46">mem_bufs<pos:position pos:line="14" pos:column="54"/></name></expr></argument>)<pos:position pos:line="14" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="56"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">DEBUG<pos:position pos:line="15" pos:column="14"/></name><argument_list pos:line="15" pos:column="14">(<argument><expr><literal type="string" pos:line="15" pos:column="15">"mic plugin: Memory Read: %u %u %u"<pos:position pos:line="15" pos:column="50"/></literal></expr></argument>,<argument><expr><name pos:line="15" pos:column="51">mem_total<pos:position pos:line="15" pos:column="60"/></name></expr></argument>,<argument><expr><name pos:line="15" pos:column="61">mem_free<pos:position pos:line="15" pos:column="69"/></name></expr></argument>,<argument><expr><name pos:line="15" pos:column="70">mem_bufs<pos:position pos:line="15" pos:column="78"/></name></expr></argument>)<pos:position pos:line="15" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="80"/></expr_stmt>
	<return pos:line="16" pos:column="9">return <expr><operator pos:line="16" pos:column="16">(<pos:position pos:line="16" pos:column="17"/></operator><literal type="number" pos:line="16" pos:column="17">0<pos:position pos:line="16" pos:column="18"/></literal><operator pos:line="16" pos:column="18">)<pos:position pos:line="16" pos:column="19"/></operator></expr>;<pos:position pos:line="16" pos:column="20"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

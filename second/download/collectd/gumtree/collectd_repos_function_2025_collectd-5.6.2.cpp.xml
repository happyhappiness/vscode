<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2025_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">sensors_feature_name_to_type<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">name<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list> <block pos:line="1" pos:column="59">{
  <comment type="block" pos:line="2" pos:column="3">/* Yes, this is slow, but it's only ever done during initialization, so
   * it's a one time cost.. */</comment>
  <for pos:line="4" pos:column="3">for <control pos:line="4" pos:column="7">(<init><decl><type><name pos:line="4" pos:column="8">int<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">i<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><literal type="number" pos:line="4" pos:column="16">0<pos:position pos:line="4" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="18"/></init> <condition><expr><name pos:line="4" pos:column="19">i<pos:position pos:line="4" pos:column="20"/></name> <operator pos:line="4" pos:column="21">&lt;<pos:position pos:line="4" pos:column="25"/></operator> <name pos:line="4" pos:column="23">known_features_num<pos:position pos:line="4" pos:column="41"/></name></expr>;<pos:position pos:line="4" pos:column="42"/></condition> <incr><expr><name pos:line="4" pos:column="43">i<pos:position pos:line="4" pos:column="44"/></name><operator pos:line="4" pos:column="44">++<pos:position pos:line="4" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="4" pos:column="47"/></control>
    <block type="pseudo"><if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><call><name pos:line="5" pos:column="9">strcasecmp<pos:position pos:line="5" pos:column="19"/></name><argument_list pos:line="5" pos:column="19">(<argument><expr><name><name pos:line="5" pos:column="20">known_features<pos:position pos:line="5" pos:column="34"/></name><index pos:line="5" pos:column="34">[<expr><name pos:line="5" pos:column="35">i<pos:position pos:line="5" pos:column="36"/></name></expr>]<pos:position pos:line="5" pos:column="37"/></index></name><operator pos:line="5" pos:column="37">.<pos:position pos:line="5" pos:column="38"/></operator><name pos:line="5" pos:column="38">label<pos:position pos:line="5" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="45">name<pos:position pos:line="5" pos:column="49"/></name></expr></argument>)<pos:position pos:line="5" pos:column="50"/></argument_list></call> <operator pos:line="5" pos:column="51">==<pos:position pos:line="5" pos:column="53"/></operator> <literal type="number" pos:line="5" pos:column="54">0<pos:position pos:line="5" pos:column="55"/></literal></expr>)<pos:position pos:line="5" pos:column="56"/></condition><then pos:line="5" pos:column="56">
      <block type="pseudo"><return pos:line="6" pos:column="7">return <expr><operator pos:line="6" pos:column="14">(<pos:position pos:line="6" pos:column="15"/></operator><name><name pos:line="6" pos:column="15">known_features<pos:position pos:line="6" pos:column="29"/></name><index pos:line="6" pos:column="29">[<expr><name pos:line="6" pos:column="30">i<pos:position pos:line="6" pos:column="31"/></name></expr>]<pos:position pos:line="6" pos:column="32"/></index></name><operator pos:line="6" pos:column="32">.<pos:position pos:line="6" pos:column="33"/></operator><name pos:line="6" pos:column="33">type<pos:position pos:line="6" pos:column="37"/></name><operator pos:line="6" pos:column="37">)<pos:position pos:line="6" pos:column="38"/></operator></expr>;<pos:position pos:line="6" pos:column="39"/></return></block></then></if></block></for>

  <return pos:line="8" pos:column="3">return <expr><operator pos:line="8" pos:column="10">(<pos:position pos:line="8" pos:column="11"/></operator><name pos:line="8" pos:column="11">SENSOR_TYPE_UNKNOWN<pos:position pos:line="8" pos:column="30"/></name><operator pos:line="8" pos:column="30">)<pos:position pos:line="8" pos:column="31"/></operator></expr>;<pos:position pos:line="8" pos:column="32"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

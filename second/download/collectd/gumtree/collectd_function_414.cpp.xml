<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_function_414.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">lcc_value_list_t<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">create_value_list<pos:position pos:line="1" pos:column="43"/></name> <parameter_list pos:line="1" pos:column="44">(<parameter><decl><type><name pos:line="1" pos:column="45">void<pos:position pos:line="1" pos:column="49"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list> <comment type="block" pos:line="1" pos:column="51">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">lcc_value_list_t<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">vl<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">host_num<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">vl<pos:position pos:line="6" pos:column="5"/></name> <operator pos:line="6" pos:column="6">=<pos:position pos:line="6" pos:column="7"/></operator> <call><name pos:line="6" pos:column="8">malloc<pos:position pos:line="6" pos:column="14"/></name> <argument_list pos:line="6" pos:column="15">(<argument><expr><sizeof pos:line="6" pos:column="16">sizeof <argument_list pos:line="6" pos:column="23">(<argument><expr><operator pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="25">vl<pos:position pos:line="6" pos:column="27"/></name></expr></argument>)<pos:position pos:line="6" pos:column="28"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="30"/></expr_stmt>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">vl<pos:position pos:line="7" pos:column="9"/></name> <operator pos:line="7" pos:column="10">==<pos:position pos:line="7" pos:column="12"/></operator> <name pos:line="7" pos:column="13">NULL<pos:position pos:line="7" pos:column="17"/></name></expr>)<pos:position pos:line="7" pos:column="18"/></condition><then pos:line="7" pos:column="18">
  <block pos:line="8" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">fprintf<pos:position pos:line="9" pos:column="12"/></name> <argument_list pos:line="9" pos:column="13">(<argument><expr><name pos:line="9" pos:column="14">stderr<pos:position pos:line="9" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="22">"malloc failed.\n"<pos:position pos:line="9" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="42"/></expr_stmt>
    <return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">(<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="13">NULL<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">)<pos:position pos:line="10" pos:column="18"/></operator></expr>;<pos:position pos:line="10" pos:column="19"/></return>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">memset<pos:position pos:line="12" pos:column="9"/></name> <argument_list pos:line="12" pos:column="10">(<argument><expr><name pos:line="12" pos:column="11">vl<pos:position pos:line="12" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="15">0<pos:position pos:line="12" pos:column="16"/></literal></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="18">sizeof <argument_list pos:line="12" pos:column="25">(<argument><expr><operator pos:line="12" pos:column="26">*<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="27">vl<pos:position pos:line="12" pos:column="29"/></name></expr></argument>)<pos:position pos:line="12" pos:column="30"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="32"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="14" pos:column="3">vl<pos:position pos:line="14" pos:column="5"/></name><operator pos:line="14" pos:column="5">-&gt;<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="7">values<pos:position pos:line="14" pos:column="13"/></name></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <call><name pos:line="14" pos:column="16">calloc<pos:position pos:line="14" pos:column="22"/></name> <argument_list pos:line="14" pos:column="23">(<comment type="block" pos:line="14" pos:column="24">/* nmemb = */</comment> <argument><expr><literal type="number" pos:line="14" pos:column="38">1<pos:position pos:line="14" pos:column="39"/></literal></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="41">sizeof <argument_list pos:line="14" pos:column="48">(<argument><expr><operator pos:line="14" pos:column="49">*<pos:position pos:line="14" pos:column="50"/></operator><name><name pos:line="14" pos:column="50">vl<pos:position pos:line="14" pos:column="52"/></name><operator pos:line="14" pos:column="52">-&gt;<pos:position pos:line="14" pos:column="57"/></operator><name pos:line="14" pos:column="54">values<pos:position pos:line="14" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="63"/></expr_stmt>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name><name pos:line="15" pos:column="7">vl<pos:position pos:line="15" pos:column="9"/></name><operator pos:line="15" pos:column="9">-&gt;<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="11">values<pos:position pos:line="15" pos:column="17"/></name></name> <operator pos:line="15" pos:column="18">==<pos:position pos:line="15" pos:column="20"/></operator> <name pos:line="15" pos:column="21">NULL<pos:position pos:line="15" pos:column="25"/></name></expr>)<pos:position pos:line="15" pos:column="26"/></condition><then pos:line="15" pos:column="26">
  <block pos:line="16" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">fprintf<pos:position pos:line="17" pos:column="12"/></name> <argument_list pos:line="17" pos:column="13">(<argument><expr><name pos:line="17" pos:column="14">stderr<pos:position pos:line="17" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="22">"calloc failed.\n"<pos:position pos:line="17" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">free<pos:position pos:line="18" pos:column="9"/></name> <argument_list pos:line="18" pos:column="10">(<argument><expr><name pos:line="18" pos:column="11">vl<pos:position pos:line="18" pos:column="13"/></name></expr></argument>)<pos:position pos:line="18" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="15"/></expr_stmt>
    <return pos:line="19" pos:column="5">return <expr><operator pos:line="19" pos:column="12">(<pos:position pos:line="19" pos:column="13"/></operator><name pos:line="19" pos:column="13">NULL<pos:position pos:line="19" pos:column="17"/></name><operator pos:line="19" pos:column="17">)<pos:position pos:line="19" pos:column="18"/></operator></expr>;<pos:position pos:line="19" pos:column="19"/></return>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="22" pos:column="3">vl<pos:position pos:line="22" pos:column="5"/></name><operator pos:line="22" pos:column="5">-&gt;<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="7">values_types<pos:position pos:line="22" pos:column="19"/></name></name> <operator pos:line="22" pos:column="20">=<pos:position pos:line="22" pos:column="21"/></operator> <call><name pos:line="22" pos:column="22">calloc<pos:position pos:line="22" pos:column="28"/></name> <argument_list pos:line="22" pos:column="29">(<comment type="block" pos:line="22" pos:column="30">/* nmemb = */</comment> <argument><expr><literal type="number" pos:line="22" pos:column="44">1<pos:position pos:line="22" pos:column="45"/></literal></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="47">sizeof <argument_list pos:line="22" pos:column="54">(<argument><expr><operator pos:line="22" pos:column="55">*<pos:position pos:line="22" pos:column="56"/></operator><name><name pos:line="22" pos:column="56">vl<pos:position pos:line="22" pos:column="58"/></name><operator pos:line="22" pos:column="58">-&gt;<pos:position pos:line="22" pos:column="63"/></operator><name pos:line="22" pos:column="60">values_types<pos:position pos:line="22" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="75"/></expr_stmt>
  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><name><name pos:line="23" pos:column="7">vl<pos:position pos:line="23" pos:column="9"/></name><operator pos:line="23" pos:column="9">-&gt;<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="11">values_types<pos:position pos:line="23" pos:column="23"/></name></name> <operator pos:line="23" pos:column="24">==<pos:position pos:line="23" pos:column="26"/></operator> <name pos:line="23" pos:column="27">NULL<pos:position pos:line="23" pos:column="31"/></name></expr>)<pos:position pos:line="23" pos:column="32"/></condition><then pos:line="23" pos:column="32">
  <block pos:line="24" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">fprintf<pos:position pos:line="25" pos:column="12"/></name> <argument_list pos:line="25" pos:column="13">(<argument><expr><name pos:line="25" pos:column="14">stderr<pos:position pos:line="25" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="22">"calloc failed.\n"<pos:position pos:line="25" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">free<pos:position pos:line="26" pos:column="9"/></name> <argument_list pos:line="26" pos:column="10">(<argument><expr><name><name pos:line="26" pos:column="11">vl<pos:position pos:line="26" pos:column="13"/></name><operator pos:line="26" pos:column="13">-&gt;<pos:position pos:line="26" pos:column="18"/></operator><name pos:line="26" pos:column="15">values<pos:position pos:line="26" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">free<pos:position pos:line="27" pos:column="9"/></name> <argument_list pos:line="27" pos:column="10">(<argument><expr><name pos:line="27" pos:column="11">vl<pos:position pos:line="27" pos:column="13"/></name></expr></argument>)<pos:position pos:line="27" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="15"/></expr_stmt>
    <return pos:line="28" pos:column="5">return <expr><operator pos:line="28" pos:column="12">(<pos:position pos:line="28" pos:column="13"/></operator><name pos:line="28" pos:column="13">NULL<pos:position pos:line="28" pos:column="17"/></name><operator pos:line="28" pos:column="17">)<pos:position pos:line="28" pos:column="18"/></operator></expr>;<pos:position pos:line="28" pos:column="19"/></return>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="31" pos:column="3">vl<pos:position pos:line="31" pos:column="5"/></name><operator pos:line="31" pos:column="5">-&gt;<pos:position pos:line="31" pos:column="10"/></operator><name pos:line="31" pos:column="7">values_len<pos:position pos:line="31" pos:column="17"/></name></name> <operator pos:line="31" pos:column="18">=<pos:position pos:line="31" pos:column="19"/></operator> <literal type="number" pos:line="31" pos:column="20">1<pos:position pos:line="31" pos:column="21"/></literal></expr>;<pos:position pos:line="31" pos:column="22"/></expr_stmt>

  <expr_stmt><expr><name pos:line="33" pos:column="3">host_num<pos:position pos:line="33" pos:column="11"/></name> <operator pos:line="33" pos:column="12">=<pos:position pos:line="33" pos:column="13"/></operator> <call><name pos:line="33" pos:column="14">get_boundet_random<pos:position pos:line="33" pos:column="32"/></name> <argument_list pos:line="33" pos:column="33">(<argument><expr><literal type="number" pos:line="33" pos:column="34">0<pos:position pos:line="33" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="37">conf_num_hosts<pos:position pos:line="33" pos:column="51"/></name></expr></argument>)<pos:position pos:line="33" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="53"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="35" pos:column="3">vl<pos:position pos:line="35" pos:column="5"/></name><operator pos:line="35" pos:column="5">-&gt;<pos:position pos:line="35" pos:column="10"/></operator><name pos:line="35" pos:column="7">interval<pos:position pos:line="35" pos:column="15"/></name></name> <operator pos:line="35" pos:column="16">=<pos:position pos:line="35" pos:column="17"/></operator> <name pos:line="35" pos:column="18">conf_interval<pos:position pos:line="35" pos:column="31"/></name></expr>;<pos:position pos:line="35" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="36" pos:column="3">vl<pos:position pos:line="36" pos:column="5"/></name><operator pos:line="36" pos:column="5">-&gt;<pos:position pos:line="36" pos:column="10"/></operator><name pos:line="36" pos:column="7">time<pos:position pos:line="36" pos:column="11"/></name></name> <operator pos:line="36" pos:column="12">=<pos:position pos:line="36" pos:column="13"/></operator> <literal type="number" pos:line="36" pos:column="14">1.0<pos:position pos:line="36" pos:column="17"/></literal> <operator pos:line="36" pos:column="18">+<pos:position pos:line="36" pos:column="19"/></operator> <call><name pos:line="36" pos:column="20">time<pos:position pos:line="36" pos:column="24"/></name> <argument_list pos:line="36" pos:column="25">(<argument><expr><name pos:line="36" pos:column="26">NULL<pos:position pos:line="36" pos:column="30"/></name></expr></argument>)<pos:position pos:line="36" pos:column="31"/></argument_list></call>
    <operator pos:line="37" pos:column="5">+<pos:position pos:line="37" pos:column="6"/></operator> <operator pos:line="37" pos:column="7">(<pos:position pos:line="37" pos:column="8"/></operator><name pos:line="37" pos:column="8">host_num<pos:position pos:line="37" pos:column="16"/></name> <operator pos:line="37" pos:column="17">%<pos:position pos:line="37" pos:column="18"/></operator> <operator pos:line="37" pos:column="19">(<pos:position pos:line="37" pos:column="20"/></operator><literal type="number" pos:line="37" pos:column="20">1<pos:position pos:line="37" pos:column="21"/></literal> <operator pos:line="37" pos:column="22">+<pos:position pos:line="37" pos:column="23"/></operator> <operator pos:line="37" pos:column="24">(<pos:position pos:line="37" pos:column="25"/></operator><name pos:line="37" pos:column="25">int<pos:position pos:line="37" pos:column="28"/></name><operator pos:line="37" pos:column="28">)<pos:position pos:line="37" pos:column="29"/></operator> <name><name pos:line="37" pos:column="30">vl<pos:position pos:line="37" pos:column="32"/></name><operator pos:line="37" pos:column="32">-&gt;<pos:position pos:line="37" pos:column="37"/></operator><name pos:line="37" pos:column="34">interval<pos:position pos:line="37" pos:column="42"/></name></name><operator pos:line="37" pos:column="42">)<pos:position pos:line="37" pos:column="43"/></operator><operator pos:line="37" pos:column="43">)<pos:position pos:line="37" pos:column="44"/></operator></expr>;<pos:position pos:line="37" pos:column="45"/></expr_stmt>

  <if pos:line="39" pos:column="3">if <condition pos:line="39" pos:column="6">(<expr><call><name pos:line="39" pos:column="7">get_boundet_random<pos:position pos:line="39" pos:column="25"/></name> <argument_list pos:line="39" pos:column="26">(<argument><expr><literal type="number" pos:line="39" pos:column="27">0<pos:position pos:line="39" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="30">2<pos:position pos:line="39" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="32"/></argument_list></call> <operator pos:line="39" pos:column="33">==<pos:position pos:line="39" pos:column="35"/></operator> <literal type="number" pos:line="39" pos:column="36">0<pos:position pos:line="39" pos:column="37"/></literal></expr>)<pos:position pos:line="39" pos:column="38"/></condition><then pos:line="39" pos:column="38">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="40" pos:column="5">vl<pos:position pos:line="40" pos:column="7"/></name><operator pos:line="40" pos:column="7">-&gt;<pos:position pos:line="40" pos:column="12"/></operator><name pos:line="40" pos:column="9">values_types<pos:position pos:line="40" pos:column="21"/></name><index pos:line="40" pos:column="21">[<expr><literal type="number" pos:line="40" pos:column="22">0<pos:position pos:line="40" pos:column="23"/></literal></expr>]<pos:position pos:line="40" pos:column="24"/></index></name> <operator pos:line="40" pos:column="25">=<pos:position pos:line="40" pos:column="26"/></operator> <name pos:line="40" pos:column="27">LCC_TYPE_GAUGE<pos:position pos:line="40" pos:column="41"/></name></expr>;<pos:position pos:line="40" pos:column="42"/></expr_stmt></block></then>
  <else pos:line="41" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="42" pos:column="5">vl<pos:position pos:line="42" pos:column="7"/></name><operator pos:line="42" pos:column="7">-&gt;<pos:position pos:line="42" pos:column="12"/></operator><name pos:line="42" pos:column="9">values_types<pos:position pos:line="42" pos:column="21"/></name><index pos:line="42" pos:column="21">[<expr><literal type="number" pos:line="42" pos:column="22">0<pos:position pos:line="42" pos:column="23"/></literal></expr>]<pos:position pos:line="42" pos:column="24"/></index></name> <operator pos:line="42" pos:column="25">=<pos:position pos:line="42" pos:column="26"/></operator> <name pos:line="42" pos:column="27">LCC_TYPE_DERIVE<pos:position pos:line="42" pos:column="42"/></name></expr>;<pos:position pos:line="42" pos:column="43"/></expr_stmt></block></else></if>

  <expr_stmt><expr><call><name pos:line="44" pos:column="3">snprintf<pos:position pos:line="44" pos:column="11"/></name> <argument_list pos:line="44" pos:column="12">(<argument><expr><name><name pos:line="44" pos:column="13">vl<pos:position pos:line="44" pos:column="15"/></name><operator pos:line="44" pos:column="15">-&gt;<pos:position pos:line="44" pos:column="20"/></operator><name pos:line="44" pos:column="17">identifier<pos:position pos:line="44" pos:column="27"/></name><operator pos:line="44" pos:column="27">.<pos:position pos:line="44" pos:column="28"/></operator><name pos:line="44" pos:column="28">host<pos:position pos:line="44" pos:column="32"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="34">sizeof <argument_list pos:line="44" pos:column="41">(<argument><expr><name><name pos:line="44" pos:column="42">vl<pos:position pos:line="44" pos:column="44"/></name><operator pos:line="44" pos:column="44">-&gt;<pos:position pos:line="44" pos:column="49"/></operator><name pos:line="44" pos:column="46">identifier<pos:position pos:line="44" pos:column="56"/></name><operator pos:line="44" pos:column="56">.<pos:position pos:line="44" pos:column="57"/></operator><name pos:line="44" pos:column="57">host<pos:position pos:line="44" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="62"/></argument_list></sizeof></expr></argument>,
      <argument><expr><literal type="string" pos:line="45" pos:column="7">"host%04i"<pos:position pos:line="45" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="19">host_num<pos:position pos:line="45" pos:column="27"/></name></expr></argument>)<pos:position pos:line="45" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="46" pos:column="3">snprintf<pos:position pos:line="46" pos:column="11"/></name> <argument_list pos:line="46" pos:column="12">(<argument><expr><name><name pos:line="46" pos:column="13">vl<pos:position pos:line="46" pos:column="15"/></name><operator pos:line="46" pos:column="15">-&gt;<pos:position pos:line="46" pos:column="20"/></operator><name pos:line="46" pos:column="17">identifier<pos:position pos:line="46" pos:column="27"/></name><operator pos:line="46" pos:column="27">.<pos:position pos:line="46" pos:column="28"/></operator><name pos:line="46" pos:column="28">plugin<pos:position pos:line="46" pos:column="34"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="46" pos:column="36">sizeof <argument_list pos:line="46" pos:column="43">(<argument><expr><name><name pos:line="46" pos:column="44">vl<pos:position pos:line="46" pos:column="46"/></name><operator pos:line="46" pos:column="46">-&gt;<pos:position pos:line="46" pos:column="51"/></operator><name pos:line="46" pos:column="48">identifier<pos:position pos:line="46" pos:column="58"/></name><operator pos:line="46" pos:column="58">.<pos:position pos:line="46" pos:column="59"/></operator><name pos:line="46" pos:column="59">plugin<pos:position pos:line="46" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="66"/></argument_list></sizeof></expr></argument>,
      <argument><expr><literal type="string" pos:line="47" pos:column="7">"plugin%03i"<pos:position pos:line="47" pos:column="19"/></literal></expr></argument>, <argument><expr><call><name pos:line="47" pos:column="21">get_boundet_random<pos:position pos:line="47" pos:column="39"/></name> <argument_list pos:line="47" pos:column="40">(<argument><expr><literal type="number" pos:line="47" pos:column="41">0<pos:position pos:line="47" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="44">conf_num_plugins<pos:position pos:line="47" pos:column="60"/></name></expr></argument>)<pos:position pos:line="47" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="63"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="48" pos:column="3">strncpy<pos:position pos:line="48" pos:column="10"/></name> <argument_list pos:line="48" pos:column="11">(<argument><expr><name><name pos:line="48" pos:column="12">vl<pos:position pos:line="48" pos:column="14"/></name><operator pos:line="48" pos:column="14">-&gt;<pos:position pos:line="48" pos:column="19"/></operator><name pos:line="48" pos:column="16">identifier<pos:position pos:line="48" pos:column="26"/></name><operator pos:line="48" pos:column="26">.<pos:position pos:line="48" pos:column="27"/></operator><name pos:line="48" pos:column="27">type<pos:position pos:line="48" pos:column="31"/></name></name></expr></argument>,
      <argument><expr><ternary><condition><expr><operator pos:line="49" pos:column="7">(<pos:position pos:line="49" pos:column="8"/></operator><name><name pos:line="49" pos:column="8">vl<pos:position pos:line="49" pos:column="10"/></name><operator pos:line="49" pos:column="10">-&gt;<pos:position pos:line="49" pos:column="15"/></operator><name pos:line="49" pos:column="12">values_types<pos:position pos:line="49" pos:column="24"/></name><index pos:line="49" pos:column="24">[<expr><literal type="number" pos:line="49" pos:column="25">0<pos:position pos:line="49" pos:column="26"/></literal></expr>]<pos:position pos:line="49" pos:column="27"/></index></name> <operator pos:line="49" pos:column="28">==<pos:position pos:line="49" pos:column="30"/></operator> <name pos:line="49" pos:column="31">LCC_TYPE_GAUGE<pos:position pos:line="49" pos:column="45"/></name><operator pos:line="49" pos:column="45">)<pos:position pos:line="49" pos:column="46"/></operator></expr> ?<pos:position pos:line="49" pos:column="48"/></condition><then pos:line="49" pos:column="48"> <expr><literal type="string" pos:line="49" pos:column="49">"gauge"<pos:position pos:line="49" pos:column="56"/></literal></expr> <pos:position pos:line="49" pos:column="57"/></then><else pos:line="49" pos:column="57">: <expr><literal type="string" pos:line="49" pos:column="59">"derive"<pos:position pos:line="49" pos:column="67"/></literal></expr></else></ternary></expr></argument>,
      <argument><expr><sizeof pos:line="50" pos:column="7">sizeof <argument_list pos:line="50" pos:column="14">(<argument><expr><name><name pos:line="50" pos:column="15">vl<pos:position pos:line="50" pos:column="17"/></name><operator pos:line="50" pos:column="17">-&gt;<pos:position pos:line="50" pos:column="22"/></operator><name pos:line="50" pos:column="19">identifier<pos:position pos:line="50" pos:column="29"/></name><operator pos:line="50" pos:column="29">.<pos:position pos:line="50" pos:column="30"/></operator><name pos:line="50" pos:column="30">type<pos:position pos:line="50" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="35"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="50" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="51" pos:column="3">vl<pos:position pos:line="51" pos:column="5"/></name><operator pos:line="51" pos:column="5">-&gt;<pos:position pos:line="51" pos:column="10"/></operator><name pos:line="51" pos:column="7">identifier<pos:position pos:line="51" pos:column="17"/></name><operator pos:line="51" pos:column="17">.<pos:position pos:line="51" pos:column="18"/></operator><name pos:line="51" pos:column="18">type<pos:position pos:line="51" pos:column="22"/></name><index pos:line="51" pos:column="22">[<expr><sizeof pos:line="51" pos:column="23">sizeof <argument_list pos:line="51" pos:column="30">(<argument><expr><name><name pos:line="51" pos:column="31">vl<pos:position pos:line="51" pos:column="33"/></name><operator pos:line="51" pos:column="33">-&gt;<pos:position pos:line="51" pos:column="38"/></operator><name pos:line="51" pos:column="35">identifier<pos:position pos:line="51" pos:column="45"/></name><operator pos:line="51" pos:column="45">.<pos:position pos:line="51" pos:column="46"/></operator><name pos:line="51" pos:column="46">type<pos:position pos:line="51" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="51"/></argument_list></sizeof> <operator pos:line="51" pos:column="52">-<pos:position pos:line="51" pos:column="53"/></operator> <literal type="number" pos:line="51" pos:column="54">1<pos:position pos:line="51" pos:column="55"/></literal></expr>]<pos:position pos:line="51" pos:column="56"/></index></name> <operator pos:line="51" pos:column="57">=<pos:position pos:line="51" pos:column="58"/></operator> <literal type="number" pos:line="51" pos:column="59">0<pos:position pos:line="51" pos:column="60"/></literal></expr>;<pos:position pos:line="51" pos:column="61"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="52" pos:column="3">snprintf<pos:position pos:line="52" pos:column="11"/></name> <argument_list pos:line="52" pos:column="12">(<argument><expr><name><name pos:line="52" pos:column="13">vl<pos:position pos:line="52" pos:column="15"/></name><operator pos:line="52" pos:column="15">-&gt;<pos:position pos:line="52" pos:column="20"/></operator><name pos:line="52" pos:column="17">identifier<pos:position pos:line="52" pos:column="27"/></name><operator pos:line="52" pos:column="27">.<pos:position pos:line="52" pos:column="28"/></operator><name pos:line="52" pos:column="28">type_instance<pos:position pos:line="52" pos:column="41"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="52" pos:column="43">sizeof <argument_list pos:line="52" pos:column="50">(<argument><expr><name><name pos:line="52" pos:column="51">vl<pos:position pos:line="52" pos:column="53"/></name><operator pos:line="52" pos:column="53">-&gt;<pos:position pos:line="52" pos:column="58"/></operator><name pos:line="52" pos:column="55">identifier<pos:position pos:line="52" pos:column="65"/></name><operator pos:line="52" pos:column="65">.<pos:position pos:line="52" pos:column="66"/></operator><name pos:line="52" pos:column="66">type_instance<pos:position pos:line="52" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="80"/></argument_list></sizeof></expr></argument>,
      <argument><expr><literal type="string" pos:line="53" pos:column="7">"ti%li"<pos:position pos:line="53" pos:column="14"/></literal></expr></argument>, <argument><expr><call><name pos:line="53" pos:column="16">random<pos:position pos:line="53" pos:column="22"/></name> <argument_list pos:line="53" pos:column="23">()<pos:position pos:line="53" pos:column="25"/></argument_list></call></expr></argument>)<pos:position pos:line="53" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="27"/></expr_stmt>

  <return pos:line="55" pos:column="3">return <expr><operator pos:line="55" pos:column="10">(<pos:position pos:line="55" pos:column="11"/></operator><name pos:line="55" pos:column="11">vl<pos:position pos:line="55" pos:column="13"/></name><operator pos:line="55" pos:column="13">)<pos:position pos:line="55" pos:column="14"/></operator></expr>;<pos:position pos:line="55" pos:column="15"/></return>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

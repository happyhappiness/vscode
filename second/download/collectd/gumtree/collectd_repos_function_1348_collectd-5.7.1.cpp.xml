<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1348_collectd-5.7.1.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">grpc<pos:position pos:line="1" pos:column="5"/></name><operator pos:line="1" pos:column="5">::<pos:position pos:line="1" pos:column="7"/></operator><name pos:line="1" pos:column="7">Status<pos:position pos:line="1" pos:column="13"/></name></name></type> <name pos:line="1" pos:column="14">queryValuesRead<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">value_list_t<pos:position pos:line="1" pos:column="42"/></name> <specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">match<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="57">std<pos:position pos:line="1" pos:column="60"/></name><operator pos:line="1" pos:column="60">::<pos:position pos:line="1" pos:column="62"/></operator><name><name pos:line="1" pos:column="62">queue<pos:position pos:line="1" pos:column="67"/></name><argument_list type="generic" pos:line="1" pos:column="67">&lt;<argument><expr><name pos:line="1" pos:column="68">value_list_t<pos:position pos:line="1" pos:column="80"/></name></expr></argument>&gt;<pos:position pos:line="1" pos:column="84"/></argument_list></name></name> <modifier pos:line="1" pos:column="82">*<pos:position pos:line="1" pos:column="83"/></modifier></type><name pos:line="1" pos:column="83">value_lists<pos:position pos:line="1" pos:column="94"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="95"/></parameter_list> <block pos:line="1" pos:column="96">{
		<decl_stmt><decl><type><name pos:line="2" pos:column="17">uc_iter_t<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type><name pos:line="2" pos:column="28">iter<pos:position pos:line="2" pos:column="32"/></name></decl>;<pos:position pos:line="2" pos:column="33"/></decl_stmt>
		<if pos:line="3" pos:column="17">if <condition pos:line="3" pos:column="20">(<expr><operator pos:line="3" pos:column="21">(<pos:position pos:line="3" pos:column="22"/></operator><name pos:line="3" pos:column="22">iter<pos:position pos:line="3" pos:column="26"/></name> <operator pos:line="3" pos:column="27">=<pos:position pos:line="3" pos:column="28"/></operator> <call><name pos:line="3" pos:column="29">uc_get_iterator<pos:position pos:line="3" pos:column="44"/></name><argument_list pos:line="3" pos:column="44">()<pos:position pos:line="3" pos:column="46"/></argument_list></call><operator pos:line="3" pos:column="46">)<pos:position pos:line="3" pos:column="47"/></operator> <operator pos:line="3" pos:column="48">==<pos:position pos:line="3" pos:column="50"/></operator> <name pos:line="3" pos:column="51">NULL<pos:position pos:line="3" pos:column="55"/></name></expr>)<pos:position pos:line="3" pos:column="56"/></condition><then pos:line="3" pos:column="56"> <block pos:line="3" pos:column="57">{
			<return pos:line="4" pos:column="25">return <expr><call><name><name pos:line="4" pos:column="32">grpc<pos:position pos:line="4" pos:column="36"/></name><operator pos:line="4" pos:column="36">::<pos:position pos:line="4" pos:column="38"/></operator><name pos:line="4" pos:column="38">Status<pos:position pos:line="4" pos:column="44"/></name></name><argument_list pos:line="4" pos:column="44">(<argument><expr><name><name pos:line="4" pos:column="45">grpc<pos:position pos:line="4" pos:column="49"/></name><operator pos:line="4" pos:column="49">::<pos:position pos:line="4" pos:column="51"/></operator><name pos:line="4" pos:column="51">StatusCode<pos:position pos:line="4" pos:column="61"/></name><operator pos:line="4" pos:column="61">::<pos:position pos:line="4" pos:column="63"/></operator><name pos:line="4" pos:column="63">INTERNAL<pos:position pos:line="4" pos:column="71"/></name></name></expr></argument>,
								<argument><expr><call><name><name pos:line="5" pos:column="65">grpc<pos:position pos:line="5" pos:column="69"/></name><operator pos:line="5" pos:column="69">::<pos:position pos:line="5" pos:column="71"/></operator><name pos:line="5" pos:column="71">string<pos:position pos:line="5" pos:column="77"/></name></name><argument_list pos:line="5" pos:column="77">(<argument><expr><literal type="string" pos:line="5" pos:column="78">"failed to query values: cannot create iterator"<pos:position pos:line="5" pos:column="126"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="127"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="128"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="129"/></return>
		}<pos:position pos:line="6" pos:column="18"/></block></then></if>

		<decl_stmt><decl><type><name><name pos:line="8" pos:column="17">grpc<pos:position pos:line="8" pos:column="21"/></name><operator pos:line="8" pos:column="21">::<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="23">Status<pos:position pos:line="8" pos:column="29"/></name></name></type> <name pos:line="8" pos:column="30">status<pos:position pos:line="8" pos:column="36"/></name> <init pos:line="8" pos:column="37">= <expr><name><name pos:line="8" pos:column="39">grpc<pos:position pos:line="8" pos:column="43"/></name><operator pos:line="8" pos:column="43">::<pos:position pos:line="8" pos:column="45"/></operator><name pos:line="8" pos:column="45">Status<pos:position pos:line="8" pos:column="51"/></name><operator pos:line="8" pos:column="51">::<pos:position pos:line="8" pos:column="53"/></operator><name pos:line="8" pos:column="53">OK<pos:position pos:line="8" pos:column="55"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="56"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">char<pos:position pos:line="9" pos:column="21"/></name> <modifier pos:line="9" pos:column="22">*<pos:position pos:line="9" pos:column="23"/></modifier></type><name pos:line="9" pos:column="23">name<pos:position pos:line="9" pos:column="27"/></name> <init pos:line="9" pos:column="28">= <expr><name pos:line="9" pos:column="30">NULL<pos:position pos:line="9" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="35"/></decl_stmt>
		<while pos:line="10" pos:column="17">while <condition pos:line="10" pos:column="23">(<expr><call><name pos:line="10" pos:column="24">uc_iterator_next<pos:position pos:line="10" pos:column="40"/></name><argument_list pos:line="10" pos:column="40">(<argument><expr><name pos:line="10" pos:column="41">iter<pos:position pos:line="10" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="47">&amp;<pos:position pos:line="10" pos:column="52"/></operator><name pos:line="10" pos:column="48">name<pos:position pos:line="10" pos:column="52"/></name></expr></argument>)<pos:position pos:line="10" pos:column="53"/></argument_list></call> <operator pos:line="10" pos:column="54">==<pos:position pos:line="10" pos:column="56"/></operator> <literal type="number" pos:line="10" pos:column="57">0<pos:position pos:line="10" pos:column="58"/></literal></expr>)<pos:position pos:line="10" pos:column="59"/></condition> <block pos:line="10" pos:column="60">{
			<decl_stmt><decl><type><name pos:line="11" pos:column="25">value_list_t<pos:position pos:line="11" pos:column="37"/></name></type> <name pos:line="11" pos:column="38">vl<pos:position pos:line="11" pos:column="40"/></name></decl>;<pos:position pos:line="11" pos:column="41"/></decl_stmt>
			<if pos:line="12" pos:column="25">if <condition pos:line="12" pos:column="28">(<expr><call><name pos:line="12" pos:column="29">parse_identifier_vl<pos:position pos:line="12" pos:column="48"/></name><argument_list pos:line="12" pos:column="48">(<argument><expr><name pos:line="12" pos:column="49">name<pos:position pos:line="12" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="55">&amp;<pos:position pos:line="12" pos:column="60"/></operator><name pos:line="12" pos:column="56">vl<pos:position pos:line="12" pos:column="58"/></name></expr></argument>)<pos:position pos:line="12" pos:column="59"/></argument_list></call> <operator pos:line="12" pos:column="60">!=<pos:position pos:line="12" pos:column="62"/></operator> <literal type="number" pos:line="12" pos:column="63">0<pos:position pos:line="12" pos:column="64"/></literal></expr>)<pos:position pos:line="12" pos:column="65"/></condition><then pos:line="12" pos:column="65"> <block pos:line="12" pos:column="66">{
				<expr_stmt><expr><name pos:line="13" pos:column="33">status<pos:position pos:line="13" pos:column="39"/></name> <operator pos:line="13" pos:column="40">=<pos:position pos:line="13" pos:column="41"/></operator> <call><name><name pos:line="13" pos:column="42">grpc<pos:position pos:line="13" pos:column="46"/></name><operator pos:line="13" pos:column="46">::<pos:position pos:line="13" pos:column="48"/></operator><name pos:line="13" pos:column="48">Status<pos:position pos:line="13" pos:column="54"/></name></name><argument_list pos:line="13" pos:column="54">(<argument><expr><name><name pos:line="13" pos:column="55">grpc<pos:position pos:line="13" pos:column="59"/></name><operator pos:line="13" pos:column="59">::<pos:position pos:line="13" pos:column="61"/></operator><name pos:line="13" pos:column="61">StatusCode<pos:position pos:line="13" pos:column="71"/></name><operator pos:line="13" pos:column="71">::<pos:position pos:line="13" pos:column="73"/></operator><name pos:line="13" pos:column="73">INTERNAL<pos:position pos:line="13" pos:column="81"/></name></name></expr></argument>,
									  <argument><expr><call><name><name pos:line="14" pos:column="75">grpc<pos:position pos:line="14" pos:column="79"/></name><operator pos:line="14" pos:column="79">::<pos:position pos:line="14" pos:column="81"/></operator><name pos:line="14" pos:column="81">string<pos:position pos:line="14" pos:column="87"/></name></name><argument_list pos:line="14" pos:column="87">(<argument><expr><literal type="string" pos:line="14" pos:column="88">"failed to parse identifier"<pos:position pos:line="14" pos:column="116"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="117"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="119"/></expr_stmt>
				<break pos:line="15" pos:column="33">break;<pos:position pos:line="15" pos:column="39"/></break>
			}<pos:position pos:line="16" pos:column="26"/></block></then></if>

			<if pos:line="18" pos:column="25">if <condition pos:line="18" pos:column="28">(<expr><operator pos:line="18" pos:column="29">!<pos:position pos:line="18" pos:column="30"/></operator><call><name pos:line="18" pos:column="30">ident_matches<pos:position pos:line="18" pos:column="43"/></name><argument_list pos:line="18" pos:column="43">(<argument><expr><operator pos:line="18" pos:column="44">&amp;<pos:position pos:line="18" pos:column="49"/></operator><name pos:line="18" pos:column="45">vl<pos:position pos:line="18" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="49">match<pos:position pos:line="18" pos:column="54"/></name></expr></argument>)<pos:position pos:line="18" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="56"/></condition><then pos:line="18" pos:column="56">
				<block type="pseudo"><continue pos:line="19" pos:column="33">continue;<pos:position pos:line="19" pos:column="42"/></continue></block></then></if>

			<if pos:line="21" pos:column="25">if <condition pos:line="21" pos:column="28">(<expr><call><name pos:line="21" pos:column="29">uc_iterator_get_time<pos:position pos:line="21" pos:column="49"/></name><argument_list pos:line="21" pos:column="49">(<argument><expr><name pos:line="21" pos:column="50">iter<pos:position pos:line="21" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="56">&amp;<pos:position pos:line="21" pos:column="61"/></operator><name><name pos:line="21" pos:column="57">vl<pos:position pos:line="21" pos:column="59"/></name><operator pos:line="21" pos:column="59">.<pos:position pos:line="21" pos:column="60"/></operator><name pos:line="21" pos:column="60">time<pos:position pos:line="21" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="65"/></argument_list></call> <operator pos:line="21" pos:column="66">&lt;<pos:position pos:line="21" pos:column="70"/></operator> <literal type="number" pos:line="21" pos:column="68">0<pos:position pos:line="21" pos:column="69"/></literal></expr>)<pos:position pos:line="21" pos:column="70"/></condition><then pos:line="21" pos:column="70"> <block pos:line="21" pos:column="71">{
				<expr_stmt><expr><name pos:line="22" pos:column="33">status<pos:position pos:line="22" pos:column="39"/></name> <operator pos:line="22" pos:column="40">=<pos:position pos:line="22" pos:column="41"/></operator> <call><name><name pos:line="22" pos:column="42">grpc<pos:position pos:line="22" pos:column="46"/></name><operator pos:line="22" pos:column="46">::<pos:position pos:line="22" pos:column="48"/></operator><name pos:line="22" pos:column="48">Status<pos:position pos:line="22" pos:column="54"/></name></name><argument_list pos:line="22" pos:column="54">(<argument><expr><name><name pos:line="22" pos:column="55">grpc<pos:position pos:line="22" pos:column="59"/></name><operator pos:line="22" pos:column="59">::<pos:position pos:line="22" pos:column="61"/></operator><name pos:line="22" pos:column="61">StatusCode<pos:position pos:line="22" pos:column="71"/></name><operator pos:line="22" pos:column="71">::<pos:position pos:line="22" pos:column="73"/></operator><name pos:line="22" pos:column="73">INTERNAL<pos:position pos:line="22" pos:column="81"/></name></name></expr></argument>,
									  <argument><expr><call><name><name pos:line="23" pos:column="75">grpc<pos:position pos:line="23" pos:column="79"/></name><operator pos:line="23" pos:column="79">::<pos:position pos:line="23" pos:column="81"/></operator><name pos:line="23" pos:column="81">string<pos:position pos:line="23" pos:column="87"/></name></name><argument_list pos:line="23" pos:column="87">(<argument><expr><literal type="string" pos:line="23" pos:column="88">"failed to retrieve value timestamp"<pos:position pos:line="23" pos:column="124"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="125"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="126"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="127"/></expr_stmt>
				<break pos:line="24" pos:column="33">break;<pos:position pos:line="24" pos:column="39"/></break>
			}<pos:position pos:line="25" pos:column="26"/></block></then></if>
			<if pos:line="26" pos:column="25">if <condition pos:line="26" pos:column="28">(<expr><call><name pos:line="26" pos:column="29">uc_iterator_get_interval<pos:position pos:line="26" pos:column="53"/></name><argument_list pos:line="26" pos:column="53">(<argument><expr><name pos:line="26" pos:column="54">iter<pos:position pos:line="26" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="60">&amp;<pos:position pos:line="26" pos:column="65"/></operator><name><name pos:line="26" pos:column="61">vl<pos:position pos:line="26" pos:column="63"/></name><operator pos:line="26" pos:column="63">.<pos:position pos:line="26" pos:column="64"/></operator><name pos:line="26" pos:column="64">interval<pos:position pos:line="26" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="73"/></argument_list></call> <operator pos:line="26" pos:column="74">&lt;<pos:position pos:line="26" pos:column="78"/></operator> <literal type="number" pos:line="26" pos:column="76">0<pos:position pos:line="26" pos:column="77"/></literal></expr>)<pos:position pos:line="26" pos:column="78"/></condition><then pos:line="26" pos:column="78"> <block pos:line="26" pos:column="79">{
				<expr_stmt><expr><name pos:line="27" pos:column="33">status<pos:position pos:line="27" pos:column="39"/></name> <operator pos:line="27" pos:column="40">=<pos:position pos:line="27" pos:column="41"/></operator> <call><name><name pos:line="27" pos:column="42">grpc<pos:position pos:line="27" pos:column="46"/></name><operator pos:line="27" pos:column="46">::<pos:position pos:line="27" pos:column="48"/></operator><name pos:line="27" pos:column="48">Status<pos:position pos:line="27" pos:column="54"/></name></name><argument_list pos:line="27" pos:column="54">(<argument><expr><name><name pos:line="27" pos:column="55">grpc<pos:position pos:line="27" pos:column="59"/></name><operator pos:line="27" pos:column="59">::<pos:position pos:line="27" pos:column="61"/></operator><name pos:line="27" pos:column="61">StatusCode<pos:position pos:line="27" pos:column="71"/></name><operator pos:line="27" pos:column="71">::<pos:position pos:line="27" pos:column="73"/></operator><name pos:line="27" pos:column="73">INTERNAL<pos:position pos:line="27" pos:column="81"/></name></name></expr></argument>,
									  <argument><expr><call><name><name pos:line="28" pos:column="75">grpc<pos:position pos:line="28" pos:column="79"/></name><operator pos:line="28" pos:column="79">::<pos:position pos:line="28" pos:column="81"/></operator><name pos:line="28" pos:column="81">string<pos:position pos:line="28" pos:column="87"/></name></name><argument_list pos:line="28" pos:column="87">(<argument><expr><literal type="string" pos:line="28" pos:column="88">"failed to retrieve value interval"<pos:position pos:line="28" pos:column="123"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="124"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="125"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="126"/></expr_stmt>
				<break pos:line="29" pos:column="33">break;<pos:position pos:line="29" pos:column="39"/></break>
			}<pos:position pos:line="30" pos:column="26"/></block></then></if>
			<if pos:line="31" pos:column="25">if <condition pos:line="31" pos:column="28">(<expr><call><name pos:line="31" pos:column="29">uc_iterator_get_values<pos:position pos:line="31" pos:column="51"/></name><argument_list pos:line="31" pos:column="51">(<argument><expr><name pos:line="31" pos:column="52">iter<pos:position pos:line="31" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="58">&amp;<pos:position pos:line="31" pos:column="63"/></operator><name><name pos:line="31" pos:column="59">vl<pos:position pos:line="31" pos:column="61"/></name><operator pos:line="31" pos:column="61">.<pos:position pos:line="31" pos:column="62"/></operator><name pos:line="31" pos:column="62">values<pos:position pos:line="31" pos:column="68"/></name></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="70">&amp;<pos:position pos:line="31" pos:column="75"/></operator><name><name pos:line="31" pos:column="71">vl<pos:position pos:line="31" pos:column="73"/></name><operator pos:line="31" pos:column="73">.<pos:position pos:line="31" pos:column="74"/></operator><name pos:line="31" pos:column="74">values_len<pos:position pos:line="31" pos:column="84"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="85"/></argument_list></call> <operator pos:line="31" pos:column="86">&lt;<pos:position pos:line="31" pos:column="90"/></operator> <literal type="number" pos:line="31" pos:column="88">0<pos:position pos:line="31" pos:column="89"/></literal></expr>)<pos:position pos:line="31" pos:column="90"/></condition><then pos:line="31" pos:column="90"> <block pos:line="31" pos:column="91">{
				<expr_stmt><expr><name pos:line="32" pos:column="33">status<pos:position pos:line="32" pos:column="39"/></name> <operator pos:line="32" pos:column="40">=<pos:position pos:line="32" pos:column="41"/></operator> <call><name><name pos:line="32" pos:column="42">grpc<pos:position pos:line="32" pos:column="46"/></name><operator pos:line="32" pos:column="46">::<pos:position pos:line="32" pos:column="48"/></operator><name pos:line="32" pos:column="48">Status<pos:position pos:line="32" pos:column="54"/></name></name><argument_list pos:line="32" pos:column="54">(<argument><expr><name><name pos:line="32" pos:column="55">grpc<pos:position pos:line="32" pos:column="59"/></name><operator pos:line="32" pos:column="59">::<pos:position pos:line="32" pos:column="61"/></operator><name pos:line="32" pos:column="61">StatusCode<pos:position pos:line="32" pos:column="71"/></name><operator pos:line="32" pos:column="71">::<pos:position pos:line="32" pos:column="73"/></operator><name pos:line="32" pos:column="73">INTERNAL<pos:position pos:line="32" pos:column="81"/></name></name></expr></argument>,
									  <argument><expr><call><name><name pos:line="33" pos:column="75">grpc<pos:position pos:line="33" pos:column="79"/></name><operator pos:line="33" pos:column="79">::<pos:position pos:line="33" pos:column="81"/></operator><name pos:line="33" pos:column="81">string<pos:position pos:line="33" pos:column="87"/></name></name><argument_list pos:line="33" pos:column="87">(<argument><expr><literal type="string" pos:line="33" pos:column="88">"failed to retrieve values"<pos:position pos:line="33" pos:column="115"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="116"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="117"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="118"/></expr_stmt>
				<break pos:line="34" pos:column="33">break;<pos:position pos:line="34" pos:column="39"/></break>
			}<pos:position pos:line="35" pos:column="26"/></block></then></if>

			<expr_stmt><expr><call><name><name pos:line="37" pos:column="25">value_lists<pos:position pos:line="37" pos:column="36"/></name><operator pos:line="37" pos:column="36">-&gt;<pos:position pos:line="37" pos:column="41"/></operator><name pos:line="37" pos:column="38">push<pos:position pos:line="37" pos:column="42"/></name></name><argument_list pos:line="37" pos:column="42">(<argument><expr><name pos:line="37" pos:column="43">vl<pos:position pos:line="37" pos:column="45"/></name></expr></argument>)<pos:position pos:line="37" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="47"/></expr_stmt>
		}<pos:position pos:line="38" pos:column="18"/></block></while> <comment type="line" pos:line="38" pos:column="19">// while (uc_iterator_next(iter, &amp;name) == 0)</comment>

		<expr_stmt><expr><call><name pos:line="40" pos:column="17">uc_iterator_destroy<pos:position pos:line="40" pos:column="36"/></name><argument_list pos:line="40" pos:column="36">(<argument><expr><name pos:line="40" pos:column="37">iter<pos:position pos:line="40" pos:column="41"/></name></expr></argument>)<pos:position pos:line="40" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="43"/></expr_stmt>
		<return pos:line="41" pos:column="17">return <expr><name pos:line="41" pos:column="24">status<pos:position pos:line="41" pos:column="30"/></name></expr>;<pos:position pos:line="41" pos:column="31"/></return>
	}<pos:position pos:line="42" pos:column="10"/></block></function></unit>

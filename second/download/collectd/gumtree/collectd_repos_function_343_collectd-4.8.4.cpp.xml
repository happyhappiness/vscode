<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_343_collectd-4.8.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">csnmp_read_host<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">user_data_t<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">ud<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">host_definition_t<pos:position pos:line="3" pos:column="20"/></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">host<pos:position pos:line="3" pos:column="26"/></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">time_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">time_start<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">time_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">time_end<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">status<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">success<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">i<pos:position pos:line="8" pos:column="8"/></name></decl>;<pos:position pos:line="8" pos:column="9"/></decl_stmt>

  <expr_stmt><expr><name pos:line="10" pos:column="3">host<pos:position pos:line="10" pos:column="7"/></name> <operator pos:line="10" pos:column="8">=<pos:position pos:line="10" pos:column="9"/></operator> <name><name pos:line="10" pos:column="10">ud<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">-&gt;<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="14">data<pos:position pos:line="10" pos:column="18"/></name></name></expr>;<pos:position pos:line="10" pos:column="19"/></expr_stmt>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name><name pos:line="12" pos:column="7">host<pos:position pos:line="12" pos:column="11"/></name><operator pos:line="12" pos:column="11">-&gt;<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="13">interval<pos:position pos:line="12" pos:column="21"/></name></name> <operator pos:line="12" pos:column="22">==<pos:position pos:line="12" pos:column="24"/></operator> <literal type="number" pos:line="12" pos:column="25">0<pos:position pos:line="12" pos:column="26"/></literal></expr>)<pos:position pos:line="12" pos:column="27"/></condition><then pos:line="12" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="13" pos:column="5">host<pos:position pos:line="13" pos:column="9"/></name><operator pos:line="13" pos:column="9">-&gt;<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="11">interval<pos:position pos:line="13" pos:column="19"/></name></name> <operator pos:line="13" pos:column="20">=<pos:position pos:line="13" pos:column="21"/></operator> <name pos:line="13" pos:column="22">interval_g<pos:position pos:line="13" pos:column="32"/></name></expr>;<pos:position pos:line="13" pos:column="33"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="15" pos:column="3">time_start<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <call><name pos:line="15" pos:column="16">time<pos:position pos:line="15" pos:column="20"/></name> <argument_list pos:line="15" pos:column="21">(<argument><expr><name pos:line="15" pos:column="22">NULL<pos:position pos:line="15" pos:column="26"/></name></expr></argument>)<pos:position pos:line="15" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="16" pos:column="3">DEBUG<pos:position pos:line="16" pos:column="8"/></name> <argument_list pos:line="16" pos:column="9">(<argument><expr><literal type="string" pos:line="16" pos:column="10">"snmp plugin: csnmp_read_host (%s) started at %u;"<pos:position pos:line="16" pos:column="60"/></literal></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="62">host<pos:position pos:line="16" pos:column="66"/></name><operator pos:line="16" pos:column="66">-&gt;<pos:position pos:line="16" pos:column="71"/></operator><name pos:line="16" pos:column="68">name<pos:position pos:line="16" pos:column="72"/></name></name></expr></argument>,
      <argument><expr><operator pos:line="17" pos:column="7">(<pos:position pos:line="17" pos:column="8"/></operator><name pos:line="17" pos:column="8">unsigned<pos:position pos:line="17" pos:column="16"/></name> <name pos:line="17" pos:column="17">int<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">)<pos:position pos:line="17" pos:column="21"/></operator> <name pos:line="17" pos:column="22">time_start<pos:position pos:line="17" pos:column="32"/></name></expr></argument>)<pos:position pos:line="17" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="34"/></expr_stmt>

  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><name><name pos:line="19" pos:column="7">host<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">-&gt;<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="13">sess_handle<pos:position pos:line="19" pos:column="24"/></name></name> <operator pos:line="19" pos:column="25">==<pos:position pos:line="19" pos:column="27"/></operator> <name pos:line="19" pos:column="28">NULL<pos:position pos:line="19" pos:column="32"/></name></expr>)<pos:position pos:line="19" pos:column="33"/></condition><then pos:line="19" pos:column="33">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="5">csnmp_host_open_session<pos:position pos:line="20" pos:column="28"/></name> <argument_list pos:line="20" pos:column="29">(<argument><expr><name pos:line="20" pos:column="30">host<pos:position pos:line="20" pos:column="34"/></name></expr></argument>)<pos:position pos:line="20" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="36"/></expr_stmt></block></then></if>

  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><name><name pos:line="22" pos:column="7">host<pos:position pos:line="22" pos:column="11"/></name><operator pos:line="22" pos:column="11">-&gt;<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="13">sess_handle<pos:position pos:line="22" pos:column="24"/></name></name> <operator pos:line="22" pos:column="25">==<pos:position pos:line="22" pos:column="27"/></operator> <name pos:line="22" pos:column="28">NULL<pos:position pos:line="22" pos:column="32"/></name></expr>)<pos:position pos:line="22" pos:column="33"/></condition><then pos:line="22" pos:column="33">
    <block type="pseudo"><return pos:line="23" pos:column="5">return <expr><operator pos:line="23" pos:column="12">(<pos:position pos:line="23" pos:column="13"/></operator><operator pos:line="23" pos:column="13">-<pos:position pos:line="23" pos:column="14"/></operator><literal type="number" pos:line="23" pos:column="14">1<pos:position pos:line="23" pos:column="15"/></literal><operator pos:line="23" pos:column="15">)<pos:position pos:line="23" pos:column="16"/></operator></expr>;<pos:position pos:line="23" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="25" pos:column="3">success<pos:position pos:line="25" pos:column="10"/></name> <operator pos:line="25" pos:column="11">=<pos:position pos:line="25" pos:column="12"/></operator> <literal type="number" pos:line="25" pos:column="13">0<pos:position pos:line="25" pos:column="14"/></literal></expr>;<pos:position pos:line="25" pos:column="15"/></expr_stmt>
  <for pos:line="26" pos:column="3">for <control pos:line="26" pos:column="7">(<init><expr><name pos:line="26" pos:column="8">i<pos:position pos:line="26" pos:column="9"/></name> <operator pos:line="26" pos:column="10">=<pos:position pos:line="26" pos:column="11"/></operator> <literal type="number" pos:line="26" pos:column="12">0<pos:position pos:line="26" pos:column="13"/></literal></expr>;<pos:position pos:line="26" pos:column="14"/></init> <condition><expr><name pos:line="26" pos:column="15">i<pos:position pos:line="26" pos:column="16"/></name> <operator pos:line="26" pos:column="17">&lt;<pos:position pos:line="26" pos:column="21"/></operator> <name><name pos:line="26" pos:column="19">host<pos:position pos:line="26" pos:column="23"/></name><operator pos:line="26" pos:column="23">-&gt;<pos:position pos:line="26" pos:column="28"/></operator><name pos:line="26" pos:column="25">data_list_len<pos:position pos:line="26" pos:column="38"/></name></name></expr>;<pos:position pos:line="26" pos:column="39"/></condition> <incr><expr><name pos:line="26" pos:column="40">i<pos:position pos:line="26" pos:column="41"/></name><operator pos:line="26" pos:column="41">++<pos:position pos:line="26" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="26" pos:column="44"/></control>
  <block pos:line="27" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="28" pos:column="5">data_definition_t<pos:position pos:line="28" pos:column="22"/></name> <modifier pos:line="28" pos:column="23">*<pos:position pos:line="28" pos:column="24"/></modifier></type><name pos:line="28" pos:column="24">data<pos:position pos:line="28" pos:column="28"/></name> <init pos:line="28" pos:column="29">= <expr><name><name pos:line="28" pos:column="31">host<pos:position pos:line="28" pos:column="35"/></name><operator pos:line="28" pos:column="35">-&gt;<pos:position pos:line="28" pos:column="40"/></operator><name pos:line="28" pos:column="37">data_list<pos:position pos:line="28" pos:column="46"/></name><index pos:line="28" pos:column="46">[<expr><name pos:line="28" pos:column="47">i<pos:position pos:line="28" pos:column="48"/></name></expr>]<pos:position pos:line="28" pos:column="49"/></index></name></expr></init></decl>;<pos:position pos:line="28" pos:column="50"/></decl_stmt>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name><name pos:line="30" pos:column="9">data<pos:position pos:line="30" pos:column="13"/></name><operator pos:line="30" pos:column="13">-&gt;<pos:position pos:line="30" pos:column="18"/></operator><name pos:line="30" pos:column="15">is_table<pos:position pos:line="30" pos:column="23"/></name></name></expr>)<pos:position pos:line="30" pos:column="24"/></condition><then pos:line="30" pos:column="24">
      <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="7">status<pos:position pos:line="31" pos:column="13"/></name> <operator pos:line="31" pos:column="14">=<pos:position pos:line="31" pos:column="15"/></operator> <call><name pos:line="31" pos:column="16">csnmp_read_table<pos:position pos:line="31" pos:column="32"/></name> <argument_list pos:line="31" pos:column="33">(<argument><expr><name pos:line="31" pos:column="34">host<pos:position pos:line="31" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="40">data<pos:position pos:line="31" pos:column="44"/></name></expr></argument>)<pos:position pos:line="31" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="46"/></expr_stmt></block></then>
    <else pos:line="32" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="7">status<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">=<pos:position pos:line="33" pos:column="15"/></operator> <call><name pos:line="33" pos:column="16">csnmp_read_value<pos:position pos:line="33" pos:column="32"/></name> <argument_list pos:line="33" pos:column="33">(<argument><expr><name pos:line="33" pos:column="34">host<pos:position pos:line="33" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="40">data<pos:position pos:line="33" pos:column="44"/></name></expr></argument>)<pos:position pos:line="33" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="46"/></expr_stmt></block></else></if>

    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name pos:line="35" pos:column="9">status<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">==<pos:position pos:line="35" pos:column="18"/></operator> <literal type="number" pos:line="35" pos:column="19">0<pos:position pos:line="35" pos:column="20"/></literal></expr>)<pos:position pos:line="35" pos:column="21"/></condition><then pos:line="35" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="7">success<pos:position pos:line="36" pos:column="14"/></name><operator pos:line="36" pos:column="14">++<pos:position pos:line="36" pos:column="16"/></operator></expr>;<pos:position pos:line="36" pos:column="17"/></expr_stmt></block></then></if>
  }<pos:position pos:line="37" pos:column="4"/></block></for>

  <expr_stmt><expr><name pos:line="39" pos:column="3">time_end<pos:position pos:line="39" pos:column="11"/></name> <operator pos:line="39" pos:column="12">=<pos:position pos:line="39" pos:column="13"/></operator> <call><name pos:line="39" pos:column="14">time<pos:position pos:line="39" pos:column="18"/></name> <argument_list pos:line="39" pos:column="19">(<argument><expr><name pos:line="39" pos:column="20">NULL<pos:position pos:line="39" pos:column="24"/></name></expr></argument>)<pos:position pos:line="39" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="40" pos:column="3">DEBUG<pos:position pos:line="40" pos:column="8"/></name> <argument_list pos:line="40" pos:column="9">(<argument><expr><literal type="string" pos:line="40" pos:column="10">"snmp plugin: csnmp_read_host (%s) finished at %u;"<pos:position pos:line="40" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="63">host<pos:position pos:line="40" pos:column="67"/></name><operator pos:line="40" pos:column="67">-&gt;<pos:position pos:line="40" pos:column="72"/></operator><name pos:line="40" pos:column="69">name<pos:position pos:line="40" pos:column="73"/></name></name></expr></argument>,
      <argument><expr><operator pos:line="41" pos:column="7">(<pos:position pos:line="41" pos:column="8"/></operator><name pos:line="41" pos:column="8">unsigned<pos:position pos:line="41" pos:column="16"/></name> <name pos:line="41" pos:column="17">int<pos:position pos:line="41" pos:column="20"/></name><operator pos:line="41" pos:column="20">)<pos:position pos:line="41" pos:column="21"/></operator> <name pos:line="41" pos:column="22">time_end<pos:position pos:line="41" pos:column="30"/></name></expr></argument>)<pos:position pos:line="41" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="32"/></expr_stmt>
  <if pos:line="42" pos:column="3">if <condition pos:line="42" pos:column="6">(<expr><call pos:line="42" pos:column="7">(<name pos:line="42" pos:column="8">uint32_t<pos:position pos:line="42" pos:column="16"/></name>) <argument_list pos:line="42" pos:column="18">(<argument><expr><name pos:line="42" pos:column="19">time_end<pos:position pos:line="42" pos:column="27"/></name> <operator pos:line="42" pos:column="28">-<pos:position pos:line="42" pos:column="29"/></operator> <name pos:line="42" pos:column="30">time_start<pos:position pos:line="42" pos:column="40"/></name></expr></argument>)<pos:position pos:line="42" pos:column="41"/></argument_list></call> <operator pos:line="42" pos:column="42">&gt;<pos:position pos:line="42" pos:column="46"/></operator> <name><name pos:line="42" pos:column="44">host<pos:position pos:line="42" pos:column="48"/></name><operator pos:line="42" pos:column="48">-&gt;<pos:position pos:line="42" pos:column="53"/></operator><name pos:line="42" pos:column="50">interval<pos:position pos:line="42" pos:column="58"/></name></name></expr>)<pos:position pos:line="42" pos:column="59"/></condition><then pos:line="42" pos:column="59">
  <block pos:line="43" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">WARNING<pos:position pos:line="44" pos:column="12"/></name> <argument_list pos:line="44" pos:column="13">(<argument><expr><literal type="string" pos:line="44" pos:column="14">"snmp plugin: Host `%s' should be queried every %"<pos:position pos:line="44" pos:column="64"/></literal><name pos:line="44" pos:column="64">PRIu32<pos:position pos:line="44" pos:column="70"/></name>
	<literal type="string" pos:line="45" pos:column="9">" seconds, but reading all values takes %u seconds."<pos:position pos:line="45" pos:column="61"/></literal></expr></argument>,
	<argument><expr><name><name pos:line="46" pos:column="9">host<pos:position pos:line="46" pos:column="13"/></name><operator pos:line="46" pos:column="13">-&gt;<pos:position pos:line="46" pos:column="18"/></operator><name pos:line="46" pos:column="15">name<pos:position pos:line="46" pos:column="19"/></name></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="21">host<pos:position pos:line="46" pos:column="25"/></name><operator pos:line="46" pos:column="25">-&gt;<pos:position pos:line="46" pos:column="30"/></operator><name pos:line="46" pos:column="27">interval<pos:position pos:line="46" pos:column="35"/></name></name></expr></argument>, <argument><expr><call pos:line="46" pos:column="37">(<name pos:line="46" pos:column="38">unsigned<pos:position pos:line="46" pos:column="46"/></name> <name pos:line="46" pos:column="47">int<pos:position pos:line="46" pos:column="50"/></name>) <argument_list pos:line="46" pos:column="52">(<argument><expr><name pos:line="46" pos:column="53">time_end<pos:position pos:line="46" pos:column="61"/></name> <operator pos:line="46" pos:column="62">-<pos:position pos:line="46" pos:column="63"/></operator> <name pos:line="46" pos:column="64">time_start<pos:position pos:line="46" pos:column="74"/></name></expr></argument>)<pos:position pos:line="46" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="77"/></expr_stmt>
  }<pos:position pos:line="47" pos:column="4"/></block></then></if>

  <if pos:line="49" pos:column="3">if <condition pos:line="49" pos:column="6">(<expr><name pos:line="49" pos:column="7">success<pos:position pos:line="49" pos:column="14"/></name> <operator pos:line="49" pos:column="15">==<pos:position pos:line="49" pos:column="17"/></operator> <literal type="number" pos:line="49" pos:column="18">0<pos:position pos:line="49" pos:column="19"/></literal></expr>)<pos:position pos:line="49" pos:column="20"/></condition><then pos:line="49" pos:column="20">
    <block type="pseudo"><return pos:line="50" pos:column="5">return <expr><operator pos:line="50" pos:column="12">(<pos:position pos:line="50" pos:column="13"/></operator><operator pos:line="50" pos:column="13">-<pos:position pos:line="50" pos:column="14"/></operator><literal type="number" pos:line="50" pos:column="14">1<pos:position pos:line="50" pos:column="15"/></literal><operator pos:line="50" pos:column="15">)<pos:position pos:line="50" pos:column="16"/></operator></expr>;<pos:position pos:line="50" pos:column="17"/></return></block></then></if>

  <return pos:line="52" pos:column="3">return <expr><operator pos:line="52" pos:column="10">(<pos:position pos:line="52" pos:column="11"/></operator><literal type="number" pos:line="52" pos:column="11">0<pos:position pos:line="52" pos:column="12"/></literal><operator pos:line="52" pos:column="12">)<pos:position pos:line="52" pos:column="13"/></operator></expr>;<pos:position pos:line="52" pos:column="14"/></return>
}<pos:position pos:line="53" pos:column="2"/></block></function></unit>

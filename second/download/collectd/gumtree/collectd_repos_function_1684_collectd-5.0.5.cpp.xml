<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1684_collectd-5.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">create_register_callback<pos:position pos:line="1" pos:column="36"/></name> <parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">llist_t<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier><modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">list<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="54">/* {{{ */</comment>
		<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">char<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">name<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="35">void<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">callback<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="51">user_data_t<pos:position pos:line="2" pos:column="62"/></name> <modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="64">ud<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="67"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">callback_func_t<pos:position pos:line="4" pos:column="24"/></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="26">cf<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>

	<expr_stmt><expr><name pos:line="6" pos:column="9">cf<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <operator pos:line="6" pos:column="14">(<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="15">callback_func_t<pos:position pos:line="6" pos:column="30"/></name> <operator pos:line="6" pos:column="31">*<pos:position pos:line="6" pos:column="32"/></operator><operator pos:line="6" pos:column="32">)<pos:position pos:line="6" pos:column="33"/></operator> <call><name pos:line="6" pos:column="34">malloc<pos:position pos:line="6" pos:column="40"/></name> <argument_list pos:line="6" pos:column="41">(<argument><expr><sizeof pos:line="6" pos:column="42">sizeof <argument_list pos:line="6" pos:column="49">(<argument><expr><operator pos:line="6" pos:column="50">*<pos:position pos:line="6" pos:column="51"/></operator><name pos:line="6" pos:column="51">cf<pos:position pos:line="6" pos:column="53"/></name></expr></argument>)<pos:position pos:line="6" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="56"/></expr_stmt>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">cf<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">==<pos:position pos:line="7" pos:column="18"/></operator> <name pos:line="7" pos:column="19">NULL<pos:position pos:line="7" pos:column="23"/></name></expr>)<pos:position pos:line="7" pos:column="24"/></condition><then pos:line="7" pos:column="24">
	<block pos:line="8" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">ERROR<pos:position pos:line="9" pos:column="22"/></name> <argument_list pos:line="9" pos:column="23">(<argument><expr><literal type="string" pos:line="9" pos:column="24">"plugin: create_register_callback: malloc failed."<pos:position pos:line="9" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="76"/></expr_stmt>
		<return pos:line="10" pos:column="17">return <expr><operator pos:line="10" pos:column="24">(<pos:position pos:line="10" pos:column="25"/></operator><operator pos:line="10" pos:column="25">-<pos:position pos:line="10" pos:column="26"/></operator><literal type="number" pos:line="10" pos:column="26">1<pos:position pos:line="10" pos:column="27"/></literal><operator pos:line="10" pos:column="27">)<pos:position pos:line="10" pos:column="28"/></operator></expr>;<pos:position pos:line="10" pos:column="29"/></return>
	}<pos:position pos:line="11" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">memset<pos:position pos:line="12" pos:column="15"/></name> <argument_list pos:line="12" pos:column="16">(<argument><expr><name pos:line="12" pos:column="17">cf<pos:position pos:line="12" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="21">0<pos:position pos:line="12" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="24">sizeof <argument_list pos:line="12" pos:column="31">(<argument><expr><operator pos:line="12" pos:column="32">*<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="33">cf<pos:position pos:line="12" pos:column="35"/></name></expr></argument>)<pos:position pos:line="12" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="38"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="14" pos:column="9">cf<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">-&gt;<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="13">cf_callback<pos:position pos:line="14" pos:column="24"/></name></name> <operator pos:line="14" pos:column="25">=<pos:position pos:line="14" pos:column="26"/></operator> <name pos:line="14" pos:column="27">callback<pos:position pos:line="14" pos:column="35"/></name></expr>;<pos:position pos:line="14" pos:column="36"/></expr_stmt>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">ud<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">==<pos:position pos:line="15" pos:column="18"/></operator> <name pos:line="15" pos:column="19">NULL<pos:position pos:line="15" pos:column="23"/></name></expr>)<pos:position pos:line="15" pos:column="24"/></condition><then pos:line="15" pos:column="24">
	<block pos:line="16" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="17" pos:column="17">cf<pos:position pos:line="17" pos:column="19"/></name><operator pos:line="17" pos:column="19">-&gt;<pos:position pos:line="17" pos:column="24"/></operator><name pos:line="17" pos:column="21">cf_udata<pos:position pos:line="17" pos:column="29"/></name><operator pos:line="17" pos:column="29">.<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="30">data<pos:position pos:line="17" pos:column="34"/></name></name> <operator pos:line="17" pos:column="35">=<pos:position pos:line="17" pos:column="36"/></operator> <name pos:line="17" pos:column="37">NULL<pos:position pos:line="17" pos:column="41"/></name></expr>;<pos:position pos:line="17" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="18" pos:column="17">cf<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">-&gt;<pos:position pos:line="18" pos:column="24"/></operator><name pos:line="18" pos:column="21">cf_udata<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">.<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="30">free_func<pos:position pos:line="18" pos:column="39"/></name></name> <operator pos:line="18" pos:column="40">=<pos:position pos:line="18" pos:column="41"/></operator> <name pos:line="18" pos:column="42">NULL<pos:position pos:line="18" pos:column="46"/></name></expr>;<pos:position pos:line="18" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="19" pos:column="10"/></block></then>
	<else pos:line="20" pos:column="9">else
	<block pos:line="21" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="22" pos:column="17">cf<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">-&gt;<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="21">cf_udata<pos:position pos:line="22" pos:column="29"/></name></name> <operator pos:line="22" pos:column="30">=<pos:position pos:line="22" pos:column="31"/></operator> <operator pos:line="22" pos:column="32">*<pos:position pos:line="22" pos:column="33"/></operator><name pos:line="22" pos:column="33">ud<pos:position pos:line="22" pos:column="35"/></name></expr>;<pos:position pos:line="22" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="23" pos:column="10"/></block></else></if>

	<return pos:line="25" pos:column="9">return <expr><operator pos:line="25" pos:column="16">(<pos:position pos:line="25" pos:column="17"/></operator><call><name pos:line="25" pos:column="17">register_callback<pos:position pos:line="25" pos:column="34"/></name> <argument_list pos:line="25" pos:column="35">(<argument><expr><name pos:line="25" pos:column="36">list<pos:position pos:line="25" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="42">name<pos:position pos:line="25" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="48">cf<pos:position pos:line="25" pos:column="50"/></name></expr></argument>)<pos:position pos:line="25" pos:column="51"/></argument_list></call><operator pos:line="25" pos:column="51">)<pos:position pos:line="25" pos:column="52"/></operator></expr>;<pos:position pos:line="25" pos:column="53"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1722_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cx_handle_single_value_xpath<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">xmlXPathContextPtr<pos:position pos:line="1" pos:column="59"/></name></type> <name pos:line="1" pos:column="60">xpath_ctx<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="71">/* {{{ */</comment>
                                        <parameter><decl><type><name pos:line="2" pos:column="41">cx_xpath_t<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">xpath<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="60">const<pos:position pos:line="2" pos:column="65"/></specifier> <name pos:line="2" pos:column="66">data_set_t<pos:position pos:line="2" pos:column="76"/></name> <modifier pos:line="2" pos:column="77">*<pos:position pos:line="2" pos:column="78"/></modifier></type><name pos:line="2" pos:column="78">ds<pos:position pos:line="2" pos:column="80"/></name></decl></parameter>,
                                        <parameter><decl><type><name pos:line="3" pos:column="41">value_list_t<pos:position pos:line="3" pos:column="53"/></name> <modifier pos:line="3" pos:column="54">*<pos:position pos:line="3" pos:column="55"/></modifier></type><name pos:line="3" pos:column="55">vl<pos:position pos:line="3" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="59">int<pos:position pos:line="3" pos:column="62"/></name></type> <name pos:line="3" pos:column="63">index<pos:position pos:line="3" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="69"/></parameter_list> <block pos:line="3" pos:column="70">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">xmlXPathObjectPtr<pos:position pos:line="4" pos:column="20"/></name></type> <name pos:line="4" pos:column="21">values_node_obj<pos:position pos:line="4" pos:column="36"/></name></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">xmlNodeSetPtr<pos:position pos:line="5" pos:column="16"/></name></type> <name pos:line="5" pos:column="17">values_node<pos:position pos:line="5" pos:column="28"/></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">tmp_size<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">node_value<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>

  <expr_stmt><expr><name pos:line="9" pos:column="3">values_node_obj<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">=<pos:position pos:line="9" pos:column="20"/></operator>
      <macro><name pos:line="10" pos:column="7">cx_evaluate_xpath<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">(<argument pos:line="10" pos:column="25">xpath_ctx<pos:position pos:line="10" pos:column="34"/></argument>, <argument pos:line="10" pos:column="36">BAD_CAST xpath-&gt;values[index].path<pos:position pos:line="10" pos:column="70"/></argument>)<pos:position pos:line="10" pos:column="71"/></argument_list></macro></expr>;<pos:position pos:line="10" pos:column="72"/></expr_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">values_node_obj<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">==<pos:position pos:line="11" pos:column="25"/></operator> <name pos:line="11" pos:column="26">NULL<pos:position pos:line="11" pos:column="30"/></name></expr>)<pos:position pos:line="11" pos:column="31"/></condition><then pos:line="11" pos:column="31">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">(<pos:position pos:line="12" pos:column="13"/></operator><operator pos:line="12" pos:column="13">-<pos:position pos:line="12" pos:column="14"/></operator><literal type="number" pos:line="12" pos:column="14">1<pos:position pos:line="12" pos:column="15"/></literal><operator pos:line="12" pos:column="15">)<pos:position pos:line="12" pos:column="16"/></operator></expr>;<pos:position pos:line="12" pos:column="17"/></return></block></then></if> <comment type="block" pos:line="12" pos:column="18">/* Error already logged. */</comment>

  <expr_stmt><expr><name pos:line="14" pos:column="3">values_node<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">=<pos:position pos:line="14" pos:column="16"/></operator> <name><name pos:line="14" pos:column="17">values_node_obj<pos:position pos:line="14" pos:column="32"/></name><operator pos:line="14" pos:column="32">-&gt;<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="34">nodesetval<pos:position pos:line="14" pos:column="44"/></name></name></expr>;<pos:position pos:line="14" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><name pos:line="15" pos:column="3">tmp_size<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">=<pos:position pos:line="15" pos:column="13"/></operator> <ternary><condition><expr><operator pos:line="15" pos:column="14">(<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="15">values_node<pos:position pos:line="15" pos:column="26"/></name><operator pos:line="15" pos:column="26">)<pos:position pos:line="15" pos:column="27"/></operator></expr> ?<pos:position pos:line="15" pos:column="29"/></condition><then pos:line="15" pos:column="29"> <expr><name><name pos:line="15" pos:column="30">values_node<pos:position pos:line="15" pos:column="41"/></name><operator pos:line="15" pos:column="41">-&gt;<pos:position pos:line="15" pos:column="46"/></operator><name pos:line="15" pos:column="43">nodeNr<pos:position pos:line="15" pos:column="49"/></name></name></expr> <pos:position pos:line="15" pos:column="50"/></then><else pos:line="15" pos:column="50">: <expr><literal type="number" pos:line="15" pos:column="52">0<pos:position pos:line="15" pos:column="53"/></literal></expr></else></ternary></expr>;<pos:position pos:line="15" pos:column="54"/></expr_stmt>

  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">tmp_size<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">==<pos:position pos:line="17" pos:column="18"/></operator> <literal type="number" pos:line="17" pos:column="19">0<pos:position pos:line="17" pos:column="20"/></literal></expr>)<pos:position pos:line="17" pos:column="21"/></condition><then pos:line="17" pos:column="21"> <block pos:line="17" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">WARNING<pos:position pos:line="18" pos:column="12"/></name><argument_list pos:line="18" pos:column="12">(<argument><expr><literal type="string" pos:line="18" pos:column="13">"curl_xml plugin: "<pos:position pos:line="18" pos:column="32"/></literal>
            <literal type="string" pos:line="19" pos:column="13">"relative xpath expression \"%s\" doesn't match any of the nodes. "<pos:position pos:line="19" pos:column="80"/></literal>
            <literal type="string" pos:line="20" pos:column="13">"Skipping..."<pos:position pos:line="20" pos:column="26"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="21" pos:column="13">xpath<pos:position pos:line="21" pos:column="18"/></name><operator pos:line="21" pos:column="18">-&gt;<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="20">values<pos:position pos:line="21" pos:column="26"/></name><index pos:line="21" pos:column="26">[<expr><name pos:line="21" pos:column="27">index<pos:position pos:line="21" pos:column="32"/></name></expr>]<pos:position pos:line="21" pos:column="33"/></index></name><operator pos:line="21" pos:column="33">.<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="34">path<pos:position pos:line="21" pos:column="38"/></name></expr></argument>)<pos:position pos:line="21" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">xmlXPathFreeObject<pos:position pos:line="22" pos:column="23"/></name><argument_list pos:line="22" pos:column="23">(<argument><expr><name pos:line="22" pos:column="24">values_node_obj<pos:position pos:line="22" pos:column="39"/></name></expr></argument>)<pos:position pos:line="22" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="41"/></expr_stmt>
    <return pos:line="23" pos:column="5">return <expr><operator pos:line="23" pos:column="12">(<pos:position pos:line="23" pos:column="13"/></operator><operator pos:line="23" pos:column="13">-<pos:position pos:line="23" pos:column="14"/></operator><literal type="number" pos:line="23" pos:column="14">1<pos:position pos:line="23" pos:column="15"/></literal><operator pos:line="23" pos:column="15">)<pos:position pos:line="23" pos:column="16"/></operator></expr>;<pos:position pos:line="23" pos:column="17"/></return>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>

  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><name pos:line="26" pos:column="7">tmp_size<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">&gt;<pos:position pos:line="26" pos:column="20"/></operator> <literal type="number" pos:line="26" pos:column="18">1<pos:position pos:line="26" pos:column="19"/></literal></expr>)<pos:position pos:line="26" pos:column="20"/></condition><then pos:line="26" pos:column="20"> <block pos:line="26" pos:column="21">{
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">WARNING<pos:position pos:line="27" pos:column="12"/></name><argument_list pos:line="27" pos:column="12">(<argument><expr><literal type="string" pos:line="27" pos:column="13">"curl_xml plugin: "<pos:position pos:line="27" pos:column="32"/></literal>
            <literal type="string" pos:line="28" pos:column="13">"relative xpath expression \"%s\" is expected to return "<pos:position pos:line="28" pos:column="70"/></literal>
            <literal type="string" pos:line="29" pos:column="13">"only one node. Skipping..."<pos:position pos:line="29" pos:column="41"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="30" pos:column="13">xpath<pos:position pos:line="30" pos:column="18"/></name><operator pos:line="30" pos:column="18">-&gt;<pos:position pos:line="30" pos:column="23"/></operator><name pos:line="30" pos:column="20">values<pos:position pos:line="30" pos:column="26"/></name><index pos:line="30" pos:column="26">[<expr><name pos:line="30" pos:column="27">index<pos:position pos:line="30" pos:column="32"/></name></expr>]<pos:position pos:line="30" pos:column="33"/></index></name><operator pos:line="30" pos:column="33">.<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="34">path<pos:position pos:line="30" pos:column="38"/></name></expr></argument>)<pos:position pos:line="30" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">xmlXPathFreeObject<pos:position pos:line="31" pos:column="23"/></name><argument_list pos:line="31" pos:column="23">(<argument><expr><name pos:line="31" pos:column="24">values_node_obj<pos:position pos:line="31" pos:column="39"/></name></expr></argument>)<pos:position pos:line="31" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="41"/></expr_stmt>
    <return pos:line="32" pos:column="5">return <expr><operator pos:line="32" pos:column="12">(<pos:position pos:line="32" pos:column="13"/></operator><operator pos:line="32" pos:column="13">-<pos:position pos:line="32" pos:column="14"/></operator><literal type="number" pos:line="32" pos:column="14">1<pos:position pos:line="32" pos:column="15"/></literal><operator pos:line="32" pos:column="15">)<pos:position pos:line="32" pos:column="16"/></operator></expr>;<pos:position pos:line="32" pos:column="17"/></return>
  }<pos:position pos:line="33" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="35" pos:column="3">/* ignoring the element if other than textnode/attribute*/</comment>
  <if pos:line="36" pos:column="3">if <condition pos:line="36" pos:column="6">(<expr><call><name pos:line="36" pos:column="7">cx_if_not_text_node<pos:position pos:line="36" pos:column="26"/></name><argument_list pos:line="36" pos:column="26">(<argument><expr><name><name pos:line="36" pos:column="27">values_node<pos:position pos:line="36" pos:column="38"/></name><operator pos:line="36" pos:column="38">-&gt;<pos:position pos:line="36" pos:column="43"/></operator><name pos:line="36" pos:column="40">nodeTab<pos:position pos:line="36" pos:column="47"/></name><index pos:line="36" pos:column="47">[<expr><literal type="number" pos:line="36" pos:column="48">0<pos:position pos:line="36" pos:column="49"/></literal></expr>]<pos:position pos:line="36" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="36" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="52"/></condition><then pos:line="36" pos:column="52"> <block pos:line="36" pos:column="53">{
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">WARNING<pos:position pos:line="37" pos:column="12"/></name><argument_list pos:line="37" pos:column="12">(<argument><expr><literal type="string" pos:line="37" pos:column="13">"curl_xml plugin: "<pos:position pos:line="37" pos:column="32"/></literal>
            <literal type="string" pos:line="38" pos:column="13">"relative xpath expression \"%s\" is expected to return "<pos:position pos:line="38" pos:column="70"/></literal>
            <literal type="string" pos:line="39" pos:column="13">"only text/attribute node which is not the case. Skipping..."<pos:position pos:line="39" pos:column="74"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="40" pos:column="13">xpath<pos:position pos:line="40" pos:column="18"/></name><operator pos:line="40" pos:column="18">-&gt;<pos:position pos:line="40" pos:column="23"/></operator><name pos:line="40" pos:column="20">values<pos:position pos:line="40" pos:column="26"/></name><index pos:line="40" pos:column="26">[<expr><name pos:line="40" pos:column="27">index<pos:position pos:line="40" pos:column="32"/></name></expr>]<pos:position pos:line="40" pos:column="33"/></index></name><operator pos:line="40" pos:column="33">.<pos:position pos:line="40" pos:column="34"/></operator><name pos:line="40" pos:column="34">path<pos:position pos:line="40" pos:column="38"/></name></expr></argument>)<pos:position pos:line="40" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">xmlXPathFreeObject<pos:position pos:line="41" pos:column="23"/></name><argument_list pos:line="41" pos:column="23">(<argument><expr><name pos:line="41" pos:column="24">values_node_obj<pos:position pos:line="41" pos:column="39"/></name></expr></argument>)<pos:position pos:line="41" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="41"/></expr_stmt>
    <return pos:line="42" pos:column="5">return <expr><operator pos:line="42" pos:column="12">(<pos:position pos:line="42" pos:column="13"/></operator><operator pos:line="42" pos:column="13">-<pos:position pos:line="42" pos:column="14"/></operator><literal type="number" pos:line="42" pos:column="14">1<pos:position pos:line="42" pos:column="15"/></literal><operator pos:line="42" pos:column="15">)<pos:position pos:line="42" pos:column="16"/></operator></expr>;<pos:position pos:line="42" pos:column="17"/></return>
  }<pos:position pos:line="43" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="45" pos:column="3">node_value<pos:position pos:line="45" pos:column="13"/></name> <operator pos:line="45" pos:column="14">=<pos:position pos:line="45" pos:column="15"/></operator> <operator pos:line="45" pos:column="16">(<pos:position pos:line="45" pos:column="17"/></operator><name pos:line="45" pos:column="17">char<pos:position pos:line="45" pos:column="21"/></name> <operator pos:line="45" pos:column="22">*<pos:position pos:line="45" pos:column="23"/></operator><operator pos:line="45" pos:column="23">)<pos:position pos:line="45" pos:column="24"/></operator><call><name pos:line="45" pos:column="24">xmlNodeGetContent<pos:position pos:line="45" pos:column="41"/></name><argument_list pos:line="45" pos:column="41">(<argument><expr><name><name pos:line="45" pos:column="42">values_node<pos:position pos:line="45" pos:column="53"/></name><operator pos:line="45" pos:column="53">-&gt;<pos:position pos:line="45" pos:column="58"/></operator><name pos:line="45" pos:column="55">nodeTab<pos:position pos:line="45" pos:column="62"/></name><index pos:line="45" pos:column="62">[<expr><literal type="number" pos:line="45" pos:column="63">0<pos:position pos:line="45" pos:column="64"/></literal></expr>]<pos:position pos:line="45" pos:column="65"/></index></name></expr></argument>)<pos:position pos:line="45" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="67"/></expr_stmt>
  <switch pos:line="46" pos:column="3">switch <condition pos:line="46" pos:column="10">(<expr><name><name pos:line="46" pos:column="11">ds<pos:position pos:line="46" pos:column="13"/></name><operator pos:line="46" pos:column="13">-&gt;<pos:position pos:line="46" pos:column="18"/></operator><name pos:line="46" pos:column="15">ds<pos:position pos:line="46" pos:column="17"/></name><index pos:line="46" pos:column="17">[<expr><name pos:line="46" pos:column="18">index<pos:position pos:line="46" pos:column="23"/></name></expr>]<pos:position pos:line="46" pos:column="24"/></index></name><operator pos:line="46" pos:column="24">.<pos:position pos:line="46" pos:column="25"/></operator><name pos:line="46" pos:column="25">type<pos:position pos:line="46" pos:column="29"/></name></expr>)<pos:position pos:line="46" pos:column="30"/></condition> <block pos:line="46" pos:column="31">{
  <case pos:line="47" pos:column="3">case <expr><name pos:line="47" pos:column="8">DS_TYPE_COUNTER<pos:position pos:line="47" pos:column="23"/></name></expr>:<pos:position pos:line="47" pos:column="24"/></case>
    <expr_stmt><expr><name><name pos:line="48" pos:column="5">vl<pos:position pos:line="48" pos:column="7"/></name><operator pos:line="48" pos:column="7">-&gt;<pos:position pos:line="48" pos:column="12"/></operator><name pos:line="48" pos:column="9">values<pos:position pos:line="48" pos:column="15"/></name><index pos:line="48" pos:column="15">[<expr><name pos:line="48" pos:column="16">index<pos:position pos:line="48" pos:column="21"/></name></expr>]<pos:position pos:line="48" pos:column="22"/></index></name><operator pos:line="48" pos:column="22">.<pos:position pos:line="48" pos:column="23"/></operator><name pos:line="48" pos:column="23">counter<pos:position pos:line="48" pos:column="30"/></name> <operator pos:line="48" pos:column="31">=<pos:position pos:line="48" pos:column="32"/></operator>
        <operator pos:line="49" pos:column="9">(<pos:position pos:line="49" pos:column="10"/></operator><name pos:line="49" pos:column="10">counter_t<pos:position pos:line="49" pos:column="19"/></name><operator pos:line="49" pos:column="19">)<pos:position pos:line="49" pos:column="20"/></operator><call><name pos:line="49" pos:column="20">strtoull<pos:position pos:line="49" pos:column="28"/></name><argument_list pos:line="49" pos:column="28">(<argument><expr><name pos:line="49" pos:column="29">node_value<pos:position pos:line="49" pos:column="39"/></name></expr></argument>,
                            <comment type="block" pos:line="50" pos:column="29">/* endptr = */</comment> <argument><expr><name pos:line="50" pos:column="44">NULL<pos:position pos:line="50" pos:column="48"/></name></expr></argument>, <comment type="block" pos:line="50" pos:column="50">/* base = */</comment> <argument><expr><literal type="number" pos:line="50" pos:column="63">0<pos:position pos:line="50" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="66"/></expr_stmt>
    <break pos:line="51" pos:column="5">break;<pos:position pos:line="51" pos:column="11"/></break>
  <case pos:line="52" pos:column="3">case <expr><name pos:line="52" pos:column="8">DS_TYPE_DERIVE<pos:position pos:line="52" pos:column="22"/></name></expr>:<pos:position pos:line="52" pos:column="23"/></case>
    <expr_stmt><expr><name><name pos:line="53" pos:column="5">vl<pos:position pos:line="53" pos:column="7"/></name><operator pos:line="53" pos:column="7">-&gt;<pos:position pos:line="53" pos:column="12"/></operator><name pos:line="53" pos:column="9">values<pos:position pos:line="53" pos:column="15"/></name><index pos:line="53" pos:column="15">[<expr><name pos:line="53" pos:column="16">index<pos:position pos:line="53" pos:column="21"/></name></expr>]<pos:position pos:line="53" pos:column="22"/></index></name><operator pos:line="53" pos:column="22">.<pos:position pos:line="53" pos:column="23"/></operator><name pos:line="53" pos:column="23">derive<pos:position pos:line="53" pos:column="29"/></name> <operator pos:line="53" pos:column="30">=<pos:position pos:line="53" pos:column="31"/></operator>
        <operator pos:line="54" pos:column="9">(<pos:position pos:line="54" pos:column="10"/></operator><name pos:line="54" pos:column="10">derive_t<pos:position pos:line="54" pos:column="18"/></name><operator pos:line="54" pos:column="18">)<pos:position pos:line="54" pos:column="19"/></operator><call><name pos:line="54" pos:column="19">strtoll<pos:position pos:line="54" pos:column="26"/></name><argument_list pos:line="54" pos:column="26">(<argument><expr><name pos:line="54" pos:column="27">node_value<pos:position pos:line="54" pos:column="37"/></name></expr></argument>,
                          <comment type="block" pos:line="55" pos:column="27">/* endptr = */</comment> <argument><expr><name pos:line="55" pos:column="42">NULL<pos:position pos:line="55" pos:column="46"/></name></expr></argument>, <comment type="block" pos:line="55" pos:column="48">/* base = */</comment> <argument><expr><literal type="number" pos:line="55" pos:column="61">0<pos:position pos:line="55" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="64"/></expr_stmt>
    <break pos:line="56" pos:column="5">break;<pos:position pos:line="56" pos:column="11"/></break>
  <case pos:line="57" pos:column="3">case <expr><name pos:line="57" pos:column="8">DS_TYPE_ABSOLUTE<pos:position pos:line="57" pos:column="24"/></name></expr>:<pos:position pos:line="57" pos:column="25"/></case>
    <expr_stmt><expr><name><name pos:line="58" pos:column="5">vl<pos:position pos:line="58" pos:column="7"/></name><operator pos:line="58" pos:column="7">-&gt;<pos:position pos:line="58" pos:column="12"/></operator><name pos:line="58" pos:column="9">values<pos:position pos:line="58" pos:column="15"/></name><index pos:line="58" pos:column="15">[<expr><name pos:line="58" pos:column="16">index<pos:position pos:line="58" pos:column="21"/></name></expr>]<pos:position pos:line="58" pos:column="22"/></index></name><operator pos:line="58" pos:column="22">.<pos:position pos:line="58" pos:column="23"/></operator><name pos:line="58" pos:column="23">absolute<pos:position pos:line="58" pos:column="31"/></name> <operator pos:line="58" pos:column="32">=<pos:position pos:line="58" pos:column="33"/></operator>
        <operator pos:line="59" pos:column="9">(<pos:position pos:line="59" pos:column="10"/></operator><name pos:line="59" pos:column="10">absolute_t<pos:position pos:line="59" pos:column="20"/></name><operator pos:line="59" pos:column="20">)<pos:position pos:line="59" pos:column="21"/></operator><call><name pos:line="59" pos:column="21">strtoull<pos:position pos:line="59" pos:column="29"/></name><argument_list pos:line="59" pos:column="29">(<argument><expr><name pos:line="59" pos:column="30">node_value<pos:position pos:line="59" pos:column="40"/></name></expr></argument>,
                             <comment type="block" pos:line="60" pos:column="30">/* endptr = */</comment> <argument><expr><name pos:line="60" pos:column="45">NULL<pos:position pos:line="60" pos:column="49"/></name></expr></argument>, <comment type="block" pos:line="60" pos:column="51">/* base = */</comment> <argument><expr><literal type="number" pos:line="60" pos:column="64">0<pos:position pos:line="60" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="67"/></expr_stmt>
    <break pos:line="61" pos:column="5">break;<pos:position pos:line="61" pos:column="11"/></break>
  <case pos:line="62" pos:column="3">case <expr><name pos:line="62" pos:column="8">DS_TYPE_GAUGE<pos:position pos:line="62" pos:column="21"/></name></expr>:<pos:position pos:line="62" pos:column="22"/></case>
    <expr_stmt><expr><name><name pos:line="63" pos:column="5">vl<pos:position pos:line="63" pos:column="7"/></name><operator pos:line="63" pos:column="7">-&gt;<pos:position pos:line="63" pos:column="12"/></operator><name pos:line="63" pos:column="9">values<pos:position pos:line="63" pos:column="15"/></name><index pos:line="63" pos:column="15">[<expr><name pos:line="63" pos:column="16">index<pos:position pos:line="63" pos:column="21"/></name></expr>]<pos:position pos:line="63" pos:column="22"/></index></name><operator pos:line="63" pos:column="22">.<pos:position pos:line="63" pos:column="23"/></operator><name pos:line="63" pos:column="23">gauge<pos:position pos:line="63" pos:column="28"/></name> <operator pos:line="63" pos:column="29">=<pos:position pos:line="63" pos:column="30"/></operator> <operator pos:line="63" pos:column="31">(<pos:position pos:line="63" pos:column="32"/></operator><name pos:line="63" pos:column="32">gauge_t<pos:position pos:line="63" pos:column="39"/></name><operator pos:line="63" pos:column="39">)<pos:position pos:line="63" pos:column="40"/></operator><call><name pos:line="63" pos:column="40">strtod<pos:position pos:line="63" pos:column="46"/></name><argument_list pos:line="63" pos:column="46">(<argument><expr><name pos:line="63" pos:column="47">node_value<pos:position pos:line="63" pos:column="57"/></name></expr></argument>,
                                              <comment type="block" pos:line="64" pos:column="47">/* endptr = */</comment> <argument><expr><name pos:line="64" pos:column="62">NULL<pos:position pos:line="64" pos:column="66"/></name></expr></argument>)<pos:position pos:line="64" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="68"/></expr_stmt>
  }<pos:position pos:line="65" pos:column="4"/></block></switch>

  <comment type="block" pos:line="67" pos:column="3">/* free up object */</comment>
  <expr_stmt><expr><call><name pos:line="68" pos:column="3">xmlXPathFreeObject<pos:position pos:line="68" pos:column="21"/></name><argument_list pos:line="68" pos:column="21">(<argument><expr><name pos:line="68" pos:column="22">values_node_obj<pos:position pos:line="68" pos:column="37"/></name></expr></argument>)<pos:position pos:line="68" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="69" pos:column="3">sfree<pos:position pos:line="69" pos:column="8"/></name><argument_list pos:line="69" pos:column="8">(<argument><expr><name pos:line="69" pos:column="9">node_value<pos:position pos:line="69" pos:column="19"/></name></expr></argument>)<pos:position pos:line="69" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="21"/></expr_stmt>

  <comment type="block" pos:line="71" pos:column="3">/* We have reached here which means that
   * we have got something to work */</comment>
  <return pos:line="73" pos:column="3">return <expr><operator pos:line="73" pos:column="10">(<pos:position pos:line="73" pos:column="11"/></operator><literal type="number" pos:line="73" pos:column="11">0<pos:position pos:line="73" pos:column="12"/></literal><operator pos:line="73" pos:column="12">)<pos:position pos:line="73" pos:column="13"/></operator></expr>;<pos:position pos:line="73" pos:column="14"/></return>
}<pos:position pos:line="74" pos:column="2"/></block></function></unit>

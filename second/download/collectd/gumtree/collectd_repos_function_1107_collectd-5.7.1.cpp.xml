<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1107_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cgps_thread_pause<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">cdtime_t<pos:position pos:line="1" pos:column="38"/></name></type> <name pos:line="1" pos:column="39">pTime<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list> <block pos:line="1" pos:column="46">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">cdtime_t<pos:position pos:line="2" pos:column="11"/></name></type> <name pos:line="2" pos:column="12">until<pos:position pos:line="2" pos:column="17"/></name> <init pos:line="2" pos:column="18">= <expr><call><name pos:line="2" pos:column="20">cdtime<pos:position pos:line="2" pos:column="26"/></name><argument_list pos:line="2" pos:column="26">()<pos:position pos:line="2" pos:column="28"/></argument_list></call> <operator pos:line="2" pos:column="29">+<pos:position pos:line="2" pos:column="30"/></operator> <name pos:line="2" pos:column="31">pTime<pos:position pos:line="2" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="2" pos:column="37"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="4" pos:column="3">pthread_mutex_lock<pos:position pos:line="4" pos:column="21"/></name><argument_list pos:line="4" pos:column="21">(<argument><expr><operator pos:line="4" pos:column="22">&amp;<pos:position pos:line="4" pos:column="27"/></operator><name pos:line="4" pos:column="23">cgps_thread_lock<pos:position pos:line="4" pos:column="39"/></name></expr></argument>)<pos:position pos:line="4" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="5" pos:column="3">pthread_cond_timedwait<pos:position pos:line="5" pos:column="25"/></name><argument_list pos:line="5" pos:column="25">(<argument><expr><operator pos:line="5" pos:column="26">&amp;<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="27">cgps_thread_cond<pos:position pos:line="5" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="45">&amp;<pos:position pos:line="5" pos:column="50"/></operator><name pos:line="5" pos:column="46">cgps_thread_lock<pos:position pos:line="5" pos:column="62"/></name></expr></argument>,
                         <argument><expr><operator pos:line="6" pos:column="26">&amp;<pos:position pos:line="6" pos:column="31"/></operator><call><name pos:line="6" pos:column="27">CDTIME_T_TO_TIMESPEC<pos:position pos:line="6" pos:column="47"/></name><argument_list pos:line="6" pos:column="47">(<argument><expr><name pos:line="6" pos:column="48">until<pos:position pos:line="6" pos:column="53"/></name></expr></argument>)<pos:position pos:line="6" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="56"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">ret<pos:position pos:line="8" pos:column="10"/></name> <init pos:line="8" pos:column="11">= <expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">cgps_thread_shutdown<pos:position pos:line="8" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="35"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="10" pos:column="3">pthread_mutex_lock<pos:position pos:line="10" pos:column="21"/></name><argument_list pos:line="10" pos:column="21">(<argument><expr><operator pos:line="10" pos:column="22">&amp;<pos:position pos:line="10" pos:column="27"/></operator><name pos:line="10" pos:column="23">cgps_thread_lock<pos:position pos:line="10" pos:column="39"/></name></expr></argument>)<pos:position pos:line="10" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="41"/></expr_stmt>
  <return pos:line="11" pos:column="3">return <expr><name pos:line="11" pos:column="10">ret<pos:position pos:line="11" pos:column="13"/></name></expr>;<pos:position pos:line="11" pos:column="14"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

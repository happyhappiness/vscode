<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1436_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">cu_mount_t<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">cu_mount_listmntent<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">void<pos:position pos:line="1" pos:column="44"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list> <block pos:line="1" pos:column="46">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">cu_mount_t<pos:position pos:line="2" pos:column="13"/></name> <modifier pos:line="2" pos:column="14">*<pos:position pos:line="2" pos:column="15"/></modifier></type><name pos:line="2" pos:column="15">last<pos:position pos:line="2" pos:column="19"/></name> <init pos:line="2" pos:column="20">= <expr><operator pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></operator><name pos:line="2" pos:column="23">list<pos:position pos:line="2" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="2" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">mntent<pos:position pos:line="3" pos:column="16"/></name></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">mnt<pos:position pos:line="3" pos:column="21"/></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>

  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">tabmntent<pos:position pos:line="5" pos:column="19"/></name></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">mntlist<pos:position pos:line="5" pos:column="28"/></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><call><name pos:line="6" pos:column="7">listmntent<pos:position pos:line="6" pos:column="17"/></name><argument_list pos:line="6" pos:column="17">(<argument><expr><operator pos:line="6" pos:column="18">&amp;<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="19">mntlist<pos:position pos:line="6" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="28">COLLECTD_MNTTAB<pos:position pos:line="6" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="45">NULL<pos:position pos:line="6" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="51">NULL<pos:position pos:line="6" pos:column="55"/></name></expr></argument>)<pos:position pos:line="6" pos:column="56"/></argument_list></call> <operator pos:line="6" pos:column="57">&lt;<pos:position pos:line="6" pos:column="61"/></operator> <literal type="number" pos:line="6" pos:column="59">0<pos:position pos:line="6" pos:column="60"/></literal></expr>)<pos:position pos:line="6" pos:column="61"/></condition><then pos:line="6" pos:column="61"> <block pos:line="6" pos:column="62">{
<cpp:if pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">if<pos:position pos:line="7" pos:column="4"/></cpp:directive> <expr><name pos:line="7" pos:column="5">COLLECT_DEBUG<pos:position pos:line="7" pos:column="18"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name></type> <name><name pos:line="8" pos:column="10">errbuf<pos:position pos:line="8" pos:column="16"/></name><index pos:line="8" pos:column="16">[<expr><literal type="number" pos:line="8" pos:column="17">1024<pos:position pos:line="8" pos:column="21"/></literal></expr>]<pos:position pos:line="8" pos:column="22"/></index></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">DEBUG<pos:position pos:line="9" pos:column="10"/></name><argument_list pos:line="9" pos:column="10">(<argument><expr><literal type="string" pos:line="9" pos:column="11">"utils_mount: calling listmntent() failed: %s"<pos:position pos:line="9" pos:column="57"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="10" pos:column="11">sstrerror<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><name pos:line="10" pos:column="21">errno<pos:position pos:line="10" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="28">errbuf<pos:position pos:line="10" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="36">sizeof<argument_list pos:line="10" pos:column="42">(<argument><expr><name pos:line="10" pos:column="43">errbuf<pos:position pos:line="10" pos:column="49"/></name></expr></argument>)<pos:position pos:line="10" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="53"/></expr_stmt>
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="11" pos:column="8">/* COLLECT_DEBUG */</comment>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>

  <for pos:line="14" pos:column="3">for <control pos:line="14" pos:column="7">(<init><decl><type><name><name pos:line="14" pos:column="8">struct<pos:position pos:line="14" pos:column="14"/></name> <name pos:line="14" pos:column="15">tabmntent<pos:position pos:line="14" pos:column="24"/></name></name> <modifier pos:line="14" pos:column="25">*<pos:position pos:line="14" pos:column="26"/></modifier><name pos:line="14" pos:column="26">p<pos:position pos:line="14" pos:column="27"/></name></type> <init pos:line="14" pos:column="28">= <expr><name pos:line="14" pos:column="30">mntlist<pos:position pos:line="14" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="38"/></init> <condition><expr><name pos:line="14" pos:column="39">p<pos:position pos:line="14" pos:column="40"/></name></expr>;<pos:position pos:line="14" pos:column="41"/></condition> <incr><expr><name pos:line="14" pos:column="42">p<pos:position pos:line="14" pos:column="43"/></name> <operator pos:line="14" pos:column="44">=<pos:position pos:line="14" pos:column="45"/></operator> <name><name pos:line="14" pos:column="46">p<pos:position pos:line="14" pos:column="47"/></name><operator pos:line="14" pos:column="47">-&gt;<pos:position pos:line="14" pos:column="52"/></operator><name pos:line="14" pos:column="49">next<pos:position pos:line="14" pos:column="53"/></name></name></expr></incr>)<pos:position pos:line="14" pos:column="54"/></control> <block pos:line="14" pos:column="55">{
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">char<pos:position pos:line="15" pos:column="9"/></name> <modifier pos:line="15" pos:column="10">*<pos:position pos:line="15" pos:column="11"/></modifier></type><name pos:line="15" pos:column="11">loop<pos:position pos:line="15" pos:column="15"/></name> <init pos:line="15" pos:column="16">= <expr><name pos:line="15" pos:column="18">NULL<pos:position pos:line="15" pos:column="22"/></name></expr></init></decl>, <modifier pos:line="15" pos:column="24">*<pos:position pos:line="15" pos:column="25"/></modifier><decl><type ref="prev"/><name pos:line="15" pos:column="25">device<pos:position pos:line="15" pos:column="31"/></name> <init pos:line="15" pos:column="32">= <expr><name pos:line="15" pos:column="34">NULL<pos:position pos:line="15" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="39"/></decl_stmt>

    <expr_stmt><expr><name pos:line="17" pos:column="5">mnt<pos:position pos:line="17" pos:column="8"/></name> <operator pos:line="17" pos:column="9">=<pos:position pos:line="17" pos:column="10"/></operator> <name><name pos:line="17" pos:column="11">p<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">-&gt;<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="14">ment<pos:position pos:line="17" pos:column="18"/></name></name></expr>;<pos:position pos:line="17" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="18" pos:column="5">loop<pos:position pos:line="18" pos:column="9"/></name> <operator pos:line="18" pos:column="10">=<pos:position pos:line="18" pos:column="11"/></operator> <call><name pos:line="18" pos:column="12">cu_mount_getoptionvalue<pos:position pos:line="18" pos:column="35"/></name><argument_list pos:line="18" pos:column="35">(<argument><expr><name><name pos:line="18" pos:column="36">mnt<pos:position pos:line="18" pos:column="39"/></name><operator pos:line="18" pos:column="39">-&gt;<pos:position pos:line="18" pos:column="44"/></operator><name pos:line="18" pos:column="41">mnt_opts<pos:position pos:line="18" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="51">"loop="<pos:position pos:line="18" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="60"/></expr_stmt>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">loop<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">==<pos:position pos:line="19" pos:column="16"/></operator> <name pos:line="19" pos:column="17">NULL<pos:position pos:line="19" pos:column="21"/></name></expr>)<pos:position pos:line="19" pos:column="22"/></condition><then pos:line="19" pos:column="22"> <block pos:line="19" pos:column="23">{ <comment type="block" pos:line="19" pos:column="25">/* no loop= mount */</comment>
      <expr_stmt><expr><name pos:line="20" pos:column="7">device<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">=<pos:position pos:line="20" pos:column="15"/></operator> <call><name pos:line="20" pos:column="16">get_device_name<pos:position pos:line="20" pos:column="31"/></name><argument_list pos:line="20" pos:column="31">(<argument><expr><name><name pos:line="20" pos:column="32">mnt<pos:position pos:line="20" pos:column="35"/></name><operator pos:line="20" pos:column="35">-&gt;<pos:position pos:line="20" pos:column="40"/></operator><name pos:line="20" pos:column="37">mnt_fsname<pos:position pos:line="20" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="49"/></expr_stmt>
      <if pos:line="21" pos:column="7">if <condition pos:line="21" pos:column="10">(<expr><name pos:line="21" pos:column="11">device<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">==<pos:position pos:line="21" pos:column="20"/></operator> <name pos:line="21" pos:column="21">NULL<pos:position pos:line="21" pos:column="25"/></name></expr>)<pos:position pos:line="21" pos:column="26"/></condition><then pos:line="21" pos:column="26"> <block pos:line="21" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">DEBUG<pos:position pos:line="22" pos:column="14"/></name><argument_list pos:line="22" pos:column="14">(<argument><expr><literal type="string" pos:line="22" pos:column="15">"utils_mount: can't get devicename for fs (%s) %s (%s)"<pos:position pos:line="22" pos:column="70"/></literal>
              <literal type="string" pos:line="23" pos:column="15">": ignored"<pos:position pos:line="23" pos:column="26"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="24" pos:column="15">mnt<pos:position pos:line="24" pos:column="18"/></name><operator pos:line="24" pos:column="18">-&gt;<pos:position pos:line="24" pos:column="23"/></operator><name pos:line="24" pos:column="20">mnt_type<pos:position pos:line="24" pos:column="28"/></name></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="30">mnt<pos:position pos:line="24" pos:column="33"/></name><operator pos:line="24" pos:column="33">-&gt;<pos:position pos:line="24" pos:column="38"/></operator><name pos:line="24" pos:column="35">mnt_dir<pos:position pos:line="24" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="44">mnt<pos:position pos:line="24" pos:column="47"/></name><operator pos:line="24" pos:column="47">-&gt;<pos:position pos:line="24" pos:column="52"/></operator><name pos:line="24" pos:column="49">mnt_fsname<pos:position pos:line="24" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="61"/></expr_stmt>
        <continue pos:line="25" pos:column="9">continue;<pos:position pos:line="25" pos:column="18"/></continue>
      }<pos:position pos:line="26" pos:column="8"/></block></then></if>
    }<pos:position pos:line="27" pos:column="6"/></block></then> <else pos:line="27" pos:column="7">else <block pos:line="27" pos:column="12">{
      <expr_stmt><expr><name pos:line="28" pos:column="7">device<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">=<pos:position pos:line="28" pos:column="15"/></operator> <name pos:line="28" pos:column="16">loop<pos:position pos:line="28" pos:column="20"/></name></expr>;<pos:position pos:line="28" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></else></if>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><operator pos:line="30" pos:column="9">*<pos:position pos:line="30" pos:column="10"/></operator><name pos:line="30" pos:column="10">list<pos:position pos:line="30" pos:column="14"/></name> <operator pos:line="30" pos:column="15">==<pos:position pos:line="30" pos:column="17"/></operator> <name pos:line="30" pos:column="18">NULL<pos:position pos:line="30" pos:column="22"/></name></expr>)<pos:position pos:line="30" pos:column="23"/></condition><then pos:line="30" pos:column="23"> <block pos:line="30" pos:column="24">{
      <expr_stmt><expr><operator pos:line="31" pos:column="7">*<pos:position pos:line="31" pos:column="8"/></operator><name pos:line="31" pos:column="8">list<pos:position pos:line="31" pos:column="12"/></name> <operator pos:line="31" pos:column="13">=<pos:position pos:line="31" pos:column="14"/></operator> <operator pos:line="31" pos:column="15">(<pos:position pos:line="31" pos:column="16"/></operator><name pos:line="31" pos:column="16">cu_mount_t<pos:position pos:line="31" pos:column="26"/></name> <operator pos:line="31" pos:column="27">*<pos:position pos:line="31" pos:column="28"/></operator><operator pos:line="31" pos:column="28">)<pos:position pos:line="31" pos:column="29"/></operator><call><name pos:line="31" pos:column="29">smalloc<pos:position pos:line="31" pos:column="36"/></name><argument_list pos:line="31" pos:column="36">(<argument><expr><sizeof pos:line="31" pos:column="37">sizeof<argument_list pos:line="31" pos:column="43">(<argument><expr><name pos:line="31" pos:column="44">cu_mount_t<pos:position pos:line="31" pos:column="54"/></name></expr></argument>)<pos:position pos:line="31" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="31" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="57"/></expr_stmt>
      <expr_stmt><expr><name pos:line="32" pos:column="7">last<pos:position pos:line="32" pos:column="11"/></name> <operator pos:line="32" pos:column="12">=<pos:position pos:line="32" pos:column="13"/></operator> <operator pos:line="32" pos:column="14">*<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="15">list<pos:position pos:line="32" pos:column="19"/></name></expr>;<pos:position pos:line="32" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then> <else pos:line="33" pos:column="7">else <block pos:line="33" pos:column="12">{
      <while pos:line="34" pos:column="7">while <condition pos:line="34" pos:column="13">(<expr><name><name pos:line="34" pos:column="14">last<pos:position pos:line="34" pos:column="18"/></name><operator pos:line="34" pos:column="18">-&gt;<pos:position pos:line="34" pos:column="23"/></operator><name pos:line="34" pos:column="20">next<pos:position pos:line="34" pos:column="24"/></name></name> <operator pos:line="34" pos:column="25">!=<pos:position pos:line="34" pos:column="27"/></operator> <name pos:line="34" pos:column="28">NULL<pos:position pos:line="34" pos:column="32"/></name></expr>)<pos:position pos:line="34" pos:column="33"/></condition> <block pos:line="34" pos:column="34">{ <comment type="block" pos:line="34" pos:column="36">/* is last really last? */</comment>
        <expr_stmt><expr><name pos:line="35" pos:column="9">last<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">=<pos:position pos:line="35" pos:column="15"/></operator> <name><name pos:line="35" pos:column="16">last<pos:position pos:line="35" pos:column="20"/></name><operator pos:line="35" pos:column="20">-&gt;<pos:position pos:line="35" pos:column="25"/></operator><name pos:line="35" pos:column="22">next<pos:position pos:line="35" pos:column="26"/></name></name></expr>;<pos:position pos:line="35" pos:column="27"/></expr_stmt>
      }<pos:position pos:line="36" pos:column="8"/></block></while>
      <expr_stmt><expr><name><name pos:line="37" pos:column="7">last<pos:position pos:line="37" pos:column="11"/></name><operator pos:line="37" pos:column="11">-&gt;<pos:position pos:line="37" pos:column="16"/></operator><name pos:line="37" pos:column="13">next<pos:position pos:line="37" pos:column="17"/></name></name> <operator pos:line="37" pos:column="18">=<pos:position pos:line="37" pos:column="19"/></operator> <operator pos:line="37" pos:column="20">(<pos:position pos:line="37" pos:column="21"/></operator><name pos:line="37" pos:column="21">cu_mount_t<pos:position pos:line="37" pos:column="31"/></name> <operator pos:line="37" pos:column="32">*<pos:position pos:line="37" pos:column="33"/></operator><operator pos:line="37" pos:column="33">)<pos:position pos:line="37" pos:column="34"/></operator><call><name pos:line="37" pos:column="34">smalloc<pos:position pos:line="37" pos:column="41"/></name><argument_list pos:line="37" pos:column="41">(<argument><expr><sizeof pos:line="37" pos:column="42">sizeof<argument_list pos:line="37" pos:column="48">(<argument><expr><name pos:line="37" pos:column="49">cu_mount_t<pos:position pos:line="37" pos:column="59"/></name></expr></argument>)<pos:position pos:line="37" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="37" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="62"/></expr_stmt>
      <expr_stmt><expr><name pos:line="38" pos:column="7">last<pos:position pos:line="38" pos:column="11"/></name> <operator pos:line="38" pos:column="12">=<pos:position pos:line="38" pos:column="13"/></operator> <name><name pos:line="38" pos:column="14">last<pos:position pos:line="38" pos:column="18"/></name><operator pos:line="38" pos:column="18">-&gt;<pos:position pos:line="38" pos:column="23"/></operator><name pos:line="38" pos:column="20">next<pos:position pos:line="38" pos:column="24"/></name></name></expr>;<pos:position pos:line="38" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="39" pos:column="6"/></block></else></if>
    <expr_stmt><expr><name><name pos:line="40" pos:column="5">last<pos:position pos:line="40" pos:column="9"/></name><operator pos:line="40" pos:column="9">-&gt;<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="11">dir<pos:position pos:line="40" pos:column="14"/></name></name> <operator pos:line="40" pos:column="15">=<pos:position pos:line="40" pos:column="16"/></operator> <call><name pos:line="40" pos:column="17">sstrdup<pos:position pos:line="40" pos:column="24"/></name><argument_list pos:line="40" pos:column="24">(<argument><expr><name><name pos:line="40" pos:column="25">mnt<pos:position pos:line="40" pos:column="28"/></name><operator pos:line="40" pos:column="28">-&gt;<pos:position pos:line="40" pos:column="33"/></operator><name pos:line="40" pos:column="30">mnt_dir<pos:position pos:line="40" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="41" pos:column="5">last<pos:position pos:line="41" pos:column="9"/></name><operator pos:line="41" pos:column="9">-&gt;<pos:position pos:line="41" pos:column="14"/></operator><name pos:line="41" pos:column="11">spec_device<pos:position pos:line="41" pos:column="22"/></name></name> <operator pos:line="41" pos:column="23">=<pos:position pos:line="41" pos:column="24"/></operator> <call><name pos:line="41" pos:column="25">sstrdup<pos:position pos:line="41" pos:column="32"/></name><argument_list pos:line="41" pos:column="32">(<argument><expr><name><name pos:line="41" pos:column="33">mnt<pos:position pos:line="41" pos:column="36"/></name><operator pos:line="41" pos:column="36">-&gt;<pos:position pos:line="41" pos:column="41"/></operator><name pos:line="41" pos:column="38">mnt_fsname<pos:position pos:line="41" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="42" pos:column="5">last<pos:position pos:line="42" pos:column="9"/></name><operator pos:line="42" pos:column="9">-&gt;<pos:position pos:line="42" pos:column="14"/></operator><name pos:line="42" pos:column="11">device<pos:position pos:line="42" pos:column="17"/></name></name> <operator pos:line="42" pos:column="18">=<pos:position pos:line="42" pos:column="19"/></operator> <name pos:line="42" pos:column="20">device<pos:position pos:line="42" pos:column="26"/></name></expr>;<pos:position pos:line="42" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="43" pos:column="5">last<pos:position pos:line="43" pos:column="9"/></name><operator pos:line="43" pos:column="9">-&gt;<pos:position pos:line="43" pos:column="14"/></operator><name pos:line="43" pos:column="11">type<pos:position pos:line="43" pos:column="15"/></name></name> <operator pos:line="43" pos:column="16">=<pos:position pos:line="43" pos:column="17"/></operator> <call><name pos:line="43" pos:column="18">sstrdup<pos:position pos:line="43" pos:column="25"/></name><argument_list pos:line="43" pos:column="25">(<argument><expr><name><name pos:line="43" pos:column="26">mnt<pos:position pos:line="43" pos:column="29"/></name><operator pos:line="43" pos:column="29">-&gt;<pos:position pos:line="43" pos:column="34"/></operator><name pos:line="43" pos:column="31">mnt_type<pos:position pos:line="43" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="44" pos:column="5">last<pos:position pos:line="44" pos:column="9"/></name><operator pos:line="44" pos:column="9">-&gt;<pos:position pos:line="44" pos:column="14"/></operator><name pos:line="44" pos:column="11">options<pos:position pos:line="44" pos:column="18"/></name></name> <operator pos:line="44" pos:column="19">=<pos:position pos:line="44" pos:column="20"/></operator> <call><name pos:line="44" pos:column="21">sstrdup<pos:position pos:line="44" pos:column="28"/></name><argument_list pos:line="44" pos:column="28">(<argument><expr><name><name pos:line="44" pos:column="29">mnt<pos:position pos:line="44" pos:column="32"/></name><operator pos:line="44" pos:column="32">-&gt;<pos:position pos:line="44" pos:column="37"/></operator><name pos:line="44" pos:column="34">mnt_opts<pos:position pos:line="44" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="45" pos:column="5">last<pos:position pos:line="45" pos:column="9"/></name><operator pos:line="45" pos:column="9">-&gt;<pos:position pos:line="45" pos:column="14"/></operator><name pos:line="45" pos:column="11">next<pos:position pos:line="45" pos:column="15"/></name></name> <operator pos:line="45" pos:column="16">=<pos:position pos:line="45" pos:column="17"/></operator> <name pos:line="45" pos:column="18">NULL<pos:position pos:line="45" pos:column="22"/></name></expr>;<pos:position pos:line="45" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="46" pos:column="4"/></block></for> <comment type="block" pos:line="46" pos:column="5">/* for(p = mntlist; p; p = p-&gt;next) */</comment>

  <return pos:line="48" pos:column="3">return <expr><operator pos:line="48" pos:column="10">(<pos:position pos:line="48" pos:column="11"/></operator><name pos:line="48" pos:column="11">last<pos:position pos:line="48" pos:column="15"/></name><operator pos:line="48" pos:column="15">)<pos:position pos:line="48" pos:column="16"/></operator></expr>;<pos:position pos:line="48" pos:column="17"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

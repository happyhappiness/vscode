<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_717_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">cjni_log<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">int<pos:position pos:line="1" pos:column="25"/></name></type> <name pos:line="1" pos:column="26">severity<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">message<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="57">/* {{{ */</comment>
                     <parameter><decl><type><name pos:line="2" pos:column="22">user_data_t<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">ud<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="38"/></parameter_list> <block pos:line="2" pos:column="39">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">JNIEnv<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">jvm_env<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">cjni_callback_info_t<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">cbi<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">jobject<pos:position pos:line="5" pos:column="10"/></name></type> <name pos:line="5" pos:column="11">o_message<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">jvm<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">==<pos:position pos:line="7" pos:column="13"/></operator> <name pos:line="7" pos:column="14">NULL<pos:position pos:line="7" pos:column="18"/></name></expr>)<pos:position pos:line="7" pos:column="19"/></condition><then pos:line="7" pos:column="19">
    <block type="pseudo"><return pos:line="8" pos:column="5">return;<pos:position pos:line="8" pos:column="12"/></return></block></then></if>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><operator pos:line="10" pos:column="7">(<pos:position pos:line="10" pos:column="8"/></operator><name pos:line="10" pos:column="8">ud<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">==<pos:position pos:line="10" pos:column="13"/></operator> <name pos:line="10" pos:column="14">NULL<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">)<pos:position pos:line="10" pos:column="19"/></operator> <operator pos:line="10" pos:column="20">||<pos:position pos:line="10" pos:column="22"/></operator> <operator pos:line="10" pos:column="23">(<pos:position pos:line="10" pos:column="24"/></operator><name><name pos:line="10" pos:column="24">ud<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">-&gt;<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="28">data<pos:position pos:line="10" pos:column="32"/></name></name> <operator pos:line="10" pos:column="33">==<pos:position pos:line="10" pos:column="35"/></operator> <name pos:line="10" pos:column="36">NULL<pos:position pos:line="10" pos:column="40"/></name><operator pos:line="10" pos:column="40">)<pos:position pos:line="10" pos:column="41"/></operator></expr>)<pos:position pos:line="10" pos:column="42"/></condition><then pos:line="10" pos:column="42">
    <block type="pseudo"><return pos:line="11" pos:column="5">return;<pos:position pos:line="11" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="13" pos:column="3">jvm_env<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <call><name pos:line="13" pos:column="13">cjni_thread_attach<pos:position pos:line="13" pos:column="31"/></name><argument_list pos:line="13" pos:column="31">()<pos:position pos:line="13" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="34"/></expr_stmt>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">jvm_env<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">==<pos:position pos:line="14" pos:column="17"/></operator> <name pos:line="14" pos:column="18">NULL<pos:position pos:line="14" pos:column="22"/></name></expr>)<pos:position pos:line="14" pos:column="23"/></condition><then pos:line="14" pos:column="23">
    <block type="pseudo"><return pos:line="15" pos:column="5">return;<pos:position pos:line="15" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="17" pos:column="3">cbi<pos:position pos:line="17" pos:column="6"/></name> <operator pos:line="17" pos:column="7">=<pos:position pos:line="17" pos:column="8"/></operator> <operator pos:line="17" pos:column="9">(<pos:position pos:line="17" pos:column="10"/></operator><name pos:line="17" pos:column="10">cjni_callback_info_t<pos:position pos:line="17" pos:column="30"/></name> <operator pos:line="17" pos:column="31">*<pos:position pos:line="17" pos:column="32"/></operator><operator pos:line="17" pos:column="32">)<pos:position pos:line="17" pos:column="33"/></operator><name><name pos:line="17" pos:column="33">ud<pos:position pos:line="17" pos:column="35"/></name><operator pos:line="17" pos:column="35">-&gt;<pos:position pos:line="17" pos:column="40"/></operator><name pos:line="17" pos:column="37">data<pos:position pos:line="17" pos:column="41"/></name></name></expr>;<pos:position pos:line="17" pos:column="42"/></expr_stmt>

  <expr_stmt><expr><name pos:line="19" pos:column="3">o_message<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <call><name><operator pos:line="19" pos:column="15">(<pos:position pos:line="19" pos:column="16"/></operator><operator pos:line="19" pos:column="16">*<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="17">jvm_env<pos:position pos:line="19" pos:column="24"/></name><operator pos:line="19" pos:column="24">)<pos:position pos:line="19" pos:column="25"/></operator><operator pos:line="19" pos:column="25">-&gt;<pos:position pos:line="19" pos:column="30"/></operator><name pos:line="19" pos:column="27">NewStringUTF<pos:position pos:line="19" pos:column="39"/></name></name><argument_list pos:line="19" pos:column="39">(<argument><expr><name pos:line="19" pos:column="40">jvm_env<pos:position pos:line="19" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="49">message<pos:position pos:line="19" pos:column="56"/></name></expr></argument>)<pos:position pos:line="19" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="58"/></expr_stmt>
  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><name pos:line="20" pos:column="7">o_message<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">==<pos:position pos:line="20" pos:column="19"/></operator> <name pos:line="20" pos:column="20">NULL<pos:position pos:line="20" pos:column="24"/></name></expr>)<pos:position pos:line="20" pos:column="25"/></condition><then pos:line="20" pos:column="25"> <block pos:line="20" pos:column="26">{
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">cjni_thread_detach<pos:position pos:line="21" pos:column="23"/></name><argument_list pos:line="21" pos:column="23">()<pos:position pos:line="21" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="26"/></expr_stmt>
    <return pos:line="22" pos:column="5">return;<pos:position pos:line="22" pos:column="12"/></return>
  }<pos:position pos:line="23" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name><operator pos:line="25" pos:column="3">(<pos:position pos:line="25" pos:column="4"/></operator><operator pos:line="25" pos:column="4">*<pos:position pos:line="25" pos:column="5"/></operator><name pos:line="25" pos:column="5">jvm_env<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">)<pos:position pos:line="25" pos:column="13"/></operator><operator pos:line="25" pos:column="13">-&gt;<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="15">CallVoidMethod<pos:position pos:line="25" pos:column="29"/></name></name><argument_list pos:line="25" pos:column="29">(<argument><expr><name pos:line="25" pos:column="30">jvm_env<pos:position pos:line="25" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="39">cbi<pos:position pos:line="25" pos:column="42"/></name><operator pos:line="25" pos:column="42">-&gt;<pos:position pos:line="25" pos:column="47"/></operator><name pos:line="25" pos:column="44">object<pos:position pos:line="25" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="52">cbi<pos:position pos:line="25" pos:column="55"/></name><operator pos:line="25" pos:column="55">-&gt;<pos:position pos:line="25" pos:column="60"/></operator><name pos:line="25" pos:column="57">method<pos:position pos:line="25" pos:column="63"/></name></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="65">(<pos:position pos:line="25" pos:column="66"/></operator><name pos:line="25" pos:column="66">jint<pos:position pos:line="25" pos:column="70"/></name><operator pos:line="25" pos:column="70">)<pos:position pos:line="25" pos:column="71"/></operator><name pos:line="25" pos:column="71">severity<pos:position pos:line="25" pos:column="79"/></name></expr></argument>,
                             <argument><expr><name pos:line="26" pos:column="30">o_message<pos:position pos:line="26" pos:column="39"/></name></expr></argument>)<pos:position pos:line="26" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="41"/></expr_stmt>

  <expr_stmt><expr><call><name><operator pos:line="28" pos:column="3">(<pos:position pos:line="28" pos:column="4"/></operator><operator pos:line="28" pos:column="4">*<pos:position pos:line="28" pos:column="5"/></operator><name pos:line="28" pos:column="5">jvm_env<pos:position pos:line="28" pos:column="12"/></name><operator pos:line="28" pos:column="12">)<pos:position pos:line="28" pos:column="13"/></operator><operator pos:line="28" pos:column="13">-&gt;<pos:position pos:line="28" pos:column="18"/></operator><name pos:line="28" pos:column="15">DeleteLocalRef<pos:position pos:line="28" pos:column="29"/></name></name><argument_list pos:line="28" pos:column="29">(<argument><expr><name pos:line="28" pos:column="30">jvm_env<pos:position pos:line="28" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="39">o_message<pos:position pos:line="28" pos:column="48"/></name></expr></argument>)<pos:position pos:line="28" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="50"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="30" pos:column="3">cjni_thread_detach<pos:position pos:line="30" pos:column="21"/></name><argument_list pos:line="30" pos:column="21">()<pos:position pos:line="30" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="24"/></expr_stmt>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

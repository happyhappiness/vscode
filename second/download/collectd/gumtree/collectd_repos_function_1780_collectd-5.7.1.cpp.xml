<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1780_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ceph_init<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">void<pos:position pos:line="1" pos:column="26"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="27"/></parameter_list> <block pos:line="1" pos:column="28">{
<cpp:if pos:line="2" pos:column="1">#<cpp:directive pos:line="2" pos:column="2">if<pos:position pos:line="2" pos:column="4"/></cpp:directive> <expr><call><name pos:line="2" pos:column="5">defined<pos:position pos:line="2" pos:column="12"/></name><argument_list pos:line="2" pos:column="12">(<argument><expr><name pos:line="2" pos:column="13">HAVE_SYS_CAPABILITY_H<pos:position pos:line="2" pos:column="34"/></name></expr></argument>)<pos:position pos:line="2" pos:column="35"/></argument_list></call> <operator pos:line="2" pos:column="36">&amp;&amp;<pos:position pos:line="2" pos:column="46"/></operator> <call><name pos:line="2" pos:column="39">defined<pos:position pos:line="2" pos:column="46"/></name><argument_list pos:line="2" pos:column="46">(<argument><expr><name pos:line="2" pos:column="47">CAP_DAC_OVERRIDE<pos:position pos:line="2" pos:column="63"/></name></expr></argument>)<pos:position pos:line="2" pos:column="64"/></argument_list></call></expr></cpp:if>
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><call><name pos:line="3" pos:column="7">check_capability<pos:position pos:line="3" pos:column="23"/></name><argument_list pos:line="3" pos:column="23">(<argument><expr><name pos:line="3" pos:column="24">CAP_DAC_OVERRIDE<pos:position pos:line="3" pos:column="40"/></name></expr></argument>)<pos:position pos:line="3" pos:column="41"/></argument_list></call> <operator pos:line="3" pos:column="42">!=<pos:position pos:line="3" pos:column="44"/></operator> <literal type="number" pos:line="3" pos:column="45">0<pos:position pos:line="3" pos:column="46"/></literal></expr>)<pos:position pos:line="3" pos:column="47"/></condition><then pos:line="3" pos:column="47"> <block pos:line="3" pos:column="48">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name pos:line="4" pos:column="9">getuid<pos:position pos:line="4" pos:column="15"/></name><argument_list pos:line="4" pos:column="15">()<pos:position pos:line="4" pos:column="17"/></argument_list></call> <operator pos:line="4" pos:column="18">==<pos:position pos:line="4" pos:column="20"/></operator> <literal type="number" pos:line="4" pos:column="21">0<pos:position pos:line="4" pos:column="22"/></literal></expr>)<pos:position pos:line="4" pos:column="23"/></condition><then pos:line="4" pos:column="23">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="5" pos:column="7">WARNING<pos:position pos:line="5" pos:column="14"/></name><argument_list pos:line="5" pos:column="14">(<argument><expr><literal type="string" pos:line="5" pos:column="15">"ceph plugin: Running collectd as root, but the "<pos:position pos:line="5" pos:column="64"/></literal>
              <literal type="string" pos:line="6" pos:column="15">"CAP_DAC_OVERRIDE capability is missing. The plugin's read "<pos:position pos:line="6" pos:column="75"/></literal>
              <literal type="string" pos:line="7" pos:column="15">"function will probably fail. Is your init system dropping "<pos:position pos:line="7" pos:column="75"/></literal>
              <literal type="string" pos:line="8" pos:column="15">"capabilities?"<pos:position pos:line="8" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="32"/></expr_stmt></block></then>
    <else pos:line="9" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="7">WARNING<pos:position pos:line="10" pos:column="14"/></name><argument_list pos:line="10" pos:column="14">(
          <argument><expr><literal type="string" pos:line="11" pos:column="11">"ceph plugin: collectd doesn't have the CAP_DAC_OVERRIDE "<pos:position pos:line="11" pos:column="69"/></literal>
          <literal type="string" pos:line="12" pos:column="11">"capability. If you don't want to run collectd as root, try running "<pos:position pos:line="12" pos:column="80"/></literal>
          <literal type="string" pos:line="13" pos:column="11">"\"setcap cap_dac_override=ep\" on the collectd binary."<pos:position pos:line="13" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="69"/></expr_stmt></block></else></if>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">ceph_daemons_print<pos:position pos:line="17" pos:column="21"/></name><argument_list pos:line="17" pos:column="21">()<pos:position pos:line="17" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="24"/></expr_stmt>

  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><name pos:line="19" pos:column="7">g_num_daemons<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">&lt;<pos:position pos:line="19" pos:column="25"/></operator> <literal type="number" pos:line="19" pos:column="23">1<pos:position pos:line="19" pos:column="24"/></literal></expr>)<pos:position pos:line="19" pos:column="25"/></condition><then pos:line="19" pos:column="25"> <block pos:line="19" pos:column="26">{
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">ERROR<pos:position pos:line="20" pos:column="10"/></name><argument_list pos:line="20" pos:column="10">(<argument><expr><literal type="string" pos:line="20" pos:column="11">"ceph plugin: No daemons configured. See the \"Daemon\" config "<pos:position pos:line="20" pos:column="75"/></literal>
          <literal type="string" pos:line="21" pos:column="11">"option."<pos:position pos:line="21" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="22"/></expr_stmt>
    <return pos:line="22" pos:column="5">return <expr><name pos:line="22" pos:column="12">ENOENT<pos:position pos:line="22" pos:column="18"/></name></expr>;<pos:position pos:line="22" pos:column="19"/></return>
  }<pos:position pos:line="23" pos:column="4"/></block></then></if>

  <return pos:line="25" pos:column="3">return <expr><call><name pos:line="25" pos:column="10">cconn_main_loop<pos:position pos:line="25" pos:column="25"/></name><argument_list pos:line="25" pos:column="25">(<argument><expr><name pos:line="25" pos:column="26">ASOK_REQ_VERSION<pos:position pos:line="25" pos:column="42"/></name></expr></argument>)<pos:position pos:line="25" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="44"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_829_collectd-4.3.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ping_set_ttl<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">pinghost_t<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">ph<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">int<pos:position pos:line="1" pos:column="45"/></name></type> <name pos:line="1" pos:column="46">ttl<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">ret<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><operator pos:line="3" pos:column="19">-<pos:position pos:line="3" pos:column="20"/></operator><literal type="number" pos:line="3" pos:column="20">2<pos:position pos:line="3" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name><name pos:line="5" pos:column="13">ph<pos:position pos:line="5" pos:column="15"/></name><operator pos:line="5" pos:column="15">-&gt;<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="17">addrfamily<pos:position pos:line="5" pos:column="27"/></name></name> <operator pos:line="5" pos:column="28">==<pos:position pos:line="5" pos:column="30"/></operator> <name pos:line="5" pos:column="31">AF_INET<pos:position pos:line="5" pos:column="38"/></name></expr>)<pos:position pos:line="5" pos:column="39"/></condition><then pos:line="5" pos:column="39">
	<block pos:line="6" pos:column="9">{
		<expr_stmt><expr><name pos:line="7" pos:column="17">ret<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">=<pos:position pos:line="7" pos:column="22"/></operator> <call><name pos:line="7" pos:column="23">setsockopt<pos:position pos:line="7" pos:column="33"/></name> <argument_list pos:line="7" pos:column="34">(<argument><expr><name><name pos:line="7" pos:column="35">ph<pos:position pos:line="7" pos:column="37"/></name><operator pos:line="7" pos:column="37">-&gt;<pos:position pos:line="7" pos:column="42"/></operator><name pos:line="7" pos:column="39">fd<pos:position pos:line="7" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="43">IPPROTO_IP<pos:position pos:line="7" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="55">IP_TTL<pos:position pos:line="7" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="63">&amp;<pos:position pos:line="7" pos:column="68"/></operator><name pos:line="7" pos:column="64">ttl<pos:position pos:line="7" pos:column="67"/></name></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="69">sizeof <argument_list pos:line="7" pos:column="76">(<argument><expr><name pos:line="7" pos:column="77">ttl<pos:position pos:line="7" pos:column="80"/></name></expr></argument>)<pos:position pos:line="7" pos:column="81"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="83"/></expr_stmt>
	}<pos:position pos:line="8" pos:column="10"/></block></then>
	<elseif pos:line="9" pos:column="9">else <if pos:line="9" pos:column="14">if <condition pos:line="9" pos:column="17">(<expr><name><name pos:line="9" pos:column="18">ph<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">-&gt;<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="22">addrfamily<pos:position pos:line="9" pos:column="32"/></name></name> <operator pos:line="9" pos:column="33">==<pos:position pos:line="9" pos:column="35"/></operator> <name pos:line="9" pos:column="36">AF_INET6<pos:position pos:line="9" pos:column="44"/></name></expr>)<pos:position pos:line="9" pos:column="45"/></condition><then pos:line="9" pos:column="45">
	<block pos:line="10" pos:column="9">{
		<expr_stmt><expr><name pos:line="11" pos:column="17">ret<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">=<pos:position pos:line="11" pos:column="22"/></operator> <call><name pos:line="11" pos:column="23">setsockopt<pos:position pos:line="11" pos:column="33"/></name> <argument_list pos:line="11" pos:column="34">(<argument><expr><name><name pos:line="11" pos:column="35">ph<pos:position pos:line="11" pos:column="37"/></name><operator pos:line="11" pos:column="37">-&gt;<pos:position pos:line="11" pos:column="42"/></operator><name pos:line="11" pos:column="39">fd<pos:position pos:line="11" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="43">IPPROTO_IPV6<pos:position pos:line="11" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="57">IPV6_UNICAST_HOPS<pos:position pos:line="11" pos:column="74"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="76">&amp;<pos:position pos:line="11" pos:column="81"/></operator><name pos:line="11" pos:column="77">ttl<pos:position pos:line="11" pos:column="80"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="82">sizeof <argument_list pos:line="11" pos:column="89">(<argument><expr><name pos:line="11" pos:column="90">ttl<pos:position pos:line="11" pos:column="93"/></name></expr></argument>)<pos:position pos:line="11" pos:column="94"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="96"/></expr_stmt>
	}<pos:position pos:line="12" pos:column="10"/></block></then></if></elseif></if>

	<return pos:line="14" pos:column="9">return <expr><operator pos:line="14" pos:column="16">(<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="17">ret<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">)<pos:position pos:line="14" pos:column="21"/></operator></expr>;<pos:position pos:line="14" pos:column="22"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

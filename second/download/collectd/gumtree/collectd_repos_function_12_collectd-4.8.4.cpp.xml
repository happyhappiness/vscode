<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_12_collectd-4.8.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">lt_dlexit<pos:position pos:line="2" pos:column="10"/></name> <parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><name pos:line="2" pos:column="12">void<pos:position pos:line="2" pos:column="16"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="17"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <comment type="block" pos:line="4" pos:column="3">/* shut down libltdl */</comment>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">lt_dlloader<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">loader<pos:position pos:line="5" pos:column="22"/></name>   <init pos:line="5" pos:column="25">= <expr><literal type="number" pos:line="5" pos:column="27">0<pos:position pos:line="5" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">lt_dlhandle<pos:position pos:line="6" pos:column="14"/></name></type>  <name pos:line="6" pos:column="16">handle<pos:position pos:line="6" pos:column="22"/></name>   <init pos:line="6" pos:column="25">= <expr><name pos:line="6" pos:column="27">handles<pos:position pos:line="6" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type>	       <name pos:line="7" pos:column="16">errors<pos:position pos:line="7" pos:column="22"/></name>   <init pos:line="7" pos:column="25">= <expr><literal type="number" pos:line="7" pos:column="27">0<pos:position pos:line="7" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">!<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">initialized<pos:position pos:line="9" pos:column="19"/></name></expr>)<pos:position pos:line="9" pos:column="20"/></condition><then pos:line="9" pos:column="20">
    <block pos:line="10" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="11" pos:column="7">LT__SETERROR<pos:position pos:line="11" pos:column="19"/></name> <argument_list pos:line="11" pos:column="20">(<argument><expr><name pos:line="11" pos:column="21">SHUTDOWN<pos:position pos:line="11" pos:column="29"/></name></expr></argument>)<pos:position pos:line="11" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="12" pos:column="7">++<pos:position pos:line="12" pos:column="9"/></operator><name pos:line="12" pos:column="9">errors<pos:position pos:line="12" pos:column="15"/></name></expr>;<pos:position pos:line="12" pos:column="16"/></expr_stmt>
      <goto pos:line="13" pos:column="7">goto <name pos:line="13" pos:column="12">done<pos:position pos:line="13" pos:column="16"/></name>;<pos:position pos:line="13" pos:column="17"/></goto>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

  <comment type="block" pos:line="16" pos:column="3">/* shut down only at last call. */</comment>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><operator pos:line="17" pos:column="7">--<pos:position pos:line="17" pos:column="9"/></operator><name pos:line="17" pos:column="9">initialized<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">==<pos:position pos:line="17" pos:column="23"/></operator> <literal type="number" pos:line="17" pos:column="24">0<pos:position pos:line="17" pos:column="25"/></literal></expr>)<pos:position pos:line="17" pos:column="26"/></condition><then pos:line="17" pos:column="26">
    <block pos:line="18" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="19" pos:column="7">int<pos:position pos:line="19" pos:column="10"/></name></type>	<name pos:line="19" pos:column="17">level<pos:position pos:line="19" pos:column="22"/></name></decl>;<pos:position pos:line="19" pos:column="23"/></decl_stmt>

      <while pos:line="21" pos:column="7">while <condition pos:line="21" pos:column="13">(<expr><name pos:line="21" pos:column="14">handles<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">&amp;&amp;<pos:position pos:line="21" pos:column="32"/></operator> <call><name pos:line="21" pos:column="25">LT_DLIS_RESIDENT<pos:position pos:line="21" pos:column="41"/></name> <argument_list pos:line="21" pos:column="42">(<argument><expr><name pos:line="21" pos:column="43">handles<pos:position pos:line="21" pos:column="50"/></name></expr></argument>)<pos:position pos:line="21" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="52"/></condition>
	<block pos:line="22" pos:column="9">{
	  <expr_stmt><expr><name pos:line="23" pos:column="11">handles<pos:position pos:line="23" pos:column="18"/></name> <operator pos:line="23" pos:column="19">=<pos:position pos:line="23" pos:column="20"/></operator> <name><name pos:line="23" pos:column="21">handles<pos:position pos:line="23" pos:column="28"/></name><operator pos:line="23" pos:column="28">-&gt;<pos:position pos:line="23" pos:column="33"/></operator><name pos:line="23" pos:column="30">next<pos:position pos:line="23" pos:column="34"/></name></name></expr>;<pos:position pos:line="23" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="24" pos:column="10"/></block></while>

      <comment type="block" pos:line="26" pos:column="7">/* close all modules */</comment>
      <for pos:line="27" pos:column="7">for <control pos:line="27" pos:column="11">(<init><expr><name pos:line="27" pos:column="12">level<pos:position pos:line="27" pos:column="17"/></name> <operator pos:line="27" pos:column="18">=<pos:position pos:line="27" pos:column="19"/></operator> <literal type="number" pos:line="27" pos:column="20">1<pos:position pos:line="27" pos:column="21"/></literal></expr>;<pos:position pos:line="27" pos:column="22"/></init> <condition><expr><name pos:line="27" pos:column="23">handle<pos:position pos:line="27" pos:column="29"/></name></expr>;<pos:position pos:line="27" pos:column="30"/></condition> <incr><expr><operator pos:line="27" pos:column="31">++<pos:position pos:line="27" pos:column="33"/></operator><name pos:line="27" pos:column="33">level<pos:position pos:line="27" pos:column="38"/></name></expr></incr>)<pos:position pos:line="27" pos:column="39"/></control>
	<block pos:line="28" pos:column="9">{
	  <decl_stmt><decl><type><name pos:line="29" pos:column="11">lt_dlhandle<pos:position pos:line="29" pos:column="22"/></name></type> <name pos:line="29" pos:column="23">cur<pos:position pos:line="29" pos:column="26"/></name> <init pos:line="29" pos:column="27">= <expr><name pos:line="29" pos:column="29">handles<pos:position pos:line="29" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="29" pos:column="37"/></decl_stmt>
	  <decl_stmt><decl><type><name pos:line="30" pos:column="11">int<pos:position pos:line="30" pos:column="14"/></name></type> <name pos:line="30" pos:column="15">saw_nonresident<pos:position pos:line="30" pos:column="30"/></name> <init pos:line="30" pos:column="31">= <expr><literal type="number" pos:line="30" pos:column="33">0<pos:position pos:line="30" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="30" pos:column="35"/></decl_stmt>

	  <while pos:line="32" pos:column="11">while <condition pos:line="32" pos:column="17">(<expr><name pos:line="32" pos:column="18">cur<pos:position pos:line="32" pos:column="21"/></name></expr>)<pos:position pos:line="32" pos:column="22"/></condition>
	    <block pos:line="33" pos:column="13">{
	      <decl_stmt><decl><type><name pos:line="34" pos:column="15">lt_dlhandle<pos:position pos:line="34" pos:column="26"/></name></type> <name pos:line="34" pos:column="27">tmp<pos:position pos:line="34" pos:column="30"/></name> <init pos:line="34" pos:column="31">= <expr><name pos:line="34" pos:column="33">cur<pos:position pos:line="34" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="34" pos:column="37"/></decl_stmt>
	      <expr_stmt><expr><name pos:line="35" pos:column="15">cur<pos:position pos:line="35" pos:column="18"/></name> <operator pos:line="35" pos:column="19">=<pos:position pos:line="35" pos:column="20"/></operator> <name><name pos:line="35" pos:column="21">cur<pos:position pos:line="35" pos:column="24"/></name><operator pos:line="35" pos:column="24">-&gt;<pos:position pos:line="35" pos:column="29"/></operator><name pos:line="35" pos:column="26">next<pos:position pos:line="35" pos:column="30"/></name></name></expr>;<pos:position pos:line="35" pos:column="31"/></expr_stmt>
	      <if pos:line="36" pos:column="15">if <condition pos:line="36" pos:column="18">(<expr><operator pos:line="36" pos:column="19">!<pos:position pos:line="36" pos:column="20"/></operator><call><name pos:line="36" pos:column="20">LT_DLIS_RESIDENT<pos:position pos:line="36" pos:column="36"/></name> <argument_list pos:line="36" pos:column="37">(<argument><expr><name pos:line="36" pos:column="38">tmp<pos:position pos:line="36" pos:column="41"/></name></expr></argument>)<pos:position pos:line="36" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="43"/></condition><then pos:line="36" pos:column="43">
		<block pos:line="37" pos:column="17">{
		  <expr_stmt><expr><name pos:line="38" pos:column="19">saw_nonresident<pos:position pos:line="38" pos:column="34"/></name> <operator pos:line="38" pos:column="35">=<pos:position pos:line="38" pos:column="36"/></operator> <literal type="number" pos:line="38" pos:column="37">1<pos:position pos:line="38" pos:column="38"/></literal></expr>;<pos:position pos:line="38" pos:column="39"/></expr_stmt>
		  <if pos:line="39" pos:column="19">if <condition pos:line="39" pos:column="22">(<expr><name><name pos:line="39" pos:column="23">tmp<pos:position pos:line="39" pos:column="26"/></name><operator pos:line="39" pos:column="26">-&gt;<pos:position pos:line="39" pos:column="31"/></operator><name pos:line="39" pos:column="28">info<pos:position pos:line="39" pos:column="32"/></name><operator pos:line="39" pos:column="32">.<pos:position pos:line="39" pos:column="33"/></operator><name pos:line="39" pos:column="33">ref_count<pos:position pos:line="39" pos:column="42"/></name></name> <operator pos:line="39" pos:column="43">&lt;=<pos:position pos:line="39" pos:column="48"/></operator> <name pos:line="39" pos:column="46">level<pos:position pos:line="39" pos:column="51"/></name></expr>)<pos:position pos:line="39" pos:column="52"/></condition><then pos:line="39" pos:column="52">
		    <block pos:line="40" pos:column="21">{
		      <if pos:line="41" pos:column="23">if <condition pos:line="41" pos:column="26">(<expr><call><name pos:line="41" pos:column="27">lt_dlclose<pos:position pos:line="41" pos:column="37"/></name> <argument_list pos:line="41" pos:column="38">(<argument><expr><name pos:line="41" pos:column="39">tmp<pos:position pos:line="41" pos:column="42"/></name></expr></argument>)<pos:position pos:line="41" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="44"/></condition><then pos:line="41" pos:column="44">
			<block pos:line="42" pos:column="25">{
			  <expr_stmt><expr><operator pos:line="43" pos:column="27">++<pos:position pos:line="43" pos:column="29"/></operator><name pos:line="43" pos:column="29">errors<pos:position pos:line="43" pos:column="35"/></name></expr>;<pos:position pos:line="43" pos:column="36"/></expr_stmt>
			}<pos:position pos:line="44" pos:column="26"/></block></then></if>
		      <comment type="block" pos:line="45" pos:column="23">/* Make sure that the handle pointed to by 'cur' still exists.
			 lt_dlclose recursively closes dependent libraries which removes
			 them from the linked list.  One of these might be the one
			 pointed to by 'cur'.  */</comment>
		      <if pos:line="49" pos:column="23">if <condition pos:line="49" pos:column="26">(<expr><name pos:line="49" pos:column="27">cur<pos:position pos:line="49" pos:column="30"/></name></expr>)<pos:position pos:line="49" pos:column="31"/></condition><then pos:line="49" pos:column="31">
			<block pos:line="50" pos:column="25">{
			  <for pos:line="51" pos:column="27">for <control pos:line="51" pos:column="31">(<init><expr><name pos:line="51" pos:column="32">tmp<pos:position pos:line="51" pos:column="35"/></name> <operator pos:line="51" pos:column="36">=<pos:position pos:line="51" pos:column="37"/></operator> <name pos:line="51" pos:column="38">handles<pos:position pos:line="51" pos:column="45"/></name></expr>;<pos:position pos:line="51" pos:column="46"/></init> <condition><expr><name pos:line="51" pos:column="47">tmp<pos:position pos:line="51" pos:column="50"/></name></expr>;<pos:position pos:line="51" pos:column="51"/></condition> <incr><expr><name pos:line="51" pos:column="52">tmp<pos:position pos:line="51" pos:column="55"/></name> <operator pos:line="51" pos:column="56">=<pos:position pos:line="51" pos:column="57"/></operator> <name><name pos:line="51" pos:column="58">tmp<pos:position pos:line="51" pos:column="61"/></name><operator pos:line="51" pos:column="61">-&gt;<pos:position pos:line="51" pos:column="66"/></operator><name pos:line="51" pos:column="63">next<pos:position pos:line="51" pos:column="67"/></name></name></expr></incr>)<pos:position pos:line="51" pos:column="68"/></control>
			    <block type="pseudo"><if pos:line="52" pos:column="29">if <condition pos:line="52" pos:column="32">(<expr><name pos:line="52" pos:column="33">tmp<pos:position pos:line="52" pos:column="36"/></name> <operator pos:line="52" pos:column="37">==<pos:position pos:line="52" pos:column="39"/></operator> <name pos:line="52" pos:column="40">cur<pos:position pos:line="52" pos:column="43"/></name></expr>)<pos:position pos:line="52" pos:column="44"/></condition><then pos:line="52" pos:column="44">
			      <block type="pseudo"><break pos:line="53" pos:column="31">break;<pos:position pos:line="53" pos:column="37"/></break></block></then></if></block></for>
			  <if pos:line="54" pos:column="27">if <condition pos:line="54" pos:column="30">(<expr><operator pos:line="54" pos:column="31">!<pos:position pos:line="54" pos:column="32"/></operator> <name pos:line="54" pos:column="33">tmp<pos:position pos:line="54" pos:column="36"/></name></expr>)<pos:position pos:line="54" pos:column="37"/></condition><then pos:line="54" pos:column="37">
			    <block type="pseudo"><expr_stmt><expr><name pos:line="55" pos:column="29">cur<pos:position pos:line="55" pos:column="32"/></name> <operator pos:line="55" pos:column="33">=<pos:position pos:line="55" pos:column="34"/></operator> <name pos:line="55" pos:column="35">handles<pos:position pos:line="55" pos:column="42"/></name></expr>;<pos:position pos:line="55" pos:column="43"/></expr_stmt></block></then></if>
			}<pos:position pos:line="56" pos:column="26"/></block></then></if>
		    }<pos:position pos:line="57" pos:column="22"/></block></then></if>
		}<pos:position pos:line="58" pos:column="18"/></block></then></if>
	    }<pos:position pos:line="59" pos:column="14"/></block></while>
	  <comment type="block" pos:line="60" pos:column="11">/* done if only resident modules are left */</comment>
	  <if pos:line="61" pos:column="11">if <condition pos:line="61" pos:column="14">(<expr><operator pos:line="61" pos:column="15">!<pos:position pos:line="61" pos:column="16"/></operator><name pos:line="61" pos:column="16">saw_nonresident<pos:position pos:line="61" pos:column="31"/></name></expr>)<pos:position pos:line="61" pos:column="32"/></condition><then pos:line="61" pos:column="32">
	    <block type="pseudo"><break pos:line="62" pos:column="13">break;<pos:position pos:line="62" pos:column="19"/></break></block></then></if>
	}<pos:position pos:line="63" pos:column="10"/></block></for>

      <comment type="block" pos:line="65" pos:column="7">/* When removing loaders, we can only find out failure by testing
	 the error string, so avoid a spurious one from an earlier
	 failed command. */</comment>
      <if pos:line="68" pos:column="7">if <condition pos:line="68" pos:column="10">(<expr><operator pos:line="68" pos:column="11">!<pos:position pos:line="68" pos:column="12"/></operator><name pos:line="68" pos:column="12">errors<pos:position pos:line="68" pos:column="18"/></name></expr>)<pos:position pos:line="68" pos:column="19"/></condition><then pos:line="68" pos:column="19">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="69" pos:column="9">LT__SETERRORSTR<pos:position pos:line="69" pos:column="24"/></name> <argument_list pos:line="69" pos:column="25">(<argument><expr><literal type="number" pos:line="69" pos:column="26">0<pos:position pos:line="69" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="29"/></expr_stmt></block></then></if>

      <comment type="block" pos:line="71" pos:column="7">/* close all loaders */</comment>
      <for pos:line="72" pos:column="7">for <control pos:line="72" pos:column="11">(<init><expr><name pos:line="72" pos:column="12">loader<pos:position pos:line="72" pos:column="18"/></name> <operator pos:line="72" pos:column="19">=<pos:position pos:line="72" pos:column="20"/></operator> <operator pos:line="72" pos:column="21">(<pos:position pos:line="72" pos:column="22"/></operator><name pos:line="72" pos:column="22">lt_dlloader<pos:position pos:line="72" pos:column="33"/></name> <operator pos:line="72" pos:column="34">*<pos:position pos:line="72" pos:column="35"/></operator><operator pos:line="72" pos:column="35">)<pos:position pos:line="72" pos:column="36"/></operator> <call><name pos:line="72" pos:column="37">lt_dlloader_next<pos:position pos:line="72" pos:column="53"/></name> <argument_list pos:line="72" pos:column="54">(<argument><expr><name pos:line="72" pos:column="55">NULL<pos:position pos:line="72" pos:column="59"/></name></expr></argument>)<pos:position pos:line="72" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="61"/></init> <condition><expr><name pos:line="72" pos:column="62">loader<pos:position pos:line="72" pos:column="68"/></name></expr>;<pos:position pos:line="72" pos:column="69"/></condition><incr/>)<pos:position pos:line="72" pos:column="70"/></control>
	<block pos:line="73" pos:column="9">{
	  <decl_stmt><decl><type><name pos:line="74" pos:column="11">lt_dlloader<pos:position pos:line="74" pos:column="22"/></name> <modifier pos:line="74" pos:column="23">*<pos:position pos:line="74" pos:column="24"/></modifier></type><name pos:line="74" pos:column="24">next<pos:position pos:line="74" pos:column="28"/></name>   <init pos:line="74" pos:column="31">= <expr><operator pos:line="74" pos:column="33">(<pos:position pos:line="74" pos:column="34"/></operator><name pos:line="74" pos:column="34">lt_dlloader<pos:position pos:line="74" pos:column="45"/></name> <operator pos:line="74" pos:column="46">*<pos:position pos:line="74" pos:column="47"/></operator><operator pos:line="74" pos:column="47">)<pos:position pos:line="74" pos:column="48"/></operator> <call><name pos:line="74" pos:column="49">lt_dlloader_next<pos:position pos:line="74" pos:column="65"/></name> <argument_list pos:line="74" pos:column="66">(<argument><expr><name pos:line="74" pos:column="67">loader<pos:position pos:line="74" pos:column="73"/></name></expr></argument>)<pos:position pos:line="74" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="74" pos:column="75"/></decl_stmt>
	  <decl_stmt><decl><type><name pos:line="75" pos:column="11">lt_dlvtable<pos:position pos:line="75" pos:column="22"/></name> <modifier pos:line="75" pos:column="23">*<pos:position pos:line="75" pos:column="24"/></modifier></type><name pos:line="75" pos:column="24">vtable<pos:position pos:line="75" pos:column="30"/></name> <init pos:line="75" pos:column="31">= <expr><operator pos:line="75" pos:column="33">(<pos:position pos:line="75" pos:column="34"/></operator><name pos:line="75" pos:column="34">lt_dlvtable<pos:position pos:line="75" pos:column="45"/></name> <operator pos:line="75" pos:column="46">*<pos:position pos:line="75" pos:column="47"/></operator><operator pos:line="75" pos:column="47">)<pos:position pos:line="75" pos:column="48"/></operator> <call><name pos:line="75" pos:column="49">lt_dlloader_get<pos:position pos:line="75" pos:column="64"/></name> <argument_list pos:line="75" pos:column="65">(<argument><expr><name pos:line="75" pos:column="66">loader<pos:position pos:line="75" pos:column="72"/></name></expr></argument>)<pos:position pos:line="75" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="75" pos:column="74"/></decl_stmt>

	  <if pos:line="77" pos:column="11">if <condition pos:line="77" pos:column="14">(<expr><operator pos:line="77" pos:column="15">(<pos:position pos:line="77" pos:column="16"/></operator><name pos:line="77" pos:column="16">vtable<pos:position pos:line="77" pos:column="22"/></name> <operator pos:line="77" pos:column="23">=<pos:position pos:line="77" pos:column="24"/></operator> <call><name pos:line="77" pos:column="25">lt_dlloader_remove<pos:position pos:line="77" pos:column="43"/></name> <argument_list pos:line="77" pos:column="44">(<argument><expr><operator pos:line="77" pos:column="45">(<pos:position pos:line="77" pos:column="46"/></operator><name pos:line="77" pos:column="46">char<pos:position pos:line="77" pos:column="50"/></name> <operator pos:line="77" pos:column="51">*<pos:position pos:line="77" pos:column="52"/></operator><operator pos:line="77" pos:column="52">)<pos:position pos:line="77" pos:column="53"/></operator> <name><name pos:line="77" pos:column="54">vtable<pos:position pos:line="77" pos:column="60"/></name><operator pos:line="77" pos:column="60">-&gt;<pos:position pos:line="77" pos:column="65"/></operator><name pos:line="77" pos:column="62">name<pos:position pos:line="77" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="67"/></argument_list></call><operator pos:line="77" pos:column="67">)<pos:position pos:line="77" pos:column="68"/></operator></expr>)<pos:position pos:line="77" pos:column="69"/></condition><then pos:line="77" pos:column="69">
	    <block pos:line="78" pos:column="13">{
	      <expr_stmt><expr><call><name pos:line="79" pos:column="15">FREE<pos:position pos:line="79" pos:column="19"/></name> <argument_list pos:line="79" pos:column="20">(<argument><expr><name pos:line="79" pos:column="21">vtable<pos:position pos:line="79" pos:column="27"/></name></expr></argument>)<pos:position pos:line="79" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="29"/></expr_stmt>
	    }<pos:position pos:line="80" pos:column="14"/></block></then>
	  <else pos:line="81" pos:column="11">else
	    <block pos:line="82" pos:column="13">{
	      <comment type="block" pos:line="83" pos:column="15">/* ignore errors due to resident modules */</comment>
	      <decl_stmt><decl><type><specifier pos:line="84" pos:column="15">const<pos:position pos:line="84" pos:column="20"/></specifier> <name pos:line="84" pos:column="21">char<pos:position pos:line="84" pos:column="25"/></name> <modifier pos:line="84" pos:column="26">*<pos:position pos:line="84" pos:column="27"/></modifier></type><name pos:line="84" pos:column="27">err<pos:position pos:line="84" pos:column="30"/></name></decl>;<pos:position pos:line="84" pos:column="31"/></decl_stmt>
	      <expr_stmt><expr><call><name pos:line="85" pos:column="15">LT__GETERROR<pos:position pos:line="85" pos:column="27"/></name> <argument_list pos:line="85" pos:column="28">(<argument><expr><name pos:line="85" pos:column="29">err<pos:position pos:line="85" pos:column="32"/></name></expr></argument>)<pos:position pos:line="85" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="34"/></expr_stmt>
	      <if pos:line="86" pos:column="15">if <condition pos:line="86" pos:column="18">(<expr><name pos:line="86" pos:column="19">err<pos:position pos:line="86" pos:column="22"/></name></expr>)<pos:position pos:line="86" pos:column="23"/></condition><then pos:line="86" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="87" pos:column="17">++<pos:position pos:line="87" pos:column="19"/></operator><name pos:line="87" pos:column="19">errors<pos:position pos:line="87" pos:column="25"/></name></expr>;<pos:position pos:line="87" pos:column="26"/></expr_stmt></block></then></if>
	    }<pos:position pos:line="88" pos:column="14"/></block></else></if>

	  <expr_stmt><expr><name pos:line="90" pos:column="11">loader<pos:position pos:line="90" pos:column="17"/></name> <operator pos:line="90" pos:column="18">=<pos:position pos:line="90" pos:column="19"/></operator> <name pos:line="90" pos:column="20">next<pos:position pos:line="90" pos:column="24"/></name></expr>;<pos:position pos:line="90" pos:column="25"/></expr_stmt>
	}<pos:position pos:line="91" pos:column="10"/></block></for>

      <expr_stmt><expr><call><name pos:line="93" pos:column="7">FREE<pos:position pos:line="93" pos:column="11"/></name><argument_list pos:line="93" pos:column="11">(<argument><expr><name pos:line="93" pos:column="12">user_search_path<pos:position pos:line="93" pos:column="28"/></name></expr></argument>)<pos:position pos:line="93" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="94" pos:column="6"/></block></then></if>

 <label><name pos:line="96" pos:column="2">done<pos:position pos:line="96" pos:column="6"/></name>:<pos:position pos:line="96" pos:column="7"/></label>
  <return pos:line="97" pos:column="3">return <expr><name pos:line="97" pos:column="10">errors<pos:position pos:line="97" pos:column="16"/></name></expr>;<pos:position pos:line="97" pos:column="17"/></return>
}<pos:position pos:line="98" pos:column="2"/></block></function></unit>

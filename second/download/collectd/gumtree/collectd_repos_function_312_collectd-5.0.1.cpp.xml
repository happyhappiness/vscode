<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_312_collectd-5.0.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">camqp_config_connection<pos:position pos:line="1" pos:column="35"/></name> <parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">oconfig_item_t<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">ci<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="57">/* {{{ */</comment>
        <parameter><decl><type><name pos:line="2" pos:column="9">_Bool<pos:position pos:line="2" pos:column="14"/></name></type> <name pos:line="2" pos:column="15">publish<pos:position pos:line="2" pos:column="22"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="23"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">camqp_config_t<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">conf<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">status<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">i<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>

    <expr_stmt><expr><name pos:line="8" pos:column="5">conf<pos:position pos:line="8" pos:column="9"/></name> <operator pos:line="8" pos:column="10">=<pos:position pos:line="8" pos:column="11"/></operator> <call><name pos:line="8" pos:column="12">malloc<pos:position pos:line="8" pos:column="18"/></name> <argument_list pos:line="8" pos:column="19">(<argument><expr><sizeof pos:line="8" pos:column="20">sizeof <argument_list pos:line="8" pos:column="27">(<argument><expr><operator pos:line="8" pos:column="28">*<pos:position pos:line="8" pos:column="29"/></operator><name pos:line="8" pos:column="29">conf<pos:position pos:line="8" pos:column="33"/></name></expr></argument>)<pos:position pos:line="8" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="36"/></expr_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">conf<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">==<pos:position pos:line="9" pos:column="16"/></operator> <name pos:line="9" pos:column="17">NULL<pos:position pos:line="9" pos:column="21"/></name></expr>)<pos:position pos:line="9" pos:column="22"/></condition><then pos:line="9" pos:column="22">
    <block pos:line="10" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">ERROR<pos:position pos:line="11" pos:column="14"/></name> <argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="string" pos:line="11" pos:column="16">"amqp plugin: malloc failed."<pos:position pos:line="11" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="47"/></expr_stmt>
        <return pos:line="12" pos:column="9">return <expr><operator pos:line="12" pos:column="16">(<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="17">ENOMEM<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">)<pos:position pos:line="12" pos:column="24"/></operator></expr>;<pos:position pos:line="12" pos:column="25"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="15" pos:column="5">/* Initialize "conf" {{{ */</comment>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">memset<pos:position pos:line="16" pos:column="11"/></name> <argument_list pos:line="16" pos:column="12">(<argument><expr><name pos:line="16" pos:column="13">conf<pos:position pos:line="16" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="19">0<pos:position pos:line="16" pos:column="20"/></literal></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="22">sizeof <argument_list pos:line="16" pos:column="29">(<argument><expr><operator pos:line="16" pos:column="30">*<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="31">conf<pos:position pos:line="16" pos:column="35"/></name></expr></argument>)<pos:position pos:line="16" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">conf<pos:position pos:line="17" pos:column="9"/></name><operator pos:line="17" pos:column="9">-&gt;<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="11">publish<pos:position pos:line="17" pos:column="18"/></name></name> <operator pos:line="17" pos:column="19">=<pos:position pos:line="17" pos:column="20"/></operator> <name pos:line="17" pos:column="21">publish<pos:position pos:line="17" pos:column="28"/></name></expr>;<pos:position pos:line="17" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">conf<pos:position pos:line="18" pos:column="9"/></name><operator pos:line="18" pos:column="9">-&gt;<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="11">name<pos:position pos:line="18" pos:column="15"/></name></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <name pos:line="18" pos:column="18">NULL<pos:position pos:line="18" pos:column="22"/></name></expr>;<pos:position pos:line="18" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">conf<pos:position pos:line="19" pos:column="9"/></name><operator pos:line="19" pos:column="9">-&gt;<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="11">format<pos:position pos:line="19" pos:column="17"/></name></name> <operator pos:line="19" pos:column="18">=<pos:position pos:line="19" pos:column="19"/></operator> <name pos:line="19" pos:column="20">CAMQP_FORMAT_COMMAND<pos:position pos:line="19" pos:column="40"/></name></expr>;<pos:position pos:line="19" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">conf<pos:position pos:line="20" pos:column="9"/></name><operator pos:line="20" pos:column="9">-&gt;<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="11">host<pos:position pos:line="20" pos:column="15"/></name></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <name pos:line="20" pos:column="18">NULL<pos:position pos:line="20" pos:column="22"/></name></expr>;<pos:position pos:line="20" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="21" pos:column="5">conf<pos:position pos:line="21" pos:column="9"/></name><operator pos:line="21" pos:column="9">-&gt;<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="11">port<pos:position pos:line="21" pos:column="15"/></name></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <literal type="number" pos:line="21" pos:column="18">5672<pos:position pos:line="21" pos:column="22"/></literal></expr>;<pos:position pos:line="21" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">conf<pos:position pos:line="22" pos:column="9"/></name><operator pos:line="22" pos:column="9">-&gt;<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="11">vhost<pos:position pos:line="22" pos:column="16"/></name></name> <operator pos:line="22" pos:column="17">=<pos:position pos:line="22" pos:column="18"/></operator> <name pos:line="22" pos:column="19">NULL<pos:position pos:line="22" pos:column="23"/></name></expr>;<pos:position pos:line="22" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">conf<pos:position pos:line="23" pos:column="9"/></name><operator pos:line="23" pos:column="9">-&gt;<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="11">user<pos:position pos:line="23" pos:column="15"/></name></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <name pos:line="23" pos:column="18">NULL<pos:position pos:line="23" pos:column="22"/></name></expr>;<pos:position pos:line="23" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">conf<pos:position pos:line="24" pos:column="9"/></name><operator pos:line="24" pos:column="9">-&gt;<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="11">password<pos:position pos:line="24" pos:column="19"/></name></name> <operator pos:line="24" pos:column="20">=<pos:position pos:line="24" pos:column="21"/></operator> <name pos:line="24" pos:column="22">NULL<pos:position pos:line="24" pos:column="26"/></name></expr>;<pos:position pos:line="24" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">conf<pos:position pos:line="25" pos:column="9"/></name><operator pos:line="25" pos:column="9">-&gt;<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="11">exchange<pos:position pos:line="25" pos:column="19"/></name></name> <operator pos:line="25" pos:column="20">=<pos:position pos:line="25" pos:column="21"/></operator> <name pos:line="25" pos:column="22">NULL<pos:position pos:line="25" pos:column="26"/></name></expr>;<pos:position pos:line="25" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">conf<pos:position pos:line="26" pos:column="9"/></name><operator pos:line="26" pos:column="9">-&gt;<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="11">routing_key<pos:position pos:line="26" pos:column="22"/></name></name> <operator pos:line="26" pos:column="23">=<pos:position pos:line="26" pos:column="24"/></operator> <name pos:line="26" pos:column="25">NULL<pos:position pos:line="26" pos:column="29"/></name></expr>;<pos:position pos:line="26" pos:column="30"/></expr_stmt>
    <comment type="block" pos:line="27" pos:column="5">/* publish only */</comment>
    <expr_stmt><expr><name><name pos:line="28" pos:column="5">conf<pos:position pos:line="28" pos:column="9"/></name><operator pos:line="28" pos:column="9">-&gt;<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="11">delivery_mode<pos:position pos:line="28" pos:column="24"/></name></name> <operator pos:line="28" pos:column="25">=<pos:position pos:line="28" pos:column="26"/></operator> <name pos:line="28" pos:column="27">CAMQP_DM_VOLATILE<pos:position pos:line="28" pos:column="44"/></name></expr>;<pos:position pos:line="28" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">conf<pos:position pos:line="29" pos:column="9"/></name><operator pos:line="29" pos:column="9">-&gt;<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="11">store_rates<pos:position pos:line="29" pos:column="22"/></name></name> <operator pos:line="29" pos:column="23">=<pos:position pos:line="29" pos:column="24"/></operator> <literal type="number" pos:line="29" pos:column="25">0<pos:position pos:line="29" pos:column="26"/></literal></expr>;<pos:position pos:line="29" pos:column="27"/></expr_stmt>
    <comment type="block" pos:line="30" pos:column="5">/* subscribe only */</comment>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">conf<pos:position pos:line="31" pos:column="9"/></name><operator pos:line="31" pos:column="9">-&gt;<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="11">exchange_type<pos:position pos:line="31" pos:column="24"/></name></name> <operator pos:line="31" pos:column="25">=<pos:position pos:line="31" pos:column="26"/></operator> <name pos:line="31" pos:column="27">NULL<pos:position pos:line="31" pos:column="31"/></name></expr>;<pos:position pos:line="31" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">conf<pos:position pos:line="32" pos:column="9"/></name><operator pos:line="32" pos:column="9">-&gt;<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="11">queue<pos:position pos:line="32" pos:column="16"/></name></name> <operator pos:line="32" pos:column="17">=<pos:position pos:line="32" pos:column="18"/></operator> <name pos:line="32" pos:column="19">NULL<pos:position pos:line="32" pos:column="23"/></name></expr>;<pos:position pos:line="32" pos:column="24"/></expr_stmt>
    <comment type="block" pos:line="33" pos:column="5">/* general */</comment>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">conf<pos:position pos:line="34" pos:column="9"/></name><operator pos:line="34" pos:column="9">-&gt;<pos:position pos:line="34" pos:column="14"/></operator><name pos:line="34" pos:column="11">connection<pos:position pos:line="34" pos:column="21"/></name></name> <operator pos:line="34" pos:column="22">=<pos:position pos:line="34" pos:column="23"/></operator> <name pos:line="34" pos:column="24">NULL<pos:position pos:line="34" pos:column="28"/></name></expr>;<pos:position pos:line="34" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">pthread_mutex_init<pos:position pos:line="35" pos:column="23"/></name> <argument_list pos:line="35" pos:column="24">(<argument><expr><operator pos:line="35" pos:column="25">&amp;<pos:position pos:line="35" pos:column="30"/></operator><name><name pos:line="35" pos:column="26">conf<pos:position pos:line="35" pos:column="30"/></name><operator pos:line="35" pos:column="30">-&gt;<pos:position pos:line="35" pos:column="35"/></operator><name pos:line="35" pos:column="32">lock<pos:position pos:line="35" pos:column="36"/></name></name></expr></argument>, <comment type="block" pos:line="35" pos:column="38">/* attr = */</comment> <argument><expr><name pos:line="35" pos:column="51">NULL<pos:position pos:line="35" pos:column="55"/></name></expr></argument>)<pos:position pos:line="35" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="57"/></expr_stmt>
    <comment type="block" pos:line="36" pos:column="5">/* }}} */</comment>

    <expr_stmt><expr><name pos:line="38" pos:column="5">status<pos:position pos:line="38" pos:column="11"/></name> <operator pos:line="38" pos:column="12">=<pos:position pos:line="38" pos:column="13"/></operator> <call><name pos:line="38" pos:column="14">cf_util_get_string<pos:position pos:line="38" pos:column="32"/></name> <argument_list pos:line="38" pos:column="33">(<argument><expr><name pos:line="38" pos:column="34">ci<pos:position pos:line="38" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="38">&amp;<pos:position pos:line="38" pos:column="43"/></operator><name><name pos:line="38" pos:column="39">conf<pos:position pos:line="38" pos:column="43"/></name><operator pos:line="38" pos:column="43">-&gt;<pos:position pos:line="38" pos:column="48"/></operator><name pos:line="38" pos:column="45">name<pos:position pos:line="38" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="51"/></expr_stmt>
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name pos:line="39" pos:column="9">status<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">!=<pos:position pos:line="39" pos:column="18"/></operator> <literal type="number" pos:line="39" pos:column="19">0<pos:position pos:line="39" pos:column="20"/></literal></expr>)<pos:position pos:line="39" pos:column="21"/></condition><then pos:line="39" pos:column="21">
    <block pos:line="40" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">sfree<pos:position pos:line="41" pos:column="14"/></name> <argument_list pos:line="41" pos:column="15">(<argument><expr><name pos:line="41" pos:column="16">conf<pos:position pos:line="41" pos:column="20"/></name></expr></argument>)<pos:position pos:line="41" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="22"/></expr_stmt>
        <return pos:line="42" pos:column="9">return <expr><operator pos:line="42" pos:column="16">(<pos:position pos:line="42" pos:column="17"/></operator><name pos:line="42" pos:column="17">status<pos:position pos:line="42" pos:column="23"/></name><operator pos:line="42" pos:column="23">)<pos:position pos:line="42" pos:column="24"/></operator></expr>;<pos:position pos:line="42" pos:column="25"/></return>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>

    <for pos:line="45" pos:column="5">for <control pos:line="45" pos:column="9">(<init><expr><name pos:line="45" pos:column="10">i<pos:position pos:line="45" pos:column="11"/></name> <operator pos:line="45" pos:column="12">=<pos:position pos:line="45" pos:column="13"/></operator> <literal type="number" pos:line="45" pos:column="14">0<pos:position pos:line="45" pos:column="15"/></literal></expr>;<pos:position pos:line="45" pos:column="16"/></init> <condition><expr><name pos:line="45" pos:column="17">i<pos:position pos:line="45" pos:column="18"/></name> <operator pos:line="45" pos:column="19">&lt;<pos:position pos:line="45" pos:column="23"/></operator> <name><name pos:line="45" pos:column="21">ci<pos:position pos:line="45" pos:column="23"/></name><operator pos:line="45" pos:column="23">-&gt;<pos:position pos:line="45" pos:column="28"/></operator><name pos:line="45" pos:column="25">children_num<pos:position pos:line="45" pos:column="37"/></name></name></expr>;<pos:position pos:line="45" pos:column="38"/></condition> <incr><expr><name pos:line="45" pos:column="39">i<pos:position pos:line="45" pos:column="40"/></name><operator pos:line="45" pos:column="40">++<pos:position pos:line="45" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="45" pos:column="43"/></control>
    <block pos:line="46" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="47" pos:column="9">oconfig_item_t<pos:position pos:line="47" pos:column="23"/></name> <modifier pos:line="47" pos:column="24">*<pos:position pos:line="47" pos:column="25"/></modifier></type><name pos:line="47" pos:column="25">child<pos:position pos:line="47" pos:column="30"/></name> <init pos:line="47" pos:column="31">= <expr><name><name pos:line="47" pos:column="33">ci<pos:position pos:line="47" pos:column="35"/></name><operator pos:line="47" pos:column="35">-&gt;<pos:position pos:line="47" pos:column="40"/></operator><name pos:line="47" pos:column="37">children<pos:position pos:line="47" pos:column="45"/></name></name> <operator pos:line="47" pos:column="46">+<pos:position pos:line="47" pos:column="47"/></operator> <name pos:line="47" pos:column="48">i<pos:position pos:line="47" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="47" pos:column="50"/></decl_stmt>

        <if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><call><name pos:line="49" pos:column="13">strcasecmp<pos:position pos:line="49" pos:column="23"/></name> <argument_list pos:line="49" pos:column="24">(<argument><expr><literal type="string" pos:line="49" pos:column="25">"Host"<pos:position pos:line="49" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="33">child<pos:position pos:line="49" pos:column="38"/></name><operator pos:line="49" pos:column="38">-&gt;<pos:position pos:line="49" pos:column="43"/></operator><name pos:line="49" pos:column="40">key<pos:position pos:line="49" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="44"/></argument_list></call> <operator pos:line="49" pos:column="45">==<pos:position pos:line="49" pos:column="47"/></operator> <literal type="number" pos:line="49" pos:column="48">0<pos:position pos:line="49" pos:column="49"/></literal></expr>)<pos:position pos:line="49" pos:column="50"/></condition><then pos:line="49" pos:column="50">
            <block type="pseudo"><expr_stmt><expr><name pos:line="50" pos:column="13">status<pos:position pos:line="50" pos:column="19"/></name> <operator pos:line="50" pos:column="20">=<pos:position pos:line="50" pos:column="21"/></operator> <call><name pos:line="50" pos:column="22">cf_util_get_string<pos:position pos:line="50" pos:column="40"/></name> <argument_list pos:line="50" pos:column="41">(<argument><expr><name pos:line="50" pos:column="42">child<pos:position pos:line="50" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="49">&amp;<pos:position pos:line="50" pos:column="54"/></operator><name><name pos:line="50" pos:column="50">conf<pos:position pos:line="50" pos:column="54"/></name><operator pos:line="50" pos:column="54">-&gt;<pos:position pos:line="50" pos:column="59"/></operator><name pos:line="50" pos:column="56">host<pos:position pos:line="50" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="62"/></expr_stmt></block></then>
        <elseif pos:line="51" pos:column="9">else <if pos:line="51" pos:column="14">if <condition pos:line="51" pos:column="17">(<expr><call><name pos:line="51" pos:column="18">strcasecmp<pos:position pos:line="51" pos:column="28"/></name> <argument_list pos:line="51" pos:column="29">(<argument><expr><literal type="string" pos:line="51" pos:column="30">"Port"<pos:position pos:line="51" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="38">child<pos:position pos:line="51" pos:column="43"/></name><operator pos:line="51" pos:column="43">-&gt;<pos:position pos:line="51" pos:column="48"/></operator><name pos:line="51" pos:column="45">key<pos:position pos:line="51" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="49"/></argument_list></call> <operator pos:line="51" pos:column="50">==<pos:position pos:line="51" pos:column="52"/></operator> <literal type="number" pos:line="51" pos:column="53">0<pos:position pos:line="51" pos:column="54"/></literal></expr>)<pos:position pos:line="51" pos:column="55"/></condition><then pos:line="51" pos:column="55">
        <block pos:line="52" pos:column="9">{
            <expr_stmt><expr><name pos:line="53" pos:column="13">status<pos:position pos:line="53" pos:column="19"/></name> <operator pos:line="53" pos:column="20">=<pos:position pos:line="53" pos:column="21"/></operator> <call><name pos:line="53" pos:column="22">cf_util_get_port_number<pos:position pos:line="53" pos:column="45"/></name> <argument_list pos:line="53" pos:column="46">(<argument><expr><name pos:line="53" pos:column="47">child<pos:position pos:line="53" pos:column="52"/></name></expr></argument>)<pos:position pos:line="53" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="54"/></expr_stmt>
            <if pos:line="54" pos:column="13">if <condition pos:line="54" pos:column="16">(<expr><name pos:line="54" pos:column="17">status<pos:position pos:line="54" pos:column="23"/></name> <operator pos:line="54" pos:column="24">&gt;<pos:position pos:line="54" pos:column="28"/></operator> <literal type="number" pos:line="54" pos:column="26">0<pos:position pos:line="54" pos:column="27"/></literal></expr>)<pos:position pos:line="54" pos:column="28"/></condition><then pos:line="54" pos:column="28">
            <block pos:line="55" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="56" pos:column="17">conf<pos:position pos:line="56" pos:column="21"/></name><operator pos:line="56" pos:column="21">-&gt;<pos:position pos:line="56" pos:column="26"/></operator><name pos:line="56" pos:column="23">port<pos:position pos:line="56" pos:column="27"/></name></name> <operator pos:line="56" pos:column="28">=<pos:position pos:line="56" pos:column="29"/></operator> <name pos:line="56" pos:column="30">status<pos:position pos:line="56" pos:column="36"/></name></expr>;<pos:position pos:line="56" pos:column="37"/></expr_stmt>
                <expr_stmt><expr><name pos:line="57" pos:column="17">status<pos:position pos:line="57" pos:column="23"/></name> <operator pos:line="57" pos:column="24">=<pos:position pos:line="57" pos:column="25"/></operator> <literal type="number" pos:line="57" pos:column="26">0<pos:position pos:line="57" pos:column="27"/></literal></expr>;<pos:position pos:line="57" pos:column="28"/></expr_stmt>
            }<pos:position pos:line="58" pos:column="14"/></block></then></if>
        }<pos:position pos:line="59" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="60" pos:column="9">else <if pos:line="60" pos:column="14">if <condition pos:line="60" pos:column="17">(<expr><call><name pos:line="60" pos:column="18">strcasecmp<pos:position pos:line="60" pos:column="28"/></name> <argument_list pos:line="60" pos:column="29">(<argument><expr><literal type="string" pos:line="60" pos:column="30">"VHost"<pos:position pos:line="60" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="39">child<pos:position pos:line="60" pos:column="44"/></name><operator pos:line="60" pos:column="44">-&gt;<pos:position pos:line="60" pos:column="49"/></operator><name pos:line="60" pos:column="46">key<pos:position pos:line="60" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="50"/></argument_list></call> <operator pos:line="60" pos:column="51">==<pos:position pos:line="60" pos:column="53"/></operator> <literal type="number" pos:line="60" pos:column="54">0<pos:position pos:line="60" pos:column="55"/></literal></expr>)<pos:position pos:line="60" pos:column="56"/></condition><then pos:line="60" pos:column="56">
            <block type="pseudo"><expr_stmt><expr><name pos:line="61" pos:column="13">status<pos:position pos:line="61" pos:column="19"/></name> <operator pos:line="61" pos:column="20">=<pos:position pos:line="61" pos:column="21"/></operator> <call><name pos:line="61" pos:column="22">cf_util_get_string<pos:position pos:line="61" pos:column="40"/></name> <argument_list pos:line="61" pos:column="41">(<argument><expr><name pos:line="61" pos:column="42">child<pos:position pos:line="61" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="49">&amp;<pos:position pos:line="61" pos:column="54"/></operator><name><name pos:line="61" pos:column="50">conf<pos:position pos:line="61" pos:column="54"/></name><operator pos:line="61" pos:column="54">-&gt;<pos:position pos:line="61" pos:column="59"/></operator><name pos:line="61" pos:column="56">vhost<pos:position pos:line="61" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="63"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="62" pos:column="9">else <if pos:line="62" pos:column="14">if <condition pos:line="62" pos:column="17">(<expr><call><name pos:line="62" pos:column="18">strcasecmp<pos:position pos:line="62" pos:column="28"/></name> <argument_list pos:line="62" pos:column="29">(<argument><expr><literal type="string" pos:line="62" pos:column="30">"User"<pos:position pos:line="62" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="38">child<pos:position pos:line="62" pos:column="43"/></name><operator pos:line="62" pos:column="43">-&gt;<pos:position pos:line="62" pos:column="48"/></operator><name pos:line="62" pos:column="45">key<pos:position pos:line="62" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="49"/></argument_list></call> <operator pos:line="62" pos:column="50">==<pos:position pos:line="62" pos:column="52"/></operator> <literal type="number" pos:line="62" pos:column="53">0<pos:position pos:line="62" pos:column="54"/></literal></expr>)<pos:position pos:line="62" pos:column="55"/></condition><then pos:line="62" pos:column="55">
            <block type="pseudo"><expr_stmt><expr><name pos:line="63" pos:column="13">status<pos:position pos:line="63" pos:column="19"/></name> <operator pos:line="63" pos:column="20">=<pos:position pos:line="63" pos:column="21"/></operator> <call><name pos:line="63" pos:column="22">cf_util_get_string<pos:position pos:line="63" pos:column="40"/></name> <argument_list pos:line="63" pos:column="41">(<argument><expr><name pos:line="63" pos:column="42">child<pos:position pos:line="63" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="49">&amp;<pos:position pos:line="63" pos:column="54"/></operator><name><name pos:line="63" pos:column="50">conf<pos:position pos:line="63" pos:column="54"/></name><operator pos:line="63" pos:column="54">-&gt;<pos:position pos:line="63" pos:column="59"/></operator><name pos:line="63" pos:column="56">user<pos:position pos:line="63" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="62"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="64" pos:column="9">else <if pos:line="64" pos:column="14">if <condition pos:line="64" pos:column="17">(<expr><call><name pos:line="64" pos:column="18">strcasecmp<pos:position pos:line="64" pos:column="28"/></name> <argument_list pos:line="64" pos:column="29">(<argument><expr><literal type="string" pos:line="64" pos:column="30">"Password"<pos:position pos:line="64" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="42">child<pos:position pos:line="64" pos:column="47"/></name><operator pos:line="64" pos:column="47">-&gt;<pos:position pos:line="64" pos:column="52"/></operator><name pos:line="64" pos:column="49">key<pos:position pos:line="64" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="53"/></argument_list></call> <operator pos:line="64" pos:column="54">==<pos:position pos:line="64" pos:column="56"/></operator> <literal type="number" pos:line="64" pos:column="57">0<pos:position pos:line="64" pos:column="58"/></literal></expr>)<pos:position pos:line="64" pos:column="59"/></condition><then pos:line="64" pos:column="59">
            <block type="pseudo"><expr_stmt><expr><name pos:line="65" pos:column="13">status<pos:position pos:line="65" pos:column="19"/></name> <operator pos:line="65" pos:column="20">=<pos:position pos:line="65" pos:column="21"/></operator> <call><name pos:line="65" pos:column="22">cf_util_get_string<pos:position pos:line="65" pos:column="40"/></name> <argument_list pos:line="65" pos:column="41">(<argument><expr><name pos:line="65" pos:column="42">child<pos:position pos:line="65" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="65" pos:column="49">&amp;<pos:position pos:line="65" pos:column="54"/></operator><name><name pos:line="65" pos:column="50">conf<pos:position pos:line="65" pos:column="54"/></name><operator pos:line="65" pos:column="54">-&gt;<pos:position pos:line="65" pos:column="59"/></operator><name pos:line="65" pos:column="56">password<pos:position pos:line="65" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="66"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="66" pos:column="9">else <if pos:line="66" pos:column="14">if <condition pos:line="66" pos:column="17">(<expr><call><name pos:line="66" pos:column="18">strcasecmp<pos:position pos:line="66" pos:column="28"/></name> <argument_list pos:line="66" pos:column="29">(<argument><expr><literal type="string" pos:line="66" pos:column="30">"Exchange"<pos:position pos:line="66" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="42">child<pos:position pos:line="66" pos:column="47"/></name><operator pos:line="66" pos:column="47">-&gt;<pos:position pos:line="66" pos:column="52"/></operator><name pos:line="66" pos:column="49">key<pos:position pos:line="66" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="53"/></argument_list></call> <operator pos:line="66" pos:column="54">==<pos:position pos:line="66" pos:column="56"/></operator> <literal type="number" pos:line="66" pos:column="57">0<pos:position pos:line="66" pos:column="58"/></literal></expr>)<pos:position pos:line="66" pos:column="59"/></condition><then pos:line="66" pos:column="59">
            <block type="pseudo"><expr_stmt><expr><name pos:line="67" pos:column="13">status<pos:position pos:line="67" pos:column="19"/></name> <operator pos:line="67" pos:column="20">=<pos:position pos:line="67" pos:column="21"/></operator> <call><name pos:line="67" pos:column="22">cf_util_get_string<pos:position pos:line="67" pos:column="40"/></name> <argument_list pos:line="67" pos:column="41">(<argument><expr><name pos:line="67" pos:column="42">child<pos:position pos:line="67" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="67" pos:column="49">&amp;<pos:position pos:line="67" pos:column="54"/></operator><name><name pos:line="67" pos:column="50">conf<pos:position pos:line="67" pos:column="54"/></name><operator pos:line="67" pos:column="54">-&gt;<pos:position pos:line="67" pos:column="59"/></operator><name pos:line="67" pos:column="56">exchange<pos:position pos:line="67" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="66"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="68" pos:column="9">else <if pos:line="68" pos:column="14">if <condition pos:line="68" pos:column="17">(<expr><operator pos:line="68" pos:column="18">(<pos:position pos:line="68" pos:column="19"/></operator><call><name pos:line="68" pos:column="19">strcasecmp<pos:position pos:line="68" pos:column="29"/></name> <argument_list pos:line="68" pos:column="30">(<argument><expr><literal type="string" pos:line="68" pos:column="31">"ExchangeType"<pos:position pos:line="68" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="47">child<pos:position pos:line="68" pos:column="52"/></name><operator pos:line="68" pos:column="52">-&gt;<pos:position pos:line="68" pos:column="57"/></operator><name pos:line="68" pos:column="54">key<pos:position pos:line="68" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="58"/></argument_list></call> <operator pos:line="68" pos:column="59">==<pos:position pos:line="68" pos:column="61"/></operator> <literal type="number" pos:line="68" pos:column="62">0<pos:position pos:line="68" pos:column="63"/></literal><operator pos:line="68" pos:column="63">)<pos:position pos:line="68" pos:column="64"/></operator> <operator pos:line="68" pos:column="65">&amp;&amp;<pos:position pos:line="68" pos:column="75"/></operator> <operator pos:line="68" pos:column="68">!<pos:position pos:line="68" pos:column="69"/></operator><name pos:line="68" pos:column="69">publish<pos:position pos:line="68" pos:column="76"/></name></expr>)<pos:position pos:line="68" pos:column="77"/></condition><then pos:line="68" pos:column="77">
            <block type="pseudo"><expr_stmt><expr><name pos:line="69" pos:column="13">status<pos:position pos:line="69" pos:column="19"/></name> <operator pos:line="69" pos:column="20">=<pos:position pos:line="69" pos:column="21"/></operator> <call><name pos:line="69" pos:column="22">cf_util_get_string<pos:position pos:line="69" pos:column="40"/></name> <argument_list pos:line="69" pos:column="41">(<argument><expr><name pos:line="69" pos:column="42">child<pos:position pos:line="69" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="69" pos:column="49">&amp;<pos:position pos:line="69" pos:column="54"/></operator><name><name pos:line="69" pos:column="50">conf<pos:position pos:line="69" pos:column="54"/></name><operator pos:line="69" pos:column="54">-&gt;<pos:position pos:line="69" pos:column="59"/></operator><name pos:line="69" pos:column="56">exchange_type<pos:position pos:line="69" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="71"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="70" pos:column="9">else <if pos:line="70" pos:column="14">if <condition pos:line="70" pos:column="17">(<expr><operator pos:line="70" pos:column="18">(<pos:position pos:line="70" pos:column="19"/></operator><call><name pos:line="70" pos:column="19">strcasecmp<pos:position pos:line="70" pos:column="29"/></name> <argument_list pos:line="70" pos:column="30">(<argument><expr><literal type="string" pos:line="70" pos:column="31">"Queue"<pos:position pos:line="70" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="40">child<pos:position pos:line="70" pos:column="45"/></name><operator pos:line="70" pos:column="45">-&gt;<pos:position pos:line="70" pos:column="50"/></operator><name pos:line="70" pos:column="47">key<pos:position pos:line="70" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="51"/></argument_list></call> <operator pos:line="70" pos:column="52">==<pos:position pos:line="70" pos:column="54"/></operator> <literal type="number" pos:line="70" pos:column="55">0<pos:position pos:line="70" pos:column="56"/></literal><operator pos:line="70" pos:column="56">)<pos:position pos:line="70" pos:column="57"/></operator> <operator pos:line="70" pos:column="58">&amp;&amp;<pos:position pos:line="70" pos:column="68"/></operator> <operator pos:line="70" pos:column="61">!<pos:position pos:line="70" pos:column="62"/></operator><name pos:line="70" pos:column="62">publish<pos:position pos:line="70" pos:column="69"/></name></expr>)<pos:position pos:line="70" pos:column="70"/></condition><then pos:line="70" pos:column="70">
            <block type="pseudo"><expr_stmt><expr><name pos:line="71" pos:column="13">status<pos:position pos:line="71" pos:column="19"/></name> <operator pos:line="71" pos:column="20">=<pos:position pos:line="71" pos:column="21"/></operator> <call><name pos:line="71" pos:column="22">cf_util_get_string<pos:position pos:line="71" pos:column="40"/></name> <argument_list pos:line="71" pos:column="41">(<argument><expr><name pos:line="71" pos:column="42">child<pos:position pos:line="71" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="71" pos:column="49">&amp;<pos:position pos:line="71" pos:column="54"/></operator><name><name pos:line="71" pos:column="50">conf<pos:position pos:line="71" pos:column="54"/></name><operator pos:line="71" pos:column="54">-&gt;<pos:position pos:line="71" pos:column="59"/></operator><name pos:line="71" pos:column="56">queue<pos:position pos:line="71" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="63"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="72" pos:column="9">else <if pos:line="72" pos:column="14">if <condition pos:line="72" pos:column="17">(<expr><call><name pos:line="72" pos:column="18">strcasecmp<pos:position pos:line="72" pos:column="28"/></name> <argument_list pos:line="72" pos:column="29">(<argument><expr><literal type="string" pos:line="72" pos:column="30">"RoutingKey"<pos:position pos:line="72" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="44">child<pos:position pos:line="72" pos:column="49"/></name><operator pos:line="72" pos:column="49">-&gt;<pos:position pos:line="72" pos:column="54"/></operator><name pos:line="72" pos:column="51">key<pos:position pos:line="72" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="55"/></argument_list></call> <operator pos:line="72" pos:column="56">==<pos:position pos:line="72" pos:column="58"/></operator> <literal type="number" pos:line="72" pos:column="59">0<pos:position pos:line="72" pos:column="60"/></literal></expr>)<pos:position pos:line="72" pos:column="61"/></condition><then pos:line="72" pos:column="61">
            <block type="pseudo"><expr_stmt><expr><name pos:line="73" pos:column="13">status<pos:position pos:line="73" pos:column="19"/></name> <operator pos:line="73" pos:column="20">=<pos:position pos:line="73" pos:column="21"/></operator> <call><name pos:line="73" pos:column="22">cf_util_get_string<pos:position pos:line="73" pos:column="40"/></name> <argument_list pos:line="73" pos:column="41">(<argument><expr><name pos:line="73" pos:column="42">child<pos:position pos:line="73" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="73" pos:column="49">&amp;<pos:position pos:line="73" pos:column="54"/></operator><name><name pos:line="73" pos:column="50">conf<pos:position pos:line="73" pos:column="54"/></name><operator pos:line="73" pos:column="54">-&gt;<pos:position pos:line="73" pos:column="59"/></operator><name pos:line="73" pos:column="56">routing_key<pos:position pos:line="73" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="69"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="74" pos:column="9">else <if pos:line="74" pos:column="14">if <condition pos:line="74" pos:column="17">(<expr><operator pos:line="74" pos:column="18">(<pos:position pos:line="74" pos:column="19"/></operator><call><name pos:line="74" pos:column="19">strcasecmp<pos:position pos:line="74" pos:column="29"/></name> <argument_list pos:line="74" pos:column="30">(<argument><expr><literal type="string" pos:line="74" pos:column="31">"Persistent"<pos:position pos:line="74" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="45">child<pos:position pos:line="74" pos:column="50"/></name><operator pos:line="74" pos:column="50">-&gt;<pos:position pos:line="74" pos:column="55"/></operator><name pos:line="74" pos:column="52">key<pos:position pos:line="74" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="56"/></argument_list></call> <operator pos:line="74" pos:column="57">==<pos:position pos:line="74" pos:column="59"/></operator> <literal type="number" pos:line="74" pos:column="60">0<pos:position pos:line="74" pos:column="61"/></literal><operator pos:line="74" pos:column="61">)<pos:position pos:line="74" pos:column="62"/></operator> <operator pos:line="74" pos:column="63">&amp;&amp;<pos:position pos:line="74" pos:column="73"/></operator> <name pos:line="74" pos:column="66">publish<pos:position pos:line="74" pos:column="73"/></name></expr>)<pos:position pos:line="74" pos:column="74"/></condition><then pos:line="74" pos:column="74">
        <block pos:line="75" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="76" pos:column="13">_Bool<pos:position pos:line="76" pos:column="18"/></name></type> <name pos:line="76" pos:column="19">tmp<pos:position pos:line="76" pos:column="22"/></name> <init pos:line="76" pos:column="23">= <expr><literal type="number" pos:line="76" pos:column="25">0<pos:position pos:line="76" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="76" pos:column="27"/></decl_stmt>
            <expr_stmt><expr><name pos:line="77" pos:column="13">status<pos:position pos:line="77" pos:column="19"/></name> <operator pos:line="77" pos:column="20">=<pos:position pos:line="77" pos:column="21"/></operator> <call><name pos:line="77" pos:column="22">cf_util_get_boolean<pos:position pos:line="77" pos:column="41"/></name> <argument_list pos:line="77" pos:column="42">(<argument><expr><name pos:line="77" pos:column="43">child<pos:position pos:line="77" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="77" pos:column="50">&amp;<pos:position pos:line="77" pos:column="55"/></operator><name pos:line="77" pos:column="51">tmp<pos:position pos:line="77" pos:column="54"/></name></expr></argument>)<pos:position pos:line="77" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="56"/></expr_stmt>
            <if pos:line="78" pos:column="13">if <condition pos:line="78" pos:column="16">(<expr><name pos:line="78" pos:column="17">tmp<pos:position pos:line="78" pos:column="20"/></name></expr>)<pos:position pos:line="78" pos:column="21"/></condition><then pos:line="78" pos:column="21">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="79" pos:column="17">conf<pos:position pos:line="79" pos:column="21"/></name><operator pos:line="79" pos:column="21">-&gt;<pos:position pos:line="79" pos:column="26"/></operator><name pos:line="79" pos:column="23">delivery_mode<pos:position pos:line="79" pos:column="36"/></name></name> <operator pos:line="79" pos:column="37">=<pos:position pos:line="79" pos:column="38"/></operator> <name pos:line="79" pos:column="39">CAMQP_DM_PERSISTENT<pos:position pos:line="79" pos:column="58"/></name></expr>;<pos:position pos:line="79" pos:column="59"/></expr_stmt></block></then>
            <else pos:line="80" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="81" pos:column="17">conf<pos:position pos:line="81" pos:column="21"/></name><operator pos:line="81" pos:column="21">-&gt;<pos:position pos:line="81" pos:column="26"/></operator><name pos:line="81" pos:column="23">delivery_mode<pos:position pos:line="81" pos:column="36"/></name></name> <operator pos:line="81" pos:column="37">=<pos:position pos:line="81" pos:column="38"/></operator> <name pos:line="81" pos:column="39">CAMQP_DM_VOLATILE<pos:position pos:line="81" pos:column="56"/></name></expr>;<pos:position pos:line="81" pos:column="57"/></expr_stmt></block></else></if>
        }<pos:position pos:line="82" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="83" pos:column="9">else <if pos:line="83" pos:column="14">if <condition pos:line="83" pos:column="17">(<expr><operator pos:line="83" pos:column="18">(<pos:position pos:line="83" pos:column="19"/></operator><call><name pos:line="83" pos:column="19">strcasecmp<pos:position pos:line="83" pos:column="29"/></name> <argument_list pos:line="83" pos:column="30">(<argument><expr><literal type="string" pos:line="83" pos:column="31">"StoreRates"<pos:position pos:line="83" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="83" pos:column="45">child<pos:position pos:line="83" pos:column="50"/></name><operator pos:line="83" pos:column="50">-&gt;<pos:position pos:line="83" pos:column="55"/></operator><name pos:line="83" pos:column="52">key<pos:position pos:line="83" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="56"/></argument_list></call> <operator pos:line="83" pos:column="57">==<pos:position pos:line="83" pos:column="59"/></operator> <literal type="number" pos:line="83" pos:column="60">0<pos:position pos:line="83" pos:column="61"/></literal><operator pos:line="83" pos:column="61">)<pos:position pos:line="83" pos:column="62"/></operator> <operator pos:line="83" pos:column="63">&amp;&amp;<pos:position pos:line="83" pos:column="73"/></operator> <name pos:line="83" pos:column="66">publish<pos:position pos:line="83" pos:column="73"/></name></expr>)<pos:position pos:line="83" pos:column="74"/></condition><then pos:line="83" pos:column="74">
            <block type="pseudo"><expr_stmt><expr><name pos:line="84" pos:column="13">status<pos:position pos:line="84" pos:column="19"/></name> <operator pos:line="84" pos:column="20">=<pos:position pos:line="84" pos:column="21"/></operator> <call><name pos:line="84" pos:column="22">cf_util_get_boolean<pos:position pos:line="84" pos:column="41"/></name> <argument_list pos:line="84" pos:column="42">(<argument><expr><name pos:line="84" pos:column="43">child<pos:position pos:line="84" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="84" pos:column="50">&amp;<pos:position pos:line="84" pos:column="55"/></operator><name><name pos:line="84" pos:column="51">conf<pos:position pos:line="84" pos:column="55"/></name><operator pos:line="84" pos:column="55">-&gt;<pos:position pos:line="84" pos:column="60"/></operator><name pos:line="84" pos:column="57">store_rates<pos:position pos:line="84" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="70"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="85" pos:column="9">else <if pos:line="85" pos:column="14">if <condition pos:line="85" pos:column="17">(<expr><operator pos:line="85" pos:column="18">(<pos:position pos:line="85" pos:column="19"/></operator><call><name pos:line="85" pos:column="19">strcasecmp<pos:position pos:line="85" pos:column="29"/></name> <argument_list pos:line="85" pos:column="30">(<argument><expr><literal type="string" pos:line="85" pos:column="31">"Format"<pos:position pos:line="85" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="85" pos:column="41">child<pos:position pos:line="85" pos:column="46"/></name><operator pos:line="85" pos:column="46">-&gt;<pos:position pos:line="85" pos:column="51"/></operator><name pos:line="85" pos:column="48">key<pos:position pos:line="85" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="85" pos:column="52"/></argument_list></call> <operator pos:line="85" pos:column="53">==<pos:position pos:line="85" pos:column="55"/></operator> <literal type="number" pos:line="85" pos:column="56">0<pos:position pos:line="85" pos:column="57"/></literal><operator pos:line="85" pos:column="57">)<pos:position pos:line="85" pos:column="58"/></operator> <operator pos:line="85" pos:column="59">&amp;&amp;<pos:position pos:line="85" pos:column="69"/></operator> <name pos:line="85" pos:column="62">publish<pos:position pos:line="85" pos:column="69"/></name></expr>)<pos:position pos:line="85" pos:column="70"/></condition><then pos:line="85" pos:column="70">
            <block type="pseudo"><expr_stmt><expr><name pos:line="86" pos:column="13">status<pos:position pos:line="86" pos:column="19"/></name> <operator pos:line="86" pos:column="20">=<pos:position pos:line="86" pos:column="21"/></operator> <call><name pos:line="86" pos:column="22">camqp_config_set_format<pos:position pos:line="86" pos:column="45"/></name> <argument_list pos:line="86" pos:column="46">(<argument><expr><name pos:line="86" pos:column="47">child<pos:position pos:line="86" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="54">conf<pos:position pos:line="86" pos:column="58"/></name></expr></argument>)<pos:position pos:line="86" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="60"/></expr_stmt></block></then></if></elseif>
        <else pos:line="87" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="88" pos:column="13">WARNING<pos:position pos:line="88" pos:column="20"/></name> <argument_list pos:line="88" pos:column="21">(<argument><expr><literal type="string" pos:line="88" pos:column="22">"amqp plugin: Ignoring unknown "<pos:position pos:line="88" pos:column="54"/></literal>
                    <literal type="string" pos:line="89" pos:column="21">"configuration option \"%s\"."<pos:position pos:line="89" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="89" pos:column="53">child<pos:position pos:line="89" pos:column="58"/></name><operator pos:line="89" pos:column="58">-&gt;<pos:position pos:line="89" pos:column="63"/></operator><name pos:line="89" pos:column="60">key<pos:position pos:line="89" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="65"/></expr_stmt></block></else></if>

        <if pos:line="91" pos:column="9">if <condition pos:line="91" pos:column="12">(<expr><name pos:line="91" pos:column="13">status<pos:position pos:line="91" pos:column="19"/></name> <operator pos:line="91" pos:column="20">!=<pos:position pos:line="91" pos:column="22"/></operator> <literal type="number" pos:line="91" pos:column="23">0<pos:position pos:line="91" pos:column="24"/></literal></expr>)<pos:position pos:line="91" pos:column="25"/></condition><then pos:line="91" pos:column="25">
            <block type="pseudo"><break pos:line="92" pos:column="13">break;<pos:position pos:line="92" pos:column="19"/></break></block></then></if>
    }<pos:position pos:line="93" pos:column="6"/></block></for> <comment type="block" pos:line="93" pos:column="7">/* for (i = 0; i &lt; ci-&gt;children_num; i++) */</comment>

    <if pos:line="95" pos:column="5">if <condition pos:line="95" pos:column="8">(<expr><operator pos:line="95" pos:column="9">(<pos:position pos:line="95" pos:column="10"/></operator><name pos:line="95" pos:column="10">status<pos:position pos:line="95" pos:column="16"/></name> <operator pos:line="95" pos:column="17">==<pos:position pos:line="95" pos:column="19"/></operator> <literal type="number" pos:line="95" pos:column="20">0<pos:position pos:line="95" pos:column="21"/></literal><operator pos:line="95" pos:column="21">)<pos:position pos:line="95" pos:column="22"/></operator> <operator pos:line="95" pos:column="23">&amp;&amp;<pos:position pos:line="95" pos:column="33"/></operator> <operator pos:line="95" pos:column="26">(<pos:position pos:line="95" pos:column="27"/></operator><name><name pos:line="95" pos:column="27">conf<pos:position pos:line="95" pos:column="31"/></name><operator pos:line="95" pos:column="31">-&gt;<pos:position pos:line="95" pos:column="36"/></operator><name pos:line="95" pos:column="33">exchange<pos:position pos:line="95" pos:column="41"/></name></name> <operator pos:line="95" pos:column="42">==<pos:position pos:line="95" pos:column="44"/></operator> <name pos:line="95" pos:column="45">NULL<pos:position pos:line="95" pos:column="49"/></name><operator pos:line="95" pos:column="49">)<pos:position pos:line="95" pos:column="50"/></operator></expr>)<pos:position pos:line="95" pos:column="51"/></condition><then pos:line="95" pos:column="51">
    <block pos:line="96" pos:column="5">{
        <if pos:line="97" pos:column="9">if <condition pos:line="97" pos:column="12">(<expr><name><name pos:line="97" pos:column="13">conf<pos:position pos:line="97" pos:column="17"/></name><operator pos:line="97" pos:column="17">-&gt;<pos:position pos:line="97" pos:column="22"/></operator><name pos:line="97" pos:column="19">exchange_type<pos:position pos:line="97" pos:column="32"/></name></name> <operator pos:line="97" pos:column="33">!=<pos:position pos:line="97" pos:column="35"/></operator> <name pos:line="97" pos:column="36">NULL<pos:position pos:line="97" pos:column="40"/></name></expr>)<pos:position pos:line="97" pos:column="41"/></condition><then pos:line="97" pos:column="41">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="98" pos:column="13">WARNING<pos:position pos:line="98" pos:column="20"/></name> <argument_list pos:line="98" pos:column="21">(<argument><expr><literal type="string" pos:line="98" pos:column="22">"amqp plugin: The option \"ExchangeType\" was given "<pos:position pos:line="98" pos:column="75"/></literal>
                    <literal type="string" pos:line="99" pos:column="21">"without the \"Exchange\" option. It will be ignored."<pos:position pos:line="99" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="77"/></expr_stmt></block></then></if>

        <if pos:line="101" pos:column="9">if <condition pos:line="101" pos:column="12">(<expr><operator pos:line="101" pos:column="13">!<pos:position pos:line="101" pos:column="14"/></operator><name pos:line="101" pos:column="14">publish<pos:position pos:line="101" pos:column="21"/></name> <operator pos:line="101" pos:column="22">&amp;&amp;<pos:position pos:line="101" pos:column="32"/></operator> <operator pos:line="101" pos:column="25">(<pos:position pos:line="101" pos:column="26"/></operator><name><name pos:line="101" pos:column="26">conf<pos:position pos:line="101" pos:column="30"/></name><operator pos:line="101" pos:column="30">-&gt;<pos:position pos:line="101" pos:column="35"/></operator><name pos:line="101" pos:column="32">routing_key<pos:position pos:line="101" pos:column="43"/></name></name> <operator pos:line="101" pos:column="44">!=<pos:position pos:line="101" pos:column="46"/></operator> <name pos:line="101" pos:column="47">NULL<pos:position pos:line="101" pos:column="51"/></name><operator pos:line="101" pos:column="51">)<pos:position pos:line="101" pos:column="52"/></operator></expr>)<pos:position pos:line="101" pos:column="53"/></condition><then pos:line="101" pos:column="53">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="102" pos:column="13">WARNING<pos:position pos:line="102" pos:column="20"/></name> <argument_list pos:line="102" pos:column="21">(<argument><expr><literal type="string" pos:line="102" pos:column="22">"amqp plugin: The option \"RoutingKey\" was given "<pos:position pos:line="102" pos:column="73"/></literal>
                    <literal type="string" pos:line="103" pos:column="21">"without the \"Exchange\" option. It will be ignored."<pos:position pos:line="103" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="77"/></expr_stmt></block></then></if>

    }<pos:position pos:line="105" pos:column="6"/></block></then></if>

    <if pos:line="107" pos:column="5">if <condition pos:line="107" pos:column="8">(<expr><name pos:line="107" pos:column="9">status<pos:position pos:line="107" pos:column="15"/></name> <operator pos:line="107" pos:column="16">!=<pos:position pos:line="107" pos:column="18"/></operator> <literal type="number" pos:line="107" pos:column="19">0<pos:position pos:line="107" pos:column="20"/></literal></expr>)<pos:position pos:line="107" pos:column="21"/></condition><then pos:line="107" pos:column="21">
    <block pos:line="108" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="109" pos:column="9">camqp_config_free<pos:position pos:line="109" pos:column="26"/></name> <argument_list pos:line="109" pos:column="27">(<argument><expr><name pos:line="109" pos:column="28">conf<pos:position pos:line="109" pos:column="32"/></name></expr></argument>)<pos:position pos:line="109" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="34"/></expr_stmt>
        <return pos:line="110" pos:column="9">return <expr><operator pos:line="110" pos:column="16">(<pos:position pos:line="110" pos:column="17"/></operator><name pos:line="110" pos:column="17">status<pos:position pos:line="110" pos:column="23"/></name><operator pos:line="110" pos:column="23">)<pos:position pos:line="110" pos:column="24"/></operator></expr>;<pos:position pos:line="110" pos:column="25"/></return>
    }<pos:position pos:line="111" pos:column="6"/></block></then></if>

    <if pos:line="113" pos:column="5">if <condition pos:line="113" pos:column="8">(<expr><name><name pos:line="113" pos:column="9">conf<pos:position pos:line="113" pos:column="13"/></name><operator pos:line="113" pos:column="13">-&gt;<pos:position pos:line="113" pos:column="18"/></operator><name pos:line="113" pos:column="15">exchange<pos:position pos:line="113" pos:column="23"/></name></name> <operator pos:line="113" pos:column="24">!=<pos:position pos:line="113" pos:column="26"/></operator> <name pos:line="113" pos:column="27">NULL<pos:position pos:line="113" pos:column="31"/></name></expr>)<pos:position pos:line="113" pos:column="32"/></condition><then pos:line="113" pos:column="32">
    <block pos:line="114" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="115" pos:column="9">DEBUG<pos:position pos:line="115" pos:column="14"/></name> <argument_list pos:line="115" pos:column="15">(<argument><expr><literal type="string" pos:line="115" pos:column="16">"amqp plugin: camqp_config_connection: exchange = %s;"<pos:position pos:line="115" pos:column="70"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="116" pos:column="17">conf<pos:position pos:line="116" pos:column="21"/></name><operator pos:line="116" pos:column="21">-&gt;<pos:position pos:line="116" pos:column="26"/></operator><name pos:line="116" pos:column="23">exchange<pos:position pos:line="116" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="116" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="117" pos:column="6"/></block></then></if>

    <if pos:line="119" pos:column="5">if <condition pos:line="119" pos:column="8">(<expr><name pos:line="119" pos:column="9">publish<pos:position pos:line="119" pos:column="16"/></name></expr>)<pos:position pos:line="119" pos:column="17"/></condition><then pos:line="119" pos:column="17">
    <block pos:line="120" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="121" pos:column="9">char<pos:position pos:line="121" pos:column="13"/></name></type> <name><name pos:line="121" pos:column="14">cbname<pos:position pos:line="121" pos:column="20"/></name><index pos:line="121" pos:column="20">[<expr><literal type="number" pos:line="121" pos:column="21">128<pos:position pos:line="121" pos:column="24"/></literal></expr>]<pos:position pos:line="121" pos:column="25"/></index></name></decl>;<pos:position pos:line="121" pos:column="26"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="122" pos:column="9">user_data_t<pos:position pos:line="122" pos:column="20"/></name></type> <name pos:line="122" pos:column="21">ud<pos:position pos:line="122" pos:column="23"/></name> <init pos:line="122" pos:column="24">= <expr><block pos:line="122" pos:column="26">{ <expr><name pos:line="122" pos:column="28">conf<pos:position pos:line="122" pos:column="32"/></name></expr>, <expr><name pos:line="122" pos:column="34">camqp_config_free<pos:position pos:line="122" pos:column="51"/></name></expr> }<pos:position pos:line="122" pos:column="53"/></block></expr></init></decl>;<pos:position pos:line="122" pos:column="54"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="124" pos:column="9">ssnprintf<pos:position pos:line="124" pos:column="18"/></name> <argument_list pos:line="124" pos:column="19">(<argument><expr><name pos:line="124" pos:column="20">cbname<pos:position pos:line="124" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="124" pos:column="28">sizeof <argument_list pos:line="124" pos:column="35">(<argument><expr><name pos:line="124" pos:column="36">cbname<pos:position pos:line="124" pos:column="42"/></name></expr></argument>)<pos:position pos:line="124" pos:column="43"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="124" pos:column="45">"amqp/%s"<pos:position pos:line="124" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="124" pos:column="56">conf<pos:position pos:line="124" pos:column="60"/></name><operator pos:line="124" pos:column="60">-&gt;<pos:position pos:line="124" pos:column="65"/></operator><name pos:line="124" pos:column="62">name<pos:position pos:line="124" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="124" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="68"/></expr_stmt>

        <expr_stmt><expr><name pos:line="126" pos:column="9">status<pos:position pos:line="126" pos:column="15"/></name> <operator pos:line="126" pos:column="16">=<pos:position pos:line="126" pos:column="17"/></operator> <call><name pos:line="126" pos:column="18">plugin_register_write<pos:position pos:line="126" pos:column="39"/></name> <argument_list pos:line="126" pos:column="40">(<argument><expr><name pos:line="126" pos:column="41">cbname<pos:position pos:line="126" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="49">camqp_write<pos:position pos:line="126" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="126" pos:column="62">&amp;<pos:position pos:line="126" pos:column="67"/></operator><name pos:line="126" pos:column="63">ud<pos:position pos:line="126" pos:column="65"/></name></expr></argument>)<pos:position pos:line="126" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="67"/></expr_stmt>
        <if pos:line="127" pos:column="9">if <condition pos:line="127" pos:column="12">(<expr><name pos:line="127" pos:column="13">status<pos:position pos:line="127" pos:column="19"/></name> <operator pos:line="127" pos:column="20">!=<pos:position pos:line="127" pos:column="22"/></operator> <literal type="number" pos:line="127" pos:column="23">0<pos:position pos:line="127" pos:column="24"/></literal></expr>)<pos:position pos:line="127" pos:column="25"/></condition><then pos:line="127" pos:column="25">
        <block pos:line="128" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="129" pos:column="13">camqp_config_free<pos:position pos:line="129" pos:column="30"/></name> <argument_list pos:line="129" pos:column="31">(<argument><expr><name pos:line="129" pos:column="32">conf<pos:position pos:line="129" pos:column="36"/></name></expr></argument>)<pos:position pos:line="129" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="38"/></expr_stmt>
            <return pos:line="130" pos:column="13">return <expr><operator pos:line="130" pos:column="20">(<pos:position pos:line="130" pos:column="21"/></operator><name pos:line="130" pos:column="21">status<pos:position pos:line="130" pos:column="27"/></name><operator pos:line="130" pos:column="27">)<pos:position pos:line="130" pos:column="28"/></operator></expr>;<pos:position pos:line="130" pos:column="29"/></return>
        }<pos:position pos:line="131" pos:column="10"/></block></then></if>
    }<pos:position pos:line="132" pos:column="6"/></block></then>
    <else pos:line="133" pos:column="5">else
    <block pos:line="134" pos:column="5">{
        <expr_stmt><expr><name pos:line="135" pos:column="9">status<pos:position pos:line="135" pos:column="15"/></name> <operator pos:line="135" pos:column="16">=<pos:position pos:line="135" pos:column="17"/></operator> <call><name pos:line="135" pos:column="18">camqp_subscribe_init<pos:position pos:line="135" pos:column="38"/></name> <argument_list pos:line="135" pos:column="39">(<argument><expr><name pos:line="135" pos:column="40">conf<pos:position pos:line="135" pos:column="44"/></name></expr></argument>)<pos:position pos:line="135" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="46"/></expr_stmt>
        <if pos:line="136" pos:column="9">if <condition pos:line="136" pos:column="12">(<expr><name pos:line="136" pos:column="13">status<pos:position pos:line="136" pos:column="19"/></name> <operator pos:line="136" pos:column="20">!=<pos:position pos:line="136" pos:column="22"/></operator> <literal type="number" pos:line="136" pos:column="23">0<pos:position pos:line="136" pos:column="24"/></literal></expr>)<pos:position pos:line="136" pos:column="25"/></condition><then pos:line="136" pos:column="25">
        <block pos:line="137" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="138" pos:column="13">camqp_config_free<pos:position pos:line="138" pos:column="30"/></name> <argument_list pos:line="138" pos:column="31">(<argument><expr><name pos:line="138" pos:column="32">conf<pos:position pos:line="138" pos:column="36"/></name></expr></argument>)<pos:position pos:line="138" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="38"/></expr_stmt>
            <return pos:line="139" pos:column="13">return <expr><operator pos:line="139" pos:column="20">(<pos:position pos:line="139" pos:column="21"/></operator><name pos:line="139" pos:column="21">status<pos:position pos:line="139" pos:column="27"/></name><operator pos:line="139" pos:column="27">)<pos:position pos:line="139" pos:column="28"/></operator></expr>;<pos:position pos:line="139" pos:column="29"/></return>
        }<pos:position pos:line="140" pos:column="10"/></block></then></if>
    }<pos:position pos:line="141" pos:column="6"/></block></else></if>

    <return pos:line="143" pos:column="5">return <expr><operator pos:line="143" pos:column="12">(<pos:position pos:line="143" pos:column="13"/></operator><literal type="number" pos:line="143" pos:column="13">0<pos:position pos:line="143" pos:column="14"/></literal><operator pos:line="143" pos:column="14">)<pos:position pos:line="143" pos:column="15"/></operator></expr>;<pos:position pos:line="143" pos:column="16"/></return>
}<pos:position pos:line="144" pos:column="2"/></block></function></unit>

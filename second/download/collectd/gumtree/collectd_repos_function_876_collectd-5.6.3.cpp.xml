<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_876_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">memcached_connect_unix<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">memcached_t<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">st<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list> <block pos:line="1" pos:column="52">{
  <decl_stmt><decl><type><name><name pos:line="2" pos:column="3">struct<pos:position pos:line="2" pos:column="9"/></name> <name pos:line="2" pos:column="10">sockaddr_un<pos:position pos:line="2" pos:column="21"/></name></name></type> <name pos:line="2" pos:column="22">serv_addr<pos:position pos:line="2" pos:column="31"/></name> <init pos:line="2" pos:column="32">= <expr><block pos:line="2" pos:column="34">{<expr><literal type="number" pos:line="2" pos:column="35">0<pos:position pos:line="2" pos:column="36"/></literal></expr>}<pos:position pos:line="2" pos:column="37"/></block></expr></init></decl>;<pos:position pos:line="2" pos:column="38"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">fd<pos:position pos:line="3" pos:column="9"/></name></decl>;<pos:position pos:line="3" pos:column="10"/></decl_stmt>

  <expr_stmt><expr><name><name pos:line="5" pos:column="3">serv_addr<pos:position pos:line="5" pos:column="12"/></name><operator pos:line="5" pos:column="12">.<pos:position pos:line="5" pos:column="13"/></operator><name pos:line="5" pos:column="13">sun_family<pos:position pos:line="5" pos:column="23"/></name></name> <operator pos:line="5" pos:column="24">=<pos:position pos:line="5" pos:column="25"/></operator> <name pos:line="5" pos:column="26">AF_UNIX<pos:position pos:line="5" pos:column="33"/></name></expr>;<pos:position pos:line="5" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="6" pos:column="3">sstrncpy<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><name><name pos:line="6" pos:column="12">serv_addr<pos:position pos:line="6" pos:column="21"/></name><operator pos:line="6" pos:column="21">.<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="22">sun_path<pos:position pos:line="6" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="32">st<pos:position pos:line="6" pos:column="34"/></name><operator pos:line="6" pos:column="34">-&gt;<pos:position pos:line="6" pos:column="39"/></operator><name pos:line="6" pos:column="36">socket<pos:position pos:line="6" pos:column="42"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="44">sizeof<argument_list pos:line="6" pos:column="50">(<argument><expr><name><name pos:line="6" pos:column="51">serv_addr<pos:position pos:line="6" pos:column="60"/></name><operator pos:line="6" pos:column="60">.<pos:position pos:line="6" pos:column="61"/></operator><name pos:line="6" pos:column="61">sun_path<pos:position pos:line="6" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="72"/></expr_stmt>

  <comment type="block" pos:line="8" pos:column="3">/* create our socket descriptor */</comment>
  <expr_stmt><expr><name pos:line="9" pos:column="3">fd<pos:position pos:line="9" pos:column="5"/></name> <operator pos:line="9" pos:column="6">=<pos:position pos:line="9" pos:column="7"/></operator> <call><name pos:line="9" pos:column="8">socket<pos:position pos:line="9" pos:column="14"/></name><argument_list pos:line="9" pos:column="14">(<argument><expr><name pos:line="9" pos:column="15">AF_UNIX<pos:position pos:line="9" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="24">SOCK_STREAM<pos:position pos:line="9" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="37">0<pos:position pos:line="9" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="40"/></expr_stmt>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">fd<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">&lt;<pos:position pos:line="10" pos:column="14"/></operator> <literal type="number" pos:line="10" pos:column="12">0<pos:position pos:line="10" pos:column="13"/></literal></expr>)<pos:position pos:line="10" pos:column="14"/></condition><then pos:line="10" pos:column="14"> <block pos:line="10" pos:column="15">{
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name></type> <name><name pos:line="11" pos:column="10">errbuf<pos:position pos:line="11" pos:column="16"/></name><index pos:line="11" pos:column="16">[<expr><literal type="number" pos:line="11" pos:column="17">1024<pos:position pos:line="11" pos:column="21"/></literal></expr>]<pos:position pos:line="11" pos:column="22"/></index></name></decl>;<pos:position pos:line="11" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">ERROR<pos:position pos:line="12" pos:column="10"/></name><argument_list pos:line="12" pos:column="10">(<argument><expr><literal type="string" pos:line="12" pos:column="11">"memcached plugin: memcached_connect_unix: socket(2) failed: %s"<pos:position pos:line="12" pos:column="75"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="13" pos:column="11">sstrerror<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><name pos:line="13" pos:column="21">errno<pos:position pos:line="13" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="28">errbuf<pos:position pos:line="13" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="36">sizeof<argument_list pos:line="13" pos:column="42">(<argument><expr><name pos:line="13" pos:column="43">errbuf<pos:position pos:line="13" pos:column="49"/></name></expr></argument>)<pos:position pos:line="13" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="53"/></expr_stmt>
    <return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">(<pos:position pos:line="14" pos:column="13"/></operator><operator pos:line="14" pos:column="13">-<pos:position pos:line="14" pos:column="14"/></operator><literal type="number" pos:line="14" pos:column="14">1<pos:position pos:line="14" pos:column="15"/></literal><operator pos:line="14" pos:column="15">)<pos:position pos:line="14" pos:column="16"/></operator></expr>;<pos:position pos:line="14" pos:column="17"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="17" pos:column="3">/* connect to the memcached daemon */</comment>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">int<pos:position pos:line="18" pos:column="6"/></name></type> <name pos:line="18" pos:column="7">status<pos:position pos:line="18" pos:column="13"/></name> <init pos:line="18" pos:column="14">= <expr><call><name pos:line="18" pos:column="16">connect<pos:position pos:line="18" pos:column="23"/></name><argument_list pos:line="18" pos:column="23">(<argument><expr><name pos:line="18" pos:column="24">fd<pos:position pos:line="18" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="28">(<pos:position pos:line="18" pos:column="29"/></operator>struct <name pos:line="18" pos:column="36">sockaddr<pos:position pos:line="18" pos:column="44"/></name> <operator pos:line="18" pos:column="45">*<pos:position pos:line="18" pos:column="46"/></operator><operator pos:line="18" pos:column="46">)<pos:position pos:line="18" pos:column="47"/></operator><operator pos:line="18" pos:column="47">&amp;<pos:position pos:line="18" pos:column="52"/></operator><name pos:line="18" pos:column="48">serv_addr<pos:position pos:line="18" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="59">sizeof<argument_list pos:line="18" pos:column="65">(<argument><expr><name pos:line="18" pos:column="66">serv_addr<pos:position pos:line="18" pos:column="75"/></name></expr></argument>)<pos:position pos:line="18" pos:column="76"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="77"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="78"/></decl_stmt>
  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><name pos:line="19" pos:column="7">status<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">!=<pos:position pos:line="19" pos:column="16"/></operator> <literal type="number" pos:line="19" pos:column="17">0<pos:position pos:line="19" pos:column="18"/></literal></expr>)<pos:position pos:line="19" pos:column="19"/></condition><then pos:line="19" pos:column="19"> <block pos:line="19" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">shutdown<pos:position pos:line="20" pos:column="13"/></name><argument_list pos:line="20" pos:column="13">(<argument><expr><name pos:line="20" pos:column="14">fd<pos:position pos:line="20" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="18">SHUT_RDWR<pos:position pos:line="20" pos:column="27"/></name></expr></argument>)<pos:position pos:line="20" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">close<pos:position pos:line="21" pos:column="10"/></name><argument_list pos:line="21" pos:column="10">(<argument><expr><name pos:line="21" pos:column="11">fd<pos:position pos:line="21" pos:column="13"/></name></expr></argument>)<pos:position pos:line="21" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name pos:line="22" pos:column="5">fd<pos:position pos:line="22" pos:column="7"/></name> <operator pos:line="22" pos:column="8">=<pos:position pos:line="22" pos:column="9"/></operator> <operator pos:line="22" pos:column="10">-<pos:position pos:line="22" pos:column="11"/></operator><literal type="number" pos:line="22" pos:column="11">1<pos:position pos:line="22" pos:column="12"/></literal></expr>;<pos:position pos:line="22" pos:column="13"/></expr_stmt>
  }<pos:position pos:line="23" pos:column="4"/></block></then></if>

  <return pos:line="25" pos:column="3">return <expr><operator pos:line="25" pos:column="10">(<pos:position pos:line="25" pos:column="11"/></operator><name pos:line="25" pos:column="11">fd<pos:position pos:line="25" pos:column="13"/></name><operator pos:line="25" pos:column="13">)<pos:position pos:line="25" pos:column="14"/></operator></expr>;<pos:position pos:line="25" pos:column="15"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

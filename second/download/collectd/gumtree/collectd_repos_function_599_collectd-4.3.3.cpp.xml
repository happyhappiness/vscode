<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_599_collectd-4.3.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dispatch_block_plugin<pos:position pos:line="1" pos:column="33"/></name> <parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">oconfig_item_t<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">ci<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">name<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="6" pos:column="9">cf_complex_callback_t<pos:position pos:line="6" pos:column="30"/></name> <modifier pos:line="6" pos:column="31">*<pos:position pos:line="6" pos:column="32"/></modifier></type><name pos:line="6" pos:column="32">cb<pos:position pos:line="6" pos:column="34"/></name></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">strcasecmp<pos:position pos:line="8" pos:column="23"/></name> <argument_list pos:line="8" pos:column="24">(<argument><expr><name><name pos:line="8" pos:column="25">ci<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">-&gt;<pos:position pos:line="8" pos:column="32"/></operator><name pos:line="8" pos:column="29">key<pos:position pos:line="8" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="34">"Plugin"<pos:position pos:line="8" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="43"/></argument_list></call> <operator pos:line="8" pos:column="44">!=<pos:position pos:line="8" pos:column="46"/></operator> <literal type="number" pos:line="8" pos:column="47">0<pos:position pos:line="8" pos:column="48"/></literal></expr>)<pos:position pos:line="8" pos:column="49"/></condition><then pos:line="8" pos:column="49">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><operator pos:line="9" pos:column="24">(<pos:position pos:line="9" pos:column="25"/></operator><operator pos:line="9" pos:column="25">-<pos:position pos:line="9" pos:column="26"/></operator><literal type="number" pos:line="9" pos:column="26">1<pos:position pos:line="9" pos:column="27"/></literal><operator pos:line="9" pos:column="27">)<pos:position pos:line="9" pos:column="28"/></operator></expr>;<pos:position pos:line="9" pos:column="29"/></return></block></then></if>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name><name pos:line="10" pos:column="13">ci<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">-&gt;<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="17">values_num<pos:position pos:line="10" pos:column="27"/></name></name> <operator pos:line="10" pos:column="28">&lt;<pos:position pos:line="10" pos:column="32"/></operator> <literal type="number" pos:line="10" pos:column="30">1<pos:position pos:line="10" pos:column="31"/></literal></expr>)<pos:position pos:line="10" pos:column="32"/></condition><then pos:line="10" pos:column="32">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><operator pos:line="11" pos:column="24">(<pos:position pos:line="11" pos:column="25"/></operator><operator pos:line="11" pos:column="25">-<pos:position pos:line="11" pos:column="26"/></operator><literal type="number" pos:line="11" pos:column="26">1<pos:position pos:line="11" pos:column="27"/></literal><operator pos:line="11" pos:column="27">)<pos:position pos:line="11" pos:column="28"/></operator></expr>;<pos:position pos:line="11" pos:column="29"/></return></block></then></if>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name><name pos:line="12" pos:column="13">ci<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">-&gt;<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="17">values<pos:position pos:line="12" pos:column="23"/></name><index pos:line="12" pos:column="23">[<expr><literal type="number" pos:line="12" pos:column="24">0<pos:position pos:line="12" pos:column="25"/></literal></expr>]<pos:position pos:line="12" pos:column="26"/></index></name><operator pos:line="12" pos:column="26">.<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="27">type<pos:position pos:line="12" pos:column="31"/></name> <operator pos:line="12" pos:column="32">!=<pos:position pos:line="12" pos:column="34"/></operator> <name pos:line="12" pos:column="35">OCONFIG_TYPE_STRING<pos:position pos:line="12" pos:column="54"/></name></expr>)<pos:position pos:line="12" pos:column="55"/></condition><then pos:line="12" pos:column="55">
		<block type="pseudo"><return pos:line="13" pos:column="17">return <expr><operator pos:line="13" pos:column="24">(<pos:position pos:line="13" pos:column="25"/></operator><operator pos:line="13" pos:column="25">-<pos:position pos:line="13" pos:column="26"/></operator><literal type="number" pos:line="13" pos:column="26">1<pos:position pos:line="13" pos:column="27"/></literal><operator pos:line="13" pos:column="27">)<pos:position pos:line="13" pos:column="28"/></operator></expr>;<pos:position pos:line="13" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="15" pos:column="9">name<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <name><name pos:line="15" pos:column="16">ci<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">-&gt;<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="20">values<pos:position pos:line="15" pos:column="26"/></name><index pos:line="15" pos:column="26">[<expr><literal type="number" pos:line="15" pos:column="27">0<pos:position pos:line="15" pos:column="28"/></literal></expr>]<pos:position pos:line="15" pos:column="29"/></index></name><operator pos:line="15" pos:column="29">.<pos:position pos:line="15" pos:column="30"/></operator><name><name pos:line="15" pos:column="30">value<pos:position pos:line="15" pos:column="35"/></name><operator pos:line="15" pos:column="35">.<pos:position pos:line="15" pos:column="36"/></operator><name pos:line="15" pos:column="36">string<pos:position pos:line="15" pos:column="42"/></name></name></expr>;<pos:position pos:line="15" pos:column="43"/></expr_stmt>

	<comment type="block" pos:line="17" pos:column="9">/* Check for a complex callback first */</comment>
	<for pos:line="18" pos:column="9">for <control pos:line="18" pos:column="13">(<init><expr><name pos:line="18" pos:column="14">cb<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">=<pos:position pos:line="18" pos:column="18"/></operator> <name pos:line="18" pos:column="19">complex_callback_head<pos:position pos:line="18" pos:column="40"/></name></expr>;<pos:position pos:line="18" pos:column="41"/></init> <condition><expr><name pos:line="18" pos:column="42">cb<pos:position pos:line="18" pos:column="44"/></name> <operator pos:line="18" pos:column="45">!=<pos:position pos:line="18" pos:column="47"/></operator> <name pos:line="18" pos:column="48">NULL<pos:position pos:line="18" pos:column="52"/></name></expr>;<pos:position pos:line="18" pos:column="53"/></condition> <incr><expr><name pos:line="18" pos:column="54">cb<pos:position pos:line="18" pos:column="56"/></name> <operator pos:line="18" pos:column="57">=<pos:position pos:line="18" pos:column="58"/></operator> <name><name pos:line="18" pos:column="59">cb<pos:position pos:line="18" pos:column="61"/></name><operator pos:line="18" pos:column="61">-&gt;<pos:position pos:line="18" pos:column="66"/></operator><name pos:line="18" pos:column="63">next<pos:position pos:line="18" pos:column="67"/></name></name></expr></incr>)<pos:position pos:line="18" pos:column="68"/></control>
		<block type="pseudo"><if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><call><name pos:line="19" pos:column="21">strcasecmp<pos:position pos:line="19" pos:column="31"/></name> <argument_list pos:line="19" pos:column="32">(<argument><expr><name pos:line="19" pos:column="33">name<pos:position pos:line="19" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="39">cb<pos:position pos:line="19" pos:column="41"/></name><operator pos:line="19" pos:column="41">-&gt;<pos:position pos:line="19" pos:column="46"/></operator><name pos:line="19" pos:column="43">type<pos:position pos:line="19" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="48"/></argument_list></call> <operator pos:line="19" pos:column="49">==<pos:position pos:line="19" pos:column="51"/></operator> <literal type="number" pos:line="19" pos:column="52">0<pos:position pos:line="19" pos:column="53"/></literal></expr>)<pos:position pos:line="19" pos:column="54"/></condition><then pos:line="19" pos:column="54">
			<block type="pseudo"><return pos:line="20" pos:column="25">return <expr><operator pos:line="20" pos:column="32">(<pos:position pos:line="20" pos:column="33"/></operator><call><name><name pos:line="20" pos:column="33">cb<pos:position pos:line="20" pos:column="35"/></name><operator pos:line="20" pos:column="35">-&gt;<pos:position pos:line="20" pos:column="40"/></operator><name pos:line="20" pos:column="37">callback<pos:position pos:line="20" pos:column="45"/></name></name> <argument_list pos:line="20" pos:column="46">(<argument><expr><name pos:line="20" pos:column="47">ci<pos:position pos:line="20" pos:column="49"/></name></expr></argument>)<pos:position pos:line="20" pos:column="50"/></argument_list></call><operator pos:line="20" pos:column="50">)<pos:position pos:line="20" pos:column="51"/></operator></expr>;<pos:position pos:line="20" pos:column="52"/></return></block></then></if></block></for>

	<comment type="block" pos:line="22" pos:column="9">/* Hm, no complex plugin found. Dispatch the values one by one */</comment>
	<for pos:line="23" pos:column="9">for <control pos:line="23" pos:column="13">(<init><expr><name pos:line="23" pos:column="14">i<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <literal type="number" pos:line="23" pos:column="18">0<pos:position pos:line="23" pos:column="19"/></literal></expr>;<pos:position pos:line="23" pos:column="20"/></init> <condition><expr><name pos:line="23" pos:column="21">i<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">&lt;<pos:position pos:line="23" pos:column="27"/></operator> <name><name pos:line="23" pos:column="25">ci<pos:position pos:line="23" pos:column="27"/></name><operator pos:line="23" pos:column="27">-&gt;<pos:position pos:line="23" pos:column="32"/></operator><name pos:line="23" pos:column="29">children_num<pos:position pos:line="23" pos:column="41"/></name></name></expr>;<pos:position pos:line="23" pos:column="42"/></condition> <incr><expr><name pos:line="23" pos:column="43">i<pos:position pos:line="23" pos:column="44"/></name><operator pos:line="23" pos:column="44">++<pos:position pos:line="23" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="23" pos:column="47"/></control>
	<block pos:line="24" pos:column="9">{
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name><name pos:line="25" pos:column="21">ci<pos:position pos:line="25" pos:column="23"/></name><operator pos:line="25" pos:column="23">-&gt;<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="25">children<pos:position pos:line="25" pos:column="33"/></name><index pos:line="25" pos:column="33">[<expr><name pos:line="25" pos:column="34">i<pos:position pos:line="25" pos:column="35"/></name></expr>]<pos:position pos:line="25" pos:column="36"/></index></name><operator pos:line="25" pos:column="36">.<pos:position pos:line="25" pos:column="37"/></operator><name pos:line="25" pos:column="37">children<pos:position pos:line="25" pos:column="45"/></name> <operator pos:line="25" pos:column="46">==<pos:position pos:line="25" pos:column="48"/></operator> <name pos:line="25" pos:column="49">NULL<pos:position pos:line="25" pos:column="53"/></name></expr>)<pos:position pos:line="25" pos:column="54"/></condition><then pos:line="25" pos:column="54">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="25">dispatch_value_plugin<pos:position pos:line="26" pos:column="46"/></name> <argument_list pos:line="26" pos:column="47">(<argument><expr><name pos:line="26" pos:column="48">name<pos:position pos:line="26" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="54">ci<pos:position pos:line="26" pos:column="56"/></name><operator pos:line="26" pos:column="56">-&gt;<pos:position pos:line="26" pos:column="61"/></operator><name pos:line="26" pos:column="58">children<pos:position pos:line="26" pos:column="66"/></name></name> <operator pos:line="26" pos:column="67">+<pos:position pos:line="26" pos:column="68"/></operator> <name pos:line="26" pos:column="69">i<pos:position pos:line="26" pos:column="70"/></name></expr></argument>)<pos:position pos:line="26" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="72"/></expr_stmt></block></then>
		<else pos:line="27" pos:column="17">else
			<block pos:line="28" pos:column="25">{<expr_stmt><expr><call><name pos:line="28" pos:column="26">DEBUG<pos:position pos:line="28" pos:column="31"/></name> <argument_list pos:line="28" pos:column="32">(<argument><expr><literal type="string" pos:line="28" pos:column="33">"No nested config blocks allow for this plugin."<pos:position pos:line="28" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="83"/></expr_stmt>}<pos:position pos:line="28" pos:column="84"/></block></else></if>
	}<pos:position pos:line="29" pos:column="10"/></block></for>

	<return pos:line="31" pos:column="9">return <expr><operator pos:line="31" pos:column="16">(<pos:position pos:line="31" pos:column="17"/></operator><literal type="number" pos:line="31" pos:column="17">0<pos:position pos:line="31" pos:column="18"/></literal><operator pos:line="31" pos:column="18">)<pos:position pos:line="31" pos:column="19"/></operator></expr>;<pos:position pos:line="31" pos:column="20"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

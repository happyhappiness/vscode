<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_982_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">fc_destroy<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">int<pos:position pos:line="1" pos:column="26"/></name></type> <name pos:line="1" pos:column="27">type<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="33">void<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier><modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">user_data<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list> <block pos:line="1" pos:column="51">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">pfc_user_data_t<pos:position pos:line="2" pos:column="18"/></name> <modifier pos:line="2" pos:column="19">*<pos:position pos:line="2" pos:column="20"/></modifier></type><name pos:line="2" pos:column="20">data<pos:position pos:line="2" pos:column="24"/></name> <init pos:line="2" pos:column="25">= <expr><operator pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></operator><operator pos:line="2" pos:column="28">(<pos:position pos:line="2" pos:column="29"/></operator><name pos:line="2" pos:column="29">pfc_user_data_t<pos:position pos:line="2" pos:column="44"/></name> <operator pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></operator><operator pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></operator><operator pos:line="2" pos:column="47">)<pos:position pos:line="2" pos:column="48"/></operator><name pos:line="2" pos:column="48">user_data<pos:position pos:line="2" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="2" pos:column="58"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">ret<pos:position pos:line="4" pos:column="10"/></name> <init pos:line="4" pos:column="11">= <expr><literal type="number" pos:line="4" pos:column="13">0<pos:position pos:line="4" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">dTHX<pos:position pos:line="6" pos:column="7"/></name></expr>;<pos:position pos:line="6" pos:column="8"/></expr_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">(<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">NULL<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">==<pos:position pos:line="8" pos:column="15"/></operator> <name pos:line="8" pos:column="16">perl_threads<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">)<pos:position pos:line="8" pos:column="29"/></operator> <operator pos:line="8" pos:column="30">||<pos:position pos:line="8" pos:column="32"/></operator> <operator pos:line="8" pos:column="33">(<pos:position pos:line="8" pos:column="34"/></operator><name pos:line="8" pos:column="34">NULL<pos:position pos:line="8" pos:column="38"/></name> <operator pos:line="8" pos:column="39">==<pos:position pos:line="8" pos:column="41"/></operator> <name pos:line="8" pos:column="42">data<pos:position pos:line="8" pos:column="46"/></name><operator pos:line="8" pos:column="46">)<pos:position pos:line="8" pos:column="47"/></operator></expr>)<pos:position pos:line="8" pos:column="48"/></condition><then pos:line="8" pos:column="48">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><literal type="number" pos:line="9" pos:column="12">0<pos:position pos:line="9" pos:column="13"/></literal></expr>;<pos:position pos:line="9" pos:column="14"/></return></block></then></if>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">NULL<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">==<pos:position pos:line="11" pos:column="14"/></operator> <name pos:line="11" pos:column="15">aTHX<pos:position pos:line="11" pos:column="19"/></name></expr>)<pos:position pos:line="11" pos:column="20"/></condition><then pos:line="11" pos:column="20"> <block pos:line="11" pos:column="21">{
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">c_ithread_t<pos:position pos:line="12" pos:column="16"/></name> <modifier pos:line="12" pos:column="17">*<pos:position pos:line="12" pos:column="18"/></modifier></type><name pos:line="12" pos:column="18">t<pos:position pos:line="12" pos:column="19"/></name> <init pos:line="12" pos:column="20">= <expr><name pos:line="12" pos:column="22">NULL<pos:position pos:line="12" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="27"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">pthread_mutex_lock<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">(<argument><expr><operator pos:line="14" pos:column="24">&amp;<pos:position pos:line="14" pos:column="29"/></operator><name><name pos:line="14" pos:column="25">perl_threads<pos:position pos:line="14" pos:column="37"/></name><operator pos:line="14" pos:column="37">-&gt;<pos:position pos:line="14" pos:column="42"/></operator><name pos:line="14" pos:column="39">mutex<pos:position pos:line="14" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name pos:line="15" pos:column="5">t<pos:position pos:line="15" pos:column="6"/></name> <operator pos:line="15" pos:column="7">=<pos:position pos:line="15" pos:column="8"/></operator> <call><name pos:line="15" pos:column="9">c_ithread_create<pos:position pos:line="15" pos:column="25"/></name><argument_list pos:line="15" pos:column="25">(<argument><expr><name><name pos:line="15" pos:column="26">perl_threads<pos:position pos:line="15" pos:column="38"/></name><operator pos:line="15" pos:column="38">-&gt;<pos:position pos:line="15" pos:column="43"/></operator><name pos:line="15" pos:column="40">head<pos:position pos:line="15" pos:column="44"/></name><operator pos:line="15" pos:column="44">-&gt;<pos:position pos:line="15" pos:column="49"/></operator><name pos:line="15" pos:column="46">interp<pos:position pos:line="15" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">pthread_mutex_unlock<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">(<argument><expr><operator pos:line="16" pos:column="26">&amp;<pos:position pos:line="16" pos:column="31"/></operator><name><name pos:line="16" pos:column="27">perl_threads<pos:position pos:line="16" pos:column="39"/></name><operator pos:line="16" pos:column="39">-&gt;<pos:position pos:line="16" pos:column="44"/></operator><name pos:line="16" pos:column="41">mutex<pos:position pos:line="16" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="48"/></expr_stmt>

    <expr_stmt><expr><name pos:line="18" pos:column="5">aTHX<pos:position pos:line="18" pos:column="9"/></name> <operator pos:line="18" pos:column="10">=<pos:position pos:line="18" pos:column="11"/></operator> <name><name pos:line="18" pos:column="12">t<pos:position pos:line="18" pos:column="13"/></name><operator pos:line="18" pos:column="13">-&gt;<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="15">interp<pos:position pos:line="18" pos:column="21"/></name></name></expr>;<pos:position pos:line="18" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="21" pos:column="3">log_debug<pos:position pos:line="21" pos:column="12"/></name><argument_list pos:line="21" pos:column="12">(<argument><expr><literal type="string" pos:line="21" pos:column="13">"fc_destroy: c_ithread: interp = %p (active threads: %i)"<pos:position pos:line="21" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="72">aTHX<pos:position pos:line="21" pos:column="76"/></name></expr></argument>,
            <argument><expr><name><name pos:line="22" pos:column="13">perl_threads<pos:position pos:line="22" pos:column="25"/></name><operator pos:line="22" pos:column="25">-&gt;<pos:position pos:line="22" pos:column="30"/></operator><name pos:line="22" pos:column="27">number_of_threads<pos:position pos:line="22" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="46"/></expr_stmt>

  <expr_stmt><expr><name pos:line="24" pos:column="3">ret<pos:position pos:line="24" pos:column="6"/></name> <operator pos:line="24" pos:column="7">=<pos:position pos:line="24" pos:column="8"/></operator> <macro><name pos:line="24" pos:column="9">fc_call<pos:position pos:line="24" pos:column="16"/></name><argument_list pos:line="24" pos:column="16">(<argument pos:line="24" pos:column="17">aTHX_ type<pos:position pos:line="24" pos:column="27"/></argument>, <argument pos:line="24" pos:column="29">FC_CB_DESTROY<pos:position pos:line="24" pos:column="42"/></argument>, <argument pos:line="24" pos:column="44">data<pos:position pos:line="24" pos:column="48"/></argument>)<pos:position pos:line="24" pos:column="49"/></argument_list></macro></expr>;<pos:position pos:line="24" pos:column="50"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="26" pos:column="3">PFC_USER_DATA_FREE<pos:position pos:line="26" pos:column="21"/></name><argument_list pos:line="26" pos:column="21">(<argument><expr><name pos:line="26" pos:column="22">data<pos:position pos:line="26" pos:column="26"/></name></expr></argument>)<pos:position pos:line="26" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="27" pos:column="3">*<pos:position pos:line="27" pos:column="4"/></operator><name pos:line="27" pos:column="4">user_data<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <name pos:line="27" pos:column="16">NULL<pos:position pos:line="27" pos:column="20"/></name></expr>;<pos:position pos:line="27" pos:column="21"/></expr_stmt>
  <return pos:line="28" pos:column="3">return <expr><name pos:line="28" pos:column="10">ret<pos:position pos:line="28" pos:column="13"/></name></expr>;<pos:position pos:line="28" pos:column="14"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

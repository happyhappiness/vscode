<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1368_collectd-4.9.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">flush_buffer<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">void<pos:position pos:line="1" pos:column="31"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="3" pos:column="9">DEBUG<pos:position pos:line="3" pos:column="14"/></name> <argument_list pos:line="3" pos:column="15">(<argument><expr><literal type="string" pos:line="3" pos:column="16">"network plugin: flush_buffer: send_buffer_fill = %i"<pos:position pos:line="3" pos:column="69"/></literal></expr></argument>,
			<argument><expr><name pos:line="4" pos:column="25">send_buffer_fill<pos:position pos:line="4" pos:column="41"/></name></expr></argument>)<pos:position pos:line="4" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="43"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="6" pos:column="9">network_send_buffer<pos:position pos:line="6" pos:column="28"/></name> <argument_list pos:line="6" pos:column="29">(<argument><expr><name pos:line="6" pos:column="30">send_buffer<pos:position pos:line="6" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="43">(<pos:position pos:line="6" pos:column="44"/></operator><name pos:line="6" pos:column="44">size_t<pos:position pos:line="6" pos:column="50"/></name><operator pos:line="6" pos:column="50">)<pos:position pos:line="6" pos:column="51"/></operator> <name pos:line="6" pos:column="52">send_buffer_fill<pos:position pos:line="6" pos:column="68"/></name></expr></argument>)<pos:position pos:line="6" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="70"/></expr_stmt>

	<expr_stmt><expr><name pos:line="8" pos:column="9">stats_octets_tx<pos:position pos:line="8" pos:column="24"/></name> <operator pos:line="8" pos:column="25">+=<pos:position pos:line="8" pos:column="27"/></operator> <operator pos:line="8" pos:column="28">(<pos:position pos:line="8" pos:column="29"/></operator><operator pos:line="8" pos:column="29">(<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="30">uint64_t<pos:position pos:line="8" pos:column="38"/></name><operator pos:line="8" pos:column="38">)<pos:position pos:line="8" pos:column="39"/></operator> <name pos:line="8" pos:column="40">send_buffer_fill<pos:position pos:line="8" pos:column="56"/></name><operator pos:line="8" pos:column="56">)<pos:position pos:line="8" pos:column="57"/></operator></expr>;<pos:position pos:line="8" pos:column="58"/></expr_stmt>
	<expr_stmt><expr><name pos:line="9" pos:column="9">stats_packets_tx<pos:position pos:line="9" pos:column="25"/></name><operator pos:line="9" pos:column="25">++<pos:position pos:line="9" pos:column="27"/></operator></expr>;<pos:position pos:line="9" pos:column="28"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="11" pos:column="9">network_init_buffer<pos:position pos:line="11" pos:column="28"/></name> <argument_list pos:line="11" pos:column="29">()<pos:position pos:line="11" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="32"/></expr_stmt>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

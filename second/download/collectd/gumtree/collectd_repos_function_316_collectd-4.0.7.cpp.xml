<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_316_collectd-4.0.7.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">module_register<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">void<pos:position pos:line="1" pos:column="27"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="28"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name><name pos:line="3" pos:column="15">embed_argv<pos:position pos:line="3" pos:column="25"/></name><index pos:line="3" pos:column="25">[]<pos:position pos:line="3" pos:column="27"/></index></name> <init pos:line="3" pos:column="28">= <expr><block pos:line="3" pos:column="30">{ <expr><literal type="string" pos:line="3" pos:column="32">""<pos:position pos:line="3" pos:column="34"/></literal></expr>, <expr><literal type="string" pos:line="3" pos:column="36">"-e"<pos:position pos:line="3" pos:column="40"/></literal></expr>, <expr><literal type="string" pos:line="3" pos:column="42">"bootstrap Collectd \""<pos:position pos:line="3" pos:column="65"/></literal><name pos:line="3" pos:column="65">VERSION<pos:position pos:line="3" pos:column="72"/></name><literal type="string" pos:line="3" pos:column="72">"\""<pos:position pos:line="3" pos:column="76"/></literal></expr>, <expr><name pos:line="3" pos:column="78">NULL<pos:position pos:line="3" pos:column="82"/></name></expr> }<pos:position pos:line="3" pos:column="84"/></block></expr></init></decl>;<pos:position pos:line="3" pos:column="85"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type>  <name pos:line="4" pos:column="14">embed_argc<pos:position pos:line="4" pos:column="24"/></name>    <init pos:line="4" pos:column="28">= <expr><literal type="number" pos:line="4" pos:column="30">3<pos:position pos:line="4" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">i<pos:position pos:line="6" pos:column="14"/></name> <init pos:line="6" pos:column="15">= <expr><literal type="number" pos:line="6" pos:column="17">0<pos:position pos:line="6" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">log_debug<pos:position pos:line="8" pos:column="18"/></name> <argument_list pos:line="8" pos:column="19">(<argument><expr><literal type="string" pos:line="8" pos:column="20">"module_register: Registering perl plugin..."<pos:position pos:line="8" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="67"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="10" pos:column="9">PERL_SYS_INIT3<pos:position pos:line="10" pos:column="23"/></name> <argument_list pos:line="10" pos:column="24">(<argument><expr><operator pos:line="10" pos:column="25">&amp;<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="26">argc<pos:position pos:line="10" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="32">&amp;<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="33">argv<pos:position pos:line="10" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="39">&amp;<pos:position pos:line="10" pos:column="44"/></operator><name pos:line="10" pos:column="40">environ<pos:position pos:line="10" pos:column="47"/></name></expr></argument>)<pos:position pos:line="10" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="49"/></expr_stmt>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">NULL<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">==<pos:position pos:line="12" pos:column="20"/></operator> <operator pos:line="12" pos:column="21">(<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="22">perl<pos:position pos:line="12" pos:column="26"/></name> <operator pos:line="12" pos:column="27">=<pos:position pos:line="12" pos:column="28"/></operator> <call><name pos:line="12" pos:column="29">perl_alloc<pos:position pos:line="12" pos:column="39"/></name> <argument_list pos:line="12" pos:column="40">()<pos:position pos:line="12" pos:column="42"/></argument_list></call><operator pos:line="12" pos:column="42">)<pos:position pos:line="12" pos:column="43"/></operator></expr>)<pos:position pos:line="12" pos:column="44"/></condition><then pos:line="12" pos:column="44"> <block pos:line="12" pos:column="45">{
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">log_err<pos:position pos:line="13" pos:column="24"/></name> <argument_list pos:line="13" pos:column="25">(<argument><expr><literal type="string" pos:line="13" pos:column="26">"module_register: Not enough memory."<pos:position pos:line="13" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">exit<pos:position pos:line="14" pos:column="21"/></name> <argument_list pos:line="14" pos:column="22">(<argument><expr><literal type="number" pos:line="14" pos:column="23">3<pos:position pos:line="14" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">perl_construct<pos:position pos:line="16" pos:column="23"/></name> <argument_list pos:line="16" pos:column="24">(<argument><expr><name pos:line="16" pos:column="25">perl<pos:position pos:line="16" pos:column="29"/></name></expr></argument>)<pos:position pos:line="16" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="31"/></expr_stmt>

	<expr_stmt><expr><name pos:line="18" pos:column="9">PL_exit_flags<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">|=<pos:position pos:line="18" pos:column="25"/></operator> <name pos:line="18" pos:column="26">PERL_EXIT_DESTRUCT_END<pos:position pos:line="18" pos:column="48"/></name></expr>;<pos:position pos:line="18" pos:column="49"/></expr_stmt>

	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><literal type="number" pos:line="20" pos:column="13">0<pos:position pos:line="20" pos:column="14"/></literal> <operator pos:line="20" pos:column="15">!=<pos:position pos:line="20" pos:column="17"/></operator> <call><name pos:line="20" pos:column="18">perl_parse<pos:position pos:line="20" pos:column="28"/></name> <argument_list pos:line="20" pos:column="29">(<argument><expr><name pos:line="20" pos:column="30">perl<pos:position pos:line="20" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="36">xs_init<pos:position pos:line="20" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="45">embed_argc<pos:position pos:line="20" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="57">embed_argv<pos:position pos:line="20" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="69">NULL<pos:position pos:line="20" pos:column="73"/></name></expr></argument>)<pos:position pos:line="20" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="75"/></condition><then pos:line="20" pos:column="75"> <block pos:line="20" pos:column="76">{
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">log_err<pos:position pos:line="21" pos:column="24"/></name> <argument_list pos:line="21" pos:column="25">(<argument><expr><literal type="string" pos:line="21" pos:column="26">"module_register: Unable to bootstrap Collectd."<pos:position pos:line="21" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="76"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">exit<pos:position pos:line="22" pos:column="21"/></name> <argument_list pos:line="22" pos:column="22">(<argument><expr><literal type="number" pos:line="22" pos:column="23">1<pos:position pos:line="22" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">perl_run<pos:position pos:line="24" pos:column="17"/></name> <argument_list pos:line="24" pos:column="18">(<argument><expr><name pos:line="24" pos:column="19">perl<pos:position pos:line="24" pos:column="23"/></name></expr></argument>)<pos:position pos:line="24" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="25"/></expr_stmt>

	<for pos:line="26" pos:column="9">for <control pos:line="26" pos:column="13">(<init><expr><name pos:line="26" pos:column="14">i<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">=<pos:position pos:line="26" pos:column="17"/></operator> <literal type="number" pos:line="26" pos:column="18">0<pos:position pos:line="26" pos:column="19"/></literal></expr>;<pos:position pos:line="26" pos:column="20"/></init> <condition><expr><name pos:line="26" pos:column="21">i<pos:position pos:line="26" pos:column="22"/></name> <operator pos:line="26" pos:column="23">&lt;<pos:position pos:line="26" pos:column="27"/></operator> <name pos:line="26" pos:column="25">PLUGIN_TYPES<pos:position pos:line="26" pos:column="37"/></name></expr>;<pos:position pos:line="26" pos:column="38"/></condition> <incr><expr><operator pos:line="26" pos:column="39">++<pos:position pos:line="26" pos:column="41"/></operator><name pos:line="26" pos:column="41">i<pos:position pos:line="26" pos:column="42"/></name></expr></incr>)<pos:position pos:line="26" pos:column="43"/></control>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="27" pos:column="17">plugins<pos:position pos:line="27" pos:column="24"/></name><index pos:line="27" pos:column="24">[<expr><name pos:line="27" pos:column="25">i<pos:position pos:line="27" pos:column="26"/></name></expr>]<pos:position pos:line="27" pos:column="27"/></index></name> <operator pos:line="27" pos:column="28">=<pos:position pos:line="27" pos:column="29"/></operator> <call><name pos:line="27" pos:column="30">Perl_newHV<pos:position pos:line="27" pos:column="40"/></name> <argument_list pos:line="27" pos:column="41">(<argument><expr><name pos:line="27" pos:column="42">perl<pos:position pos:line="27" pos:column="46"/></name></expr></argument>)<pos:position pos:line="27" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="48"/></expr_stmt></block></for>

	<expr_stmt><expr><name pos:line="29" pos:column="9">data_sets<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">=<pos:position pos:line="29" pos:column="20"/></operator> <call><name pos:line="29" pos:column="21">Perl_newHV<pos:position pos:line="29" pos:column="31"/></name> <argument_list pos:line="29" pos:column="32">(<argument><expr><name pos:line="29" pos:column="33">perl<pos:position pos:line="29" pos:column="37"/></name></expr></argument>)<pos:position pos:line="29" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="39"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="31" pos:column="9">plugin_register_log<pos:position pos:line="31" pos:column="28"/></name> <argument_list pos:line="31" pos:column="29">(<argument><expr><literal type="string" pos:line="31" pos:column="30">"perl"<pos:position pos:line="31" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="38">perl_log<pos:position pos:line="31" pos:column="46"/></name></expr></argument>)<pos:position pos:line="31" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="32" pos:column="9">plugin_register_config<pos:position pos:line="32" pos:column="31"/></name> <argument_list pos:line="32" pos:column="32">(<argument><expr><literal type="string" pos:line="32" pos:column="33">"perl"<pos:position pos:line="32" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="41">perl_config<pos:position pos:line="32" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="54">config_keys<pos:position pos:line="32" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="67">config_keys_num<pos:position pos:line="32" pos:column="82"/></name></expr></argument>)<pos:position pos:line="32" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="84"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="33" pos:column="9">plugin_register_init<pos:position pos:line="33" pos:column="29"/></name> <argument_list pos:line="33" pos:column="30">(<argument><expr><literal type="string" pos:line="33" pos:column="31">"perl"<pos:position pos:line="33" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="39">perl_init<pos:position pos:line="33" pos:column="48"/></name></expr></argument>)<pos:position pos:line="33" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="50"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="35" pos:column="9">plugin_register_read<pos:position pos:line="35" pos:column="29"/></name> <argument_list pos:line="35" pos:column="30">(<argument><expr><literal type="string" pos:line="35" pos:column="31">"perl"<pos:position pos:line="35" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="39">perl_read<pos:position pos:line="35" pos:column="48"/></name></expr></argument>)<pos:position pos:line="35" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="50"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="37" pos:column="9">plugin_register_write<pos:position pos:line="37" pos:column="30"/></name> <argument_list pos:line="37" pos:column="31">(<argument><expr><literal type="string" pos:line="37" pos:column="32">"perl"<pos:position pos:line="37" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="40">perl_write<pos:position pos:line="37" pos:column="50"/></name></expr></argument>)<pos:position pos:line="37" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="38" pos:column="9">plugin_register_shutdown<pos:position pos:line="38" pos:column="33"/></name> <argument_list pos:line="38" pos:column="34">(<argument><expr><literal type="string" pos:line="38" pos:column="35">"perl"<pos:position pos:line="38" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="43">perl_shutdown<pos:position pos:line="38" pos:column="56"/></name></expr></argument>)<pos:position pos:line="38" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="58"/></expr_stmt>
	<return pos:line="39" pos:column="9">return;<pos:position pos:line="39" pos:column="16"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

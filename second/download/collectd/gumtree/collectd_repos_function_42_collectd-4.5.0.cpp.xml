<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_42_collectd-4.5.0.cpp" pos:tabs="8"><function_decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">sys_dyld_close<pos:position pos:line="2" pos:column="15"/></name> <parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">loader_data<pos:position pos:line="2" pos:column="28"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="30">module<pos:position pos:line="2" pos:column="36"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="37"/></parameter_list>
     <decl_stmt><decl><type><name pos:line="3" pos:column="6">lt_user_data<pos:position pos:line="3" pos:column="18"/></name></type> <name pos:line="3" pos:column="19">loader_data<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
     <decl_stmt><decl><type><name pos:line="4" pos:column="6">lt_module<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">module<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">retCode<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><literal type="number" pos:line="6" pos:column="23">0<pos:position pos:line="6" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">flags<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><literal type="number" pos:line="7" pos:column="21">0<pos:position pos:line="7" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">module<pos:position pos:line="8" pos:column="19"/></name> <operator pos:line="8" pos:column="20">==<pos:position pos:line="8" pos:column="22"/></operator> <operator pos:line="8" pos:column="23">(<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="24">lt_module<pos:position pos:line="8" pos:column="33"/></name><operator pos:line="8" pos:column="33">)<pos:position pos:line="8" pos:column="34"/></operator><operator pos:line="8" pos:column="34">-<pos:position pos:line="8" pos:column="35"/></operator><literal type="number" pos:line="8" pos:column="35">1<pos:position pos:line="8" pos:column="36"/></literal></expr>)<pos:position pos:line="8" pos:column="37"/></condition><then pos:line="8" pos:column="37"> <block type="pseudo"><return pos:line="8" pos:column="38">return <expr><literal type="number" pos:line="8" pos:column="45">0<pos:position pos:line="8" pos:column="46"/></literal></expr>;<pos:position pos:line="8" pos:column="47"/></return></block></then></if>
<cpp:ifdef pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">ifdef<pos:position pos:line="9" pos:column="7"/></cpp:directive> <name pos:line="9" pos:column="8">__BIG_ENDIAN__<pos:position pos:line="9" pos:column="22"/></name></cpp:ifdef>
  	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">(<pos:position pos:line="10" pos:column="14"/></operator><operator pos:line="10" pos:column="14">(<pos:position pos:line="10" pos:column="15"/></operator>struct <name pos:line="10" pos:column="22">mach_header<pos:position pos:line="10" pos:column="33"/></name> <operator pos:line="10" pos:column="34">*<pos:position pos:line="10" pos:column="35"/></operator><operator pos:line="10" pos:column="35">)<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="36">module<pos:position pos:line="10" pos:column="42"/></name><operator pos:line="10" pos:column="42">)<pos:position pos:line="10" pos:column="43"/></operator><operator pos:line="10" pos:column="43">-&gt;<pos:position pos:line="10" pos:column="48"/></operator><name pos:line="10" pos:column="45">magic<pos:position pos:line="10" pos:column="50"/></name> <operator pos:line="10" pos:column="51">==<pos:position pos:line="10" pos:column="53"/></operator> <name pos:line="10" pos:column="54">MH_MAGIC<pos:position pos:line="10" pos:column="62"/></name></expr>)<pos:position pos:line="10" pos:column="63"/></condition><then pos:line="10" pos:column="63">
<cpp:else pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">else<pos:position pos:line="11" pos:column="6"/></cpp:directive></cpp:else>
    <block type="pseudo"><if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">(<pos:position pos:line="12" pos:column="10"/></operator><operator pos:line="12" pos:column="10">(<pos:position pos:line="12" pos:column="11"/></operator>struct <name pos:line="12" pos:column="18">mach_header<pos:position pos:line="12" pos:column="29"/></name> <operator pos:line="12" pos:column="30">*<pos:position pos:line="12" pos:column="31"/></operator><operator pos:line="12" pos:column="31">)<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="32">module<pos:position pos:line="12" pos:column="38"/></name><operator pos:line="12" pos:column="38">)<pos:position pos:line="12" pos:column="39"/></operator><operator pos:line="12" pos:column="39">-&gt;<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="41">magic<pos:position pos:line="12" pos:column="46"/></name> <operator pos:line="12" pos:column="47">==<pos:position pos:line="12" pos:column="49"/></operator> <name pos:line="12" pos:column="50">MH_CIGAM<pos:position pos:line="12" pos:column="58"/></name></expr>)<pos:position pos:line="12" pos:column="59"/></condition><then pos:line="12" pos:column="59">
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif<pos:position pos:line="13" pos:column="7"/></cpp:directive></cpp:endif>
	<block pos:line="14" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="15" pos:column="11">LT_DLMUTEX_SETERROR<pos:position pos:line="15" pos:column="30"/></name><argument_list pos:line="15" pos:column="30">(<argument><expr><literal type="string" pos:line="15" pos:column="31">"Can not close a dylib"<pos:position pos:line="15" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="56"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="16" pos:column="11">retCode<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">=<pos:position pos:line="16" pos:column="20"/></operator> <literal type="number" pos:line="16" pos:column="21">1<pos:position pos:line="16" pos:column="22"/></literal></expr>;<pos:position pos:line="16" pos:column="23"/></expr_stmt>
	}<pos:position pos:line="17" pos:column="10"/></block></then>
	<else pos:line="18" pos:column="9">else
	<block pos:line="19" pos:column="9">{
<cpp:if pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">if<pos:position pos:line="20" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="20" pos:column="5">1<pos:position pos:line="20" pos:column="6"/></literal></expr></cpp:if>
<comment type="block" pos:line="21" pos:column="1">/* Currently, if a module contains c++ static destructors and it is unloaded, we
   get a segfault in atexit(), due to compiler and dynamic loader differences of
   opinion, this works around that.
*/</comment>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><operator pos:line="25" pos:column="21">(<pos:position pos:line="25" pos:column="22"/></operator><specifier pos:line="25" pos:column="22">const<pos:position pos:line="25" pos:column="27"/></specifier> struct <name pos:line="25" pos:column="35">section<pos:position pos:line="25" pos:column="42"/></name> <operator pos:line="25" pos:column="43">*<pos:position pos:line="25" pos:column="44"/></operator><operator pos:line="25" pos:column="44">)<pos:position pos:line="25" pos:column="45"/></operator><name pos:line="25" pos:column="45">NULL<pos:position pos:line="25" pos:column="49"/></name> <operator pos:line="25" pos:column="50">!=<pos:position pos:line="25" pos:column="52"/></operator>
		   <call><name pos:line="26" pos:column="20">getsectbynamefromheader<pos:position pos:line="26" pos:column="43"/></name><argument_list pos:line="26" pos:column="43">(<argument><expr><call><name pos:line="26" pos:column="44">lt_int_dyld_get_mach_header_from_nsmodule<pos:position pos:line="26" pos:column="85"/></name><argument_list pos:line="26" pos:column="85">(<argument><expr><name pos:line="26" pos:column="86">module<pos:position pos:line="26" pos:column="92"/></name></expr></argument>)<pos:position pos:line="26" pos:column="93"/></argument_list></call></expr></argument>,
		   <argument><expr><literal type="string" pos:line="27" pos:column="20">"__DATA"<pos:position pos:line="27" pos:column="28"/></literal></expr></argument>,<argument><expr><literal type="string" pos:line="27" pos:column="29">"__mod_term_func"<pos:position pos:line="27" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="48"/></condition><then pos:line="27" pos:column="48">
		<block pos:line="28" pos:column="17">{
			<expr_stmt><expr><name pos:line="29" pos:column="25">flags<pos:position pos:line="29" pos:column="30"/></name> <operator pos:line="29" pos:column="31">+=<pos:position pos:line="29" pos:column="33"/></operator> <name pos:line="29" pos:column="34">NSUNLINKMODULE_OPTION_KEEP_MEMORY_MAPPED<pos:position pos:line="29" pos:column="74"/></name></expr>;<pos:position pos:line="29" pos:column="75"/></expr_stmt>
		}<pos:position pos:line="30" pos:column="18"/></block></then></if>
<cpp:endif pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">endif<pos:position pos:line="31" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">ifdef<pos:position pos:line="32" pos:column="7"/></cpp:directive> <name pos:line="32" pos:column="8">__ppc__<pos:position pos:line="32" pos:column="15"/></name></cpp:ifdef>
			<expr_stmt><expr><name pos:line="33" pos:column="25">flags<pos:position pos:line="33" pos:column="30"/></name> <operator pos:line="33" pos:column="31">+=<pos:position pos:line="33" pos:column="33"/></operator> <name pos:line="33" pos:column="34">NSUNLINKMODULE_OPTION_RESET_LAZY_REFERENCES<pos:position pos:line="33" pos:column="77"/></name></expr>;<pos:position pos:line="33" pos:column="78"/></expr_stmt>
<cpp:endif pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">endif<pos:position pos:line="34" pos:column="7"/></cpp:directive></cpp:endif>
		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><operator pos:line="35" pos:column="21">!<pos:position pos:line="35" pos:column="22"/></operator><call><name pos:line="35" pos:column="22">NSUnLinkModule<pos:position pos:line="35" pos:column="36"/></name><argument_list pos:line="35" pos:column="36">(<argument><expr><name pos:line="35" pos:column="37">module<pos:position pos:line="35" pos:column="43"/></name></expr></argument>,<argument><expr><name pos:line="35" pos:column="44">flags<pos:position pos:line="35" pos:column="49"/></name></expr></argument>)<pos:position pos:line="35" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="51"/></condition><then pos:line="35" pos:column="51">
		<block pos:line="36" pos:column="17">{
			<expr_stmt><expr><name pos:line="37" pos:column="25">retCode<pos:position pos:line="37" pos:column="32"/></name><operator pos:line="37" pos:column="32">=<pos:position pos:line="37" pos:column="33"/></operator><literal type="number" pos:line="37" pos:column="33">1<pos:position pos:line="37" pos:column="34"/></literal></expr>;<pos:position pos:line="37" pos:column="35"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="38" pos:column="25">LT_DLMUTEX_SETERROR<pos:position pos:line="38" pos:column="44"/></name> <argument_list pos:line="38" pos:column="45">(<argument><expr><call><name pos:line="38" pos:column="46">lt_int_dyld_error<pos:position pos:line="38" pos:column="63"/></name><argument_list pos:line="38" pos:column="63">(<argument><expr><call><name pos:line="38" pos:column="64">LT_DLSTRERROR<pos:position pos:line="38" pos:column="77"/></name><argument_list pos:line="38" pos:column="77">(<argument><expr><name pos:line="38" pos:column="78">CANNOT_CLOSE<pos:position pos:line="38" pos:column="90"/></name></expr></argument>)<pos:position pos:line="38" pos:column="91"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="92"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="94"/></expr_stmt>
		}<pos:position pos:line="39" pos:column="18"/></block></then></if>
	}<pos:position pos:line="40" pos:column="10"/></block></else></if></block></then></if>

 <return pos:line="42" pos:column="2">return <expr><name pos:line="42" pos:column="9">retCode<pos:position pos:line="42" pos:column="16"/></name></expr>;<pos:position pos:line="42" pos:column="17"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function_decl></unit>

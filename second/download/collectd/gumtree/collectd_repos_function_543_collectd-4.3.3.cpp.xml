<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_543_collectd-4.3.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">rra_get<pos:position pos:line="1" pos:column="19"/></name> <parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">char<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier><modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier><modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">ret<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">value_list_t<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">vl<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier><modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">rra_def<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">rra_num<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name> <modifier pos:line="6" pos:column="13">*<pos:position pos:line="6" pos:column="14"/></modifier></type><name pos:line="6" pos:column="14">rts<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type>  <name pos:line="7" pos:column="14">rts_num<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">rra_max<pos:position pos:line="9" pos:column="20"/></name></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">span<pos:position pos:line="11" pos:column="17"/></name></decl>;<pos:position pos:line="11" pos:column="18"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="13" pos:column="9">int<pos:position pos:line="13" pos:column="12"/></name></type> <name pos:line="13" pos:column="13">cdp_num<pos:position pos:line="13" pos:column="20"/></name></decl>;<pos:position pos:line="13" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">int<pos:position pos:line="14" pos:column="12"/></name></type> <name pos:line="14" pos:column="13">cdp_len<pos:position pos:line="14" pos:column="20"/></name></decl>;<pos:position pos:line="14" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">int<pos:position pos:line="15" pos:column="12"/></name></type> <name pos:line="15" pos:column="13">i<pos:position pos:line="15" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="15" pos:column="16">j<pos:position pos:line="15" pos:column="17"/></name></decl>;<pos:position pos:line="15" pos:column="18"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="17" pos:column="9">char<pos:position pos:line="17" pos:column="13"/></name></type> <name><name pos:line="17" pos:column="14">buffer<pos:position pos:line="17" pos:column="20"/></name><index pos:line="17" pos:column="20">[<expr><literal type="number" pos:line="17" pos:column="21">64<pos:position pos:line="17" pos:column="23"/></literal></expr>]<pos:position pos:line="17" pos:column="24"/></index></name></decl>;<pos:position pos:line="17" pos:column="25"/></decl_stmt>

	<comment type="block" pos:line="19" pos:column="9">/* The stepsize we use here: If it is user-set, use it. If not, use the
	 * interval of the value-list. */</comment>
	<decl_stmt><decl><type><name pos:line="21" pos:column="9">int<pos:position pos:line="21" pos:column="12"/></name></type> <name pos:line="21" pos:column="13">ss<pos:position pos:line="21" pos:column="15"/></name></decl>;<pos:position pos:line="21" pos:column="16"/></decl_stmt>

	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">rrarows<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">&lt;=<pos:position pos:line="23" pos:column="26"/></operator> <literal type="number" pos:line="23" pos:column="24">0<pos:position pos:line="23" pos:column="25"/></literal></expr>)<pos:position pos:line="23" pos:column="26"/></condition><then pos:line="23" pos:column="26">
	<block pos:line="24" pos:column="9">{
		<expr_stmt><expr><operator pos:line="25" pos:column="17">*<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="18">ret<pos:position pos:line="25" pos:column="21"/></name> <operator pos:line="25" pos:column="22">=<pos:position pos:line="25" pos:column="23"/></operator> <name pos:line="25" pos:column="24">NULL<pos:position pos:line="25" pos:column="28"/></name></expr>;<pos:position pos:line="25" pos:column="29"/></expr_stmt>
		<return pos:line="26" pos:column="17">return <expr><operator pos:line="26" pos:column="24">(<pos:position pos:line="26" pos:column="25"/></operator><operator pos:line="26" pos:column="25">-<pos:position pos:line="26" pos:column="26"/></operator><literal type="number" pos:line="26" pos:column="26">1<pos:position pos:line="26" pos:column="27"/></literal><operator pos:line="26" pos:column="27">)<pos:position pos:line="26" pos:column="28"/></operator></expr>;<pos:position pos:line="26" pos:column="29"/></return>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="29" pos:column="9">ss<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">=<pos:position pos:line="29" pos:column="13"/></operator> <ternary><condition><expr><operator pos:line="29" pos:column="14">(<pos:position pos:line="29" pos:column="15"/></operator><name pos:line="29" pos:column="15">stepsize<pos:position pos:line="29" pos:column="23"/></name> <operator pos:line="29" pos:column="24">&gt;<pos:position pos:line="29" pos:column="28"/></operator> <literal type="number" pos:line="29" pos:column="26">0<pos:position pos:line="29" pos:column="27"/></literal><operator pos:line="29" pos:column="27">)<pos:position pos:line="29" pos:column="28"/></operator></expr> ?<pos:position pos:line="29" pos:column="30"/></condition><then pos:line="29" pos:column="30"> <expr><name pos:line="29" pos:column="31">stepsize<pos:position pos:line="29" pos:column="39"/></name></expr> <pos:position pos:line="29" pos:column="40"/></then><else pos:line="29" pos:column="40">: <expr><name><name pos:line="29" pos:column="42">vl<pos:position pos:line="29" pos:column="44"/></name><operator pos:line="29" pos:column="44">-&gt;<pos:position pos:line="29" pos:column="49"/></operator><name pos:line="29" pos:column="46">interval<pos:position pos:line="29" pos:column="54"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="29" pos:column="55"/></expr_stmt>
	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">ss<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">&lt;=<pos:position pos:line="30" pos:column="21"/></operator> <literal type="number" pos:line="30" pos:column="19">0<pos:position pos:line="30" pos:column="20"/></literal></expr>)<pos:position pos:line="30" pos:column="21"/></condition><then pos:line="30" pos:column="21">
	<block pos:line="31" pos:column="9">{
		<expr_stmt><expr><operator pos:line="32" pos:column="17">*<pos:position pos:line="32" pos:column="18"/></operator><name pos:line="32" pos:column="18">ret<pos:position pos:line="32" pos:column="21"/></name> <operator pos:line="32" pos:column="22">=<pos:position pos:line="32" pos:column="23"/></operator> <name pos:line="32" pos:column="24">NULL<pos:position pos:line="32" pos:column="28"/></name></expr>;<pos:position pos:line="32" pos:column="29"/></expr_stmt>
		<return pos:line="33" pos:column="17">return <expr><operator pos:line="33" pos:column="24">(<pos:position pos:line="33" pos:column="25"/></operator><operator pos:line="33" pos:column="25">-<pos:position pos:line="33" pos:column="26"/></operator><literal type="number" pos:line="33" pos:column="26">1<pos:position pos:line="33" pos:column="27"/></literal><operator pos:line="33" pos:column="27">)<pos:position pos:line="33" pos:column="28"/></operator></expr>;<pos:position pos:line="33" pos:column="29"/></return>
	}<pos:position pos:line="34" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="36" pos:column="9">/* Use the configured timespans or fall back to the built-in defaults */</comment>
	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name pos:line="37" pos:column="13">rra_timespans_custom_num<pos:position pos:line="37" pos:column="37"/></name> <operator pos:line="37" pos:column="38">!=<pos:position pos:line="37" pos:column="40"/></operator> <literal type="number" pos:line="37" pos:column="41">0<pos:position pos:line="37" pos:column="42"/></literal></expr>)<pos:position pos:line="37" pos:column="43"/></condition><then pos:line="37" pos:column="43">
	<block pos:line="38" pos:column="9">{
		<expr_stmt><expr><name pos:line="39" pos:column="17">rts<pos:position pos:line="39" pos:column="20"/></name> <operator pos:line="39" pos:column="21">=<pos:position pos:line="39" pos:column="22"/></operator> <name pos:line="39" pos:column="23">rra_timespans_custom<pos:position pos:line="39" pos:column="43"/></name></expr>;<pos:position pos:line="39" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><name pos:line="40" pos:column="17">rts_num<pos:position pos:line="40" pos:column="24"/></name> <operator pos:line="40" pos:column="25">=<pos:position pos:line="40" pos:column="26"/></operator> <name pos:line="40" pos:column="27">rra_timespans_custom_num<pos:position pos:line="40" pos:column="51"/></name></expr>;<pos:position pos:line="40" pos:column="52"/></expr_stmt>
	}<pos:position pos:line="41" pos:column="10"/></block></then>
	<else pos:line="42" pos:column="9">else
	<block pos:line="43" pos:column="9">{
		<expr_stmt><expr><name pos:line="44" pos:column="17">rts<pos:position pos:line="44" pos:column="20"/></name> <operator pos:line="44" pos:column="21">=<pos:position pos:line="44" pos:column="22"/></operator> <name pos:line="44" pos:column="23">rra_timespans<pos:position pos:line="44" pos:column="36"/></name></expr>;<pos:position pos:line="44" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name pos:line="45" pos:column="17">rts_num<pos:position pos:line="45" pos:column="24"/></name> <operator pos:line="45" pos:column="25">=<pos:position pos:line="45" pos:column="26"/></operator> <name pos:line="45" pos:column="27">rra_timespans_num<pos:position pos:line="45" pos:column="44"/></name></expr>;<pos:position pos:line="45" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="46" pos:column="10"/></block></else></if>

	<expr_stmt><expr><name pos:line="48" pos:column="9">rra_max<pos:position pos:line="48" pos:column="16"/></name> <operator pos:line="48" pos:column="17">=<pos:position pos:line="48" pos:column="18"/></operator> <name pos:line="48" pos:column="19">rts_num<pos:position pos:line="48" pos:column="26"/></name> <operator pos:line="48" pos:column="27">*<pos:position pos:line="48" pos:column="28"/></operator> <name pos:line="48" pos:column="29">rra_types_num<pos:position pos:line="48" pos:column="42"/></name></expr>;<pos:position pos:line="48" pos:column="43"/></expr_stmt>

	<if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><operator pos:line="50" pos:column="13">(<pos:position pos:line="50" pos:column="14"/></operator><name pos:line="50" pos:column="14">rra_def<pos:position pos:line="50" pos:column="21"/></name> <operator pos:line="50" pos:column="22">=<pos:position pos:line="50" pos:column="23"/></operator> <operator pos:line="50" pos:column="24">(<pos:position pos:line="50" pos:column="25"/></operator><name pos:line="50" pos:column="25">char<pos:position pos:line="50" pos:column="29"/></name> <operator pos:line="50" pos:column="30">*<pos:position pos:line="50" pos:column="31"/></operator><operator pos:line="50" pos:column="31">*<pos:position pos:line="50" pos:column="32"/></operator><operator pos:line="50" pos:column="32">)<pos:position pos:line="50" pos:column="33"/></operator> <call><name pos:line="50" pos:column="34">malloc<pos:position pos:line="50" pos:column="40"/></name> <argument_list pos:line="50" pos:column="41">(<argument><expr><operator pos:line="50" pos:column="42">(<pos:position pos:line="50" pos:column="43"/></operator><name pos:line="50" pos:column="43">rra_max<pos:position pos:line="50" pos:column="50"/></name> <operator pos:line="50" pos:column="51">+<pos:position pos:line="50" pos:column="52"/></operator> <literal type="number" pos:line="50" pos:column="53">1<pos:position pos:line="50" pos:column="54"/></literal><operator pos:line="50" pos:column="54">)<pos:position pos:line="50" pos:column="55"/></operator> <operator pos:line="50" pos:column="56">*<pos:position pos:line="50" pos:column="57"/></operator> <sizeof pos:line="50" pos:column="58">sizeof <argument_list pos:line="50" pos:column="65">(<argument><expr><name pos:line="50" pos:column="66">char<pos:position pos:line="50" pos:column="70"/></name> <operator pos:line="50" pos:column="71">*<pos:position pos:line="50" pos:column="72"/></operator></expr></argument>)<pos:position pos:line="50" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="50" pos:column="74"/></argument_list></call><operator pos:line="50" pos:column="74">)<pos:position pos:line="50" pos:column="75"/></operator> <operator pos:line="50" pos:column="76">==<pos:position pos:line="50" pos:column="78"/></operator> <name pos:line="50" pos:column="79">NULL<pos:position pos:line="50" pos:column="83"/></name></expr>)<pos:position pos:line="50" pos:column="84"/></condition><then pos:line="50" pos:column="84">
		<block type="pseudo"><return pos:line="51" pos:column="17">return <expr><operator pos:line="51" pos:column="24">(<pos:position pos:line="51" pos:column="25"/></operator><operator pos:line="51" pos:column="25">-<pos:position pos:line="51" pos:column="26"/></operator><literal type="number" pos:line="51" pos:column="26">1<pos:position pos:line="51" pos:column="27"/></literal><operator pos:line="51" pos:column="27">)<pos:position pos:line="51" pos:column="28"/></operator></expr>;<pos:position pos:line="51" pos:column="29"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="52" pos:column="9">memset<pos:position pos:line="52" pos:column="15"/></name> <argument_list pos:line="52" pos:column="16">(<argument><expr><name pos:line="52" pos:column="17">rra_def<pos:position pos:line="52" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="52" pos:column="26">'\0'<pos:position pos:line="52" pos:column="30"/></literal></expr></argument>, <argument><expr><operator pos:line="52" pos:column="32">(<pos:position pos:line="52" pos:column="33"/></operator><name pos:line="52" pos:column="33">rra_max<pos:position pos:line="52" pos:column="40"/></name> <operator pos:line="52" pos:column="41">+<pos:position pos:line="52" pos:column="42"/></operator> <literal type="number" pos:line="52" pos:column="43">1<pos:position pos:line="52" pos:column="44"/></literal><operator pos:line="52" pos:column="44">)<pos:position pos:line="52" pos:column="45"/></operator> <operator pos:line="52" pos:column="46">*<pos:position pos:line="52" pos:column="47"/></operator> <sizeof pos:line="52" pos:column="48">sizeof <argument_list pos:line="52" pos:column="55">(<argument><expr><name pos:line="52" pos:column="56">char<pos:position pos:line="52" pos:column="60"/></name> <operator pos:line="52" pos:column="61">*<pos:position pos:line="52" pos:column="62"/></operator></expr></argument>)<pos:position pos:line="52" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="52" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="65"/></expr_stmt>
	<expr_stmt><expr><name pos:line="53" pos:column="9">rra_num<pos:position pos:line="53" pos:column="16"/></name> <operator pos:line="53" pos:column="17">=<pos:position pos:line="53" pos:column="18"/></operator> <literal type="number" pos:line="53" pos:column="19">0<pos:position pos:line="53" pos:column="20"/></literal></expr>;<pos:position pos:line="53" pos:column="21"/></expr_stmt>

	<expr_stmt><expr><name pos:line="55" pos:column="9">cdp_len<pos:position pos:line="55" pos:column="16"/></name> <operator pos:line="55" pos:column="17">=<pos:position pos:line="55" pos:column="18"/></operator> <literal type="number" pos:line="55" pos:column="19">0<pos:position pos:line="55" pos:column="20"/></literal></expr>;<pos:position pos:line="55" pos:column="21"/></expr_stmt>
	<for pos:line="56" pos:column="9">for <control pos:line="56" pos:column="13">(<init><expr><name pos:line="56" pos:column="14">i<pos:position pos:line="56" pos:column="15"/></name> <operator pos:line="56" pos:column="16">=<pos:position pos:line="56" pos:column="17"/></operator> <literal type="number" pos:line="56" pos:column="18">0<pos:position pos:line="56" pos:column="19"/></literal></expr>;<pos:position pos:line="56" pos:column="20"/></init> <condition><expr><name pos:line="56" pos:column="21">i<pos:position pos:line="56" pos:column="22"/></name> <operator pos:line="56" pos:column="23">&lt;<pos:position pos:line="56" pos:column="27"/></operator> <name pos:line="56" pos:column="25">rts_num<pos:position pos:line="56" pos:column="32"/></name></expr>;<pos:position pos:line="56" pos:column="33"/></condition> <incr><expr><name pos:line="56" pos:column="34">i<pos:position pos:line="56" pos:column="35"/></name><operator pos:line="56" pos:column="35">++<pos:position pos:line="56" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="56" pos:column="38"/></control>
	<block pos:line="57" pos:column="9">{
		<expr_stmt><expr><name pos:line="58" pos:column="17">span<pos:position pos:line="58" pos:column="21"/></name> <operator pos:line="58" pos:column="22">=<pos:position pos:line="58" pos:column="23"/></operator> <name><name pos:line="58" pos:column="24">rts<pos:position pos:line="58" pos:column="27"/></name><index pos:line="58" pos:column="27">[<expr><name pos:line="58" pos:column="28">i<pos:position pos:line="58" pos:column="29"/></name></expr>]<pos:position pos:line="58" pos:column="30"/></index></name></expr>;<pos:position pos:line="58" pos:column="31"/></expr_stmt>

		<if pos:line="60" pos:column="17">if <condition pos:line="60" pos:column="20">(<expr><operator pos:line="60" pos:column="21">(<pos:position pos:line="60" pos:column="22"/></operator><name pos:line="60" pos:column="22">span<pos:position pos:line="60" pos:column="26"/></name> <operator pos:line="60" pos:column="27">/<pos:position pos:line="60" pos:column="28"/></operator> <name pos:line="60" pos:column="29">ss<pos:position pos:line="60" pos:column="31"/></name><operator pos:line="60" pos:column="31">)<pos:position pos:line="60" pos:column="32"/></operator> <operator pos:line="60" pos:column="33">&lt;<pos:position pos:line="60" pos:column="37"/></operator> <name pos:line="60" pos:column="35">rrarows<pos:position pos:line="60" pos:column="42"/></name></expr>)<pos:position pos:line="60" pos:column="43"/></condition><then pos:line="60" pos:column="43">
			<block type="pseudo"><continue pos:line="61" pos:column="25">continue;<pos:position pos:line="61" pos:column="34"/></continue></block></then></if>

		<if pos:line="63" pos:column="17">if <condition pos:line="63" pos:column="20">(<expr><name pos:line="63" pos:column="21">cdp_len<pos:position pos:line="63" pos:column="28"/></name> <operator pos:line="63" pos:column="29">==<pos:position pos:line="63" pos:column="31"/></operator> <literal type="number" pos:line="63" pos:column="32">0<pos:position pos:line="63" pos:column="33"/></literal></expr>)<pos:position pos:line="63" pos:column="34"/></condition><then pos:line="63" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><name pos:line="64" pos:column="25">cdp_len<pos:position pos:line="64" pos:column="32"/></name> <operator pos:line="64" pos:column="33">=<pos:position pos:line="64" pos:column="34"/></operator> <literal type="number" pos:line="64" pos:column="35">1<pos:position pos:line="64" pos:column="36"/></literal></expr>;<pos:position pos:line="64" pos:column="37"/></expr_stmt></block></then>
		<else pos:line="65" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="66" pos:column="25">cdp_len<pos:position pos:line="66" pos:column="32"/></name> <operator pos:line="66" pos:column="33">=<pos:position pos:line="66" pos:column="34"/></operator> <operator pos:line="66" pos:column="35">(<pos:position pos:line="66" pos:column="36"/></operator><name pos:line="66" pos:column="36">int<pos:position pos:line="66" pos:column="39"/></name><operator pos:line="66" pos:column="39">)<pos:position pos:line="66" pos:column="40"/></operator> <call><name pos:line="66" pos:column="41">floor<pos:position pos:line="66" pos:column="46"/></name> <argument_list pos:line="66" pos:column="47">(<argument><expr><operator pos:line="66" pos:column="48">(<pos:position pos:line="66" pos:column="49"/></operator><operator pos:line="66" pos:column="49">(<pos:position pos:line="66" pos:column="50"/></operator><name pos:line="66" pos:column="50">double<pos:position pos:line="66" pos:column="56"/></name><operator pos:line="66" pos:column="56">)<pos:position pos:line="66" pos:column="57"/></operator> <name pos:line="66" pos:column="58">span<pos:position pos:line="66" pos:column="62"/></name><operator pos:line="66" pos:column="62">)<pos:position pos:line="66" pos:column="63"/></operator>
					<operator pos:line="67" pos:column="41">/<pos:position pos:line="67" pos:column="42"/></operator> <operator pos:line="67" pos:column="43">(<pos:position pos:line="67" pos:column="44"/></operator><call pos:line="67" pos:column="44">(<name pos:line="67" pos:column="45">double<pos:position pos:line="67" pos:column="51"/></name>) <argument_list pos:line="67" pos:column="53">(<argument><expr><name pos:line="67" pos:column="54">rrarows<pos:position pos:line="67" pos:column="61"/></name> <operator pos:line="67" pos:column="62">*<pos:position pos:line="67" pos:column="63"/></operator> <name pos:line="67" pos:column="64">ss<pos:position pos:line="67" pos:column="66"/></name></expr></argument>)<pos:position pos:line="67" pos:column="67"/></argument_list></call><operator pos:line="67" pos:column="67">)<pos:position pos:line="67" pos:column="68"/></operator></expr></argument>)<pos:position pos:line="67" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="70"/></expr_stmt></block></else></if>

		<expr_stmt><expr><name pos:line="69" pos:column="17">cdp_num<pos:position pos:line="69" pos:column="24"/></name> <operator pos:line="69" pos:column="25">=<pos:position pos:line="69" pos:column="26"/></operator> <operator pos:line="69" pos:column="27">(<pos:position pos:line="69" pos:column="28"/></operator><name pos:line="69" pos:column="28">int<pos:position pos:line="69" pos:column="31"/></name><operator pos:line="69" pos:column="31">)<pos:position pos:line="69" pos:column="32"/></operator> <call><name pos:line="69" pos:column="33">ceil<pos:position pos:line="69" pos:column="37"/></name> <argument_list pos:line="69" pos:column="38">(<argument><expr><operator pos:line="69" pos:column="39">(<pos:position pos:line="69" pos:column="40"/></operator><operator pos:line="69" pos:column="40">(<pos:position pos:line="69" pos:column="41"/></operator><name pos:line="69" pos:column="41">double<pos:position pos:line="69" pos:column="47"/></name><operator pos:line="69" pos:column="47">)<pos:position pos:line="69" pos:column="48"/></operator> <name pos:line="69" pos:column="49">span<pos:position pos:line="69" pos:column="53"/></name><operator pos:line="69" pos:column="53">)<pos:position pos:line="69" pos:column="54"/></operator>
				<operator pos:line="70" pos:column="33">/<pos:position pos:line="70" pos:column="34"/></operator> <operator pos:line="70" pos:column="35">(<pos:position pos:line="70" pos:column="36"/></operator><call pos:line="70" pos:column="36">(<name pos:line="70" pos:column="37">double<pos:position pos:line="70" pos:column="43"/></name>) <argument_list pos:line="70" pos:column="45">(<argument><expr><name pos:line="70" pos:column="46">cdp_len<pos:position pos:line="70" pos:column="53"/></name> <operator pos:line="70" pos:column="54">*<pos:position pos:line="70" pos:column="55"/></operator> <name pos:line="70" pos:column="56">ss<pos:position pos:line="70" pos:column="58"/></name></expr></argument>)<pos:position pos:line="70" pos:column="59"/></argument_list></call><operator pos:line="70" pos:column="59">)<pos:position pos:line="70" pos:column="60"/></operator></expr></argument>)<pos:position pos:line="70" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="62"/></expr_stmt>

		<for pos:line="72" pos:column="17">for <control pos:line="72" pos:column="21">(<init><expr><name pos:line="72" pos:column="22">j<pos:position pos:line="72" pos:column="23"/></name> <operator pos:line="72" pos:column="24">=<pos:position pos:line="72" pos:column="25"/></operator> <literal type="number" pos:line="72" pos:column="26">0<pos:position pos:line="72" pos:column="27"/></literal></expr>;<pos:position pos:line="72" pos:column="28"/></init> <condition><expr><name pos:line="72" pos:column="29">j<pos:position pos:line="72" pos:column="30"/></name> <operator pos:line="72" pos:column="31">&lt;<pos:position pos:line="72" pos:column="35"/></operator> <name pos:line="72" pos:column="33">rra_types_num<pos:position pos:line="72" pos:column="46"/></name></expr>;<pos:position pos:line="72" pos:column="47"/></condition> <incr><expr><name pos:line="72" pos:column="48">j<pos:position pos:line="72" pos:column="49"/></name><operator pos:line="72" pos:column="49">++<pos:position pos:line="72" pos:column="51"/></operator></expr></incr>)<pos:position pos:line="72" pos:column="52"/></control>
		<block pos:line="73" pos:column="17">{
			<if pos:line="74" pos:column="25">if <condition pos:line="74" pos:column="28">(<expr><name pos:line="74" pos:column="29">rra_num<pos:position pos:line="74" pos:column="36"/></name> <operator pos:line="74" pos:column="37">&gt;=<pos:position pos:line="74" pos:column="42"/></operator> <name pos:line="74" pos:column="40">rra_max<pos:position pos:line="74" pos:column="47"/></name></expr>)<pos:position pos:line="74" pos:column="48"/></condition><then pos:line="74" pos:column="48">
				<block type="pseudo"><break pos:line="75" pos:column="33">break;<pos:position pos:line="75" pos:column="39"/></break></block></then></if>

			<if pos:line="77" pos:column="25">if <condition pos:line="77" pos:column="28">(<expr><call><name pos:line="77" pos:column="29">snprintf<pos:position pos:line="77" pos:column="37"/></name> <argument_list pos:line="77" pos:column="38">(<argument><expr><name pos:line="77" pos:column="39">buffer<pos:position pos:line="77" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="77" pos:column="47">sizeof <argument_list pos:line="77" pos:column="54">(<argument><expr><name pos:line="77" pos:column="55">buffer<pos:position pos:line="77" pos:column="61"/></name></expr></argument>)<pos:position pos:line="77" pos:column="62"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="64">"RRA:%s:%3.1f:%u:%u"<pos:position pos:line="77" pos:column="84"/></literal></expr></argument>,
						<argument><expr><name><name pos:line="78" pos:column="49">rra_types<pos:position pos:line="78" pos:column="58"/></name><index pos:line="78" pos:column="58">[<expr><name pos:line="78" pos:column="59">j<pos:position pos:line="78" pos:column="60"/></name></expr>]<pos:position pos:line="78" pos:column="61"/></index></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="63">xff<pos:position pos:line="78" pos:column="66"/></name></expr></argument>,
						<argument><expr><name pos:line="79" pos:column="49">cdp_len<pos:position pos:line="79" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="58">cdp_num<pos:position pos:line="79" pos:column="65"/></name></expr></argument>)<pos:position pos:line="79" pos:column="66"/></argument_list></call> <operator pos:line="79" pos:column="67">&gt;=<pos:position pos:line="79" pos:column="72"/></operator> <sizeof pos:line="79" pos:column="70">sizeof <argument_list pos:line="79" pos:column="77">(<argument><expr><name pos:line="79" pos:column="78">buffer<pos:position pos:line="79" pos:column="84"/></name></expr></argument>)<pos:position pos:line="79" pos:column="85"/></argument_list></sizeof></expr>)<pos:position pos:line="79" pos:column="86"/></condition><then pos:line="79" pos:column="86">
			<block pos:line="80" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="81" pos:column="33">ERROR<pos:position pos:line="81" pos:column="38"/></name> <argument_list pos:line="81" pos:column="39">(<argument><expr><literal type="string" pos:line="81" pos:column="40">"rra_get: Buffer would have been truncated."<pos:position pos:line="81" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="86"/></expr_stmt>
				<continue pos:line="82" pos:column="33">continue;<pos:position pos:line="82" pos:column="42"/></continue>
			}<pos:position pos:line="83" pos:column="26"/></block></then></if>

			<expr_stmt><expr><name><name pos:line="85" pos:column="25">rra_def<pos:position pos:line="85" pos:column="32"/></name><index pos:line="85" pos:column="32">[<expr><name pos:line="85" pos:column="33">rra_num<pos:position pos:line="85" pos:column="40"/></name><operator pos:line="85" pos:column="40">++<pos:position pos:line="85" pos:column="42"/></operator></expr>]<pos:position pos:line="85" pos:column="43"/></index></name> <operator pos:line="85" pos:column="44">=<pos:position pos:line="85" pos:column="45"/></operator> <call><name pos:line="85" pos:column="46">sstrdup<pos:position pos:line="85" pos:column="53"/></name> <argument_list pos:line="85" pos:column="54">(<argument><expr><name pos:line="85" pos:column="55">buffer<pos:position pos:line="85" pos:column="61"/></name></expr></argument>)<pos:position pos:line="85" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="63"/></expr_stmt>
		}<pos:position pos:line="86" pos:column="18"/></block></for>
	}<pos:position pos:line="87" pos:column="10"/></block></for>

<cpp:if pos:line="89" pos:column="1">#<cpp:directive pos:line="89" pos:column="2">if<pos:position pos:line="89" pos:column="4"/></cpp:directive> <expr><name pos:line="89" pos:column="5">COLLECT_DEBUG<pos:position pos:line="89" pos:column="18"/></name></expr></cpp:if>
	<expr_stmt><expr><call><name pos:line="90" pos:column="9">DEBUG<pos:position pos:line="90" pos:column="14"/></name> <argument_list pos:line="90" pos:column="15">(<argument><expr><literal type="string" pos:line="90" pos:column="16">"rra_num = %i"<pos:position pos:line="90" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="90" pos:column="32">rra_num<pos:position pos:line="90" pos:column="39"/></name></expr></argument>)<pos:position pos:line="90" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="41"/></expr_stmt>
	<for pos:line="91" pos:column="9">for <control pos:line="91" pos:column="13">(<init><expr><name pos:line="91" pos:column="14">i<pos:position pos:line="91" pos:column="15"/></name> <operator pos:line="91" pos:column="16">=<pos:position pos:line="91" pos:column="17"/></operator> <literal type="number" pos:line="91" pos:column="18">0<pos:position pos:line="91" pos:column="19"/></literal></expr>;<pos:position pos:line="91" pos:column="20"/></init> <condition><expr><name pos:line="91" pos:column="21">i<pos:position pos:line="91" pos:column="22"/></name> <operator pos:line="91" pos:column="23">&lt;<pos:position pos:line="91" pos:column="27"/></operator> <name pos:line="91" pos:column="25">rra_num<pos:position pos:line="91" pos:column="32"/></name></expr>;<pos:position pos:line="91" pos:column="33"/></condition> <incr><expr><name pos:line="91" pos:column="34">i<pos:position pos:line="91" pos:column="35"/></name><operator pos:line="91" pos:column="35">++<pos:position pos:line="91" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="91" pos:column="38"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="92" pos:column="17">DEBUG<pos:position pos:line="92" pos:column="22"/></name> <argument_list pos:line="92" pos:column="23">(<argument><expr><literal type="string" pos:line="92" pos:column="24">"  %s"<pos:position pos:line="92" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="92" pos:column="32">rra_def<pos:position pos:line="92" pos:column="39"/></name><index pos:line="92" pos:column="39">[<expr><name pos:line="92" pos:column="40">i<pos:position pos:line="92" pos:column="41"/></name></expr>]<pos:position pos:line="92" pos:column="42"/></index></name></expr></argument>)<pos:position pos:line="92" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="44"/></expr_stmt></block></for>
<cpp:endif pos:line="93" pos:column="1">#<cpp:directive pos:line="93" pos:column="2">endif<pos:position pos:line="93" pos:column="7"/></cpp:directive></cpp:endif>

	<expr_stmt><expr><operator pos:line="95" pos:column="9">*<pos:position pos:line="95" pos:column="10"/></operator><name pos:line="95" pos:column="10">ret<pos:position pos:line="95" pos:column="13"/></name> <operator pos:line="95" pos:column="14">=<pos:position pos:line="95" pos:column="15"/></operator> <name pos:line="95" pos:column="16">rra_def<pos:position pos:line="95" pos:column="23"/></name></expr>;<pos:position pos:line="95" pos:column="24"/></expr_stmt>
	<return pos:line="96" pos:column="9">return <expr><operator pos:line="96" pos:column="16">(<pos:position pos:line="96" pos:column="17"/></operator><name pos:line="96" pos:column="17">rra_num<pos:position pos:line="96" pos:column="24"/></name><operator pos:line="96" pos:column="24">)<pos:position pos:line="96" pos:column="25"/></operator></expr>;<pos:position pos:line="96" pos:column="26"/></return>
}<pos:position pos:line="97" pos:column="2"/></block></function></unit>

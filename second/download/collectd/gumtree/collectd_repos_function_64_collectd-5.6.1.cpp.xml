<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_64_collectd-5.6.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">lt_dlhandle_map<pos:position pos:line="2" pos:column="16"/></name> <parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name pos:line="2" pos:column="18">lt_dlinterface_id<pos:position pos:line="2" pos:column="35"/></name></type> <name pos:line="2" pos:column="36">iface<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>,
		 <parameter><function_decl><type><name pos:line="3" pos:column="18">int<pos:position pos:line="3" pos:column="21"/></name></type> (<modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier><name pos:line="3" pos:column="24">func<pos:position pos:line="3" pos:column="28"/></name>) <parameter_list pos:line="3" pos:column="30">(<parameter><decl><type><name pos:line="3" pos:column="31">lt_dlhandle<pos:position pos:line="3" pos:column="42"/></name></type> <name pos:line="3" pos:column="43">handle<pos:position pos:line="3" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="51">void<pos:position pos:line="3" pos:column="55"/></name> <modifier pos:line="3" pos:column="56">*<pos:position pos:line="3" pos:column="57"/></modifier></type><name pos:line="3" pos:column="57">data<pos:position pos:line="3" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="62"/></parameter_list></function_decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="64">void<pos:position pos:line="3" pos:column="68"/></name> <modifier pos:line="3" pos:column="69">*<pos:position pos:line="3" pos:column="70"/></modifier></type><name pos:line="3" pos:column="70">data<pos:position pos:line="3" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="75"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">lt__interface_id<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">iterator<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><operator pos:line="5" pos:column="32">(<pos:position pos:line="5" pos:column="33"/></operator><name pos:line="5" pos:column="33">lt__interface_id<pos:position pos:line="5" pos:column="49"/></name> <operator pos:line="5" pos:column="50">*<pos:position pos:line="5" pos:column="51"/></operator><operator pos:line="5" pos:column="51">)<pos:position pos:line="5" pos:column="52"/></operator> <name pos:line="5" pos:column="53">iface<pos:position pos:line="5" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="59"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">lt_dlhandle<pos:position pos:line="6" pos:column="14"/></name></type> <name pos:line="6" pos:column="15">cur<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name pos:line="6" pos:column="21">handles<pos:position pos:line="6" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">assert<pos:position pos:line="8" pos:column="9"/></name> <argument_list pos:line="8" pos:column="10">(<argument><expr><name pos:line="8" pos:column="11">iface<pos:position pos:line="8" pos:column="16"/></name></expr></argument>)<pos:position pos:line="8" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="18"/></expr_stmt> <comment type="block" pos:line="8" pos:column="19">/* iface is a required argument */</comment>

  <while pos:line="10" pos:column="3">while <condition pos:line="10" pos:column="9">(<expr><name pos:line="10" pos:column="10">cur<pos:position pos:line="10" pos:column="13"/></name></expr>)<pos:position pos:line="10" pos:column="14"/></condition>
    <block pos:line="11" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="12" pos:column="7">int<pos:position pos:line="12" pos:column="10"/></name></type> <name pos:line="12" pos:column="11">errorcode<pos:position pos:line="12" pos:column="20"/></name> <init pos:line="12" pos:column="21">= <expr><literal type="number" pos:line="12" pos:column="23">0<pos:position pos:line="12" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="25"/></decl_stmt>

      <comment type="block" pos:line="14" pos:column="7">/* advance while the interface check fails */</comment>
      <while pos:line="15" pos:column="7">while <condition pos:line="15" pos:column="13">(<expr><name pos:line="15" pos:column="14">cur<pos:position pos:line="15" pos:column="17"/></name> <operator pos:line="15" pos:column="18">&amp;&amp;<pos:position pos:line="15" pos:column="28"/></operator> <name><name pos:line="15" pos:column="21">iterator<pos:position pos:line="15" pos:column="29"/></name><operator pos:line="15" pos:column="29">-&gt;<pos:position pos:line="15" pos:column="34"/></operator><name pos:line="15" pos:column="31">iface<pos:position pos:line="15" pos:column="36"/></name></name>
	     <operator pos:line="16" pos:column="14">&amp;&amp;<pos:position pos:line="16" pos:column="24"/></operator> <operator pos:line="16" pos:column="17">(<pos:position pos:line="16" pos:column="18"/></operator><call pos:line="16" pos:column="18">(<modifier pos:line="16" pos:column="19">*<pos:position pos:line="16" pos:column="20"/></modifier><name><name pos:line="16" pos:column="20">iterator<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">-&gt;<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="30">iface<pos:position pos:line="16" pos:column="35"/></name></name>) <argument_list pos:line="16" pos:column="37">(<argument><expr><name pos:line="16" pos:column="38">cur<pos:position pos:line="16" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="43">iterator<pos:position pos:line="16" pos:column="51"/></name><operator pos:line="16" pos:column="51">-&gt;<pos:position pos:line="16" pos:column="56"/></operator><name pos:line="16" pos:column="53">id_string<pos:position pos:line="16" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="63"/></argument_list></call> <operator pos:line="16" pos:column="64">!=<pos:position pos:line="16" pos:column="66"/></operator> <literal type="number" pos:line="16" pos:column="67">0<pos:position pos:line="16" pos:column="68"/></literal><operator pos:line="16" pos:column="68">)<pos:position pos:line="16" pos:column="69"/></operator></expr>)<pos:position pos:line="16" pos:column="70"/></condition>
	<block pos:line="17" pos:column="9">{
	  <expr_stmt><expr><name pos:line="18" pos:column="11">cur<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">=<pos:position pos:line="18" pos:column="16"/></operator> <name><name pos:line="18" pos:column="17">cur<pos:position pos:line="18" pos:column="20"/></name><operator pos:line="18" pos:column="20">-&gt;<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="22">next<pos:position pos:line="18" pos:column="26"/></name></name></expr>;<pos:position pos:line="18" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="19" pos:column="10"/></block></while>

      <if pos:line="21" pos:column="7">if <condition pos:line="21" pos:column="10">(<expr><operator pos:line="21" pos:column="11">(<pos:position pos:line="21" pos:column="12"/></operator><name pos:line="21" pos:column="12">errorcode<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">=<pos:position pos:line="21" pos:column="23"/></operator> <call pos:line="21" pos:column="24">(<modifier pos:line="21" pos:column="25">*<pos:position pos:line="21" pos:column="26"/></modifier><name pos:line="21" pos:column="26">func<pos:position pos:line="21" pos:column="30"/></name>) <argument_list pos:line="21" pos:column="32">(<argument><expr><name pos:line="21" pos:column="33">cur<pos:position pos:line="21" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="38">data<pos:position pos:line="21" pos:column="42"/></name></expr></argument>)<pos:position pos:line="21" pos:column="43"/></argument_list></call><operator pos:line="21" pos:column="43">)<pos:position pos:line="21" pos:column="44"/></operator> <operator pos:line="21" pos:column="45">!=<pos:position pos:line="21" pos:column="47"/></operator> <literal type="number" pos:line="21" pos:column="48">0<pos:position pos:line="21" pos:column="49"/></literal></expr>)<pos:position pos:line="21" pos:column="50"/></condition><then pos:line="21" pos:column="50">
	<block type="pseudo"><return pos:line="22" pos:column="9">return <expr><name pos:line="22" pos:column="16">errorcode<pos:position pos:line="22" pos:column="25"/></name></expr>;<pos:position pos:line="22" pos:column="26"/></return></block></then></if>
    }<pos:position pos:line="23" pos:column="6"/></block></while>

  <return pos:line="25" pos:column="3">return <expr><literal type="number" pos:line="25" pos:column="10">0<pos:position pos:line="25" pos:column="11"/></literal></expr>;<pos:position pos:line="25" pos:column="12"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

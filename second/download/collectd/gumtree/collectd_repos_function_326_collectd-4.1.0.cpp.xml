<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_326_collectd-4.1.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">sl_config<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">key<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="40">const<pos:position pos:line="1" pos:column="45"/></specifier> <name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">value<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><call><name pos:line="3" pos:column="13">strcasecmp<pos:position pos:line="3" pos:column="23"/></name> <argument_list pos:line="3" pos:column="24">(<argument><expr><name pos:line="3" pos:column="25">key<pos:position pos:line="3" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="30">"LogLevel"<pos:position pos:line="3" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="41"/></argument_list></call> <operator pos:line="3" pos:column="42">==<pos:position pos:line="3" pos:column="44"/></operator> <literal type="number" pos:line="3" pos:column="45">0<pos:position pos:line="3" pos:column="46"/></literal></expr>)<pos:position pos:line="3" pos:column="47"/></condition><then pos:line="3" pos:column="47">
	<block pos:line="4" pos:column="9">{
		<if pos:line="5" pos:column="17">if <condition pos:line="5" pos:column="20">(<expr><operator pos:line="5" pos:column="21">(<pos:position pos:line="5" pos:column="22"/></operator><call><name pos:line="5" pos:column="22">strcasecmp<pos:position pos:line="5" pos:column="32"/></name> <argument_list pos:line="5" pos:column="33">(<argument><expr><name pos:line="5" pos:column="34">value<pos:position pos:line="5" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="41">"emerg"<pos:position pos:line="5" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="49"/></argument_list></call> <operator pos:line="5" pos:column="50">==<pos:position pos:line="5" pos:column="52"/></operator> <literal type="number" pos:line="5" pos:column="53">0<pos:position pos:line="5" pos:column="54"/></literal><operator pos:line="5" pos:column="54">)<pos:position pos:line="5" pos:column="55"/></operator>
				<operator pos:line="6" pos:column="33">||<pos:position pos:line="6" pos:column="35"/></operator> <operator pos:line="6" pos:column="36">(<pos:position pos:line="6" pos:column="37"/></operator><call><name pos:line="6" pos:column="37">strcasecmp<pos:position pos:line="6" pos:column="47"/></name> <argument_list pos:line="6" pos:column="48">(<argument><expr><name pos:line="6" pos:column="49">value<pos:position pos:line="6" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="56">"alert"<pos:position pos:line="6" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="64"/></argument_list></call> <operator pos:line="6" pos:column="65">==<pos:position pos:line="6" pos:column="67"/></operator> <literal type="number" pos:line="6" pos:column="68">0<pos:position pos:line="6" pos:column="69"/></literal><operator pos:line="6" pos:column="69">)<pos:position pos:line="6" pos:column="70"/></operator>
				<operator pos:line="7" pos:column="33">||<pos:position pos:line="7" pos:column="35"/></operator> <operator pos:line="7" pos:column="36">(<pos:position pos:line="7" pos:column="37"/></operator><call><name pos:line="7" pos:column="37">strcasecmp<pos:position pos:line="7" pos:column="47"/></name> <argument_list pos:line="7" pos:column="48">(<argument><expr><name pos:line="7" pos:column="49">value<pos:position pos:line="7" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="56">"crit"<pos:position pos:line="7" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="63"/></argument_list></call> <operator pos:line="7" pos:column="64">==<pos:position pos:line="7" pos:column="66"/></operator> <literal type="number" pos:line="7" pos:column="67">0<pos:position pos:line="7" pos:column="68"/></literal><operator pos:line="7" pos:column="68">)<pos:position pos:line="7" pos:column="69"/></operator>
				<operator pos:line="8" pos:column="33">||<pos:position pos:line="8" pos:column="35"/></operator> <operator pos:line="8" pos:column="36">(<pos:position pos:line="8" pos:column="37"/></operator><call><name pos:line="8" pos:column="37">strcasecmp<pos:position pos:line="8" pos:column="47"/></name> <argument_list pos:line="8" pos:column="48">(<argument><expr><name pos:line="8" pos:column="49">value<pos:position pos:line="8" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="56">"err"<pos:position pos:line="8" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="62"/></argument_list></call> <operator pos:line="8" pos:column="63">==<pos:position pos:line="8" pos:column="65"/></operator> <literal type="number" pos:line="8" pos:column="66">0<pos:position pos:line="8" pos:column="67"/></literal><operator pos:line="8" pos:column="67">)<pos:position pos:line="8" pos:column="68"/></operator></expr>)<pos:position pos:line="8" pos:column="69"/></condition><then pos:line="8" pos:column="69">
			<block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="25">log_level<pos:position pos:line="9" pos:column="34"/></name> <operator pos:line="9" pos:column="35">=<pos:position pos:line="9" pos:column="36"/></operator> <name pos:line="9" pos:column="37">LOG_ERR<pos:position pos:line="9" pos:column="44"/></name></expr>;<pos:position pos:line="9" pos:column="45"/></expr_stmt></block></then>
		<elseif pos:line="10" pos:column="17">else <if pos:line="10" pos:column="22">if <condition pos:line="10" pos:column="25">(<expr><call><name pos:line="10" pos:column="26">strcasecmp<pos:position pos:line="10" pos:column="36"/></name> <argument_list pos:line="10" pos:column="37">(<argument><expr><name pos:line="10" pos:column="38">value<pos:position pos:line="10" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="45">"warning"<pos:position pos:line="10" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="55"/></argument_list></call> <operator pos:line="10" pos:column="56">==<pos:position pos:line="10" pos:column="58"/></operator> <literal type="number" pos:line="10" pos:column="59">0<pos:position pos:line="10" pos:column="60"/></literal></expr>)<pos:position pos:line="10" pos:column="61"/></condition><then pos:line="10" pos:column="61">
			<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="25">log_level<pos:position pos:line="11" pos:column="34"/></name> <operator pos:line="11" pos:column="35">=<pos:position pos:line="11" pos:column="36"/></operator> <name pos:line="11" pos:column="37">LOG_WARNING<pos:position pos:line="11" pos:column="48"/></name></expr>;<pos:position pos:line="11" pos:column="49"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="12" pos:column="17">else <if pos:line="12" pos:column="22">if <condition pos:line="12" pos:column="25">(<expr><call><name pos:line="12" pos:column="26">strcasecmp<pos:position pos:line="12" pos:column="36"/></name> <argument_list pos:line="12" pos:column="37">(<argument><expr><name pos:line="12" pos:column="38">value<pos:position pos:line="12" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="45">"notice"<pos:position pos:line="12" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></call> <operator pos:line="12" pos:column="55">==<pos:position pos:line="12" pos:column="57"/></operator> <literal type="number" pos:line="12" pos:column="58">0<pos:position pos:line="12" pos:column="59"/></literal></expr>)<pos:position pos:line="12" pos:column="60"/></condition><then pos:line="12" pos:column="60">
			<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="25">log_level<pos:position pos:line="13" pos:column="34"/></name> <operator pos:line="13" pos:column="35">=<pos:position pos:line="13" pos:column="36"/></operator> <name pos:line="13" pos:column="37">LOG_NOTICE<pos:position pos:line="13" pos:column="47"/></name></expr>;<pos:position pos:line="13" pos:column="48"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="14" pos:column="17">else <if pos:line="14" pos:column="22">if <condition pos:line="14" pos:column="25">(<expr><call><name pos:line="14" pos:column="26">strcasecmp<pos:position pos:line="14" pos:column="36"/></name> <argument_list pos:line="14" pos:column="37">(<argument><expr><name pos:line="14" pos:column="38">value<pos:position pos:line="14" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="45">"info"<pos:position pos:line="14" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="52"/></argument_list></call> <operator pos:line="14" pos:column="53">==<pos:position pos:line="14" pos:column="55"/></operator> <literal type="number" pos:line="14" pos:column="56">0<pos:position pos:line="14" pos:column="57"/></literal></expr>)<pos:position pos:line="14" pos:column="58"/></condition><then pos:line="14" pos:column="58">
			<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="25">log_level<pos:position pos:line="15" pos:column="34"/></name> <operator pos:line="15" pos:column="35">=<pos:position pos:line="15" pos:column="36"/></operator> <name pos:line="15" pos:column="37">LOG_INFO<pos:position pos:line="15" pos:column="45"/></name></expr>;<pos:position pos:line="15" pos:column="46"/></expr_stmt></block></then></if></elseif>
<cpp:if pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">if<pos:position pos:line="16" pos:column="4"/></cpp:directive> <expr><name pos:line="16" pos:column="5">COLLECT_DEBUG<pos:position pos:line="16" pos:column="18"/></name></expr></cpp:if>
		<elseif pos:line="17" pos:column="17">else <if pos:line="17" pos:column="22">if <condition pos:line="17" pos:column="25">(<expr><call><name pos:line="17" pos:column="26">strcasecmp<pos:position pos:line="17" pos:column="36"/></name> <argument_list pos:line="17" pos:column="37">(<argument><expr><name pos:line="17" pos:column="38">value<pos:position pos:line="17" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="45">"debug"<pos:position pos:line="17" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></call> <operator pos:line="17" pos:column="54">==<pos:position pos:line="17" pos:column="56"/></operator> <literal type="number" pos:line="17" pos:column="57">0<pos:position pos:line="17" pos:column="58"/></literal></expr>)<pos:position pos:line="17" pos:column="59"/></condition><then pos:line="17" pos:column="59">
			<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="25">log_level<pos:position pos:line="18" pos:column="34"/></name> <operator pos:line="18" pos:column="35">=<pos:position pos:line="18" pos:column="36"/></operator> <name pos:line="18" pos:column="37">LOG_DEBUG<pos:position pos:line="18" pos:column="46"/></name></expr>;<pos:position pos:line="18" pos:column="47"/></expr_stmt></block></then></if></elseif>
<cpp:endif pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">endif<pos:position pos:line="19" pos:column="7"/></cpp:directive></cpp:endif>
		<else pos:line="20" pos:column="17">else
			<block type="pseudo"><return pos:line="21" pos:column="25">return <expr><operator pos:line="21" pos:column="32">(<pos:position pos:line="21" pos:column="33"/></operator><literal type="number" pos:line="21" pos:column="33">1<pos:position pos:line="21" pos:column="34"/></literal><operator pos:line="21" pos:column="34">)<pos:position pos:line="21" pos:column="35"/></operator></expr>;<pos:position pos:line="21" pos:column="36"/></return></block></else></if>
	}<pos:position pos:line="22" pos:column="10"/></block></then>
	<else pos:line="23" pos:column="9">else
		<block type="pseudo"><return pos:line="24" pos:column="17">return <expr><operator pos:line="24" pos:column="24">(<pos:position pos:line="24" pos:column="25"/></operator><operator pos:line="24" pos:column="25">-<pos:position pos:line="24" pos:column="26"/></operator><literal type="number" pos:line="24" pos:column="26">1<pos:position pos:line="24" pos:column="27"/></literal><operator pos:line="24" pos:column="27">)<pos:position pos:line="24" pos:column="28"/></operator></expr>;<pos:position pos:line="24" pos:column="29"/></return></block></else></if>

	<return pos:line="26" pos:column="9">return <expr><operator pos:line="26" pos:column="16">(<pos:position pos:line="26" pos:column="17"/></operator><literal type="number" pos:line="26" pos:column="17">0<pos:position pos:line="26" pos:column="18"/></literal><operator pos:line="26" pos:column="18">)<pos:position pos:line="26" pos:column="19"/></operator></expr>;<pos:position pos:line="26" pos:column="20"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

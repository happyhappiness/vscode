<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_585_collectd-5.7.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">cmd_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">cmd_parsev<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">size_t<pos:position pos:line="1" pos:column="31"/></name></type> <name pos:line="1" pos:column="32">argc<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier><modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">argv<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">cmd_t<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">ret_cmd<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
                        <parameter><decl><type><specifier pos:line="2" pos:column="25">const<pos:position pos:line="2" pos:column="30"/></specifier> <name pos:line="2" pos:column="31">cmd_options_t<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">opts<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="52">cmd_error_handler_t<pos:position pos:line="2" pos:column="71"/></name> <modifier pos:line="2" pos:column="72">*<pos:position pos:line="2" pos:column="73"/></modifier></type><name pos:line="2" pos:column="73">err<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="77"/></parameter_list> <block pos:line="2" pos:column="78">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">command<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><name pos:line="3" pos:column="19">NULL<pos:position pos:line="3" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">cmd_status_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">status<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><operator pos:line="6" pos:column="7">(<pos:position pos:line="6" pos:column="8"/></operator><name pos:line="6" pos:column="8">argc<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">&lt;<pos:position pos:line="6" pos:column="17"/></operator> <literal type="number" pos:line="6" pos:column="15">1<pos:position pos:line="6" pos:column="16"/></literal><operator pos:line="6" pos:column="16">)<pos:position pos:line="6" pos:column="17"/></operator> <operator pos:line="6" pos:column="18">||<pos:position pos:line="6" pos:column="20"/></operator> <operator pos:line="6" pos:column="21">(<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="22">argv<pos:position pos:line="6" pos:column="26"/></name> <operator pos:line="6" pos:column="27">==<pos:position pos:line="6" pos:column="29"/></operator> <name pos:line="6" pos:column="30">NULL<pos:position pos:line="6" pos:column="34"/></name><operator pos:line="6" pos:column="34">)<pos:position pos:line="6" pos:column="35"/></operator> <operator pos:line="6" pos:column="36">||<pos:position pos:line="6" pos:column="38"/></operator> <operator pos:line="6" pos:column="39">(<pos:position pos:line="6" pos:column="40"/></operator><name pos:line="6" pos:column="40">ret_cmd<pos:position pos:line="6" pos:column="47"/></name> <operator pos:line="6" pos:column="48">==<pos:position pos:line="6" pos:column="50"/></operator> <name pos:line="6" pos:column="51">NULL<pos:position pos:line="6" pos:column="55"/></name><operator pos:line="6" pos:column="55">)<pos:position pos:line="6" pos:column="56"/></operator></expr>)<pos:position pos:line="6" pos:column="57"/></condition><then pos:line="6" pos:column="57"> <block pos:line="6" pos:column="58">{
    <expr_stmt><expr><name pos:line="7" pos:column="5">errno<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">=<pos:position pos:line="7" pos:column="12"/></operator> <name pos:line="7" pos:column="13">EINVAL<pos:position pos:line="7" pos:column="19"/></name></expr>;<pos:position pos:line="7" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">cmd_error<pos:position pos:line="8" pos:column="14"/></name><argument_list pos:line="8" pos:column="14">(<argument><expr><name pos:line="8" pos:column="15">CMD_ERROR<pos:position pos:line="8" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="26">err<pos:position pos:line="8" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="31">"Missing command."<pos:position pos:line="8" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="51"/></expr_stmt>
    <return pos:line="9" pos:column="5">return <expr><name pos:line="9" pos:column="12">CMD_ERROR<pos:position pos:line="9" pos:column="21"/></name></expr>;<pos:position pos:line="9" pos:column="22"/></return>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">opts<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">==<pos:position pos:line="12" pos:column="14"/></operator> <name pos:line="12" pos:column="15">NULL<pos:position pos:line="12" pos:column="19"/></name></expr>)<pos:position pos:line="12" pos:column="20"/></condition><then pos:line="12" pos:column="20">
    <block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="5">opts<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">=<pos:position pos:line="13" pos:column="11"/></operator> <operator pos:line="13" pos:column="12">&amp;<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="13">default_options<pos:position pos:line="13" pos:column="28"/></name></expr>;<pos:position pos:line="13" pos:column="29"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">memset<pos:position pos:line="15" pos:column="9"/></name><argument_list pos:line="15" pos:column="9">(<argument><expr><name pos:line="15" pos:column="10">ret_cmd<pos:position pos:line="15" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="19">0<pos:position pos:line="15" pos:column="20"/></literal></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="22">sizeof<argument_list pos:line="15" pos:column="28">(<argument><expr><operator pos:line="15" pos:column="29">*<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="30">ret_cmd<pos:position pos:line="15" pos:column="37"/></name></expr></argument>)<pos:position pos:line="15" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><name pos:line="16" pos:column="3">command<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <name><name pos:line="16" pos:column="13">argv<pos:position pos:line="16" pos:column="17"/></name><index pos:line="16" pos:column="17">[<expr><literal type="number" pos:line="16" pos:column="18">0<pos:position pos:line="16" pos:column="19"/></literal></expr>]<pos:position pos:line="16" pos:column="20"/></index></name></expr>;<pos:position pos:line="16" pos:column="21"/></expr_stmt>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><call><name pos:line="17" pos:column="7">strcasecmp<pos:position pos:line="17" pos:column="17"/></name><argument_list pos:line="17" pos:column="17">(<argument><expr><literal type="string" pos:line="17" pos:column="18">"FLUSH"<pos:position pos:line="17" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="27">command<pos:position pos:line="17" pos:column="34"/></name></expr></argument>)<pos:position pos:line="17" pos:column="35"/></argument_list></call> <operator pos:line="17" pos:column="36">==<pos:position pos:line="17" pos:column="38"/></operator> <literal type="number" pos:line="17" pos:column="39">0<pos:position pos:line="17" pos:column="40"/></literal></expr>)<pos:position pos:line="17" pos:column="41"/></condition><then pos:line="17" pos:column="41"> <block pos:line="17" pos:column="42">{
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">ret_cmd<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">-&gt;<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="14">type<pos:position pos:line="18" pos:column="18"/></name></name> <operator pos:line="18" pos:column="19">=<pos:position pos:line="18" pos:column="20"/></operator> <name pos:line="18" pos:column="21">CMD_FLUSH<pos:position pos:line="18" pos:column="30"/></name></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">status<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator>
        <call><name pos:line="20" pos:column="9">cmd_parse_flush<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><name pos:line="20" pos:column="25">argc<pos:position pos:line="20" pos:column="29"/></name> <operator pos:line="20" pos:column="30">-<pos:position pos:line="20" pos:column="31"/></operator> <literal type="number" pos:line="20" pos:column="32">1<pos:position pos:line="20" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="35">argv<pos:position pos:line="20" pos:column="39"/></name> <operator pos:line="20" pos:column="40">+<pos:position pos:line="20" pos:column="41"/></operator> <literal type="number" pos:line="20" pos:column="42">1<pos:position pos:line="20" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="20" pos:column="45">&amp;<pos:position pos:line="20" pos:column="50"/></operator><name><name pos:line="20" pos:column="46">ret_cmd<pos:position pos:line="20" pos:column="53"/></name><operator pos:line="20" pos:column="53">-&gt;<pos:position pos:line="20" pos:column="58"/></operator><name pos:line="20" pos:column="55">cmd<pos:position pos:line="20" pos:column="58"/></name><operator pos:line="20" pos:column="58">.<pos:position pos:line="20" pos:column="59"/></operator><name pos:line="20" pos:column="59">flush<pos:position pos:line="20" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="66">opts<pos:position pos:line="20" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="72">err<pos:position pos:line="20" pos:column="75"/></name></expr></argument>)<pos:position pos:line="20" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="77"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></then> <elseif pos:line="21" pos:column="5">else <if pos:line="21" pos:column="10">if <condition pos:line="21" pos:column="13">(<expr><call><name pos:line="21" pos:column="14">strcasecmp<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><literal type="string" pos:line="21" pos:column="25">"GETVAL"<pos:position pos:line="21" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="35">command<pos:position pos:line="21" pos:column="42"/></name></expr></argument>)<pos:position pos:line="21" pos:column="43"/></argument_list></call> <operator pos:line="21" pos:column="44">==<pos:position pos:line="21" pos:column="46"/></operator> <literal type="number" pos:line="21" pos:column="47">0<pos:position pos:line="21" pos:column="48"/></literal></expr>)<pos:position pos:line="21" pos:column="49"/></condition><then pos:line="21" pos:column="49"> <block pos:line="21" pos:column="50">{
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">ret_cmd<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">-&gt;<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="14">type<pos:position pos:line="22" pos:column="18"/></name></name> <operator pos:line="22" pos:column="19">=<pos:position pos:line="22" pos:column="20"/></operator> <name pos:line="22" pos:column="21">CMD_GETVAL<pos:position pos:line="22" pos:column="31"/></name></expr>;<pos:position pos:line="22" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="23" pos:column="5">status<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator>
        <call><name pos:line="24" pos:column="9">cmd_parse_getval<pos:position pos:line="24" pos:column="25"/></name><argument_list pos:line="24" pos:column="25">(<argument><expr><name pos:line="24" pos:column="26">argc<pos:position pos:line="24" pos:column="30"/></name> <operator pos:line="24" pos:column="31">-<pos:position pos:line="24" pos:column="32"/></operator> <literal type="number" pos:line="24" pos:column="33">1<pos:position pos:line="24" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="36">argv<pos:position pos:line="24" pos:column="40"/></name> <operator pos:line="24" pos:column="41">+<pos:position pos:line="24" pos:column="42"/></operator> <literal type="number" pos:line="24" pos:column="43">1<pos:position pos:line="24" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="24" pos:column="46">&amp;<pos:position pos:line="24" pos:column="51"/></operator><name><name pos:line="24" pos:column="47">ret_cmd<pos:position pos:line="24" pos:column="54"/></name><operator pos:line="24" pos:column="54">-&gt;<pos:position pos:line="24" pos:column="59"/></operator><name pos:line="24" pos:column="56">cmd<pos:position pos:line="24" pos:column="59"/></name><operator pos:line="24" pos:column="59">.<pos:position pos:line="24" pos:column="60"/></operator><name pos:line="24" pos:column="60">getval<pos:position pos:line="24" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="68">opts<pos:position pos:line="24" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="74">err<pos:position pos:line="24" pos:column="77"/></name></expr></argument>)<pos:position pos:line="24" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="79"/></expr_stmt>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if></elseif> <elseif pos:line="25" pos:column="5">else <if pos:line="25" pos:column="10">if <condition pos:line="25" pos:column="13">(<expr><call><name pos:line="25" pos:column="14">strcasecmp<pos:position pos:line="25" pos:column="24"/></name><argument_list pos:line="25" pos:column="24">(<argument><expr><literal type="string" pos:line="25" pos:column="25">"LISTVAL"<pos:position pos:line="25" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="36">command<pos:position pos:line="25" pos:column="43"/></name></expr></argument>)<pos:position pos:line="25" pos:column="44"/></argument_list></call> <operator pos:line="25" pos:column="45">==<pos:position pos:line="25" pos:column="47"/></operator> <literal type="number" pos:line="25" pos:column="48">0<pos:position pos:line="25" pos:column="49"/></literal></expr>)<pos:position pos:line="25" pos:column="50"/></condition><then pos:line="25" pos:column="50"> <block pos:line="25" pos:column="51">{
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">ret_cmd<pos:position pos:line="26" pos:column="12"/></name><operator pos:line="26" pos:column="12">-&gt;<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="14">type<pos:position pos:line="26" pos:column="18"/></name></name> <operator pos:line="26" pos:column="19">=<pos:position pos:line="26" pos:column="20"/></operator> <name pos:line="26" pos:column="21">CMD_LISTVAL<pos:position pos:line="26" pos:column="32"/></name></expr>;<pos:position pos:line="26" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name pos:line="27" pos:column="5">status<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator>
        <call><name pos:line="28" pos:column="9">cmd_parse_listval<pos:position pos:line="28" pos:column="26"/></name><argument_list pos:line="28" pos:column="26">(<argument><expr><name pos:line="28" pos:column="27">argc<pos:position pos:line="28" pos:column="31"/></name> <operator pos:line="28" pos:column="32">-<pos:position pos:line="28" pos:column="33"/></operator> <literal type="number" pos:line="28" pos:column="34">1<pos:position pos:line="28" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="37">argv<pos:position pos:line="28" pos:column="41"/></name> <operator pos:line="28" pos:column="42">+<pos:position pos:line="28" pos:column="43"/></operator> <literal type="number" pos:line="28" pos:column="44">1<pos:position pos:line="28" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="28" pos:column="47">&amp;<pos:position pos:line="28" pos:column="52"/></operator><name><name pos:line="28" pos:column="48">ret_cmd<pos:position pos:line="28" pos:column="55"/></name><operator pos:line="28" pos:column="55">-&gt;<pos:position pos:line="28" pos:column="60"/></operator><name pos:line="28" pos:column="57">cmd<pos:position pos:line="28" pos:column="60"/></name><operator pos:line="28" pos:column="60">.<pos:position pos:line="28" pos:column="61"/></operator><name pos:line="28" pos:column="61">listval<pos:position pos:line="28" pos:column="68"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="70">opts<pos:position pos:line="28" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="76">err<pos:position pos:line="28" pos:column="79"/></name></expr></argument>)<pos:position pos:line="28" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="81"/></expr_stmt>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if></elseif> <elseif pos:line="29" pos:column="5">else <if pos:line="29" pos:column="10">if <condition pos:line="29" pos:column="13">(<expr><call><name pos:line="29" pos:column="14">strcasecmp<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">(<argument><expr><literal type="string" pos:line="29" pos:column="25">"PUTVAL"<pos:position pos:line="29" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="35">command<pos:position pos:line="29" pos:column="42"/></name></expr></argument>)<pos:position pos:line="29" pos:column="43"/></argument_list></call> <operator pos:line="29" pos:column="44">==<pos:position pos:line="29" pos:column="46"/></operator> <literal type="number" pos:line="29" pos:column="47">0<pos:position pos:line="29" pos:column="48"/></literal></expr>)<pos:position pos:line="29" pos:column="49"/></condition><then pos:line="29" pos:column="49"> <block pos:line="29" pos:column="50">{
    <expr_stmt><expr><name><name pos:line="30" pos:column="5">ret_cmd<pos:position pos:line="30" pos:column="12"/></name><operator pos:line="30" pos:column="12">-&gt;<pos:position pos:line="30" pos:column="17"/></operator><name pos:line="30" pos:column="14">type<pos:position pos:line="30" pos:column="18"/></name></name> <operator pos:line="30" pos:column="19">=<pos:position pos:line="30" pos:column="20"/></operator> <name pos:line="30" pos:column="21">CMD_PUTVAL<pos:position pos:line="30" pos:column="31"/></name></expr>;<pos:position pos:line="30" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="31" pos:column="5">status<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">=<pos:position pos:line="31" pos:column="13"/></operator>
        <call><name pos:line="32" pos:column="9">cmd_parse_putval<pos:position pos:line="32" pos:column="25"/></name><argument_list pos:line="32" pos:column="25">(<argument><expr><name pos:line="32" pos:column="26">argc<pos:position pos:line="32" pos:column="30"/></name> <operator pos:line="32" pos:column="31">-<pos:position pos:line="32" pos:column="32"/></operator> <literal type="number" pos:line="32" pos:column="33">1<pos:position pos:line="32" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="36">argv<pos:position pos:line="32" pos:column="40"/></name> <operator pos:line="32" pos:column="41">+<pos:position pos:line="32" pos:column="42"/></operator> <literal type="number" pos:line="32" pos:column="43">1<pos:position pos:line="32" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="32" pos:column="46">&amp;<pos:position pos:line="32" pos:column="51"/></operator><name><name pos:line="32" pos:column="47">ret_cmd<pos:position pos:line="32" pos:column="54"/></name><operator pos:line="32" pos:column="54">-&gt;<pos:position pos:line="32" pos:column="59"/></operator><name pos:line="32" pos:column="56">cmd<pos:position pos:line="32" pos:column="59"/></name><operator pos:line="32" pos:column="59">.<pos:position pos:line="32" pos:column="60"/></operator><name pos:line="32" pos:column="60">putval<pos:position pos:line="32" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="68">opts<pos:position pos:line="32" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="74">err<pos:position pos:line="32" pos:column="77"/></name></expr></argument>)<pos:position pos:line="32" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="79"/></expr_stmt>
  }<pos:position pos:line="33" pos:column="4"/></block></then></if></elseif> <else pos:line="33" pos:column="5">else <block pos:line="33" pos:column="10">{
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">ret_cmd<pos:position pos:line="34" pos:column="12"/></name><operator pos:line="34" pos:column="12">-&gt;<pos:position pos:line="34" pos:column="17"/></operator><name pos:line="34" pos:column="14">type<pos:position pos:line="34" pos:column="18"/></name></name> <operator pos:line="34" pos:column="19">=<pos:position pos:line="34" pos:column="20"/></operator> <name pos:line="34" pos:column="21">CMD_UNKNOWN<pos:position pos:line="34" pos:column="32"/></name></expr>;<pos:position pos:line="34" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">cmd_error<pos:position pos:line="35" pos:column="14"/></name><argument_list pos:line="35" pos:column="14">(<argument><expr><name pos:line="35" pos:column="15">CMD_UNKNOWN_COMMAND<pos:position pos:line="35" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="36">err<pos:position pos:line="35" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="41">"Unknown command `%s'."<pos:position pos:line="35" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="66">command<pos:position pos:line="35" pos:column="73"/></name></expr></argument>)<pos:position pos:line="35" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="75"/></expr_stmt>
    <return pos:line="36" pos:column="5">return <expr><operator pos:line="36" pos:column="12">(<pos:position pos:line="36" pos:column="13"/></operator><name pos:line="36" pos:column="13">CMD_UNKNOWN_COMMAND<pos:position pos:line="36" pos:column="32"/></name><operator pos:line="36" pos:column="32">)<pos:position pos:line="36" pos:column="33"/></operator></expr>;<pos:position pos:line="36" pos:column="34"/></return>
  }<pos:position pos:line="37" pos:column="4"/></block></else></if>

  <if pos:line="39" pos:column="3">if <condition pos:line="39" pos:column="6">(<expr><name pos:line="39" pos:column="7">status<pos:position pos:line="39" pos:column="13"/></name> <operator pos:line="39" pos:column="14">!=<pos:position pos:line="39" pos:column="16"/></operator> <name pos:line="39" pos:column="17">CMD_OK<pos:position pos:line="39" pos:column="23"/></name></expr>)<pos:position pos:line="39" pos:column="24"/></condition><then pos:line="39" pos:column="24">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="40" pos:column="5">ret_cmd<pos:position pos:line="40" pos:column="12"/></name><operator pos:line="40" pos:column="12">-&gt;<pos:position pos:line="40" pos:column="17"/></operator><name pos:line="40" pos:column="14">type<pos:position pos:line="40" pos:column="18"/></name></name> <operator pos:line="40" pos:column="19">=<pos:position pos:line="40" pos:column="20"/></operator> <name pos:line="40" pos:column="21">CMD_UNKNOWN<pos:position pos:line="40" pos:column="32"/></name></expr>;<pos:position pos:line="40" pos:column="33"/></expr_stmt></block></then></if>
  <return pos:line="41" pos:column="3">return <expr><operator pos:line="41" pos:column="10">(<pos:position pos:line="41" pos:column="11"/></operator><name pos:line="41" pos:column="11">status<pos:position pos:line="41" pos:column="17"/></name><operator pos:line="41" pos:column="17">)<pos:position pos:line="41" pos:column="18"/></operator></expr>;<pos:position pos:line="41" pos:column="19"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

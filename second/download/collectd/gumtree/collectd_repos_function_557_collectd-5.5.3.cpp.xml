<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_557_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">collectd_barometer_init<pos:position pos:line="1" pos:column="35"/></name> <parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">void<pos:position pos:line="1" pos:column="41"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name></type> <name><name pos:line="3" pos:column="10">errbuf<pos:position pos:line="3" pos:column="16"/></name><index pos:line="3" pos:column="16">[<expr><literal type="number" pos:line="3" pos:column="17">1024<pos:position pos:line="3" pos:column="21"/></literal></expr>]<pos:position pos:line="3" pos:column="22"/></index></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="5" pos:column="5">DEBUG<pos:position pos:line="5" pos:column="10"/></name> <argument_list pos:line="5" pos:column="11">(<argument><expr><literal type="string" pos:line="5" pos:column="12">"barometer: collectd_barometer_init"<pos:position pos:line="5" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="50"/></expr_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">config_device<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">==<pos:position pos:line="7" pos:column="25"/></operator> <name pos:line="7" pos:column="26">NULL<pos:position pos:line="7" pos:column="30"/></name></expr>)<pos:position pos:line="7" pos:column="31"/></condition><then pos:line="7" pos:column="31">
    <block pos:line="8" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">ERROR<pos:position pos:line="9" pos:column="14"/></name><argument_list pos:line="9" pos:column="14">(<argument><expr><literal type="string" pos:line="9" pos:column="15">"barometer: collectd_barometer_init I2C bus device not configured"<pos:position pos:line="9" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="83"/></expr_stmt>
        <return pos:line="10" pos:column="9">return <expr><operator pos:line="10" pos:column="16">-<pos:position pos:line="10" pos:column="17"/></operator><literal type="number" pos:line="10" pos:column="17">1<pos:position pos:line="10" pos:column="18"/></literal></expr>;<pos:position pos:line="10" pos:column="19"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">config_normalize<pos:position pos:line="13" pos:column="25"/></name> <operator pos:line="13" pos:column="26">&gt;=<pos:position pos:line="13" pos:column="31"/></operator> <name pos:line="13" pos:column="29">MSLP_INTERNATIONAL<pos:position pos:line="13" pos:column="47"/></name> <operator pos:line="13" pos:column="48">&amp;&amp;<pos:position pos:line="13" pos:column="58"/></operator> <call><name pos:line="13" pos:column="51">isnan<pos:position pos:line="13" pos:column="56"/></name><argument_list pos:line="13" pos:column="56">(<argument><expr><name pos:line="13" pos:column="57">config_altitude<pos:position pos:line="13" pos:column="72"/></name></expr></argument>)<pos:position pos:line="13" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="74"/></condition><then pos:line="13" pos:column="74">
    <block pos:line="14" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">ERROR<pos:position pos:line="15" pos:column="14"/></name><argument_list pos:line="15" pos:column="14">(<argument><expr><literal type="string" pos:line="15" pos:column="15">"barometer: collectd_barometer_init no altitude configured "<pos:position pos:line="15" pos:column="75"/></literal> \
              <literal type="string" pos:line="16" pos:column="15">"for mean sea level pressure normalization."<pos:position pos:line="16" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="61"/></expr_stmt>
        <return pos:line="17" pos:column="9">return <expr><operator pos:line="17" pos:column="16">-<pos:position pos:line="17" pos:column="17"/></operator><literal type="number" pos:line="17" pos:column="17">1<pos:position pos:line="17" pos:column="18"/></literal></expr>;<pos:position pos:line="17" pos:column="19"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">config_normalize<pos:position pos:line="20" pos:column="25"/></name> <operator pos:line="20" pos:column="26">==<pos:position pos:line="20" pos:column="28"/></operator> <name pos:line="20" pos:column="29">MSLP_DEU_WETT<pos:position pos:line="20" pos:column="42"/></name>
        <operator pos:line="21" pos:column="9">&amp;&amp;<pos:position pos:line="21" pos:column="19"/></operator>
        <name pos:line="22" pos:column="9">temp_list<pos:position pos:line="22" pos:column="18"/></name> <operator pos:line="22" pos:column="19">==<pos:position pos:line="22" pos:column="21"/></operator> <name pos:line="22" pos:column="22">NULL<pos:position pos:line="22" pos:column="26"/></name></expr>)<pos:position pos:line="22" pos:column="27"/></condition><then pos:line="22" pos:column="27">
    <block pos:line="23" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">ERROR<pos:position pos:line="24" pos:column="14"/></name><argument_list pos:line="24" pos:column="14">(<argument><expr><literal type="string" pos:line="24" pos:column="15">"barometer: collectd_barometer_init no temperature reference "<pos:position pos:line="24" pos:column="77"/></literal>\
              <literal type="string" pos:line="25" pos:column="15">"configured for mean sea level pressure normalization."<pos:position pos:line="25" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="72"/></expr_stmt>
        <return pos:line="26" pos:column="9">return <expr><operator pos:line="26" pos:column="16">-<pos:position pos:line="26" pos:column="17"/></operator><literal type="number" pos:line="26" pos:column="17">1<pos:position pos:line="26" pos:column="18"/></literal></expr>;<pos:position pos:line="26" pos:column="19"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>


    <expr_stmt><expr><name pos:line="30" pos:column="5">i2c_bus_fd<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <call><name pos:line="30" pos:column="18">open<pos:position pos:line="30" pos:column="22"/></name><argument_list pos:line="30" pos:column="22">(<argument><expr><name pos:line="30" pos:column="23">config_device<pos:position pos:line="30" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="38">O_RDWR<pos:position pos:line="30" pos:column="44"/></name></expr></argument>)<pos:position pos:line="30" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="46"/></expr_stmt>
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name pos:line="31" pos:column="9">i2c_bus_fd<pos:position pos:line="31" pos:column="19"/></name> <operator pos:line="31" pos:column="20">&lt;<pos:position pos:line="31" pos:column="24"/></operator> <literal type="number" pos:line="31" pos:column="22">0<pos:position pos:line="31" pos:column="23"/></literal></expr>)<pos:position pos:line="31" pos:column="24"/></condition><then pos:line="31" pos:column="24">
    <block pos:line="32" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">ERROR<pos:position pos:line="33" pos:column="14"/></name> <argument_list pos:line="33" pos:column="15">(<argument><expr><literal type="string" pos:line="33" pos:column="16">"barometer: collectd_barometer_init problem opening I2C bus device \"%s\": %s (is loaded mod i2c-dev?)"<pos:position pos:line="33" pos:column="119"/></literal></expr></argument>,
               <argument><expr><name pos:line="34" pos:column="16">config_device<pos:position pos:line="34" pos:column="29"/></name></expr></argument>,
               <argument><expr><call><name pos:line="35" pos:column="16">sstrerror<pos:position pos:line="35" pos:column="25"/></name> <argument_list pos:line="35" pos:column="26">(<argument><expr><name pos:line="35" pos:column="27">errno<pos:position pos:line="35" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="34">errbuf<pos:position pos:line="35" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="42">sizeof <argument_list pos:line="35" pos:column="49">(<argument><expr><name pos:line="35" pos:column="50">errbuf<pos:position pos:line="35" pos:column="56"/></name></expr></argument>)<pos:position pos:line="35" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="35" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="60"/></expr_stmt>
        <return pos:line="36" pos:column="9">return <expr><operator pos:line="36" pos:column="16">-<pos:position pos:line="36" pos:column="17"/></operator><literal type="number" pos:line="36" pos:column="17">1<pos:position pos:line="36" pos:column="18"/></literal></expr>;<pos:position pos:line="36" pos:column="19"/></return>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="39" pos:column="5">/* detect sensor type - this will also set slave address */</comment>
    <expr_stmt><expr><name pos:line="40" pos:column="5">sensor_type<pos:position pos:line="40" pos:column="16"/></name> <operator pos:line="40" pos:column="17">=<pos:position pos:line="40" pos:column="18"/></operator> <call><name pos:line="40" pos:column="19">detect_sensor_type<pos:position pos:line="40" pos:column="37"/></name><argument_list pos:line="40" pos:column="37">()<pos:position pos:line="40" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="40"/></expr_stmt>

    <comment type="block" pos:line="42" pos:column="5">/* init correct sensor type */</comment>
    <switch pos:line="43" pos:column="5">switch<condition pos:line="43" pos:column="11">(<expr><name pos:line="43" pos:column="12">sensor_type<pos:position pos:line="43" pos:column="23"/></name></expr>)<pos:position pos:line="43" pos:column="24"/></condition>
    <block pos:line="44" pos:column="5">{
<comment type="block" pos:line="45" pos:column="1">/* MPL3115 */</comment>
    <case pos:line="46" pos:column="5">case <expr><name pos:line="46" pos:column="10">Sensor_MPL3115<pos:position pos:line="46" pos:column="24"/></name></expr>:<pos:position pos:line="46" pos:column="25"/></case>
    <block pos:line="47" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="48" pos:column="9">MPL3115_adjust_oversampling<pos:position pos:line="48" pos:column="36"/></name><argument_list pos:line="48" pos:column="36">()<pos:position pos:line="48" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="39"/></expr_stmt>

        <if pos:line="50" pos:column="9">if<condition pos:line="50" pos:column="11">(<expr><call><name pos:line="50" pos:column="12">MPL3115_init_sensor<pos:position pos:line="50" pos:column="31"/></name><argument_list pos:line="50" pos:column="31">()<pos:position pos:line="50" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="34"/></condition><then pos:line="50" pos:column="34">
            <block type="pseudo"><return pos:line="51" pos:column="13">return <expr><operator pos:line="51" pos:column="20">-<pos:position pos:line="51" pos:column="21"/></operator><literal type="number" pos:line="51" pos:column="21">1<pos:position pos:line="51" pos:column="22"/></literal></expr>;<pos:position pos:line="51" pos:column="23"/></return></block></then></if>

        <expr_stmt><expr><call><name pos:line="53" pos:column="9">plugin_register_read<pos:position pos:line="53" pos:column="29"/></name> <argument_list pos:line="53" pos:column="30">(<argument><expr><literal type="string" pos:line="53" pos:column="31">"barometer"<pos:position pos:line="53" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="44">MPL3115_collectd_barometer_read<pos:position pos:line="53" pos:column="75"/></name></expr></argument>)<pos:position pos:line="53" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="77"/></expr_stmt>
    }<pos:position pos:line="54" pos:column="6"/></block>
    <break pos:line="55" pos:column="5">break;<pos:position pos:line="55" pos:column="11"/></break>

<comment type="block" pos:line="57" pos:column="1">/* MPL115 */</comment>
    <case pos:line="58" pos:column="5">case <expr><name pos:line="58" pos:column="10">Sensor_MPL115<pos:position pos:line="58" pos:column="23"/></name></expr>:<pos:position pos:line="58" pos:column="24"/></case>
    <block pos:line="59" pos:column="5">{
        <if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><call><name pos:line="60" pos:column="13">averaging_create<pos:position pos:line="60" pos:column="29"/></name> <argument_list pos:line="60" pos:column="30">(<argument><expr><operator pos:line="60" pos:column="31">&amp;<pos:position pos:line="60" pos:column="36"/></operator><name pos:line="60" pos:column="32">pressure_averaging<pos:position pos:line="60" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="52">config_oversample<pos:position pos:line="60" pos:column="69"/></name></expr></argument>)<pos:position pos:line="60" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="60" pos:column="71"/></condition><then pos:line="60" pos:column="71">
        <block pos:line="61" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="62" pos:column="13">ERROR<pos:position pos:line="62" pos:column="18"/></name><argument_list pos:line="62" pos:column="18">(<argument><expr><literal type="string" pos:line="62" pos:column="19">"barometer: collectd_barometer_init pressure averaging init failed"<pos:position pos:line="62" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="88"/></expr_stmt>
            <return pos:line="63" pos:column="13">return <expr><operator pos:line="63" pos:column="20">-<pos:position pos:line="63" pos:column="21"/></operator><literal type="number" pos:line="63" pos:column="21">1<pos:position pos:line="63" pos:column="22"/></literal></expr>;<pos:position pos:line="63" pos:column="23"/></return>
        }<pos:position pos:line="64" pos:column="10"/></block></then></if>

        <if pos:line="66" pos:column="9">if <condition pos:line="66" pos:column="12">(<expr><call><name pos:line="66" pos:column="13">averaging_create<pos:position pos:line="66" pos:column="29"/></name> <argument_list pos:line="66" pos:column="30">(<argument><expr><operator pos:line="66" pos:column="31">&amp;<pos:position pos:line="66" pos:column="36"/></operator><name pos:line="66" pos:column="32">temperature_averaging<pos:position pos:line="66" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="55">config_oversample<pos:position pos:line="66" pos:column="72"/></name></expr></argument>)<pos:position pos:line="66" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="66" pos:column="74"/></condition><then pos:line="66" pos:column="74">
        <block pos:line="67" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="68" pos:column="13">ERROR<pos:position pos:line="68" pos:column="18"/></name><argument_list pos:line="68" pos:column="18">(<argument><expr><literal type="string" pos:line="68" pos:column="19">"barometer: collectd_barometer_init temperature averaging init failed"<pos:position pos:line="68" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="91"/></expr_stmt>
            <return pos:line="69" pos:column="13">return <expr><operator pos:line="69" pos:column="20">-<pos:position pos:line="69" pos:column="21"/></operator><literal type="number" pos:line="69" pos:column="21">1<pos:position pos:line="69" pos:column="22"/></literal></expr>;<pos:position pos:line="69" pos:column="23"/></return>
        }<pos:position pos:line="70" pos:column="10"/></block></then></if>

        <if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><call><name pos:line="72" pos:column="13">MPL115_read_coeffs<pos:position pos:line="72" pos:column="31"/></name><argument_list pos:line="72" pos:column="31">()<pos:position pos:line="72" pos:column="33"/></argument_list></call> <operator pos:line="72" pos:column="34">&lt;<pos:position pos:line="72" pos:column="38"/></operator> <literal type="number" pos:line="72" pos:column="36">0<pos:position pos:line="72" pos:column="37"/></literal></expr>)<pos:position pos:line="72" pos:column="38"/></condition><then pos:line="72" pos:column="38">
            <block type="pseudo"><return pos:line="73" pos:column="13">return <expr><operator pos:line="73" pos:column="20">-<pos:position pos:line="73" pos:column="21"/></operator><literal type="number" pos:line="73" pos:column="21">1<pos:position pos:line="73" pos:column="22"/></literal></expr>;<pos:position pos:line="73" pos:column="23"/></return></block></then></if>

        <expr_stmt><expr><call><name pos:line="75" pos:column="9">plugin_register_read<pos:position pos:line="75" pos:column="29"/></name> <argument_list pos:line="75" pos:column="30">(<argument><expr><literal type="string" pos:line="75" pos:column="31">"barometer"<pos:position pos:line="75" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="44">MPL115_collectd_barometer_read<pos:position pos:line="75" pos:column="74"/></name></expr></argument>)<pos:position pos:line="75" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="76"/></expr_stmt>
    }<pos:position pos:line="76" pos:column="6"/></block>
    <break pos:line="77" pos:column="5">break;<pos:position pos:line="77" pos:column="11"/></break>

<comment type="block" pos:line="79" pos:column="1">/* BMP085 */</comment>
    <case pos:line="80" pos:column="5">case <expr><name pos:line="80" pos:column="10">Sensor_BMP085<pos:position pos:line="80" pos:column="23"/></name></expr>:<pos:position pos:line="80" pos:column="24"/></case>
    <block pos:line="81" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="82" pos:column="9">BMP085_adjust_oversampling<pos:position pos:line="82" pos:column="35"/></name><argument_list pos:line="82" pos:column="35">()<pos:position pos:line="82" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="38"/></expr_stmt>

        <if pos:line="84" pos:column="9">if <condition pos:line="84" pos:column="12">(<expr><call><name pos:line="84" pos:column="13">BMP085_read_coeffs<pos:position pos:line="84" pos:column="31"/></name><argument_list pos:line="84" pos:column="31">()<pos:position pos:line="84" pos:column="33"/></argument_list></call> <operator pos:line="84" pos:column="34">&lt;<pos:position pos:line="84" pos:column="38"/></operator> <literal type="number" pos:line="84" pos:column="36">0<pos:position pos:line="84" pos:column="37"/></literal></expr>)<pos:position pos:line="84" pos:column="38"/></condition><then pos:line="84" pos:column="38">
            <block type="pseudo"><return pos:line="85" pos:column="13">return <expr><operator pos:line="85" pos:column="20">-<pos:position pos:line="85" pos:column="21"/></operator><literal type="number" pos:line="85" pos:column="21">1<pos:position pos:line="85" pos:column="22"/></literal></expr>;<pos:position pos:line="85" pos:column="23"/></return></block></then></if>

        <expr_stmt><expr><call><name pos:line="87" pos:column="9">plugin_register_read<pos:position pos:line="87" pos:column="29"/></name> <argument_list pos:line="87" pos:column="30">(<argument><expr><literal type="string" pos:line="87" pos:column="31">"barometer"<pos:position pos:line="87" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="87" pos:column="44">BMP085_collectd_barometer_read<pos:position pos:line="87" pos:column="74"/></name></expr></argument>)<pos:position pos:line="87" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="76"/></expr_stmt>
    }<pos:position pos:line="88" pos:column="6"/></block>
    <break pos:line="89" pos:column="5">break;<pos:position pos:line="89" pos:column="11"/></break>

<comment type="block" pos:line="91" pos:column="1">/* anything else -&gt; error */</comment>
    <default pos:line="92" pos:column="5">default:<pos:position pos:line="92" pos:column="13"/></default>
        <expr_stmt><expr><call><name pos:line="93" pos:column="9">ERROR<pos:position pos:line="93" pos:column="14"/></name><argument_list pos:line="93" pos:column="14">(<argument><expr><literal type="string" pos:line="93" pos:column="15">"barometer: collectd_barometer_init - no supported sensor found"<pos:position pos:line="93" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="81"/></expr_stmt>
        <return pos:line="94" pos:column="9">return <expr><operator pos:line="94" pos:column="16">-<pos:position pos:line="94" pos:column="17"/></operator><literal type="number" pos:line="94" pos:column="17">1<pos:position pos:line="94" pos:column="18"/></literal></expr>;<pos:position pos:line="94" pos:column="19"/></return>
    }<pos:position pos:line="95" pos:column="6"/></block></switch>


    <expr_stmt><expr><name pos:line="98" pos:column="5">configured<pos:position pos:line="98" pos:column="15"/></name> <operator pos:line="98" pos:column="16">=<pos:position pos:line="98" pos:column="17"/></operator> <literal type="number" pos:line="98" pos:column="18">1<pos:position pos:line="98" pos:column="19"/></literal></expr>;<pos:position pos:line="98" pos:column="20"/></expr_stmt>
    <return pos:line="99" pos:column="5">return <expr><literal type="number" pos:line="99" pos:column="12">0<pos:position pos:line="99" pos:column="13"/></literal></expr>;<pos:position pos:line="99" pos:column="14"/></return>
}<pos:position pos:line="100" pos:column="2"/></block></function></unit>

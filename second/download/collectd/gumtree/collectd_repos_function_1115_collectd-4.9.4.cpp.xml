<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1115_collectd-4.9.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">tr_config_add_action<pos:position pos:line="1" pos:column="32"/></name> <parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">tr_action_t<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier><modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">dest<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="54">/* {{{ */</comment>
    <parameter><decl><type><specifier pos:line="2" pos:column="5">const<pos:position pos:line="2" pos:column="10"/></specifier> <name pos:line="2" pos:column="11">oconfig_item_t<pos:position pos:line="2" pos:column="25"/></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type><name pos:line="2" pos:column="27">ci<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="31">int<pos:position pos:line="2" pos:column="34"/></name></type> <name pos:line="2" pos:column="35">may_be_empty<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">tr_action_t<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">act<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">status<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">dest<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">==<pos:position pos:line="7" pos:column="14"/></operator> <name pos:line="7" pos:column="15">NULL<pos:position pos:line="7" pos:column="19"/></name></expr>)<pos:position pos:line="7" pos:column="20"/></condition><then pos:line="7" pos:column="20">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><operator pos:line="8" pos:column="13">-<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">EINVAL<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">)<pos:position pos:line="8" pos:column="21"/></operator></expr>;<pos:position pos:line="8" pos:column="22"/></return></block></then></if>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><operator pos:line="10" pos:column="7">(<pos:position pos:line="10" pos:column="8"/></operator><name><name pos:line="10" pos:column="8">ci<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">-&gt;<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="12">values_num<pos:position pos:line="10" pos:column="22"/></name></name> <operator pos:line="10" pos:column="23">!=<pos:position pos:line="10" pos:column="25"/></operator> <literal type="number" pos:line="10" pos:column="26">2<pos:position pos:line="10" pos:column="27"/></literal><operator pos:line="10" pos:column="27">)<pos:position pos:line="10" pos:column="28"/></operator>
      <operator pos:line="11" pos:column="7">||<pos:position pos:line="11" pos:column="9"/></operator> <operator pos:line="11" pos:column="10">(<pos:position pos:line="11" pos:column="11"/></operator><name><name pos:line="11" pos:column="11">ci<pos:position pos:line="11" pos:column="13"/></name><operator pos:line="11" pos:column="13">-&gt;<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="15">values<pos:position pos:line="11" pos:column="21"/></name><index pos:line="11" pos:column="21">[<expr><literal type="number" pos:line="11" pos:column="22">0<pos:position pos:line="11" pos:column="23"/></literal></expr>]<pos:position pos:line="11" pos:column="24"/></index></name><operator pos:line="11" pos:column="24">.<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="25">type<pos:position pos:line="11" pos:column="29"/></name> <operator pos:line="11" pos:column="30">!=<pos:position pos:line="11" pos:column="32"/></operator> <name pos:line="11" pos:column="33">OCONFIG_TYPE_STRING<pos:position pos:line="11" pos:column="52"/></name><operator pos:line="11" pos:column="52">)<pos:position pos:line="11" pos:column="53"/></operator>
      <operator pos:line="12" pos:column="7">||<pos:position pos:line="12" pos:column="9"/></operator> <operator pos:line="12" pos:column="10">(<pos:position pos:line="12" pos:column="11"/></operator><name><name pos:line="12" pos:column="11">ci<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">-&gt;<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="15">values<pos:position pos:line="12" pos:column="21"/></name><index pos:line="12" pos:column="21">[<expr><literal type="number" pos:line="12" pos:column="22">1<pos:position pos:line="12" pos:column="23"/></literal></expr>]<pos:position pos:line="12" pos:column="24"/></index></name><operator pos:line="12" pos:column="24">.<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="25">type<pos:position pos:line="12" pos:column="29"/></name> <operator pos:line="12" pos:column="30">!=<pos:position pos:line="12" pos:column="32"/></operator> <name pos:line="12" pos:column="33">OCONFIG_TYPE_STRING<pos:position pos:line="12" pos:column="52"/></name><operator pos:line="12" pos:column="52">)<pos:position pos:line="12" pos:column="53"/></operator></expr>)<pos:position pos:line="12" pos:column="54"/></condition><then pos:line="12" pos:column="54">
  <block pos:line="13" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">ERROR<pos:position pos:line="14" pos:column="10"/></name> <argument_list pos:line="14" pos:column="11">(<argument><expr><literal type="string" pos:line="14" pos:column="12">"Target `replace': The `%s' option requires exactly two string "<pos:position pos:line="14" pos:column="76"/></literal>
        <literal type="string" pos:line="15" pos:column="9">"arguments."<pos:position pos:line="15" pos:column="21"/></literal></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="23">ci<pos:position pos:line="15" pos:column="25"/></name><operator pos:line="15" pos:column="25">-&gt;<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="27">key<pos:position pos:line="15" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt>
    <return pos:line="16" pos:column="5">return <expr><operator pos:line="16" pos:column="12">(<pos:position pos:line="16" pos:column="13"/></operator><operator pos:line="16" pos:column="13">-<pos:position pos:line="16" pos:column="14"/></operator><literal type="number" pos:line="16" pos:column="14">1<pos:position pos:line="16" pos:column="15"/></literal><operator pos:line="16" pos:column="15">)<pos:position pos:line="16" pos:column="16"/></operator></expr>;<pos:position pos:line="16" pos:column="17"/></return>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="19" pos:column="3">act<pos:position pos:line="19" pos:column="6"/></name> <operator pos:line="19" pos:column="7">=<pos:position pos:line="19" pos:column="8"/></operator> <operator pos:line="19" pos:column="9">(<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">tr_action_t<pos:position pos:line="19" pos:column="21"/></name> <operator pos:line="19" pos:column="22">*<pos:position pos:line="19" pos:column="23"/></operator><operator pos:line="19" pos:column="23">)<pos:position pos:line="19" pos:column="24"/></operator> <call><name pos:line="19" pos:column="25">malloc<pos:position pos:line="19" pos:column="31"/></name> <argument_list pos:line="19" pos:column="32">(<argument><expr><sizeof pos:line="19" pos:column="33">sizeof <argument_list pos:line="19" pos:column="40">(<argument><expr><operator pos:line="19" pos:column="41">*<pos:position pos:line="19" pos:column="42"/></operator><name pos:line="19" pos:column="42">act<pos:position pos:line="19" pos:column="45"/></name></expr></argument>)<pos:position pos:line="19" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="48"/></expr_stmt>
  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><name pos:line="20" pos:column="7">act<pos:position pos:line="20" pos:column="10"/></name> <operator pos:line="20" pos:column="11">==<pos:position pos:line="20" pos:column="13"/></operator> <name pos:line="20" pos:column="14">NULL<pos:position pos:line="20" pos:column="18"/></name></expr>)<pos:position pos:line="20" pos:column="19"/></condition><then pos:line="20" pos:column="19">
  <block pos:line="21" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">ERROR<pos:position pos:line="22" pos:column="10"/></name> <argument_list pos:line="22" pos:column="11">(<argument><expr><literal type="string" pos:line="22" pos:column="12">"tr_config_add_action: malloc failed."<pos:position pos:line="22" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="52"/></expr_stmt>
    <return pos:line="23" pos:column="5">return <expr><operator pos:line="23" pos:column="12">(<pos:position pos:line="23" pos:column="13"/></operator><operator pos:line="23" pos:column="13">-<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="14">ENOMEM<pos:position pos:line="23" pos:column="20"/></name><operator pos:line="23" pos:column="20">)<pos:position pos:line="23" pos:column="21"/></operator></expr>;<pos:position pos:line="23" pos:column="22"/></return>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">memset<pos:position pos:line="25" pos:column="9"/></name> <argument_list pos:line="25" pos:column="10">(<argument><expr><name pos:line="25" pos:column="11">act<pos:position pos:line="25" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="16">0<pos:position pos:line="25" pos:column="17"/></literal></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="19">sizeof <argument_list pos:line="25" pos:column="26">(<argument><expr><operator pos:line="25" pos:column="27">*<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="28">act<pos:position pos:line="25" pos:column="31"/></name></expr></argument>)<pos:position pos:line="25" pos:column="32"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="34"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="27" pos:column="3">act<pos:position pos:line="27" pos:column="6"/></name><operator pos:line="27" pos:column="6">-&gt;<pos:position pos:line="27" pos:column="11"/></operator><name pos:line="27" pos:column="8">replacement<pos:position pos:line="27" pos:column="19"/></name></name> <operator pos:line="27" pos:column="20">=<pos:position pos:line="27" pos:column="21"/></operator> <name pos:line="27" pos:column="22">NULL<pos:position pos:line="27" pos:column="26"/></name></expr>;<pos:position pos:line="27" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="28" pos:column="3">act<pos:position pos:line="28" pos:column="6"/></name><operator pos:line="28" pos:column="6">-&gt;<pos:position pos:line="28" pos:column="11"/></operator><name pos:line="28" pos:column="8">may_be_empty<pos:position pos:line="28" pos:column="20"/></name></name> <operator pos:line="28" pos:column="21">=<pos:position pos:line="28" pos:column="22"/></operator> <name pos:line="28" pos:column="23">may_be_empty<pos:position pos:line="28" pos:column="35"/></name></expr>;<pos:position pos:line="28" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><name pos:line="30" pos:column="3">status<pos:position pos:line="30" pos:column="9"/></name> <operator pos:line="30" pos:column="10">=<pos:position pos:line="30" pos:column="11"/></operator> <call><name pos:line="30" pos:column="12">regcomp<pos:position pos:line="30" pos:column="19"/></name> <argument_list pos:line="30" pos:column="20">(<argument><expr><operator pos:line="30" pos:column="21">&amp;<pos:position pos:line="30" pos:column="26"/></operator><name><name pos:line="30" pos:column="22">act<pos:position pos:line="30" pos:column="25"/></name><operator pos:line="30" pos:column="25">-&gt;<pos:position pos:line="30" pos:column="30"/></operator><name pos:line="30" pos:column="27">re<pos:position pos:line="30" pos:column="29"/></name></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="31">ci<pos:position pos:line="30" pos:column="33"/></name><operator pos:line="30" pos:column="33">-&gt;<pos:position pos:line="30" pos:column="38"/></operator><name pos:line="30" pos:column="35">values<pos:position pos:line="30" pos:column="41"/></name><index pos:line="30" pos:column="41">[<expr><literal type="number" pos:line="30" pos:column="42">0<pos:position pos:line="30" pos:column="43"/></literal></expr>]<pos:position pos:line="30" pos:column="44"/></index></name><operator pos:line="30" pos:column="44">.<pos:position pos:line="30" pos:column="45"/></operator><name><name pos:line="30" pos:column="45">value<pos:position pos:line="30" pos:column="50"/></name><operator pos:line="30" pos:column="50">.<pos:position pos:line="30" pos:column="51"/></operator><name pos:line="30" pos:column="51">string<pos:position pos:line="30" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="59">REG_EXTENDED<pos:position pos:line="30" pos:column="71"/></name></expr></argument>)<pos:position pos:line="30" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="73"/></expr_stmt>
  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><name pos:line="31" pos:column="7">status<pos:position pos:line="31" pos:column="13"/></name> <operator pos:line="31" pos:column="14">!=<pos:position pos:line="31" pos:column="16"/></operator> <literal type="number" pos:line="31" pos:column="17">0<pos:position pos:line="31" pos:column="18"/></literal></expr>)<pos:position pos:line="31" pos:column="19"/></condition><then pos:line="31" pos:column="19">
  <block pos:line="32" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="33" pos:column="5">char<pos:position pos:line="33" pos:column="9"/></name></type> <name><name pos:line="33" pos:column="10">errbuf<pos:position pos:line="33" pos:column="16"/></name><index pos:line="33" pos:column="16">[<expr><literal type="number" pos:line="33" pos:column="17">1024<pos:position pos:line="33" pos:column="21"/></literal></expr>]<pos:position pos:line="33" pos:column="22"/></index></name> <init pos:line="33" pos:column="23">= <expr><literal type="string" pos:line="33" pos:column="25">""<pos:position pos:line="33" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="33" pos:column="28"/></decl_stmt>

    <comment type="block" pos:line="35" pos:column="5">/* regerror assures null termination. */</comment>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">regerror<pos:position pos:line="36" pos:column="13"/></name> <argument_list pos:line="36" pos:column="14">(<argument><expr><name pos:line="36" pos:column="15">status<pos:position pos:line="36" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="23">&amp;<pos:position pos:line="36" pos:column="28"/></operator><name><name pos:line="36" pos:column="24">act<pos:position pos:line="36" pos:column="27"/></name><operator pos:line="36" pos:column="27">-&gt;<pos:position pos:line="36" pos:column="32"/></operator><name pos:line="36" pos:column="29">re<pos:position pos:line="36" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="33">errbuf<pos:position pos:line="36" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="36" pos:column="41">sizeof <argument_list pos:line="36" pos:column="48">(<argument><expr><name pos:line="36" pos:column="49">errbuf<pos:position pos:line="36" pos:column="55"/></name></expr></argument>)<pos:position pos:line="36" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="36" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">ERROR<pos:position pos:line="37" pos:column="10"/></name> <argument_list pos:line="37" pos:column="11">(<argument><expr><literal type="string" pos:line="37" pos:column="12">"Target `replace': Compiling the regular expression `%s' "<pos:position pos:line="37" pos:column="70"/></literal>
        <literal type="string" pos:line="38" pos:column="9">"failed: %s."<pos:position pos:line="38" pos:column="22"/></literal></expr></argument>,
        <argument><expr><name><name pos:line="39" pos:column="9">ci<pos:position pos:line="39" pos:column="11"/></name><operator pos:line="39" pos:column="11">-&gt;<pos:position pos:line="39" pos:column="16"/></operator><name pos:line="39" pos:column="13">values<pos:position pos:line="39" pos:column="19"/></name><index pos:line="39" pos:column="19">[<expr><literal type="number" pos:line="39" pos:column="20">0<pos:position pos:line="39" pos:column="21"/></literal></expr>]<pos:position pos:line="39" pos:column="22"/></index></name><operator pos:line="39" pos:column="22">.<pos:position pos:line="39" pos:column="23"/></operator><name><name pos:line="39" pos:column="23">value<pos:position pos:line="39" pos:column="28"/></name><operator pos:line="39" pos:column="28">.<pos:position pos:line="39" pos:column="29"/></operator><name pos:line="39" pos:column="29">string<pos:position pos:line="39" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="37">errbuf<pos:position pos:line="39" pos:column="43"/></name></expr></argument>)<pos:position pos:line="39" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">sfree<pos:position pos:line="40" pos:column="10"/></name> <argument_list pos:line="40" pos:column="11">(<argument><expr><name pos:line="40" pos:column="12">act<pos:position pos:line="40" pos:column="15"/></name></expr></argument>)<pos:position pos:line="40" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="17"/></expr_stmt>
    <return pos:line="41" pos:column="5">return <expr><operator pos:line="41" pos:column="12">(<pos:position pos:line="41" pos:column="13"/></operator><operator pos:line="41" pos:column="13">-<pos:position pos:line="41" pos:column="14"/></operator><name pos:line="41" pos:column="14">EINVAL<pos:position pos:line="41" pos:column="20"/></name><operator pos:line="41" pos:column="20">)<pos:position pos:line="41" pos:column="21"/></operator></expr>;<pos:position pos:line="41" pos:column="22"/></return>
  }<pos:position pos:line="42" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="44" pos:column="3">act<pos:position pos:line="44" pos:column="6"/></name><operator pos:line="44" pos:column="6">-&gt;<pos:position pos:line="44" pos:column="11"/></operator><name pos:line="44" pos:column="8">replacement<pos:position pos:line="44" pos:column="19"/></name></name> <operator pos:line="44" pos:column="20">=<pos:position pos:line="44" pos:column="21"/></operator> <call><name pos:line="44" pos:column="22">tr_strdup<pos:position pos:line="44" pos:column="31"/></name> <argument_list pos:line="44" pos:column="32">(<argument><expr><name><name pos:line="44" pos:column="33">ci<pos:position pos:line="44" pos:column="35"/></name><operator pos:line="44" pos:column="35">-&gt;<pos:position pos:line="44" pos:column="40"/></operator><name pos:line="44" pos:column="37">values<pos:position pos:line="44" pos:column="43"/></name><index pos:line="44" pos:column="43">[<expr><literal type="number" pos:line="44" pos:column="44">1<pos:position pos:line="44" pos:column="45"/></literal></expr>]<pos:position pos:line="44" pos:column="46"/></index></name><operator pos:line="44" pos:column="46">.<pos:position pos:line="44" pos:column="47"/></operator><name><name pos:line="44" pos:column="47">value<pos:position pos:line="44" pos:column="52"/></name><operator pos:line="44" pos:column="52">.<pos:position pos:line="44" pos:column="53"/></operator><name pos:line="44" pos:column="53">string<pos:position pos:line="44" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="61"/></expr_stmt>
  <if pos:line="45" pos:column="3">if <condition pos:line="45" pos:column="6">(<expr><name><name pos:line="45" pos:column="7">act<pos:position pos:line="45" pos:column="10"/></name><operator pos:line="45" pos:column="10">-&gt;<pos:position pos:line="45" pos:column="15"/></operator><name pos:line="45" pos:column="12">replacement<pos:position pos:line="45" pos:column="23"/></name></name> <operator pos:line="45" pos:column="24">==<pos:position pos:line="45" pos:column="26"/></operator> <name pos:line="45" pos:column="27">NULL<pos:position pos:line="45" pos:column="31"/></name></expr>)<pos:position pos:line="45" pos:column="32"/></condition><then pos:line="45" pos:column="32">
  <block pos:line="46" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">ERROR<pos:position pos:line="47" pos:column="10"/></name> <argument_list pos:line="47" pos:column="11">(<argument><expr><literal type="string" pos:line="47" pos:column="12">"tr_config_add_action: tr_strdup failed."<pos:position pos:line="47" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">regfree<pos:position pos:line="48" pos:column="12"/></name> <argument_list pos:line="48" pos:column="13">(<argument><expr><operator pos:line="48" pos:column="14">&amp;<pos:position pos:line="48" pos:column="19"/></operator><name><name pos:line="48" pos:column="15">act<pos:position pos:line="48" pos:column="18"/></name><operator pos:line="48" pos:column="18">-&gt;<pos:position pos:line="48" pos:column="23"/></operator><name pos:line="48" pos:column="20">re<pos:position pos:line="48" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">sfree<pos:position pos:line="49" pos:column="10"/></name> <argument_list pos:line="49" pos:column="11">(<argument><expr><name pos:line="49" pos:column="12">act<pos:position pos:line="49" pos:column="15"/></name></expr></argument>)<pos:position pos:line="49" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="17"/></expr_stmt>
    <return pos:line="50" pos:column="5">return <expr><operator pos:line="50" pos:column="12">(<pos:position pos:line="50" pos:column="13"/></operator><operator pos:line="50" pos:column="13">-<pos:position pos:line="50" pos:column="14"/></operator><name pos:line="50" pos:column="14">ENOMEM<pos:position pos:line="50" pos:column="20"/></name><operator pos:line="50" pos:column="20">)<pos:position pos:line="50" pos:column="21"/></operator></expr>;<pos:position pos:line="50" pos:column="22"/></return>
  }<pos:position pos:line="51" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="53" pos:column="3">/* Insert action at end of list. */</comment>
  <if pos:line="54" pos:column="3">if <condition pos:line="54" pos:column="6">(<expr><operator pos:line="54" pos:column="7">*<pos:position pos:line="54" pos:column="8"/></operator><name pos:line="54" pos:column="8">dest<pos:position pos:line="54" pos:column="12"/></name> <operator pos:line="54" pos:column="13">==<pos:position pos:line="54" pos:column="15"/></operator> <name pos:line="54" pos:column="16">NULL<pos:position pos:line="54" pos:column="20"/></name></expr>)<pos:position pos:line="54" pos:column="21"/></condition><then pos:line="54" pos:column="21">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="55" pos:column="5">*<pos:position pos:line="55" pos:column="6"/></operator><name pos:line="55" pos:column="6">dest<pos:position pos:line="55" pos:column="10"/></name> <operator pos:line="55" pos:column="11">=<pos:position pos:line="55" pos:column="12"/></operator> <name pos:line="55" pos:column="13">act<pos:position pos:line="55" pos:column="16"/></name></expr>;<pos:position pos:line="55" pos:column="17"/></expr_stmt></block></then>
  <else pos:line="56" pos:column="3">else
  <block pos:line="57" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="58" pos:column="5">tr_action_t<pos:position pos:line="58" pos:column="16"/></name> <modifier pos:line="58" pos:column="17">*<pos:position pos:line="58" pos:column="18"/></modifier></type><name pos:line="58" pos:column="18">prev<pos:position pos:line="58" pos:column="22"/></name></decl>;<pos:position pos:line="58" pos:column="23"/></decl_stmt>

    <expr_stmt><expr><name pos:line="60" pos:column="5">prev<pos:position pos:line="60" pos:column="9"/></name> <operator pos:line="60" pos:column="10">=<pos:position pos:line="60" pos:column="11"/></operator> <operator pos:line="60" pos:column="12">*<pos:position pos:line="60" pos:column="13"/></operator><name pos:line="60" pos:column="13">dest<pos:position pos:line="60" pos:column="17"/></name></expr>;<pos:position pos:line="60" pos:column="18"/></expr_stmt>
    <while pos:line="61" pos:column="5">while <condition pos:line="61" pos:column="11">(<expr><name><name pos:line="61" pos:column="12">prev<pos:position pos:line="61" pos:column="16"/></name><operator pos:line="61" pos:column="16">-&gt;<pos:position pos:line="61" pos:column="21"/></operator><name pos:line="61" pos:column="18">next<pos:position pos:line="61" pos:column="22"/></name></name> <operator pos:line="61" pos:column="23">!=<pos:position pos:line="61" pos:column="25"/></operator> <name pos:line="61" pos:column="26">NULL<pos:position pos:line="61" pos:column="30"/></name></expr>)<pos:position pos:line="61" pos:column="31"/></condition>
      <block type="pseudo"><expr_stmt><expr><name pos:line="62" pos:column="7">prev<pos:position pos:line="62" pos:column="11"/></name> <operator pos:line="62" pos:column="12">=<pos:position pos:line="62" pos:column="13"/></operator> <name><name pos:line="62" pos:column="14">prev<pos:position pos:line="62" pos:column="18"/></name><operator pos:line="62" pos:column="18">-&gt;<pos:position pos:line="62" pos:column="23"/></operator><name pos:line="62" pos:column="20">next<pos:position pos:line="62" pos:column="24"/></name></name></expr>;<pos:position pos:line="62" pos:column="25"/></expr_stmt></block></while>

    <expr_stmt><expr><name><name pos:line="64" pos:column="5">prev<pos:position pos:line="64" pos:column="9"/></name><operator pos:line="64" pos:column="9">-&gt;<pos:position pos:line="64" pos:column="14"/></operator><name pos:line="64" pos:column="11">next<pos:position pos:line="64" pos:column="15"/></name></name> <operator pos:line="64" pos:column="16">=<pos:position pos:line="64" pos:column="17"/></operator> <name pos:line="64" pos:column="18">act<pos:position pos:line="64" pos:column="21"/></name></expr>;<pos:position pos:line="64" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="65" pos:column="4"/></block></else></if>

  <return pos:line="67" pos:column="3">return <expr><operator pos:line="67" pos:column="10">(<pos:position pos:line="67" pos:column="11"/></operator><literal type="number" pos:line="67" pos:column="11">0<pos:position pos:line="67" pos:column="12"/></literal><operator pos:line="67" pos:column="12">)<pos:position pos:line="67" pos:column="13"/></operator></expr>;<pos:position pos:line="67" pos:column="14"/></return>
}<pos:position pos:line="68" pos:column="2"/></block></function></unit>

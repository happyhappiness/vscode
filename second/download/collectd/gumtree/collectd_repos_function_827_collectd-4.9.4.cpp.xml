<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_827_collectd-4.9.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">openvpn_config<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">key<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">value<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><call><name pos:line="3" pos:column="13">strcasecmp<pos:position pos:line="3" pos:column="23"/></name> <argument_list pos:line="3" pos:column="24">(<argument><expr><literal type="string" pos:line="3" pos:column="25">"StatusFile"<pos:position pos:line="3" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="3" pos:column="39">key<pos:position pos:line="3" pos:column="42"/></name></expr></argument>)<pos:position pos:line="3" pos:column="43"/></argument_list></call> <operator pos:line="3" pos:column="44">==<pos:position pos:line="3" pos:column="46"/></operator> <literal type="number" pos:line="3" pos:column="47">0<pos:position pos:line="3" pos:column="48"/></literal></expr>)<pos:position pos:line="3" pos:column="49"/></condition><then pos:line="3" pos:column="49">
	<block pos:line="4" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="5" pos:column="17">char<pos:position pos:line="5" pos:column="21"/></name>    <modifier pos:line="5" pos:column="25">*<pos:position pos:line="5" pos:column="26"/></modifier></type><name pos:line="5" pos:column="26">status_file<pos:position pos:line="5" pos:column="37"/></name></decl>, <modifier pos:line="5" pos:column="39">*<pos:position pos:line="5" pos:column="40"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="40">status_name<pos:position pos:line="5" pos:column="51"/></name></decl>, <modifier pos:line="5" pos:column="53">*<pos:position pos:line="5" pos:column="54"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="54">filename<pos:position pos:line="5" pos:column="62"/></name></decl>;<pos:position pos:line="5" pos:column="63"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="6" pos:column="17">int<pos:position pos:line="6" pos:column="20"/></name></type>     <name pos:line="6" pos:column="25">status_version<pos:position pos:line="6" pos:column="39"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="41">i<pos:position pos:line="6" pos:column="42"/></name></decl>;<pos:position pos:line="6" pos:column="43"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="7" pos:column="17">vpn_status_t<pos:position pos:line="7" pos:column="29"/></name> <modifier pos:line="7" pos:column="30">*<pos:position pos:line="7" pos:column="31"/></modifier></type><name pos:line="7" pos:column="31">temp<pos:position pos:line="7" pos:column="35"/></name></decl>;<pos:position pos:line="7" pos:column="36"/></decl_stmt>

		<comment type="block" pos:line="9" pos:column="17">/* try to detect the status file format */</comment>
		<expr_stmt><expr><name pos:line="10" pos:column="17">status_version<pos:position pos:line="10" pos:column="31"/></name> <operator pos:line="10" pos:column="32">=<pos:position pos:line="10" pos:column="33"/></operator> <call><name pos:line="10" pos:column="34">version_detect<pos:position pos:line="10" pos:column="48"/></name> <argument_list pos:line="10" pos:column="49">(<argument><expr><name pos:line="10" pos:column="50">value<pos:position pos:line="10" pos:column="55"/></name></expr></argument>)<pos:position pos:line="10" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="57"/></expr_stmt>

		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name pos:line="12" pos:column="21">status_version<pos:position pos:line="12" pos:column="35"/></name> <operator pos:line="12" pos:column="36">==<pos:position pos:line="12" pos:column="38"/></operator> <literal type="number" pos:line="12" pos:column="39">0<pos:position pos:line="12" pos:column="40"/></literal></expr>)<pos:position pos:line="12" pos:column="41"/></condition><then pos:line="12" pos:column="41">
		<block pos:line="13" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="14" pos:column="25">WARNING<pos:position pos:line="14" pos:column="32"/></name> <argument_list pos:line="14" pos:column="33">(<argument><expr><literal type="string" pos:line="14" pos:column="34">"openvpn plugin: unable to detect status version, \
				discarding status file \"%s\"."<pos:position pos:line="14" pos:column="121"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="66">value<pos:position pos:line="15" pos:column="71"/></name></expr></argument>)<pos:position pos:line="15" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="73"/></expr_stmt>
			<return pos:line="16" pos:column="25">return <expr><operator pos:line="16" pos:column="32">(<pos:position pos:line="16" pos:column="33"/></operator><literal type="number" pos:line="16" pos:column="33">1<pos:position pos:line="16" pos:column="34"/></literal><operator pos:line="16" pos:column="34">)<pos:position pos:line="16" pos:column="35"/></operator></expr>;<pos:position pos:line="16" pos:column="36"/></return>
		}<pos:position pos:line="17" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="19" pos:column="17">status_file<pos:position pos:line="19" pos:column="28"/></name> <operator pos:line="19" pos:column="29">=<pos:position pos:line="19" pos:column="30"/></operator> <call><name pos:line="19" pos:column="31">sstrdup<pos:position pos:line="19" pos:column="38"/></name> <argument_list pos:line="19" pos:column="39">(<argument><expr><name pos:line="19" pos:column="40">value<pos:position pos:line="19" pos:column="45"/></name></expr></argument>)<pos:position pos:line="19" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="47"/></expr_stmt>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><name pos:line="20" pos:column="21">status_file<pos:position pos:line="20" pos:column="32"/></name> <operator pos:line="20" pos:column="33">==<pos:position pos:line="20" pos:column="35"/></operator> <name pos:line="20" pos:column="36">NULL<pos:position pos:line="20" pos:column="40"/></name></expr>)<pos:position pos:line="20" pos:column="41"/></condition><then pos:line="20" pos:column="41">
		<block pos:line="21" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="22" pos:column="25">char<pos:position pos:line="22" pos:column="29"/></name></type> <name><name pos:line="22" pos:column="30">errbuf<pos:position pos:line="22" pos:column="36"/></name><index pos:line="22" pos:column="36">[<expr><literal type="number" pos:line="22" pos:column="37">1024<pos:position pos:line="22" pos:column="41"/></literal></expr>]<pos:position pos:line="22" pos:column="42"/></index></name></decl>;<pos:position pos:line="22" pos:column="43"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="23" pos:column="25">WARNING<pos:position pos:line="23" pos:column="32"/></name> <argument_list pos:line="23" pos:column="33">(<argument><expr><literal type="string" pos:line="23" pos:column="34">"openvpn plugin: sstrdup failed: %s"<pos:position pos:line="23" pos:column="70"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="24" pos:column="33">sstrerror<pos:position pos:line="24" pos:column="42"/></name> <argument_list pos:line="24" pos:column="43">(<argument><expr><name pos:line="24" pos:column="44">errno<pos:position pos:line="24" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="51">errbuf<pos:position pos:line="24" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="59">sizeof <argument_list pos:line="24" pos:column="66">(<argument><expr><name pos:line="24" pos:column="67">errbuf<pos:position pos:line="24" pos:column="73"/></name></expr></argument>)<pos:position pos:line="24" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="77"/></expr_stmt>
			<return pos:line="25" pos:column="25">return <expr><operator pos:line="25" pos:column="32">(<pos:position pos:line="25" pos:column="33"/></operator><literal type="number" pos:line="25" pos:column="33">1<pos:position pos:line="25" pos:column="34"/></literal><operator pos:line="25" pos:column="34">)<pos:position pos:line="25" pos:column="35"/></operator></expr>;<pos:position pos:line="25" pos:column="36"/></return>
		}<pos:position pos:line="26" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="28" pos:column="17">/* it determines the file name as string starting at location filename + 1 */</comment>
		<expr_stmt><expr><name pos:line="29" pos:column="17">filename<pos:position pos:line="29" pos:column="25"/></name> <operator pos:line="29" pos:column="26">=<pos:position pos:line="29" pos:column="27"/></operator> <call><name pos:line="29" pos:column="28">strrchr<pos:position pos:line="29" pos:column="35"/></name> <argument_list pos:line="29" pos:column="36">(<argument><expr><name pos:line="29" pos:column="37">status_file<pos:position pos:line="29" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="50">(<pos:position pos:line="29" pos:column="51"/></operator><name pos:line="29" pos:column="51">int<pos:position pos:line="29" pos:column="54"/></name><operator pos:line="29" pos:column="54">)<pos:position pos:line="29" pos:column="55"/></operator> <literal type="char" pos:line="29" pos:column="56">'/'<pos:position pos:line="29" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="61"/></expr_stmt>
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><name pos:line="30" pos:column="21">filename<pos:position pos:line="30" pos:column="29"/></name> <operator pos:line="30" pos:column="30">==<pos:position pos:line="30" pos:column="32"/></operator> <name pos:line="30" pos:column="33">NULL<pos:position pos:line="30" pos:column="37"/></name></expr>)<pos:position pos:line="30" pos:column="38"/></condition><then pos:line="30" pos:column="38">
		<block pos:line="31" pos:column="17">{
			<comment type="block" pos:line="32" pos:column="25">/* status_file is already the file name only */</comment>
			<expr_stmt><expr><name pos:line="33" pos:column="25">status_name<pos:position pos:line="33" pos:column="36"/></name> <operator pos:line="33" pos:column="37">=<pos:position pos:line="33" pos:column="38"/></operator> <name pos:line="33" pos:column="39">status_file<pos:position pos:line="33" pos:column="50"/></name></expr>;<pos:position pos:line="33" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="34" pos:column="18"/></block></then>
		<else pos:line="35" pos:column="17">else
		<block pos:line="36" pos:column="17">{
			<comment type="block" pos:line="37" pos:column="25">/* doesn't waste memory, uses status_file starting at filename + 1 */</comment>
			<expr_stmt><expr><name pos:line="38" pos:column="25">status_name<pos:position pos:line="38" pos:column="36"/></name> <operator pos:line="38" pos:column="37">=<pos:position pos:line="38" pos:column="38"/></operator> <name pos:line="38" pos:column="39">filename<pos:position pos:line="38" pos:column="47"/></name> <operator pos:line="38" pos:column="48">+<pos:position pos:line="38" pos:column="49"/></operator> <literal type="number" pos:line="38" pos:column="50">1<pos:position pos:line="38" pos:column="51"/></literal></expr>;<pos:position pos:line="38" pos:column="52"/></expr_stmt>
		}<pos:position pos:line="39" pos:column="18"/></block></else></if>

		<comment type="block" pos:line="41" pos:column="17">/* scan the list looking for a clone */</comment>
		<for pos:line="42" pos:column="17">for <control pos:line="42" pos:column="21">(<init><expr><name pos:line="42" pos:column="22">i<pos:position pos:line="42" pos:column="23"/></name> <operator pos:line="42" pos:column="24">=<pos:position pos:line="42" pos:column="25"/></operator> <literal type="number" pos:line="42" pos:column="26">0<pos:position pos:line="42" pos:column="27"/></literal></expr>;<pos:position pos:line="42" pos:column="28"/></init> <condition><expr><name pos:line="42" pos:column="29">i<pos:position pos:line="42" pos:column="30"/></name> <operator pos:line="42" pos:column="31">&lt;<pos:position pos:line="42" pos:column="35"/></operator> <name pos:line="42" pos:column="33">vpn_num<pos:position pos:line="42" pos:column="40"/></name></expr>;<pos:position pos:line="42" pos:column="41"/></condition> <incr><expr><name pos:line="42" pos:column="42">i<pos:position pos:line="42" pos:column="43"/></name><operator pos:line="42" pos:column="43">++<pos:position pos:line="42" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="42" pos:column="46"/></control>
		<block pos:line="43" pos:column="17">{
			<if pos:line="44" pos:column="25">if <condition pos:line="44" pos:column="28">(<expr><call><name pos:line="44" pos:column="29">strcasecmp<pos:position pos:line="44" pos:column="39"/></name> <argument_list pos:line="44" pos:column="40">(<argument><expr><name><name pos:line="44" pos:column="41">vpn_list<pos:position pos:line="44" pos:column="49"/></name><index pos:line="44" pos:column="49">[<expr><name pos:line="44" pos:column="50">i<pos:position pos:line="44" pos:column="51"/></name></expr>]<pos:position pos:line="44" pos:column="52"/></index></name><operator pos:line="44" pos:column="52">-&gt;<pos:position pos:line="44" pos:column="57"/></operator><name pos:line="44" pos:column="54">name<pos:position pos:line="44" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="60">status_name<pos:position pos:line="44" pos:column="71"/></name></expr></argument>)<pos:position pos:line="44" pos:column="72"/></argument_list></call> <operator pos:line="44" pos:column="73">==<pos:position pos:line="44" pos:column="75"/></operator> <literal type="number" pos:line="44" pos:column="76">0<pos:position pos:line="44" pos:column="77"/></literal></expr>)<pos:position pos:line="44" pos:column="78"/></condition><then pos:line="44" pos:column="78">
			<block pos:line="45" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="46" pos:column="33">WARNING<pos:position pos:line="46" pos:column="40"/></name> <argument_list pos:line="46" pos:column="41">(<argument><expr><literal type="string" pos:line="46" pos:column="42">"openvpn plugin: status filename \"%s\" "<pos:position pos:line="46" pos:column="83"/></literal>
						<literal type="string" pos:line="47" pos:column="49">"already used, please choose a "<pos:position pos:line="47" pos:column="81"/></literal>
						<literal type="string" pos:line="48" pos:column="49">"different one."<pos:position pos:line="48" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="67">status_name<pos:position pos:line="48" pos:column="78"/></name></expr></argument>)<pos:position pos:line="48" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="80"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="49" pos:column="33">sfree<pos:position pos:line="49" pos:column="38"/></name> <argument_list pos:line="49" pos:column="39">(<argument><expr><name pos:line="49" pos:column="40">status_file<pos:position pos:line="49" pos:column="51"/></name></expr></argument>)<pos:position pos:line="49" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="53"/></expr_stmt>
				<return pos:line="50" pos:column="33">return <expr><operator pos:line="50" pos:column="40">(<pos:position pos:line="50" pos:column="41"/></operator><literal type="number" pos:line="50" pos:column="41">1<pos:position pos:line="50" pos:column="42"/></literal><operator pos:line="50" pos:column="42">)<pos:position pos:line="50" pos:column="43"/></operator></expr>;<pos:position pos:line="50" pos:column="44"/></return>
			}<pos:position pos:line="51" pos:column="26"/></block></then></if>
		}<pos:position pos:line="52" pos:column="18"/></block></for>

		<comment type="block" pos:line="54" pos:column="17">/* create a new vpn element since file, version and name are ok */</comment>
		<expr_stmt><expr><name pos:line="55" pos:column="17">temp<pos:position pos:line="55" pos:column="21"/></name> <operator pos:line="55" pos:column="22">=<pos:position pos:line="55" pos:column="23"/></operator> <operator pos:line="55" pos:column="24">(<pos:position pos:line="55" pos:column="25"/></operator><name pos:line="55" pos:column="25">vpn_status_t<pos:position pos:line="55" pos:column="37"/></name> <operator pos:line="55" pos:column="38">*<pos:position pos:line="55" pos:column="39"/></operator><operator pos:line="55" pos:column="39">)<pos:position pos:line="55" pos:column="40"/></operator> <call><name pos:line="55" pos:column="41">malloc<pos:position pos:line="55" pos:column="47"/></name> <argument_list pos:line="55" pos:column="48">(<argument><expr><sizeof pos:line="55" pos:column="49">sizeof <argument_list pos:line="55" pos:column="56">(<argument><expr><name pos:line="55" pos:column="57">vpn_status_t<pos:position pos:line="55" pos:column="69"/></name></expr></argument>)<pos:position pos:line="55" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="55" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="72"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="56" pos:column="17">temp<pos:position pos:line="56" pos:column="21"/></name><operator pos:line="56" pos:column="21">-&gt;<pos:position pos:line="56" pos:column="26"/></operator><name pos:line="56" pos:column="23">file<pos:position pos:line="56" pos:column="27"/></name></name> <operator pos:line="56" pos:column="28">=<pos:position pos:line="56" pos:column="29"/></operator> <name pos:line="56" pos:column="30">status_file<pos:position pos:line="56" pos:column="41"/></name></expr>;<pos:position pos:line="56" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="57" pos:column="17">temp<pos:position pos:line="57" pos:column="21"/></name><operator pos:line="57" pos:column="21">-&gt;<pos:position pos:line="57" pos:column="26"/></operator><name pos:line="57" pos:column="23">version<pos:position pos:line="57" pos:column="30"/></name></name> <operator pos:line="57" pos:column="31">=<pos:position pos:line="57" pos:column="32"/></operator> <name pos:line="57" pos:column="33">status_version<pos:position pos:line="57" pos:column="47"/></name></expr>;<pos:position pos:line="57" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="58" pos:column="17">temp<pos:position pos:line="58" pos:column="21"/></name><operator pos:line="58" pos:column="21">-&gt;<pos:position pos:line="58" pos:column="26"/></operator><name pos:line="58" pos:column="23">name<pos:position pos:line="58" pos:column="27"/></name></name> <operator pos:line="58" pos:column="28">=<pos:position pos:line="58" pos:column="29"/></operator> <name pos:line="58" pos:column="30">status_name<pos:position pos:line="58" pos:column="41"/></name></expr>;<pos:position pos:line="58" pos:column="42"/></expr_stmt>

		<expr_stmt><expr><name pos:line="60" pos:column="17">vpn_list<pos:position pos:line="60" pos:column="25"/></name> <operator pos:line="60" pos:column="26">=<pos:position pos:line="60" pos:column="27"/></operator> <operator pos:line="60" pos:column="28">(<pos:position pos:line="60" pos:column="29"/></operator><name pos:line="60" pos:column="29">vpn_status_t<pos:position pos:line="60" pos:column="41"/></name> <operator pos:line="60" pos:column="42">*<pos:position pos:line="60" pos:column="43"/></operator><operator pos:line="60" pos:column="43">*<pos:position pos:line="60" pos:column="44"/></operator><operator pos:line="60" pos:column="44">)<pos:position pos:line="60" pos:column="45"/></operator> <call><name pos:line="60" pos:column="46">realloc<pos:position pos:line="60" pos:column="53"/></name> <argument_list pos:line="60" pos:column="54">(<argument><expr><name pos:line="60" pos:column="55">vpn_list<pos:position pos:line="60" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="65">(<pos:position pos:line="60" pos:column="66"/></operator><name pos:line="60" pos:column="66">vpn_num<pos:position pos:line="60" pos:column="73"/></name> <operator pos:line="60" pos:column="74">+<pos:position pos:line="60" pos:column="75"/></operator> <literal type="number" pos:line="60" pos:column="76">1<pos:position pos:line="60" pos:column="77"/></literal><operator pos:line="60" pos:column="77">)<pos:position pos:line="60" pos:column="78"/></operator> <operator pos:line="60" pos:column="79">*<pos:position pos:line="60" pos:column="80"/></operator> <sizeof pos:line="60" pos:column="81">sizeof <argument_list pos:line="60" pos:column="88">(<argument><expr><name pos:line="60" pos:column="89">vpn_status_t<pos:position pos:line="60" pos:column="101"/></name> <operator pos:line="60" pos:column="102">*<pos:position pos:line="60" pos:column="103"/></operator></expr></argument>)<pos:position pos:line="60" pos:column="104"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="60" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="106"/></expr_stmt>
		<if pos:line="61" pos:column="17">if <condition pos:line="61" pos:column="20">(<expr><name pos:line="61" pos:column="21">vpn_list<pos:position pos:line="61" pos:column="29"/></name> <operator pos:line="61" pos:column="30">==<pos:position pos:line="61" pos:column="32"/></operator> <name pos:line="61" pos:column="33">NULL<pos:position pos:line="61" pos:column="37"/></name></expr>)<pos:position pos:line="61" pos:column="38"/></condition><then pos:line="61" pos:column="38">
		<block pos:line="62" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="63" pos:column="25">char<pos:position pos:line="63" pos:column="29"/></name></type> <name><name pos:line="63" pos:column="30">errbuf<pos:position pos:line="63" pos:column="36"/></name><index pos:line="63" pos:column="36">[<expr><literal type="number" pos:line="63" pos:column="37">1024<pos:position pos:line="63" pos:column="41"/></literal></expr>]<pos:position pos:line="63" pos:column="42"/></index></name></decl>;<pos:position pos:line="63" pos:column="43"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="64" pos:column="25">ERROR<pos:position pos:line="64" pos:column="30"/></name> <argument_list pos:line="64" pos:column="31">(<argument><expr><literal type="string" pos:line="64" pos:column="32">"openvpn plugin: malloc failed: %s"<pos:position pos:line="64" pos:column="67"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="65" pos:column="33">sstrerror<pos:position pos:line="65" pos:column="42"/></name> <argument_list pos:line="65" pos:column="43">(<argument><expr><name pos:line="65" pos:column="44">errno<pos:position pos:line="65" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="51">errbuf<pos:position pos:line="65" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="65" pos:column="59">sizeof <argument_list pos:line="65" pos:column="66">(<argument><expr><name pos:line="65" pos:column="67">errbuf<pos:position pos:line="65" pos:column="73"/></name></expr></argument>)<pos:position pos:line="65" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="65" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="65" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="77"/></expr_stmt>

			<expr_stmt><expr><call><name pos:line="67" pos:column="25">sfree<pos:position pos:line="67" pos:column="30"/></name> <argument_list pos:line="67" pos:column="31">(<argument><expr><name><name pos:line="67" pos:column="32">temp<pos:position pos:line="67" pos:column="36"/></name><operator pos:line="67" pos:column="36">-&gt;<pos:position pos:line="67" pos:column="41"/></operator><name pos:line="67" pos:column="38">file<pos:position pos:line="67" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="68" pos:column="25">sfree<pos:position pos:line="68" pos:column="30"/></name> <argument_list pos:line="68" pos:column="31">(<argument><expr><name pos:line="68" pos:column="32">temp<pos:position pos:line="68" pos:column="36"/></name></expr></argument>)<pos:position pos:line="68" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="38"/></expr_stmt>
			<return pos:line="69" pos:column="25">return <expr><operator pos:line="69" pos:column="32">(<pos:position pos:line="69" pos:column="33"/></operator><literal type="number" pos:line="69" pos:column="33">1<pos:position pos:line="69" pos:column="34"/></literal><operator pos:line="69" pos:column="34">)<pos:position pos:line="69" pos:column="35"/></operator></expr>;<pos:position pos:line="69" pos:column="36"/></return>
		}<pos:position pos:line="70" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name><name pos:line="72" pos:column="17">vpn_list<pos:position pos:line="72" pos:column="25"/></name><index pos:line="72" pos:column="25">[<expr><name pos:line="72" pos:column="26">vpn_num<pos:position pos:line="72" pos:column="33"/></name></expr>]<pos:position pos:line="72" pos:column="34"/></index></name> <operator pos:line="72" pos:column="35">=<pos:position pos:line="72" pos:column="36"/></operator> <name pos:line="72" pos:column="37">temp<pos:position pos:line="72" pos:column="41"/></name></expr>;<pos:position pos:line="72" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name pos:line="73" pos:column="17">vpn_num<pos:position pos:line="73" pos:column="24"/></name><operator pos:line="73" pos:column="24">++<pos:position pos:line="73" pos:column="26"/></operator></expr>;<pos:position pos:line="73" pos:column="27"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="75" pos:column="17">DEBUG<pos:position pos:line="75" pos:column="22"/></name> <argument_list pos:line="75" pos:column="23">(<argument><expr><literal type="string" pos:line="75" pos:column="24">"openvpn plugin: status file \"%s\" added"<pos:position pos:line="75" pos:column="66"/></literal></expr></argument>, <argument><expr><name><name pos:line="75" pos:column="68">temp<pos:position pos:line="75" pos:column="72"/></name><operator pos:line="75" pos:column="72">-&gt;<pos:position pos:line="75" pos:column="77"/></operator><name pos:line="75" pos:column="74">file<pos:position pos:line="75" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="80"/></expr_stmt>

	}<pos:position pos:line="77" pos:column="10"/></block></then> <comment type="block" pos:line="77" pos:column="11">/* if (strcasecmp ("StatusFile", key) == 0) */</comment>
	<elseif pos:line="78" pos:column="9">else <if pos:line="78" pos:column="14">if <condition pos:line="78" pos:column="17">(<expr><call><name pos:line="78" pos:column="18">strcasecmp<pos:position pos:line="78" pos:column="28"/></name> <argument_list pos:line="78" pos:column="29">(<argument><expr><literal type="string" pos:line="78" pos:column="30">"Compression"<pos:position pos:line="78" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="78" pos:column="45">key<pos:position pos:line="78" pos:column="48"/></name></expr></argument>)<pos:position pos:line="78" pos:column="49"/></argument_list></call> <operator pos:line="78" pos:column="50">==<pos:position pos:line="78" pos:column="52"/></operator> <literal type="number" pos:line="78" pos:column="53">0<pos:position pos:line="78" pos:column="54"/></literal></expr>)<pos:position pos:line="78" pos:column="55"/></condition><then pos:line="78" pos:column="55">
	<block pos:line="79" pos:column="9">{
		<if pos:line="80" pos:column="17">if <condition pos:line="80" pos:column="20">(<expr><call><name pos:line="80" pos:column="21">IS_TRUE<pos:position pos:line="80" pos:column="28"/></name> <argument_list pos:line="80" pos:column="29">(<argument><expr><name pos:line="80" pos:column="30">value<pos:position pos:line="80" pos:column="35"/></name></expr></argument>)<pos:position pos:line="80" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="80" pos:column="37"/></condition><then pos:line="80" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><name pos:line="81" pos:column="25">store_compression<pos:position pos:line="81" pos:column="42"/></name> <operator pos:line="81" pos:column="43">=<pos:position pos:line="81" pos:column="44"/></operator> <literal type="number" pos:line="81" pos:column="45">1<pos:position pos:line="81" pos:column="46"/></literal></expr>;<pos:position pos:line="81" pos:column="47"/></expr_stmt></block></then>
		<else pos:line="82" pos:column="17">else
		<block pos:line="83" pos:column="17">{
			<expr_stmt><expr><name pos:line="84" pos:column="25">store_compression<pos:position pos:line="84" pos:column="42"/></name> <operator pos:line="84" pos:column="43">=<pos:position pos:line="84" pos:column="44"/></operator> <literal type="number" pos:line="84" pos:column="45">0<pos:position pos:line="84" pos:column="46"/></literal></expr>;<pos:position pos:line="84" pos:column="47"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="85" pos:column="25">DEBUG<pos:position pos:line="85" pos:column="30"/></name> <argument_list pos:line="85" pos:column="31">(<argument><expr><literal type="string" pos:line="85" pos:column="32">"openvpn plugin: no 'compression statistcs' collected"<pos:position pos:line="85" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="88"/></expr_stmt>
		}<pos:position pos:line="86" pos:column="18"/></block></else></if>
	}<pos:position pos:line="87" pos:column="10"/></block></then></if></elseif> <comment type="block" pos:line="87" pos:column="11">/* if (strcasecmp ("Compression", key) == 0) */</comment>
	<elseif pos:line="88" pos:column="9">else <if pos:line="88" pos:column="14">if <condition pos:line="88" pos:column="17">(<expr><call><name pos:line="88" pos:column="18">strcasecmp<pos:position pos:line="88" pos:column="28"/></name> <argument_list pos:line="88" pos:column="29">(<argument><expr><literal type="string" pos:line="88" pos:column="30">"ImprovedNamingSchema"<pos:position pos:line="88" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="88" pos:column="54">key<pos:position pos:line="88" pos:column="57"/></name></expr></argument>)<pos:position pos:line="88" pos:column="58"/></argument_list></call> <operator pos:line="88" pos:column="59">==<pos:position pos:line="88" pos:column="61"/></operator> <literal type="number" pos:line="88" pos:column="62">0<pos:position pos:line="88" pos:column="63"/></literal></expr>)<pos:position pos:line="88" pos:column="64"/></condition><then pos:line="88" pos:column="64">
	<block pos:line="89" pos:column="9">{
		<if pos:line="90" pos:column="17">if <condition pos:line="90" pos:column="20">(<expr><call><name pos:line="90" pos:column="21">IS_TRUE<pos:position pos:line="90" pos:column="28"/></name> <argument_list pos:line="90" pos:column="29">(<argument><expr><name pos:line="90" pos:column="30">value<pos:position pos:line="90" pos:column="35"/></name></expr></argument>)<pos:position pos:line="90" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="90" pos:column="37"/></condition><then pos:line="90" pos:column="37">
		<block pos:line="91" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="92" pos:column="25">DEBUG<pos:position pos:line="92" pos:column="30"/></name> <argument_list pos:line="92" pos:column="31">(<argument><expr><literal type="string" pos:line="92" pos:column="32">"openvpn plugin: using the new naming schema"<pos:position pos:line="92" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="79"/></expr_stmt>
			<expr_stmt><expr><name pos:line="93" pos:column="25">new_naming_schema<pos:position pos:line="93" pos:column="42"/></name> <operator pos:line="93" pos:column="43">=<pos:position pos:line="93" pos:column="44"/></operator> <literal type="number" pos:line="93" pos:column="45">1<pos:position pos:line="93" pos:column="46"/></literal></expr>;<pos:position pos:line="93" pos:column="47"/></expr_stmt>
		}<pos:position pos:line="94" pos:column="18"/></block></then>
		<else pos:line="95" pos:column="17">else
		<block pos:line="96" pos:column="17">{
			<expr_stmt><expr><name pos:line="97" pos:column="25">new_naming_schema<pos:position pos:line="97" pos:column="42"/></name> <operator pos:line="97" pos:column="43">=<pos:position pos:line="97" pos:column="44"/></operator> <literal type="number" pos:line="97" pos:column="45">0<pos:position pos:line="97" pos:column="46"/></literal></expr>;<pos:position pos:line="97" pos:column="47"/></expr_stmt>
		}<pos:position pos:line="98" pos:column="18"/></block></else></if>
	}<pos:position pos:line="99" pos:column="10"/></block></then></if></elseif> <comment type="block" pos:line="99" pos:column="11">/* if (strcasecmp ("ImprovedNamingSchema", key) == 0) */</comment>
	<else pos:line="100" pos:column="9">else
	<block pos:line="101" pos:column="9">{
		<return pos:line="102" pos:column="17">return <expr><operator pos:line="102" pos:column="24">(<pos:position pos:line="102" pos:column="25"/></operator><operator pos:line="102" pos:column="25">-<pos:position pos:line="102" pos:column="26"/></operator><literal type="number" pos:line="102" pos:column="26">1<pos:position pos:line="102" pos:column="27"/></literal><operator pos:line="102" pos:column="27">)<pos:position pos:line="102" pos:column="28"/></operator></expr>;<pos:position pos:line="102" pos:column="29"/></return>
	}<pos:position pos:line="103" pos:column="10"/></block></else></if>

	<return pos:line="105" pos:column="9">return <expr><operator pos:line="105" pos:column="16">(<pos:position pos:line="105" pos:column="17"/></operator><literal type="number" pos:line="105" pos:column="17">0<pos:position pos:line="105" pos:column="18"/></literal><operator pos:line="105" pos:column="18">)<pos:position pos:line="105" pos:column="19"/></operator></expr>;<pos:position pos:line="105" pos:column="20"/></return>
}<pos:position pos:line="106" pos:column="2"/></block></function></unit>

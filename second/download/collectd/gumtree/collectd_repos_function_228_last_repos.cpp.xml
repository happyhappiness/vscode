<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_228_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">submit_derive<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">int<pos:position pos:line="1" pos:column="30"/></name></type> <name pos:line="1" pos:column="31">cpu_num<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">int<pos:position pos:line="1" pos:column="43"/></name></type> <name pos:line="1" pos:column="44">cpu_state<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">derive_t<pos:position pos:line="1" pos:column="63"/></name></type> <name pos:line="1" pos:column="64">value<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list> <block pos:line="1" pos:column="71">{
  <expr_stmt><expr><call><name pos:line="2" pos:column="3">submit_value<pos:position pos:line="2" pos:column="15"/></name><argument_list pos:line="2" pos:column="15">(<argument><expr><name pos:line="2" pos:column="16">cpu_num<pos:position pos:line="2" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="25">cpu_state<pos:position pos:line="2" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="2" pos:column="36">"cpu"<pos:position pos:line="2" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="2" pos:column="43">(<pos:position pos:line="2" pos:column="44"/></operator><name pos:line="2" pos:column="44">value_t<pos:position pos:line="2" pos:column="51"/></name><operator pos:line="2" pos:column="51">)<pos:position pos:line="2" pos:column="52"/></operator><block pos:line="2" pos:column="52">{<expr><operator pos:line="2" pos:column="53">.<pos:position pos:line="2" pos:column="54"/></operator><name pos:line="2" pos:column="54">derive<pos:position pos:line="2" pos:column="60"/></name> <operator pos:line="2" pos:column="61">=<pos:position pos:line="2" pos:column="62"/></operator> <name pos:line="2" pos:column="63">value<pos:position pos:line="2" pos:column="68"/></name></expr>}<pos:position pos:line="2" pos:column="69"/></block></expr></argument>)<pos:position pos:line="2" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="2" pos:column="71"/></expr_stmt>
}<pos:position pos:line="3" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_997_collectd-5.0.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">Config_init<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">PyObject<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">s<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">PyObject<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">args<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">PyObject<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">kwds<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list> <block pos:line="1" pos:column="69">{
	<decl_stmt><decl><type><name pos:line="2" pos:column="9">PyObject<pos:position pos:line="2" pos:column="17"/></name> <modifier pos:line="2" pos:column="18">*<pos:position pos:line="2" pos:column="19"/></modifier></type><name pos:line="2" pos:column="19">key<pos:position pos:line="2" pos:column="22"/></name> <init pos:line="2" pos:column="23">= <expr><name pos:line="2" pos:column="25">NULL<pos:position pos:line="2" pos:column="29"/></name></expr></init></decl>, <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier><decl><type ref="prev"/><name pos:line="2" pos:column="32">parent<pos:position pos:line="2" pos:column="38"/></name> <init pos:line="2" pos:column="39">= <expr><name pos:line="2" pos:column="41">NULL<pos:position pos:line="2" pos:column="45"/></name></expr></init></decl>, <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier><decl><type ref="prev"/><name pos:line="2" pos:column="48">values<pos:position pos:line="2" pos:column="54"/></name> <init pos:line="2" pos:column="55">= <expr><name pos:line="2" pos:column="57">NULL<pos:position pos:line="2" pos:column="61"/></name></expr></init></decl>, <modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier><decl><type ref="prev"/><name pos:line="2" pos:column="64">children<pos:position pos:line="2" pos:column="72"/></name> <init pos:line="2" pos:column="73">= <expr><name pos:line="2" pos:column="75">NULL<pos:position pos:line="2" pos:column="79"/></name></expr></init></decl>, <modifier pos:line="2" pos:column="81">*<pos:position pos:line="2" pos:column="82"/></modifier><decl><type ref="prev"/><name pos:line="2" pos:column="82">tmp<pos:position pos:line="2" pos:column="85"/></name></decl>;<pos:position pos:line="2" pos:column="86"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">Config<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">self<pos:position pos:line="3" pos:column="21"/></name> <init pos:line="3" pos:column="22">= <expr><operator pos:line="3" pos:column="24">(<pos:position pos:line="3" pos:column="25"/></operator><name pos:line="3" pos:column="25">Config<pos:position pos:line="3" pos:column="31"/></name> <operator pos:line="3" pos:column="32">*<pos:position pos:line="3" pos:column="33"/></operator><operator pos:line="3" pos:column="33">)<pos:position pos:line="3" pos:column="34"/></operator> <name pos:line="3" pos:column="35">s<pos:position pos:line="3" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><name pos:line="4" pos:column="16">char<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name><name pos:line="4" pos:column="22">kwlist<pos:position pos:line="4" pos:column="28"/></name><index pos:line="4" pos:column="28">[]<pos:position pos:line="4" pos:column="30"/></index></name> <init pos:line="4" pos:column="31">= <expr><block pos:line="4" pos:column="33">{<expr><literal type="string" pos:line="4" pos:column="34">"key"<pos:position pos:line="4" pos:column="39"/></literal></expr>, <expr><literal type="string" pos:line="4" pos:column="41">"parent"<pos:position pos:line="4" pos:column="49"/></literal></expr>, <expr><literal type="string" pos:line="4" pos:column="51">"values"<pos:position pos:line="4" pos:column="59"/></literal></expr>, <expr><literal type="string" pos:line="4" pos:column="61">"children"<pos:position pos:line="4" pos:column="71"/></literal></expr>, <expr><name pos:line="4" pos:column="73">NULL<pos:position pos:line="4" pos:column="77"/></name></expr>}<pos:position pos:line="4" pos:column="78"/></block></expr></init></decl>;<pos:position pos:line="4" pos:column="79"/></decl_stmt>
	
	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><call><name pos:line="6" pos:column="14">PyArg_ParseTupleAndKeywords<pos:position pos:line="6" pos:column="41"/></name><argument_list pos:line="6" pos:column="41">(<argument><expr><name pos:line="6" pos:column="42">args<pos:position pos:line="6" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="48">kwds<pos:position pos:line="6" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="54">"O|OOO"<pos:position pos:line="6" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="63">kwlist<pos:position pos:line="6" pos:column="69"/></name></expr></argument>,
			<argument><expr><operator pos:line="7" pos:column="25">&amp;<pos:position pos:line="7" pos:column="30"/></operator><name pos:line="7" pos:column="26">key<pos:position pos:line="7" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="31">&amp;<pos:position pos:line="7" pos:column="36"/></operator><name pos:line="7" pos:column="32">parent<pos:position pos:line="7" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="40">&amp;<pos:position pos:line="7" pos:column="45"/></operator><name pos:line="7" pos:column="41">values<pos:position pos:line="7" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="49">&amp;<pos:position pos:line="7" pos:column="54"/></operator><name pos:line="7" pos:column="50">children<pos:position pos:line="7" pos:column="58"/></name></expr></argument>)<pos:position pos:line="7" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="60"/></condition><then pos:line="7" pos:column="60">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><operator pos:line="8" pos:column="24">-<pos:position pos:line="8" pos:column="25"/></operator><literal type="number" pos:line="8" pos:column="25">1<pos:position pos:line="8" pos:column="26"/></literal></expr>;<pos:position pos:line="8" pos:column="27"/></return></block></then></if>
	
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><call><name pos:line="10" pos:column="14">IS_BYTES_OR_UNICODE<pos:position pos:line="10" pos:column="33"/></name><argument_list pos:line="10" pos:column="33">(<argument><expr><name pos:line="10" pos:column="34">key<pos:position pos:line="10" pos:column="37"/></name></expr></argument>)<pos:position pos:line="10" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="39"/></condition><then pos:line="10" pos:column="39"> <block pos:line="10" pos:column="40">{
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">PyErr_SetString<pos:position pos:line="11" pos:column="32"/></name><argument_list pos:line="11" pos:column="32">(<argument><expr><name pos:line="11" pos:column="33">PyExc_TypeError<pos:position pos:line="11" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="50">"argument 1 must be str"<pos:position pos:line="11" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="76"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">Py_XDECREF<pos:position pos:line="12" pos:column="27"/></name><argument_list pos:line="12" pos:column="27">(<argument><expr><name pos:line="12" pos:column="28">parent<pos:position pos:line="12" pos:column="34"/></name></expr></argument>)<pos:position pos:line="12" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">Py_XDECREF<pos:position pos:line="13" pos:column="27"/></name><argument_list pos:line="13" pos:column="27">(<argument><expr><name pos:line="13" pos:column="28">values<pos:position pos:line="13" pos:column="34"/></name></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">Py_XDECREF<pos:position pos:line="14" pos:column="27"/></name><argument_list pos:line="14" pos:column="27">(<argument><expr><name pos:line="14" pos:column="28">children<pos:position pos:line="14" pos:column="36"/></name></expr></argument>)<pos:position pos:line="14" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="38"/></expr_stmt>
		<return pos:line="15" pos:column="17">return <expr><operator pos:line="15" pos:column="24">-<pos:position pos:line="15" pos:column="25"/></operator><literal type="number" pos:line="15" pos:column="25">1<pos:position pos:line="15" pos:column="26"/></literal></expr>;<pos:position pos:line="15" pos:column="27"/></return>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">values<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">==<pos:position pos:line="17" pos:column="22"/></operator> <name pos:line="17" pos:column="23">NULL<pos:position pos:line="17" pos:column="27"/></name></expr>)<pos:position pos:line="17" pos:column="28"/></condition><then pos:line="17" pos:column="28"> <block pos:line="17" pos:column="29">{
		<expr_stmt><expr><name pos:line="18" pos:column="17">values<pos:position pos:line="18" pos:column="23"/></name> <operator pos:line="18" pos:column="24">=<pos:position pos:line="18" pos:column="25"/></operator> <call><name pos:line="18" pos:column="26">PyTuple_New<pos:position pos:line="18" pos:column="37"/></name><argument_list pos:line="18" pos:column="37">(<argument><expr><literal type="number" pos:line="18" pos:column="38">0<pos:position pos:line="18" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">PyErr_Clear<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">()<pos:position pos:line="19" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">children<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">==<pos:position pos:line="21" pos:column="24"/></operator> <name pos:line="21" pos:column="25">NULL<pos:position pos:line="21" pos:column="29"/></name></expr>)<pos:position pos:line="21" pos:column="30"/></condition><then pos:line="21" pos:column="30"> <block pos:line="21" pos:column="31">{
		<expr_stmt><expr><name pos:line="22" pos:column="17">children<pos:position pos:line="22" pos:column="25"/></name> <operator pos:line="22" pos:column="26">=<pos:position pos:line="22" pos:column="27"/></operator> <call><name pos:line="22" pos:column="28">PyTuple_New<pos:position pos:line="22" pos:column="39"/></name><argument_list pos:line="22" pos:column="39">(<argument><expr><literal type="number" pos:line="22" pos:column="40">0<pos:position pos:line="22" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="23" pos:column="17">PyErr_Clear<pos:position pos:line="23" pos:column="28"/></name><argument_list pos:line="23" pos:column="28">()<pos:position pos:line="23" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="25" pos:column="9">tmp<pos:position pos:line="25" pos:column="12"/></name> <operator pos:line="25" pos:column="13">=<pos:position pos:line="25" pos:column="14"/></operator> <name><name pos:line="25" pos:column="15">self<pos:position pos:line="25" pos:column="19"/></name><operator pos:line="25" pos:column="19">-&gt;<pos:position pos:line="25" pos:column="24"/></operator><name pos:line="25" pos:column="21">key<pos:position pos:line="25" pos:column="24"/></name></name></expr>;<pos:position pos:line="25" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="26" pos:column="9">Py_INCREF<pos:position pos:line="26" pos:column="18"/></name><argument_list pos:line="26" pos:column="18">(<argument><expr><name pos:line="26" pos:column="19">key<pos:position pos:line="26" pos:column="22"/></name></expr></argument>)<pos:position pos:line="26" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="27" pos:column="9">self<pos:position pos:line="27" pos:column="13"/></name><operator pos:line="27" pos:column="13">-&gt;<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="15">key<pos:position pos:line="27" pos:column="18"/></name></name> <operator pos:line="27" pos:column="19">=<pos:position pos:line="27" pos:column="20"/></operator> <name pos:line="27" pos:column="21">key<pos:position pos:line="27" pos:column="24"/></name></expr>;<pos:position pos:line="27" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="28" pos:column="9">Py_XDECREF<pos:position pos:line="28" pos:column="19"/></name><argument_list pos:line="28" pos:column="19">(<argument><expr><name pos:line="28" pos:column="20">tmp<pos:position pos:line="28" pos:column="23"/></name></expr></argument>)<pos:position pos:line="28" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="25"/></expr_stmt>
	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">parent<pos:position pos:line="29" pos:column="19"/></name> <operator pos:line="29" pos:column="20">!=<pos:position pos:line="29" pos:column="22"/></operator> <name pos:line="29" pos:column="23">NULL<pos:position pos:line="29" pos:column="27"/></name></expr>)<pos:position pos:line="29" pos:column="28"/></condition><then pos:line="29" pos:column="28"> <block pos:line="29" pos:column="29">{
		<expr_stmt><expr><name pos:line="30" pos:column="17">tmp<pos:position pos:line="30" pos:column="20"/></name> <operator pos:line="30" pos:column="21">=<pos:position pos:line="30" pos:column="22"/></operator> <name><name pos:line="30" pos:column="23">self<pos:position pos:line="30" pos:column="27"/></name><operator pos:line="30" pos:column="27">-&gt;<pos:position pos:line="30" pos:column="32"/></operator><name pos:line="30" pos:column="29">parent<pos:position pos:line="30" pos:column="35"/></name></name></expr>;<pos:position pos:line="30" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">Py_INCREF<pos:position pos:line="31" pos:column="26"/></name><argument_list pos:line="31" pos:column="26">(<argument><expr><name pos:line="31" pos:column="27">parent<pos:position pos:line="31" pos:column="33"/></name></expr></argument>)<pos:position pos:line="31" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="32" pos:column="17">self<pos:position pos:line="32" pos:column="21"/></name><operator pos:line="32" pos:column="21">-&gt;<pos:position pos:line="32" pos:column="26"/></operator><name pos:line="32" pos:column="23">parent<pos:position pos:line="32" pos:column="29"/></name></name> <operator pos:line="32" pos:column="30">=<pos:position pos:line="32" pos:column="31"/></operator> <name pos:line="32" pos:column="32">parent<pos:position pos:line="32" pos:column="38"/></name></expr>;<pos:position pos:line="32" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">Py_XDECREF<pos:position pos:line="33" pos:column="27"/></name><argument_list pos:line="33" pos:column="27">(<argument><expr><name pos:line="33" pos:column="28">tmp<pos:position pos:line="33" pos:column="31"/></name></expr></argument>)<pos:position pos:line="33" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="34" pos:column="10"/></block></then></if>
	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name pos:line="35" pos:column="13">values<pos:position pos:line="35" pos:column="19"/></name> <operator pos:line="35" pos:column="20">!=<pos:position pos:line="35" pos:column="22"/></operator> <name pos:line="35" pos:column="23">NULL<pos:position pos:line="35" pos:column="27"/></name></expr>)<pos:position pos:line="35" pos:column="28"/></condition><then pos:line="35" pos:column="28"> <block pos:line="35" pos:column="29">{
		<expr_stmt><expr><name pos:line="36" pos:column="17">tmp<pos:position pos:line="36" pos:column="20"/></name> <operator pos:line="36" pos:column="21">=<pos:position pos:line="36" pos:column="22"/></operator> <name><name pos:line="36" pos:column="23">self<pos:position pos:line="36" pos:column="27"/></name><operator pos:line="36" pos:column="27">-&gt;<pos:position pos:line="36" pos:column="32"/></operator><name pos:line="36" pos:column="29">values<pos:position pos:line="36" pos:column="35"/></name></name></expr>;<pos:position pos:line="36" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">Py_INCREF<pos:position pos:line="37" pos:column="26"/></name><argument_list pos:line="37" pos:column="26">(<argument><expr><name pos:line="37" pos:column="27">values<pos:position pos:line="37" pos:column="33"/></name></expr></argument>)<pos:position pos:line="37" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="38" pos:column="17">self<pos:position pos:line="38" pos:column="21"/></name><operator pos:line="38" pos:column="21">-&gt;<pos:position pos:line="38" pos:column="26"/></operator><name pos:line="38" pos:column="23">values<pos:position pos:line="38" pos:column="29"/></name></name> <operator pos:line="38" pos:column="30">=<pos:position pos:line="38" pos:column="31"/></operator> <name pos:line="38" pos:column="32">values<pos:position pos:line="38" pos:column="38"/></name></expr>;<pos:position pos:line="38" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="39" pos:column="17">Py_XDECREF<pos:position pos:line="39" pos:column="27"/></name><argument_list pos:line="39" pos:column="27">(<argument><expr><name pos:line="39" pos:column="28">tmp<pos:position pos:line="39" pos:column="31"/></name></expr></argument>)<pos:position pos:line="39" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="40" pos:column="10"/></block></then></if>
	<if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><name pos:line="41" pos:column="13">children<pos:position pos:line="41" pos:column="21"/></name> <operator pos:line="41" pos:column="22">!=<pos:position pos:line="41" pos:column="24"/></operator> <name pos:line="41" pos:column="25">NULL<pos:position pos:line="41" pos:column="29"/></name></expr>)<pos:position pos:line="41" pos:column="30"/></condition><then pos:line="41" pos:column="30"> <block pos:line="41" pos:column="31">{
		<expr_stmt><expr><name pos:line="42" pos:column="17">tmp<pos:position pos:line="42" pos:column="20"/></name> <operator pos:line="42" pos:column="21">=<pos:position pos:line="42" pos:column="22"/></operator> <name><name pos:line="42" pos:column="23">self<pos:position pos:line="42" pos:column="27"/></name><operator pos:line="42" pos:column="27">-&gt;<pos:position pos:line="42" pos:column="32"/></operator><name pos:line="42" pos:column="29">children<pos:position pos:line="42" pos:column="37"/></name></name></expr>;<pos:position pos:line="42" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">Py_INCREF<pos:position pos:line="43" pos:column="26"/></name><argument_list pos:line="43" pos:column="26">(<argument><expr><name pos:line="43" pos:column="27">children<pos:position pos:line="43" pos:column="35"/></name></expr></argument>)<pos:position pos:line="43" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="44" pos:column="17">self<pos:position pos:line="44" pos:column="21"/></name><operator pos:line="44" pos:column="21">-&gt;<pos:position pos:line="44" pos:column="26"/></operator><name pos:line="44" pos:column="23">children<pos:position pos:line="44" pos:column="31"/></name></name> <operator pos:line="44" pos:column="32">=<pos:position pos:line="44" pos:column="33"/></operator> <name pos:line="44" pos:column="34">children<pos:position pos:line="44" pos:column="42"/></name></expr>;<pos:position pos:line="44" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="45" pos:column="17">Py_XDECREF<pos:position pos:line="45" pos:column="27"/></name><argument_list pos:line="45" pos:column="27">(<argument><expr><name pos:line="45" pos:column="28">tmp<pos:position pos:line="45" pos:column="31"/></name></expr></argument>)<pos:position pos:line="45" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="46" pos:column="10"/></block></then></if>
	<return pos:line="47" pos:column="9">return <expr><literal type="number" pos:line="47" pos:column="16">0<pos:position pos:line="47" pos:column="17"/></literal></expr>;<pos:position pos:line="47" pos:column="18"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

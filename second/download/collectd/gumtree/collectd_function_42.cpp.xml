<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_function_42.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cf_callback_mode_switch<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">shortvar<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="52">const<pos:position pos:line="1" pos:column="57"/></specifier> <name pos:line="1" pos:column="58">char<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">var<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">char<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">arguments<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="40">const<pos:position pos:line="2" pos:column="45"/></specifier> <name pos:line="2" pos:column="46">char<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">value<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="59">lc_flags_t<pos:position pos:line="2" pos:column="69"/></name></type> <name pos:line="2" pos:column="70">flags<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="3" pos:column="17">void<pos:position pos:line="3" pos:column="21"/></name> <modifier pos:line="3" pos:column="22">*<pos:position pos:line="3" pos:column="23"/></modifier></type><name pos:line="3" pos:column="23">extra<pos:position pos:line="3" pos:column="28"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="29"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="5" pos:column="9">DBG<pos:position pos:line="5" pos:column="12"/></name> <argument_list pos:line="5" pos:column="13">(<argument><expr><literal type="string" pos:line="5" pos:column="14">"shortvar = %s, var = %s, arguments = %s, value = %s, ..."<pos:position pos:line="5" pos:column="72"/></literal></expr></argument>,
			<argument><expr><name pos:line="6" pos:column="25">shortvar<pos:position pos:line="6" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="35">var<pos:position pos:line="6" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="40">arguments<pos:position pos:line="6" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="51">value<pos:position pos:line="6" pos:column="56"/></name></expr></argument>)<pos:position pos:line="6" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="58"/></expr_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">strcasecmp<pos:position pos:line="8" pos:column="23"/></name> <argument_list pos:line="8" pos:column="24">(<argument><expr><name pos:line="8" pos:column="25">shortvar<pos:position pos:line="8" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="35">"Client"<pos:position pos:line="8" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="44"/></argument_list></call> <operator pos:line="8" pos:column="45">==<pos:position pos:line="8" pos:column="47"/></operator> <literal type="number" pos:line="8" pos:column="48">0<pos:position pos:line="8" pos:column="49"/></literal></expr>)<pos:position pos:line="8" pos:column="50"/></condition><then pos:line="8" pos:column="50">
		<block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="17">operating_mode<pos:position pos:line="9" pos:column="31"/></name> <operator pos:line="9" pos:column="32">=<pos:position pos:line="9" pos:column="33"/></operator> <name pos:line="9" pos:column="34">MODE_CLIENT<pos:position pos:line="9" pos:column="45"/></name></expr>;<pos:position pos:line="9" pos:column="46"/></expr_stmt></block></then>
	<elseif pos:line="10" pos:column="9">else <if pos:line="10" pos:column="14">if <condition pos:line="10" pos:column="17">(<expr><call><name pos:line="10" pos:column="18">strcasecmp<pos:position pos:line="10" pos:column="28"/></name> <argument_list pos:line="10" pos:column="29">(<argument><expr><name pos:line="10" pos:column="30">shortvar<pos:position pos:line="10" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="40">"Local"<pos:position pos:line="10" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="48"/></argument_list></call> <operator pos:line="10" pos:column="49">==<pos:position pos:line="10" pos:column="51"/></operator> <literal type="number" pos:line="10" pos:column="52">0<pos:position pos:line="10" pos:column="53"/></literal></expr>)<pos:position pos:line="10" pos:column="54"/></condition><then pos:line="10" pos:column="54">
		<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="17">operating_mode<pos:position pos:line="11" pos:column="31"/></name> <operator pos:line="11" pos:column="32">=<pos:position pos:line="11" pos:column="33"/></operator> <name pos:line="11" pos:column="34">MODE_LOCAL<pos:position pos:line="11" pos:column="44"/></name></expr>;<pos:position pos:line="11" pos:column="45"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="12" pos:column="9">else <if pos:line="12" pos:column="14">if <condition pos:line="12" pos:column="17">(<expr><call><name pos:line="12" pos:column="18">strcasecmp<pos:position pos:line="12" pos:column="28"/></name> <argument_list pos:line="12" pos:column="29">(<argument><expr><name pos:line="12" pos:column="30">shortvar<pos:position pos:line="12" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="40">"Server"<pos:position pos:line="12" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="49"/></argument_list></call> <operator pos:line="12" pos:column="50">==<pos:position pos:line="12" pos:column="52"/></operator> <literal type="number" pos:line="12" pos:column="53">0<pos:position pos:line="12" pos:column="54"/></literal></expr>)<pos:position pos:line="12" pos:column="55"/></condition><then pos:line="12" pos:column="55">
		<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="17">operating_mode<pos:position pos:line="13" pos:column="31"/></name> <operator pos:line="13" pos:column="32">=<pos:position pos:line="13" pos:column="33"/></operator> <name pos:line="13" pos:column="34">MODE_SERVER<pos:position pos:line="13" pos:column="45"/></name></expr>;<pos:position pos:line="13" pos:column="46"/></expr_stmt></block></then></if></elseif>
	<else pos:line="14" pos:column="9">else
	<block pos:line="15" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">fprintf<pos:position pos:line="16" pos:column="24"/></name> <argument_list pos:line="16" pos:column="25">(<argument><expr><name pos:line="16" pos:column="26">stderr<pos:position pos:line="16" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="34">"cf_callback_mode_switch: Wrong mode!\n"<pos:position pos:line="16" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="76"/></expr_stmt>
		<return pos:line="17" pos:column="17">return <expr><operator pos:line="17" pos:column="24">(<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="25">LC_CBRET_ERROR<pos:position pos:line="17" pos:column="39"/></name><operator pos:line="17" pos:column="39">)<pos:position pos:line="17" pos:column="40"/></operator></expr>;<pos:position pos:line="17" pos:column="41"/></return>
	}<pos:position pos:line="18" pos:column="10"/></block></else></if>

	<return pos:line="20" pos:column="9">return <expr><operator pos:line="20" pos:column="16">(<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="17">LC_CBRET_OKAY<pos:position pos:line="20" pos:column="30"/></name><operator pos:line="20" pos:column="30">)<pos:position pos:line="20" pos:column="31"/></operator></expr>;<pos:position pos:line="20" pos:column="32"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

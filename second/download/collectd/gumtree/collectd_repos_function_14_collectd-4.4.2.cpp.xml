<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_14_collectd-4.4.2.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">lt_dlmutex_register<pos:position pos:line="2" pos:column="20"/></name> <argument_list pos:line="2" pos:column="21">(<argument><expr><name pos:line="2" pos:column="22">lock<pos:position pos:line="2" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="28">unlock<pos:position pos:line="2" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="36">seterror<pos:position pos:line="2" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="46">geterror<pos:position pos:line="2" pos:column="54"/></name></expr></argument>)<pos:position pos:line="2" pos:column="55"/></argument_list>
     <name pos:line="3" pos:column="6">lt_dlmutex_lock<pos:position pos:line="3" pos:column="21"/></name> <modifier pos:line="3" pos:column="22">*<pos:position pos:line="3" pos:column="23"/></modifier><name pos:line="3" pos:column="23">lock<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
     <decl_stmt><decl><type><name pos:line="4" pos:column="6">lt_dlmutex_unlock<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">unlock<pos:position pos:line="4" pos:column="31"/></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
     <decl_stmt><decl><type><name pos:line="5" pos:column="6">lt_dlmutex_seterror<pos:position pos:line="5" pos:column="25"/></name> <modifier pos:line="5" pos:column="26">*<pos:position pos:line="5" pos:column="27"/></modifier></type><name pos:line="5" pos:column="27">seterror<pos:position pos:line="5" pos:column="35"/></name></decl>;<pos:position pos:line="5" pos:column="36"/></decl_stmt>
     <decl_stmt><decl><type><name pos:line="6" pos:column="6">lt_dlmutex_geterror<pos:position pos:line="6" pos:column="25"/></name> <modifier pos:line="6" pos:column="26">*<pos:position pos:line="6" pos:column="27"/></modifier></type><name pos:line="6" pos:column="27">geterror<pos:position pos:line="6" pos:column="35"/></name></decl>;<pos:position pos:line="6" pos:column="36"/></decl_stmt>
<block pos:line="7" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">lt_dlmutex_unlock<pos:position pos:line="8" pos:column="20"/></name> <modifier pos:line="8" pos:column="21">*<pos:position pos:line="8" pos:column="22"/></modifier></type><name pos:line="8" pos:column="22">old_unlock<pos:position pos:line="8" pos:column="32"/></name> <init pos:line="8" pos:column="33">= <expr><name pos:line="8" pos:column="35">lt_dlmutex_unlock_func<pos:position pos:line="8" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="58"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type>		     <name pos:line="9" pos:column="22">errors<pos:position pos:line="9" pos:column="28"/></name>	<init pos:line="9" pos:column="33">= <expr><literal type="number" pos:line="9" pos:column="35">0<pos:position pos:line="9" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="37"/></decl_stmt>

  <comment type="block" pos:line="11" pos:column="3">/* Lock using the old lock() callback, if any.  */</comment>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">LT_DLMUTEX_LOCK<pos:position pos:line="12" pos:column="18"/></name> <argument_list pos:line="12" pos:column="19">()<pos:position pos:line="12" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="22"/></expr_stmt>

  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><operator pos:line="14" pos:column="7">(<pos:position pos:line="14" pos:column="8"/></operator><name pos:line="14" pos:column="8">lock<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">&amp;&amp;<pos:position pos:line="14" pos:column="23"/></operator> <name pos:line="14" pos:column="16">unlock<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">&amp;&amp;<pos:position pos:line="14" pos:column="33"/></operator> <name pos:line="14" pos:column="26">seterror<pos:position pos:line="14" pos:column="34"/></name> <operator pos:line="14" pos:column="35">&amp;&amp;<pos:position pos:line="14" pos:column="45"/></operator> <name pos:line="14" pos:column="38">geterror<pos:position pos:line="14" pos:column="46"/></name><operator pos:line="14" pos:column="46">)<pos:position pos:line="14" pos:column="47"/></operator>
      <operator pos:line="15" pos:column="7">||<pos:position pos:line="15" pos:column="9"/></operator> <operator pos:line="15" pos:column="10">!<pos:position pos:line="15" pos:column="11"/></operator><operator pos:line="15" pos:column="11">(<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="12">lock<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">||<pos:position pos:line="15" pos:column="19"/></operator> <name pos:line="15" pos:column="20">unlock<pos:position pos:line="15" pos:column="26"/></name> <operator pos:line="15" pos:column="27">||<pos:position pos:line="15" pos:column="29"/></operator> <name pos:line="15" pos:column="30">seterror<pos:position pos:line="15" pos:column="38"/></name> <operator pos:line="15" pos:column="39">||<pos:position pos:line="15" pos:column="41"/></operator> <name pos:line="15" pos:column="42">geterror<pos:position pos:line="15" pos:column="50"/></name><operator pos:line="15" pos:column="50">)<pos:position pos:line="15" pos:column="51"/></operator></expr>)<pos:position pos:line="15" pos:column="52"/></condition><then pos:line="15" pos:column="52">
    <block pos:line="16" pos:column="5">{
      <expr_stmt><expr><name pos:line="17" pos:column="7">lt_dlmutex_lock_func<pos:position pos:line="17" pos:column="27"/></name>     <operator pos:line="17" pos:column="32">=<pos:position pos:line="17" pos:column="33"/></operator> <name pos:line="17" pos:column="34">lock<pos:position pos:line="17" pos:column="38"/></name></expr>;<pos:position pos:line="17" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><name pos:line="18" pos:column="7">lt_dlmutex_unlock_func<pos:position pos:line="18" pos:column="29"/></name>   <operator pos:line="18" pos:column="32">=<pos:position pos:line="18" pos:column="33"/></operator> <name pos:line="18" pos:column="34">unlock<pos:position pos:line="18" pos:column="40"/></name></expr>;<pos:position pos:line="18" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><name pos:line="19" pos:column="7">lt_dlmutex_seterror_func<pos:position pos:line="19" pos:column="31"/></name> <operator pos:line="19" pos:column="32">=<pos:position pos:line="19" pos:column="33"/></operator> <name pos:line="19" pos:column="34">seterror<pos:position pos:line="19" pos:column="42"/></name></expr>;<pos:position pos:line="19" pos:column="43"/></expr_stmt>
      <expr_stmt><expr><name pos:line="20" pos:column="7">lt_dlmutex_geterror_func<pos:position pos:line="20" pos:column="31"/></name> <operator pos:line="20" pos:column="32">=<pos:position pos:line="20" pos:column="33"/></operator> <name pos:line="20" pos:column="34">geterror<pos:position pos:line="20" pos:column="42"/></name></expr>;<pos:position pos:line="20" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></then>
  <else pos:line="22" pos:column="3">else
    <block pos:line="23" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="24" pos:column="7">LT_DLMUTEX_SETERROR<pos:position pos:line="24" pos:column="26"/></name> <argument_list pos:line="24" pos:column="27">(<argument><expr><call><name pos:line="24" pos:column="28">LT_DLSTRERROR<pos:position pos:line="24" pos:column="41"/></name> <argument_list pos:line="24" pos:column="42">(<argument><expr><name pos:line="24" pos:column="43">INVALID_MUTEX_ARGS<pos:position pos:line="24" pos:column="61"/></name></expr></argument>)<pos:position pos:line="24" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="64"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="25" pos:column="7">++<pos:position pos:line="25" pos:column="9"/></operator><name pos:line="25" pos:column="9">errors<pos:position pos:line="25" pos:column="15"/></name></expr>;<pos:position pos:line="25" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></else></if>

  <comment type="block" pos:line="28" pos:column="3">/* Use the old unlock() callback we saved earlier, if any.  Otherwise
     record any errors using internal storage.  */</comment>
  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><name pos:line="30" pos:column="7">old_unlock<pos:position pos:line="30" pos:column="17"/></name></expr>)<pos:position pos:line="30" pos:column="18"/></condition><then pos:line="30" pos:column="18">
    <block type="pseudo"><expr_stmt><expr><call pos:line="31" pos:column="5">(<modifier pos:line="31" pos:column="6">*<pos:position pos:line="31" pos:column="7"/></modifier><name pos:line="31" pos:column="7">old_unlock<pos:position pos:line="31" pos:column="17"/></name>) <argument_list pos:line="31" pos:column="19">()<pos:position pos:line="31" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="22"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="33" pos:column="3">/* Return the number of errors encountered during the execution of
     this function.  */</comment>
  <return pos:line="35" pos:column="3">return <expr><name pos:line="35" pos:column="10">errors<pos:position pos:line="35" pos:column="16"/></name></expr>;<pos:position pos:line="35" pos:column="17"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></unit>

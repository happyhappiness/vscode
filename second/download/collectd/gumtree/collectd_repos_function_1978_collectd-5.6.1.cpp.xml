<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1978_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">PyObject<pos:position pos:line="1" pos:column="16"/></name> <modifier pos:line="1" pos:column="17">*<pos:position pos:line="1" pos:column="18"/></modifier></type><name pos:line="1" pos:column="18">float_or_none<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">float<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">number<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list> <block pos:line="1" pos:column="46">{
	<if pos:line="2" pos:column="9">if <condition pos:line="2" pos:column="12">(<expr><call><name pos:line="2" pos:column="13">isnan<pos:position pos:line="2" pos:column="18"/></name><argument_list pos:line="2" pos:column="18">(<argument><expr><name pos:line="2" pos:column="19">number<pos:position pos:line="2" pos:column="25"/></name></expr></argument>)<pos:position pos:line="2" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="2" pos:column="27"/></condition><then pos:line="2" pos:column="27"> <block pos:line="2" pos:column="28">{
		<expr_stmt><expr><name pos:line="3" pos:column="17">Py_RETURN_NONE<pos:position pos:line="3" pos:column="31"/></name></expr>;<pos:position pos:line="3" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="4" pos:column="10"/></block></then></if>
	<return pos:line="5" pos:column="9">return <expr><call><name pos:line="5" pos:column="16">PyFloat_FromDouble<pos:position pos:line="5" pos:column="34"/></name><argument_list pos:line="5" pos:column="34">(<argument><expr><name pos:line="5" pos:column="35">number<pos:position pos:line="5" pos:column="41"/></name></expr></argument>)<pos:position pos:line="5" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="43"/></return>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

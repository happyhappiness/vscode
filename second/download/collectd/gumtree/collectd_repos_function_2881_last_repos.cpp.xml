<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2881_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">plugin_register_write<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">name<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">plugin_write_cb<pos:position pos:line="1" pos:column="60"/></name></type> <name pos:line="1" pos:column="61">callback<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="2" pos:column="27">user_data_t<pos:position pos:line="2" pos:column="38"/></name> <specifier pos:line="2" pos:column="39">const<pos:position pos:line="2" pos:column="44"/></specifier> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">ud<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="49"/></parameter_list> <block pos:line="2" pos:column="50">{
  <return pos:line="3" pos:column="3">return <expr><call><name pos:line="3" pos:column="10">create_register_callback<pos:position pos:line="3" pos:column="34"/></name><argument_list pos:line="3" pos:column="34">(<argument><expr><operator pos:line="3" pos:column="35">&amp;<pos:position pos:line="3" pos:column="40"/></operator><name pos:line="3" pos:column="36">list_write<pos:position pos:line="3" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="48">name<pos:position pos:line="3" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="3" pos:column="54">(<pos:position pos:line="3" pos:column="55"/></operator><name pos:line="3" pos:column="55">void<pos:position pos:line="3" pos:column="59"/></name> <operator pos:line="3" pos:column="60">*<pos:position pos:line="3" pos:column="61"/></operator><operator pos:line="3" pos:column="61">)<pos:position pos:line="3" pos:column="62"/></operator><name pos:line="3" pos:column="62">callback<pos:position pos:line="3" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="72">ud<pos:position pos:line="3" pos:column="74"/></name></expr></argument>)<pos:position pos:line="3" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="76"/></return>
}<pos:position pos:line="4" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1076_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">mcelog_submit<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">mcelog_memory_rec_t<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">mr<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list> <block pos:line="1" pos:column="57">{

  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><operator pos:line="3" pos:column="7">!<pos:position pos:line="3" pos:column="8"/></operator><name pos:line="3" pos:column="8">mr<pos:position pos:line="3" pos:column="10"/></name></expr>)<pos:position pos:line="3" pos:column="11"/></condition><then pos:line="3" pos:column="11"> <block pos:line="3" pos:column="12">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">ERROR<pos:position pos:line="4" pos:column="10"/></name><argument_list pos:line="4" pos:column="10">(<argument><expr><name pos:line="4" pos:column="11">MCELOG_PLUGIN<pos:position pos:line="4" pos:column="24"/></name> <literal type="string" pos:line="4" pos:column="25">": %s: NULL pointer"<pos:position pos:line="4" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="47">__FUNCTION__<pos:position pos:line="4" pos:column="59"/></name></expr></argument>)<pos:position pos:line="4" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="61"/></expr_stmt>
    <return pos:line="5" pos:column="5">return <expr><operator pos:line="5" pos:column="12">-<pos:position pos:line="5" pos:column="13"/></operator><literal type="number" pos:line="5" pos:column="13">1<pos:position pos:line="5" pos:column="14"/></literal></expr>;<pos:position pos:line="5" pos:column="15"/></return>
  }<pos:position pos:line="6" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name pos:line="8" pos:column="3">llentry_t<pos:position pos:line="8" pos:column="12"/></name> <modifier pos:line="8" pos:column="13">*<pos:position pos:line="8" pos:column="14"/></modifier></type><name pos:line="8" pos:column="14">dimm<pos:position pos:line="8" pos:column="18"/></name> <init pos:line="8" pos:column="19">= <expr><call><name pos:line="8" pos:column="21">mcelog_dimm<pos:position pos:line="8" pos:column="32"/></name><argument_list pos:line="8" pos:column="32">(<argument><expr><name pos:line="8" pos:column="33">mr<pos:position pos:line="8" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="37">g_mcelog_config<pos:position pos:line="8" pos:column="52"/></name><operator pos:line="8" pos:column="52">.<pos:position pos:line="8" pos:column="53"/></operator><name pos:line="8" pos:column="53">dimms_list<pos:position pos:line="8" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="65"/></decl_stmt>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">dimm<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">==<pos:position pos:line="9" pos:column="14"/></operator> <name pos:line="9" pos:column="15">NULL<pos:position pos:line="9" pos:column="19"/></name></expr>)<pos:position pos:line="9" pos:column="20"/></condition><then pos:line="9" pos:column="20"> <block pos:line="9" pos:column="21">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">ERROR<pos:position pos:line="10" pos:column="10"/></name><argument_list pos:line="10" pos:column="10">(<argument><expr><name pos:line="10" pos:column="11">MCELOG_PLUGIN<pos:position pos:line="10" pos:column="24"/></name>
          <literal type="string" pos:line="11" pos:column="11">": Error adding/getting dimm memory item to/from cache"<pos:position pos:line="11" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="68"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">-<pos:position pos:line="12" pos:column="13"/></operator><literal type="number" pos:line="12" pos:column="13">1<pos:position pos:line="12" pos:column="14"/></literal></expr>;<pos:position pos:line="12" pos:column="15"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name pos:line="15" pos:column="3">value_list_t<pos:position pos:line="15" pos:column="15"/></name></type> <name pos:line="15" pos:column="16">vl<pos:position pos:line="15" pos:column="18"/></name> <init pos:line="15" pos:column="19">= <expr><block pos:line="15" pos:column="21">{
      <expr><operator pos:line="16" pos:column="7">.<pos:position pos:line="16" pos:column="8"/></operator><name pos:line="16" pos:column="8">values_len<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">=<pos:position pos:line="16" pos:column="20"/></operator> <literal type="number" pos:line="16" pos:column="21">1<pos:position pos:line="16" pos:column="22"/></literal></expr>,
      <expr><operator pos:line="17" pos:column="7">.<pos:position pos:line="17" pos:column="8"/></operator><name pos:line="17" pos:column="8">values<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">=<pos:position pos:line="17" pos:column="16"/></operator> <operator pos:line="17" pos:column="17">&amp;<pos:position pos:line="17" pos:column="22"/></operator><operator pos:line="17" pos:column="18">(<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="19">value_t<pos:position pos:line="17" pos:column="26"/></name><operator pos:line="17" pos:column="26">)<pos:position pos:line="17" pos:column="27"/></operator><block pos:line="17" pos:column="27">{<expr><operator pos:line="17" pos:column="28">.<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="29">derive<pos:position pos:line="17" pos:column="35"/></name> <operator pos:line="17" pos:column="36">=<pos:position pos:line="17" pos:column="37"/></operator> <operator pos:line="17" pos:column="38">(<pos:position pos:line="17" pos:column="39"/></operator><name pos:line="17" pos:column="39">derive_t<pos:position pos:line="17" pos:column="47"/></name><operator pos:line="17" pos:column="47">)<pos:position pos:line="17" pos:column="48"/></operator><name><name pos:line="17" pos:column="48">mr<pos:position pos:line="17" pos:column="50"/></name><operator pos:line="17" pos:column="50">-&gt;<pos:position pos:line="17" pos:column="55"/></operator><name pos:line="17" pos:column="52">corrected_err_total<pos:position pos:line="17" pos:column="71"/></name></name></expr>}<pos:position pos:line="17" pos:column="72"/></block></expr>,
      <expr><operator pos:line="18" pos:column="7">.<pos:position pos:line="18" pos:column="8"/></operator><name pos:line="18" pos:column="8">time<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <call><name pos:line="18" pos:column="15">cdtime<pos:position pos:line="18" pos:column="21"/></name><argument_list pos:line="18" pos:column="21">()<pos:position pos:line="18" pos:column="23"/></argument_list></call></expr>,
      <expr><operator pos:line="19" pos:column="7">.<pos:position pos:line="19" pos:column="8"/></operator><name pos:line="19" pos:column="8">plugin<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">=<pos:position pos:line="19" pos:column="16"/></operator> <name pos:line="19" pos:column="17">MCELOG_PLUGIN<pos:position pos:line="19" pos:column="30"/></name></expr>,
      <expr><operator pos:line="20" pos:column="7">.<pos:position pos:line="20" pos:column="8"/></operator><name pos:line="20" pos:column="8">type<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <literal type="string" pos:line="20" pos:column="15">"errors"<pos:position pos:line="20" pos:column="23"/></literal></expr>,
      <expr><operator pos:line="21" pos:column="7">.<pos:position pos:line="21" pos:column="8"/></operator><name pos:line="21" pos:column="8">type_instance<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">=<pos:position pos:line="21" pos:column="23"/></operator> <name pos:line="21" pos:column="24">MCELOG_CORRECTED_ERR_TYPE_INS<pos:position pos:line="21" pos:column="53"/></name></expr>}<pos:position pos:line="21" pos:column="54"/></block></expr></init></decl>;<pos:position pos:line="21" pos:column="55"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="23" pos:column="3">mcelog_update_dimm_stats<pos:position pos:line="23" pos:column="27"/></name><argument_list pos:line="23" pos:column="27">(<argument><expr><name pos:line="23" pos:column="28">dimm<pos:position pos:line="23" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="34">mr<pos:position pos:line="23" pos:column="36"/></name></expr></argument>)<pos:position pos:line="23" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="38"/></expr_stmt>

  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><name><name pos:line="25" pos:column="7">mr<pos:position pos:line="25" pos:column="9"/></name><operator pos:line="25" pos:column="9">-&gt;<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="11">dimm_name<pos:position pos:line="25" pos:column="20"/></name><index pos:line="25" pos:column="20">[<expr><literal type="number" pos:line="25" pos:column="21">0<pos:position pos:line="25" pos:column="22"/></literal></expr>]<pos:position pos:line="25" pos:column="23"/></index></name> <operator pos:line="25" pos:column="24">!=<pos:position pos:line="25" pos:column="26"/></operator> <literal type="char" pos:line="25" pos:column="27">'\0'<pos:position pos:line="25" pos:column="31"/></literal></expr>)<pos:position pos:line="25" pos:column="32"/></condition><then pos:line="25" pos:column="32">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="5">snprintf<pos:position pos:line="26" pos:column="13"/></name><argument_list pos:line="26" pos:column="13">(<argument><expr><name><name pos:line="26" pos:column="14">vl<pos:position pos:line="26" pos:column="16"/></name><operator pos:line="26" pos:column="16">.<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="17">plugin_instance<pos:position pos:line="26" pos:column="32"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="34">sizeof<argument_list pos:line="26" pos:column="40">(<argument><expr><name><name pos:line="26" pos:column="41">vl<pos:position pos:line="26" pos:column="43"/></name><operator pos:line="26" pos:column="43">.<pos:position pos:line="26" pos:column="44"/></operator><name pos:line="26" pos:column="44">plugin_instance<pos:position pos:line="26" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="60"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="62">"%s_%s"<pos:position pos:line="26" pos:column="69"/></literal></expr></argument>,
             <argument><expr><name><name pos:line="27" pos:column="14">mr<pos:position pos:line="27" pos:column="16"/></name><operator pos:line="27" pos:column="16">-&gt;<pos:position pos:line="27" pos:column="21"/></operator><name pos:line="27" pos:column="18">location<pos:position pos:line="27" pos:column="26"/></name></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="28">mr<pos:position pos:line="27" pos:column="30"/></name><operator pos:line="27" pos:column="30">-&gt;<pos:position pos:line="27" pos:column="35"/></operator><name pos:line="27" pos:column="32">dimm_name<pos:position pos:line="27" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="43"/></expr_stmt></block></then>
  <else pos:line="28" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="5">sstrncpy<pos:position pos:line="29" pos:column="13"/></name><argument_list pos:line="29" pos:column="13">(<argument><expr><name><name pos:line="29" pos:column="14">vl<pos:position pos:line="29" pos:column="16"/></name><operator pos:line="29" pos:column="16">.<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="17">plugin_instance<pos:position pos:line="29" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="34">mr<pos:position pos:line="29" pos:column="36"/></name><operator pos:line="29" pos:column="36">-&gt;<pos:position pos:line="29" pos:column="41"/></operator><name pos:line="29" pos:column="38">location<pos:position pos:line="29" pos:column="46"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="48">sizeof<argument_list pos:line="29" pos:column="54">(<argument><expr><name><name pos:line="29" pos:column="55">vl<pos:position pos:line="29" pos:column="57"/></name><operator pos:line="29" pos:column="57">.<pos:position pos:line="29" pos:column="58"/></operator><name pos:line="29" pos:column="58">plugin_instance<pos:position pos:line="29" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="76"/></expr_stmt></block></else></if>

  <expr_stmt><expr><call><name pos:line="31" pos:column="3">plugin_dispatch_values<pos:position pos:line="31" pos:column="25"/></name><argument_list pos:line="31" pos:column="25">(<argument><expr><operator pos:line="31" pos:column="26">&amp;<pos:position pos:line="31" pos:column="31"/></operator><name pos:line="31" pos:column="27">vl<pos:position pos:line="31" pos:column="29"/></name></expr></argument>)<pos:position pos:line="31" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="31"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="33" pos:column="3">snprintf<pos:position pos:line="33" pos:column="11"/></name><argument_list pos:line="33" pos:column="11">(<argument><expr><name><name pos:line="33" pos:column="12">vl<pos:position pos:line="33" pos:column="14"/></name><operator pos:line="33" pos:column="14">.<pos:position pos:line="33" pos:column="15"/></operator><name pos:line="33" pos:column="15">type_instance<pos:position pos:line="33" pos:column="28"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="30">sizeof<argument_list pos:line="33" pos:column="36">(<argument><expr><name><name pos:line="33" pos:column="37">vl<pos:position pos:line="33" pos:column="39"/></name><operator pos:line="33" pos:column="39">.<pos:position pos:line="33" pos:column="40"/></operator><name pos:line="33" pos:column="40">type_instance<pos:position pos:line="33" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="54"/></argument_list></sizeof></expr></argument>,
           <argument><expr><literal type="string" pos:line="34" pos:column="12">"corrected_memory_errors_in_%s"<pos:position pos:line="34" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="45">mr<pos:position pos:line="34" pos:column="47"/></name><operator pos:line="34" pos:column="47">-&gt;<pos:position pos:line="34" pos:column="52"/></operator><name pos:line="34" pos:column="49">corrected_err_timed_period<pos:position pos:line="34" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="77"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="35" pos:column="3">vl<pos:position pos:line="35" pos:column="5"/></name><operator pos:line="35" pos:column="5">.<pos:position pos:line="35" pos:column="6"/></operator><name pos:line="35" pos:column="6">values<pos:position pos:line="35" pos:column="12"/></name></name> <operator pos:line="35" pos:column="13">=<pos:position pos:line="35" pos:column="14"/></operator> <operator pos:line="35" pos:column="15">&amp;<pos:position pos:line="35" pos:column="20"/></operator><operator pos:line="35" pos:column="16">(<pos:position pos:line="35" pos:column="17"/></operator><name pos:line="35" pos:column="17">value_t<pos:position pos:line="35" pos:column="24"/></name><operator pos:line="35" pos:column="24">)<pos:position pos:line="35" pos:column="25"/></operator><block pos:line="35" pos:column="25">{<expr><operator pos:line="35" pos:column="26">.<pos:position pos:line="35" pos:column="27"/></operator><name pos:line="35" pos:column="27">derive<pos:position pos:line="35" pos:column="33"/></name> <operator pos:line="35" pos:column="34">=<pos:position pos:line="35" pos:column="35"/></operator> <operator pos:line="35" pos:column="36">(<pos:position pos:line="35" pos:column="37"/></operator><name pos:line="35" pos:column="37">derive_t<pos:position pos:line="35" pos:column="45"/></name><operator pos:line="35" pos:column="45">)<pos:position pos:line="35" pos:column="46"/></operator><name><name pos:line="35" pos:column="46">mr<pos:position pos:line="35" pos:column="48"/></name><operator pos:line="35" pos:column="48">-&gt;<pos:position pos:line="35" pos:column="53"/></operator><name pos:line="35" pos:column="50">corrected_err_timed<pos:position pos:line="35" pos:column="69"/></name></name></expr>}<pos:position pos:line="35" pos:column="70"/></block></expr>;<pos:position pos:line="35" pos:column="71"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="36" pos:column="3">plugin_dispatch_values<pos:position pos:line="36" pos:column="25"/></name><argument_list pos:line="36" pos:column="25">(<argument><expr><operator pos:line="36" pos:column="26">&amp;<pos:position pos:line="36" pos:column="31"/></operator><name pos:line="36" pos:column="27">vl<pos:position pos:line="36" pos:column="29"/></name></expr></argument>)<pos:position pos:line="36" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="31"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="38" pos:column="3">sstrncpy<pos:position pos:line="38" pos:column="11"/></name><argument_list pos:line="38" pos:column="11">(<argument><expr><name><name pos:line="38" pos:column="12">vl<pos:position pos:line="38" pos:column="14"/></name><operator pos:line="38" pos:column="14">.<pos:position pos:line="38" pos:column="15"/></operator><name pos:line="38" pos:column="15">type_instance<pos:position pos:line="38" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="30">MCELOG_UNCORRECTED_ERR_TYPE_INS<pos:position pos:line="38" pos:column="61"/></name></expr></argument>,
           <argument><expr><sizeof pos:line="39" pos:column="12">sizeof<argument_list pos:line="39" pos:column="18">(<argument><expr><name><name pos:line="39" pos:column="19">vl<pos:position pos:line="39" pos:column="21"/></name><operator pos:line="39" pos:column="21">.<pos:position pos:line="39" pos:column="22"/></operator><name pos:line="39" pos:column="22">type_instance<pos:position pos:line="39" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="39" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="40" pos:column="3">vl<pos:position pos:line="40" pos:column="5"/></name><operator pos:line="40" pos:column="5">.<pos:position pos:line="40" pos:column="6"/></operator><name pos:line="40" pos:column="6">values<pos:position pos:line="40" pos:column="12"/></name></name> <operator pos:line="40" pos:column="13">=<pos:position pos:line="40" pos:column="14"/></operator> <operator pos:line="40" pos:column="15">&amp;<pos:position pos:line="40" pos:column="20"/></operator><operator pos:line="40" pos:column="16">(<pos:position pos:line="40" pos:column="17"/></operator><name pos:line="40" pos:column="17">value_t<pos:position pos:line="40" pos:column="24"/></name><operator pos:line="40" pos:column="24">)<pos:position pos:line="40" pos:column="25"/></operator><block pos:line="40" pos:column="25">{<expr><operator pos:line="40" pos:column="26">.<pos:position pos:line="40" pos:column="27"/></operator><name pos:line="40" pos:column="27">derive<pos:position pos:line="40" pos:column="33"/></name> <operator pos:line="40" pos:column="34">=<pos:position pos:line="40" pos:column="35"/></operator> <operator pos:line="40" pos:column="36">(<pos:position pos:line="40" pos:column="37"/></operator><name pos:line="40" pos:column="37">derive_t<pos:position pos:line="40" pos:column="45"/></name><operator pos:line="40" pos:column="45">)<pos:position pos:line="40" pos:column="46"/></operator><name><name pos:line="40" pos:column="46">mr<pos:position pos:line="40" pos:column="48"/></name><operator pos:line="40" pos:column="48">-&gt;<pos:position pos:line="40" pos:column="53"/></operator><name pos:line="40" pos:column="50">uncorrected_err_total<pos:position pos:line="40" pos:column="71"/></name></name></expr>}<pos:position pos:line="40" pos:column="72"/></block></expr>;<pos:position pos:line="40" pos:column="73"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="41" pos:column="3">plugin_dispatch_values<pos:position pos:line="41" pos:column="25"/></name><argument_list pos:line="41" pos:column="25">(<argument><expr><operator pos:line="41" pos:column="26">&amp;<pos:position pos:line="41" pos:column="31"/></operator><name pos:line="41" pos:column="27">vl<pos:position pos:line="41" pos:column="29"/></name></expr></argument>)<pos:position pos:line="41" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="31"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="43" pos:column="3">snprintf<pos:position pos:line="43" pos:column="11"/></name><argument_list pos:line="43" pos:column="11">(<argument><expr><name><name pos:line="43" pos:column="12">vl<pos:position pos:line="43" pos:column="14"/></name><operator pos:line="43" pos:column="14">.<pos:position pos:line="43" pos:column="15"/></operator><name pos:line="43" pos:column="15">type_instance<pos:position pos:line="43" pos:column="28"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="43" pos:column="30">sizeof<argument_list pos:line="43" pos:column="36">(<argument><expr><name><name pos:line="43" pos:column="37">vl<pos:position pos:line="43" pos:column="39"/></name><operator pos:line="43" pos:column="39">.<pos:position pos:line="43" pos:column="40"/></operator><name pos:line="43" pos:column="40">type_instance<pos:position pos:line="43" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="54"/></argument_list></sizeof></expr></argument>,
           <argument><expr><literal type="string" pos:line="44" pos:column="12">"uncorrected_memory_errors_in_%s"<pos:position pos:line="44" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="47">mr<pos:position pos:line="44" pos:column="49"/></name><operator pos:line="44" pos:column="49">-&gt;<pos:position pos:line="44" pos:column="54"/></operator><name pos:line="44" pos:column="51">uncorrected_err_timed_period<pos:position pos:line="44" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="81"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="45" pos:column="3">vl<pos:position pos:line="45" pos:column="5"/></name><operator pos:line="45" pos:column="5">.<pos:position pos:line="45" pos:column="6"/></operator><name pos:line="45" pos:column="6">values<pos:position pos:line="45" pos:column="12"/></name></name> <operator pos:line="45" pos:column="13">=<pos:position pos:line="45" pos:column="14"/></operator> <operator pos:line="45" pos:column="15">&amp;<pos:position pos:line="45" pos:column="20"/></operator><operator pos:line="45" pos:column="16">(<pos:position pos:line="45" pos:column="17"/></operator><name pos:line="45" pos:column="17">value_t<pos:position pos:line="45" pos:column="24"/></name><operator pos:line="45" pos:column="24">)<pos:position pos:line="45" pos:column="25"/></operator><block pos:line="45" pos:column="25">{<expr><operator pos:line="45" pos:column="26">.<pos:position pos:line="45" pos:column="27"/></operator><name pos:line="45" pos:column="27">derive<pos:position pos:line="45" pos:column="33"/></name> <operator pos:line="45" pos:column="34">=<pos:position pos:line="45" pos:column="35"/></operator> <operator pos:line="45" pos:column="36">(<pos:position pos:line="45" pos:column="37"/></operator><name pos:line="45" pos:column="37">derive_t<pos:position pos:line="45" pos:column="45"/></name><operator pos:line="45" pos:column="45">)<pos:position pos:line="45" pos:column="46"/></operator><name><name pos:line="45" pos:column="46">mr<pos:position pos:line="45" pos:column="48"/></name><operator pos:line="45" pos:column="48">-&gt;<pos:position pos:line="45" pos:column="53"/></operator><name pos:line="45" pos:column="50">uncorrected_err_timed<pos:position pos:line="45" pos:column="71"/></name></name></expr>}<pos:position pos:line="45" pos:column="72"/></block></expr>;<pos:position pos:line="45" pos:column="73"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="46" pos:column="3">plugin_dispatch_values<pos:position pos:line="46" pos:column="25"/></name><argument_list pos:line="46" pos:column="25">(<argument><expr><operator pos:line="46" pos:column="26">&amp;<pos:position pos:line="46" pos:column="31"/></operator><name pos:line="46" pos:column="27">vl<pos:position pos:line="46" pos:column="29"/></name></expr></argument>)<pos:position pos:line="46" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="31"/></expr_stmt>

  <return pos:line="48" pos:column="3">return <expr><literal type="number" pos:line="48" pos:column="10">0<pos:position pos:line="48" pos:column="11"/></literal></expr>;<pos:position pos:line="48" pos:column="12"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

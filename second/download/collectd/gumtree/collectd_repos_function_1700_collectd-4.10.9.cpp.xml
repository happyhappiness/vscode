<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1700_collectd-4.10.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cj_get_type<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">cj_key_t<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">key<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="39"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">data_set_t<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">ds<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>

  <expr_stmt><expr><name pos:line="5" pos:column="3">ds<pos:position pos:line="5" pos:column="5"/></name> <operator pos:line="5" pos:column="6">=<pos:position pos:line="5" pos:column="7"/></operator> <call><name pos:line="5" pos:column="8">plugin_get_ds<pos:position pos:line="5" pos:column="21"/></name> <argument_list pos:line="5" pos:column="22">(<argument><expr><name><name pos:line="5" pos:column="23">key<pos:position pos:line="5" pos:column="26"/></name><operator pos:line="5" pos:column="26">-&gt;<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="28">type<pos:position pos:line="5" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="34"/></expr_stmt>
  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">ds<pos:position pos:line="6" pos:column="9"/></name> <operator pos:line="6" pos:column="10">==<pos:position pos:line="6" pos:column="12"/></operator> <name pos:line="6" pos:column="13">NULL<pos:position pos:line="6" pos:column="17"/></name></expr>)<pos:position pos:line="6" pos:column="18"/></condition><then pos:line="6" pos:column="18">
  <block pos:line="7" pos:column="3">{
    <decl_stmt><decl><specifier pos:line="8" pos:column="5">static<pos:position pos:line="8" pos:column="11"/></specifier> <type><name pos:line="8" pos:column="12">char<pos:position pos:line="8" pos:column="16"/></name></type> <name><name pos:line="8" pos:column="17">type<pos:position pos:line="8" pos:column="21"/></name><index pos:line="8" pos:column="21">[<expr><name pos:line="8" pos:column="22">DATA_MAX_NAME_LEN<pos:position pos:line="8" pos:column="39"/></name></expr>]<pos:position pos:line="8" pos:column="40"/></index></name> <init pos:line="8" pos:column="41">= <expr><literal type="string" pos:line="8" pos:column="43">"!!!invalid!!!"<pos:position pos:line="8" pos:column="58"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="59"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="10" pos:column="5">assert<pos:position pos:line="10" pos:column="11"/></name> <argument_list pos:line="10" pos:column="12">(<argument><expr><name><name pos:line="10" pos:column="13">key<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">-&gt;<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="18">type<pos:position pos:line="10" pos:column="22"/></name></name> <operator pos:line="10" pos:column="23">!=<pos:position pos:line="10" pos:column="25"/></operator> <name pos:line="10" pos:column="26">NULL<pos:position pos:line="10" pos:column="30"/></name></expr></argument>)<pos:position pos:line="10" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="32"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><call><name pos:line="11" pos:column="9">strcmp<pos:position pos:line="11" pos:column="15"/></name> <argument_list pos:line="11" pos:column="16">(<argument><expr><name pos:line="11" pos:column="17">type<pos:position pos:line="11" pos:column="21"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="23">key<pos:position pos:line="11" pos:column="26"/></name><operator pos:line="11" pos:column="26">-&gt;<pos:position pos:line="11" pos:column="31"/></operator><name pos:line="11" pos:column="28">type<pos:position pos:line="11" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="33"/></argument_list></call> <operator pos:line="11" pos:column="34">!=<pos:position pos:line="11" pos:column="36"/></operator> <literal type="number" pos:line="11" pos:column="37">0<pos:position pos:line="11" pos:column="38"/></literal></expr>)<pos:position pos:line="11" pos:column="39"/></condition><then pos:line="11" pos:column="39">
    <block pos:line="12" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="13" pos:column="7">ERROR<pos:position pos:line="13" pos:column="12"/></name> <argument_list pos:line="13" pos:column="13">(<argument><expr><literal type="string" pos:line="13" pos:column="14">"curl_json plugin: Unable to look up DS type \"%s\"."<pos:position pos:line="13" pos:column="67"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="14" pos:column="11">key<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">-&gt;<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="16">type<pos:position pos:line="14" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="15" pos:column="7">sstrncpy<pos:position pos:line="15" pos:column="15"/></name> <argument_list pos:line="15" pos:column="16">(<argument><expr><name pos:line="15" pos:column="17">type<pos:position pos:line="15" pos:column="21"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="23">key<pos:position pos:line="15" pos:column="26"/></name><operator pos:line="15" pos:column="26">-&gt;<pos:position pos:line="15" pos:column="31"/></operator><name pos:line="15" pos:column="28">type<pos:position pos:line="15" pos:column="32"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="34">sizeof <argument_list pos:line="15" pos:column="41">(<argument><expr><name pos:line="15" pos:column="42">type<pos:position pos:line="15" pos:column="46"/></name></expr></argument>)<pos:position pos:line="15" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <return pos:line="18" pos:column="5">return <expr><operator pos:line="18" pos:column="12">-<pos:position pos:line="18" pos:column="13"/></operator><literal type="number" pos:line="18" pos:column="13">1<pos:position pos:line="18" pos:column="14"/></literal></expr>;<pos:position pos:line="18" pos:column="15"/></return>
  }<pos:position pos:line="19" pos:column="4"/></block></then>
  <elseif pos:line="20" pos:column="3">else <if pos:line="20" pos:column="8">if <condition pos:line="20" pos:column="11">(<expr><name><name pos:line="20" pos:column="12">ds<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">-&gt;<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="16">ds_num<pos:position pos:line="20" pos:column="22"/></name></name> <operator pos:line="20" pos:column="23">&gt;<pos:position pos:line="20" pos:column="27"/></operator> <literal type="number" pos:line="20" pos:column="25">1<pos:position pos:line="20" pos:column="26"/></literal></expr>)<pos:position pos:line="20" pos:column="27"/></condition><then pos:line="20" pos:column="27">
  <block pos:line="21" pos:column="3">{
    <decl_stmt><decl><specifier pos:line="22" pos:column="5">static<pos:position pos:line="22" pos:column="11"/></specifier> <type><name pos:line="22" pos:column="12">c_complain_t<pos:position pos:line="22" pos:column="24"/></name></type> <name pos:line="22" pos:column="25">complaint<pos:position pos:line="22" pos:column="34"/></name> <init pos:line="22" pos:column="35">= <expr><name pos:line="22" pos:column="37">C_COMPLAIN_INIT_STATIC<pos:position pos:line="22" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="22" pos:column="60"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="24" pos:column="5">c_complain_once<pos:position pos:line="24" pos:column="20"/></name> <argument_list pos:line="24" pos:column="21">(<argument><expr><name pos:line="24" pos:column="22">LOG_WARNING<pos:position pos:line="24" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="35">&amp;<pos:position pos:line="24" pos:column="40"/></operator><name pos:line="24" pos:column="36">complaint<pos:position pos:line="24" pos:column="45"/></name></expr></argument>,
        <argument><expr><literal type="string" pos:line="25" pos:column="9">"curl_json plugin: The type \"%s\" has more than one data source. "<pos:position pos:line="25" pos:column="76"/></literal>
        <literal type="string" pos:line="26" pos:column="9">"This is currently not supported. I will return the type of the "<pos:position pos:line="26" pos:column="74"/></literal>
        <literal type="string" pos:line="27" pos:column="9">"first data source, but this will likely lead to problems later on."<pos:position pos:line="27" pos:column="77"/></literal></expr></argument>,
        <argument><expr><name><name pos:line="28" pos:column="9">key<pos:position pos:line="28" pos:column="12"/></name><operator pos:line="28" pos:column="12">-&gt;<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="14">type<pos:position pos:line="28" pos:column="18"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if></elseif></if>

  <return pos:line="31" pos:column="3">return <expr><name><name pos:line="31" pos:column="10">ds<pos:position pos:line="31" pos:column="12"/></name><operator pos:line="31" pos:column="12">-&gt;<pos:position pos:line="31" pos:column="17"/></operator><name pos:line="31" pos:column="14">ds<pos:position pos:line="31" pos:column="16"/></name><index pos:line="31" pos:column="16">[<expr><literal type="number" pos:line="31" pos:column="17">0<pos:position pos:line="31" pos:column="18"/></literal></expr>]<pos:position pos:line="31" pos:column="19"/></index></name><operator pos:line="31" pos:column="19">.<pos:position pos:line="31" pos:column="20"/></operator><name pos:line="31" pos:column="20">type<pos:position pos:line="31" pos:column="24"/></name></expr>;<pos:position pos:line="31" pos:column="25"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1121_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cna_handle_snapvault_iter<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">host_config_t<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">host<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="59">/* {{{ */</comment>
                                     <parameter><decl><type><name pos:line="2" pos:column="38">na_elem_t<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">data<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list> <block pos:line="2" pos:column="55">{
  <decl_stmt><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">tag<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="5" pos:column="3">uint32_t<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">records_count<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">records_count<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">=<pos:position pos:line="7" pos:column="18"/></operator> <call><name pos:line="7" pos:column="19">na_child_get_uint32<pos:position pos:line="7" pos:column="38"/></name><argument_list pos:line="7" pos:column="38">(<argument><expr><name pos:line="7" pos:column="39">data<pos:position pos:line="7" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="45">"records"<pos:position pos:line="7" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="56">UINT32_MAX<pos:position pos:line="7" pos:column="66"/></name></expr></argument>)<pos:position pos:line="7" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="68"/></expr_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">records_count<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">==<pos:position pos:line="8" pos:column="23"/></operator> <name pos:line="8" pos:column="24">UINT32_MAX<pos:position pos:line="8" pos:column="34"/></name></expr>)<pos:position pos:line="8" pos:column="35"/></condition><then pos:line="8" pos:column="35">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><literal type="number" pos:line="9" pos:column="12">0<pos:position pos:line="9" pos:column="13"/></literal></expr>;<pos:position pos:line="9" pos:column="14"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="11" pos:column="3">tag<pos:position pos:line="11" pos:column="6"/></name> <operator pos:line="11" pos:column="7">=<pos:position pos:line="11" pos:column="8"/></operator> <call><name pos:line="11" pos:column="9">na_child_get_string<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">(<argument><expr><name pos:line="11" pos:column="29">data<pos:position pos:line="11" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="35">"tag"<pos:position pos:line="11" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="42"/></expr_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><operator pos:line="12" pos:column="7">!<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">tag<pos:position pos:line="12" pos:column="11"/></name></expr>)<pos:position pos:line="12" pos:column="12"/></condition><then pos:line="12" pos:column="12">
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><literal type="number" pos:line="13" pos:column="12">0<pos:position pos:line="13" pos:column="13"/></literal></expr>;<pos:position pos:line="13" pos:column="14"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">DEBUG<pos:position pos:line="15" pos:column="8"/></name><argument_list pos:line="15" pos:column="8">(<argument><expr><literal type="string" pos:line="15" pos:column="9">"netapp plugin: Iterating %u SV records (tag = %s)"<pos:position pos:line="15" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="62">records_count<pos:position pos:line="15" pos:column="75"/></name></expr></argument>,
        <argument><expr><name pos:line="16" pos:column="9">tag<pos:position pos:line="16" pos:column="12"/></name></expr></argument>)<pos:position pos:line="16" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="14"/></expr_stmt>

  <for pos:line="18" pos:column="3">for <control pos:line="18" pos:column="7">(<init><decl><type><name pos:line="18" pos:column="8">uint32_t<pos:position pos:line="18" pos:column="16"/></name></type> <name pos:line="18" pos:column="17">i<pos:position pos:line="18" pos:column="18"/></name> <init pos:line="18" pos:column="19">= <expr><literal type="number" pos:line="18" pos:column="21">0<pos:position pos:line="18" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="18" pos:column="23"/></init> <condition><expr><name pos:line="18" pos:column="24">i<pos:position pos:line="18" pos:column="25"/></name> <operator pos:line="18" pos:column="26">&lt;<pos:position pos:line="18" pos:column="30"/></operator> <name pos:line="18" pos:column="28">records_count<pos:position pos:line="18" pos:column="41"/></name></expr>;<pos:position pos:line="18" pos:column="42"/></condition> <incr><expr><operator pos:line="18" pos:column="43">++<pos:position pos:line="18" pos:column="45"/></operator><name pos:line="18" pos:column="45">i<pos:position pos:line="18" pos:column="46"/></name></expr></incr>)<pos:position pos:line="18" pos:column="47"/></control> <block pos:line="18" pos:column="48">{
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">na_elem_t<pos:position pos:line="19" pos:column="14"/></name> <modifier pos:line="19" pos:column="15">*<pos:position pos:line="19" pos:column="16"/></modifier></type><name pos:line="19" pos:column="16">elem<pos:position pos:line="19" pos:column="20"/></name></decl>;<pos:position pos:line="19" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><name pos:line="21" pos:column="5">elem<pos:position pos:line="21" pos:column="9"/></name> <operator pos:line="21" pos:column="10">=<pos:position pos:line="21" pos:column="11"/></operator> <call><name pos:line="21" pos:column="12">na_server_invoke<pos:position pos:line="21" pos:column="28"/></name><argument_list pos:line="21" pos:column="28">(
        <argument><expr><name><name pos:line="22" pos:column="9">host<pos:position pos:line="22" pos:column="13"/></name><operator pos:line="22" pos:column="13">-&gt;<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="15">srv<pos:position pos:line="22" pos:column="18"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="20">"snapvault-secondary-relationship-status-list-iter-next"<pos:position pos:line="22" pos:column="76"/></literal></expr></argument>,
        <argument><expr><literal type="string" pos:line="23" pos:column="9">"maximum"<pos:position pos:line="23" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="20">"1"<pos:position pos:line="23" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="25">"tag"<pos:position pos:line="23" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="32">tag<pos:position pos:line="23" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="37">NULL<pos:position pos:line="23" pos:column="41"/></name></expr></argument>)<pos:position pos:line="23" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="43"/></expr_stmt>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><call><name pos:line="25" pos:column="9">na_results_status<pos:position pos:line="25" pos:column="26"/></name><argument_list pos:line="25" pos:column="26">(<argument><expr><name pos:line="25" pos:column="27">elem<pos:position pos:line="25" pos:column="31"/></name></expr></argument>)<pos:position pos:line="25" pos:column="32"/></argument_list></call> <operator pos:line="25" pos:column="33">!=<pos:position pos:line="25" pos:column="35"/></operator> <name pos:line="25" pos:column="36">NA_OK<pos:position pos:line="25" pos:column="41"/></name></expr>)<pos:position pos:line="25" pos:column="42"/></condition><then pos:line="25" pos:column="42"> <block pos:line="25" pos:column="43">{
      <expr_stmt><expr><call><name pos:line="26" pos:column="7">ERROR<pos:position pos:line="26" pos:column="12"/></name><argument_list pos:line="26" pos:column="12">(<argument><expr><literal type="string" pos:line="26" pos:column="13">"netapp plugin: cna_handle_snapvault_iter: "<pos:position pos:line="26" pos:column="57"/></literal>
            <literal type="string" pos:line="27" pos:column="13">"na_server_invoke failed for host %s: %s"<pos:position pos:line="27" pos:column="54"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="28" pos:column="13">host<pos:position pos:line="28" pos:column="17"/></name><operator pos:line="28" pos:column="17">-&gt;<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="19">name<pos:position pos:line="28" pos:column="23"/></name></name></expr></argument>, <argument><expr><call><name pos:line="28" pos:column="25">na_results_reason<pos:position pos:line="28" pos:column="42"/></name><argument_list pos:line="28" pos:column="42">(<argument><expr><name pos:line="28" pos:column="43">data<pos:position pos:line="28" pos:column="47"/></name></expr></argument>)<pos:position pos:line="28" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="50"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="29" pos:column="7">na_elem_free<pos:position pos:line="29" pos:column="19"/></name><argument_list pos:line="29" pos:column="19">(<argument><expr><name pos:line="29" pos:column="20">elem<pos:position pos:line="29" pos:column="24"/></name></expr></argument>)<pos:position pos:line="29" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="26"/></expr_stmt>
      <return pos:line="30" pos:column="7">return <expr><operator pos:line="30" pos:column="14">(<pos:position pos:line="30" pos:column="15"/></operator><operator pos:line="30" pos:column="15">-<pos:position pos:line="30" pos:column="16"/></operator><literal type="number" pos:line="30" pos:column="16">1<pos:position pos:line="30" pos:column="17"/></literal><operator pos:line="30" pos:column="17">)<pos:position pos:line="30" pos:column="18"/></operator></expr>;<pos:position pos:line="30" pos:column="19"/></return>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="33" pos:column="5">cna_handle_snapvault_data<pos:position pos:line="33" pos:column="30"/></name><argument_list pos:line="33" pos:column="30">(<argument><expr><name><name pos:line="33" pos:column="31">host<pos:position pos:line="33" pos:column="35"/></name><operator pos:line="33" pos:column="35">-&gt;<pos:position pos:line="33" pos:column="40"/></operator><name pos:line="33" pos:column="37">name<pos:position pos:line="33" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="43">host<pos:position pos:line="33" pos:column="47"/></name><operator pos:line="33" pos:column="47">-&gt;<pos:position pos:line="33" pos:column="52"/></operator><name pos:line="33" pos:column="49">cfg_snapvault<pos:position pos:line="33" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="64">elem<pos:position pos:line="33" pos:column="68"/></name></expr></argument>,
                              <argument><expr><name><name pos:line="34" pos:column="31">host<pos:position pos:line="34" pos:column="35"/></name><operator pos:line="34" pos:column="35">-&gt;<pos:position pos:line="34" pos:column="40"/></operator><name pos:line="34" pos:column="37">cfg_snapvault<pos:position pos:line="34" pos:column="50"/></name><operator pos:line="34" pos:column="50">-&gt;<pos:position pos:line="34" pos:column="55"/></operator><name pos:line="34" pos:column="52">interval<pos:position pos:line="34" pos:column="60"/></name><operator pos:line="34" pos:column="60">.<pos:position pos:line="34" pos:column="61"/></operator><name pos:line="34" pos:column="61">interval<pos:position pos:line="34" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="71"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">na_elem_free<pos:position pos:line="35" pos:column="17"/></name><argument_list pos:line="35" pos:column="17">(<argument><expr><name pos:line="35" pos:column="18">elem<pos:position pos:line="35" pos:column="22"/></name></expr></argument>)<pos:position pos:line="35" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="36" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="38" pos:column="3">na_elem_free<pos:position pos:line="38" pos:column="15"/></name><argument_list pos:line="38" pos:column="15">(<argument><expr><call><name pos:line="38" pos:column="16">na_server_invoke<pos:position pos:line="38" pos:column="32"/></name><argument_list pos:line="38" pos:column="32">(
      <argument><expr><name><name pos:line="39" pos:column="7">host<pos:position pos:line="39" pos:column="11"/></name><operator pos:line="39" pos:column="11">-&gt;<pos:position pos:line="39" pos:column="16"/></operator><name pos:line="39" pos:column="13">srv<pos:position pos:line="39" pos:column="16"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="18">"snapvault-secondary-relationship-status-list-iter-end"<pos:position pos:line="39" pos:column="73"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="75">"tag"<pos:position pos:line="39" pos:column="80"/></literal></expr></argument>,
      <argument><expr><name pos:line="40" pos:column="7">tag<pos:position pos:line="40" pos:column="10"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="12">NULL<pos:position pos:line="40" pos:column="16"/></name></expr></argument>)<pos:position pos:line="40" pos:column="17"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="19"/></expr_stmt>
  <return pos:line="41" pos:column="3">return <expr><operator pos:line="41" pos:column="10">(<pos:position pos:line="41" pos:column="11"/></operator><literal type="number" pos:line="41" pos:column="11">0<pos:position pos:line="41" pos:column="12"/></literal><operator pos:line="41" pos:column="12">)<pos:position pos:line="41" pos:column="13"/></operator></expr>;<pos:position pos:line="41" pos:column="14"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_502_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">csnmp_read_value<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">host_definition_t<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">host<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">data_definition_t<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">data<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list> <block pos:line="1" pos:column="79">{
  <decl_stmt><decl><type><name><name pos:line="2" pos:column="3">struct<pos:position pos:line="2" pos:column="9"/></name> <name pos:line="2" pos:column="10">snmp_pdu<pos:position pos:line="2" pos:column="18"/></name></name> <modifier pos:line="2" pos:column="19">*<pos:position pos:line="2" pos:column="20"/></modifier></type><name pos:line="2" pos:column="20">req<pos:position pos:line="2" pos:column="23"/></name></decl>;<pos:position pos:line="2" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">snmp_pdu<pos:position pos:line="3" pos:column="18"/></name></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">res<pos:position pos:line="3" pos:column="23"/></name> <init pos:line="3" pos:column="24">= <expr><name pos:line="3" pos:column="26">NULL<pos:position pos:line="3" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">variable_list<pos:position pos:line="4" pos:column="23"/></name></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">vb<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>

  <decl_stmt><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name pos:line="6" pos:column="9">data_set_t<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">ds<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">value_list_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">vl<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><name pos:line="7" pos:column="21">VALUE_LIST_INIT<pos:position pos:line="7" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="37"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">status<pos:position pos:line="9" pos:column="13"/></name></decl>;<pos:position pos:line="9" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">size_t<pos:position pos:line="10" pos:column="9"/></name></type> <name pos:line="10" pos:column="10">i<pos:position pos:line="10" pos:column="11"/></name></decl>;<pos:position pos:line="10" pos:column="12"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="12" pos:column="3">DEBUG<pos:position pos:line="12" pos:column="8"/></name><argument_list pos:line="12" pos:column="8">(<argument><expr><literal type="string" pos:line="12" pos:column="9">"snmp plugin: csnmp_read_value (host = %s, data = %s)"<pos:position pos:line="12" pos:column="63"/></literal></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="65">host<pos:position pos:line="12" pos:column="69"/></name><operator pos:line="12" pos:column="69">-&gt;<pos:position pos:line="12" pos:column="74"/></operator><name pos:line="12" pos:column="71">name<pos:position pos:line="12" pos:column="75"/></name></name></expr></argument>,
        <argument><expr><name><name pos:line="13" pos:column="9">data<pos:position pos:line="13" pos:column="13"/></name><operator pos:line="13" pos:column="13">-&gt;<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="15">name<pos:position pos:line="13" pos:column="19"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="21"/></expr_stmt>

  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name><name pos:line="15" pos:column="7">host<pos:position pos:line="15" pos:column="11"/></name><operator pos:line="15" pos:column="11">-&gt;<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="13">sess_handle<pos:position pos:line="15" pos:column="24"/></name></name> <operator pos:line="15" pos:column="25">==<pos:position pos:line="15" pos:column="27"/></operator> <name pos:line="15" pos:column="28">NULL<pos:position pos:line="15" pos:column="32"/></name></expr>)<pos:position pos:line="15" pos:column="33"/></condition><then pos:line="15" pos:column="33"> <block pos:line="15" pos:column="34">{
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">DEBUG<pos:position pos:line="16" pos:column="10"/></name><argument_list pos:line="16" pos:column="10">(<argument><expr><literal type="string" pos:line="16" pos:column="11">"snmp plugin: csnmp_read_value: host-&gt;sess_handle == NULL"<pos:position pos:line="16" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="71"/></expr_stmt>
    <return pos:line="17" pos:column="5">return <expr><operator pos:line="17" pos:column="12">(<pos:position pos:line="17" pos:column="13"/></operator><operator pos:line="17" pos:column="13">-<pos:position pos:line="17" pos:column="14"/></operator><literal type="number" pos:line="17" pos:column="14">1<pos:position pos:line="17" pos:column="15"/></literal><operator pos:line="17" pos:column="15">)<pos:position pos:line="17" pos:column="16"/></operator></expr>;<pos:position pos:line="17" pos:column="17"/></return>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="20" pos:column="3">ds<pos:position pos:line="20" pos:column="5"/></name> <operator pos:line="20" pos:column="6">=<pos:position pos:line="20" pos:column="7"/></operator> <call><name pos:line="20" pos:column="8">plugin_get_ds<pos:position pos:line="20" pos:column="21"/></name><argument_list pos:line="20" pos:column="21">(<argument><expr><name><name pos:line="20" pos:column="22">data<pos:position pos:line="20" pos:column="26"/></name><operator pos:line="20" pos:column="26">-&gt;<pos:position pos:line="20" pos:column="31"/></operator><name pos:line="20" pos:column="28">type<pos:position pos:line="20" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="34"/></expr_stmt>
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><operator pos:line="21" pos:column="7">!<pos:position pos:line="21" pos:column="8"/></operator><name pos:line="21" pos:column="8">ds<pos:position pos:line="21" pos:column="10"/></name></expr>)<pos:position pos:line="21" pos:column="11"/></condition><then pos:line="21" pos:column="11"> <block pos:line="21" pos:column="12">{
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">ERROR<pos:position pos:line="22" pos:column="10"/></name><argument_list pos:line="22" pos:column="10">(<argument><expr><literal type="string" pos:line="22" pos:column="11">"snmp plugin: DataSet `%s' not defined."<pos:position pos:line="22" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="53">data<pos:position pos:line="22" pos:column="57"/></name><operator pos:line="22" pos:column="57">-&gt;<pos:position pos:line="22" pos:column="62"/></operator><name pos:line="22" pos:column="59">type<pos:position pos:line="22" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="65"/></expr_stmt>
    <return pos:line="23" pos:column="5">return <expr><operator pos:line="23" pos:column="12">(<pos:position pos:line="23" pos:column="13"/></operator><operator pos:line="23" pos:column="13">-<pos:position pos:line="23" pos:column="14"/></operator><literal type="number" pos:line="23" pos:column="14">1<pos:position pos:line="23" pos:column="15"/></literal><operator pos:line="23" pos:column="15">)<pos:position pos:line="23" pos:column="16"/></operator></expr>;<pos:position pos:line="23" pos:column="17"/></return>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>

  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><name><name pos:line="26" pos:column="7">ds<pos:position pos:line="26" pos:column="9"/></name><operator pos:line="26" pos:column="9">-&gt;<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="11">ds_num<pos:position pos:line="26" pos:column="17"/></name></name> <operator pos:line="26" pos:column="18">!=<pos:position pos:line="26" pos:column="20"/></operator> <name><name pos:line="26" pos:column="21">data<pos:position pos:line="26" pos:column="25"/></name><operator pos:line="26" pos:column="25">-&gt;<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="27">values_len<pos:position pos:line="26" pos:column="37"/></name></name></expr>)<pos:position pos:line="26" pos:column="38"/></condition><then pos:line="26" pos:column="38"> <block pos:line="26" pos:column="39">{
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">ERROR<pos:position pos:line="27" pos:column="10"/></name><argument_list pos:line="27" pos:column="10">(<argument><expr><literal type="string" pos:line="27" pos:column="11">"snmp plugin: DataSet `%s' requires %zu values, but config talks "<pos:position pos:line="27" pos:column="77"/></literal>
          <literal type="string" pos:line="28" pos:column="11">"about %zu"<pos:position pos:line="28" pos:column="22"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="29" pos:column="11">data<pos:position pos:line="29" pos:column="15"/></name><operator pos:line="29" pos:column="15">-&gt;<pos:position pos:line="29" pos:column="20"/></operator><name pos:line="29" pos:column="17">type<pos:position pos:line="29" pos:column="21"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="23">ds<pos:position pos:line="29" pos:column="25"/></name><operator pos:line="29" pos:column="25">-&gt;<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="27">ds_num<pos:position pos:line="29" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="35">data<pos:position pos:line="29" pos:column="39"/></name><operator pos:line="29" pos:column="39">-&gt;<pos:position pos:line="29" pos:column="44"/></operator><name pos:line="29" pos:column="41">values_len<pos:position pos:line="29" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="53"/></expr_stmt>
    <return pos:line="30" pos:column="5">return <expr><operator pos:line="30" pos:column="12">(<pos:position pos:line="30" pos:column="13"/></operator><operator pos:line="30" pos:column="13">-<pos:position pos:line="30" pos:column="14"/></operator><literal type="number" pos:line="30" pos:column="14">1<pos:position pos:line="30" pos:column="15"/></literal><operator pos:line="30" pos:column="15">)<pos:position pos:line="30" pos:column="16"/></operator></expr>;<pos:position pos:line="30" pos:column="17"/></return>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="33" pos:column="3">vl<pos:position pos:line="33" pos:column="5"/></name><operator pos:line="33" pos:column="5">.<pos:position pos:line="33" pos:column="6"/></operator><name pos:line="33" pos:column="6">values_len<pos:position pos:line="33" pos:column="16"/></name></name> <operator pos:line="33" pos:column="17">=<pos:position pos:line="33" pos:column="18"/></operator> <name><name pos:line="33" pos:column="19">ds<pos:position pos:line="33" pos:column="21"/></name><operator pos:line="33" pos:column="21">-&gt;<pos:position pos:line="33" pos:column="26"/></operator><name pos:line="33" pos:column="23">ds_num<pos:position pos:line="33" pos:column="29"/></name></name></expr>;<pos:position pos:line="33" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="34" pos:column="3">vl<pos:position pos:line="34" pos:column="5"/></name><operator pos:line="34" pos:column="5">.<pos:position pos:line="34" pos:column="6"/></operator><name pos:line="34" pos:column="6">values<pos:position pos:line="34" pos:column="12"/></name></name> <operator pos:line="34" pos:column="13">=<pos:position pos:line="34" pos:column="14"/></operator> <call><name pos:line="34" pos:column="15">malloc<pos:position pos:line="34" pos:column="21"/></name><argument_list pos:line="34" pos:column="21">(<argument><expr><sizeof pos:line="34" pos:column="22">sizeof<argument_list pos:line="34" pos:column="28">(<argument><expr><operator pos:line="34" pos:column="29">*<pos:position pos:line="34" pos:column="30"/></operator><name><name pos:line="34" pos:column="30">vl<pos:position pos:line="34" pos:column="32"/></name><operator pos:line="34" pos:column="32">.<pos:position pos:line="34" pos:column="33"/></operator><name pos:line="34" pos:column="33">values<pos:position pos:line="34" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="40"/></argument_list></sizeof> <operator pos:line="34" pos:column="41">*<pos:position pos:line="34" pos:column="42"/></operator> <name><name pos:line="34" pos:column="43">vl<pos:position pos:line="34" pos:column="45"/></name><operator pos:line="34" pos:column="45">.<pos:position pos:line="34" pos:column="46"/></operator><name pos:line="34" pos:column="46">values_len<pos:position pos:line="34" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="58"/></expr_stmt>
  <if pos:line="35" pos:column="3">if <condition pos:line="35" pos:column="6">(<expr><name><name pos:line="35" pos:column="7">vl<pos:position pos:line="35" pos:column="9"/></name><operator pos:line="35" pos:column="9">.<pos:position pos:line="35" pos:column="10"/></operator><name pos:line="35" pos:column="10">values<pos:position pos:line="35" pos:column="16"/></name></name> <operator pos:line="35" pos:column="17">==<pos:position pos:line="35" pos:column="19"/></operator> <name pos:line="35" pos:column="20">NULL<pos:position pos:line="35" pos:column="24"/></name></expr>)<pos:position pos:line="35" pos:column="25"/></condition><then pos:line="35" pos:column="25">
    <block type="pseudo"><return pos:line="36" pos:column="5">return <expr><operator pos:line="36" pos:column="12">(<pos:position pos:line="36" pos:column="13"/></operator><operator pos:line="36" pos:column="13">-<pos:position pos:line="36" pos:column="14"/></operator><literal type="number" pos:line="36" pos:column="14">1<pos:position pos:line="36" pos:column="15"/></literal><operator pos:line="36" pos:column="15">)<pos:position pos:line="36" pos:column="16"/></operator></expr>;<pos:position pos:line="36" pos:column="17"/></return></block></then></if>
  <for pos:line="37" pos:column="3">for <control pos:line="37" pos:column="7">(<init><expr><name pos:line="37" pos:column="8">i<pos:position pos:line="37" pos:column="9"/></name> <operator pos:line="37" pos:column="10">=<pos:position pos:line="37" pos:column="11"/></operator> <literal type="number" pos:line="37" pos:column="12">0<pos:position pos:line="37" pos:column="13"/></literal></expr>;<pos:position pos:line="37" pos:column="14"/></init> <condition><expr><name pos:line="37" pos:column="15">i<pos:position pos:line="37" pos:column="16"/></name> <operator pos:line="37" pos:column="17">&lt;<pos:position pos:line="37" pos:column="21"/></operator> <name><name pos:line="37" pos:column="19">vl<pos:position pos:line="37" pos:column="21"/></name><operator pos:line="37" pos:column="21">.<pos:position pos:line="37" pos:column="22"/></operator><name pos:line="37" pos:column="22">values_len<pos:position pos:line="37" pos:column="32"/></name></name></expr>;<pos:position pos:line="37" pos:column="33"/></condition> <incr><expr><name pos:line="37" pos:column="34">i<pos:position pos:line="37" pos:column="35"/></name><operator pos:line="37" pos:column="35">++<pos:position pos:line="37" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="37" pos:column="38"/></control> <block pos:line="37" pos:column="39">{
    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name><name pos:line="38" pos:column="9">ds<pos:position pos:line="38" pos:column="11"/></name><operator pos:line="38" pos:column="11">-&gt;<pos:position pos:line="38" pos:column="16"/></operator><name pos:line="38" pos:column="13">ds<pos:position pos:line="38" pos:column="15"/></name><index pos:line="38" pos:column="15">[<expr><name pos:line="38" pos:column="16">i<pos:position pos:line="38" pos:column="17"/></name></expr>]<pos:position pos:line="38" pos:column="18"/></index></name><operator pos:line="38" pos:column="18">.<pos:position pos:line="38" pos:column="19"/></operator><name pos:line="38" pos:column="19">type<pos:position pos:line="38" pos:column="23"/></name> <operator pos:line="38" pos:column="24">==<pos:position pos:line="38" pos:column="26"/></operator> <name pos:line="38" pos:column="27">DS_TYPE_COUNTER<pos:position pos:line="38" pos:column="42"/></name></expr>)<pos:position pos:line="38" pos:column="43"/></condition><then pos:line="38" pos:column="43">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="39" pos:column="7">vl<pos:position pos:line="39" pos:column="9"/></name><operator pos:line="39" pos:column="9">.<pos:position pos:line="39" pos:column="10"/></operator><name pos:line="39" pos:column="10">values<pos:position pos:line="39" pos:column="16"/></name><index pos:line="39" pos:column="16">[<expr><name pos:line="39" pos:column="17">i<pos:position pos:line="39" pos:column="18"/></name></expr>]<pos:position pos:line="39" pos:column="19"/></index></name><operator pos:line="39" pos:column="19">.<pos:position pos:line="39" pos:column="20"/></operator><name pos:line="39" pos:column="20">counter<pos:position pos:line="39" pos:column="27"/></name> <operator pos:line="39" pos:column="28">=<pos:position pos:line="39" pos:column="29"/></operator> <literal type="number" pos:line="39" pos:column="30">0<pos:position pos:line="39" pos:column="31"/></literal></expr>;<pos:position pos:line="39" pos:column="32"/></expr_stmt></block></then>
    <else pos:line="40" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="41" pos:column="7">vl<pos:position pos:line="41" pos:column="9"/></name><operator pos:line="41" pos:column="9">.<pos:position pos:line="41" pos:column="10"/></operator><name pos:line="41" pos:column="10">values<pos:position pos:line="41" pos:column="16"/></name><index pos:line="41" pos:column="16">[<expr><name pos:line="41" pos:column="17">i<pos:position pos:line="41" pos:column="18"/></name></expr>]<pos:position pos:line="41" pos:column="19"/></index></name><operator pos:line="41" pos:column="19">.<pos:position pos:line="41" pos:column="20"/></operator><name pos:line="41" pos:column="20">gauge<pos:position pos:line="41" pos:column="25"/></name> <operator pos:line="41" pos:column="26">=<pos:position pos:line="41" pos:column="27"/></operator> <name pos:line="41" pos:column="28">NAN<pos:position pos:line="41" pos:column="31"/></name></expr>;<pos:position pos:line="41" pos:column="32"/></expr_stmt></block></else></if>
  }<pos:position pos:line="42" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="44" pos:column="3">sstrncpy<pos:position pos:line="44" pos:column="11"/></name><argument_list pos:line="44" pos:column="11">(<argument><expr><name><name pos:line="44" pos:column="12">vl<pos:position pos:line="44" pos:column="14"/></name><operator pos:line="44" pos:column="14">.<pos:position pos:line="44" pos:column="15"/></operator><name pos:line="44" pos:column="15">host<pos:position pos:line="44" pos:column="19"/></name></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="21">host<pos:position pos:line="44" pos:column="25"/></name><operator pos:line="44" pos:column="25">-&gt;<pos:position pos:line="44" pos:column="30"/></operator><name pos:line="44" pos:column="27">name<pos:position pos:line="44" pos:column="31"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="33">sizeof<argument_list pos:line="44" pos:column="39">(<argument><expr><name><name pos:line="44" pos:column="40">vl<pos:position pos:line="44" pos:column="42"/></name><operator pos:line="44" pos:column="42">.<pos:position pos:line="44" pos:column="43"/></operator><name pos:line="44" pos:column="43">host<pos:position pos:line="44" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="44" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="45" pos:column="3">sstrncpy<pos:position pos:line="45" pos:column="11"/></name><argument_list pos:line="45" pos:column="11">(<argument><expr><name><name pos:line="45" pos:column="12">vl<pos:position pos:line="45" pos:column="14"/></name><operator pos:line="45" pos:column="14">.<pos:position pos:line="45" pos:column="15"/></operator><name pos:line="45" pos:column="15">plugin<pos:position pos:line="45" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="23">"snmp"<pos:position pos:line="45" pos:column="29"/></literal></expr></argument>, <argument><expr><sizeof pos:line="45" pos:column="31">sizeof<argument_list pos:line="45" pos:column="37">(<argument><expr><name><name pos:line="45" pos:column="38">vl<pos:position pos:line="45" pos:column="40"/></name><operator pos:line="45" pos:column="40">.<pos:position pos:line="45" pos:column="41"/></operator><name pos:line="45" pos:column="41">plugin<pos:position pos:line="45" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="45" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="46" pos:column="3">sstrncpy<pos:position pos:line="46" pos:column="11"/></name><argument_list pos:line="46" pos:column="11">(<argument><expr><name><name pos:line="46" pos:column="12">vl<pos:position pos:line="46" pos:column="14"/></name><operator pos:line="46" pos:column="14">.<pos:position pos:line="46" pos:column="15"/></operator><name pos:line="46" pos:column="15">type<pos:position pos:line="46" pos:column="19"/></name></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="21">data<pos:position pos:line="46" pos:column="25"/></name><operator pos:line="46" pos:column="25">-&gt;<pos:position pos:line="46" pos:column="30"/></operator><name pos:line="46" pos:column="27">type<pos:position pos:line="46" pos:column="31"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="46" pos:column="33">sizeof<argument_list pos:line="46" pos:column="39">(<argument><expr><name><name pos:line="46" pos:column="40">vl<pos:position pos:line="46" pos:column="42"/></name><operator pos:line="46" pos:column="42">.<pos:position pos:line="46" pos:column="43"/></operator><name pos:line="46" pos:column="43">type<pos:position pos:line="46" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="46" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="47" pos:column="3">sstrncpy<pos:position pos:line="47" pos:column="11"/></name><argument_list pos:line="47" pos:column="11">(<argument><expr><name><name pos:line="47" pos:column="12">vl<pos:position pos:line="47" pos:column="14"/></name><operator pos:line="47" pos:column="14">.<pos:position pos:line="47" pos:column="15"/></operator><name pos:line="47" pos:column="15">type_instance<pos:position pos:line="47" pos:column="28"/></name></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="30">data<pos:position pos:line="47" pos:column="34"/></name><operator pos:line="47" pos:column="34">-&gt;<pos:position pos:line="47" pos:column="39"/></operator><name pos:line="47" pos:column="36">instance<pos:position pos:line="47" pos:column="44"/></name><operator pos:line="47" pos:column="44">.<pos:position pos:line="47" pos:column="45"/></operator><name pos:line="47" pos:column="45">string<pos:position pos:line="47" pos:column="51"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="47" pos:column="53">sizeof<argument_list pos:line="47" pos:column="59">(<argument><expr><name><name pos:line="47" pos:column="60">vl<pos:position pos:line="47" pos:column="62"/></name><operator pos:line="47" pos:column="62">.<pos:position pos:line="47" pos:column="63"/></operator><name pos:line="47" pos:column="63">type_instance<pos:position pos:line="47" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="47" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="79"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="49" pos:column="3">vl<pos:position pos:line="49" pos:column="5"/></name><operator pos:line="49" pos:column="5">.<pos:position pos:line="49" pos:column="6"/></operator><name pos:line="49" pos:column="6">interval<pos:position pos:line="49" pos:column="14"/></name></name> <operator pos:line="49" pos:column="15">=<pos:position pos:line="49" pos:column="16"/></operator> <name><name pos:line="49" pos:column="17">host<pos:position pos:line="49" pos:column="21"/></name><operator pos:line="49" pos:column="21">-&gt;<pos:position pos:line="49" pos:column="26"/></operator><name pos:line="49" pos:column="23">interval<pos:position pos:line="49" pos:column="31"/></name></name></expr>;<pos:position pos:line="49" pos:column="32"/></expr_stmt>

  <expr_stmt><expr><name pos:line="51" pos:column="3">req<pos:position pos:line="51" pos:column="6"/></name> <operator pos:line="51" pos:column="7">=<pos:position pos:line="51" pos:column="8"/></operator> <call><name pos:line="51" pos:column="9">snmp_pdu_create<pos:position pos:line="51" pos:column="24"/></name><argument_list pos:line="51" pos:column="24">(<argument><expr><name pos:line="51" pos:column="25">SNMP_MSG_GET<pos:position pos:line="51" pos:column="37"/></name></expr></argument>)<pos:position pos:line="51" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="39"/></expr_stmt>
  <if pos:line="52" pos:column="3">if <condition pos:line="52" pos:column="6">(<expr><name pos:line="52" pos:column="7">req<pos:position pos:line="52" pos:column="10"/></name> <operator pos:line="52" pos:column="11">==<pos:position pos:line="52" pos:column="13"/></operator> <name pos:line="52" pos:column="14">NULL<pos:position pos:line="52" pos:column="18"/></name></expr>)<pos:position pos:line="52" pos:column="19"/></condition><then pos:line="52" pos:column="19"> <block pos:line="52" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">ERROR<pos:position pos:line="53" pos:column="10"/></name><argument_list pos:line="53" pos:column="10">(<argument><expr><literal type="string" pos:line="53" pos:column="11">"snmp plugin: snmp_pdu_create failed."<pos:position pos:line="53" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="54" pos:column="5">sfree<pos:position pos:line="54" pos:column="10"/></name><argument_list pos:line="54" pos:column="10">(<argument><expr><name><name pos:line="54" pos:column="11">vl<pos:position pos:line="54" pos:column="13"/></name><operator pos:line="54" pos:column="13">.<pos:position pos:line="54" pos:column="14"/></operator><name pos:line="54" pos:column="14">values<pos:position pos:line="54" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="22"/></expr_stmt>
    <return pos:line="55" pos:column="5">return <expr><operator pos:line="55" pos:column="12">(<pos:position pos:line="55" pos:column="13"/></operator><operator pos:line="55" pos:column="13">-<pos:position pos:line="55" pos:column="14"/></operator><literal type="number" pos:line="55" pos:column="14">1<pos:position pos:line="55" pos:column="15"/></literal><operator pos:line="55" pos:column="15">)<pos:position pos:line="55" pos:column="16"/></operator></expr>;<pos:position pos:line="55" pos:column="17"/></return>
  }<pos:position pos:line="56" pos:column="4"/></block></then></if>

  <for pos:line="58" pos:column="3">for <control pos:line="58" pos:column="7">(<init><expr><name pos:line="58" pos:column="8">i<pos:position pos:line="58" pos:column="9"/></name> <operator pos:line="58" pos:column="10">=<pos:position pos:line="58" pos:column="11"/></operator> <literal type="number" pos:line="58" pos:column="12">0<pos:position pos:line="58" pos:column="13"/></literal></expr>;<pos:position pos:line="58" pos:column="14"/></init> <condition><expr><name pos:line="58" pos:column="15">i<pos:position pos:line="58" pos:column="16"/></name> <operator pos:line="58" pos:column="17">&lt;<pos:position pos:line="58" pos:column="21"/></operator> <name><name pos:line="58" pos:column="19">data<pos:position pos:line="58" pos:column="23"/></name><operator pos:line="58" pos:column="23">-&gt;<pos:position pos:line="58" pos:column="28"/></operator><name pos:line="58" pos:column="25">values_len<pos:position pos:line="58" pos:column="35"/></name></name></expr>;<pos:position pos:line="58" pos:column="36"/></condition> <incr><expr><name pos:line="58" pos:column="37">i<pos:position pos:line="58" pos:column="38"/></name><operator pos:line="58" pos:column="38">++<pos:position pos:line="58" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="58" pos:column="41"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="59" pos:column="5">snmp_add_null_var<pos:position pos:line="59" pos:column="22"/></name><argument_list pos:line="59" pos:column="22">(<argument><expr><name pos:line="59" pos:column="23">req<pos:position pos:line="59" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="28">data<pos:position pos:line="59" pos:column="32"/></name><operator pos:line="59" pos:column="32">-&gt;<pos:position pos:line="59" pos:column="37"/></operator><name pos:line="59" pos:column="34">values<pos:position pos:line="59" pos:column="40"/></name><index pos:line="59" pos:column="40">[<expr><name pos:line="59" pos:column="41">i<pos:position pos:line="59" pos:column="42"/></name></expr>]<pos:position pos:line="59" pos:column="43"/></index></name><operator pos:line="59" pos:column="43">.<pos:position pos:line="59" pos:column="44"/></operator><name pos:line="59" pos:column="44">oid<pos:position pos:line="59" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="49">data<pos:position pos:line="59" pos:column="53"/></name><operator pos:line="59" pos:column="53">-&gt;<pos:position pos:line="59" pos:column="58"/></operator><name pos:line="59" pos:column="55">values<pos:position pos:line="59" pos:column="61"/></name><index pos:line="59" pos:column="61">[<expr><name pos:line="59" pos:column="62">i<pos:position pos:line="59" pos:column="63"/></name></expr>]<pos:position pos:line="59" pos:column="64"/></index></name><operator pos:line="59" pos:column="64">.<pos:position pos:line="59" pos:column="65"/></operator><name pos:line="59" pos:column="65">oid_len<pos:position pos:line="59" pos:column="72"/></name></expr></argument>)<pos:position pos:line="59" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="74"/></expr_stmt></block></for>

  <expr_stmt><expr><name pos:line="61" pos:column="3">status<pos:position pos:line="61" pos:column="9"/></name> <operator pos:line="61" pos:column="10">=<pos:position pos:line="61" pos:column="11"/></operator> <call><name pos:line="61" pos:column="12">snmp_sess_synch_response<pos:position pos:line="61" pos:column="36"/></name><argument_list pos:line="61" pos:column="36">(<argument><expr><name><name pos:line="61" pos:column="37">host<pos:position pos:line="61" pos:column="41"/></name><operator pos:line="61" pos:column="41">-&gt;<pos:position pos:line="61" pos:column="46"/></operator><name pos:line="61" pos:column="43">sess_handle<pos:position pos:line="61" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="56">req<pos:position pos:line="61" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="61">&amp;<pos:position pos:line="61" pos:column="66"/></operator><name pos:line="61" pos:column="62">res<pos:position pos:line="61" pos:column="65"/></name></expr></argument>)<pos:position pos:line="61" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="67"/></expr_stmt>

  <if pos:line="63" pos:column="3">if <condition pos:line="63" pos:column="6">(<expr><operator pos:line="63" pos:column="7">(<pos:position pos:line="63" pos:column="8"/></operator><name pos:line="63" pos:column="8">status<pos:position pos:line="63" pos:column="14"/></name> <operator pos:line="63" pos:column="15">!=<pos:position pos:line="63" pos:column="17"/></operator> <name pos:line="63" pos:column="18">STAT_SUCCESS<pos:position pos:line="63" pos:column="30"/></name><operator pos:line="63" pos:column="30">)<pos:position pos:line="63" pos:column="31"/></operator> <operator pos:line="63" pos:column="32">||<pos:position pos:line="63" pos:column="34"/></operator> <operator pos:line="63" pos:column="35">(<pos:position pos:line="63" pos:column="36"/></operator><name pos:line="63" pos:column="36">res<pos:position pos:line="63" pos:column="39"/></name> <operator pos:line="63" pos:column="40">==<pos:position pos:line="63" pos:column="42"/></operator> <name pos:line="63" pos:column="43">NULL<pos:position pos:line="63" pos:column="47"/></name><operator pos:line="63" pos:column="47">)<pos:position pos:line="63" pos:column="48"/></operator></expr>)<pos:position pos:line="63" pos:column="49"/></condition><then pos:line="63" pos:column="49"> <block pos:line="63" pos:column="50">{
    <decl_stmt><decl><type><name pos:line="64" pos:column="5">char<pos:position pos:line="64" pos:column="9"/></name> <modifier pos:line="64" pos:column="10">*<pos:position pos:line="64" pos:column="11"/></modifier></type><name pos:line="64" pos:column="11">errstr<pos:position pos:line="64" pos:column="17"/></name> <init pos:line="64" pos:column="18">= <expr><name pos:line="64" pos:column="20">NULL<pos:position pos:line="64" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="64" pos:column="25"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="66" pos:column="5">snmp_sess_error<pos:position pos:line="66" pos:column="20"/></name><argument_list pos:line="66" pos:column="20">(<argument><expr><name><name pos:line="66" pos:column="21">host<pos:position pos:line="66" pos:column="25"/></name><operator pos:line="66" pos:column="25">-&gt;<pos:position pos:line="66" pos:column="30"/></operator><name pos:line="66" pos:column="27">sess_handle<pos:position pos:line="66" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="40">NULL<pos:position pos:line="66" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="46">NULL<pos:position pos:line="66" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="66" pos:column="52">&amp;<pos:position pos:line="66" pos:column="57"/></operator><name pos:line="66" pos:column="53">errstr<pos:position pos:line="66" pos:column="59"/></name></expr></argument>)<pos:position pos:line="66" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">ERROR<pos:position pos:line="67" pos:column="10"/></name><argument_list pos:line="67" pos:column="10">(<argument><expr><literal type="string" pos:line="67" pos:column="11">"snmp plugin: host %s: snmp_sess_synch_response failed: %s"<pos:position pos:line="67" pos:column="70"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="68" pos:column="11">host<pos:position pos:line="68" pos:column="15"/></name><operator pos:line="68" pos:column="15">-&gt;<pos:position pos:line="68" pos:column="20"/></operator><name pos:line="68" pos:column="17">name<pos:position pos:line="68" pos:column="21"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="68" pos:column="23">(<pos:position pos:line="68" pos:column="24"/></operator><name pos:line="68" pos:column="24">errstr<pos:position pos:line="68" pos:column="30"/></name> <operator pos:line="68" pos:column="31">==<pos:position pos:line="68" pos:column="33"/></operator> <name pos:line="68" pos:column="34">NULL<pos:position pos:line="68" pos:column="38"/></name><operator pos:line="68" pos:column="38">)<pos:position pos:line="68" pos:column="39"/></operator></expr> ?<pos:position pos:line="68" pos:column="41"/></condition><then pos:line="68" pos:column="41"> <expr><literal type="string" pos:line="68" pos:column="42">"Unknown problem"<pos:position pos:line="68" pos:column="59"/></literal></expr> <pos:position pos:line="68" pos:column="60"/></then><else pos:line="68" pos:column="60">: <expr><name pos:line="68" pos:column="62">errstr<pos:position pos:line="68" pos:column="68"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="68" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="70"/></expr_stmt>

    <if pos:line="70" pos:column="5">if <condition pos:line="70" pos:column="8">(<expr><name pos:line="70" pos:column="9">res<pos:position pos:line="70" pos:column="12"/></name> <operator pos:line="70" pos:column="13">!=<pos:position pos:line="70" pos:column="15"/></operator> <name pos:line="70" pos:column="16">NULL<pos:position pos:line="70" pos:column="20"/></name></expr>)<pos:position pos:line="70" pos:column="21"/></condition><then pos:line="70" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="71" pos:column="7">snmp_free_pdu<pos:position pos:line="71" pos:column="20"/></name><argument_list pos:line="71" pos:column="20">(<argument><expr><name pos:line="71" pos:column="21">res<pos:position pos:line="71" pos:column="24"/></name></expr></argument>)<pos:position pos:line="71" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="26"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="73" pos:column="5">sfree<pos:position pos:line="73" pos:column="10"/></name><argument_list pos:line="73" pos:column="10">(<argument><expr><name pos:line="73" pos:column="11">errstr<pos:position pos:line="73" pos:column="17"/></name></expr></argument>)<pos:position pos:line="73" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="74" pos:column="5">sfree<pos:position pos:line="74" pos:column="10"/></name><argument_list pos:line="74" pos:column="10">(<argument><expr><name><name pos:line="74" pos:column="11">vl<pos:position pos:line="74" pos:column="13"/></name><operator pos:line="74" pos:column="13">.<pos:position pos:line="74" pos:column="14"/></operator><name pos:line="74" pos:column="14">values<pos:position pos:line="74" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="75" pos:column="5">csnmp_host_close_session<pos:position pos:line="75" pos:column="29"/></name><argument_list pos:line="75" pos:column="29">(<argument><expr><name pos:line="75" pos:column="30">host<pos:position pos:line="75" pos:column="34"/></name></expr></argument>)<pos:position pos:line="75" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="36"/></expr_stmt>

    <return pos:line="77" pos:column="5">return <expr><operator pos:line="77" pos:column="12">(<pos:position pos:line="77" pos:column="13"/></operator><operator pos:line="77" pos:column="13">-<pos:position pos:line="77" pos:column="14"/></operator><literal type="number" pos:line="77" pos:column="14">1<pos:position pos:line="77" pos:column="15"/></literal><operator pos:line="77" pos:column="15">)<pos:position pos:line="77" pos:column="16"/></operator></expr>;<pos:position pos:line="77" pos:column="17"/></return>
  }<pos:position pos:line="78" pos:column="4"/></block></then></if>

  <for pos:line="80" pos:column="3">for <control pos:line="80" pos:column="7">(<init><expr><name pos:line="80" pos:column="8">vb<pos:position pos:line="80" pos:column="10"/></name> <operator pos:line="80" pos:column="11">=<pos:position pos:line="80" pos:column="12"/></operator> <name><name pos:line="80" pos:column="13">res<pos:position pos:line="80" pos:column="16"/></name><operator pos:line="80" pos:column="16">-&gt;<pos:position pos:line="80" pos:column="21"/></operator><name pos:line="80" pos:column="18">variables<pos:position pos:line="80" pos:column="27"/></name></name></expr>;<pos:position pos:line="80" pos:column="28"/></init> <condition><expr><name pos:line="80" pos:column="29">vb<pos:position pos:line="80" pos:column="31"/></name> <operator pos:line="80" pos:column="32">!=<pos:position pos:line="80" pos:column="34"/></operator> <name pos:line="80" pos:column="35">NULL<pos:position pos:line="80" pos:column="39"/></name></expr>;<pos:position pos:line="80" pos:column="40"/></condition> <incr><expr><name pos:line="80" pos:column="41">vb<pos:position pos:line="80" pos:column="43"/></name> <operator pos:line="80" pos:column="44">=<pos:position pos:line="80" pos:column="45"/></operator> <name><name pos:line="80" pos:column="46">vb<pos:position pos:line="80" pos:column="48"/></name><operator pos:line="80" pos:column="48">-&gt;<pos:position pos:line="80" pos:column="53"/></operator><name pos:line="80" pos:column="50">next_variable<pos:position pos:line="80" pos:column="63"/></name></name></expr></incr>)<pos:position pos:line="80" pos:column="64"/></control> <block pos:line="80" pos:column="65">{
<cpp:if pos:line="81" pos:column="1">#<cpp:directive pos:line="81" pos:column="2">if<pos:position pos:line="81" pos:column="4"/></cpp:directive> <expr><name pos:line="81" pos:column="5">COLLECT_DEBUG<pos:position pos:line="81" pos:column="18"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="82" pos:column="5">char<pos:position pos:line="82" pos:column="9"/></name></type> <name><name pos:line="82" pos:column="10">buffer<pos:position pos:line="82" pos:column="16"/></name><index pos:line="82" pos:column="16">[<expr><literal type="number" pos:line="82" pos:column="17">1024<pos:position pos:line="82" pos:column="21"/></literal></expr>]<pos:position pos:line="82" pos:column="22"/></index></name></decl>;<pos:position pos:line="82" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="83" pos:column="5">snprint_variable<pos:position pos:line="83" pos:column="21"/></name><argument_list pos:line="83" pos:column="21">(<argument><expr><name pos:line="83" pos:column="22">buffer<pos:position pos:line="83" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="83" pos:column="30">sizeof<argument_list pos:line="83" pos:column="36">(<argument><expr><name pos:line="83" pos:column="37">buffer<pos:position pos:line="83" pos:column="43"/></name></expr></argument>)<pos:position pos:line="83" pos:column="44"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="83" pos:column="46">vb<pos:position pos:line="83" pos:column="48"/></name><operator pos:line="83" pos:column="48">-&gt;<pos:position pos:line="83" pos:column="53"/></operator><name pos:line="83" pos:column="50">name<pos:position pos:line="83" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="83" pos:column="56">vb<pos:position pos:line="83" pos:column="58"/></name><operator pos:line="83" pos:column="58">-&gt;<pos:position pos:line="83" pos:column="63"/></operator><name pos:line="83" pos:column="60">name_length<pos:position pos:line="83" pos:column="71"/></name></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="73">vb<pos:position pos:line="83" pos:column="75"/></name></expr></argument>)<pos:position pos:line="83" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="77"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="84" pos:column="5">DEBUG<pos:position pos:line="84" pos:column="10"/></name><argument_list pos:line="84" pos:column="10">(<argument><expr><literal type="string" pos:line="84" pos:column="11">"snmp plugin: Got this variable: %s"<pos:position pos:line="84" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="84" pos:column="49">buffer<pos:position pos:line="84" pos:column="55"/></name></expr></argument>)<pos:position pos:line="84" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="57"/></expr_stmt>
<cpp:endif pos:line="85" pos:column="1">#<cpp:directive pos:line="85" pos:column="2">endif<pos:position pos:line="85" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="85" pos:column="8">/* COLLECT_DEBUG */</comment>

    <for pos:line="87" pos:column="5">for <control pos:line="87" pos:column="9">(<init><expr><name pos:line="87" pos:column="10">i<pos:position pos:line="87" pos:column="11"/></name> <operator pos:line="87" pos:column="12">=<pos:position pos:line="87" pos:column="13"/></operator> <literal type="number" pos:line="87" pos:column="14">0<pos:position pos:line="87" pos:column="15"/></literal></expr>;<pos:position pos:line="87" pos:column="16"/></init> <condition><expr><name pos:line="87" pos:column="17">i<pos:position pos:line="87" pos:column="18"/></name> <operator pos:line="87" pos:column="19">&lt;<pos:position pos:line="87" pos:column="23"/></operator> <name><name pos:line="87" pos:column="21">data<pos:position pos:line="87" pos:column="25"/></name><operator pos:line="87" pos:column="25">-&gt;<pos:position pos:line="87" pos:column="30"/></operator><name pos:line="87" pos:column="27">values_len<pos:position pos:line="87" pos:column="37"/></name></name></expr>;<pos:position pos:line="87" pos:column="38"/></condition> <incr><expr><name pos:line="87" pos:column="39">i<pos:position pos:line="87" pos:column="40"/></name><operator pos:line="87" pos:column="40">++<pos:position pos:line="87" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="87" pos:column="43"/></control>
      <block type="pseudo"><if pos:line="88" pos:column="7">if <condition pos:line="88" pos:column="10">(<expr><call><name pos:line="88" pos:column="11">snmp_oid_compare<pos:position pos:line="88" pos:column="27"/></name><argument_list pos:line="88" pos:column="27">(<argument><expr><name><name pos:line="88" pos:column="28">data<pos:position pos:line="88" pos:column="32"/></name><operator pos:line="88" pos:column="32">-&gt;<pos:position pos:line="88" pos:column="37"/></operator><name pos:line="88" pos:column="34">values<pos:position pos:line="88" pos:column="40"/></name><index pos:line="88" pos:column="40">[<expr><name pos:line="88" pos:column="41">i<pos:position pos:line="88" pos:column="42"/></name></expr>]<pos:position pos:line="88" pos:column="43"/></index></name><operator pos:line="88" pos:column="43">.<pos:position pos:line="88" pos:column="44"/></operator><name pos:line="88" pos:column="44">oid<pos:position pos:line="88" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="88" pos:column="49">data<pos:position pos:line="88" pos:column="53"/></name><operator pos:line="88" pos:column="53">-&gt;<pos:position pos:line="88" pos:column="58"/></operator><name pos:line="88" pos:column="55">values<pos:position pos:line="88" pos:column="61"/></name><index pos:line="88" pos:column="61">[<expr><name pos:line="88" pos:column="62">i<pos:position pos:line="88" pos:column="63"/></name></expr>]<pos:position pos:line="88" pos:column="64"/></index></name><operator pos:line="88" pos:column="64">.<pos:position pos:line="88" pos:column="65"/></operator><name pos:line="88" pos:column="65">oid_len<pos:position pos:line="88" pos:column="72"/></name></expr></argument>,
                           <argument><expr><name><name pos:line="89" pos:column="28">vb<pos:position pos:line="89" pos:column="30"/></name><operator pos:line="89" pos:column="30">-&gt;<pos:position pos:line="89" pos:column="35"/></operator><name pos:line="89" pos:column="32">name<pos:position pos:line="89" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="89" pos:column="38">vb<pos:position pos:line="89" pos:column="40"/></name><operator pos:line="89" pos:column="40">-&gt;<pos:position pos:line="89" pos:column="45"/></operator><name pos:line="89" pos:column="42">name_length<pos:position pos:line="89" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="54"/></argument_list></call> <operator pos:line="89" pos:column="55">==<pos:position pos:line="89" pos:column="57"/></operator> <literal type="number" pos:line="89" pos:column="58">0<pos:position pos:line="89" pos:column="59"/></literal></expr>)<pos:position pos:line="89" pos:column="60"/></condition><then pos:line="89" pos:column="60">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="90" pos:column="9">vl<pos:position pos:line="90" pos:column="11"/></name><operator pos:line="90" pos:column="11">.<pos:position pos:line="90" pos:column="12"/></operator><name pos:line="90" pos:column="12">values<pos:position pos:line="90" pos:column="18"/></name><index pos:line="90" pos:column="18">[<expr><name pos:line="90" pos:column="19">i<pos:position pos:line="90" pos:column="20"/></name></expr>]<pos:position pos:line="90" pos:column="21"/></index></name> <operator pos:line="90" pos:column="22">=<pos:position pos:line="90" pos:column="23"/></operator>
            <call><name pos:line="91" pos:column="13">csnmp_value_list_to_value<pos:position pos:line="91" pos:column="38"/></name><argument_list pos:line="91" pos:column="38">(<argument><expr><name pos:line="91" pos:column="39">vb<pos:position pos:line="91" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="91" pos:column="43">ds<pos:position pos:line="91" pos:column="45"/></name><operator pos:line="91" pos:column="45">-&gt;<pos:position pos:line="91" pos:column="50"/></operator><name pos:line="91" pos:column="47">ds<pos:position pos:line="91" pos:column="49"/></name><index pos:line="91" pos:column="49">[<expr><name pos:line="91" pos:column="50">i<pos:position pos:line="91" pos:column="51"/></name></expr>]<pos:position pos:line="91" pos:column="52"/></index></name><operator pos:line="91" pos:column="52">.<pos:position pos:line="91" pos:column="53"/></operator><name pos:line="91" pos:column="53">type<pos:position pos:line="91" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="91" pos:column="59">data<pos:position pos:line="91" pos:column="63"/></name><operator pos:line="91" pos:column="63">-&gt;<pos:position pos:line="91" pos:column="68"/></operator><name pos:line="91" pos:column="65">scale<pos:position pos:line="91" pos:column="70"/></name></name></expr></argument>,
                                      <argument><expr><name><name pos:line="92" pos:column="39">data<pos:position pos:line="92" pos:column="43"/></name><operator pos:line="92" pos:column="43">-&gt;<pos:position pos:line="92" pos:column="48"/></operator><name pos:line="92" pos:column="45">shift<pos:position pos:line="92" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="92" pos:column="52">host<pos:position pos:line="92" pos:column="56"/></name><operator pos:line="92" pos:column="56">-&gt;<pos:position pos:line="92" pos:column="61"/></operator><name pos:line="92" pos:column="58">name<pos:position pos:line="92" pos:column="62"/></name></name></expr></argument>, <argument><expr><name><name pos:line="92" pos:column="64">data<pos:position pos:line="92" pos:column="68"/></name><operator pos:line="92" pos:column="68">-&gt;<pos:position pos:line="92" pos:column="73"/></operator><name pos:line="92" pos:column="70">name<pos:position pos:line="92" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="92" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="76"/></expr_stmt></block></then></if></block></for>
  }<pos:position pos:line="93" pos:column="4"/></block></for> <comment type="block" pos:line="93" pos:column="5">/* for (res-&gt;variables) */</comment>

  <expr_stmt><expr><call><name pos:line="95" pos:column="3">snmp_free_pdu<pos:position pos:line="95" pos:column="16"/></name><argument_list pos:line="95" pos:column="16">(<argument><expr><name pos:line="95" pos:column="17">res<pos:position pos:line="95" pos:column="20"/></name></expr></argument>)<pos:position pos:line="95" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="22"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="97" pos:column="3">DEBUG<pos:position pos:line="97" pos:column="8"/></name><argument_list pos:line="97" pos:column="8">(<argument><expr><literal type="string" pos:line="97" pos:column="9">"snmp plugin: -&gt; plugin_dispatch_values (&amp;vl);"<pos:position pos:line="97" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="58"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="98" pos:column="3">plugin_dispatch_values<pos:position pos:line="98" pos:column="25"/></name><argument_list pos:line="98" pos:column="25">(<argument><expr><operator pos:line="98" pos:column="26">&amp;<pos:position pos:line="98" pos:column="31"/></operator><name pos:line="98" pos:column="27">vl<pos:position pos:line="98" pos:column="29"/></name></expr></argument>)<pos:position pos:line="98" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="99" pos:column="3">sfree<pos:position pos:line="99" pos:column="8"/></name><argument_list pos:line="99" pos:column="8">(<argument><expr><name><name pos:line="99" pos:column="9">vl<pos:position pos:line="99" pos:column="11"/></name><operator pos:line="99" pos:column="11">.<pos:position pos:line="99" pos:column="12"/></operator><name pos:line="99" pos:column="12">values<pos:position pos:line="99" pos:column="18"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="20"/></expr_stmt>

  <return pos:line="101" pos:column="3">return <expr><operator pos:line="101" pos:column="10">(<pos:position pos:line="101" pos:column="11"/></operator><literal type="number" pos:line="101" pos:column="11">0<pos:position pos:line="101" pos:column="12"/></literal><operator pos:line="101" pos:column="12">)<pos:position pos:line="101" pos:column="13"/></operator></expr>;<pos:position pos:line="101" pos:column="14"/></return>
}<pos:position pos:line="102" pos:column="2"/></block></function></unit>

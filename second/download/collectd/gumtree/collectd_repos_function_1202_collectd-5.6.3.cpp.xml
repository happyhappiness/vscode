<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1202_collectd-5.6.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">handle_putnotif<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">FILE<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">fh<pos:position pos:line="1" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">buffer<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list> <block pos:line="1" pos:column="45">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">char<pos:position pos:line="2" pos:column="7"/></name> <modifier pos:line="2" pos:column="8">*<pos:position pos:line="2" pos:column="9"/></modifier></type><name pos:line="2" pos:column="9">command<pos:position pos:line="2" pos:column="16"/></name></decl>;<pos:position pos:line="2" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">notification_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">n<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><block pos:line="3" pos:column="22">{<expr><literal type="number" pos:line="3" pos:column="23">0<pos:position pos:line="3" pos:column="24"/></literal></expr>}<pos:position pos:line="3" pos:column="25"/></block></expr></init></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><operator pos:line="6" pos:column="7">(<pos:position pos:line="6" pos:column="8"/></operator><name pos:line="6" pos:column="8">fh<pos:position pos:line="6" pos:column="10"/></name> <operator pos:line="6" pos:column="11">==<pos:position pos:line="6" pos:column="13"/></operator> <name pos:line="6" pos:column="14">NULL<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">)<pos:position pos:line="6" pos:column="19"/></operator> <operator pos:line="6" pos:column="20">||<pos:position pos:line="6" pos:column="22"/></operator> <operator pos:line="6" pos:column="23">(<pos:position pos:line="6" pos:column="24"/></operator><name pos:line="6" pos:column="24">buffer<pos:position pos:line="6" pos:column="30"/></name> <operator pos:line="6" pos:column="31">==<pos:position pos:line="6" pos:column="33"/></operator> <name pos:line="6" pos:column="34">NULL<pos:position pos:line="6" pos:column="38"/></name><operator pos:line="6" pos:column="38">)<pos:position pos:line="6" pos:column="39"/></operator></expr>)<pos:position pos:line="6" pos:column="40"/></condition><then pos:line="6" pos:column="40">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><operator pos:line="7" pos:column="12">(<pos:position pos:line="7" pos:column="13"/></operator><operator pos:line="7" pos:column="13">-<pos:position pos:line="7" pos:column="14"/></operator><literal type="number" pos:line="7" pos:column="14">1<pos:position pos:line="7" pos:column="15"/></literal><operator pos:line="7" pos:column="15">)<pos:position pos:line="7" pos:column="16"/></operator></expr>;<pos:position pos:line="7" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="9" pos:column="3">DEBUG<pos:position pos:line="9" pos:column="8"/></name><argument_list pos:line="9" pos:column="8">(<argument><expr><literal type="string" pos:line="9" pos:column="9">"utils_cmd_putnotif: handle_putnotif (fh = %p, buffer = %s);"<pos:position pos:line="9" pos:column="70"/></literal></expr></argument>,
        <argument><expr><operator pos:line="10" pos:column="9">(<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">void<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">*<pos:position pos:line="10" pos:column="16"/></operator><operator pos:line="10" pos:column="16">)<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="17">fh<pos:position pos:line="10" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="21">buffer<pos:position pos:line="10" pos:column="27"/></name></expr></argument>)<pos:position pos:line="10" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="29"/></expr_stmt>

  <expr_stmt><expr><name pos:line="12" pos:column="3">command<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">=<pos:position pos:line="12" pos:column="12"/></operator> <name pos:line="12" pos:column="13">NULL<pos:position pos:line="12" pos:column="17"/></name></expr>;<pos:position pos:line="12" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name pos:line="13" pos:column="3">status<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">=<pos:position pos:line="13" pos:column="11"/></operator> <call><name pos:line="13" pos:column="12">parse_string<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">(<argument><expr><operator pos:line="13" pos:column="25">&amp;<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="26">buffer<pos:position pos:line="13" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="34">&amp;<pos:position pos:line="13" pos:column="39"/></operator><name pos:line="13" pos:column="35">command<pos:position pos:line="13" pos:column="42"/></name></expr></argument>)<pos:position pos:line="13" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="44"/></expr_stmt>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">status<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">!=<pos:position pos:line="14" pos:column="16"/></operator> <literal type="number" pos:line="14" pos:column="17">0<pos:position pos:line="14" pos:column="18"/></literal></expr>)<pos:position pos:line="14" pos:column="19"/></condition><then pos:line="14" pos:column="19"> <block pos:line="14" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">print_to_socket<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><name pos:line="15" pos:column="21">fh<pos:position pos:line="15" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="25">"-1 Cannot parse command.\n"<pos:position pos:line="15" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="55"/></expr_stmt>
    <return pos:line="16" pos:column="5">return <expr><operator pos:line="16" pos:column="12">(<pos:position pos:line="16" pos:column="13"/></operator><operator pos:line="16" pos:column="13">-<pos:position pos:line="16" pos:column="14"/></operator><literal type="number" pos:line="16" pos:column="14">1<pos:position pos:line="16" pos:column="15"/></literal><operator pos:line="16" pos:column="15">)<pos:position pos:line="16" pos:column="16"/></operator></expr>;<pos:position pos:line="16" pos:column="17"/></return>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">assert<pos:position pos:line="18" pos:column="9"/></name><argument_list pos:line="18" pos:column="9">(<argument><expr><name pos:line="18" pos:column="10">command<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">!=<pos:position pos:line="18" pos:column="20"/></operator> <name pos:line="18" pos:column="21">NULL<pos:position pos:line="18" pos:column="25"/></name></expr></argument>)<pos:position pos:line="18" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="27"/></expr_stmt>

  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><call><name pos:line="20" pos:column="7">strcasecmp<pos:position pos:line="20" pos:column="17"/></name><argument_list pos:line="20" pos:column="17">(<argument><expr><literal type="string" pos:line="20" pos:column="18">"PUTNOTIF"<pos:position pos:line="20" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="30">command<pos:position pos:line="20" pos:column="37"/></name></expr></argument>)<pos:position pos:line="20" pos:column="38"/></argument_list></call> <operator pos:line="20" pos:column="39">!=<pos:position pos:line="20" pos:column="41"/></operator> <literal type="number" pos:line="20" pos:column="42">0<pos:position pos:line="20" pos:column="43"/></literal></expr>)<pos:position pos:line="20" pos:column="44"/></condition><then pos:line="20" pos:column="44"> <block pos:line="20" pos:column="45">{
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">print_to_socket<pos:position pos:line="21" pos:column="20"/></name><argument_list pos:line="21" pos:column="20">(<argument><expr><name pos:line="21" pos:column="21">fh<pos:position pos:line="21" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="25">"-1 Unexpected command: `%s'.\n"<pos:position pos:line="21" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="59">command<pos:position pos:line="21" pos:column="66"/></name></expr></argument>)<pos:position pos:line="21" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="68"/></expr_stmt>
    <return pos:line="22" pos:column="5">return <expr><operator pos:line="22" pos:column="12">(<pos:position pos:line="22" pos:column="13"/></operator><operator pos:line="22" pos:column="13">-<pos:position pos:line="22" pos:column="14"/></operator><literal type="number" pos:line="22" pos:column="14">1<pos:position pos:line="22" pos:column="15"/></literal><operator pos:line="22" pos:column="15">)<pos:position pos:line="22" pos:column="16"/></operator></expr>;<pos:position pos:line="22" pos:column="17"/></return>
  }<pos:position pos:line="23" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="25" pos:column="3">status<pos:position pos:line="25" pos:column="9"/></name> <operator pos:line="25" pos:column="10">=<pos:position pos:line="25" pos:column="11"/></operator> <literal type="number" pos:line="25" pos:column="12">0<pos:position pos:line="25" pos:column="13"/></literal></expr>;<pos:position pos:line="25" pos:column="14"/></expr_stmt>
  <while pos:line="26" pos:column="3">while <condition pos:line="26" pos:column="9">(<expr><operator pos:line="26" pos:column="10">*<pos:position pos:line="26" pos:column="11"/></operator><name pos:line="26" pos:column="11">buffer<pos:position pos:line="26" pos:column="17"/></name> <operator pos:line="26" pos:column="18">!=<pos:position pos:line="26" pos:column="20"/></operator> <literal type="number" pos:line="26" pos:column="21">0<pos:position pos:line="26" pos:column="22"/></literal></expr>)<pos:position pos:line="26" pos:column="23"/></condition> <block pos:line="26" pos:column="24">{
    <decl_stmt><decl><type><name pos:line="27" pos:column="5">char<pos:position pos:line="27" pos:column="9"/></name> <modifier pos:line="27" pos:column="10">*<pos:position pos:line="27" pos:column="11"/></modifier></type><name pos:line="27" pos:column="11">key<pos:position pos:line="27" pos:column="14"/></name></decl>;<pos:position pos:line="27" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="28" pos:column="5">char<pos:position pos:line="28" pos:column="9"/></name> <modifier pos:line="28" pos:column="10">*<pos:position pos:line="28" pos:column="11"/></modifier></type><name pos:line="28" pos:column="11">value<pos:position pos:line="28" pos:column="16"/></name></decl>;<pos:position pos:line="28" pos:column="17"/></decl_stmt>

    <expr_stmt><expr><name pos:line="30" pos:column="5">status<pos:position pos:line="30" pos:column="11"/></name> <operator pos:line="30" pos:column="12">=<pos:position pos:line="30" pos:column="13"/></operator> <call><name pos:line="30" pos:column="14">parse_option<pos:position pos:line="30" pos:column="26"/></name><argument_list pos:line="30" pos:column="26">(<argument><expr><operator pos:line="30" pos:column="27">&amp;<pos:position pos:line="30" pos:column="32"/></operator><name pos:line="30" pos:column="28">buffer<pos:position pos:line="30" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="36">&amp;<pos:position pos:line="30" pos:column="41"/></operator><name pos:line="30" pos:column="37">key<pos:position pos:line="30" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="42">&amp;<pos:position pos:line="30" pos:column="47"/></operator><name pos:line="30" pos:column="43">value<pos:position pos:line="30" pos:column="48"/></name></expr></argument>)<pos:position pos:line="30" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="50"/></expr_stmt>
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name pos:line="31" pos:column="9">status<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">!=<pos:position pos:line="31" pos:column="18"/></operator> <literal type="number" pos:line="31" pos:column="19">0<pos:position pos:line="31" pos:column="20"/></literal></expr>)<pos:position pos:line="31" pos:column="21"/></condition><then pos:line="31" pos:column="21"> <block pos:line="31" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="32" pos:column="7">print_to_socket<pos:position pos:line="32" pos:column="22"/></name><argument_list pos:line="32" pos:column="22">(<argument><expr><name pos:line="32" pos:column="23">fh<pos:position pos:line="32" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="27">"-1 Malformed option.\n"<pos:position pos:line="32" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="53"/></expr_stmt>
      <break pos:line="33" pos:column="7">break;<pos:position pos:line="33" pos:column="13"/></break>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="36" pos:column="5">status<pos:position pos:line="36" pos:column="11"/></name> <operator pos:line="36" pos:column="12">=<pos:position pos:line="36" pos:column="13"/></operator> <call><name pos:line="36" pos:column="14">set_option<pos:position pos:line="36" pos:column="24"/></name><argument_list pos:line="36" pos:column="24">(<argument><expr><operator pos:line="36" pos:column="25">&amp;<pos:position pos:line="36" pos:column="30"/></operator><name pos:line="36" pos:column="26">n<pos:position pos:line="36" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="29">key<pos:position pos:line="36" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="34">value<pos:position pos:line="36" pos:column="39"/></name></expr></argument>)<pos:position pos:line="36" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="41"/></expr_stmt>
    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name pos:line="37" pos:column="9">status<pos:position pos:line="37" pos:column="15"/></name> <operator pos:line="37" pos:column="16">!=<pos:position pos:line="37" pos:column="18"/></operator> <literal type="number" pos:line="37" pos:column="19">0<pos:position pos:line="37" pos:column="20"/></literal></expr>)<pos:position pos:line="37" pos:column="21"/></condition><then pos:line="37" pos:column="21"> <block pos:line="37" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="38" pos:column="7">print_to_socket<pos:position pos:line="38" pos:column="22"/></name><argument_list pos:line="38" pos:column="22">(<argument><expr><name pos:line="38" pos:column="23">fh<pos:position pos:line="38" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="27">"-1 Error parsing option `%s'\n"<pos:position pos:line="38" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="61">key<pos:position pos:line="38" pos:column="64"/></name></expr></argument>)<pos:position pos:line="38" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="66"/></expr_stmt>
      <break pos:line="39" pos:column="7">break;<pos:position pos:line="39" pos:column="13"/></break>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>
  }<pos:position pos:line="41" pos:column="4"/></block></while> <comment type="block" pos:line="41" pos:column="5">/* for (i) */</comment>

  <comment type="block" pos:line="43" pos:column="3">/* Check for required fields and complain if anything is missing. */</comment>
  <if pos:line="44" pos:column="3">if <condition pos:line="44" pos:column="6">(<expr><operator pos:line="44" pos:column="7">(<pos:position pos:line="44" pos:column="8"/></operator><name pos:line="44" pos:column="8">status<pos:position pos:line="44" pos:column="14"/></name> <operator pos:line="44" pos:column="15">==<pos:position pos:line="44" pos:column="17"/></operator> <literal type="number" pos:line="44" pos:column="18">0<pos:position pos:line="44" pos:column="19"/></literal><operator pos:line="44" pos:column="19">)<pos:position pos:line="44" pos:column="20"/></operator> <operator pos:line="44" pos:column="21">&amp;&amp;<pos:position pos:line="44" pos:column="31"/></operator> <operator pos:line="44" pos:column="24">(<pos:position pos:line="44" pos:column="25"/></operator><name><name pos:line="44" pos:column="25">n<pos:position pos:line="44" pos:column="26"/></name><operator pos:line="44" pos:column="26">.<pos:position pos:line="44" pos:column="27"/></operator><name pos:line="44" pos:column="27">severity<pos:position pos:line="44" pos:column="35"/></name></name> <operator pos:line="44" pos:column="36">==<pos:position pos:line="44" pos:column="38"/></operator> <literal type="number" pos:line="44" pos:column="39">0<pos:position pos:line="44" pos:column="40"/></literal><operator pos:line="44" pos:column="40">)<pos:position pos:line="44" pos:column="41"/></operator></expr>)<pos:position pos:line="44" pos:column="42"/></condition><then pos:line="44" pos:column="42"> <block pos:line="44" pos:column="43">{
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">print_to_socket<pos:position pos:line="45" pos:column="20"/></name><argument_list pos:line="45" pos:column="20">(<argument><expr><name pos:line="45" pos:column="21">fh<pos:position pos:line="45" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="25">"-1 Option `severity' missing.\n"<pos:position pos:line="45" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><name pos:line="46" pos:column="5">status<pos:position pos:line="46" pos:column="11"/></name> <operator pos:line="46" pos:column="12">=<pos:position pos:line="46" pos:column="13"/></operator> <operator pos:line="46" pos:column="14">-<pos:position pos:line="46" pos:column="15"/></operator><literal type="number" pos:line="46" pos:column="15">1<pos:position pos:line="46" pos:column="16"/></literal></expr>;<pos:position pos:line="46" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="47" pos:column="4"/></block></then></if>
  <if pos:line="48" pos:column="3">if <condition pos:line="48" pos:column="6">(<expr><operator pos:line="48" pos:column="7">(<pos:position pos:line="48" pos:column="8"/></operator><name pos:line="48" pos:column="8">status<pos:position pos:line="48" pos:column="14"/></name> <operator pos:line="48" pos:column="15">==<pos:position pos:line="48" pos:column="17"/></operator> <literal type="number" pos:line="48" pos:column="18">0<pos:position pos:line="48" pos:column="19"/></literal><operator pos:line="48" pos:column="19">)<pos:position pos:line="48" pos:column="20"/></operator> <operator pos:line="48" pos:column="21">&amp;&amp;<pos:position pos:line="48" pos:column="31"/></operator> <operator pos:line="48" pos:column="24">(<pos:position pos:line="48" pos:column="25"/></operator><name><name pos:line="48" pos:column="25">n<pos:position pos:line="48" pos:column="26"/></name><operator pos:line="48" pos:column="26">.<pos:position pos:line="48" pos:column="27"/></operator><name pos:line="48" pos:column="27">time<pos:position pos:line="48" pos:column="31"/></name></name> <operator pos:line="48" pos:column="32">==<pos:position pos:line="48" pos:column="34"/></operator> <literal type="number" pos:line="48" pos:column="35">0<pos:position pos:line="48" pos:column="36"/></literal><operator pos:line="48" pos:column="36">)<pos:position pos:line="48" pos:column="37"/></operator></expr>)<pos:position pos:line="48" pos:column="38"/></condition><then pos:line="48" pos:column="38"> <block pos:line="48" pos:column="39">{
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">print_to_socket<pos:position pos:line="49" pos:column="20"/></name><argument_list pos:line="49" pos:column="20">(<argument><expr><name pos:line="49" pos:column="21">fh<pos:position pos:line="49" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="25">"-1 Option `time' missing.\n"<pos:position pos:line="49" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><name pos:line="50" pos:column="5">status<pos:position pos:line="50" pos:column="11"/></name> <operator pos:line="50" pos:column="12">=<pos:position pos:line="50" pos:column="13"/></operator> <operator pos:line="50" pos:column="14">-<pos:position pos:line="50" pos:column="15"/></operator><literal type="number" pos:line="50" pos:column="15">1<pos:position pos:line="50" pos:column="16"/></literal></expr>;<pos:position pos:line="50" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="51" pos:column="4"/></block></then></if>
  <if pos:line="52" pos:column="3">if <condition pos:line="52" pos:column="6">(<expr><operator pos:line="52" pos:column="7">(<pos:position pos:line="52" pos:column="8"/></operator><name pos:line="52" pos:column="8">status<pos:position pos:line="52" pos:column="14"/></name> <operator pos:line="52" pos:column="15">==<pos:position pos:line="52" pos:column="17"/></operator> <literal type="number" pos:line="52" pos:column="18">0<pos:position pos:line="52" pos:column="19"/></literal><operator pos:line="52" pos:column="19">)<pos:position pos:line="52" pos:column="20"/></operator> <operator pos:line="52" pos:column="21">&amp;&amp;<pos:position pos:line="52" pos:column="31"/></operator> <operator pos:line="52" pos:column="24">(<pos:position pos:line="52" pos:column="25"/></operator><call><name pos:line="52" pos:column="25">strlen<pos:position pos:line="52" pos:column="31"/></name><argument_list pos:line="52" pos:column="31">(<argument><expr><name><name pos:line="52" pos:column="32">n<pos:position pos:line="52" pos:column="33"/></name><operator pos:line="52" pos:column="33">.<pos:position pos:line="52" pos:column="34"/></operator><name pos:line="52" pos:column="34">message<pos:position pos:line="52" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="42"/></argument_list></call> <operator pos:line="52" pos:column="43">==<pos:position pos:line="52" pos:column="45"/></operator> <literal type="number" pos:line="52" pos:column="46">0<pos:position pos:line="52" pos:column="47"/></literal><operator pos:line="52" pos:column="47">)<pos:position pos:line="52" pos:column="48"/></operator></expr>)<pos:position pos:line="52" pos:column="49"/></condition><then pos:line="52" pos:column="49"> <block pos:line="52" pos:column="50">{
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">print_to_socket<pos:position pos:line="53" pos:column="20"/></name><argument_list pos:line="53" pos:column="20">(<argument><expr><name pos:line="53" pos:column="21">fh<pos:position pos:line="53" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="25">"-1 No message or message of length 0 given.\n"<pos:position pos:line="53" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="74"/></expr_stmt>
    <expr_stmt><expr><name pos:line="54" pos:column="5">status<pos:position pos:line="54" pos:column="11"/></name> <operator pos:line="54" pos:column="12">=<pos:position pos:line="54" pos:column="13"/></operator> <operator pos:line="54" pos:column="14">-<pos:position pos:line="54" pos:column="15"/></operator><literal type="number" pos:line="54" pos:column="15">1<pos:position pos:line="54" pos:column="16"/></literal></expr>;<pos:position pos:line="54" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="55" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="57" pos:column="3">/* If status is still zero the notification is fine and we can finally
   * dispatch it. */</comment>
  <if pos:line="59" pos:column="3">if <condition pos:line="59" pos:column="6">(<expr><name pos:line="59" pos:column="7">status<pos:position pos:line="59" pos:column="13"/></name> <operator pos:line="59" pos:column="14">==<pos:position pos:line="59" pos:column="16"/></operator> <literal type="number" pos:line="59" pos:column="17">0<pos:position pos:line="59" pos:column="18"/></literal></expr>)<pos:position pos:line="59" pos:column="19"/></condition><then pos:line="59" pos:column="19"> <block pos:line="59" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="60" pos:column="5">plugin_dispatch_notification<pos:position pos:line="60" pos:column="33"/></name><argument_list pos:line="60" pos:column="33">(<argument><expr><operator pos:line="60" pos:column="34">&amp;<pos:position pos:line="60" pos:column="39"/></operator><name pos:line="60" pos:column="35">n<pos:position pos:line="60" pos:column="36"/></name></expr></argument>)<pos:position pos:line="60" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="61" pos:column="5">print_to_socket<pos:position pos:line="61" pos:column="20"/></name><argument_list pos:line="61" pos:column="20">(<argument><expr><name pos:line="61" pos:column="21">fh<pos:position pos:line="61" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="25">"0 Success\n"<pos:position pos:line="61" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="40"/></expr_stmt>
  }<pos:position pos:line="62" pos:column="4"/></block></then></if>

  <return pos:line="64" pos:column="3">return <expr><operator pos:line="64" pos:column="10">(<pos:position pos:line="64" pos:column="11"/></operator><literal type="number" pos:line="64" pos:column="11">0<pos:position pos:line="64" pos:column="12"/></literal><operator pos:line="64" pos:column="12">)<pos:position pos:line="64" pos:column="13"/></operator></expr>;<pos:position pos:line="64" pos:column="14"/></return>
}<pos:position pos:line="65" pos:column="2"/></block></function></unit>

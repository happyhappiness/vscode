<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1836_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">mysql_config_database<pos:position pos:line="1" pos:column="33"/></name> <parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">oconfig_item_t<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">ci<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list> <comment type="block" pos:line="1" pos:column="55">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">mysql_database_t<pos:position pos:line="3" pos:column="25"/></name> <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier></type><name pos:line="3" pos:column="27">db<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">status<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><literal type="number" pos:line="4" pos:column="22">0<pos:position pos:line="4" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">(<pos:position pos:line="6" pos:column="14"/></operator><name><name pos:line="6" pos:column="14">ci<pos:position pos:line="6" pos:column="16"/></name><operator pos:line="6" pos:column="16">-&gt;<pos:position pos:line="6" pos:column="21"/></operator><name pos:line="6" pos:column="18">values_num<pos:position pos:line="6" pos:column="28"/></name></name> <operator pos:line="6" pos:column="29">!=<pos:position pos:line="6" pos:column="31"/></operator> <literal type="number" pos:line="6" pos:column="32">1<pos:position pos:line="6" pos:column="33"/></literal><operator pos:line="6" pos:column="33">)<pos:position pos:line="6" pos:column="34"/></operator>
	    <operator pos:line="7" pos:column="13">||<pos:position pos:line="7" pos:column="15"/></operator> <operator pos:line="7" pos:column="16">(<pos:position pos:line="7" pos:column="17"/></operator><name><name pos:line="7" pos:column="17">ci<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">-&gt;<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="21">values<pos:position pos:line="7" pos:column="27"/></name><index pos:line="7" pos:column="27">[<expr><literal type="number" pos:line="7" pos:column="28">0<pos:position pos:line="7" pos:column="29"/></literal></expr>]<pos:position pos:line="7" pos:column="30"/></index></name><operator pos:line="7" pos:column="30">.<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="31">type<pos:position pos:line="7" pos:column="35"/></name> <operator pos:line="7" pos:column="36">!=<pos:position pos:line="7" pos:column="38"/></operator> <name pos:line="7" pos:column="39">OCONFIG_TYPE_STRING<pos:position pos:line="7" pos:column="58"/></name><operator pos:line="7" pos:column="58">)<pos:position pos:line="7" pos:column="59"/></operator></expr>)<pos:position pos:line="7" pos:column="60"/></condition><then pos:line="7" pos:column="60">
	<block pos:line="8" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">WARNING<pos:position pos:line="9" pos:column="24"/></name> <argument_list pos:line="9" pos:column="25">(<argument><expr><literal type="string" pos:line="9" pos:column="26">"mysql plugin: The `Database' block "<pos:position pos:line="9" pos:column="63"/></literal>
			 <literal type="string" pos:line="10" pos:column="26">"needs exactly one string argument."<pos:position pos:line="10" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="64"/></expr_stmt>
		<return pos:line="11" pos:column="17">return <expr><operator pos:line="11" pos:column="24">(<pos:position pos:line="11" pos:column="25"/></operator><operator pos:line="11" pos:column="25">-<pos:position pos:line="11" pos:column="26"/></operator><literal type="number" pos:line="11" pos:column="26">1<pos:position pos:line="11" pos:column="27"/></literal><operator pos:line="11" pos:column="27">)<pos:position pos:line="11" pos:column="28"/></operator></expr>;<pos:position pos:line="11" pos:column="29"/></return>
	}<pos:position pos:line="12" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="14" pos:column="9">db<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <call><name pos:line="14" pos:column="14">calloc<pos:position pos:line="14" pos:column="20"/></name> <argument_list pos:line="14" pos:column="21">(<argument><expr><literal type="number" pos:line="14" pos:column="22">1<pos:position pos:line="14" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="25">sizeof <argument_list pos:line="14" pos:column="32">(<argument><expr><operator pos:line="14" pos:column="33">*<pos:position pos:line="14" pos:column="34"/></operator><name pos:line="14" pos:column="34">db<pos:position pos:line="14" pos:column="36"/></name></expr></argument>)<pos:position pos:line="14" pos:column="37"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="39"/></expr_stmt>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">db<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">==<pos:position pos:line="15" pos:column="18"/></operator> <name pos:line="15" pos:column="19">NULL<pos:position pos:line="15" pos:column="23"/></name></expr>)<pos:position pos:line="15" pos:column="24"/></condition><then pos:line="15" pos:column="24">
	<block pos:line="16" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">ERROR<pos:position pos:line="17" pos:column="22"/></name> <argument_list pos:line="17" pos:column="23">(<argument><expr><literal type="string" pos:line="17" pos:column="24">"mysql plugin: calloc failed."<pos:position pos:line="17" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="56"/></expr_stmt>
		<return pos:line="18" pos:column="17">return <expr><operator pos:line="18" pos:column="24">(<pos:position pos:line="18" pos:column="25"/></operator><operator pos:line="18" pos:column="25">-<pos:position pos:line="18" pos:column="26"/></operator><literal type="number" pos:line="18" pos:column="26">1<pos:position pos:line="18" pos:column="27"/></literal><operator pos:line="18" pos:column="27">)<pos:position pos:line="18" pos:column="28"/></operator></expr>;<pos:position pos:line="18" pos:column="29"/></return>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="21" pos:column="9">/* initialize all the pointers */</comment>
	<expr_stmt><expr><name><name pos:line="22" pos:column="9">db<pos:position pos:line="22" pos:column="11"/></name><operator pos:line="22" pos:column="11">-&gt;<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="13">alias<pos:position pos:line="22" pos:column="18"/></name></name>    <operator pos:line="22" pos:column="22">=<pos:position pos:line="22" pos:column="23"/></operator> <name pos:line="22" pos:column="24">NULL<pos:position pos:line="22" pos:column="28"/></name></expr>;<pos:position pos:line="22" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="23" pos:column="9">db<pos:position pos:line="23" pos:column="11"/></name><operator pos:line="23" pos:column="11">-&gt;<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="13">host<pos:position pos:line="23" pos:column="17"/></name></name>     <operator pos:line="23" pos:column="22">=<pos:position pos:line="23" pos:column="23"/></operator> <name pos:line="23" pos:column="24">NULL<pos:position pos:line="23" pos:column="28"/></name></expr>;<pos:position pos:line="23" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="24" pos:column="9">db<pos:position pos:line="24" pos:column="11"/></name><operator pos:line="24" pos:column="11">-&gt;<pos:position pos:line="24" pos:column="16"/></operator><name pos:line="24" pos:column="13">user<pos:position pos:line="24" pos:column="17"/></name></name>     <operator pos:line="24" pos:column="22">=<pos:position pos:line="24" pos:column="23"/></operator> <name pos:line="24" pos:column="24">NULL<pos:position pos:line="24" pos:column="28"/></name></expr>;<pos:position pos:line="24" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="25" pos:column="9">db<pos:position pos:line="25" pos:column="11"/></name><operator pos:line="25" pos:column="11">-&gt;<pos:position pos:line="25" pos:column="16"/></operator><name pos:line="25" pos:column="13">pass<pos:position pos:line="25" pos:column="17"/></name></name>     <operator pos:line="25" pos:column="22">=<pos:position pos:line="25" pos:column="23"/></operator> <name pos:line="25" pos:column="24">NULL<pos:position pos:line="25" pos:column="28"/></name></expr>;<pos:position pos:line="25" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="26" pos:column="9">db<pos:position pos:line="26" pos:column="11"/></name><operator pos:line="26" pos:column="11">-&gt;<pos:position pos:line="26" pos:column="16"/></operator><name pos:line="26" pos:column="13">database<pos:position pos:line="26" pos:column="21"/></name></name> <operator pos:line="26" pos:column="22">=<pos:position pos:line="26" pos:column="23"/></operator> <name pos:line="26" pos:column="24">NULL<pos:position pos:line="26" pos:column="28"/></name></expr>;<pos:position pos:line="26" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="27" pos:column="9">db<pos:position pos:line="27" pos:column="11"/></name><operator pos:line="27" pos:column="11">-&gt;<pos:position pos:line="27" pos:column="16"/></operator><name pos:line="27" pos:column="13">key<pos:position pos:line="27" pos:column="16"/></name></name>      <operator pos:line="27" pos:column="22">=<pos:position pos:line="27" pos:column="23"/></operator> <name pos:line="27" pos:column="24">NULL<pos:position pos:line="27" pos:column="28"/></name></expr>;<pos:position pos:line="27" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="28" pos:column="9">db<pos:position pos:line="28" pos:column="11"/></name><operator pos:line="28" pos:column="11">-&gt;<pos:position pos:line="28" pos:column="16"/></operator><name pos:line="28" pos:column="13">cert<pos:position pos:line="28" pos:column="17"/></name></name>     <operator pos:line="28" pos:column="22">=<pos:position pos:line="28" pos:column="23"/></operator> <name pos:line="28" pos:column="24">NULL<pos:position pos:line="28" pos:column="28"/></name></expr>;<pos:position pos:line="28" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="29" pos:column="9">db<pos:position pos:line="29" pos:column="11"/></name><operator pos:line="29" pos:column="11">-&gt;<pos:position pos:line="29" pos:column="16"/></operator><name pos:line="29" pos:column="13">ca<pos:position pos:line="29" pos:column="15"/></name></name>       <operator pos:line="29" pos:column="22">=<pos:position pos:line="29" pos:column="23"/></operator> <name pos:line="29" pos:column="24">NULL<pos:position pos:line="29" pos:column="28"/></name></expr>;<pos:position pos:line="29" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="30" pos:column="9">db<pos:position pos:line="30" pos:column="11"/></name><operator pos:line="30" pos:column="11">-&gt;<pos:position pos:line="30" pos:column="16"/></operator><name pos:line="30" pos:column="13">capath<pos:position pos:line="30" pos:column="19"/></name></name>   <operator pos:line="30" pos:column="22">=<pos:position pos:line="30" pos:column="23"/></operator> <name pos:line="30" pos:column="24">NULL<pos:position pos:line="30" pos:column="28"/></name></expr>;<pos:position pos:line="30" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="31" pos:column="9">db<pos:position pos:line="31" pos:column="11"/></name><operator pos:line="31" pos:column="11">-&gt;<pos:position pos:line="31" pos:column="16"/></operator><name pos:line="31" pos:column="13">cipher<pos:position pos:line="31" pos:column="19"/></name></name>   <operator pos:line="31" pos:column="22">=<pos:position pos:line="31" pos:column="23"/></operator> <name pos:line="31" pos:column="24">NULL<pos:position pos:line="31" pos:column="28"/></name></expr>;<pos:position pos:line="31" pos:column="29"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="33" pos:column="9">db<pos:position pos:line="33" pos:column="11"/></name><operator pos:line="33" pos:column="11">-&gt;<pos:position pos:line="33" pos:column="16"/></operator><name pos:line="33" pos:column="13">socket<pos:position pos:line="33" pos:column="19"/></name></name>   <operator pos:line="33" pos:column="22">=<pos:position pos:line="33" pos:column="23"/></operator> <name pos:line="33" pos:column="24">NULL<pos:position pos:line="33" pos:column="28"/></name></expr>;<pos:position pos:line="33" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="34" pos:column="9">db<pos:position pos:line="34" pos:column="11"/></name><operator pos:line="34" pos:column="11">-&gt;<pos:position pos:line="34" pos:column="16"/></operator><name pos:line="34" pos:column="13">con<pos:position pos:line="34" pos:column="16"/></name></name>      <operator pos:line="34" pos:column="22">=<pos:position pos:line="34" pos:column="23"/></operator> <name pos:line="34" pos:column="24">NULL<pos:position pos:line="34" pos:column="28"/></name></expr>;<pos:position pos:line="34" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="35" pos:column="9">db<pos:position pos:line="35" pos:column="11"/></name><operator pos:line="35" pos:column="11">-&gt;<pos:position pos:line="35" pos:column="16"/></operator><name pos:line="35" pos:column="13">timeout<pos:position pos:line="35" pos:column="20"/></name></name>  <operator pos:line="35" pos:column="22">=<pos:position pos:line="35" pos:column="23"/></operator> <literal type="number" pos:line="35" pos:column="24">0<pos:position pos:line="35" pos:column="25"/></literal></expr>;<pos:position pos:line="35" pos:column="26"/></expr_stmt>

	<comment type="block" pos:line="37" pos:column="9">/* trigger a notification, if it's not running */</comment>
	<expr_stmt><expr><name><name pos:line="38" pos:column="9">db<pos:position pos:line="38" pos:column="11"/></name><operator pos:line="38" pos:column="11">-&gt;<pos:position pos:line="38" pos:column="16"/></operator><name pos:line="38" pos:column="13">slave_io_running<pos:position pos:line="38" pos:column="29"/></name></name>  <operator pos:line="38" pos:column="31">=<pos:position pos:line="38" pos:column="32"/></operator> <literal type="number" pos:line="38" pos:column="33">1<pos:position pos:line="38" pos:column="34"/></literal></expr>;<pos:position pos:line="38" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="39" pos:column="9">db<pos:position pos:line="39" pos:column="11"/></name><operator pos:line="39" pos:column="11">-&gt;<pos:position pos:line="39" pos:column="16"/></operator><name pos:line="39" pos:column="13">slave_sql_running<pos:position pos:line="39" pos:column="30"/></name></name> <operator pos:line="39" pos:column="31">=<pos:position pos:line="39" pos:column="32"/></operator> <literal type="number" pos:line="39" pos:column="33">1<pos:position pos:line="39" pos:column="34"/></literal></expr>;<pos:position pos:line="39" pos:column="35"/></expr_stmt>

	<expr_stmt><expr><name pos:line="41" pos:column="9">status<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">=<pos:position pos:line="41" pos:column="17"/></operator> <call><name pos:line="41" pos:column="18">cf_util_get_string<pos:position pos:line="41" pos:column="36"/></name> <argument_list pos:line="41" pos:column="37">(<argument><expr><name pos:line="41" pos:column="38">ci<pos:position pos:line="41" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="42">&amp;<pos:position pos:line="41" pos:column="47"/></operator><name><name pos:line="41" pos:column="43">db<pos:position pos:line="41" pos:column="45"/></name><operator pos:line="41" pos:column="45">-&gt;<pos:position pos:line="41" pos:column="50"/></operator><name pos:line="41" pos:column="47">instance<pos:position pos:line="41" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="57"/></expr_stmt>
	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name pos:line="42" pos:column="13">status<pos:position pos:line="42" pos:column="19"/></name> <operator pos:line="42" pos:column="20">!=<pos:position pos:line="42" pos:column="22"/></operator> <literal type="number" pos:line="42" pos:column="23">0<pos:position pos:line="42" pos:column="24"/></literal></expr>)<pos:position pos:line="42" pos:column="25"/></condition><then pos:line="42" pos:column="25">
	<block pos:line="43" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="44" pos:column="17">sfree<pos:position pos:line="44" pos:column="22"/></name> <argument_list pos:line="44" pos:column="23">(<argument><expr><name pos:line="44" pos:column="24">db<pos:position pos:line="44" pos:column="26"/></name></expr></argument>)<pos:position pos:line="44" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="28"/></expr_stmt>
		<return pos:line="45" pos:column="17">return <expr><operator pos:line="45" pos:column="24">(<pos:position pos:line="45" pos:column="25"/></operator><name pos:line="45" pos:column="25">status<pos:position pos:line="45" pos:column="31"/></name><operator pos:line="45" pos:column="31">)<pos:position pos:line="45" pos:column="32"/></operator></expr>;<pos:position pos:line="45" pos:column="33"/></return>
	}<pos:position pos:line="46" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="47" pos:column="9">assert<pos:position pos:line="47" pos:column="15"/></name> <argument_list pos:line="47" pos:column="16">(<argument><expr><name><name pos:line="47" pos:column="17">db<pos:position pos:line="47" pos:column="19"/></name><operator pos:line="47" pos:column="19">-&gt;<pos:position pos:line="47" pos:column="24"/></operator><name pos:line="47" pos:column="21">instance<pos:position pos:line="47" pos:column="29"/></name></name> <operator pos:line="47" pos:column="30">!=<pos:position pos:line="47" pos:column="32"/></operator> <name pos:line="47" pos:column="33">NULL<pos:position pos:line="47" pos:column="37"/></name></expr></argument>)<pos:position pos:line="47" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="39"/></expr_stmt>

	<comment type="block" pos:line="49" pos:column="9">/* Fill the `mysql_database_t' structure.. */</comment>
	<for pos:line="50" pos:column="9">for <control pos:line="50" pos:column="13">(<init><decl><type><name pos:line="50" pos:column="14">int<pos:position pos:line="50" pos:column="17"/></name></type> <name pos:line="50" pos:column="18">i<pos:position pos:line="50" pos:column="19"/></name> <init pos:line="50" pos:column="20">= <expr><literal type="number" pos:line="50" pos:column="22">0<pos:position pos:line="50" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="50" pos:column="24"/></init> <condition><expr><name pos:line="50" pos:column="25">i<pos:position pos:line="50" pos:column="26"/></name> <operator pos:line="50" pos:column="27">&lt;<pos:position pos:line="50" pos:column="31"/></operator> <name><name pos:line="50" pos:column="29">ci<pos:position pos:line="50" pos:column="31"/></name><operator pos:line="50" pos:column="31">-&gt;<pos:position pos:line="50" pos:column="36"/></operator><name pos:line="50" pos:column="33">children_num<pos:position pos:line="50" pos:column="45"/></name></name></expr>;<pos:position pos:line="50" pos:column="46"/></condition> <incr><expr><name pos:line="50" pos:column="47">i<pos:position pos:line="50" pos:column="48"/></name><operator pos:line="50" pos:column="48">++<pos:position pos:line="50" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="50" pos:column="51"/></control>
	<block pos:line="51" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="52" pos:column="17">oconfig_item_t<pos:position pos:line="52" pos:column="31"/></name> <modifier pos:line="52" pos:column="32">*<pos:position pos:line="52" pos:column="33"/></modifier></type><name pos:line="52" pos:column="33">child<pos:position pos:line="52" pos:column="38"/></name> <init pos:line="52" pos:column="39">= <expr><name><name pos:line="52" pos:column="41">ci<pos:position pos:line="52" pos:column="43"/></name><operator pos:line="52" pos:column="43">-&gt;<pos:position pos:line="52" pos:column="48"/></operator><name pos:line="52" pos:column="45">children<pos:position pos:line="52" pos:column="53"/></name></name> <operator pos:line="52" pos:column="54">+<pos:position pos:line="52" pos:column="55"/></operator> <name pos:line="52" pos:column="56">i<pos:position pos:line="52" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="52" pos:column="58"/></decl_stmt>

		<if pos:line="54" pos:column="17">if <condition pos:line="54" pos:column="20">(<expr><call><name pos:line="54" pos:column="21">strcasecmp<pos:position pos:line="54" pos:column="31"/></name> <argument_list pos:line="54" pos:column="32">(<argument><expr><literal type="string" pos:line="54" pos:column="33">"Alias"<pos:position pos:line="54" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="42">child<pos:position pos:line="54" pos:column="47"/></name><operator pos:line="54" pos:column="47">-&gt;<pos:position pos:line="54" pos:column="52"/></operator><name pos:line="54" pos:column="49">key<pos:position pos:line="54" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="53"/></argument_list></call> <operator pos:line="54" pos:column="54">==<pos:position pos:line="54" pos:column="56"/></operator> <literal type="number" pos:line="54" pos:column="57">0<pos:position pos:line="54" pos:column="58"/></literal></expr>)<pos:position pos:line="54" pos:column="59"/></condition><then pos:line="54" pos:column="59">
			<block type="pseudo"><expr_stmt><expr><name pos:line="55" pos:column="25">status<pos:position pos:line="55" pos:column="31"/></name> <operator pos:line="55" pos:column="32">=<pos:position pos:line="55" pos:column="33"/></operator> <call><name pos:line="55" pos:column="34">cf_util_get_string<pos:position pos:line="55" pos:column="52"/></name> <argument_list pos:line="55" pos:column="53">(<argument><expr><name pos:line="55" pos:column="54">child<pos:position pos:line="55" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="61">&amp;<pos:position pos:line="55" pos:column="66"/></operator><name><name pos:line="55" pos:column="62">db<pos:position pos:line="55" pos:column="64"/></name><operator pos:line="55" pos:column="64">-&gt;<pos:position pos:line="55" pos:column="69"/></operator><name pos:line="55" pos:column="66">alias<pos:position pos:line="55" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="73"/></expr_stmt></block></then>
		<elseif pos:line="56" pos:column="17">else <if pos:line="56" pos:column="22">if <condition pos:line="56" pos:column="25">(<expr><call><name pos:line="56" pos:column="26">strcasecmp<pos:position pos:line="56" pos:column="36"/></name> <argument_list pos:line="56" pos:column="37">(<argument><expr><literal type="string" pos:line="56" pos:column="38">"Host"<pos:position pos:line="56" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="46">child<pos:position pos:line="56" pos:column="51"/></name><operator pos:line="56" pos:column="51">-&gt;<pos:position pos:line="56" pos:column="56"/></operator><name pos:line="56" pos:column="53">key<pos:position pos:line="56" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="57"/></argument_list></call> <operator pos:line="56" pos:column="58">==<pos:position pos:line="56" pos:column="60"/></operator> <literal type="number" pos:line="56" pos:column="61">0<pos:position pos:line="56" pos:column="62"/></literal></expr>)<pos:position pos:line="56" pos:column="63"/></condition><then pos:line="56" pos:column="63">
			<block type="pseudo"><expr_stmt><expr><name pos:line="57" pos:column="25">status<pos:position pos:line="57" pos:column="31"/></name> <operator pos:line="57" pos:column="32">=<pos:position pos:line="57" pos:column="33"/></operator> <call><name pos:line="57" pos:column="34">cf_util_get_string<pos:position pos:line="57" pos:column="52"/></name> <argument_list pos:line="57" pos:column="53">(<argument><expr><name pos:line="57" pos:column="54">child<pos:position pos:line="57" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="61">&amp;<pos:position pos:line="57" pos:column="66"/></operator><name><name pos:line="57" pos:column="62">db<pos:position pos:line="57" pos:column="64"/></name><operator pos:line="57" pos:column="64">-&gt;<pos:position pos:line="57" pos:column="69"/></operator><name pos:line="57" pos:column="66">host<pos:position pos:line="57" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="72"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="58" pos:column="17">else <if pos:line="58" pos:column="22">if <condition pos:line="58" pos:column="25">(<expr><call><name pos:line="58" pos:column="26">strcasecmp<pos:position pos:line="58" pos:column="36"/></name> <argument_list pos:line="58" pos:column="37">(<argument><expr><literal type="string" pos:line="58" pos:column="38">"User"<pos:position pos:line="58" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="46">child<pos:position pos:line="58" pos:column="51"/></name><operator pos:line="58" pos:column="51">-&gt;<pos:position pos:line="58" pos:column="56"/></operator><name pos:line="58" pos:column="53">key<pos:position pos:line="58" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="57"/></argument_list></call> <operator pos:line="58" pos:column="58">==<pos:position pos:line="58" pos:column="60"/></operator> <literal type="number" pos:line="58" pos:column="61">0<pos:position pos:line="58" pos:column="62"/></literal></expr>)<pos:position pos:line="58" pos:column="63"/></condition><then pos:line="58" pos:column="63">
			<block type="pseudo"><expr_stmt><expr><name pos:line="59" pos:column="25">status<pos:position pos:line="59" pos:column="31"/></name> <operator pos:line="59" pos:column="32">=<pos:position pos:line="59" pos:column="33"/></operator> <call><name pos:line="59" pos:column="34">cf_util_get_string<pos:position pos:line="59" pos:column="52"/></name> <argument_list pos:line="59" pos:column="53">(<argument><expr><name pos:line="59" pos:column="54">child<pos:position pos:line="59" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="61">&amp;<pos:position pos:line="59" pos:column="66"/></operator><name><name pos:line="59" pos:column="62">db<pos:position pos:line="59" pos:column="64"/></name><operator pos:line="59" pos:column="64">-&gt;<pos:position pos:line="59" pos:column="69"/></operator><name pos:line="59" pos:column="66">user<pos:position pos:line="59" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="72"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="60" pos:column="17">else <if pos:line="60" pos:column="22">if <condition pos:line="60" pos:column="25">(<expr><call><name pos:line="60" pos:column="26">strcasecmp<pos:position pos:line="60" pos:column="36"/></name> <argument_list pos:line="60" pos:column="37">(<argument><expr><literal type="string" pos:line="60" pos:column="38">"Password"<pos:position pos:line="60" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="50">child<pos:position pos:line="60" pos:column="55"/></name><operator pos:line="60" pos:column="55">-&gt;<pos:position pos:line="60" pos:column="60"/></operator><name pos:line="60" pos:column="57">key<pos:position pos:line="60" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="61"/></argument_list></call> <operator pos:line="60" pos:column="62">==<pos:position pos:line="60" pos:column="64"/></operator> <literal type="number" pos:line="60" pos:column="65">0<pos:position pos:line="60" pos:column="66"/></literal></expr>)<pos:position pos:line="60" pos:column="67"/></condition><then pos:line="60" pos:column="67">
			<block type="pseudo"><expr_stmt><expr><name pos:line="61" pos:column="25">status<pos:position pos:line="61" pos:column="31"/></name> <operator pos:line="61" pos:column="32">=<pos:position pos:line="61" pos:column="33"/></operator> <call><name pos:line="61" pos:column="34">cf_util_get_string<pos:position pos:line="61" pos:column="52"/></name> <argument_list pos:line="61" pos:column="53">(<argument><expr><name pos:line="61" pos:column="54">child<pos:position pos:line="61" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="61">&amp;<pos:position pos:line="61" pos:column="66"/></operator><name><name pos:line="61" pos:column="62">db<pos:position pos:line="61" pos:column="64"/></name><operator pos:line="61" pos:column="64">-&gt;<pos:position pos:line="61" pos:column="69"/></operator><name pos:line="61" pos:column="66">pass<pos:position pos:line="61" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="72"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="62" pos:column="17">else <if pos:line="62" pos:column="22">if <condition pos:line="62" pos:column="25">(<expr><call><name pos:line="62" pos:column="26">strcasecmp<pos:position pos:line="62" pos:column="36"/></name> <argument_list pos:line="62" pos:column="37">(<argument><expr><literal type="string" pos:line="62" pos:column="38">"Port"<pos:position pos:line="62" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="46">child<pos:position pos:line="62" pos:column="51"/></name><operator pos:line="62" pos:column="51">-&gt;<pos:position pos:line="62" pos:column="56"/></operator><name pos:line="62" pos:column="53">key<pos:position pos:line="62" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="57"/></argument_list></call> <operator pos:line="62" pos:column="58">==<pos:position pos:line="62" pos:column="60"/></operator> <literal type="number" pos:line="62" pos:column="61">0<pos:position pos:line="62" pos:column="62"/></literal></expr>)<pos:position pos:line="62" pos:column="63"/></condition><then pos:line="62" pos:column="63">
		<block pos:line="63" pos:column="17">{
			<expr_stmt><expr><name pos:line="64" pos:column="25">status<pos:position pos:line="64" pos:column="31"/></name> <operator pos:line="64" pos:column="32">=<pos:position pos:line="64" pos:column="33"/></operator> <call><name pos:line="64" pos:column="34">cf_util_get_port_number<pos:position pos:line="64" pos:column="57"/></name> <argument_list pos:line="64" pos:column="58">(<argument><expr><name pos:line="64" pos:column="59">child<pos:position pos:line="64" pos:column="64"/></name></expr></argument>)<pos:position pos:line="64" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="66"/></expr_stmt>
			<if pos:line="65" pos:column="25">if <condition pos:line="65" pos:column="28">(<expr><name pos:line="65" pos:column="29">status<pos:position pos:line="65" pos:column="35"/></name> <operator pos:line="65" pos:column="36">&gt;<pos:position pos:line="65" pos:column="40"/></operator> <literal type="number" pos:line="65" pos:column="38">0<pos:position pos:line="65" pos:column="39"/></literal></expr>)<pos:position pos:line="65" pos:column="40"/></condition><then pos:line="65" pos:column="40">
			<block pos:line="66" pos:column="25">{
				<expr_stmt><expr><name><name pos:line="67" pos:column="33">db<pos:position pos:line="67" pos:column="35"/></name><operator pos:line="67" pos:column="35">-&gt;<pos:position pos:line="67" pos:column="40"/></operator><name pos:line="67" pos:column="37">port<pos:position pos:line="67" pos:column="41"/></name></name> <operator pos:line="67" pos:column="42">=<pos:position pos:line="67" pos:column="43"/></operator> <name pos:line="67" pos:column="44">status<pos:position pos:line="67" pos:column="50"/></name></expr>;<pos:position pos:line="67" pos:column="51"/></expr_stmt>
				<expr_stmt><expr><name pos:line="68" pos:column="33">status<pos:position pos:line="68" pos:column="39"/></name> <operator pos:line="68" pos:column="40">=<pos:position pos:line="68" pos:column="41"/></operator> <literal type="number" pos:line="68" pos:column="42">0<pos:position pos:line="68" pos:column="43"/></literal></expr>;<pos:position pos:line="68" pos:column="44"/></expr_stmt>
			}<pos:position pos:line="69" pos:column="26"/></block></then></if>
		}<pos:position pos:line="70" pos:column="18"/></block></then></if></elseif>
		<elseif pos:line="71" pos:column="17">else <if pos:line="71" pos:column="22">if <condition pos:line="71" pos:column="25">(<expr><call><name pos:line="71" pos:column="26">strcasecmp<pos:position pos:line="71" pos:column="36"/></name> <argument_list pos:line="71" pos:column="37">(<argument><expr><literal type="string" pos:line="71" pos:column="38">"Socket"<pos:position pos:line="71" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="48">child<pos:position pos:line="71" pos:column="53"/></name><operator pos:line="71" pos:column="53">-&gt;<pos:position pos:line="71" pos:column="58"/></operator><name pos:line="71" pos:column="55">key<pos:position pos:line="71" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="59"/></argument_list></call> <operator pos:line="71" pos:column="60">==<pos:position pos:line="71" pos:column="62"/></operator> <literal type="number" pos:line="71" pos:column="63">0<pos:position pos:line="71" pos:column="64"/></literal></expr>)<pos:position pos:line="71" pos:column="65"/></condition><then pos:line="71" pos:column="65">
			<block type="pseudo"><expr_stmt><expr><name pos:line="72" pos:column="25">status<pos:position pos:line="72" pos:column="31"/></name> <operator pos:line="72" pos:column="32">=<pos:position pos:line="72" pos:column="33"/></operator> <call><name pos:line="72" pos:column="34">cf_util_get_string<pos:position pos:line="72" pos:column="52"/></name> <argument_list pos:line="72" pos:column="53">(<argument><expr><name pos:line="72" pos:column="54">child<pos:position pos:line="72" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="72" pos:column="61">&amp;<pos:position pos:line="72" pos:column="66"/></operator><name><name pos:line="72" pos:column="62">db<pos:position pos:line="72" pos:column="64"/></name><operator pos:line="72" pos:column="64">-&gt;<pos:position pos:line="72" pos:column="69"/></operator><name pos:line="72" pos:column="66">socket<pos:position pos:line="72" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="74"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="73" pos:column="17">else <if pos:line="73" pos:column="22">if <condition pos:line="73" pos:column="25">(<expr><call><name pos:line="73" pos:column="26">strcasecmp<pos:position pos:line="73" pos:column="36"/></name> <argument_list pos:line="73" pos:column="37">(<argument><expr><literal type="string" pos:line="73" pos:column="38">"Database"<pos:position pos:line="73" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="50">child<pos:position pos:line="73" pos:column="55"/></name><operator pos:line="73" pos:column="55">-&gt;<pos:position pos:line="73" pos:column="60"/></operator><name pos:line="73" pos:column="57">key<pos:position pos:line="73" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="61"/></argument_list></call> <operator pos:line="73" pos:column="62">==<pos:position pos:line="73" pos:column="64"/></operator> <literal type="number" pos:line="73" pos:column="65">0<pos:position pos:line="73" pos:column="66"/></literal></expr>)<pos:position pos:line="73" pos:column="67"/></condition><then pos:line="73" pos:column="67">
			<block type="pseudo"><expr_stmt><expr><name pos:line="74" pos:column="25">status<pos:position pos:line="74" pos:column="31"/></name> <operator pos:line="74" pos:column="32">=<pos:position pos:line="74" pos:column="33"/></operator> <call><name pos:line="74" pos:column="34">cf_util_get_string<pos:position pos:line="74" pos:column="52"/></name> <argument_list pos:line="74" pos:column="53">(<argument><expr><name pos:line="74" pos:column="54">child<pos:position pos:line="74" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="74" pos:column="61">&amp;<pos:position pos:line="74" pos:column="66"/></operator><name><name pos:line="74" pos:column="62">db<pos:position pos:line="74" pos:column="64"/></name><operator pos:line="74" pos:column="64">-&gt;<pos:position pos:line="74" pos:column="69"/></operator><name pos:line="74" pos:column="66">database<pos:position pos:line="74" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="76"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="75" pos:column="17">else <if pos:line="75" pos:column="22">if <condition pos:line="75" pos:column="25">(<expr><call><name pos:line="75" pos:column="26">strcasecmp<pos:position pos:line="75" pos:column="36"/></name> <argument_list pos:line="75" pos:column="37">(<argument><expr><literal type="string" pos:line="75" pos:column="38">"SSLKey"<pos:position pos:line="75" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="75" pos:column="48">child<pos:position pos:line="75" pos:column="53"/></name><operator pos:line="75" pos:column="53">-&gt;<pos:position pos:line="75" pos:column="58"/></operator><name pos:line="75" pos:column="55">key<pos:position pos:line="75" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="59"/></argument_list></call> <operator pos:line="75" pos:column="60">==<pos:position pos:line="75" pos:column="62"/></operator> <literal type="number" pos:line="75" pos:column="63">0<pos:position pos:line="75" pos:column="64"/></literal></expr>)<pos:position pos:line="75" pos:column="65"/></condition><then pos:line="75" pos:column="65">
			<block type="pseudo"><expr_stmt><expr><name pos:line="76" pos:column="25">status<pos:position pos:line="76" pos:column="31"/></name> <operator pos:line="76" pos:column="32">=<pos:position pos:line="76" pos:column="33"/></operator> <call><name pos:line="76" pos:column="34">cf_util_get_string<pos:position pos:line="76" pos:column="52"/></name> <argument_list pos:line="76" pos:column="53">(<argument><expr><name pos:line="76" pos:column="54">child<pos:position pos:line="76" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="76" pos:column="61">&amp;<pos:position pos:line="76" pos:column="66"/></operator><name><name pos:line="76" pos:column="62">db<pos:position pos:line="76" pos:column="64"/></name><operator pos:line="76" pos:column="64">-&gt;<pos:position pos:line="76" pos:column="69"/></operator><name pos:line="76" pos:column="66">key<pos:position pos:line="76" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="71"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="77" pos:column="17">else <if pos:line="77" pos:column="22">if <condition pos:line="77" pos:column="25">(<expr><call><name pos:line="77" pos:column="26">strcasecmp<pos:position pos:line="77" pos:column="36"/></name> <argument_list pos:line="77" pos:column="37">(<argument><expr><literal type="string" pos:line="77" pos:column="38">"SSLCert"<pos:position pos:line="77" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="49">child<pos:position pos:line="77" pos:column="54"/></name><operator pos:line="77" pos:column="54">-&gt;<pos:position pos:line="77" pos:column="59"/></operator><name pos:line="77" pos:column="56">key<pos:position pos:line="77" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="60"/></argument_list></call> <operator pos:line="77" pos:column="61">==<pos:position pos:line="77" pos:column="63"/></operator> <literal type="number" pos:line="77" pos:column="64">0<pos:position pos:line="77" pos:column="65"/></literal></expr>)<pos:position pos:line="77" pos:column="66"/></condition><then pos:line="77" pos:column="66">
			<block type="pseudo"><expr_stmt><expr><name pos:line="78" pos:column="25">status<pos:position pos:line="78" pos:column="31"/></name> <operator pos:line="78" pos:column="32">=<pos:position pos:line="78" pos:column="33"/></operator> <call><name pos:line="78" pos:column="34">cf_util_get_string<pos:position pos:line="78" pos:column="52"/></name> <argument_list pos:line="78" pos:column="53">(<argument><expr><name pos:line="78" pos:column="54">child<pos:position pos:line="78" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="78" pos:column="61">&amp;<pos:position pos:line="78" pos:column="66"/></operator><name><name pos:line="78" pos:column="62">db<pos:position pos:line="78" pos:column="64"/></name><operator pos:line="78" pos:column="64">-&gt;<pos:position pos:line="78" pos:column="69"/></operator><name pos:line="78" pos:column="66">cert<pos:position pos:line="78" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="72"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="79" pos:column="17">else <if pos:line="79" pos:column="22">if <condition pos:line="79" pos:column="25">(<expr><call><name pos:line="79" pos:column="26">strcasecmp<pos:position pos:line="79" pos:column="36"/></name> <argument_list pos:line="79" pos:column="37">(<argument><expr><literal type="string" pos:line="79" pos:column="38">"SSLCA"<pos:position pos:line="79" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="79" pos:column="47">child<pos:position pos:line="79" pos:column="52"/></name><operator pos:line="79" pos:column="52">-&gt;<pos:position pos:line="79" pos:column="57"/></operator><name pos:line="79" pos:column="54">key<pos:position pos:line="79" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="58"/></argument_list></call> <operator pos:line="79" pos:column="59">==<pos:position pos:line="79" pos:column="61"/></operator> <literal type="number" pos:line="79" pos:column="62">0<pos:position pos:line="79" pos:column="63"/></literal></expr>)<pos:position pos:line="79" pos:column="64"/></condition><then pos:line="79" pos:column="64">
			<block type="pseudo"><expr_stmt><expr><name pos:line="80" pos:column="25">status<pos:position pos:line="80" pos:column="31"/></name> <operator pos:line="80" pos:column="32">=<pos:position pos:line="80" pos:column="33"/></operator> <call><name pos:line="80" pos:column="34">cf_util_get_string<pos:position pos:line="80" pos:column="52"/></name> <argument_list pos:line="80" pos:column="53">(<argument><expr><name pos:line="80" pos:column="54">child<pos:position pos:line="80" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="61">&amp;<pos:position pos:line="80" pos:column="66"/></operator><name><name pos:line="80" pos:column="62">db<pos:position pos:line="80" pos:column="64"/></name><operator pos:line="80" pos:column="64">-&gt;<pos:position pos:line="80" pos:column="69"/></operator><name pos:line="80" pos:column="66">ca<pos:position pos:line="80" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="70"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="81" pos:column="17">else <if pos:line="81" pos:column="22">if <condition pos:line="81" pos:column="25">(<expr><call><name pos:line="81" pos:column="26">strcasecmp<pos:position pos:line="81" pos:column="36"/></name> <argument_list pos:line="81" pos:column="37">(<argument><expr><literal type="string" pos:line="81" pos:column="38">"SSLCAPath"<pos:position pos:line="81" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="81" pos:column="51">child<pos:position pos:line="81" pos:column="56"/></name><operator pos:line="81" pos:column="56">-&gt;<pos:position pos:line="81" pos:column="61"/></operator><name pos:line="81" pos:column="58">key<pos:position pos:line="81" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="81" pos:column="62"/></argument_list></call> <operator pos:line="81" pos:column="63">==<pos:position pos:line="81" pos:column="65"/></operator> <literal type="number" pos:line="81" pos:column="66">0<pos:position pos:line="81" pos:column="67"/></literal></expr>)<pos:position pos:line="81" pos:column="68"/></condition><then pos:line="81" pos:column="68">
			<block type="pseudo"><expr_stmt><expr><name pos:line="82" pos:column="25">status<pos:position pos:line="82" pos:column="31"/></name> <operator pos:line="82" pos:column="32">=<pos:position pos:line="82" pos:column="33"/></operator> <call><name pos:line="82" pos:column="34">cf_util_get_string<pos:position pos:line="82" pos:column="52"/></name> <argument_list pos:line="82" pos:column="53">(<argument><expr><name pos:line="82" pos:column="54">child<pos:position pos:line="82" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="82" pos:column="61">&amp;<pos:position pos:line="82" pos:column="66"/></operator><name><name pos:line="82" pos:column="62">db<pos:position pos:line="82" pos:column="64"/></name><operator pos:line="82" pos:column="64">-&gt;<pos:position pos:line="82" pos:column="69"/></operator><name pos:line="82" pos:column="66">capath<pos:position pos:line="82" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="74"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="83" pos:column="17">else <if pos:line="83" pos:column="22">if <condition pos:line="83" pos:column="25">(<expr><call><name pos:line="83" pos:column="26">strcasecmp<pos:position pos:line="83" pos:column="36"/></name> <argument_list pos:line="83" pos:column="37">(<argument><expr><literal type="string" pos:line="83" pos:column="38">"SSLCipher"<pos:position pos:line="83" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="83" pos:column="51">child<pos:position pos:line="83" pos:column="56"/></name><operator pos:line="83" pos:column="56">-&gt;<pos:position pos:line="83" pos:column="61"/></operator><name pos:line="83" pos:column="58">key<pos:position pos:line="83" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="62"/></argument_list></call> <operator pos:line="83" pos:column="63">==<pos:position pos:line="83" pos:column="65"/></operator> <literal type="number" pos:line="83" pos:column="66">0<pos:position pos:line="83" pos:column="67"/></literal></expr>)<pos:position pos:line="83" pos:column="68"/></condition><then pos:line="83" pos:column="68">
			<block type="pseudo"><expr_stmt><expr><name pos:line="84" pos:column="25">status<pos:position pos:line="84" pos:column="31"/></name> <operator pos:line="84" pos:column="32">=<pos:position pos:line="84" pos:column="33"/></operator> <call><name pos:line="84" pos:column="34">cf_util_get_string<pos:position pos:line="84" pos:column="52"/></name> <argument_list pos:line="84" pos:column="53">(<argument><expr><name pos:line="84" pos:column="54">child<pos:position pos:line="84" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="84" pos:column="61">&amp;<pos:position pos:line="84" pos:column="66"/></operator><name><name pos:line="84" pos:column="62">db<pos:position pos:line="84" pos:column="64"/></name><operator pos:line="84" pos:column="64">-&gt;<pos:position pos:line="84" pos:column="69"/></operator><name pos:line="84" pos:column="66">cipher<pos:position pos:line="84" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="74"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="85" pos:column="17">else <if pos:line="85" pos:column="22">if <condition pos:line="85" pos:column="25">(<expr><call><name pos:line="85" pos:column="26">strcasecmp<pos:position pos:line="85" pos:column="36"/></name> <argument_list pos:line="85" pos:column="37">(<argument><expr><literal type="string" pos:line="85" pos:column="38">"ConnectTimeout"<pos:position pos:line="85" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="85" pos:column="56">child<pos:position pos:line="85" pos:column="61"/></name><operator pos:line="85" pos:column="61">-&gt;<pos:position pos:line="85" pos:column="66"/></operator><name pos:line="85" pos:column="63">key<pos:position pos:line="85" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="85" pos:column="67"/></argument_list></call> <operator pos:line="85" pos:column="68">==<pos:position pos:line="85" pos:column="70"/></operator> <literal type="number" pos:line="85" pos:column="71">0<pos:position pos:line="85" pos:column="72"/></literal></expr>)<pos:position pos:line="85" pos:column="73"/></condition><then pos:line="85" pos:column="73">
			<block type="pseudo"><expr_stmt><expr><name pos:line="86" pos:column="25">status<pos:position pos:line="86" pos:column="31"/></name> <operator pos:line="86" pos:column="32">=<pos:position pos:line="86" pos:column="33"/></operator> <call><name pos:line="86" pos:column="34">cf_util_get_int<pos:position pos:line="86" pos:column="49"/></name> <argument_list pos:line="86" pos:column="50">(<argument><expr><name pos:line="86" pos:column="51">child<pos:position pos:line="86" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="86" pos:column="58">&amp;<pos:position pos:line="86" pos:column="63"/></operator><name><name pos:line="86" pos:column="59">db<pos:position pos:line="86" pos:column="61"/></name><operator pos:line="86" pos:column="61">-&gt;<pos:position pos:line="86" pos:column="66"/></operator><name pos:line="86" pos:column="63">timeout<pos:position pos:line="86" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="86" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="72"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="87" pos:column="17">else <if pos:line="87" pos:column="22">if <condition pos:line="87" pos:column="25">(<expr><call><name pos:line="87" pos:column="26">strcasecmp<pos:position pos:line="87" pos:column="36"/></name> <argument_list pos:line="87" pos:column="37">(<argument><expr><literal type="string" pos:line="87" pos:column="38">"MasterStats"<pos:position pos:line="87" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="87" pos:column="53">child<pos:position pos:line="87" pos:column="58"/></name><operator pos:line="87" pos:column="58">-&gt;<pos:position pos:line="87" pos:column="63"/></operator><name pos:line="87" pos:column="60">key<pos:position pos:line="87" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="64"/></argument_list></call> <operator pos:line="87" pos:column="65">==<pos:position pos:line="87" pos:column="67"/></operator> <literal type="number" pos:line="87" pos:column="68">0<pos:position pos:line="87" pos:column="69"/></literal></expr>)<pos:position pos:line="87" pos:column="70"/></condition><then pos:line="87" pos:column="70">
			<block type="pseudo"><expr_stmt><expr><name pos:line="88" pos:column="25">status<pos:position pos:line="88" pos:column="31"/></name> <operator pos:line="88" pos:column="32">=<pos:position pos:line="88" pos:column="33"/></operator> <call><name pos:line="88" pos:column="34">cf_util_get_boolean<pos:position pos:line="88" pos:column="53"/></name> <argument_list pos:line="88" pos:column="54">(<argument><expr><name pos:line="88" pos:column="55">child<pos:position pos:line="88" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="88" pos:column="62">&amp;<pos:position pos:line="88" pos:column="67"/></operator><name><name pos:line="88" pos:column="63">db<pos:position pos:line="88" pos:column="65"/></name><operator pos:line="88" pos:column="65">-&gt;<pos:position pos:line="88" pos:column="70"/></operator><name pos:line="88" pos:column="67">master_stats<pos:position pos:line="88" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="88" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="81"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="89" pos:column="17">else <if pos:line="89" pos:column="22">if <condition pos:line="89" pos:column="25">(<expr><call><name pos:line="89" pos:column="26">strcasecmp<pos:position pos:line="89" pos:column="36"/></name> <argument_list pos:line="89" pos:column="37">(<argument><expr><literal type="string" pos:line="89" pos:column="38">"SlaveStats"<pos:position pos:line="89" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="89" pos:column="52">child<pos:position pos:line="89" pos:column="57"/></name><operator pos:line="89" pos:column="57">-&gt;<pos:position pos:line="89" pos:column="62"/></operator><name pos:line="89" pos:column="59">key<pos:position pos:line="89" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="63"/></argument_list></call> <operator pos:line="89" pos:column="64">==<pos:position pos:line="89" pos:column="66"/></operator> <literal type="number" pos:line="89" pos:column="67">0<pos:position pos:line="89" pos:column="68"/></literal></expr>)<pos:position pos:line="89" pos:column="69"/></condition><then pos:line="89" pos:column="69">
			<block type="pseudo"><expr_stmt><expr><name pos:line="90" pos:column="25">status<pos:position pos:line="90" pos:column="31"/></name> <operator pos:line="90" pos:column="32">=<pos:position pos:line="90" pos:column="33"/></operator> <call><name pos:line="90" pos:column="34">cf_util_get_boolean<pos:position pos:line="90" pos:column="53"/></name> <argument_list pos:line="90" pos:column="54">(<argument><expr><name pos:line="90" pos:column="55">child<pos:position pos:line="90" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="90" pos:column="62">&amp;<pos:position pos:line="90" pos:column="67"/></operator><name><name pos:line="90" pos:column="63">db<pos:position pos:line="90" pos:column="65"/></name><operator pos:line="90" pos:column="65">-&gt;<pos:position pos:line="90" pos:column="70"/></operator><name pos:line="90" pos:column="67">slave_stats<pos:position pos:line="90" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="80"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="91" pos:column="17">else <if pos:line="91" pos:column="22">if <condition pos:line="91" pos:column="25">(<expr><call><name pos:line="91" pos:column="26">strcasecmp<pos:position pos:line="91" pos:column="36"/></name> <argument_list pos:line="91" pos:column="37">(<argument><expr><literal type="string" pos:line="91" pos:column="38">"SlaveNotifications"<pos:position pos:line="91" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="91" pos:column="60">child<pos:position pos:line="91" pos:column="65"/></name><operator pos:line="91" pos:column="65">-&gt;<pos:position pos:line="91" pos:column="70"/></operator><name pos:line="91" pos:column="67">key<pos:position pos:line="91" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="71"/></argument_list></call> <operator pos:line="91" pos:column="72">==<pos:position pos:line="91" pos:column="74"/></operator> <literal type="number" pos:line="91" pos:column="75">0<pos:position pos:line="91" pos:column="76"/></literal></expr>)<pos:position pos:line="91" pos:column="77"/></condition><then pos:line="91" pos:column="77">
			<block type="pseudo"><expr_stmt><expr><name pos:line="92" pos:column="25">status<pos:position pos:line="92" pos:column="31"/></name> <operator pos:line="92" pos:column="32">=<pos:position pos:line="92" pos:column="33"/></operator> <call><name pos:line="92" pos:column="34">cf_util_get_boolean<pos:position pos:line="92" pos:column="53"/></name> <argument_list pos:line="92" pos:column="54">(<argument><expr><name pos:line="92" pos:column="55">child<pos:position pos:line="92" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="92" pos:column="62">&amp;<pos:position pos:line="92" pos:column="67"/></operator><name><name pos:line="92" pos:column="63">db<pos:position pos:line="92" pos:column="65"/></name><operator pos:line="92" pos:column="65">-&gt;<pos:position pos:line="92" pos:column="70"/></operator><name pos:line="92" pos:column="67">slave_notif<pos:position pos:line="92" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="92" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="80"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="93" pos:column="17">else <if pos:line="93" pos:column="22">if <condition pos:line="93" pos:column="25">(<expr><call><name pos:line="93" pos:column="26">strcasecmp<pos:position pos:line="93" pos:column="36"/></name> <argument_list pos:line="93" pos:column="37">(<argument><expr><literal type="string" pos:line="93" pos:column="38">"InnodbStats"<pos:position pos:line="93" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="53">child<pos:position pos:line="93" pos:column="58"/></name><operator pos:line="93" pos:column="58">-&gt;<pos:position pos:line="93" pos:column="63"/></operator><name pos:line="93" pos:column="60">key<pos:position pos:line="93" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="93" pos:column="64"/></argument_list></call> <operator pos:line="93" pos:column="65">==<pos:position pos:line="93" pos:column="67"/></operator> <literal type="number" pos:line="93" pos:column="68">0<pos:position pos:line="93" pos:column="69"/></literal></expr>)<pos:position pos:line="93" pos:column="70"/></condition><then pos:line="93" pos:column="70">
			<block type="pseudo"><expr_stmt><expr><name pos:line="94" pos:column="25">status<pos:position pos:line="94" pos:column="31"/></name> <operator pos:line="94" pos:column="32">=<pos:position pos:line="94" pos:column="33"/></operator> <call><name pos:line="94" pos:column="34">cf_util_get_boolean<pos:position pos:line="94" pos:column="53"/></name> <argument_list pos:line="94" pos:column="54">(<argument><expr><name pos:line="94" pos:column="55">child<pos:position pos:line="94" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="94" pos:column="62">&amp;<pos:position pos:line="94" pos:column="67"/></operator><name><name pos:line="94" pos:column="63">db<pos:position pos:line="94" pos:column="65"/></name><operator pos:line="94" pos:column="65">-&gt;<pos:position pos:line="94" pos:column="70"/></operator><name pos:line="94" pos:column="67">innodb_stats<pos:position pos:line="94" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="94" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="81"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="95" pos:column="17">else <if pos:line="95" pos:column="22">if <condition pos:line="95" pos:column="25">(<expr><call><name pos:line="95" pos:column="26">strcasecmp<pos:position pos:line="95" pos:column="36"/></name> <argument_list pos:line="95" pos:column="37">(<argument><expr><literal type="string" pos:line="95" pos:column="38">"WsrepStats"<pos:position pos:line="95" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="95" pos:column="52">child<pos:position pos:line="95" pos:column="57"/></name><operator pos:line="95" pos:column="57">-&gt;<pos:position pos:line="95" pos:column="62"/></operator><name pos:line="95" pos:column="59">key<pos:position pos:line="95" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="95" pos:column="63"/></argument_list></call> <operator pos:line="95" pos:column="64">==<pos:position pos:line="95" pos:column="66"/></operator> <literal type="number" pos:line="95" pos:column="67">0<pos:position pos:line="95" pos:column="68"/></literal></expr>)<pos:position pos:line="95" pos:column="69"/></condition><then pos:line="95" pos:column="69">
			<block type="pseudo"><expr_stmt><expr><name pos:line="96" pos:column="25">status<pos:position pos:line="96" pos:column="31"/></name> <operator pos:line="96" pos:column="32">=<pos:position pos:line="96" pos:column="33"/></operator> <call><name pos:line="96" pos:column="34">cf_util_get_boolean<pos:position pos:line="96" pos:column="53"/></name> <argument_list pos:line="96" pos:column="54">(<argument><expr><name pos:line="96" pos:column="55">child<pos:position pos:line="96" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="96" pos:column="62">&amp;<pos:position pos:line="96" pos:column="67"/></operator><name><name pos:line="96" pos:column="63">db<pos:position pos:line="96" pos:column="65"/></name><operator pos:line="96" pos:column="65">-&gt;<pos:position pos:line="96" pos:column="70"/></operator><name pos:line="96" pos:column="67">wsrep_stats<pos:position pos:line="96" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="96" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="80"/></expr_stmt></block></then></if></elseif>
		<else pos:line="97" pos:column="17">else
		<block pos:line="98" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="99" pos:column="25">WARNING<pos:position pos:line="99" pos:column="32"/></name> <argument_list pos:line="99" pos:column="33">(<argument><expr><literal type="string" pos:line="99" pos:column="34">"mysql plugin: Option `%s' not allowed here."<pos:position pos:line="99" pos:column="79"/></literal></expr></argument>, <argument><expr><name><name pos:line="99" pos:column="81">child<pos:position pos:line="99" pos:column="86"/></name><operator pos:line="99" pos:column="86">-&gt;<pos:position pos:line="99" pos:column="91"/></operator><name pos:line="99" pos:column="88">key<pos:position pos:line="99" pos:column="91"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="93"/></expr_stmt>
			<expr_stmt><expr><name pos:line="100" pos:column="25">status<pos:position pos:line="100" pos:column="31"/></name> <operator pos:line="100" pos:column="32">=<pos:position pos:line="100" pos:column="33"/></operator> <operator pos:line="100" pos:column="34">-<pos:position pos:line="100" pos:column="35"/></operator><literal type="number" pos:line="100" pos:column="35">1<pos:position pos:line="100" pos:column="36"/></literal></expr>;<pos:position pos:line="100" pos:column="37"/></expr_stmt>
		}<pos:position pos:line="101" pos:column="18"/></block></else></if>

		<if pos:line="103" pos:column="17">if <condition pos:line="103" pos:column="20">(<expr><name pos:line="103" pos:column="21">status<pos:position pos:line="103" pos:column="27"/></name> <operator pos:line="103" pos:column="28">!=<pos:position pos:line="103" pos:column="30"/></operator> <literal type="number" pos:line="103" pos:column="31">0<pos:position pos:line="103" pos:column="32"/></literal></expr>)<pos:position pos:line="103" pos:column="33"/></condition><then pos:line="103" pos:column="33">
			<block type="pseudo"><break pos:line="104" pos:column="25">break;<pos:position pos:line="104" pos:column="31"/></break></block></then></if>
	}<pos:position pos:line="105" pos:column="10"/></block></for>

	<comment type="block" pos:line="107" pos:column="9">/* If all went well, register this database for reading */</comment>
	<if pos:line="108" pos:column="9">if <condition pos:line="108" pos:column="12">(<expr><name pos:line="108" pos:column="13">status<pos:position pos:line="108" pos:column="19"/></name> <operator pos:line="108" pos:column="20">==<pos:position pos:line="108" pos:column="22"/></operator> <literal type="number" pos:line="108" pos:column="23">0<pos:position pos:line="108" pos:column="24"/></literal></expr>)<pos:position pos:line="108" pos:column="25"/></condition><then pos:line="108" pos:column="25">
	<block pos:line="109" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="110" pos:column="17">char<pos:position pos:line="110" pos:column="21"/></name></type> <name><name pos:line="110" pos:column="22">cb_name<pos:position pos:line="110" pos:column="29"/></name><index pos:line="110" pos:column="29">[<expr><name pos:line="110" pos:column="30">DATA_MAX_NAME_LEN<pos:position pos:line="110" pos:column="47"/></name></expr>]<pos:position pos:line="110" pos:column="48"/></index></name></decl>;<pos:position pos:line="110" pos:column="49"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="112" pos:column="17">DEBUG<pos:position pos:line="112" pos:column="22"/></name> <argument_list pos:line="112" pos:column="23">(<argument><expr><literal type="string" pos:line="112" pos:column="24">"mysql plugin: Registering new read callback: %s"<pos:position pos:line="112" pos:column="73"/></literal></expr></argument>,
				<argument><expr><ternary><condition><expr><operator pos:line="113" pos:column="33">(<pos:position pos:line="113" pos:column="34"/></operator><name><name pos:line="113" pos:column="34">db<pos:position pos:line="113" pos:column="36"/></name><operator pos:line="113" pos:column="36">-&gt;<pos:position pos:line="113" pos:column="41"/></operator><name pos:line="113" pos:column="38">database<pos:position pos:line="113" pos:column="46"/></name></name> <operator pos:line="113" pos:column="47">!=<pos:position pos:line="113" pos:column="49"/></operator> <name pos:line="113" pos:column="50">NULL<pos:position pos:line="113" pos:column="54"/></name><operator pos:line="113" pos:column="54">)<pos:position pos:line="113" pos:column="55"/></operator></expr> ?<pos:position pos:line="113" pos:column="57"/></condition><then pos:line="113" pos:column="57"> <expr><name><name pos:line="113" pos:column="58">db<pos:position pos:line="113" pos:column="60"/></name><operator pos:line="113" pos:column="60">-&gt;<pos:position pos:line="113" pos:column="65"/></operator><name pos:line="113" pos:column="62">database<pos:position pos:line="113" pos:column="70"/></name></name></expr> <pos:position pos:line="113" pos:column="71"/></then><else pos:line="113" pos:column="71">: <expr><literal type="string" pos:line="113" pos:column="73">"&lt;default&gt;"<pos:position pos:line="113" pos:column="90"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="113" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="86"/></expr_stmt>

		<if pos:line="115" pos:column="17">if <condition pos:line="115" pos:column="20">(<expr><name><name pos:line="115" pos:column="21">db<pos:position pos:line="115" pos:column="23"/></name><operator pos:line="115" pos:column="23">-&gt;<pos:position pos:line="115" pos:column="28"/></operator><name pos:line="115" pos:column="25">instance<pos:position pos:line="115" pos:column="33"/></name></name> <operator pos:line="115" pos:column="34">!=<pos:position pos:line="115" pos:column="36"/></operator> <name pos:line="115" pos:column="37">NULL<pos:position pos:line="115" pos:column="41"/></name></expr>)<pos:position pos:line="115" pos:column="42"/></condition><then pos:line="115" pos:column="42">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="116" pos:column="25">ssnprintf<pos:position pos:line="116" pos:column="34"/></name> <argument_list pos:line="116" pos:column="35">(<argument><expr><name pos:line="116" pos:column="36">cb_name<pos:position pos:line="116" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="116" pos:column="45">sizeof <argument_list pos:line="116" pos:column="52">(<argument><expr><name pos:line="116" pos:column="53">cb_name<pos:position pos:line="116" pos:column="60"/></name></expr></argument>)<pos:position pos:line="116" pos:column="61"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="116" pos:column="63">"mysql-%s"<pos:position pos:line="116" pos:column="73"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="117" pos:column="41">db<pos:position pos:line="117" pos:column="43"/></name><operator pos:line="117" pos:column="43">-&gt;<pos:position pos:line="117" pos:column="48"/></operator><name pos:line="117" pos:column="45">instance<pos:position pos:line="117" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="117" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="55"/></expr_stmt></block></then>
		<else pos:line="118" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="119" pos:column="25">sstrncpy<pos:position pos:line="119" pos:column="33"/></name> <argument_list pos:line="119" pos:column="34">(<argument><expr><name pos:line="119" pos:column="35">cb_name<pos:position pos:line="119" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="119" pos:column="44">"mysql"<pos:position pos:line="119" pos:column="51"/></literal></expr></argument>, <argument><expr><sizeof pos:line="119" pos:column="53">sizeof <argument_list pos:line="119" pos:column="60">(<argument><expr><name pos:line="119" pos:column="61">cb_name<pos:position pos:line="119" pos:column="68"/></name></expr></argument>)<pos:position pos:line="119" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="119" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="71"/></expr_stmt></block></else></if>

		<decl_stmt><decl><type><name pos:line="121" pos:column="17">user_data_t<pos:position pos:line="121" pos:column="28"/></name></type> <name pos:line="121" pos:column="29">ud<pos:position pos:line="121" pos:column="31"/></name> <init pos:line="121" pos:column="32">= <expr><block pos:line="121" pos:column="34">{
			<expr><operator pos:line="122" pos:column="25">.<pos:position pos:line="122" pos:column="26"/></operator><name pos:line="122" pos:column="26">data<pos:position pos:line="122" pos:column="30"/></name> <operator pos:line="122" pos:column="31">=<pos:position pos:line="122" pos:column="32"/></operator> <name pos:line="122" pos:column="33">db<pos:position pos:line="122" pos:column="35"/></name></expr>,
			<expr><operator pos:line="123" pos:column="25">.<pos:position pos:line="123" pos:column="26"/></operator><name pos:line="123" pos:column="26">free_func<pos:position pos:line="123" pos:column="35"/></name> <operator pos:line="123" pos:column="36">=<pos:position pos:line="123" pos:column="37"/></operator> <name pos:line="123" pos:column="38">mysql_database_free<pos:position pos:line="123" pos:column="57"/></name></expr>
		}<pos:position pos:line="124" pos:column="18"/></block></expr></init></decl>;<pos:position pos:line="124" pos:column="19"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="126" pos:column="17">plugin_register_complex_read<pos:position pos:line="126" pos:column="45"/></name> <argument_list pos:line="126" pos:column="46">(<comment type="block" pos:line="126" pos:column="47">/* group = */</comment> <argument><expr><name pos:line="126" pos:column="61">NULL<pos:position pos:line="126" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="67">cb_name<pos:position pos:line="126" pos:column="74"/></name></expr></argument>,
					      <argument><expr><name pos:line="127" pos:column="47">mysql_read<pos:position pos:line="127" pos:column="57"/></name></expr></argument>,
					      <comment type="block" pos:line="128" pos:column="47">/* interval = */</comment> <argument><expr><literal type="number" pos:line="128" pos:column="64">0<pos:position pos:line="128" pos:column="65"/></literal></expr></argument>, <argument><expr><operator pos:line="128" pos:column="67">&amp;<pos:position pos:line="128" pos:column="72"/></operator><name pos:line="128" pos:column="68">ud<pos:position pos:line="128" pos:column="70"/></name></expr></argument>)<pos:position pos:line="128" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="72"/></expr_stmt>
	}<pos:position pos:line="129" pos:column="10"/></block></then>
	<else pos:line="130" pos:column="9">else
	<block pos:line="131" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="132" pos:column="17">mysql_database_free<pos:position pos:line="132" pos:column="36"/></name> <argument_list pos:line="132" pos:column="37">(<argument><expr><name pos:line="132" pos:column="38">db<pos:position pos:line="132" pos:column="40"/></name></expr></argument>)<pos:position pos:line="132" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="42"/></expr_stmt>
		<return pos:line="133" pos:column="17">return <expr><operator pos:line="133" pos:column="24">(<pos:position pos:line="133" pos:column="25"/></operator><operator pos:line="133" pos:column="25">-<pos:position pos:line="133" pos:column="26"/></operator><literal type="number" pos:line="133" pos:column="26">1<pos:position pos:line="133" pos:column="27"/></literal><operator pos:line="133" pos:column="27">)<pos:position pos:line="133" pos:column="28"/></operator></expr>;<pos:position pos:line="133" pos:column="29"/></return>
	}<pos:position pos:line="134" pos:column="10"/></block></else></if>

	<return pos:line="136" pos:column="9">return <expr><operator pos:line="136" pos:column="16">(<pos:position pos:line="136" pos:column="17"/></operator><literal type="number" pos:line="136" pos:column="17">0<pos:position pos:line="136" pos:column="18"/></literal><operator pos:line="136" pos:column="18">)<pos:position pos:line="136" pos:column="19"/></operator></expr>;<pos:position pos:line="136" pos:column="20"/></return>
}<pos:position pos:line="137" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_103_collectd-4.10.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">vm_close<pos:position pos:line="2" pos:column="9"/></name> <parameter_list pos:line="2" pos:column="10">(<parameter><decl><type><name pos:line="2" pos:column="11">lt_user_data<pos:position pos:line="2" pos:column="23"/></name> <name pos:line="2" pos:column="24">LT__UNUSED<pos:position pos:line="2" pos:column="34"/></name></type> <name pos:line="2" pos:column="35">loader_data<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">lt_module<pos:position pos:line="2" pos:column="57"/></name></type> <name pos:line="2" pos:column="58">module<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">errors<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><literal type="number" pos:line="4" pos:column="16">0<pos:position pos:line="4" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><call><name pos:line="6" pos:column="7">FreeLibrary<pos:position pos:line="6" pos:column="18"/></name><argument_list pos:line="6" pos:column="18">(<argument><expr><operator pos:line="6" pos:column="19">(<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="20">HMODULE<pos:position pos:line="6" pos:column="27"/></name><operator pos:line="6" pos:column="27">)<pos:position pos:line="6" pos:column="28"/></operator> <name pos:line="6" pos:column="29">module<pos:position pos:line="6" pos:column="35"/></name></expr></argument>)<pos:position pos:line="6" pos:column="36"/></argument_list></call> <operator pos:line="6" pos:column="37">==<pos:position pos:line="6" pos:column="39"/></operator> <literal type="number" pos:line="6" pos:column="40">0<pos:position pos:line="6" pos:column="41"/></literal></expr>)<pos:position pos:line="6" pos:column="42"/></condition><then pos:line="6" pos:column="42">
    <block pos:line="7" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="8" pos:column="7">LT__SETERROR<pos:position pos:line="8" pos:column="19"/></name> <argument_list pos:line="8" pos:column="20">(<argument><expr><name pos:line="8" pos:column="21">CANNOT_CLOSE<pos:position pos:line="8" pos:column="33"/></name></expr></argument>)<pos:position pos:line="8" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="9" pos:column="7">++<pos:position pos:line="9" pos:column="9"/></operator><name pos:line="9" pos:column="9">errors<pos:position pos:line="9" pos:column="15"/></name></expr>;<pos:position pos:line="9" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

  <return pos:line="12" pos:column="3">return <expr><name pos:line="12" pos:column="10">errors<pos:position pos:line="12" pos:column="16"/></name></expr>;<pos:position pos:line="12" pos:column="17"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_587_collectd-5.7.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">cmd_destroy<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">cmd_t<pos:position pos:line="1" pos:column="23"/></name> <modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type><name pos:line="1" pos:column="25">cmd<pos:position pos:line="1" pos:column="28"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="29"/></parameter_list> <block pos:line="1" pos:column="30">{
  <if pos:line="2" pos:column="3">if <condition pos:line="2" pos:column="6">(<expr><name pos:line="2" pos:column="7">cmd<pos:position pos:line="2" pos:column="10"/></name> <operator pos:line="2" pos:column="11">==<pos:position pos:line="2" pos:column="13"/></operator> <name pos:line="2" pos:column="14">NULL<pos:position pos:line="2" pos:column="18"/></name></expr>)<pos:position pos:line="2" pos:column="19"/></condition><then pos:line="2" pos:column="19">
    <block type="pseudo"><return pos:line="3" pos:column="5">return;<pos:position pos:line="3" pos:column="12"/></return></block></then></if>

  <switch pos:line="5" pos:column="3">switch <condition pos:line="5" pos:column="10">(<expr><name><name pos:line="5" pos:column="11">cmd<pos:position pos:line="5" pos:column="14"/></name><operator pos:line="5" pos:column="14">-&gt;<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="16">type<pos:position pos:line="5" pos:column="20"/></name></name></expr>)<pos:position pos:line="5" pos:column="21"/></condition> <block pos:line="5" pos:column="22">{
  <case pos:line="6" pos:column="3">case <expr><name pos:line="6" pos:column="8">CMD_UNKNOWN<pos:position pos:line="6" pos:column="19"/></name></expr>:<pos:position pos:line="6" pos:column="20"/></case>
    <comment type="block" pos:line="7" pos:column="5">/* nothing to do */</comment>
    <break pos:line="8" pos:column="5">break;<pos:position pos:line="8" pos:column="11"/></break>
  <case pos:line="9" pos:column="3">case <expr><name pos:line="9" pos:column="8">CMD_FLUSH<pos:position pos:line="9" pos:column="17"/></name></expr>:<pos:position pos:line="9" pos:column="18"/></case>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">cmd_destroy_flush<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><operator pos:line="10" pos:column="23">&amp;<pos:position pos:line="10" pos:column="28"/></operator><name><name pos:line="10" pos:column="24">cmd<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">-&gt;<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="29">cmd<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">.<pos:position pos:line="10" pos:column="33"/></operator><name pos:line="10" pos:column="33">flush<pos:position pos:line="10" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="40"/></expr_stmt>
    <break pos:line="11" pos:column="5">break;<pos:position pos:line="11" pos:column="11"/></break>
  <case pos:line="12" pos:column="3">case <expr><name pos:line="12" pos:column="8">CMD_GETVAL<pos:position pos:line="12" pos:column="18"/></name></expr>:<pos:position pos:line="12" pos:column="19"/></case>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">cmd_destroy_getval<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><operator pos:line="13" pos:column="24">&amp;<pos:position pos:line="13" pos:column="29"/></operator><name><name pos:line="13" pos:column="25">cmd<pos:position pos:line="13" pos:column="28"/></name><operator pos:line="13" pos:column="28">-&gt;<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="30">cmd<pos:position pos:line="13" pos:column="33"/></name><operator pos:line="13" pos:column="33">.<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="34">getval<pos:position pos:line="13" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="42"/></expr_stmt>
    <break pos:line="14" pos:column="5">break;<pos:position pos:line="14" pos:column="11"/></break>
  <case pos:line="15" pos:column="3">case <expr><name pos:line="15" pos:column="8">CMD_LISTVAL<pos:position pos:line="15" pos:column="19"/></name></expr>:<pos:position pos:line="15" pos:column="20"/></case>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">cmd_destroy_listval<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><operator pos:line="16" pos:column="25">&amp;<pos:position pos:line="16" pos:column="30"/></operator><name><name pos:line="16" pos:column="26">cmd<pos:position pos:line="16" pos:column="29"/></name><operator pos:line="16" pos:column="29">-&gt;<pos:position pos:line="16" pos:column="34"/></operator><name pos:line="16" pos:column="31">cmd<pos:position pos:line="16" pos:column="34"/></name><operator pos:line="16" pos:column="34">.<pos:position pos:line="16" pos:column="35"/></operator><name pos:line="16" pos:column="35">listval<pos:position pos:line="16" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="44"/></expr_stmt>
    <break pos:line="17" pos:column="5">break;<pos:position pos:line="17" pos:column="11"/></break>
  <case pos:line="18" pos:column="3">case <expr><name pos:line="18" pos:column="8">CMD_PUTVAL<pos:position pos:line="18" pos:column="18"/></name></expr>:<pos:position pos:line="18" pos:column="19"/></case>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">cmd_destroy_putval<pos:position pos:line="19" pos:column="23"/></name><argument_list pos:line="19" pos:column="23">(<argument><expr><operator pos:line="19" pos:column="24">&amp;<pos:position pos:line="19" pos:column="29"/></operator><name><name pos:line="19" pos:column="25">cmd<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">-&gt;<pos:position pos:line="19" pos:column="33"/></operator><name pos:line="19" pos:column="30">cmd<pos:position pos:line="19" pos:column="33"/></name><operator pos:line="19" pos:column="33">.<pos:position pos:line="19" pos:column="34"/></operator><name pos:line="19" pos:column="34">putval<pos:position pos:line="19" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="42"/></expr_stmt>
    <break pos:line="20" pos:column="5">break;<pos:position pos:line="20" pos:column="11"/></break>
  }<pos:position pos:line="21" pos:column="4"/></block></switch>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1551_collectd-5.0.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">network_shutdown<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">void<pos:position pos:line="1" pos:column="34"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="35"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><name pos:line="3" pos:column="9">listen_loop<pos:position pos:line="3" pos:column="20"/></name><operator pos:line="3" pos:column="20">++<pos:position pos:line="3" pos:column="22"/></operator></expr>;<pos:position pos:line="3" pos:column="23"/></expr_stmt>

	<comment type="block" pos:line="5" pos:column="9">/* Kill the listening thread */</comment>
	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">receive_thread_running<pos:position pos:line="6" pos:column="35"/></name> <operator pos:line="6" pos:column="36">!=<pos:position pos:line="6" pos:column="38"/></operator> <literal type="number" pos:line="6" pos:column="39">0<pos:position pos:line="6" pos:column="40"/></literal></expr>)<pos:position pos:line="6" pos:column="41"/></condition><then pos:line="6" pos:column="41">
	<block pos:line="7" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">INFO<pos:position pos:line="8" pos:column="21"/></name> <argument_list pos:line="8" pos:column="22">(<argument><expr><literal type="string" pos:line="8" pos:column="23">"network plugin: Stopping receive thread."<pos:position pos:line="8" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="67"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">pthread_kill<pos:position pos:line="9" pos:column="29"/></name> <argument_list pos:line="9" pos:column="30">(<argument><expr><name pos:line="9" pos:column="31">receive_thread_id<pos:position pos:line="9" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="50">SIGTERM<pos:position pos:line="9" pos:column="57"/></name></expr></argument>)<pos:position pos:line="9" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">pthread_join<pos:position pos:line="10" pos:column="29"/></name> <argument_list pos:line="10" pos:column="30">(<argument><expr><name pos:line="10" pos:column="31">receive_thread_id<pos:position pos:line="10" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="50">NULL<pos:position pos:line="10" pos:column="54"/></name></expr></argument> <comment type="block" pos:line="10" pos:column="55">/* no return value */</comment>)<pos:position pos:line="10" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="78"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">memset<pos:position pos:line="11" pos:column="23"/></name> <argument_list pos:line="11" pos:column="24">(<argument><expr><operator pos:line="11" pos:column="25">&amp;<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="26">receive_thread_id<pos:position pos:line="11" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="45">0<pos:position pos:line="11" pos:column="46"/></literal></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="48">sizeof <argument_list pos:line="11" pos:column="55">(<argument><expr><name pos:line="11" pos:column="56">receive_thread_id<pos:position pos:line="11" pos:column="73"/></name></expr></argument>)<pos:position pos:line="11" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="76"/></expr_stmt>
		<expr_stmt><expr><name pos:line="12" pos:column="17">receive_thread_running<pos:position pos:line="12" pos:column="39"/></name> <operator pos:line="12" pos:column="40">=<pos:position pos:line="12" pos:column="41"/></operator> <literal type="number" pos:line="12" pos:column="42">0<pos:position pos:line="12" pos:column="43"/></literal></expr>;<pos:position pos:line="12" pos:column="44"/></expr_stmt>
	}<pos:position pos:line="13" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="15" pos:column="9">/* Shutdown the dispatching thread */</comment>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">dispatch_thread_running<pos:position pos:line="16" pos:column="36"/></name> <operator pos:line="16" pos:column="37">!=<pos:position pos:line="16" pos:column="39"/></operator> <literal type="number" pos:line="16" pos:column="40">0<pos:position pos:line="16" pos:column="41"/></literal></expr>)<pos:position pos:line="16" pos:column="42"/></condition><then pos:line="16" pos:column="42">
	<block pos:line="17" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">INFO<pos:position pos:line="18" pos:column="21"/></name> <argument_list pos:line="18" pos:column="22">(<argument><expr><literal type="string" pos:line="18" pos:column="23">"network plugin: Stopping dispatch thread."<pos:position pos:line="18" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">pthread_mutex_lock<pos:position pos:line="19" pos:column="35"/></name> <argument_list pos:line="19" pos:column="36">(<argument><expr><operator pos:line="19" pos:column="37">&amp;<pos:position pos:line="19" pos:column="42"/></operator><name pos:line="19" pos:column="38">receive_list_lock<pos:position pos:line="19" pos:column="55"/></name></expr></argument>)<pos:position pos:line="19" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">pthread_cond_broadcast<pos:position pos:line="20" pos:column="39"/></name> <argument_list pos:line="20" pos:column="40">(<argument><expr><operator pos:line="20" pos:column="41">&amp;<pos:position pos:line="20" pos:column="46"/></operator><name pos:line="20" pos:column="42">receive_list_cond<pos:position pos:line="20" pos:column="59"/></name></expr></argument>)<pos:position pos:line="20" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="61"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">pthread_mutex_unlock<pos:position pos:line="21" pos:column="37"/></name> <argument_list pos:line="21" pos:column="38">(<argument><expr><operator pos:line="21" pos:column="39">&amp;<pos:position pos:line="21" pos:column="44"/></operator><name pos:line="21" pos:column="40">receive_list_lock<pos:position pos:line="21" pos:column="57"/></name></expr></argument>)<pos:position pos:line="21" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">pthread_join<pos:position pos:line="22" pos:column="29"/></name> <argument_list pos:line="22" pos:column="30">(<argument><expr><name pos:line="22" pos:column="31">dispatch_thread_id<pos:position pos:line="22" pos:column="49"/></name></expr></argument>, <comment type="block" pos:line="22" pos:column="51">/* ret = */</comment> <argument><expr><name pos:line="22" pos:column="63">NULL<pos:position pos:line="22" pos:column="67"/></name></expr></argument>)<pos:position pos:line="22" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="69"/></expr_stmt>
		<expr_stmt><expr><name pos:line="23" pos:column="17">dispatch_thread_running<pos:position pos:line="23" pos:column="40"/></name> <operator pos:line="23" pos:column="41">=<pos:position pos:line="23" pos:column="42"/></operator> <literal type="number" pos:line="23" pos:column="43">0<pos:position pos:line="23" pos:column="44"/></literal></expr>;<pos:position pos:line="23" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="26" pos:column="9">sockent_destroy<pos:position pos:line="26" pos:column="24"/></name> <argument_list pos:line="26" pos:column="25">(<argument><expr><name pos:line="26" pos:column="26">listen_sockets<pos:position pos:line="26" pos:column="40"/></name></expr></argument>)<pos:position pos:line="26" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="42"/></expr_stmt>

	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">send_buffer_fill<pos:position pos:line="28" pos:column="29"/></name> <operator pos:line="28" pos:column="30">&gt;<pos:position pos:line="28" pos:column="34"/></operator> <literal type="number" pos:line="28" pos:column="32">0<pos:position pos:line="28" pos:column="33"/></literal></expr>)<pos:position pos:line="28" pos:column="34"/></condition><then pos:line="28" pos:column="34">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="17">flush_buffer<pos:position pos:line="29" pos:column="29"/></name> <argument_list pos:line="29" pos:column="30">()<pos:position pos:line="29" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="33"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="31" pos:column="9">sfree<pos:position pos:line="31" pos:column="14"/></name> <argument_list pos:line="31" pos:column="15">(<argument><expr><name pos:line="31" pos:column="16">send_buffer<pos:position pos:line="31" pos:column="27"/></name></expr></argument>)<pos:position pos:line="31" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="29"/></expr_stmt>

	<comment type="block" pos:line="33" pos:column="9">/* TODO: Close `sending_sockets' */</comment>

	<expr_stmt><expr><call><name pos:line="35" pos:column="9">plugin_unregister_config<pos:position pos:line="35" pos:column="33"/></name> <argument_list pos:line="35" pos:column="34">(<argument><expr><literal type="string" pos:line="35" pos:column="35">"network"<pos:position pos:line="35" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="36" pos:column="9">plugin_unregister_init<pos:position pos:line="36" pos:column="31"/></name> <argument_list pos:line="36" pos:column="32">(<argument><expr><literal type="string" pos:line="36" pos:column="33">"network"<pos:position pos:line="36" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="37" pos:column="9">plugin_unregister_write<pos:position pos:line="37" pos:column="32"/></name> <argument_list pos:line="37" pos:column="33">(<argument><expr><literal type="string" pos:line="37" pos:column="34">"network"<pos:position pos:line="37" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="38" pos:column="9">plugin_unregister_shutdown<pos:position pos:line="38" pos:column="35"/></name> <argument_list pos:line="38" pos:column="36">(<argument><expr><literal type="string" pos:line="38" pos:column="37">"network"<pos:position pos:line="38" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="48"/></expr_stmt>

	<return pos:line="40" pos:column="9">return <expr><operator pos:line="40" pos:column="16">(<pos:position pos:line="40" pos:column="17"/></operator><literal type="number" pos:line="40" pos:column="17">0<pos:position pos:line="40" pos:column="18"/></literal><operator pos:line="40" pos:column="18">)<pos:position pos:line="40" pos:column="19"/></operator></expr>;<pos:position pos:line="40" pos:column="20"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

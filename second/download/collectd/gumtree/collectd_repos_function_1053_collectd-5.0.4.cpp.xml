<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1053_collectd-5.0.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">swap_read_kstat<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">void<pos:position pos:line="1" pos:column="33"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="34"/></parameter_list> <comment type="block" pos:line="1" pos:column="35">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">derive_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">swap_alloc<pos:position pos:line="3" pos:column="28"/></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">derive_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">swap_resv<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">derive_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">swap_avail<pos:position pos:line="5" pos:column="28"/></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">anoninfo<pos:position pos:line="7" pos:column="24"/></name></name></type> <name pos:line="7" pos:column="25">ai<pos:position pos:line="7" pos:column="27"/></name></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><call><name pos:line="9" pos:column="13">swapctl<pos:position pos:line="9" pos:column="20"/></name> <argument_list pos:line="9" pos:column="21">(<argument><expr><name pos:line="9" pos:column="22">SC_AINFO<pos:position pos:line="9" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="32">&amp;<pos:position pos:line="9" pos:column="37"/></operator><name pos:line="9" pos:column="33">ai<pos:position pos:line="9" pos:column="35"/></name></expr></argument>)<pos:position pos:line="9" pos:column="36"/></argument_list></call> <operator pos:line="9" pos:column="37">==<pos:position pos:line="9" pos:column="39"/></operator> <operator pos:line="9" pos:column="40">-<pos:position pos:line="9" pos:column="41"/></operator><literal type="number" pos:line="9" pos:column="41">1<pos:position pos:line="9" pos:column="42"/></literal></expr>)<pos:position pos:line="9" pos:column="43"/></condition><then pos:line="9" pos:column="43">
	<block pos:line="10" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">char<pos:position pos:line="11" pos:column="21"/></name></type> <name><name pos:line="11" pos:column="22">errbuf<pos:position pos:line="11" pos:column="28"/></name><index pos:line="11" pos:column="28">[<expr><literal type="number" pos:line="11" pos:column="29">1024<pos:position pos:line="11" pos:column="33"/></literal></expr>]<pos:position pos:line="11" pos:column="34"/></index></name></decl>;<pos:position pos:line="11" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">ERROR<pos:position pos:line="12" pos:column="22"/></name> <argument_list pos:line="12" pos:column="23">(<argument><expr><literal type="string" pos:line="12" pos:column="24">"swap plugin: swapctl failed: %s"<pos:position pos:line="12" pos:column="57"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="13" pos:column="33">sstrerror<pos:position pos:line="13" pos:column="42"/></name> <argument_list pos:line="13" pos:column="43">(<argument><expr><name pos:line="13" pos:column="44">errno<pos:position pos:line="13" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="51">errbuf<pos:position pos:line="13" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="59">sizeof <argument_list pos:line="13" pos:column="66">(<argument><expr><name pos:line="13" pos:column="67">errbuf<pos:position pos:line="13" pos:column="73"/></name></expr></argument>)<pos:position pos:line="13" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="77"/></expr_stmt>
		<return pos:line="14" pos:column="17">return <expr><operator pos:line="14" pos:column="24">(<pos:position pos:line="14" pos:column="25"/></operator><operator pos:line="14" pos:column="25">-<pos:position pos:line="14" pos:column="26"/></operator><literal type="number" pos:line="14" pos:column="26">1<pos:position pos:line="14" pos:column="27"/></literal><operator pos:line="14" pos:column="27">)<pos:position pos:line="14" pos:column="28"/></operator></expr>;<pos:position pos:line="14" pos:column="29"/></return>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="17" pos:column="9">/*
	 * Calculations from:
	 * http://cvs.opensolaris.org/source/xref/on/usr/src/cmd/swap/swap.c
	 * Also see:
	 * http://www.itworld.com/Comp/2377/UIR980701perf/ (outdated?)
	 * /usr/include/vm/anon.h
	 *
	 * In short, swap -s shows: allocated + reserved = used, available
	 *
	 * However, Solaris does not allow to allocated/reserved more than the
	 * available swap (physical memory + disk swap), so the pedant may
	 * prefer: allocated + unallocated = reserved, available
	 *
	 * We map the above to: used + resv = n/a, free
	 *
	 * Does your brain hurt yet?  - Christophe Kalt
	 *
	 * Oh, and in case you wonder,
	 * swap_alloc = pagesize * ( ai.ani_max - ai.ani_free );
	 * can suffer from a 32bit overflow.
	 */</comment>
	<expr_stmt><expr><name pos:line="38" pos:column="9">swap_alloc<pos:position pos:line="38" pos:column="19"/></name>  <operator pos:line="38" pos:column="21">=<pos:position pos:line="38" pos:column="22"/></operator> <call pos:line="38" pos:column="23">(<name pos:line="38" pos:column="24">derive_t<pos:position pos:line="38" pos:column="32"/></name>) <argument_list pos:line="38" pos:column="34">(<argument><expr><operator pos:line="38" pos:column="35">(<pos:position pos:line="38" pos:column="36"/></operator><name><name pos:line="38" pos:column="36">ai<pos:position pos:line="38" pos:column="38"/></name><operator pos:line="38" pos:column="38">.<pos:position pos:line="38" pos:column="39"/></operator><name pos:line="38" pos:column="39">ani_max<pos:position pos:line="38" pos:column="46"/></name></name> <operator pos:line="38" pos:column="47">-<pos:position pos:line="38" pos:column="48"/></operator> <name><name pos:line="38" pos:column="49">ai<pos:position pos:line="38" pos:column="51"/></name><operator pos:line="38" pos:column="51">.<pos:position pos:line="38" pos:column="52"/></operator><name pos:line="38" pos:column="52">ani_free<pos:position pos:line="38" pos:column="60"/></name></name><operator pos:line="38" pos:column="60">)<pos:position pos:line="38" pos:column="61"/></operator> <operator pos:line="38" pos:column="62">*<pos:position pos:line="38" pos:column="63"/></operator> <name pos:line="38" pos:column="64">pagesize<pos:position pos:line="38" pos:column="72"/></name></expr></argument>)<pos:position pos:line="38" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="74"/></expr_stmt>
	<expr_stmt><expr><name pos:line="39" pos:column="9">swap_resv<pos:position pos:line="39" pos:column="18"/></name>   <operator pos:line="39" pos:column="21">=<pos:position pos:line="39" pos:column="22"/></operator> <call pos:line="39" pos:column="23">(<name pos:line="39" pos:column="24">derive_t<pos:position pos:line="39" pos:column="32"/></name>) <argument_list pos:line="39" pos:column="34">(<argument><expr><operator pos:line="39" pos:column="35">(<pos:position pos:line="39" pos:column="36"/></operator><name><name pos:line="39" pos:column="36">ai<pos:position pos:line="39" pos:column="38"/></name><operator pos:line="39" pos:column="38">.<pos:position pos:line="39" pos:column="39"/></operator><name pos:line="39" pos:column="39">ani_resv<pos:position pos:line="39" pos:column="47"/></name></name> <operator pos:line="39" pos:column="48">+<pos:position pos:line="39" pos:column="49"/></operator> <name><name pos:line="39" pos:column="50">ai<pos:position pos:line="39" pos:column="52"/></name><operator pos:line="39" pos:column="52">.<pos:position pos:line="39" pos:column="53"/></operator><name pos:line="39" pos:column="53">ani_free<pos:position pos:line="39" pos:column="61"/></name></name> <operator pos:line="39" pos:column="62">-<pos:position pos:line="39" pos:column="63"/></operator> <name><name pos:line="39" pos:column="64">ai<pos:position pos:line="39" pos:column="66"/></name><operator pos:line="39" pos:column="66">.<pos:position pos:line="39" pos:column="67"/></operator><name pos:line="39" pos:column="67">ani_max<pos:position pos:line="39" pos:column="74"/></name></name><operator pos:line="39" pos:column="74">)<pos:position pos:line="39" pos:column="75"/></operator>
			<operator pos:line="40" pos:column="25">*<pos:position pos:line="40" pos:column="26"/></operator> <name pos:line="40" pos:column="27">pagesize<pos:position pos:line="40" pos:column="35"/></name></expr></argument>)<pos:position pos:line="40" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name pos:line="41" pos:column="9">swap_avail<pos:position pos:line="41" pos:column="19"/></name>  <operator pos:line="41" pos:column="21">=<pos:position pos:line="41" pos:column="22"/></operator> <call pos:line="41" pos:column="23">(<name pos:line="41" pos:column="24">derive_t<pos:position pos:line="41" pos:column="32"/></name>) <argument_list pos:line="41" pos:column="34">(<argument><expr><operator pos:line="41" pos:column="35">(<pos:position pos:line="41" pos:column="36"/></operator><name><name pos:line="41" pos:column="36">ai<pos:position pos:line="41" pos:column="38"/></name><operator pos:line="41" pos:column="38">.<pos:position pos:line="41" pos:column="39"/></operator><name pos:line="41" pos:column="39">ani_max<pos:position pos:line="41" pos:column="46"/></name></name> <operator pos:line="41" pos:column="47">-<pos:position pos:line="41" pos:column="48"/></operator> <name><name pos:line="41" pos:column="49">ai<pos:position pos:line="41" pos:column="51"/></name><operator pos:line="41" pos:column="51">.<pos:position pos:line="41" pos:column="52"/></operator><name pos:line="41" pos:column="52">ani_resv<pos:position pos:line="41" pos:column="60"/></name></name><operator pos:line="41" pos:column="60">)<pos:position pos:line="41" pos:column="61"/></operator> <operator pos:line="41" pos:column="62">*<pos:position pos:line="41" pos:column="63"/></operator> <name pos:line="41" pos:column="64">pagesize<pos:position pos:line="41" pos:column="72"/></name></expr></argument>)<pos:position pos:line="41" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="74"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="43" pos:column="9">swap_submit<pos:position pos:line="43" pos:column="20"/></name> <argument_list pos:line="43" pos:column="21">(<argument><expr><literal type="string" pos:line="43" pos:column="22">"used"<pos:position pos:line="43" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="30">swap_alloc<pos:position pos:line="43" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="42">DS_TYPE_GAUGE<pos:position pos:line="43" pos:column="55"/></name></expr></argument>)<pos:position pos:line="43" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="57"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="44" pos:column="9">swap_submit<pos:position pos:line="44" pos:column="20"/></name> <argument_list pos:line="44" pos:column="21">(<argument><expr><literal type="string" pos:line="44" pos:column="22">"free"<pos:position pos:line="44" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="30">swap_avail<pos:position pos:line="44" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="42">DS_TYPE_GAUGE<pos:position pos:line="44" pos:column="55"/></name></expr></argument>)<pos:position pos:line="44" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="57"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="45" pos:column="9">swap_submit<pos:position pos:line="45" pos:column="20"/></name> <argument_list pos:line="45" pos:column="21">(<argument><expr><literal type="string" pos:line="45" pos:column="22">"reserved"<pos:position pos:line="45" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="34">swap_resv<pos:position pos:line="45" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="45">DS_TYPE_GAUGE<pos:position pos:line="45" pos:column="58"/></name></expr></argument>)<pos:position pos:line="45" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="60"/></expr_stmt>

	<return pos:line="47" pos:column="9">return <expr><operator pos:line="47" pos:column="16">(<pos:position pos:line="47" pos:column="17"/></operator><literal type="number" pos:line="47" pos:column="17">0<pos:position pos:line="47" pos:column="18"/></literal><operator pos:line="47" pos:column="18">)<pos:position pos:line="47" pos:column="19"/></operator></expr>;<pos:position pos:line="47" pos:column="20"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1945_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">process_station<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">int<pos:position pos:line="1" pos:column="31"/></name></type> <name pos:line="1" pos:column="32">sk<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">dev<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>,
                           <parameter><decl><type><name><name pos:line="2" pos:column="28">struct<pos:position pos:line="2" pos:column="34"/></name> <name pos:line="2" pos:column="35">ieee80211req_sta_info<pos:position pos:line="2" pos:column="56"/></name></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">si<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list> <block pos:line="2" pos:column="62">{
  <decl_stmt><decl><specifier pos:line="3" pos:column="3">static<pos:position pos:line="3" pos:column="9"/></specifier> <type><name pos:line="3" pos:column="10">char<pos:position pos:line="3" pos:column="14"/></name></type> <name><name pos:line="3" pos:column="15">mac<pos:position pos:line="3" pos:column="18"/></name><index pos:line="3" pos:column="18">[<expr><name pos:line="3" pos:column="19">DATA_MAX_NAME_LEN<pos:position pos:line="3" pos:column="36"/></name></expr>]<pos:position pos:line="3" pos:column="37"/></index></name></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">ieee80211req_sta_stats<pos:position pos:line="4" pos:column="32"/></name></name></type> <name pos:line="4" pos:column="33">stats<pos:position pos:line="4" pos:column="38"/></name></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">ieee80211_nodestats<pos:position pos:line="5" pos:column="35"/></name></name> <modifier pos:line="5" pos:column="36">*<pos:position pos:line="5" pos:column="37"/></modifier></type><name pos:line="5" pos:column="37">ns<pos:position pos:line="5" pos:column="39"/></name> <init pos:line="5" pos:column="40">= <expr><operator pos:line="5" pos:column="42">&amp;<pos:position pos:line="5" pos:column="47"/></operator><name><name pos:line="5" pos:column="43">stats<pos:position pos:line="5" pos:column="48"/></name><operator pos:line="5" pos:column="48">.<pos:position pos:line="5" pos:column="49"/></operator><name pos:line="5" pos:column="49">is_stats<pos:position pos:line="5" pos:column="57"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="58"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">status<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">macaddr_to_str<pos:position pos:line="8" pos:column="17"/></name><argument_list pos:line="8" pos:column="17">(<argument><expr><name pos:line="8" pos:column="18">mac<pos:position pos:line="8" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="23">sizeof<argument_list pos:line="8" pos:column="29">(<argument><expr><name pos:line="8" pos:column="30">mac<pos:position pos:line="8" pos:column="33"/></name></expr></argument>)<pos:position pos:line="8" pos:column="34"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="36">si<pos:position pos:line="8" pos:column="38"/></name><operator pos:line="8" pos:column="38">-&gt;<pos:position pos:line="8" pos:column="43"/></operator><name pos:line="8" pos:column="40">isi_macaddr<pos:position pos:line="8" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="53"/></expr_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><call><name pos:line="10" pos:column="7">item_watched<pos:position pos:line="10" pos:column="19"/></name><argument_list pos:line="10" pos:column="19">(<argument><expr><name pos:line="10" pos:column="20">STAT_NODE_TX_RATE<pos:position pos:line="10" pos:column="37"/></name></expr></argument>)<pos:position pos:line="10" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="39"/></condition><then pos:line="10" pos:column="39">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="5">submit_gauge<pos:position pos:line="11" pos:column="17"/></name><argument_list pos:line="11" pos:column="17">(<argument><expr><name pos:line="11" pos:column="18">dev<pos:position pos:line="11" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="23">"node_tx_rate"<pos:position pos:line="11" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="39">mac<pos:position pos:line="11" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="44">NULL<pos:position pos:line="11" pos:column="48"/></name></expr></argument>,
                 <argument><expr><operator pos:line="12" pos:column="18">(<pos:position pos:line="12" pos:column="19"/></operator><name><name pos:line="12" pos:column="19">si<pos:position pos:line="12" pos:column="21"/></name><operator pos:line="12" pos:column="21">-&gt;<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="23">isi_rates<pos:position pos:line="12" pos:column="32"/></name><index pos:line="12" pos:column="32">[<expr><name><name pos:line="12" pos:column="33">si<pos:position pos:line="12" pos:column="35"/></name><operator pos:line="12" pos:column="35">-&gt;<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="37">isi_txrate<pos:position pos:line="12" pos:column="47"/></name></name></expr>]<pos:position pos:line="12" pos:column="48"/></index></name> <operator pos:line="12" pos:column="49">&amp;<pos:position pos:line="12" pos:column="54"/></operator> <name pos:line="12" pos:column="51">IEEE80211_RATE_VAL<pos:position pos:line="12" pos:column="69"/></name><operator pos:line="12" pos:column="69">)<pos:position pos:line="12" pos:column="70"/></operator> <operator pos:line="12" pos:column="71">/<pos:position pos:line="12" pos:column="72"/></operator> <literal type="number" pos:line="12" pos:column="73">2<pos:position pos:line="12" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="76"/></expr_stmt></block></then></if>

  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><call><name pos:line="14" pos:column="7">item_watched<pos:position pos:line="14" pos:column="19"/></name><argument_list pos:line="14" pos:column="19">(<argument><expr><name pos:line="14" pos:column="20">STAT_NODE_RSSI<pos:position pos:line="14" pos:column="34"/></name></expr></argument>)<pos:position pos:line="14" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="36"/></condition><then pos:line="14" pos:column="36">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="5">submit_gauge<pos:position pos:line="15" pos:column="17"/></name><argument_list pos:line="15" pos:column="17">(<argument><expr><name pos:line="15" pos:column="18">dev<pos:position pos:line="15" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="23">"node_rssi"<pos:position pos:line="15" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="36">mac<pos:position pos:line="15" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="41">NULL<pos:position pos:line="15" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="47">si<pos:position pos:line="15" pos:column="49"/></name><operator pos:line="15" pos:column="49">-&gt;<pos:position pos:line="15" pos:column="54"/></operator><name pos:line="15" pos:column="51">isi_rssi<pos:position pos:line="15" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="61"/></expr_stmt></block></then></if>

  <decl_stmt><decl><type><name><name pos:line="17" pos:column="3">struct<pos:position pos:line="17" pos:column="9"/></name> <name pos:line="17" pos:column="10">iwreq<pos:position pos:line="17" pos:column="15"/></name></name></type> <name pos:line="17" pos:column="16">iwr<pos:position pos:line="17" pos:column="19"/></name> <init pos:line="17" pos:column="20">= <expr><block pos:line="17" pos:column="22">{<expr><operator pos:line="17" pos:column="23">.<pos:position pos:line="17" pos:column="24"/></operator><name><name pos:line="17" pos:column="24">u<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">.<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="26">data<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">.<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="31">pointer<pos:position pos:line="17" pos:column="38"/></name></name> <operator pos:line="17" pos:column="39">=<pos:position pos:line="17" pos:column="40"/></operator> <operator pos:line="17" pos:column="41">(<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="42">void<pos:position pos:line="17" pos:column="46"/></name> <operator pos:line="17" pos:column="47">*<pos:position pos:line="17" pos:column="48"/></operator><operator pos:line="17" pos:column="48">)<pos:position pos:line="17" pos:column="49"/></operator><operator pos:line="17" pos:column="49">&amp;<pos:position pos:line="17" pos:column="54"/></operator><name pos:line="17" pos:column="50">stats<pos:position pos:line="17" pos:column="55"/></name></expr>,
                      <expr><operator pos:line="18" pos:column="23">.<pos:position pos:line="18" pos:column="24"/></operator><name><name pos:line="18" pos:column="24">u<pos:position pos:line="18" pos:column="25"/></name><operator pos:line="18" pos:column="25">.<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="26">data<pos:position pos:line="18" pos:column="30"/></name><operator pos:line="18" pos:column="30">.<pos:position pos:line="18" pos:column="31"/></operator><name pos:line="18" pos:column="31">length<pos:position pos:line="18" pos:column="37"/></name></name> <operator pos:line="18" pos:column="38">=<pos:position pos:line="18" pos:column="39"/></operator> sizeof<operator pos:line="18" pos:column="46">(<pos:position pos:line="18" pos:column="47"/></operator><name pos:line="18" pos:column="47">stats<pos:position pos:line="18" pos:column="52"/></name><operator pos:line="18" pos:column="52">)<pos:position pos:line="18" pos:column="53"/></operator></expr>}<pos:position pos:line="18" pos:column="54"/></block></expr></init></decl>;<pos:position pos:line="18" pos:column="55"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">sstrncpy<pos:position pos:line="19" pos:column="11"/></name><argument_list pos:line="19" pos:column="11">(<argument><expr><name><name pos:line="19" pos:column="12">iwr<pos:position pos:line="19" pos:column="15"/></name><operator pos:line="19" pos:column="15">.<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="16">ifr_name<pos:position pos:line="19" pos:column="24"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="26">dev<pos:position pos:line="19" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="31">sizeof<argument_list pos:line="19" pos:column="37">(<argument><expr><name><name pos:line="19" pos:column="38">iwr<pos:position pos:line="19" pos:column="41"/></name><operator pos:line="19" pos:column="41">.<pos:position pos:line="19" pos:column="42"/></operator><name pos:line="19" pos:column="42">ifr_name<pos:position pos:line="19" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="53"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="21" pos:column="3">memcpy<pos:position pos:line="21" pos:column="9"/></name><argument_list pos:line="21" pos:column="9">(<argument><expr><name><name pos:line="21" pos:column="10">stats<pos:position pos:line="21" pos:column="15"/></name><operator pos:line="21" pos:column="15">.<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="16">is_u<pos:position pos:line="21" pos:column="20"/></name><operator pos:line="21" pos:column="20">.<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="21">macaddr<pos:position pos:line="21" pos:column="28"/></name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="30">si<pos:position pos:line="21" pos:column="32"/></name><operator pos:line="21" pos:column="32">-&gt;<pos:position pos:line="21" pos:column="37"/></operator><name pos:line="21" pos:column="34">isi_macaddr<pos:position pos:line="21" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="47">IEEE80211_ADDR_LEN<pos:position pos:line="21" pos:column="65"/></name></expr></argument>)<pos:position pos:line="21" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="67"/></expr_stmt>
  <expr_stmt><expr><name pos:line="22" pos:column="3">status<pos:position pos:line="22" pos:column="9"/></name> <operator pos:line="22" pos:column="10">=<pos:position pos:line="22" pos:column="11"/></operator> <call><name pos:line="22" pos:column="12">ioctl<pos:position pos:line="22" pos:column="17"/></name><argument_list pos:line="22" pos:column="17">(<argument><expr><name pos:line="22" pos:column="18">sk<pos:position pos:line="22" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="22">IEEE80211_IOCTL_STA_STATS<pos:position pos:line="22" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="49">&amp;<pos:position pos:line="22" pos:column="54"/></operator><name pos:line="22" pos:column="50">iwr<pos:position pos:line="22" pos:column="53"/></name></expr></argument>)<pos:position pos:line="22" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="55"/></expr_stmt>
  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><name pos:line="23" pos:column="7">status<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">&lt;<pos:position pos:line="23" pos:column="18"/></operator> <literal type="number" pos:line="23" pos:column="16">0<pos:position pos:line="23" pos:column="17"/></literal></expr>)<pos:position pos:line="23" pos:column="18"/></condition><then pos:line="23" pos:column="18"> <block pos:line="23" pos:column="19">{
    <comment type="block" pos:line="24" pos:column="5">/* Silent, because not all interfaces support all ioctls. */</comment>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">DEBUG<pos:position pos:line="25" pos:column="10"/></name><argument_list pos:line="25" pos:column="10">(<argument><expr><literal type="string" pos:line="25" pos:column="11">"madwifi plugin: Sending IO-control "<pos:position pos:line="25" pos:column="48"/></literal>
          <literal type="string" pos:line="26" pos:column="11">"IEEE80211_IOCTL_STA_STATS to device %s "<pos:position pos:line="26" pos:column="52"/></literal>
          <literal type="string" pos:line="27" pos:column="11">"failed with status %i."<pos:position pos:line="27" pos:column="35"/></literal></expr></argument>,
          <argument><expr><name pos:line="28" pos:column="11">dev<pos:position pos:line="28" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="16">status<pos:position pos:line="28" pos:column="22"/></name></expr></argument>)<pos:position pos:line="28" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="24"/></expr_stmt>
    <return pos:line="29" pos:column="5">return <expr><operator pos:line="29" pos:column="12">(<pos:position pos:line="29" pos:column="13"/></operator><name pos:line="29" pos:column="13">status<pos:position pos:line="29" pos:column="19"/></name><operator pos:line="29" pos:column="19">)<pos:position pos:line="29" pos:column="20"/></operator></expr>;<pos:position pos:line="29" pos:column="21"/></return>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="32" pos:column="3">/* These two stats are handled as a special case as they are
     a pair of 64bit values */</comment>
  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><call><name pos:line="34" pos:column="7">item_watched<pos:position pos:line="34" pos:column="19"/></name><argument_list pos:line="34" pos:column="19">(<argument><expr><name pos:line="34" pos:column="20">STAT_NODE_OCTETS<pos:position pos:line="34" pos:column="36"/></name></expr></argument>)<pos:position pos:line="34" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="38"/></condition><then pos:line="34" pos:column="38">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="5">submit_derive2<pos:position pos:line="35" pos:column="19"/></name><argument_list pos:line="35" pos:column="19">(<argument><expr><name pos:line="35" pos:column="20">dev<pos:position pos:line="35" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="25">"node_octets"<pos:position pos:line="35" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="40">mac<pos:position pos:line="35" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="45">NULL<pos:position pos:line="35" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="51">ns<pos:position pos:line="35" pos:column="53"/></name><operator pos:line="35" pos:column="53">-&gt;<pos:position pos:line="35" pos:column="58"/></operator><name pos:line="35" pos:column="55">ns_rx_bytes<pos:position pos:line="35" pos:column="66"/></name></name></expr></argument>,
                   <argument><expr><name><name pos:line="36" pos:column="20">ns<pos:position pos:line="36" pos:column="22"/></name><operator pos:line="36" pos:column="22">-&gt;<pos:position pos:line="36" pos:column="27"/></operator><name pos:line="36" pos:column="24">ns_tx_bytes<pos:position pos:line="36" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="37"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="38" pos:column="3">/* This stat is handled as a special case, because it is stored
     as uin64_t, but we will ignore upper half */</comment>
  <if pos:line="40" pos:column="3">if <condition pos:line="40" pos:column="6">(<expr><call><name pos:line="40" pos:column="7">item_watched<pos:position pos:line="40" pos:column="19"/></name><argument_list pos:line="40" pos:column="19">(<argument><expr><name pos:line="40" pos:column="20">STAT_NS_RX_BEACONS<pos:position pos:line="40" pos:column="38"/></name></expr></argument>)<pos:position pos:line="40" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="40"/></condition><then pos:line="40" pos:column="40">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="5">submit_derive<pos:position pos:line="41" pos:column="18"/></name><argument_list pos:line="41" pos:column="18">(<argument><expr><name pos:line="41" pos:column="19">dev<pos:position pos:line="41" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="24">"node_stat"<pos:position pos:line="41" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="37">"ns_rx_beacons"<pos:position pos:line="41" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="54">mac<pos:position pos:line="41" pos:column="57"/></name></expr></argument>,
                  <argument><expr><operator pos:line="42" pos:column="19">(<pos:position pos:line="42" pos:column="20"/></operator><name><name pos:line="42" pos:column="20">ns<pos:position pos:line="42" pos:column="22"/></name><operator pos:line="42" pos:column="22">-&gt;<pos:position pos:line="42" pos:column="27"/></operator><name pos:line="42" pos:column="24">ns_rx_beacons<pos:position pos:line="42" pos:column="37"/></name></name> <operator pos:line="42" pos:column="38">&amp;<pos:position pos:line="42" pos:column="43"/></operator> <literal type="number" pos:line="42" pos:column="40">0xFFFFFFFF<pos:position pos:line="42" pos:column="50"/></literal><operator pos:line="42" pos:column="50">)<pos:position pos:line="42" pos:column="51"/></operator></expr></argument>)<pos:position pos:line="42" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="53"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="44" pos:column="3">/* All other node statistics */</comment>
  <expr_stmt><expr><call><name pos:line="45" pos:column="3">process_stat_struct<pos:position pos:line="45" pos:column="22"/></name><argument_list pos:line="45" pos:column="22">(<argument><expr><name pos:line="45" pos:column="23">NOD_STAT<pos:position pos:line="45" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="33">ns<pos:position pos:line="45" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="37">dev<pos:position pos:line="45" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="42">mac<pos:position pos:line="45" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="47">"node_stat"<pos:position pos:line="45" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="60">"ns_misc"<pos:position pos:line="45" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="71"/></expr_stmt>
  <return pos:line="46" pos:column="3">return <expr><operator pos:line="46" pos:column="10">(<pos:position pos:line="46" pos:column="11"/></operator><literal type="number" pos:line="46" pos:column="11">0<pos:position pos:line="46" pos:column="12"/></literal><operator pos:line="46" pos:column="12">)<pos:position pos:line="46" pos:column="13"/></operator></expr>;<pos:position pos:line="46" pos:column="14"/></return>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

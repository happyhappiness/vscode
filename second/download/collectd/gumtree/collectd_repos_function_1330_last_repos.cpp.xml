<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1330_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">grpc<pos:position pos:line="1" pos:column="5"/></name><operator pos:line="1" pos:column="5">::<pos:position pos:line="1" pos:column="7"/></operator><name pos:line="1" pos:column="7">Status<pos:position pos:line="1" pos:column="13"/></name></name></type>
  <name pos:line="2" pos:column="3">QueryValues<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name><name pos:line="2" pos:column="15">grpc<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">::<pos:position pos:line="2" pos:column="21"/></operator><name pos:line="2" pos:column="21">ServerContext<pos:position pos:line="2" pos:column="34"/></name></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">ctx<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="41">QueryValuesRequest<pos:position pos:line="2" pos:column="59"/></name> <specifier pos:line="2" pos:column="60">const<pos:position pos:line="2" pos:column="65"/></specifier> <modifier pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></modifier></type><name pos:line="2" pos:column="67">req<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>,
              <parameter><decl><type><name><name pos:line="3" pos:column="15">grpc<pos:position pos:line="3" pos:column="19"/></name><operator pos:line="3" pos:column="19">::<pos:position pos:line="3" pos:column="21"/></operator><name><name pos:line="3" pos:column="21">ServerWriter<pos:position pos:line="3" pos:column="33"/></name><argument_list type="generic" pos:line="3" pos:column="33">&lt;<argument><expr><name pos:line="3" pos:column="34">QueryValuesResponse<pos:position pos:line="3" pos:column="53"/></name></expr></argument>&gt;<pos:position pos:line="3" pos:column="57"/></argument_list></name></name> <modifier pos:line="3" pos:column="55">*<pos:position pos:line="3" pos:column="56"/></modifier></type><name pos:line="3" pos:column="56">writer<pos:position pos:line="3" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="63"/></parameter_list> <specifier pos:line="3" pos:column="64">override<pos:position pos:line="3" pos:column="72"/></specifier> <block pos:line="3" pos:column="73">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">value_list_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">match<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">auto<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">status<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><call><name pos:line="5" pos:column="19">unmarshal_ident<pos:position pos:line="5" pos:column="34"/></name><argument_list pos:line="5" pos:column="34">(<argument><expr><call><name><name pos:line="5" pos:column="35">req<pos:position pos:line="5" pos:column="38"/></name><operator pos:line="5" pos:column="38">-&gt;<pos:position pos:line="5" pos:column="43"/></operator><name pos:line="5" pos:column="40">identifier<pos:position pos:line="5" pos:column="50"/></name></name><argument_list pos:line="5" pos:column="50">()<pos:position pos:line="5" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="5" pos:column="54">&amp;<pos:position pos:line="5" pos:column="59"/></operator><name pos:line="5" pos:column="55">match<pos:position pos:line="5" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="boolean" pos:line="5" pos:column="62">false<pos:position pos:line="5" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="69"/></decl_stmt>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">!<pos:position pos:line="6" pos:column="10"/></operator><call><name><name pos:line="6" pos:column="10">status<pos:position pos:line="6" pos:column="16"/></name><operator pos:line="6" pos:column="16">.<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="17">ok<pos:position pos:line="6" pos:column="19"/></name></name><argument_list pos:line="6" pos:column="19">()<pos:position pos:line="6" pos:column="21"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="22"/></condition><then pos:line="6" pos:column="22"> <block pos:line="6" pos:column="23">{
      <return pos:line="7" pos:column="7">return <expr><name pos:line="7" pos:column="14">status<pos:position pos:line="7" pos:column="20"/></name></expr>;<pos:position pos:line="7" pos:column="21"/></return>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name><name pos:line="10" pos:column="5">std<pos:position pos:line="10" pos:column="8"/></name><operator pos:line="10" pos:column="8">::<pos:position pos:line="10" pos:column="10"/></operator><name><name pos:line="10" pos:column="10">queue<pos:position pos:line="10" pos:column="15"/></name><argument_list type="generic" pos:line="10" pos:column="15">&lt;<argument><expr><name pos:line="10" pos:column="16">value_list_t<pos:position pos:line="10" pos:column="28"/></name></expr></argument>&gt;<pos:position pos:line="10" pos:column="32"/></argument_list></name></name></type> <name pos:line="10" pos:column="30">value_lists<pos:position pos:line="10" pos:column="41"/></name></decl>;<pos:position pos:line="10" pos:column="42"/></decl_stmt>
    <expr_stmt><expr><name pos:line="11" pos:column="5">status<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <call><name><name pos:line="11" pos:column="14">this<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">-&gt;<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="20">queryValuesRead<pos:position pos:line="11" pos:column="35"/></name></name><argument_list pos:line="11" pos:column="35">(<argument><expr><operator pos:line="11" pos:column="36">&amp;<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="37">match<pos:position pos:line="11" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="44">&amp;<pos:position pos:line="11" pos:column="49"/></operator><name pos:line="11" pos:column="45">value_lists<pos:position pos:line="11" pos:column="56"/></name></expr></argument>)<pos:position pos:line="11" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="58"/></expr_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><call><name><name pos:line="12" pos:column="9">status<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">.<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="16">ok<pos:position pos:line="12" pos:column="18"/></name></name><argument_list pos:line="12" pos:column="18">()<pos:position pos:line="12" pos:column="20"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="21"/></condition><then pos:line="12" pos:column="21"> <block pos:line="12" pos:column="22">{
      <expr_stmt><expr><name pos:line="13" pos:column="7">status<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <call><name><name pos:line="13" pos:column="16">this<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">-&gt;<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="22">queryValuesWrite<pos:position pos:line="13" pos:column="38"/></name></name><argument_list pos:line="13" pos:column="38">(<argument><expr><name pos:line="13" pos:column="39">ctx<pos:position pos:line="13" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="44">writer<pos:position pos:line="13" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="52">&amp;<pos:position pos:line="13" pos:column="57"/></operator><name pos:line="13" pos:column="53">value_lists<pos:position pos:line="13" pos:column="64"/></name></expr></argument>)<pos:position pos:line="13" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="66"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <while pos:line="16" pos:column="5">while <condition pos:line="16" pos:column="11">(<expr><operator pos:line="16" pos:column="12">!<pos:position pos:line="16" pos:column="13"/></operator><call><name><name pos:line="16" pos:column="13">value_lists<pos:position pos:line="16" pos:column="24"/></name><operator pos:line="16" pos:column="24">.<pos:position pos:line="16" pos:column="25"/></operator><name pos:line="16" pos:column="25">empty<pos:position pos:line="16" pos:column="30"/></name></name><argument_list pos:line="16" pos:column="30">()<pos:position pos:line="16" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="33"/></condition> <block pos:line="16" pos:column="34">{
      <decl_stmt><decl><type><name pos:line="17" pos:column="7">auto<pos:position pos:line="17" pos:column="11"/></name></type> <name pos:line="17" pos:column="12">vl<pos:position pos:line="17" pos:column="14"/></name> <init pos:line="17" pos:column="15">= <expr><call><name><name pos:line="17" pos:column="17">value_lists<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">.<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="29">front<pos:position pos:line="17" pos:column="34"/></name></name><argument_list pos:line="17" pos:column="34">()<pos:position pos:line="17" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="37"/></decl_stmt>
      <expr_stmt><expr><call><name><name pos:line="18" pos:column="7">value_lists<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">.<pos:position pos:line="18" pos:column="19"/></operator><name pos:line="18" pos:column="19">pop<pos:position pos:line="18" pos:column="22"/></name></name><argument_list pos:line="18" pos:column="22">()<pos:position pos:line="18" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="19" pos:column="7">sfree<pos:position pos:line="19" pos:column="12"/></name><argument_list pos:line="19" pos:column="12">(<argument><expr><name><name pos:line="19" pos:column="13">vl<pos:position pos:line="19" pos:column="15"/></name><operator pos:line="19" pos:column="15">.<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="16">values<pos:position pos:line="19" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="20" pos:column="7">meta_data_destroy<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><name><name pos:line="20" pos:column="25">vl<pos:position pos:line="20" pos:column="27"/></name><operator pos:line="20" pos:column="27">.<pos:position pos:line="20" pos:column="28"/></operator><name pos:line="20" pos:column="28">meta<pos:position pos:line="20" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></while>

    <return pos:line="23" pos:column="5">return <expr><name pos:line="23" pos:column="12">status<pos:position pos:line="23" pos:column="18"/></name></expr>;<pos:position pos:line="23" pos:column="19"/></return>
  }<pos:position pos:line="24" pos:column="4"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1638_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">olsrd_config<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">key<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">value<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list> <comment type="block" pos:line="1" pos:column="62">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><call><name pos:line="3" pos:column="7">strcasecmp<pos:position pos:line="3" pos:column="17"/></name> <argument_list pos:line="3" pos:column="18">(<argument><expr><literal type="string" pos:line="3" pos:column="19">"Host"<pos:position pos:line="3" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="3" pos:column="27">key<pos:position pos:line="3" pos:column="30"/></name></expr></argument>)<pos:position pos:line="3" pos:column="31"/></argument_list></call> <operator pos:line="3" pos:column="32">==<pos:position pos:line="3" pos:column="34"/></operator> <literal type="number" pos:line="3" pos:column="35">0<pos:position pos:line="3" pos:column="36"/></literal></expr>)<pos:position pos:line="3" pos:column="37"/></condition><then pos:line="3" pos:column="37">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="4" pos:column="5">olsrd_set_node<pos:position pos:line="4" pos:column="19"/></name> <argument_list pos:line="4" pos:column="20">(<argument><expr><name pos:line="4" pos:column="21">value<pos:position pos:line="4" pos:column="26"/></name></expr></argument>)<pos:position pos:line="4" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="28"/></expr_stmt></block></then>
  <elseif pos:line="5" pos:column="3">else <if pos:line="5" pos:column="8">if <condition pos:line="5" pos:column="11">(<expr><call><name pos:line="5" pos:column="12">strcasecmp<pos:position pos:line="5" pos:column="22"/></name> <argument_list pos:line="5" pos:column="23">(<argument><expr><literal type="string" pos:line="5" pos:column="24">"Port"<pos:position pos:line="5" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="32">key<pos:position pos:line="5" pos:column="35"/></name></expr></argument>)<pos:position pos:line="5" pos:column="36"/></argument_list></call> <operator pos:line="5" pos:column="37">==<pos:position pos:line="5" pos:column="39"/></operator> <literal type="number" pos:line="5" pos:column="40">0<pos:position pos:line="5" pos:column="41"/></literal></expr>)<pos:position pos:line="5" pos:column="42"/></condition><then pos:line="5" pos:column="42">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="5">olsrd_set_service<pos:position pos:line="6" pos:column="22"/></name> <argument_list pos:line="6" pos:column="23">(<argument><expr><name pos:line="6" pos:column="24">value<pos:position pos:line="6" pos:column="29"/></name></expr></argument>)<pos:position pos:line="6" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="31"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="7" pos:column="3">else <if pos:line="7" pos:column="8">if <condition pos:line="7" pos:column="11">(<expr><call><name pos:line="7" pos:column="12">strcasecmp<pos:position pos:line="7" pos:column="22"/></name> <argument_list pos:line="7" pos:column="23">(<argument><expr><literal type="string" pos:line="7" pos:column="24">"CollectLinks"<pos:position pos:line="7" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="40">key<pos:position pos:line="7" pos:column="43"/></name></expr></argument>)<pos:position pos:line="7" pos:column="44"/></argument_list></call> <operator pos:line="7" pos:column="45">==<pos:position pos:line="7" pos:column="47"/></operator> <literal type="number" pos:line="7" pos:column="48">0<pos:position pos:line="7" pos:column="49"/></literal></expr>)<pos:position pos:line="7" pos:column="50"/></condition><then pos:line="7" pos:column="50">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="5">olsrd_set_detail<pos:position pos:line="8" pos:column="21"/></name> <argument_list pos:line="8" pos:column="22">(<argument><expr><operator pos:line="8" pos:column="23">&amp;<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="24">config_want_links<pos:position pos:line="8" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="43">value<pos:position pos:line="8" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="50">key<pos:position pos:line="8" pos:column="53"/></name></expr></argument>)<pos:position pos:line="8" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="55"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="9" pos:column="3">else <if pos:line="9" pos:column="8">if <condition pos:line="9" pos:column="11">(<expr><call><name pos:line="9" pos:column="12">strcasecmp<pos:position pos:line="9" pos:column="22"/></name> <argument_list pos:line="9" pos:column="23">(<argument><expr><literal type="string" pos:line="9" pos:column="24">"CollectRoutes"<pos:position pos:line="9" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="41">key<pos:position pos:line="9" pos:column="44"/></name></expr></argument>)<pos:position pos:line="9" pos:column="45"/></argument_list></call> <operator pos:line="9" pos:column="46">==<pos:position pos:line="9" pos:column="48"/></operator> <literal type="number" pos:line="9" pos:column="49">0<pos:position pos:line="9" pos:column="50"/></literal></expr>)<pos:position pos:line="9" pos:column="51"/></condition><then pos:line="9" pos:column="51">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="5">olsrd_set_detail<pos:position pos:line="10" pos:column="21"/></name> <argument_list pos:line="10" pos:column="22">(<argument><expr><operator pos:line="10" pos:column="23">&amp;<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="24">config_want_routes<pos:position pos:line="10" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="44">value<pos:position pos:line="10" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="51">key<pos:position pos:line="10" pos:column="54"/></name></expr></argument>)<pos:position pos:line="10" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="56"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="11" pos:column="3">else <if pos:line="11" pos:column="8">if <condition pos:line="11" pos:column="11">(<expr><call><name pos:line="11" pos:column="12">strcasecmp<pos:position pos:line="11" pos:column="22"/></name> <argument_list pos:line="11" pos:column="23">(<argument><expr><literal type="string" pos:line="11" pos:column="24">"CollectTopology"<pos:position pos:line="11" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="43">key<pos:position pos:line="11" pos:column="46"/></name></expr></argument>)<pos:position pos:line="11" pos:column="47"/></argument_list></call> <operator pos:line="11" pos:column="48">==<pos:position pos:line="11" pos:column="50"/></operator> <literal type="number" pos:line="11" pos:column="51">0<pos:position pos:line="11" pos:column="52"/></literal></expr>)<pos:position pos:line="11" pos:column="53"/></condition><then pos:line="11" pos:column="53">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="5">olsrd_set_detail<pos:position pos:line="12" pos:column="21"/></name> <argument_list pos:line="12" pos:column="22">(<argument><expr><operator pos:line="12" pos:column="23">&amp;<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="24">config_want_topology<pos:position pos:line="12" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="46">value<pos:position pos:line="12" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="53">key<pos:position pos:line="12" pos:column="56"/></name></expr></argument>)<pos:position pos:line="12" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="58"/></expr_stmt></block></then></if></elseif>
  <else pos:line="13" pos:column="3">else
  <block pos:line="14" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">ERROR<pos:position pos:line="15" pos:column="10"/></name> <argument_list pos:line="15" pos:column="11">(<argument><expr><literal type="string" pos:line="15" pos:column="12">"olsrd plugin: Unknown configuration option given: %s"<pos:position pos:line="15" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="68">key<pos:position pos:line="15" pos:column="71"/></name></expr></argument>)<pos:position pos:line="15" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="73"/></expr_stmt>
    <return pos:line="16" pos:column="5">return <expr><operator pos:line="16" pos:column="12">(<pos:position pos:line="16" pos:column="13"/></operator><operator pos:line="16" pos:column="13">-<pos:position pos:line="16" pos:column="14"/></operator><literal type="number" pos:line="16" pos:column="14">1<pos:position pos:line="16" pos:column="15"/></literal><operator pos:line="16" pos:column="15">)<pos:position pos:line="16" pos:column="16"/></operator></expr>;<pos:position pos:line="16" pos:column="17"/></return>
  }<pos:position pos:line="17" pos:column="4"/></block></else></if>

  <return pos:line="19" pos:column="3">return <expr><operator pos:line="19" pos:column="10">(<pos:position pos:line="19" pos:column="11"/></operator><literal type="number" pos:line="19" pos:column="11">0<pos:position pos:line="19" pos:column="12"/></literal><operator pos:line="19" pos:column="12">)<pos:position pos:line="19" pos:column="13"/></operator></expr>;<pos:position pos:line="19" pos:column="14"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

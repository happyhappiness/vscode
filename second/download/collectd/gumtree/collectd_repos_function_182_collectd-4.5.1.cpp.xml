<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_182_collectd-4.5.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">df_config<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">key<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="40">const<pos:position pos:line="1" pos:column="45"/></specifier> <name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">value<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="3" pos:column="9">df_init<pos:position pos:line="3" pos:column="16"/></name> <argument_list pos:line="3" pos:column="17">()<pos:position pos:line="3" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="20"/></expr_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><call><name pos:line="5" pos:column="13">strcasecmp<pos:position pos:line="5" pos:column="23"/></name> <argument_list pos:line="5" pos:column="24">(<argument><expr><name pos:line="5" pos:column="25">key<pos:position pos:line="5" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="30">"Device"<pos:position pos:line="5" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="39"/></argument_list></call> <operator pos:line="5" pos:column="40">==<pos:position pos:line="5" pos:column="42"/></operator> <literal type="number" pos:line="5" pos:column="43">0<pos:position pos:line="5" pos:column="44"/></literal></expr>)<pos:position pos:line="5" pos:column="45"/></condition><then pos:line="5" pos:column="45">
	<block pos:line="6" pos:column="9">{
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><call><name pos:line="7" pos:column="21">ignorelist_add<pos:position pos:line="7" pos:column="35"/></name> <argument_list pos:line="7" pos:column="36">(<argument><expr><name pos:line="7" pos:column="37">il_device<pos:position pos:line="7" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="48">value<pos:position pos:line="7" pos:column="53"/></name></expr></argument>)<pos:position pos:line="7" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="55"/></condition><then pos:line="7" pos:column="55">
			<block type="pseudo"><return pos:line="8" pos:column="25">return <expr><operator pos:line="8" pos:column="32">(<pos:position pos:line="8" pos:column="33"/></operator><literal type="number" pos:line="8" pos:column="33">1<pos:position pos:line="8" pos:column="34"/></literal><operator pos:line="8" pos:column="34">)<pos:position pos:line="8" pos:column="35"/></operator></expr>;<pos:position pos:line="8" pos:column="36"/></return></block></then></if>
		<return pos:line="9" pos:column="17">return <expr><operator pos:line="9" pos:column="24">(<pos:position pos:line="9" pos:column="25"/></operator><literal type="number" pos:line="9" pos:column="25">0<pos:position pos:line="9" pos:column="26"/></literal><operator pos:line="9" pos:column="26">)<pos:position pos:line="9" pos:column="27"/></operator></expr>;<pos:position pos:line="9" pos:column="28"/></return>
	}<pos:position pos:line="10" pos:column="10"/></block></then>
	<elseif pos:line="11" pos:column="9">else <if pos:line="11" pos:column="14">if <condition pos:line="11" pos:column="17">(<expr><call><name pos:line="11" pos:column="18">strcasecmp<pos:position pos:line="11" pos:column="28"/></name> <argument_list pos:line="11" pos:column="29">(<argument><expr><name pos:line="11" pos:column="30">key<pos:position pos:line="11" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="35">"MountPoint"<pos:position pos:line="11" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="48"/></argument_list></call> <operator pos:line="11" pos:column="49">==<pos:position pos:line="11" pos:column="51"/></operator> <literal type="number" pos:line="11" pos:column="52">0<pos:position pos:line="11" pos:column="53"/></literal></expr>)<pos:position pos:line="11" pos:column="54"/></condition><then pos:line="11" pos:column="54">
	<block pos:line="12" pos:column="9">{
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><call><name pos:line="13" pos:column="21">ignorelist_add<pos:position pos:line="13" pos:column="35"/></name> <argument_list pos:line="13" pos:column="36">(<argument><expr><name pos:line="13" pos:column="37">il_mountpoint<pos:position pos:line="13" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="52">value<pos:position pos:line="13" pos:column="57"/></name></expr></argument>)<pos:position pos:line="13" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="59"/></condition><then pos:line="13" pos:column="59">
			<block type="pseudo"><return pos:line="14" pos:column="25">return <expr><operator pos:line="14" pos:column="32">(<pos:position pos:line="14" pos:column="33"/></operator><literal type="number" pos:line="14" pos:column="33">1<pos:position pos:line="14" pos:column="34"/></literal><operator pos:line="14" pos:column="34">)<pos:position pos:line="14" pos:column="35"/></operator></expr>;<pos:position pos:line="14" pos:column="36"/></return></block></then></if>
		<return pos:line="15" pos:column="17">return <expr><operator pos:line="15" pos:column="24">(<pos:position pos:line="15" pos:column="25"/></operator><literal type="number" pos:line="15" pos:column="25">0<pos:position pos:line="15" pos:column="26"/></literal><operator pos:line="15" pos:column="26">)<pos:position pos:line="15" pos:column="27"/></operator></expr>;<pos:position pos:line="15" pos:column="28"/></return>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="17" pos:column="9">else <if pos:line="17" pos:column="14">if <condition pos:line="17" pos:column="17">(<expr><call><name pos:line="17" pos:column="18">strcasecmp<pos:position pos:line="17" pos:column="28"/></name> <argument_list pos:line="17" pos:column="29">(<argument><expr><name pos:line="17" pos:column="30">key<pos:position pos:line="17" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="35">"FSType"<pos:position pos:line="17" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="44"/></argument_list></call> <operator pos:line="17" pos:column="45">==<pos:position pos:line="17" pos:column="47"/></operator> <literal type="number" pos:line="17" pos:column="48">0<pos:position pos:line="17" pos:column="49"/></literal></expr>)<pos:position pos:line="17" pos:column="50"/></condition><then pos:line="17" pos:column="50">
	<block pos:line="18" pos:column="9">{
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><call><name pos:line="19" pos:column="21">ignorelist_add<pos:position pos:line="19" pos:column="35"/></name> <argument_list pos:line="19" pos:column="36">(<argument><expr><name pos:line="19" pos:column="37">il_fstype<pos:position pos:line="19" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="48">value<pos:position pos:line="19" pos:column="53"/></name></expr></argument>)<pos:position pos:line="19" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="55"/></condition><then pos:line="19" pos:column="55">
			<block type="pseudo"><return pos:line="20" pos:column="25">return <expr><operator pos:line="20" pos:column="32">(<pos:position pos:line="20" pos:column="33"/></operator><literal type="number" pos:line="20" pos:column="33">1<pos:position pos:line="20" pos:column="34"/></literal><operator pos:line="20" pos:column="34">)<pos:position pos:line="20" pos:column="35"/></operator></expr>;<pos:position pos:line="20" pos:column="36"/></return></block></then></if>
		<return pos:line="21" pos:column="17">return <expr><operator pos:line="21" pos:column="24">(<pos:position pos:line="21" pos:column="25"/></operator><literal type="number" pos:line="21" pos:column="25">0<pos:position pos:line="21" pos:column="26"/></literal><operator pos:line="21" pos:column="26">)<pos:position pos:line="21" pos:column="27"/></operator></expr>;<pos:position pos:line="21" pos:column="28"/></return>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="23" pos:column="9">else <if pos:line="23" pos:column="14">if <condition pos:line="23" pos:column="17">(<expr><call><name pos:line="23" pos:column="18">strcasecmp<pos:position pos:line="23" pos:column="28"/></name> <argument_list pos:line="23" pos:column="29">(<argument><expr><name pos:line="23" pos:column="30">key<pos:position pos:line="23" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="35">"IgnoreSelected"<pos:position pos:line="23" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="52"/></argument_list></call> <operator pos:line="23" pos:column="53">==<pos:position pos:line="23" pos:column="55"/></operator> <literal type="number" pos:line="23" pos:column="56">0<pos:position pos:line="23" pos:column="57"/></literal></expr>)<pos:position pos:line="23" pos:column="58"/></condition><then pos:line="23" pos:column="58">
	<block pos:line="24" pos:column="9">{
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><operator pos:line="25" pos:column="21">(<pos:position pos:line="25" pos:column="22"/></operator><call><name pos:line="25" pos:column="22">strcasecmp<pos:position pos:line="25" pos:column="32"/></name> <argument_list pos:line="25" pos:column="33">(<argument><expr><name pos:line="25" pos:column="34">value<pos:position pos:line="25" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="41">"True"<pos:position pos:line="25" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="48"/></argument_list></call> <operator pos:line="25" pos:column="49">==<pos:position pos:line="25" pos:column="51"/></operator> <literal type="number" pos:line="25" pos:column="52">0<pos:position pos:line="25" pos:column="53"/></literal><operator pos:line="25" pos:column="53">)<pos:position pos:line="25" pos:column="54"/></operator>
				<operator pos:line="26" pos:column="33">||<pos:position pos:line="26" pos:column="35"/></operator> <operator pos:line="26" pos:column="36">(<pos:position pos:line="26" pos:column="37"/></operator><call><name pos:line="26" pos:column="37">strcasecmp<pos:position pos:line="26" pos:column="47"/></name> <argument_list pos:line="26" pos:column="48">(<argument><expr><name pos:line="26" pos:column="49">value<pos:position pos:line="26" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="56">"Yes"<pos:position pos:line="26" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="62"/></argument_list></call> <operator pos:line="26" pos:column="63">==<pos:position pos:line="26" pos:column="65"/></operator> <literal type="number" pos:line="26" pos:column="66">0<pos:position pos:line="26" pos:column="67"/></literal><operator pos:line="26" pos:column="67">)<pos:position pos:line="26" pos:column="68"/></operator>
				<operator pos:line="27" pos:column="33">||<pos:position pos:line="27" pos:column="35"/></operator> <operator pos:line="27" pos:column="36">(<pos:position pos:line="27" pos:column="37"/></operator><call><name pos:line="27" pos:column="37">strcasecmp<pos:position pos:line="27" pos:column="47"/></name> <argument_list pos:line="27" pos:column="48">(<argument><expr><name pos:line="27" pos:column="49">value<pos:position pos:line="27" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="56">"On"<pos:position pos:line="27" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="61"/></argument_list></call> <operator pos:line="27" pos:column="62">==<pos:position pos:line="27" pos:column="64"/></operator> <literal type="number" pos:line="27" pos:column="65">0<pos:position pos:line="27" pos:column="66"/></literal><operator pos:line="27" pos:column="66">)<pos:position pos:line="27" pos:column="67"/></operator></expr>)<pos:position pos:line="27" pos:column="68"/></condition><then pos:line="27" pos:column="68">
		<block pos:line="28" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="29" pos:column="25">ignorelist_set_invert<pos:position pos:line="29" pos:column="46"/></name> <argument_list pos:line="29" pos:column="47">(<argument><expr><name pos:line="29" pos:column="48">il_device<pos:position pos:line="29" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="59">0<pos:position pos:line="29" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="62"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="30" pos:column="25">ignorelist_set_invert<pos:position pos:line="30" pos:column="46"/></name> <argument_list pos:line="30" pos:column="47">(<argument><expr><name pos:line="30" pos:column="48">il_mountpoint<pos:position pos:line="30" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="63">0<pos:position pos:line="30" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="66"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="31" pos:column="25">ignorelist_set_invert<pos:position pos:line="31" pos:column="46"/></name> <argument_list pos:line="31" pos:column="47">(<argument><expr><name pos:line="31" pos:column="48">il_fstype<pos:position pos:line="31" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="59">0<pos:position pos:line="31" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="62"/></expr_stmt>
		}<pos:position pos:line="32" pos:column="18"/></block></then>
		<else pos:line="33" pos:column="17">else
		<block pos:line="34" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="35" pos:column="25">ignorelist_set_invert<pos:position pos:line="35" pos:column="46"/></name> <argument_list pos:line="35" pos:column="47">(<argument><expr><name pos:line="35" pos:column="48">il_device<pos:position pos:line="35" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="59">1<pos:position pos:line="35" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="62"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="36" pos:column="25">ignorelist_set_invert<pos:position pos:line="36" pos:column="46"/></name> <argument_list pos:line="36" pos:column="47">(<argument><expr><name pos:line="36" pos:column="48">il_mountpoint<pos:position pos:line="36" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="63">1<pos:position pos:line="36" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="66"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="37" pos:column="25">ignorelist_set_invert<pos:position pos:line="37" pos:column="46"/></name> <argument_list pos:line="37" pos:column="47">(<argument><expr><name pos:line="37" pos:column="48">il_fstype<pos:position pos:line="37" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="59">1<pos:position pos:line="37" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="62"/></expr_stmt>
		}<pos:position pos:line="38" pos:column="18"/></block></else></if>
		<return pos:line="39" pos:column="17">return <expr><operator pos:line="39" pos:column="24">(<pos:position pos:line="39" pos:column="25"/></operator><literal type="number" pos:line="39" pos:column="25">0<pos:position pos:line="39" pos:column="26"/></literal><operator pos:line="39" pos:column="26">)<pos:position pos:line="39" pos:column="27"/></operator></expr>;<pos:position pos:line="39" pos:column="28"/></return>
	}<pos:position pos:line="40" pos:column="10"/></block></then></if></elseif></if>

	<return pos:line="42" pos:column="9">return <expr><operator pos:line="42" pos:column="16">(<pos:position pos:line="42" pos:column="17"/></operator><operator pos:line="42" pos:column="17">-<pos:position pos:line="42" pos:column="18"/></operator><literal type="number" pos:line="42" pos:column="18">1<pos:position pos:line="42" pos:column="19"/></literal><operator pos:line="42" pos:column="19">)<pos:position pos:line="42" pos:column="20"/></operator></expr>;<pos:position pos:line="42" pos:column="21"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1199_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cldap_config_add<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">oconfig_item_t<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">ci<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list> <comment type="block" pos:line="1" pos:column="50">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">cldap_t<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">st<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">status<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>

	<expr_stmt><expr><name pos:line="7" pos:column="9">st<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">=<pos:position pos:line="7" pos:column="13"/></operator> <call><name pos:line="7" pos:column="14">malloc<pos:position pos:line="7" pos:column="20"/></name> <argument_list pos:line="7" pos:column="21">(<argument><expr><sizeof pos:line="7" pos:column="22">sizeof <argument_list pos:line="7" pos:column="29">(<argument><expr><operator pos:line="7" pos:column="30">*<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="31">st<pos:position pos:line="7" pos:column="33"/></name></expr></argument>)<pos:position pos:line="7" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="36"/></expr_stmt>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">st<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">==<pos:position pos:line="8" pos:column="18"/></operator> <name pos:line="8" pos:column="19">NULL<pos:position pos:line="8" pos:column="23"/></name></expr>)<pos:position pos:line="8" pos:column="24"/></condition><then pos:line="8" pos:column="24">
	<block pos:line="9" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">ERROR<pos:position pos:line="10" pos:column="22"/></name> <argument_list pos:line="10" pos:column="23">(<argument><expr><literal type="string" pos:line="10" pos:column="24">"openldap plugin: malloc failed."<pos:position pos:line="10" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="59"/></expr_stmt>
		<return pos:line="11" pos:column="17">return <expr><operator pos:line="11" pos:column="24">(<pos:position pos:line="11" pos:column="25"/></operator><operator pos:line="11" pos:column="25">-<pos:position pos:line="11" pos:column="26"/></operator><literal type="number" pos:line="11" pos:column="26">1<pos:position pos:line="11" pos:column="27"/></literal><operator pos:line="11" pos:column="27">)<pos:position pos:line="11" pos:column="28"/></operator></expr>;<pos:position pos:line="11" pos:column="29"/></return>
	}<pos:position pos:line="12" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="13" pos:column="9">memset<pos:position pos:line="13" pos:column="15"/></name> <argument_list pos:line="13" pos:column="16">(<argument><expr><name pos:line="13" pos:column="17">st<pos:position pos:line="13" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="21">0<pos:position pos:line="13" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="24">sizeof <argument_list pos:line="13" pos:column="31">(<argument><expr><operator pos:line="13" pos:column="32">*<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="33">st<pos:position pos:line="13" pos:column="35"/></name></expr></argument>)<pos:position pos:line="13" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="38"/></expr_stmt>

	<expr_stmt><expr><name pos:line="15" pos:column="9">status<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <call><name pos:line="15" pos:column="18">cf_util_get_string<pos:position pos:line="15" pos:column="36"/></name> <argument_list pos:line="15" pos:column="37">(<argument><expr><name pos:line="15" pos:column="38">ci<pos:position pos:line="15" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="42">&amp;<pos:position pos:line="15" pos:column="47"/></operator><name><name pos:line="15" pos:column="43">st<pos:position pos:line="15" pos:column="45"/></name><operator pos:line="15" pos:column="45">-&gt;<pos:position pos:line="15" pos:column="50"/></operator><name pos:line="15" pos:column="47">name<pos:position pos:line="15" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="53"/></expr_stmt>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">status<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">!=<pos:position pos:line="16" pos:column="22"/></operator> <literal type="number" pos:line="16" pos:column="23">0<pos:position pos:line="16" pos:column="24"/></literal></expr>)<pos:position pos:line="16" pos:column="25"/></condition><then pos:line="16" pos:column="25">
	<block pos:line="17" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">sfree<pos:position pos:line="18" pos:column="22"/></name> <argument_list pos:line="18" pos:column="23">(<argument><expr><name pos:line="18" pos:column="24">st<pos:position pos:line="18" pos:column="26"/></name></expr></argument>)<pos:position pos:line="18" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="28"/></expr_stmt>
		<return pos:line="19" pos:column="17">return <expr><operator pos:line="19" pos:column="24">(<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="25">status<pos:position pos:line="19" pos:column="31"/></name><operator pos:line="19" pos:column="31">)<pos:position pos:line="19" pos:column="32"/></operator></expr>;<pos:position pos:line="19" pos:column="33"/></return>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="22" pos:column="9">st<pos:position pos:line="22" pos:column="11"/></name><operator pos:line="22" pos:column="11">-&gt;<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="13">starttls<pos:position pos:line="22" pos:column="21"/></name></name> <operator pos:line="22" pos:column="22">=<pos:position pos:line="22" pos:column="23"/></operator> <literal type="number" pos:line="22" pos:column="24">0<pos:position pos:line="22" pos:column="25"/></literal></expr>;<pos:position pos:line="22" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="23" pos:column="9">st<pos:position pos:line="23" pos:column="11"/></name><operator pos:line="23" pos:column="11">-&gt;<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="13">timeout<pos:position pos:line="23" pos:column="20"/></name></name> <operator pos:line="23" pos:column="21">=<pos:position pos:line="23" pos:column="22"/></operator> <operator pos:line="23" pos:column="23">-<pos:position pos:line="23" pos:column="24"/></operator><literal type="number" pos:line="23" pos:column="24">1<pos:position pos:line="23" pos:column="25"/></literal></expr>;<pos:position pos:line="23" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="24" pos:column="9">st<pos:position pos:line="24" pos:column="11"/></name><operator pos:line="24" pos:column="11">-&gt;<pos:position pos:line="24" pos:column="16"/></operator><name pos:line="24" pos:column="13">verifyhost<pos:position pos:line="24" pos:column="23"/></name></name> <operator pos:line="24" pos:column="24">=<pos:position pos:line="24" pos:column="25"/></operator> <literal type="number" pos:line="24" pos:column="26">1<pos:position pos:line="24" pos:column="27"/></literal></expr>;<pos:position pos:line="24" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="25" pos:column="9">st<pos:position pos:line="25" pos:column="11"/></name><operator pos:line="25" pos:column="11">-&gt;<pos:position pos:line="25" pos:column="16"/></operator><name pos:line="25" pos:column="13">version<pos:position pos:line="25" pos:column="20"/></name></name> <operator pos:line="25" pos:column="21">=<pos:position pos:line="25" pos:column="22"/></operator> <name pos:line="25" pos:column="23">LDAP_VERSION3<pos:position pos:line="25" pos:column="36"/></name></expr>;<pos:position pos:line="25" pos:column="37"/></expr_stmt>

	<for pos:line="27" pos:column="9">for <control pos:line="27" pos:column="13">(<init><expr><name pos:line="27" pos:column="14">i<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <literal type="number" pos:line="27" pos:column="18">0<pos:position pos:line="27" pos:column="19"/></literal></expr>;<pos:position pos:line="27" pos:column="20"/></init> <condition><expr><name pos:line="27" pos:column="21">i<pos:position pos:line="27" pos:column="22"/></name> <operator pos:line="27" pos:column="23">&lt;<pos:position pos:line="27" pos:column="27"/></operator> <name><name pos:line="27" pos:column="25">ci<pos:position pos:line="27" pos:column="27"/></name><operator pos:line="27" pos:column="27">-&gt;<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="29">children_num<pos:position pos:line="27" pos:column="41"/></name></name></expr>;<pos:position pos:line="27" pos:column="42"/></condition> <incr><expr><name pos:line="27" pos:column="43">i<pos:position pos:line="27" pos:column="44"/></name><operator pos:line="27" pos:column="44">++<pos:position pos:line="27" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="27" pos:column="47"/></control>
	<block pos:line="28" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="29" pos:column="17">oconfig_item_t<pos:position pos:line="29" pos:column="31"/></name> <modifier pos:line="29" pos:column="32">*<pos:position pos:line="29" pos:column="33"/></modifier></type><name pos:line="29" pos:column="33">child<pos:position pos:line="29" pos:column="38"/></name> <init pos:line="29" pos:column="39">= <expr><name><name pos:line="29" pos:column="41">ci<pos:position pos:line="29" pos:column="43"/></name><operator pos:line="29" pos:column="43">-&gt;<pos:position pos:line="29" pos:column="48"/></operator><name pos:line="29" pos:column="45">children<pos:position pos:line="29" pos:column="53"/></name></name> <operator pos:line="29" pos:column="54">+<pos:position pos:line="29" pos:column="55"/></operator> <name pos:line="29" pos:column="56">i<pos:position pos:line="29" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="29" pos:column="58"/></decl_stmt>

		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><call><name pos:line="31" pos:column="21">strcasecmp<pos:position pos:line="31" pos:column="31"/></name> <argument_list pos:line="31" pos:column="32">(<argument><expr><literal type="string" pos:line="31" pos:column="33">"CACert"<pos:position pos:line="31" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="43">child<pos:position pos:line="31" pos:column="48"/></name><operator pos:line="31" pos:column="48">-&gt;<pos:position pos:line="31" pos:column="53"/></operator><name pos:line="31" pos:column="50">key<pos:position pos:line="31" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="54"/></argument_list></call> <operator pos:line="31" pos:column="55">==<pos:position pos:line="31" pos:column="57"/></operator> <literal type="number" pos:line="31" pos:column="58">0<pos:position pos:line="31" pos:column="59"/></literal></expr>)<pos:position pos:line="31" pos:column="60"/></condition><then pos:line="31" pos:column="60">
			<block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="25">status<pos:position pos:line="32" pos:column="31"/></name> <operator pos:line="32" pos:column="32">=<pos:position pos:line="32" pos:column="33"/></operator> <call><name pos:line="32" pos:column="34">cf_util_get_string<pos:position pos:line="32" pos:column="52"/></name> <argument_list pos:line="32" pos:column="53">(<argument><expr><name pos:line="32" pos:column="54">child<pos:position pos:line="32" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="61">&amp;<pos:position pos:line="32" pos:column="66"/></operator><name><name pos:line="32" pos:column="62">st<pos:position pos:line="32" pos:column="64"/></name><operator pos:line="32" pos:column="64">-&gt;<pos:position pos:line="32" pos:column="69"/></operator><name pos:line="32" pos:column="66">cacert<pos:position pos:line="32" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="74"/></expr_stmt></block></then>
		<elseif pos:line="33" pos:column="17">else <if pos:line="33" pos:column="22">if <condition pos:line="33" pos:column="25">(<expr><call><name pos:line="33" pos:column="26">strcasecmp<pos:position pos:line="33" pos:column="36"/></name> <argument_list pos:line="33" pos:column="37">(<argument><expr><literal type="string" pos:line="33" pos:column="38">"StartTLS"<pos:position pos:line="33" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="50">child<pos:position pos:line="33" pos:column="55"/></name><operator pos:line="33" pos:column="55">-&gt;<pos:position pos:line="33" pos:column="60"/></operator><name pos:line="33" pos:column="57">key<pos:position pos:line="33" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="61"/></argument_list></call> <operator pos:line="33" pos:column="62">==<pos:position pos:line="33" pos:column="64"/></operator> <literal type="number" pos:line="33" pos:column="65">0<pos:position pos:line="33" pos:column="66"/></literal></expr>)<pos:position pos:line="33" pos:column="67"/></condition><then pos:line="33" pos:column="67">
			<block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="25">status<pos:position pos:line="34" pos:column="31"/></name> <operator pos:line="34" pos:column="32">=<pos:position pos:line="34" pos:column="33"/></operator> <call><name pos:line="34" pos:column="34">cf_util_get_boolean<pos:position pos:line="34" pos:column="53"/></name> <argument_list pos:line="34" pos:column="54">(<argument><expr><name pos:line="34" pos:column="55">child<pos:position pos:line="34" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="62">&amp;<pos:position pos:line="34" pos:column="67"/></operator><name><name pos:line="34" pos:column="63">st<pos:position pos:line="34" pos:column="65"/></name><operator pos:line="34" pos:column="65">-&gt;<pos:position pos:line="34" pos:column="70"/></operator><name pos:line="34" pos:column="67">starttls<pos:position pos:line="34" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="77"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="35" pos:column="17">else <if pos:line="35" pos:column="22">if <condition pos:line="35" pos:column="25">(<expr><call><name pos:line="35" pos:column="26">strcasecmp<pos:position pos:line="35" pos:column="36"/></name> <argument_list pos:line="35" pos:column="37">(<argument><expr><literal type="string" pos:line="35" pos:column="38">"Timeout"<pos:position pos:line="35" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="49">child<pos:position pos:line="35" pos:column="54"/></name><operator pos:line="35" pos:column="54">-&gt;<pos:position pos:line="35" pos:column="59"/></operator><name pos:line="35" pos:column="56">key<pos:position pos:line="35" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="60"/></argument_list></call> <operator pos:line="35" pos:column="61">==<pos:position pos:line="35" pos:column="63"/></operator> <literal type="number" pos:line="35" pos:column="64">0<pos:position pos:line="35" pos:column="65"/></literal></expr>)<pos:position pos:line="35" pos:column="66"/></condition><then pos:line="35" pos:column="66">
			<block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="25">status<pos:position pos:line="36" pos:column="31"/></name> <operator pos:line="36" pos:column="32">=<pos:position pos:line="36" pos:column="33"/></operator> <call><name pos:line="36" pos:column="34">cf_util_get_int<pos:position pos:line="36" pos:column="49"/></name> <argument_list pos:line="36" pos:column="50">(<argument><expr><name pos:line="36" pos:column="51">child<pos:position pos:line="36" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="58">&amp;<pos:position pos:line="36" pos:column="63"/></operator><name><name pos:line="36" pos:column="59">st<pos:position pos:line="36" pos:column="61"/></name><operator pos:line="36" pos:column="61">-&gt;<pos:position pos:line="36" pos:column="66"/></operator><name pos:line="36" pos:column="63">timeout<pos:position pos:line="36" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="72"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="37" pos:column="17">else <if pos:line="37" pos:column="22">if <condition pos:line="37" pos:column="25">(<expr><call><name pos:line="37" pos:column="26">strcasecmp<pos:position pos:line="37" pos:column="36"/></name> <argument_list pos:line="37" pos:column="37">(<argument><expr><literal type="string" pos:line="37" pos:column="38">"URL"<pos:position pos:line="37" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="45">child<pos:position pos:line="37" pos:column="50"/></name><operator pos:line="37" pos:column="50">-&gt;<pos:position pos:line="37" pos:column="55"/></operator><name pos:line="37" pos:column="52">key<pos:position pos:line="37" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="56"/></argument_list></call> <operator pos:line="37" pos:column="57">==<pos:position pos:line="37" pos:column="59"/></operator> <literal type="number" pos:line="37" pos:column="60">0<pos:position pos:line="37" pos:column="61"/></literal></expr>)<pos:position pos:line="37" pos:column="62"/></condition><then pos:line="37" pos:column="62">
			<block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="25">status<pos:position pos:line="38" pos:column="31"/></name> <operator pos:line="38" pos:column="32">=<pos:position pos:line="38" pos:column="33"/></operator> <call><name pos:line="38" pos:column="34">cf_util_get_string<pos:position pos:line="38" pos:column="52"/></name> <argument_list pos:line="38" pos:column="53">(<argument><expr><name pos:line="38" pos:column="54">child<pos:position pos:line="38" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="61">&amp;<pos:position pos:line="38" pos:column="66"/></operator><name><name pos:line="38" pos:column="62">st<pos:position pos:line="38" pos:column="64"/></name><operator pos:line="38" pos:column="64">-&gt;<pos:position pos:line="38" pos:column="69"/></operator><name pos:line="38" pos:column="66">url<pos:position pos:line="38" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="71"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="39" pos:column="17">else <if pos:line="39" pos:column="22">if <condition pos:line="39" pos:column="25">(<expr><call><name pos:line="39" pos:column="26">strcasecmp<pos:position pos:line="39" pos:column="36"/></name> <argument_list pos:line="39" pos:column="37">(<argument><expr><literal type="string" pos:line="39" pos:column="38">"VerifyHost"<pos:position pos:line="39" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="52">child<pos:position pos:line="39" pos:column="57"/></name><operator pos:line="39" pos:column="57">-&gt;<pos:position pos:line="39" pos:column="62"/></operator><name pos:line="39" pos:column="59">key<pos:position pos:line="39" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="63"/></argument_list></call> <operator pos:line="39" pos:column="64">==<pos:position pos:line="39" pos:column="66"/></operator> <literal type="number" pos:line="39" pos:column="67">0<pos:position pos:line="39" pos:column="68"/></literal></expr>)<pos:position pos:line="39" pos:column="69"/></condition><then pos:line="39" pos:column="69">
			<block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="25">status<pos:position pos:line="40" pos:column="31"/></name> <operator pos:line="40" pos:column="32">=<pos:position pos:line="40" pos:column="33"/></operator> <call><name pos:line="40" pos:column="34">cf_util_get_boolean<pos:position pos:line="40" pos:column="53"/></name> <argument_list pos:line="40" pos:column="54">(<argument><expr><name pos:line="40" pos:column="55">child<pos:position pos:line="40" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="62">&amp;<pos:position pos:line="40" pos:column="67"/></operator><name><name pos:line="40" pos:column="63">st<pos:position pos:line="40" pos:column="65"/></name><operator pos:line="40" pos:column="65">-&gt;<pos:position pos:line="40" pos:column="70"/></operator><name pos:line="40" pos:column="67">verifyhost<pos:position pos:line="40" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="79"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="41" pos:column="17">else <if pos:line="41" pos:column="22">if <condition pos:line="41" pos:column="25">(<expr><call><name pos:line="41" pos:column="26">strcasecmp<pos:position pos:line="41" pos:column="36"/></name> <argument_list pos:line="41" pos:column="37">(<argument><expr><literal type="string" pos:line="41" pos:column="38">"Version"<pos:position pos:line="41" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="49">child<pos:position pos:line="41" pos:column="54"/></name><operator pos:line="41" pos:column="54">-&gt;<pos:position pos:line="41" pos:column="59"/></operator><name pos:line="41" pos:column="56">key<pos:position pos:line="41" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="60"/></argument_list></call> <operator pos:line="41" pos:column="61">==<pos:position pos:line="41" pos:column="63"/></operator> <literal type="number" pos:line="41" pos:column="64">0<pos:position pos:line="41" pos:column="65"/></literal></expr>)<pos:position pos:line="41" pos:column="66"/></condition><then pos:line="41" pos:column="66">
			<block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="25">status<pos:position pos:line="42" pos:column="31"/></name> <operator pos:line="42" pos:column="32">=<pos:position pos:line="42" pos:column="33"/></operator> <call><name pos:line="42" pos:column="34">cf_util_get_int<pos:position pos:line="42" pos:column="49"/></name> <argument_list pos:line="42" pos:column="50">(<argument><expr><name pos:line="42" pos:column="51">child<pos:position pos:line="42" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="58">&amp;<pos:position pos:line="42" pos:column="63"/></operator><name><name pos:line="42" pos:column="59">st<pos:position pos:line="42" pos:column="61"/></name><operator pos:line="42" pos:column="61">-&gt;<pos:position pos:line="42" pos:column="66"/></operator><name pos:line="42" pos:column="63">version<pos:position pos:line="42" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="72"/></expr_stmt></block></then></if></elseif>
		<else pos:line="43" pos:column="17">else
		<block pos:line="44" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="45" pos:column="25">WARNING<pos:position pos:line="45" pos:column="32"/></name> <argument_list pos:line="45" pos:column="33">(<argument><expr><literal type="string" pos:line="45" pos:column="34">"openldap plugin: Option `%s' not allowed here."<pos:position pos:line="45" pos:column="82"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="46" pos:column="41">child<pos:position pos:line="46" pos:column="46"/></name><operator pos:line="46" pos:column="46">-&gt;<pos:position pos:line="46" pos:column="51"/></operator><name pos:line="46" pos:column="48">key<pos:position pos:line="46" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="53"/></expr_stmt>
			<expr_stmt><expr><name pos:line="47" pos:column="25">status<pos:position pos:line="47" pos:column="31"/></name> <operator pos:line="47" pos:column="32">=<pos:position pos:line="47" pos:column="33"/></operator> <operator pos:line="47" pos:column="34">-<pos:position pos:line="47" pos:column="35"/></operator><literal type="number" pos:line="47" pos:column="35">1<pos:position pos:line="47" pos:column="36"/></literal></expr>;<pos:position pos:line="47" pos:column="37"/></expr_stmt>
		}<pos:position pos:line="48" pos:column="18"/></block></else></if>

		<if pos:line="50" pos:column="17">if <condition pos:line="50" pos:column="20">(<expr><name pos:line="50" pos:column="21">status<pos:position pos:line="50" pos:column="27"/></name> <operator pos:line="50" pos:column="28">!=<pos:position pos:line="50" pos:column="30"/></operator> <literal type="number" pos:line="50" pos:column="31">0<pos:position pos:line="50" pos:column="32"/></literal></expr>)<pos:position pos:line="50" pos:column="33"/></condition><then pos:line="50" pos:column="33">
			<block type="pseudo"><break pos:line="51" pos:column="25">break;<pos:position pos:line="51" pos:column="31"/></break></block></then></if>
	}<pos:position pos:line="52" pos:column="10"/></block></for>

	<comment type="block" pos:line="54" pos:column="9">/* Check if struct is complete.. */</comment>
	<if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><operator pos:line="55" pos:column="13">(<pos:position pos:line="55" pos:column="14"/></operator><name pos:line="55" pos:column="14">status<pos:position pos:line="55" pos:column="20"/></name> <operator pos:line="55" pos:column="21">==<pos:position pos:line="55" pos:column="23"/></operator> <literal type="number" pos:line="55" pos:column="24">0<pos:position pos:line="55" pos:column="25"/></literal><operator pos:line="55" pos:column="25">)<pos:position pos:line="55" pos:column="26"/></operator> <operator pos:line="55" pos:column="27">&amp;&amp;<pos:position pos:line="55" pos:column="37"/></operator> <operator pos:line="55" pos:column="30">(<pos:position pos:line="55" pos:column="31"/></operator><name><name pos:line="55" pos:column="31">st<pos:position pos:line="55" pos:column="33"/></name><operator pos:line="55" pos:column="33">-&gt;<pos:position pos:line="55" pos:column="38"/></operator><name pos:line="55" pos:column="35">url<pos:position pos:line="55" pos:column="38"/></name></name> <operator pos:line="55" pos:column="39">==<pos:position pos:line="55" pos:column="41"/></operator> <name pos:line="55" pos:column="42">NULL<pos:position pos:line="55" pos:column="46"/></name><operator pos:line="55" pos:column="46">)<pos:position pos:line="55" pos:column="47"/></operator></expr>)<pos:position pos:line="55" pos:column="48"/></condition><then pos:line="55" pos:column="48">
	<block pos:line="56" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="57" pos:column="17">ERROR<pos:position pos:line="57" pos:column="22"/></name> <argument_list pos:line="57" pos:column="23">(<argument><expr><literal type="string" pos:line="57" pos:column="24">"openldap plugin: Instance `%s': "<pos:position pos:line="57" pos:column="58"/></literal>
				<literal type="string" pos:line="58" pos:column="33">"No URL has been configured."<pos:position pos:line="58" pos:column="62"/></literal></expr></argument>,
				<argument><expr><name><name pos:line="59" pos:column="33">st<pos:position pos:line="59" pos:column="35"/></name><operator pos:line="59" pos:column="35">-&gt;<pos:position pos:line="59" pos:column="40"/></operator><name pos:line="59" pos:column="37">name<pos:position pos:line="59" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name pos:line="60" pos:column="17">status<pos:position pos:line="60" pos:column="23"/></name> <operator pos:line="60" pos:column="24">=<pos:position pos:line="60" pos:column="25"/></operator> <operator pos:line="60" pos:column="26">-<pos:position pos:line="60" pos:column="27"/></operator><literal type="number" pos:line="60" pos:column="27">1<pos:position pos:line="60" pos:column="28"/></literal></expr>;<pos:position pos:line="60" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="61" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="63" pos:column="9">/* Check if URL is valid */</comment>
	<if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><operator pos:line="64" pos:column="13">(<pos:position pos:line="64" pos:column="14"/></operator><name pos:line="64" pos:column="14">status<pos:position pos:line="64" pos:column="20"/></name> <operator pos:line="64" pos:column="21">==<pos:position pos:line="64" pos:column="23"/></operator> <literal type="number" pos:line="64" pos:column="24">0<pos:position pos:line="64" pos:column="25"/></literal><operator pos:line="64" pos:column="25">)<pos:position pos:line="64" pos:column="26"/></operator> <operator pos:line="64" pos:column="27">&amp;&amp;<pos:position pos:line="64" pos:column="37"/></operator> <operator pos:line="64" pos:column="30">(<pos:position pos:line="64" pos:column="31"/></operator><name><name pos:line="64" pos:column="31">st<pos:position pos:line="64" pos:column="33"/></name><operator pos:line="64" pos:column="33">-&gt;<pos:position pos:line="64" pos:column="38"/></operator><name pos:line="64" pos:column="35">url<pos:position pos:line="64" pos:column="38"/></name></name> <operator pos:line="64" pos:column="39">!=<pos:position pos:line="64" pos:column="41"/></operator> <name pos:line="64" pos:column="42">NULL<pos:position pos:line="64" pos:column="46"/></name><operator pos:line="64" pos:column="46">)<pos:position pos:line="64" pos:column="47"/></operator></expr>)<pos:position pos:line="64" pos:column="48"/></condition><then pos:line="64" pos:column="48">
	<block pos:line="65" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="66" pos:column="17">LDAPURLDesc<pos:position pos:line="66" pos:column="28"/></name> <modifier pos:line="66" pos:column="29">*<pos:position pos:line="66" pos:column="30"/></modifier></type><name pos:line="66" pos:column="30">ludpp<pos:position pos:line="66" pos:column="35"/></name></decl>;<pos:position pos:line="66" pos:column="36"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="67" pos:column="17">int<pos:position pos:line="67" pos:column="20"/></name></type> <name pos:line="67" pos:column="21">rc<pos:position pos:line="67" pos:column="23"/></name></decl>;<pos:position pos:line="67" pos:column="24"/></decl_stmt>

		<if pos:line="69" pos:column="17">if <condition pos:line="69" pos:column="20">(<expr><operator pos:line="69" pos:column="21">(<pos:position pos:line="69" pos:column="22"/></operator><name pos:line="69" pos:column="22">rc<pos:position pos:line="69" pos:column="24"/></name> <operator pos:line="69" pos:column="25">=<pos:position pos:line="69" pos:column="26"/></operator> <call><name pos:line="69" pos:column="27">ldap_url_parse<pos:position pos:line="69" pos:column="41"/></name> <argument_list pos:line="69" pos:column="42">(<argument><expr><name><name pos:line="69" pos:column="43">st<pos:position pos:line="69" pos:column="45"/></name><operator pos:line="69" pos:column="45">-&gt;<pos:position pos:line="69" pos:column="50"/></operator><name pos:line="69" pos:column="47">url<pos:position pos:line="69" pos:column="50"/></name></name></expr></argument>, <argument><expr><operator pos:line="69" pos:column="52">&amp;<pos:position pos:line="69" pos:column="57"/></operator><name pos:line="69" pos:column="53">ludpp<pos:position pos:line="69" pos:column="58"/></name></expr></argument>)<pos:position pos:line="69" pos:column="59"/></argument_list></call><operator pos:line="69" pos:column="59">)<pos:position pos:line="69" pos:column="60"/></operator> <operator pos:line="69" pos:column="61">!=<pos:position pos:line="69" pos:column="63"/></operator> <literal type="number" pos:line="69" pos:column="64">0<pos:position pos:line="69" pos:column="65"/></literal></expr>)<pos:position pos:line="69" pos:column="66"/></condition><then pos:line="69" pos:column="66">
		<block pos:line="70" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="71" pos:column="25">ERROR<pos:position pos:line="71" pos:column="30"/></name> <argument_list pos:line="71" pos:column="31">(<argument><expr><literal type="string" pos:line="71" pos:column="32">"openldap plugin: Instance `%s': "<pos:position pos:line="71" pos:column="66"/></literal>
				<literal type="string" pos:line="72" pos:column="33">"Invalid URL: `%s'"<pos:position pos:line="72" pos:column="52"/></literal></expr></argument>,
				<argument><expr><name><name pos:line="73" pos:column="33">st<pos:position pos:line="73" pos:column="35"/></name><operator pos:line="73" pos:column="35">-&gt;<pos:position pos:line="73" pos:column="40"/></operator><name pos:line="73" pos:column="37">name<pos:position pos:line="73" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="43">st<pos:position pos:line="73" pos:column="45"/></name><operator pos:line="73" pos:column="45">-&gt;<pos:position pos:line="73" pos:column="50"/></operator><name pos:line="73" pos:column="47">url<pos:position pos:line="73" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="52"/></expr_stmt>
			<expr_stmt><expr><name pos:line="74" pos:column="25">status<pos:position pos:line="74" pos:column="31"/></name> <operator pos:line="74" pos:column="32">=<pos:position pos:line="74" pos:column="33"/></operator> <operator pos:line="74" pos:column="34">-<pos:position pos:line="74" pos:column="35"/></operator><literal type="number" pos:line="74" pos:column="35">1<pos:position pos:line="74" pos:column="36"/></literal></expr>;<pos:position pos:line="74" pos:column="37"/></expr_stmt>
		}<pos:position pos:line="75" pos:column="18"/></block></then></if>

		<if pos:line="77" pos:column="17">if <condition pos:line="77" pos:column="20">(<expr><operator pos:line="77" pos:column="21">(<pos:position pos:line="77" pos:column="22"/></operator><name pos:line="77" pos:column="22">status<pos:position pos:line="77" pos:column="28"/></name> <operator pos:line="77" pos:column="29">==<pos:position pos:line="77" pos:column="31"/></operator> <literal type="number" pos:line="77" pos:column="32">0<pos:position pos:line="77" pos:column="33"/></literal><operator pos:line="77" pos:column="33">)<pos:position pos:line="77" pos:column="34"/></operator> <operator pos:line="77" pos:column="35">&amp;&amp;<pos:position pos:line="77" pos:column="45"/></operator> <operator pos:line="77" pos:column="38">(<pos:position pos:line="77" pos:column="39"/></operator><name><name pos:line="77" pos:column="39">ludpp<pos:position pos:line="77" pos:column="44"/></name><operator pos:line="77" pos:column="44">-&gt;<pos:position pos:line="77" pos:column="49"/></operator><name pos:line="77" pos:column="46">lud_host<pos:position pos:line="77" pos:column="54"/></name></name> <operator pos:line="77" pos:column="55">!=<pos:position pos:line="77" pos:column="57"/></operator> <name pos:line="77" pos:column="58">NULL<pos:position pos:line="77" pos:column="62"/></name><operator pos:line="77" pos:column="62">)<pos:position pos:line="77" pos:column="63"/></operator></expr>)<pos:position pos:line="77" pos:column="64"/></condition><then pos:line="77" pos:column="64">
		<block pos:line="78" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="79" pos:column="25">st<pos:position pos:line="79" pos:column="27"/></name><operator pos:line="79" pos:column="27">-&gt;<pos:position pos:line="79" pos:column="32"/></operator><name pos:line="79" pos:column="29">host<pos:position pos:line="79" pos:column="33"/></name></name> <operator pos:line="79" pos:column="34">=<pos:position pos:line="79" pos:column="35"/></operator> <call><name pos:line="79" pos:column="36">strdup<pos:position pos:line="79" pos:column="42"/></name> <argument_list pos:line="79" pos:column="43">(<argument><expr><name><name pos:line="79" pos:column="44">ludpp<pos:position pos:line="79" pos:column="49"/></name><operator pos:line="79" pos:column="49">-&gt;<pos:position pos:line="79" pos:column="54"/></operator><name pos:line="79" pos:column="51">lud_host<pos:position pos:line="79" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="61"/></expr_stmt>
		}<pos:position pos:line="80" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="82" pos:column="17">ldap_free_urldesc<pos:position pos:line="82" pos:column="34"/></name> <argument_list pos:line="82" pos:column="35">(<argument><expr><name pos:line="82" pos:column="36">ludpp<pos:position pos:line="82" pos:column="41"/></name></expr></argument>)<pos:position pos:line="82" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="83" pos:column="10"/></block></then></if>

	<if pos:line="85" pos:column="9">if <condition pos:line="85" pos:column="12">(<expr><name pos:line="85" pos:column="13">status<pos:position pos:line="85" pos:column="19"/></name> <operator pos:line="85" pos:column="20">==<pos:position pos:line="85" pos:column="22"/></operator> <literal type="number" pos:line="85" pos:column="23">0<pos:position pos:line="85" pos:column="24"/></literal></expr>)<pos:position pos:line="85" pos:column="25"/></condition><then pos:line="85" pos:column="25">
	<block pos:line="86" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="87" pos:column="17">user_data_t<pos:position pos:line="87" pos:column="28"/></name></type> <name pos:line="87" pos:column="29">ud<pos:position pos:line="87" pos:column="31"/></name></decl>;<pos:position pos:line="87" pos:column="32"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="88" pos:column="17">char<pos:position pos:line="88" pos:column="21"/></name></type> <name><name pos:line="88" pos:column="22">callback_name<pos:position pos:line="88" pos:column="35"/></name><index pos:line="88" pos:column="35">[<expr><literal type="number" pos:line="88" pos:column="36">3<pos:position pos:line="88" pos:column="37"/></literal><operator pos:line="88" pos:column="37">*<pos:position pos:line="88" pos:column="38"/></operator><name pos:line="88" pos:column="38">DATA_MAX_NAME_LEN<pos:position pos:line="88" pos:column="55"/></name></expr>]<pos:position pos:line="88" pos:column="56"/></index></name></decl>;<pos:position pos:line="88" pos:column="57"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="90" pos:column="17">memset<pos:position pos:line="90" pos:column="23"/></name> <argument_list pos:line="90" pos:column="24">(<argument><expr><operator pos:line="90" pos:column="25">&amp;<pos:position pos:line="90" pos:column="30"/></operator><name pos:line="90" pos:column="26">ud<pos:position pos:line="90" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="90" pos:column="30">0<pos:position pos:line="90" pos:column="31"/></literal></expr></argument>, <argument><expr><sizeof pos:line="90" pos:column="33">sizeof <argument_list pos:line="90" pos:column="40">(<argument><expr><name pos:line="90" pos:column="41">ud<pos:position pos:line="90" pos:column="43"/></name></expr></argument>)<pos:position pos:line="90" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="90" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="91" pos:column="17">ud<pos:position pos:line="91" pos:column="19"/></name><operator pos:line="91" pos:column="19">.<pos:position pos:line="91" pos:column="20"/></operator><name pos:line="91" pos:column="20">data<pos:position pos:line="91" pos:column="24"/></name></name> <operator pos:line="91" pos:column="25">=<pos:position pos:line="91" pos:column="26"/></operator> <name pos:line="91" pos:column="27">st<pos:position pos:line="91" pos:column="29"/></name></expr>;<pos:position pos:line="91" pos:column="30"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="93" pos:column="17">memset<pos:position pos:line="93" pos:column="23"/></name> <argument_list pos:line="93" pos:column="24">(<argument><expr><name pos:line="93" pos:column="25">callback_name<pos:position pos:line="93" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="93" pos:column="40">0<pos:position pos:line="93" pos:column="41"/></literal></expr></argument>, <argument><expr><sizeof pos:line="93" pos:column="43">sizeof <argument_list pos:line="93" pos:column="50">(<argument><expr><name pos:line="93" pos:column="51">callback_name<pos:position pos:line="93" pos:column="64"/></name></expr></argument>)<pos:position pos:line="93" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="93" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="67"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="94" pos:column="17">ssnprintf<pos:position pos:line="94" pos:column="26"/></name> <argument_list pos:line="94" pos:column="27">(<argument><expr><name pos:line="94" pos:column="28">callback_name<pos:position pos:line="94" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="94" pos:column="43">sizeof <argument_list pos:line="94" pos:column="50">(<argument><expr><name pos:line="94" pos:column="51">callback_name<pos:position pos:line="94" pos:column="64"/></name></expr></argument>)<pos:position pos:line="94" pos:column="65"/></argument_list></sizeof></expr></argument>,
				<argument><expr><literal type="string" pos:line="95" pos:column="33">"openldap/%s/%s"<pos:position pos:line="95" pos:column="49"/></literal></expr></argument>,
				<argument><expr><ternary><condition><expr><operator pos:line="96" pos:column="33">(<pos:position pos:line="96" pos:column="34"/></operator><name><name pos:line="96" pos:column="34">st<pos:position pos:line="96" pos:column="36"/></name><operator pos:line="96" pos:column="36">-&gt;<pos:position pos:line="96" pos:column="41"/></operator><name pos:line="96" pos:column="38">host<pos:position pos:line="96" pos:column="42"/></name></name> <operator pos:line="96" pos:column="43">!=<pos:position pos:line="96" pos:column="45"/></operator> <name pos:line="96" pos:column="46">NULL<pos:position pos:line="96" pos:column="50"/></name><operator pos:line="96" pos:column="50">)<pos:position pos:line="96" pos:column="51"/></operator></expr> ?<pos:position pos:line="96" pos:column="53"/></condition><then pos:line="96" pos:column="53"> <expr><name><name pos:line="96" pos:column="54">st<pos:position pos:line="96" pos:column="56"/></name><operator pos:line="96" pos:column="56">-&gt;<pos:position pos:line="96" pos:column="61"/></operator><name pos:line="96" pos:column="58">host<pos:position pos:line="96" pos:column="62"/></name></name></expr> <pos:position pos:line="96" pos:column="63"/></then><else pos:line="96" pos:column="63">: <expr><name pos:line="96" pos:column="65">hostname_g<pos:position pos:line="96" pos:column="75"/></name></expr></else></ternary></expr></argument>,
				<argument><expr><ternary><condition><expr><operator pos:line="97" pos:column="33">(<pos:position pos:line="97" pos:column="34"/></operator><name><name pos:line="97" pos:column="34">st<pos:position pos:line="97" pos:column="36"/></name><operator pos:line="97" pos:column="36">-&gt;<pos:position pos:line="97" pos:column="41"/></operator><name pos:line="97" pos:column="38">name<pos:position pos:line="97" pos:column="42"/></name></name> <operator pos:line="97" pos:column="43">!=<pos:position pos:line="97" pos:column="45"/></operator> <name pos:line="97" pos:column="46">NULL<pos:position pos:line="97" pos:column="50"/></name><operator pos:line="97" pos:column="50">)<pos:position pos:line="97" pos:column="51"/></operator></expr> ?<pos:position pos:line="97" pos:column="53"/></condition><then pos:line="97" pos:column="53"> <expr><name><name pos:line="97" pos:column="54">st<pos:position pos:line="97" pos:column="56"/></name><operator pos:line="97" pos:column="56">-&gt;<pos:position pos:line="97" pos:column="61"/></operator><name pos:line="97" pos:column="58">name<pos:position pos:line="97" pos:column="62"/></name></name></expr> <pos:position pos:line="97" pos:column="63"/></then><else pos:line="97" pos:column="63">: <expr><literal type="string" pos:line="97" pos:column="65">"default"<pos:position pos:line="97" pos:column="74"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="97" pos:column="75"/></argument_list></call></expr><operator pos:line="97" pos:column="75">,<pos:position pos:line="97" pos:column="76"/></operator>

		<expr><name pos:line="99" pos:column="17">status<pos:position pos:line="99" pos:column="23"/></name> <operator pos:line="99" pos:column="24">=<pos:position pos:line="99" pos:column="25"/></operator> <call><name pos:line="99" pos:column="26">plugin_register_complex_read<pos:position pos:line="99" pos:column="54"/></name> <argument_list pos:line="99" pos:column="55">(<comment type="block" pos:line="99" pos:column="56">/* group = */</comment> <argument><expr><name pos:line="99" pos:column="70">NULL<pos:position pos:line="99" pos:column="74"/></name></expr></argument>,
				<comment type="block" pos:line="100" pos:column="33">/* name      = */</comment> <argument><expr><name pos:line="100" pos:column="51">callback_name<pos:position pos:line="100" pos:column="64"/></name></expr></argument>,
				<comment type="block" pos:line="101" pos:column="33">/* callback  = */</comment> <argument><expr><name pos:line="101" pos:column="51">cldap_read_host<pos:position pos:line="101" pos:column="66"/></name></expr></argument>,
				<comment type="block" pos:line="102" pos:column="33">/* interval  = */</comment> <argument><expr><name pos:line="102" pos:column="51">NULL<pos:position pos:line="102" pos:column="55"/></name></expr></argument>,
				<comment type="block" pos:line="103" pos:column="33">/* user_data = */</comment> <argument><expr><operator pos:line="103" pos:column="51">&amp;<pos:position pos:line="103" pos:column="56"/></operator><name pos:line="103" pos:column="52">ud<pos:position pos:line="103" pos:column="54"/></name></expr></argument>)<pos:position pos:line="103" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="56"/></expr_stmt>
	}<pos:position pos:line="104" pos:column="10"/></block></then></if>

	<if pos:line="106" pos:column="9">if <condition pos:line="106" pos:column="12">(<expr><name pos:line="106" pos:column="13">status<pos:position pos:line="106" pos:column="19"/></name> <operator pos:line="106" pos:column="20">!=<pos:position pos:line="106" pos:column="22"/></operator> <literal type="number" pos:line="106" pos:column="23">0<pos:position pos:line="106" pos:column="24"/></literal></expr>)<pos:position pos:line="106" pos:column="25"/></condition><then pos:line="106" pos:column="25">
	<block pos:line="107" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="108" pos:column="17">cldap_free<pos:position pos:line="108" pos:column="27"/></name> <argument_list pos:line="108" pos:column="28">(<argument><expr><name pos:line="108" pos:column="29">st<pos:position pos:line="108" pos:column="31"/></name></expr></argument>)<pos:position pos:line="108" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="33"/></expr_stmt>
		<return pos:line="109" pos:column="17">return <expr><operator pos:line="109" pos:column="24">(<pos:position pos:line="109" pos:column="25"/></operator><operator pos:line="109" pos:column="25">-<pos:position pos:line="109" pos:column="26"/></operator><literal type="number" pos:line="109" pos:column="26">1<pos:position pos:line="109" pos:column="27"/></literal><operator pos:line="109" pos:column="27">)<pos:position pos:line="109" pos:column="28"/></operator></expr>;<pos:position pos:line="109" pos:column="29"/></return>
	}<pos:position pos:line="110" pos:column="10"/></block></then></if>

	<return pos:line="112" pos:column="9">return <expr><operator pos:line="112" pos:column="16">(<pos:position pos:line="112" pos:column="17"/></operator><literal type="number" pos:line="112" pos:column="17">0<pos:position pos:line="112" pos:column="18"/></literal><operator pos:line="112" pos:column="18">)<pos:position pos:line="112" pos:column="19"/></operator></expr>;<pos:position pos:line="112" pos:column="20"/></return>
}<pos:position pos:line="113" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_958_collectd-5.0.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">rebalance<pos:position pos:line="1" pos:column="22"/></name> <parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">c_avl_tree_t<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">t<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">c_avl_node_t<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">n<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">b_top<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">b_bottom<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>

	<while pos:line="6" pos:column="9">while <condition pos:line="6" pos:column="15">(<expr><name pos:line="6" pos:column="16">n<pos:position pos:line="6" pos:column="17"/></name> <operator pos:line="6" pos:column="18">!=<pos:position pos:line="6" pos:column="20"/></operator> <name pos:line="6" pos:column="21">NULL<pos:position pos:line="6" pos:column="25"/></name></expr>)<pos:position pos:line="6" pos:column="26"/></condition>
	<block pos:line="7" pos:column="9">{
		<expr_stmt><expr><name pos:line="8" pos:column="17">b_top<pos:position pos:line="8" pos:column="22"/></name> <operator pos:line="8" pos:column="23">=<pos:position pos:line="8" pos:column="24"/></operator> <call><name pos:line="8" pos:column="25">BALANCE<pos:position pos:line="8" pos:column="32"/></name> <argument_list pos:line="8" pos:column="33">(<argument><expr><name pos:line="8" pos:column="34">n<pos:position pos:line="8" pos:column="35"/></name></expr></argument>)<pos:position pos:line="8" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">assert<pos:position pos:line="9" pos:column="23"/></name> <argument_list pos:line="9" pos:column="24">(<argument><expr><operator pos:line="9" pos:column="25">(<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="26">b_top<pos:position pos:line="9" pos:column="31"/></name> <operator pos:line="9" pos:column="32">&gt;=<pos:position pos:line="9" pos:column="37"/></operator> <operator pos:line="9" pos:column="35">-<pos:position pos:line="9" pos:column="36"/></operator><literal type="number" pos:line="9" pos:column="36">2<pos:position pos:line="9" pos:column="37"/></literal><operator pos:line="9" pos:column="37">)<pos:position pos:line="9" pos:column="38"/></operator> <operator pos:line="9" pos:column="39">&amp;&amp;<pos:position pos:line="9" pos:column="49"/></operator> <operator pos:line="9" pos:column="42">(<pos:position pos:line="9" pos:column="43"/></operator><name pos:line="9" pos:column="43">b_top<pos:position pos:line="9" pos:column="48"/></name> <operator pos:line="9" pos:column="49">&lt;=<pos:position pos:line="9" pos:column="54"/></operator> <literal type="number" pos:line="9" pos:column="52">2<pos:position pos:line="9" pos:column="53"/></literal><operator pos:line="9" pos:column="53">)<pos:position pos:line="9" pos:column="54"/></operator></expr></argument>)<pos:position pos:line="9" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="56"/></expr_stmt>

		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name pos:line="11" pos:column="21">b_top<pos:position pos:line="11" pos:column="26"/></name> <operator pos:line="11" pos:column="27">==<pos:position pos:line="11" pos:column="29"/></operator> <operator pos:line="11" pos:column="30">-<pos:position pos:line="11" pos:column="31"/></operator><literal type="number" pos:line="11" pos:column="31">2<pos:position pos:line="11" pos:column="32"/></literal></expr>)<pos:position pos:line="11" pos:column="33"/></condition><then pos:line="11" pos:column="33">
		<block pos:line="12" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="13" pos:column="25">assert<pos:position pos:line="13" pos:column="31"/></name> <argument_list pos:line="13" pos:column="32">(<argument><expr><name><name pos:line="13" pos:column="33">n<pos:position pos:line="13" pos:column="34"/></name><operator pos:line="13" pos:column="34">-&gt;<pos:position pos:line="13" pos:column="39"/></operator><name pos:line="13" pos:column="36">right<pos:position pos:line="13" pos:column="41"/></name></name> <operator pos:line="13" pos:column="42">!=<pos:position pos:line="13" pos:column="44"/></operator> <name pos:line="13" pos:column="45">NULL<pos:position pos:line="13" pos:column="49"/></name></expr></argument>)<pos:position pos:line="13" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="51"/></expr_stmt>
			<expr_stmt><expr><name pos:line="14" pos:column="25">b_bottom<pos:position pos:line="14" pos:column="33"/></name> <operator pos:line="14" pos:column="34">=<pos:position pos:line="14" pos:column="35"/></operator> <call><name pos:line="14" pos:column="36">BALANCE<pos:position pos:line="14" pos:column="43"/></name> <argument_list pos:line="14" pos:column="44">(<argument><expr><name><name pos:line="14" pos:column="45">n<pos:position pos:line="14" pos:column="46"/></name><operator pos:line="14" pos:column="46">-&gt;<pos:position pos:line="14" pos:column="51"/></operator><name pos:line="14" pos:column="48">right<pos:position pos:line="14" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="15" pos:column="25">assert<pos:position pos:line="15" pos:column="31"/></name> <argument_list pos:line="15" pos:column="32">(<argument><expr><operator pos:line="15" pos:column="33">(<pos:position pos:line="15" pos:column="34"/></operator><name pos:line="15" pos:column="34">b_bottom<pos:position pos:line="15" pos:column="42"/></name> <operator pos:line="15" pos:column="43">&gt;=<pos:position pos:line="15" pos:column="48"/></operator> <operator pos:line="15" pos:column="46">-<pos:position pos:line="15" pos:column="47"/></operator><literal type="number" pos:line="15" pos:column="47">1<pos:position pos:line="15" pos:column="48"/></literal><operator pos:line="15" pos:column="48">)<pos:position pos:line="15" pos:column="49"/></operator> <operator pos:line="15" pos:column="50">||<pos:position pos:line="15" pos:column="52"/></operator> <operator pos:line="15" pos:column="53">(<pos:position pos:line="15" pos:column="54"/></operator><name pos:line="15" pos:column="54">b_bottom<pos:position pos:line="15" pos:column="62"/></name> <operator pos:line="15" pos:column="63">&lt;=<pos:position pos:line="15" pos:column="68"/></operator> <literal type="number" pos:line="15" pos:column="66">1<pos:position pos:line="15" pos:column="67"/></literal><operator pos:line="15" pos:column="67">)<pos:position pos:line="15" pos:column="68"/></operator></expr></argument>)<pos:position pos:line="15" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="70"/></expr_stmt>
			<if pos:line="16" pos:column="25">if <condition pos:line="16" pos:column="28">(<expr><name pos:line="16" pos:column="29">b_bottom<pos:position pos:line="16" pos:column="37"/></name> <operator pos:line="16" pos:column="38">==<pos:position pos:line="16" pos:column="40"/></operator> <literal type="number" pos:line="16" pos:column="41">1<pos:position pos:line="16" pos:column="42"/></literal></expr>)<pos:position pos:line="16" pos:column="43"/></condition><then pos:line="16" pos:column="43">
				<block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="33">n<pos:position pos:line="17" pos:column="34"/></name> <operator pos:line="17" pos:column="35">=<pos:position pos:line="17" pos:column="36"/></operator> <call><name pos:line="17" pos:column="37">rotate_right_left<pos:position pos:line="17" pos:column="54"/></name> <argument_list pos:line="17" pos:column="55">(<argument><expr><name pos:line="17" pos:column="56">t<pos:position pos:line="17" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="59">n<pos:position pos:line="17" pos:column="60"/></name></expr></argument>)<pos:position pos:line="17" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="62"/></expr_stmt></block></then>
			<else pos:line="18" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="33">n<pos:position pos:line="19" pos:column="34"/></name> <operator pos:line="19" pos:column="35">=<pos:position pos:line="19" pos:column="36"/></operator> <call><name pos:line="19" pos:column="37">rotate_left<pos:position pos:line="19" pos:column="48"/></name> <argument_list pos:line="19" pos:column="49">(<argument><expr><name pos:line="19" pos:column="50">t<pos:position pos:line="19" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="53">n<pos:position pos:line="19" pos:column="54"/></name></expr></argument>)<pos:position pos:line="19" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="56"/></expr_stmt></block></else></if>
		}<pos:position pos:line="20" pos:column="18"/></block></then>
		<elseif pos:line="21" pos:column="17">else <if pos:line="21" pos:column="22">if <condition pos:line="21" pos:column="25">(<expr><name pos:line="21" pos:column="26">b_top<pos:position pos:line="21" pos:column="31"/></name> <operator pos:line="21" pos:column="32">==<pos:position pos:line="21" pos:column="34"/></operator> <literal type="number" pos:line="21" pos:column="35">2<pos:position pos:line="21" pos:column="36"/></literal></expr>)<pos:position pos:line="21" pos:column="37"/></condition><then pos:line="21" pos:column="37">
		<block pos:line="22" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="23" pos:column="25">assert<pos:position pos:line="23" pos:column="31"/></name> <argument_list pos:line="23" pos:column="32">(<argument><expr><name><name pos:line="23" pos:column="33">n<pos:position pos:line="23" pos:column="34"/></name><operator pos:line="23" pos:column="34">-&gt;<pos:position pos:line="23" pos:column="39"/></operator><name pos:line="23" pos:column="36">left<pos:position pos:line="23" pos:column="40"/></name></name> <operator pos:line="23" pos:column="41">!=<pos:position pos:line="23" pos:column="43"/></operator> <name pos:line="23" pos:column="44">NULL<pos:position pos:line="23" pos:column="48"/></name></expr></argument>)<pos:position pos:line="23" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="50"/></expr_stmt>
			<expr_stmt><expr><name pos:line="24" pos:column="25">b_bottom<pos:position pos:line="24" pos:column="33"/></name> <operator pos:line="24" pos:column="34">=<pos:position pos:line="24" pos:column="35"/></operator> <call><name pos:line="24" pos:column="36">BALANCE<pos:position pos:line="24" pos:column="43"/></name> <argument_list pos:line="24" pos:column="44">(<argument><expr><name><name pos:line="24" pos:column="45">n<pos:position pos:line="24" pos:column="46"/></name><operator pos:line="24" pos:column="46">-&gt;<pos:position pos:line="24" pos:column="51"/></operator><name pos:line="24" pos:column="48">left<pos:position pos:line="24" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="54"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="25" pos:column="25">assert<pos:position pos:line="25" pos:column="31"/></name> <argument_list pos:line="25" pos:column="32">(<argument><expr><operator pos:line="25" pos:column="33">(<pos:position pos:line="25" pos:column="34"/></operator><name pos:line="25" pos:column="34">b_bottom<pos:position pos:line="25" pos:column="42"/></name> <operator pos:line="25" pos:column="43">&gt;=<pos:position pos:line="25" pos:column="48"/></operator> <operator pos:line="25" pos:column="46">-<pos:position pos:line="25" pos:column="47"/></operator><literal type="number" pos:line="25" pos:column="47">1<pos:position pos:line="25" pos:column="48"/></literal><operator pos:line="25" pos:column="48">)<pos:position pos:line="25" pos:column="49"/></operator> <operator pos:line="25" pos:column="50">||<pos:position pos:line="25" pos:column="52"/></operator> <operator pos:line="25" pos:column="53">(<pos:position pos:line="25" pos:column="54"/></operator><name pos:line="25" pos:column="54">b_bottom<pos:position pos:line="25" pos:column="62"/></name> <operator pos:line="25" pos:column="63">&lt;=<pos:position pos:line="25" pos:column="68"/></operator> <literal type="number" pos:line="25" pos:column="66">1<pos:position pos:line="25" pos:column="67"/></literal><operator pos:line="25" pos:column="67">)<pos:position pos:line="25" pos:column="68"/></operator></expr></argument>)<pos:position pos:line="25" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="70"/></expr_stmt>
			<if pos:line="26" pos:column="25">if <condition pos:line="26" pos:column="28">(<expr><name pos:line="26" pos:column="29">b_bottom<pos:position pos:line="26" pos:column="37"/></name> <operator pos:line="26" pos:column="38">==<pos:position pos:line="26" pos:column="40"/></operator> <operator pos:line="26" pos:column="41">-<pos:position pos:line="26" pos:column="42"/></operator><literal type="number" pos:line="26" pos:column="42">1<pos:position pos:line="26" pos:column="43"/></literal></expr>)<pos:position pos:line="26" pos:column="44"/></condition><then pos:line="26" pos:column="44">
				<block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="33">n<pos:position pos:line="27" pos:column="34"/></name> <operator pos:line="27" pos:column="35">=<pos:position pos:line="27" pos:column="36"/></operator> <call><name pos:line="27" pos:column="37">rotate_left_right<pos:position pos:line="27" pos:column="54"/></name> <argument_list pos:line="27" pos:column="55">(<argument><expr><name pos:line="27" pos:column="56">t<pos:position pos:line="27" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="59">n<pos:position pos:line="27" pos:column="60"/></name></expr></argument>)<pos:position pos:line="27" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="62"/></expr_stmt></block></then>
			<else pos:line="28" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="33">n<pos:position pos:line="29" pos:column="34"/></name> <operator pos:line="29" pos:column="35">=<pos:position pos:line="29" pos:column="36"/></operator> <call><name pos:line="29" pos:column="37">rotate_right<pos:position pos:line="29" pos:column="49"/></name> <argument_list pos:line="29" pos:column="50">(<argument><expr><name pos:line="29" pos:column="51">t<pos:position pos:line="29" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="54">n<pos:position pos:line="29" pos:column="55"/></name></expr></argument>)<pos:position pos:line="29" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="57"/></expr_stmt></block></else></if>
		}<pos:position pos:line="30" pos:column="18"/></block></then></if></elseif>
		<else pos:line="31" pos:column="17">else
		<block pos:line="32" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="33" pos:column="25">int<pos:position pos:line="33" pos:column="28"/></name></type> <name pos:line="33" pos:column="29">height<pos:position pos:line="33" pos:column="35"/></name> <init pos:line="33" pos:column="36">= <expr><call><name pos:line="33" pos:column="38">calc_height<pos:position pos:line="33" pos:column="49"/></name> <argument_list pos:line="33" pos:column="50">(<argument><expr><name pos:line="33" pos:column="51">n<pos:position pos:line="33" pos:column="52"/></name></expr></argument>)<pos:position pos:line="33" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="33" pos:column="54"/></decl_stmt>
			<if pos:line="34" pos:column="25">if <condition pos:line="34" pos:column="28">(<expr><name pos:line="34" pos:column="29">height<pos:position pos:line="34" pos:column="35"/></name> <operator pos:line="34" pos:column="36">==<pos:position pos:line="34" pos:column="38"/></operator> <name><name pos:line="34" pos:column="39">n<pos:position pos:line="34" pos:column="40"/></name><operator pos:line="34" pos:column="40">-&gt;<pos:position pos:line="34" pos:column="45"/></operator><name pos:line="34" pos:column="42">height<pos:position pos:line="34" pos:column="48"/></name></name></expr>)<pos:position pos:line="34" pos:column="49"/></condition><then pos:line="34" pos:column="49">
				<block type="pseudo"><break pos:line="35" pos:column="33">break;<pos:position pos:line="35" pos:column="39"/></break></block></then></if>
			<expr_stmt><expr><name><name pos:line="36" pos:column="25">n<pos:position pos:line="36" pos:column="26"/></name><operator pos:line="36" pos:column="26">-&gt;<pos:position pos:line="36" pos:column="31"/></operator><name pos:line="36" pos:column="28">height<pos:position pos:line="36" pos:column="34"/></name></name> <operator pos:line="36" pos:column="35">=<pos:position pos:line="36" pos:column="36"/></operator> <name pos:line="36" pos:column="37">height<pos:position pos:line="36" pos:column="43"/></name></expr>;<pos:position pos:line="36" pos:column="44"/></expr_stmt>
		}<pos:position pos:line="37" pos:column="18"/></block></else></if>

		<expr_stmt><expr><call><name pos:line="39" pos:column="17">assert<pos:position pos:line="39" pos:column="23"/></name> <argument_list pos:line="39" pos:column="24">(<argument><expr><name><name pos:line="39" pos:column="25">n<pos:position pos:line="39" pos:column="26"/></name><operator pos:line="39" pos:column="26">-&gt;<pos:position pos:line="39" pos:column="31"/></operator><name pos:line="39" pos:column="28">height<pos:position pos:line="39" pos:column="34"/></name></name> <operator pos:line="39" pos:column="35">==<pos:position pos:line="39" pos:column="37"/></operator> <call><name pos:line="39" pos:column="38">calc_height<pos:position pos:line="39" pos:column="49"/></name> <argument_list pos:line="39" pos:column="50">(<argument><expr><name pos:line="39" pos:column="51">n<pos:position pos:line="39" pos:column="52"/></name></expr></argument>)<pos:position pos:line="39" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="55"/></expr_stmt>

		<expr_stmt><expr><name pos:line="41" pos:column="17">n<pos:position pos:line="41" pos:column="18"/></name> <operator pos:line="41" pos:column="19">=<pos:position pos:line="41" pos:column="20"/></operator> <name><name pos:line="41" pos:column="21">n<pos:position pos:line="41" pos:column="22"/></name><operator pos:line="41" pos:column="22">-&gt;<pos:position pos:line="41" pos:column="27"/></operator><name pos:line="41" pos:column="24">parent<pos:position pos:line="41" pos:column="30"/></name></name></expr>;<pos:position pos:line="41" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="42" pos:column="10"/></block></while> <comment type="block" pos:line="42" pos:column="11">/* while (n != NULL) */</comment>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

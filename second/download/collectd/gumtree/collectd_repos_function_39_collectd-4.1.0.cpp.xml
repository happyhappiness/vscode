<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_39_collectd-4.1.0.cpp" pos:tabs="8"><decl_stmt><decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">NSSymbol<pos:position pos:line="1" pos:column="16"/></name></type>
<name pos:line="2" pos:column="1">lt_int_dyld_NSlookupSymbolInLinkedLibs<pos:position pos:line="2" pos:column="39"/></name><argument_list pos:line="2" pos:column="39">(<argument><expr><name pos:line="2" pos:column="40">symbol<pos:position pos:line="2" pos:column="46"/></name></expr></argument>,<argument><expr><name pos:line="2" pos:column="47">mh<pos:position pos:line="2" pos:column="49"/></name></expr></argument>)<pos:position pos:line="2" pos:column="50"/></argument_list>
	const <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier><name pos:line="3" pos:column="21">symbol<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name><name pos:line="4" pos:column="15">struct<pos:position pos:line="4" pos:column="21"/></name> <name pos:line="4" pos:column="22">mach_header<pos:position pos:line="4" pos:column="33"/></name></name> <modifier pos:line="4" pos:column="34">*<pos:position pos:line="4" pos:column="35"/></modifier></type><name pos:line="4" pos:column="35">mh<pos:position pos:line="4" pos:column="37"/></name></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>
<block pos:line="5" pos:column="1">{
	<comment type="block" pos:line="6" pos:column="9">/* Safe to assume our mh is good */</comment>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">j<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">load_command<pos:position pos:line="8" pos:column="28"/></name></name> <modifier pos:line="8" pos:column="29">*<pos:position pos:line="8" pos:column="30"/></modifier></type><name pos:line="8" pos:column="30">lc<pos:position pos:line="8" pos:column="32"/></name></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">unsigned<pos:position pos:line="9" pos:column="17"/></name> <name pos:line="9" pos:column="18">long<pos:position pos:line="9" pos:column="22"/></name></type> <name pos:line="9" pos:column="23">offset<pos:position pos:line="9" pos:column="29"/></name> <init pos:line="9" pos:column="30">= <expr><sizeof pos:line="9" pos:column="32">sizeof<argument_list pos:line="9" pos:column="38">(<argument><expr pos:line="9" pos:column="39">struct <name pos:line="9" pos:column="46">mach_header<pos:position pos:line="9" pos:column="57"/></name></expr></argument>)<pos:position pos:line="9" pos:column="58"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="9" pos:column="59"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">NSSymbol<pos:position pos:line="10" pos:column="17"/></name></type> <name pos:line="10" pos:column="18">retSym<pos:position pos:line="10" pos:column="24"/></name> <init pos:line="10" pos:column="25">= <expr><literal type="number" pos:line="10" pos:column="27">0<pos:position pos:line="10" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="11" pos:column="9">const<pos:position pos:line="11" pos:column="14"/></specifier> <name><name pos:line="11" pos:column="15">struct<pos:position pos:line="11" pos:column="21"/></name> <name pos:line="11" pos:column="22">mach_header<pos:position pos:line="11" pos:column="33"/></name></name> <modifier pos:line="11" pos:column="34">*<pos:position pos:line="11" pos:column="35"/></modifier></type><name pos:line="11" pos:column="35">mh1<pos:position pos:line="11" pos:column="38"/></name></decl>;<pos:position pos:line="11" pos:column="39"/></decl_stmt>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">(<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">ltdl_NSLookupSymbolInImage<pos:position pos:line="12" pos:column="40"/></name><operator pos:line="12" pos:column="40">)<pos:position pos:line="12" pos:column="41"/></operator> <operator pos:line="12" pos:column="42">&amp;&amp;<pos:position pos:line="12" pos:column="52"/></operator> <call><name pos:line="12" pos:column="45">NSIsSymbolNameDefined<pos:position pos:line="12" pos:column="66"/></name><argument_list pos:line="12" pos:column="66">(<argument><expr><name pos:line="12" pos:column="67">symbol<pos:position pos:line="12" pos:column="73"/></name></expr></argument>)<pos:position pos:line="12" pos:column="74"/></argument_list></call></expr> )<pos:position pos:line="12" pos:column="76"/></condition><then pos:line="12" pos:column="76">
	<block pos:line="13" pos:column="9">{
		<for pos:line="14" pos:column="17">for <control pos:line="14" pos:column="21">(<init><expr><name pos:line="14" pos:column="22">j<pos:position pos:line="14" pos:column="23"/></name> <operator pos:line="14" pos:column="24">=<pos:position pos:line="14" pos:column="25"/></operator> <literal type="number" pos:line="14" pos:column="26">0<pos:position pos:line="14" pos:column="27"/></literal></expr>;<pos:position pos:line="14" pos:column="28"/></init> <condition><expr><name pos:line="14" pos:column="29">j<pos:position pos:line="14" pos:column="30"/></name> <operator pos:line="14" pos:column="31">&lt;<pos:position pos:line="14" pos:column="35"/></operator> <name><name pos:line="14" pos:column="33">mh<pos:position pos:line="14" pos:column="35"/></name><operator pos:line="14" pos:column="35">-&gt;<pos:position pos:line="14" pos:column="40"/></operator><name pos:line="14" pos:column="37">ncmds<pos:position pos:line="14" pos:column="42"/></name></name></expr>;<pos:position pos:line="14" pos:column="43"/></condition> <incr><expr><name pos:line="14" pos:column="44">j<pos:position pos:line="14" pos:column="45"/></name><operator pos:line="14" pos:column="45">++<pos:position pos:line="14" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="14" pos:column="48"/></control>
		<block pos:line="15" pos:column="17">{
			<expr_stmt><expr><name pos:line="16" pos:column="25">lc<pos:position pos:line="16" pos:column="27"/></name> <operator pos:line="16" pos:column="28">=<pos:position pos:line="16" pos:column="29"/></operator> <operator pos:line="16" pos:column="30">(<pos:position pos:line="16" pos:column="31"/></operator>struct <name pos:line="16" pos:column="38">load_command<pos:position pos:line="16" pos:column="50"/></name><operator pos:line="16" pos:column="50">*<pos:position pos:line="16" pos:column="51"/></operator><operator pos:line="16" pos:column="51">)<pos:position pos:line="16" pos:column="52"/></operator><operator pos:line="16" pos:column="52">(<pos:position pos:line="16" pos:column="53"/></operator><operator pos:line="16" pos:column="53">(<pos:position pos:line="16" pos:column="54"/></operator><operator pos:line="16" pos:column="54">(<pos:position pos:line="16" pos:column="55"/></operator><name pos:line="16" pos:column="55">unsigned<pos:position pos:line="16" pos:column="63"/></name> <name pos:line="16" pos:column="64">long<pos:position pos:line="16" pos:column="68"/></name><operator pos:line="16" pos:column="68">)<pos:position pos:line="16" pos:column="69"/></operator><name pos:line="16" pos:column="69">mh<pos:position pos:line="16" pos:column="71"/></name><operator pos:line="16" pos:column="71">)<pos:position pos:line="16" pos:column="72"/></operator> <operator pos:line="16" pos:column="73">+<pos:position pos:line="16" pos:column="74"/></operator> <name pos:line="16" pos:column="75">offset<pos:position pos:line="16" pos:column="81"/></name><operator pos:line="16" pos:column="81">)<pos:position pos:line="16" pos:column="82"/></operator></expr>;<pos:position pos:line="16" pos:column="83"/></expr_stmt>
			<if pos:line="17" pos:column="25">if <condition pos:line="17" pos:column="28">(<expr><operator pos:line="17" pos:column="29">(<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="30">LC_LOAD_DYLIB<pos:position pos:line="17" pos:column="43"/></name> <operator pos:line="17" pos:column="44">==<pos:position pos:line="17" pos:column="46"/></operator> <name><name pos:line="17" pos:column="47">lc<pos:position pos:line="17" pos:column="49"/></name><operator pos:line="17" pos:column="49">-&gt;<pos:position pos:line="17" pos:column="54"/></operator><name pos:line="17" pos:column="51">cmd<pos:position pos:line="17" pos:column="54"/></name></name><operator pos:line="17" pos:column="54">)<pos:position pos:line="17" pos:column="55"/></operator> <operator pos:line="17" pos:column="56">||<pos:position pos:line="17" pos:column="58"/></operator> <operator pos:line="17" pos:column="59">(<pos:position pos:line="17" pos:column="60"/></operator><name pos:line="17" pos:column="60">LC_LOAD_WEAK_DYLIB<pos:position pos:line="17" pos:column="78"/></name> <operator pos:line="17" pos:column="79">==<pos:position pos:line="17" pos:column="81"/></operator> <name><name pos:line="17" pos:column="82">lc<pos:position pos:line="17" pos:column="84"/></name><operator pos:line="17" pos:column="84">-&gt;<pos:position pos:line="17" pos:column="89"/></operator><name pos:line="17" pos:column="86">cmd<pos:position pos:line="17" pos:column="89"/></name></name><operator pos:line="17" pos:column="89">)<pos:position pos:line="17" pos:column="90"/></operator></expr>)<pos:position pos:line="17" pos:column="91"/></condition><then pos:line="17" pos:column="91">
			<block pos:line="18" pos:column="25">{
				<expr_stmt><expr><name pos:line="19" pos:column="33">mh1<pos:position pos:line="19" pos:column="36"/></name><operator pos:line="19" pos:column="36">=<pos:position pos:line="19" pos:column="37"/></operator><call><name pos:line="19" pos:column="37">lt_int_dyld_match_loaded_lib_by_install_name<pos:position pos:line="19" pos:column="81"/></name><argument_list pos:line="19" pos:column="81">(<argument><expr><operator pos:line="19" pos:column="82">(<pos:position pos:line="19" pos:column="83"/></operator><name pos:line="19" pos:column="83">char<pos:position pos:line="19" pos:column="87"/></name><operator pos:line="19" pos:column="87">*<pos:position pos:line="19" pos:column="88"/></operator><operator pos:line="19" pos:column="88">)<pos:position pos:line="19" pos:column="89"/></operator><operator pos:line="19" pos:column="89">(<pos:position pos:line="19" pos:column="90"/></operator><operator pos:line="19" pos:column="90">(<pos:position pos:line="19" pos:column="91"/></operator><operator pos:line="19" pos:column="91">(<pos:position pos:line="19" pos:column="92"/></operator>struct <name pos:line="19" pos:column="99">dylib_command<pos:position pos:line="19" pos:column="112"/></name><operator pos:line="19" pos:column="112">*<pos:position pos:line="19" pos:column="113"/></operator><operator pos:line="19" pos:column="113">)<pos:position pos:line="19" pos:column="114"/></operator><name pos:line="19" pos:column="114">lc<pos:position pos:line="19" pos:column="116"/></name><operator pos:line="19" pos:column="116">)<pos:position pos:line="19" pos:column="117"/></operator><operator pos:line="19" pos:column="117">-&gt;<pos:position pos:line="19" pos:column="122"/></operator><name><name pos:line="19" pos:column="119">dylib<pos:position pos:line="19" pos:column="124"/></name><operator pos:line="19" pos:column="124">.<pos:position pos:line="19" pos:column="125"/></operator><name pos:line="19" pos:column="125">name<pos:position pos:line="19" pos:column="129"/></name><operator pos:line="19" pos:column="129">.<pos:position pos:line="19" pos:column="130"/></operator><name pos:line="19" pos:column="130">offset<pos:position pos:line="19" pos:column="136"/></name></name> <operator pos:line="19" pos:column="137">+<pos:position pos:line="19" pos:column="138"/></operator>
										<operator pos:line="20" pos:column="81">(<pos:position pos:line="20" pos:column="82"/></operator><name pos:line="20" pos:column="82">unsigned<pos:position pos:line="20" pos:column="90"/></name> <name pos:line="20" pos:column="91">long<pos:position pos:line="20" pos:column="95"/></name><operator pos:line="20" pos:column="95">)<pos:position pos:line="20" pos:column="96"/></operator><name pos:line="20" pos:column="96">lc<pos:position pos:line="20" pos:column="98"/></name><operator pos:line="20" pos:column="98">)<pos:position pos:line="20" pos:column="99"/></operator></expr></argument>)<pos:position pos:line="20" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="101"/></expr_stmt>
				<if pos:line="21" pos:column="33">if <condition pos:line="21" pos:column="36">(<expr><operator pos:line="21" pos:column="37">!<pos:position pos:line="21" pos:column="38"/></operator><name pos:line="21" pos:column="38">mh1<pos:position pos:line="21" pos:column="41"/></name></expr>)<pos:position pos:line="21" pos:column="42"/></condition><then pos:line="21" pos:column="42">
				<block pos:line="22" pos:column="33">{
					<comment type="block" pos:line="23" pos:column="41">/* Maybe NSAddImage can find it */</comment>
					<expr_stmt><expr><name pos:line="24" pos:column="41">mh1<pos:position pos:line="24" pos:column="44"/></name><operator pos:line="24" pos:column="44">=<pos:position pos:line="24" pos:column="45"/></operator><call><name pos:line="24" pos:column="45">ltdl_NSAddImage<pos:position pos:line="24" pos:column="60"/></name><argument_list pos:line="24" pos:column="60">(<argument><expr><operator pos:line="24" pos:column="61">(<pos:position pos:line="24" pos:column="62"/></operator><name pos:line="24" pos:column="62">char<pos:position pos:line="24" pos:column="66"/></name><operator pos:line="24" pos:column="66">*<pos:position pos:line="24" pos:column="67"/></operator><operator pos:line="24" pos:column="67">)<pos:position pos:line="24" pos:column="68"/></operator><operator pos:line="24" pos:column="68">(<pos:position pos:line="24" pos:column="69"/></operator><operator pos:line="24" pos:column="69">(<pos:position pos:line="24" pos:column="70"/></operator><operator pos:line="24" pos:column="70">(<pos:position pos:line="24" pos:column="71"/></operator>struct <name pos:line="24" pos:column="78">dylib_command<pos:position pos:line="24" pos:column="91"/></name><operator pos:line="24" pos:column="91">*<pos:position pos:line="24" pos:column="92"/></operator><operator pos:line="24" pos:column="92">)<pos:position pos:line="24" pos:column="93"/></operator><name pos:line="24" pos:column="93">lc<pos:position pos:line="24" pos:column="95"/></name><operator pos:line="24" pos:column="95">)<pos:position pos:line="24" pos:column="96"/></operator><operator pos:line="24" pos:column="96">-&gt;<pos:position pos:line="24" pos:column="101"/></operator><name><name pos:line="24" pos:column="98">dylib<pos:position pos:line="24" pos:column="103"/></name><operator pos:line="24" pos:column="103">.<pos:position pos:line="24" pos:column="104"/></operator><name pos:line="24" pos:column="104">name<pos:position pos:line="24" pos:column="108"/></name><operator pos:line="24" pos:column="108">.<pos:position pos:line="24" pos:column="109"/></operator><name pos:line="24" pos:column="109">offset<pos:position pos:line="24" pos:column="115"/></name></name> <operator pos:line="24" pos:column="116">+<pos:position pos:line="24" pos:column="117"/></operator>
										<operator pos:line="25" pos:column="81">(<pos:position pos:line="25" pos:column="82"/></operator><name pos:line="25" pos:column="82">unsigned<pos:position pos:line="25" pos:column="90"/></name> <name pos:line="25" pos:column="91">long<pos:position pos:line="25" pos:column="95"/></name><operator pos:line="25" pos:column="95">)<pos:position pos:line="25" pos:column="96"/></operator><name pos:line="25" pos:column="96">lc<pos:position pos:line="25" pos:column="98"/></name><operator pos:line="25" pos:column="98">)<pos:position pos:line="25" pos:column="99"/></operator></expr></argument>,
										<argument><expr><name pos:line="26" pos:column="81">NSADDIMAGE_OPTION_RETURN_ONLY_IF_LOADED<pos:position pos:line="26" pos:column="120"/></name> <operator pos:line="26" pos:column="121">+<pos:position pos:line="26" pos:column="122"/></operator>
										<name pos:line="27" pos:column="81">NSADDIMAGE_OPTION_WITH_SEARCHING<pos:position pos:line="27" pos:column="113"/></name> <operator pos:line="27" pos:column="114">+<pos:position pos:line="27" pos:column="115"/></operator>
										<name pos:line="28" pos:column="81">NSADDIMAGE_OPTION_RETURN_ON_ERROR<pos:position pos:line="28" pos:column="114"/></name></expr></argument> )<pos:position pos:line="28" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="117"/></expr_stmt>
				}<pos:position pos:line="29" pos:column="34"/></block></then></if>
				<if pos:line="30" pos:column="33">if <condition pos:line="30" pos:column="36">(<expr><name pos:line="30" pos:column="37">mh1<pos:position pos:line="30" pos:column="40"/></name></expr>)<pos:position pos:line="30" pos:column="41"/></condition><then pos:line="30" pos:column="41">
				<block pos:line="31" pos:column="33">{
					<expr_stmt><expr><name pos:line="32" pos:column="41">retSym<pos:position pos:line="32" pos:column="47"/></name> <operator pos:line="32" pos:column="48">=<pos:position pos:line="32" pos:column="49"/></operator> <call><name pos:line="32" pos:column="50">ltdl_NSLookupSymbolInImage<pos:position pos:line="32" pos:column="76"/></name><argument_list pos:line="32" pos:column="76">(<argument><expr><name pos:line="32" pos:column="77">mh1<pos:position pos:line="32" pos:column="80"/></name></expr></argument>,
											<argument><expr><name pos:line="33" pos:column="89">symbol<pos:position pos:line="33" pos:column="95"/></name></expr></argument>,
											<argument><expr><name pos:line="34" pos:column="89">NSLOOKUPSYMBOLINIMAGE_OPTION_BIND_NOW<pos:position pos:line="34" pos:column="126"/></name>
											<operator pos:line="35" pos:column="89">|<pos:position pos:line="35" pos:column="90"/></operator> <name pos:line="35" pos:column="91">NSLOOKUPSYMBOLINIMAGE_OPTION_RETURN_ON_ERROR<pos:position pos:line="35" pos:column="135"/></name></expr></argument>
											)<pos:position pos:line="36" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="91"/></expr_stmt>
					<if pos:line="37" pos:column="41">if <condition pos:line="37" pos:column="44">(<expr><name pos:line="37" pos:column="45">retSym<pos:position pos:line="37" pos:column="51"/></name></expr>)<pos:position pos:line="37" pos:column="52"/></condition><then pos:line="37" pos:column="52"> <block type="pseudo"><break pos:line="37" pos:column="53">break;<pos:position pos:line="37" pos:column="59"/></break></block></then></if>
				}<pos:position pos:line="38" pos:column="34"/></block></then></if>
			}<pos:position pos:line="39" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="40" pos:column="25">offset<pos:position pos:line="40" pos:column="31"/></name> <operator pos:line="40" pos:column="32">+=<pos:position pos:line="40" pos:column="34"/></operator> <name><name pos:line="40" pos:column="35">lc<pos:position pos:line="40" pos:column="37"/></name><operator pos:line="40" pos:column="37">-&gt;<pos:position pos:line="40" pos:column="42"/></operator><name pos:line="40" pos:column="39">cmdsize<pos:position pos:line="40" pos:column="46"/></name></name></expr>;<pos:position pos:line="40" pos:column="47"/></expr_stmt>
		}<pos:position pos:line="41" pos:column="18"/></block></for>
	}<pos:position pos:line="42" pos:column="10"/></block></then></if>
	<return pos:line="43" pos:column="9">return <expr><name pos:line="43" pos:column="16">retSym<pos:position pos:line="43" pos:column="22"/></name></expr>;<pos:position pos:line="43" pos:column="23"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_709_collectd-4.7.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">do_check_con_none<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">size_t<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">values_num<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="2" pos:column="17">double<pos:position pos:line="2" pos:column="23"/></name> <modifier pos:line="2" pos:column="24">*<pos:position pos:line="2" pos:column="25"/></modifier></type><name pos:line="2" pos:column="25">values<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="33">char<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier><modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">values_names<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">num_critical<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><literal type="number" pos:line="4" pos:column="28">0<pos:position pos:line="4" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">num_warning<pos:position pos:line="5" pos:column="24"/></name>  <init pos:line="5" pos:column="26">= <expr><literal type="number" pos:line="5" pos:column="28">0<pos:position pos:line="5" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">num_okay<pos:position pos:line="6" pos:column="21"/></name> <init pos:line="6" pos:column="22">= <expr><literal type="number" pos:line="6" pos:column="24">0<pos:position pos:line="6" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">status_str<pos:position pos:line="7" pos:column="31"/></name> <init pos:line="7" pos:column="32">= <expr><literal type="string" pos:line="7" pos:column="34">"UNKNOWN"<pos:position pos:line="7" pos:column="43"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">status_code<pos:position pos:line="8" pos:column="24"/></name> <init pos:line="8" pos:column="25">= <expr><name pos:line="8" pos:column="27">RET_UNKNOWN<pos:position pos:line="8" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">size_t<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">i<pos:position pos:line="9" pos:column="17"/></name></decl>;<pos:position pos:line="9" pos:column="18"/></decl_stmt>

	<for pos:line="11" pos:column="9">for <control pos:line="11" pos:column="13">(<init><expr><name pos:line="11" pos:column="14">i<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <literal type="number" pos:line="11" pos:column="18">0<pos:position pos:line="11" pos:column="19"/></literal></expr>;<pos:position pos:line="11" pos:column="20"/></init> <condition><expr><name pos:line="11" pos:column="21">i<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">&lt;<pos:position pos:line="11" pos:column="27"/></operator> <name pos:line="11" pos:column="25">values_num<pos:position pos:line="11" pos:column="35"/></name></expr>;<pos:position pos:line="11" pos:column="36"/></condition> <incr><expr><name pos:line="11" pos:column="37">i<pos:position pos:line="11" pos:column="38"/></name><operator pos:line="11" pos:column="38">++<pos:position pos:line="11" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="41"/></control>
	<block pos:line="12" pos:column="9">{
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><call><name pos:line="13" pos:column="21">isnan<pos:position pos:line="13" pos:column="26"/></name> <argument_list pos:line="13" pos:column="27">(<argument><expr><name><name pos:line="13" pos:column="28">values<pos:position pos:line="13" pos:column="34"/></name><index pos:line="13" pos:column="34">[<expr><name pos:line="13" pos:column="35">i<pos:position pos:line="13" pos:column="36"/></name></expr>]<pos:position pos:line="13" pos:column="37"/></index></name></expr></argument>)<pos:position pos:line="13" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="39"/></condition><then pos:line="13" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="25">num_warning<pos:position pos:line="14" pos:column="36"/></name><operator pos:line="14" pos:column="36">++<pos:position pos:line="14" pos:column="38"/></operator></expr>;<pos:position pos:line="14" pos:column="39"/></expr_stmt></block></then>
		<elseif pos:line="15" pos:column="17">else <if pos:line="15" pos:column="22">if <condition pos:line="15" pos:column="25">(<expr><call><name pos:line="15" pos:column="26">match_range<pos:position pos:line="15" pos:column="37"/></name> <argument_list pos:line="15" pos:column="38">(<argument><expr><operator pos:line="15" pos:column="39">&amp;<pos:position pos:line="15" pos:column="44"/></operator><name pos:line="15" pos:column="40">range_critical_g<pos:position pos:line="15" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="58">values<pos:position pos:line="15" pos:column="64"/></name><index pos:line="15" pos:column="64">[<expr><name pos:line="15" pos:column="65">i<pos:position pos:line="15" pos:column="66"/></name></expr>]<pos:position pos:line="15" pos:column="67"/></index></name></expr></argument>)<pos:position pos:line="15" pos:column="68"/></argument_list></call> <operator pos:line="15" pos:column="69">!=<pos:position pos:line="15" pos:column="71"/></operator> <literal type="number" pos:line="15" pos:column="72">0<pos:position pos:line="15" pos:column="73"/></literal></expr>)<pos:position pos:line="15" pos:column="74"/></condition><then pos:line="15" pos:column="74">
			<block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="25">num_critical<pos:position pos:line="16" pos:column="37"/></name><operator pos:line="16" pos:column="37">++<pos:position pos:line="16" pos:column="39"/></operator></expr>;<pos:position pos:line="16" pos:column="40"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="17" pos:column="17">else <if pos:line="17" pos:column="22">if <condition pos:line="17" pos:column="25">(<expr><call><name pos:line="17" pos:column="26">match_range<pos:position pos:line="17" pos:column="37"/></name> <argument_list pos:line="17" pos:column="38">(<argument><expr><operator pos:line="17" pos:column="39">&amp;<pos:position pos:line="17" pos:column="44"/></operator><name pos:line="17" pos:column="40">range_warning_g<pos:position pos:line="17" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="57">values<pos:position pos:line="17" pos:column="63"/></name><index pos:line="17" pos:column="63">[<expr><name pos:line="17" pos:column="64">i<pos:position pos:line="17" pos:column="65"/></name></expr>]<pos:position pos:line="17" pos:column="66"/></index></name></expr></argument>)<pos:position pos:line="17" pos:column="67"/></argument_list></call> <operator pos:line="17" pos:column="68">!=<pos:position pos:line="17" pos:column="70"/></operator> <literal type="number" pos:line="17" pos:column="71">0<pos:position pos:line="17" pos:column="72"/></literal></expr>)<pos:position pos:line="17" pos:column="73"/></condition><then pos:line="17" pos:column="73">
			<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="25">num_warning<pos:position pos:line="18" pos:column="36"/></name><operator pos:line="18" pos:column="36">++<pos:position pos:line="18" pos:column="38"/></operator></expr>;<pos:position pos:line="18" pos:column="39"/></expr_stmt></block></then></if></elseif>
		<else pos:line="19" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="25">num_okay<pos:position pos:line="20" pos:column="33"/></name><operator pos:line="20" pos:column="33">++<pos:position pos:line="20" pos:column="35"/></operator></expr>;<pos:position pos:line="20" pos:column="36"/></expr_stmt></block></else></if>
	}<pos:position pos:line="21" pos:column="10"/></block></for>

	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">(<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="14">num_critical<pos:position pos:line="23" pos:column="26"/></name> <operator pos:line="23" pos:column="27">==<pos:position pos:line="23" pos:column="29"/></operator> <literal type="number" pos:line="23" pos:column="30">0<pos:position pos:line="23" pos:column="31"/></literal><operator pos:line="23" pos:column="31">)<pos:position pos:line="23" pos:column="32"/></operator> <operator pos:line="23" pos:column="33">&amp;&amp;<pos:position pos:line="23" pos:column="43"/></operator> <operator pos:line="23" pos:column="36">(<pos:position pos:line="23" pos:column="37"/></operator><name pos:line="23" pos:column="37">num_warning<pos:position pos:line="23" pos:column="48"/></name> <operator pos:line="23" pos:column="49">==<pos:position pos:line="23" pos:column="51"/></operator> <literal type="number" pos:line="23" pos:column="52">0<pos:position pos:line="23" pos:column="53"/></literal><operator pos:line="23" pos:column="53">)<pos:position pos:line="23" pos:column="54"/></operator> <operator pos:line="23" pos:column="55">&amp;&amp;<pos:position pos:line="23" pos:column="65"/></operator> <operator pos:line="23" pos:column="58">(<pos:position pos:line="23" pos:column="59"/></operator><name pos:line="23" pos:column="59">num_okay<pos:position pos:line="23" pos:column="67"/></name> <operator pos:line="23" pos:column="68">==<pos:position pos:line="23" pos:column="70"/></operator> <literal type="number" pos:line="23" pos:column="71">0<pos:position pos:line="23" pos:column="72"/></literal><operator pos:line="23" pos:column="72">)<pos:position pos:line="23" pos:column="73"/></operator></expr>)<pos:position pos:line="23" pos:column="74"/></condition><then pos:line="23" pos:column="74">
	<block pos:line="24" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">printf<pos:position pos:line="25" pos:column="23"/></name> <argument_list pos:line="25" pos:column="24">(<argument><expr><literal type="string" pos:line="25" pos:column="25">"WARNING: No defined values found\n"<pos:position pos:line="25" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="63"/></expr_stmt>
		<return pos:line="26" pos:column="17">return <expr><operator pos:line="26" pos:column="24">(<pos:position pos:line="26" pos:column="25"/></operator><name pos:line="26" pos:column="25">RET_WARNING<pos:position pos:line="26" pos:column="36"/></name><operator pos:line="26" pos:column="36">)<pos:position pos:line="26" pos:column="37"/></operator></expr>;<pos:position pos:line="26" pos:column="38"/></return>
	}<pos:position pos:line="27" pos:column="10"/></block></then>
	<elseif pos:line="28" pos:column="9">else <if pos:line="28" pos:column="14">if <condition pos:line="28" pos:column="17">(<expr><operator pos:line="28" pos:column="18">(<pos:position pos:line="28" pos:column="19"/></operator><name pos:line="28" pos:column="19">num_critical<pos:position pos:line="28" pos:column="31"/></name> <operator pos:line="28" pos:column="32">==<pos:position pos:line="28" pos:column="34"/></operator> <literal type="number" pos:line="28" pos:column="35">0<pos:position pos:line="28" pos:column="36"/></literal><operator pos:line="28" pos:column="36">)<pos:position pos:line="28" pos:column="37"/></operator> <operator pos:line="28" pos:column="38">&amp;&amp;<pos:position pos:line="28" pos:column="48"/></operator> <operator pos:line="28" pos:column="41">(<pos:position pos:line="28" pos:column="42"/></operator><name pos:line="28" pos:column="42">num_warning<pos:position pos:line="28" pos:column="53"/></name> <operator pos:line="28" pos:column="54">==<pos:position pos:line="28" pos:column="56"/></operator> <literal type="number" pos:line="28" pos:column="57">0<pos:position pos:line="28" pos:column="58"/></literal><operator pos:line="28" pos:column="58">)<pos:position pos:line="28" pos:column="59"/></operator></expr>)<pos:position pos:line="28" pos:column="60"/></condition><then pos:line="28" pos:column="60">
	<block pos:line="29" pos:column="9">{
		<expr_stmt><expr><name pos:line="30" pos:column="17">status_str<pos:position pos:line="30" pos:column="27"/></name> <operator pos:line="30" pos:column="28">=<pos:position pos:line="30" pos:column="29"/></operator> <literal type="string" pos:line="30" pos:column="30">"OKAY"<pos:position pos:line="30" pos:column="36"/></literal></expr>;<pos:position pos:line="30" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name pos:line="31" pos:column="17">status_code<pos:position pos:line="31" pos:column="28"/></name> <operator pos:line="31" pos:column="29">=<pos:position pos:line="31" pos:column="30"/></operator> <name pos:line="31" pos:column="31">RET_OKAY<pos:position pos:line="31" pos:column="39"/></name></expr>;<pos:position pos:line="31" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="32" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="33" pos:column="9">else <if pos:line="33" pos:column="14">if <condition pos:line="33" pos:column="17">(<expr><name pos:line="33" pos:column="18">num_critical<pos:position pos:line="33" pos:column="30"/></name> <operator pos:line="33" pos:column="31">==<pos:position pos:line="33" pos:column="33"/></operator> <literal type="number" pos:line="33" pos:column="34">0<pos:position pos:line="33" pos:column="35"/></literal></expr>)<pos:position pos:line="33" pos:column="36"/></condition><then pos:line="33" pos:column="36">
	<block pos:line="34" pos:column="9">{
		<expr_stmt><expr><name pos:line="35" pos:column="17">status_str<pos:position pos:line="35" pos:column="27"/></name> <operator pos:line="35" pos:column="28">=<pos:position pos:line="35" pos:column="29"/></operator> <literal type="string" pos:line="35" pos:column="30">"WARNING"<pos:position pos:line="35" pos:column="39"/></literal></expr>;<pos:position pos:line="35" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><name pos:line="36" pos:column="17">status_code<pos:position pos:line="36" pos:column="28"/></name> <operator pos:line="36" pos:column="29">=<pos:position pos:line="36" pos:column="30"/></operator> <name pos:line="36" pos:column="31">RET_WARNING<pos:position pos:line="36" pos:column="42"/></name></expr>;<pos:position pos:line="36" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="37" pos:column="10"/></block></then></if></elseif>
	<else pos:line="38" pos:column="9">else
	<block pos:line="39" pos:column="9">{
		<expr_stmt><expr><name pos:line="40" pos:column="17">status_str<pos:position pos:line="40" pos:column="27"/></name> <operator pos:line="40" pos:column="28">=<pos:position pos:line="40" pos:column="29"/></operator> <literal type="string" pos:line="40" pos:column="30">"CRITICAL"<pos:position pos:line="40" pos:column="40"/></literal></expr>;<pos:position pos:line="40" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name pos:line="41" pos:column="17">status_code<pos:position pos:line="41" pos:column="28"/></name> <operator pos:line="41" pos:column="29">=<pos:position pos:line="41" pos:column="30"/></operator> <name pos:line="41" pos:column="31">RET_CRITICAL<pos:position pos:line="41" pos:column="43"/></name></expr>;<pos:position pos:line="41" pos:column="44"/></expr_stmt>
	}<pos:position pos:line="42" pos:column="10"/></block></else></if>

	<expr_stmt><expr><call><name pos:line="44" pos:column="9">printf<pos:position pos:line="44" pos:column="15"/></name> <argument_list pos:line="44" pos:column="16">(<argument><expr><literal type="string" pos:line="44" pos:column="17">"%s: %i critical, %i warning, %i okay"<pos:position pos:line="44" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="57">status_str<pos:position pos:line="44" pos:column="67"/></name></expr></argument>,
			<argument><expr><name pos:line="45" pos:column="25">num_critical<pos:position pos:line="45" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="39">num_warning<pos:position pos:line="45" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="52">num_okay<pos:position pos:line="45" pos:column="60"/></name></expr></argument>)<pos:position pos:line="45" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="62"/></expr_stmt>
	<if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><name pos:line="46" pos:column="13">values_num<pos:position pos:line="46" pos:column="23"/></name> <operator pos:line="46" pos:column="24">&gt;<pos:position pos:line="46" pos:column="28"/></operator> <literal type="number" pos:line="46" pos:column="26">0<pos:position pos:line="46" pos:column="27"/></literal></expr>)<pos:position pos:line="46" pos:column="28"/></condition><then pos:line="46" pos:column="28">
	<block pos:line="47" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="48" pos:column="17">printf<pos:position pos:line="48" pos:column="23"/></name> <argument_list pos:line="48" pos:column="24">(<argument><expr><literal type="string" pos:line="48" pos:column="25">" |"<pos:position pos:line="48" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="31"/></expr_stmt>
		<for pos:line="49" pos:column="17">for <control pos:line="49" pos:column="21">(<init><expr><name pos:line="49" pos:column="22">i<pos:position pos:line="49" pos:column="23"/></name> <operator pos:line="49" pos:column="24">=<pos:position pos:line="49" pos:column="25"/></operator> <literal type="number" pos:line="49" pos:column="26">0<pos:position pos:line="49" pos:column="27"/></literal></expr>;<pos:position pos:line="49" pos:column="28"/></init> <condition><expr><name pos:line="49" pos:column="29">i<pos:position pos:line="49" pos:column="30"/></name> <operator pos:line="49" pos:column="31">&lt;<pos:position pos:line="49" pos:column="35"/></operator> <name pos:line="49" pos:column="33">values_num<pos:position pos:line="49" pos:column="43"/></name></expr>;<pos:position pos:line="49" pos:column="44"/></condition> <incr><expr><name pos:line="49" pos:column="45">i<pos:position pos:line="49" pos:column="46"/></name><operator pos:line="49" pos:column="46">++<pos:position pos:line="49" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="49" pos:column="49"/></control>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="25">printf<pos:position pos:line="50" pos:column="31"/></name> <argument_list pos:line="50" pos:column="32">(<argument><expr><literal type="string" pos:line="50" pos:column="33">" %s=%g;;;;"<pos:position pos:line="50" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="47">values_names<pos:position pos:line="50" pos:column="59"/></name><index pos:line="50" pos:column="59">[<expr><name pos:line="50" pos:column="60">i<pos:position pos:line="50" pos:column="61"/></name></expr>]<pos:position pos:line="50" pos:column="62"/></index></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="64">values<pos:position pos:line="50" pos:column="70"/></name><index pos:line="50" pos:column="70">[<expr><name pos:line="50" pos:column="71">i<pos:position pos:line="50" pos:column="72"/></name></expr>]<pos:position pos:line="50" pos:column="73"/></index></name></expr></argument>)<pos:position pos:line="50" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="75"/></expr_stmt></block></for>
	}<pos:position pos:line="51" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="52" pos:column="9">printf<pos:position pos:line="52" pos:column="15"/></name> <argument_list pos:line="52" pos:column="16">(<argument><expr><literal type="string" pos:line="52" pos:column="17">"\n"<pos:position pos:line="52" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="23"/></expr_stmt>

	<return pos:line="54" pos:column="9">return <expr><operator pos:line="54" pos:column="16">(<pos:position pos:line="54" pos:column="17"/></operator><name pos:line="54" pos:column="17">status_code<pos:position pos:line="54" pos:column="28"/></name><operator pos:line="54" pos:column="28">)<pos:position pos:line="54" pos:column="29"/></operator></expr>;<pos:position pos:line="54" pos:column="30"/></return>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

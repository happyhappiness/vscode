<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_309_collectd-4.5.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">size_t<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">ascent_curl_callback<pos:position pos:line="1" pos:column="35"/></name> <parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">void<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">buf<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">size_t<pos:position pos:line="1" pos:column="54"/></name></type> <name pos:line="1" pos:column="55">size<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">size_t<pos:position pos:line="1" pos:column="67"/></name></type> <name pos:line="1" pos:column="68">nmemb<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="75">/* {{{ */</comment>
    <parameter><decl><type><name pos:line="2" pos:column="5">void<pos:position pos:line="2" pos:column="9"/></name> <modifier pos:line="2" pos:column="10">*<pos:position pos:line="2" pos:column="11"/></modifier></type><name pos:line="2" pos:column="11">stream<pos:position pos:line="2" pos:column="17"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="18"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">len<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><name pos:line="4" pos:column="16">size<pos:position pos:line="4" pos:column="20"/></name> <operator pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></operator> <name pos:line="4" pos:column="23">nmemb<pos:position pos:line="4" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">len<pos:position pos:line="6" pos:column="10"/></name> <operator pos:line="6" pos:column="11">&lt;=<pos:position pos:line="6" pos:column="16"/></operator> <literal type="number" pos:line="6" pos:column="14">0<pos:position pos:line="6" pos:column="15"/></literal></expr>)<pos:position pos:line="6" pos:column="16"/></condition><then pos:line="6" pos:column="16">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><operator pos:line="7" pos:column="12">(<pos:position pos:line="7" pos:column="13"/></operator><name pos:line="7" pos:column="13">len<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">)<pos:position pos:line="7" pos:column="17"/></operator></expr>;<pos:position pos:line="7" pos:column="18"/></return></block></then></if>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">(<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">ascent_buffer_fill<pos:position pos:line="9" pos:column="26"/></name> <operator pos:line="9" pos:column="27">+<pos:position pos:line="9" pos:column="28"/></operator> <name pos:line="9" pos:column="29">len<pos:position pos:line="9" pos:column="32"/></name><operator pos:line="9" pos:column="32">)<pos:position pos:line="9" pos:column="33"/></operator> <operator pos:line="9" pos:column="34">&gt;=<pos:position pos:line="9" pos:column="39"/></operator> <name pos:line="9" pos:column="37">ascent_buffer_size<pos:position pos:line="9" pos:column="55"/></name></expr>)<pos:position pos:line="9" pos:column="56"/></condition><then pos:line="9" pos:column="56">
  <block pos:line="10" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name> <modifier pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></modifier></type><name pos:line="11" pos:column="11">temp<pos:position pos:line="11" pos:column="15"/></name></decl>;<pos:position pos:line="11" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><name pos:line="13" pos:column="5">temp<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">=<pos:position pos:line="13" pos:column="11"/></operator> <operator pos:line="13" pos:column="12">(<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="13">char<pos:position pos:line="13" pos:column="17"/></name> <operator pos:line="13" pos:column="18">*<pos:position pos:line="13" pos:column="19"/></operator><operator pos:line="13" pos:column="19">)<pos:position pos:line="13" pos:column="20"/></operator> <call><name pos:line="13" pos:column="21">realloc<pos:position pos:line="13" pos:column="28"/></name> <argument_list pos:line="13" pos:column="29">(<argument><expr><name pos:line="13" pos:column="30">ascent_buffer<pos:position pos:line="13" pos:column="43"/></name></expr></argument>,
        <argument><expr><name pos:line="14" pos:column="9">ascent_buffer_fill<pos:position pos:line="14" pos:column="27"/></name> <operator pos:line="14" pos:column="28">+<pos:position pos:line="14" pos:column="29"/></operator> <name pos:line="14" pos:column="30">len<pos:position pos:line="14" pos:column="33"/></name> <operator pos:line="14" pos:column="34">+<pos:position pos:line="14" pos:column="35"/></operator> <literal type="number" pos:line="14" pos:column="36">1<pos:position pos:line="14" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="39"/></expr_stmt>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">temp<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">==<pos:position pos:line="15" pos:column="16"/></operator> <name pos:line="15" pos:column="17">NULL<pos:position pos:line="15" pos:column="21"/></name></expr>)<pos:position pos:line="15" pos:column="22"/></condition><then pos:line="15" pos:column="22">
    <block pos:line="16" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="17" pos:column="7">ERROR<pos:position pos:line="17" pos:column="12"/></name> <argument_list pos:line="17" pos:column="13">(<argument><expr><literal type="string" pos:line="17" pos:column="14">"ascent plugin: realloc failed."<pos:position pos:line="17" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="48"/></expr_stmt>
      <return pos:line="18" pos:column="7">return <expr><operator pos:line="18" pos:column="14">(<pos:position pos:line="18" pos:column="15"/></operator><literal type="number" pos:line="18" pos:column="15">0<pos:position pos:line="18" pos:column="16"/></literal><operator pos:line="18" pos:column="16">)<pos:position pos:line="18" pos:column="17"/></operator></expr>;<pos:position pos:line="18" pos:column="18"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="20" pos:column="5">ascent_buffer<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">=<pos:position pos:line="20" pos:column="20"/></operator> <name pos:line="20" pos:column="21">temp<pos:position pos:line="20" pos:column="25"/></name></expr>;<pos:position pos:line="20" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="21" pos:column="5">ascent_buffer_size<pos:position pos:line="21" pos:column="23"/></name> <operator pos:line="21" pos:column="24">=<pos:position pos:line="21" pos:column="25"/></operator> <name pos:line="21" pos:column="26">ascent_buffer_fill<pos:position pos:line="21" pos:column="44"/></name> <operator pos:line="21" pos:column="45">+<pos:position pos:line="21" pos:column="46"/></operator> <name pos:line="21" pos:column="47">len<pos:position pos:line="21" pos:column="50"/></name> <operator pos:line="21" pos:column="51">+<pos:position pos:line="21" pos:column="52"/></operator> <literal type="number" pos:line="21" pos:column="53">1<pos:position pos:line="21" pos:column="54"/></literal></expr>;<pos:position pos:line="21" pos:column="55"/></expr_stmt>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="24" pos:column="3">memcpy<pos:position pos:line="24" pos:column="9"/></name> <argument_list pos:line="24" pos:column="10">(<argument><expr><name pos:line="24" pos:column="11">ascent_buffer<pos:position pos:line="24" pos:column="24"/></name> <operator pos:line="24" pos:column="25">+<pos:position pos:line="24" pos:column="26"/></operator> <name pos:line="24" pos:column="27">ascent_buffer_fill<pos:position pos:line="24" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="47">(<pos:position pos:line="24" pos:column="48"/></operator><name pos:line="24" pos:column="48">char<pos:position pos:line="24" pos:column="52"/></name> <operator pos:line="24" pos:column="53">*<pos:position pos:line="24" pos:column="54"/></operator><operator pos:line="24" pos:column="54">)<pos:position pos:line="24" pos:column="55"/></operator> <name pos:line="24" pos:column="56">buf<pos:position pos:line="24" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="61">len<pos:position pos:line="24" pos:column="64"/></name></expr></argument>)<pos:position pos:line="24" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="66"/></expr_stmt>
  <expr_stmt><expr><name pos:line="25" pos:column="3">ascent_buffer_fill<pos:position pos:line="25" pos:column="21"/></name> <operator pos:line="25" pos:column="22">+=<pos:position pos:line="25" pos:column="24"/></operator> <name pos:line="25" pos:column="25">len<pos:position pos:line="25" pos:column="28"/></name></expr>;<pos:position pos:line="25" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="26" pos:column="3">ascent_buffer<pos:position pos:line="26" pos:column="16"/></name><index pos:line="26" pos:column="16">[<expr><name pos:line="26" pos:column="17">ascent_buffer_fill<pos:position pos:line="26" pos:column="35"/></name></expr>]<pos:position pos:line="26" pos:column="36"/></index></name> <operator pos:line="26" pos:column="37">=<pos:position pos:line="26" pos:column="38"/></operator> <literal type="number" pos:line="26" pos:column="39">0<pos:position pos:line="26" pos:column="40"/></literal></expr>;<pos:position pos:line="26" pos:column="41"/></expr_stmt>

  <return pos:line="28" pos:column="3">return <expr><operator pos:line="28" pos:column="10">(<pos:position pos:line="28" pos:column="11"/></operator><name pos:line="28" pos:column="11">len<pos:position pos:line="28" pos:column="14"/></name><operator pos:line="28" pos:column="14">)<pos:position pos:line="28" pos:column="15"/></operator></expr>;<pos:position pos:line="28" pos:column="16"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

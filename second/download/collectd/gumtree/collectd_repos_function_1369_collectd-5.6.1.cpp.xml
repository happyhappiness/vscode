<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1369_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">staging_entry_update<pos:position pos:line="1" pos:column="32"/></name> <parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">host<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="52">const<pos:position pos:line="1" pos:column="57"/></specifier> <name pos:line="1" pos:column="58">char<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">name<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="70">/* {{{ */</comment>
    <parameter><decl><type><specifier pos:line="2" pos:column="5">const<pos:position pos:line="2" pos:column="10"/></specifier> <name pos:line="2" pos:column="11">char<pos:position pos:line="2" pos:column="15"/></name> <modifier pos:line="2" pos:column="16">*<pos:position pos:line="2" pos:column="17"/></modifier></type><name pos:line="2" pos:column="17">type<pos:position pos:line="2" pos:column="21"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier> <name pos:line="2" pos:column="29">char<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">type_instance<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="3" pos:column="5">size_t<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">ds_index<pos:position pos:line="3" pos:column="20"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="22">int<pos:position pos:line="3" pos:column="25"/></name></type> <name pos:line="3" pos:column="26">ds_type<pos:position pos:line="3" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="35">value_t<pos:position pos:line="3" pos:column="42"/></name></type> <name pos:line="3" pos:column="43">value<pos:position pos:line="3" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="49"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name pos:line="5" pos:column="9">data_set_t<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">ds<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">staging_entry_t<pos:position pos:line="6" pos:column="18"/></name> <modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier></type><name pos:line="6" pos:column="20">se<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>

  <expr_stmt><expr><name pos:line="8" pos:column="3">ds<pos:position pos:line="8" pos:column="5"/></name> <operator pos:line="8" pos:column="6">=<pos:position pos:line="8" pos:column="7"/></operator> <call><name pos:line="8" pos:column="8">plugin_get_ds<pos:position pos:line="8" pos:column="21"/></name> <argument_list pos:line="8" pos:column="22">(<argument><expr><name pos:line="8" pos:column="23">type<pos:position pos:line="8" pos:column="27"/></name></expr></argument>)<pos:position pos:line="8" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="29"/></expr_stmt>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">ds<pos:position pos:line="9" pos:column="9"/></name> <operator pos:line="9" pos:column="10">==<pos:position pos:line="9" pos:column="12"/></operator> <name pos:line="9" pos:column="13">NULL<pos:position pos:line="9" pos:column="17"/></name></expr>)<pos:position pos:line="9" pos:column="18"/></condition><then pos:line="9" pos:column="18">
  <block pos:line="10" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">ERROR<pos:position pos:line="11" pos:column="10"/></name> <argument_list pos:line="11" pos:column="11">(<argument><expr><literal type="string" pos:line="11" pos:column="12">"gmond plugin: Looking up type %s failed."<pos:position pos:line="11" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="56">type<pos:position pos:line="11" pos:column="60"/></name></expr></argument>)<pos:position pos:line="11" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="62"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">(<pos:position pos:line="12" pos:column="13"/></operator><operator pos:line="12" pos:column="13">-<pos:position pos:line="12" pos:column="14"/></operator><literal type="number" pos:line="12" pos:column="14">1<pos:position pos:line="12" pos:column="15"/></literal><operator pos:line="12" pos:column="15">)<pos:position pos:line="12" pos:column="16"/></operator></expr>;<pos:position pos:line="12" pos:column="17"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>

  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name><name pos:line="15" pos:column="7">ds<pos:position pos:line="15" pos:column="9"/></name><operator pos:line="15" pos:column="9">-&gt;<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="11">ds_num<pos:position pos:line="15" pos:column="17"/></name></name> <operator pos:line="15" pos:column="18">&lt;=<pos:position pos:line="15" pos:column="23"/></operator> <name pos:line="15" pos:column="21">ds_index<pos:position pos:line="15" pos:column="29"/></name></expr>)<pos:position pos:line="15" pos:column="30"/></condition><then pos:line="15" pos:column="30">
  <block pos:line="16" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">ERROR<pos:position pos:line="17" pos:column="10"/></name> <argument_list pos:line="17" pos:column="11">(<argument><expr><literal type="string" pos:line="17" pos:column="12">"gmond plugin: Invalid index %zu: %s has only %zu data source(s)."<pos:position pos:line="17" pos:column="78"/></literal></expr></argument>,
        <argument><expr><name pos:line="18" pos:column="9">ds_index<pos:position pos:line="18" pos:column="17"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="19">ds<pos:position pos:line="18" pos:column="21"/></name><operator pos:line="18" pos:column="21">-&gt;<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="23">type<pos:position pos:line="18" pos:column="27"/></name></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="29">ds<pos:position pos:line="18" pos:column="31"/></name><operator pos:line="18" pos:column="31">-&gt;<pos:position pos:line="18" pos:column="36"/></operator><name pos:line="18" pos:column="33">ds_num<pos:position pos:line="18" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="41"/></expr_stmt>
    <return pos:line="19" pos:column="5">return <expr><operator pos:line="19" pos:column="12">(<pos:position pos:line="19" pos:column="13"/></operator><operator pos:line="19" pos:column="13">-<pos:position pos:line="19" pos:column="14"/></operator><literal type="number" pos:line="19" pos:column="14">1<pos:position pos:line="19" pos:column="15"/></literal><operator pos:line="19" pos:column="15">)<pos:position pos:line="19" pos:column="16"/></operator></expr>;<pos:position pos:line="19" pos:column="17"/></return>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="22" pos:column="3">pthread_mutex_lock<pos:position pos:line="22" pos:column="21"/></name> <argument_list pos:line="22" pos:column="22">(<argument><expr><operator pos:line="22" pos:column="23">&amp;<pos:position pos:line="22" pos:column="28"/></operator><name pos:line="22" pos:column="24">staging_lock<pos:position pos:line="22" pos:column="36"/></name></expr></argument>)<pos:position pos:line="22" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="38"/></expr_stmt>

  <expr_stmt><expr><name pos:line="24" pos:column="3">se<pos:position pos:line="24" pos:column="5"/></name> <operator pos:line="24" pos:column="6">=<pos:position pos:line="24" pos:column="7"/></operator> <call><name pos:line="24" pos:column="8">staging_entry_get<pos:position pos:line="24" pos:column="25"/></name> <argument_list pos:line="24" pos:column="26">(<argument><expr><name pos:line="24" pos:column="27">host<pos:position pos:line="24" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="33">name<pos:position pos:line="24" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="39">type<pos:position pos:line="24" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="45">type_instance<pos:position pos:line="24" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="60">ds<pos:position pos:line="24" pos:column="62"/></name><operator pos:line="24" pos:column="62">-&gt;<pos:position pos:line="24" pos:column="67"/></operator><name pos:line="24" pos:column="64">ds_num<pos:position pos:line="24" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="72"/></expr_stmt>
  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><name pos:line="25" pos:column="7">se<pos:position pos:line="25" pos:column="9"/></name> <operator pos:line="25" pos:column="10">==<pos:position pos:line="25" pos:column="12"/></operator> <name pos:line="25" pos:column="13">NULL<pos:position pos:line="25" pos:column="17"/></name></expr>)<pos:position pos:line="25" pos:column="18"/></condition><then pos:line="25" pos:column="18">
  <block pos:line="26" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">pthread_mutex_unlock<pos:position pos:line="27" pos:column="25"/></name> <argument_list pos:line="27" pos:column="26">(<argument><expr><operator pos:line="27" pos:column="27">&amp;<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="28">staging_lock<pos:position pos:line="27" pos:column="40"/></name></expr></argument>)<pos:position pos:line="27" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">ERROR<pos:position pos:line="28" pos:column="10"/></name> <argument_list pos:line="28" pos:column="11">(<argument><expr><literal type="string" pos:line="28" pos:column="12">"gmond plugin: staging_entry_get failed."<pos:position pos:line="28" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="55"/></expr_stmt>
    <return pos:line="29" pos:column="5">return <expr><operator pos:line="29" pos:column="12">(<pos:position pos:line="29" pos:column="13"/></operator><operator pos:line="29" pos:column="13">-<pos:position pos:line="29" pos:column="14"/></operator><literal type="number" pos:line="29" pos:column="14">1<pos:position pos:line="29" pos:column="15"/></literal><operator pos:line="29" pos:column="15">)<pos:position pos:line="29" pos:column="16"/></operator></expr>;<pos:position pos:line="29" pos:column="17"/></return>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>
  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><name><name pos:line="31" pos:column="7">se<pos:position pos:line="31" pos:column="9"/></name><operator pos:line="31" pos:column="9">-&gt;<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="11">vl<pos:position pos:line="31" pos:column="13"/></name><operator pos:line="31" pos:column="13">.<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="14">values_len<pos:position pos:line="31" pos:column="24"/></name></name> <operator pos:line="31" pos:column="25">!=<pos:position pos:line="31" pos:column="27"/></operator> <name><name pos:line="31" pos:column="28">ds<pos:position pos:line="31" pos:column="30"/></name><operator pos:line="31" pos:column="30">-&gt;<pos:position pos:line="31" pos:column="35"/></operator><name pos:line="31" pos:column="32">ds_num<pos:position pos:line="31" pos:column="38"/></name></name></expr>)<pos:position pos:line="31" pos:column="39"/></condition><then pos:line="31" pos:column="39">
  <block pos:line="32" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">pthread_mutex_unlock<pos:position pos:line="33" pos:column="25"/></name> <argument_list pos:line="33" pos:column="26">(<argument><expr><operator pos:line="33" pos:column="27">&amp;<pos:position pos:line="33" pos:column="32"/></operator><name pos:line="33" pos:column="28">staging_lock<pos:position pos:line="33" pos:column="40"/></name></expr></argument>)<pos:position pos:line="33" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="42"/></expr_stmt>
    <return pos:line="34" pos:column="5">return <expr><operator pos:line="34" pos:column="12">(<pos:position pos:line="34" pos:column="13"/></operator><operator pos:line="34" pos:column="13">-<pos:position pos:line="34" pos:column="14"/></operator><literal type="number" pos:line="34" pos:column="14">1<pos:position pos:line="34" pos:column="15"/></literal><operator pos:line="34" pos:column="15">)<pos:position pos:line="34" pos:column="16"/></operator></expr>;<pos:position pos:line="34" pos:column="17"/></return>
  }<pos:position pos:line="35" pos:column="4"/></block></then></if>

  <if pos:line="37" pos:column="3">if <condition pos:line="37" pos:column="6">(<expr><name pos:line="37" pos:column="7">ds_type<pos:position pos:line="37" pos:column="14"/></name> <operator pos:line="37" pos:column="15">==<pos:position pos:line="37" pos:column="17"/></operator> <name pos:line="37" pos:column="18">DS_TYPE_COUNTER<pos:position pos:line="37" pos:column="33"/></name></expr>)<pos:position pos:line="37" pos:column="34"/></condition><then pos:line="37" pos:column="34">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="38" pos:column="5">se<pos:position pos:line="38" pos:column="7"/></name><operator pos:line="38" pos:column="7">-&gt;<pos:position pos:line="38" pos:column="12"/></operator><name pos:line="38" pos:column="9">vl<pos:position pos:line="38" pos:column="11"/></name><operator pos:line="38" pos:column="11">.<pos:position pos:line="38" pos:column="12"/></operator><name pos:line="38" pos:column="12">values<pos:position pos:line="38" pos:column="18"/></name><index pos:line="38" pos:column="18">[<expr><name pos:line="38" pos:column="19">ds_index<pos:position pos:line="38" pos:column="27"/></name></expr>]<pos:position pos:line="38" pos:column="28"/></index></name><operator pos:line="38" pos:column="28">.<pos:position pos:line="38" pos:column="29"/></operator><name pos:line="38" pos:column="29">counter<pos:position pos:line="38" pos:column="36"/></name> <operator pos:line="38" pos:column="37">+=<pos:position pos:line="38" pos:column="39"/></operator> <name><name pos:line="38" pos:column="40">value<pos:position pos:line="38" pos:column="45"/></name><operator pos:line="38" pos:column="45">.<pos:position pos:line="38" pos:column="46"/></operator><name pos:line="38" pos:column="46">counter<pos:position pos:line="38" pos:column="53"/></name></name></expr>;<pos:position pos:line="38" pos:column="54"/></expr_stmt></block></then>
  <elseif pos:line="39" pos:column="3">else <if pos:line="39" pos:column="8">if <condition pos:line="39" pos:column="11">(<expr><name pos:line="39" pos:column="12">ds_type<pos:position pos:line="39" pos:column="19"/></name> <operator pos:line="39" pos:column="20">==<pos:position pos:line="39" pos:column="22"/></operator> <name pos:line="39" pos:column="23">DS_TYPE_GAUGE<pos:position pos:line="39" pos:column="36"/></name></expr>)<pos:position pos:line="39" pos:column="37"/></condition><then pos:line="39" pos:column="37">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="40" pos:column="5">se<pos:position pos:line="40" pos:column="7"/></name><operator pos:line="40" pos:column="7">-&gt;<pos:position pos:line="40" pos:column="12"/></operator><name pos:line="40" pos:column="9">vl<pos:position pos:line="40" pos:column="11"/></name><operator pos:line="40" pos:column="11">.<pos:position pos:line="40" pos:column="12"/></operator><name pos:line="40" pos:column="12">values<pos:position pos:line="40" pos:column="18"/></name><index pos:line="40" pos:column="18">[<expr><name pos:line="40" pos:column="19">ds_index<pos:position pos:line="40" pos:column="27"/></name></expr>]<pos:position pos:line="40" pos:column="28"/></index></name><operator pos:line="40" pos:column="28">.<pos:position pos:line="40" pos:column="29"/></operator><name pos:line="40" pos:column="29">gauge<pos:position pos:line="40" pos:column="34"/></name> <operator pos:line="40" pos:column="35">=<pos:position pos:line="40" pos:column="36"/></operator> <name><name pos:line="40" pos:column="37">value<pos:position pos:line="40" pos:column="42"/></name><operator pos:line="40" pos:column="42">.<pos:position pos:line="40" pos:column="43"/></operator><name pos:line="40" pos:column="43">gauge<pos:position pos:line="40" pos:column="48"/></name></name></expr>;<pos:position pos:line="40" pos:column="49"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="41" pos:column="3">else <if pos:line="41" pos:column="8">if <condition pos:line="41" pos:column="11">(<expr><name pos:line="41" pos:column="12">ds_type<pos:position pos:line="41" pos:column="19"/></name> <operator pos:line="41" pos:column="20">==<pos:position pos:line="41" pos:column="22"/></operator> <name pos:line="41" pos:column="23">DS_TYPE_DERIVE<pos:position pos:line="41" pos:column="37"/></name></expr>)<pos:position pos:line="41" pos:column="38"/></condition><then pos:line="41" pos:column="38">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="42" pos:column="5">se<pos:position pos:line="42" pos:column="7"/></name><operator pos:line="42" pos:column="7">-&gt;<pos:position pos:line="42" pos:column="12"/></operator><name pos:line="42" pos:column="9">vl<pos:position pos:line="42" pos:column="11"/></name><operator pos:line="42" pos:column="11">.<pos:position pos:line="42" pos:column="12"/></operator><name pos:line="42" pos:column="12">values<pos:position pos:line="42" pos:column="18"/></name><index pos:line="42" pos:column="18">[<expr><name pos:line="42" pos:column="19">ds_index<pos:position pos:line="42" pos:column="27"/></name></expr>]<pos:position pos:line="42" pos:column="28"/></index></name><operator pos:line="42" pos:column="28">.<pos:position pos:line="42" pos:column="29"/></operator><name pos:line="42" pos:column="29">derive<pos:position pos:line="42" pos:column="35"/></name> <operator pos:line="42" pos:column="36">+=<pos:position pos:line="42" pos:column="38"/></operator> <name><name pos:line="42" pos:column="39">value<pos:position pos:line="42" pos:column="44"/></name><operator pos:line="42" pos:column="44">.<pos:position pos:line="42" pos:column="45"/></operator><name pos:line="42" pos:column="45">derive<pos:position pos:line="42" pos:column="51"/></name></name></expr>;<pos:position pos:line="42" pos:column="52"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="43" pos:column="3">else <if pos:line="43" pos:column="8">if <condition pos:line="43" pos:column="11">(<expr><name pos:line="43" pos:column="12">ds_type<pos:position pos:line="43" pos:column="19"/></name> <operator pos:line="43" pos:column="20">==<pos:position pos:line="43" pos:column="22"/></operator> <name pos:line="43" pos:column="23">DS_TYPE_ABSOLUTE<pos:position pos:line="43" pos:column="39"/></name></expr>)<pos:position pos:line="43" pos:column="40"/></condition><then pos:line="43" pos:column="40">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="44" pos:column="5">se<pos:position pos:line="44" pos:column="7"/></name><operator pos:line="44" pos:column="7">-&gt;<pos:position pos:line="44" pos:column="12"/></operator><name pos:line="44" pos:column="9">vl<pos:position pos:line="44" pos:column="11"/></name><operator pos:line="44" pos:column="11">.<pos:position pos:line="44" pos:column="12"/></operator><name pos:line="44" pos:column="12">values<pos:position pos:line="44" pos:column="18"/></name><index pos:line="44" pos:column="18">[<expr><name pos:line="44" pos:column="19">ds_index<pos:position pos:line="44" pos:column="27"/></name></expr>]<pos:position pos:line="44" pos:column="28"/></index></name><operator pos:line="44" pos:column="28">.<pos:position pos:line="44" pos:column="29"/></operator><name pos:line="44" pos:column="29">absolute<pos:position pos:line="44" pos:column="37"/></name> <operator pos:line="44" pos:column="38">=<pos:position pos:line="44" pos:column="39"/></operator> <name><name pos:line="44" pos:column="40">value<pos:position pos:line="44" pos:column="45"/></name><operator pos:line="44" pos:column="45">.<pos:position pos:line="44" pos:column="46"/></operator><name pos:line="44" pos:column="46">absolute<pos:position pos:line="44" pos:column="54"/></name></name></expr>;<pos:position pos:line="44" pos:column="55"/></expr_stmt></block></then></if></elseif>
  <else pos:line="45" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="5">assert<pos:position pos:line="46" pos:column="11"/></name> <argument_list pos:line="46" pos:column="12">(<argument><expr><literal type="number" pos:line="46" pos:column="13">23<pos:position pos:line="46" pos:column="15"/></literal> <operator pos:line="46" pos:column="16">==<pos:position pos:line="46" pos:column="18"/></operator> <literal type="number" pos:line="46" pos:column="19">42<pos:position pos:line="46" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="23"/></expr_stmt></block></else></if>

  <expr_stmt><expr><name><name pos:line="48" pos:column="3">se<pos:position pos:line="48" pos:column="5"/></name><operator pos:line="48" pos:column="5">-&gt;<pos:position pos:line="48" pos:column="10"/></operator><name pos:line="48" pos:column="7">flags<pos:position pos:line="48" pos:column="12"/></name></name> <operator pos:line="48" pos:column="13">|=<pos:position pos:line="48" pos:column="15"/></operator> <operator pos:line="48" pos:column="16">(<pos:position pos:line="48" pos:column="17"/></operator><literal type="number" pos:line="48" pos:column="17">0x01<pos:position pos:line="48" pos:column="21"/></literal> <operator pos:line="48" pos:column="22">&lt;&lt;<pos:position pos:line="48" pos:column="30"/></operator> <name pos:line="48" pos:column="25">ds_index<pos:position pos:line="48" pos:column="33"/></name><operator pos:line="48" pos:column="33">)<pos:position pos:line="48" pos:column="34"/></operator></expr>;<pos:position pos:line="48" pos:column="35"/></expr_stmt>

  <comment type="block" pos:line="50" pos:column="3">/* Check if all data sources have been set. If not, return here. */</comment>
  <if pos:line="51" pos:column="3">if <condition pos:line="51" pos:column="6">(<expr><name><name pos:line="51" pos:column="7">se<pos:position pos:line="51" pos:column="9"/></name><operator pos:line="51" pos:column="9">-&gt;<pos:position pos:line="51" pos:column="14"/></operator><name pos:line="51" pos:column="11">flags<pos:position pos:line="51" pos:column="16"/></name></name> <operator pos:line="51" pos:column="17">!=<pos:position pos:line="51" pos:column="19"/></operator> <operator pos:line="51" pos:column="20">(<pos:position pos:line="51" pos:column="21"/></operator><operator pos:line="51" pos:column="21">(<pos:position pos:line="51" pos:column="22"/></operator><literal type="number" pos:line="51" pos:column="22">0x01<pos:position pos:line="51" pos:column="26"/></literal> <operator pos:line="51" pos:column="27">&lt;&lt;<pos:position pos:line="51" pos:column="35"/></operator> <name><name pos:line="51" pos:column="30">se<pos:position pos:line="51" pos:column="32"/></name><operator pos:line="51" pos:column="32">-&gt;<pos:position pos:line="51" pos:column="37"/></operator><name pos:line="51" pos:column="34">vl<pos:position pos:line="51" pos:column="36"/></name><operator pos:line="51" pos:column="36">.<pos:position pos:line="51" pos:column="37"/></operator><name pos:line="51" pos:column="37">values_len<pos:position pos:line="51" pos:column="47"/></name></name><operator pos:line="51" pos:column="47">)<pos:position pos:line="51" pos:column="48"/></operator> <operator pos:line="51" pos:column="49">-<pos:position pos:line="51" pos:column="50"/></operator> <literal type="number" pos:line="51" pos:column="51">1<pos:position pos:line="51" pos:column="52"/></literal><operator pos:line="51" pos:column="52">)<pos:position pos:line="51" pos:column="53"/></operator></expr>)<pos:position pos:line="51" pos:column="54"/></condition><then pos:line="51" pos:column="54">
  <block pos:line="52" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">pthread_mutex_unlock<pos:position pos:line="53" pos:column="25"/></name> <argument_list pos:line="53" pos:column="26">(<argument><expr><operator pos:line="53" pos:column="27">&amp;<pos:position pos:line="53" pos:column="32"/></operator><name pos:line="53" pos:column="28">staging_lock<pos:position pos:line="53" pos:column="40"/></name></expr></argument>)<pos:position pos:line="53" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="42"/></expr_stmt>
    <return pos:line="54" pos:column="5">return <expr><operator pos:line="54" pos:column="12">(<pos:position pos:line="54" pos:column="13"/></operator><literal type="number" pos:line="54" pos:column="13">0<pos:position pos:line="54" pos:column="14"/></literal><operator pos:line="54" pos:column="14">)<pos:position pos:line="54" pos:column="15"/></operator></expr>;<pos:position pos:line="54" pos:column="16"/></return>
  }<pos:position pos:line="55" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="57" pos:column="3">/* Check if the interval of this metric is known. If not, request meta data
   * and return. */</comment>
  <if pos:line="59" pos:column="3">if <condition pos:line="59" pos:column="6">(<expr><name><name pos:line="59" pos:column="7">se<pos:position pos:line="59" pos:column="9"/></name><operator pos:line="59" pos:column="9">-&gt;<pos:position pos:line="59" pos:column="14"/></operator><name pos:line="59" pos:column="11">vl<pos:position pos:line="59" pos:column="13"/></name><operator pos:line="59" pos:column="13">.<pos:position pos:line="59" pos:column="14"/></operator><name pos:line="59" pos:column="14">interval<pos:position pos:line="59" pos:column="22"/></name></name> <operator pos:line="59" pos:column="23">==<pos:position pos:line="59" pos:column="25"/></operator> <literal type="number" pos:line="59" pos:column="26">0<pos:position pos:line="59" pos:column="27"/></literal></expr>)<pos:position pos:line="59" pos:column="28"/></condition><then pos:line="59" pos:column="28">
  <block pos:line="60" pos:column="3">{
    <comment type="block" pos:line="61" pos:column="5">/* No meta data has been received for this metric yet. */</comment>
    <expr_stmt><expr><name><name pos:line="62" pos:column="5">se<pos:position pos:line="62" pos:column="7"/></name><operator pos:line="62" pos:column="7">-&gt;<pos:position pos:line="62" pos:column="12"/></operator><name pos:line="62" pos:column="9">flags<pos:position pos:line="62" pos:column="14"/></name></name> <operator pos:line="62" pos:column="15">=<pos:position pos:line="62" pos:column="16"/></operator> <literal type="number" pos:line="62" pos:column="17">0<pos:position pos:line="62" pos:column="18"/></literal></expr>;<pos:position pos:line="62" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="63" pos:column="5">pthread_mutex_unlock<pos:position pos:line="63" pos:column="25"/></name> <argument_list pos:line="63" pos:column="26">(<argument><expr><operator pos:line="63" pos:column="27">&amp;<pos:position pos:line="63" pos:column="32"/></operator><name pos:line="63" pos:column="28">staging_lock<pos:position pos:line="63" pos:column="40"/></name></expr></argument>)<pos:position pos:line="63" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="42"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="65" pos:column="5">request_meta_data<pos:position pos:line="65" pos:column="22"/></name> <argument_list pos:line="65" pos:column="23">(<argument><expr><name pos:line="65" pos:column="24">host<pos:position pos:line="65" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="30">name<pos:position pos:line="65" pos:column="34"/></name></expr></argument>)<pos:position pos:line="65" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="36"/></expr_stmt>
    <return pos:line="66" pos:column="5">return <expr><operator pos:line="66" pos:column="12">(<pos:position pos:line="66" pos:column="13"/></operator><literal type="number" pos:line="66" pos:column="13">0<pos:position pos:line="66" pos:column="14"/></literal><operator pos:line="66" pos:column="14">)<pos:position pos:line="66" pos:column="15"/></operator></expr>;<pos:position pos:line="66" pos:column="16"/></return>
  }<pos:position pos:line="67" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="69" pos:column="3">plugin_dispatch_values<pos:position pos:line="69" pos:column="25"/></name> <argument_list pos:line="69" pos:column="26">(<argument><expr><operator pos:line="69" pos:column="27">&amp;<pos:position pos:line="69" pos:column="32"/></operator><name><name pos:line="69" pos:column="28">se<pos:position pos:line="69" pos:column="30"/></name><operator pos:line="69" pos:column="30">-&gt;<pos:position pos:line="69" pos:column="35"/></operator><name pos:line="69" pos:column="32">vl<pos:position pos:line="69" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="71" pos:column="3">se<pos:position pos:line="71" pos:column="5"/></name><operator pos:line="71" pos:column="5">-&gt;<pos:position pos:line="71" pos:column="10"/></operator><name pos:line="71" pos:column="7">flags<pos:position pos:line="71" pos:column="12"/></name></name> <operator pos:line="71" pos:column="13">=<pos:position pos:line="71" pos:column="14"/></operator> <literal type="number" pos:line="71" pos:column="15">0<pos:position pos:line="71" pos:column="16"/></literal></expr>;<pos:position pos:line="71" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="72" pos:column="3">pthread_mutex_unlock<pos:position pos:line="72" pos:column="23"/></name> <argument_list pos:line="72" pos:column="24">(<argument><expr><operator pos:line="72" pos:column="25">&amp;<pos:position pos:line="72" pos:column="30"/></operator><name pos:line="72" pos:column="26">staging_lock<pos:position pos:line="72" pos:column="38"/></name></expr></argument>)<pos:position pos:line="72" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="40"/></expr_stmt>

  <return pos:line="74" pos:column="3">return <expr><operator pos:line="74" pos:column="10">(<pos:position pos:line="74" pos:column="11"/></operator><literal type="number" pos:line="74" pos:column="11">0<pos:position pos:line="74" pos:column="12"/></literal><operator pos:line="74" pos:column="12">)<pos:position pos:line="74" pos:column="13"/></operator></expr>;<pos:position pos:line="74" pos:column="14"/></return>
}<pos:position pos:line="75" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1787_collectd-5.0.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ts_create<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">oconfig_item_t<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">ci<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">void<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier><modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">user_data<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list> <comment type="block" pos:line="1" pos:column="67">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">ts_data_t<pos:position pos:line="3" pos:column="18"/></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">data<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">status<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><name pos:line="7" pos:column="9">data<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">=<pos:position pos:line="7" pos:column="15"/></operator> <operator pos:line="7" pos:column="16">(<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="17">ts_data_t<pos:position pos:line="7" pos:column="26"/></name> <operator pos:line="7" pos:column="27">*<pos:position pos:line="7" pos:column="28"/></operator><operator pos:line="7" pos:column="28">)<pos:position pos:line="7" pos:column="29"/></operator> <call><name pos:line="7" pos:column="30">malloc<pos:position pos:line="7" pos:column="36"/></name> <argument_list pos:line="7" pos:column="37">(<argument><expr><sizeof pos:line="7" pos:column="38">sizeof <argument_list pos:line="7" pos:column="45">(<argument><expr><operator pos:line="7" pos:column="46">*<pos:position pos:line="7" pos:column="47"/></operator><name pos:line="7" pos:column="47">data<pos:position pos:line="7" pos:column="51"/></name></expr></argument>)<pos:position pos:line="7" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="54"/></expr_stmt>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">data<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">==<pos:position pos:line="8" pos:column="20"/></operator> <name pos:line="8" pos:column="21">NULL<pos:position pos:line="8" pos:column="25"/></name></expr>)<pos:position pos:line="8" pos:column="26"/></condition><then pos:line="8" pos:column="26">
	<block pos:line="9" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">ERROR<pos:position pos:line="10" pos:column="22"/></name> <argument_list pos:line="10" pos:column="23">(<argument><expr><literal type="string" pos:line="10" pos:column="24">"ts_create: malloc failed."<pos:position pos:line="10" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="53"/></expr_stmt>
		<return pos:line="11" pos:column="17">return <expr><operator pos:line="11" pos:column="24">(<pos:position pos:line="11" pos:column="25"/></operator><operator pos:line="11" pos:column="25">-<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="26">ENOMEM<pos:position pos:line="11" pos:column="32"/></name><operator pos:line="11" pos:column="32">)<pos:position pos:line="11" pos:column="33"/></operator></expr>;<pos:position pos:line="11" pos:column="34"/></return>
	}<pos:position pos:line="12" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="13" pos:column="9">memset<pos:position pos:line="13" pos:column="15"/></name> <argument_list pos:line="13" pos:column="16">(<argument><expr><name pos:line="13" pos:column="17">data<pos:position pos:line="13" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="23">0<pos:position pos:line="13" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="26">sizeof <argument_list pos:line="13" pos:column="33">(<argument><expr><operator pos:line="13" pos:column="34">*<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="35">data<pos:position pos:line="13" pos:column="39"/></name></expr></argument>)<pos:position pos:line="13" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="42"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="15" pos:column="9">data<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">-&gt;<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="15">factor<pos:position pos:line="15" pos:column="21"/></name></name> <operator pos:line="15" pos:column="22">=<pos:position pos:line="15" pos:column="23"/></operator> <name pos:line="15" pos:column="24">NAN<pos:position pos:line="15" pos:column="27"/></name></expr>;<pos:position pos:line="15" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="16" pos:column="9">data<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">-&gt;<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="15">offset<pos:position pos:line="16" pos:column="21"/></name></name> <operator pos:line="16" pos:column="22">=<pos:position pos:line="16" pos:column="23"/></operator> <name pos:line="16" pos:column="24">NAN<pos:position pos:line="16" pos:column="27"/></name></expr>;<pos:position pos:line="16" pos:column="28"/></expr_stmt>

	<expr_stmt><expr><name pos:line="18" pos:column="9">status<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <literal type="number" pos:line="18" pos:column="18">0<pos:position pos:line="18" pos:column="19"/></literal></expr>;<pos:position pos:line="18" pos:column="20"/></expr_stmt>
	<for pos:line="19" pos:column="9">for <control pos:line="19" pos:column="13">(<init><expr><name pos:line="19" pos:column="14">i<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <literal type="number" pos:line="19" pos:column="18">0<pos:position pos:line="19" pos:column="19"/></literal></expr>;<pos:position pos:line="19" pos:column="20"/></init> <condition><expr><name pos:line="19" pos:column="21">i<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">&lt;<pos:position pos:line="19" pos:column="27"/></operator> <name><name pos:line="19" pos:column="25">ci<pos:position pos:line="19" pos:column="27"/></name><operator pos:line="19" pos:column="27">-&gt;<pos:position pos:line="19" pos:column="32"/></operator><name pos:line="19" pos:column="29">children_num<pos:position pos:line="19" pos:column="41"/></name></name></expr>;<pos:position pos:line="19" pos:column="42"/></condition> <incr><expr><name pos:line="19" pos:column="43">i<pos:position pos:line="19" pos:column="44"/></name><operator pos:line="19" pos:column="44">++<pos:position pos:line="19" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="19" pos:column="47"/></control>
	<block pos:line="20" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="21" pos:column="17">oconfig_item_t<pos:position pos:line="21" pos:column="31"/></name> <modifier pos:line="21" pos:column="32">*<pos:position pos:line="21" pos:column="33"/></modifier></type><name pos:line="21" pos:column="33">child<pos:position pos:line="21" pos:column="38"/></name> <init pos:line="21" pos:column="39">= <expr><name><name pos:line="21" pos:column="41">ci<pos:position pos:line="21" pos:column="43"/></name><operator pos:line="21" pos:column="43">-&gt;<pos:position pos:line="21" pos:column="48"/></operator><name pos:line="21" pos:column="45">children<pos:position pos:line="21" pos:column="53"/></name></name> <operator pos:line="21" pos:column="54">+<pos:position pos:line="21" pos:column="55"/></operator> <name pos:line="21" pos:column="56">i<pos:position pos:line="21" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="21" pos:column="58"/></decl_stmt>

		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><call><name pos:line="23" pos:column="21">strcasecmp<pos:position pos:line="23" pos:column="31"/></name> <argument_list pos:line="23" pos:column="32">(<argument><expr><literal type="string" pos:line="23" pos:column="33">"Factor"<pos:position pos:line="23" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="43">child<pos:position pos:line="23" pos:column="48"/></name><operator pos:line="23" pos:column="48">-&gt;<pos:position pos:line="23" pos:column="53"/></operator><name pos:line="23" pos:column="50">key<pos:position pos:line="23" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="54"/></argument_list></call> <operator pos:line="23" pos:column="55">==<pos:position pos:line="23" pos:column="57"/></operator> <literal type="number" pos:line="23" pos:column="58">0<pos:position pos:line="23" pos:column="59"/></literal></expr>)<pos:position pos:line="23" pos:column="60"/></condition><then pos:line="23" pos:column="60">
				<block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="33">status<pos:position pos:line="24" pos:column="39"/></name> <operator pos:line="24" pos:column="40">=<pos:position pos:line="24" pos:column="41"/></operator> <call><name pos:line="24" pos:column="42">ts_config_set_double<pos:position pos:line="24" pos:column="62"/></name> <argument_list pos:line="24" pos:column="63">(<argument><expr><operator pos:line="24" pos:column="64">&amp;<pos:position pos:line="24" pos:column="69"/></operator><name><name pos:line="24" pos:column="65">data<pos:position pos:line="24" pos:column="69"/></name><operator pos:line="24" pos:column="69">-&gt;<pos:position pos:line="24" pos:column="74"/></operator><name pos:line="24" pos:column="71">factor<pos:position pos:line="24" pos:column="77"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="79">child<pos:position pos:line="24" pos:column="84"/></name></expr></argument>)<pos:position pos:line="24" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="86"/></expr_stmt></block></then>
		<elseif pos:line="25" pos:column="17">else <if pos:line="25" pos:column="22">if <condition pos:line="25" pos:column="25">(<expr><call><name pos:line="25" pos:column="26">strcasecmp<pos:position pos:line="25" pos:column="36"/></name> <argument_list pos:line="25" pos:column="37">(<argument><expr><literal type="string" pos:line="25" pos:column="38">"Offset"<pos:position pos:line="25" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="48">child<pos:position pos:line="25" pos:column="53"/></name><operator pos:line="25" pos:column="53">-&gt;<pos:position pos:line="25" pos:column="58"/></operator><name pos:line="25" pos:column="55">key<pos:position pos:line="25" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="59"/></argument_list></call> <operator pos:line="25" pos:column="60">==<pos:position pos:line="25" pos:column="62"/></operator> <literal type="number" pos:line="25" pos:column="63">0<pos:position pos:line="25" pos:column="64"/></literal></expr>)<pos:position pos:line="25" pos:column="65"/></condition><then pos:line="25" pos:column="65">
				<block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="33">status<pos:position pos:line="26" pos:column="39"/></name> <operator pos:line="26" pos:column="40">=<pos:position pos:line="26" pos:column="41"/></operator> <call><name pos:line="26" pos:column="42">ts_config_set_double<pos:position pos:line="26" pos:column="62"/></name> <argument_list pos:line="26" pos:column="63">(<argument><expr><operator pos:line="26" pos:column="64">&amp;<pos:position pos:line="26" pos:column="69"/></operator><name><name pos:line="26" pos:column="65">data<pos:position pos:line="26" pos:column="69"/></name><operator pos:line="26" pos:column="69">-&gt;<pos:position pos:line="26" pos:column="74"/></operator><name pos:line="26" pos:column="71">offset<pos:position pos:line="26" pos:column="77"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="79">child<pos:position pos:line="26" pos:column="84"/></name></expr></argument>)<pos:position pos:line="26" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="86"/></expr_stmt></block></then></if></elseif>
		<else pos:line="27" pos:column="17">else
		<block pos:line="28" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="29" pos:column="25">ERROR<pos:position pos:line="29" pos:column="30"/></name> <argument_list pos:line="29" pos:column="31">(<argument><expr><literal type="string" pos:line="29" pos:column="32">"Target `scale': The `%s' configuration option is not understood "<pos:position pos:line="29" pos:column="98"/></literal>
					<literal type="string" pos:line="30" pos:column="41">"and will be ignored."<pos:position pos:line="30" pos:column="63"/></literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="65">child<pos:position pos:line="30" pos:column="70"/></name><operator pos:line="30" pos:column="70">-&gt;<pos:position pos:line="30" pos:column="75"/></operator><name pos:line="30" pos:column="72">key<pos:position pos:line="30" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="77"/></expr_stmt>
			<expr_stmt><expr><name pos:line="31" pos:column="25">status<pos:position pos:line="31" pos:column="31"/></name> <operator pos:line="31" pos:column="32">=<pos:position pos:line="31" pos:column="33"/></operator> <literal type="number" pos:line="31" pos:column="34">0<pos:position pos:line="31" pos:column="35"/></literal></expr>;<pos:position pos:line="31" pos:column="36"/></expr_stmt>
		}<pos:position pos:line="32" pos:column="18"/></block></else></if>

		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><name pos:line="34" pos:column="21">status<pos:position pos:line="34" pos:column="27"/></name> <operator pos:line="34" pos:column="28">!=<pos:position pos:line="34" pos:column="30"/></operator> <literal type="number" pos:line="34" pos:column="31">0<pos:position pos:line="34" pos:column="32"/></literal></expr>)<pos:position pos:line="34" pos:column="33"/></condition><then pos:line="34" pos:column="33">
			<block type="pseudo"><break pos:line="35" pos:column="25">break;<pos:position pos:line="35" pos:column="31"/></break></block></then></if>
	}<pos:position pos:line="36" pos:column="10"/></block></for>

	<comment type="block" pos:line="38" pos:column="9">/* Additional sanity-checking */</comment>
	<while pos:line="39" pos:column="9">while <condition pos:line="39" pos:column="15">(<expr><name pos:line="39" pos:column="16">status<pos:position pos:line="39" pos:column="22"/></name> <operator pos:line="39" pos:column="23">==<pos:position pos:line="39" pos:column="25"/></operator> <literal type="number" pos:line="39" pos:column="26">0<pos:position pos:line="39" pos:column="27"/></literal></expr>)<pos:position pos:line="39" pos:column="28"/></condition>
	<block pos:line="40" pos:column="9">{
		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><call><name pos:line="41" pos:column="21">isnan<pos:position pos:line="41" pos:column="26"/></name> <argument_list pos:line="41" pos:column="27">(<argument><expr><name><name pos:line="41" pos:column="28">data<pos:position pos:line="41" pos:column="32"/></name><operator pos:line="41" pos:column="32">-&gt;<pos:position pos:line="41" pos:column="37"/></operator><name pos:line="41" pos:column="34">factor<pos:position pos:line="41" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="41"/></argument_list></call> <operator pos:line="41" pos:column="42">&amp;&amp;<pos:position pos:line="41" pos:column="52"/></operator> <call><name pos:line="41" pos:column="45">isnan<pos:position pos:line="41" pos:column="50"/></name> <argument_list pos:line="41" pos:column="51">(<argument><expr><name><name pos:line="41" pos:column="52">data<pos:position pos:line="41" pos:column="56"/></name><operator pos:line="41" pos:column="56">-&gt;<pos:position pos:line="41" pos:column="61"/></operator><name pos:line="41" pos:column="58">offset<pos:position pos:line="41" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="66"/></condition><then pos:line="41" pos:column="66">
		<block pos:line="42" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="43" pos:column="25">ERROR<pos:position pos:line="43" pos:column="30"/></name> <argument_list pos:line="43" pos:column="31">(<argument><expr><literal type="string" pos:line="43" pos:column="32">"Target `scale': You need to at least set either the `Factor' "<pos:position pos:line="43" pos:column="95"/></literal>
					<literal type="string" pos:line="44" pos:column="41">"or `Offset' option!"<pos:position pos:line="44" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="64"/></expr_stmt>
			<expr_stmt><expr><name pos:line="45" pos:column="25">status<pos:position pos:line="45" pos:column="31"/></name> <operator pos:line="45" pos:column="32">=<pos:position pos:line="45" pos:column="33"/></operator> <operator pos:line="45" pos:column="34">-<pos:position pos:line="45" pos:column="35"/></operator><literal type="number" pos:line="45" pos:column="35">1<pos:position pos:line="45" pos:column="36"/></literal></expr>;<pos:position pos:line="45" pos:column="37"/></expr_stmt>
		}<pos:position pos:line="46" pos:column="18"/></block></then></if>

		<break pos:line="48" pos:column="17">break;<pos:position pos:line="48" pos:column="23"/></break>
	}<pos:position pos:line="49" pos:column="10"/></block></while>

	<if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><name pos:line="51" pos:column="13">status<pos:position pos:line="51" pos:column="19"/></name> <operator pos:line="51" pos:column="20">!=<pos:position pos:line="51" pos:column="22"/></operator> <literal type="number" pos:line="51" pos:column="23">0<pos:position pos:line="51" pos:column="24"/></literal></expr>)<pos:position pos:line="51" pos:column="25"/></condition><then pos:line="51" pos:column="25">
	<block pos:line="52" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="53" pos:column="17">ts_destroy<pos:position pos:line="53" pos:column="27"/></name> <argument_list pos:line="53" pos:column="28">(<argument><expr><operator pos:line="53" pos:column="29">(<pos:position pos:line="53" pos:column="30"/></operator><name pos:line="53" pos:column="30">void<pos:position pos:line="53" pos:column="34"/></name> <operator pos:line="53" pos:column="35">*<pos:position pos:line="53" pos:column="36"/></operator><operator pos:line="53" pos:column="36">)<pos:position pos:line="53" pos:column="37"/></operator> <operator pos:line="53" pos:column="38">&amp;<pos:position pos:line="53" pos:column="43"/></operator><name pos:line="53" pos:column="39">data<pos:position pos:line="53" pos:column="43"/></name></expr></argument>)<pos:position pos:line="53" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="45"/></expr_stmt>
		<return pos:line="54" pos:column="17">return <expr><operator pos:line="54" pos:column="24">(<pos:position pos:line="54" pos:column="25"/></operator><name pos:line="54" pos:column="25">status<pos:position pos:line="54" pos:column="31"/></name><operator pos:line="54" pos:column="31">)<pos:position pos:line="54" pos:column="32"/></operator></expr>;<pos:position pos:line="54" pos:column="33"/></return>
	}<pos:position pos:line="55" pos:column="10"/></block></then></if>

	<expr_stmt><expr><operator pos:line="57" pos:column="9">*<pos:position pos:line="57" pos:column="10"/></operator><name pos:line="57" pos:column="10">user_data<pos:position pos:line="57" pos:column="19"/></name> <operator pos:line="57" pos:column="20">=<pos:position pos:line="57" pos:column="21"/></operator> <name pos:line="57" pos:column="22">data<pos:position pos:line="57" pos:column="26"/></name></expr>;<pos:position pos:line="57" pos:column="27"/></expr_stmt>
	<return pos:line="58" pos:column="9">return <expr><operator pos:line="58" pos:column="16">(<pos:position pos:line="58" pos:column="17"/></operator><literal type="number" pos:line="58" pos:column="17">0<pos:position pos:line="58" pos:column="18"/></literal><operator pos:line="58" pos:column="18">)<pos:position pos:line="58" pos:column="19"/></operator></expr>;<pos:position pos:line="58" pos:column="20"/></return>
}<pos:position pos:line="59" pos:column="2"/></block></function></unit>

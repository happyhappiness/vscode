<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_468_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">fscache_read_stats_file<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">FILE<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">fh<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list> <block pos:line="1" pos:column="47">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">char<pos:position pos:line="2" pos:column="7"/></name></type> <name><name pos:line="2" pos:column="8">section<pos:position pos:line="2" pos:column="15"/></name><index pos:line="2" pos:column="15">[<expr><name pos:line="2" pos:column="16">DATA_MAX_NAME_LEN<pos:position pos:line="2" pos:column="33"/></name></expr>]<pos:position pos:line="2" pos:column="34"/></index></name></decl>;<pos:position pos:line="2" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">section_len<pos:position pos:line="3" pos:column="21"/></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">linebuffer<pos:position pos:line="5" pos:column="18"/></name><index pos:line="5" pos:column="18">[<expr><name pos:line="5" pos:column="19">BUFSIZE<pos:position pos:line="5" pos:column="26"/></name></expr>]<pos:position pos:line="5" pos:column="27"/></index></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>

  <comment type="block" pos:line="7" pos:column="3">/*
   *  cat /proc/fs/fscache/stats
   *      FS-Cache statistics
   *      Cookies: idx=2 dat=0 spc=0
   *      Objects: alc=0 nal=0 avl=0 ded=0
   *      ChkAux : non=0 ok=0 upd=0 obs=0
   *      Pages  : mrk=0 unc=0
   *      Acquire: n=2 nul=0 noc=0 ok=2 nbf=0 oom=0
   *      Lookups: n=0 neg=0 pos=0 crt=0
   *      Updates: n=0 nul=0 run=0
   *      Relinqs: n=0 nul=0 wcr=0
   *      AttrChg: n=0 ok=0 nbf=0 oom=0 run=0
   *      Allocs : n=0 ok=0 wt=0 nbf=0
   *      Allocs : ops=0 owt=0
   *      Retrvls: n=0 ok=0 wt=0 nod=0 nbf=0 int=0 oom=0
   *      Retrvls: ops=0 owt=0
   *      Stores : n=0 ok=0 agn=0 nbf=0 oom=0
   *      Stores : ops=0 run=0
   *      Ops    : pend=0 run=0 enq=0
   *      Ops    : dfr=0 rel=0 gc=0
   */</comment>

  <comment type="block" pos:line="29" pos:column="3">/* Read file line by line */</comment>
  <while pos:line="30" pos:column="3">while <condition pos:line="30" pos:column="9">(<expr><call><name pos:line="30" pos:column="10">fgets<pos:position pos:line="30" pos:column="15"/></name><argument_list pos:line="30" pos:column="15">(<argument><expr><name pos:line="30" pos:column="16">linebuffer<pos:position pos:line="30" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="28">sizeof<argument_list pos:line="30" pos:column="34">(<argument><expr><name pos:line="30" pos:column="35">linebuffer<pos:position pos:line="30" pos:column="45"/></name></expr></argument>)<pos:position pos:line="30" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="30" pos:column="48">fh<pos:position pos:line="30" pos:column="50"/></name></expr></argument>)<pos:position pos:line="30" pos:column="51"/></argument_list></call> <operator pos:line="30" pos:column="52">!=<pos:position pos:line="30" pos:column="54"/></operator> <name pos:line="30" pos:column="55">NULL<pos:position pos:line="30" pos:column="59"/></name></expr>)<pos:position pos:line="30" pos:column="60"/></condition> <block pos:line="30" pos:column="61">{
    <decl_stmt><decl><type><name pos:line="31" pos:column="5">char<pos:position pos:line="31" pos:column="9"/></name> <modifier pos:line="31" pos:column="10">*<pos:position pos:line="31" pos:column="11"/></modifier></type><name pos:line="31" pos:column="11">lineptr<pos:position pos:line="31" pos:column="18"/></name></decl>;<pos:position pos:line="31" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="32" pos:column="5">char<pos:position pos:line="32" pos:column="9"/></name> <modifier pos:line="32" pos:column="10">*<pos:position pos:line="32" pos:column="11"/></modifier></type><name><name pos:line="32" pos:column="11">fields<pos:position pos:line="32" pos:column="17"/></name><index pos:line="32" pos:column="17">[<expr><literal type="number" pos:line="32" pos:column="18">32<pos:position pos:line="32" pos:column="20"/></literal></expr>]<pos:position pos:line="32" pos:column="21"/></index></name></decl>;<pos:position pos:line="32" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="33" pos:column="5">int<pos:position pos:line="33" pos:column="8"/></name></type> <name pos:line="33" pos:column="9">fields_num<pos:position pos:line="33" pos:column="19"/></name></decl>;<pos:position pos:line="33" pos:column="20"/></decl_stmt>

    <comment type="block" pos:line="35" pos:column="5">/* Find the colon and replace it with a null byte */</comment>
    <expr_stmt><expr><name pos:line="36" pos:column="5">lineptr<pos:position pos:line="36" pos:column="12"/></name> <operator pos:line="36" pos:column="13">=<pos:position pos:line="36" pos:column="14"/></operator> <call><name pos:line="36" pos:column="15">strchr<pos:position pos:line="36" pos:column="21"/></name><argument_list pos:line="36" pos:column="21">(<argument><expr><name pos:line="36" pos:column="22">linebuffer<pos:position pos:line="36" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="36" pos:column="34">':'<pos:position pos:line="36" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="39"/></expr_stmt>
    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name pos:line="37" pos:column="9">lineptr<pos:position pos:line="37" pos:column="16"/></name> <operator pos:line="37" pos:column="17">==<pos:position pos:line="37" pos:column="19"/></operator> <name pos:line="37" pos:column="20">NULL<pos:position pos:line="37" pos:column="24"/></name></expr>)<pos:position pos:line="37" pos:column="25"/></condition><then pos:line="37" pos:column="25">
      <block type="pseudo"><continue pos:line="38" pos:column="7">continue;<pos:position pos:line="38" pos:column="16"/></continue></block></then></if>
    <expr_stmt><expr><operator pos:line="39" pos:column="5">*<pos:position pos:line="39" pos:column="6"/></operator><name pos:line="39" pos:column="6">lineptr<pos:position pos:line="39" pos:column="13"/></name> <operator pos:line="39" pos:column="14">=<pos:position pos:line="39" pos:column="15"/></operator> <literal type="number" pos:line="39" pos:column="16">0<pos:position pos:line="39" pos:column="17"/></literal></expr>;<pos:position pos:line="39" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name pos:line="40" pos:column="5">lineptr<pos:position pos:line="40" pos:column="12"/></name><operator pos:line="40" pos:column="12">++<pos:position pos:line="40" pos:column="14"/></operator></expr>;<pos:position pos:line="40" pos:column="15"/></expr_stmt>

    <comment type="block" pos:line="42" pos:column="5">/* Copy and clean up the section name */</comment>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">sstrncpy<pos:position pos:line="43" pos:column="13"/></name><argument_list pos:line="43" pos:column="13">(<argument><expr><name pos:line="43" pos:column="14">section<pos:position pos:line="43" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="23">linebuffer<pos:position pos:line="43" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="43" pos:column="35">sizeof<argument_list pos:line="43" pos:column="41">(<argument><expr><name pos:line="43" pos:column="42">section<pos:position pos:line="43" pos:column="49"/></name></expr></argument>)<pos:position pos:line="43" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="43" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><name pos:line="44" pos:column="5">section_len<pos:position pos:line="44" pos:column="16"/></name> <operator pos:line="44" pos:column="17">=<pos:position pos:line="44" pos:column="18"/></operator> <call><name pos:line="44" pos:column="19">strlen<pos:position pos:line="44" pos:column="25"/></name><argument_list pos:line="44" pos:column="25">(<argument><expr><name pos:line="44" pos:column="26">section<pos:position pos:line="44" pos:column="33"/></name></expr></argument>)<pos:position pos:line="44" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="35"/></expr_stmt>
    <while pos:line="45" pos:column="5">while <condition pos:line="45" pos:column="11">(<expr><operator pos:line="45" pos:column="12">(<pos:position pos:line="45" pos:column="13"/></operator><name pos:line="45" pos:column="13">section_len<pos:position pos:line="45" pos:column="24"/></name> <operator pos:line="45" pos:column="25">&gt;<pos:position pos:line="45" pos:column="29"/></operator> <literal type="number" pos:line="45" pos:column="27">0<pos:position pos:line="45" pos:column="28"/></literal><operator pos:line="45" pos:column="28">)<pos:position pos:line="45" pos:column="29"/></operator> <operator pos:line="45" pos:column="30">&amp;&amp;<pos:position pos:line="45" pos:column="40"/></operator> <call><name pos:line="45" pos:column="33">isspace<pos:position pos:line="45" pos:column="40"/></name><argument_list pos:line="45" pos:column="40">(<argument><expr><operator pos:line="45" pos:column="41">(<pos:position pos:line="45" pos:column="42"/></operator><name pos:line="45" pos:column="42">int<pos:position pos:line="45" pos:column="45"/></name><operator pos:line="45" pos:column="45">)<pos:position pos:line="45" pos:column="46"/></operator><name><name pos:line="45" pos:column="46">section<pos:position pos:line="45" pos:column="53"/></name><index pos:line="45" pos:column="53">[<expr><name pos:line="45" pos:column="54">section_len<pos:position pos:line="45" pos:column="65"/></name> <operator pos:line="45" pos:column="66">-<pos:position pos:line="45" pos:column="67"/></operator> <literal type="number" pos:line="45" pos:column="68">1<pos:position pos:line="45" pos:column="69"/></literal></expr>]<pos:position pos:line="45" pos:column="70"/></index></name></expr></argument>)<pos:position pos:line="45" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="72"/></condition> <block pos:line="45" pos:column="73">{
      <expr_stmt><expr><name pos:line="46" pos:column="7">section_len<pos:position pos:line="46" pos:column="18"/></name><operator pos:line="46" pos:column="18">--<pos:position pos:line="46" pos:column="20"/></operator></expr>;<pos:position pos:line="46" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="47" pos:column="7">section<pos:position pos:line="47" pos:column="14"/></name><index pos:line="47" pos:column="14">[<expr><name pos:line="47" pos:column="15">section_len<pos:position pos:line="47" pos:column="26"/></name></expr>]<pos:position pos:line="47" pos:column="27"/></index></name> <operator pos:line="47" pos:column="28">=<pos:position pos:line="47" pos:column="29"/></operator> <literal type="number" pos:line="47" pos:column="30">0<pos:position pos:line="47" pos:column="31"/></literal></expr>;<pos:position pos:line="47" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="48" pos:column="6"/></block></while>
    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><name pos:line="49" pos:column="9">section_len<pos:position pos:line="49" pos:column="20"/></name> <operator pos:line="49" pos:column="21">==<pos:position pos:line="49" pos:column="23"/></operator> <literal type="number" pos:line="49" pos:column="24">0<pos:position pos:line="49" pos:column="25"/></literal></expr>)<pos:position pos:line="49" pos:column="26"/></condition><then pos:line="49" pos:column="26">
      <block type="pseudo"><continue pos:line="50" pos:column="7">continue;<pos:position pos:line="50" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="52" pos:column="5">fields_num<pos:position pos:line="52" pos:column="15"/></name> <operator pos:line="52" pos:column="16">=<pos:position pos:line="52" pos:column="17"/></operator> <call><name pos:line="52" pos:column="18">strsplit<pos:position pos:line="52" pos:column="26"/></name><argument_list pos:line="52" pos:column="26">(<argument><expr><name pos:line="52" pos:column="27">lineptr<pos:position pos:line="52" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="36">fields<pos:position pos:line="52" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="52" pos:column="44">STATIC_ARRAY_SIZE<pos:position pos:line="52" pos:column="61"/></name><argument_list pos:line="52" pos:column="61">(<argument><expr><name pos:line="52" pos:column="62">fields<pos:position pos:line="52" pos:column="68"/></name></expr></argument>)<pos:position pos:line="52" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="52" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="71"/></expr_stmt>
    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><name pos:line="53" pos:column="9">fields_num<pos:position pos:line="53" pos:column="19"/></name> <operator pos:line="53" pos:column="20">&lt;=<pos:position pos:line="53" pos:column="25"/></operator> <literal type="number" pos:line="53" pos:column="23">0<pos:position pos:line="53" pos:column="24"/></literal></expr>)<pos:position pos:line="53" pos:column="25"/></condition><then pos:line="53" pos:column="25">
      <block type="pseudo"><continue pos:line="54" pos:column="7">continue;<pos:position pos:line="54" pos:column="16"/></continue></block></then></if>

    <for pos:line="56" pos:column="5">for <control pos:line="56" pos:column="9">(<init><decl><type><name pos:line="56" pos:column="10">int<pos:position pos:line="56" pos:column="13"/></name></type> <name pos:line="56" pos:column="14">i<pos:position pos:line="56" pos:column="15"/></name> <init pos:line="56" pos:column="16">= <expr><literal type="number" pos:line="56" pos:column="18">0<pos:position pos:line="56" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="56" pos:column="20"/></init> <condition><expr><name pos:line="56" pos:column="21">i<pos:position pos:line="56" pos:column="22"/></name> <operator pos:line="56" pos:column="23">&lt;<pos:position pos:line="56" pos:column="27"/></operator> <name pos:line="56" pos:column="25">fields_num<pos:position pos:line="56" pos:column="35"/></name></expr>;<pos:position pos:line="56" pos:column="36"/></condition> <incr><expr><name pos:line="56" pos:column="37">i<pos:position pos:line="56" pos:column="38"/></name><operator pos:line="56" pos:column="38">++<pos:position pos:line="56" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="56" pos:column="41"/></control> <block pos:line="56" pos:column="42">{
      <decl_stmt><decl><type><name pos:line="57" pos:column="7">char<pos:position pos:line="57" pos:column="11"/></name> <modifier pos:line="57" pos:column="12">*<pos:position pos:line="57" pos:column="13"/></modifier></type><name pos:line="57" pos:column="13">field_name<pos:position pos:line="57" pos:column="23"/></name></decl>;<pos:position pos:line="57" pos:column="24"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="58" pos:column="7">char<pos:position pos:line="58" pos:column="11"/></name> <modifier pos:line="58" pos:column="12">*<pos:position pos:line="58" pos:column="13"/></modifier></type><name pos:line="58" pos:column="13">field_value_str<pos:position pos:line="58" pos:column="28"/></name></decl>;<pos:position pos:line="58" pos:column="29"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="59" pos:column="7">value_t<pos:position pos:line="59" pos:column="14"/></name></type> <name pos:line="59" pos:column="15">field_value_cnt<pos:position pos:line="59" pos:column="30"/></name></decl>;<pos:position pos:line="59" pos:column="31"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="60" pos:column="7">int<pos:position pos:line="60" pos:column="10"/></name></type> <name pos:line="60" pos:column="11">status<pos:position pos:line="60" pos:column="17"/></name></decl>;<pos:position pos:line="60" pos:column="18"/></decl_stmt>

      <expr_stmt><expr><name pos:line="62" pos:column="7">field_name<pos:position pos:line="62" pos:column="17"/></name> <operator pos:line="62" pos:column="18">=<pos:position pos:line="62" pos:column="19"/></operator> <name><name pos:line="62" pos:column="20">fields<pos:position pos:line="62" pos:column="26"/></name><index pos:line="62" pos:column="26">[<expr><name pos:line="62" pos:column="27">i<pos:position pos:line="62" pos:column="28"/></name></expr>]<pos:position pos:line="62" pos:column="29"/></index></name></expr>;<pos:position pos:line="62" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="63" pos:column="7">assert<pos:position pos:line="63" pos:column="13"/></name><argument_list pos:line="63" pos:column="13">(<argument><expr><name pos:line="63" pos:column="14">field_name<pos:position pos:line="63" pos:column="24"/></name> <operator pos:line="63" pos:column="25">!=<pos:position pos:line="63" pos:column="27"/></operator> <name pos:line="63" pos:column="28">NULL<pos:position pos:line="63" pos:column="32"/></name></expr></argument>)<pos:position pos:line="63" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="34"/></expr_stmt>

      <expr_stmt><expr><name pos:line="65" pos:column="7">field_value_str<pos:position pos:line="65" pos:column="22"/></name> <operator pos:line="65" pos:column="23">=<pos:position pos:line="65" pos:column="24"/></operator> <call><name pos:line="65" pos:column="25">strchr<pos:position pos:line="65" pos:column="31"/></name><argument_list pos:line="65" pos:column="31">(<argument><expr><name pos:line="65" pos:column="32">field_name<pos:position pos:line="65" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="65" pos:column="44">'='<pos:position pos:line="65" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="49"/></expr_stmt>
      <if pos:line="66" pos:column="7">if <condition pos:line="66" pos:column="10">(<expr><name pos:line="66" pos:column="11">field_value_str<pos:position pos:line="66" pos:column="26"/></name> <operator pos:line="66" pos:column="27">==<pos:position pos:line="66" pos:column="29"/></operator> <name pos:line="66" pos:column="30">NULL<pos:position pos:line="66" pos:column="34"/></name></expr>)<pos:position pos:line="66" pos:column="35"/></condition><then pos:line="66" pos:column="35">
        <block type="pseudo"><continue pos:line="67" pos:column="9">continue;<pos:position pos:line="67" pos:column="18"/></continue></block></then></if>
      <expr_stmt><expr><operator pos:line="68" pos:column="7">*<pos:position pos:line="68" pos:column="8"/></operator><name pos:line="68" pos:column="8">field_value_str<pos:position pos:line="68" pos:column="23"/></name> <operator pos:line="68" pos:column="24">=<pos:position pos:line="68" pos:column="25"/></operator> <literal type="number" pos:line="68" pos:column="26">0<pos:position pos:line="68" pos:column="27"/></literal></expr>;<pos:position pos:line="68" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><name pos:line="69" pos:column="7">field_value_str<pos:position pos:line="69" pos:column="22"/></name><operator pos:line="69" pos:column="22">++<pos:position pos:line="69" pos:column="24"/></operator></expr>;<pos:position pos:line="69" pos:column="25"/></expr_stmt>

      <expr_stmt><expr><name pos:line="71" pos:column="7">status<pos:position pos:line="71" pos:column="13"/></name> <operator pos:line="71" pos:column="14">=<pos:position pos:line="71" pos:column="15"/></operator> <call><name pos:line="71" pos:column="16">parse_value<pos:position pos:line="71" pos:column="27"/></name><argument_list pos:line="71" pos:column="27">(<argument><expr><name pos:line="71" pos:column="28">field_value_str<pos:position pos:line="71" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="71" pos:column="45">&amp;<pos:position pos:line="71" pos:column="50"/></operator><name pos:line="71" pos:column="46">field_value_cnt<pos:position pos:line="71" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="63">DS_TYPE_DERIVE<pos:position pos:line="71" pos:column="77"/></name></expr></argument>)<pos:position pos:line="71" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="79"/></expr_stmt>
      <if pos:line="72" pos:column="7">if <condition pos:line="72" pos:column="10">(<expr><name pos:line="72" pos:column="11">status<pos:position pos:line="72" pos:column="17"/></name> <operator pos:line="72" pos:column="18">!=<pos:position pos:line="72" pos:column="20"/></operator> <literal type="number" pos:line="72" pos:column="21">0<pos:position pos:line="72" pos:column="22"/></literal></expr>)<pos:position pos:line="72" pos:column="23"/></condition><then pos:line="72" pos:column="23">
        <block type="pseudo"><continue pos:line="73" pos:column="9">continue;<pos:position pos:line="73" pos:column="18"/></continue></block></then></if>

      <expr_stmt><expr><call><name pos:line="75" pos:column="7">fscache_submit<pos:position pos:line="75" pos:column="21"/></name><argument_list pos:line="75" pos:column="21">(<argument><expr><name pos:line="75" pos:column="22">section<pos:position pos:line="75" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="31">field_name<pos:position pos:line="75" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="43">field_value_cnt<pos:position pos:line="75" pos:column="58"/></name></expr></argument>)<pos:position pos:line="75" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="76" pos:column="6"/></block></for>
  }<pos:position pos:line="77" pos:column="4"/></block></while> <comment type="block" pos:line="77" pos:column="5">/* while (fgets) */</comment>
}<pos:position pos:line="78" pos:column="2"/></block></function></unit>

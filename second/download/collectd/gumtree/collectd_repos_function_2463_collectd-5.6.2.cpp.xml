<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2463_collectd-5.6.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">tail_match_add_match_simple<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">cu_tail_match_t<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">obj<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="55">const<pos:position pos:line="1" pos:column="60"/></specifier> <name pos:line="1" pos:column="61">char<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">regex<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
                                <parameter><decl><type><specifier pos:line="2" pos:column="33">const<pos:position pos:line="2" pos:column="38"/></specifier> <name pos:line="2" pos:column="39">char<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">excluderegex<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="59">int<pos:position pos:line="2" pos:column="62"/></name></type> <name pos:line="2" pos:column="63">ds_type<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>,
                                <parameter><decl><type><specifier pos:line="3" pos:column="33">const<pos:position pos:line="3" pos:column="38"/></specifier> <name pos:line="3" pos:column="39">char<pos:position pos:line="3" pos:column="43"/></name> <modifier pos:line="3" pos:column="44">*<pos:position pos:line="3" pos:column="45"/></modifier></type><name pos:line="3" pos:column="45">plugin<pos:position pos:line="3" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="53">const<pos:position pos:line="3" pos:column="58"/></specifier> <name pos:line="3" pos:column="59">char<pos:position pos:line="3" pos:column="63"/></name> <modifier pos:line="3" pos:column="64">*<pos:position pos:line="3" pos:column="65"/></modifier></type><name pos:line="3" pos:column="65">plugin_instance<pos:position pos:line="3" pos:column="80"/></name></decl></parameter>,
                                <parameter><decl><type><specifier pos:line="4" pos:column="33">const<pos:position pos:line="4" pos:column="38"/></specifier> <name pos:line="4" pos:column="39">char<pos:position pos:line="4" pos:column="43"/></name> <modifier pos:line="4" pos:column="44">*<pos:position pos:line="4" pos:column="45"/></modifier></type><name pos:line="4" pos:column="45">type<pos:position pos:line="4" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="4" pos:column="51">const<pos:position pos:line="4" pos:column="56"/></specifier> <name pos:line="4" pos:column="57">char<pos:position pos:line="4" pos:column="61"/></name> <modifier pos:line="4" pos:column="62">*<pos:position pos:line="4" pos:column="63"/></modifier></type><name pos:line="4" pos:column="63">type_instance<pos:position pos:line="4" pos:column="76"/></name></decl></parameter>,
                                <parameter><decl><type><specifier pos:line="5" pos:column="33">const<pos:position pos:line="5" pos:column="38"/></specifier> <name pos:line="5" pos:column="39">cdtime_t<pos:position pos:line="5" pos:column="47"/></name></type> <name pos:line="5" pos:column="48">interval<pos:position pos:line="5" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="57"/></parameter_list> <block pos:line="5" pos:column="58">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">cu_match_t<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">match<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">cu_tail_match_simple_t<pos:position pos:line="7" pos:column="25"/></name> <modifier pos:line="7" pos:column="26">*<pos:position pos:line="7" pos:column="27"/></modifier></type><name pos:line="7" pos:column="27">user_data<pos:position pos:line="7" pos:column="36"/></name></decl>;<pos:position pos:line="7" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">status<pos:position pos:line="8" pos:column="13"/></name></decl>;<pos:position pos:line="8" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><name pos:line="10" pos:column="3">match<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">=<pos:position pos:line="10" pos:column="10"/></operator> <call><name pos:line="10" pos:column="11">match_create_simple<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">(<argument><expr><name pos:line="10" pos:column="31">regex<pos:position pos:line="10" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="38">excluderegex<pos:position pos:line="10" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="52">ds_type<pos:position pos:line="10" pos:column="59"/></name></expr></argument>)<pos:position pos:line="10" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="61"/></expr_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">match<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">==<pos:position pos:line="11" pos:column="15"/></operator> <name pos:line="11" pos:column="16">NULL<pos:position pos:line="11" pos:column="20"/></name></expr>)<pos:position pos:line="11" pos:column="21"/></condition><then pos:line="11" pos:column="21">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">(<pos:position pos:line="12" pos:column="13"/></operator><operator pos:line="12" pos:column="13">-<pos:position pos:line="12" pos:column="14"/></operator><literal type="number" pos:line="12" pos:column="14">1<pos:position pos:line="12" pos:column="15"/></literal><operator pos:line="12" pos:column="15">)<pos:position pos:line="12" pos:column="16"/></operator></expr>;<pos:position pos:line="12" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="14" pos:column="3">user_data<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <call><name pos:line="14" pos:column="15">calloc<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><literal type="number" pos:line="14" pos:column="22">1<pos:position pos:line="14" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="25">sizeof<argument_list pos:line="14" pos:column="31">(<argument><expr><operator pos:line="14" pos:column="32">*<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="33">user_data<pos:position pos:line="14" pos:column="42"/></name></expr></argument>)<pos:position pos:line="14" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="45"/></expr_stmt>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name pos:line="15" pos:column="7">user_data<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">==<pos:position pos:line="15" pos:column="19"/></operator> <name pos:line="15" pos:column="20">NULL<pos:position pos:line="15" pos:column="24"/></name></expr>)<pos:position pos:line="15" pos:column="25"/></condition><then pos:line="15" pos:column="25"> <block pos:line="15" pos:column="26">{
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">match_destroy<pos:position pos:line="16" pos:column="18"/></name><argument_list pos:line="16" pos:column="18">(<argument><expr><name pos:line="16" pos:column="19">match<pos:position pos:line="16" pos:column="24"/></name></expr></argument>)<pos:position pos:line="16" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="26"/></expr_stmt>
    <return pos:line="17" pos:column="5">return <expr><operator pos:line="17" pos:column="12">(<pos:position pos:line="17" pos:column="13"/></operator><operator pos:line="17" pos:column="13">-<pos:position pos:line="17" pos:column="14"/></operator><literal type="number" pos:line="17" pos:column="14">1<pos:position pos:line="17" pos:column="15"/></literal><operator pos:line="17" pos:column="15">)<pos:position pos:line="17" pos:column="16"/></operator></expr>;<pos:position pos:line="17" pos:column="17"/></return>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="20" pos:column="3">sstrncpy<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><name><name pos:line="20" pos:column="12">user_data<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">-&gt;<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="23">plugin<pos:position pos:line="20" pos:column="29"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="31">plugin<pos:position pos:line="20" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="39">sizeof<argument_list pos:line="20" pos:column="45">(<argument><expr><name><name pos:line="20" pos:column="46">user_data<pos:position pos:line="20" pos:column="55"/></name><operator pos:line="20" pos:column="55">-&gt;<pos:position pos:line="20" pos:column="60"/></operator><name pos:line="20" pos:column="57">plugin<pos:position pos:line="20" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="66"/></expr_stmt>
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><name pos:line="21" pos:column="7">plugin_instance<pos:position pos:line="21" pos:column="22"/></name> <operator pos:line="21" pos:column="23">!=<pos:position pos:line="21" pos:column="25"/></operator> <name pos:line="21" pos:column="26">NULL<pos:position pos:line="21" pos:column="30"/></name></expr>)<pos:position pos:line="21" pos:column="31"/></condition><then pos:line="21" pos:column="31">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="5">sstrncpy<pos:position pos:line="22" pos:column="13"/></name><argument_list pos:line="22" pos:column="13">(<argument><expr><name><name pos:line="22" pos:column="14">user_data<pos:position pos:line="22" pos:column="23"/></name><operator pos:line="22" pos:column="23">-&gt;<pos:position pos:line="22" pos:column="28"/></operator><name pos:line="22" pos:column="25">plugin_instance<pos:position pos:line="22" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="42">plugin_instance<pos:position pos:line="22" pos:column="57"/></name></expr></argument>,
             <argument><expr><sizeof pos:line="23" pos:column="14">sizeof<argument_list pos:line="23" pos:column="20">(<argument><expr><name><name pos:line="23" pos:column="21">user_data<pos:position pos:line="23" pos:column="30"/></name><operator pos:line="23" pos:column="30">-&gt;<pos:position pos:line="23" pos:column="35"/></operator><name pos:line="23" pos:column="32">plugin_instance<pos:position pos:line="23" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="50"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="25" pos:column="3">sstrncpy<pos:position pos:line="25" pos:column="11"/></name><argument_list pos:line="25" pos:column="11">(<argument><expr><name><name pos:line="25" pos:column="12">user_data<pos:position pos:line="25" pos:column="21"/></name><operator pos:line="25" pos:column="21">-&gt;<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="23">type<pos:position pos:line="25" pos:column="27"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="29">type<pos:position pos:line="25" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="35">sizeof<argument_list pos:line="25" pos:column="41">(<argument><expr><name><name pos:line="25" pos:column="42">user_data<pos:position pos:line="25" pos:column="51"/></name><operator pos:line="25" pos:column="51">-&gt;<pos:position pos:line="25" pos:column="56"/></operator><name pos:line="25" pos:column="53">type<pos:position pos:line="25" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="60"/></expr_stmt>
  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><name pos:line="26" pos:column="7">type_instance<pos:position pos:line="26" pos:column="20"/></name> <operator pos:line="26" pos:column="21">!=<pos:position pos:line="26" pos:column="23"/></operator> <name pos:line="26" pos:column="24">NULL<pos:position pos:line="26" pos:column="28"/></name></expr>)<pos:position pos:line="26" pos:column="29"/></condition><then pos:line="26" pos:column="29">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="5">sstrncpy<pos:position pos:line="27" pos:column="13"/></name><argument_list pos:line="27" pos:column="13">(<argument><expr><name><name pos:line="27" pos:column="14">user_data<pos:position pos:line="27" pos:column="23"/></name><operator pos:line="27" pos:column="23">-&gt;<pos:position pos:line="27" pos:column="28"/></operator><name pos:line="27" pos:column="25">type_instance<pos:position pos:line="27" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="40">type_instance<pos:position pos:line="27" pos:column="53"/></name></expr></argument>,
             <argument><expr><sizeof pos:line="28" pos:column="14">sizeof<argument_list pos:line="28" pos:column="20">(<argument><expr><name><name pos:line="28" pos:column="21">user_data<pos:position pos:line="28" pos:column="30"/></name><operator pos:line="28" pos:column="30">-&gt;<pos:position pos:line="28" pos:column="35"/></operator><name pos:line="28" pos:column="32">type_instance<pos:position pos:line="28" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="48"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name><name pos:line="30" pos:column="3">user_data<pos:position pos:line="30" pos:column="12"/></name><operator pos:line="30" pos:column="12">-&gt;<pos:position pos:line="30" pos:column="17"/></operator><name pos:line="30" pos:column="14">interval<pos:position pos:line="30" pos:column="22"/></name></name> <operator pos:line="30" pos:column="23">=<pos:position pos:line="30" pos:column="24"/></operator> <name pos:line="30" pos:column="25">interval<pos:position pos:line="30" pos:column="33"/></name></expr>;<pos:position pos:line="30" pos:column="34"/></expr_stmt>

  <expr_stmt><expr><name pos:line="32" pos:column="3">status<pos:position pos:line="32" pos:column="9"/></name> <operator pos:line="32" pos:column="10">=<pos:position pos:line="32" pos:column="11"/></operator>
      <call><name pos:line="33" pos:column="7">tail_match_add_match<pos:position pos:line="33" pos:column="27"/></name><argument_list pos:line="33" pos:column="27">(<argument><expr><name pos:line="33" pos:column="28">obj<pos:position pos:line="33" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="33">match<pos:position pos:line="33" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="40">simple_submit_match<pos:position pos:line="33" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="61">user_data<pos:position pos:line="33" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="72">free<pos:position pos:line="33" pos:column="76"/></name></expr></argument>)<pos:position pos:line="33" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="78"/></expr_stmt>

  <if pos:line="35" pos:column="3">if <condition pos:line="35" pos:column="6">(<expr><name pos:line="35" pos:column="7">status<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">!=<pos:position pos:line="35" pos:column="16"/></operator> <literal type="number" pos:line="35" pos:column="17">0<pos:position pos:line="35" pos:column="18"/></literal></expr>)<pos:position pos:line="35" pos:column="19"/></condition><then pos:line="35" pos:column="19"> <block pos:line="35" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">match_destroy<pos:position pos:line="36" pos:column="18"/></name><argument_list pos:line="36" pos:column="18">(<argument><expr><name pos:line="36" pos:column="19">match<pos:position pos:line="36" pos:column="24"/></name></expr></argument>)<pos:position pos:line="36" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">sfree<pos:position pos:line="37" pos:column="10"/></name><argument_list pos:line="37" pos:column="10">(<argument><expr><name pos:line="37" pos:column="11">user_data<pos:position pos:line="37" pos:column="20"/></name></expr></argument>)<pos:position pos:line="37" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if>

  <return pos:line="40" pos:column="3">return <expr><operator pos:line="40" pos:column="10">(<pos:position pos:line="40" pos:column="11"/></operator><name pos:line="40" pos:column="11">status<pos:position pos:line="40" pos:column="17"/></name><operator pos:line="40" pos:column="17">)<pos:position pos:line="40" pos:column="18"/></operator></expr>;<pos:position pos:line="40" pos:column="19"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

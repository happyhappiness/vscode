<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1839_collectd-5.0.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">YY_BUFFER_STATE<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">yy_scan_bytes<pos:position pos:line="1" pos:column="30"/></name>  <parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">yyconst<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">char<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type> <name pos:line="1" pos:column="48">yybytes<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">int<pos:position pos:line="1" pos:column="60"/></name></type>  <name pos:line="1" pos:column="62">_yybytes_len<pos:position pos:line="1" pos:column="74"/></name></decl></parameter> )<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">YY_BUFFER_STATE<pos:position pos:line="3" pos:column="24"/></name></type> <name pos:line="3" pos:column="25">b<pos:position pos:line="3" pos:column="26"/></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">buf<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">yy_size_t<pos:position pos:line="5" pos:column="18"/></name></type> <name pos:line="5" pos:column="19">n<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">i<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
    
	<comment type="block" pos:line="8" pos:column="9">/* Get memory for full buffer, including space for trailing EOB's. */</comment>
	<expr_stmt><expr><name pos:line="9" pos:column="9">n<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">=<pos:position pos:line="9" pos:column="12"/></operator> <name pos:line="9" pos:column="13">_yybytes_len<pos:position pos:line="9" pos:column="25"/></name> <operator pos:line="9" pos:column="26">+<pos:position pos:line="9" pos:column="27"/></operator> <literal type="number" pos:line="9" pos:column="28">2<pos:position pos:line="9" pos:column="29"/></literal></expr>;<pos:position pos:line="9" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name pos:line="10" pos:column="9">buf<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <operator pos:line="10" pos:column="15">(<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="16">char<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">*<pos:position pos:line="10" pos:column="22"/></operator><operator pos:line="10" pos:column="22">)<pos:position pos:line="10" pos:column="23"/></operator> <call><name pos:line="10" pos:column="24">yyalloc<pos:position pos:line="10" pos:column="31"/></name><argument_list pos:line="10" pos:column="31">(<argument><expr><name pos:line="10" pos:column="32">n<pos:position pos:line="10" pos:column="33"/></name></expr></argument>  )<pos:position pos:line="10" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="37"/></expr_stmt>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">( <expr><operator pos:line="11" pos:column="14">!<pos:position pos:line="11" pos:column="15"/></operator> <name pos:line="11" pos:column="16">buf<pos:position pos:line="11" pos:column="19"/></name></expr> )<pos:position pos:line="11" pos:column="21"/></condition><then pos:line="11" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="17">YY_FATAL_ERROR<pos:position pos:line="12" pos:column="31"/></name><argument_list pos:line="12" pos:column="31">( <argument><expr><literal type="string" pos:line="12" pos:column="33">"out of dynamic memory in yy_scan_bytes()"<pos:position pos:line="12" pos:column="75"/></literal></expr></argument> )<pos:position pos:line="12" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="78"/></expr_stmt></block></then></if>

	<for pos:line="14" pos:column="9">for <control pos:line="14" pos:column="13">( <init><expr><name pos:line="14" pos:column="15">i<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator> <literal type="number" pos:line="14" pos:column="19">0<pos:position pos:line="14" pos:column="20"/></literal></expr>;<pos:position pos:line="14" pos:column="21"/></init> <condition><expr><name pos:line="14" pos:column="22">i<pos:position pos:line="14" pos:column="23"/></name> <operator pos:line="14" pos:column="24">&lt;<pos:position pos:line="14" pos:column="28"/></operator> <name pos:line="14" pos:column="26">_yybytes_len<pos:position pos:line="14" pos:column="38"/></name></expr>;<pos:position pos:line="14" pos:column="39"/></condition> <incr><expr><operator pos:line="14" pos:column="40">++<pos:position pos:line="14" pos:column="42"/></operator><name pos:line="14" pos:column="42">i<pos:position pos:line="14" pos:column="43"/></name></expr></incr> )<pos:position pos:line="14" pos:column="45"/></control>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="15" pos:column="17">buf<pos:position pos:line="15" pos:column="20"/></name><index pos:line="15" pos:column="20">[<expr><name pos:line="15" pos:column="21">i<pos:position pos:line="15" pos:column="22"/></name></expr>]<pos:position pos:line="15" pos:column="23"/></index></name> <operator pos:line="15" pos:column="24">=<pos:position pos:line="15" pos:column="25"/></operator> <name><name pos:line="15" pos:column="26">yybytes<pos:position pos:line="15" pos:column="33"/></name><index pos:line="15" pos:column="33">[<expr><name pos:line="15" pos:column="34">i<pos:position pos:line="15" pos:column="35"/></name></expr>]<pos:position pos:line="15" pos:column="36"/></index></name></expr>;<pos:position pos:line="15" pos:column="37"/></expr_stmt></block></for>

	<expr_stmt><expr><name><name pos:line="17" pos:column="9">buf<pos:position pos:line="17" pos:column="12"/></name><index pos:line="17" pos:column="12">[<expr><name pos:line="17" pos:column="13">_yybytes_len<pos:position pos:line="17" pos:column="25"/></name></expr>]<pos:position pos:line="17" pos:column="26"/></index></name> <operator pos:line="17" pos:column="27">=<pos:position pos:line="17" pos:column="28"/></operator> <name><name pos:line="17" pos:column="29">buf<pos:position pos:line="17" pos:column="32"/></name><index pos:line="17" pos:column="32">[<expr><name pos:line="17" pos:column="33">_yybytes_len<pos:position pos:line="17" pos:column="45"/></name><operator pos:line="17" pos:column="45">+<pos:position pos:line="17" pos:column="46"/></operator><literal type="number" pos:line="17" pos:column="46">1<pos:position pos:line="17" pos:column="47"/></literal></expr>]<pos:position pos:line="17" pos:column="48"/></index></name> <operator pos:line="17" pos:column="49">=<pos:position pos:line="17" pos:column="50"/></operator> <name pos:line="17" pos:column="51">YY_END_OF_BUFFER_CHAR<pos:position pos:line="17" pos:column="72"/></name></expr>;<pos:position pos:line="17" pos:column="73"/></expr_stmt>

	<expr_stmt><expr><name pos:line="19" pos:column="9">b<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">=<pos:position pos:line="19" pos:column="12"/></operator> <call><name pos:line="19" pos:column="13">yy_scan_buffer<pos:position pos:line="19" pos:column="27"/></name><argument_list pos:line="19" pos:column="27">(<argument><expr><name pos:line="19" pos:column="28">buf<pos:position pos:line="19" pos:column="31"/></name></expr></argument>,<argument><expr><name pos:line="19" pos:column="32">n<pos:position pos:line="19" pos:column="33"/></name></expr></argument> )<pos:position pos:line="19" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="36"/></expr_stmt>
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">( <expr><operator pos:line="20" pos:column="14">!<pos:position pos:line="20" pos:column="15"/></operator> <name pos:line="20" pos:column="16">b<pos:position pos:line="20" pos:column="17"/></name></expr> )<pos:position pos:line="20" pos:column="19"/></condition><then pos:line="20" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="17">YY_FATAL_ERROR<pos:position pos:line="21" pos:column="31"/></name><argument_list pos:line="21" pos:column="31">( <argument><expr><literal type="string" pos:line="21" pos:column="33">"bad buffer in yy_scan_bytes()"<pos:position pos:line="21" pos:column="64"/></literal></expr></argument> )<pos:position pos:line="21" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="67"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="23" pos:column="9">/* It's okay to grow etc. this buffer, and we should throw it
	 * away when we're done.
	 */</comment>
	<expr_stmt><expr><name><name pos:line="26" pos:column="9">b<pos:position pos:line="26" pos:column="10"/></name><operator pos:line="26" pos:column="10">-&gt;<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="12">yy_is_our_buffer<pos:position pos:line="26" pos:column="28"/></name></name> <operator pos:line="26" pos:column="29">=<pos:position pos:line="26" pos:column="30"/></operator> <literal type="number" pos:line="26" pos:column="31">1<pos:position pos:line="26" pos:column="32"/></literal></expr>;<pos:position pos:line="26" pos:column="33"/></expr_stmt>

	<return pos:line="28" pos:column="9">return <expr><name pos:line="28" pos:column="16">b<pos:position pos:line="28" pos:column="17"/></name></expr>;<pos:position pos:line="28" pos:column="18"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

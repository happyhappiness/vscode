<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_554_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">MPL3115_read<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">double<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type> <name pos:line="1" pos:column="34">pressure<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">double<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type> <name pos:line="1" pos:column="53">temperature<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">__s32<pos:position pos:line="3" pos:column="10"/></name></type> <name pos:line="3" pos:column="11">res<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">__s32<pos:position pos:line="4" pos:column="10"/></name></type> <name pos:line="4" pos:column="11">ctrl<pos:position pos:line="4" pos:column="15"/></name></decl> ;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">__u8<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">data<pos:position pos:line="5" pos:column="14"/></name><index pos:line="5" pos:column="14">[<expr><name pos:line="5" pos:column="15">MPL3115_NUM_CONV_VALS<pos:position pos:line="5" pos:column="36"/></name></expr>]<pos:position pos:line="5" pos:column="37"/></index></name></decl>;<pos:position pos:line="5" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">long<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">int<pos:position pos:line="6" pos:column="13"/></name></type> <name pos:line="6" pos:column="14">tmp_value<pos:position pos:line="6" pos:column="23"/></name> <init pos:line="6" pos:column="24">= <expr><literal type="number" pos:line="6" pos:column="26">0<pos:position pos:line="6" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name></type> <name><name pos:line="7" pos:column="10">errbuf<pos:position pos:line="7" pos:column="16"/></name><index pos:line="7" pos:column="16">[<expr><literal type="number" pos:line="7" pos:column="17">1024<pos:position pos:line="7" pos:column="21"/></literal></expr>]<pos:position pos:line="7" pos:column="22"/></index></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>

    <comment type="block" pos:line="9" pos:column="5">/* Set Active - activate the device from standby */</comment>
    <expr_stmt><expr><name pos:line="10" pos:column="5">res<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">=<pos:position pos:line="10" pos:column="10"/></operator> <call><name pos:line="10" pos:column="11">i2c_smbus_read_byte_data<pos:position pos:line="10" pos:column="35"/></name><argument_list pos:line="10" pos:column="35">(<argument><expr><name pos:line="10" pos:column="36">i2c_bus_fd<pos:position pos:line="10" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="48">MPL3115_REG_CTRL_REG1<pos:position pos:line="10" pos:column="69"/></name></expr></argument>)<pos:position pos:line="10" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="71"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">res<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">&lt;<pos:position pos:line="11" pos:column="17"/></operator> <literal type="number" pos:line="11" pos:column="15">0<pos:position pos:line="11" pos:column="16"/></literal></expr>)<pos:position pos:line="11" pos:column="17"/></condition><then pos:line="11" pos:column="17">
    <block pos:line="12" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">ERROR<pos:position pos:line="13" pos:column="14"/></name> <argument_list pos:line="13" pos:column="15">(<argument><expr><literal type="string" pos:line="13" pos:column="16">"barometer: MPL3115_read - cannot read CTRL_REG1: %s"<pos:position pos:line="13" pos:column="69"/></literal></expr></argument>,
               <argument><expr><call><name pos:line="14" pos:column="16">sstrerror<pos:position pos:line="14" pos:column="25"/></name> <argument_list pos:line="14" pos:column="26">(<argument><expr><name pos:line="14" pos:column="27">errno<pos:position pos:line="14" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="34">errbuf<pos:position pos:line="14" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="42">sizeof <argument_list pos:line="14" pos:column="49">(<argument><expr><name pos:line="14" pos:column="50">errbuf<pos:position pos:line="14" pos:column="56"/></name></expr></argument>)<pos:position pos:line="14" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="60"/></expr_stmt>
        <return pos:line="15" pos:column="9">return <expr><literal type="number" pos:line="15" pos:column="16">1<pos:position pos:line="15" pos:column="17"/></literal></expr>;<pos:position pos:line="15" pos:column="18"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="17" pos:column="5">ctrl<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">=<pos:position pos:line="17" pos:column="11"/></operator> <name pos:line="17" pos:column="12">res<pos:position pos:line="17" pos:column="15"/></name></expr>;<pos:position pos:line="17" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name pos:line="18" pos:column="5">res<pos:position pos:line="18" pos:column="8"/></name> <operator pos:line="18" pos:column="9">=<pos:position pos:line="18" pos:column="10"/></operator> <call><name pos:line="18" pos:column="11">i2c_smbus_write_byte_data<pos:position pos:line="18" pos:column="36"/></name><argument_list pos:line="18" pos:column="36">(<argument><expr><name pos:line="18" pos:column="37">i2c_bus_fd<pos:position pos:line="18" pos:column="47"/></name></expr></argument>,
                                    <argument><expr><name pos:line="19" pos:column="37">MPL3115_REG_CTRL_REG1<pos:position pos:line="19" pos:column="58"/></name></expr></argument>,
                                    <argument><expr><name pos:line="20" pos:column="37">ctrl<pos:position pos:line="20" pos:column="41"/></name> <operator pos:line="20" pos:column="42">|<pos:position pos:line="20" pos:column="43"/></operator> <name pos:line="20" pos:column="44">MPL3115_CTRL_REG1_SBYB<pos:position pos:line="20" pos:column="66"/></name></expr></argument>)<pos:position pos:line="20" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="68"/></expr_stmt>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">res<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">&lt;<pos:position pos:line="21" pos:column="17"/></operator> <literal type="number" pos:line="21" pos:column="15">0<pos:position pos:line="21" pos:column="16"/></literal></expr>)<pos:position pos:line="21" pos:column="17"/></condition><then pos:line="21" pos:column="17">
    <block pos:line="22" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">ERROR<pos:position pos:line="23" pos:column="14"/></name> <argument_list pos:line="23" pos:column="15">(<argument><expr><literal type="string" pos:line="23" pos:column="16">"barometer: MPL3115_read - problem activating: %s"<pos:position pos:line="23" pos:column="66"/></literal></expr></argument>,
               <argument><expr><call><name pos:line="24" pos:column="16">sstrerror<pos:position pos:line="24" pos:column="25"/></name> <argument_list pos:line="24" pos:column="26">(<argument><expr><name pos:line="24" pos:column="27">errno<pos:position pos:line="24" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="34">errbuf<pos:position pos:line="24" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="42">sizeof <argument_list pos:line="24" pos:column="49">(<argument><expr><name pos:line="24" pos:column="50">errbuf<pos:position pos:line="24" pos:column="56"/></name></expr></argument>)<pos:position pos:line="24" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="60"/></expr_stmt>
        <return pos:line="25" pos:column="9">return <expr><literal type="number" pos:line="25" pos:column="16">1<pos:position pos:line="25" pos:column="17"/></literal></expr>;<pos:position pos:line="25" pos:column="18"/></return>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="28" pos:column="5">/* base sleep is 5ms x OST */</comment>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">usleep<pos:position pos:line="29" pos:column="11"/></name><argument_list pos:line="29" pos:column="11">(<argument><expr><literal type="number" pos:line="29" pos:column="12">5000<pos:position pos:line="29" pos:column="16"/></literal> <operator pos:line="29" pos:column="17">*<pos:position pos:line="29" pos:column="18"/></operator> <name pos:line="29" pos:column="19">config_oversample<pos:position pos:line="29" pos:column="36"/></name></expr></argument>)<pos:position pos:line="29" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="38"/></expr_stmt>

    <comment type="block" pos:line="31" pos:column="5">/* check the flags/status if ready */</comment>
    <expr_stmt><expr><name pos:line="32" pos:column="5">res<pos:position pos:line="32" pos:column="8"/></name> <operator pos:line="32" pos:column="9">=<pos:position pos:line="32" pos:column="10"/></operator> <call><name pos:line="32" pos:column="11">i2c_smbus_read_byte_data<pos:position pos:line="32" pos:column="35"/></name><argument_list pos:line="32" pos:column="35">(<argument><expr><name pos:line="32" pos:column="36">i2c_bus_fd<pos:position pos:line="32" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="48">MPL3115_REG_STATUS<pos:position pos:line="32" pos:column="66"/></name></expr></argument>)<pos:position pos:line="32" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="68"/></expr_stmt>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name pos:line="33" pos:column="9">res<pos:position pos:line="33" pos:column="12"/></name> <operator pos:line="33" pos:column="13">&lt;<pos:position pos:line="33" pos:column="17"/></operator> <literal type="number" pos:line="33" pos:column="15">0<pos:position pos:line="33" pos:column="16"/></literal></expr>)<pos:position pos:line="33" pos:column="17"/></condition><then pos:line="33" pos:column="17">
    <block pos:line="34" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">ERROR<pos:position pos:line="35" pos:column="14"/></name> <argument_list pos:line="35" pos:column="15">(<argument><expr><literal type="string" pos:line="35" pos:column="16">"barometer: MPL3115_read - cannot read status register: %s"<pos:position pos:line="35" pos:column="75"/></literal></expr></argument>,
               <argument><expr><call><name pos:line="36" pos:column="16">sstrerror<pos:position pos:line="36" pos:column="25"/></name> <argument_list pos:line="36" pos:column="26">(<argument><expr><name pos:line="36" pos:column="27">errno<pos:position pos:line="36" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="34">errbuf<pos:position pos:line="36" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="36" pos:column="42">sizeof <argument_list pos:line="36" pos:column="49">(<argument><expr><name pos:line="36" pos:column="50">errbuf<pos:position pos:line="36" pos:column="56"/></name></expr></argument>)<pos:position pos:line="36" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="36" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="60"/></expr_stmt>
        <return pos:line="37" pos:column="9">return <expr><literal type="number" pos:line="37" pos:column="16">1<pos:position pos:line="37" pos:column="17"/></literal></expr>;<pos:position pos:line="37" pos:column="18"/></return>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <while pos:line="40" pos:column="5">while <condition pos:line="40" pos:column="11">(<expr><operator pos:line="40" pos:column="12">(<pos:position pos:line="40" pos:column="13"/></operator><name pos:line="40" pos:column="13">res<pos:position pos:line="40" pos:column="16"/></name> <operator pos:line="40" pos:column="17">&amp;<pos:position pos:line="40" pos:column="22"/></operator> <name pos:line="40" pos:column="19">MPL3115_DR_STATUS_DR<pos:position pos:line="40" pos:column="39"/></name><operator pos:line="40" pos:column="39">)<pos:position pos:line="40" pos:column="40"/></operator> <operator pos:line="40" pos:column="41">!=<pos:position pos:line="40" pos:column="43"/></operator> <name pos:line="40" pos:column="44">MPL3115_DR_STATUS_DR<pos:position pos:line="40" pos:column="64"/></name></expr>)<pos:position pos:line="40" pos:column="65"/></condition>
    <block pos:line="41" pos:column="5">{
        <comment type="block" pos:line="42" pos:column="9">/* try some extra sleep... */</comment>
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">usleep<pos:position pos:line="43" pos:column="15"/></name><argument_list pos:line="43" pos:column="15">(<argument><expr><literal type="number" pos:line="43" pos:column="16">10000<pos:position pos:line="43" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="23"/></expr_stmt>

        <comment type="block" pos:line="45" pos:column="9">/* ... and repeat the check. The conversion has to finish sooner or later. */</comment>
        <expr_stmt><expr><name pos:line="46" pos:column="9">res<pos:position pos:line="46" pos:column="12"/></name> <operator pos:line="46" pos:column="13">=<pos:position pos:line="46" pos:column="14"/></operator> <call><name pos:line="46" pos:column="15">i2c_smbus_read_byte_data<pos:position pos:line="46" pos:column="39"/></name><argument_list pos:line="46" pos:column="39">(<argument><expr><name pos:line="46" pos:column="40">i2c_bus_fd<pos:position pos:line="46" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="52">MPL3115_REG_STATUS<pos:position pos:line="46" pos:column="70"/></name></expr></argument>)<pos:position pos:line="46" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="72"/></expr_stmt>
        <if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><name pos:line="47" pos:column="13">res<pos:position pos:line="47" pos:column="16"/></name> <operator pos:line="47" pos:column="17">&lt;<pos:position pos:line="47" pos:column="21"/></operator> <literal type="number" pos:line="47" pos:column="19">0<pos:position pos:line="47" pos:column="20"/></literal></expr>)<pos:position pos:line="47" pos:column="21"/></condition><then pos:line="47" pos:column="21">
        <block pos:line="48" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="49" pos:column="13">ERROR<pos:position pos:line="49" pos:column="18"/></name> <argument_list pos:line="49" pos:column="19">(<argument><expr><literal type="string" pos:line="49" pos:column="20">"barometer: MPL3115_read - cannot read status register: %s"<pos:position pos:line="49" pos:column="79"/></literal></expr></argument>,
                   <argument><expr><call><name pos:line="50" pos:column="20">sstrerror<pos:position pos:line="50" pos:column="29"/></name> <argument_list pos:line="50" pos:column="30">(<argument><expr><name pos:line="50" pos:column="31">errno<pos:position pos:line="50" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="38">errbuf<pos:position pos:line="50" pos:column="44"/></name></expr></argument>, <argument><expr><sizeof pos:line="50" pos:column="46">sizeof <argument_list pos:line="50" pos:column="53">(<argument><expr><name pos:line="50" pos:column="54">errbuf<pos:position pos:line="50" pos:column="60"/></name></expr></argument>)<pos:position pos:line="50" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="50" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="50" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="64"/></expr_stmt>
            <return pos:line="51" pos:column="13">return <expr><literal type="number" pos:line="51" pos:column="20">1<pos:position pos:line="51" pos:column="21"/></literal></expr>;<pos:position pos:line="51" pos:column="22"/></return>
        }<pos:position pos:line="52" pos:column="10"/></block></then></if>
    }<pos:position pos:line="53" pos:column="6"/></block></while>

    <comment type="block" pos:line="55" pos:column="5">/* Now read all the data in one block. There is address autoincrement. */</comment>
    <expr_stmt><expr><name pos:line="56" pos:column="5">res<pos:position pos:line="56" pos:column="8"/></name> <operator pos:line="56" pos:column="9">=<pos:position pos:line="56" pos:column="10"/></operator> <call><name pos:line="56" pos:column="11">i2c_smbus_read_i2c_block_data<pos:position pos:line="56" pos:column="40"/></name><argument_list pos:line="56" pos:column="40">(<argument><expr><name pos:line="56" pos:column="41">i2c_bus_fd<pos:position pos:line="56" pos:column="51"/></name></expr></argument>,
                                        <argument><expr><name pos:line="57" pos:column="41">MPL3115_REG_OUT_P_MSB<pos:position pos:line="57" pos:column="62"/></name></expr></argument>,
                                        <argument><expr><name pos:line="58" pos:column="41">MPL3115_NUM_CONV_VALS<pos:position pos:line="58" pos:column="62"/></name></expr></argument>,
                                        <argument><expr><name pos:line="59" pos:column="41">data<pos:position pos:line="59" pos:column="45"/></name></expr></argument>)<pos:position pos:line="59" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="47"/></expr_stmt>
    <if pos:line="60" pos:column="5">if <condition pos:line="60" pos:column="8">(<expr><name pos:line="60" pos:column="9">res<pos:position pos:line="60" pos:column="12"/></name> <operator pos:line="60" pos:column="13">&lt;<pos:position pos:line="60" pos:column="17"/></operator> <literal type="number" pos:line="60" pos:column="15">0<pos:position pos:line="60" pos:column="16"/></literal></expr>)<pos:position pos:line="60" pos:column="17"/></condition><then pos:line="60" pos:column="17">
    <block pos:line="61" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="62" pos:column="9">ERROR<pos:position pos:line="62" pos:column="14"/></name> <argument_list pos:line="62" pos:column="15">(<argument><expr><literal type="string" pos:line="62" pos:column="16">"barometer: MPL3115_read - cannot read data registers: %s"<pos:position pos:line="62" pos:column="74"/></literal></expr></argument>,
               <argument><expr><call><name pos:line="63" pos:column="16">sstrerror<pos:position pos:line="63" pos:column="25"/></name> <argument_list pos:line="63" pos:column="26">(<argument><expr><name pos:line="63" pos:column="27">errno<pos:position pos:line="63" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="34">errbuf<pos:position pos:line="63" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="63" pos:column="42">sizeof <argument_list pos:line="63" pos:column="49">(<argument><expr><name pos:line="63" pos:column="50">errbuf<pos:position pos:line="63" pos:column="56"/></name></expr></argument>)<pos:position pos:line="63" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="63" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="63" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="60"/></expr_stmt>
        <return pos:line="64" pos:column="9">return <expr><literal type="number" pos:line="64" pos:column="16">1<pos:position pos:line="64" pos:column="17"/></literal></expr>;<pos:position pos:line="64" pos:column="18"/></return>
    }<pos:position pos:line="65" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="67" pos:column="5">tmp_value<pos:position pos:line="67" pos:column="14"/></name> <operator pos:line="67" pos:column="15">=<pos:position pos:line="67" pos:column="16"/></operator> <operator pos:line="67" pos:column="17">(<pos:position pos:line="67" pos:column="18"/></operator><name><name pos:line="67" pos:column="18">data<pos:position pos:line="67" pos:column="22"/></name><index pos:line="67" pos:column="22">[<expr><literal type="number" pos:line="67" pos:column="23">0<pos:position pos:line="67" pos:column="24"/></literal></expr>]<pos:position pos:line="67" pos:column="25"/></index></name> <operator pos:line="67" pos:column="26">&lt;&lt;<pos:position pos:line="67" pos:column="34"/></operator> <literal type="number" pos:line="67" pos:column="29">16<pos:position pos:line="67" pos:column="31"/></literal><operator pos:line="67" pos:column="31">)<pos:position pos:line="67" pos:column="32"/></operator> <operator pos:line="67" pos:column="33">|<pos:position pos:line="67" pos:column="34"/></operator> <operator pos:line="67" pos:column="35">(<pos:position pos:line="67" pos:column="36"/></operator><name><name pos:line="67" pos:column="36">data<pos:position pos:line="67" pos:column="40"/></name><index pos:line="67" pos:column="40">[<expr><literal type="number" pos:line="67" pos:column="41">1<pos:position pos:line="67" pos:column="42"/></literal></expr>]<pos:position pos:line="67" pos:column="43"/></index></name> <operator pos:line="67" pos:column="44">&lt;&lt;<pos:position pos:line="67" pos:column="52"/></operator> <literal type="number" pos:line="67" pos:column="47">8<pos:position pos:line="67" pos:column="48"/></literal><operator pos:line="67" pos:column="48">)<pos:position pos:line="67" pos:column="49"/></operator> <operator pos:line="67" pos:column="50">|<pos:position pos:line="67" pos:column="51"/></operator> <name><name pos:line="67" pos:column="52">data<pos:position pos:line="67" pos:column="56"/></name><index pos:line="67" pos:column="56">[<expr><literal type="number" pos:line="67" pos:column="57">2<pos:position pos:line="67" pos:column="58"/></literal></expr>]<pos:position pos:line="67" pos:column="59"/></index></name></expr>;<pos:position pos:line="67" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="68" pos:column="5">*<pos:position pos:line="68" pos:column="6"/></operator><name pos:line="68" pos:column="6">pressure<pos:position pos:line="68" pos:column="14"/></name> <operator pos:line="68" pos:column="15">=<pos:position pos:line="68" pos:column="16"/></operator> <operator pos:line="68" pos:column="17">(<pos:position pos:line="68" pos:column="18"/></operator><operator pos:line="68" pos:column="18">(<pos:position pos:line="68" pos:column="19"/></operator><name pos:line="68" pos:column="19">double<pos:position pos:line="68" pos:column="25"/></name><operator pos:line="68" pos:column="25">)<pos:position pos:line="68" pos:column="26"/></operator> <name pos:line="68" pos:column="27">tmp_value<pos:position pos:line="68" pos:column="36"/></name><operator pos:line="68" pos:column="36">)<pos:position pos:line="68" pos:column="37"/></operator> <operator pos:line="68" pos:column="38">/<pos:position pos:line="68" pos:column="39"/></operator> <literal type="number" pos:line="68" pos:column="40">4.0<pos:position pos:line="68" pos:column="43"/></literal> <operator pos:line="68" pos:column="44">/<pos:position pos:line="68" pos:column="45"/></operator> <literal type="number" pos:line="68" pos:column="46">16.0<pos:position pos:line="68" pos:column="50"/></literal> <operator pos:line="68" pos:column="51">/<pos:position pos:line="68" pos:column="52"/></operator> <literal type="number" pos:line="68" pos:column="53">100.0<pos:position pos:line="68" pos:column="58"/></literal></expr>;<pos:position pos:line="68" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="69" pos:column="5">DEBUG<pos:position pos:line="69" pos:column="10"/></name> <argument_list pos:line="69" pos:column="11">(<argument><expr><literal type="string" pos:line="69" pos:column="12">"barometer: MPL3115_read - absolute pressure = %lf hPa"<pos:position pos:line="69" pos:column="67"/></literal></expr></argument>, <argument><expr><operator pos:line="69" pos:column="69">*<pos:position pos:line="69" pos:column="70"/></operator><name pos:line="69" pos:column="70">pressure<pos:position pos:line="69" pos:column="78"/></name></expr></argument>)<pos:position pos:line="69" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="80"/></expr_stmt>

    <if pos:line="71" pos:column="5">if<condition pos:line="71" pos:column="7">(<expr><name><name pos:line="71" pos:column="8">data<pos:position pos:line="71" pos:column="12"/></name><index pos:line="71" pos:column="12">[<expr><literal type="number" pos:line="71" pos:column="13">3<pos:position pos:line="71" pos:column="14"/></literal></expr>]<pos:position pos:line="71" pos:column="15"/></index></name> <operator pos:line="71" pos:column="16">&gt;<pos:position pos:line="71" pos:column="20"/></operator> <literal type="number" pos:line="71" pos:column="18">0x7F<pos:position pos:line="71" pos:column="22"/></literal></expr>)<pos:position pos:line="71" pos:column="23"/></condition><then pos:line="71" pos:column="23">
    <block pos:line="72" pos:column="5">{
        <expr_stmt><expr><name><name pos:line="73" pos:column="9">data<pos:position pos:line="73" pos:column="13"/></name><index pos:line="73" pos:column="13">[<expr><literal type="number" pos:line="73" pos:column="14">3<pos:position pos:line="73" pos:column="15"/></literal></expr>]<pos:position pos:line="73" pos:column="16"/></index></name> <operator pos:line="73" pos:column="17">=<pos:position pos:line="73" pos:column="18"/></operator> <operator pos:line="73" pos:column="19">~<pos:position pos:line="73" pos:column="20"/></operator><name><name pos:line="73" pos:column="20">data<pos:position pos:line="73" pos:column="24"/></name><index pos:line="73" pos:column="24">[<expr><literal type="number" pos:line="73" pos:column="25">3<pos:position pos:line="73" pos:column="26"/></literal></expr>]<pos:position pos:line="73" pos:column="27"/></index></name> <operator pos:line="73" pos:column="28">+<pos:position pos:line="73" pos:column="29"/></operator> <literal type="number" pos:line="73" pos:column="30">1<pos:position pos:line="73" pos:column="31"/></literal></expr>;<pos:position pos:line="73" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="74" pos:column="9">*<pos:position pos:line="74" pos:column="10"/></operator><name pos:line="74" pos:column="10">temperature<pos:position pos:line="74" pos:column="21"/></name> <operator pos:line="74" pos:column="22">=<pos:position pos:line="74" pos:column="23"/></operator> <name><name pos:line="74" pos:column="24">data<pos:position pos:line="74" pos:column="28"/></name><index pos:line="74" pos:column="28">[<expr><literal type="number" pos:line="74" pos:column="29">3<pos:position pos:line="74" pos:column="30"/></literal></expr>]<pos:position pos:line="74" pos:column="31"/></index></name></expr>;<pos:position pos:line="74" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="75" pos:column="9">*<pos:position pos:line="75" pos:column="10"/></operator><name pos:line="75" pos:column="10">temperature<pos:position pos:line="75" pos:column="21"/></name> <operator pos:line="75" pos:column="22">=<pos:position pos:line="75" pos:column="23"/></operator> <operator pos:line="75" pos:column="24">-<pos:position pos:line="75" pos:column="25"/></operator> <operator pos:line="75" pos:column="26">*<pos:position pos:line="75" pos:column="27"/></operator><name pos:line="75" pos:column="27">temperature<pos:position pos:line="75" pos:column="38"/></name></expr>;<pos:position pos:line="75" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="76" pos:column="6"/></block></then>
    <else pos:line="77" pos:column="5">else
    <block pos:line="78" pos:column="5">{
        <expr_stmt><expr><operator pos:line="79" pos:column="9">*<pos:position pos:line="79" pos:column="10"/></operator><name pos:line="79" pos:column="10">temperature<pos:position pos:line="79" pos:column="21"/></name> <operator pos:line="79" pos:column="22">=<pos:position pos:line="79" pos:column="23"/></operator> <name><name pos:line="79" pos:column="24">data<pos:position pos:line="79" pos:column="28"/></name><index pos:line="79" pos:column="28">[<expr><literal type="number" pos:line="79" pos:column="29">3<pos:position pos:line="79" pos:column="30"/></literal></expr>]<pos:position pos:line="79" pos:column="31"/></index></name></expr>;<pos:position pos:line="79" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="80" pos:column="6"/></block></else></if>

    <expr_stmt><expr><operator pos:line="82" pos:column="5">*<pos:position pos:line="82" pos:column="6"/></operator><name pos:line="82" pos:column="6">temperature<pos:position pos:line="82" pos:column="17"/></name> <operator pos:line="82" pos:column="18">+=<pos:position pos:line="82" pos:column="20"/></operator> <call pos:line="82" pos:column="21">(<name pos:line="82" pos:column="22">double<pos:position pos:line="82" pos:column="28"/></name>)<argument_list pos:line="82" pos:column="29">(<argument><expr><name><name pos:line="82" pos:column="30">data<pos:position pos:line="82" pos:column="34"/></name><index pos:line="82" pos:column="34">[<expr><literal type="number" pos:line="82" pos:column="35">4<pos:position pos:line="82" pos:column="36"/></literal></expr>]<pos:position pos:line="82" pos:column="37"/></index></name></expr></argument>)<pos:position pos:line="82" pos:column="38"/></argument_list></call> <operator pos:line="82" pos:column="39">/<pos:position pos:line="82" pos:column="40"/></operator> <literal type="number" pos:line="82" pos:column="41">256.0<pos:position pos:line="82" pos:column="46"/></literal></expr>;<pos:position pos:line="82" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="83" pos:column="5">DEBUG<pos:position pos:line="83" pos:column="10"/></name> <argument_list pos:line="83" pos:column="11">(<argument><expr><literal type="string" pos:line="83" pos:column="12">"barometer: MPL3115_read - temperature = %lf C"<pos:position pos:line="83" pos:column="59"/></literal></expr></argument>, <argument><expr><operator pos:line="83" pos:column="61">*<pos:position pos:line="83" pos:column="62"/></operator><name pos:line="83" pos:column="62">temperature<pos:position pos:line="83" pos:column="73"/></name></expr></argument>)<pos:position pos:line="83" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="75"/></expr_stmt>

    <return pos:line="85" pos:column="5">return <expr><literal type="number" pos:line="85" pos:column="12">0<pos:position pos:line="85" pos:column="13"/></literal></expr>;<pos:position pos:line="85" pos:column="14"/></return>
}<pos:position pos:line="86" pos:column="2"/></block></function></unit>

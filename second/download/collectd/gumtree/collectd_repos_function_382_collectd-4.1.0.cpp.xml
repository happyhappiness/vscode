<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_382_collectd-4.1.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">avl_node_t<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">rotate_right_left<pos:position pos:line="1" pos:column="37"/></name> <parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">avl_tree_t<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">t<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">avl_node_t<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">x<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="3" pos:column="9">rotate_right<pos:position pos:line="3" pos:column="21"/></name> <argument_list pos:line="3" pos:column="22">(<argument><expr><name pos:line="3" pos:column="23">t<pos:position pos:line="3" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="3" pos:column="26">x<pos:position pos:line="3" pos:column="27"/></name><operator pos:line="3" pos:column="27">-&gt;<pos:position pos:line="3" pos:column="32"/></operator><name pos:line="3" pos:column="29">right<pos:position pos:line="3" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="36"/></expr_stmt>
	<return pos:line="4" pos:column="9">return <expr><operator pos:line="4" pos:column="16">(<pos:position pos:line="4" pos:column="17"/></operator><call><name pos:line="4" pos:column="17">rotate_left<pos:position pos:line="4" pos:column="28"/></name> <argument_list pos:line="4" pos:column="29">(<argument><expr><name pos:line="4" pos:column="30">t<pos:position pos:line="4" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="33">x<pos:position pos:line="4" pos:column="34"/></name></expr></argument>)<pos:position pos:line="4" pos:column="35"/></argument_list></call><operator pos:line="4" pos:column="35">)<pos:position pos:line="4" pos:column="36"/></operator></expr>;<pos:position pos:line="4" pos:column="37"/></return>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

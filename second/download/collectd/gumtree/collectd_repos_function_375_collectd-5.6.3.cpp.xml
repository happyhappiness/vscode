<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_375_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">net_recv<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">int<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">sockfd<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">buf<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">int<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">buflen<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list> <block pos:line="1" pos:column="57">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">uint16_t<pos:position pos:line="2" pos:column="11"/></name></type> <name pos:line="2" pos:column="12">packet_size<pos:position pos:line="2" pos:column="23"/></name></decl>;<pos:position pos:line="2" pos:column="24"/></decl_stmt>

  <comment type="block" pos:line="4" pos:column="3">/* get data size -- in short */</comment>
  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><call><name pos:line="5" pos:column="7">sread<pos:position pos:line="5" pos:column="12"/></name><argument_list pos:line="5" pos:column="12">(<argument><expr><operator pos:line="5" pos:column="13">*<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">sockfd<pos:position pos:line="5" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="22">(<pos:position pos:line="5" pos:column="23"/></operator><name pos:line="5" pos:column="23">void<pos:position pos:line="5" pos:column="27"/></name> <operator pos:line="5" pos:column="28">*<pos:position pos:line="5" pos:column="29"/></operator><operator pos:line="5" pos:column="29">)<pos:position pos:line="5" pos:column="30"/></operator><operator pos:line="5" pos:column="30">&amp;<pos:position pos:line="5" pos:column="35"/></operator><name pos:line="5" pos:column="31">packet_size<pos:position pos:line="5" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="44">sizeof<argument_list pos:line="5" pos:column="50">(<argument><expr><name pos:line="5" pos:column="51">packet_size<pos:position pos:line="5" pos:column="62"/></name></expr></argument>)<pos:position pos:line="5" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="64"/></argument_list></call> <operator pos:line="5" pos:column="65">!=<pos:position pos:line="5" pos:column="67"/></operator> <literal type="number" pos:line="5" pos:column="68">0<pos:position pos:line="5" pos:column="69"/></literal></expr>)<pos:position pos:line="5" pos:column="70"/></condition><then pos:line="5" pos:column="70"> <block pos:line="5" pos:column="71">{
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">close<pos:position pos:line="6" pos:column="10"/></name><argument_list pos:line="6" pos:column="10">(<argument><expr><operator pos:line="6" pos:column="11">*<pos:position pos:line="6" pos:column="12"/></operator><name pos:line="6" pos:column="12">sockfd<pos:position pos:line="6" pos:column="18"/></name></expr></argument>)<pos:position pos:line="6" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="7" pos:column="5">*<pos:position pos:line="7" pos:column="6"/></operator><name pos:line="7" pos:column="6">sockfd<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">=<pos:position pos:line="7" pos:column="14"/></operator> <operator pos:line="7" pos:column="15">-<pos:position pos:line="7" pos:column="16"/></operator><literal type="number" pos:line="7" pos:column="16">1<pos:position pos:line="7" pos:column="17"/></literal></expr>;<pos:position pos:line="7" pos:column="18"/></expr_stmt>
    <return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><operator pos:line="8" pos:column="13">-<pos:position pos:line="8" pos:column="14"/></operator><literal type="number" pos:line="8" pos:column="14">1<pos:position pos:line="8" pos:column="15"/></literal><operator pos:line="8" pos:column="15">)<pos:position pos:line="8" pos:column="16"/></operator></expr>;<pos:position pos:line="8" pos:column="17"/></return>
  }<pos:position pos:line="9" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="11" pos:column="3">packet_size<pos:position pos:line="11" pos:column="14"/></name> <operator pos:line="11" pos:column="15">=<pos:position pos:line="11" pos:column="16"/></operator> <call><name pos:line="11" pos:column="17">ntohs<pos:position pos:line="11" pos:column="22"/></name><argument_list pos:line="11" pos:column="22">(<argument><expr><name pos:line="11" pos:column="23">packet_size<pos:position pos:line="11" pos:column="34"/></name></expr></argument>)<pos:position pos:line="11" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="36"/></expr_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">packet_size<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">&gt;<pos:position pos:line="12" pos:column="23"/></operator> <name pos:line="12" pos:column="21">buflen<pos:position pos:line="12" pos:column="27"/></name></expr>)<pos:position pos:line="12" pos:column="28"/></condition><then pos:line="12" pos:column="28"> <block pos:line="12" pos:column="29">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">ERROR<pos:position pos:line="13" pos:column="10"/></name><argument_list pos:line="13" pos:column="10">(<argument><expr><literal type="string" pos:line="13" pos:column="11">"apcups plugin: Received %"<pos:position pos:line="13" pos:column="38"/></literal> <name pos:line="13" pos:column="39">PRIu16<pos:position pos:line="13" pos:column="45"/></name> <literal type="string" pos:line="13" pos:column="46">" bytes of payload "<pos:position pos:line="13" pos:column="66"/></literal>
          <literal type="string" pos:line="14" pos:column="11">"but have only %i bytes of buffer available."<pos:position pos:line="14" pos:column="56"/></literal></expr></argument>,
          <argument><expr><name pos:line="15" pos:column="11">packet_size<pos:position pos:line="15" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="24">buflen<pos:position pos:line="15" pos:column="30"/></name></expr></argument>)<pos:position pos:line="15" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">close<pos:position pos:line="16" pos:column="10"/></name><argument_list pos:line="16" pos:column="10">(<argument><expr><operator pos:line="16" pos:column="11">*<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="12">sockfd<pos:position pos:line="16" pos:column="18"/></name></expr></argument>)<pos:position pos:line="16" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="17" pos:column="5">*<pos:position pos:line="17" pos:column="6"/></operator><name pos:line="17" pos:column="6">sockfd<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <operator pos:line="17" pos:column="15">-<pos:position pos:line="17" pos:column="16"/></operator><literal type="number" pos:line="17" pos:column="16">1<pos:position pos:line="17" pos:column="17"/></literal></expr>;<pos:position pos:line="17" pos:column="18"/></expr_stmt>
    <return pos:line="18" pos:column="5">return <expr><operator pos:line="18" pos:column="12">(<pos:position pos:line="18" pos:column="13"/></operator><operator pos:line="18" pos:column="13">-<pos:position pos:line="18" pos:column="14"/></operator><literal type="number" pos:line="18" pos:column="14">2<pos:position pos:line="18" pos:column="15"/></literal><operator pos:line="18" pos:column="15">)<pos:position pos:line="18" pos:column="16"/></operator></expr>;<pos:position pos:line="18" pos:column="17"/></return>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>

  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><name pos:line="21" pos:column="7">packet_size<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">==<pos:position pos:line="21" pos:column="21"/></operator> <literal type="number" pos:line="21" pos:column="22">0<pos:position pos:line="21" pos:column="23"/></literal></expr>)<pos:position pos:line="21" pos:column="24"/></condition><then pos:line="21" pos:column="24">
    <block type="pseudo"><return pos:line="22" pos:column="5">return <expr><operator pos:line="22" pos:column="12">(<pos:position pos:line="22" pos:column="13"/></operator><literal type="number" pos:line="22" pos:column="13">0<pos:position pos:line="22" pos:column="14"/></literal><operator pos:line="22" pos:column="14">)<pos:position pos:line="22" pos:column="15"/></operator></expr>;<pos:position pos:line="22" pos:column="16"/></return></block></then></if>

  <comment type="block" pos:line="24" pos:column="3">/* now read the actual data */</comment>
  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><call><name pos:line="25" pos:column="7">sread<pos:position pos:line="25" pos:column="12"/></name><argument_list pos:line="25" pos:column="12">(<argument><expr><operator pos:line="25" pos:column="13">*<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="14">sockfd<pos:position pos:line="25" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="22">(<pos:position pos:line="25" pos:column="23"/></operator><name pos:line="25" pos:column="23">void<pos:position pos:line="25" pos:column="27"/></name> <operator pos:line="25" pos:column="28">*<pos:position pos:line="25" pos:column="29"/></operator><operator pos:line="25" pos:column="29">)<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="30">buf<pos:position pos:line="25" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="35">packet_size<pos:position pos:line="25" pos:column="46"/></name></expr></argument>)<pos:position pos:line="25" pos:column="47"/></argument_list></call> <operator pos:line="25" pos:column="48">!=<pos:position pos:line="25" pos:column="50"/></operator> <literal type="number" pos:line="25" pos:column="51">0<pos:position pos:line="25" pos:column="52"/></literal></expr>)<pos:position pos:line="25" pos:column="53"/></condition><then pos:line="25" pos:column="53"> <block pos:line="25" pos:column="54">{
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">close<pos:position pos:line="26" pos:column="10"/></name><argument_list pos:line="26" pos:column="10">(<argument><expr><operator pos:line="26" pos:column="11">*<pos:position pos:line="26" pos:column="12"/></operator><name pos:line="26" pos:column="12">sockfd<pos:position pos:line="26" pos:column="18"/></name></expr></argument>)<pos:position pos:line="26" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="27" pos:column="5">*<pos:position pos:line="27" pos:column="6"/></operator><name pos:line="27" pos:column="6">sockfd<pos:position pos:line="27" pos:column="12"/></name> <operator pos:line="27" pos:column="13">=<pos:position pos:line="27" pos:column="14"/></operator> <operator pos:line="27" pos:column="15">-<pos:position pos:line="27" pos:column="16"/></operator><literal type="number" pos:line="27" pos:column="16">1<pos:position pos:line="27" pos:column="17"/></literal></expr>;<pos:position pos:line="27" pos:column="18"/></expr_stmt>
    <return pos:line="28" pos:column="5">return <expr><operator pos:line="28" pos:column="12">(<pos:position pos:line="28" pos:column="13"/></operator><operator pos:line="28" pos:column="13">-<pos:position pos:line="28" pos:column="14"/></operator><literal type="number" pos:line="28" pos:column="14">1<pos:position pos:line="28" pos:column="15"/></literal><operator pos:line="28" pos:column="15">)<pos:position pos:line="28" pos:column="16"/></operator></expr>;<pos:position pos:line="28" pos:column="17"/></return>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>

  <return pos:line="31" pos:column="3">return <expr><operator pos:line="31" pos:column="10">(<pos:position pos:line="31" pos:column="11"/></operator><operator pos:line="31" pos:column="11">(<pos:position pos:line="31" pos:column="12"/></operator><name pos:line="31" pos:column="12">int<pos:position pos:line="31" pos:column="15"/></name><operator pos:line="31" pos:column="15">)<pos:position pos:line="31" pos:column="16"/></operator><name pos:line="31" pos:column="16">packet_size<pos:position pos:line="31" pos:column="27"/></name><operator pos:line="31" pos:column="27">)<pos:position pos:line="31" pos:column="28"/></operator></expr>;<pos:position pos:line="31" pos:column="29"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_261_collectd-5.0.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ping_config<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">key<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier> <name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">value<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list> <comment type="block" pos:line="1" pos:column="61">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><call><name pos:line="3" pos:column="7">strcasecmp<pos:position pos:line="3" pos:column="17"/></name> <argument_list pos:line="3" pos:column="18">(<argument><expr><name pos:line="3" pos:column="19">key<pos:position pos:line="3" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="24">"Host"<pos:position pos:line="3" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="31"/></argument_list></call> <operator pos:line="3" pos:column="32">==<pos:position pos:line="3" pos:column="34"/></operator> <literal type="number" pos:line="3" pos:column="35">0<pos:position pos:line="3" pos:column="36"/></literal></expr>)<pos:position pos:line="3" pos:column="37"/></condition><then pos:line="3" pos:column="37">
  <block pos:line="4" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">hostlist_t<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">hl<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">host<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><name pos:line="8" pos:column="5">hl<pos:position pos:line="8" pos:column="7"/></name> <operator pos:line="8" pos:column="8">=<pos:position pos:line="8" pos:column="9"/></operator> <operator pos:line="8" pos:column="10">(<pos:position pos:line="8" pos:column="11"/></operator><name pos:line="8" pos:column="11">hostlist_t<pos:position pos:line="8" pos:column="21"/></name> <operator pos:line="8" pos:column="22">*<pos:position pos:line="8" pos:column="23"/></operator><operator pos:line="8" pos:column="23">)<pos:position pos:line="8" pos:column="24"/></operator> <call><name pos:line="8" pos:column="25">malloc<pos:position pos:line="8" pos:column="31"/></name> <argument_list pos:line="8" pos:column="32">(<argument><expr><sizeof pos:line="8" pos:column="33">sizeof <argument_list pos:line="8" pos:column="40">(<argument><expr><name pos:line="8" pos:column="41">hostlist_t<pos:position pos:line="8" pos:column="51"/></name></expr></argument>)<pos:position pos:line="8" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="54"/></expr_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">hl<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">==<pos:position pos:line="9" pos:column="14"/></operator> <name pos:line="9" pos:column="15">NULL<pos:position pos:line="9" pos:column="19"/></name></expr>)<pos:position pos:line="9" pos:column="20"/></condition><then pos:line="9" pos:column="20">
    <block pos:line="10" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="11" pos:column="7">char<pos:position pos:line="11" pos:column="11"/></name></type> <name><name pos:line="11" pos:column="12">errbuf<pos:position pos:line="11" pos:column="18"/></name><index pos:line="11" pos:column="18">[<expr><literal type="number" pos:line="11" pos:column="19">1024<pos:position pos:line="11" pos:column="23"/></literal></expr>]<pos:position pos:line="11" pos:column="24"/></index></name></decl>;<pos:position pos:line="11" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="12" pos:column="7">ERROR<pos:position pos:line="12" pos:column="12"/></name> <argument_list pos:line="12" pos:column="13">(<argument><expr><literal type="string" pos:line="12" pos:column="14">"ping plugin: malloc failed: %s"<pos:position pos:line="12" pos:column="46"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="13" pos:column="11">sstrerror<pos:position pos:line="13" pos:column="20"/></name> <argument_list pos:line="13" pos:column="21">(<argument><expr><name pos:line="13" pos:column="22">errno<pos:position pos:line="13" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="29">errbuf<pos:position pos:line="13" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="37">sizeof <argument_list pos:line="13" pos:column="44">(<argument><expr><name pos:line="13" pos:column="45">errbuf<pos:position pos:line="13" pos:column="51"/></name></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="55"/></expr_stmt>
      <return pos:line="14" pos:column="7">return <expr><operator pos:line="14" pos:column="14">(<pos:position pos:line="14" pos:column="15"/></operator><literal type="number" pos:line="14" pos:column="15">1<pos:position pos:line="14" pos:column="16"/></literal><operator pos:line="14" pos:column="16">)<pos:position pos:line="14" pos:column="17"/></operator></expr>;<pos:position pos:line="14" pos:column="18"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="17" pos:column="5">host<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">=<pos:position pos:line="17" pos:column="11"/></operator> <call><name pos:line="17" pos:column="12">strdup<pos:position pos:line="17" pos:column="18"/></name> <argument_list pos:line="17" pos:column="19">(<argument><expr><name pos:line="17" pos:column="20">value<pos:position pos:line="17" pos:column="25"/></name></expr></argument>)<pos:position pos:line="17" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="27"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">host<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">==<pos:position pos:line="18" pos:column="16"/></operator> <name pos:line="18" pos:column="17">NULL<pos:position pos:line="18" pos:column="21"/></name></expr>)<pos:position pos:line="18" pos:column="22"/></condition><then pos:line="18" pos:column="22">
    <block pos:line="19" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="20" pos:column="7">char<pos:position pos:line="20" pos:column="11"/></name></type> <name><name pos:line="20" pos:column="12">errbuf<pos:position pos:line="20" pos:column="18"/></name><index pos:line="20" pos:column="18">[<expr><literal type="number" pos:line="20" pos:column="19">1024<pos:position pos:line="20" pos:column="23"/></literal></expr>]<pos:position pos:line="20" pos:column="24"/></index></name></decl>;<pos:position pos:line="20" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">sfree<pos:position pos:line="21" pos:column="12"/></name> <argument_list pos:line="21" pos:column="13">(<argument><expr><name pos:line="21" pos:column="14">hl<pos:position pos:line="21" pos:column="16"/></name></expr></argument>)<pos:position pos:line="21" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="18"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="22" pos:column="7">ERROR<pos:position pos:line="22" pos:column="12"/></name> <argument_list pos:line="22" pos:column="13">(<argument><expr><literal type="string" pos:line="22" pos:column="14">"ping plugin: strdup failed: %s"<pos:position pos:line="22" pos:column="46"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="23" pos:column="11">sstrerror<pos:position pos:line="23" pos:column="20"/></name> <argument_list pos:line="23" pos:column="21">(<argument><expr><name pos:line="23" pos:column="22">errno<pos:position pos:line="23" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="29">errbuf<pos:position pos:line="23" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="37">sizeof <argument_list pos:line="23" pos:column="44">(<argument><expr><name pos:line="23" pos:column="45">errbuf<pos:position pos:line="23" pos:column="51"/></name></expr></argument>)<pos:position pos:line="23" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="55"/></expr_stmt>
      <return pos:line="24" pos:column="7">return <expr><operator pos:line="24" pos:column="14">(<pos:position pos:line="24" pos:column="15"/></operator><literal type="number" pos:line="24" pos:column="15">1<pos:position pos:line="24" pos:column="16"/></literal><operator pos:line="24" pos:column="16">)<pos:position pos:line="24" pos:column="17"/></operator></expr>;<pos:position pos:line="24" pos:column="18"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="27" pos:column="5">hl<pos:position pos:line="27" pos:column="7"/></name><operator pos:line="27" pos:column="7">-&gt;<pos:position pos:line="27" pos:column="12"/></operator><name pos:line="27" pos:column="9">host<pos:position pos:line="27" pos:column="13"/></name></name> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <name pos:line="27" pos:column="16">host<pos:position pos:line="27" pos:column="20"/></name></expr>;<pos:position pos:line="27" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="28" pos:column="5">hl<pos:position pos:line="28" pos:column="7"/></name><operator pos:line="28" pos:column="7">-&gt;<pos:position pos:line="28" pos:column="12"/></operator><name pos:line="28" pos:column="9">pkg_sent<pos:position pos:line="28" pos:column="17"/></name></name> <operator pos:line="28" pos:column="18">=<pos:position pos:line="28" pos:column="19"/></operator> <literal type="number" pos:line="28" pos:column="20">0<pos:position pos:line="28" pos:column="21"/></literal></expr>;<pos:position pos:line="28" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">hl<pos:position pos:line="29" pos:column="7"/></name><operator pos:line="29" pos:column="7">-&gt;<pos:position pos:line="29" pos:column="12"/></operator><name pos:line="29" pos:column="9">pkg_recv<pos:position pos:line="29" pos:column="17"/></name></name> <operator pos:line="29" pos:column="18">=<pos:position pos:line="29" pos:column="19"/></operator> <literal type="number" pos:line="29" pos:column="20">0<pos:position pos:line="29" pos:column="21"/></literal></expr>;<pos:position pos:line="29" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="30" pos:column="5">hl<pos:position pos:line="30" pos:column="7"/></name><operator pos:line="30" pos:column="7">-&gt;<pos:position pos:line="30" pos:column="12"/></operator><name pos:line="30" pos:column="9">pkg_missed<pos:position pos:line="30" pos:column="19"/></name></name> <operator pos:line="30" pos:column="20">=<pos:position pos:line="30" pos:column="21"/></operator> <literal type="number" pos:line="30" pos:column="22">0<pos:position pos:line="30" pos:column="23"/></literal></expr>;<pos:position pos:line="30" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">hl<pos:position pos:line="31" pos:column="7"/></name><operator pos:line="31" pos:column="7">-&gt;<pos:position pos:line="31" pos:column="12"/></operator><name pos:line="31" pos:column="9">latency_total<pos:position pos:line="31" pos:column="22"/></name></name> <operator pos:line="31" pos:column="23">=<pos:position pos:line="31" pos:column="24"/></operator> <literal type="number" pos:line="31" pos:column="25">0.0<pos:position pos:line="31" pos:column="28"/></literal></expr>;<pos:position pos:line="31" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">hl<pos:position pos:line="32" pos:column="7"/></name><operator pos:line="32" pos:column="7">-&gt;<pos:position pos:line="32" pos:column="12"/></operator><name pos:line="32" pos:column="9">latency_squared<pos:position pos:line="32" pos:column="24"/></name></name> <operator pos:line="32" pos:column="25">=<pos:position pos:line="32" pos:column="26"/></operator> <literal type="number" pos:line="32" pos:column="27">0.0<pos:position pos:line="32" pos:column="30"/></literal></expr>;<pos:position pos:line="32" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="33" pos:column="5">hl<pos:position pos:line="33" pos:column="7"/></name><operator pos:line="33" pos:column="7">-&gt;<pos:position pos:line="33" pos:column="12"/></operator><name pos:line="33" pos:column="9">next<pos:position pos:line="33" pos:column="13"/></name></name> <operator pos:line="33" pos:column="14">=<pos:position pos:line="33" pos:column="15"/></operator> <name pos:line="33" pos:column="16">hostlist_head<pos:position pos:line="33" pos:column="29"/></name></expr>;<pos:position pos:line="33" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="34" pos:column="5">hostlist_head<pos:position pos:line="34" pos:column="18"/></name> <operator pos:line="34" pos:column="19">=<pos:position pos:line="34" pos:column="20"/></operator> <name pos:line="34" pos:column="21">hl<pos:position pos:line="34" pos:column="23"/></name></expr>;<pos:position pos:line="34" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="35" pos:column="4"/></block></then>
  <elseif pos:line="36" pos:column="3">else <if pos:line="36" pos:column="8">if <condition pos:line="36" pos:column="11">(<expr><call><name pos:line="36" pos:column="12">strcasecmp<pos:position pos:line="36" pos:column="22"/></name> <argument_list pos:line="36" pos:column="23">(<argument><expr><name pos:line="36" pos:column="24">key<pos:position pos:line="36" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="29">"SourceAddress"<pos:position pos:line="36" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="45"/></argument_list></call> <operator pos:line="36" pos:column="46">==<pos:position pos:line="36" pos:column="48"/></operator> <literal type="number" pos:line="36" pos:column="49">0<pos:position pos:line="36" pos:column="50"/></literal></expr>)<pos:position pos:line="36" pos:column="51"/></condition><then pos:line="36" pos:column="51">
  <block pos:line="37" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="38" pos:column="5">int<pos:position pos:line="38" pos:column="8"/></name></type> <name pos:line="38" pos:column="9">status<pos:position pos:line="38" pos:column="15"/></name> <init pos:line="38" pos:column="16">= <expr><call><name pos:line="38" pos:column="18">config_set_string<pos:position pos:line="38" pos:column="35"/></name> <argument_list pos:line="38" pos:column="36">(<argument><expr><name pos:line="38" pos:column="37">key<pos:position pos:line="38" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="42">&amp;<pos:position pos:line="38" pos:column="47"/></operator><name pos:line="38" pos:column="43">ping_source<pos:position pos:line="38" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="56">value<pos:position pos:line="38" pos:column="61"/></name></expr></argument>)<pos:position pos:line="38" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="38" pos:column="63"/></decl_stmt>
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name pos:line="39" pos:column="9">status<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">!=<pos:position pos:line="39" pos:column="18"/></operator> <literal type="number" pos:line="39" pos:column="19">0<pos:position pos:line="39" pos:column="20"/></literal></expr>)<pos:position pos:line="39" pos:column="21"/></condition><then pos:line="39" pos:column="21">
      <block type="pseudo"><return pos:line="40" pos:column="7">return <expr><operator pos:line="40" pos:column="14">(<pos:position pos:line="40" pos:column="15"/></operator><name pos:line="40" pos:column="15">status<pos:position pos:line="40" pos:column="21"/></name><operator pos:line="40" pos:column="21">)<pos:position pos:line="40" pos:column="22"/></operator></expr>;<pos:position pos:line="40" pos:column="23"/></return></block></then></if>
  }<pos:position pos:line="41" pos:column="4"/></block></then></if></elseif>
<cpp:ifdef pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">ifdef<pos:position pos:line="42" pos:column="7"/></cpp:directive> <name pos:line="42" pos:column="8">HAVE_OPING_1_3<pos:position pos:line="42" pos:column="22"/></name></cpp:ifdef>
  <elseif pos:line="43" pos:column="3">else <if pos:line="43" pos:column="8">if <condition pos:line="43" pos:column="11">(<expr><call><name pos:line="43" pos:column="12">strcasecmp<pos:position pos:line="43" pos:column="22"/></name> <argument_list pos:line="43" pos:column="23">(<argument><expr><name pos:line="43" pos:column="24">key<pos:position pos:line="43" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="29">"Device"<pos:position pos:line="43" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="38"/></argument_list></call> <operator pos:line="43" pos:column="39">==<pos:position pos:line="43" pos:column="41"/></operator> <literal type="number" pos:line="43" pos:column="42">0<pos:position pos:line="43" pos:column="43"/></literal></expr>)<pos:position pos:line="43" pos:column="44"/></condition><then pos:line="43" pos:column="44">
  <block pos:line="44" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="45" pos:column="5">int<pos:position pos:line="45" pos:column="8"/></name></type> <name pos:line="45" pos:column="9">status<pos:position pos:line="45" pos:column="15"/></name> <init pos:line="45" pos:column="16">= <expr><call><name pos:line="45" pos:column="18">config_set_string<pos:position pos:line="45" pos:column="35"/></name> <argument_list pos:line="45" pos:column="36">(<argument><expr><name pos:line="45" pos:column="37">key<pos:position pos:line="45" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="42">&amp;<pos:position pos:line="45" pos:column="47"/></operator><name pos:line="45" pos:column="43">ping_device<pos:position pos:line="45" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="56">value<pos:position pos:line="45" pos:column="61"/></name></expr></argument>)<pos:position pos:line="45" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="45" pos:column="63"/></decl_stmt>
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><name pos:line="46" pos:column="9">status<pos:position pos:line="46" pos:column="15"/></name> <operator pos:line="46" pos:column="16">!=<pos:position pos:line="46" pos:column="18"/></operator> <literal type="number" pos:line="46" pos:column="19">0<pos:position pos:line="46" pos:column="20"/></literal></expr>)<pos:position pos:line="46" pos:column="21"/></condition><then pos:line="46" pos:column="21">
      <block type="pseudo"><return pos:line="47" pos:column="7">return <expr><operator pos:line="47" pos:column="14">(<pos:position pos:line="47" pos:column="15"/></operator><name pos:line="47" pos:column="15">status<pos:position pos:line="47" pos:column="21"/></name><operator pos:line="47" pos:column="21">)<pos:position pos:line="47" pos:column="22"/></operator></expr>;<pos:position pos:line="47" pos:column="23"/></return></block></then></if>
  }<pos:position pos:line="48" pos:column="4"/></block></then></if></elseif>
<cpp:endif pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">endif<pos:position pos:line="49" pos:column="7"/></cpp:directive></cpp:endif>
  <elseif pos:line="50" pos:column="3">else <if pos:line="50" pos:column="8">if <condition pos:line="50" pos:column="11">(<expr><call><name pos:line="50" pos:column="12">strcasecmp<pos:position pos:line="50" pos:column="22"/></name> <argument_list pos:line="50" pos:column="23">(<argument><expr><name pos:line="50" pos:column="24">key<pos:position pos:line="50" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="29">"TTL"<pos:position pos:line="50" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="35"/></argument_list></call> <operator pos:line="50" pos:column="36">==<pos:position pos:line="50" pos:column="38"/></operator> <literal type="number" pos:line="50" pos:column="39">0<pos:position pos:line="50" pos:column="40"/></literal></expr>)<pos:position pos:line="50" pos:column="41"/></condition><then pos:line="50" pos:column="41">
  <block pos:line="51" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="52" pos:column="5">int<pos:position pos:line="52" pos:column="8"/></name></type> <name pos:line="52" pos:column="9">ttl<pos:position pos:line="52" pos:column="12"/></name> <init pos:line="52" pos:column="13">= <expr><call><name pos:line="52" pos:column="15">atoi<pos:position pos:line="52" pos:column="19"/></name> <argument_list pos:line="52" pos:column="20">(<argument><expr><name pos:line="52" pos:column="21">value<pos:position pos:line="52" pos:column="26"/></name></expr></argument>)<pos:position pos:line="52" pos:column="27"/></argument_list></call></expr></init></decl>;<pos:position pos:line="52" pos:column="28"/></decl_stmt>
    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><operator pos:line="53" pos:column="9">(<pos:position pos:line="53" pos:column="10"/></operator><name pos:line="53" pos:column="10">ttl<pos:position pos:line="53" pos:column="13"/></name> <operator pos:line="53" pos:column="14">&gt;<pos:position pos:line="53" pos:column="18"/></operator> <literal type="number" pos:line="53" pos:column="16">0<pos:position pos:line="53" pos:column="17"/></literal><operator pos:line="53" pos:column="17">)<pos:position pos:line="53" pos:column="18"/></operator> <operator pos:line="53" pos:column="19">&amp;&amp;<pos:position pos:line="53" pos:column="29"/></operator> <operator pos:line="53" pos:column="22">(<pos:position pos:line="53" pos:column="23"/></operator><name pos:line="53" pos:column="23">ttl<pos:position pos:line="53" pos:column="26"/></name> <operator pos:line="53" pos:column="27">&lt;=<pos:position pos:line="53" pos:column="32"/></operator> <literal type="number" pos:line="53" pos:column="30">255<pos:position pos:line="53" pos:column="33"/></literal><operator pos:line="53" pos:column="33">)<pos:position pos:line="53" pos:column="34"/></operator></expr>)<pos:position pos:line="53" pos:column="35"/></condition><then pos:line="53" pos:column="35">
      <block type="pseudo"><expr_stmt><expr><name pos:line="54" pos:column="7">ping_ttl<pos:position pos:line="54" pos:column="15"/></name> <operator pos:line="54" pos:column="16">=<pos:position pos:line="54" pos:column="17"/></operator> <name pos:line="54" pos:column="18">ttl<pos:position pos:line="54" pos:column="21"/></name></expr>;<pos:position pos:line="54" pos:column="22"/></expr_stmt></block></then>
    <else pos:line="55" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="56" pos:column="7">WARNING<pos:position pos:line="56" pos:column="14"/></name> <argument_list pos:line="56" pos:column="15">(<argument><expr><literal type="string" pos:line="56" pos:column="16">"ping plugin: Ignoring invalid TTL %i."<pos:position pos:line="56" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="57">ttl<pos:position pos:line="56" pos:column="60"/></name></expr></argument>)<pos:position pos:line="56" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="62"/></expr_stmt></block></else></if>
  }<pos:position pos:line="57" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="58" pos:column="3">else <if pos:line="58" pos:column="8">if <condition pos:line="58" pos:column="11">(<expr><call><name pos:line="58" pos:column="12">strcasecmp<pos:position pos:line="58" pos:column="22"/></name> <argument_list pos:line="58" pos:column="23">(<argument><expr><name pos:line="58" pos:column="24">key<pos:position pos:line="58" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="29">"Interval"<pos:position pos:line="58" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="40"/></argument_list></call> <operator pos:line="58" pos:column="41">==<pos:position pos:line="58" pos:column="43"/></operator> <literal type="number" pos:line="58" pos:column="44">0<pos:position pos:line="58" pos:column="45"/></literal></expr>)<pos:position pos:line="58" pos:column="46"/></condition><then pos:line="58" pos:column="46">
  <block pos:line="59" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="60" pos:column="5">double<pos:position pos:line="60" pos:column="11"/></name></type> <name pos:line="60" pos:column="12">tmp<pos:position pos:line="60" pos:column="15"/></name></decl>;<pos:position pos:line="60" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><name pos:line="62" pos:column="5">tmp<pos:position pos:line="62" pos:column="8"/></name> <operator pos:line="62" pos:column="9">=<pos:position pos:line="62" pos:column="10"/></operator> <call><name pos:line="62" pos:column="11">atof<pos:position pos:line="62" pos:column="15"/></name> <argument_list pos:line="62" pos:column="16">(<argument><expr><name pos:line="62" pos:column="17">value<pos:position pos:line="62" pos:column="22"/></name></expr></argument>)<pos:position pos:line="62" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="24"/></expr_stmt>
    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><name pos:line="63" pos:column="9">tmp<pos:position pos:line="63" pos:column="12"/></name> <operator pos:line="63" pos:column="13">&gt;<pos:position pos:line="63" pos:column="17"/></operator> <literal type="number" pos:line="63" pos:column="15">0.0<pos:position pos:line="63" pos:column="18"/></literal></expr>)<pos:position pos:line="63" pos:column="19"/></condition><then pos:line="63" pos:column="19">
      <block type="pseudo"><expr_stmt><expr><name pos:line="64" pos:column="7">ping_interval<pos:position pos:line="64" pos:column="20"/></name> <operator pos:line="64" pos:column="21">=<pos:position pos:line="64" pos:column="22"/></operator> <name pos:line="64" pos:column="23">tmp<pos:position pos:line="64" pos:column="26"/></name></expr>;<pos:position pos:line="64" pos:column="27"/></expr_stmt></block></then>
    <else pos:line="65" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="66" pos:column="7">WARNING<pos:position pos:line="66" pos:column="14"/></name> <argument_list pos:line="66" pos:column="15">(<argument><expr><literal type="string" pos:line="66" pos:column="16">"ping plugin: Ignoring invalid interval %g (%s)"<pos:position pos:line="66" pos:column="64"/></literal></expr></argument>,
          <argument><expr><name pos:line="67" pos:column="11">tmp<pos:position pos:line="67" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="16">value<pos:position pos:line="67" pos:column="21"/></name></expr></argument>)<pos:position pos:line="67" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="23"/></expr_stmt></block></else></if>
  }<pos:position pos:line="68" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="69" pos:column="3">else <if pos:line="69" pos:column="8">if <condition pos:line="69" pos:column="11">(<expr><call><name pos:line="69" pos:column="12">strcasecmp<pos:position pos:line="69" pos:column="22"/></name> <argument_list pos:line="69" pos:column="23">(<argument><expr><name pos:line="69" pos:column="24">key<pos:position pos:line="69" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="29">"Timeout"<pos:position pos:line="69" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="39"/></argument_list></call> <operator pos:line="69" pos:column="40">==<pos:position pos:line="69" pos:column="42"/></operator> <literal type="number" pos:line="69" pos:column="43">0<pos:position pos:line="69" pos:column="44"/></literal></expr>)<pos:position pos:line="69" pos:column="45"/></condition><then pos:line="69" pos:column="45">
  <block pos:line="70" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="71" pos:column="5">double<pos:position pos:line="71" pos:column="11"/></name></type> <name pos:line="71" pos:column="12">tmp<pos:position pos:line="71" pos:column="15"/></name></decl>;<pos:position pos:line="71" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><name pos:line="73" pos:column="5">tmp<pos:position pos:line="73" pos:column="8"/></name> <operator pos:line="73" pos:column="9">=<pos:position pos:line="73" pos:column="10"/></operator> <call><name pos:line="73" pos:column="11">atof<pos:position pos:line="73" pos:column="15"/></name> <argument_list pos:line="73" pos:column="16">(<argument><expr><name pos:line="73" pos:column="17">value<pos:position pos:line="73" pos:column="22"/></name></expr></argument>)<pos:position pos:line="73" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="24"/></expr_stmt>
    <if pos:line="74" pos:column="5">if <condition pos:line="74" pos:column="8">(<expr><name pos:line="74" pos:column="9">tmp<pos:position pos:line="74" pos:column="12"/></name> <operator pos:line="74" pos:column="13">&gt;<pos:position pos:line="74" pos:column="17"/></operator> <literal type="number" pos:line="74" pos:column="15">0.0<pos:position pos:line="74" pos:column="18"/></literal></expr>)<pos:position pos:line="74" pos:column="19"/></condition><then pos:line="74" pos:column="19">
      <block type="pseudo"><expr_stmt><expr><name pos:line="75" pos:column="7">ping_timeout<pos:position pos:line="75" pos:column="19"/></name> <operator pos:line="75" pos:column="20">=<pos:position pos:line="75" pos:column="21"/></operator> <name pos:line="75" pos:column="22">tmp<pos:position pos:line="75" pos:column="25"/></name></expr>;<pos:position pos:line="75" pos:column="26"/></expr_stmt></block></then>
    <else pos:line="76" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="77" pos:column="7">WARNING<pos:position pos:line="77" pos:column="14"/></name> <argument_list pos:line="77" pos:column="15">(<argument><expr><literal type="string" pos:line="77" pos:column="16">"ping plugin: Ignoring invalid timeout %g (%s)"<pos:position pos:line="77" pos:column="63"/></literal></expr></argument>,
          <argument><expr><name pos:line="78" pos:column="11">tmp<pos:position pos:line="78" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="16">value<pos:position pos:line="78" pos:column="21"/></name></expr></argument>)<pos:position pos:line="78" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="23"/></expr_stmt></block></else></if>
  }<pos:position pos:line="79" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="80" pos:column="3">else <if pos:line="80" pos:column="8">if <condition pos:line="80" pos:column="11">(<expr><call><name pos:line="80" pos:column="12">strcasecmp<pos:position pos:line="80" pos:column="22"/></name> <argument_list pos:line="80" pos:column="23">(<argument><expr><name pos:line="80" pos:column="24">key<pos:position pos:line="80" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="29">"MaxMissed"<pos:position pos:line="80" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="41"/></argument_list></call> <operator pos:line="80" pos:column="42">==<pos:position pos:line="80" pos:column="44"/></operator> <literal type="number" pos:line="80" pos:column="45">0<pos:position pos:line="80" pos:column="46"/></literal></expr>)<pos:position pos:line="80" pos:column="47"/></condition><then pos:line="80" pos:column="47">
  <block pos:line="81" pos:column="3">{
    <expr_stmt><expr><name pos:line="82" pos:column="5">ping_max_missed<pos:position pos:line="82" pos:column="20"/></name> <operator pos:line="82" pos:column="21">=<pos:position pos:line="82" pos:column="22"/></operator> <call><name pos:line="82" pos:column="23">atoi<pos:position pos:line="82" pos:column="27"/></name> <argument_list pos:line="82" pos:column="28">(<argument><expr><name pos:line="82" pos:column="29">value<pos:position pos:line="82" pos:column="34"/></name></expr></argument>)<pos:position pos:line="82" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="36"/></expr_stmt>
    <if pos:line="83" pos:column="5">if <condition pos:line="83" pos:column="8">(<expr><name pos:line="83" pos:column="9">ping_max_missed<pos:position pos:line="83" pos:column="24"/></name> <operator pos:line="83" pos:column="25">&lt;<pos:position pos:line="83" pos:column="29"/></operator> <literal type="number" pos:line="83" pos:column="27">0<pos:position pos:line="83" pos:column="28"/></literal></expr>)<pos:position pos:line="83" pos:column="29"/></condition><then pos:line="83" pos:column="29">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="84" pos:column="7">INFO<pos:position pos:line="84" pos:column="11"/></name> <argument_list pos:line="84" pos:column="12">(<argument><expr><literal type="string" pos:line="84" pos:column="13">"ping plugin: MaxMissed &lt; 0, disabled re-resolving of hosts"<pos:position pos:line="84" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="75"/></expr_stmt></block></then></if>
  }<pos:position pos:line="85" pos:column="4"/></block></then></if></elseif>
  <else pos:line="86" pos:column="3">else
  <block pos:line="87" pos:column="3">{
    <return pos:line="88" pos:column="5">return <expr><operator pos:line="88" pos:column="12">(<pos:position pos:line="88" pos:column="13"/></operator><operator pos:line="88" pos:column="13">-<pos:position pos:line="88" pos:column="14"/></operator><literal type="number" pos:line="88" pos:column="14">1<pos:position pos:line="88" pos:column="15"/></literal><operator pos:line="88" pos:column="15">)<pos:position pos:line="88" pos:column="16"/></operator></expr>;<pos:position pos:line="88" pos:column="17"/></return>
  }<pos:position pos:line="89" pos:column="4"/></block></else></if>

  <return pos:line="91" pos:column="3">return <expr><operator pos:line="91" pos:column="10">(<pos:position pos:line="91" pos:column="11"/></operator><literal type="number" pos:line="91" pos:column="11">0<pos:position pos:line="91" pos:column="12"/></literal><operator pos:line="91" pos:column="12">)<pos:position pos:line="91" pos:column="13"/></operator></expr>;<pos:position pos:line="91" pos:column="14"/></return>
}<pos:position pos:line="92" pos:column="2"/></block></function></unit>

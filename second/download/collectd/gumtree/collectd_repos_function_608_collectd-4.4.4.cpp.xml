<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_608_collectd-4.4.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ds_get<pos:position pos:line="1" pos:column="18"/></name> <parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier><modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier><modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">ret<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">data_set_t<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">ds<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="55">const<pos:position pos:line="1" pos:column="60"/></specifier> <name pos:line="1" pos:column="61">value_list_t<pos:position pos:line="1" pos:column="73"/></name> <modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier></type><name pos:line="1" pos:column="75">vl<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier><modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">ds_def<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">ds_num<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name></type> <name><name pos:line="6" pos:column="14">min<pos:position pos:line="6" pos:column="17"/></name><index pos:line="6" pos:column="17">[<expr><literal type="number" pos:line="6" pos:column="18">32<pos:position pos:line="6" pos:column="20"/></literal></expr>]<pos:position pos:line="6" pos:column="21"/></index></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name></type> <name><name pos:line="7" pos:column="14">max<pos:position pos:line="7" pos:column="17"/></name><index pos:line="7" pos:column="17">[<expr><literal type="number" pos:line="7" pos:column="18">32<pos:position pos:line="7" pos:column="20"/></literal></expr>]<pos:position pos:line="7" pos:column="21"/></index></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name></type> <name><name pos:line="8" pos:column="14">buffer<pos:position pos:line="8" pos:column="20"/></name><index pos:line="8" pos:column="20">[<expr><literal type="number" pos:line="8" pos:column="21">128<pos:position pos:line="8" pos:column="24"/></literal></expr>]<pos:position pos:line="8" pos:column="25"/></index></name></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="10" pos:column="9">DEBUG<pos:position pos:line="10" pos:column="14"/></name> <argument_list pos:line="10" pos:column="15">(<argument><expr><literal type="string" pos:line="10" pos:column="16">"ds-&gt;ds_num = %i"<pos:position pos:line="10" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="35">ds<pos:position pos:line="10" pos:column="37"/></name><operator pos:line="10" pos:column="37">-&gt;<pos:position pos:line="10" pos:column="42"/></operator><name pos:line="10" pos:column="39">ds_num<pos:position pos:line="10" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="47"/></expr_stmt>

	<expr_stmt><expr><name pos:line="12" pos:column="9">ds_def<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <operator pos:line="12" pos:column="18">(<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="19">char<pos:position pos:line="12" pos:column="23"/></name> <operator pos:line="12" pos:column="24">*<pos:position pos:line="12" pos:column="25"/></operator><operator pos:line="12" pos:column="25">*<pos:position pos:line="12" pos:column="26"/></operator><operator pos:line="12" pos:column="26">)<pos:position pos:line="12" pos:column="27"/></operator> <call><name pos:line="12" pos:column="28">malloc<pos:position pos:line="12" pos:column="34"/></name> <argument_list pos:line="12" pos:column="35">(<argument><expr><name><name pos:line="12" pos:column="36">ds<pos:position pos:line="12" pos:column="38"/></name><operator pos:line="12" pos:column="38">-&gt;<pos:position pos:line="12" pos:column="43"/></operator><name pos:line="12" pos:column="40">ds_num<pos:position pos:line="12" pos:column="46"/></name></name> <operator pos:line="12" pos:column="47">*<pos:position pos:line="12" pos:column="48"/></operator> <sizeof pos:line="12" pos:column="49">sizeof <argument_list pos:line="12" pos:column="56">(<argument><expr><name pos:line="12" pos:column="57">char<pos:position pos:line="12" pos:column="61"/></name> <operator pos:line="12" pos:column="62">*<pos:position pos:line="12" pos:column="63"/></operator></expr></argument>)<pos:position pos:line="12" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="66"/></expr_stmt>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">ds_def<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">==<pos:position pos:line="13" pos:column="22"/></operator> <name pos:line="13" pos:column="23">NULL<pos:position pos:line="13" pos:column="27"/></name></expr>)<pos:position pos:line="13" pos:column="28"/></condition><then pos:line="13" pos:column="28">
	<block pos:line="14" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="15" pos:column="17">char<pos:position pos:line="15" pos:column="21"/></name></type> <name><name pos:line="15" pos:column="22">errbuf<pos:position pos:line="15" pos:column="28"/></name><index pos:line="15" pos:column="28">[<expr><literal type="number" pos:line="15" pos:column="29">1024<pos:position pos:line="15" pos:column="33"/></literal></expr>]<pos:position pos:line="15" pos:column="34"/></index></name></decl>;<pos:position pos:line="15" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">ERROR<pos:position pos:line="16" pos:column="22"/></name> <argument_list pos:line="16" pos:column="23">(<argument><expr><literal type="string" pos:line="16" pos:column="24">"rrdtool plugin: malloc failed: %s"<pos:position pos:line="16" pos:column="59"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="17" pos:column="33">sstrerror<pos:position pos:line="17" pos:column="42"/></name> <argument_list pos:line="17" pos:column="43">(<argument><expr><name pos:line="17" pos:column="44">errno<pos:position pos:line="17" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="51">errbuf<pos:position pos:line="17" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="59">sizeof <argument_list pos:line="17" pos:column="66">(<argument><expr><name pos:line="17" pos:column="67">errbuf<pos:position pos:line="17" pos:column="73"/></name></expr></argument>)<pos:position pos:line="17" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="77"/></expr_stmt>
		<return pos:line="18" pos:column="17">return <expr><operator pos:line="18" pos:column="24">(<pos:position pos:line="18" pos:column="25"/></operator><operator pos:line="18" pos:column="25">-<pos:position pos:line="18" pos:column="26"/></operator><literal type="number" pos:line="18" pos:column="26">1<pos:position pos:line="18" pos:column="27"/></literal><operator pos:line="18" pos:column="27">)<pos:position pos:line="18" pos:column="28"/></operator></expr>;<pos:position pos:line="18" pos:column="29"/></return>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="20" pos:column="9">memset<pos:position pos:line="20" pos:column="15"/></name> <argument_list pos:line="20" pos:column="16">(<argument><expr><name pos:line="20" pos:column="17">ds_def<pos:position pos:line="20" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="20" pos:column="25">'\0'<pos:position pos:line="20" pos:column="29"/></literal></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="31">ds<pos:position pos:line="20" pos:column="33"/></name><operator pos:line="20" pos:column="33">-&gt;<pos:position pos:line="20" pos:column="38"/></operator><name pos:line="20" pos:column="35">ds_num<pos:position pos:line="20" pos:column="41"/></name></name> <operator pos:line="20" pos:column="42">*<pos:position pos:line="20" pos:column="43"/></operator> <sizeof pos:line="20" pos:column="44">sizeof <argument_list pos:line="20" pos:column="51">(<argument><expr><name pos:line="20" pos:column="52">char<pos:position pos:line="20" pos:column="56"/></name> <operator pos:line="20" pos:column="57">*<pos:position pos:line="20" pos:column="58"/></operator></expr></argument>)<pos:position pos:line="20" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="61"/></expr_stmt>

	<for pos:line="22" pos:column="9">for <control pos:line="22" pos:column="13">(<init><expr><name pos:line="22" pos:column="14">ds_num<pos:position pos:line="22" pos:column="20"/></name> <operator pos:line="22" pos:column="21">=<pos:position pos:line="22" pos:column="22"/></operator> <literal type="number" pos:line="22" pos:column="23">0<pos:position pos:line="22" pos:column="24"/></literal></expr>;<pos:position pos:line="22" pos:column="25"/></init> <condition><expr><name pos:line="22" pos:column="26">ds_num<pos:position pos:line="22" pos:column="32"/></name> <operator pos:line="22" pos:column="33">&lt;<pos:position pos:line="22" pos:column="37"/></operator> <name><name pos:line="22" pos:column="35">ds<pos:position pos:line="22" pos:column="37"/></name><operator pos:line="22" pos:column="37">-&gt;<pos:position pos:line="22" pos:column="42"/></operator><name pos:line="22" pos:column="39">ds_num<pos:position pos:line="22" pos:column="45"/></name></name></expr>;<pos:position pos:line="22" pos:column="46"/></condition> <incr><expr><name pos:line="22" pos:column="47">ds_num<pos:position pos:line="22" pos:column="53"/></name><operator pos:line="22" pos:column="53">++<pos:position pos:line="22" pos:column="55"/></operator></expr></incr>)<pos:position pos:line="22" pos:column="56"/></control>
	<block pos:line="23" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="24" pos:column="17">data_source_t<pos:position pos:line="24" pos:column="30"/></name> <modifier pos:line="24" pos:column="31">*<pos:position pos:line="24" pos:column="32"/></modifier></type><name pos:line="24" pos:column="32">d<pos:position pos:line="24" pos:column="33"/></name> <init pos:line="24" pos:column="34">= <expr><name><name pos:line="24" pos:column="36">ds<pos:position pos:line="24" pos:column="38"/></name><operator pos:line="24" pos:column="38">-&gt;<pos:position pos:line="24" pos:column="43"/></operator><name pos:line="24" pos:column="40">ds<pos:position pos:line="24" pos:column="42"/></name></name> <operator pos:line="24" pos:column="43">+<pos:position pos:line="24" pos:column="44"/></operator> <name pos:line="24" pos:column="45">ds_num<pos:position pos:line="24" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="24" pos:column="52"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="25" pos:column="17">char<pos:position pos:line="25" pos:column="21"/></name> <modifier pos:line="25" pos:column="22">*<pos:position pos:line="25" pos:column="23"/></modifier></type><name pos:line="25" pos:column="23">type<pos:position pos:line="25" pos:column="27"/></name></decl>;<pos:position pos:line="25" pos:column="28"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="26" pos:column="17">int<pos:position pos:line="26" pos:column="20"/></name></type> <name pos:line="26" pos:column="21">status<pos:position pos:line="26" pos:column="27"/></name></decl>;<pos:position pos:line="26" pos:column="28"/></decl_stmt>

		<expr_stmt><expr><name><name pos:line="28" pos:column="17">ds_def<pos:position pos:line="28" pos:column="23"/></name><index pos:line="28" pos:column="23">[<expr><name pos:line="28" pos:column="24">ds_num<pos:position pos:line="28" pos:column="30"/></name></expr>]<pos:position pos:line="28" pos:column="31"/></index></name> <operator pos:line="28" pos:column="32">=<pos:position pos:line="28" pos:column="33"/></operator> <name pos:line="28" pos:column="34">NULL<pos:position pos:line="28" pos:column="38"/></name></expr>;<pos:position pos:line="28" pos:column="39"/></expr_stmt>

		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><name><name pos:line="30" pos:column="21">d<pos:position pos:line="30" pos:column="22"/></name><operator pos:line="30" pos:column="22">-&gt;<pos:position pos:line="30" pos:column="27"/></operator><name pos:line="30" pos:column="24">type<pos:position pos:line="30" pos:column="28"/></name></name> <operator pos:line="30" pos:column="29">==<pos:position pos:line="30" pos:column="31"/></operator> <name pos:line="30" pos:column="32">DS_TYPE_COUNTER<pos:position pos:line="30" pos:column="47"/></name></expr>)<pos:position pos:line="30" pos:column="48"/></condition><then pos:line="30" pos:column="48">
			<block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="25">type<pos:position pos:line="31" pos:column="29"/></name> <operator pos:line="31" pos:column="30">=<pos:position pos:line="31" pos:column="31"/></operator> <literal type="string" pos:line="31" pos:column="32">"COUNTER"<pos:position pos:line="31" pos:column="41"/></literal></expr>;<pos:position pos:line="31" pos:column="42"/></expr_stmt></block></then>
		<elseif pos:line="32" pos:column="17">else <if pos:line="32" pos:column="22">if <condition pos:line="32" pos:column="25">(<expr><name><name pos:line="32" pos:column="26">d<pos:position pos:line="32" pos:column="27"/></name><operator pos:line="32" pos:column="27">-&gt;<pos:position pos:line="32" pos:column="32"/></operator><name pos:line="32" pos:column="29">type<pos:position pos:line="32" pos:column="33"/></name></name> <operator pos:line="32" pos:column="34">==<pos:position pos:line="32" pos:column="36"/></operator> <name pos:line="32" pos:column="37">DS_TYPE_GAUGE<pos:position pos:line="32" pos:column="50"/></name></expr>)<pos:position pos:line="32" pos:column="51"/></condition><then pos:line="32" pos:column="51">
			<block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="25">type<pos:position pos:line="33" pos:column="29"/></name> <operator pos:line="33" pos:column="30">=<pos:position pos:line="33" pos:column="31"/></operator> <literal type="string" pos:line="33" pos:column="32">"GAUGE"<pos:position pos:line="33" pos:column="39"/></literal></expr>;<pos:position pos:line="33" pos:column="40"/></expr_stmt></block></then></if></elseif>
		<else pos:line="34" pos:column="17">else
		<block pos:line="35" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="36" pos:column="25">ERROR<pos:position pos:line="36" pos:column="30"/></name> <argument_list pos:line="36" pos:column="31">(<argument><expr><literal type="string" pos:line="36" pos:column="32">"rrdtool plugin: Unknown DS type: %i"<pos:position pos:line="36" pos:column="69"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="37" pos:column="41">d<pos:position pos:line="37" pos:column="42"/></name><operator pos:line="37" pos:column="42">-&gt;<pos:position pos:line="37" pos:column="47"/></operator><name pos:line="37" pos:column="44">type<pos:position pos:line="37" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="50"/></expr_stmt>
			<break pos:line="38" pos:column="25">break;<pos:position pos:line="38" pos:column="31"/></break>
		}<pos:position pos:line="39" pos:column="18"/></block></else></if>

		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><call><name pos:line="41" pos:column="21">isnan<pos:position pos:line="41" pos:column="26"/></name> <argument_list pos:line="41" pos:column="27">(<argument><expr><name><name pos:line="41" pos:column="28">d<pos:position pos:line="41" pos:column="29"/></name><operator pos:line="41" pos:column="29">-&gt;<pos:position pos:line="41" pos:column="34"/></operator><name pos:line="41" pos:column="31">min<pos:position pos:line="41" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="36"/></condition><then pos:line="41" pos:column="36">
		<block pos:line="42" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="43" pos:column="25">sstrncpy<pos:position pos:line="43" pos:column="33"/></name> <argument_list pos:line="43" pos:column="34">(<argument><expr><name pos:line="43" pos:column="35">min<pos:position pos:line="43" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="40">"U"<pos:position pos:line="43" pos:column="43"/></literal></expr></argument>, <argument><expr><sizeof pos:line="43" pos:column="45">sizeof <argument_list pos:line="43" pos:column="52">(<argument><expr><name pos:line="43" pos:column="53">min<pos:position pos:line="43" pos:column="56"/></name></expr></argument>)<pos:position pos:line="43" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="43" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="59"/></expr_stmt>
		}<pos:position pos:line="44" pos:column="18"/></block></then>
		<else pos:line="45" pos:column="17">else
		<block pos:line="46" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="47" pos:column="25">snprintf<pos:position pos:line="47" pos:column="33"/></name> <argument_list pos:line="47" pos:column="34">(<argument><expr><name pos:line="47" pos:column="35">min<pos:position pos:line="47" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="47" pos:column="40">sizeof <argument_list pos:line="47" pos:column="47">(<argument><expr><name pos:line="47" pos:column="48">min<pos:position pos:line="47" pos:column="51"/></name></expr></argument>)<pos:position pos:line="47" pos:column="52"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="54">"%lf"<pos:position pos:line="47" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="61">d<pos:position pos:line="47" pos:column="62"/></name><operator pos:line="47" pos:column="62">-&gt;<pos:position pos:line="47" pos:column="67"/></operator><name pos:line="47" pos:column="64">min<pos:position pos:line="47" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="69"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="48" pos:column="25">min<pos:position pos:line="48" pos:column="28"/></name><index pos:line="48" pos:column="28">[<expr><sizeof pos:line="48" pos:column="29">sizeof <argument_list pos:line="48" pos:column="36">(<argument><expr><name pos:line="48" pos:column="37">min<pos:position pos:line="48" pos:column="40"/></name></expr></argument>)<pos:position pos:line="48" pos:column="41"/></argument_list></sizeof> <operator pos:line="48" pos:column="42">-<pos:position pos:line="48" pos:column="43"/></operator> <literal type="number" pos:line="48" pos:column="44">1<pos:position pos:line="48" pos:column="45"/></literal></expr>]<pos:position pos:line="48" pos:column="46"/></index></name> <operator pos:line="48" pos:column="47">=<pos:position pos:line="48" pos:column="48"/></operator> <literal type="char" pos:line="48" pos:column="49">'\0'<pos:position pos:line="48" pos:column="53"/></literal></expr>;<pos:position pos:line="48" pos:column="54"/></expr_stmt>
		}<pos:position pos:line="49" pos:column="18"/></block></else></if>

		<if pos:line="51" pos:column="17">if <condition pos:line="51" pos:column="20">(<expr><call><name pos:line="51" pos:column="21">isnan<pos:position pos:line="51" pos:column="26"/></name> <argument_list pos:line="51" pos:column="27">(<argument><expr><name><name pos:line="51" pos:column="28">d<pos:position pos:line="51" pos:column="29"/></name><operator pos:line="51" pos:column="29">-&gt;<pos:position pos:line="51" pos:column="34"/></operator><name pos:line="51" pos:column="31">max<pos:position pos:line="51" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="36"/></condition><then pos:line="51" pos:column="36">
		<block pos:line="52" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="53" pos:column="25">sstrncpy<pos:position pos:line="53" pos:column="33"/></name> <argument_list pos:line="53" pos:column="34">(<argument><expr><name pos:line="53" pos:column="35">max<pos:position pos:line="53" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="40">"U"<pos:position pos:line="53" pos:column="43"/></literal></expr></argument>, <argument><expr><sizeof pos:line="53" pos:column="45">sizeof <argument_list pos:line="53" pos:column="52">(<argument><expr><name pos:line="53" pos:column="53">max<pos:position pos:line="53" pos:column="56"/></name></expr></argument>)<pos:position pos:line="53" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="53" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="59"/></expr_stmt>
		}<pos:position pos:line="54" pos:column="18"/></block></then>
		<else pos:line="55" pos:column="17">else
		<block pos:line="56" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="57" pos:column="25">snprintf<pos:position pos:line="57" pos:column="33"/></name> <argument_list pos:line="57" pos:column="34">(<argument><expr><name pos:line="57" pos:column="35">max<pos:position pos:line="57" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="57" pos:column="40">sizeof <argument_list pos:line="57" pos:column="47">(<argument><expr><name pos:line="57" pos:column="48">max<pos:position pos:line="57" pos:column="51"/></name></expr></argument>)<pos:position pos:line="57" pos:column="52"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="54">"%lf"<pos:position pos:line="57" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="61">d<pos:position pos:line="57" pos:column="62"/></name><operator pos:line="57" pos:column="62">-&gt;<pos:position pos:line="57" pos:column="67"/></operator><name pos:line="57" pos:column="64">max<pos:position pos:line="57" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="69"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="58" pos:column="25">max<pos:position pos:line="58" pos:column="28"/></name><index pos:line="58" pos:column="28">[<expr><sizeof pos:line="58" pos:column="29">sizeof <argument_list pos:line="58" pos:column="36">(<argument><expr><name pos:line="58" pos:column="37">max<pos:position pos:line="58" pos:column="40"/></name></expr></argument>)<pos:position pos:line="58" pos:column="41"/></argument_list></sizeof> <operator pos:line="58" pos:column="42">-<pos:position pos:line="58" pos:column="43"/></operator> <literal type="number" pos:line="58" pos:column="44">1<pos:position pos:line="58" pos:column="45"/></literal></expr>]<pos:position pos:line="58" pos:column="46"/></index></name> <operator pos:line="58" pos:column="47">=<pos:position pos:line="58" pos:column="48"/></operator> <literal type="char" pos:line="58" pos:column="49">'\0'<pos:position pos:line="58" pos:column="53"/></literal></expr>;<pos:position pos:line="58" pos:column="54"/></expr_stmt>
		}<pos:position pos:line="59" pos:column="18"/></block></else></if>

		<expr_stmt><expr><name pos:line="61" pos:column="17">status<pos:position pos:line="61" pos:column="23"/></name> <operator pos:line="61" pos:column="24">=<pos:position pos:line="61" pos:column="25"/></operator> <call><name pos:line="61" pos:column="26">snprintf<pos:position pos:line="61" pos:column="34"/></name> <argument_list pos:line="61" pos:column="35">(<argument><expr><name pos:line="61" pos:column="36">buffer<pos:position pos:line="61" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="61" pos:column="44">sizeof <argument_list pos:line="61" pos:column="51">(<argument><expr><name pos:line="61" pos:column="52">buffer<pos:position pos:line="61" pos:column="58"/></name></expr></argument>)<pos:position pos:line="61" pos:column="59"/></argument_list></sizeof></expr></argument>,
				<argument><expr><literal type="string" pos:line="62" pos:column="33">"DS:%s:%s:%i:%s:%s"<pos:position pos:line="62" pos:column="52"/></literal></expr></argument>,
				<argument><expr><name><name pos:line="63" pos:column="33">d<pos:position pos:line="63" pos:column="34"/></name><operator pos:line="63" pos:column="34">-&gt;<pos:position pos:line="63" pos:column="39"/></operator><name pos:line="63" pos:column="36">name<pos:position pos:line="63" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="42">type<pos:position pos:line="63" pos:column="46"/></name></expr></argument>,
				<argument><expr><ternary><condition><expr><operator pos:line="64" pos:column="33">(<pos:position pos:line="64" pos:column="34"/></operator><name pos:line="64" pos:column="34">heartbeat<pos:position pos:line="64" pos:column="43"/></name> <operator pos:line="64" pos:column="44">&gt;<pos:position pos:line="64" pos:column="48"/></operator> <literal type="number" pos:line="64" pos:column="46">0<pos:position pos:line="64" pos:column="47"/></literal><operator pos:line="64" pos:column="47">)<pos:position pos:line="64" pos:column="48"/></operator></expr> ?<pos:position pos:line="64" pos:column="50"/></condition><then pos:line="64" pos:column="50"> <expr><name pos:line="64" pos:column="51">heartbeat<pos:position pos:line="64" pos:column="60"/></name></expr> <pos:position pos:line="64" pos:column="61"/></then><else pos:line="64" pos:column="61">: <expr><operator pos:line="64" pos:column="63">(<pos:position pos:line="64" pos:column="64"/></operator><literal type="number" pos:line="64" pos:column="64">2<pos:position pos:line="64" pos:column="65"/></literal> <operator pos:line="64" pos:column="66">*<pos:position pos:line="64" pos:column="67"/></operator> <name><name pos:line="64" pos:column="68">vl<pos:position pos:line="64" pos:column="70"/></name><operator pos:line="64" pos:column="70">-&gt;<pos:position pos:line="64" pos:column="75"/></operator><name pos:line="64" pos:column="72">interval<pos:position pos:line="64" pos:column="80"/></name></name><operator pos:line="64" pos:column="80">)<pos:position pos:line="64" pos:column="81"/></operator></expr></else></ternary></expr></argument>,
				<argument><expr><name pos:line="65" pos:column="33">min<pos:position pos:line="65" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="38">max<pos:position pos:line="65" pos:column="41"/></name></expr></argument>)<pos:position pos:line="65" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="43"/></expr_stmt>
		<if pos:line="66" pos:column="17">if <condition pos:line="66" pos:column="20">(<expr><operator pos:line="66" pos:column="21">(<pos:position pos:line="66" pos:column="22"/></operator><name pos:line="66" pos:column="22">status<pos:position pos:line="66" pos:column="28"/></name> <operator pos:line="66" pos:column="29">&lt;<pos:position pos:line="66" pos:column="33"/></operator> <literal type="number" pos:line="66" pos:column="31">1<pos:position pos:line="66" pos:column="32"/></literal><operator pos:line="66" pos:column="32">)<pos:position pos:line="66" pos:column="33"/></operator> <operator pos:line="66" pos:column="34">||<pos:position pos:line="66" pos:column="36"/></operator> <operator pos:line="66" pos:column="37">(<pos:position pos:line="66" pos:column="38"/></operator><name pos:line="66" pos:column="38">status<pos:position pos:line="66" pos:column="44"/></name> <operator pos:line="66" pos:column="45">&gt;=<pos:position pos:line="66" pos:column="50"/></operator> <sizeof pos:line="66" pos:column="48">sizeof <argument_list pos:line="66" pos:column="55">(<argument><expr><name pos:line="66" pos:column="56">buffer<pos:position pos:line="66" pos:column="62"/></name></expr></argument>)<pos:position pos:line="66" pos:column="63"/></argument_list></sizeof><operator pos:line="66" pos:column="63">)<pos:position pos:line="66" pos:column="64"/></operator></expr>)<pos:position pos:line="66" pos:column="65"/></condition><then pos:line="66" pos:column="65">
			<block type="pseudo"><break pos:line="67" pos:column="25">break;<pos:position pos:line="67" pos:column="31"/></break></block></then></if>

		<expr_stmt><expr><name><name pos:line="69" pos:column="17">ds_def<pos:position pos:line="69" pos:column="23"/></name><index pos:line="69" pos:column="23">[<expr><name pos:line="69" pos:column="24">ds_num<pos:position pos:line="69" pos:column="30"/></name></expr>]<pos:position pos:line="69" pos:column="31"/></index></name> <operator pos:line="69" pos:column="32">=<pos:position pos:line="69" pos:column="33"/></operator> <call><name pos:line="69" pos:column="34">sstrdup<pos:position pos:line="69" pos:column="41"/></name> <argument_list pos:line="69" pos:column="42">(<argument><expr><name pos:line="69" pos:column="43">buffer<pos:position pos:line="69" pos:column="49"/></name></expr></argument>)<pos:position pos:line="69" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="51"/></expr_stmt>
	}<pos:position pos:line="70" pos:column="10"/></block></for> <comment type="block" pos:line="70" pos:column="11">/* for ds_num = 0 .. ds-&gt;ds_num */</comment>

<cpp:if pos:line="72" pos:column="1">#<cpp:directive pos:line="72" pos:column="2">if<pos:position pos:line="72" pos:column="4"/></cpp:directive> <expr><name pos:line="72" pos:column="5">COLLECT_DEBUG<pos:position pos:line="72" pos:column="18"/></name></expr></cpp:if>
<block pos:line="73" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="74" pos:column="9">int<pos:position pos:line="74" pos:column="12"/></name></type> <name pos:line="74" pos:column="13">i<pos:position pos:line="74" pos:column="14"/></name></decl>;<pos:position pos:line="74" pos:column="15"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="75" pos:column="9">DEBUG<pos:position pos:line="75" pos:column="14"/></name> <argument_list pos:line="75" pos:column="15">(<argument><expr><literal type="string" pos:line="75" pos:column="16">"ds_num = %i"<pos:position pos:line="75" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="31">ds_num<pos:position pos:line="75" pos:column="37"/></name></expr></argument>)<pos:position pos:line="75" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="39"/></expr_stmt>
	<for pos:line="76" pos:column="9">for <control pos:line="76" pos:column="13">(<init><expr><name pos:line="76" pos:column="14">i<pos:position pos:line="76" pos:column="15"/></name> <operator pos:line="76" pos:column="16">=<pos:position pos:line="76" pos:column="17"/></operator> <literal type="number" pos:line="76" pos:column="18">0<pos:position pos:line="76" pos:column="19"/></literal></expr>;<pos:position pos:line="76" pos:column="20"/></init> <condition><expr><name pos:line="76" pos:column="21">i<pos:position pos:line="76" pos:column="22"/></name> <operator pos:line="76" pos:column="23">&lt;<pos:position pos:line="76" pos:column="27"/></operator> <name pos:line="76" pos:column="25">ds_num<pos:position pos:line="76" pos:column="31"/></name></expr>;<pos:position pos:line="76" pos:column="32"/></condition> <incr><expr><name pos:line="76" pos:column="33">i<pos:position pos:line="76" pos:column="34"/></name><operator pos:line="76" pos:column="34">++<pos:position pos:line="76" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="76" pos:column="37"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="77" pos:column="17">DEBUG<pos:position pos:line="77" pos:column="22"/></name> <argument_list pos:line="77" pos:column="23">(<argument><expr><literal type="string" pos:line="77" pos:column="24">"  %s"<pos:position pos:line="77" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="32">ds_def<pos:position pos:line="77" pos:column="38"/></name><index pos:line="77" pos:column="38">[<expr><name pos:line="77" pos:column="39">i<pos:position pos:line="77" pos:column="40"/></name></expr>]<pos:position pos:line="77" pos:column="41"/></index></name></expr></argument>)<pos:position pos:line="77" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="43"/></expr_stmt></block></for>
}<pos:position pos:line="78" pos:column="2"/></block>
<cpp:endif pos:line="79" pos:column="1">#<cpp:directive pos:line="79" pos:column="2">endif<pos:position pos:line="79" pos:column="7"/></cpp:directive></cpp:endif>

	<if pos:line="81" pos:column="9">if <condition pos:line="81" pos:column="12">(<expr><name pos:line="81" pos:column="13">ds_num<pos:position pos:line="81" pos:column="19"/></name> <operator pos:line="81" pos:column="20">!=<pos:position pos:line="81" pos:column="22"/></operator> <name><name pos:line="81" pos:column="23">ds<pos:position pos:line="81" pos:column="25"/></name><operator pos:line="81" pos:column="25">-&gt;<pos:position pos:line="81" pos:column="30"/></operator><name pos:line="81" pos:column="27">ds_num<pos:position pos:line="81" pos:column="33"/></name></name></expr>)<pos:position pos:line="81" pos:column="34"/></condition><then pos:line="81" pos:column="34">
	<block pos:line="82" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="83" pos:column="17">ds_free<pos:position pos:line="83" pos:column="24"/></name> <argument_list pos:line="83" pos:column="25">(<argument><expr><name pos:line="83" pos:column="26">ds_num<pos:position pos:line="83" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="34">ds_def<pos:position pos:line="83" pos:column="40"/></name></expr></argument>)<pos:position pos:line="83" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="42"/></expr_stmt>
		<return pos:line="84" pos:column="17">return <expr><operator pos:line="84" pos:column="24">(<pos:position pos:line="84" pos:column="25"/></operator><operator pos:line="84" pos:column="25">-<pos:position pos:line="84" pos:column="26"/></operator><literal type="number" pos:line="84" pos:column="26">1<pos:position pos:line="84" pos:column="27"/></literal><operator pos:line="84" pos:column="27">)<pos:position pos:line="84" pos:column="28"/></operator></expr>;<pos:position pos:line="84" pos:column="29"/></return>
	}<pos:position pos:line="85" pos:column="10"/></block></then></if>

	<expr_stmt><expr><operator pos:line="87" pos:column="9">*<pos:position pos:line="87" pos:column="10"/></operator><name pos:line="87" pos:column="10">ret<pos:position pos:line="87" pos:column="13"/></name> <operator pos:line="87" pos:column="14">=<pos:position pos:line="87" pos:column="15"/></operator> <name pos:line="87" pos:column="16">ds_def<pos:position pos:line="87" pos:column="22"/></name></expr>;<pos:position pos:line="87" pos:column="23"/></expr_stmt>
	<return pos:line="88" pos:column="9">return <expr><operator pos:line="88" pos:column="16">(<pos:position pos:line="88" pos:column="17"/></operator><name pos:line="88" pos:column="17">ds_num<pos:position pos:line="88" pos:column="23"/></name><operator pos:line="88" pos:column="23">)<pos:position pos:line="88" pos:column="24"/></operator></expr>;<pos:position pos:line="88" pos:column="25"/></return>
}<pos:position pos:line="89" pos:column="2"/></block></function></unit>

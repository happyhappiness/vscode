<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1091_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">submit_values<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">host<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="44">/* {{{ */</comment>
                         <parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name pos:line="2" pos:column="32">char<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">plugin_inst<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="51">const<pos:position pos:line="2" pos:column="56"/></specifier> <name pos:line="2" pos:column="57">char<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">type<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>,
                         <parameter><decl><type><specifier pos:line="3" pos:column="26">const<pos:position pos:line="3" pos:column="31"/></specifier> <name pos:line="3" pos:column="32">char<pos:position pos:line="3" pos:column="36"/></name> <modifier pos:line="3" pos:column="37">*<pos:position pos:line="3" pos:column="38"/></modifier></type><name pos:line="3" pos:column="38">type_inst<pos:position pos:line="3" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="49">value_t<pos:position pos:line="3" pos:column="56"/></name> <modifier pos:line="3" pos:column="57">*<pos:position pos:line="3" pos:column="58"/></modifier></type><name pos:line="3" pos:column="58">values<pos:position pos:line="3" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="66">int<pos:position pos:line="3" pos:column="69"/></name></type> <name pos:line="3" pos:column="70">values_len<pos:position pos:line="3" pos:column="80"/></name></decl></parameter>,
                         <parameter><decl><type><name pos:line="4" pos:column="26">cdtime_t<pos:position pos:line="4" pos:column="34"/></name></type> <name pos:line="4" pos:column="35">timestamp<pos:position pos:line="4" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="46">cdtime_t<pos:position pos:line="4" pos:column="54"/></name></type> <name pos:line="4" pos:column="55">interval<pos:position pos:line="4" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="64"/></parameter_list> <block pos:line="4" pos:column="65">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">value_list_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">vl<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name pos:line="5" pos:column="21">VALUE_LIST_INIT<pos:position pos:line="5" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>

  <expr_stmt><expr><name><name pos:line="7" pos:column="3">vl<pos:position pos:line="7" pos:column="5"/></name><operator pos:line="7" pos:column="5">.<pos:position pos:line="7" pos:column="6"/></operator><name pos:line="7" pos:column="6">values<pos:position pos:line="7" pos:column="12"/></name></name> <operator pos:line="7" pos:column="13">=<pos:position pos:line="7" pos:column="14"/></operator> <name pos:line="7" pos:column="15">values<pos:position pos:line="7" pos:column="21"/></name></expr>;<pos:position pos:line="7" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="8" pos:column="3">vl<pos:position pos:line="8" pos:column="5"/></name><operator pos:line="8" pos:column="5">.<pos:position pos:line="8" pos:column="6"/></operator><name pos:line="8" pos:column="6">values_len<pos:position pos:line="8" pos:column="16"/></name></name> <operator pos:line="8" pos:column="17">=<pos:position pos:line="8" pos:column="18"/></operator> <name pos:line="8" pos:column="19">values_len<pos:position pos:line="8" pos:column="29"/></name></expr>;<pos:position pos:line="8" pos:column="30"/></expr_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">timestamp<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">&gt;<pos:position pos:line="10" pos:column="21"/></operator> <literal type="number" pos:line="10" pos:column="19">0<pos:position pos:line="10" pos:column="20"/></literal></expr>)<pos:position pos:line="10" pos:column="21"/></condition><then pos:line="10" pos:column="21">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="11" pos:column="5">vl<pos:position pos:line="11" pos:column="7"/></name><operator pos:line="11" pos:column="7">.<pos:position pos:line="11" pos:column="8"/></operator><name pos:line="11" pos:column="8">time<pos:position pos:line="11" pos:column="12"/></name></name> <operator pos:line="11" pos:column="13">=<pos:position pos:line="11" pos:column="14"/></operator> <name pos:line="11" pos:column="15">timestamp<pos:position pos:line="11" pos:column="24"/></name></expr>;<pos:position pos:line="11" pos:column="25"/></expr_stmt></block></then></if>

  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">interval<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">&gt;<pos:position pos:line="13" pos:column="20"/></operator> <literal type="number" pos:line="13" pos:column="18">0<pos:position pos:line="13" pos:column="19"/></literal></expr>)<pos:position pos:line="13" pos:column="20"/></condition><then pos:line="13" pos:column="20">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="14" pos:column="5">vl<pos:position pos:line="14" pos:column="7"/></name><operator pos:line="14" pos:column="7">.<pos:position pos:line="14" pos:column="8"/></operator><name pos:line="14" pos:column="8">interval<pos:position pos:line="14" pos:column="16"/></name></name> <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator> <name pos:line="14" pos:column="19">interval<pos:position pos:line="14" pos:column="27"/></name></expr>;<pos:position pos:line="14" pos:column="28"/></expr_stmt></block></then></if>

  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">host<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">!=<pos:position pos:line="16" pos:column="14"/></operator> <name pos:line="16" pos:column="15">NULL<pos:position pos:line="16" pos:column="19"/></name></expr>)<pos:position pos:line="16" pos:column="20"/></condition><then pos:line="16" pos:column="20">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="5">sstrncpy<pos:position pos:line="17" pos:column="13"/></name><argument_list pos:line="17" pos:column="13">(<argument><expr><name><name pos:line="17" pos:column="14">vl<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">.<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="17">host<pos:position pos:line="17" pos:column="21"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="23">host<pos:position pos:line="17" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="29">sizeof<argument_list pos:line="17" pos:column="35">(<argument><expr><name><name pos:line="17" pos:column="36">vl<pos:position pos:line="17" pos:column="38"/></name><operator pos:line="17" pos:column="38">.<pos:position pos:line="17" pos:column="39"/></operator><name pos:line="17" pos:column="39">host<pos:position pos:line="17" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="46"/></expr_stmt></block></then>
  <else pos:line="18" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="5">sstrncpy<pos:position pos:line="19" pos:column="13"/></name><argument_list pos:line="19" pos:column="13">(<argument><expr><name><name pos:line="19" pos:column="14">vl<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">.<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="17">host<pos:position pos:line="19" pos:column="21"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="23">hostname_g<pos:position pos:line="19" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="35">sizeof<argument_list pos:line="19" pos:column="41">(<argument><expr><name><name pos:line="19" pos:column="42">vl<pos:position pos:line="19" pos:column="44"/></name><operator pos:line="19" pos:column="44">.<pos:position pos:line="19" pos:column="45"/></operator><name pos:line="19" pos:column="45">host<pos:position pos:line="19" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="52"/></expr_stmt></block></else></if>
  <expr_stmt><expr><call><name pos:line="20" pos:column="3">sstrncpy<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><name><name pos:line="20" pos:column="12">vl<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">.<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="15">plugin<pos:position pos:line="20" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="23">"netapp"<pos:position pos:line="20" pos:column="31"/></literal></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="33">sizeof<argument_list pos:line="20" pos:column="39">(<argument><expr><name><name pos:line="20" pos:column="40">vl<pos:position pos:line="20" pos:column="42"/></name><operator pos:line="20" pos:column="42">.<pos:position pos:line="20" pos:column="43"/></operator><name pos:line="20" pos:column="43">plugin<pos:position pos:line="20" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="52"/></expr_stmt>
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><name pos:line="21" pos:column="7">plugin_inst<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">!=<pos:position pos:line="21" pos:column="21"/></operator> <name pos:line="21" pos:column="22">NULL<pos:position pos:line="21" pos:column="26"/></name></expr>)<pos:position pos:line="21" pos:column="27"/></condition><then pos:line="21" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="5">sstrncpy<pos:position pos:line="22" pos:column="13"/></name><argument_list pos:line="22" pos:column="13">(<argument><expr><name><name pos:line="22" pos:column="14">vl<pos:position pos:line="22" pos:column="16"/></name><operator pos:line="22" pos:column="16">.<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="17">plugin_instance<pos:position pos:line="22" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="34">plugin_inst<pos:position pos:line="22" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="47">sizeof<argument_list pos:line="22" pos:column="53">(<argument><expr><name><name pos:line="22" pos:column="54">vl<pos:position pos:line="22" pos:column="56"/></name><operator pos:line="22" pos:column="56">.<pos:position pos:line="22" pos:column="57"/></operator><name pos:line="22" pos:column="57">plugin_instance<pos:position pos:line="22" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="75"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="23" pos:column="3">sstrncpy<pos:position pos:line="23" pos:column="11"/></name><argument_list pos:line="23" pos:column="11">(<argument><expr><name><name pos:line="23" pos:column="12">vl<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">.<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="15">type<pos:position pos:line="23" pos:column="19"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="21">type<pos:position pos:line="23" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="27">sizeof<argument_list pos:line="23" pos:column="33">(<argument><expr><name><name pos:line="23" pos:column="34">vl<pos:position pos:line="23" pos:column="36"/></name><operator pos:line="23" pos:column="36">.<pos:position pos:line="23" pos:column="37"/></operator><name pos:line="23" pos:column="37">type<pos:position pos:line="23" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="44"/></expr_stmt>
  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><name pos:line="24" pos:column="7">type_inst<pos:position pos:line="24" pos:column="16"/></name> <operator pos:line="24" pos:column="17">!=<pos:position pos:line="24" pos:column="19"/></operator> <name pos:line="24" pos:column="20">NULL<pos:position pos:line="24" pos:column="24"/></name></expr>)<pos:position pos:line="24" pos:column="25"/></condition><then pos:line="24" pos:column="25">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="5">sstrncpy<pos:position pos:line="25" pos:column="13"/></name><argument_list pos:line="25" pos:column="13">(<argument><expr><name><name pos:line="25" pos:column="14">vl<pos:position pos:line="25" pos:column="16"/></name><operator pos:line="25" pos:column="16">.<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="17">type_instance<pos:position pos:line="25" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="32">type_inst<pos:position pos:line="25" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="43">sizeof<argument_list pos:line="25" pos:column="49">(<argument><expr><name><name pos:line="25" pos:column="50">vl<pos:position pos:line="25" pos:column="52"/></name><operator pos:line="25" pos:column="52">.<pos:position pos:line="25" pos:column="53"/></operator><name pos:line="25" pos:column="53">type_instance<pos:position pos:line="25" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="69"/></expr_stmt></block></then></if>

  <return pos:line="27" pos:column="3">return <expr><operator pos:line="27" pos:column="10">(<pos:position pos:line="27" pos:column="11"/></operator><call><name pos:line="27" pos:column="11">plugin_dispatch_values<pos:position pos:line="27" pos:column="33"/></name><argument_list pos:line="27" pos:column="33">(<argument><expr><operator pos:line="27" pos:column="34">&amp;<pos:position pos:line="27" pos:column="39"/></operator><name pos:line="27" pos:column="35">vl<pos:position pos:line="27" pos:column="37"/></name></expr></argument>)<pos:position pos:line="27" pos:column="38"/></argument_list></call><operator pos:line="27" pos:column="38">)<pos:position pos:line="27" pos:column="39"/></operator></expr>;<pos:position pos:line="27" pos:column="40"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

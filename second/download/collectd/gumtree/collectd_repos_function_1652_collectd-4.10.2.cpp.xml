<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1652_collectd-4.10.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">plugin_notification_meta_copy<pos:position pos:line="1" pos:column="34"/></name> <parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">notification_t<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">dst<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
    <parameter><decl><type><specifier pos:line="2" pos:column="5">const<pos:position pos:line="2" pos:column="10"/></specifier> <name pos:line="2" pos:column="11">notification_t<pos:position pos:line="2" pos:column="25"/></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type><name pos:line="2" pos:column="27">src<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="31"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">notification_meta_t<pos:position pos:line="4" pos:column="22"/></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">meta<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">assert<pos:position pos:line="6" pos:column="9"/></name> <argument_list pos:line="6" pos:column="10">(<argument><expr><name pos:line="6" pos:column="11">dst<pos:position pos:line="6" pos:column="14"/></name> <operator pos:line="6" pos:column="15">!=<pos:position pos:line="6" pos:column="17"/></operator> <name pos:line="6" pos:column="18">NULL<pos:position pos:line="6" pos:column="22"/></name></expr></argument>)<pos:position pos:line="6" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">assert<pos:position pos:line="7" pos:column="9"/></name> <argument_list pos:line="7" pos:column="10">(<argument><expr><name pos:line="7" pos:column="11">src<pos:position pos:line="7" pos:column="14"/></name> <operator pos:line="7" pos:column="15">!=<pos:position pos:line="7" pos:column="17"/></operator> <name pos:line="7" pos:column="18">NULL<pos:position pos:line="7" pos:column="22"/></name></expr></argument>)<pos:position pos:line="7" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">assert<pos:position pos:line="8" pos:column="9"/></name> <argument_list pos:line="8" pos:column="10">(<argument><expr><name pos:line="8" pos:column="11">dst<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">!=<pos:position pos:line="8" pos:column="17"/></operator> <name pos:line="8" pos:column="18">src<pos:position pos:line="8" pos:column="21"/></name></expr></argument>)<pos:position pos:line="8" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">assert<pos:position pos:line="9" pos:column="9"/></name> <argument_list pos:line="9" pos:column="10">(<argument><expr><operator pos:line="9" pos:column="11">(<pos:position pos:line="9" pos:column="12"/></operator><name><name pos:line="9" pos:column="12">src<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">-&gt;<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="17">meta<pos:position pos:line="9" pos:column="21"/></name></name> <operator pos:line="9" pos:column="22">==<pos:position pos:line="9" pos:column="24"/></operator> <name pos:line="9" pos:column="25">NULL<pos:position pos:line="9" pos:column="29"/></name><operator pos:line="9" pos:column="29">)<pos:position pos:line="9" pos:column="30"/></operator> <operator pos:line="9" pos:column="31">||<pos:position pos:line="9" pos:column="33"/></operator> <operator pos:line="9" pos:column="34">(<pos:position pos:line="9" pos:column="35"/></operator><name><name pos:line="9" pos:column="35">src<pos:position pos:line="9" pos:column="38"/></name><operator pos:line="9" pos:column="38">-&gt;<pos:position pos:line="9" pos:column="43"/></operator><name pos:line="9" pos:column="40">meta<pos:position pos:line="9" pos:column="44"/></name></name> <operator pos:line="9" pos:column="45">!=<pos:position pos:line="9" pos:column="47"/></operator> <name><name pos:line="9" pos:column="48">dst<pos:position pos:line="9" pos:column="51"/></name><operator pos:line="9" pos:column="51">-&gt;<pos:position pos:line="9" pos:column="56"/></operator><name pos:line="9" pos:column="53">meta<pos:position pos:line="9" pos:column="57"/></name></name><operator pos:line="9" pos:column="57">)<pos:position pos:line="9" pos:column="58"/></operator></expr></argument>)<pos:position pos:line="9" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="60"/></expr_stmt>

  <for pos:line="11" pos:column="3">for <control pos:line="11" pos:column="7">(<init><expr><name pos:line="11" pos:column="8">meta<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">=<pos:position pos:line="11" pos:column="14"/></operator> <name><name pos:line="11" pos:column="15">src<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">-&gt;<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="20">meta<pos:position pos:line="11" pos:column="24"/></name></name></expr>;<pos:position pos:line="11" pos:column="25"/></init> <condition><expr><name pos:line="11" pos:column="26">meta<pos:position pos:line="11" pos:column="30"/></name> <operator pos:line="11" pos:column="31">!=<pos:position pos:line="11" pos:column="33"/></operator> <name pos:line="11" pos:column="34">NULL<pos:position pos:line="11" pos:column="38"/></name></expr>;<pos:position pos:line="11" pos:column="39"/></condition> <incr><expr><name pos:line="11" pos:column="40">meta<pos:position pos:line="11" pos:column="44"/></name> <operator pos:line="11" pos:column="45">=<pos:position pos:line="11" pos:column="46"/></operator> <name><name pos:line="11" pos:column="47">meta<pos:position pos:line="11" pos:column="51"/></name><operator pos:line="11" pos:column="51">-&gt;<pos:position pos:line="11" pos:column="56"/></operator><name pos:line="11" pos:column="53">next<pos:position pos:line="11" pos:column="57"/></name></name></expr></incr>)<pos:position pos:line="11" pos:column="58"/></control>
  <block pos:line="12" pos:column="3">{
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name><name pos:line="13" pos:column="9">meta<pos:position pos:line="13" pos:column="13"/></name><operator pos:line="13" pos:column="13">-&gt;<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="15">type<pos:position pos:line="13" pos:column="19"/></name></name> <operator pos:line="13" pos:column="20">==<pos:position pos:line="13" pos:column="22"/></operator> <name pos:line="13" pos:column="23">NM_TYPE_STRING<pos:position pos:line="13" pos:column="37"/></name></expr>)<pos:position pos:line="13" pos:column="38"/></condition><then pos:line="13" pos:column="38">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="7">plugin_notification_meta_add_string<pos:position pos:line="14" pos:column="42"/></name> <argument_list pos:line="14" pos:column="43">(<argument><expr><name pos:line="14" pos:column="44">dst<pos:position pos:line="14" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="49">meta<pos:position pos:line="14" pos:column="53"/></name><operator pos:line="14" pos:column="53">-&gt;<pos:position pos:line="14" pos:column="58"/></operator><name pos:line="14" pos:column="55">name<pos:position pos:line="14" pos:column="59"/></name></name></expr></argument>,
          <argument><expr><name><name pos:line="15" pos:column="11">meta<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">-&gt;<pos:position pos:line="15" pos:column="20"/></operator><name pos:line="15" pos:column="17">nm_value<pos:position pos:line="15" pos:column="25"/></name><operator pos:line="15" pos:column="25">.<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="26">nm_string<pos:position pos:line="15" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="37"/></expr_stmt></block></then>
    <elseif pos:line="16" pos:column="5">else <if pos:line="16" pos:column="10">if <condition pos:line="16" pos:column="13">(<expr><name><name pos:line="16" pos:column="14">meta<pos:position pos:line="16" pos:column="18"/></name><operator pos:line="16" pos:column="18">-&gt;<pos:position pos:line="16" pos:column="23"/></operator><name pos:line="16" pos:column="20">type<pos:position pos:line="16" pos:column="24"/></name></name> <operator pos:line="16" pos:column="25">==<pos:position pos:line="16" pos:column="27"/></operator> <name pos:line="16" pos:column="28">NM_TYPE_SIGNED_INT<pos:position pos:line="16" pos:column="46"/></name></expr>)<pos:position pos:line="16" pos:column="47"/></condition><then pos:line="16" pos:column="47">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="7">plugin_notification_meta_add_signed_int<pos:position pos:line="17" pos:column="46"/></name> <argument_list pos:line="17" pos:column="47">(<argument><expr><name pos:line="17" pos:column="48">dst<pos:position pos:line="17" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="53">meta<pos:position pos:line="17" pos:column="57"/></name><operator pos:line="17" pos:column="57">-&gt;<pos:position pos:line="17" pos:column="62"/></operator><name pos:line="17" pos:column="59">name<pos:position pos:line="17" pos:column="63"/></name></name></expr></argument>,
          <argument><expr><name><name pos:line="18" pos:column="11">meta<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">-&gt;<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="17">nm_value<pos:position pos:line="18" pos:column="25"/></name><operator pos:line="18" pos:column="25">.<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="26">nm_signed_int<pos:position pos:line="18" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="41"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="19" pos:column="5">else <if pos:line="19" pos:column="10">if <condition pos:line="19" pos:column="13">(<expr><name><name pos:line="19" pos:column="14">meta<pos:position pos:line="19" pos:column="18"/></name><operator pos:line="19" pos:column="18">-&gt;<pos:position pos:line="19" pos:column="23"/></operator><name pos:line="19" pos:column="20">type<pos:position pos:line="19" pos:column="24"/></name></name> <operator pos:line="19" pos:column="25">==<pos:position pos:line="19" pos:column="27"/></operator> <name pos:line="19" pos:column="28">NM_TYPE_UNSIGNED_INT<pos:position pos:line="19" pos:column="48"/></name></expr>)<pos:position pos:line="19" pos:column="49"/></condition><then pos:line="19" pos:column="49">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="7">plugin_notification_meta_add_unsigned_int<pos:position pos:line="20" pos:column="48"/></name> <argument_list pos:line="20" pos:column="49">(<argument><expr><name pos:line="20" pos:column="50">dst<pos:position pos:line="20" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="55">meta<pos:position pos:line="20" pos:column="59"/></name><operator pos:line="20" pos:column="59">-&gt;<pos:position pos:line="20" pos:column="64"/></operator><name pos:line="20" pos:column="61">name<pos:position pos:line="20" pos:column="65"/></name></name></expr></argument>,
          <argument><expr><name><name pos:line="21" pos:column="11">meta<pos:position pos:line="21" pos:column="15"/></name><operator pos:line="21" pos:column="15">-&gt;<pos:position pos:line="21" pos:column="20"/></operator><name pos:line="21" pos:column="17">nm_value<pos:position pos:line="21" pos:column="25"/></name><operator pos:line="21" pos:column="25">.<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="26">nm_unsigned_int<pos:position pos:line="21" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="43"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="22" pos:column="5">else <if pos:line="22" pos:column="10">if <condition pos:line="22" pos:column="13">(<expr><name><name pos:line="22" pos:column="14">meta<pos:position pos:line="22" pos:column="18"/></name><operator pos:line="22" pos:column="18">-&gt;<pos:position pos:line="22" pos:column="23"/></operator><name pos:line="22" pos:column="20">type<pos:position pos:line="22" pos:column="24"/></name></name> <operator pos:line="22" pos:column="25">==<pos:position pos:line="22" pos:column="27"/></operator> <name pos:line="22" pos:column="28">NM_TYPE_DOUBLE<pos:position pos:line="22" pos:column="42"/></name></expr>)<pos:position pos:line="22" pos:column="43"/></condition><then pos:line="22" pos:column="43">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="7">plugin_notification_meta_add_double<pos:position pos:line="23" pos:column="42"/></name> <argument_list pos:line="23" pos:column="43">(<argument><expr><name pos:line="23" pos:column="44">dst<pos:position pos:line="23" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="49">meta<pos:position pos:line="23" pos:column="53"/></name><operator pos:line="23" pos:column="53">-&gt;<pos:position pos:line="23" pos:column="58"/></operator><name pos:line="23" pos:column="55">name<pos:position pos:line="23" pos:column="59"/></name></name></expr></argument>,
          <argument><expr><name><name pos:line="24" pos:column="11">meta<pos:position pos:line="24" pos:column="15"/></name><operator pos:line="24" pos:column="15">-&gt;<pos:position pos:line="24" pos:column="20"/></operator><name pos:line="24" pos:column="17">nm_value<pos:position pos:line="24" pos:column="25"/></name><operator pos:line="24" pos:column="25">.<pos:position pos:line="24" pos:column="26"/></operator><name pos:line="24" pos:column="26">nm_double<pos:position pos:line="24" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="37"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="25" pos:column="5">else <if pos:line="25" pos:column="10">if <condition pos:line="25" pos:column="13">(<expr><name><name pos:line="25" pos:column="14">meta<pos:position pos:line="25" pos:column="18"/></name><operator pos:line="25" pos:column="18">-&gt;<pos:position pos:line="25" pos:column="23"/></operator><name pos:line="25" pos:column="20">type<pos:position pos:line="25" pos:column="24"/></name></name> <operator pos:line="25" pos:column="25">==<pos:position pos:line="25" pos:column="27"/></operator> <name pos:line="25" pos:column="28">NM_TYPE_BOOLEAN<pos:position pos:line="25" pos:column="43"/></name></expr>)<pos:position pos:line="25" pos:column="44"/></condition><then pos:line="25" pos:column="44">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="7">plugin_notification_meta_add_boolean<pos:position pos:line="26" pos:column="43"/></name> <argument_list pos:line="26" pos:column="44">(<argument><expr><name pos:line="26" pos:column="45">dst<pos:position pos:line="26" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="50">meta<pos:position pos:line="26" pos:column="54"/></name><operator pos:line="26" pos:column="54">-&gt;<pos:position pos:line="26" pos:column="59"/></operator><name pos:line="26" pos:column="56">name<pos:position pos:line="26" pos:column="60"/></name></name></expr></argument>,
          <argument><expr><name><name pos:line="27" pos:column="11">meta<pos:position pos:line="27" pos:column="15"/></name><operator pos:line="27" pos:column="15">-&gt;<pos:position pos:line="27" pos:column="20"/></operator><name pos:line="27" pos:column="17">nm_value<pos:position pos:line="27" pos:column="25"/></name><operator pos:line="27" pos:column="25">.<pos:position pos:line="27" pos:column="26"/></operator><name pos:line="27" pos:column="26">nm_boolean<pos:position pos:line="27" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="38"/></expr_stmt></block></then></if></elseif></if>
  }<pos:position pos:line="28" pos:column="4"/></block></for>

  <return pos:line="30" pos:column="3">return <expr><operator pos:line="30" pos:column="10">(<pos:position pos:line="30" pos:column="11"/></operator><literal type="number" pos:line="30" pos:column="11">0<pos:position pos:line="30" pos:column="12"/></literal><operator pos:line="30" pos:column="12">)<pos:position pos:line="30" pos:column="13"/></operator></expr>;<pos:position pos:line="30" pos:column="14"/></return>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

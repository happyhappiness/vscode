<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_811_collectd-4.5.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">config<pos:position pos:line="1" pos:column="18"/></name> <parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><specifier pos:line="1" pos:column="20">const<pos:position pos:line="1" pos:column="25"/></specifier> <name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">key<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="37">const<pos:position pos:line="1" pos:column="42"/></specifier> <name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">value<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><call><name pos:line="3" pos:column="13">strcasecmp<pos:position pos:line="3" pos:column="23"/></name> <argument_list pos:line="3" pos:column="24">(<argument><expr><name pos:line="3" pos:column="25">key<pos:position pos:line="3" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="30">"host"<pos:position pos:line="3" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="37"/></argument_list></call> <operator pos:line="3" pos:column="38">==<pos:position pos:line="3" pos:column="40"/></operator> <literal type="number" pos:line="3" pos:column="41">0<pos:position pos:line="3" pos:column="42"/></literal></expr>)<pos:position pos:line="3" pos:column="43"/></condition><then pos:line="3" pos:column="43">
		<block type="pseudo"><return pos:line="4" pos:column="17">return <expr><operator pos:line="4" pos:column="24">(<pos:position pos:line="4" pos:column="25"/></operator><ternary><condition><expr><operator pos:line="4" pos:column="25">(<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="26">host<pos:position pos:line="4" pos:column="30"/></name> <operator pos:line="4" pos:column="31">=<pos:position pos:line="4" pos:column="32"/></operator> <call><name pos:line="4" pos:column="33">strdup<pos:position pos:line="4" pos:column="39"/></name> <argument_list pos:line="4" pos:column="40">(<argument><expr><name pos:line="4" pos:column="41">value<pos:position pos:line="4" pos:column="46"/></name></expr></argument>)<pos:position pos:line="4" pos:column="47"/></argument_list></call><operator pos:line="4" pos:column="47">)<pos:position pos:line="4" pos:column="48"/></operator> <operator pos:line="4" pos:column="49">==<pos:position pos:line="4" pos:column="51"/></operator> <name pos:line="4" pos:column="52">NULL<pos:position pos:line="4" pos:column="56"/></name></expr> ?<pos:position pos:line="4" pos:column="58"/></condition><then pos:line="4" pos:column="58"> <expr><literal type="number" pos:line="4" pos:column="59">1<pos:position pos:line="4" pos:column="60"/></literal></expr> <pos:position pos:line="4" pos:column="61"/></then><else pos:line="4" pos:column="61">: <expr><literal type="number" pos:line="4" pos:column="63">0<pos:position pos:line="4" pos:column="64"/></literal></expr></else></ternary><operator pos:line="4" pos:column="64">)<pos:position pos:line="4" pos:column="65"/></operator></expr>;<pos:position pos:line="4" pos:column="66"/></return></block></then>
	<elseif pos:line="5" pos:column="9">else <if pos:line="5" pos:column="14">if <condition pos:line="5" pos:column="17">(<expr><call><name pos:line="5" pos:column="18">strcasecmp<pos:position pos:line="5" pos:column="28"/></name> <argument_list pos:line="5" pos:column="29">(<argument><expr><name pos:line="5" pos:column="30">key<pos:position pos:line="5" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="35">"user"<pos:position pos:line="5" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="42"/></argument_list></call> <operator pos:line="5" pos:column="43">==<pos:position pos:line="5" pos:column="45"/></operator> <literal type="number" pos:line="5" pos:column="46">0<pos:position pos:line="5" pos:column="47"/></literal></expr>)<pos:position pos:line="5" pos:column="48"/></condition><then pos:line="5" pos:column="48">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><operator pos:line="6" pos:column="24">(<pos:position pos:line="6" pos:column="25"/></operator><ternary><condition><expr><operator pos:line="6" pos:column="25">(<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="26">user<pos:position pos:line="6" pos:column="30"/></name> <operator pos:line="6" pos:column="31">=<pos:position pos:line="6" pos:column="32"/></operator> <call><name pos:line="6" pos:column="33">strdup<pos:position pos:line="6" pos:column="39"/></name> <argument_list pos:line="6" pos:column="40">(<argument><expr><name pos:line="6" pos:column="41">value<pos:position pos:line="6" pos:column="46"/></name></expr></argument>)<pos:position pos:line="6" pos:column="47"/></argument_list></call><operator pos:line="6" pos:column="47">)<pos:position pos:line="6" pos:column="48"/></operator> <operator pos:line="6" pos:column="49">==<pos:position pos:line="6" pos:column="51"/></operator> <name pos:line="6" pos:column="52">NULL<pos:position pos:line="6" pos:column="56"/></name></expr> ?<pos:position pos:line="6" pos:column="58"/></condition><then pos:line="6" pos:column="58"> <expr><literal type="number" pos:line="6" pos:column="59">1<pos:position pos:line="6" pos:column="60"/></literal></expr> <pos:position pos:line="6" pos:column="61"/></then><else pos:line="6" pos:column="61">: <expr><literal type="number" pos:line="6" pos:column="63">0<pos:position pos:line="6" pos:column="64"/></literal></expr></else></ternary><operator pos:line="6" pos:column="64">)<pos:position pos:line="6" pos:column="65"/></operator></expr>;<pos:position pos:line="6" pos:column="66"/></return></block></then></if></elseif>
	<elseif pos:line="7" pos:column="9">else <if pos:line="7" pos:column="14">if <condition pos:line="7" pos:column="17">(<expr><call><name pos:line="7" pos:column="18">strcasecmp<pos:position pos:line="7" pos:column="28"/></name> <argument_list pos:line="7" pos:column="29">(<argument><expr><name pos:line="7" pos:column="30">key<pos:position pos:line="7" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="35">"password"<pos:position pos:line="7" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="46"/></argument_list></call> <operator pos:line="7" pos:column="47">==<pos:position pos:line="7" pos:column="49"/></operator> <literal type="number" pos:line="7" pos:column="50">0<pos:position pos:line="7" pos:column="51"/></literal></expr>)<pos:position pos:line="7" pos:column="52"/></condition><then pos:line="7" pos:column="52">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><operator pos:line="8" pos:column="24">(<pos:position pos:line="8" pos:column="25"/></operator><ternary><condition><expr><operator pos:line="8" pos:column="25">(<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="26">pass<pos:position pos:line="8" pos:column="30"/></name> <operator pos:line="8" pos:column="31">=<pos:position pos:line="8" pos:column="32"/></operator> <call><name pos:line="8" pos:column="33">strdup<pos:position pos:line="8" pos:column="39"/></name> <argument_list pos:line="8" pos:column="40">(<argument><expr><name pos:line="8" pos:column="41">value<pos:position pos:line="8" pos:column="46"/></name></expr></argument>)<pos:position pos:line="8" pos:column="47"/></argument_list></call><operator pos:line="8" pos:column="47">)<pos:position pos:line="8" pos:column="48"/></operator> <operator pos:line="8" pos:column="49">==<pos:position pos:line="8" pos:column="51"/></operator> <name pos:line="8" pos:column="52">NULL<pos:position pos:line="8" pos:column="56"/></name></expr> ?<pos:position pos:line="8" pos:column="58"/></condition><then pos:line="8" pos:column="58"> <expr><literal type="number" pos:line="8" pos:column="59">1<pos:position pos:line="8" pos:column="60"/></literal></expr> <pos:position pos:line="8" pos:column="61"/></then><else pos:line="8" pos:column="61">: <expr><literal type="number" pos:line="8" pos:column="63">0<pos:position pos:line="8" pos:column="64"/></literal></expr></else></ternary><operator pos:line="8" pos:column="64">)<pos:position pos:line="8" pos:column="65"/></operator></expr>;<pos:position pos:line="8" pos:column="66"/></return></block></then></if></elseif>
	<elseif pos:line="9" pos:column="9">else <if pos:line="9" pos:column="14">if <condition pos:line="9" pos:column="17">(<expr><call><name pos:line="9" pos:column="18">strcasecmp<pos:position pos:line="9" pos:column="28"/></name> <argument_list pos:line="9" pos:column="29">(<argument><expr><name pos:line="9" pos:column="30">key<pos:position pos:line="9" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="35">"database"<pos:position pos:line="9" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="46"/></argument_list></call> <operator pos:line="9" pos:column="47">==<pos:position pos:line="9" pos:column="49"/></operator> <literal type="number" pos:line="9" pos:column="50">0<pos:position pos:line="9" pos:column="51"/></literal></expr>)<pos:position pos:line="9" pos:column="52"/></condition><then pos:line="9" pos:column="52">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><operator pos:line="10" pos:column="24">(<pos:position pos:line="10" pos:column="25"/></operator><ternary><condition><expr><operator pos:line="10" pos:column="25">(<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="26">db<pos:position pos:line="10" pos:column="28"/></name> <operator pos:line="10" pos:column="29">=<pos:position pos:line="10" pos:column="30"/></operator> <call><name pos:line="10" pos:column="31">strdup<pos:position pos:line="10" pos:column="37"/></name> <argument_list pos:line="10" pos:column="38">(<argument><expr><name pos:line="10" pos:column="39">value<pos:position pos:line="10" pos:column="44"/></name></expr></argument>)<pos:position pos:line="10" pos:column="45"/></argument_list></call><operator pos:line="10" pos:column="45">)<pos:position pos:line="10" pos:column="46"/></operator> <operator pos:line="10" pos:column="47">==<pos:position pos:line="10" pos:column="49"/></operator> <name pos:line="10" pos:column="50">NULL<pos:position pos:line="10" pos:column="54"/></name></expr> ?<pos:position pos:line="10" pos:column="56"/></condition><then pos:line="10" pos:column="56"> <expr><literal type="number" pos:line="10" pos:column="57">1<pos:position pos:line="10" pos:column="58"/></literal></expr> <pos:position pos:line="10" pos:column="59"/></then><else pos:line="10" pos:column="59">: <expr><literal type="number" pos:line="10" pos:column="61">0<pos:position pos:line="10" pos:column="62"/></literal></expr></else></ternary><operator pos:line="10" pos:column="62">)<pos:position pos:line="10" pos:column="63"/></operator></expr>;<pos:position pos:line="10" pos:column="64"/></return></block></then></if></elseif>
	<else pos:line="11" pos:column="9">else
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><operator pos:line="12" pos:column="24">(<pos:position pos:line="12" pos:column="25"/></operator><operator pos:line="12" pos:column="25">-<pos:position pos:line="12" pos:column="26"/></operator><literal type="number" pos:line="12" pos:column="26">1<pos:position pos:line="12" pos:column="27"/></literal><operator pos:line="12" pos:column="27">)<pos:position pos:line="12" pos:column="28"/></operator></expr>;<pos:position pos:line="12" pos:column="29"/></return></block></else></if>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

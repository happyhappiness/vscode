<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_843_collectd-4.10.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">free_cfg_volume_usage<pos:position pos:line="1" pos:column="34"/></name> <parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">cfg_volume_usage_t<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">cvu<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list> <comment type="block" pos:line="1" pos:column="61">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">data_volume_usage_t<pos:position pos:line="3" pos:column="28"/></name> <modifier pos:line="3" pos:column="29">*<pos:position pos:line="3" pos:column="30"/></modifier></type><name pos:line="3" pos:column="30">data<pos:position pos:line="3" pos:column="34"/></name></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">cvu<pos:position pos:line="5" pos:column="16"/></name> <operator pos:line="5" pos:column="17">==<pos:position pos:line="5" pos:column="19"/></operator> <name pos:line="5" pos:column="20">NULL<pos:position pos:line="5" pos:column="24"/></name></expr>)<pos:position pos:line="5" pos:column="25"/></condition><then pos:line="5" pos:column="25">
		<block type="pseudo"><return pos:line="6" pos:column="17">return;<pos:position pos:line="6" pos:column="24"/></return></block></then></if>

	<comment type="block" pos:line="8" pos:column="9">/* Free the ignorelists */</comment>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">ignorelist_free<pos:position pos:line="9" pos:column="24"/></name> <argument_list pos:line="9" pos:column="25">(<argument><expr><name><name pos:line="9" pos:column="26">cvu<pos:position pos:line="9" pos:column="29"/></name><operator pos:line="9" pos:column="29">-&gt;<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="31">il_capacity<pos:position pos:line="9" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="10" pos:column="9">ignorelist_free<pos:position pos:line="10" pos:column="24"/></name> <argument_list pos:line="10" pos:column="25">(<argument><expr><name><name pos:line="10" pos:column="26">cvu<pos:position pos:line="10" pos:column="29"/></name><operator pos:line="10" pos:column="29">-&gt;<pos:position pos:line="10" pos:column="34"/></operator><name pos:line="10" pos:column="31">il_snapshot<pos:position pos:line="10" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="44"/></expr_stmt>

	<comment type="block" pos:line="12" pos:column="9">/* Free the linked list of volumes */</comment>
	<expr_stmt><expr><name pos:line="13" pos:column="9">data<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <name><name pos:line="13" pos:column="16">cvu<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">-&gt;<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="21">volumes<pos:position pos:line="13" pos:column="28"/></name></name></expr>;<pos:position pos:line="13" pos:column="29"/></expr_stmt>
	<while pos:line="14" pos:column="9">while <condition pos:line="14" pos:column="15">(<expr><name pos:line="14" pos:column="16">data<pos:position pos:line="14" pos:column="20"/></name> <operator pos:line="14" pos:column="21">!=<pos:position pos:line="14" pos:column="23"/></operator> <name pos:line="14" pos:column="24">NULL<pos:position pos:line="14" pos:column="28"/></name></expr>)<pos:position pos:line="14" pos:column="29"/></condition>
	<block pos:line="15" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="16" pos:column="17">data_volume_usage_t<pos:position pos:line="16" pos:column="36"/></name> <modifier pos:line="16" pos:column="37">*<pos:position pos:line="16" pos:column="38"/></modifier></type><name pos:line="16" pos:column="38">next<pos:position pos:line="16" pos:column="42"/></name> <init pos:line="16" pos:column="43">= <expr><name><name pos:line="16" pos:column="45">data<pos:position pos:line="16" pos:column="49"/></name><operator pos:line="16" pos:column="49">-&gt;<pos:position pos:line="16" pos:column="54"/></operator><name pos:line="16" pos:column="51">next<pos:position pos:line="16" pos:column="55"/></name></name></expr></init></decl>;<pos:position pos:line="16" pos:column="56"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">sfree<pos:position pos:line="17" pos:column="22"/></name> <argument_list pos:line="17" pos:column="23">(<argument><expr><name><name pos:line="17" pos:column="24">data<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">-&gt;<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="30">name<pos:position pos:line="17" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="36"/></expr_stmt>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name><name pos:line="18" pos:column="21">data<pos:position pos:line="18" pos:column="25"/></name><operator pos:line="18" pos:column="25">-&gt;<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="27">snap_query<pos:position pos:line="18" pos:column="37"/></name></name> <operator pos:line="18" pos:column="38">!=<pos:position pos:line="18" pos:column="40"/></operator> <name pos:line="18" pos:column="41">NULL<pos:position pos:line="18" pos:column="45"/></name></expr>)<pos:position pos:line="18" pos:column="46"/></condition><then pos:line="18" pos:column="46">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="25">na_elem_free<pos:position pos:line="19" pos:column="37"/></name><argument_list pos:line="19" pos:column="37">(<argument><expr><name><name pos:line="19" pos:column="38">data<pos:position pos:line="19" pos:column="42"/></name><operator pos:line="19" pos:column="42">-&gt;<pos:position pos:line="19" pos:column="47"/></operator><name pos:line="19" pos:column="44">snap_query<pos:position pos:line="19" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="56"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">sfree<pos:position pos:line="20" pos:column="22"/></name> <argument_list pos:line="20" pos:column="23">(<argument><expr><name pos:line="20" pos:column="24">data<pos:position pos:line="20" pos:column="28"/></name></expr></argument>)<pos:position pos:line="20" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><name pos:line="21" pos:column="17">data<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">=<pos:position pos:line="21" pos:column="23"/></operator> <name pos:line="21" pos:column="24">next<pos:position pos:line="21" pos:column="28"/></name></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="22" pos:column="10"/></block></while>

	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name><name pos:line="24" pos:column="13">cvu<pos:position pos:line="24" pos:column="16"/></name><operator pos:line="24" pos:column="16">-&gt;<pos:position pos:line="24" pos:column="21"/></operator><name pos:line="24" pos:column="18">query<pos:position pos:line="24" pos:column="23"/></name></name> <operator pos:line="24" pos:column="24">!=<pos:position pos:line="24" pos:column="26"/></operator> <name pos:line="24" pos:column="27">NULL<pos:position pos:line="24" pos:column="31"/></name></expr>)<pos:position pos:line="24" pos:column="32"/></condition><then pos:line="24" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="17">na_elem_free<pos:position pos:line="25" pos:column="29"/></name> <argument_list pos:line="25" pos:column="30">(<argument><expr><name><name pos:line="25" pos:column="31">cvu<pos:position pos:line="25" pos:column="34"/></name><operator pos:line="25" pos:column="34">-&gt;<pos:position pos:line="25" pos:column="39"/></operator><name pos:line="25" pos:column="36">query<pos:position pos:line="25" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="43"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="27" pos:column="9">sfree<pos:position pos:line="27" pos:column="14"/></name> <argument_list pos:line="27" pos:column="15">(<argument><expr><name pos:line="27" pos:column="16">cvu<pos:position pos:line="27" pos:column="19"/></name></expr></argument>)<pos:position pos:line="27" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="21"/></expr_stmt>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

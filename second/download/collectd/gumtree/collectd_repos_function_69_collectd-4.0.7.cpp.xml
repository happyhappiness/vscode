<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_69_collectd-4.0.7.cpp" pos:tabs="8"><decl_stmt><decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">try_dlopen<pos:position pos:line="2" pos:column="11"/></name> <argument_list pos:line="2" pos:column="12">(<argument><expr><name pos:line="2" pos:column="13">phandle<pos:position pos:line="2" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="22">filename<pos:position pos:line="2" pos:column="30"/></name></expr></argument>)<pos:position pos:line="2" pos:column="31"/></argument_list>
     <name pos:line="3" pos:column="6">lt_dlhandle<pos:position pos:line="3" pos:column="17"/></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier><name pos:line="3" pos:column="19">phandle<pos:position pos:line="3" pos:column="26"/></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
     <decl_stmt><decl><type><specifier pos:line="4" pos:column="6">const<pos:position pos:line="4" pos:column="11"/></specifier> <name pos:line="4" pos:column="12">char<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">filename<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type>	<name pos:line="6" pos:column="17">ext<pos:position pos:line="6" pos:column="20"/></name>		<init pos:line="6" pos:column="33">= <expr><literal type="number" pos:line="6" pos:column="35">0<pos:position pos:line="6" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">const<pos:position pos:line="7" pos:column="8"/></specifier> <name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type>	<name pos:line="7" pos:column="17">saved_error<pos:position pos:line="7" pos:column="28"/></name>	<init pos:line="7" pos:column="33">= <expr><literal type="number" pos:line="7" pos:column="35">0<pos:position pos:line="7" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type>	<name pos:line="8" pos:column="17">canonical<pos:position pos:line="8" pos:column="26"/></name>	<init pos:line="8" pos:column="33">= <expr><literal type="number" pos:line="8" pos:column="35">0<pos:position pos:line="8" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type>	<name pos:line="9" pos:column="17">base_name<pos:position pos:line="9" pos:column="26"/></name>	<init pos:line="9" pos:column="33">= <expr><literal type="number" pos:line="9" pos:column="35">0<pos:position pos:line="9" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier></type>	<name pos:line="10" pos:column="17">dir<pos:position pos:line="10" pos:column="20"/></name>		<init pos:line="10" pos:column="33">= <expr><literal type="number" pos:line="10" pos:column="35">0<pos:position pos:line="10" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier></type>	<name pos:line="11" pos:column="17">name<pos:position pos:line="11" pos:column="21"/></name>		<init pos:line="11" pos:column="33">= <expr><literal type="number" pos:line="11" pos:column="35">0<pos:position pos:line="11" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type>		<name pos:line="12" pos:column="17">errors<pos:position pos:line="12" pos:column="23"/></name>		<init pos:line="12" pos:column="33">= <expr><literal type="number" pos:line="12" pos:column="35">0<pos:position pos:line="12" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">lt_dlhandle<pos:position pos:line="13" pos:column="14"/></name></type>	<name pos:line="13" pos:column="17">newhandle<pos:position pos:line="13" pos:column="26"/></name></decl>;<pos:position pos:line="13" pos:column="27"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">assert<pos:position pos:line="15" pos:column="9"/></name> <argument_list pos:line="15" pos:column="10">(<argument><expr><name pos:line="15" pos:column="11">phandle<pos:position pos:line="15" pos:column="18"/></name></expr></argument>)<pos:position pos:line="15" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="16" pos:column="3">assert<pos:position pos:line="16" pos:column="9"/></name> <argument_list pos:line="16" pos:column="10">(<argument><expr><operator pos:line="16" pos:column="11">*<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="12">phandle<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">==<pos:position pos:line="16" pos:column="22"/></operator> <literal type="number" pos:line="16" pos:column="23">0<pos:position pos:line="16" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="26"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="18" pos:column="3">LT_DLMUTEX_GETERROR<pos:position pos:line="18" pos:column="22"/></name> <argument_list pos:line="18" pos:column="23">(<argument><expr><name pos:line="18" pos:column="24">saved_error<pos:position pos:line="18" pos:column="35"/></name></expr></argument>)<pos:position pos:line="18" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="37"/></expr_stmt>

  <comment type="block" pos:line="20" pos:column="3">/* dlopen self? */</comment>
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><operator pos:line="21" pos:column="7">!<pos:position pos:line="21" pos:column="8"/></operator><name pos:line="21" pos:column="8">filename<pos:position pos:line="21" pos:column="16"/></name></expr>)<pos:position pos:line="21" pos:column="17"/></condition><then pos:line="21" pos:column="17">
    <block pos:line="22" pos:column="5">{
      <expr_stmt><expr><operator pos:line="23" pos:column="7">*<pos:position pos:line="23" pos:column="8"/></operator><name pos:line="23" pos:column="8">phandle<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <operator pos:line="23" pos:column="18">(<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="19">lt_dlhandle<pos:position pos:line="23" pos:column="30"/></name><operator pos:line="23" pos:column="30">)<pos:position pos:line="23" pos:column="31"/></operator> <call><name pos:line="23" pos:column="32">LT_EMALLOC<pos:position pos:line="23" pos:column="42"/></name> <argument_list pos:line="23" pos:column="43">(<argument><expr pos:line="23" pos:column="44">struct <name pos:line="23" pos:column="51">lt_dlhandle_struct<pos:position pos:line="23" pos:column="69"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="71">1<pos:position pos:line="23" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="74"/></expr_stmt>
      <if pos:line="24" pos:column="7">if <condition pos:line="24" pos:column="10">(<expr><operator pos:line="24" pos:column="11">*<pos:position pos:line="24" pos:column="12"/></operator><name pos:line="24" pos:column="12">phandle<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">==<pos:position pos:line="24" pos:column="22"/></operator> <literal type="number" pos:line="24" pos:column="23">0<pos:position pos:line="24" pos:column="24"/></literal></expr>)<pos:position pos:line="24" pos:column="25"/></condition><then pos:line="24" pos:column="25">
	<block type="pseudo"><return pos:line="25" pos:column="9">return <expr><literal type="number" pos:line="25" pos:column="16">1<pos:position pos:line="25" pos:column="17"/></literal></expr>;<pos:position pos:line="25" pos:column="18"/></return></block></then></if>

      <expr_stmt><expr><call><name pos:line="27" pos:column="7">memset<pos:position pos:line="27" pos:column="13"/></name> <argument_list pos:line="27" pos:column="14">(<argument><expr><operator pos:line="27" pos:column="15">*<pos:position pos:line="27" pos:column="16"/></operator><name pos:line="27" pos:column="16">phandle<pos:position pos:line="27" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="25">0<pos:position pos:line="27" pos:column="26"/></literal></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="28">sizeof<argument_list pos:line="27" pos:column="34">(<argument><expr pos:line="27" pos:column="35">struct <name pos:line="27" pos:column="42">lt_dlhandle_struct<pos:position pos:line="27" pos:column="60"/></name></expr></argument>)<pos:position pos:line="27" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="63"/></expr_stmt>
      <expr_stmt><expr><name pos:line="28" pos:column="7">newhandle<pos:position pos:line="28" pos:column="16"/></name>	<operator pos:line="28" pos:column="17">=<pos:position pos:line="28" pos:column="18"/></operator> <operator pos:line="28" pos:column="19">*<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="20">phandle<pos:position pos:line="28" pos:column="27"/></name></expr>;<pos:position pos:line="28" pos:column="28"/></expr_stmt>

      <comment type="block" pos:line="30" pos:column="7">/* lt_dlclose()ing yourself is very bad!  Disallow it.  */</comment>
      <expr_stmt><expr><call><name pos:line="31" pos:column="7">LT_DLSET_FLAG<pos:position pos:line="31" pos:column="20"/></name> <argument_list pos:line="31" pos:column="21">(<argument><expr><operator pos:line="31" pos:column="22">*<pos:position pos:line="31" pos:column="23"/></operator><name pos:line="31" pos:column="23">phandle<pos:position pos:line="31" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="32">LT_DLRESIDENT_FLAG<pos:position pos:line="31" pos:column="50"/></name></expr></argument>)<pos:position pos:line="31" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="52"/></expr_stmt>

      <if pos:line="33" pos:column="7">if <condition pos:line="33" pos:column="10">(<expr><call><name pos:line="33" pos:column="11">tryall_dlopen<pos:position pos:line="33" pos:column="24"/></name> <argument_list pos:line="33" pos:column="25">(<argument><expr><operator pos:line="33" pos:column="26">&amp;<pos:position pos:line="33" pos:column="31"/></operator><name pos:line="33" pos:column="27">newhandle<pos:position pos:line="33" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="38">0<pos:position pos:line="33" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="40"/></argument_list></call> <operator pos:line="33" pos:column="41">!=<pos:position pos:line="33" pos:column="43"/></operator> <literal type="number" pos:line="33" pos:column="44">0<pos:position pos:line="33" pos:column="45"/></literal></expr>)<pos:position pos:line="33" pos:column="46"/></condition><then pos:line="33" pos:column="46">
	<block pos:line="34" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="35" pos:column="11">LT_DLFREE<pos:position pos:line="35" pos:column="20"/></name> <argument_list pos:line="35" pos:column="21">(<argument><expr><operator pos:line="35" pos:column="22">*<pos:position pos:line="35" pos:column="23"/></operator><name pos:line="35" pos:column="23">phandle<pos:position pos:line="35" pos:column="30"/></name></expr></argument>)<pos:position pos:line="35" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="32"/></expr_stmt>
	  <return pos:line="36" pos:column="11">return <expr><literal type="number" pos:line="36" pos:column="18">1<pos:position pos:line="36" pos:column="19"/></literal></expr>;<pos:position pos:line="36" pos:column="20"/></return>
	}<pos:position pos:line="37" pos:column="10"/></block></then></if>

      <goto pos:line="39" pos:column="7">goto <name pos:line="39" pos:column="12">register_handle<pos:position pos:line="39" pos:column="27"/></name>;<pos:position pos:line="39" pos:column="28"/></goto>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="42" pos:column="3">assert<pos:position pos:line="42" pos:column="9"/></name> <argument_list pos:line="42" pos:column="10">(<argument><expr><name pos:line="42" pos:column="11">filename<pos:position pos:line="42" pos:column="19"/></name> <operator pos:line="42" pos:column="20">&amp;&amp;<pos:position pos:line="42" pos:column="30"/></operator> <operator pos:line="42" pos:column="23">*<pos:position pos:line="42" pos:column="24"/></operator><name pos:line="42" pos:column="24">filename<pos:position pos:line="42" pos:column="32"/></name></expr></argument>)<pos:position pos:line="42" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="34"/></expr_stmt>

  <comment type="block" pos:line="44" pos:column="3">/* Doing this immediately allows internal functions to safely
     assume only canonicalized paths are passed.  */</comment>
  <if pos:line="46" pos:column="3">if <condition pos:line="46" pos:column="6">(<expr><call><name pos:line="46" pos:column="7">canonicalize_path<pos:position pos:line="46" pos:column="24"/></name> <argument_list pos:line="46" pos:column="25">(<argument><expr><name pos:line="46" pos:column="26">filename<pos:position pos:line="46" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="36">&amp;<pos:position pos:line="46" pos:column="41"/></operator><name pos:line="46" pos:column="37">canonical<pos:position pos:line="46" pos:column="46"/></name></expr></argument>)<pos:position pos:line="46" pos:column="47"/></argument_list></call> <operator pos:line="46" pos:column="48">!=<pos:position pos:line="46" pos:column="50"/></operator> <literal type="number" pos:line="46" pos:column="51">0<pos:position pos:line="46" pos:column="52"/></literal></expr>)<pos:position pos:line="46" pos:column="53"/></condition><then pos:line="46" pos:column="53">
    <block pos:line="47" pos:column="5">{
      <expr_stmt><expr><operator pos:line="48" pos:column="7">++<pos:position pos:line="48" pos:column="9"/></operator><name pos:line="48" pos:column="9">errors<pos:position pos:line="48" pos:column="15"/></name></expr>;<pos:position pos:line="48" pos:column="16"/></expr_stmt>
      <goto pos:line="49" pos:column="7">goto <name pos:line="49" pos:column="12">cleanup<pos:position pos:line="49" pos:column="19"/></name>;<pos:position pos:line="49" pos:column="20"/></goto>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>

  <comment type="block" pos:line="52" pos:column="3">/* If the canonical module name is a path (relative or absolute)
     then split it into a directory part and a name part.  */</comment>
  <expr_stmt><expr><name pos:line="54" pos:column="3">base_name<pos:position pos:line="54" pos:column="12"/></name> <operator pos:line="54" pos:column="13">=<pos:position pos:line="54" pos:column="14"/></operator> <call><name pos:line="54" pos:column="15">strrchr<pos:position pos:line="54" pos:column="22"/></name> <argument_list pos:line="54" pos:column="23">(<argument><expr><name pos:line="54" pos:column="24">canonical<pos:position pos:line="54" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="54" pos:column="35">'/'<pos:position pos:line="54" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="40"/></expr_stmt>
  <if pos:line="55" pos:column="3">if <condition pos:line="55" pos:column="6">(<expr><name pos:line="55" pos:column="7">base_name<pos:position pos:line="55" pos:column="16"/></name></expr>)<pos:position pos:line="55" pos:column="17"/></condition><then pos:line="55" pos:column="17">
    <block pos:line="56" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="57" pos:column="7">size_t<pos:position pos:line="57" pos:column="13"/></name></type> <name pos:line="57" pos:column="14">dirlen<pos:position pos:line="57" pos:column="20"/></name> <init pos:line="57" pos:column="21">= <expr><operator pos:line="57" pos:column="23">(<pos:position pos:line="57" pos:column="24"/></operator><literal type="number" pos:line="57" pos:column="24">1<pos:position pos:line="57" pos:column="25"/></literal><operator pos:line="57" pos:column="25">+<pos:position pos:line="57" pos:column="26"/></operator> <name pos:line="57" pos:column="27">base_name<pos:position pos:line="57" pos:column="36"/></name><operator pos:line="57" pos:column="36">)<pos:position pos:line="57" pos:column="37"/></operator> <operator pos:line="57" pos:column="38">-<pos:position pos:line="57" pos:column="39"/></operator> <name pos:line="57" pos:column="40">canonical<pos:position pos:line="57" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="57" pos:column="50"/></decl_stmt>

      <expr_stmt><expr><name pos:line="59" pos:column="7">dir<pos:position pos:line="59" pos:column="10"/></name> <operator pos:line="59" pos:column="11">=<pos:position pos:line="59" pos:column="12"/></operator> <call><name pos:line="59" pos:column="13">LT_EMALLOC<pos:position pos:line="59" pos:column="23"/></name> <argument_list pos:line="59" pos:column="24">(<argument><expr><name pos:line="59" pos:column="25">char<pos:position pos:line="59" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="31">1<pos:position pos:line="59" pos:column="32"/></literal><operator pos:line="59" pos:column="32">+<pos:position pos:line="59" pos:column="33"/></operator> <name pos:line="59" pos:column="34">dirlen<pos:position pos:line="59" pos:column="40"/></name></expr></argument>)<pos:position pos:line="59" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="42"/></expr_stmt>
      <if pos:line="60" pos:column="7">if <condition pos:line="60" pos:column="10">(<expr><operator pos:line="60" pos:column="11">!<pos:position pos:line="60" pos:column="12"/></operator><name pos:line="60" pos:column="12">dir<pos:position pos:line="60" pos:column="15"/></name></expr>)<pos:position pos:line="60" pos:column="16"/></condition><then pos:line="60" pos:column="16">
	<block pos:line="61" pos:column="9">{
	  <expr_stmt><expr><operator pos:line="62" pos:column="11">++<pos:position pos:line="62" pos:column="13"/></operator><name pos:line="62" pos:column="13">errors<pos:position pos:line="62" pos:column="19"/></name></expr>;<pos:position pos:line="62" pos:column="20"/></expr_stmt>
	  <goto pos:line="63" pos:column="11">goto <name pos:line="63" pos:column="16">cleanup<pos:position pos:line="63" pos:column="23"/></name>;<pos:position pos:line="63" pos:column="24"/></goto>
	}<pos:position pos:line="64" pos:column="10"/></block></then></if>

      <expr_stmt><expr><call><name pos:line="66" pos:column="7">strncpy<pos:position pos:line="66" pos:column="14"/></name> <argument_list pos:line="66" pos:column="15">(<argument><expr><name pos:line="66" pos:column="16">dir<pos:position pos:line="66" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="21">canonical<pos:position pos:line="66" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="32">dirlen<pos:position pos:line="66" pos:column="38"/></name></expr></argument>)<pos:position pos:line="66" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="40"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="67" pos:column="7">dir<pos:position pos:line="67" pos:column="10"/></name><index pos:line="67" pos:column="10">[<expr><name pos:line="67" pos:column="11">dirlen<pos:position pos:line="67" pos:column="17"/></name></expr>]<pos:position pos:line="67" pos:column="18"/></index></name> <operator pos:line="67" pos:column="19">=<pos:position pos:line="67" pos:column="20"/></operator> <name pos:line="67" pos:column="21">LT_EOS_CHAR<pos:position pos:line="67" pos:column="32"/></name></expr>;<pos:position pos:line="67" pos:column="33"/></expr_stmt>

      <expr_stmt><expr><operator pos:line="69" pos:column="7">++<pos:position pos:line="69" pos:column="9"/></operator><name pos:line="69" pos:column="9">base_name<pos:position pos:line="69" pos:column="18"/></name></expr>;<pos:position pos:line="69" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="70" pos:column="6"/></block></then>
  <else pos:line="71" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="72" pos:column="5">base_name<pos:position pos:line="72" pos:column="14"/></name> <operator pos:line="72" pos:column="15">=<pos:position pos:line="72" pos:column="16"/></operator> <name pos:line="72" pos:column="17">canonical<pos:position pos:line="72" pos:column="26"/></name></expr>;<pos:position pos:line="72" pos:column="27"/></expr_stmt></block></else></if>

  <expr_stmt><expr><call><name pos:line="74" pos:column="3">assert<pos:position pos:line="74" pos:column="9"/></name> <argument_list pos:line="74" pos:column="10">(<argument><expr><name pos:line="74" pos:column="11">base_name<pos:position pos:line="74" pos:column="20"/></name> <operator pos:line="74" pos:column="21">&amp;&amp;<pos:position pos:line="74" pos:column="31"/></operator> <operator pos:line="74" pos:column="24">*<pos:position pos:line="74" pos:column="25"/></operator><name pos:line="74" pos:column="25">base_name<pos:position pos:line="74" pos:column="34"/></name></expr></argument>)<pos:position pos:line="74" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="36"/></expr_stmt>

  <comment type="block" pos:line="76" pos:column="3">/* Check whether we are opening a libtool module (.la extension).  */</comment>
  <expr_stmt><expr><name pos:line="77" pos:column="3">ext<pos:position pos:line="77" pos:column="6"/></name> <operator pos:line="77" pos:column="7">=<pos:position pos:line="77" pos:column="8"/></operator> <call><name pos:line="77" pos:column="9">strrchr<pos:position pos:line="77" pos:column="16"/></name> <argument_list pos:line="77" pos:column="17">(<argument><expr><name pos:line="77" pos:column="18">base_name<pos:position pos:line="77" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="77" pos:column="29">'.'<pos:position pos:line="77" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="34"/></expr_stmt>
  <if pos:line="78" pos:column="3">if <condition pos:line="78" pos:column="6">(<expr><name pos:line="78" pos:column="7">ext<pos:position pos:line="78" pos:column="10"/></name> <operator pos:line="78" pos:column="11">&amp;&amp;<pos:position pos:line="78" pos:column="21"/></operator> <call><name pos:line="78" pos:column="14">strcmp<pos:position pos:line="78" pos:column="20"/></name> <argument_list pos:line="78" pos:column="21">(<argument><expr><name pos:line="78" pos:column="22">ext<pos:position pos:line="78" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="27">archive_ext<pos:position pos:line="78" pos:column="38"/></name></expr></argument>)<pos:position pos:line="78" pos:column="39"/></argument_list></call> <operator pos:line="78" pos:column="40">==<pos:position pos:line="78" pos:column="42"/></operator> <literal type="number" pos:line="78" pos:column="43">0<pos:position pos:line="78" pos:column="44"/></literal></expr>)<pos:position pos:line="78" pos:column="45"/></condition><then pos:line="78" pos:column="45">
    <block pos:line="79" pos:column="5">{
      <comment type="block" pos:line="80" pos:column="7">/* this seems to be a libtool module */</comment>
      <decl_stmt><decl><type><name pos:line="81" pos:column="7">FILE<pos:position pos:line="81" pos:column="11"/></name> <modifier pos:line="81" pos:column="12">*<pos:position pos:line="81" pos:column="13"/></modifier></type>	<name pos:line="81" pos:column="17">file<pos:position pos:line="81" pos:column="21"/></name>	 <init pos:line="81" pos:column="26">= <expr><literal type="number" pos:line="81" pos:column="28">0<pos:position pos:line="81" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="81" pos:column="30"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="82" pos:column="7">char<pos:position pos:line="82" pos:column="11"/></name> <modifier pos:line="82" pos:column="12">*<pos:position pos:line="82" pos:column="13"/></modifier></type>	<name pos:line="82" pos:column="17">dlname<pos:position pos:line="82" pos:column="23"/></name>	 <init pos:line="82" pos:column="26">= <expr><literal type="number" pos:line="82" pos:column="28">0<pos:position pos:line="82" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="82" pos:column="30"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="83" pos:column="7">char<pos:position pos:line="83" pos:column="11"/></name> <modifier pos:line="83" pos:column="12">*<pos:position pos:line="83" pos:column="13"/></modifier></type>	<name pos:line="83" pos:column="17">old_name<pos:position pos:line="83" pos:column="25"/></name> <init pos:line="83" pos:column="26">= <expr><literal type="number" pos:line="83" pos:column="28">0<pos:position pos:line="83" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="83" pos:column="30"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="84" pos:column="7">char<pos:position pos:line="84" pos:column="11"/></name> <modifier pos:line="84" pos:column="12">*<pos:position pos:line="84" pos:column="13"/></modifier></type>	<name pos:line="84" pos:column="17">libdir<pos:position pos:line="84" pos:column="23"/></name>	 <init pos:line="84" pos:column="26">= <expr><literal type="number" pos:line="84" pos:column="28">0<pos:position pos:line="84" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="84" pos:column="30"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="85" pos:column="7">char<pos:position pos:line="85" pos:column="11"/></name> <modifier pos:line="85" pos:column="12">*<pos:position pos:line="85" pos:column="13"/></modifier></type>	<name pos:line="85" pos:column="17">deplibs<pos:position pos:line="85" pos:column="24"/></name>	 <init pos:line="85" pos:column="26">= <expr><literal type="number" pos:line="85" pos:column="28">0<pos:position pos:line="85" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="85" pos:column="30"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="86" pos:column="7">char<pos:position pos:line="86" pos:column="11"/></name> <modifier pos:line="86" pos:column="12">*<pos:position pos:line="86" pos:column="13"/></modifier></type>    <name pos:line="86" pos:column="17">line<pos:position pos:line="86" pos:column="21"/></name>	 <init pos:line="86" pos:column="26">= <expr><literal type="number" pos:line="86" pos:column="28">0<pos:position pos:line="86" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="86" pos:column="30"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="87" pos:column="7">size_t<pos:position pos:line="87" pos:column="13"/></name></type>	<name pos:line="87" pos:column="17">line_len<pos:position pos:line="87" pos:column="25"/></name></decl>;<pos:position pos:line="87" pos:column="26"/></decl_stmt>

      <comment type="block" pos:line="89" pos:column="7">/* if we can't find the installed flag, it is probably an
	 installed libtool archive, produced with an old version
	 of libtool */</comment>
      <decl_stmt><decl><type><name pos:line="92" pos:column="7">int<pos:position pos:line="92" pos:column="10"/></name></type>	<name pos:line="92" pos:column="17">installed<pos:position pos:line="92" pos:column="26"/></name> <init pos:line="92" pos:column="27">= <expr><literal type="number" pos:line="92" pos:column="29">1<pos:position pos:line="92" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="92" pos:column="31"/></decl_stmt>

      <comment type="block" pos:line="94" pos:column="7">/* extract the module name from the file name */</comment>
      <expr_stmt><expr><name pos:line="95" pos:column="7">name<pos:position pos:line="95" pos:column="11"/></name> <operator pos:line="95" pos:column="12">=<pos:position pos:line="95" pos:column="13"/></operator> <call><name pos:line="95" pos:column="14">LT_EMALLOC<pos:position pos:line="95" pos:column="24"/></name> <argument_list pos:line="95" pos:column="25">(<argument><expr><name pos:line="95" pos:column="26">char<pos:position pos:line="95" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="32">ext<pos:position pos:line="95" pos:column="35"/></name> <operator pos:line="95" pos:column="36">-<pos:position pos:line="95" pos:column="37"/></operator> <name pos:line="95" pos:column="38">base_name<pos:position pos:line="95" pos:column="47"/></name> <operator pos:line="95" pos:column="48">+<pos:position pos:line="95" pos:column="49"/></operator> <literal type="number" pos:line="95" pos:column="50">1<pos:position pos:line="95" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="53"/></expr_stmt>
      <if pos:line="96" pos:column="7">if <condition pos:line="96" pos:column="10">(<expr><operator pos:line="96" pos:column="11">!<pos:position pos:line="96" pos:column="12"/></operator><name pos:line="96" pos:column="12">name<pos:position pos:line="96" pos:column="16"/></name></expr>)<pos:position pos:line="96" pos:column="17"/></condition><then pos:line="96" pos:column="17">
	<block pos:line="97" pos:column="9">{
	  <expr_stmt><expr><operator pos:line="98" pos:column="11">++<pos:position pos:line="98" pos:column="13"/></operator><name pos:line="98" pos:column="13">errors<pos:position pos:line="98" pos:column="19"/></name></expr>;<pos:position pos:line="98" pos:column="20"/></expr_stmt>
	  <goto pos:line="99" pos:column="11">goto <name pos:line="99" pos:column="16">cleanup<pos:position pos:line="99" pos:column="23"/></name>;<pos:position pos:line="99" pos:column="24"/></goto>
	}<pos:position pos:line="100" pos:column="10"/></block></then></if>

      <comment type="block" pos:line="102" pos:column="7">/* canonicalize the module name */</comment>
      <block pos:line="103" pos:column="7">{
        <decl_stmt><decl><type><name pos:line="104" pos:column="9">size_t<pos:position pos:line="104" pos:column="15"/></name></type> <name pos:line="104" pos:column="16">i<pos:position pos:line="104" pos:column="17"/></name></decl>;<pos:position pos:line="104" pos:column="18"/></decl_stmt>
        <for pos:line="105" pos:column="9">for <control pos:line="105" pos:column="13">(<init><expr><name pos:line="105" pos:column="14">i<pos:position pos:line="105" pos:column="15"/></name> <operator pos:line="105" pos:column="16">=<pos:position pos:line="105" pos:column="17"/></operator> <literal type="number" pos:line="105" pos:column="18">0<pos:position pos:line="105" pos:column="19"/></literal></expr>;<pos:position pos:line="105" pos:column="20"/></init> <condition><expr><name pos:line="105" pos:column="21">i<pos:position pos:line="105" pos:column="22"/></name> <operator pos:line="105" pos:column="23">&lt;<pos:position pos:line="105" pos:column="27"/></operator> <name pos:line="105" pos:column="25">ext<pos:position pos:line="105" pos:column="28"/></name> <operator pos:line="105" pos:column="29">-<pos:position pos:line="105" pos:column="30"/></operator> <name pos:line="105" pos:column="31">base_name<pos:position pos:line="105" pos:column="40"/></name></expr>;<pos:position pos:line="105" pos:column="41"/></condition> <incr><expr><operator pos:line="105" pos:column="42">++<pos:position pos:line="105" pos:column="44"/></operator><name pos:line="105" pos:column="44">i<pos:position pos:line="105" pos:column="45"/></name></expr></incr>)<pos:position pos:line="105" pos:column="46"/></control>
	  <block pos:line="106" pos:column="11">{
	    <if pos:line="107" pos:column="13">if <condition pos:line="107" pos:column="16">(<expr><call><name pos:line="107" pos:column="17">isalnum<pos:position pos:line="107" pos:column="24"/></name> <argument_list pos:line="107" pos:column="25">(<argument><expr><call pos:line="107" pos:column="26">(<name pos:line="107" pos:column="27">int<pos:position pos:line="107" pos:column="30"/></name>)<argument_list pos:line="107" pos:column="31">(<argument><expr><name><name pos:line="107" pos:column="32">base_name<pos:position pos:line="107" pos:column="41"/></name><index pos:line="107" pos:column="41">[<expr><name pos:line="107" pos:column="42">i<pos:position pos:line="107" pos:column="43"/></name></expr>]<pos:position pos:line="107" pos:column="44"/></index></name></expr></argument>)<pos:position pos:line="107" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="107" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="107" pos:column="47"/></condition><then pos:line="107" pos:column="47">
	      <block pos:line="108" pos:column="15">{
	        <expr_stmt><expr><name><name pos:line="109" pos:column="17">name<pos:position pos:line="109" pos:column="21"/></name><index pos:line="109" pos:column="21">[<expr><name pos:line="109" pos:column="22">i<pos:position pos:line="109" pos:column="23"/></name></expr>]<pos:position pos:line="109" pos:column="24"/></index></name> <operator pos:line="109" pos:column="25">=<pos:position pos:line="109" pos:column="26"/></operator> <name><name pos:line="109" pos:column="27">base_name<pos:position pos:line="109" pos:column="36"/></name><index pos:line="109" pos:column="36">[<expr><name pos:line="109" pos:column="37">i<pos:position pos:line="109" pos:column="38"/></name></expr>]<pos:position pos:line="109" pos:column="39"/></index></name></expr>;<pos:position pos:line="109" pos:column="40"/></expr_stmt>
	      }<pos:position pos:line="110" pos:column="16"/></block></then>
	    <else pos:line="111" pos:column="13">else
	      <block pos:line="112" pos:column="15">{
	        <expr_stmt><expr><name><name pos:line="113" pos:column="17">name<pos:position pos:line="113" pos:column="21"/></name><index pos:line="113" pos:column="21">[<expr><name pos:line="113" pos:column="22">i<pos:position pos:line="113" pos:column="23"/></name></expr>]<pos:position pos:line="113" pos:column="24"/></index></name> <operator pos:line="113" pos:column="25">=<pos:position pos:line="113" pos:column="26"/></operator> <literal type="char" pos:line="113" pos:column="27">'_'<pos:position pos:line="113" pos:column="30"/></literal></expr>;<pos:position pos:line="113" pos:column="31"/></expr_stmt>
	      }<pos:position pos:line="114" pos:column="16"/></block></else></if>
	  }<pos:position pos:line="115" pos:column="12"/></block></for>
        <expr_stmt><expr><name><name pos:line="116" pos:column="9">name<pos:position pos:line="116" pos:column="13"/></name><index pos:line="116" pos:column="13">[<expr><name pos:line="116" pos:column="14">ext<pos:position pos:line="116" pos:column="17"/></name> <operator pos:line="116" pos:column="18">-<pos:position pos:line="116" pos:column="19"/></operator> <name pos:line="116" pos:column="20">base_name<pos:position pos:line="116" pos:column="29"/></name></expr>]<pos:position pos:line="116" pos:column="30"/></index></name> <operator pos:line="116" pos:column="31">=<pos:position pos:line="116" pos:column="32"/></operator> <name pos:line="116" pos:column="33">LT_EOS_CHAR<pos:position pos:line="116" pos:column="44"/></name></expr>;<pos:position pos:line="116" pos:column="45"/></expr_stmt>
      }<pos:position pos:line="117" pos:column="8"/></block>

      <comment type="block" pos:line="119" pos:column="7">/* Now try to open the .la file.  If there is no directory name
         component, try to find it first in user_search_path and then other
         prescribed paths.  Otherwise (or in any case if the module was not
         yet found) try opening just the module name as passed.  */</comment>
      <if pos:line="123" pos:column="7">if <condition pos:line="123" pos:column="10">(<expr><operator pos:line="123" pos:column="11">!<pos:position pos:line="123" pos:column="12"/></operator><name pos:line="123" pos:column="12">dir<pos:position pos:line="123" pos:column="15"/></name></expr>)<pos:position pos:line="123" pos:column="16"/></condition><then pos:line="123" pos:column="16">
	<block pos:line="124" pos:column="9">{
	  <decl_stmt><decl><type><specifier pos:line="125" pos:column="11">const<pos:position pos:line="125" pos:column="16"/></specifier> <name pos:line="125" pos:column="17">char<pos:position pos:line="125" pos:column="21"/></name> <modifier pos:line="125" pos:column="22">*<pos:position pos:line="125" pos:column="23"/></modifier></type><name pos:line="125" pos:column="23">search_path<pos:position pos:line="125" pos:column="34"/></name></decl>;<pos:position pos:line="125" pos:column="35"/></decl_stmt>

	  <expr_stmt><expr><call><name pos:line="127" pos:column="11">LT_DLMUTEX_LOCK<pos:position pos:line="127" pos:column="26"/></name> <argument_list pos:line="127" pos:column="27">()<pos:position pos:line="127" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="30"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="128" pos:column="11">search_path<pos:position pos:line="128" pos:column="22"/></name> <operator pos:line="128" pos:column="23">=<pos:position pos:line="128" pos:column="24"/></operator> <name pos:line="128" pos:column="25">user_search_path<pos:position pos:line="128" pos:column="41"/></name></expr>;<pos:position pos:line="128" pos:column="42"/></expr_stmt>
	  <if pos:line="129" pos:column="11">if <condition pos:line="129" pos:column="14">(<expr><name pos:line="129" pos:column="15">search_path<pos:position pos:line="129" pos:column="26"/></name></expr>)<pos:position pos:line="129" pos:column="27"/></condition><then pos:line="129" pos:column="27">
	    <block type="pseudo"><expr_stmt><expr><name pos:line="130" pos:column="13">file<pos:position pos:line="130" pos:column="17"/></name> <operator pos:line="130" pos:column="18">=<pos:position pos:line="130" pos:column="19"/></operator> <call><name pos:line="130" pos:column="20">find_file<pos:position pos:line="130" pos:column="29"/></name> <argument_list pos:line="130" pos:column="30">(<argument><expr><name pos:line="130" pos:column="31">user_search_path<pos:position pos:line="130" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="49">base_name<pos:position pos:line="130" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="130" pos:column="60">&amp;<pos:position pos:line="130" pos:column="65"/></operator><name pos:line="130" pos:column="61">dir<pos:position pos:line="130" pos:column="64"/></name></expr></argument>)<pos:position pos:line="130" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="66"/></expr_stmt></block></then></if>
	  <expr_stmt><expr><call><name pos:line="131" pos:column="11">LT_DLMUTEX_UNLOCK<pos:position pos:line="131" pos:column="28"/></name> <argument_list pos:line="131" pos:column="29">()<pos:position pos:line="131" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="32"/></expr_stmt>

	  <if pos:line="133" pos:column="11">if <condition pos:line="133" pos:column="14">(<expr><operator pos:line="133" pos:column="15">!<pos:position pos:line="133" pos:column="16"/></operator><name pos:line="133" pos:column="16">file<pos:position pos:line="133" pos:column="20"/></name></expr>)<pos:position pos:line="133" pos:column="21"/></condition><then pos:line="133" pos:column="21">
	    <block pos:line="134" pos:column="13">{
	      <expr_stmt><expr><name pos:line="135" pos:column="15">search_path<pos:position pos:line="135" pos:column="26"/></name> <operator pos:line="135" pos:column="27">=<pos:position pos:line="135" pos:column="28"/></operator> <call><name pos:line="135" pos:column="29">getenv<pos:position pos:line="135" pos:column="35"/></name> <argument_list pos:line="135" pos:column="36">(<argument><expr><name pos:line="135" pos:column="37">LTDL_SEARCHPATH_VAR<pos:position pos:line="135" pos:column="56"/></name></expr></argument>)<pos:position pos:line="135" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="58"/></expr_stmt>
	      <if pos:line="136" pos:column="15">if <condition pos:line="136" pos:column="18">(<expr><name pos:line="136" pos:column="19">search_path<pos:position pos:line="136" pos:column="30"/></name></expr>)<pos:position pos:line="136" pos:column="31"/></condition><then pos:line="136" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><name pos:line="137" pos:column="17">file<pos:position pos:line="137" pos:column="21"/></name> <operator pos:line="137" pos:column="22">=<pos:position pos:line="137" pos:column="23"/></operator> <call><name pos:line="137" pos:column="24">find_file<pos:position pos:line="137" pos:column="33"/></name> <argument_list pos:line="137" pos:column="34">(<argument><expr><name pos:line="137" pos:column="35">search_path<pos:position pos:line="137" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="48">base_name<pos:position pos:line="137" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="137" pos:column="59">&amp;<pos:position pos:line="137" pos:column="64"/></operator><name pos:line="137" pos:column="60">dir<pos:position pos:line="137" pos:column="63"/></name></expr></argument>)<pos:position pos:line="137" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="65"/></expr_stmt></block></then></if>
	    }<pos:position pos:line="138" pos:column="14"/></block></then></if>

<cpp:ifdef pos:line="140" pos:column="1">#<cpp:directive pos:line="140" pos:column="2">ifdef<pos:position pos:line="140" pos:column="7"/></cpp:directive> <name pos:line="140" pos:column="8">LTDL_SHLIBPATH_VAR<pos:position pos:line="140" pos:column="26"/></name></cpp:ifdef>
	  <if pos:line="141" pos:column="11">if <condition pos:line="141" pos:column="14">(<expr><operator pos:line="141" pos:column="15">!<pos:position pos:line="141" pos:column="16"/></operator><name pos:line="141" pos:column="16">file<pos:position pos:line="141" pos:column="20"/></name></expr>)<pos:position pos:line="141" pos:column="21"/></condition><then pos:line="141" pos:column="21">
	    <block pos:line="142" pos:column="13">{
	      <expr_stmt><expr><name pos:line="143" pos:column="15">search_path<pos:position pos:line="143" pos:column="26"/></name> <operator pos:line="143" pos:column="27">=<pos:position pos:line="143" pos:column="28"/></operator> <call><name pos:line="143" pos:column="29">getenv<pos:position pos:line="143" pos:column="35"/></name> <argument_list pos:line="143" pos:column="36">(<argument><expr><name pos:line="143" pos:column="37">LTDL_SHLIBPATH_VAR<pos:position pos:line="143" pos:column="55"/></name></expr></argument>)<pos:position pos:line="143" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="57"/></expr_stmt>
	      <if pos:line="144" pos:column="15">if <condition pos:line="144" pos:column="18">(<expr><name pos:line="144" pos:column="19">search_path<pos:position pos:line="144" pos:column="30"/></name></expr>)<pos:position pos:line="144" pos:column="31"/></condition><then pos:line="144" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><name pos:line="145" pos:column="17">file<pos:position pos:line="145" pos:column="21"/></name> <operator pos:line="145" pos:column="22">=<pos:position pos:line="145" pos:column="23"/></operator> <call><name pos:line="145" pos:column="24">find_file<pos:position pos:line="145" pos:column="33"/></name> <argument_list pos:line="145" pos:column="34">(<argument><expr><name pos:line="145" pos:column="35">search_path<pos:position pos:line="145" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="145" pos:column="48">base_name<pos:position pos:line="145" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="145" pos:column="59">&amp;<pos:position pos:line="145" pos:column="64"/></operator><name pos:line="145" pos:column="60">dir<pos:position pos:line="145" pos:column="63"/></name></expr></argument>)<pos:position pos:line="145" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="65"/></expr_stmt></block></then></if>
	    }<pos:position pos:line="146" pos:column="14"/></block></then></if>
<cpp:endif pos:line="147" pos:column="1">#<cpp:directive pos:line="147" pos:column="2">endif<pos:position pos:line="147" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="148" pos:column="1">#<cpp:directive pos:line="148" pos:column="2">ifdef<pos:position pos:line="148" pos:column="7"/></cpp:directive> <name pos:line="148" pos:column="8">LTDL_SYSSEARCHPATH<pos:position pos:line="148" pos:column="26"/></name></cpp:ifdef>
	  <if pos:line="149" pos:column="11">if <condition pos:line="149" pos:column="14">(<expr><operator pos:line="149" pos:column="15">!<pos:position pos:line="149" pos:column="16"/></operator><name pos:line="149" pos:column="16">file<pos:position pos:line="149" pos:column="20"/></name> <operator pos:line="149" pos:column="21">&amp;&amp;<pos:position pos:line="149" pos:column="31"/></operator> <name pos:line="149" pos:column="24">sys_search_path<pos:position pos:line="149" pos:column="39"/></name></expr>)<pos:position pos:line="149" pos:column="40"/></condition><then pos:line="149" pos:column="40">
	    <block pos:line="150" pos:column="13">{
	      <expr_stmt><expr><name pos:line="151" pos:column="15">file<pos:position pos:line="151" pos:column="19"/></name> <operator pos:line="151" pos:column="20">=<pos:position pos:line="151" pos:column="21"/></operator> <call><name pos:line="151" pos:column="22">find_file<pos:position pos:line="151" pos:column="31"/></name> <argument_list pos:line="151" pos:column="32">(<argument><expr><name pos:line="151" pos:column="33">sys_search_path<pos:position pos:line="151" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="151" pos:column="50">base_name<pos:position pos:line="151" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="151" pos:column="61">&amp;<pos:position pos:line="151" pos:column="66"/></operator><name pos:line="151" pos:column="62">dir<pos:position pos:line="151" pos:column="65"/></name></expr></argument>)<pos:position pos:line="151" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="67"/></expr_stmt>
	    }<pos:position pos:line="152" pos:column="14"/></block></then></if>
<cpp:endif pos:line="153" pos:column="1">#<cpp:directive pos:line="153" pos:column="2">endif<pos:position pos:line="153" pos:column="7"/></cpp:directive></cpp:endif>
	}<pos:position pos:line="154" pos:column="10"/></block></then></if>
      <if pos:line="155" pos:column="7">if <condition pos:line="155" pos:column="10">(<expr><operator pos:line="155" pos:column="11">!<pos:position pos:line="155" pos:column="12"/></operator><name pos:line="155" pos:column="12">file<pos:position pos:line="155" pos:column="16"/></name></expr>)<pos:position pos:line="155" pos:column="17"/></condition><then pos:line="155" pos:column="17">
	<block pos:line="156" pos:column="9">{
	  <expr_stmt><expr><name pos:line="157" pos:column="11">file<pos:position pos:line="157" pos:column="15"/></name> <operator pos:line="157" pos:column="16">=<pos:position pos:line="157" pos:column="17"/></operator> <call><name pos:line="157" pos:column="18">fopen<pos:position pos:line="157" pos:column="23"/></name> <argument_list pos:line="157" pos:column="24">(<argument><expr><name pos:line="157" pos:column="25">filename<pos:position pos:line="157" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="35">LT_READTEXT_MODE<pos:position pos:line="157" pos:column="51"/></name></expr></argument>)<pos:position pos:line="157" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="53"/></expr_stmt>
	}<pos:position pos:line="158" pos:column="10"/></block></then></if>

      <comment type="block" pos:line="160" pos:column="7">/* If we didn't find the file by now, it really isn't there.  Set
	 the status flag, and bail out.  */</comment>
      <if pos:line="162" pos:column="7">if <condition pos:line="162" pos:column="10">(<expr><operator pos:line="162" pos:column="11">!<pos:position pos:line="162" pos:column="12"/></operator><name pos:line="162" pos:column="12">file<pos:position pos:line="162" pos:column="16"/></name></expr>)<pos:position pos:line="162" pos:column="17"/></condition><then pos:line="162" pos:column="17">
	<block pos:line="163" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="164" pos:column="11">LT_DLMUTEX_SETERROR<pos:position pos:line="164" pos:column="30"/></name> <argument_list pos:line="164" pos:column="31">(<argument><expr><call><name pos:line="164" pos:column="32">LT_DLSTRERROR<pos:position pos:line="164" pos:column="45"/></name> <argument_list pos:line="164" pos:column="46">(<argument><expr><name pos:line="164" pos:column="47">FILE_NOT_FOUND<pos:position pos:line="164" pos:column="61"/></name></expr></argument>)<pos:position pos:line="164" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="164" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="64"/></expr_stmt>
	  <expr_stmt><expr><operator pos:line="165" pos:column="11">++<pos:position pos:line="165" pos:column="13"/></operator><name pos:line="165" pos:column="13">errors<pos:position pos:line="165" pos:column="19"/></name></expr>;<pos:position pos:line="165" pos:column="20"/></expr_stmt>
	  <goto pos:line="166" pos:column="11">goto <name pos:line="166" pos:column="16">cleanup<pos:position pos:line="166" pos:column="23"/></name>;<pos:position pos:line="166" pos:column="24"/></goto>
	}<pos:position pos:line="167" pos:column="10"/></block></then></if>

      <expr_stmt><expr><name pos:line="169" pos:column="7">line_len<pos:position pos:line="169" pos:column="15"/></name> <operator pos:line="169" pos:column="16">=<pos:position pos:line="169" pos:column="17"/></operator> <name pos:line="169" pos:column="18">LT_FILENAME_MAX<pos:position pos:line="169" pos:column="33"/></name></expr>;<pos:position pos:line="169" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><name pos:line="170" pos:column="7">line<pos:position pos:line="170" pos:column="11"/></name> <operator pos:line="170" pos:column="12">=<pos:position pos:line="170" pos:column="13"/></operator> <call><name pos:line="170" pos:column="14">LT_EMALLOC<pos:position pos:line="170" pos:column="24"/></name> <argument_list pos:line="170" pos:column="25">(<argument><expr><name pos:line="170" pos:column="26">char<pos:position pos:line="170" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="170" pos:column="32">line_len<pos:position pos:line="170" pos:column="40"/></name></expr></argument>)<pos:position pos:line="170" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="42"/></expr_stmt>
      <if pos:line="171" pos:column="7">if <condition pos:line="171" pos:column="10">(<expr><operator pos:line="171" pos:column="11">!<pos:position pos:line="171" pos:column="12"/></operator><name pos:line="171" pos:column="12">line<pos:position pos:line="171" pos:column="16"/></name></expr>)<pos:position pos:line="171" pos:column="17"/></condition><then pos:line="171" pos:column="17">
	<block pos:line="172" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="173" pos:column="11">fclose<pos:position pos:line="173" pos:column="17"/></name> <argument_list pos:line="173" pos:column="18">(<argument><expr><name pos:line="173" pos:column="19">file<pos:position pos:line="173" pos:column="23"/></name></expr></argument>)<pos:position pos:line="173" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="25"/></expr_stmt>
	  <expr_stmt><expr><operator pos:line="174" pos:column="11">++<pos:position pos:line="174" pos:column="13"/></operator><name pos:line="174" pos:column="13">errors<pos:position pos:line="174" pos:column="19"/></name></expr>;<pos:position pos:line="174" pos:column="20"/></expr_stmt>
	  <goto pos:line="175" pos:column="11">goto <name pos:line="175" pos:column="16">cleanup<pos:position pos:line="175" pos:column="23"/></name>;<pos:position pos:line="175" pos:column="24"/></goto>
	}<pos:position pos:line="176" pos:column="10"/></block></then></if>

      <comment type="block" pos:line="178" pos:column="7">/* read the .la file */</comment>
      <while pos:line="179" pos:column="7">while <condition pos:line="179" pos:column="13">(<expr><operator pos:line="179" pos:column="14">!<pos:position pos:line="179" pos:column="15"/></operator><call><name pos:line="179" pos:column="15">feof<pos:position pos:line="179" pos:column="19"/></name> <argument_list pos:line="179" pos:column="20">(<argument><expr><name pos:line="179" pos:column="21">file<pos:position pos:line="179" pos:column="25"/></name></expr></argument>)<pos:position pos:line="179" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="179" pos:column="27"/></condition>
	<block pos:line="180" pos:column="9">{
	  <if pos:line="181" pos:column="11">if <condition pos:line="181" pos:column="14">(<expr><operator pos:line="181" pos:column="15">!<pos:position pos:line="181" pos:column="16"/></operator><call><name pos:line="181" pos:column="16">fgets<pos:position pos:line="181" pos:column="21"/></name> <argument_list pos:line="181" pos:column="22">(<argument><expr><name pos:line="181" pos:column="23">line<pos:position pos:line="181" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="181" pos:column="29">(<pos:position pos:line="181" pos:column="30"/></operator><name pos:line="181" pos:column="30">int<pos:position pos:line="181" pos:column="33"/></name><operator pos:line="181" pos:column="33">)<pos:position pos:line="181" pos:column="34"/></operator> <name pos:line="181" pos:column="35">line_len<pos:position pos:line="181" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="181" pos:column="45">file<pos:position pos:line="181" pos:column="49"/></name></expr></argument>)<pos:position pos:line="181" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="181" pos:column="51"/></condition><then pos:line="181" pos:column="51">
	    <block pos:line="182" pos:column="13">{
	      <break pos:line="183" pos:column="15">break;<pos:position pos:line="183" pos:column="21"/></break>
	    }<pos:position pos:line="184" pos:column="14"/></block></then></if>

	  <comment type="block" pos:line="186" pos:column="11">/* Handle the case where we occasionally need to read a line
	     that is longer than the initial buffer size.  */</comment>
	  <while pos:line="188" pos:column="11">while <condition pos:line="188" pos:column="17">(<expr><operator pos:line="188" pos:column="18">(<pos:position pos:line="188" pos:column="19"/></operator><name><name pos:line="188" pos:column="19">line<pos:position pos:line="188" pos:column="23"/></name><index pos:line="188" pos:column="23">[<expr><call><name pos:line="188" pos:column="24">LT_STRLEN<pos:position pos:line="188" pos:column="33"/></name><argument_list pos:line="188" pos:column="33">(<argument><expr><name pos:line="188" pos:column="34">line<pos:position pos:line="188" pos:column="38"/></name></expr></argument>)<pos:position pos:line="188" pos:column="39"/></argument_list></call> <operator pos:line="188" pos:column="40">-<pos:position pos:line="188" pos:column="41"/></operator><literal type="number" pos:line="188" pos:column="41">1<pos:position pos:line="188" pos:column="42"/></literal></expr>]<pos:position pos:line="188" pos:column="43"/></index></name> <operator pos:line="188" pos:column="44">!=<pos:position pos:line="188" pos:column="46"/></operator> <literal type="char" pos:line="188" pos:column="47">'\n'<pos:position pos:line="188" pos:column="51"/></literal><operator pos:line="188" pos:column="51">)<pos:position pos:line="188" pos:column="52"/></operator> <operator pos:line="188" pos:column="53">&amp;&amp;<pos:position pos:line="188" pos:column="63"/></operator> <operator pos:line="188" pos:column="56">(<pos:position pos:line="188" pos:column="57"/></operator><operator pos:line="188" pos:column="57">!<pos:position pos:line="188" pos:column="58"/></operator><call><name pos:line="188" pos:column="58">feof<pos:position pos:line="188" pos:column="62"/></name> <argument_list pos:line="188" pos:column="63">(<argument><expr><name pos:line="188" pos:column="64">file<pos:position pos:line="188" pos:column="68"/></name></expr></argument>)<pos:position pos:line="188" pos:column="69"/></argument_list></call><operator pos:line="188" pos:column="69">)<pos:position pos:line="188" pos:column="70"/></operator></expr>)<pos:position pos:line="188" pos:column="71"/></condition>
	    <block pos:line="189" pos:column="13">{
	      <expr_stmt><expr><name pos:line="190" pos:column="15">line<pos:position pos:line="190" pos:column="19"/></name> <operator pos:line="190" pos:column="20">=<pos:position pos:line="190" pos:column="21"/></operator> <call><name pos:line="190" pos:column="22">LT_DLREALLOC<pos:position pos:line="190" pos:column="34"/></name> <argument_list pos:line="190" pos:column="35">(<argument><expr><name pos:line="190" pos:column="36">char<pos:position pos:line="190" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="190" pos:column="42">line<pos:position pos:line="190" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="190" pos:column="48">line_len<pos:position pos:line="190" pos:column="56"/></name> <operator pos:line="190" pos:column="57">*<pos:position pos:line="190" pos:column="58"/></operator><literal type="number" pos:line="190" pos:column="58">2<pos:position pos:line="190" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="190" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="61"/></expr_stmt>
	      <if pos:line="191" pos:column="15">if <condition pos:line="191" pos:column="18">(<expr><operator pos:line="191" pos:column="19">!<pos:position pos:line="191" pos:column="20"/></operator><call><name pos:line="191" pos:column="20">fgets<pos:position pos:line="191" pos:column="25"/></name> <argument_list pos:line="191" pos:column="26">(<argument><expr><operator pos:line="191" pos:column="27">&amp;<pos:position pos:line="191" pos:column="32"/></operator><name><name pos:line="191" pos:column="28">line<pos:position pos:line="191" pos:column="32"/></name><index pos:line="191" pos:column="32">[<expr><name pos:line="191" pos:column="33">line_len<pos:position pos:line="191" pos:column="41"/></name> <operator pos:line="191" pos:column="42">-<pos:position pos:line="191" pos:column="43"/></operator><literal type="number" pos:line="191" pos:column="43">1<pos:position pos:line="191" pos:column="44"/></literal></expr>]<pos:position pos:line="191" pos:column="45"/></index></name></expr></argument>, <argument><expr><operator pos:line="191" pos:column="47">(<pos:position pos:line="191" pos:column="48"/></operator><name pos:line="191" pos:column="48">int<pos:position pos:line="191" pos:column="51"/></name><operator pos:line="191" pos:column="51">)<pos:position pos:line="191" pos:column="52"/></operator> <name pos:line="191" pos:column="53">line_len<pos:position pos:line="191" pos:column="61"/></name> <operator pos:line="191" pos:column="62">+<pos:position pos:line="191" pos:column="63"/></operator><literal type="number" pos:line="191" pos:column="63">1<pos:position pos:line="191" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="191" pos:column="66">file<pos:position pos:line="191" pos:column="70"/></name></expr></argument>)<pos:position pos:line="191" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="191" pos:column="72"/></condition><then pos:line="191" pos:column="72">
		<block pos:line="192" pos:column="17">{
		  <break pos:line="193" pos:column="19">break;<pos:position pos:line="193" pos:column="25"/></break>
		}<pos:position pos:line="194" pos:column="18"/></block></then></if>
	      <expr_stmt><expr><name pos:line="195" pos:column="15">line_len<pos:position pos:line="195" pos:column="23"/></name> <operator pos:line="195" pos:column="24">*=<pos:position pos:line="195" pos:column="26"/></operator> <literal type="number" pos:line="195" pos:column="27">2<pos:position pos:line="195" pos:column="28"/></literal></expr>;<pos:position pos:line="195" pos:column="29"/></expr_stmt>
	    }<pos:position pos:line="196" pos:column="14"/></block></while>

	  <if pos:line="198" pos:column="11">if <condition pos:line="198" pos:column="14">(<expr><name><name pos:line="198" pos:column="15">line<pos:position pos:line="198" pos:column="19"/></name><index pos:line="198" pos:column="19">[<expr><literal type="number" pos:line="198" pos:column="20">0<pos:position pos:line="198" pos:column="21"/></literal></expr>]<pos:position pos:line="198" pos:column="22"/></index></name> <operator pos:line="198" pos:column="23">==<pos:position pos:line="198" pos:column="25"/></operator> <literal type="char" pos:line="198" pos:column="26">'\n'<pos:position pos:line="198" pos:column="30"/></literal> <operator pos:line="198" pos:column="31">||<pos:position pos:line="198" pos:column="33"/></operator> <name><name pos:line="198" pos:column="34">line<pos:position pos:line="198" pos:column="38"/></name><index pos:line="198" pos:column="38">[<expr><literal type="number" pos:line="198" pos:column="39">0<pos:position pos:line="198" pos:column="40"/></literal></expr>]<pos:position pos:line="198" pos:column="41"/></index></name> <operator pos:line="198" pos:column="42">==<pos:position pos:line="198" pos:column="44"/></operator> <literal type="char" pos:line="198" pos:column="45">'#'<pos:position pos:line="198" pos:column="48"/></literal></expr>)<pos:position pos:line="198" pos:column="49"/></condition><then pos:line="198" pos:column="49">
	    <block pos:line="199" pos:column="13">{
	      <continue pos:line="200" pos:column="15">continue;<pos:position pos:line="200" pos:column="24"/></continue>
	    }<pos:position pos:line="201" pos:column="14"/></block></then></if>

<cpp:undef pos:line="203" pos:column="1">#<cpp:directive pos:line="203" pos:column="2">undef<pos:position pos:line="203" pos:column="7"/></cpp:directive>  <name pos:line="203" pos:column="9">STR_DLNAME<pos:position pos:line="203" pos:column="19"/></name></cpp:undef>
<cpp:define pos:line="204" pos:column="1">#<cpp:directive pos:line="204" pos:column="2">define<pos:position pos:line="204" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="204" pos:column="9">STR_DLNAME<pos:position pos:line="204" pos:column="19"/></name></cpp:macro>	<cpp:value pos:line="204" pos:column="25">"dlname="<pos:position pos:line="204" pos:column="34"/></cpp:value></cpp:define>
	  <if pos:line="205" pos:column="11">if <condition pos:line="205" pos:column="14">(<expr><call><name pos:line="205" pos:column="15">strncmp<pos:position pos:line="205" pos:column="22"/></name> <argument_list pos:line="205" pos:column="23">(<argument><expr><name pos:line="205" pos:column="24">line<pos:position pos:line="205" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="205" pos:column="30">STR_DLNAME<pos:position pos:line="205" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="205" pos:column="42">sizeof <argument_list pos:line="205" pos:column="49">(<argument><expr><name pos:line="205" pos:column="50">STR_DLNAME<pos:position pos:line="205" pos:column="60"/></name></expr></argument>)<pos:position pos:line="205" pos:column="61"/></argument_list></sizeof> <operator pos:line="205" pos:column="62">-<pos:position pos:line="205" pos:column="63"/></operator> <literal type="number" pos:line="205" pos:column="64">1<pos:position pos:line="205" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="205" pos:column="66"/></argument_list></call> <operator pos:line="205" pos:column="67">==<pos:position pos:line="205" pos:column="69"/></operator> <literal type="number" pos:line="205" pos:column="70">0<pos:position pos:line="205" pos:column="71"/></literal></expr>)<pos:position pos:line="205" pos:column="72"/></condition><then pos:line="205" pos:column="72">
	    <block pos:line="206" pos:column="13">{
	      <expr_stmt><expr><name pos:line="207" pos:column="15">errors<pos:position pos:line="207" pos:column="21"/></name> <operator pos:line="207" pos:column="22">+=<pos:position pos:line="207" pos:column="24"/></operator> <call><name pos:line="207" pos:column="25">trim<pos:position pos:line="207" pos:column="29"/></name> <argument_list pos:line="207" pos:column="30">(<argument><expr><operator pos:line="207" pos:column="31">&amp;<pos:position pos:line="207" pos:column="36"/></operator><name pos:line="207" pos:column="32">dlname<pos:position pos:line="207" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="207" pos:column="40">&amp;<pos:position pos:line="207" pos:column="45"/></operator><name><name pos:line="207" pos:column="41">line<pos:position pos:line="207" pos:column="45"/></name><index pos:line="207" pos:column="45">[<expr><sizeof pos:line="207" pos:column="46">sizeof <argument_list pos:line="207" pos:column="53">(<argument><expr><name pos:line="207" pos:column="54">STR_DLNAME<pos:position pos:line="207" pos:column="64"/></name></expr></argument>)<pos:position pos:line="207" pos:column="65"/></argument_list></sizeof> <operator pos:line="207" pos:column="66">-<pos:position pos:line="207" pos:column="67"/></operator> <literal type="number" pos:line="207" pos:column="68">1<pos:position pos:line="207" pos:column="69"/></literal></expr>]<pos:position pos:line="207" pos:column="70"/></index></name></expr></argument>)<pos:position pos:line="207" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="72"/></expr_stmt>
	    }<pos:position pos:line="208" pos:column="14"/></block></then>

<cpp:undef pos:line="210" pos:column="1">#<cpp:directive pos:line="210" pos:column="2">undef<pos:position pos:line="210" pos:column="7"/></cpp:directive>  <name pos:line="210" pos:column="9">STR_OLD_LIBRARY<pos:position pos:line="210" pos:column="24"/></name></cpp:undef>
<cpp:define pos:line="211" pos:column="1">#<cpp:directive pos:line="211" pos:column="2">define<pos:position pos:line="211" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="211" pos:column="9">STR_OLD_LIBRARY<pos:position pos:line="211" pos:column="24"/></name></cpp:macro>	<cpp:value pos:line="211" pos:column="25">"old_library="<pos:position pos:line="211" pos:column="39"/></cpp:value></cpp:define>
	  <elseif pos:line="212" pos:column="11">else <if pos:line="212" pos:column="16">if <condition pos:line="212" pos:column="19">(<expr><call><name pos:line="212" pos:column="20">strncmp<pos:position pos:line="212" pos:column="27"/></name> <argument_list pos:line="212" pos:column="28">(<argument><expr><name pos:line="212" pos:column="29">line<pos:position pos:line="212" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="212" pos:column="35">STR_OLD_LIBRARY<pos:position pos:line="212" pos:column="50"/></name></expr></argument>,
			    <argument><expr><sizeof pos:line="213" pos:column="29">sizeof <argument_list pos:line="213" pos:column="36">(<argument><expr><name pos:line="213" pos:column="37">STR_OLD_LIBRARY<pos:position pos:line="213" pos:column="52"/></name></expr></argument>)<pos:position pos:line="213" pos:column="53"/></argument_list></sizeof> <operator pos:line="213" pos:column="54">-<pos:position pos:line="213" pos:column="55"/></operator> <literal type="number" pos:line="213" pos:column="56">1<pos:position pos:line="213" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="213" pos:column="58"/></argument_list></call> <operator pos:line="213" pos:column="59">==<pos:position pos:line="213" pos:column="61"/></operator> <literal type="number" pos:line="213" pos:column="62">0<pos:position pos:line="213" pos:column="63"/></literal></expr>)<pos:position pos:line="213" pos:column="64"/></condition><then pos:line="213" pos:column="64">
	    <block pos:line="214" pos:column="13">{
	      <expr_stmt><expr><name pos:line="215" pos:column="15">errors<pos:position pos:line="215" pos:column="21"/></name> <operator pos:line="215" pos:column="22">+=<pos:position pos:line="215" pos:column="24"/></operator> <call><name pos:line="215" pos:column="25">trim<pos:position pos:line="215" pos:column="29"/></name> <argument_list pos:line="215" pos:column="30">(<argument><expr><operator pos:line="215" pos:column="31">&amp;<pos:position pos:line="215" pos:column="36"/></operator><name pos:line="215" pos:column="32">old_name<pos:position pos:line="215" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="215" pos:column="42">&amp;<pos:position pos:line="215" pos:column="47"/></operator><name><name pos:line="215" pos:column="43">line<pos:position pos:line="215" pos:column="47"/></name><index pos:line="215" pos:column="47">[<expr><sizeof pos:line="215" pos:column="48">sizeof <argument_list pos:line="215" pos:column="55">(<argument><expr><name pos:line="215" pos:column="56">STR_OLD_LIBRARY<pos:position pos:line="215" pos:column="71"/></name></expr></argument>)<pos:position pos:line="215" pos:column="72"/></argument_list></sizeof> <operator pos:line="215" pos:column="73">-<pos:position pos:line="215" pos:column="74"/></operator> <literal type="number" pos:line="215" pos:column="75">1<pos:position pos:line="215" pos:column="76"/></literal></expr>]<pos:position pos:line="215" pos:column="77"/></index></name></expr></argument>)<pos:position pos:line="215" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="79"/></expr_stmt>
	    }<pos:position pos:line="216" pos:column="14"/></block></then></if></elseif>
<cpp:undef pos:line="217" pos:column="1">#<cpp:directive pos:line="217" pos:column="2">undef<pos:position pos:line="217" pos:column="7"/></cpp:directive>  <name pos:line="217" pos:column="9">STR_LIBDIR<pos:position pos:line="217" pos:column="19"/></name></cpp:undef>
<cpp:define pos:line="218" pos:column="1">#<cpp:directive pos:line="218" pos:column="2">define<pos:position pos:line="218" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="218" pos:column="9">STR_LIBDIR<pos:position pos:line="218" pos:column="19"/></name></cpp:macro>	<cpp:value pos:line="218" pos:column="25">"libdir="<pos:position pos:line="218" pos:column="34"/></cpp:value></cpp:define>
	  <elseif pos:line="219" pos:column="11">else <if pos:line="219" pos:column="16">if <condition pos:line="219" pos:column="19">(<expr><call><name pos:line="219" pos:column="20">strncmp<pos:position pos:line="219" pos:column="27"/></name> <argument_list pos:line="219" pos:column="28">(<argument><expr><name pos:line="219" pos:column="29">line<pos:position pos:line="219" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="219" pos:column="35">STR_LIBDIR<pos:position pos:line="219" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="219" pos:column="47">sizeof <argument_list pos:line="219" pos:column="54">(<argument><expr><name pos:line="219" pos:column="55">STR_LIBDIR<pos:position pos:line="219" pos:column="65"/></name></expr></argument>)<pos:position pos:line="219" pos:column="66"/></argument_list></sizeof> <operator pos:line="219" pos:column="67">-<pos:position pos:line="219" pos:column="68"/></operator> <literal type="number" pos:line="219" pos:column="69">1<pos:position pos:line="219" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="219" pos:column="71"/></argument_list></call> <operator pos:line="219" pos:column="72">==<pos:position pos:line="219" pos:column="74"/></operator> <literal type="number" pos:line="219" pos:column="75">0<pos:position pos:line="219" pos:column="76"/></literal></expr>)<pos:position pos:line="219" pos:column="77"/></condition><then pos:line="219" pos:column="77">
	    <block pos:line="220" pos:column="13">{
	      <expr_stmt><expr><name pos:line="221" pos:column="15">errors<pos:position pos:line="221" pos:column="21"/></name> <operator pos:line="221" pos:column="22">+=<pos:position pos:line="221" pos:column="24"/></operator> <call><name pos:line="221" pos:column="25">trim<pos:position pos:line="221" pos:column="29"/></name> <argument_list pos:line="221" pos:column="30">(<argument><expr><operator pos:line="221" pos:column="31">&amp;<pos:position pos:line="221" pos:column="36"/></operator><name pos:line="221" pos:column="32">libdir<pos:position pos:line="221" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="221" pos:column="40">&amp;<pos:position pos:line="221" pos:column="45"/></operator><name><name pos:line="221" pos:column="41">line<pos:position pos:line="221" pos:column="45"/></name><index pos:line="221" pos:column="45">[<expr><sizeof pos:line="221" pos:column="46">sizeof<argument_list pos:line="221" pos:column="52">(<argument><expr><name pos:line="221" pos:column="53">STR_LIBDIR<pos:position pos:line="221" pos:column="63"/></name></expr></argument>)<pos:position pos:line="221" pos:column="64"/></argument_list></sizeof> <operator pos:line="221" pos:column="65">-<pos:position pos:line="221" pos:column="66"/></operator> <literal type="number" pos:line="221" pos:column="67">1<pos:position pos:line="221" pos:column="68"/></literal></expr>]<pos:position pos:line="221" pos:column="69"/></index></name></expr></argument>)<pos:position pos:line="221" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="221" pos:column="71"/></expr_stmt>
	    }<pos:position pos:line="222" pos:column="14"/></block></then></if></elseif>

<cpp:undef pos:line="224" pos:column="1">#<cpp:directive pos:line="224" pos:column="2">undef<pos:position pos:line="224" pos:column="7"/></cpp:directive>  <name pos:line="224" pos:column="9">STR_DL_DEPLIBS<pos:position pos:line="224" pos:column="23"/></name></cpp:undef>
<cpp:define pos:line="225" pos:column="1">#<cpp:directive pos:line="225" pos:column="2">define<pos:position pos:line="225" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="225" pos:column="9">STR_DL_DEPLIBS<pos:position pos:line="225" pos:column="23"/></name></cpp:macro>	<cpp:value pos:line="225" pos:column="25">"dependency_libs="<pos:position pos:line="225" pos:column="43"/></cpp:value></cpp:define>
	  <elseif pos:line="226" pos:column="11">else <if pos:line="226" pos:column="16">if <condition pos:line="226" pos:column="19">(<expr><call><name pos:line="226" pos:column="20">strncmp<pos:position pos:line="226" pos:column="27"/></name> <argument_list pos:line="226" pos:column="28">(<argument><expr><name pos:line="226" pos:column="29">line<pos:position pos:line="226" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="226" pos:column="35">STR_DL_DEPLIBS<pos:position pos:line="226" pos:column="49"/></name></expr></argument>,
			    <argument><expr><sizeof pos:line="227" pos:column="29">sizeof <argument_list pos:line="227" pos:column="36">(<argument><expr><name pos:line="227" pos:column="37">STR_DL_DEPLIBS<pos:position pos:line="227" pos:column="51"/></name></expr></argument>)<pos:position pos:line="227" pos:column="52"/></argument_list></sizeof> <operator pos:line="227" pos:column="53">-<pos:position pos:line="227" pos:column="54"/></operator> <literal type="number" pos:line="227" pos:column="55">1<pos:position pos:line="227" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="227" pos:column="57"/></argument_list></call> <operator pos:line="227" pos:column="58">==<pos:position pos:line="227" pos:column="60"/></operator> <literal type="number" pos:line="227" pos:column="61">0<pos:position pos:line="227" pos:column="62"/></literal></expr>)<pos:position pos:line="227" pos:column="63"/></condition><then pos:line="227" pos:column="63">
	    <block pos:line="228" pos:column="13">{
	      <expr_stmt><expr><name pos:line="229" pos:column="15">errors<pos:position pos:line="229" pos:column="21"/></name> <operator pos:line="229" pos:column="22">+=<pos:position pos:line="229" pos:column="24"/></operator> <call><name pos:line="229" pos:column="25">trim<pos:position pos:line="229" pos:column="29"/></name> <argument_list pos:line="229" pos:column="30">(<argument><expr><operator pos:line="229" pos:column="31">&amp;<pos:position pos:line="229" pos:column="36"/></operator><name pos:line="229" pos:column="32">deplibs<pos:position pos:line="229" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="229" pos:column="41">&amp;<pos:position pos:line="229" pos:column="46"/></operator><name><name pos:line="229" pos:column="42">line<pos:position pos:line="229" pos:column="46"/></name><index pos:line="229" pos:column="46">[<expr><sizeof pos:line="229" pos:column="47">sizeof <argument_list pos:line="229" pos:column="54">(<argument><expr><name pos:line="229" pos:column="55">STR_DL_DEPLIBS<pos:position pos:line="229" pos:column="69"/></name></expr></argument>)<pos:position pos:line="229" pos:column="70"/></argument_list></sizeof> <operator pos:line="229" pos:column="71">-<pos:position pos:line="229" pos:column="72"/></operator> <literal type="number" pos:line="229" pos:column="73">1<pos:position pos:line="229" pos:column="74"/></literal></expr>]<pos:position pos:line="229" pos:column="75"/></index></name></expr></argument>)<pos:position pos:line="229" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="229" pos:column="77"/></expr_stmt>
	    }<pos:position pos:line="230" pos:column="14"/></block></then></if></elseif>
	  <elseif pos:line="231" pos:column="11">else <if pos:line="231" pos:column="16">if <condition pos:line="231" pos:column="19">(<expr><call><name pos:line="231" pos:column="20">strcmp<pos:position pos:line="231" pos:column="26"/></name> <argument_list pos:line="231" pos:column="27">(<argument><expr><name pos:line="231" pos:column="28">line<pos:position pos:line="231" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="231" pos:column="34">"installed=yes\n"<pos:position pos:line="231" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="231" pos:column="52"/></argument_list></call> <operator pos:line="231" pos:column="53">==<pos:position pos:line="231" pos:column="55"/></operator> <literal type="number" pos:line="231" pos:column="56">0<pos:position pos:line="231" pos:column="57"/></literal></expr>)<pos:position pos:line="231" pos:column="58"/></condition><then pos:line="231" pos:column="58">
	    <block pos:line="232" pos:column="13">{
	      <expr_stmt><expr><name pos:line="233" pos:column="15">installed<pos:position pos:line="233" pos:column="24"/></name> <operator pos:line="233" pos:column="25">=<pos:position pos:line="233" pos:column="26"/></operator> <literal type="number" pos:line="233" pos:column="27">1<pos:position pos:line="233" pos:column="28"/></literal></expr>;<pos:position pos:line="233" pos:column="29"/></expr_stmt>
	    }<pos:position pos:line="234" pos:column="14"/></block></then></if></elseif>
	  <elseif pos:line="235" pos:column="11">else <if pos:line="235" pos:column="16">if <condition pos:line="235" pos:column="19">(<expr><call><name pos:line="235" pos:column="20">strcmp<pos:position pos:line="235" pos:column="26"/></name> <argument_list pos:line="235" pos:column="27">(<argument><expr><name pos:line="235" pos:column="28">line<pos:position pos:line="235" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="235" pos:column="34">"installed=no\n"<pos:position pos:line="235" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="235" pos:column="51"/></argument_list></call> <operator pos:line="235" pos:column="52">==<pos:position pos:line="235" pos:column="54"/></operator> <literal type="number" pos:line="235" pos:column="55">0<pos:position pos:line="235" pos:column="56"/></literal></expr>)<pos:position pos:line="235" pos:column="57"/></condition><then pos:line="235" pos:column="57">
	    <block pos:line="236" pos:column="13">{
	      <expr_stmt><expr><name pos:line="237" pos:column="15">installed<pos:position pos:line="237" pos:column="24"/></name> <operator pos:line="237" pos:column="25">=<pos:position pos:line="237" pos:column="26"/></operator> <literal type="number" pos:line="237" pos:column="27">0<pos:position pos:line="237" pos:column="28"/></literal></expr>;<pos:position pos:line="237" pos:column="29"/></expr_stmt>
	    }<pos:position pos:line="238" pos:column="14"/></block></then></if></elseif>

<cpp:undef pos:line="240" pos:column="1">#<cpp:directive pos:line="240" pos:column="2">undef<pos:position pos:line="240" pos:column="7"/></cpp:directive>  <name pos:line="240" pos:column="9">STR_LIBRARY_NAMES<pos:position pos:line="240" pos:column="26"/></name></cpp:undef>
<cpp:define pos:line="241" pos:column="1">#<cpp:directive pos:line="241" pos:column="2">define<pos:position pos:line="241" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="241" pos:column="9">STR_LIBRARY_NAMES<pos:position pos:line="241" pos:column="26"/></name></cpp:macro> <cpp:value pos:line="241" pos:column="27">"library_names="<pos:position pos:line="241" pos:column="43"/></cpp:value></cpp:define>
	  <elseif pos:line="242" pos:column="11">else <if pos:line="242" pos:column="16">if <condition pos:line="242" pos:column="19">(<expr><operator pos:line="242" pos:column="20">!<pos:position pos:line="242" pos:column="21"/></operator> <name pos:line="242" pos:column="22">dlname<pos:position pos:line="242" pos:column="28"/></name> <operator pos:line="242" pos:column="29">&amp;&amp;<pos:position pos:line="242" pos:column="39"/></operator> <call><name pos:line="242" pos:column="32">strncmp<pos:position pos:line="242" pos:column="39"/></name> <argument_list pos:line="242" pos:column="40">(<argument><expr><name pos:line="242" pos:column="41">line<pos:position pos:line="242" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="242" pos:column="47">STR_LIBRARY_NAMES<pos:position pos:line="242" pos:column="64"/></name></expr></argument>,
					<argument><expr><sizeof pos:line="243" pos:column="41">sizeof <argument_list pos:line="243" pos:column="48">(<argument><expr><name pos:line="243" pos:column="49">STR_LIBRARY_NAMES<pos:position pos:line="243" pos:column="66"/></name></expr></argument>)<pos:position pos:line="243" pos:column="67"/></argument_list></sizeof> <operator pos:line="243" pos:column="68">-<pos:position pos:line="243" pos:column="69"/></operator> <literal type="number" pos:line="243" pos:column="70">1<pos:position pos:line="243" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="243" pos:column="72"/></argument_list></call> <operator pos:line="243" pos:column="73">==<pos:position pos:line="243" pos:column="75"/></operator> <literal type="number" pos:line="243" pos:column="76">0<pos:position pos:line="243" pos:column="77"/></literal></expr>)<pos:position pos:line="243" pos:column="78"/></condition><then pos:line="243" pos:column="78">
	    <block pos:line="244" pos:column="13">{
	      <decl_stmt><decl><type><name pos:line="245" pos:column="15">char<pos:position pos:line="245" pos:column="19"/></name> <modifier pos:line="245" pos:column="20">*<pos:position pos:line="245" pos:column="21"/></modifier></type><name pos:line="245" pos:column="21">last_libname<pos:position pos:line="245" pos:column="33"/></name></decl>;<pos:position pos:line="245" pos:column="34"/></decl_stmt>
	      <expr_stmt><expr><name pos:line="246" pos:column="15">errors<pos:position pos:line="246" pos:column="21"/></name> <operator pos:line="246" pos:column="22">+=<pos:position pos:line="246" pos:column="24"/></operator> <call><name pos:line="246" pos:column="25">trim<pos:position pos:line="246" pos:column="29"/></name> <argument_list pos:line="246" pos:column="30">(<argument><expr><operator pos:line="246" pos:column="31">&amp;<pos:position pos:line="246" pos:column="36"/></operator><name pos:line="246" pos:column="32">dlname<pos:position pos:line="246" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="246" pos:column="40">&amp;<pos:position pos:line="246" pos:column="45"/></operator><name><name pos:line="246" pos:column="41">line<pos:position pos:line="246" pos:column="45"/></name><index pos:line="246" pos:column="45">[<expr><sizeof pos:line="246" pos:column="46">sizeof <argument_list pos:line="246" pos:column="53">(<argument><expr><name pos:line="246" pos:column="54">STR_LIBRARY_NAMES<pos:position pos:line="246" pos:column="71"/></name></expr></argument>)<pos:position pos:line="246" pos:column="72"/></argument_list></sizeof> <operator pos:line="246" pos:column="73">-<pos:position pos:line="246" pos:column="74"/></operator> <literal type="number" pos:line="246" pos:column="75">1<pos:position pos:line="246" pos:column="76"/></literal></expr>]<pos:position pos:line="246" pos:column="77"/></index></name></expr></argument>)<pos:position pos:line="246" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="246" pos:column="79"/></expr_stmt>
	      <if pos:line="247" pos:column="15">if <condition pos:line="247" pos:column="18">(<expr><operator pos:line="247" pos:column="19">!<pos:position pos:line="247" pos:column="20"/></operator><name pos:line="247" pos:column="20">errors<pos:position pos:line="247" pos:column="26"/></name>
		  <operator pos:line="248" pos:column="19">&amp;&amp;<pos:position pos:line="248" pos:column="29"/></operator> <name pos:line="248" pos:column="22">dlname<pos:position pos:line="248" pos:column="28"/></name>
		  <operator pos:line="249" pos:column="19">&amp;&amp;<pos:position pos:line="249" pos:column="29"/></operator> <operator pos:line="249" pos:column="22">(<pos:position pos:line="249" pos:column="23"/></operator><name pos:line="249" pos:column="23">last_libname<pos:position pos:line="249" pos:column="35"/></name> <operator pos:line="249" pos:column="36">=<pos:position pos:line="249" pos:column="37"/></operator> <call><name pos:line="249" pos:column="38">strrchr<pos:position pos:line="249" pos:column="45"/></name> <argument_list pos:line="249" pos:column="46">(<argument><expr><name pos:line="249" pos:column="47">dlname<pos:position pos:line="249" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="249" pos:column="55">' '<pos:position pos:line="249" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="249" pos:column="59"/></argument_list></call><operator pos:line="249" pos:column="59">)<pos:position pos:line="249" pos:column="60"/></operator> <operator pos:line="249" pos:column="61">!=<pos:position pos:line="249" pos:column="63"/></operator> <literal type="number" pos:line="249" pos:column="64">0<pos:position pos:line="249" pos:column="65"/></literal></expr>)<pos:position pos:line="249" pos:column="66"/></condition><then pos:line="249" pos:column="66">
		<block pos:line="250" pos:column="17">{
		  <expr_stmt><expr><name pos:line="251" pos:column="19">last_libname<pos:position pos:line="251" pos:column="31"/></name> <operator pos:line="251" pos:column="32">=<pos:position pos:line="251" pos:column="33"/></operator> <call><name pos:line="251" pos:column="34">lt_estrdup<pos:position pos:line="251" pos:column="44"/></name> <argument_list pos:line="251" pos:column="45">(<argument><expr><name pos:line="251" pos:column="46">last_libname<pos:position pos:line="251" pos:column="58"/></name> <operator pos:line="251" pos:column="59">+<pos:position pos:line="251" pos:column="60"/></operator> <literal type="number" pos:line="251" pos:column="61">1<pos:position pos:line="251" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="251" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="251" pos:column="64"/></expr_stmt>
		  <if pos:line="252" pos:column="19">if <condition pos:line="252" pos:column="22">(<expr><operator pos:line="252" pos:column="23">!<pos:position pos:line="252" pos:column="24"/></operator><name pos:line="252" pos:column="24">last_libname<pos:position pos:line="252" pos:column="36"/></name></expr>)<pos:position pos:line="252" pos:column="37"/></condition><then pos:line="252" pos:column="37">
		    <block pos:line="253" pos:column="21">{
		      <expr_stmt><expr><operator pos:line="254" pos:column="23">++<pos:position pos:line="254" pos:column="25"/></operator><name pos:line="254" pos:column="25">errors<pos:position pos:line="254" pos:column="31"/></name></expr>;<pos:position pos:line="254" pos:column="32"/></expr_stmt>
		      <goto pos:line="255" pos:column="23">goto <name pos:line="255" pos:column="28">cleanup<pos:position pos:line="255" pos:column="35"/></name>;<pos:position pos:line="255" pos:column="36"/></goto>
		    }<pos:position pos:line="256" pos:column="22"/></block></then></if>
		  <expr_stmt><expr><call><name pos:line="257" pos:column="19">LT_DLMEM_REASSIGN<pos:position pos:line="257" pos:column="36"/></name> <argument_list pos:line="257" pos:column="37">(<argument><expr><name pos:line="257" pos:column="38">dlname<pos:position pos:line="257" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="257" pos:column="46">last_libname<pos:position pos:line="257" pos:column="58"/></name></expr></argument>)<pos:position pos:line="257" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="257" pos:column="60"/></expr_stmt>
		}<pos:position pos:line="258" pos:column="18"/></block></then></if>
	    }<pos:position pos:line="259" pos:column="14"/></block></then></if></elseif></if>

	  <if pos:line="261" pos:column="11">if <condition pos:line="261" pos:column="14">(<expr><name pos:line="261" pos:column="15">errors<pos:position pos:line="261" pos:column="21"/></name></expr>)<pos:position pos:line="261" pos:column="22"/></condition><then pos:line="261" pos:column="22">
	    <block type="pseudo"><break pos:line="262" pos:column="13">break;<pos:position pos:line="262" pos:column="19"/></break></block></then></if>
	}<pos:position pos:line="263" pos:column="10"/></block></while>

      <expr_stmt><expr><call><name pos:line="265" pos:column="7">fclose<pos:position pos:line="265" pos:column="13"/></name> <argument_list pos:line="265" pos:column="14">(<argument><expr><name pos:line="265" pos:column="15">file<pos:position pos:line="265" pos:column="19"/></name></expr></argument>)<pos:position pos:line="265" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="265" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="266" pos:column="7">LT_DLFREE<pos:position pos:line="266" pos:column="16"/></name> <argument_list pos:line="266" pos:column="17">(<argument><expr><name pos:line="266" pos:column="18">line<pos:position pos:line="266" pos:column="22"/></name></expr></argument>)<pos:position pos:line="266" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="266" pos:column="24"/></expr_stmt>

      <comment type="block" pos:line="268" pos:column="7">/* allocate the handle */</comment>
      <expr_stmt><expr><operator pos:line="269" pos:column="7">*<pos:position pos:line="269" pos:column="8"/></operator><name pos:line="269" pos:column="8">phandle<pos:position pos:line="269" pos:column="15"/></name> <operator pos:line="269" pos:column="16">=<pos:position pos:line="269" pos:column="17"/></operator> <operator pos:line="269" pos:column="18">(<pos:position pos:line="269" pos:column="19"/></operator><name pos:line="269" pos:column="19">lt_dlhandle<pos:position pos:line="269" pos:column="30"/></name><operator pos:line="269" pos:column="30">)<pos:position pos:line="269" pos:column="31"/></operator> <call><name pos:line="269" pos:column="32">LT_EMALLOC<pos:position pos:line="269" pos:column="42"/></name> <argument_list pos:line="269" pos:column="43">(<argument><expr pos:line="269" pos:column="44">struct <name pos:line="269" pos:column="51">lt_dlhandle_struct<pos:position pos:line="269" pos:column="69"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="269" pos:column="71">1<pos:position pos:line="269" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="269" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="269" pos:column="74"/></expr_stmt>
      <if pos:line="270" pos:column="7">if <condition pos:line="270" pos:column="10">(<expr><operator pos:line="270" pos:column="11">*<pos:position pos:line="270" pos:column="12"/></operator><name pos:line="270" pos:column="12">phandle<pos:position pos:line="270" pos:column="19"/></name> <operator pos:line="270" pos:column="20">==<pos:position pos:line="270" pos:column="22"/></operator> <literal type="number" pos:line="270" pos:column="23">0<pos:position pos:line="270" pos:column="24"/></literal></expr>)<pos:position pos:line="270" pos:column="25"/></condition><then pos:line="270" pos:column="25">
	<block type="pseudo"><expr_stmt><expr><operator pos:line="271" pos:column="9">++<pos:position pos:line="271" pos:column="11"/></operator><name pos:line="271" pos:column="11">errors<pos:position pos:line="271" pos:column="17"/></name></expr>;<pos:position pos:line="271" pos:column="18"/></expr_stmt></block></then></if>

      <if pos:line="273" pos:column="7">if <condition pos:line="273" pos:column="10">(<expr><name pos:line="273" pos:column="11">errors<pos:position pos:line="273" pos:column="17"/></name></expr>)<pos:position pos:line="273" pos:column="18"/></condition><then pos:line="273" pos:column="18">
	<block pos:line="274" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="275" pos:column="11">free_vars<pos:position pos:line="275" pos:column="20"/></name> <argument_list pos:line="275" pos:column="21">(<argument><expr><name pos:line="275" pos:column="22">dlname<pos:position pos:line="275" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="275" pos:column="30">old_name<pos:position pos:line="275" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="275" pos:column="40">libdir<pos:position pos:line="275" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="275" pos:column="48">deplibs<pos:position pos:line="275" pos:column="55"/></name></expr></argument>)<pos:position pos:line="275" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="275" pos:column="57"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="276" pos:column="11">LT_DLFREE<pos:position pos:line="276" pos:column="20"/></name> <argument_list pos:line="276" pos:column="21">(<argument><expr><operator pos:line="276" pos:column="22">*<pos:position pos:line="276" pos:column="23"/></operator><name pos:line="276" pos:column="23">phandle<pos:position pos:line="276" pos:column="30"/></name></expr></argument>)<pos:position pos:line="276" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="276" pos:column="32"/></expr_stmt>
	  <goto pos:line="277" pos:column="11">goto <name pos:line="277" pos:column="16">cleanup<pos:position pos:line="277" pos:column="23"/></name>;<pos:position pos:line="277" pos:column="24"/></goto>
	}<pos:position pos:line="278" pos:column="10"/></block></then></if>

      <expr_stmt><expr><call><name pos:line="280" pos:column="7">assert<pos:position pos:line="280" pos:column="13"/></name> <argument_list pos:line="280" pos:column="14">(<argument><expr><operator pos:line="280" pos:column="15">*<pos:position pos:line="280" pos:column="16"/></operator><name pos:line="280" pos:column="16">phandle<pos:position pos:line="280" pos:column="23"/></name></expr></argument>)<pos:position pos:line="280" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="280" pos:column="25"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="282" pos:column="7">memset<pos:position pos:line="282" pos:column="13"/></name> <argument_list pos:line="282" pos:column="14">(<argument><expr><operator pos:line="282" pos:column="15">*<pos:position pos:line="282" pos:column="16"/></operator><name pos:line="282" pos:column="16">phandle<pos:position pos:line="282" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="282" pos:column="25">0<pos:position pos:line="282" pos:column="26"/></literal></expr></argument>, <argument><expr><sizeof pos:line="282" pos:column="28">sizeof<argument_list pos:line="282" pos:column="34">(<argument><expr pos:line="282" pos:column="35">struct <name pos:line="282" pos:column="42">lt_dlhandle_struct<pos:position pos:line="282" pos:column="60"/></name></expr></argument>)<pos:position pos:line="282" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="282" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="282" pos:column="63"/></expr_stmt>
      <if pos:line="283" pos:column="7">if <condition pos:line="283" pos:column="10">(<expr><call><name pos:line="283" pos:column="11">load_deplibs<pos:position pos:line="283" pos:column="23"/></name> <argument_list pos:line="283" pos:column="24">(<argument><expr><operator pos:line="283" pos:column="25">*<pos:position pos:line="283" pos:column="26"/></operator><name pos:line="283" pos:column="26">phandle<pos:position pos:line="283" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="283" pos:column="35">deplibs<pos:position pos:line="283" pos:column="42"/></name></expr></argument>)<pos:position pos:line="283" pos:column="43"/></argument_list></call> <operator pos:line="283" pos:column="44">==<pos:position pos:line="283" pos:column="46"/></operator> <literal type="number" pos:line="283" pos:column="47">0<pos:position pos:line="283" pos:column="48"/></literal></expr>)<pos:position pos:line="283" pos:column="49"/></condition><then pos:line="283" pos:column="49">
	<block pos:line="284" pos:column="9">{
	  <expr_stmt><expr><name pos:line="285" pos:column="11">newhandle<pos:position pos:line="285" pos:column="20"/></name> <operator pos:line="285" pos:column="21">=<pos:position pos:line="285" pos:column="22"/></operator> <operator pos:line="285" pos:column="23">*<pos:position pos:line="285" pos:column="24"/></operator><name pos:line="285" pos:column="24">phandle<pos:position pos:line="285" pos:column="31"/></name></expr>;<pos:position pos:line="285" pos:column="32"/></expr_stmt>
	  <comment type="block" pos:line="286" pos:column="11">/* find_module may replace newhandle */</comment>
	  <if pos:line="287" pos:column="11">if <condition pos:line="287" pos:column="14">(<expr><call><name pos:line="287" pos:column="15">find_module<pos:position pos:line="287" pos:column="26"/></name> <argument_list pos:line="287" pos:column="27">(<argument><expr><operator pos:line="287" pos:column="28">&amp;<pos:position pos:line="287" pos:column="33"/></operator><name pos:line="287" pos:column="29">newhandle<pos:position pos:line="287" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="287" pos:column="40">dir<pos:position pos:line="287" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="287" pos:column="45">libdir<pos:position pos:line="287" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="287" pos:column="53">dlname<pos:position pos:line="287" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="287" pos:column="61">old_name<pos:position pos:line="287" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="287" pos:column="71">installed<pos:position pos:line="287" pos:column="80"/></name></expr></argument>)<pos:position pos:line="287" pos:column="81"/></argument_list></call></expr>)<pos:position pos:line="287" pos:column="82"/></condition><then pos:line="287" pos:column="82">
	    <block pos:line="288" pos:column="13">{
	      <expr_stmt><expr><call><name pos:line="289" pos:column="15">unload_deplibs<pos:position pos:line="289" pos:column="29"/></name> <argument_list pos:line="289" pos:column="30">(<argument><expr><operator pos:line="289" pos:column="31">*<pos:position pos:line="289" pos:column="32"/></operator><name pos:line="289" pos:column="32">phandle<pos:position pos:line="289" pos:column="39"/></name></expr></argument>)<pos:position pos:line="289" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="289" pos:column="41"/></expr_stmt>
	      <expr_stmt><expr><operator pos:line="290" pos:column="15">++<pos:position pos:line="290" pos:column="17"/></operator><name pos:line="290" pos:column="17">errors<pos:position pos:line="290" pos:column="23"/></name></expr>;<pos:position pos:line="290" pos:column="24"/></expr_stmt>
	    }<pos:position pos:line="291" pos:column="14"/></block></then></if>
	}<pos:position pos:line="292" pos:column="10"/></block></then>
      <else pos:line="293" pos:column="7">else
	<block pos:line="294" pos:column="9">{
	  <expr_stmt><expr><operator pos:line="295" pos:column="11">++<pos:position pos:line="295" pos:column="13"/></operator><name pos:line="295" pos:column="13">errors<pos:position pos:line="295" pos:column="19"/></name></expr>;<pos:position pos:line="295" pos:column="20"/></expr_stmt>
	}<pos:position pos:line="296" pos:column="10"/></block></else></if>

      <expr_stmt><expr><call><name pos:line="298" pos:column="7">free_vars<pos:position pos:line="298" pos:column="16"/></name> <argument_list pos:line="298" pos:column="17">(<argument><expr><name pos:line="298" pos:column="18">dlname<pos:position pos:line="298" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="298" pos:column="26">old_name<pos:position pos:line="298" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="298" pos:column="36">libdir<pos:position pos:line="298" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="298" pos:column="44">deplibs<pos:position pos:line="298" pos:column="51"/></name></expr></argument>)<pos:position pos:line="298" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="298" pos:column="53"/></expr_stmt>
      <if pos:line="299" pos:column="7">if <condition pos:line="299" pos:column="10">(<expr><name pos:line="299" pos:column="11">errors<pos:position pos:line="299" pos:column="17"/></name></expr>)<pos:position pos:line="299" pos:column="18"/></condition><then pos:line="299" pos:column="18">
	<block pos:line="300" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="301" pos:column="11">LT_DLFREE<pos:position pos:line="301" pos:column="20"/></name> <argument_list pos:line="301" pos:column="21">(<argument><expr><operator pos:line="301" pos:column="22">*<pos:position pos:line="301" pos:column="23"/></operator><name pos:line="301" pos:column="23">phandle<pos:position pos:line="301" pos:column="30"/></name></expr></argument>)<pos:position pos:line="301" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="301" pos:column="32"/></expr_stmt>
	  <goto pos:line="302" pos:column="11">goto <name pos:line="302" pos:column="16">cleanup<pos:position pos:line="302" pos:column="23"/></name>;<pos:position pos:line="302" pos:column="24"/></goto>
	}<pos:position pos:line="303" pos:column="10"/></block></then></if>

      <if pos:line="305" pos:column="7">if <condition pos:line="305" pos:column="10">(<expr><operator pos:line="305" pos:column="11">*<pos:position pos:line="305" pos:column="12"/></operator><name pos:line="305" pos:column="12">phandle<pos:position pos:line="305" pos:column="19"/></name> <operator pos:line="305" pos:column="20">!=<pos:position pos:line="305" pos:column="22"/></operator> <name pos:line="305" pos:column="23">newhandle<pos:position pos:line="305" pos:column="32"/></name></expr>)<pos:position pos:line="305" pos:column="33"/></condition><then pos:line="305" pos:column="33">
	<block pos:line="306" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="307" pos:column="11">unload_deplibs<pos:position pos:line="307" pos:column="25"/></name> <argument_list pos:line="307" pos:column="26">(<argument><expr><operator pos:line="307" pos:column="27">*<pos:position pos:line="307" pos:column="28"/></operator><name pos:line="307" pos:column="28">phandle<pos:position pos:line="307" pos:column="35"/></name></expr></argument>)<pos:position pos:line="307" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="307" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="308" pos:column="10"/></block></then></if>
    }<pos:position pos:line="309" pos:column="6"/></block></then>
  <else pos:line="310" pos:column="3">else
    <block pos:line="311" pos:column="5">{
      <comment type="block" pos:line="312" pos:column="7">/* not a libtool module */</comment>
      <expr_stmt><expr><operator pos:line="313" pos:column="7">*<pos:position pos:line="313" pos:column="8"/></operator><name pos:line="313" pos:column="8">phandle<pos:position pos:line="313" pos:column="15"/></name> <operator pos:line="313" pos:column="16">=<pos:position pos:line="313" pos:column="17"/></operator> <operator pos:line="313" pos:column="18">(<pos:position pos:line="313" pos:column="19"/></operator><name pos:line="313" pos:column="19">lt_dlhandle<pos:position pos:line="313" pos:column="30"/></name><operator pos:line="313" pos:column="30">)<pos:position pos:line="313" pos:column="31"/></operator> <call><name pos:line="313" pos:column="32">LT_EMALLOC<pos:position pos:line="313" pos:column="42"/></name> <argument_list pos:line="313" pos:column="43">(<argument><expr pos:line="313" pos:column="44">struct <name pos:line="313" pos:column="51">lt_dlhandle_struct<pos:position pos:line="313" pos:column="69"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="313" pos:column="71">1<pos:position pos:line="313" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="313" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="313" pos:column="74"/></expr_stmt>
      <if pos:line="314" pos:column="7">if <condition pos:line="314" pos:column="10">(<expr><operator pos:line="314" pos:column="11">*<pos:position pos:line="314" pos:column="12"/></operator><name pos:line="314" pos:column="12">phandle<pos:position pos:line="314" pos:column="19"/></name> <operator pos:line="314" pos:column="20">==<pos:position pos:line="314" pos:column="22"/></operator> <literal type="number" pos:line="314" pos:column="23">0<pos:position pos:line="314" pos:column="24"/></literal></expr>)<pos:position pos:line="314" pos:column="25"/></condition><then pos:line="314" pos:column="25">
	<block pos:line="315" pos:column="9">{
	  <expr_stmt><expr><operator pos:line="316" pos:column="11">++<pos:position pos:line="316" pos:column="13"/></operator><name pos:line="316" pos:column="13">errors<pos:position pos:line="316" pos:column="19"/></name></expr>;<pos:position pos:line="316" pos:column="20"/></expr_stmt>
	  <goto pos:line="317" pos:column="11">goto <name pos:line="317" pos:column="16">cleanup<pos:position pos:line="317" pos:column="23"/></name>;<pos:position pos:line="317" pos:column="24"/></goto>
	}<pos:position pos:line="318" pos:column="10"/></block></then></if>

      <expr_stmt><expr><call><name pos:line="320" pos:column="7">memset<pos:position pos:line="320" pos:column="13"/></name> <argument_list pos:line="320" pos:column="14">(<argument><expr><operator pos:line="320" pos:column="15">*<pos:position pos:line="320" pos:column="16"/></operator><name pos:line="320" pos:column="16">phandle<pos:position pos:line="320" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="320" pos:column="25">0<pos:position pos:line="320" pos:column="26"/></literal></expr></argument>, <argument><expr><sizeof pos:line="320" pos:column="28">sizeof <argument_list pos:line="320" pos:column="35">(<argument><expr pos:line="320" pos:column="36">struct <name pos:line="320" pos:column="43">lt_dlhandle_struct<pos:position pos:line="320" pos:column="61"/></name></expr></argument>)<pos:position pos:line="320" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="320" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="320" pos:column="64"/></expr_stmt>
      <expr_stmt><expr><name pos:line="321" pos:column="7">newhandle<pos:position pos:line="321" pos:column="16"/></name> <operator pos:line="321" pos:column="17">=<pos:position pos:line="321" pos:column="18"/></operator> <operator pos:line="321" pos:column="19">*<pos:position pos:line="321" pos:column="20"/></operator><name pos:line="321" pos:column="20">phandle<pos:position pos:line="321" pos:column="27"/></name></expr>;<pos:position pos:line="321" pos:column="28"/></expr_stmt>

      <comment type="block" pos:line="323" pos:column="7">/* If the module has no directory name component, try to find it
	 first in user_search_path and then other prescribed paths.
	 Otherwise (or in any case if the module was not yet found) try
	 opening just the module name as passed.  */</comment>
      <if pos:line="327" pos:column="7">if <condition pos:line="327" pos:column="10">(<expr><operator pos:line="327" pos:column="11">(<pos:position pos:line="327" pos:column="12"/></operator><name pos:line="327" pos:column="12">dir<pos:position pos:line="327" pos:column="15"/></name> <operator pos:line="327" pos:column="16">||<pos:position pos:line="327" pos:column="18"/></operator> <operator pos:line="327" pos:column="19">(<pos:position pos:line="327" pos:column="20"/></operator><operator pos:line="327" pos:column="20">!<pos:position pos:line="327" pos:column="21"/></operator><call><name pos:line="327" pos:column="21">find_handle<pos:position pos:line="327" pos:column="32"/></name> <argument_list pos:line="327" pos:column="33">(<argument><expr><name pos:line="327" pos:column="34">user_search_path<pos:position pos:line="327" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="327" pos:column="52">base_name<pos:position pos:line="327" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="327" pos:column="63">&amp;<pos:position pos:line="327" pos:column="68"/></operator><name pos:line="327" pos:column="64">newhandle<pos:position pos:line="327" pos:column="73"/></name></expr></argument>)<pos:position pos:line="327" pos:column="74"/></argument_list></call>
		   <operator pos:line="328" pos:column="20">&amp;&amp;<pos:position pos:line="328" pos:column="30"/></operator> <operator pos:line="328" pos:column="23">!<pos:position pos:line="328" pos:column="24"/></operator><call><name pos:line="328" pos:column="24">find_handle<pos:position pos:line="328" pos:column="35"/></name> <argument_list pos:line="328" pos:column="36">(<argument><expr><call><name pos:line="328" pos:column="37">getenv<pos:position pos:line="328" pos:column="43"/></name> <argument_list pos:line="328" pos:column="44">(<argument><expr><name pos:line="328" pos:column="45">LTDL_SEARCHPATH_VAR<pos:position pos:line="328" pos:column="64"/></name></expr></argument>)<pos:position pos:line="328" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="328" pos:column="67">base_name<pos:position pos:line="328" pos:column="76"/></name></expr></argument>,
				    <argument><expr><operator pos:line="329" pos:column="37">&amp;<pos:position pos:line="329" pos:column="42"/></operator><name pos:line="329" pos:column="38">newhandle<pos:position pos:line="329" pos:column="47"/></name></expr></argument>)<pos:position pos:line="329" pos:column="48"/></argument_list></call>
<cpp:ifdef pos:line="330" pos:column="1">#<cpp:directive pos:line="330" pos:column="2">ifdef<pos:position pos:line="330" pos:column="7"/></cpp:directive> <name pos:line="330" pos:column="8">LTDL_SHLIBPATH_VAR<pos:position pos:line="330" pos:column="26"/></name></cpp:ifdef>
		   <operator pos:line="331" pos:column="20">&amp;&amp;<pos:position pos:line="331" pos:column="30"/></operator> <operator pos:line="331" pos:column="23">!<pos:position pos:line="331" pos:column="24"/></operator><call><name pos:line="331" pos:column="24">find_handle<pos:position pos:line="331" pos:column="35"/></name> <argument_list pos:line="331" pos:column="36">(<argument><expr><call><name pos:line="331" pos:column="37">getenv<pos:position pos:line="331" pos:column="43"/></name> <argument_list pos:line="331" pos:column="44">(<argument><expr><name pos:line="331" pos:column="45">LTDL_SHLIBPATH_VAR<pos:position pos:line="331" pos:column="63"/></name></expr></argument>)<pos:position pos:line="331" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="331" pos:column="66">base_name<pos:position pos:line="331" pos:column="75"/></name></expr></argument>,
				    <argument><expr><operator pos:line="332" pos:column="37">&amp;<pos:position pos:line="332" pos:column="42"/></operator><name pos:line="332" pos:column="38">newhandle<pos:position pos:line="332" pos:column="47"/></name></expr></argument>)<pos:position pos:line="332" pos:column="48"/></argument_list></call>
<cpp:endif pos:line="333" pos:column="1">#<cpp:directive pos:line="333" pos:column="2">endif<pos:position pos:line="333" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="334" pos:column="1">#<cpp:directive pos:line="334" pos:column="2">ifdef<pos:position pos:line="334" pos:column="7"/></cpp:directive> <name pos:line="334" pos:column="8">LTDL_SYSSEARCHPATH<pos:position pos:line="334" pos:column="26"/></name></cpp:ifdef>
		   <operator pos:line="335" pos:column="20">&amp;&amp;<pos:position pos:line="335" pos:column="30"/></operator> <operator pos:line="335" pos:column="23">!<pos:position pos:line="335" pos:column="24"/></operator><call><name pos:line="335" pos:column="24">find_handle<pos:position pos:line="335" pos:column="35"/></name> <argument_list pos:line="335" pos:column="36">(<argument><expr><name pos:line="335" pos:column="37">sys_search_path<pos:position pos:line="335" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="335" pos:column="54">base_name<pos:position pos:line="335" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="335" pos:column="65">&amp;<pos:position pos:line="335" pos:column="70"/></operator><name pos:line="335" pos:column="66">newhandle<pos:position pos:line="335" pos:column="75"/></name></expr></argument>)<pos:position pos:line="335" pos:column="76"/></argument_list></call>
<cpp:endif pos:line="336" pos:column="1">#<cpp:directive pos:line="336" pos:column="2">endif<pos:position pos:line="336" pos:column="7"/></cpp:directive></cpp:endif>
		   <operator pos:line="337" pos:column="20">)<pos:position pos:line="337" pos:column="21"/></operator><operator pos:line="337" pos:column="21">)<pos:position pos:line="337" pos:column="22"/></operator></expr>)<pos:position pos:line="337" pos:column="23"/></condition><then pos:line="337" pos:column="23">
	<block pos:line="338" pos:column="9">{
          <if pos:line="339" pos:column="11">if <condition pos:line="339" pos:column="14">(<expr><call><name pos:line="339" pos:column="15">tryall_dlopen<pos:position pos:line="339" pos:column="28"/></name> <argument_list pos:line="339" pos:column="29">(<argument><expr><operator pos:line="339" pos:column="30">&amp;<pos:position pos:line="339" pos:column="35"/></operator><name pos:line="339" pos:column="31">newhandle<pos:position pos:line="339" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="339" pos:column="42">filename<pos:position pos:line="339" pos:column="50"/></name></expr></argument>)<pos:position pos:line="339" pos:column="51"/></argument_list></call> <operator pos:line="339" pos:column="52">!=<pos:position pos:line="339" pos:column="54"/></operator> <literal type="number" pos:line="339" pos:column="55">0<pos:position pos:line="339" pos:column="56"/></literal></expr>)<pos:position pos:line="339" pos:column="57"/></condition><then pos:line="339" pos:column="57">
            <block pos:line="340" pos:column="13">{
              <expr_stmt><expr><name pos:line="341" pos:column="15">newhandle<pos:position pos:line="341" pos:column="24"/></name> <operator pos:line="341" pos:column="25">=<pos:position pos:line="341" pos:column="26"/></operator> <name pos:line="341" pos:column="27">NULL<pos:position pos:line="341" pos:column="31"/></name></expr>;<pos:position pos:line="341" pos:column="32"/></expr_stmt>
            }<pos:position pos:line="342" pos:column="14"/></block></then></if>
	}<pos:position pos:line="343" pos:column="10"/></block></then></if>

      <if pos:line="345" pos:column="7">if <condition pos:line="345" pos:column="10">(<expr><operator pos:line="345" pos:column="11">!<pos:position pos:line="345" pos:column="12"/></operator><name pos:line="345" pos:column="12">newhandle<pos:position pos:line="345" pos:column="21"/></name></expr>)<pos:position pos:line="345" pos:column="22"/></condition><then pos:line="345" pos:column="22">
	<block pos:line="346" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="347" pos:column="11">LT_DLFREE<pos:position pos:line="347" pos:column="20"/></name> <argument_list pos:line="347" pos:column="21">(<argument><expr><operator pos:line="347" pos:column="22">*<pos:position pos:line="347" pos:column="23"/></operator><name pos:line="347" pos:column="23">phandle<pos:position pos:line="347" pos:column="30"/></name></expr></argument>)<pos:position pos:line="347" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="347" pos:column="32"/></expr_stmt>
	  <expr_stmt><expr><operator pos:line="348" pos:column="11">++<pos:position pos:line="348" pos:column="13"/></operator><name pos:line="348" pos:column="13">errors<pos:position pos:line="348" pos:column="19"/></name></expr>;<pos:position pos:line="348" pos:column="20"/></expr_stmt>
	  <goto pos:line="349" pos:column="11">goto <name pos:line="349" pos:column="16">cleanup<pos:position pos:line="349" pos:column="23"/></name>;<pos:position pos:line="349" pos:column="24"/></goto>
	}<pos:position pos:line="350" pos:column="10"/></block></then></if>
    }<pos:position pos:line="351" pos:column="6"/></block></else></if>

 <label><name pos:line="353" pos:column="2">register_handle<pos:position pos:line="353" pos:column="17"/></name>:<pos:position pos:line="353" pos:column="18"/></label>
  <expr_stmt><expr><call><name pos:line="354" pos:column="3">LT_DLMEM_REASSIGN<pos:position pos:line="354" pos:column="20"/></name> <argument_list pos:line="354" pos:column="21">(<argument><expr><operator pos:line="354" pos:column="22">*<pos:position pos:line="354" pos:column="23"/></operator><name pos:line="354" pos:column="23">phandle<pos:position pos:line="354" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="354" pos:column="32">newhandle<pos:position pos:line="354" pos:column="41"/></name></expr></argument>)<pos:position pos:line="354" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="354" pos:column="43"/></expr_stmt>

  <if pos:line="356" pos:column="3">if <condition pos:line="356" pos:column="6">(<expr><name><operator pos:line="356" pos:column="7">(<pos:position pos:line="356" pos:column="8"/></operator><operator pos:line="356" pos:column="8">*<pos:position pos:line="356" pos:column="9"/></operator><name pos:line="356" pos:column="9">phandle<pos:position pos:line="356" pos:column="16"/></name><operator pos:line="356" pos:column="16">)<pos:position pos:line="356" pos:column="17"/></operator><operator pos:line="356" pos:column="17">-&gt;<pos:position pos:line="356" pos:column="22"/></operator><name><name pos:line="356" pos:column="19">info<pos:position pos:line="356" pos:column="23"/></name><operator pos:line="356" pos:column="23">.<pos:position pos:line="356" pos:column="24"/></operator><name pos:line="356" pos:column="24">ref_count<pos:position pos:line="356" pos:column="33"/></name></name></name> <operator pos:line="356" pos:column="34">==<pos:position pos:line="356" pos:column="36"/></operator> <literal type="number" pos:line="356" pos:column="37">0<pos:position pos:line="356" pos:column="38"/></literal></expr>)<pos:position pos:line="356" pos:column="39"/></condition><then pos:line="356" pos:column="39">
    <block pos:line="357" pos:column="5">{
      <expr_stmt><expr><name><operator pos:line="358" pos:column="7">(<pos:position pos:line="358" pos:column="8"/></operator><operator pos:line="358" pos:column="8">*<pos:position pos:line="358" pos:column="9"/></operator><name pos:line="358" pos:column="9">phandle<pos:position pos:line="358" pos:column="16"/></name><operator pos:line="358" pos:column="16">)<pos:position pos:line="358" pos:column="17"/></operator><operator pos:line="358" pos:column="17">-&gt;<pos:position pos:line="358" pos:column="22"/></operator><name><name pos:line="358" pos:column="19">info<pos:position pos:line="358" pos:column="23"/></name><operator pos:line="358" pos:column="23">.<pos:position pos:line="358" pos:column="24"/></operator><name pos:line="358" pos:column="24">ref_count<pos:position pos:line="358" pos:column="33"/></name></name></name>	<operator pos:line="358" pos:column="41">=<pos:position pos:line="358" pos:column="42"/></operator> <literal type="number" pos:line="358" pos:column="43">1<pos:position pos:line="358" pos:column="44"/></literal></expr>;<pos:position pos:line="358" pos:column="45"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="359" pos:column="7">LT_DLMEM_REASSIGN<pos:position pos:line="359" pos:column="24"/></name> <argument_list pos:line="359" pos:column="25">(<argument><expr><name><operator pos:line="359" pos:column="26">(<pos:position pos:line="359" pos:column="27"/></operator><operator pos:line="359" pos:column="27">*<pos:position pos:line="359" pos:column="28"/></operator><name pos:line="359" pos:column="28">phandle<pos:position pos:line="359" pos:column="35"/></name><operator pos:line="359" pos:column="35">)<pos:position pos:line="359" pos:column="36"/></operator><operator pos:line="359" pos:column="36">-&gt;<pos:position pos:line="359" pos:column="41"/></operator><name><name pos:line="359" pos:column="38">info<pos:position pos:line="359" pos:column="42"/></name><operator pos:line="359" pos:column="42">.<pos:position pos:line="359" pos:column="43"/></operator><name pos:line="359" pos:column="43">name<pos:position pos:line="359" pos:column="47"/></name></name></name></expr></argument>, <argument><expr><name pos:line="359" pos:column="49">name<pos:position pos:line="359" pos:column="53"/></name></expr></argument>)<pos:position pos:line="359" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="359" pos:column="55"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="361" pos:column="7">LT_DLMUTEX_LOCK<pos:position pos:line="361" pos:column="22"/></name> <argument_list pos:line="361" pos:column="23">()<pos:position pos:line="361" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="361" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><name><operator pos:line="362" pos:column="7">(<pos:position pos:line="362" pos:column="8"/></operator><operator pos:line="362" pos:column="8">*<pos:position pos:line="362" pos:column="9"/></operator><name pos:line="362" pos:column="9">phandle<pos:position pos:line="362" pos:column="16"/></name><operator pos:line="362" pos:column="16">)<pos:position pos:line="362" pos:column="17"/></operator><operator pos:line="362" pos:column="17">-&gt;<pos:position pos:line="362" pos:column="22"/></operator><name pos:line="362" pos:column="19">next<pos:position pos:line="362" pos:column="23"/></name></name>		<operator pos:line="362" pos:column="33">=<pos:position pos:line="362" pos:column="34"/></operator> <name pos:line="362" pos:column="35">handles<pos:position pos:line="362" pos:column="42"/></name></expr>;<pos:position pos:line="362" pos:column="43"/></expr_stmt>
      <expr_stmt><expr><name pos:line="363" pos:column="7">handles<pos:position pos:line="363" pos:column="14"/></name>			<operator pos:line="363" pos:column="33">=<pos:position pos:line="363" pos:column="34"/></operator> <operator pos:line="363" pos:column="35">*<pos:position pos:line="363" pos:column="36"/></operator><name pos:line="363" pos:column="36">phandle<pos:position pos:line="363" pos:column="43"/></name></expr>;<pos:position pos:line="363" pos:column="44"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="364" pos:column="7">LT_DLMUTEX_UNLOCK<pos:position pos:line="364" pos:column="24"/></name> <argument_list pos:line="364" pos:column="25">()<pos:position pos:line="364" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="364" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="365" pos:column="6"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="367" pos:column="3">LT_DLMUTEX_SETERROR<pos:position pos:line="367" pos:column="22"/></name> <argument_list pos:line="367" pos:column="23">(<argument><expr><name pos:line="367" pos:column="24">saved_error<pos:position pos:line="367" pos:column="35"/></name></expr></argument>)<pos:position pos:line="367" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="367" pos:column="37"/></expr_stmt>

 <label><name pos:line="369" pos:column="2">cleanup<pos:position pos:line="369" pos:column="9"/></name>:<pos:position pos:line="369" pos:column="10"/></label>
  <expr_stmt><expr><call><name pos:line="370" pos:column="3">LT_DLFREE<pos:position pos:line="370" pos:column="12"/></name> <argument_list pos:line="370" pos:column="13">(<argument><expr><name pos:line="370" pos:column="14">dir<pos:position pos:line="370" pos:column="17"/></name></expr></argument>)<pos:position pos:line="370" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="370" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="371" pos:column="3">LT_DLFREE<pos:position pos:line="371" pos:column="12"/></name> <argument_list pos:line="371" pos:column="13">(<argument><expr><name pos:line="371" pos:column="14">name<pos:position pos:line="371" pos:column="18"/></name></expr></argument>)<pos:position pos:line="371" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="371" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="372" pos:column="3">LT_DLFREE<pos:position pos:line="372" pos:column="12"/></name> <argument_list pos:line="372" pos:column="13">(<argument><expr><name pos:line="372" pos:column="14">canonical<pos:position pos:line="372" pos:column="23"/></name></expr></argument>)<pos:position pos:line="372" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="372" pos:column="25"/></expr_stmt>

  <return pos:line="374" pos:column="3">return <expr><name pos:line="374" pos:column="10">errors<pos:position pos:line="374" pos:column="16"/></name></expr>;<pos:position pos:line="374" pos:column="17"/></return>
}<pos:position pos:line="375" pos:column="2"/></block></unit>

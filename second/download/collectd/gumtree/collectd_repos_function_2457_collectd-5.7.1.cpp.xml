<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2457_collectd-5.7.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">c_complain<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">int<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">level<pos:position pos:line="1" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="28">c_complain_t<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">c<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">format<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><modifier pos:line="1" pos:column="65">...<pos:position pos:line="1" pos:column="68"/></modifier></type></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list> <block pos:line="1" pos:column="70">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">va_list<pos:position pos:line="2" pos:column="10"/></name></type> <name pos:line="2" pos:column="11">ap<pos:position pos:line="2" pos:column="13"/></name></decl>;<pos:position pos:line="2" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="4" pos:column="3">va_start<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">ap<pos:position pos:line="4" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="16">format<pos:position pos:line="4" pos:column="22"/></name></expr></argument>)<pos:position pos:line="4" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="24"/></expr_stmt>
  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><call><name pos:line="5" pos:column="7">vcomplain<pos:position pos:line="5" pos:column="16"/></name><argument_list pos:line="5" pos:column="16">(<argument><expr><name pos:line="5" pos:column="17">level<pos:position pos:line="5" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="24">c<pos:position pos:line="5" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="27">format<pos:position pos:line="5" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="35">ap<pos:position pos:line="5" pos:column="37"/></name></expr></argument>)<pos:position pos:line="5" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="39"/></condition><then pos:line="5" pos:column="39">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="6" pos:column="5">c<pos:position pos:line="6" pos:column="6"/></name><operator pos:line="6" pos:column="6">-&gt;<pos:position pos:line="6" pos:column="11"/></operator><name pos:line="6" pos:column="8">complained_once<pos:position pos:line="6" pos:column="23"/></name></name> <operator pos:line="6" pos:column="24">=<pos:position pos:line="6" pos:column="25"/></operator> <literal type="number" pos:line="6" pos:column="26">1<pos:position pos:line="6" pos:column="27"/></literal></expr>;<pos:position pos:line="6" pos:column="28"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">va_end<pos:position pos:line="7" pos:column="9"/></name><argument_list pos:line="7" pos:column="9">(<argument><expr><name pos:line="7" pos:column="10">ap<pos:position pos:line="7" pos:column="12"/></name></expr></argument>)<pos:position pos:line="7" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="14"/></expr_stmt>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

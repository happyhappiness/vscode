<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1077_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse_memory_info<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">FILE<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">p_file<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">mcelog_memory_rec_t<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">memory_record<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list> <block pos:line="1" pos:column="80">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">char<pos:position pos:line="2" pos:column="7"/></name></type> <name><name pos:line="2" pos:column="8">buf<pos:position pos:line="2" pos:column="11"/></name><index pos:line="2" pos:column="11">[<expr><name pos:line="2" pos:column="12">DATA_MAX_NAME_LEN<pos:position pos:line="2" pos:column="29"/></name></expr>]<pos:position pos:line="2" pos:column="30"/></index></name> <init pos:line="2" pos:column="31">= <expr><block pos:line="2" pos:column="33">{<expr><literal type="number" pos:line="2" pos:column="34">0<pos:position pos:line="2" pos:column="35"/></literal></expr>}<pos:position pos:line="2" pos:column="36"/></block></expr></init></decl>;<pos:position pos:line="2" pos:column="37"/></decl_stmt>
  <while pos:line="3" pos:column="3">while <condition pos:line="3" pos:column="9">(<expr><call><name pos:line="3" pos:column="10">fgets<pos:position pos:line="3" pos:column="15"/></name><argument_list pos:line="3" pos:column="15">(<argument><expr><name pos:line="3" pos:column="16">buf<pos:position pos:line="3" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="3" pos:column="21">sizeof<argument_list pos:line="3" pos:column="27">(<argument><expr><name pos:line="3" pos:column="28">buf<pos:position pos:line="3" pos:column="31"/></name></expr></argument>)<pos:position pos:line="3" pos:column="32"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="3" pos:column="34">p_file<pos:position pos:line="3" pos:column="40"/></name></expr></argument>)<pos:position pos:line="3" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="42"/></condition> <block pos:line="3" pos:column="43">{
    <comment type="block" pos:line="4" pos:column="5">/* Got empty line or "done" */</comment>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">(<pos:position pos:line="5" pos:column="10"/></operator><operator pos:line="5" pos:column="10">!<pos:position pos:line="5" pos:column="11"/></operator><call><name pos:line="5" pos:column="11">strncmp<pos:position pos:line="5" pos:column="18"/></name><argument_list pos:line="5" pos:column="18">(<argument><expr><literal type="string" pos:line="5" pos:column="19">"\n"<pos:position pos:line="5" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="25">buf<pos:position pos:line="5" pos:column="28"/></name></expr></argument>, <argument><expr><call><name pos:line="5" pos:column="30">strlen<pos:position pos:line="5" pos:column="36"/></name><argument_list pos:line="5" pos:column="36">(<argument><expr><name pos:line="5" pos:column="37">buf<pos:position pos:line="5" pos:column="40"/></name></expr></argument>)<pos:position pos:line="5" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="42"/></argument_list></call><operator pos:line="5" pos:column="42">)<pos:position pos:line="5" pos:column="43"/></operator> <operator pos:line="5" pos:column="44">||<pos:position pos:line="5" pos:column="46"/></operator>
        <operator pos:line="6" pos:column="9">(<pos:position pos:line="6" pos:column="10"/></operator><operator pos:line="6" pos:column="10">!<pos:position pos:line="6" pos:column="11"/></operator><call><name pos:line="6" pos:column="11">strncmp<pos:position pos:line="6" pos:column="18"/></name><argument_list pos:line="6" pos:column="18">(<argument><expr><name pos:line="6" pos:column="19">buf<pos:position pos:line="6" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="24">"done\n"<pos:position pos:line="6" pos:column="32"/></literal></expr></argument>, <argument><expr><call><name pos:line="6" pos:column="34">strlen<pos:position pos:line="6" pos:column="40"/></name><argument_list pos:line="6" pos:column="40">(<argument><expr><name pos:line="6" pos:column="41">buf<pos:position pos:line="6" pos:column="44"/></name></expr></argument>)<pos:position pos:line="6" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="46"/></argument_list></call><operator pos:line="6" pos:column="46">)<pos:position pos:line="6" pos:column="47"/></operator></expr>)<pos:position pos:line="6" pos:column="48"/></condition><then pos:line="6" pos:column="48">
      <block type="pseudo"><return pos:line="7" pos:column="7">return <expr><literal type="number" pos:line="7" pos:column="14">1<pos:position pos:line="7" pos:column="15"/></literal></expr>;<pos:position pos:line="7" pos:column="16"/></return></block></then></if>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><call><name pos:line="8" pos:column="9">strlen<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><name pos:line="8" pos:column="16">buf<pos:position pos:line="8" pos:column="19"/></name></expr></argument>)<pos:position pos:line="8" pos:column="20"/></argument_list></call> <operator pos:line="8" pos:column="21">&lt;<pos:position pos:line="8" pos:column="25"/></operator> <literal type="number" pos:line="8" pos:column="23">5<pos:position pos:line="8" pos:column="24"/></literal></expr>)<pos:position pos:line="8" pos:column="25"/></condition><then pos:line="8" pos:column="25">
      <block type="pseudo"><continue pos:line="9" pos:column="7">continue;<pos:position pos:line="9" pos:column="16"/></continue></block></then></if>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">!<pos:position pos:line="10" pos:column="10"/></operator><call><name pos:line="10" pos:column="10">strncmp<pos:position pos:line="10" pos:column="17"/></name><argument_list pos:line="10" pos:column="17">(<argument><expr><name pos:line="10" pos:column="18">buf<pos:position pos:line="10" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="23">MCELOG_SOCKET_STR<pos:position pos:line="10" pos:column="40"/></name></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="42">strlen<pos:position pos:line="10" pos:column="48"/></name><argument_list pos:line="10" pos:column="48">(<argument><expr><name pos:line="10" pos:column="49">MCELOG_SOCKET_STR<pos:position pos:line="10" pos:column="66"/></name></expr></argument>)<pos:position pos:line="10" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="69"/></condition><then pos:line="10" pos:column="69"> <block pos:line="10" pos:column="70">{
      <expr_stmt><expr><call><name pos:line="11" pos:column="7">sstrncpy<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><name><name pos:line="11" pos:column="16">memory_record<pos:position pos:line="11" pos:column="29"/></name><operator pos:line="11" pos:column="29">-&gt;<pos:position pos:line="11" pos:column="34"/></operator><name pos:line="11" pos:column="31">location<pos:position pos:line="11" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="41">buf<pos:position pos:line="11" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="46">strlen<pos:position pos:line="11" pos:column="52"/></name><argument_list pos:line="11" pos:column="52">(<argument><expr><name pos:line="11" pos:column="53">buf<pos:position pos:line="11" pos:column="56"/></name></expr></argument>)<pos:position pos:line="11" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="59"/></expr_stmt>
      <comment type="block" pos:line="12" pos:column="7">/* replace spaces with '_' */</comment>
      <for pos:line="13" pos:column="7">for <control pos:line="13" pos:column="11">(<init><decl><type><name pos:line="13" pos:column="12">size_t<pos:position pos:line="13" pos:column="18"/></name></type> <name pos:line="13" pos:column="19">i<pos:position pos:line="13" pos:column="20"/></name> <init pos:line="13" pos:column="21">= <expr><literal type="number" pos:line="13" pos:column="23">0<pos:position pos:line="13" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="25"/></init> <condition><expr><name pos:line="13" pos:column="26">i<pos:position pos:line="13" pos:column="27"/></name> <operator pos:line="13" pos:column="28">&lt;<pos:position pos:line="13" pos:column="32"/></operator> <call><name pos:line="13" pos:column="30">strlen<pos:position pos:line="13" pos:column="36"/></name><argument_list pos:line="13" pos:column="36">(<argument><expr><name><name pos:line="13" pos:column="37">memory_record<pos:position pos:line="13" pos:column="50"/></name><operator pos:line="13" pos:column="50">-&gt;<pos:position pos:line="13" pos:column="55"/></operator><name pos:line="13" pos:column="52">location<pos:position pos:line="13" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="62"/></condition> <incr><expr><name pos:line="13" pos:column="63">i<pos:position pos:line="13" pos:column="64"/></name><operator pos:line="13" pos:column="64">++<pos:position pos:line="13" pos:column="66"/></operator></expr></incr>)<pos:position pos:line="13" pos:column="67"/></control>
        <block type="pseudo"><if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name><name pos:line="14" pos:column="13">memory_record<pos:position pos:line="14" pos:column="26"/></name><operator pos:line="14" pos:column="26">-&gt;<pos:position pos:line="14" pos:column="31"/></operator><name pos:line="14" pos:column="28">location<pos:position pos:line="14" pos:column="36"/></name><index pos:line="14" pos:column="36">[<expr><name pos:line="14" pos:column="37">i<pos:position pos:line="14" pos:column="38"/></name></expr>]<pos:position pos:line="14" pos:column="39"/></index></name> <operator pos:line="14" pos:column="40">==<pos:position pos:line="14" pos:column="42"/></operator> <literal type="char" pos:line="14" pos:column="43">' '<pos:position pos:line="14" pos:column="46"/></literal></expr>)<pos:position pos:line="14" pos:column="47"/></condition><then pos:line="14" pos:column="47">
          <block type="pseudo"><expr_stmt><expr><name><name pos:line="15" pos:column="11">memory_record<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">-&gt;<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="26">location<pos:position pos:line="15" pos:column="34"/></name><index pos:line="15" pos:column="34">[<expr><name pos:line="15" pos:column="35">i<pos:position pos:line="15" pos:column="36"/></name></expr>]<pos:position pos:line="15" pos:column="37"/></index></name> <operator pos:line="15" pos:column="38">=<pos:position pos:line="15" pos:column="39"/></operator> <literal type="char" pos:line="15" pos:column="40">'_'<pos:position pos:line="15" pos:column="43"/></literal></expr>;<pos:position pos:line="15" pos:column="44"/></expr_stmt></block></then></if></block></for>
      <expr_stmt><expr><call><name pos:line="16" pos:column="7">DEBUG<pos:position pos:line="16" pos:column="12"/></name><argument_list pos:line="16" pos:column="12">(<argument><expr><name pos:line="16" pos:column="13">MCELOG_PLUGIN<pos:position pos:line="16" pos:column="26"/></name> <literal type="string" pos:line="16" pos:column="27">": Got SOCKET INFO %s"<pos:position pos:line="16" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="51">memory_record<pos:position pos:line="16" pos:column="64"/></name><operator pos:line="16" pos:column="64">-&gt;<pos:position pos:line="16" pos:column="69"/></operator><name pos:line="16" pos:column="66">location<pos:position pos:line="16" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="76"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">!<pos:position pos:line="18" pos:column="10"/></operator><call><name pos:line="18" pos:column="10">strncmp<pos:position pos:line="18" pos:column="17"/></name><argument_list pos:line="18" pos:column="17">(<argument><expr><name pos:line="18" pos:column="18">buf<pos:position pos:line="18" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="23">MCELOG_DIMM_NAME<pos:position pos:line="18" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="41">strlen<pos:position pos:line="18" pos:column="47"/></name><argument_list pos:line="18" pos:column="47">(<argument><expr><name pos:line="18" pos:column="48">MCELOG_DIMM_NAME<pos:position pos:line="18" pos:column="64"/></name></expr></argument>)<pos:position pos:line="18" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="67"/></condition><then pos:line="18" pos:column="67"> <block pos:line="18" pos:column="68">{
      <decl_stmt><decl><type><name pos:line="19" pos:column="7">char<pos:position pos:line="19" pos:column="11"/></name> <modifier pos:line="19" pos:column="12">*<pos:position pos:line="19" pos:column="13"/></modifier></type><name pos:line="19" pos:column="13">name<pos:position pos:line="19" pos:column="17"/></name> <init pos:line="19" pos:column="18">= <expr><name pos:line="19" pos:column="20">NULL<pos:position pos:line="19" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="25"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="20" pos:column="7">char<pos:position pos:line="20" pos:column="11"/></name> <modifier pos:line="20" pos:column="12">*<pos:position pos:line="20" pos:column="13"/></modifier></type><name pos:line="20" pos:column="13">saveptr<pos:position pos:line="20" pos:column="20"/></name> <init pos:line="20" pos:column="21">= <expr><name pos:line="20" pos:column="23">NULL<pos:position pos:line="20" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="20" pos:column="28"/></decl_stmt>
      <expr_stmt><expr><name pos:line="21" pos:column="7">name<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <call><name pos:line="21" pos:column="14">strtok_r<pos:position pos:line="21" pos:column="22"/></name><argument_list pos:line="21" pos:column="22">(<argument><expr><name pos:line="21" pos:column="23">buf<pos:position pos:line="21" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="28">"\""<pos:position pos:line="21" pos:column="32"/></literal></expr></argument>, <argument><expr><operator pos:line="21" pos:column="34">&amp;<pos:position pos:line="21" pos:column="39"/></operator><name pos:line="21" pos:column="35">saveptr<pos:position pos:line="21" pos:column="42"/></name></expr></argument>)<pos:position pos:line="21" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="44"/></expr_stmt>
      <if pos:line="22" pos:column="7">if <condition pos:line="22" pos:column="10">(<expr><name pos:line="22" pos:column="11">name<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">!=<pos:position pos:line="22" pos:column="18"/></operator> <name pos:line="22" pos:column="19">NULL<pos:position pos:line="22" pos:column="23"/></name> <operator pos:line="22" pos:column="24">&amp;&amp;<pos:position pos:line="22" pos:column="34"/></operator> <name pos:line="22" pos:column="27">saveptr<pos:position pos:line="22" pos:column="34"/></name> <operator pos:line="22" pos:column="35">!=<pos:position pos:line="22" pos:column="37"/></operator> <name pos:line="22" pos:column="38">NULL<pos:position pos:line="22" pos:column="42"/></name></expr>)<pos:position pos:line="22" pos:column="43"/></condition><then pos:line="22" pos:column="43"> <block pos:line="22" pos:column="44">{
        <expr_stmt><expr><name pos:line="23" pos:column="9">name<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">=<pos:position pos:line="23" pos:column="15"/></operator> <call><name pos:line="23" pos:column="16">strtok_r<pos:position pos:line="23" pos:column="24"/></name><argument_list pos:line="23" pos:column="24">(<argument><expr><name pos:line="23" pos:column="25">NULL<pos:position pos:line="23" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="31">"\""<pos:position pos:line="23" pos:column="35"/></literal></expr></argument>, <argument><expr><operator pos:line="23" pos:column="37">&amp;<pos:position pos:line="23" pos:column="42"/></operator><name pos:line="23" pos:column="38">saveptr<pos:position pos:line="23" pos:column="45"/></name></expr></argument>)<pos:position pos:line="23" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="47"/></expr_stmt>
        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">name<pos:position pos:line="24" pos:column="17"/></name> <operator pos:line="24" pos:column="18">!=<pos:position pos:line="24" pos:column="20"/></operator> <name pos:line="24" pos:column="21">NULL<pos:position pos:line="24" pos:column="25"/></name></expr>)<pos:position pos:line="24" pos:column="26"/></condition><then pos:line="24" pos:column="26"> <block pos:line="24" pos:column="27">{
          <expr_stmt><expr><call><name pos:line="25" pos:column="11">sstrncpy<pos:position pos:line="25" pos:column="19"/></name><argument_list pos:line="25" pos:column="19">(<argument><expr><name><name pos:line="25" pos:column="20">memory_record<pos:position pos:line="25" pos:column="33"/></name><operator pos:line="25" pos:column="33">-&gt;<pos:position pos:line="25" pos:column="38"/></operator><name pos:line="25" pos:column="35">dimm_name<pos:position pos:line="25" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="46">name<pos:position pos:line="25" pos:column="50"/></name></expr></argument>,
                   <argument><expr><sizeof pos:line="26" pos:column="20">sizeof<argument_list pos:line="26" pos:column="26">(<argument><expr><name><name pos:line="26" pos:column="27">memory_record<pos:position pos:line="26" pos:column="40"/></name><operator pos:line="26" pos:column="40">-&gt;<pos:position pos:line="26" pos:column="45"/></operator><name pos:line="26" pos:column="42">dimm_name<pos:position pos:line="26" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="54"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="27" pos:column="11">DEBUG<pos:position pos:line="27" pos:column="16"/></name><argument_list pos:line="27" pos:column="16">(<argument><expr><name pos:line="27" pos:column="17">MCELOG_PLUGIN<pos:position pos:line="27" pos:column="30"/></name> <literal type="string" pos:line="27" pos:column="31">": Got DIMM NAME %s"<pos:position pos:line="27" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="53">memory_record<pos:position pos:line="27" pos:column="66"/></name><operator pos:line="27" pos:column="66">-&gt;<pos:position pos:line="27" pos:column="71"/></operator><name pos:line="27" pos:column="68">dimm_name<pos:position pos:line="27" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="79"/></expr_stmt>
        }<pos:position pos:line="28" pos:column="10"/></block></then></if>
      }<pos:position pos:line="29" pos:column="8"/></block></then></if>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><operator pos:line="31" pos:column="9">!<pos:position pos:line="31" pos:column="10"/></operator><call><name pos:line="31" pos:column="10">strncmp<pos:position pos:line="31" pos:column="17"/></name><argument_list pos:line="31" pos:column="17">(<argument><expr><name pos:line="31" pos:column="18">buf<pos:position pos:line="31" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="23">MCELOG_CORRECTED_ERR<pos:position pos:line="31" pos:column="43"/></name></expr></argument>, <argument><expr><call><name pos:line="31" pos:column="45">strlen<pos:position pos:line="31" pos:column="51"/></name><argument_list pos:line="31" pos:column="51">(<argument><expr><name pos:line="31" pos:column="52">MCELOG_CORRECTED_ERR<pos:position pos:line="31" pos:column="72"/></name></expr></argument>)<pos:position pos:line="31" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="75"/></condition><then pos:line="31" pos:column="75"> <block pos:line="31" pos:column="76">{
      <comment type="block" pos:line="32" pos:column="7">/* Get next line*/</comment>
      <if pos:line="33" pos:column="7">if <condition pos:line="33" pos:column="10">(<expr><call><name pos:line="33" pos:column="11">fgets<pos:position pos:line="33" pos:column="16"/></name><argument_list pos:line="33" pos:column="16">(<argument><expr><name pos:line="33" pos:column="17">buf<pos:position pos:line="33" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="22">sizeof<argument_list pos:line="33" pos:column="28">(<argument><expr><name pos:line="33" pos:column="29">buf<pos:position pos:line="33" pos:column="32"/></name></expr></argument>)<pos:position pos:line="33" pos:column="33"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="33" pos:column="35">p_file<pos:position pos:line="33" pos:column="41"/></name></expr></argument>)<pos:position pos:line="33" pos:column="42"/></argument_list></call> <operator pos:line="33" pos:column="43">!=<pos:position pos:line="33" pos:column="45"/></operator> <name pos:line="33" pos:column="46">NULL<pos:position pos:line="33" pos:column="50"/></name></expr>)<pos:position pos:line="33" pos:column="51"/></condition><then pos:line="33" pos:column="51"> <block pos:line="33" pos:column="52">{
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">sscanf<pos:position pos:line="34" pos:column="15"/></name><argument_list pos:line="34" pos:column="15">(<argument><expr><name pos:line="34" pos:column="16">buf<pos:position pos:line="34" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="21">"\t%d total"<pos:position pos:line="34" pos:column="33"/></literal></expr></argument>, <argument><expr><operator pos:line="34" pos:column="35">&amp;<pos:position pos:line="34" pos:column="40"/></operator><operator pos:line="34" pos:column="36">(<pos:position pos:line="34" pos:column="37"/></operator><name><name pos:line="34" pos:column="37">memory_record<pos:position pos:line="34" pos:column="50"/></name><operator pos:line="34" pos:column="50">-&gt;<pos:position pos:line="34" pos:column="55"/></operator><name pos:line="34" pos:column="52">corrected_err_total<pos:position pos:line="34" pos:column="71"/></name></name><operator pos:line="34" pos:column="71">)<pos:position pos:line="34" pos:column="72"/></operator></expr></argument>)<pos:position pos:line="34" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="74"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">DEBUG<pos:position pos:line="35" pos:column="14"/></name><argument_list pos:line="35" pos:column="14">(<argument><expr><name pos:line="35" pos:column="15">MCELOG_PLUGIN<pos:position pos:line="35" pos:column="28"/></name> <literal type="string" pos:line="35" pos:column="29">": Got corrected error total %d"<pos:position pos:line="35" pos:column="61"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="36" pos:column="15">memory_record<pos:position pos:line="36" pos:column="28"/></name><operator pos:line="36" pos:column="28">-&gt;<pos:position pos:line="36" pos:column="33"/></operator><name pos:line="36" pos:column="30">corrected_err_total<pos:position pos:line="36" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="51"/></expr_stmt>
      }<pos:position pos:line="37" pos:column="8"/></block></then></if>
      <if pos:line="38" pos:column="7">if <condition pos:line="38" pos:column="10">(<expr><call><name pos:line="38" pos:column="11">fgets<pos:position pos:line="38" pos:column="16"/></name><argument_list pos:line="38" pos:column="16">(<argument><expr><name pos:line="38" pos:column="17">buf<pos:position pos:line="38" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="22">sizeof<argument_list pos:line="38" pos:column="28">(<argument><expr><name pos:line="38" pos:column="29">buf<pos:position pos:line="38" pos:column="32"/></name></expr></argument>)<pos:position pos:line="38" pos:column="33"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="38" pos:column="35">p_file<pos:position pos:line="38" pos:column="41"/></name></expr></argument>)<pos:position pos:line="38" pos:column="42"/></argument_list></call> <operator pos:line="38" pos:column="43">!=<pos:position pos:line="38" pos:column="45"/></operator> <name pos:line="38" pos:column="46">NULL<pos:position pos:line="38" pos:column="50"/></name></expr>)<pos:position pos:line="38" pos:column="51"/></condition><then pos:line="38" pos:column="51"> <block pos:line="38" pos:column="52">{
        <expr_stmt><expr><call><name pos:line="39" pos:column="9">sscanf<pos:position pos:line="39" pos:column="15"/></name><argument_list pos:line="39" pos:column="15">(<argument><expr><name pos:line="39" pos:column="16">buf<pos:position pos:line="39" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="21">"\t%d in %s"<pos:position pos:line="39" pos:column="33"/></literal></expr></argument>, <argument><expr><operator pos:line="39" pos:column="35">&amp;<pos:position pos:line="39" pos:column="40"/></operator><operator pos:line="39" pos:column="36">(<pos:position pos:line="39" pos:column="37"/></operator><name><name pos:line="39" pos:column="37">memory_record<pos:position pos:line="39" pos:column="50"/></name><operator pos:line="39" pos:column="50">-&gt;<pos:position pos:line="39" pos:column="55"/></operator><name pos:line="39" pos:column="52">corrected_err_timed<pos:position pos:line="39" pos:column="71"/></name></name><operator pos:line="39" pos:column="71">)<pos:position pos:line="39" pos:column="72"/></operator></expr></argument>,
               <argument><expr><name><name pos:line="40" pos:column="16">memory_record<pos:position pos:line="40" pos:column="29"/></name><operator pos:line="40" pos:column="29">-&gt;<pos:position pos:line="40" pos:column="34"/></operator><name pos:line="40" pos:column="31">corrected_err_timed_period<pos:position pos:line="40" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="59"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">DEBUG<pos:position pos:line="41" pos:column="14"/></name><argument_list pos:line="41" pos:column="14">(<argument><expr><name pos:line="41" pos:column="15">MCELOG_PLUGIN<pos:position pos:line="41" pos:column="28"/></name> <literal type="string" pos:line="41" pos:column="29">": Got timed corrected errors %d in %s"<pos:position pos:line="41" pos:column="68"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="42" pos:column="15">memory_record<pos:position pos:line="42" pos:column="28"/></name><operator pos:line="42" pos:column="28">-&gt;<pos:position pos:line="42" pos:column="33"/></operator><name pos:line="42" pos:column="30">corrected_err_total<pos:position pos:line="42" pos:column="49"/></name></name></expr></argument>,
              <argument><expr><name><name pos:line="43" pos:column="15">memory_record<pos:position pos:line="43" pos:column="28"/></name><operator pos:line="43" pos:column="28">-&gt;<pos:position pos:line="43" pos:column="33"/></operator><name pos:line="43" pos:column="30">corrected_err_timed_period<pos:position pos:line="43" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="58"/></expr_stmt>
      }<pos:position pos:line="44" pos:column="8"/></block></then></if>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><operator pos:line="46" pos:column="9">!<pos:position pos:line="46" pos:column="10"/></operator><call><name pos:line="46" pos:column="10">strncmp<pos:position pos:line="46" pos:column="17"/></name><argument_list pos:line="46" pos:column="17">(<argument><expr><name pos:line="46" pos:column="18">buf<pos:position pos:line="46" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="23">MCELOG_UNCORRECTED_ERR<pos:position pos:line="46" pos:column="45"/></name></expr></argument>, <argument><expr><call><name pos:line="46" pos:column="47">strlen<pos:position pos:line="46" pos:column="53"/></name><argument_list pos:line="46" pos:column="53">(<argument><expr><name pos:line="46" pos:column="54">MCELOG_UNCORRECTED_ERR<pos:position pos:line="46" pos:column="76"/></name></expr></argument>)<pos:position pos:line="46" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="79"/></condition><then pos:line="46" pos:column="79"> <block pos:line="46" pos:column="80">{
      <if pos:line="47" pos:column="7">if <condition pos:line="47" pos:column="10">(<expr><call><name pos:line="47" pos:column="11">fgets<pos:position pos:line="47" pos:column="16"/></name><argument_list pos:line="47" pos:column="16">(<argument><expr><name pos:line="47" pos:column="17">buf<pos:position pos:line="47" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="47" pos:column="22">sizeof<argument_list pos:line="47" pos:column="28">(<argument><expr><name pos:line="47" pos:column="29">buf<pos:position pos:line="47" pos:column="32"/></name></expr></argument>)<pos:position pos:line="47" pos:column="33"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="47" pos:column="35">p_file<pos:position pos:line="47" pos:column="41"/></name></expr></argument>)<pos:position pos:line="47" pos:column="42"/></argument_list></call> <operator pos:line="47" pos:column="43">!=<pos:position pos:line="47" pos:column="45"/></operator> <name pos:line="47" pos:column="46">NULL<pos:position pos:line="47" pos:column="50"/></name></expr>)<pos:position pos:line="47" pos:column="51"/></condition><then pos:line="47" pos:column="51"> <block pos:line="47" pos:column="52">{
        <expr_stmt><expr><call><name pos:line="48" pos:column="9">sscanf<pos:position pos:line="48" pos:column="15"/></name><argument_list pos:line="48" pos:column="15">(<argument><expr><name pos:line="48" pos:column="16">buf<pos:position pos:line="48" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="21">"\t%d total"<pos:position pos:line="48" pos:column="33"/></literal></expr></argument>, <argument><expr><operator pos:line="48" pos:column="35">&amp;<pos:position pos:line="48" pos:column="40"/></operator><operator pos:line="48" pos:column="36">(<pos:position pos:line="48" pos:column="37"/></operator><name><name pos:line="48" pos:column="37">memory_record<pos:position pos:line="48" pos:column="50"/></name><operator pos:line="48" pos:column="50">-&gt;<pos:position pos:line="48" pos:column="55"/></operator><name pos:line="48" pos:column="52">uncorrected_err_total<pos:position pos:line="48" pos:column="73"/></name></name><operator pos:line="48" pos:column="73">)<pos:position pos:line="48" pos:column="74"/></operator></expr></argument>)<pos:position pos:line="48" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="76"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="49" pos:column="9">DEBUG<pos:position pos:line="49" pos:column="14"/></name><argument_list pos:line="49" pos:column="14">(<argument><expr><name pos:line="49" pos:column="15">MCELOG_PLUGIN<pos:position pos:line="49" pos:column="28"/></name> <literal type="string" pos:line="49" pos:column="29">": Got uncorrected error total %d"<pos:position pos:line="49" pos:column="63"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="50" pos:column="15">memory_record<pos:position pos:line="50" pos:column="28"/></name><operator pos:line="50" pos:column="28">-&gt;<pos:position pos:line="50" pos:column="33"/></operator><name pos:line="50" pos:column="30">uncorrected_err_total<pos:position pos:line="50" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="53"/></expr_stmt>
      }<pos:position pos:line="51" pos:column="8"/></block></then></if>
      <if pos:line="52" pos:column="7">if <condition pos:line="52" pos:column="10">(<expr><call><name pos:line="52" pos:column="11">fgets<pos:position pos:line="52" pos:column="16"/></name><argument_list pos:line="52" pos:column="16">(<argument><expr><name pos:line="52" pos:column="17">buf<pos:position pos:line="52" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="52" pos:column="22">sizeof<argument_list pos:line="52" pos:column="28">(<argument><expr><name pos:line="52" pos:column="29">buf<pos:position pos:line="52" pos:column="32"/></name></expr></argument>)<pos:position pos:line="52" pos:column="33"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="52" pos:column="35">p_file<pos:position pos:line="52" pos:column="41"/></name></expr></argument>)<pos:position pos:line="52" pos:column="42"/></argument_list></call> <operator pos:line="52" pos:column="43">!=<pos:position pos:line="52" pos:column="45"/></operator> <name pos:line="52" pos:column="46">NULL<pos:position pos:line="52" pos:column="50"/></name></expr>)<pos:position pos:line="52" pos:column="51"/></condition><then pos:line="52" pos:column="51"> <block pos:line="52" pos:column="52">{
        <expr_stmt><expr><call><name pos:line="53" pos:column="9">sscanf<pos:position pos:line="53" pos:column="15"/></name><argument_list pos:line="53" pos:column="15">(<argument><expr><name pos:line="53" pos:column="16">buf<pos:position pos:line="53" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="21">"\t%d in %s"<pos:position pos:line="53" pos:column="33"/></literal></expr></argument>, <argument><expr><operator pos:line="53" pos:column="35">&amp;<pos:position pos:line="53" pos:column="40"/></operator><operator pos:line="53" pos:column="36">(<pos:position pos:line="53" pos:column="37"/></operator><name><name pos:line="53" pos:column="37">memory_record<pos:position pos:line="53" pos:column="50"/></name><operator pos:line="53" pos:column="50">-&gt;<pos:position pos:line="53" pos:column="55"/></operator><name pos:line="53" pos:column="52">uncorrected_err_timed<pos:position pos:line="53" pos:column="73"/></name></name><operator pos:line="53" pos:column="73">)<pos:position pos:line="53" pos:column="74"/></operator></expr></argument>,
               <argument><expr><name><name pos:line="54" pos:column="16">memory_record<pos:position pos:line="54" pos:column="29"/></name><operator pos:line="54" pos:column="29">-&gt;<pos:position pos:line="54" pos:column="34"/></operator><name pos:line="54" pos:column="31">uncorrected_err_timed_period<pos:position pos:line="54" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="55" pos:column="9">DEBUG<pos:position pos:line="55" pos:column="14"/></name><argument_list pos:line="55" pos:column="14">(<argument><expr><name pos:line="55" pos:column="15">MCELOG_PLUGIN<pos:position pos:line="55" pos:column="28"/></name> <literal type="string" pos:line="55" pos:column="29">": Got timed uncorrected errors %d in %s"<pos:position pos:line="55" pos:column="70"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="56" pos:column="15">memory_record<pos:position pos:line="56" pos:column="28"/></name><operator pos:line="56" pos:column="28">-&gt;<pos:position pos:line="56" pos:column="33"/></operator><name pos:line="56" pos:column="30">uncorrected_err_total<pos:position pos:line="56" pos:column="51"/></name></name></expr></argument>,
              <argument><expr><name><name pos:line="57" pos:column="15">memory_record<pos:position pos:line="57" pos:column="28"/></name><operator pos:line="57" pos:column="28">-&gt;<pos:position pos:line="57" pos:column="33"/></operator><name pos:line="57" pos:column="30">uncorrected_err_timed_period<pos:position pos:line="57" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="60"/></expr_stmt>
      }<pos:position pos:line="58" pos:column="8"/></block></then></if>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="60" pos:column="5">memset<pos:position pos:line="60" pos:column="11"/></name><argument_list pos:line="60" pos:column="11">(<argument><expr><name pos:line="60" pos:column="12">buf<pos:position pos:line="60" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="17">0<pos:position pos:line="60" pos:column="18"/></literal></expr></argument>, <argument><expr><sizeof pos:line="60" pos:column="20">sizeof<argument_list pos:line="60" pos:column="26">(<argument><expr><name pos:line="60" pos:column="27">buf<pos:position pos:line="60" pos:column="30"/></name></expr></argument>)<pos:position pos:line="60" pos:column="31"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="60" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="33"/></expr_stmt>
  }<pos:position pos:line="61" pos:column="4"/></block></while>
  <comment type="block" pos:line="62" pos:column="3">/* parsing definitely finished */</comment>
  <return pos:line="63" pos:column="3">return <expr><literal type="number" pos:line="63" pos:column="10">0<pos:position pos:line="63" pos:column="11"/></literal></expr>;<pos:position pos:line="63" pos:column="12"/></return>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

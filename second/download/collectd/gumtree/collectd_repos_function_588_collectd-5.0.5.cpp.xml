<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_588_collectd-5.0.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">format_values<pos:position pos:line="1" pos:column="18"/></name> <parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">ret<pos:position pos:line="1" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="31">size_t<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">ret_len<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="47">/* {{{ */</comment>
		<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">data_set_t<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">ds<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="39">const<pos:position pos:line="2" pos:column="44"/></specifier> <name pos:line="2" pos:column="45">value_list_t<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">vl<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="3" pos:column="17">_Bool<pos:position pos:line="3" pos:column="22"/></name></type> <name pos:line="3" pos:column="23">store_rates<pos:position pos:line="3" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="35"/></parameter_list>
<block pos:line="4" pos:column="1">{
        <decl_stmt><decl><type><name pos:line="5" pos:column="9">size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">offset<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><literal type="number" pos:line="5" pos:column="25">0<pos:position pos:line="5" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">status<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">i<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="8" pos:column="9">gauge_t<pos:position pos:line="8" pos:column="16"/></name> <modifier pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></modifier></type><name pos:line="8" pos:column="18">rates<pos:position pos:line="8" pos:column="23"/></name> <init pos:line="8" pos:column="24">= <expr><name pos:line="8" pos:column="26">NULL<pos:position pos:line="8" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="31"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="10" pos:column="9">assert<pos:position pos:line="10" pos:column="15"/></name> <argument_list pos:line="10" pos:column="16">(<argument><expr><literal type="number" pos:line="10" pos:column="17">0<pos:position pos:line="10" pos:column="18"/></literal> <operator pos:line="10" pos:column="19">==<pos:position pos:line="10" pos:column="21"/></operator> <call><name pos:line="10" pos:column="22">strcmp<pos:position pos:line="10" pos:column="28"/></name> <argument_list pos:line="10" pos:column="29">(<argument><expr><name><name pos:line="10" pos:column="30">ds<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">-&gt;<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="34">type<pos:position pos:line="10" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="40">vl<pos:position pos:line="10" pos:column="42"/></name><operator pos:line="10" pos:column="42">-&gt;<pos:position pos:line="10" pos:column="47"/></operator><name pos:line="10" pos:column="44">type<pos:position pos:line="10" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="51"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="12" pos:column="9">memset<pos:position pos:line="12" pos:column="15"/></name> <argument_list pos:line="12" pos:column="16">(<argument><expr><name pos:line="12" pos:column="17">ret<pos:position pos:line="12" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="22">0<pos:position pos:line="12" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="25">ret_len<pos:position pos:line="12" pos:column="32"/></name></expr></argument>)<pos:position pos:line="12" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="34"/></expr_stmt>

<cpp:define pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">define<pos:position pos:line="14" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="14" pos:column="9">BUFFER_ADD<pos:position pos:line="14" pos:column="19"/></name><parameter_list pos:line="14" pos:column="19">(<parameter><type><modifier pos:line="14" pos:column="20">...<pos:position pos:line="14" pos:column="23"/></modifier></type></parameter>)<pos:position pos:line="14" pos:column="24"/></parameter_list></cpp:macro> <cpp:value pos:line="14" pos:column="25">do { \
        status = ssnprintf (ret + offset, ret_len - offset, \
                        __VA_ARGS__); \
        if (status &lt; 1) \
        { \
                sfree (rates); \
                return (-1); \
        } \
        else if (((size_t) status) &gt;= (ret_len - offset)) \
        { \
                sfree (rates); \
                return (-1); \
        } \
        else \
                offset += ((size_t) status); \
} while (0)<pos:position pos:line="29" pos:column="12"/></cpp:value></cpp:define>

        <expr_stmt><expr><call><name pos:line="31" pos:column="9">BUFFER_ADD<pos:position pos:line="31" pos:column="19"/></name> <argument_list pos:line="31" pos:column="20">(<argument><expr><literal type="string" pos:line="31" pos:column="21">"%.3f"<pos:position pos:line="31" pos:column="27"/></literal></expr></argument>, <argument><expr><call><name pos:line="31" pos:column="29">CDTIME_T_TO_DOUBLE<pos:position pos:line="31" pos:column="47"/></name> <argument_list pos:line="31" pos:column="48">(<argument><expr><name><name pos:line="31" pos:column="49">vl<pos:position pos:line="31" pos:column="51"/></name><operator pos:line="31" pos:column="51">-&gt;<pos:position pos:line="31" pos:column="56"/></operator><name pos:line="31" pos:column="53">time<pos:position pos:line="31" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="60"/></expr_stmt>

        <for pos:line="33" pos:column="9">for <control pos:line="33" pos:column="13">(<init><expr><name pos:line="33" pos:column="14">i<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">=<pos:position pos:line="33" pos:column="17"/></operator> <literal type="number" pos:line="33" pos:column="18">0<pos:position pos:line="33" pos:column="19"/></literal></expr>;<pos:position pos:line="33" pos:column="20"/></init> <condition><expr><name pos:line="33" pos:column="21">i<pos:position pos:line="33" pos:column="22"/></name> <operator pos:line="33" pos:column="23">&lt;<pos:position pos:line="33" pos:column="27"/></operator> <name><name pos:line="33" pos:column="25">ds<pos:position pos:line="33" pos:column="27"/></name><operator pos:line="33" pos:column="27">-&gt;<pos:position pos:line="33" pos:column="32"/></operator><name pos:line="33" pos:column="29">ds_num<pos:position pos:line="33" pos:column="35"/></name></name></expr>;<pos:position pos:line="33" pos:column="36"/></condition> <incr><expr><name pos:line="33" pos:column="37">i<pos:position pos:line="33" pos:column="38"/></name><operator pos:line="33" pos:column="38">++<pos:position pos:line="33" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="33" pos:column="41"/></control>
        <block pos:line="34" pos:column="9">{
                <if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><name><name pos:line="35" pos:column="21">ds<pos:position pos:line="35" pos:column="23"/></name><operator pos:line="35" pos:column="23">-&gt;<pos:position pos:line="35" pos:column="28"/></operator><name pos:line="35" pos:column="25">ds<pos:position pos:line="35" pos:column="27"/></name><index pos:line="35" pos:column="27">[<expr><name pos:line="35" pos:column="28">i<pos:position pos:line="35" pos:column="29"/></name></expr>]<pos:position pos:line="35" pos:column="30"/></index></name><operator pos:line="35" pos:column="30">.<pos:position pos:line="35" pos:column="31"/></operator><name pos:line="35" pos:column="31">type<pos:position pos:line="35" pos:column="35"/></name> <operator pos:line="35" pos:column="36">==<pos:position pos:line="35" pos:column="38"/></operator> <name pos:line="35" pos:column="39">DS_TYPE_GAUGE<pos:position pos:line="35" pos:column="52"/></name></expr>)<pos:position pos:line="35" pos:column="53"/></condition><then pos:line="35" pos:column="53">
                        <block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="25">BUFFER_ADD<pos:position pos:line="36" pos:column="35"/></name> <argument_list pos:line="36" pos:column="36">(<argument><expr><literal type="string" pos:line="36" pos:column="37">":%f"<pos:position pos:line="36" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="44">vl<pos:position pos:line="36" pos:column="46"/></name><operator pos:line="36" pos:column="46">-&gt;<pos:position pos:line="36" pos:column="51"/></operator><name pos:line="36" pos:column="48">values<pos:position pos:line="36" pos:column="54"/></name><index pos:line="36" pos:column="54">[<expr><name pos:line="36" pos:column="55">i<pos:position pos:line="36" pos:column="56"/></name></expr>]<pos:position pos:line="36" pos:column="57"/></index></name><operator pos:line="36" pos:column="57">.<pos:position pos:line="36" pos:column="58"/></operator><name pos:line="36" pos:column="58">gauge<pos:position pos:line="36" pos:column="63"/></name></expr></argument>)<pos:position pos:line="36" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="65"/></expr_stmt></block></then>
                <elseif pos:line="37" pos:column="17">else <if pos:line="37" pos:column="22">if <condition pos:line="37" pos:column="25">(<expr><name pos:line="37" pos:column="26">store_rates<pos:position pos:line="37" pos:column="37"/></name></expr>)<pos:position pos:line="37" pos:column="38"/></condition><then pos:line="37" pos:column="38">
                <block pos:line="38" pos:column="17">{
                        <if pos:line="39" pos:column="25">if <condition pos:line="39" pos:column="28">(<expr><name pos:line="39" pos:column="29">rates<pos:position pos:line="39" pos:column="34"/></name> <operator pos:line="39" pos:column="35">==<pos:position pos:line="39" pos:column="37"/></operator> <name pos:line="39" pos:column="38">NULL<pos:position pos:line="39" pos:column="42"/></name></expr>)<pos:position pos:line="39" pos:column="43"/></condition><then pos:line="39" pos:column="43">
                                <block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="33">rates<pos:position pos:line="40" pos:column="38"/></name> <operator pos:line="40" pos:column="39">=<pos:position pos:line="40" pos:column="40"/></operator> <call><name pos:line="40" pos:column="41">uc_get_rate<pos:position pos:line="40" pos:column="52"/></name> <argument_list pos:line="40" pos:column="53">(<argument><expr><name pos:line="40" pos:column="54">ds<pos:position pos:line="40" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="58">vl<pos:position pos:line="40" pos:column="60"/></name></expr></argument>)<pos:position pos:line="40" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="62"/></expr_stmt></block></then></if>
                        <if pos:line="41" pos:column="25">if <condition pos:line="41" pos:column="28">(<expr><name pos:line="41" pos:column="29">rates<pos:position pos:line="41" pos:column="34"/></name> <operator pos:line="41" pos:column="35">==<pos:position pos:line="41" pos:column="37"/></operator> <name pos:line="41" pos:column="38">NULL<pos:position pos:line="41" pos:column="42"/></name></expr>)<pos:position pos:line="41" pos:column="43"/></condition><then pos:line="41" pos:column="43">
                        <block pos:line="42" pos:column="25">{
                                <expr_stmt><expr><call><name pos:line="43" pos:column="33">WARNING<pos:position pos:line="43" pos:column="40"/></name> <argument_list pos:line="43" pos:column="41">(<argument><expr><literal type="string" pos:line="43" pos:column="42">"format_values: "<pos:position pos:line="43" pos:column="59"/></literal>
						<literal type="string" pos:line="44" pos:column="49">"uc_get_rate failed."<pos:position pos:line="44" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="72"/></expr_stmt>
                                <return pos:line="45" pos:column="33">return <expr><operator pos:line="45" pos:column="40">(<pos:position pos:line="45" pos:column="41"/></operator><operator pos:line="45" pos:column="41">-<pos:position pos:line="45" pos:column="42"/></operator><literal type="number" pos:line="45" pos:column="42">1<pos:position pos:line="45" pos:column="43"/></literal><operator pos:line="45" pos:column="43">)<pos:position pos:line="45" pos:column="44"/></operator></expr>;<pos:position pos:line="45" pos:column="45"/></return>
                        }<pos:position pos:line="46" pos:column="26"/></block></then></if>
                        <expr_stmt><expr><call><name pos:line="47" pos:column="25">BUFFER_ADD<pos:position pos:line="47" pos:column="35"/></name> <argument_list pos:line="47" pos:column="36">(<argument><expr><literal type="string" pos:line="47" pos:column="37">":%g"<pos:position pos:line="47" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="44">rates<pos:position pos:line="47" pos:column="49"/></name><index pos:line="47" pos:column="49">[<expr><name pos:line="47" pos:column="50">i<pos:position pos:line="47" pos:column="51"/></name></expr>]<pos:position pos:line="47" pos:column="52"/></index></name></expr></argument>)<pos:position pos:line="47" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="54"/></expr_stmt>
                }<pos:position pos:line="48" pos:column="18"/></block></then></if></elseif>
                <elseif pos:line="49" pos:column="17">else <if pos:line="49" pos:column="22">if <condition pos:line="49" pos:column="25">(<expr><name><name pos:line="49" pos:column="26">ds<pos:position pos:line="49" pos:column="28"/></name><operator pos:line="49" pos:column="28">-&gt;<pos:position pos:line="49" pos:column="33"/></operator><name pos:line="49" pos:column="30">ds<pos:position pos:line="49" pos:column="32"/></name><index pos:line="49" pos:column="32">[<expr><name pos:line="49" pos:column="33">i<pos:position pos:line="49" pos:column="34"/></name></expr>]<pos:position pos:line="49" pos:column="35"/></index></name><operator pos:line="49" pos:column="35">.<pos:position pos:line="49" pos:column="36"/></operator><name pos:line="49" pos:column="36">type<pos:position pos:line="49" pos:column="40"/></name> <operator pos:line="49" pos:column="41">==<pos:position pos:line="49" pos:column="43"/></operator> <name pos:line="49" pos:column="44">DS_TYPE_COUNTER<pos:position pos:line="49" pos:column="59"/></name></expr>)<pos:position pos:line="49" pos:column="60"/></condition><then pos:line="49" pos:column="60">
                        <block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="25">BUFFER_ADD<pos:position pos:line="50" pos:column="35"/></name> <argument_list pos:line="50" pos:column="36">(<argument><expr><literal type="string" pos:line="50" pos:column="37">":%llu"<pos:position pos:line="50" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="46">vl<pos:position pos:line="50" pos:column="48"/></name><operator pos:line="50" pos:column="48">-&gt;<pos:position pos:line="50" pos:column="53"/></operator><name pos:line="50" pos:column="50">values<pos:position pos:line="50" pos:column="56"/></name><index pos:line="50" pos:column="56">[<expr><name pos:line="50" pos:column="57">i<pos:position pos:line="50" pos:column="58"/></name></expr>]<pos:position pos:line="50" pos:column="59"/></index></name><operator pos:line="50" pos:column="59">.<pos:position pos:line="50" pos:column="60"/></operator><name pos:line="50" pos:column="60">counter<pos:position pos:line="50" pos:column="67"/></name></expr></argument>)<pos:position pos:line="50" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="69"/></expr_stmt></block></then></if></elseif>
                <elseif pos:line="51" pos:column="17">else <if pos:line="51" pos:column="22">if <condition pos:line="51" pos:column="25">(<expr><name><name pos:line="51" pos:column="26">ds<pos:position pos:line="51" pos:column="28"/></name><operator pos:line="51" pos:column="28">-&gt;<pos:position pos:line="51" pos:column="33"/></operator><name pos:line="51" pos:column="30">ds<pos:position pos:line="51" pos:column="32"/></name><index pos:line="51" pos:column="32">[<expr><name pos:line="51" pos:column="33">i<pos:position pos:line="51" pos:column="34"/></name></expr>]<pos:position pos:line="51" pos:column="35"/></index></name><operator pos:line="51" pos:column="35">.<pos:position pos:line="51" pos:column="36"/></operator><name pos:line="51" pos:column="36">type<pos:position pos:line="51" pos:column="40"/></name> <operator pos:line="51" pos:column="41">==<pos:position pos:line="51" pos:column="43"/></operator> <name pos:line="51" pos:column="44">DS_TYPE_DERIVE<pos:position pos:line="51" pos:column="58"/></name></expr>)<pos:position pos:line="51" pos:column="59"/></condition><then pos:line="51" pos:column="59">
                        <block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="25">BUFFER_ADD<pos:position pos:line="52" pos:column="35"/></name> <argument_list pos:line="52" pos:column="36">(<argument><expr><literal type="string" pos:line="52" pos:column="37">":%"<pos:position pos:line="52" pos:column="41"/></literal><name pos:line="52" pos:column="41">PRIi64<pos:position pos:line="52" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="49">vl<pos:position pos:line="52" pos:column="51"/></name><operator pos:line="52" pos:column="51">-&gt;<pos:position pos:line="52" pos:column="56"/></operator><name pos:line="52" pos:column="53">values<pos:position pos:line="52" pos:column="59"/></name><index pos:line="52" pos:column="59">[<expr><name pos:line="52" pos:column="60">i<pos:position pos:line="52" pos:column="61"/></name></expr>]<pos:position pos:line="52" pos:column="62"/></index></name><operator pos:line="52" pos:column="62">.<pos:position pos:line="52" pos:column="63"/></operator><name pos:line="52" pos:column="63">derive<pos:position pos:line="52" pos:column="69"/></name></expr></argument>)<pos:position pos:line="52" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="71"/></expr_stmt></block></then></if></elseif>
                <elseif pos:line="53" pos:column="17">else <if pos:line="53" pos:column="22">if <condition pos:line="53" pos:column="25">(<expr><name><name pos:line="53" pos:column="26">ds<pos:position pos:line="53" pos:column="28"/></name><operator pos:line="53" pos:column="28">-&gt;<pos:position pos:line="53" pos:column="33"/></operator><name pos:line="53" pos:column="30">ds<pos:position pos:line="53" pos:column="32"/></name><index pos:line="53" pos:column="32">[<expr><name pos:line="53" pos:column="33">i<pos:position pos:line="53" pos:column="34"/></name></expr>]<pos:position pos:line="53" pos:column="35"/></index></name><operator pos:line="53" pos:column="35">.<pos:position pos:line="53" pos:column="36"/></operator><name pos:line="53" pos:column="36">type<pos:position pos:line="53" pos:column="40"/></name> <operator pos:line="53" pos:column="41">==<pos:position pos:line="53" pos:column="43"/></operator> <name pos:line="53" pos:column="44">DS_TYPE_ABSOLUTE<pos:position pos:line="53" pos:column="60"/></name></expr>)<pos:position pos:line="53" pos:column="61"/></condition><then pos:line="53" pos:column="61">
                        <block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="25">BUFFER_ADD<pos:position pos:line="54" pos:column="35"/></name> <argument_list pos:line="54" pos:column="36">(<argument><expr><literal type="string" pos:line="54" pos:column="37">":%"<pos:position pos:line="54" pos:column="41"/></literal><name pos:line="54" pos:column="41">PRIu64<pos:position pos:line="54" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="49">vl<pos:position pos:line="54" pos:column="51"/></name><operator pos:line="54" pos:column="51">-&gt;<pos:position pos:line="54" pos:column="56"/></operator><name pos:line="54" pos:column="53">values<pos:position pos:line="54" pos:column="59"/></name><index pos:line="54" pos:column="59">[<expr><name pos:line="54" pos:column="60">i<pos:position pos:line="54" pos:column="61"/></name></expr>]<pos:position pos:line="54" pos:column="62"/></index></name><operator pos:line="54" pos:column="62">.<pos:position pos:line="54" pos:column="63"/></operator><name pos:line="54" pos:column="63">absolute<pos:position pos:line="54" pos:column="71"/></name></expr></argument>)<pos:position pos:line="54" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="73"/></expr_stmt></block></then></if></elseif>
                <else pos:line="55" pos:column="17">else
                <block pos:line="56" pos:column="17">{
                        <expr_stmt><expr><call><name pos:line="57" pos:column="25">ERROR<pos:position pos:line="57" pos:column="30"/></name> <argument_list pos:line="57" pos:column="31">(<argument><expr><literal type="string" pos:line="57" pos:column="32">"format_values plugin: Unknown data source type: %i"<pos:position pos:line="57" pos:column="84"/></literal></expr></argument>,
                                        <argument><expr><name><name pos:line="58" pos:column="41">ds<pos:position pos:line="58" pos:column="43"/></name><operator pos:line="58" pos:column="43">-&gt;<pos:position pos:line="58" pos:column="48"/></operator><name pos:line="58" pos:column="45">ds<pos:position pos:line="58" pos:column="47"/></name><index pos:line="58" pos:column="47">[<expr><name pos:line="58" pos:column="48">i<pos:position pos:line="58" pos:column="49"/></name></expr>]<pos:position pos:line="58" pos:column="50"/></index></name><operator pos:line="58" pos:column="50">.<pos:position pos:line="58" pos:column="51"/></operator><name pos:line="58" pos:column="51">type<pos:position pos:line="58" pos:column="55"/></name></expr></argument>)<pos:position pos:line="58" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="57"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="59" pos:column="25">sfree<pos:position pos:line="59" pos:column="30"/></name> <argument_list pos:line="59" pos:column="31">(<argument><expr><name pos:line="59" pos:column="32">rates<pos:position pos:line="59" pos:column="37"/></name></expr></argument>)<pos:position pos:line="59" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="39"/></expr_stmt>
                        <return pos:line="60" pos:column="25">return <expr><operator pos:line="60" pos:column="32">(<pos:position pos:line="60" pos:column="33"/></operator><operator pos:line="60" pos:column="33">-<pos:position pos:line="60" pos:column="34"/></operator><literal type="number" pos:line="60" pos:column="34">1<pos:position pos:line="60" pos:column="35"/></literal><operator pos:line="60" pos:column="35">)<pos:position pos:line="60" pos:column="36"/></operator></expr>;<pos:position pos:line="60" pos:column="37"/></return>
                }<pos:position pos:line="61" pos:column="18"/></block></else></if>
        }<pos:position pos:line="62" pos:column="10"/></block></for> <comment type="block" pos:line="62" pos:column="11">/* for ds-&gt;ds_num */</comment>

<cpp:undef pos:line="64" pos:column="1">#<cpp:directive pos:line="64" pos:column="2">undef<pos:position pos:line="64" pos:column="7"/></cpp:directive> <name pos:line="64" pos:column="8">BUFFER_ADD<pos:position pos:line="64" pos:column="18"/></name></cpp:undef>

        <expr_stmt><expr><call><name pos:line="66" pos:column="9">sfree<pos:position pos:line="66" pos:column="14"/></name> <argument_list pos:line="66" pos:column="15">(<argument><expr><name pos:line="66" pos:column="16">rates<pos:position pos:line="66" pos:column="21"/></name></expr></argument>)<pos:position pos:line="66" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="23"/></expr_stmt>
        <return pos:line="67" pos:column="9">return <expr><operator pos:line="67" pos:column="16">(<pos:position pos:line="67" pos:column="17"/></operator><literal type="number" pos:line="67" pos:column="17">0<pos:position pos:line="67" pos:column="18"/></literal><operator pos:line="67" pos:column="18">)<pos:position pos:line="67" pos:column="19"/></operator></expr>;<pos:position pos:line="67" pos:column="20"/></return>
}<pos:position pos:line="68" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_141_collectd-5.0.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">lt_dlpreload_open<pos:position pos:line="2" pos:column="18"/></name> <parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><specifier pos:line="2" pos:column="20">const<pos:position pos:line="2" pos:column="25"/></specifier> <name pos:line="2" pos:column="26">char<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">originator<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="44">lt_dlpreload_callback_func<pos:position pos:line="2" pos:column="70"/></name> <modifier pos:line="2" pos:column="71">*<pos:position pos:line="2" pos:column="72"/></modifier></type><name pos:line="2" pos:column="72">func<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="77"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">symlist_chain<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">list<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type>		 <name pos:line="5" pos:column="18">errors<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><literal type="number" pos:line="5" pos:column="27">0<pos:position pos:line="5" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type>		 <name pos:line="6" pos:column="18">found<pos:position pos:line="6" pos:column="23"/></name>  <init pos:line="6" pos:column="25">= <expr><literal type="number" pos:line="6" pos:column="27">0<pos:position pos:line="6" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>

  <comment type="block" pos:line="8" pos:column="3">/* For each symlist in the chain...  */</comment>
  <for pos:line="9" pos:column="3">for <control pos:line="9" pos:column="7">(<init><expr><name pos:line="9" pos:column="8">list<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <name pos:line="9" pos:column="15">preloaded_symlists<pos:position pos:line="9" pos:column="33"/></name></expr>;<pos:position pos:line="9" pos:column="34"/></init> <condition><expr><name pos:line="9" pos:column="35">list<pos:position pos:line="9" pos:column="39"/></name></expr>;<pos:position pos:line="9" pos:column="40"/></condition> <incr><expr><name pos:line="9" pos:column="41">list<pos:position pos:line="9" pos:column="45"/></name> <operator pos:line="9" pos:column="46">=<pos:position pos:line="9" pos:column="47"/></operator> <name><name pos:line="9" pos:column="48">list<pos:position pos:line="9" pos:column="52"/></name><operator pos:line="9" pos:column="52">-&gt;<pos:position pos:line="9" pos:column="57"/></operator><name pos:line="9" pos:column="54">next<pos:position pos:line="9" pos:column="58"/></name></name></expr></incr>)<pos:position pos:line="9" pos:column="59"/></control>
    <block pos:line="10" pos:column="5">{
      <comment type="block" pos:line="11" pos:column="7">/* ...that was preloaded by the requesting ORIGINATOR... */</comment>
      <if pos:line="12" pos:column="7">if <condition pos:line="12" pos:column="10">(<expr><operator pos:line="12" pos:column="11">(<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="12">originator<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">&amp;&amp;<pos:position pos:line="12" pos:column="33"/></operator> <call><name pos:line="12" pos:column="26">streq<pos:position pos:line="12" pos:column="31"/></name> <argument_list pos:line="12" pos:column="32">(<argument><expr><name><name pos:line="12" pos:column="33">list<pos:position pos:line="12" pos:column="37"/></name><operator pos:line="12" pos:column="37">-&gt;<pos:position pos:line="12" pos:column="42"/></operator><name pos:line="12" pos:column="39">symlist<pos:position pos:line="12" pos:column="46"/></name><operator pos:line="12" pos:column="46">-&gt;<pos:position pos:line="12" pos:column="51"/></operator><name pos:line="12" pos:column="48">name<pos:position pos:line="12" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="54">originator<pos:position pos:line="12" pos:column="64"/></name></expr></argument>)<pos:position pos:line="12" pos:column="65"/></argument_list></call><operator pos:line="12" pos:column="65">)<pos:position pos:line="12" pos:column="66"/></operator>
          <operator pos:line="13" pos:column="11">||<pos:position pos:line="13" pos:column="13"/></operator> <operator pos:line="13" pos:column="14">(<pos:position pos:line="13" pos:column="15"/></operator><operator pos:line="13" pos:column="15">!<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="16">originator<pos:position pos:line="13" pos:column="26"/></name> <operator pos:line="13" pos:column="27">&amp;&amp;<pos:position pos:line="13" pos:column="37"/></operator> <call><name pos:line="13" pos:column="30">streq<pos:position pos:line="13" pos:column="35"/></name> <argument_list pos:line="13" pos:column="36">(<argument><expr><name><name pos:line="13" pos:column="37">list<pos:position pos:line="13" pos:column="41"/></name><operator pos:line="13" pos:column="41">-&gt;<pos:position pos:line="13" pos:column="46"/></operator><name pos:line="13" pos:column="43">symlist<pos:position pos:line="13" pos:column="50"/></name><operator pos:line="13" pos:column="50">-&gt;<pos:position pos:line="13" pos:column="55"/></operator><name pos:line="13" pos:column="52">name<pos:position pos:line="13" pos:column="56"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="58">"@PROGRAM@"<pos:position pos:line="13" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="70"/></argument_list></call><operator pos:line="13" pos:column="70">)<pos:position pos:line="13" pos:column="71"/></operator></expr>)<pos:position pos:line="13" pos:column="72"/></condition><then pos:line="13" pos:column="72">
	<block pos:line="14" pos:column="9">{
	  <decl_stmt><decl><type><specifier pos:line="15" pos:column="11">const<pos:position pos:line="15" pos:column="16"/></specifier> <name pos:line="15" pos:column="17">lt_dlsymlist<pos:position pos:line="15" pos:column="29"/></name> <modifier pos:line="15" pos:column="30">*<pos:position pos:line="15" pos:column="31"/></modifier></type><name pos:line="15" pos:column="31">symbol<pos:position pos:line="15" pos:column="37"/></name></decl>;<pos:position pos:line="15" pos:column="38"/></decl_stmt>
	  <decl_stmt><decl><type><name pos:line="16" pos:column="11">unsigned<pos:position pos:line="16" pos:column="19"/></name> <name pos:line="16" pos:column="20">int<pos:position pos:line="16" pos:column="23"/></name></type> <name pos:line="16" pos:column="24">idx<pos:position pos:line="16" pos:column="27"/></name> <init pos:line="16" pos:column="28">= <expr><literal type="number" pos:line="16" pos:column="30">0<pos:position pos:line="16" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="16" pos:column="32"/></decl_stmt>

	  <expr_stmt><expr><operator pos:line="18" pos:column="11">++<pos:position pos:line="18" pos:column="13"/></operator><name pos:line="18" pos:column="13">found<pos:position pos:line="18" pos:column="18"/></name></expr>;<pos:position pos:line="18" pos:column="19"/></expr_stmt>

	  <comment type="block" pos:line="20" pos:column="11">/* ...load the symbols per source compilation unit:
	     (we preincrement the index to skip over the originator entry)  */</comment>
	  <while pos:line="22" pos:column="11">while <condition pos:line="22" pos:column="17">(<expr><operator pos:line="22" pos:column="18">(<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="19">symbol<pos:position pos:line="22" pos:column="25"/></name> <operator pos:line="22" pos:column="26">=<pos:position pos:line="22" pos:column="27"/></operator> <operator pos:line="22" pos:column="28">&amp;<pos:position pos:line="22" pos:column="33"/></operator><name><name pos:line="22" pos:column="29">list<pos:position pos:line="22" pos:column="33"/></name><operator pos:line="22" pos:column="33">-&gt;<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="35">symlist<pos:position pos:line="22" pos:column="42"/></name><index pos:line="22" pos:column="42">[<expr><operator pos:line="22" pos:column="43">++<pos:position pos:line="22" pos:column="45"/></operator><name pos:line="22" pos:column="45">idx<pos:position pos:line="22" pos:column="48"/></name></expr>]<pos:position pos:line="22" pos:column="49"/></index></name><operator pos:line="22" pos:column="49">)<pos:position pos:line="22" pos:column="50"/></operator><operator pos:line="22" pos:column="50">-&gt;<pos:position pos:line="22" pos:column="55"/></operator><name pos:line="22" pos:column="52">name<pos:position pos:line="22" pos:column="56"/></name> <operator pos:line="22" pos:column="57">!=<pos:position pos:line="22" pos:column="59"/></operator> <literal type="number" pos:line="22" pos:column="60">0<pos:position pos:line="22" pos:column="61"/></literal></expr>)<pos:position pos:line="22" pos:column="62"/></condition>
	    <block pos:line="23" pos:column="13">{
	      <if pos:line="24" pos:column="15">if <condition pos:line="24" pos:column="18">(<expr><operator pos:line="24" pos:column="19">(<pos:position pos:line="24" pos:column="20"/></operator><name><name pos:line="24" pos:column="20">symbol<pos:position pos:line="24" pos:column="26"/></name><operator pos:line="24" pos:column="26">-&gt;<pos:position pos:line="24" pos:column="31"/></operator><name pos:line="24" pos:column="28">address<pos:position pos:line="24" pos:column="35"/></name></name> <operator pos:line="24" pos:column="36">==<pos:position pos:line="24" pos:column="38"/></operator> <literal type="number" pos:line="24" pos:column="39">0<pos:position pos:line="24" pos:column="40"/></literal><operator pos:line="24" pos:column="40">)<pos:position pos:line="24" pos:column="41"/></operator>
		  <operator pos:line="25" pos:column="19">&amp;&amp;<pos:position pos:line="25" pos:column="29"/></operator> <operator pos:line="25" pos:column="22">(<pos:position pos:line="25" pos:column="23"/></operator><call><name pos:line="25" pos:column="23">strneq<pos:position pos:line="25" pos:column="29"/></name> <argument_list pos:line="25" pos:column="30">(<argument><expr><name><name pos:line="25" pos:column="31">symbol<pos:position pos:line="25" pos:column="37"/></name><operator pos:line="25" pos:column="37">-&gt;<pos:position pos:line="25" pos:column="42"/></operator><name pos:line="25" pos:column="39">name<pos:position pos:line="25" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="45">"@PROGRAM@"<pos:position pos:line="25" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="57"/></argument_list></call><operator pos:line="25" pos:column="57">)<pos:position pos:line="25" pos:column="58"/></operator></expr>)<pos:position pos:line="25" pos:column="59"/></condition><then pos:line="25" pos:column="59">
		<block pos:line="26" pos:column="17">{
		  <decl_stmt><decl><type><name pos:line="27" pos:column="19">lt_dlhandle<pos:position pos:line="27" pos:column="30"/></name></type> <name pos:line="27" pos:column="31">handle<pos:position pos:line="27" pos:column="37"/></name> <init pos:line="27" pos:column="38">= <expr><call><name pos:line="27" pos:column="40">lt_dlopen<pos:position pos:line="27" pos:column="49"/></name> <argument_list pos:line="27" pos:column="50">(<argument><expr><name><name pos:line="27" pos:column="51">symbol<pos:position pos:line="27" pos:column="57"/></name><operator pos:line="27" pos:column="57">-&gt;<pos:position pos:line="27" pos:column="62"/></operator><name pos:line="27" pos:column="59">name<pos:position pos:line="27" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="27" pos:column="65"/></decl_stmt>
		  <if pos:line="28" pos:column="19">if <condition pos:line="28" pos:column="22">(<expr><name pos:line="28" pos:column="23">handle<pos:position pos:line="28" pos:column="29"/></name> <operator pos:line="28" pos:column="30">==<pos:position pos:line="28" pos:column="32"/></operator> <literal type="number" pos:line="28" pos:column="33">0<pos:position pos:line="28" pos:column="34"/></literal></expr>)<pos:position pos:line="28" pos:column="35"/></condition><then pos:line="28" pos:column="35">
		    <block pos:line="29" pos:column="21">{
		      <expr_stmt><expr><operator pos:line="30" pos:column="23">++<pos:position pos:line="30" pos:column="25"/></operator><name pos:line="30" pos:column="25">errors<pos:position pos:line="30" pos:column="31"/></name></expr>;<pos:position pos:line="30" pos:column="32"/></expr_stmt>
		    }<pos:position pos:line="31" pos:column="22"/></block></then>
		  <else pos:line="32" pos:column="19">else
		    <block pos:line="33" pos:column="21">{
		      <expr_stmt><expr><name pos:line="34" pos:column="23">errors<pos:position pos:line="34" pos:column="29"/></name> <operator pos:line="34" pos:column="30">+=<pos:position pos:line="34" pos:column="32"/></operator> <call pos:line="34" pos:column="33">(<modifier pos:line="34" pos:column="34">*<pos:position pos:line="34" pos:column="35"/></modifier><name pos:line="34" pos:column="35">func<pos:position pos:line="34" pos:column="39"/></name>) <argument_list pos:line="34" pos:column="41">(<argument><expr><name pos:line="34" pos:column="42">handle<pos:position pos:line="34" pos:column="48"/></name></expr></argument>)<pos:position pos:line="34" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="50"/></expr_stmt>
		    }<pos:position pos:line="35" pos:column="22"/></block></else></if>
		}<pos:position pos:line="36" pos:column="18"/></block></then></if>
	    }<pos:position pos:line="37" pos:column="14"/></block></while>
	}<pos:position pos:line="38" pos:column="10"/></block></then></if>
    }<pos:position pos:line="39" pos:column="6"/></block></for>

  <if pos:line="41" pos:column="3">if <condition pos:line="41" pos:column="6">(<expr><operator pos:line="41" pos:column="7">!<pos:position pos:line="41" pos:column="8"/></operator><name pos:line="41" pos:column="8">found<pos:position pos:line="41" pos:column="13"/></name></expr>)<pos:position pos:line="41" pos:column="14"/></condition><then pos:line="41" pos:column="14">
    <block pos:line="42" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="43" pos:column="7">LT__SETERROR<pos:position pos:line="43" pos:column="19"/></name><argument_list pos:line="43" pos:column="19">(<argument><expr><name pos:line="43" pos:column="20">CANNOT_OPEN<pos:position pos:line="43" pos:column="31"/></name></expr></argument>)<pos:position pos:line="43" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="44" pos:column="7">++<pos:position pos:line="44" pos:column="9"/></operator><name pos:line="44" pos:column="9">errors<pos:position pos:line="44" pos:column="15"/></name></expr>;<pos:position pos:line="44" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>

  <return pos:line="47" pos:column="3">return <expr><name pos:line="47" pos:column="10">errors<pos:position pos:line="47" pos:column="16"/></name></expr>;<pos:position pos:line="47" pos:column="17"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

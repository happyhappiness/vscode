<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_913_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">initialize_counters<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">void<pos:position pos:line="1" pos:column="37"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list> <block pos:line="1" pos:column="39">{
  <for pos:line="2" pos:column="3">for <control pos:line="2" pos:column="7">(<init><decl><type><name pos:line="2" pos:column="8">unsigned<pos:position pos:line="2" pos:column="16"/></name> <name pos:line="2" pos:column="17">int<pos:position pos:line="2" pos:column="20"/></name></type> <name pos:line="2" pos:column="21">cpu_id<pos:position pos:line="2" pos:column="27"/></name> <init pos:line="2" pos:column="28">= <expr><literal type="number" pos:line="2" pos:column="30">0<pos:position pos:line="2" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="2" pos:column="32"/></init> <condition><expr><name pos:line="2" pos:column="33">cpu_id<pos:position pos:line="2" pos:column="39"/></name> <operator pos:line="2" pos:column="40">&lt;=<pos:position pos:line="2" pos:column="45"/></operator> <name><name pos:line="2" pos:column="43">topology<pos:position pos:line="2" pos:column="51"/></name><operator pos:line="2" pos:column="51">.<pos:position pos:line="2" pos:column="52"/></operator><name pos:line="2" pos:column="52">max_cpu_id<pos:position pos:line="2" pos:column="62"/></name></name></expr>;<pos:position pos:line="2" pos:column="63"/></condition> <incr><expr><operator pos:line="2" pos:column="64">++<pos:position pos:line="2" pos:column="66"/></operator><name pos:line="2" pos:column="66">cpu_id<pos:position pos:line="2" pos:column="72"/></name></expr></incr>)<pos:position pos:line="2" pos:column="73"/></control> <block pos:line="2" pos:column="74">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><call><name pos:line="3" pos:column="9">cpu_is_not_present<pos:position pos:line="3" pos:column="27"/></name><argument_list pos:line="3" pos:column="27">(<argument><expr><name pos:line="3" pos:column="28">cpu_id<pos:position pos:line="3" pos:column="34"/></name></expr></argument>)<pos:position pos:line="3" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="36"/></condition><then pos:line="3" pos:column="36">
      <block type="pseudo"><continue pos:line="4" pos:column="7">continue;<pos:position pos:line="4" pos:column="16"/></continue></block></then></if>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">init_counter<pos:position pos:line="5" pos:column="17"/></name><argument_list pos:line="5" pos:column="17">(<argument><expr><name pos:line="5" pos:column="18">EVEN_COUNTERS<pos:position pos:line="5" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="33">cpu_id<pos:position pos:line="5" pos:column="39"/></name></expr></argument>)<pos:position pos:line="5" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">init_counter<pos:position pos:line="6" pos:column="17"/></name><argument_list pos:line="6" pos:column="17">(<argument><expr><name pos:line="6" pos:column="18">ODD_COUNTERS<pos:position pos:line="6" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="32">cpu_id<pos:position pos:line="6" pos:column="38"/></name></expr></argument>)<pos:position pos:line="6" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">init_counter<pos:position pos:line="7" pos:column="17"/></name><argument_list pos:line="7" pos:column="17">(<argument><expr><name pos:line="7" pos:column="18">DELTA_COUNTERS<pos:position pos:line="7" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="34">cpu_id<pos:position pos:line="7" pos:column="40"/></name></expr></argument>)<pos:position pos:line="7" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="42"/></expr_stmt>
  }<pos:position pos:line="8" pos:column="4"/></block></for>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

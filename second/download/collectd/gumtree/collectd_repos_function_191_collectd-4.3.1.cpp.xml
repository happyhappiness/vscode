<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_191_collectd-4.3.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cache_insert<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">data_set_t<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">ds<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="48">const<pos:position pos:line="1" pos:column="53"/></specifier> <name pos:line="1" pos:column="54">value_list_t<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">vl<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<comment type="block" pos:line="3" pos:column="9">/* We're called from `cache_update' so we don't need to lock the mutex */</comment>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">value_cache_t<pos:position pos:line="4" pos:column="22"/></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">vc<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">DEBUG<pos:position pos:line="7" pos:column="14"/></name> <argument_list pos:line="7" pos:column="15">(<argument><expr><literal type="string" pos:line="7" pos:column="16">"unixsock plugin: cache_insert: ds-&gt;type = %s; ds-&gt;ds_num = %i;"<pos:position pos:line="7" pos:column="86"/></literal>
			<literal type="string" pos:line="8" pos:column="25">" vl-&gt;values_len = %i;"<pos:position pos:line="8" pos:column="51"/></literal></expr></argument>,
			<argument><expr><name><name pos:line="9" pos:column="25">ds<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">-&gt;<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="29">type<pos:position pos:line="9" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="35">ds<pos:position pos:line="9" pos:column="37"/></name><operator pos:line="9" pos:column="37">-&gt;<pos:position pos:line="9" pos:column="42"/></operator><name pos:line="9" pos:column="39">ds_num<pos:position pos:line="9" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="47">vl<pos:position pos:line="9" pos:column="49"/></name><operator pos:line="9" pos:column="49">-&gt;<pos:position pos:line="9" pos:column="54"/></operator><name pos:line="9" pos:column="51">values_len<pos:position pos:line="9" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="63"/></expr_stmt>
<cpp:if pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">if<pos:position pos:line="10" pos:column="4"/></cpp:directive> <expr><name pos:line="10" pos:column="5">COLLECT_DEBUG<pos:position pos:line="10" pos:column="18"/></name></expr></cpp:if>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">assert<pos:position pos:line="11" pos:column="15"/></name> <argument_list pos:line="11" pos:column="16">(<argument><expr><name><name pos:line="11" pos:column="17">ds<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">-&gt;<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="21">ds_num<pos:position pos:line="11" pos:column="27"/></name></name> <operator pos:line="11" pos:column="28">==<pos:position pos:line="11" pos:column="30"/></operator> <name><name pos:line="11" pos:column="31">vl<pos:position pos:line="11" pos:column="33"/></name><operator pos:line="11" pos:column="33">-&gt;<pos:position pos:line="11" pos:column="38"/></operator><name pos:line="11" pos:column="35">values_len<pos:position pos:line="11" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="47"/></expr_stmt>
<cpp:else pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">else<pos:position pos:line="12" pos:column="6"/></cpp:directive></cpp:else>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name><name pos:line="13" pos:column="13">ds<pos:position pos:line="13" pos:column="15"/></name><operator pos:line="13" pos:column="15">-&gt;<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="17">ds_num<pos:position pos:line="13" pos:column="23"/></name></name> <operator pos:line="13" pos:column="24">!=<pos:position pos:line="13" pos:column="26"/></operator> <name><name pos:line="13" pos:column="27">vl<pos:position pos:line="13" pos:column="29"/></name><operator pos:line="13" pos:column="29">-&gt;<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="31">values_len<pos:position pos:line="13" pos:column="41"/></name></name></expr>)<pos:position pos:line="13" pos:column="42"/></condition><then pos:line="13" pos:column="42">
	<block pos:line="14" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">ERROR<pos:position pos:line="15" pos:column="22"/></name> <argument_list pos:line="15" pos:column="23">(<argument><expr><literal type="string" pos:line="15" pos:column="24">"unixsock plugin: ds-&gt;type = %s: (ds-&gt;ds_num = %i) != "<pos:position pos:line="15" pos:column="85"/></literal>
				<literal type="string" pos:line="16" pos:column="33">"(vl-&gt;values_len = %i)"<pos:position pos:line="16" pos:column="59"/></literal></expr></argument>,
				<argument><expr><name><name pos:line="17" pos:column="33">ds<pos:position pos:line="17" pos:column="35"/></name><operator pos:line="17" pos:column="35">-&gt;<pos:position pos:line="17" pos:column="40"/></operator><name pos:line="17" pos:column="37">type<pos:position pos:line="17" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="43">ds<pos:position pos:line="17" pos:column="45"/></name><operator pos:line="17" pos:column="45">-&gt;<pos:position pos:line="17" pos:column="50"/></operator><name pos:line="17" pos:column="47">ds_num<pos:position pos:line="17" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="55">vl<pos:position pos:line="17" pos:column="57"/></name><operator pos:line="17" pos:column="57">-&gt;<pos:position pos:line="17" pos:column="62"/></operator><name pos:line="17" pos:column="59">values_len<pos:position pos:line="17" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="71"/></expr_stmt>
		<return pos:line="18" pos:column="17">return <expr><operator pos:line="18" pos:column="24">(<pos:position pos:line="18" pos:column="25"/></operator><operator pos:line="18" pos:column="25">-<pos:position pos:line="18" pos:column="26"/></operator><literal type="number" pos:line="18" pos:column="26">1<pos:position pos:line="18" pos:column="27"/></literal><operator pos:line="18" pos:column="27">)<pos:position pos:line="18" pos:column="28"/></operator></expr>;<pos:position pos:line="18" pos:column="29"/></return>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>
<cpp:endif pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">endif<pos:position pos:line="20" pos:column="7"/></cpp:directive></cpp:endif>

	<expr_stmt><expr><name pos:line="22" pos:column="9">vc<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <operator pos:line="22" pos:column="14">(<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="15">value_cache_t<pos:position pos:line="22" pos:column="28"/></name> <operator pos:line="22" pos:column="29">*<pos:position pos:line="22" pos:column="30"/></operator><operator pos:line="22" pos:column="30">)<pos:position pos:line="22" pos:column="31"/></operator> <call><name pos:line="22" pos:column="32">malloc<pos:position pos:line="22" pos:column="38"/></name> <argument_list pos:line="22" pos:column="39">(<argument><expr><sizeof pos:line="22" pos:column="40">sizeof <argument_list pos:line="22" pos:column="47">(<argument><expr><name pos:line="22" pos:column="48">value_cache_t<pos:position pos:line="22" pos:column="61"/></name></expr></argument>)<pos:position pos:line="22" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="64"/></expr_stmt>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">vc<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">==<pos:position pos:line="23" pos:column="18"/></operator> <name pos:line="23" pos:column="19">NULL<pos:position pos:line="23" pos:column="23"/></name></expr>)<pos:position pos:line="23" pos:column="24"/></condition><then pos:line="23" pos:column="24">
	<block pos:line="24" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="25" pos:column="17">char<pos:position pos:line="25" pos:column="21"/></name></type> <name><name pos:line="25" pos:column="22">errbuf<pos:position pos:line="25" pos:column="28"/></name><index pos:line="25" pos:column="28">[<expr><literal type="number" pos:line="25" pos:column="29">1024<pos:position pos:line="25" pos:column="33"/></literal></expr>]<pos:position pos:line="25" pos:column="34"/></index></name></decl>;<pos:position pos:line="25" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">pthread_mutex_unlock<pos:position pos:line="26" pos:column="37"/></name> <argument_list pos:line="26" pos:column="38">(<argument><expr><operator pos:line="26" pos:column="39">&amp;<pos:position pos:line="26" pos:column="44"/></operator><name pos:line="26" pos:column="40">cache_lock<pos:position pos:line="26" pos:column="50"/></name></expr></argument>)<pos:position pos:line="26" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">ERROR<pos:position pos:line="27" pos:column="22"/></name> <argument_list pos:line="27" pos:column="23">(<argument><expr><literal type="string" pos:line="27" pos:column="24">"unixsock plugin: malloc failed: %s"<pos:position pos:line="27" pos:column="60"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="28" pos:column="33">sstrerror<pos:position pos:line="28" pos:column="42"/></name> <argument_list pos:line="28" pos:column="43">(<argument><expr><name pos:line="28" pos:column="44">errno<pos:position pos:line="28" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="51">errbuf<pos:position pos:line="28" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="59">sizeof <argument_list pos:line="28" pos:column="66">(<argument><expr><name pos:line="28" pos:column="67">errbuf<pos:position pos:line="28" pos:column="73"/></name></expr></argument>)<pos:position pos:line="28" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="77"/></expr_stmt>
		<return pos:line="29" pos:column="17">return <expr><operator pos:line="29" pos:column="24">(<pos:position pos:line="29" pos:column="25"/></operator><operator pos:line="29" pos:column="25">-<pos:position pos:line="29" pos:column="26"/></operator><literal type="number" pos:line="29" pos:column="26">1<pos:position pos:line="29" pos:column="27"/></literal><operator pos:line="29" pos:column="27">)<pos:position pos:line="29" pos:column="28"/></operator></expr>;<pos:position pos:line="29" pos:column="29"/></return>
	}<pos:position pos:line="30" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="32" pos:column="9">vc<pos:position pos:line="32" pos:column="11"/></name><operator pos:line="32" pos:column="11">-&gt;<pos:position pos:line="32" pos:column="16"/></operator><name pos:line="32" pos:column="13">gauge<pos:position pos:line="32" pos:column="18"/></name></name> <operator pos:line="32" pos:column="19">=<pos:position pos:line="32" pos:column="20"/></operator> <operator pos:line="32" pos:column="21">(<pos:position pos:line="32" pos:column="22"/></operator><name pos:line="32" pos:column="22">gauge_t<pos:position pos:line="32" pos:column="29"/></name> <operator pos:line="32" pos:column="30">*<pos:position pos:line="32" pos:column="31"/></operator><operator pos:line="32" pos:column="31">)<pos:position pos:line="32" pos:column="32"/></operator> <call><name pos:line="32" pos:column="33">malloc<pos:position pos:line="32" pos:column="39"/></name> <argument_list pos:line="32" pos:column="40">(<argument><expr><sizeof pos:line="32" pos:column="41">sizeof <argument_list pos:line="32" pos:column="48">(<argument><expr><name pos:line="32" pos:column="49">gauge_t<pos:position pos:line="32" pos:column="56"/></name></expr></argument>)<pos:position pos:line="32" pos:column="57"/></argument_list></sizeof> <operator pos:line="32" pos:column="58">*<pos:position pos:line="32" pos:column="59"/></operator> <name><name pos:line="32" pos:column="60">vl<pos:position pos:line="32" pos:column="62"/></name><operator pos:line="32" pos:column="62">-&gt;<pos:position pos:line="32" pos:column="67"/></operator><name pos:line="32" pos:column="64">values_len<pos:position pos:line="32" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="76"/></expr_stmt>
	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name><name pos:line="33" pos:column="13">vc<pos:position pos:line="33" pos:column="15"/></name><operator pos:line="33" pos:column="15">-&gt;<pos:position pos:line="33" pos:column="20"/></operator><name pos:line="33" pos:column="17">gauge<pos:position pos:line="33" pos:column="22"/></name></name> <operator pos:line="33" pos:column="23">==<pos:position pos:line="33" pos:column="25"/></operator> <name pos:line="33" pos:column="26">NULL<pos:position pos:line="33" pos:column="30"/></name></expr>)<pos:position pos:line="33" pos:column="31"/></condition><then pos:line="33" pos:column="31">
	<block pos:line="34" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="35" pos:column="17">char<pos:position pos:line="35" pos:column="21"/></name></type> <name><name pos:line="35" pos:column="22">errbuf<pos:position pos:line="35" pos:column="28"/></name><index pos:line="35" pos:column="28">[<expr><literal type="number" pos:line="35" pos:column="29">1024<pos:position pos:line="35" pos:column="33"/></literal></expr>]<pos:position pos:line="35" pos:column="34"/></index></name></decl>;<pos:position pos:line="35" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">pthread_mutex_unlock<pos:position pos:line="36" pos:column="37"/></name> <argument_list pos:line="36" pos:column="38">(<argument><expr><operator pos:line="36" pos:column="39">&amp;<pos:position pos:line="36" pos:column="44"/></operator><name pos:line="36" pos:column="40">cache_lock<pos:position pos:line="36" pos:column="50"/></name></expr></argument>)<pos:position pos:line="36" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">ERROR<pos:position pos:line="37" pos:column="22"/></name> <argument_list pos:line="37" pos:column="23">(<argument><expr><literal type="string" pos:line="37" pos:column="24">"unixsock plugin: malloc failed: %s"<pos:position pos:line="37" pos:column="60"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="38" pos:column="33">sstrerror<pos:position pos:line="38" pos:column="42"/></name> <argument_list pos:line="38" pos:column="43">(<argument><expr><name pos:line="38" pos:column="44">errno<pos:position pos:line="38" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="51">errbuf<pos:position pos:line="38" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="59">sizeof <argument_list pos:line="38" pos:column="66">(<argument><expr><name pos:line="38" pos:column="67">errbuf<pos:position pos:line="38" pos:column="73"/></name></expr></argument>)<pos:position pos:line="38" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="38" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="77"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="39" pos:column="17">free<pos:position pos:line="39" pos:column="21"/></name> <argument_list pos:line="39" pos:column="22">(<argument><expr><name pos:line="39" pos:column="23">vc<pos:position pos:line="39" pos:column="25"/></name></expr></argument>)<pos:position pos:line="39" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="27"/></expr_stmt>
		<return pos:line="40" pos:column="17">return <expr><operator pos:line="40" pos:column="24">(<pos:position pos:line="40" pos:column="25"/></operator><operator pos:line="40" pos:column="25">-<pos:position pos:line="40" pos:column="26"/></operator><literal type="number" pos:line="40" pos:column="26">1<pos:position pos:line="40" pos:column="27"/></literal><operator pos:line="40" pos:column="27">)<pos:position pos:line="40" pos:column="28"/></operator></expr>;<pos:position pos:line="40" pos:column="29"/></return>
	}<pos:position pos:line="41" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="43" pos:column="9">vc<pos:position pos:line="43" pos:column="11"/></name><operator pos:line="43" pos:column="11">-&gt;<pos:position pos:line="43" pos:column="16"/></operator><name pos:line="43" pos:column="13">counter<pos:position pos:line="43" pos:column="20"/></name></name> <operator pos:line="43" pos:column="21">=<pos:position pos:line="43" pos:column="22"/></operator> <operator pos:line="43" pos:column="23">(<pos:position pos:line="43" pos:column="24"/></operator><name pos:line="43" pos:column="24">counter_t<pos:position pos:line="43" pos:column="33"/></name> <operator pos:line="43" pos:column="34">*<pos:position pos:line="43" pos:column="35"/></operator><operator pos:line="43" pos:column="35">)<pos:position pos:line="43" pos:column="36"/></operator> <call><name pos:line="43" pos:column="37">malloc<pos:position pos:line="43" pos:column="43"/></name> <argument_list pos:line="43" pos:column="44">(<argument><expr><sizeof pos:line="43" pos:column="45">sizeof <argument_list pos:line="43" pos:column="52">(<argument><expr><name pos:line="43" pos:column="53">counter_t<pos:position pos:line="43" pos:column="62"/></name></expr></argument>)<pos:position pos:line="43" pos:column="63"/></argument_list></sizeof> <operator pos:line="43" pos:column="64">*<pos:position pos:line="43" pos:column="65"/></operator> <name><name pos:line="43" pos:column="66">vl<pos:position pos:line="43" pos:column="68"/></name><operator pos:line="43" pos:column="68">-&gt;<pos:position pos:line="43" pos:column="73"/></operator><name pos:line="43" pos:column="70">values_len<pos:position pos:line="43" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="82"/></expr_stmt>
	<if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name><name pos:line="44" pos:column="13">vc<pos:position pos:line="44" pos:column="15"/></name><operator pos:line="44" pos:column="15">-&gt;<pos:position pos:line="44" pos:column="20"/></operator><name pos:line="44" pos:column="17">counter<pos:position pos:line="44" pos:column="24"/></name></name> <operator pos:line="44" pos:column="25">==<pos:position pos:line="44" pos:column="27"/></operator> <name pos:line="44" pos:column="28">NULL<pos:position pos:line="44" pos:column="32"/></name></expr>)<pos:position pos:line="44" pos:column="33"/></condition><then pos:line="44" pos:column="33">
	<block pos:line="45" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="46" pos:column="17">char<pos:position pos:line="46" pos:column="21"/></name></type> <name><name pos:line="46" pos:column="22">errbuf<pos:position pos:line="46" pos:column="28"/></name><index pos:line="46" pos:column="28">[<expr><literal type="number" pos:line="46" pos:column="29">1024<pos:position pos:line="46" pos:column="33"/></literal></expr>]<pos:position pos:line="46" pos:column="34"/></index></name></decl>;<pos:position pos:line="46" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="47" pos:column="17">pthread_mutex_unlock<pos:position pos:line="47" pos:column="37"/></name> <argument_list pos:line="47" pos:column="38">(<argument><expr><operator pos:line="47" pos:column="39">&amp;<pos:position pos:line="47" pos:column="44"/></operator><name pos:line="47" pos:column="40">cache_lock<pos:position pos:line="47" pos:column="50"/></name></expr></argument>)<pos:position pos:line="47" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="48" pos:column="17">ERROR<pos:position pos:line="48" pos:column="22"/></name> <argument_list pos:line="48" pos:column="23">(<argument><expr><literal type="string" pos:line="48" pos:column="24">"unixsock plugin: malloc failed: %s"<pos:position pos:line="48" pos:column="60"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="49" pos:column="33">sstrerror<pos:position pos:line="49" pos:column="42"/></name> <argument_list pos:line="49" pos:column="43">(<argument><expr><name pos:line="49" pos:column="44">errno<pos:position pos:line="49" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="51">errbuf<pos:position pos:line="49" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="49" pos:column="59">sizeof <argument_list pos:line="49" pos:column="66">(<argument><expr><name pos:line="49" pos:column="67">errbuf<pos:position pos:line="49" pos:column="73"/></name></expr></argument>)<pos:position pos:line="49" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="49" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="49" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="77"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="50" pos:column="17">free<pos:position pos:line="50" pos:column="21"/></name> <argument_list pos:line="50" pos:column="22">(<argument><expr><name><name pos:line="50" pos:column="23">vc<pos:position pos:line="50" pos:column="25"/></name><operator pos:line="50" pos:column="25">-&gt;<pos:position pos:line="50" pos:column="30"/></operator><name pos:line="50" pos:column="27">gauge<pos:position pos:line="50" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="51" pos:column="17">free<pos:position pos:line="51" pos:column="21"/></name> <argument_list pos:line="51" pos:column="22">(<argument><expr><name pos:line="51" pos:column="23">vc<pos:position pos:line="51" pos:column="25"/></name></expr></argument>)<pos:position pos:line="51" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="27"/></expr_stmt>
		<return pos:line="52" pos:column="17">return <expr><operator pos:line="52" pos:column="24">(<pos:position pos:line="52" pos:column="25"/></operator><operator pos:line="52" pos:column="25">-<pos:position pos:line="52" pos:column="26"/></operator><literal type="number" pos:line="52" pos:column="26">1<pos:position pos:line="52" pos:column="27"/></literal><operator pos:line="52" pos:column="27">)<pos:position pos:line="52" pos:column="28"/></operator></expr>;<pos:position pos:line="52" pos:column="29"/></return>
	}<pos:position pos:line="53" pos:column="10"/></block></then></if>

	<if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><call><name pos:line="55" pos:column="13">FORMAT_VL<pos:position pos:line="55" pos:column="22"/></name> <argument_list pos:line="55" pos:column="23">(<argument><expr><name><name pos:line="55" pos:column="24">vc<pos:position pos:line="55" pos:column="26"/></name><operator pos:line="55" pos:column="26">-&gt;<pos:position pos:line="55" pos:column="31"/></operator><name pos:line="55" pos:column="28">name<pos:position pos:line="55" pos:column="32"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="55" pos:column="34">sizeof <argument_list pos:line="55" pos:column="41">(<argument><expr><name><name pos:line="55" pos:column="42">vc<pos:position pos:line="55" pos:column="44"/></name><operator pos:line="55" pos:column="44">-&gt;<pos:position pos:line="55" pos:column="49"/></operator><name pos:line="55" pos:column="46">name<pos:position pos:line="55" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="51"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="55" pos:column="53">vl<pos:position pos:line="55" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="57">ds<pos:position pos:line="55" pos:column="59"/></name></expr></argument>)<pos:position pos:line="55" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="61"/></condition><then pos:line="55" pos:column="61">
	<block pos:line="56" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="57" pos:column="17">pthread_mutex_unlock<pos:position pos:line="57" pos:column="37"/></name> <argument_list pos:line="57" pos:column="38">(<argument><expr><operator pos:line="57" pos:column="39">&amp;<pos:position pos:line="57" pos:column="44"/></operator><name pos:line="57" pos:column="40">cache_lock<pos:position pos:line="57" pos:column="50"/></name></expr></argument>)<pos:position pos:line="57" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="58" pos:column="17">ERROR<pos:position pos:line="58" pos:column="22"/></name> <argument_list pos:line="58" pos:column="23">(<argument><expr><literal type="string" pos:line="58" pos:column="24">"unixsock plugin: FORMAT_VL failed."<pos:position pos:line="58" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="59" pos:column="17">free<pos:position pos:line="59" pos:column="21"/></name> <argument_list pos:line="59" pos:column="22">(<argument><expr><name><name pos:line="59" pos:column="23">vc<pos:position pos:line="59" pos:column="25"/></name><operator pos:line="59" pos:column="25">-&gt;<pos:position pos:line="59" pos:column="30"/></operator><name pos:line="59" pos:column="27">counter<pos:position pos:line="59" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="60" pos:column="17">free<pos:position pos:line="60" pos:column="21"/></name> <argument_list pos:line="60" pos:column="22">(<argument><expr><name><name pos:line="60" pos:column="23">vc<pos:position pos:line="60" pos:column="25"/></name><operator pos:line="60" pos:column="25">-&gt;<pos:position pos:line="60" pos:column="30"/></operator><name pos:line="60" pos:column="27">gauge<pos:position pos:line="60" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="61" pos:column="17">free<pos:position pos:line="61" pos:column="21"/></name> <argument_list pos:line="61" pos:column="22">(<argument><expr><name pos:line="61" pos:column="23">vc<pos:position pos:line="61" pos:column="25"/></name></expr></argument>)<pos:position pos:line="61" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="27"/></expr_stmt>
		<return pos:line="62" pos:column="17">return <expr><operator pos:line="62" pos:column="24">(<pos:position pos:line="62" pos:column="25"/></operator><operator pos:line="62" pos:column="25">-<pos:position pos:line="62" pos:column="26"/></operator><literal type="number" pos:line="62" pos:column="26">1<pos:position pos:line="62" pos:column="27"/></literal><operator pos:line="62" pos:column="27">)<pos:position pos:line="62" pos:column="28"/></operator></expr>;<pos:position pos:line="62" pos:column="29"/></return>
	}<pos:position pos:line="63" pos:column="10"/></block></then></if>

	<for pos:line="65" pos:column="9">for <control pos:line="65" pos:column="13">(<init><expr><name pos:line="65" pos:column="14">i<pos:position pos:line="65" pos:column="15"/></name> <operator pos:line="65" pos:column="16">=<pos:position pos:line="65" pos:column="17"/></operator> <literal type="number" pos:line="65" pos:column="18">0<pos:position pos:line="65" pos:column="19"/></literal></expr>;<pos:position pos:line="65" pos:column="20"/></init> <condition><expr><name pos:line="65" pos:column="21">i<pos:position pos:line="65" pos:column="22"/></name> <operator pos:line="65" pos:column="23">&lt;<pos:position pos:line="65" pos:column="27"/></operator> <name><name pos:line="65" pos:column="25">ds<pos:position pos:line="65" pos:column="27"/></name><operator pos:line="65" pos:column="27">-&gt;<pos:position pos:line="65" pos:column="32"/></operator><name pos:line="65" pos:column="29">ds_num<pos:position pos:line="65" pos:column="35"/></name></name></expr>;<pos:position pos:line="65" pos:column="36"/></condition> <incr><expr><name pos:line="65" pos:column="37">i<pos:position pos:line="65" pos:column="38"/></name><operator pos:line="65" pos:column="38">++<pos:position pos:line="65" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="65" pos:column="41"/></control>
	<block pos:line="66" pos:column="9">{
		<if pos:line="67" pos:column="17">if <condition pos:line="67" pos:column="20">(<expr><name><name pos:line="67" pos:column="21">ds<pos:position pos:line="67" pos:column="23"/></name><operator pos:line="67" pos:column="23">-&gt;<pos:position pos:line="67" pos:column="28"/></operator><name pos:line="67" pos:column="25">ds<pos:position pos:line="67" pos:column="27"/></name><index pos:line="67" pos:column="27">[<expr><name pos:line="67" pos:column="28">i<pos:position pos:line="67" pos:column="29"/></name></expr>]<pos:position pos:line="67" pos:column="30"/></index></name><operator pos:line="67" pos:column="30">.<pos:position pos:line="67" pos:column="31"/></operator><name pos:line="67" pos:column="31">type<pos:position pos:line="67" pos:column="35"/></name> <operator pos:line="67" pos:column="36">==<pos:position pos:line="67" pos:column="38"/></operator> <name pos:line="67" pos:column="39">DS_TYPE_COUNTER<pos:position pos:line="67" pos:column="54"/></name></expr>)<pos:position pos:line="67" pos:column="55"/></condition><then pos:line="67" pos:column="55">
		<block pos:line="68" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="69" pos:column="25">vc<pos:position pos:line="69" pos:column="27"/></name><operator pos:line="69" pos:column="27">-&gt;<pos:position pos:line="69" pos:column="32"/></operator><name pos:line="69" pos:column="29">gauge<pos:position pos:line="69" pos:column="34"/></name><index pos:line="69" pos:column="34">[<expr><name pos:line="69" pos:column="35">i<pos:position pos:line="69" pos:column="36"/></name></expr>]<pos:position pos:line="69" pos:column="37"/></index></name> <operator pos:line="69" pos:column="38">=<pos:position pos:line="69" pos:column="39"/></operator> <literal type="number" pos:line="69" pos:column="40">0.0<pos:position pos:line="69" pos:column="43"/></literal></expr>;<pos:position pos:line="69" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="70" pos:column="25">vc<pos:position pos:line="70" pos:column="27"/></name><operator pos:line="70" pos:column="27">-&gt;<pos:position pos:line="70" pos:column="32"/></operator><name pos:line="70" pos:column="29">counter<pos:position pos:line="70" pos:column="36"/></name><index pos:line="70" pos:column="36">[<expr><name pos:line="70" pos:column="37">i<pos:position pos:line="70" pos:column="38"/></name></expr>]<pos:position pos:line="70" pos:column="39"/></index></name> <operator pos:line="70" pos:column="40">=<pos:position pos:line="70" pos:column="41"/></operator> <name><name pos:line="70" pos:column="42">vl<pos:position pos:line="70" pos:column="44"/></name><operator pos:line="70" pos:column="44">-&gt;<pos:position pos:line="70" pos:column="49"/></operator><name pos:line="70" pos:column="46">values<pos:position pos:line="70" pos:column="52"/></name><index pos:line="70" pos:column="52">[<expr><name pos:line="70" pos:column="53">i<pos:position pos:line="70" pos:column="54"/></name></expr>]<pos:position pos:line="70" pos:column="55"/></index></name><operator pos:line="70" pos:column="55">.<pos:position pos:line="70" pos:column="56"/></operator><name pos:line="70" pos:column="56">counter<pos:position pos:line="70" pos:column="63"/></name></expr>;<pos:position pos:line="70" pos:column="64"/></expr_stmt>
		}<pos:position pos:line="71" pos:column="18"/></block></then>
		<elseif pos:line="72" pos:column="17">else <if pos:line="72" pos:column="22">if <condition pos:line="72" pos:column="25">(<expr><name><name pos:line="72" pos:column="26">ds<pos:position pos:line="72" pos:column="28"/></name><operator pos:line="72" pos:column="28">-&gt;<pos:position pos:line="72" pos:column="33"/></operator><name pos:line="72" pos:column="30">ds<pos:position pos:line="72" pos:column="32"/></name><index pos:line="72" pos:column="32">[<expr><name pos:line="72" pos:column="33">i<pos:position pos:line="72" pos:column="34"/></name></expr>]<pos:position pos:line="72" pos:column="35"/></index></name><operator pos:line="72" pos:column="35">.<pos:position pos:line="72" pos:column="36"/></operator><name pos:line="72" pos:column="36">type<pos:position pos:line="72" pos:column="40"/></name> <operator pos:line="72" pos:column="41">==<pos:position pos:line="72" pos:column="43"/></operator> <name pos:line="72" pos:column="44">DS_TYPE_GAUGE<pos:position pos:line="72" pos:column="57"/></name></expr>)<pos:position pos:line="72" pos:column="58"/></condition><then pos:line="72" pos:column="58">
		<block pos:line="73" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="74" pos:column="25">vc<pos:position pos:line="74" pos:column="27"/></name><operator pos:line="74" pos:column="27">-&gt;<pos:position pos:line="74" pos:column="32"/></operator><name pos:line="74" pos:column="29">gauge<pos:position pos:line="74" pos:column="34"/></name><index pos:line="74" pos:column="34">[<expr><name pos:line="74" pos:column="35">i<pos:position pos:line="74" pos:column="36"/></name></expr>]<pos:position pos:line="74" pos:column="37"/></index></name> <operator pos:line="74" pos:column="38">=<pos:position pos:line="74" pos:column="39"/></operator> <name><name pos:line="74" pos:column="40">vl<pos:position pos:line="74" pos:column="42"/></name><operator pos:line="74" pos:column="42">-&gt;<pos:position pos:line="74" pos:column="47"/></operator><name pos:line="74" pos:column="44">values<pos:position pos:line="74" pos:column="50"/></name><index pos:line="74" pos:column="50">[<expr><name pos:line="74" pos:column="51">i<pos:position pos:line="74" pos:column="52"/></name></expr>]<pos:position pos:line="74" pos:column="53"/></index></name><operator pos:line="74" pos:column="53">.<pos:position pos:line="74" pos:column="54"/></operator><name pos:line="74" pos:column="54">gauge<pos:position pos:line="74" pos:column="59"/></name></expr>;<pos:position pos:line="74" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="75" pos:column="25">vc<pos:position pos:line="75" pos:column="27"/></name><operator pos:line="75" pos:column="27">-&gt;<pos:position pos:line="75" pos:column="32"/></operator><name pos:line="75" pos:column="29">counter<pos:position pos:line="75" pos:column="36"/></name><index pos:line="75" pos:column="36">[<expr><name pos:line="75" pos:column="37">i<pos:position pos:line="75" pos:column="38"/></name></expr>]<pos:position pos:line="75" pos:column="39"/></index></name> <operator pos:line="75" pos:column="40">=<pos:position pos:line="75" pos:column="41"/></operator> <literal type="number" pos:line="75" pos:column="42">0<pos:position pos:line="75" pos:column="43"/></literal></expr>;<pos:position pos:line="75" pos:column="44"/></expr_stmt>
		}<pos:position pos:line="76" pos:column="18"/></block></then></if></elseif>
		<else pos:line="77" pos:column="17">else
		<block pos:line="78" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="79" pos:column="25">vc<pos:position pos:line="79" pos:column="27"/></name><operator pos:line="79" pos:column="27">-&gt;<pos:position pos:line="79" pos:column="32"/></operator><name pos:line="79" pos:column="29">gauge<pos:position pos:line="79" pos:column="34"/></name><index pos:line="79" pos:column="34">[<expr><name pos:line="79" pos:column="35">i<pos:position pos:line="79" pos:column="36"/></name></expr>]<pos:position pos:line="79" pos:column="37"/></index></name> <operator pos:line="79" pos:column="38">=<pos:position pos:line="79" pos:column="39"/></operator> <literal type="number" pos:line="79" pos:column="40">0.0<pos:position pos:line="79" pos:column="43"/></literal></expr>;<pos:position pos:line="79" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="80" pos:column="25">vc<pos:position pos:line="80" pos:column="27"/></name><operator pos:line="80" pos:column="27">-&gt;<pos:position pos:line="80" pos:column="32"/></operator><name pos:line="80" pos:column="29">counter<pos:position pos:line="80" pos:column="36"/></name><index pos:line="80" pos:column="36">[<expr><name pos:line="80" pos:column="37">i<pos:position pos:line="80" pos:column="38"/></name></expr>]<pos:position pos:line="80" pos:column="39"/></index></name> <operator pos:line="80" pos:column="40">=<pos:position pos:line="80" pos:column="41"/></operator> <literal type="number" pos:line="80" pos:column="42">0<pos:position pos:line="80" pos:column="43"/></literal></expr>;<pos:position pos:line="80" pos:column="44"/></expr_stmt>
		}<pos:position pos:line="81" pos:column="18"/></block></else></if>
	}<pos:position pos:line="82" pos:column="10"/></block></for>
	<expr_stmt><expr><name><name pos:line="83" pos:column="9">vc<pos:position pos:line="83" pos:column="11"/></name><operator pos:line="83" pos:column="11">-&gt;<pos:position pos:line="83" pos:column="16"/></operator><name pos:line="83" pos:column="13">values_num<pos:position pos:line="83" pos:column="23"/></name></name> <operator pos:line="83" pos:column="24">=<pos:position pos:line="83" pos:column="25"/></operator> <name><name pos:line="83" pos:column="26">ds<pos:position pos:line="83" pos:column="28"/></name><operator pos:line="83" pos:column="28">-&gt;<pos:position pos:line="83" pos:column="33"/></operator><name pos:line="83" pos:column="30">ds_num<pos:position pos:line="83" pos:column="36"/></name></name></expr>;<pos:position pos:line="83" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="84" pos:column="9">vc<pos:position pos:line="84" pos:column="11"/></name><operator pos:line="84" pos:column="11">-&gt;<pos:position pos:line="84" pos:column="16"/></operator><name pos:line="84" pos:column="13">ds<pos:position pos:line="84" pos:column="15"/></name></name> <operator pos:line="84" pos:column="16">=<pos:position pos:line="84" pos:column="17"/></operator> <name pos:line="84" pos:column="18">ds<pos:position pos:line="84" pos:column="20"/></name></expr>;<pos:position pos:line="84" pos:column="21"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="86" pos:column="9">vc<pos:position pos:line="86" pos:column="11"/></name><operator pos:line="86" pos:column="11">-&gt;<pos:position pos:line="86" pos:column="16"/></operator><name pos:line="86" pos:column="13">next<pos:position pos:line="86" pos:column="17"/></name></name> <operator pos:line="86" pos:column="18">=<pos:position pos:line="86" pos:column="19"/></operator> <name pos:line="86" pos:column="20">cache_head<pos:position pos:line="86" pos:column="30"/></name></expr>;<pos:position pos:line="86" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name pos:line="87" pos:column="9">cache_head<pos:position pos:line="87" pos:column="19"/></name> <operator pos:line="87" pos:column="20">=<pos:position pos:line="87" pos:column="21"/></operator> <name pos:line="87" pos:column="22">vc<pos:position pos:line="87" pos:column="24"/></name></expr>;<pos:position pos:line="87" pos:column="25"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="89" pos:column="9">vc<pos:position pos:line="89" pos:column="11"/></name><operator pos:line="89" pos:column="11">-&gt;<pos:position pos:line="89" pos:column="16"/></operator><name pos:line="89" pos:column="13">time<pos:position pos:line="89" pos:column="17"/></name></name> <operator pos:line="89" pos:column="18">=<pos:position pos:line="89" pos:column="19"/></operator> <name><name pos:line="89" pos:column="20">vl<pos:position pos:line="89" pos:column="22"/></name><operator pos:line="89" pos:column="22">-&gt;<pos:position pos:line="89" pos:column="27"/></operator><name pos:line="89" pos:column="24">time<pos:position pos:line="89" pos:column="28"/></name></name></expr>;<pos:position pos:line="89" pos:column="29"/></expr_stmt>
	<if pos:line="90" pos:column="9">if <condition pos:line="90" pos:column="12">(<expr><operator pos:line="90" pos:column="13">(<pos:position pos:line="90" pos:column="14"/></operator><name><name pos:line="90" pos:column="14">vc<pos:position pos:line="90" pos:column="16"/></name><operator pos:line="90" pos:column="16">-&gt;<pos:position pos:line="90" pos:column="21"/></operator><name pos:line="90" pos:column="18">time<pos:position pos:line="90" pos:column="22"/></name></name> <operator pos:line="90" pos:column="23">&lt;<pos:position pos:line="90" pos:column="27"/></operator> <name pos:line="90" pos:column="25">cache_oldest<pos:position pos:line="90" pos:column="37"/></name><operator pos:line="90" pos:column="37">)<pos:position pos:line="90" pos:column="38"/></operator> <operator pos:line="90" pos:column="39">||<pos:position pos:line="90" pos:column="41"/></operator> <operator pos:line="90" pos:column="42">(<pos:position pos:line="90" pos:column="43"/></operator><operator pos:line="90" pos:column="43">-<pos:position pos:line="90" pos:column="44"/></operator><literal type="number" pos:line="90" pos:column="44">1<pos:position pos:line="90" pos:column="45"/></literal> <operator pos:line="90" pos:column="46">==<pos:position pos:line="90" pos:column="48"/></operator> <name pos:line="90" pos:column="49">cache_oldest<pos:position pos:line="90" pos:column="61"/></name><operator pos:line="90" pos:column="61">)<pos:position pos:line="90" pos:column="62"/></operator></expr>)<pos:position pos:line="90" pos:column="63"/></condition><then pos:line="90" pos:column="63">
		<block type="pseudo"><expr_stmt><expr><name pos:line="91" pos:column="17">cache_oldest<pos:position pos:line="91" pos:column="29"/></name> <operator pos:line="91" pos:column="30">=<pos:position pos:line="91" pos:column="31"/></operator> <name><name pos:line="91" pos:column="32">vc<pos:position pos:line="91" pos:column="34"/></name><operator pos:line="91" pos:column="34">-&gt;<pos:position pos:line="91" pos:column="39"/></operator><name pos:line="91" pos:column="36">time<pos:position pos:line="91" pos:column="40"/></name></name></expr>;<pos:position pos:line="91" pos:column="41"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="93" pos:column="9">pthread_mutex_unlock<pos:position pos:line="93" pos:column="29"/></name> <argument_list pos:line="93" pos:column="30">(<argument><expr><operator pos:line="93" pos:column="31">&amp;<pos:position pos:line="93" pos:column="36"/></operator><name pos:line="93" pos:column="32">cache_lock<pos:position pos:line="93" pos:column="42"/></name></expr></argument>)<pos:position pos:line="93" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="44"/></expr_stmt>
	<return pos:line="94" pos:column="9">return <expr><operator pos:line="94" pos:column="16">(<pos:position pos:line="94" pos:column="17"/></operator><literal type="number" pos:line="94" pos:column="17">0<pos:position pos:line="94" pos:column="18"/></literal><operator pos:line="94" pos:column="18">)<pos:position pos:line="94" pos:column="19"/></operator></expr>;<pos:position pos:line="94" pos:column="20"/></return>
}<pos:position pos:line="95" pos:column="2"/></block></function></unit>

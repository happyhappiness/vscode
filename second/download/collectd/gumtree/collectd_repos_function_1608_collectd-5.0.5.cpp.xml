<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1608_collectd-5.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">PyObject<pos:position pos:line="1" pos:column="16"/></name> <modifier pos:line="1" pos:column="17">*<pos:position pos:line="1" pos:column="18"/></modifier></type><name pos:line="1" pos:column="18">cpy_register_generic<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">cpy_callback_t<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier><modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">list_head<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="67">PyObject<pos:position pos:line="1" pos:column="75"/></name> <modifier pos:line="1" pos:column="76">*<pos:position pos:line="1" pos:column="77"/></modifier></type><name pos:line="1" pos:column="77">args<pos:position pos:line="1" pos:column="81"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="83">PyObject<pos:position pos:line="1" pos:column="91"/></name> <modifier pos:line="1" pos:column="92">*<pos:position pos:line="1" pos:column="93"/></modifier></type><name pos:line="1" pos:column="93">kwds<pos:position pos:line="1" pos:column="97"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="98"/></parameter_list> <block pos:line="1" pos:column="99">{
	<decl_stmt><decl><type><name pos:line="2" pos:column="9">char<pos:position pos:line="2" pos:column="13"/></name></type> <name><name pos:line="2" pos:column="14">buf<pos:position pos:line="2" pos:column="17"/></name><index pos:line="2" pos:column="17">[<expr><literal type="number" pos:line="2" pos:column="18">512<pos:position pos:line="2" pos:column="21"/></literal></expr>]<pos:position pos:line="2" pos:column="22"/></index></name></decl>;<pos:position pos:line="2" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">cpy_callback_t<pos:position pos:line="3" pos:column="23"/></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">c<pos:position pos:line="3" pos:column="26"/></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">name<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><name pos:line="4" pos:column="22">NULL<pos:position pos:line="4" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">PyObject<pos:position pos:line="5" pos:column="17"/></name> <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type><name pos:line="5" pos:column="19">callback<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><name pos:line="5" pos:column="30">NULL<pos:position pos:line="5" pos:column="34"/></name></expr></init></decl>, <modifier pos:line="5" pos:column="36">*<pos:position pos:line="5" pos:column="37"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="37">data<pos:position pos:line="5" pos:column="41"/></name> <init pos:line="5" pos:column="42">= <expr><name pos:line="5" pos:column="44">NULL<pos:position pos:line="5" pos:column="48"/></name></expr></init></decl>, <modifier pos:line="5" pos:column="50">*<pos:position pos:line="5" pos:column="51"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="51">mod<pos:position pos:line="5" pos:column="54"/></name> <init pos:line="5" pos:column="55">= <expr><name pos:line="5" pos:column="57">NULL<pos:position pos:line="5" pos:column="61"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="62"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="6" pos:column="9">static<pos:position pos:line="6" pos:column="15"/></specifier> <type><name pos:line="6" pos:column="16">char<pos:position pos:line="6" pos:column="20"/></name> <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name><name pos:line="6" pos:column="22">kwlist<pos:position pos:line="6" pos:column="28"/></name><index pos:line="6" pos:column="28">[]<pos:position pos:line="6" pos:column="30"/></index></name> <init pos:line="6" pos:column="31">= <expr><block pos:line="6" pos:column="33">{<expr><literal type="string" pos:line="6" pos:column="34">"callback"<pos:position pos:line="6" pos:column="44"/></literal></expr>, <expr><literal type="string" pos:line="6" pos:column="46">"data"<pos:position pos:line="6" pos:column="52"/></literal></expr>, <expr><literal type="string" pos:line="6" pos:column="54">"name"<pos:position pos:line="6" pos:column="60"/></literal></expr>, <expr><name pos:line="6" pos:column="62">NULL<pos:position pos:line="6" pos:column="66"/></name></expr>}<pos:position pos:line="6" pos:column="67"/></block></expr></init></decl>;<pos:position pos:line="6" pos:column="68"/></decl_stmt>
	
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">PyArg_ParseTupleAndKeywords<pos:position pos:line="8" pos:column="40"/></name><argument_list pos:line="8" pos:column="40">(<argument><expr><name pos:line="8" pos:column="41">args<pos:position pos:line="8" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="47">kwds<pos:position pos:line="8" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="53">"O|Oet"<pos:position pos:line="8" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="62">kwlist<pos:position pos:line="8" pos:column="68"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="70">&amp;<pos:position pos:line="8" pos:column="75"/></operator><name pos:line="8" pos:column="71">callback<pos:position pos:line="8" pos:column="79"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="81">&amp;<pos:position pos:line="8" pos:column="86"/></operator><name pos:line="8" pos:column="82">data<pos:position pos:line="8" pos:column="86"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="88">NULL<pos:position pos:line="8" pos:column="92"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="94">&amp;<pos:position pos:line="8" pos:column="99"/></operator><name pos:line="8" pos:column="95">name<pos:position pos:line="8" pos:column="99"/></name></expr></argument>)<pos:position pos:line="8" pos:column="100"/></argument_list></call> <operator pos:line="8" pos:column="101">==<pos:position pos:line="8" pos:column="103"/></operator> <literal type="number" pos:line="8" pos:column="104">0<pos:position pos:line="8" pos:column="105"/></literal></expr>)<pos:position pos:line="8" pos:column="106"/></condition><then pos:line="8" pos:column="106"> <block type="pseudo"><return pos:line="8" pos:column="107">return <expr><name pos:line="8" pos:column="114">NULL<pos:position pos:line="8" pos:column="118"/></name></expr>;<pos:position pos:line="8" pos:column="119"/></return></block></then></if>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><call><name pos:line="9" pos:column="13">PyCallable_Check<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><name pos:line="9" pos:column="30">callback<pos:position pos:line="9" pos:column="38"/></name></expr></argument>)<pos:position pos:line="9" pos:column="39"/></argument_list></call> <operator pos:line="9" pos:column="40">==<pos:position pos:line="9" pos:column="42"/></operator> <literal type="number" pos:line="9" pos:column="43">0<pos:position pos:line="9" pos:column="44"/></literal></expr>)<pos:position pos:line="9" pos:column="45"/></condition><then pos:line="9" pos:column="45"> <block pos:line="9" pos:column="46">{
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">PyMem_Free<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">(<argument><expr><name pos:line="10" pos:column="28">name<pos:position pos:line="10" pos:column="32"/></name></expr></argument>)<pos:position pos:line="10" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">PyErr_SetString<pos:position pos:line="11" pos:column="32"/></name><argument_list pos:line="11" pos:column="32">(<argument><expr><name pos:line="11" pos:column="33">PyExc_TypeError<pos:position pos:line="11" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="50">"callback needs a be a callable object."<pos:position pos:line="11" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="92"/></expr_stmt>
		<return pos:line="12" pos:column="17">return <expr><name pos:line="12" pos:column="24">NULL<pos:position pos:line="12" pos:column="28"/></name></expr>;<pos:position pos:line="12" pos:column="29"/></return>
	}<pos:position pos:line="13" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">cpy_build_name<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">(<argument><expr><name pos:line="14" pos:column="24">buf<pos:position pos:line="14" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="29">sizeof<argument_list pos:line="14" pos:column="35">(<argument><expr><name pos:line="14" pos:column="36">buf<pos:position pos:line="14" pos:column="39"/></name></expr></argument>)<pos:position pos:line="14" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="14" pos:column="42">callback<pos:position pos:line="14" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="52">name<pos:position pos:line="14" pos:column="56"/></name></expr></argument>)<pos:position pos:line="14" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="58"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="16" pos:column="9">Py_INCREF<pos:position pos:line="16" pos:column="18"/></name><argument_list pos:line="16" pos:column="18">(<argument><expr><name pos:line="16" pos:column="19">callback<pos:position pos:line="16" pos:column="27"/></name></expr></argument>)<pos:position pos:line="16" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="17" pos:column="9">Py_XINCREF<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">(<argument><expr><name pos:line="17" pos:column="20">data<pos:position pos:line="17" pos:column="24"/></name></expr></argument>)<pos:position pos:line="17" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name pos:line="18" pos:column="9">c<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">=<pos:position pos:line="18" pos:column="12"/></operator> <call><name pos:line="18" pos:column="13">malloc<pos:position pos:line="18" pos:column="19"/></name><argument_list pos:line="18" pos:column="19">(<argument><expr><sizeof pos:line="18" pos:column="20">sizeof<argument_list pos:line="18" pos:column="26">(<argument><expr><operator pos:line="18" pos:column="27">*<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="28">c<pos:position pos:line="18" pos:column="29"/></name></expr></argument>)<pos:position pos:line="18" pos:column="30"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="19" pos:column="9">c<pos:position pos:line="19" pos:column="10"/></name><operator pos:line="19" pos:column="10">-&gt;<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="12">name<pos:position pos:line="19" pos:column="16"/></name></name> <operator pos:line="19" pos:column="17">=<pos:position pos:line="19" pos:column="18"/></operator> <call><name pos:line="19" pos:column="19">strdup<pos:position pos:line="19" pos:column="25"/></name><argument_list pos:line="19" pos:column="25">(<argument><expr><name pos:line="19" pos:column="26">buf<pos:position pos:line="19" pos:column="29"/></name></expr></argument>)<pos:position pos:line="19" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="20" pos:column="9">c<pos:position pos:line="20" pos:column="10"/></name><operator pos:line="20" pos:column="10">-&gt;<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="12">callback<pos:position pos:line="20" pos:column="20"/></name></name> <operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator> <name pos:line="20" pos:column="23">callback<pos:position pos:line="20" pos:column="31"/></name></expr>;<pos:position pos:line="20" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="21" pos:column="9">c<pos:position pos:line="21" pos:column="10"/></name><operator pos:line="21" pos:column="10">-&gt;<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="12">data<pos:position pos:line="21" pos:column="16"/></name></name> <operator pos:line="21" pos:column="17">=<pos:position pos:line="21" pos:column="18"/></operator> <name pos:line="21" pos:column="19">data<pos:position pos:line="21" pos:column="23"/></name></expr>;<pos:position pos:line="21" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="22" pos:column="9">c<pos:position pos:line="22" pos:column="10"/></name><operator pos:line="22" pos:column="10">-&gt;<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="12">next<pos:position pos:line="22" pos:column="16"/></name></name> <operator pos:line="22" pos:column="17">=<pos:position pos:line="22" pos:column="18"/></operator> <operator pos:line="22" pos:column="19">*<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="20">list_head<pos:position pos:line="22" pos:column="29"/></name></expr>;<pos:position pos:line="22" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="23" pos:column="9">*<pos:position pos:line="23" pos:column="10"/></operator><name pos:line="23" pos:column="10">list_head<pos:position pos:line="23" pos:column="19"/></name> <operator pos:line="23" pos:column="20">=<pos:position pos:line="23" pos:column="21"/></operator> <name pos:line="23" pos:column="22">c<pos:position pos:line="23" pos:column="23"/></name></expr>;<pos:position pos:line="23" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">Py_XDECREF<pos:position pos:line="24" pos:column="19"/></name><argument_list pos:line="24" pos:column="19">(<argument><expr><name pos:line="24" pos:column="20">mod<pos:position pos:line="24" pos:column="23"/></name></expr></argument>)<pos:position pos:line="24" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">PyMem_Free<pos:position pos:line="25" pos:column="19"/></name><argument_list pos:line="25" pos:column="19">(<argument><expr><name pos:line="25" pos:column="20">name<pos:position pos:line="25" pos:column="24"/></name></expr></argument>)<pos:position pos:line="25" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="26"/></expr_stmt>
	<return pos:line="26" pos:column="9">return <expr><call><name pos:line="26" pos:column="16">cpy_string_to_unicode_or_bytes<pos:position pos:line="26" pos:column="46"/></name><argument_list pos:line="26" pos:column="46">(<argument><expr><name pos:line="26" pos:column="47">buf<pos:position pos:line="26" pos:column="50"/></name></expr></argument>)<pos:position pos:line="26" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="52"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_125_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">dpdk_stats_resolve_cnt_type<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">char<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">cnt_type<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">size_t<pos:position pos:line="1" pos:column="63"/></name></type> <name pos:line="1" pos:column="64">cnt_type_len<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>,
                                        <parameter><decl><type><specifier pos:line="2" pos:column="41">const<pos:position pos:line="2" pos:column="46"/></specifier> <name pos:line="2" pos:column="47">char<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">cnt_name<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list> <block pos:line="2" pos:column="63">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">type_end<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
  <expr_stmt><expr><name pos:line="4" pos:column="3">type_end<pos:position pos:line="4" pos:column="11"/></name> <operator pos:line="4" pos:column="12">=<pos:position pos:line="4" pos:column="13"/></operator> <call><name pos:line="4" pos:column="14">strrchr<pos:position pos:line="4" pos:column="21"/></name><argument_list pos:line="4" pos:column="21">(<argument><expr><name pos:line="4" pos:column="22">cnt_name<pos:position pos:line="4" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="4" pos:column="32">'_'<pos:position pos:line="4" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="37"/></expr_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><operator pos:line="6" pos:column="7">(<pos:position pos:line="6" pos:column="8"/></operator><name pos:line="6" pos:column="8">type_end<pos:position pos:line="6" pos:column="16"/></name> <operator pos:line="6" pos:column="17">!=<pos:position pos:line="6" pos:column="19"/></operator> <name pos:line="6" pos:column="20">NULL<pos:position pos:line="6" pos:column="24"/></name><operator pos:line="6" pos:column="24">)<pos:position pos:line="6" pos:column="25"/></operator> <operator pos:line="6" pos:column="26">&amp;&amp;<pos:position pos:line="6" pos:column="36"/></operator> <operator pos:line="6" pos:column="29">(<pos:position pos:line="6" pos:column="30"/></operator><call><name pos:line="6" pos:column="30">strncmp<pos:position pos:line="6" pos:column="37"/></name><argument_list pos:line="6" pos:column="37">(<argument><expr><name pos:line="6" pos:column="38">cnt_name<pos:position pos:line="6" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="48">"rx_"<pos:position pos:line="6" pos:column="53"/></literal></expr></argument>, <argument><expr><call><name pos:line="6" pos:column="55">strlen<pos:position pos:line="6" pos:column="61"/></name><argument_list pos:line="6" pos:column="61">(<argument><expr><literal type="string" pos:line="6" pos:column="62">"rx_"<pos:position pos:line="6" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="69"/></argument_list></call> <operator pos:line="6" pos:column="70">==<pos:position pos:line="6" pos:column="72"/></operator> <literal type="number" pos:line="6" pos:column="73">0<pos:position pos:line="6" pos:column="74"/></literal><operator pos:line="6" pos:column="74">)<pos:position pos:line="6" pos:column="75"/></operator></expr>)<pos:position pos:line="6" pos:column="76"/></condition><then pos:line="6" pos:column="76"> <block pos:line="6" pos:column="77">{
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call><name pos:line="7" pos:column="9">strstr<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><name pos:line="7" pos:column="16">type_end<pos:position pos:line="7" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="26">"bytes"<pos:position pos:line="7" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="34"/></argument_list></call> <operator pos:line="7" pos:column="35">!=<pos:position pos:line="7" pos:column="37"/></operator> <name pos:line="7" pos:column="38">NULL<pos:position pos:line="7" pos:column="42"/></name></expr>)<pos:position pos:line="7" pos:column="43"/></condition><then pos:line="7" pos:column="43"> <block pos:line="7" pos:column="44">{
      <expr_stmt><expr><call><name pos:line="8" pos:column="7">sstrncpy<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><name pos:line="8" pos:column="16">cnt_type<pos:position pos:line="8" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="26">"if_rx_octets"<pos:position pos:line="8" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="42">cnt_type_len<pos:position pos:line="8" pos:column="54"/></name></expr></argument>)<pos:position pos:line="8" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="56"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></then> <elseif pos:line="9" pos:column="7">else <if pos:line="9" pos:column="12">if <condition pos:line="9" pos:column="15">(<expr><call><name pos:line="9" pos:column="16">strstr<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><name pos:line="9" pos:column="23">type_end<pos:position pos:line="9" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="33">"error"<pos:position pos:line="9" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="41"/></argument_list></call> <operator pos:line="9" pos:column="42">!=<pos:position pos:line="9" pos:column="44"/></operator> <name pos:line="9" pos:column="45">NULL<pos:position pos:line="9" pos:column="49"/></name></expr>)<pos:position pos:line="9" pos:column="50"/></condition><then pos:line="9" pos:column="50"> <block pos:line="9" pos:column="51">{
      <expr_stmt><expr><call><name pos:line="10" pos:column="7">sstrncpy<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><name pos:line="10" pos:column="16">cnt_type<pos:position pos:line="10" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="26">"if_rx_errors"<pos:position pos:line="10" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="42">cnt_type_len<pos:position pos:line="10" pos:column="54"/></name></expr></argument>)<pos:position pos:line="10" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="56"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if></elseif> <elseif pos:line="11" pos:column="7">else <if pos:line="11" pos:column="12">if <condition pos:line="11" pos:column="15">(<expr><call><name pos:line="11" pos:column="16">strstr<pos:position pos:line="11" pos:column="22"/></name><argument_list pos:line="11" pos:column="22">(<argument><expr><name pos:line="11" pos:column="23">type_end<pos:position pos:line="11" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="33">"dropped"<pos:position pos:line="11" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="43"/></argument_list></call> <operator pos:line="11" pos:column="44">!=<pos:position pos:line="11" pos:column="46"/></operator> <name pos:line="11" pos:column="47">NULL<pos:position pos:line="11" pos:column="51"/></name></expr>)<pos:position pos:line="11" pos:column="52"/></condition><then pos:line="11" pos:column="52"> <block pos:line="11" pos:column="53">{
      <expr_stmt><expr><call><name pos:line="12" pos:column="7">sstrncpy<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><name pos:line="12" pos:column="16">cnt_type<pos:position pos:line="12" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="26">"if_rx_dropped"<pos:position pos:line="12" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="43">cnt_type_len<pos:position pos:line="12" pos:column="55"/></name></expr></argument>)<pos:position pos:line="12" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if></elseif> <elseif pos:line="13" pos:column="7">else <if pos:line="13" pos:column="12">if <condition pos:line="13" pos:column="15">(<expr><call><name pos:line="13" pos:column="16">strstr<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><name pos:line="13" pos:column="23">type_end<pos:position pos:line="13" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="33">"packets"<pos:position pos:line="13" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="43"/></argument_list></call> <operator pos:line="13" pos:column="44">!=<pos:position pos:line="13" pos:column="46"/></operator> <name pos:line="13" pos:column="47">NULL<pos:position pos:line="13" pos:column="51"/></name></expr>)<pos:position pos:line="13" pos:column="52"/></condition><then pos:line="13" pos:column="52"> <block pos:line="13" pos:column="53">{
      <expr_stmt><expr><call><name pos:line="14" pos:column="7">sstrncpy<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><name pos:line="14" pos:column="16">cnt_type<pos:position pos:line="14" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="26">"if_rx_packets"<pos:position pos:line="14" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="43">cnt_type_len<pos:position pos:line="14" pos:column="55"/></name></expr></argument>)<pos:position pos:line="14" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if></elseif> <elseif pos:line="15" pos:column="7">else <if pos:line="15" pos:column="12">if <condition pos:line="15" pos:column="15">(<expr><call><name pos:line="15" pos:column="16">strstr<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><name pos:line="15" pos:column="23">type_end<pos:position pos:line="15" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="33">"_placement"<pos:position pos:line="15" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="46"/></argument_list></call> <operator pos:line="15" pos:column="47">!=<pos:position pos:line="15" pos:column="49"/></operator> <name pos:line="15" pos:column="50">NULL<pos:position pos:line="15" pos:column="54"/></name></expr>)<pos:position pos:line="15" pos:column="55"/></condition><then pos:line="15" pos:column="55"> <block pos:line="15" pos:column="56">{
      <expr_stmt><expr><call><name pos:line="16" pos:column="7">sstrncpy<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><name pos:line="16" pos:column="16">cnt_type<pos:position pos:line="16" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="26">"if_rx_errors"<pos:position pos:line="16" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="42">cnt_type_len<pos:position pos:line="16" pos:column="54"/></name></expr></argument>)<pos:position pos:line="16" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="56"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if></elseif> <elseif pos:line="17" pos:column="7">else <if pos:line="17" pos:column="12">if <condition pos:line="17" pos:column="15">(<expr><call><name pos:line="17" pos:column="16">strstr<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><name pos:line="17" pos:column="23">type_end<pos:position pos:line="17" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="33">"_buff"<pos:position pos:line="17" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="41"/></argument_list></call> <operator pos:line="17" pos:column="42">!=<pos:position pos:line="17" pos:column="44"/></operator> <name pos:line="17" pos:column="45">NULL<pos:position pos:line="17" pos:column="49"/></name></expr>)<pos:position pos:line="17" pos:column="50"/></condition><then pos:line="17" pos:column="50"> <block pos:line="17" pos:column="51">{
      <expr_stmt><expr><call><name pos:line="18" pos:column="7">sstrncpy<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><name pos:line="18" pos:column="16">cnt_type<pos:position pos:line="18" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="26">"if_rx_errors"<pos:position pos:line="18" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="42">cnt_type_len<pos:position pos:line="18" pos:column="54"/></name></expr></argument>)<pos:position pos:line="18" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="56"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if></elseif> <else pos:line="19" pos:column="7">else <block pos:line="19" pos:column="12">{
      <comment type="block" pos:line="20" pos:column="7">/* Does not fit obvious type: use a more generic one */</comment>
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">sstrncpy<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><name pos:line="21" pos:column="16">cnt_type<pos:position pos:line="21" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="26">"derive"<pos:position pos:line="21" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="36">cnt_type_len<pos:position pos:line="21" pos:column="48"/></name></expr></argument>)<pos:position pos:line="21" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></else></if>

  }<pos:position pos:line="24" pos:column="4"/></block></then> <elseif pos:line="24" pos:column="5">else <if pos:line="24" pos:column="10">if <condition pos:line="24" pos:column="13">(<expr><operator pos:line="24" pos:column="14">(<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="15">type_end<pos:position pos:line="24" pos:column="23"/></name> <operator pos:line="24" pos:column="24">!=<pos:position pos:line="24" pos:column="26"/></operator> <name pos:line="24" pos:column="27">NULL<pos:position pos:line="24" pos:column="31"/></name><operator pos:line="24" pos:column="31">)<pos:position pos:line="24" pos:column="32"/></operator> <operator pos:line="24" pos:column="33">&amp;&amp;<pos:position pos:line="24" pos:column="43"/></operator>
             <operator pos:line="25" pos:column="14">(<pos:position pos:line="25" pos:column="15"/></operator><call><name pos:line="25" pos:column="15">strncmp<pos:position pos:line="25" pos:column="22"/></name><argument_list pos:line="25" pos:column="22">(<argument><expr><name pos:line="25" pos:column="23">cnt_name<pos:position pos:line="25" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="33">"tx_"<pos:position pos:line="25" pos:column="38"/></literal></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="40">strlen<pos:position pos:line="25" pos:column="46"/></name><argument_list pos:line="25" pos:column="46">(<argument><expr><literal type="string" pos:line="25" pos:column="47">"tx_"<pos:position pos:line="25" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="54"/></argument_list></call><operator pos:line="25" pos:column="54">)<pos:position pos:line="25" pos:column="55"/></operator> <operator pos:line="25" pos:column="56">==<pos:position pos:line="25" pos:column="58"/></operator> <literal type="number" pos:line="25" pos:column="59">0<pos:position pos:line="25" pos:column="60"/></literal></expr>)<pos:position pos:line="25" pos:column="61"/></condition><then pos:line="25" pos:column="61"> <block pos:line="25" pos:column="62">{
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><call><name pos:line="26" pos:column="9">strstr<pos:position pos:line="26" pos:column="15"/></name><argument_list pos:line="26" pos:column="15">(<argument><expr><name pos:line="26" pos:column="16">type_end<pos:position pos:line="26" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="26">"bytes"<pos:position pos:line="26" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="34"/></argument_list></call> <operator pos:line="26" pos:column="35">!=<pos:position pos:line="26" pos:column="37"/></operator> <name pos:line="26" pos:column="38">NULL<pos:position pos:line="26" pos:column="42"/></name></expr>)<pos:position pos:line="26" pos:column="43"/></condition><then pos:line="26" pos:column="43"> <block pos:line="26" pos:column="44">{
      <expr_stmt><expr><call><name pos:line="27" pos:column="7">sstrncpy<pos:position pos:line="27" pos:column="15"/></name><argument_list pos:line="27" pos:column="15">(<argument><expr><name pos:line="27" pos:column="16">cnt_type<pos:position pos:line="27" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="26">"if_tx_octets"<pos:position pos:line="27" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="42">cnt_type_len<pos:position pos:line="27" pos:column="54"/></name></expr></argument>)<pos:position pos:line="27" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="56"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></then> <elseif pos:line="28" pos:column="7">else <if pos:line="28" pos:column="12">if <condition pos:line="28" pos:column="15">(<expr><call><name pos:line="28" pos:column="16">strstr<pos:position pos:line="28" pos:column="22"/></name><argument_list pos:line="28" pos:column="22">(<argument><expr><name pos:line="28" pos:column="23">type_end<pos:position pos:line="28" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="33">"error"<pos:position pos:line="28" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="41"/></argument_list></call> <operator pos:line="28" pos:column="42">!=<pos:position pos:line="28" pos:column="44"/></operator> <name pos:line="28" pos:column="45">NULL<pos:position pos:line="28" pos:column="49"/></name></expr>)<pos:position pos:line="28" pos:column="50"/></condition><then pos:line="28" pos:column="50"> <block pos:line="28" pos:column="51">{
      <expr_stmt><expr><call><name pos:line="29" pos:column="7">sstrncpy<pos:position pos:line="29" pos:column="15"/></name><argument_list pos:line="29" pos:column="15">(<argument><expr><name pos:line="29" pos:column="16">cnt_type<pos:position pos:line="29" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="26">"if_tx_errors"<pos:position pos:line="29" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="42">cnt_type_len<pos:position pos:line="29" pos:column="54"/></name></expr></argument>)<pos:position pos:line="29" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="56"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if></elseif> <elseif pos:line="30" pos:column="7">else <if pos:line="30" pos:column="12">if <condition pos:line="30" pos:column="15">(<expr><call><name pos:line="30" pos:column="16">strstr<pos:position pos:line="30" pos:column="22"/></name><argument_list pos:line="30" pos:column="22">(<argument><expr><name pos:line="30" pos:column="23">type_end<pos:position pos:line="30" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="33">"dropped"<pos:position pos:line="30" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="43"/></argument_list></call> <operator pos:line="30" pos:column="44">!=<pos:position pos:line="30" pos:column="46"/></operator> <name pos:line="30" pos:column="47">NULL<pos:position pos:line="30" pos:column="51"/></name></expr>)<pos:position pos:line="30" pos:column="52"/></condition><then pos:line="30" pos:column="52"> <block pos:line="30" pos:column="53">{
      <expr_stmt><expr><call><name pos:line="31" pos:column="7">sstrncpy<pos:position pos:line="31" pos:column="15"/></name><argument_list pos:line="31" pos:column="15">(<argument><expr><name pos:line="31" pos:column="16">cnt_type<pos:position pos:line="31" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="26">"if_tx_dropped"<pos:position pos:line="31" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="43">cnt_type_len<pos:position pos:line="31" pos:column="55"/></name></expr></argument>)<pos:position pos:line="31" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if></elseif> <elseif pos:line="32" pos:column="7">else <if pos:line="32" pos:column="12">if <condition pos:line="32" pos:column="15">(<expr><call><name pos:line="32" pos:column="16">strstr<pos:position pos:line="32" pos:column="22"/></name><argument_list pos:line="32" pos:column="22">(<argument><expr><name pos:line="32" pos:column="23">type_end<pos:position pos:line="32" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="33">"packets"<pos:position pos:line="32" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="43"/></argument_list></call> <operator pos:line="32" pos:column="44">!=<pos:position pos:line="32" pos:column="46"/></operator> <name pos:line="32" pos:column="47">NULL<pos:position pos:line="32" pos:column="51"/></name></expr>)<pos:position pos:line="32" pos:column="52"/></condition><then pos:line="32" pos:column="52"> <block pos:line="32" pos:column="53">{
      <expr_stmt><expr><call><name pos:line="33" pos:column="7">sstrncpy<pos:position pos:line="33" pos:column="15"/></name><argument_list pos:line="33" pos:column="15">(<argument><expr><name pos:line="33" pos:column="16">cnt_type<pos:position pos:line="33" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="26">"if_tx_packets"<pos:position pos:line="33" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="43">cnt_type_len<pos:position pos:line="33" pos:column="55"/></name></expr></argument>)<pos:position pos:line="33" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if></elseif> <else pos:line="34" pos:column="7">else <block pos:line="34" pos:column="12">{
      <comment type="block" pos:line="35" pos:column="7">/* Does not fit obvious type: use a more generic one */</comment>
      <expr_stmt><expr><call><name pos:line="36" pos:column="7">sstrncpy<pos:position pos:line="36" pos:column="15"/></name><argument_list pos:line="36" pos:column="15">(<argument><expr><name pos:line="36" pos:column="16">cnt_type<pos:position pos:line="36" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="26">"derive"<pos:position pos:line="36" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="36">cnt_type_len<pos:position pos:line="36" pos:column="48"/></name></expr></argument>)<pos:position pos:line="36" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></else></if>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if></elseif> <elseif pos:line="38" pos:column="5">else <if pos:line="38" pos:column="10">if <condition pos:line="38" pos:column="13">(<expr><operator pos:line="38" pos:column="14">(<pos:position pos:line="38" pos:column="15"/></operator><name pos:line="38" pos:column="15">type_end<pos:position pos:line="38" pos:column="23"/></name> <operator pos:line="38" pos:column="24">!=<pos:position pos:line="38" pos:column="26"/></operator> <name pos:line="38" pos:column="27">NULL<pos:position pos:line="38" pos:column="31"/></name><operator pos:line="38" pos:column="31">)<pos:position pos:line="38" pos:column="32"/></operator> <operator pos:line="38" pos:column="33">&amp;&amp;<pos:position pos:line="38" pos:column="43"/></operator>
             <operator pos:line="39" pos:column="14">(<pos:position pos:line="39" pos:column="15"/></operator><call><name pos:line="39" pos:column="15">strncmp<pos:position pos:line="39" pos:column="22"/></name><argument_list pos:line="39" pos:column="22">(<argument><expr><name pos:line="39" pos:column="23">cnt_name<pos:position pos:line="39" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="33">"flow_"<pos:position pos:line="39" pos:column="40"/></literal></expr></argument>, <argument><expr><call><name pos:line="39" pos:column="42">strlen<pos:position pos:line="39" pos:column="48"/></name><argument_list pos:line="39" pos:column="48">(<argument><expr><literal type="string" pos:line="39" pos:column="49">"flow_"<pos:position pos:line="39" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="58"/></argument_list></call><operator pos:line="39" pos:column="58">)<pos:position pos:line="39" pos:column="59"/></operator> <operator pos:line="39" pos:column="60">==<pos:position pos:line="39" pos:column="62"/></operator> <literal type="number" pos:line="39" pos:column="63">0<pos:position pos:line="39" pos:column="64"/></literal></expr>)<pos:position pos:line="39" pos:column="65"/></condition><then pos:line="39" pos:column="65"> <block pos:line="39" pos:column="66">{

    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><call><name pos:line="41" pos:column="9">strstr<pos:position pos:line="41" pos:column="15"/></name><argument_list pos:line="41" pos:column="15">(<argument><expr><name pos:line="41" pos:column="16">type_end<pos:position pos:line="41" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="26">"_filters"<pos:position pos:line="41" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="37"/></argument_list></call> <operator pos:line="41" pos:column="38">!=<pos:position pos:line="41" pos:column="40"/></operator> <name pos:line="41" pos:column="41">NULL<pos:position pos:line="41" pos:column="45"/></name></expr>)<pos:position pos:line="41" pos:column="46"/></condition><then pos:line="41" pos:column="46"> <block pos:line="41" pos:column="47">{
      <expr_stmt><expr><call><name pos:line="42" pos:column="7">sstrncpy<pos:position pos:line="42" pos:column="15"/></name><argument_list pos:line="42" pos:column="15">(<argument><expr><name pos:line="42" pos:column="16">cnt_type<pos:position pos:line="42" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="26">"operations"<pos:position pos:line="42" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="40">cnt_type_len<pos:position pos:line="42" pos:column="52"/></name></expr></argument>)<pos:position pos:line="42" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block></then> <elseif pos:line="43" pos:column="7">else <if pos:line="43" pos:column="12">if <condition pos:line="43" pos:column="15">(<expr><call><name pos:line="43" pos:column="16">strstr<pos:position pos:line="43" pos:column="22"/></name><argument_list pos:line="43" pos:column="22">(<argument><expr><name pos:line="43" pos:column="23">type_end<pos:position pos:line="43" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="33">"error"<pos:position pos:line="43" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="41"/></argument_list></call> <operator pos:line="43" pos:column="42">!=<pos:position pos:line="43" pos:column="44"/></operator> <name pos:line="43" pos:column="45">NULL<pos:position pos:line="43" pos:column="49"/></name></expr>)<pos:position pos:line="43" pos:column="50"/></condition><then pos:line="43" pos:column="50">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="7">sstrncpy<pos:position pos:line="44" pos:column="15"/></name><argument_list pos:line="44" pos:column="15">(<argument><expr><name pos:line="44" pos:column="16">cnt_type<pos:position pos:line="44" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="26">"errors"<pos:position pos:line="44" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="36">cnt_type_len<pos:position pos:line="44" pos:column="48"/></name></expr></argument>)<pos:position pos:line="44" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="50"/></expr_stmt></block></then></if></elseif></if>

  }<pos:position pos:line="46" pos:column="4"/></block></then></if></elseif> <elseif pos:line="46" pos:column="5">else <if pos:line="46" pos:column="10">if <condition pos:line="46" pos:column="13">(<expr><operator pos:line="46" pos:column="14">(<pos:position pos:line="46" pos:column="15"/></operator><name pos:line="46" pos:column="15">type_end<pos:position pos:line="46" pos:column="23"/></name> <operator pos:line="46" pos:column="24">!=<pos:position pos:line="46" pos:column="26"/></operator> <name pos:line="46" pos:column="27">NULL<pos:position pos:line="46" pos:column="31"/></name><operator pos:line="46" pos:column="31">)<pos:position pos:line="46" pos:column="32"/></operator> <operator pos:line="46" pos:column="33">&amp;&amp;<pos:position pos:line="46" pos:column="43"/></operator>
             <operator pos:line="47" pos:column="14">(<pos:position pos:line="47" pos:column="15"/></operator><call><name pos:line="47" pos:column="15">strncmp<pos:position pos:line="47" pos:column="22"/></name><argument_list pos:line="47" pos:column="22">(<argument><expr><name pos:line="47" pos:column="23">cnt_name<pos:position pos:line="47" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="33">"mac_"<pos:position pos:line="47" pos:column="39"/></literal></expr></argument>, <argument><expr><call><name pos:line="47" pos:column="41">strlen<pos:position pos:line="47" pos:column="47"/></name><argument_list pos:line="47" pos:column="47">(<argument><expr><literal type="string" pos:line="47" pos:column="48">"mac_"<pos:position pos:line="47" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="56"/></argument_list></call><operator pos:line="47" pos:column="56">)<pos:position pos:line="47" pos:column="57"/></operator> <operator pos:line="47" pos:column="58">==<pos:position pos:line="47" pos:column="60"/></operator> <literal type="number" pos:line="47" pos:column="61">0<pos:position pos:line="47" pos:column="62"/></literal></expr>)<pos:position pos:line="47" pos:column="63"/></condition><then pos:line="47" pos:column="63"> <block pos:line="47" pos:column="64">{
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><call><name pos:line="48" pos:column="9">strstr<pos:position pos:line="48" pos:column="15"/></name><argument_list pos:line="48" pos:column="15">(<argument><expr><name pos:line="48" pos:column="16">type_end<pos:position pos:line="48" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="26">"error"<pos:position pos:line="48" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="34"/></argument_list></call> <operator pos:line="48" pos:column="35">!=<pos:position pos:line="48" pos:column="37"/></operator> <name pos:line="48" pos:column="38">NULL<pos:position pos:line="48" pos:column="42"/></name></expr>)<pos:position pos:line="48" pos:column="43"/></condition><then pos:line="48" pos:column="43"> <block pos:line="48" pos:column="44">{
      <expr_stmt><expr><call><name pos:line="49" pos:column="7">sstrncpy<pos:position pos:line="49" pos:column="15"/></name><argument_list pos:line="49" pos:column="15">(<argument><expr><name pos:line="49" pos:column="16">cnt_type<pos:position pos:line="49" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="26">"errors"<pos:position pos:line="49" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="36">cnt_type_len<pos:position pos:line="49" pos:column="48"/></name></expr></argument>)<pos:position pos:line="49" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>
  }<pos:position pos:line="51" pos:column="4"/></block></then></if></elseif> <else pos:line="51" pos:column="5">else <block pos:line="51" pos:column="10">{
    <comment type="block" pos:line="52" pos:column="5">/* Does not fit obvious type, or strrchr error:
     *   use a more generic type */</comment>
    <expr_stmt><expr><call><name pos:line="54" pos:column="5">sstrncpy<pos:position pos:line="54" pos:column="13"/></name><argument_list pos:line="54" pos:column="13">(<argument><expr><name pos:line="54" pos:column="14">cnt_type<pos:position pos:line="54" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="24">"derive"<pos:position pos:line="54" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="34">cnt_type_len<pos:position pos:line="54" pos:column="46"/></name></expr></argument>)<pos:position pos:line="54" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="48"/></expr_stmt>
  }<pos:position pos:line="55" pos:column="4"/></block></else></if>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

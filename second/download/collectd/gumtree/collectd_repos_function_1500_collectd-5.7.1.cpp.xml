<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1500_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">unsigned<pos:position pos:line="1" pos:column="16"/></name> <name pos:line="1" pos:column="17">char<pos:position pos:line="1" pos:column="21"/></name></type> <name pos:line="1" pos:column="22">fromhex<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name></type> <name pos:line="1" pos:column="35">c<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="37"/></parameter_list> <block pos:line="1" pos:column="38">{
  <if pos:line="2" pos:column="3">if <condition pos:line="2" pos:column="6">(<expr><call><name pos:line="2" pos:column="7">isdigit<pos:position pos:line="2" pos:column="14"/></name><argument_list pos:line="2" pos:column="14">(<argument><expr><operator pos:line="2" pos:column="15">(<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">int<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">)<pos:position pos:line="2" pos:column="20"/></operator><name pos:line="2" pos:column="20">c<pos:position pos:line="2" pos:column="21"/></name></expr></argument>)<pos:position pos:line="2" pos:column="22"/></argument_list></call></expr>)<pos:position pos:line="2" pos:column="23"/></condition><then pos:line="2" pos:column="23"> <block pos:line="2" pos:column="24">{
    <return pos:line="3" pos:column="5">return <expr><operator pos:line="3" pos:column="12">(<pos:position pos:line="3" pos:column="13"/></operator><name pos:line="3" pos:column="13">c<pos:position pos:line="3" pos:column="14"/></name> <operator pos:line="3" pos:column="15">-<pos:position pos:line="3" pos:column="16"/></operator> <literal type="char" pos:line="3" pos:column="17">'0'<pos:position pos:line="3" pos:column="20"/></literal><operator pos:line="3" pos:column="20">)<pos:position pos:line="3" pos:column="21"/></operator></expr>;<pos:position pos:line="3" pos:column="22"/></return>
  }<pos:position pos:line="4" pos:column="4"/></block></then> <elseif pos:line="4" pos:column="5">else <if pos:line="4" pos:column="10">if <condition pos:line="4" pos:column="13">(<expr><call><name pos:line="4" pos:column="14">islower<pos:position pos:line="4" pos:column="21"/></name><argument_list pos:line="4" pos:column="21">(<argument><expr><operator pos:line="4" pos:column="22">(<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="23">int<pos:position pos:line="4" pos:column="26"/></name><operator pos:line="4" pos:column="26">)<pos:position pos:line="4" pos:column="27"/></operator><name pos:line="4" pos:column="27">c<pos:position pos:line="4" pos:column="28"/></name></expr></argument>)<pos:position pos:line="4" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="30"/></condition><then pos:line="4" pos:column="30"> <block pos:line="4" pos:column="31">{
    <return pos:line="5" pos:column="5">return <expr><operator pos:line="5" pos:column="12">(<pos:position pos:line="5" pos:column="13"/></operator><name pos:line="5" pos:column="13">c<pos:position pos:line="5" pos:column="14"/></name> <operator pos:line="5" pos:column="15">-<pos:position pos:line="5" pos:column="16"/></operator> <literal type="char" pos:line="5" pos:column="17">'a'<pos:position pos:line="5" pos:column="20"/></literal> <operator pos:line="5" pos:column="21">+<pos:position pos:line="5" pos:column="22"/></operator> <literal type="number" pos:line="5" pos:column="23">10<pos:position pos:line="5" pos:column="25"/></literal><operator pos:line="5" pos:column="25">)<pos:position pos:line="5" pos:column="26"/></operator></expr>;<pos:position pos:line="5" pos:column="27"/></return>
  }<pos:position pos:line="6" pos:column="4"/></block></then></if></elseif> <else pos:line="6" pos:column="5">else <block pos:line="6" pos:column="10">{
    <return pos:line="7" pos:column="5">return <expr><operator pos:line="7" pos:column="12">(<pos:position pos:line="7" pos:column="13"/></operator><name pos:line="7" pos:column="13">c<pos:position pos:line="7" pos:column="14"/></name> <operator pos:line="7" pos:column="15">-<pos:position pos:line="7" pos:column="16"/></operator> <literal type="char" pos:line="7" pos:column="17">'A'<pos:position pos:line="7" pos:column="20"/></literal> <operator pos:line="7" pos:column="21">+<pos:position pos:line="7" pos:column="22"/></operator> <literal type="number" pos:line="7" pos:column="23">10<pos:position pos:line="7" pos:column="25"/></literal><operator pos:line="7" pos:column="25">)<pos:position pos:line="7" pos:column="26"/></operator></expr>;<pos:position pos:line="7" pos:column="27"/></return>
  }<pos:position pos:line="8" pos:column="4"/></block></else></if>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

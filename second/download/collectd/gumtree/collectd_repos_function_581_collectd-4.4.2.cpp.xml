<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_581_collectd-4.4.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>
<name pos:line="2" pos:column="1">cu_mount_checkoption<pos:position pos:line="2" pos:column="21"/></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name pos:line="2" pos:column="22">char<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type><name pos:line="2" pos:column="28">line<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="34">char<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">keyword<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">int<pos:position pos:line="2" pos:column="52"/></name></type> <name pos:line="2" pos:column="53">full<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">line2<pos:position pos:line="4" pos:column="20"/></name></decl>, <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="23">l2<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">l<pos:position pos:line="5" pos:column="14"/></name> <init pos:line="5" pos:column="15">= <expr><call><name pos:line="5" pos:column="17">strlen<pos:position pos:line="5" pos:column="23"/></name><argument_list pos:line="5" pos:column="23">(<argument><expr><name pos:line="5" pos:column="24">keyword<pos:position pos:line="5" pos:column="31"/></name></expr></argument>)<pos:position pos:line="5" pos:column="32"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">p1<pos:position pos:line="6" pos:column="17"/></name></decl>, <modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="20">p2<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>

	<if pos:line="8" pos:column="9">if<condition pos:line="8" pos:column="11">(<expr><name pos:line="8" pos:column="12">line<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">==<pos:position pos:line="8" pos:column="19"/></operator> <name pos:line="8" pos:column="20">NULL<pos:position pos:line="8" pos:column="24"/></name> <operator pos:line="8" pos:column="25">||<pos:position pos:line="8" pos:column="27"/></operator> <name pos:line="8" pos:column="28">keyword<pos:position pos:line="8" pos:column="35"/></name> <operator pos:line="8" pos:column="36">==<pos:position pos:line="8" pos:column="38"/></operator> <name pos:line="8" pos:column="39">NULL<pos:position pos:line="8" pos:column="43"/></name></expr>)<pos:position pos:line="8" pos:column="44"/></condition><then pos:line="8" pos:column="44"> <block pos:line="8" pos:column="45">{
		<return pos:line="9" pos:column="17">return <expr><name pos:line="9" pos:column="24">NULL<pos:position pos:line="9" pos:column="28"/></name></expr>;<pos:position pos:line="9" pos:column="29"/></return>
	}<pos:position pos:line="10" pos:column="10"/></block></then></if>
	<if pos:line="11" pos:column="9">if<condition pos:line="11" pos:column="11">(<expr><name pos:line="11" pos:column="12">full<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">!=<pos:position pos:line="11" pos:column="19"/></operator> <literal type="number" pos:line="11" pos:column="20">0<pos:position pos:line="11" pos:column="21"/></literal></expr>)<pos:position pos:line="11" pos:column="22"/></condition><then pos:line="11" pos:column="22"> <block pos:line="11" pos:column="23">{
		<expr_stmt><expr><name pos:line="12" pos:column="17">full<pos:position pos:line="12" pos:column="21"/></name> <operator pos:line="12" pos:column="22">=<pos:position pos:line="12" pos:column="23"/></operator> <literal type="number" pos:line="12" pos:column="24">1<pos:position pos:line="12" pos:column="25"/></literal></expr>;<pos:position pos:line="12" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="13" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="15" pos:column="9">line2<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">=<pos:position pos:line="15" pos:column="16"/></operator> <call><name pos:line="15" pos:column="17">sstrdup<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">(<argument><expr><name pos:line="15" pos:column="25">line<pos:position pos:line="15" pos:column="29"/></name></expr></argument>)<pos:position pos:line="15" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name pos:line="16" pos:column="9">l2<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <name pos:line="16" pos:column="14">line2<pos:position pos:line="16" pos:column="19"/></name></expr>;<pos:position pos:line="16" pos:column="20"/></expr_stmt>
	<while pos:line="17" pos:column="9">while<condition pos:line="17" pos:column="14">(<expr><operator pos:line="17" pos:column="15">*<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="16">l2<pos:position pos:line="17" pos:column="18"/></name> <operator pos:line="17" pos:column="19">!=<pos:position pos:line="17" pos:column="21"/></operator> <literal type="char" pos:line="17" pos:column="22">'\0'<pos:position pos:line="17" pos:column="26"/></literal></expr>)<pos:position pos:line="17" pos:column="27"/></condition> <block pos:line="17" pos:column="28">{
		<if pos:line="18" pos:column="17">if<condition pos:line="18" pos:column="19">(<expr><operator pos:line="18" pos:column="20">*<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="21">l2<pos:position pos:line="18" pos:column="23"/></name> <operator pos:line="18" pos:column="24">==<pos:position pos:line="18" pos:column="26"/></operator> <literal type="char" pos:line="18" pos:column="27">','<pos:position pos:line="18" pos:column="30"/></literal></expr>)<pos:position pos:line="18" pos:column="31"/></condition><then pos:line="18" pos:column="31"> <block pos:line="18" pos:column="32">{
			<expr_stmt><expr><operator pos:line="19" pos:column="25">*<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="26">l2<pos:position pos:line="19" pos:column="28"/></name> <operator pos:line="19" pos:column="29">=<pos:position pos:line="19" pos:column="30"/></operator> <literal type="char" pos:line="19" pos:column="31">'\0'<pos:position pos:line="19" pos:column="35"/></literal></expr>;<pos:position pos:line="19" pos:column="36"/></expr_stmt>
		}<pos:position pos:line="20" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="21" pos:column="17">l2<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">++<pos:position pos:line="21" pos:column="21"/></operator></expr>;<pos:position pos:line="21" pos:column="22"/></expr_stmt>
	}<pos:position pos:line="22" pos:column="10"/></block></while>

	<expr_stmt><expr><name pos:line="24" pos:column="9">p1<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <name pos:line="24" pos:column="14">line<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">-<pos:position pos:line="24" pos:column="20"/></operator> <literal type="number" pos:line="24" pos:column="21">1<pos:position pos:line="24" pos:column="22"/></literal></expr>;<pos:position pos:line="24" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><name pos:line="25" pos:column="9">p2<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <call><name pos:line="25" pos:column="14">strchr<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><name pos:line="25" pos:column="21">line<pos:position pos:line="25" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="25" pos:column="27">','<pos:position pos:line="25" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="32"/></expr_stmt>
	<do pos:line="26" pos:column="9">do <block pos:line="26" pos:column="12">{
		<if pos:line="27" pos:column="17">if<condition pos:line="27" pos:column="19">(<expr><call><name pos:line="27" pos:column="20">strncmp<pos:position pos:line="27" pos:column="27"/></name><argument_list pos:line="27" pos:column="27">(<argument><expr><name pos:line="27" pos:column="28">line2<pos:position pos:line="27" pos:column="33"/></name><operator pos:line="27" pos:column="33">+<pos:position pos:line="27" pos:column="34"/></operator><operator pos:line="27" pos:column="34">(<pos:position pos:line="27" pos:column="35"/></operator><name pos:line="27" pos:column="35">p1<pos:position pos:line="27" pos:column="37"/></name><operator pos:line="27" pos:column="37">-<pos:position pos:line="27" pos:column="38"/></operator><name pos:line="27" pos:column="38">line<pos:position pos:line="27" pos:column="42"/></name><operator pos:line="27" pos:column="42">)<pos:position pos:line="27" pos:column="43"/></operator><operator pos:line="27" pos:column="43">+<pos:position pos:line="27" pos:column="44"/></operator><literal type="number" pos:line="27" pos:column="44">1<pos:position pos:line="27" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="47">keyword<pos:position pos:line="27" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="56">l<pos:position pos:line="27" pos:column="57"/></name><operator pos:line="27" pos:column="57">+<pos:position pos:line="27" pos:column="58"/></operator><name pos:line="27" pos:column="58">full<pos:position pos:line="27" pos:column="62"/></name></expr></argument>)<pos:position pos:line="27" pos:column="63"/></argument_list></call> <operator pos:line="27" pos:column="64">==<pos:position pos:line="27" pos:column="66"/></operator> <literal type="number" pos:line="27" pos:column="67">0<pos:position pos:line="27" pos:column="68"/></literal></expr>)<pos:position pos:line="27" pos:column="69"/></condition><then pos:line="27" pos:column="69"> <block pos:line="27" pos:column="70">{
			<expr_stmt><expr><call><name pos:line="28" pos:column="25">free<pos:position pos:line="28" pos:column="29"/></name><argument_list pos:line="28" pos:column="29">(<argument><expr><name pos:line="28" pos:column="30">line2<pos:position pos:line="28" pos:column="35"/></name></expr></argument>)<pos:position pos:line="28" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="37"/></expr_stmt>
			<return pos:line="29" pos:column="25">return <expr><name pos:line="29" pos:column="32">p1<pos:position pos:line="29" pos:column="34"/></name><operator pos:line="29" pos:column="34">+<pos:position pos:line="29" pos:column="35"/></operator><literal type="number" pos:line="29" pos:column="35">1<pos:position pos:line="29" pos:column="36"/></literal></expr>;<pos:position pos:line="29" pos:column="37"/></return>
		}<pos:position pos:line="30" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="31" pos:column="17">p1<pos:position pos:line="31" pos:column="19"/></name> <operator pos:line="31" pos:column="20">=<pos:position pos:line="31" pos:column="21"/></operator> <name pos:line="31" pos:column="22">p2<pos:position pos:line="31" pos:column="24"/></name></expr>;<pos:position pos:line="31" pos:column="25"/></expr_stmt>
		<if pos:line="32" pos:column="17">if<condition pos:line="32" pos:column="19">(<expr><name pos:line="32" pos:column="20">p1<pos:position pos:line="32" pos:column="22"/></name> <operator pos:line="32" pos:column="23">!=<pos:position pos:line="32" pos:column="25"/></operator> <name pos:line="32" pos:column="26">NULL<pos:position pos:line="32" pos:column="30"/></name></expr>)<pos:position pos:line="32" pos:column="31"/></condition><then pos:line="32" pos:column="31"> <block pos:line="32" pos:column="32">{
			<expr_stmt><expr><name pos:line="33" pos:column="25">p2<pos:position pos:line="33" pos:column="27"/></name> <operator pos:line="33" pos:column="28">=<pos:position pos:line="33" pos:column="29"/></operator> <call><name pos:line="33" pos:column="30">strchr<pos:position pos:line="33" pos:column="36"/></name><argument_list pos:line="33" pos:column="36">(<argument><expr><name pos:line="33" pos:column="37">p1<pos:position pos:line="33" pos:column="39"/></name><operator pos:line="33" pos:column="39">+<pos:position pos:line="33" pos:column="40"/></operator><literal type="number" pos:line="33" pos:column="40">1<pos:position pos:line="33" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="33" pos:column="43">','<pos:position pos:line="33" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="48"/></expr_stmt>
		}<pos:position pos:line="34" pos:column="18"/></block></then></if>
	}<pos:position pos:line="35" pos:column="10"/></block> while<condition pos:line="35" pos:column="16">(<expr><name pos:line="35" pos:column="17">p1<pos:position pos:line="35" pos:column="19"/></name> <operator pos:line="35" pos:column="20">!=<pos:position pos:line="35" pos:column="22"/></operator> <name pos:line="35" pos:column="23">NULL<pos:position pos:line="35" pos:column="27"/></name></expr>)<pos:position pos:line="35" pos:column="28"/></condition>;<pos:position pos:line="35" pos:column="29"/></do>

	<expr_stmt><expr><call><name pos:line="37" pos:column="9">free<pos:position pos:line="37" pos:column="13"/></name><argument_list pos:line="37" pos:column="13">(<argument><expr><name pos:line="37" pos:column="14">line2<pos:position pos:line="37" pos:column="19"/></name></expr></argument>)<pos:position pos:line="37" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="21"/></expr_stmt>
	<return pos:line="38" pos:column="9">return <expr><name pos:line="38" pos:column="16">NULL<pos:position pos:line="38" pos:column="20"/></name></expr>;<pos:position pos:line="38" pos:column="21"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

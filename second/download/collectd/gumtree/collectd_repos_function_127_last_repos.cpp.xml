<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_127_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dpdk_stats_counters_dispatch<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">dpdk_helper_ctx_t<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">phc<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list> <block pos:line="1" pos:column="65">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">dpdk_stats_ctx_t<pos:position pos:line="2" pos:column="19"/></name> <modifier pos:line="2" pos:column="20">*<pos:position pos:line="2" pos:column="21"/></modifier></type><name pos:line="2" pos:column="21">ctx<pos:position pos:line="2" pos:column="24"/></name> <init pos:line="2" pos:column="25">= <expr><call><name pos:line="2" pos:column="27">DPDK_STATS_CTX_GET<pos:position pos:line="2" pos:column="45"/></name><argument_list pos:line="2" pos:column="45">(<argument><expr><name pos:line="2" pos:column="46">phc<pos:position pos:line="2" pos:column="49"/></name></expr></argument>)<pos:position pos:line="2" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="2" pos:column="51"/></decl_stmt>

  <comment type="block" pos:line="4" pos:column="3">/* dispatch stats values to collectd */</comment>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">DEBUG<pos:position pos:line="6" pos:column="8"/></name><argument_list pos:line="6" pos:column="8">(<argument><expr><literal type="string" pos:line="6" pos:column="9">"%s:%s:%d ports=%u"<pos:position pos:line="6" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="30">DPDK_STATS_PLUGIN<pos:position pos:line="6" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="49">__FUNCTION__<pos:position pos:line="6" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="63">__LINE__<pos:position pos:line="6" pos:column="71"/></name></expr></argument>,
        <argument><expr><name><name pos:line="7" pos:column="9">ctx<pos:position pos:line="7" pos:column="12"/></name><operator pos:line="7" pos:column="12">-&gt;<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="14">ports_count<pos:position pos:line="7" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="27"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">stats_count<pos:position pos:line="9" pos:column="18"/></name> <init pos:line="9" pos:column="19">= <expr><literal type="number" pos:line="9" pos:column="21">0<pos:position pos:line="9" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>

  <for pos:line="11" pos:column="3">for <control pos:line="11" pos:column="7">(<init><decl><type><name pos:line="11" pos:column="8">int<pos:position pos:line="11" pos:column="11"/></name></type> <name pos:line="11" pos:column="12">i<pos:position pos:line="11" pos:column="13"/></name> <init pos:line="11" pos:column="14">= <expr><literal type="number" pos:line="11" pos:column="16">0<pos:position pos:line="11" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="18"/></init> <condition><expr><name pos:line="11" pos:column="19">i<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">&lt;<pos:position pos:line="11" pos:column="25"/></operator> <name><name pos:line="11" pos:column="23">ctx<pos:position pos:line="11" pos:column="26"/></name><operator pos:line="11" pos:column="26">-&gt;<pos:position pos:line="11" pos:column="31"/></operator><name pos:line="11" pos:column="28">ports_count<pos:position pos:line="11" pos:column="39"/></name></name></expr>;<pos:position pos:line="11" pos:column="40"/></condition> <incr><expr><name pos:line="11" pos:column="41">i<pos:position pos:line="11" pos:column="42"/></name><operator pos:line="11" pos:column="42">++<pos:position pos:line="11" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="45"/></control> <block pos:line="11" pos:column="46">{
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">!<pos:position pos:line="12" pos:column="10"/></operator><operator pos:line="12" pos:column="10">(<pos:position pos:line="12" pos:column="11"/></operator><name><name pos:line="12" pos:column="11">ctx<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">-&gt;<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="16">config<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">.<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="23">enabled_port_mask<pos:position pos:line="12" pos:column="40"/></name></name> <operator pos:line="12" pos:column="41">&amp;<pos:position pos:line="12" pos:column="46"/></operator> <operator pos:line="12" pos:column="43">(<pos:position pos:line="12" pos:column="44"/></operator><literal type="number" pos:line="12" pos:column="44">1<pos:position pos:line="12" pos:column="45"/></literal> <operator pos:line="12" pos:column="46">&lt;&lt;<pos:position pos:line="12" pos:column="54"/></operator> <name pos:line="12" pos:column="49">i<pos:position pos:line="12" pos:column="50"/></name><operator pos:line="12" pos:column="50">)<pos:position pos:line="12" pos:column="51"/></operator><operator pos:line="12" pos:column="51">)<pos:position pos:line="12" pos:column="52"/></operator></expr>)<pos:position pos:line="12" pos:column="53"/></condition><then pos:line="12" pos:column="53">
      <block type="pseudo"><continue pos:line="13" pos:column="7">continue;<pos:position pos:line="13" pos:column="16"/></continue></block></then></if>

    <decl_stmt><decl><type><name pos:line="15" pos:column="5">char<pos:position pos:line="15" pos:column="9"/></name></type> <name><name pos:line="15" pos:column="10">dev_name<pos:position pos:line="15" pos:column="18"/></name><index pos:line="15" pos:column="18">[<expr><literal type="number" pos:line="15" pos:column="19">64<pos:position pos:line="15" pos:column="21"/></literal></expr>]<pos:position pos:line="15" pos:column="22"/></index></name></decl>;<pos:position pos:line="15" pos:column="23"/></decl_stmt>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name><name pos:line="16" pos:column="9">ctx<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">-&gt;<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="14">config<pos:position pos:line="16" pos:column="20"/></name><operator pos:line="16" pos:column="20">.<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="21">port_name<pos:position pos:line="16" pos:column="30"/></name><index pos:line="16" pos:column="30">[<expr><name pos:line="16" pos:column="31">i<pos:position pos:line="16" pos:column="32"/></name></expr>]<pos:position pos:line="16" pos:column="33"/></index><index pos:line="16" pos:column="33">[<expr><literal type="number" pos:line="16" pos:column="34">0<pos:position pos:line="16" pos:column="35"/></literal></expr>]<pos:position pos:line="16" pos:column="36"/></index></name> <operator pos:line="16" pos:column="37">!=<pos:position pos:line="16" pos:column="39"/></operator> <literal type="number" pos:line="16" pos:column="40">0<pos:position pos:line="16" pos:column="41"/></literal></expr>)<pos:position pos:line="16" pos:column="42"/></condition><then pos:line="16" pos:column="42"> <block pos:line="16" pos:column="43">{
      <expr_stmt><expr><call><name pos:line="17" pos:column="7">snprintf<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><name pos:line="17" pos:column="16">dev_name<pos:position pos:line="17" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="26">sizeof<argument_list pos:line="17" pos:column="32">(<argument><expr><name pos:line="17" pos:column="33">dev_name<pos:position pos:line="17" pos:column="41"/></name></expr></argument>)<pos:position pos:line="17" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="44">"%s"<pos:position pos:line="17" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="50">ctx<pos:position pos:line="17" pos:column="53"/></name><operator pos:line="17" pos:column="53">-&gt;<pos:position pos:line="17" pos:column="58"/></operator><name pos:line="17" pos:column="55">config<pos:position pos:line="17" pos:column="61"/></name><operator pos:line="17" pos:column="61">.<pos:position pos:line="17" pos:column="62"/></operator><name pos:line="17" pos:column="62">port_name<pos:position pos:line="17" pos:column="71"/></name><index pos:line="17" pos:column="71">[<expr><name pos:line="17" pos:column="72">i<pos:position pos:line="17" pos:column="73"/></name></expr>]<pos:position pos:line="17" pos:column="74"/></index></name></expr></argument>)<pos:position pos:line="17" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="76"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></then> <else pos:line="18" pos:column="7">else <block pos:line="18" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="19" pos:column="7">snprintf<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><name pos:line="19" pos:column="16">dev_name<pos:position pos:line="19" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="26">sizeof<argument_list pos:line="19" pos:column="32">(<argument><expr><name pos:line="19" pos:column="33">dev_name<pos:position pos:line="19" pos:column="41"/></name></expr></argument>)<pos:position pos:line="19" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="44">"port.%d"<pos:position pos:line="19" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="55">i<pos:position pos:line="19" pos:column="56"/></name></expr></argument>)<pos:position pos:line="19" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="22" pos:column="5">DEBUG<pos:position pos:line="22" pos:column="10"/></name><argument_list pos:line="22" pos:column="10">(<argument><expr><literal type="string" pos:line="22" pos:column="11">" === Dispatch stats for port %d (name=%s; stats_count=%d)"<pos:position pos:line="22" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="72">i<pos:position pos:line="22" pos:column="73"/></name></expr></argument>,
          <argument><expr><name pos:line="23" pos:column="11">dev_name<pos:position pos:line="23" pos:column="19"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="21">ctx<pos:position pos:line="23" pos:column="24"/></name><operator pos:line="23" pos:column="24">-&gt;<pos:position pos:line="23" pos:column="29"/></operator><name pos:line="23" pos:column="26">port_stats_count<pos:position pos:line="23" pos:column="42"/></name><index pos:line="23" pos:column="42">[<expr><name pos:line="23" pos:column="43">i<pos:position pos:line="23" pos:column="44"/></name></expr>]<pos:position pos:line="23" pos:column="45"/></index></name></expr></argument>)<pos:position pos:line="23" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="47"/></expr_stmt>

    <for pos:line="25" pos:column="5">for <control pos:line="25" pos:column="9">(<init><decl><type><name pos:line="25" pos:column="10">int<pos:position pos:line="25" pos:column="13"/></name></type> <name pos:line="25" pos:column="14">j<pos:position pos:line="25" pos:column="15"/></name> <init pos:line="25" pos:column="16">= <expr><literal type="number" pos:line="25" pos:column="18">0<pos:position pos:line="25" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="25" pos:column="20"/></init> <condition><expr><name pos:line="25" pos:column="21">j<pos:position pos:line="25" pos:column="22"/></name> <operator pos:line="25" pos:column="23">&lt;<pos:position pos:line="25" pos:column="27"/></operator> <name><name pos:line="25" pos:column="25">ctx<pos:position pos:line="25" pos:column="28"/></name><operator pos:line="25" pos:column="28">-&gt;<pos:position pos:line="25" pos:column="33"/></operator><name pos:line="25" pos:column="30">port_stats_count<pos:position pos:line="25" pos:column="46"/></name><index pos:line="25" pos:column="46">[<expr><name pos:line="25" pos:column="47">i<pos:position pos:line="25" pos:column="48"/></name></expr>]<pos:position pos:line="25" pos:column="49"/></index></name></expr>;<pos:position pos:line="25" pos:column="50"/></condition> <incr><expr><name pos:line="25" pos:column="51">j<pos:position pos:line="25" pos:column="52"/></name><operator pos:line="25" pos:column="52">++<pos:position pos:line="25" pos:column="54"/></operator></expr></incr>)<pos:position pos:line="25" pos:column="55"/></control> <block pos:line="25" pos:column="56">{
      <decl_stmt><decl><type><specifier pos:line="26" pos:column="7">const<pos:position pos:line="26" pos:column="12"/></specifier> <name pos:line="26" pos:column="13">char<pos:position pos:line="26" pos:column="17"/></name> <modifier pos:line="26" pos:column="18">*<pos:position pos:line="26" pos:column="19"/></modifier></type><name pos:line="26" pos:column="19">cnt_name<pos:position pos:line="26" pos:column="27"/></name> <init pos:line="26" pos:column="28">= <expr><call><name pos:line="26" pos:column="30">DPDK_STATS_XSTAT_GET_NAME<pos:position pos:line="26" pos:column="55"/></name><argument_list pos:line="26" pos:column="55">(<argument><expr><name pos:line="26" pos:column="56">ctx<pos:position pos:line="26" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="61">stats_count<pos:position pos:line="26" pos:column="72"/></name></expr></argument>)<pos:position pos:line="26" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="26" pos:column="74"/></decl_stmt>
      <if pos:line="27" pos:column="7">if <condition pos:line="27" pos:column="10">(<expr><name pos:line="27" pos:column="11">cnt_name<pos:position pos:line="27" pos:column="19"/></name> <operator pos:line="27" pos:column="20">==<pos:position pos:line="27" pos:column="22"/></operator> <name pos:line="27" pos:column="23">NULL<pos:position pos:line="27" pos:column="27"/></name></expr>)<pos:position pos:line="27" pos:column="28"/></condition><then pos:line="27" pos:column="28">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="9">WARNING<pos:position pos:line="28" pos:column="16"/></name><argument_list pos:line="28" pos:column="16">(<argument><expr><literal type="string" pos:line="28" pos:column="17">"dpdkstat: Invalid counter name"<pos:position pos:line="28" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="51"/></expr_stmt></block></then>
      <else pos:line="29" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="9">dpdk_stats_counter_submit<pos:position pos:line="30" pos:column="34"/></name><argument_list pos:line="30" pos:column="34">(
            <argument><expr><name pos:line="31" pos:column="13">dev_name<pos:position pos:line="31" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="23">cnt_name<pos:position pos:line="31" pos:column="31"/></name></expr></argument>,
            <argument><expr><operator pos:line="32" pos:column="13">(<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="14">derive_t<pos:position pos:line="32" pos:column="22"/></name><operator pos:line="32" pos:column="22">)<pos:position pos:line="32" pos:column="23"/></operator><call><name pos:line="32" pos:column="23">DPDK_STATS_XSTAT_GET_VALUE<pos:position pos:line="32" pos:column="49"/></name><argument_list pos:line="32" pos:column="49">(<argument><expr><name pos:line="32" pos:column="50">ctx<pos:position pos:line="32" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="55">stats_count<pos:position pos:line="32" pos:column="66"/></name></expr></argument>)<pos:position pos:line="32" pos:column="67"/></argument_list></call></expr></argument>,
            <argument><expr><name><name pos:line="33" pos:column="13">ctx<pos:position pos:line="33" pos:column="16"/></name><operator pos:line="33" pos:column="16">-&gt;<pos:position pos:line="33" pos:column="21"/></operator><name pos:line="33" pos:column="18">port_read_time<pos:position pos:line="33" pos:column="32"/></name><index pos:line="33" pos:column="32">[<expr><name pos:line="33" pos:column="33">i<pos:position pos:line="33" pos:column="34"/></name></expr>]<pos:position pos:line="33" pos:column="35"/></index></name></expr></argument>)<pos:position pos:line="33" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="37"/></expr_stmt></block></else></if>
      <expr_stmt><expr><name pos:line="34" pos:column="7">stats_count<pos:position pos:line="34" pos:column="18"/></name><operator pos:line="34" pos:column="18">++<pos:position pos:line="34" pos:column="20"/></operator></expr>;<pos:position pos:line="34" pos:column="21"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="36" pos:column="7">assert<pos:position pos:line="36" pos:column="13"/></name><argument_list pos:line="36" pos:column="13">(<argument><expr><name pos:line="36" pos:column="14">stats_count<pos:position pos:line="36" pos:column="25"/></name> <operator pos:line="36" pos:column="26">&lt;=<pos:position pos:line="36" pos:column="31"/></operator> <name><name pos:line="36" pos:column="29">ctx<pos:position pos:line="36" pos:column="32"/></name><operator pos:line="36" pos:column="32">-&gt;<pos:position pos:line="36" pos:column="37"/></operator><name pos:line="36" pos:column="34">stats_count<pos:position pos:line="36" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></for>
  }<pos:position pos:line="38" pos:column="4"/></block></for>

  <return pos:line="40" pos:column="3">return <expr><literal type="number" pos:line="40" pos:column="10">0<pos:position pos:line="40" pos:column="11"/></literal></expr>;<pos:position pos:line="40" pos:column="12"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

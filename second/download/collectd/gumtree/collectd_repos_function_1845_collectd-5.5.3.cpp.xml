<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1845_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">PyObject<pos:position pos:line="1" pos:column="16"/></name> <modifier pos:line="1" pos:column="17">*<pos:position pos:line="1" pos:column="18"/></modifier></type><name pos:line="1" pos:column="18">cpy_get_dataset<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">PyObject<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">self<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">PyObject<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">args<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list> <block pos:line="1" pos:column="66">{
	<decl_stmt><decl><type><name pos:line="2" pos:column="9">int<pos:position pos:line="2" pos:column="12"/></name></type> <name pos:line="2" pos:column="13">i<pos:position pos:line="2" pos:column="14"/></name></decl>;<pos:position pos:line="2" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">name<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">data_set_t<pos:position pos:line="4" pos:column="25"/></name> <modifier pos:line="4" pos:column="26">*<pos:position pos:line="4" pos:column="27"/></modifier></type><name pos:line="4" pos:column="27">ds<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">PyObject<pos:position pos:line="5" pos:column="17"/></name> <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type><name pos:line="5" pos:column="19">list<pos:position pos:line="5" pos:column="23"/></name></decl>, <modifier pos:line="5" pos:column="25">*<pos:position pos:line="5" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="26">tuple<pos:position pos:line="5" pos:column="31"/></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><call><name pos:line="7" pos:column="13">PyArg_ParseTuple<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">(<argument><expr><name pos:line="7" pos:column="30">args<pos:position pos:line="7" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="36">"et"<pos:position pos:line="7" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="42">NULL<pos:position pos:line="7" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="48">&amp;<pos:position pos:line="7" pos:column="53"/></operator><name pos:line="7" pos:column="49">name<pos:position pos:line="7" pos:column="53"/></name></expr></argument>)<pos:position pos:line="7" pos:column="54"/></argument_list></call> <operator pos:line="7" pos:column="55">==<pos:position pos:line="7" pos:column="57"/></operator> <literal type="number" pos:line="7" pos:column="58">0<pos:position pos:line="7" pos:column="59"/></literal></expr>)<pos:position pos:line="7" pos:column="60"/></condition><then pos:line="7" pos:column="60"> <block type="pseudo"><return pos:line="7" pos:column="61">return <expr><name pos:line="7" pos:column="68">NULL<pos:position pos:line="7" pos:column="72"/></name></expr>;<pos:position pos:line="7" pos:column="73"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="8" pos:column="9">ds<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <call><name pos:line="8" pos:column="14">plugin_get_ds<pos:position pos:line="8" pos:column="27"/></name><argument_list pos:line="8" pos:column="27">(<argument><expr><name pos:line="8" pos:column="28">name<pos:position pos:line="8" pos:column="32"/></name></expr></argument>)<pos:position pos:line="8" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">PyMem_Free<pos:position pos:line="9" pos:column="19"/></name><argument_list pos:line="9" pos:column="19">(<argument><expr><name pos:line="9" pos:column="20">name<pos:position pos:line="9" pos:column="24"/></name></expr></argument>)<pos:position pos:line="9" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="26"/></expr_stmt>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">ds<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">==<pos:position pos:line="10" pos:column="18"/></operator> <name pos:line="10" pos:column="19">NULL<pos:position pos:line="10" pos:column="23"/></name></expr>)<pos:position pos:line="10" pos:column="24"/></condition><then pos:line="10" pos:column="24"> <block pos:line="10" pos:column="25">{
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">PyErr_Format<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><name pos:line="11" pos:column="30">PyExc_TypeError<pos:position pos:line="11" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="47">"Dataset %s not found"<pos:position pos:line="11" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="71">name<pos:position pos:line="11" pos:column="75"/></name></expr></argument>)<pos:position pos:line="11" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="77"/></expr_stmt>
		<return pos:line="12" pos:column="17">return <expr><name pos:line="12" pos:column="24">NULL<pos:position pos:line="12" pos:column="28"/></name></expr>;<pos:position pos:line="12" pos:column="29"/></return>
	}<pos:position pos:line="13" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="14" pos:column="9">list<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <call><name pos:line="14" pos:column="16">PyList_New<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><name><name pos:line="14" pos:column="27">ds<pos:position pos:line="14" pos:column="29"/></name><operator pos:line="14" pos:column="29">-&gt;<pos:position pos:line="14" pos:column="34"/></operator><name pos:line="14" pos:column="31">ds_num<pos:position pos:line="14" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="39"/></expr_stmt> <comment type="block" pos:line="14" pos:column="40">/* New reference. */</comment>
	<for pos:line="15" pos:column="9">for <control pos:line="15" pos:column="13">(<init><expr><name pos:line="15" pos:column="14">i<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <literal type="number" pos:line="15" pos:column="18">0<pos:position pos:line="15" pos:column="19"/></literal></expr>;<pos:position pos:line="15" pos:column="20"/></init> <condition><expr><name pos:line="15" pos:column="21">i<pos:position pos:line="15" pos:column="22"/></name> <operator pos:line="15" pos:column="23">&lt;<pos:position pos:line="15" pos:column="27"/></operator> <name><name pos:line="15" pos:column="25">ds<pos:position pos:line="15" pos:column="27"/></name><operator pos:line="15" pos:column="27">-&gt;<pos:position pos:line="15" pos:column="32"/></operator><name pos:line="15" pos:column="29">ds_num<pos:position pos:line="15" pos:column="35"/></name></name></expr>;<pos:position pos:line="15" pos:column="36"/></condition> <incr><expr><operator pos:line="15" pos:column="37">++<pos:position pos:line="15" pos:column="39"/></operator><name pos:line="15" pos:column="39">i<pos:position pos:line="15" pos:column="40"/></name></expr></incr>)<pos:position pos:line="15" pos:column="41"/></control> <block pos:line="15" pos:column="42">{
		<expr_stmt><expr><name pos:line="16" pos:column="17">tuple<pos:position pos:line="16" pos:column="22"/></name> <operator pos:line="16" pos:column="23">=<pos:position pos:line="16" pos:column="24"/></operator> <call><name pos:line="16" pos:column="25">PyTuple_New<pos:position pos:line="16" pos:column="36"/></name><argument_list pos:line="16" pos:column="36">(<argument><expr><literal type="number" pos:line="16" pos:column="37">4<pos:position pos:line="16" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">PyTuple_SET_ITEM<pos:position pos:line="17" pos:column="33"/></name><argument_list pos:line="17" pos:column="33">(<argument><expr><name pos:line="17" pos:column="34">tuple<pos:position pos:line="17" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="41">0<pos:position pos:line="17" pos:column="42"/></literal></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="44">cpy_string_to_unicode_or_bytes<pos:position pos:line="17" pos:column="74"/></name><argument_list pos:line="17" pos:column="74">(<argument><expr><name><name pos:line="17" pos:column="75">ds<pos:position pos:line="17" pos:column="77"/></name><operator pos:line="17" pos:column="77">-&gt;<pos:position pos:line="17" pos:column="82"/></operator><name pos:line="17" pos:column="79">ds<pos:position pos:line="17" pos:column="81"/></name><index pos:line="17" pos:column="81">[<expr><name pos:line="17" pos:column="82">i<pos:position pos:line="17" pos:column="83"/></name></expr>]<pos:position pos:line="17" pos:column="84"/></index></name><operator pos:line="17" pos:column="84">.<pos:position pos:line="17" pos:column="85"/></operator><name pos:line="17" pos:column="85">name<pos:position pos:line="17" pos:column="89"/></name></expr></argument>)<pos:position pos:line="17" pos:column="90"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="92"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">PyTuple_SET_ITEM<pos:position pos:line="18" pos:column="33"/></name><argument_list pos:line="18" pos:column="33">(<argument><expr><name pos:line="18" pos:column="34">tuple<pos:position pos:line="18" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="41">1<pos:position pos:line="18" pos:column="42"/></literal></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="44">cpy_string_to_unicode_or_bytes<pos:position pos:line="18" pos:column="74"/></name><argument_list pos:line="18" pos:column="74">(<argument><expr><call><name pos:line="18" pos:column="75">DS_TYPE_TO_STRING<pos:position pos:line="18" pos:column="92"/></name><argument_list pos:line="18" pos:column="92">(<argument><expr><name><name pos:line="18" pos:column="93">ds<pos:position pos:line="18" pos:column="95"/></name><operator pos:line="18" pos:column="95">-&gt;<pos:position pos:line="18" pos:column="100"/></operator><name pos:line="18" pos:column="97">ds<pos:position pos:line="18" pos:column="99"/></name><index pos:line="18" pos:column="99">[<expr><name pos:line="18" pos:column="100">i<pos:position pos:line="18" pos:column="101"/></name></expr>]<pos:position pos:line="18" pos:column="102"/></index></name><operator pos:line="18" pos:column="102">.<pos:position pos:line="18" pos:column="103"/></operator><name pos:line="18" pos:column="103">type<pos:position pos:line="18" pos:column="107"/></name></expr></argument>)<pos:position pos:line="18" pos:column="108"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="109"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="111"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">PyTuple_SET_ITEM<pos:position pos:line="19" pos:column="33"/></name><argument_list pos:line="19" pos:column="33">(<argument><expr><name pos:line="19" pos:column="34">tuple<pos:position pos:line="19" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="41">2<pos:position pos:line="19" pos:column="42"/></literal></expr></argument>, <argument><expr><call><name pos:line="19" pos:column="44">float_or_none<pos:position pos:line="19" pos:column="57"/></name><argument_list pos:line="19" pos:column="57">(<argument><expr><name><name pos:line="19" pos:column="58">ds<pos:position pos:line="19" pos:column="60"/></name><operator pos:line="19" pos:column="60">-&gt;<pos:position pos:line="19" pos:column="65"/></operator><name pos:line="19" pos:column="62">ds<pos:position pos:line="19" pos:column="64"/></name><index pos:line="19" pos:column="64">[<expr><name pos:line="19" pos:column="65">i<pos:position pos:line="19" pos:column="66"/></name></expr>]<pos:position pos:line="19" pos:column="67"/></index></name><operator pos:line="19" pos:column="67">.<pos:position pos:line="19" pos:column="68"/></operator><name pos:line="19" pos:column="68">min<pos:position pos:line="19" pos:column="71"/></name></expr></argument>)<pos:position pos:line="19" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="74"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">PyTuple_SET_ITEM<pos:position pos:line="20" pos:column="33"/></name><argument_list pos:line="20" pos:column="33">(<argument><expr><name pos:line="20" pos:column="34">tuple<pos:position pos:line="20" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="41">3<pos:position pos:line="20" pos:column="42"/></literal></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="44">float_or_none<pos:position pos:line="20" pos:column="57"/></name><argument_list pos:line="20" pos:column="57">(<argument><expr><name><name pos:line="20" pos:column="58">ds<pos:position pos:line="20" pos:column="60"/></name><operator pos:line="20" pos:column="60">-&gt;<pos:position pos:line="20" pos:column="65"/></operator><name pos:line="20" pos:column="62">ds<pos:position pos:line="20" pos:column="64"/></name><index pos:line="20" pos:column="64">[<expr><name pos:line="20" pos:column="65">i<pos:position pos:line="20" pos:column="66"/></name></expr>]<pos:position pos:line="20" pos:column="67"/></index></name><operator pos:line="20" pos:column="67">.<pos:position pos:line="20" pos:column="68"/></operator><name pos:line="20" pos:column="68">max<pos:position pos:line="20" pos:column="71"/></name></expr></argument>)<pos:position pos:line="20" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="74"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">PyList_SET_ITEM<pos:position pos:line="21" pos:column="32"/></name><argument_list pos:line="21" pos:column="32">(<argument><expr><name pos:line="21" pos:column="33">list<pos:position pos:line="21" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="39">i<pos:position pos:line="21" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="42">tuple<pos:position pos:line="21" pos:column="47"/></name></expr></argument>)<pos:position pos:line="21" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="22" pos:column="10"/></block></for>
	<return pos:line="23" pos:column="9">return <expr><name pos:line="23" pos:column="16">list<pos:position pos:line="23" pos:column="20"/></name></expr>;<pos:position pos:line="23" pos:column="21"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

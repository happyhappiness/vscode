<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1020_collectd-4.8.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">tr_action_invoke<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">tr_action_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">act_head<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="53">/* {{{ */</comment>
    <parameter><decl><type><name pos:line="2" pos:column="5">char<pos:position pos:line="2" pos:column="9"/></name> <modifier pos:line="2" pos:column="10">*<pos:position pos:line="2" pos:column="11"/></modifier></type><name pos:line="2" pos:column="11">buffer_in<pos:position pos:line="2" pos:column="20"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="22">size_t<pos:position pos:line="2" pos:column="28"/></name></type> <name pos:line="2" pos:column="29">buffer_in_size<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">int<pos:position pos:line="2" pos:column="48"/></name></type> <name pos:line="2" pos:column="49">may_be_empty<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">tr_action_t<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">act<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">status<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">buffer<pos:position pos:line="6" pos:column="14"/></name><index pos:line="6" pos:column="14">[<expr><name pos:line="6" pos:column="15">DATA_MAX_NAME_LEN<pos:position pos:line="6" pos:column="32"/></name></expr>]<pos:position pos:line="6" pos:column="33"/></index></name></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">regmatch_t<pos:position pos:line="7" pos:column="13"/></name></type> <name><name pos:line="7" pos:column="14">matches<pos:position pos:line="7" pos:column="21"/></name><index pos:line="7" pos:column="21">[<expr><literal type="number" pos:line="7" pos:column="22">8<pos:position pos:line="7" pos:column="23"/></literal></expr>]<pos:position pos:line="7" pos:column="24"/></index></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">act_head<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">==<pos:position pos:line="9" pos:column="18"/></operator> <name pos:line="9" pos:column="19">NULL<pos:position pos:line="9" pos:column="23"/></name></expr>)<pos:position pos:line="9" pos:column="24"/></condition><then pos:line="9" pos:column="24">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">(<pos:position pos:line="10" pos:column="13"/></operator><operator pos:line="10" pos:column="13">-<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">EINVAL<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">)<pos:position pos:line="10" pos:column="21"/></operator></expr>;<pos:position pos:line="10" pos:column="22"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="12" pos:column="3">sstrncpy<pos:position pos:line="12" pos:column="11"/></name> <argument_list pos:line="12" pos:column="12">(<argument><expr><name pos:line="12" pos:column="13">buffer<pos:position pos:line="12" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="21">buffer_in<pos:position pos:line="12" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="32">sizeof <argument_list pos:line="12" pos:column="39">(<argument><expr><name pos:line="12" pos:column="40">buffer<pos:position pos:line="12" pos:column="46"/></name></expr></argument>)<pos:position pos:line="12" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">memset<pos:position pos:line="13" pos:column="9"/></name> <argument_list pos:line="13" pos:column="10">(<argument><expr><name pos:line="13" pos:column="11">matches<pos:position pos:line="13" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="20">0<pos:position pos:line="13" pos:column="21"/></literal></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="23">sizeof <argument_list pos:line="13" pos:column="30">(<argument><expr><name pos:line="13" pos:column="31">matches<pos:position pos:line="13" pos:column="38"/></name></expr></argument>)<pos:position pos:line="13" pos:column="39"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="41"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">DEBUG<pos:position pos:line="15" pos:column="8"/></name> <argument_list pos:line="15" pos:column="9">(<argument><expr><literal type="string" pos:line="15" pos:column="10">"target_replace plugin: tr_action_invoke: &lt;- buffer = %s;"<pos:position pos:line="15" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="70">buffer<pos:position pos:line="15" pos:column="76"/></name></expr></argument>)<pos:position pos:line="15" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="78"/></expr_stmt>

  <for pos:line="17" pos:column="3">for <control pos:line="17" pos:column="7">(<init><expr><name pos:line="17" pos:column="8">act<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <name pos:line="17" pos:column="14">act_head<pos:position pos:line="17" pos:column="22"/></name></expr>;<pos:position pos:line="17" pos:column="23"/></init> <condition><expr><name pos:line="17" pos:column="24">act<pos:position pos:line="17" pos:column="27"/></name> <operator pos:line="17" pos:column="28">!=<pos:position pos:line="17" pos:column="30"/></operator> <name pos:line="17" pos:column="31">NULL<pos:position pos:line="17" pos:column="35"/></name></expr>;<pos:position pos:line="17" pos:column="36"/></condition> <incr><expr><name pos:line="17" pos:column="37">act<pos:position pos:line="17" pos:column="40"/></name> <operator pos:line="17" pos:column="41">=<pos:position pos:line="17" pos:column="42"/></operator> <name><name pos:line="17" pos:column="43">act<pos:position pos:line="17" pos:column="46"/></name><operator pos:line="17" pos:column="46">-&gt;<pos:position pos:line="17" pos:column="51"/></operator><name pos:line="17" pos:column="48">next<pos:position pos:line="17" pos:column="52"/></name></name></expr></incr>)<pos:position pos:line="17" pos:column="53"/></control>
  <block pos:line="18" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">char<pos:position pos:line="19" pos:column="9"/></name></type> <name><name pos:line="19" pos:column="10">temp<pos:position pos:line="19" pos:column="14"/></name><index pos:line="19" pos:column="14">[<expr><name pos:line="19" pos:column="15">DATA_MAX_NAME_LEN<pos:position pos:line="19" pos:column="32"/></name></expr>]<pos:position pos:line="19" pos:column="33"/></index></name></decl>;<pos:position pos:line="19" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">char<pos:position pos:line="20" pos:column="9"/></name> <modifier pos:line="20" pos:column="10">*<pos:position pos:line="20" pos:column="11"/></modifier></type><name pos:line="20" pos:column="11">subst_status<pos:position pos:line="20" pos:column="23"/></name></decl>;<pos:position pos:line="20" pos:column="24"/></decl_stmt>

    <expr_stmt><expr><name pos:line="22" pos:column="5">status<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <call><name pos:line="22" pos:column="14">regexec<pos:position pos:line="22" pos:column="21"/></name> <argument_list pos:line="22" pos:column="22">(<argument><expr><operator pos:line="22" pos:column="23">&amp;<pos:position pos:line="22" pos:column="28"/></operator><name><name pos:line="22" pos:column="24">act<pos:position pos:line="22" pos:column="27"/></name><operator pos:line="22" pos:column="27">-&gt;<pos:position pos:line="22" pos:column="32"/></operator><name pos:line="22" pos:column="29">re<pos:position pos:line="22" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="33">buffer<pos:position pos:line="22" pos:column="39"/></name></expr></argument>,
        <argument><expr><call><name pos:line="23" pos:column="9">STATIC_ARRAY_SIZE<pos:position pos:line="23" pos:column="26"/></name> <argument_list pos:line="23" pos:column="27">(<argument><expr><name pos:line="23" pos:column="28">matches<pos:position pos:line="23" pos:column="35"/></name></expr></argument>)<pos:position pos:line="23" pos:column="36"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="23" pos:column="38">matches<pos:position pos:line="23" pos:column="45"/></name></expr></argument>,
        <comment type="block" pos:line="24" pos:column="9">/* flags = */</comment> <argument><expr><literal type="number" pos:line="24" pos:column="23">0<pos:position pos:line="24" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="26"/></expr_stmt>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">status<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">==<pos:position pos:line="25" pos:column="18"/></operator> <name pos:line="25" pos:column="19">REG_NOMATCH<pos:position pos:line="25" pos:column="30"/></name></expr>)<pos:position pos:line="25" pos:column="31"/></condition><then pos:line="25" pos:column="31">
      <block type="pseudo"><continue pos:line="26" pos:column="7">continue;<pos:position pos:line="26" pos:column="16"/></continue></block></then>
    <elseif pos:line="27" pos:column="5">else <if pos:line="27" pos:column="10">if <condition pos:line="27" pos:column="13">(<expr><name pos:line="27" pos:column="14">status<pos:position pos:line="27" pos:column="20"/></name> <operator pos:line="27" pos:column="21">!=<pos:position pos:line="27" pos:column="23"/></operator> <literal type="number" pos:line="27" pos:column="24">0<pos:position pos:line="27" pos:column="25"/></literal></expr>)<pos:position pos:line="27" pos:column="26"/></condition><then pos:line="27" pos:column="26">
    <block pos:line="28" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="29" pos:column="7">char<pos:position pos:line="29" pos:column="11"/></name></type> <name><name pos:line="29" pos:column="12">errbuf<pos:position pos:line="29" pos:column="18"/></name><index pos:line="29" pos:column="18">[<expr><literal type="number" pos:line="29" pos:column="19">1024<pos:position pos:line="29" pos:column="23"/></literal></expr>]<pos:position pos:line="29" pos:column="24"/></index></name> <init pos:line="29" pos:column="25">= <expr><literal type="string" pos:line="29" pos:column="27">""<pos:position pos:line="29" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="29" pos:column="30"/></decl_stmt>

      <expr_stmt><expr><call><name pos:line="31" pos:column="7">regerror<pos:position pos:line="31" pos:column="15"/></name> <argument_list pos:line="31" pos:column="16">(<argument><expr><name pos:line="31" pos:column="17">status<pos:position pos:line="31" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="25">&amp;<pos:position pos:line="31" pos:column="30"/></operator><name><name pos:line="31" pos:column="26">act<pos:position pos:line="31" pos:column="29"/></name><operator pos:line="31" pos:column="29">-&gt;<pos:position pos:line="31" pos:column="34"/></operator><name pos:line="31" pos:column="31">re<pos:position pos:line="31" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="35">errbuf<pos:position pos:line="31" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="43">sizeof <argument_list pos:line="31" pos:column="50">(<argument><expr><name pos:line="31" pos:column="51">errbuf<pos:position pos:line="31" pos:column="57"/></name></expr></argument>)<pos:position pos:line="31" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="31" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="60"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="32" pos:column="7">ERROR<pos:position pos:line="32" pos:column="12"/></name> <argument_list pos:line="32" pos:column="13">(<argument><expr><literal type="string" pos:line="32" pos:column="14">"Target `replace': Executing a regular expression failed: %s."<pos:position pos:line="32" pos:column="76"/></literal></expr></argument>,
          <argument><expr><name pos:line="33" pos:column="11">errbuf<pos:position pos:line="33" pos:column="17"/></name></expr></argument>)<pos:position pos:line="33" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="19"/></expr_stmt>
      <continue pos:line="34" pos:column="7">continue;<pos:position pos:line="34" pos:column="16"/></continue>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if></elseif></if>

    <expr_stmt><expr><name pos:line="37" pos:column="5">subst_status<pos:position pos:line="37" pos:column="17"/></name> <operator pos:line="37" pos:column="18">=<pos:position pos:line="37" pos:column="19"/></operator> <call><name pos:line="37" pos:column="20">subst<pos:position pos:line="37" pos:column="25"/></name> <argument_list pos:line="37" pos:column="26">(<argument><expr><name pos:line="37" pos:column="27">temp<pos:position pos:line="37" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="37" pos:column="33">sizeof <argument_list pos:line="37" pos:column="40">(<argument><expr><name pos:line="37" pos:column="41">temp<pos:position pos:line="37" pos:column="45"/></name></expr></argument>)<pos:position pos:line="37" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="37" pos:column="48">buffer<pos:position pos:line="37" pos:column="54"/></name></expr></argument>,
        <argument><expr><name><name pos:line="38" pos:column="9">matches<pos:position pos:line="38" pos:column="16"/></name><index pos:line="38" pos:column="16">[<expr><literal type="number" pos:line="38" pos:column="17">0<pos:position pos:line="38" pos:column="18"/></literal></expr>]<pos:position pos:line="38" pos:column="19"/></index></name><operator pos:line="38" pos:column="19">.<pos:position pos:line="38" pos:column="20"/></operator><name pos:line="38" pos:column="20">rm_so<pos:position pos:line="38" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="27">matches<pos:position pos:line="38" pos:column="34"/></name><index pos:line="38" pos:column="34">[<expr><literal type="number" pos:line="38" pos:column="35">0<pos:position pos:line="38" pos:column="36"/></literal></expr>]<pos:position pos:line="38" pos:column="37"/></index></name><operator pos:line="38" pos:column="37">.<pos:position pos:line="38" pos:column="38"/></operator><name pos:line="38" pos:column="38">rm_eo<pos:position pos:line="38" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="45">act<pos:position pos:line="38" pos:column="48"/></name><operator pos:line="38" pos:column="48">-&gt;<pos:position pos:line="38" pos:column="53"/></operator><name pos:line="38" pos:column="50">replacement<pos:position pos:line="38" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="63"/></expr_stmt>
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name pos:line="39" pos:column="9">subst_status<pos:position pos:line="39" pos:column="21"/></name> <operator pos:line="39" pos:column="22">==<pos:position pos:line="39" pos:column="24"/></operator> <name pos:line="39" pos:column="25">NULL<pos:position pos:line="39" pos:column="29"/></name></expr>)<pos:position pos:line="39" pos:column="30"/></condition><then pos:line="39" pos:column="30">
    <block pos:line="40" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="41" pos:column="7">ERROR<pos:position pos:line="41" pos:column="12"/></name> <argument_list pos:line="41" pos:column="13">(<argument><expr><literal type="string" pos:line="41" pos:column="14">"Target `replace': subst (buffer = %s, start = %zu, end = %zu, "<pos:position pos:line="41" pos:column="78"/></literal>
          <literal type="string" pos:line="42" pos:column="11">"replacement = %s) failed."<pos:position pos:line="42" pos:column="38"/></literal></expr></argument>,
          <argument><expr><name pos:line="43" pos:column="11">buffer<pos:position pos:line="43" pos:column="17"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="19">(<pos:position pos:line="43" pos:column="20"/></operator><name pos:line="43" pos:column="20">size_t<pos:position pos:line="43" pos:column="26"/></name><operator pos:line="43" pos:column="26">)<pos:position pos:line="43" pos:column="27"/></operator> <name><name pos:line="43" pos:column="28">matches<pos:position pos:line="43" pos:column="35"/></name><index pos:line="43" pos:column="35">[<expr><literal type="number" pos:line="43" pos:column="36">0<pos:position pos:line="43" pos:column="37"/></literal></expr>]<pos:position pos:line="43" pos:column="38"/></index></name><operator pos:line="43" pos:column="38">.<pos:position pos:line="43" pos:column="39"/></operator><name pos:line="43" pos:column="39">rm_so<pos:position pos:line="43" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="46">(<pos:position pos:line="43" pos:column="47"/></operator><name pos:line="43" pos:column="47">size_t<pos:position pos:line="43" pos:column="53"/></name><operator pos:line="43" pos:column="53">)<pos:position pos:line="43" pos:column="54"/></operator> <name><name pos:line="43" pos:column="55">matches<pos:position pos:line="43" pos:column="62"/></name><index pos:line="43" pos:column="62">[<expr><literal type="number" pos:line="43" pos:column="63">0<pos:position pos:line="43" pos:column="64"/></literal></expr>]<pos:position pos:line="43" pos:column="65"/></index></name><operator pos:line="43" pos:column="65">.<pos:position pos:line="43" pos:column="66"/></operator><name pos:line="43" pos:column="66">rm_eo<pos:position pos:line="43" pos:column="71"/></name></expr></argument>,
          <argument><expr><name><name pos:line="44" pos:column="11">act<pos:position pos:line="44" pos:column="14"/></name><operator pos:line="44" pos:column="14">-&gt;<pos:position pos:line="44" pos:column="19"/></operator><name pos:line="44" pos:column="16">replacement<pos:position pos:line="44" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="29"/></expr_stmt>
      <continue pos:line="45" pos:column="7">continue;<pos:position pos:line="45" pos:column="16"/></continue>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">sstrncpy<pos:position pos:line="47" pos:column="13"/></name> <argument_list pos:line="47" pos:column="14">(<argument><expr><name pos:line="47" pos:column="15">buffer<pos:position pos:line="47" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="23">temp<pos:position pos:line="47" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="47" pos:column="29">sizeof <argument_list pos:line="47" pos:column="36">(<argument><expr><name pos:line="47" pos:column="37">buffer<pos:position pos:line="47" pos:column="43"/></name></expr></argument>)<pos:position pos:line="47" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="47" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="46"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="49" pos:column="5">DEBUG<pos:position pos:line="49" pos:column="10"/></name> <argument_list pos:line="49" pos:column="11">(<argument><expr><literal type="string" pos:line="49" pos:column="12">"target_replace plugin: tr_action_invoke: -- buffer = %s;"<pos:position pos:line="49" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="72">buffer<pos:position pos:line="49" pos:column="78"/></name></expr></argument>)<pos:position pos:line="49" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="80"/></expr_stmt>
  }<pos:position pos:line="50" pos:column="4"/></block></for> <comment type="block" pos:line="50" pos:column="5">/* for (act = act_head; act != NULL; act = act-&gt;next) */</comment>

  <if pos:line="52" pos:column="3">if <condition pos:line="52" pos:column="6">(<expr><operator pos:line="52" pos:column="7">(<pos:position pos:line="52" pos:column="8"/></operator><name pos:line="52" pos:column="8">may_be_empty<pos:position pos:line="52" pos:column="20"/></name> <operator pos:line="52" pos:column="21">==<pos:position pos:line="52" pos:column="23"/></operator> <literal type="number" pos:line="52" pos:column="24">0<pos:position pos:line="52" pos:column="25"/></literal><operator pos:line="52" pos:column="25">)<pos:position pos:line="52" pos:column="26"/></operator> <operator pos:line="52" pos:column="27">&amp;&amp;<pos:position pos:line="52" pos:column="37"/></operator> <operator pos:line="52" pos:column="30">(<pos:position pos:line="52" pos:column="31"/></operator><name><name pos:line="52" pos:column="31">buffer<pos:position pos:line="52" pos:column="37"/></name><index pos:line="52" pos:column="37">[<expr><literal type="number" pos:line="52" pos:column="38">0<pos:position pos:line="52" pos:column="39"/></literal></expr>]<pos:position pos:line="52" pos:column="40"/></index></name> <operator pos:line="52" pos:column="41">==<pos:position pos:line="52" pos:column="43"/></operator> <literal type="number" pos:line="52" pos:column="44">0<pos:position pos:line="52" pos:column="45"/></literal><operator pos:line="52" pos:column="45">)<pos:position pos:line="52" pos:column="46"/></operator></expr>)<pos:position pos:line="52" pos:column="47"/></condition><then pos:line="52" pos:column="47">
  <block pos:line="53" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="54" pos:column="5">WARNING<pos:position pos:line="54" pos:column="12"/></name> <argument_list pos:line="54" pos:column="13">(<argument><expr><literal type="string" pos:line="54" pos:column="14">"Target `replace': Replacement resulted in an empty string, "<pos:position pos:line="54" pos:column="75"/></literal>
        <literal type="string" pos:line="55" pos:column="9">"which is not allowed for this buffer (`host' or `plugin')."<pos:position pos:line="55" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="71"/></expr_stmt>
    <return pos:line="56" pos:column="5">return <expr><operator pos:line="56" pos:column="12">(<pos:position pos:line="56" pos:column="13"/></operator><literal type="number" pos:line="56" pos:column="13">0<pos:position pos:line="56" pos:column="14"/></literal><operator pos:line="56" pos:column="14">)<pos:position pos:line="56" pos:column="15"/></operator></expr>;<pos:position pos:line="56" pos:column="16"/></return>
  }<pos:position pos:line="57" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="59" pos:column="3">DEBUG<pos:position pos:line="59" pos:column="8"/></name> <argument_list pos:line="59" pos:column="9">(<argument><expr><literal type="string" pos:line="59" pos:column="10">"target_replace plugin: tr_action_invoke: -&gt; buffer = %s;"<pos:position pos:line="59" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="70">buffer<pos:position pos:line="59" pos:column="76"/></name></expr></argument>)<pos:position pos:line="59" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="78"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="60" pos:column="3">sstrncpy<pos:position pos:line="60" pos:column="11"/></name> <argument_list pos:line="60" pos:column="12">(<argument><expr><name pos:line="60" pos:column="13">buffer_in<pos:position pos:line="60" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="24">buffer<pos:position pos:line="60" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="32">buffer_in_size<pos:position pos:line="60" pos:column="46"/></name></expr></argument>)<pos:position pos:line="60" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="48"/></expr_stmt>

  <return pos:line="62" pos:column="3">return <expr><operator pos:line="62" pos:column="10">(<pos:position pos:line="62" pos:column="11"/></operator><literal type="number" pos:line="62" pos:column="11">0<pos:position pos:line="62" pos:column="12"/></literal><operator pos:line="62" pos:column="12">)<pos:position pos:line="62" pos:column="13"/></operator></expr>;<pos:position pos:line="62" pos:column="14"/></return>
}<pos:position pos:line="63" pos:column="2"/></block></function></unit>

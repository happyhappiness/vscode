<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2405_collectd-5.7.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">lcc_server_set_interface<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">lcc_server_t<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">srv<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <specifier pos:line="1" pos:column="54">const<pos:position pos:line="1" pos:column="59"/></specifier> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">interface<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list> <comment type="block" pos:line="1" pos:column="72">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">unsigned<pos:position pos:line="3" pos:column="11"/></name> <name pos:line="3" pos:column="12">int<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">if_index<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><operator pos:line="6" pos:column="7">(<pos:position pos:line="6" pos:column="8"/></operator><name pos:line="6" pos:column="8">srv<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">==<pos:position pos:line="6" pos:column="14"/></operator> <name pos:line="6" pos:column="15">NULL<pos:position pos:line="6" pos:column="19"/></name><operator pos:line="6" pos:column="19">)<pos:position pos:line="6" pos:column="20"/></operator> <operator pos:line="6" pos:column="21">||<pos:position pos:line="6" pos:column="23"/></operator> <operator pos:line="6" pos:column="24">(<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="25">interface<pos:position pos:line="6" pos:column="34"/></name> <operator pos:line="6" pos:column="35">==<pos:position pos:line="6" pos:column="37"/></operator> <name pos:line="6" pos:column="38">NULL<pos:position pos:line="6" pos:column="42"/></name><operator pos:line="6" pos:column="42">)<pos:position pos:line="6" pos:column="43"/></operator></expr>)<pos:position pos:line="6" pos:column="44"/></condition><then pos:line="6" pos:column="44">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><operator pos:line="7" pos:column="12">(<pos:position pos:line="7" pos:column="13"/></operator><name pos:line="7" pos:column="13">EINVAL<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">)<pos:position pos:line="7" pos:column="20"/></operator></expr>;<pos:position pos:line="7" pos:column="21"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="9" pos:column="3">if_index<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <call><name pos:line="9" pos:column="14">if_nametoindex<pos:position pos:line="9" pos:column="28"/></name><argument_list pos:line="9" pos:column="28">(<argument><expr><name pos:line="9" pos:column="29">interface<pos:position pos:line="9" pos:column="38"/></name></expr></argument>)<pos:position pos:line="9" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="40"/></expr_stmt>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">if_index<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">==<pos:position pos:line="10" pos:column="18"/></operator> <literal type="number" pos:line="10" pos:column="19">0<pos:position pos:line="10" pos:column="20"/></literal></expr>)<pos:position pos:line="10" pos:column="21"/></condition><then pos:line="10" pos:column="21">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><name pos:line="11" pos:column="13">ENOENT<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">)<pos:position pos:line="11" pos:column="20"/></operator></expr>;<pos:position pos:line="11" pos:column="21"/></return></block></then></if>

  <comment type="block" pos:line="13" pos:column="3">/* IPv4 multicast */</comment>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name><name pos:line="14" pos:column="7">srv<pos:position pos:line="14" pos:column="10"/></name><operator pos:line="14" pos:column="10">-&gt;<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="12">sa<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">-&gt;<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="16">sa_family<pos:position pos:line="14" pos:column="25"/></name></name> <operator pos:line="14" pos:column="26">==<pos:position pos:line="14" pos:column="28"/></operator> <name pos:line="14" pos:column="29">AF_INET<pos:position pos:line="14" pos:column="36"/></name></expr>)<pos:position pos:line="14" pos:column="37"/></condition><then pos:line="14" pos:column="37"> <block pos:line="14" pos:column="38">{
    <decl_stmt><decl><type><name><name pos:line="15" pos:column="5">struct<pos:position pos:line="15" pos:column="11"/></name> <name pos:line="15" pos:column="12">sockaddr_in<pos:position pos:line="15" pos:column="23"/></name></name> <modifier pos:line="15" pos:column="24">*<pos:position pos:line="15" pos:column="25"/></modifier></type><name pos:line="15" pos:column="25">addr<pos:position pos:line="15" pos:column="29"/></name> <init pos:line="15" pos:column="30">= <expr><operator pos:line="15" pos:column="32">(<pos:position pos:line="15" pos:column="33"/></operator>struct <name pos:line="15" pos:column="40">sockaddr_in<pos:position pos:line="15" pos:column="51"/></name> <operator pos:line="15" pos:column="52">*<pos:position pos:line="15" pos:column="53"/></operator><operator pos:line="15" pos:column="53">)<pos:position pos:line="15" pos:column="54"/></operator><name><name pos:line="15" pos:column="54">srv<pos:position pos:line="15" pos:column="57"/></name><operator pos:line="15" pos:column="57">-&gt;<pos:position pos:line="15" pos:column="62"/></operator><name pos:line="15" pos:column="59">sa<pos:position pos:line="15" pos:column="61"/></name></name></expr></init></decl>;<pos:position pos:line="15" pos:column="62"/></decl_stmt>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><call><name pos:line="17" pos:column="9">IN_MULTICAST<pos:position pos:line="17" pos:column="21"/></name><argument_list pos:line="17" pos:column="21">(<argument><expr><call><name pos:line="17" pos:column="22">ntohl<pos:position pos:line="17" pos:column="27"/></name><argument_list pos:line="17" pos:column="27">(<argument><expr><name><name pos:line="17" pos:column="28">addr<pos:position pos:line="17" pos:column="32"/></name><operator pos:line="17" pos:column="32">-&gt;<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="34">sin_addr<pos:position pos:line="17" pos:column="42"/></name><operator pos:line="17" pos:column="42">.<pos:position pos:line="17" pos:column="43"/></operator><name pos:line="17" pos:column="43">s_addr<pos:position pos:line="17" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="52"/></condition><then pos:line="17" pos:column="52"> <block pos:line="17" pos:column="53">{
<cpp:if pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">if<pos:position pos:line="18" pos:column="4"/></cpp:directive> <expr><name pos:line="18" pos:column="5">HAVE_STRUCT_IP_MREQN_IMR_IFINDEX<pos:position pos:line="18" pos:column="37"/></name></expr></cpp:if>
      <comment type="block" pos:line="19" pos:column="7">/* If possible, use the "ip_mreqn" structure which has
       * an "interface index" member. Using the interface
       * index is preferred here, because of its similarity
       * to the way IPv6 handles this. Unfortunately, it
       * appears not to be portable. */</comment>
      <decl_stmt><decl><type><name><name pos:line="24" pos:column="7">struct<pos:position pos:line="24" pos:column="13"/></name> <name pos:line="24" pos:column="14">ip_mreqn<pos:position pos:line="24" pos:column="22"/></name></name></type> <name pos:line="24" pos:column="23">mreq<pos:position pos:line="24" pos:column="27"/></name> <init pos:line="24" pos:column="28">= <expr><block pos:line="24" pos:column="30">{<expr><operator pos:line="24" pos:column="31">.<pos:position pos:line="24" pos:column="32"/></operator><name><name pos:line="24" pos:column="32">imr_multiaddr<pos:position pos:line="24" pos:column="45"/></name><operator pos:line="24" pos:column="45">.<pos:position pos:line="24" pos:column="46"/></operator><name pos:line="24" pos:column="46">s_addr<pos:position pos:line="24" pos:column="52"/></name></name> <operator pos:line="24" pos:column="53">=<pos:position pos:line="24" pos:column="54"/></operator> <name><name pos:line="24" pos:column="55">addr<pos:position pos:line="24" pos:column="59"/></name><operator pos:line="24" pos:column="59">-&gt;<pos:position pos:line="24" pos:column="64"/></operator><name pos:line="24" pos:column="61">sin_addr<pos:position pos:line="24" pos:column="69"/></name><operator pos:line="24" pos:column="69">.<pos:position pos:line="24" pos:column="70"/></operator><name pos:line="24" pos:column="70">s_addr<pos:position pos:line="24" pos:column="76"/></name></name></expr>,
                              <expr><operator pos:line="25" pos:column="31">.<pos:position pos:line="25" pos:column="32"/></operator><name><name pos:line="25" pos:column="32">imr_address<pos:position pos:line="25" pos:column="43"/></name><operator pos:line="25" pos:column="43">.<pos:position pos:line="25" pos:column="44"/></operator><name pos:line="25" pos:column="44">s_addr<pos:position pos:line="25" pos:column="50"/></name></name> <operator pos:line="25" pos:column="51">=<pos:position pos:line="25" pos:column="52"/></operator> <call><name pos:line="25" pos:column="53">ntohl<pos:position pos:line="25" pos:column="58"/></name><argument_list pos:line="25" pos:column="58">(<argument><expr><name pos:line="25" pos:column="59">INADDR_ANY<pos:position pos:line="25" pos:column="69"/></name></expr></argument>)<pos:position pos:line="25" pos:column="70"/></argument_list></call></expr>,
                              <expr><operator pos:line="26" pos:column="31">.<pos:position pos:line="26" pos:column="32"/></operator><name pos:line="26" pos:column="32">imr_ifindex<pos:position pos:line="26" pos:column="43"/></name> <operator pos:line="26" pos:column="44">=<pos:position pos:line="26" pos:column="45"/></operator> <operator pos:line="26" pos:column="46">(<pos:position pos:line="26" pos:column="47"/></operator><name pos:line="26" pos:column="47">int<pos:position pos:line="26" pos:column="50"/></name><operator pos:line="26" pos:column="50">)<pos:position pos:line="26" pos:column="51"/></operator><name pos:line="26" pos:column="51">if_index<pos:position pos:line="26" pos:column="59"/></name></expr>}<pos:position pos:line="26" pos:column="60"/></block></expr></init></decl>;<pos:position pos:line="26" pos:column="61"/></decl_stmt>
<cpp:else pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">else<pos:position pos:line="27" pos:column="6"/></cpp:directive></cpp:else>
      <decl_stmt><decl><type><name><name pos:line="28" pos:column="7">struct<pos:position pos:line="28" pos:column="13"/></name> <name pos:line="28" pos:column="14">ip_mreq<pos:position pos:line="28" pos:column="21"/></name></name></type> <name pos:line="28" pos:column="22">mreq<pos:position pos:line="28" pos:column="26"/></name> <init pos:line="28" pos:column="27">= <expr><block pos:line="28" pos:column="29">{<expr><operator pos:line="28" pos:column="30">.<pos:position pos:line="28" pos:column="31"/></operator><name><name pos:line="28" pos:column="31">imr_multiaddr<pos:position pos:line="28" pos:column="44"/></name><operator pos:line="28" pos:column="44">.<pos:position pos:line="28" pos:column="45"/></operator><name pos:line="28" pos:column="45">s_addr<pos:position pos:line="28" pos:column="51"/></name></name> <operator pos:line="28" pos:column="52">=<pos:position pos:line="28" pos:column="53"/></operator> <name><name pos:line="28" pos:column="54">addr<pos:position pos:line="28" pos:column="58"/></name><operator pos:line="28" pos:column="58">-&gt;<pos:position pos:line="28" pos:column="63"/></operator><name pos:line="28" pos:column="60">sin_addr<pos:position pos:line="28" pos:column="68"/></name><operator pos:line="28" pos:column="68">.<pos:position pos:line="28" pos:column="69"/></operator><name pos:line="28" pos:column="69">s_addr<pos:position pos:line="28" pos:column="75"/></name></name></expr>,
                             <expr><operator pos:line="29" pos:column="30">.<pos:position pos:line="29" pos:column="31"/></operator><name><name pos:line="29" pos:column="31">imr_interface<pos:position pos:line="29" pos:column="44"/></name><operator pos:line="29" pos:column="44">.<pos:position pos:line="29" pos:column="45"/></operator><name pos:line="29" pos:column="45">s_addr<pos:position pos:line="29" pos:column="51"/></name></name> <operator pos:line="29" pos:column="52">=<pos:position pos:line="29" pos:column="53"/></operator> <macro><name pos:line="29" pos:column="54">ntohl<pos:position pos:line="29" pos:column="59"/></name><argument_list pos:line="29" pos:column="59">(<argument pos:line="29" pos:column="60">INADDR_ANY<pos:position pos:line="29" pos:column="70"/></argument>)<pos:position pos:line="29" pos:column="71"/></argument_list></macro></expr>}<pos:position pos:line="29" pos:column="72"/></block></expr></init></decl>;<pos:position pos:line="29" pos:column="73"/></decl_stmt>
<cpp:endif pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">endif<pos:position pos:line="30" pos:column="7"/></cpp:directive></cpp:endif>

      <expr_stmt><expr><name pos:line="32" pos:column="7">status<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">=<pos:position pos:line="32" pos:column="15"/></operator>
          <call><name pos:line="33" pos:column="11">setsockopt<pos:position pos:line="33" pos:column="21"/></name><argument_list pos:line="33" pos:column="21">(<argument><expr><name><name pos:line="33" pos:column="22">srv<pos:position pos:line="33" pos:column="25"/></name><operator pos:line="33" pos:column="25">-&gt;<pos:position pos:line="33" pos:column="30"/></operator><name pos:line="33" pos:column="27">fd<pos:position pos:line="33" pos:column="29"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="31">IPPROTO_IP<pos:position pos:line="33" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="43">IP_MULTICAST_IF<pos:position pos:line="33" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="60">&amp;<pos:position pos:line="33" pos:column="65"/></operator><name pos:line="33" pos:column="61">mreq<pos:position pos:line="33" pos:column="65"/></name></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="67">sizeof<argument_list pos:line="33" pos:column="73">(<argument><expr><name pos:line="33" pos:column="74">mreq<pos:position pos:line="33" pos:column="78"/></name></expr></argument>)<pos:position pos:line="33" pos:column="79"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="33" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="81"/></expr_stmt>
      <if pos:line="34" pos:column="7">if <condition pos:line="34" pos:column="10">(<expr><name pos:line="34" pos:column="11">status<pos:position pos:line="34" pos:column="17"/></name> <operator pos:line="34" pos:column="18">!=<pos:position pos:line="34" pos:column="20"/></operator> <literal type="number" pos:line="34" pos:column="21">0<pos:position pos:line="34" pos:column="22"/></literal></expr>)<pos:position pos:line="34" pos:column="23"/></condition><then pos:line="34" pos:column="23">
        <block type="pseudo"><return pos:line="35" pos:column="9">return <expr><operator pos:line="35" pos:column="16">(<pos:position pos:line="35" pos:column="17"/></operator><name pos:line="35" pos:column="17">status<pos:position pos:line="35" pos:column="23"/></name><operator pos:line="35" pos:column="23">)<pos:position pos:line="35" pos:column="24"/></operator></expr>;<pos:position pos:line="35" pos:column="25"/></return></block></then></if>

      <return pos:line="37" pos:column="7">return <expr><operator pos:line="37" pos:column="14">(<pos:position pos:line="37" pos:column="15"/></operator><literal type="number" pos:line="37" pos:column="15">0<pos:position pos:line="37" pos:column="16"/></literal><operator pos:line="37" pos:column="16">)<pos:position pos:line="37" pos:column="17"/></operator></expr>;<pos:position pos:line="37" pos:column="18"/></return>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>
  }<pos:position pos:line="39" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="41" pos:column="3">/* IPv6 multicast */</comment>
  <if pos:line="42" pos:column="3">if <condition pos:line="42" pos:column="6">(<expr><name><name pos:line="42" pos:column="7">srv<pos:position pos:line="42" pos:column="10"/></name><operator pos:line="42" pos:column="10">-&gt;<pos:position pos:line="42" pos:column="15"/></operator><name pos:line="42" pos:column="12">sa<pos:position pos:line="42" pos:column="14"/></name><operator pos:line="42" pos:column="14">-&gt;<pos:position pos:line="42" pos:column="19"/></operator><name pos:line="42" pos:column="16">sa_family<pos:position pos:line="42" pos:column="25"/></name></name> <operator pos:line="42" pos:column="26">==<pos:position pos:line="42" pos:column="28"/></operator> <name pos:line="42" pos:column="29">AF_INET6<pos:position pos:line="42" pos:column="37"/></name></expr>)<pos:position pos:line="42" pos:column="38"/></condition><then pos:line="42" pos:column="38"> <block pos:line="42" pos:column="39">{
    <decl_stmt><decl><type><name><name pos:line="43" pos:column="5">struct<pos:position pos:line="43" pos:column="11"/></name> <name pos:line="43" pos:column="12">sockaddr_in6<pos:position pos:line="43" pos:column="24"/></name></name> <modifier pos:line="43" pos:column="25">*<pos:position pos:line="43" pos:column="26"/></modifier></type><name pos:line="43" pos:column="26">addr<pos:position pos:line="43" pos:column="30"/></name> <init pos:line="43" pos:column="31">= <expr><operator pos:line="43" pos:column="33">(<pos:position pos:line="43" pos:column="34"/></operator>struct <name pos:line="43" pos:column="41">sockaddr_in6<pos:position pos:line="43" pos:column="53"/></name> <operator pos:line="43" pos:column="54">*<pos:position pos:line="43" pos:column="55"/></operator><operator pos:line="43" pos:column="55">)<pos:position pos:line="43" pos:column="56"/></operator><name><name pos:line="43" pos:column="56">srv<pos:position pos:line="43" pos:column="59"/></name><operator pos:line="43" pos:column="59">-&gt;<pos:position pos:line="43" pos:column="64"/></operator><name pos:line="43" pos:column="61">sa<pos:position pos:line="43" pos:column="63"/></name></name></expr></init></decl>;<pos:position pos:line="43" pos:column="64"/></decl_stmt>

    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><call><name pos:line="45" pos:column="9">IN6_IS_ADDR_MULTICAST<pos:position pos:line="45" pos:column="30"/></name><argument_list pos:line="45" pos:column="30">(<argument><expr><operator pos:line="45" pos:column="31">&amp;<pos:position pos:line="45" pos:column="36"/></operator><name><name pos:line="45" pos:column="32">addr<pos:position pos:line="45" pos:column="36"/></name><operator pos:line="45" pos:column="36">-&gt;<pos:position pos:line="45" pos:column="41"/></operator><name pos:line="45" pos:column="38">sin6_addr<pos:position pos:line="45" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="49"/></condition><then pos:line="45" pos:column="49"> <block pos:line="45" pos:column="50">{
      <expr_stmt><expr><name pos:line="46" pos:column="7">status<pos:position pos:line="46" pos:column="13"/></name> <operator pos:line="46" pos:column="14">=<pos:position pos:line="46" pos:column="15"/></operator> <call><name pos:line="46" pos:column="16">setsockopt<pos:position pos:line="46" pos:column="26"/></name><argument_list pos:line="46" pos:column="26">(<argument><expr><name><name pos:line="46" pos:column="27">srv<pos:position pos:line="46" pos:column="30"/></name><operator pos:line="46" pos:column="30">-&gt;<pos:position pos:line="46" pos:column="35"/></operator><name pos:line="46" pos:column="32">fd<pos:position pos:line="46" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="36">IPPROTO_IPV6<pos:position pos:line="46" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="50">IPV6_MULTICAST_IF<pos:position pos:line="46" pos:column="67"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="69">&amp;<pos:position pos:line="46" pos:column="74"/></operator><name pos:line="46" pos:column="70">if_index<pos:position pos:line="46" pos:column="78"/></name></expr></argument>,
                          <argument><expr><sizeof pos:line="47" pos:column="27">sizeof<argument_list pos:line="47" pos:column="33">(<argument><expr><name pos:line="47" pos:column="34">if_index<pos:position pos:line="47" pos:column="42"/></name></expr></argument>)<pos:position pos:line="47" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="47" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="45"/></expr_stmt>
      <if pos:line="48" pos:column="7">if <condition pos:line="48" pos:column="10">(<expr><name pos:line="48" pos:column="11">status<pos:position pos:line="48" pos:column="17"/></name> <operator pos:line="48" pos:column="18">!=<pos:position pos:line="48" pos:column="20"/></operator> <literal type="number" pos:line="48" pos:column="21">0<pos:position pos:line="48" pos:column="22"/></literal></expr>)<pos:position pos:line="48" pos:column="23"/></condition><then pos:line="48" pos:column="23">
        <block type="pseudo"><return pos:line="49" pos:column="9">return <expr><operator pos:line="49" pos:column="16">(<pos:position pos:line="49" pos:column="17"/></operator><name pos:line="49" pos:column="17">status<pos:position pos:line="49" pos:column="23"/></name><operator pos:line="49" pos:column="23">)<pos:position pos:line="49" pos:column="24"/></operator></expr>;<pos:position pos:line="49" pos:column="25"/></return></block></then></if>

      <return pos:line="51" pos:column="7">return <expr><operator pos:line="51" pos:column="14">(<pos:position pos:line="51" pos:column="15"/></operator><literal type="number" pos:line="51" pos:column="15">0<pos:position pos:line="51" pos:column="16"/></literal><operator pos:line="51" pos:column="16">)<pos:position pos:line="51" pos:column="17"/></operator></expr>;<pos:position pos:line="51" pos:column="18"/></return>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>
  }<pos:position pos:line="53" pos:column="4"/></block></then></if>

<comment type="block" pos:line="55" pos:column="1">/* else: Not a multicast interface. */</comment>
<cpp:if pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">if<pos:position pos:line="56" pos:column="4"/></cpp:directive> <expr><call><name pos:line="56" pos:column="5">defined<pos:position pos:line="56" pos:column="12"/></name><argument_list pos:line="56" pos:column="12">(<argument><expr><name pos:line="56" pos:column="13">SO_BINDTODEVICE<pos:position pos:line="56" pos:column="28"/></name></expr></argument>)<pos:position pos:line="56" pos:column="29"/></argument_list></call></expr></cpp:if>
  <expr_stmt><expr><name pos:line="57" pos:column="3">status<pos:position pos:line="57" pos:column="9"/></name> <operator pos:line="57" pos:column="10">=<pos:position pos:line="57" pos:column="11"/></operator> <call><name pos:line="57" pos:column="12">setsockopt<pos:position pos:line="57" pos:column="22"/></name><argument_list pos:line="57" pos:column="22">(<argument><expr><name><name pos:line="57" pos:column="23">srv<pos:position pos:line="57" pos:column="26"/></name><operator pos:line="57" pos:column="26">-&gt;<pos:position pos:line="57" pos:column="31"/></operator><name pos:line="57" pos:column="28">fd<pos:position pos:line="57" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="32">SOL_SOCKET<pos:position pos:line="57" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="44">SO_BINDTODEVICE<pos:position pos:line="57" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="61">interface<pos:position pos:line="57" pos:column="70"/></name></expr></argument>,
                      <argument><expr><call pos:line="58" pos:column="23">(<name pos:line="58" pos:column="24">socklen_t<pos:position pos:line="58" pos:column="33"/></name>)<argument_list pos:line="58" pos:column="34">(<argument><expr><call><name pos:line="58" pos:column="35">strlen<pos:position pos:line="58" pos:column="41"/></name><argument_list pos:line="58" pos:column="41">(<argument><expr><name pos:line="58" pos:column="42">interface<pos:position pos:line="58" pos:column="51"/></name></expr></argument>)<pos:position pos:line="58" pos:column="52"/></argument_list></call> <operator pos:line="58" pos:column="53">+<pos:position pos:line="58" pos:column="54"/></operator> <literal type="number" pos:line="58" pos:column="55">1<pos:position pos:line="58" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="58" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="59"/></expr_stmt>
  <if pos:line="59" pos:column="3">if <condition pos:line="59" pos:column="6">(<expr><name pos:line="59" pos:column="7">status<pos:position pos:line="59" pos:column="13"/></name> <operator pos:line="59" pos:column="14">!=<pos:position pos:line="59" pos:column="16"/></operator> <literal type="number" pos:line="59" pos:column="17">0<pos:position pos:line="59" pos:column="18"/></literal></expr>)<pos:position pos:line="59" pos:column="19"/></condition><then pos:line="59" pos:column="19">
    <block type="pseudo"><return pos:line="60" pos:column="5">return <expr><operator pos:line="60" pos:column="12">(<pos:position pos:line="60" pos:column="13"/></operator><operator pos:line="60" pos:column="13">-<pos:position pos:line="60" pos:column="14"/></operator><literal type="number" pos:line="60" pos:column="14">1<pos:position pos:line="60" pos:column="15"/></literal><operator pos:line="60" pos:column="15">)<pos:position pos:line="60" pos:column="16"/></operator></expr>;<pos:position pos:line="60" pos:column="17"/></return></block></then></if>
<cpp:endif pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">endif<pos:position pos:line="61" pos:column="7"/></cpp:directive></cpp:endif>

  <return pos:line="63" pos:column="3">return <expr><operator pos:line="63" pos:column="10">(<pos:position pos:line="63" pos:column="11"/></operator><literal type="number" pos:line="63" pos:column="11">0<pos:position pos:line="63" pos:column="12"/></literal><operator pos:line="63" pos:column="12">)<pos:position pos:line="63" pos:column="13"/></operator></expr>;<pos:position pos:line="63" pos:column="14"/></return>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

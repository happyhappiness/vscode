<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1475_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">lpar_read<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">void<pos:position pos:line="1" pos:column="26"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="27"/></parameter_list> <block pos:line="1" pos:column="28">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">perfstat_partition_total_t<pos:position pos:line="2" pos:column="29"/></name></type> <name pos:line="2" pos:column="30">lparstats<pos:position pos:line="2" pos:column="39"/></name></decl>;<pos:position pos:line="2" pos:column="40"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">status<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">utsname<pos:position pos:line="4" pos:column="17"/></name></name></type> <name pos:line="4" pos:column="18">name<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">u_longlong_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">ticks<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">u_longlong_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">user_ticks<pos:position pos:line="6" pos:column="26"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="28">syst_ticks<pos:position pos:line="6" pos:column="38"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="40">wait_ticks<pos:position pos:line="6" pos:column="50"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="52">idle_ticks<pos:position pos:line="6" pos:column="62"/></name></decl>;<pos:position pos:line="6" pos:column="63"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">u_longlong_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">consumed_ticks<pos:position pos:line="7" pos:column="30"/></name></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">double<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">entitled_proc_capacity<pos:position pos:line="8" pos:column="32"/></name></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>

  <comment type="block" pos:line="10" pos:column="3">/* An LPAR has the same serial number as the physical system it is currently
     running on. It is a convenient way of tracking LPARs as they are moved
     from chassis to chassis through Live Partition Mobility (LPM). */</comment>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><call><name pos:line="13" pos:column="7">uname<pos:position pos:line="13" pos:column="12"/></name><argument_list pos:line="13" pos:column="12">(<argument><expr><operator pos:line="13" pos:column="13">&amp;<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="14">name<pos:position pos:line="13" pos:column="18"/></name></expr></argument>)<pos:position pos:line="13" pos:column="19"/></argument_list></call> <operator pos:line="13" pos:column="20">!=<pos:position pos:line="13" pos:column="22"/></operator> <literal type="number" pos:line="13" pos:column="23">0<pos:position pos:line="13" pos:column="24"/></literal></expr>)<pos:position pos:line="13" pos:column="25"/></condition><then pos:line="13" pos:column="25"> <block pos:line="13" pos:column="26">{
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">ERROR<pos:position pos:line="14" pos:column="10"/></name><argument_list pos:line="14" pos:column="10">(<argument><expr><literal type="string" pos:line="14" pos:column="11">"lpar plugin: uname failed."<pos:position pos:line="14" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="41"/></expr_stmt>
    <return pos:line="15" pos:column="5">return <expr><operator pos:line="15" pos:column="12">(<pos:position pos:line="15" pos:column="13"/></operator><operator pos:line="15" pos:column="13">-<pos:position pos:line="15" pos:column="14"/></operator><literal type="number" pos:line="15" pos:column="14">1<pos:position pos:line="15" pos:column="15"/></literal><operator pos:line="15" pos:column="15">)<pos:position pos:line="15" pos:column="16"/></operator></expr>;<pos:position pos:line="15" pos:column="17"/></return>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">sstrncpy<pos:position pos:line="17" pos:column="11"/></name><argument_list pos:line="17" pos:column="11">(<argument><expr><name pos:line="17" pos:column="12">serial<pos:position pos:line="17" pos:column="18"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="20">name<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">.<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="25">machine<pos:position pos:line="17" pos:column="32"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="34">sizeof<argument_list pos:line="17" pos:column="40">(<argument><expr><name pos:line="17" pos:column="41">serial<pos:position pos:line="17" pos:column="47"/></name></expr></argument>)<pos:position pos:line="17" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="50"/></expr_stmt>

  <comment type="block" pos:line="19" pos:column="3">/* Retrieve the current metrics. Returns the number of structures filled. */</comment>
  <expr_stmt><expr><name pos:line="20" pos:column="3">status<pos:position pos:line="20" pos:column="9"/></name> <operator pos:line="20" pos:column="10">=<pos:position pos:line="20" pos:column="11"/></operator>
      <call><name pos:line="21" pos:column="7">perfstat_partition_total<pos:position pos:line="21" pos:column="31"/></name><argument_list pos:line="21" pos:column="31">(<comment type="block" pos:line="21" pos:column="32">/* name = */</comment> <argument><expr><name pos:line="21" pos:column="45">NULL<pos:position pos:line="21" pos:column="49"/></name></expr></argument>, <comment type="block" pos:line="21" pos:column="51">/* (must be NULL) */</comment>
                               <argument><expr><operator pos:line="22" pos:column="32">&amp;<pos:position pos:line="22" pos:column="37"/></operator><name pos:line="22" pos:column="33">lparstats<pos:position pos:line="22" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="44">sizeof<argument_list pos:line="22" pos:column="50">(<argument><expr><name pos:line="22" pos:column="51">perfstat_partition_total_t<pos:position pos:line="22" pos:column="77"/></name></expr></argument>)<pos:position pos:line="22" pos:column="78"/></argument_list></sizeof></expr></argument>,
                               <comment type="block" pos:line="23" pos:column="32">/* number = */</comment> <argument><expr><literal type="number" pos:line="23" pos:column="47">1<pos:position pos:line="23" pos:column="48"/></literal></expr></argument> <comment type="block" pos:line="23" pos:column="49">/* (must be 1) */</comment>)<pos:position pos:line="23" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="68"/></expr_stmt>
  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><name pos:line="24" pos:column="7">status<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">!=<pos:position pos:line="24" pos:column="16"/></operator> <literal type="number" pos:line="24" pos:column="17">1<pos:position pos:line="24" pos:column="18"/></literal></expr>)<pos:position pos:line="24" pos:column="19"/></condition><then pos:line="24" pos:column="19"> <block pos:line="24" pos:column="20">{
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">char<pos:position pos:line="25" pos:column="9"/></name></type> <name><name pos:line="25" pos:column="10">errbuf<pos:position pos:line="25" pos:column="16"/></name><index pos:line="25" pos:column="16">[<expr><literal type="number" pos:line="25" pos:column="17">1024<pos:position pos:line="25" pos:column="21"/></literal></expr>]<pos:position pos:line="25" pos:column="22"/></index></name></decl>;<pos:position pos:line="25" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">ERROR<pos:position pos:line="26" pos:column="10"/></name><argument_list pos:line="26" pos:column="10">(<argument><expr><literal type="string" pos:line="26" pos:column="11">"lpar plugin: perfstat_partition_total failed: %s (%i)"<pos:position pos:line="26" pos:column="66"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="27" pos:column="11">sstrerror<pos:position pos:line="27" pos:column="20"/></name><argument_list pos:line="27" pos:column="20">(<argument><expr><name pos:line="27" pos:column="21">errno<pos:position pos:line="27" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="28">errbuf<pos:position pos:line="27" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="36">sizeof<argument_list pos:line="27" pos:column="42">(<argument><expr><name pos:line="27" pos:column="43">errbuf<pos:position pos:line="27" pos:column="49"/></name></expr></argument>)<pos:position pos:line="27" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="27" pos:column="53">status<pos:position pos:line="27" pos:column="59"/></name></expr></argument>)<pos:position pos:line="27" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="61"/></expr_stmt>
    <return pos:line="28" pos:column="5">return <expr><operator pos:line="28" pos:column="12">(<pos:position pos:line="28" pos:column="13"/></operator><operator pos:line="28" pos:column="13">-<pos:position pos:line="28" pos:column="14"/></operator><literal type="number" pos:line="28" pos:column="14">1<pos:position pos:line="28" pos:column="15"/></literal><operator pos:line="28" pos:column="15">)<pos:position pos:line="28" pos:column="16"/></operator></expr>;<pos:position pos:line="28" pos:column="17"/></return>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="31" pos:column="3">/* Number of ticks since we last run. */</comment>
  <expr_stmt><expr><name pos:line="32" pos:column="3">ticks<pos:position pos:line="32" pos:column="8"/></name> <operator pos:line="32" pos:column="9">=<pos:position pos:line="32" pos:column="10"/></operator> <name><name pos:line="32" pos:column="11">lparstats<pos:position pos:line="32" pos:column="20"/></name><operator pos:line="32" pos:column="20">.<pos:position pos:line="32" pos:column="21"/></operator><name pos:line="32" pos:column="21">timebase_last<pos:position pos:line="32" pos:column="34"/></name></name> <operator pos:line="32" pos:column="35">-<pos:position pos:line="32" pos:column="36"/></operator> <name><name pos:line="32" pos:column="37">lparstats_old<pos:position pos:line="32" pos:column="50"/></name><operator pos:line="32" pos:column="50">.<pos:position pos:line="32" pos:column="51"/></operator><name pos:line="32" pos:column="51">timebase_last<pos:position pos:line="32" pos:column="64"/></name></name></expr>;<pos:position pos:line="32" pos:column="65"/></expr_stmt>
  <if pos:line="33" pos:column="3">if <condition pos:line="33" pos:column="6">(<expr><name pos:line="33" pos:column="7">ticks<pos:position pos:line="33" pos:column="12"/></name> <operator pos:line="33" pos:column="13">==<pos:position pos:line="33" pos:column="15"/></operator> <literal type="number" pos:line="33" pos:column="16">0<pos:position pos:line="33" pos:column="17"/></literal></expr>)<pos:position pos:line="33" pos:column="18"/></condition><then pos:line="33" pos:column="18"> <block pos:line="33" pos:column="19">{
    <comment type="block" pos:line="34" pos:column="5">/* The stats have not been updated. Return now to avoid
     * dividing by zero */</comment>
    <return pos:line="36" pos:column="5">return <expr><operator pos:line="36" pos:column="12">(<pos:position pos:line="36" pos:column="13"/></operator><literal type="number" pos:line="36" pos:column="13">0<pos:position pos:line="36" pos:column="14"/></literal><operator pos:line="36" pos:column="14">)<pos:position pos:line="36" pos:column="15"/></operator></expr>;<pos:position pos:line="36" pos:column="16"/></return>
  }<pos:position pos:line="37" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="39" pos:column="3">/*
   * On a shared partition, we're "entitled" to a certain amount of
   * processing power, for example 250/100 of a physical CPU. Processing
   * capacity not used by the partition may be assigned to a different
   * partition by the hypervisor, so "idle" is hopefully a very small
   * number.
   *
   * A dedicated partition may donate its CPUs to another partition and
   * may steal ticks from somewhere else (another partition or maybe the
   * shared pool, I don't know --octo).
   */</comment>

  <comment type="block" pos:line="51" pos:column="3">/* entitled_proc_capacity is in 1/100th of a CPU */</comment>
  <expr_stmt><expr><name pos:line="52" pos:column="3">entitled_proc_capacity<pos:position pos:line="52" pos:column="25"/></name> <operator pos:line="52" pos:column="26">=<pos:position pos:line="52" pos:column="27"/></operator> <literal type="number" pos:line="52" pos:column="28">0.01<pos:position pos:line="52" pos:column="32"/></literal> <operator pos:line="52" pos:column="33">*<pos:position pos:line="52" pos:column="34"/></operator> <operator pos:line="52" pos:column="35">(<pos:position pos:line="52" pos:column="36"/></operator><operator pos:line="52" pos:column="36">(<pos:position pos:line="52" pos:column="37"/></operator><name pos:line="52" pos:column="37">double<pos:position pos:line="52" pos:column="43"/></name><operator pos:line="52" pos:column="43">)<pos:position pos:line="52" pos:column="44"/></operator><name><name pos:line="52" pos:column="44">lparstats<pos:position pos:line="52" pos:column="53"/></name><operator pos:line="52" pos:column="53">.<pos:position pos:line="52" pos:column="54"/></operator><name pos:line="52" pos:column="54">entitled_proc_capacity<pos:position pos:line="52" pos:column="76"/></name></name><operator pos:line="52" pos:column="76">)<pos:position pos:line="52" pos:column="77"/></operator></expr>;<pos:position pos:line="52" pos:column="78"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="53" pos:column="3">lpar_submit<pos:position pos:line="53" pos:column="14"/></name><argument_list pos:line="53" pos:column="14">(<argument><expr><literal type="string" pos:line="53" pos:column="15">"entitled"<pos:position pos:line="53" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="27">entitled_proc_capacity<pos:position pos:line="53" pos:column="49"/></name></expr></argument>)<pos:position pos:line="53" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="51"/></expr_stmt>

  <comment type="block" pos:line="55" pos:column="3">/* The number of ticks actually spent in the various states */</comment>
  <expr_stmt><expr><name pos:line="56" pos:column="3">user_ticks<pos:position pos:line="56" pos:column="13"/></name> <operator pos:line="56" pos:column="14">=<pos:position pos:line="56" pos:column="15"/></operator> <name><name pos:line="56" pos:column="16">lparstats<pos:position pos:line="56" pos:column="25"/></name><operator pos:line="56" pos:column="25">.<pos:position pos:line="56" pos:column="26"/></operator><name pos:line="56" pos:column="26">puser<pos:position pos:line="56" pos:column="31"/></name></name> <operator pos:line="56" pos:column="32">-<pos:position pos:line="56" pos:column="33"/></operator> <name><name pos:line="56" pos:column="34">lparstats_old<pos:position pos:line="56" pos:column="47"/></name><operator pos:line="56" pos:column="47">.<pos:position pos:line="56" pos:column="48"/></operator><name pos:line="56" pos:column="48">puser<pos:position pos:line="56" pos:column="53"/></name></name></expr>;<pos:position pos:line="56" pos:column="54"/></expr_stmt>
  <expr_stmt><expr><name pos:line="57" pos:column="3">syst_ticks<pos:position pos:line="57" pos:column="13"/></name> <operator pos:line="57" pos:column="14">=<pos:position pos:line="57" pos:column="15"/></operator> <name><name pos:line="57" pos:column="16">lparstats<pos:position pos:line="57" pos:column="25"/></name><operator pos:line="57" pos:column="25">.<pos:position pos:line="57" pos:column="26"/></operator><name pos:line="57" pos:column="26">psys<pos:position pos:line="57" pos:column="30"/></name></name> <operator pos:line="57" pos:column="31">-<pos:position pos:line="57" pos:column="32"/></operator> <name><name pos:line="57" pos:column="33">lparstats_old<pos:position pos:line="57" pos:column="46"/></name><operator pos:line="57" pos:column="46">.<pos:position pos:line="57" pos:column="47"/></operator><name pos:line="57" pos:column="47">psys<pos:position pos:line="57" pos:column="51"/></name></name></expr>;<pos:position pos:line="57" pos:column="52"/></expr_stmt>
  <expr_stmt><expr><name pos:line="58" pos:column="3">wait_ticks<pos:position pos:line="58" pos:column="13"/></name> <operator pos:line="58" pos:column="14">=<pos:position pos:line="58" pos:column="15"/></operator> <name><name pos:line="58" pos:column="16">lparstats<pos:position pos:line="58" pos:column="25"/></name><operator pos:line="58" pos:column="25">.<pos:position pos:line="58" pos:column="26"/></operator><name pos:line="58" pos:column="26">pwait<pos:position pos:line="58" pos:column="31"/></name></name> <operator pos:line="58" pos:column="32">-<pos:position pos:line="58" pos:column="33"/></operator> <name><name pos:line="58" pos:column="34">lparstats_old<pos:position pos:line="58" pos:column="47"/></name><operator pos:line="58" pos:column="47">.<pos:position pos:line="58" pos:column="48"/></operator><name pos:line="58" pos:column="48">pwait<pos:position pos:line="58" pos:column="53"/></name></name></expr>;<pos:position pos:line="58" pos:column="54"/></expr_stmt>
  <expr_stmt><expr><name pos:line="59" pos:column="3">idle_ticks<pos:position pos:line="59" pos:column="13"/></name> <operator pos:line="59" pos:column="14">=<pos:position pos:line="59" pos:column="15"/></operator> <name><name pos:line="59" pos:column="16">lparstats<pos:position pos:line="59" pos:column="25"/></name><operator pos:line="59" pos:column="25">.<pos:position pos:line="59" pos:column="26"/></operator><name pos:line="59" pos:column="26">pidle<pos:position pos:line="59" pos:column="31"/></name></name> <operator pos:line="59" pos:column="32">-<pos:position pos:line="59" pos:column="33"/></operator> <name><name pos:line="59" pos:column="34">lparstats_old<pos:position pos:line="59" pos:column="47"/></name><operator pos:line="59" pos:column="47">.<pos:position pos:line="59" pos:column="48"/></operator><name pos:line="59" pos:column="48">pidle<pos:position pos:line="59" pos:column="53"/></name></name></expr>;<pos:position pos:line="59" pos:column="54"/></expr_stmt>
  <expr_stmt><expr><name pos:line="60" pos:column="3">consumed_ticks<pos:position pos:line="60" pos:column="17"/></name> <operator pos:line="60" pos:column="18">=<pos:position pos:line="60" pos:column="19"/></operator> <name pos:line="60" pos:column="20">user_ticks<pos:position pos:line="60" pos:column="30"/></name> <operator pos:line="60" pos:column="31">+<pos:position pos:line="60" pos:column="32"/></operator> <name pos:line="60" pos:column="33">syst_ticks<pos:position pos:line="60" pos:column="43"/></name> <operator pos:line="60" pos:column="44">+<pos:position pos:line="60" pos:column="45"/></operator> <name pos:line="60" pos:column="46">wait_ticks<pos:position pos:line="60" pos:column="56"/></name> <operator pos:line="60" pos:column="57">+<pos:position pos:line="60" pos:column="58"/></operator> <name pos:line="60" pos:column="59">idle_ticks<pos:position pos:line="60" pos:column="69"/></name></expr>;<pos:position pos:line="60" pos:column="70"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="62" pos:column="3">lpar_submit<pos:position pos:line="62" pos:column="14"/></name><argument_list pos:line="62" pos:column="14">(<argument><expr><literal type="string" pos:line="62" pos:column="15">"user"<pos:position pos:line="62" pos:column="21"/></literal></expr></argument>, <argument><expr><operator pos:line="62" pos:column="23">(<pos:position pos:line="62" pos:column="24"/></operator><name pos:line="62" pos:column="24">double<pos:position pos:line="62" pos:column="30"/></name><operator pos:line="62" pos:column="30">)<pos:position pos:line="62" pos:column="31"/></operator><name pos:line="62" pos:column="31">user_ticks<pos:position pos:line="62" pos:column="41"/></name> <operator pos:line="62" pos:column="42">/<pos:position pos:line="62" pos:column="43"/></operator> <operator pos:line="62" pos:column="44">(<pos:position pos:line="62" pos:column="45"/></operator><name pos:line="62" pos:column="45">double<pos:position pos:line="62" pos:column="51"/></name><operator pos:line="62" pos:column="51">)<pos:position pos:line="62" pos:column="52"/></operator><name pos:line="62" pos:column="52">ticks<pos:position pos:line="62" pos:column="57"/></name></expr></argument>)<pos:position pos:line="62" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="59"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="63" pos:column="3">lpar_submit<pos:position pos:line="63" pos:column="14"/></name><argument_list pos:line="63" pos:column="14">(<argument><expr><literal type="string" pos:line="63" pos:column="15">"system"<pos:position pos:line="63" pos:column="23"/></literal></expr></argument>, <argument><expr><operator pos:line="63" pos:column="25">(<pos:position pos:line="63" pos:column="26"/></operator><name pos:line="63" pos:column="26">double<pos:position pos:line="63" pos:column="32"/></name><operator pos:line="63" pos:column="32">)<pos:position pos:line="63" pos:column="33"/></operator><name pos:line="63" pos:column="33">syst_ticks<pos:position pos:line="63" pos:column="43"/></name> <operator pos:line="63" pos:column="44">/<pos:position pos:line="63" pos:column="45"/></operator> <operator pos:line="63" pos:column="46">(<pos:position pos:line="63" pos:column="47"/></operator><name pos:line="63" pos:column="47">double<pos:position pos:line="63" pos:column="53"/></name><operator pos:line="63" pos:column="53">)<pos:position pos:line="63" pos:column="54"/></operator><name pos:line="63" pos:column="54">ticks<pos:position pos:line="63" pos:column="59"/></name></expr></argument>)<pos:position pos:line="63" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="61"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="64" pos:column="3">lpar_submit<pos:position pos:line="64" pos:column="14"/></name><argument_list pos:line="64" pos:column="14">(<argument><expr><literal type="string" pos:line="64" pos:column="15">"wait"<pos:position pos:line="64" pos:column="21"/></literal></expr></argument>, <argument><expr><operator pos:line="64" pos:column="23">(<pos:position pos:line="64" pos:column="24"/></operator><name pos:line="64" pos:column="24">double<pos:position pos:line="64" pos:column="30"/></name><operator pos:line="64" pos:column="30">)<pos:position pos:line="64" pos:column="31"/></operator><name pos:line="64" pos:column="31">wait_ticks<pos:position pos:line="64" pos:column="41"/></name> <operator pos:line="64" pos:column="42">/<pos:position pos:line="64" pos:column="43"/></operator> <operator pos:line="64" pos:column="44">(<pos:position pos:line="64" pos:column="45"/></operator><name pos:line="64" pos:column="45">double<pos:position pos:line="64" pos:column="51"/></name><operator pos:line="64" pos:column="51">)<pos:position pos:line="64" pos:column="52"/></operator><name pos:line="64" pos:column="52">ticks<pos:position pos:line="64" pos:column="57"/></name></expr></argument>)<pos:position pos:line="64" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="59"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="65" pos:column="3">lpar_submit<pos:position pos:line="65" pos:column="14"/></name><argument_list pos:line="65" pos:column="14">(<argument><expr><literal type="string" pos:line="65" pos:column="15">"idle"<pos:position pos:line="65" pos:column="21"/></literal></expr></argument>, <argument><expr><operator pos:line="65" pos:column="23">(<pos:position pos:line="65" pos:column="24"/></operator><name pos:line="65" pos:column="24">double<pos:position pos:line="65" pos:column="30"/></name><operator pos:line="65" pos:column="30">)<pos:position pos:line="65" pos:column="31"/></operator><name pos:line="65" pos:column="31">idle_ticks<pos:position pos:line="65" pos:column="41"/></name> <operator pos:line="65" pos:column="42">/<pos:position pos:line="65" pos:column="43"/></operator> <operator pos:line="65" pos:column="44">(<pos:position pos:line="65" pos:column="45"/></operator><name pos:line="65" pos:column="45">double<pos:position pos:line="65" pos:column="51"/></name><operator pos:line="65" pos:column="51">)<pos:position pos:line="65" pos:column="52"/></operator><name pos:line="65" pos:column="52">ticks<pos:position pos:line="65" pos:column="57"/></name></expr></argument>)<pos:position pos:line="65" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="59"/></expr_stmt>

<cpp:if pos:line="67" pos:column="1">#<cpp:directive pos:line="67" pos:column="2">if<pos:position pos:line="67" pos:column="4"/></cpp:directive> <expr><name pos:line="67" pos:column="5">PERFSTAT_SUPPORTS_DONATION<pos:position pos:line="67" pos:column="31"/></name></expr></cpp:if>
  <if pos:line="68" pos:column="3">if <condition pos:line="68" pos:column="6">(<expr><name pos:line="68" pos:column="7">donate_flag<pos:position pos:line="68" pos:column="18"/></name></expr>)<pos:position pos:line="68" pos:column="19"/></condition><then pos:line="68" pos:column="19"> <block pos:line="68" pos:column="20">{
    <comment type="block" pos:line="69" pos:column="5">/* donated =&gt; ticks given to another partition
     * stolen  =&gt; ticks received from another partition */</comment>
    <decl_stmt><decl><type><name pos:line="71" pos:column="5">u_longlong_t<pos:position pos:line="71" pos:column="17"/></name></type> <name pos:line="71" pos:column="18">idle_donated_ticks<pos:position pos:line="71" pos:column="36"/></name></decl>, <decl><type ref="prev"/><name pos:line="71" pos:column="38">busy_donated_ticks<pos:position pos:line="71" pos:column="56"/></name></decl>;<pos:position pos:line="71" pos:column="57"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="72" pos:column="5">u_longlong_t<pos:position pos:line="72" pos:column="17"/></name></type> <name pos:line="72" pos:column="18">idle_stolen_ticks<pos:position pos:line="72" pos:column="35"/></name></decl>, <decl><type ref="prev"/><name pos:line="72" pos:column="37">busy_stolen_ticks<pos:position pos:line="72" pos:column="54"/></name></decl>;<pos:position pos:line="72" pos:column="55"/></decl_stmt>

    <comment type="block" pos:line="74" pos:column="5">/* FYI:  PURR == Processor Utilization of Resources Register
     *      SPURR == Scaled PURR */</comment>
    <expr_stmt><expr><name pos:line="76" pos:column="5">idle_donated_ticks<pos:position pos:line="76" pos:column="23"/></name> <operator pos:line="76" pos:column="24">=<pos:position pos:line="76" pos:column="25"/></operator>
        <name><name pos:line="77" pos:column="9">lparstats<pos:position pos:line="77" pos:column="18"/></name><operator pos:line="77" pos:column="18">.<pos:position pos:line="77" pos:column="19"/></operator><name pos:line="77" pos:column="19">idle_donated_purr<pos:position pos:line="77" pos:column="36"/></name></name> <operator pos:line="77" pos:column="37">-<pos:position pos:line="77" pos:column="38"/></operator> <name><name pos:line="77" pos:column="39">lparstats_old<pos:position pos:line="77" pos:column="52"/></name><operator pos:line="77" pos:column="52">.<pos:position pos:line="77" pos:column="53"/></operator><name pos:line="77" pos:column="53">idle_donated_purr<pos:position pos:line="77" pos:column="70"/></name></name></expr>;<pos:position pos:line="77" pos:column="71"/></expr_stmt>
    <expr_stmt><expr><name pos:line="78" pos:column="5">busy_donated_ticks<pos:position pos:line="78" pos:column="23"/></name> <operator pos:line="78" pos:column="24">=<pos:position pos:line="78" pos:column="25"/></operator>
        <name><name pos:line="79" pos:column="9">lparstats<pos:position pos:line="79" pos:column="18"/></name><operator pos:line="79" pos:column="18">.<pos:position pos:line="79" pos:column="19"/></operator><name pos:line="79" pos:column="19">busy_donated_purr<pos:position pos:line="79" pos:column="36"/></name></name> <operator pos:line="79" pos:column="37">-<pos:position pos:line="79" pos:column="38"/></operator> <name><name pos:line="79" pos:column="39">lparstats_old<pos:position pos:line="79" pos:column="52"/></name><operator pos:line="79" pos:column="52">.<pos:position pos:line="79" pos:column="53"/></operator><name pos:line="79" pos:column="53">busy_donated_purr<pos:position pos:line="79" pos:column="70"/></name></name></expr>;<pos:position pos:line="79" pos:column="71"/></expr_stmt>
    <expr_stmt><expr><name pos:line="80" pos:column="5">idle_stolen_ticks<pos:position pos:line="80" pos:column="22"/></name> <operator pos:line="80" pos:column="23">=<pos:position pos:line="80" pos:column="24"/></operator>
        <name><name pos:line="81" pos:column="9">lparstats<pos:position pos:line="81" pos:column="18"/></name><operator pos:line="81" pos:column="18">.<pos:position pos:line="81" pos:column="19"/></operator><name pos:line="81" pos:column="19">idle_stolen_purr<pos:position pos:line="81" pos:column="35"/></name></name> <operator pos:line="81" pos:column="36">-<pos:position pos:line="81" pos:column="37"/></operator> <name><name pos:line="81" pos:column="38">lparstats_old<pos:position pos:line="81" pos:column="51"/></name><operator pos:line="81" pos:column="51">.<pos:position pos:line="81" pos:column="52"/></operator><name pos:line="81" pos:column="52">idle_stolen_purr<pos:position pos:line="81" pos:column="68"/></name></name></expr>;<pos:position pos:line="81" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><name pos:line="82" pos:column="5">busy_stolen_ticks<pos:position pos:line="82" pos:column="22"/></name> <operator pos:line="82" pos:column="23">=<pos:position pos:line="82" pos:column="24"/></operator>
        <name><name pos:line="83" pos:column="9">lparstats<pos:position pos:line="83" pos:column="18"/></name><operator pos:line="83" pos:column="18">.<pos:position pos:line="83" pos:column="19"/></operator><name pos:line="83" pos:column="19">busy_stolen_purr<pos:position pos:line="83" pos:column="35"/></name></name> <operator pos:line="83" pos:column="36">-<pos:position pos:line="83" pos:column="37"/></operator> <name><name pos:line="83" pos:column="38">lparstats_old<pos:position pos:line="83" pos:column="51"/></name><operator pos:line="83" pos:column="51">.<pos:position pos:line="83" pos:column="52"/></operator><name pos:line="83" pos:column="52">busy_stolen_purr<pos:position pos:line="83" pos:column="68"/></name></name></expr>;<pos:position pos:line="83" pos:column="69"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="85" pos:column="5">lpar_submit<pos:position pos:line="85" pos:column="16"/></name><argument_list pos:line="85" pos:column="16">(<argument><expr><literal type="string" pos:line="85" pos:column="17">"idle_donated"<pos:position pos:line="85" pos:column="31"/></literal></expr></argument>, <argument><expr><operator pos:line="85" pos:column="33">(<pos:position pos:line="85" pos:column="34"/></operator><name pos:line="85" pos:column="34">double<pos:position pos:line="85" pos:column="40"/></name><operator pos:line="85" pos:column="40">)<pos:position pos:line="85" pos:column="41"/></operator><name pos:line="85" pos:column="41">idle_donated_ticks<pos:position pos:line="85" pos:column="59"/></name> <operator pos:line="85" pos:column="60">/<pos:position pos:line="85" pos:column="61"/></operator> <operator pos:line="85" pos:column="62">(<pos:position pos:line="85" pos:column="63"/></operator><name pos:line="85" pos:column="63">double<pos:position pos:line="85" pos:column="69"/></name><operator pos:line="85" pos:column="69">)<pos:position pos:line="85" pos:column="70"/></operator><name pos:line="85" pos:column="70">ticks<pos:position pos:line="85" pos:column="75"/></name></expr></argument>)<pos:position pos:line="85" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="77"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="86" pos:column="5">lpar_submit<pos:position pos:line="86" pos:column="16"/></name><argument_list pos:line="86" pos:column="16">(<argument><expr><literal type="string" pos:line="86" pos:column="17">"busy_donated"<pos:position pos:line="86" pos:column="31"/></literal></expr></argument>, <argument><expr><operator pos:line="86" pos:column="33">(<pos:position pos:line="86" pos:column="34"/></operator><name pos:line="86" pos:column="34">double<pos:position pos:line="86" pos:column="40"/></name><operator pos:line="86" pos:column="40">)<pos:position pos:line="86" pos:column="41"/></operator><name pos:line="86" pos:column="41">busy_donated_ticks<pos:position pos:line="86" pos:column="59"/></name> <operator pos:line="86" pos:column="60">/<pos:position pos:line="86" pos:column="61"/></operator> <operator pos:line="86" pos:column="62">(<pos:position pos:line="86" pos:column="63"/></operator><name pos:line="86" pos:column="63">double<pos:position pos:line="86" pos:column="69"/></name><operator pos:line="86" pos:column="69">)<pos:position pos:line="86" pos:column="70"/></operator><name pos:line="86" pos:column="70">ticks<pos:position pos:line="86" pos:column="75"/></name></expr></argument>)<pos:position pos:line="86" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="77"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="87" pos:column="5">lpar_submit<pos:position pos:line="87" pos:column="16"/></name><argument_list pos:line="87" pos:column="16">(<argument><expr><literal type="string" pos:line="87" pos:column="17">"idle_stolen"<pos:position pos:line="87" pos:column="30"/></literal></expr></argument>, <argument><expr><operator pos:line="87" pos:column="32">(<pos:position pos:line="87" pos:column="33"/></operator><name pos:line="87" pos:column="33">double<pos:position pos:line="87" pos:column="39"/></name><operator pos:line="87" pos:column="39">)<pos:position pos:line="87" pos:column="40"/></operator><name pos:line="87" pos:column="40">idle_stolen_ticks<pos:position pos:line="87" pos:column="57"/></name> <operator pos:line="87" pos:column="58">/<pos:position pos:line="87" pos:column="59"/></operator> <operator pos:line="87" pos:column="60">(<pos:position pos:line="87" pos:column="61"/></operator><name pos:line="87" pos:column="61">double<pos:position pos:line="87" pos:column="67"/></name><operator pos:line="87" pos:column="67">)<pos:position pos:line="87" pos:column="68"/></operator><name pos:line="87" pos:column="68">ticks<pos:position pos:line="87" pos:column="73"/></name></expr></argument>)<pos:position pos:line="87" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="75"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="88" pos:column="5">lpar_submit<pos:position pos:line="88" pos:column="16"/></name><argument_list pos:line="88" pos:column="16">(<argument><expr><literal type="string" pos:line="88" pos:column="17">"busy_stolen"<pos:position pos:line="88" pos:column="30"/></literal></expr></argument>, <argument><expr><operator pos:line="88" pos:column="32">(<pos:position pos:line="88" pos:column="33"/></operator><name pos:line="88" pos:column="33">double<pos:position pos:line="88" pos:column="39"/></name><operator pos:line="88" pos:column="39">)<pos:position pos:line="88" pos:column="40"/></operator><name pos:line="88" pos:column="40">busy_stolen_ticks<pos:position pos:line="88" pos:column="57"/></name> <operator pos:line="88" pos:column="58">/<pos:position pos:line="88" pos:column="59"/></operator> <operator pos:line="88" pos:column="60">(<pos:position pos:line="88" pos:column="61"/></operator><name pos:line="88" pos:column="61">double<pos:position pos:line="88" pos:column="67"/></name><operator pos:line="88" pos:column="67">)<pos:position pos:line="88" pos:column="68"/></operator><name pos:line="88" pos:column="68">ticks<pos:position pos:line="88" pos:column="73"/></name></expr></argument>)<pos:position pos:line="88" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="75"/></expr_stmt>

    <comment type="block" pos:line="90" pos:column="5">/* Donated ticks will be accounted for as stolen ticks in other LPARs */</comment>
    <expr_stmt><expr><name pos:line="91" pos:column="5">consumed_ticks<pos:position pos:line="91" pos:column="19"/></name> <operator pos:line="91" pos:column="20">+=<pos:position pos:line="91" pos:column="22"/></operator> <name pos:line="91" pos:column="23">idle_stolen_ticks<pos:position pos:line="91" pos:column="40"/></name> <operator pos:line="91" pos:column="41">+<pos:position pos:line="91" pos:column="42"/></operator> <name pos:line="91" pos:column="43">busy_stolen_ticks<pos:position pos:line="91" pos:column="60"/></name></expr>;<pos:position pos:line="91" pos:column="61"/></expr_stmt>
  }<pos:position pos:line="92" pos:column="4"/></block></then></if>
<cpp:endif pos:line="93" pos:column="1">#<cpp:directive pos:line="93" pos:column="2">endif<pos:position pos:line="93" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><call><name pos:line="95" pos:column="3">lpar_submit<pos:position pos:line="95" pos:column="14"/></name><argument_list pos:line="95" pos:column="14">(<argument><expr><literal type="string" pos:line="95" pos:column="15">"consumed"<pos:position pos:line="95" pos:column="25"/></literal></expr></argument>, <argument><expr><operator pos:line="95" pos:column="27">(<pos:position pos:line="95" pos:column="28"/></operator><name pos:line="95" pos:column="28">double<pos:position pos:line="95" pos:column="34"/></name><operator pos:line="95" pos:column="34">)<pos:position pos:line="95" pos:column="35"/></operator><name pos:line="95" pos:column="35">consumed_ticks<pos:position pos:line="95" pos:column="49"/></name> <operator pos:line="95" pos:column="50">/<pos:position pos:line="95" pos:column="51"/></operator> <operator pos:line="95" pos:column="52">(<pos:position pos:line="95" pos:column="53"/></operator><name pos:line="95" pos:column="53">double<pos:position pos:line="95" pos:column="59"/></name><operator pos:line="95" pos:column="59">)<pos:position pos:line="95" pos:column="60"/></operator><name pos:line="95" pos:column="60">ticks<pos:position pos:line="95" pos:column="65"/></name></expr></argument>)<pos:position pos:line="95" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="67"/></expr_stmt>

  <if pos:line="97" pos:column="3">if <condition pos:line="97" pos:column="6">(<expr><name pos:line="97" pos:column="7">pool_stats<pos:position pos:line="97" pos:column="17"/></name></expr>)<pos:position pos:line="97" pos:column="18"/></condition><then pos:line="97" pos:column="18"> <block pos:line="97" pos:column="19">{
    <decl_stmt><decl><type><name pos:line="98" pos:column="5">char<pos:position pos:line="98" pos:column="9"/></name></type> <name><name pos:line="98" pos:column="10">typinst<pos:position pos:line="98" pos:column="17"/></name><index pos:line="98" pos:column="17">[<expr><name pos:line="98" pos:column="18">DATA_MAX_NAME_LEN<pos:position pos:line="98" pos:column="35"/></name></expr>]<pos:position pos:line="98" pos:column="36"/></index></name></decl>;<pos:position pos:line="98" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="99" pos:column="5">u_longlong_t<pos:position pos:line="99" pos:column="17"/></name></type> <name pos:line="99" pos:column="18">pool_idle_cticks<pos:position pos:line="99" pos:column="34"/></name></decl>;<pos:position pos:line="99" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="100" pos:column="5">double<pos:position pos:line="100" pos:column="11"/></name></type> <name pos:line="100" pos:column="12">pool_idle_cpus<pos:position pos:line="100" pos:column="26"/></name></decl>;<pos:position pos:line="100" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="101" pos:column="5">double<pos:position pos:line="101" pos:column="11"/></name></type> <name pos:line="101" pos:column="12">pool_busy_cpus<pos:position pos:line="101" pos:column="26"/></name></decl>;<pos:position pos:line="101" pos:column="27"/></decl_stmt>

    <comment type="block" pos:line="103" pos:column="5">/* We're calculating "busy" from "idle" and the total number of
     * CPUs, because the "busy" member didn't exist in early versions
     * of libperfstat. It was added somewhere between AIX 5.3 ML5 and ML9. */</comment>
    <expr_stmt><expr><name pos:line="106" pos:column="5">pool_idle_cticks<pos:position pos:line="106" pos:column="21"/></name> <operator pos:line="106" pos:column="22">=<pos:position pos:line="106" pos:column="23"/></operator> <name><name pos:line="106" pos:column="24">lparstats<pos:position pos:line="106" pos:column="33"/></name><operator pos:line="106" pos:column="33">.<pos:position pos:line="106" pos:column="34"/></operator><name pos:line="106" pos:column="34">pool_idle_time<pos:position pos:line="106" pos:column="48"/></name></name> <operator pos:line="106" pos:column="49">-<pos:position pos:line="106" pos:column="50"/></operator> <name><name pos:line="106" pos:column="51">lparstats_old<pos:position pos:line="106" pos:column="64"/></name><operator pos:line="106" pos:column="64">.<pos:position pos:line="106" pos:column="65"/></operator><name pos:line="106" pos:column="65">pool_idle_time<pos:position pos:line="106" pos:column="79"/></name></name></expr>;<pos:position pos:line="106" pos:column="80"/></expr_stmt>
    <expr_stmt><expr><name pos:line="107" pos:column="5">pool_idle_cpus<pos:position pos:line="107" pos:column="19"/></name> <operator pos:line="107" pos:column="20">=<pos:position pos:line="107" pos:column="21"/></operator>
        <call><name pos:line="108" pos:column="9">CLOCKTICKS_TO_TICKS<pos:position pos:line="108" pos:column="28"/></name><argument_list pos:line="108" pos:column="28">(<argument><expr><operator pos:line="108" pos:column="29">(<pos:position pos:line="108" pos:column="30"/></operator><name pos:line="108" pos:column="30">double<pos:position pos:line="108" pos:column="36"/></name><operator pos:line="108" pos:column="36">)<pos:position pos:line="108" pos:column="37"/></operator><name pos:line="108" pos:column="37">pool_idle_cticks<pos:position pos:line="108" pos:column="53"/></name></expr></argument>)<pos:position pos:line="108" pos:column="54"/></argument_list></call> <operator pos:line="108" pos:column="55">/<pos:position pos:line="108" pos:column="56"/></operator> <operator pos:line="108" pos:column="57">(<pos:position pos:line="108" pos:column="58"/></operator><name pos:line="108" pos:column="58">double<pos:position pos:line="108" pos:column="64"/></name><operator pos:line="108" pos:column="64">)<pos:position pos:line="108" pos:column="65"/></operator><name pos:line="108" pos:column="65">ticks<pos:position pos:line="108" pos:column="70"/></name></expr>;<pos:position pos:line="108" pos:column="71"/></expr_stmt>
    <expr_stmt><expr><name pos:line="109" pos:column="5">pool_busy_cpus<pos:position pos:line="109" pos:column="19"/></name> <operator pos:line="109" pos:column="20">=<pos:position pos:line="109" pos:column="21"/></operator> <operator pos:line="109" pos:column="22">(<pos:position pos:line="109" pos:column="23"/></operator><operator pos:line="109" pos:column="23">(<pos:position pos:line="109" pos:column="24"/></operator><name pos:line="109" pos:column="24">double<pos:position pos:line="109" pos:column="30"/></name><operator pos:line="109" pos:column="30">)<pos:position pos:line="109" pos:column="31"/></operator><name><name pos:line="109" pos:column="31">lparstats<pos:position pos:line="109" pos:column="40"/></name><operator pos:line="109" pos:column="40">.<pos:position pos:line="109" pos:column="41"/></operator><name pos:line="109" pos:column="41">phys_cpus_pool<pos:position pos:line="109" pos:column="55"/></name></name><operator pos:line="109" pos:column="55">)<pos:position pos:line="109" pos:column="56"/></operator> <operator pos:line="109" pos:column="57">-<pos:position pos:line="109" pos:column="58"/></operator> <name pos:line="109" pos:column="59">pool_idle_cpus<pos:position pos:line="109" pos:column="73"/></name></expr>;<pos:position pos:line="109" pos:column="74"/></expr_stmt>
    <if pos:line="110" pos:column="5">if <condition pos:line="110" pos:column="8">(<expr><name pos:line="110" pos:column="9">pool_busy_cpus<pos:position pos:line="110" pos:column="23"/></name> <operator pos:line="110" pos:column="24">&lt;<pos:position pos:line="110" pos:column="28"/></operator> <literal type="number" pos:line="110" pos:column="26">0.0<pos:position pos:line="110" pos:column="29"/></literal></expr>)<pos:position pos:line="110" pos:column="30"/></condition><then pos:line="110" pos:column="30">
      <block type="pseudo"><expr_stmt><expr><name pos:line="111" pos:column="7">pool_busy_cpus<pos:position pos:line="111" pos:column="21"/></name> <operator pos:line="111" pos:column="22">=<pos:position pos:line="111" pos:column="23"/></operator> <literal type="number" pos:line="111" pos:column="24">0.0<pos:position pos:line="111" pos:column="27"/></literal></expr>;<pos:position pos:line="111" pos:column="28"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="113" pos:column="5">ssnprintf<pos:position pos:line="113" pos:column="14"/></name><argument_list pos:line="113" pos:column="14">(<argument><expr><name pos:line="113" pos:column="15">typinst<pos:position pos:line="113" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="113" pos:column="24">sizeof<argument_list pos:line="113" pos:column="30">(<argument><expr><name pos:line="113" pos:column="31">typinst<pos:position pos:line="113" pos:column="38"/></name></expr></argument>)<pos:position pos:line="113" pos:column="39"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="113" pos:column="41">"pool-%X-busy"<pos:position pos:line="113" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="113" pos:column="57">lparstats<pos:position pos:line="113" pos:column="66"/></name><operator pos:line="113" pos:column="66">.<pos:position pos:line="113" pos:column="67"/></operator><name pos:line="113" pos:column="67">pool_id<pos:position pos:line="113" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="113" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="76"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="114" pos:column="5">lpar_submit<pos:position pos:line="114" pos:column="16"/></name><argument_list pos:line="114" pos:column="16">(<argument><expr><name pos:line="114" pos:column="17">typinst<pos:position pos:line="114" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="26">pool_busy_cpus<pos:position pos:line="114" pos:column="40"/></name></expr></argument>)<pos:position pos:line="114" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="42"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="116" pos:column="5">ssnprintf<pos:position pos:line="116" pos:column="14"/></name><argument_list pos:line="116" pos:column="14">(<argument><expr><name pos:line="116" pos:column="15">typinst<pos:position pos:line="116" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="116" pos:column="24">sizeof<argument_list pos:line="116" pos:column="30">(<argument><expr><name pos:line="116" pos:column="31">typinst<pos:position pos:line="116" pos:column="38"/></name></expr></argument>)<pos:position pos:line="116" pos:column="39"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="116" pos:column="41">"pool-%X-idle"<pos:position pos:line="116" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="116" pos:column="57">lparstats<pos:position pos:line="116" pos:column="66"/></name><operator pos:line="116" pos:column="66">.<pos:position pos:line="116" pos:column="67"/></operator><name pos:line="116" pos:column="67">pool_id<pos:position pos:line="116" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="116" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="76"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="117" pos:column="5">lpar_submit<pos:position pos:line="117" pos:column="16"/></name><argument_list pos:line="117" pos:column="16">(<argument><expr><name pos:line="117" pos:column="17">typinst<pos:position pos:line="117" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="26">pool_idle_cpus<pos:position pos:line="117" pos:column="40"/></name></expr></argument>)<pos:position pos:line="117" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="42"/></expr_stmt>
  }<pos:position pos:line="118" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="120" pos:column="3">memcpy<pos:position pos:line="120" pos:column="9"/></name><argument_list pos:line="120" pos:column="9">(<argument><expr><operator pos:line="120" pos:column="10">&amp;<pos:position pos:line="120" pos:column="15"/></operator><name pos:line="120" pos:column="11">lparstats_old<pos:position pos:line="120" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="120" pos:column="26">&amp;<pos:position pos:line="120" pos:column="31"/></operator><name pos:line="120" pos:column="27">lparstats<pos:position pos:line="120" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="120" pos:column="38">sizeof<argument_list pos:line="120" pos:column="44">(<argument><expr><name pos:line="120" pos:column="45">lparstats_old<pos:position pos:line="120" pos:column="58"/></name></expr></argument>)<pos:position pos:line="120" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="120" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="61"/></expr_stmt>

  <return pos:line="122" pos:column="3">return <expr><operator pos:line="122" pos:column="10">(<pos:position pos:line="122" pos:column="11"/></operator><literal type="number" pos:line="122" pos:column="11">0<pos:position pos:line="122" pos:column="12"/></literal><operator pos:line="122" pos:column="12">)<pos:position pos:line="122" pos:column="13"/></operator></expr>;<pos:position pos:line="122" pos:column="14"/></return>
}<pos:position pos:line="123" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1370_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">lpar_read<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">void<pos:position pos:line="1" pos:column="27"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="28"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">perfstat_partition_total_t<pos:position pos:line="3" pos:column="35"/></name></type> <name pos:line="3" pos:column="36">lparstats<pos:position pos:line="3" pos:column="45"/></name></decl>;<pos:position pos:line="3" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">status<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">utsname<pos:position pos:line="5" pos:column="23"/></name></name></type> <name pos:line="5" pos:column="24">name<pos:position pos:line="5" pos:column="28"/></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">u_longlong_t<pos:position pos:line="6" pos:column="21"/></name></type> <name pos:line="6" pos:column="22">ticks<pos:position pos:line="6" pos:column="27"/></name></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">u_longlong_t<pos:position pos:line="7" pos:column="21"/></name></type> <name pos:line="7" pos:column="22">user_ticks<pos:position pos:line="7" pos:column="32"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="34">syst_ticks<pos:position pos:line="7" pos:column="44"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="46">wait_ticks<pos:position pos:line="7" pos:column="56"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="58">idle_ticks<pos:position pos:line="7" pos:column="68"/></name></decl>;<pos:position pos:line="7" pos:column="69"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">u_longlong_t<pos:position pos:line="8" pos:column="21"/></name></type> <name pos:line="8" pos:column="22">consumed_ticks<pos:position pos:line="8" pos:column="36"/></name></decl>;<pos:position pos:line="8" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">double<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">entitled_proc_capacity<pos:position pos:line="9" pos:column="38"/></name></decl>;<pos:position pos:line="9" pos:column="39"/></decl_stmt>

	<comment type="block" pos:line="11" pos:column="9">/* An LPAR has the same serial number as the physical system it is currently
	   running on. It is a convenient way of tracking LPARs as they are moved
	   from chassis to chassis through Live Partition Mobility (LPM). */</comment>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><call><name pos:line="14" pos:column="13">uname<pos:position pos:line="14" pos:column="18"/></name> <argument_list pos:line="14" pos:column="19">(<argument><expr><operator pos:line="14" pos:column="20">&amp;<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="21">name<pos:position pos:line="14" pos:column="25"/></name></expr></argument>)<pos:position pos:line="14" pos:column="26"/></argument_list></call> <operator pos:line="14" pos:column="27">!=<pos:position pos:line="14" pos:column="29"/></operator> <literal type="number" pos:line="14" pos:column="30">0<pos:position pos:line="14" pos:column="31"/></literal></expr>)<pos:position pos:line="14" pos:column="32"/></condition><then pos:line="14" pos:column="32">
	<block pos:line="15" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">ERROR<pos:position pos:line="16" pos:column="22"/></name> <argument_list pos:line="16" pos:column="23">(<argument><expr><literal type="string" pos:line="16" pos:column="24">"lpar plugin: uname failed."<pos:position pos:line="16" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="54"/></expr_stmt>
		<return pos:line="17" pos:column="17">return <expr><operator pos:line="17" pos:column="24">(<pos:position pos:line="17" pos:column="25"/></operator><operator pos:line="17" pos:column="25">-<pos:position pos:line="17" pos:column="26"/></operator><literal type="number" pos:line="17" pos:column="26">1<pos:position pos:line="17" pos:column="27"/></literal><operator pos:line="17" pos:column="27">)<pos:position pos:line="17" pos:column="28"/></operator></expr>;<pos:position pos:line="17" pos:column="29"/></return>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="19" pos:column="9">sstrncpy<pos:position pos:line="19" pos:column="17"/></name> <argument_list pos:line="19" pos:column="18">(<argument><expr><name pos:line="19" pos:column="19">serial<pos:position pos:line="19" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="27">name<pos:position pos:line="19" pos:column="31"/></name><operator pos:line="19" pos:column="31">.<pos:position pos:line="19" pos:column="32"/></operator><name pos:line="19" pos:column="32">machine<pos:position pos:line="19" pos:column="39"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="41">sizeof <argument_list pos:line="19" pos:column="48">(<argument><expr><name pos:line="19" pos:column="49">serial<pos:position pos:line="19" pos:column="55"/></name></expr></argument>)<pos:position pos:line="19" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="58"/></expr_stmt>

	<comment type="block" pos:line="21" pos:column="9">/* Retrieve the current metrics. Returns the number of structures filled. */</comment>
	<expr_stmt><expr><name pos:line="22" pos:column="9">status<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <call><name pos:line="22" pos:column="18">perfstat_partition_total<pos:position pos:line="22" pos:column="42"/></name> <argument_list pos:line="22" pos:column="43">(<comment type="block" pos:line="22" pos:column="44">/* name = */</comment> <argument><expr><name pos:line="22" pos:column="57">NULL<pos:position pos:line="22" pos:column="61"/></name></expr></argument>, <comment type="block" pos:line="22" pos:column="63">/* (must be NULL) */</comment>
			<argument><expr><operator pos:line="23" pos:column="25">&amp;<pos:position pos:line="23" pos:column="30"/></operator><name pos:line="23" pos:column="26">lparstats<pos:position pos:line="23" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="37">sizeof <argument_list pos:line="23" pos:column="44">(<argument><expr><name pos:line="23" pos:column="45">perfstat_partition_total_t<pos:position pos:line="23" pos:column="71"/></name></expr></argument>)<pos:position pos:line="23" pos:column="72"/></argument_list></sizeof></expr></argument>,
			<comment type="block" pos:line="24" pos:column="25">/* number = */</comment> <argument><expr><literal type="number" pos:line="24" pos:column="40">1<pos:position pos:line="24" pos:column="41"/></literal></expr></argument> <comment type="block" pos:line="24" pos:column="42">/* (must be 1) */</comment>)<pos:position pos:line="24" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="61"/></expr_stmt>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">status<pos:position pos:line="25" pos:column="19"/></name> <operator pos:line="25" pos:column="20">!=<pos:position pos:line="25" pos:column="22"/></operator> <literal type="number" pos:line="25" pos:column="23">1<pos:position pos:line="25" pos:column="24"/></literal></expr>)<pos:position pos:line="25" pos:column="25"/></condition><then pos:line="25" pos:column="25">
	<block pos:line="26" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="27" pos:column="17">char<pos:position pos:line="27" pos:column="21"/></name></type> <name><name pos:line="27" pos:column="22">errbuf<pos:position pos:line="27" pos:column="28"/></name><index pos:line="27" pos:column="28">[<expr><literal type="number" pos:line="27" pos:column="29">1024<pos:position pos:line="27" pos:column="33"/></literal></expr>]<pos:position pos:line="27" pos:column="34"/></index></name></decl>;<pos:position pos:line="27" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">ERROR<pos:position pos:line="28" pos:column="22"/></name> <argument_list pos:line="28" pos:column="23">(<argument><expr><literal type="string" pos:line="28" pos:column="24">"lpar plugin: perfstat_partition_total failed: %s (%i)"<pos:position pos:line="28" pos:column="79"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="29" pos:column="33">sstrerror<pos:position pos:line="29" pos:column="42"/></name> <argument_list pos:line="29" pos:column="43">(<argument><expr><name pos:line="29" pos:column="44">errno<pos:position pos:line="29" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="51">errbuf<pos:position pos:line="29" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="59">sizeof <argument_list pos:line="29" pos:column="66">(<argument><expr><name pos:line="29" pos:column="67">errbuf<pos:position pos:line="29" pos:column="73"/></name></expr></argument>)<pos:position pos:line="29" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="75"/></argument_list></call></expr></argument>,
				<argument><expr><name pos:line="30" pos:column="33">status<pos:position pos:line="30" pos:column="39"/></name></expr></argument>)<pos:position pos:line="30" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="41"/></expr_stmt>
		<return pos:line="31" pos:column="17">return <expr><operator pos:line="31" pos:column="24">(<pos:position pos:line="31" pos:column="25"/></operator><operator pos:line="31" pos:column="25">-<pos:position pos:line="31" pos:column="26"/></operator><literal type="number" pos:line="31" pos:column="26">1<pos:position pos:line="31" pos:column="27"/></literal><operator pos:line="31" pos:column="27">)<pos:position pos:line="31" pos:column="28"/></operator></expr>;<pos:position pos:line="31" pos:column="29"/></return>
	}<pos:position pos:line="32" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="34" pos:column="9">/* Number of ticks since we last run. */</comment>
	<expr_stmt><expr><name pos:line="35" pos:column="9">ticks<pos:position pos:line="35" pos:column="14"/></name> <operator pos:line="35" pos:column="15">=<pos:position pos:line="35" pos:column="16"/></operator> <name><name pos:line="35" pos:column="17">lparstats<pos:position pos:line="35" pos:column="26"/></name><operator pos:line="35" pos:column="26">.<pos:position pos:line="35" pos:column="27"/></operator><name pos:line="35" pos:column="27">timebase_last<pos:position pos:line="35" pos:column="40"/></name></name> <operator pos:line="35" pos:column="41">-<pos:position pos:line="35" pos:column="42"/></operator> <name><name pos:line="35" pos:column="43">lparstats_old<pos:position pos:line="35" pos:column="56"/></name><operator pos:line="35" pos:column="56">.<pos:position pos:line="35" pos:column="57"/></operator><name pos:line="35" pos:column="57">timebase_last<pos:position pos:line="35" pos:column="70"/></name></name></expr>;<pos:position pos:line="35" pos:column="71"/></expr_stmt>
	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">ticks<pos:position pos:line="36" pos:column="18"/></name> <operator pos:line="36" pos:column="19">==<pos:position pos:line="36" pos:column="21"/></operator> <literal type="number" pos:line="36" pos:column="22">0<pos:position pos:line="36" pos:column="23"/></literal></expr>)<pos:position pos:line="36" pos:column="24"/></condition><then pos:line="36" pos:column="24">
	<block pos:line="37" pos:column="9">{
		<comment type="block" pos:line="38" pos:column="17">/* The stats have not been updated. Return now to avoid
		 * dividing by zero */</comment>
		<return pos:line="40" pos:column="17">return <expr><operator pos:line="40" pos:column="24">(<pos:position pos:line="40" pos:column="25"/></operator><literal type="number" pos:line="40" pos:column="25">0<pos:position pos:line="40" pos:column="26"/></literal><operator pos:line="40" pos:column="26">)<pos:position pos:line="40" pos:column="27"/></operator></expr>;<pos:position pos:line="40" pos:column="28"/></return>
	}<pos:position pos:line="41" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="43" pos:column="9">/*
	 * On a shared partition, we're "entitled" to a certain amount of
	 * processing power, for example 250/100 of a physical CPU. Processing
	 * capacity not used by the partition may be assigned to a different
	 * partition by the hypervisor, so "idle" is hopefully a very small
	 * number.
	 *
	 * A dedicated partition may donate its CPUs to another partition and
	 * may steal ticks from somewhere else (another partition or maybe the
	 * shared pool, I don't know --octo).
	 */</comment>

	<comment type="block" pos:line="55" pos:column="9">/* entitled_proc_capacity is in 1/100th of a CPU */</comment>
	<expr_stmt><expr><name pos:line="56" pos:column="9">entitled_proc_capacity<pos:position pos:line="56" pos:column="31"/></name> <operator pos:line="56" pos:column="32">=<pos:position pos:line="56" pos:column="33"/></operator> <literal type="number" pos:line="56" pos:column="34">0.01<pos:position pos:line="56" pos:column="38"/></literal> <operator pos:line="56" pos:column="39">*<pos:position pos:line="56" pos:column="40"/></operator> <operator pos:line="56" pos:column="41">(<pos:position pos:line="56" pos:column="42"/></operator><operator pos:line="56" pos:column="42">(<pos:position pos:line="56" pos:column="43"/></operator><name pos:line="56" pos:column="43">double<pos:position pos:line="56" pos:column="49"/></name><operator pos:line="56" pos:column="49">)<pos:position pos:line="56" pos:column="50"/></operator> <name><name pos:line="56" pos:column="51">lparstats<pos:position pos:line="56" pos:column="60"/></name><operator pos:line="56" pos:column="60">.<pos:position pos:line="56" pos:column="61"/></operator><name pos:line="56" pos:column="61">entitled_proc_capacity<pos:position pos:line="56" pos:column="83"/></name></name><operator pos:line="56" pos:column="83">)<pos:position pos:line="56" pos:column="84"/></operator></expr>;<pos:position pos:line="56" pos:column="85"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="57" pos:column="9">lpar_submit<pos:position pos:line="57" pos:column="20"/></name> <argument_list pos:line="57" pos:column="21">(<argument><expr><literal type="string" pos:line="57" pos:column="22">"entitled"<pos:position pos:line="57" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="34">entitled_proc_capacity<pos:position pos:line="57" pos:column="56"/></name></expr></argument>)<pos:position pos:line="57" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="58"/></expr_stmt>

	<comment type="block" pos:line="59" pos:column="9">/* The number of ticks actually spent in the various states */</comment>
	<expr_stmt><expr><name pos:line="60" pos:column="9">user_ticks<pos:position pos:line="60" pos:column="19"/></name> <operator pos:line="60" pos:column="20">=<pos:position pos:line="60" pos:column="21"/></operator> <name><name pos:line="60" pos:column="22">lparstats<pos:position pos:line="60" pos:column="31"/></name><operator pos:line="60" pos:column="31">.<pos:position pos:line="60" pos:column="32"/></operator><name pos:line="60" pos:column="32">puser<pos:position pos:line="60" pos:column="37"/></name></name> <operator pos:line="60" pos:column="38">-<pos:position pos:line="60" pos:column="39"/></operator> <name><name pos:line="60" pos:column="40">lparstats_old<pos:position pos:line="60" pos:column="53"/></name><operator pos:line="60" pos:column="53">.<pos:position pos:line="60" pos:column="54"/></operator><name pos:line="60" pos:column="54">puser<pos:position pos:line="60" pos:column="59"/></name></name></expr>;<pos:position pos:line="60" pos:column="60"/></expr_stmt>
	<expr_stmt><expr><name pos:line="61" pos:column="9">syst_ticks<pos:position pos:line="61" pos:column="19"/></name> <operator pos:line="61" pos:column="20">=<pos:position pos:line="61" pos:column="21"/></operator> <name><name pos:line="61" pos:column="22">lparstats<pos:position pos:line="61" pos:column="31"/></name><operator pos:line="61" pos:column="31">.<pos:position pos:line="61" pos:column="32"/></operator><name pos:line="61" pos:column="32">psys<pos:position pos:line="61" pos:column="36"/></name></name>  <operator pos:line="61" pos:column="38">-<pos:position pos:line="61" pos:column="39"/></operator> <name><name pos:line="61" pos:column="40">lparstats_old<pos:position pos:line="61" pos:column="53"/></name><operator pos:line="61" pos:column="53">.<pos:position pos:line="61" pos:column="54"/></operator><name pos:line="61" pos:column="54">psys<pos:position pos:line="61" pos:column="58"/></name></name></expr>;<pos:position pos:line="61" pos:column="59"/></expr_stmt>
	<expr_stmt><expr><name pos:line="62" pos:column="9">wait_ticks<pos:position pos:line="62" pos:column="19"/></name> <operator pos:line="62" pos:column="20">=<pos:position pos:line="62" pos:column="21"/></operator> <name><name pos:line="62" pos:column="22">lparstats<pos:position pos:line="62" pos:column="31"/></name><operator pos:line="62" pos:column="31">.<pos:position pos:line="62" pos:column="32"/></operator><name pos:line="62" pos:column="32">pwait<pos:position pos:line="62" pos:column="37"/></name></name> <operator pos:line="62" pos:column="38">-<pos:position pos:line="62" pos:column="39"/></operator> <name><name pos:line="62" pos:column="40">lparstats_old<pos:position pos:line="62" pos:column="53"/></name><operator pos:line="62" pos:column="53">.<pos:position pos:line="62" pos:column="54"/></operator><name pos:line="62" pos:column="54">pwait<pos:position pos:line="62" pos:column="59"/></name></name></expr>;<pos:position pos:line="62" pos:column="60"/></expr_stmt>
	<expr_stmt><expr><name pos:line="63" pos:column="9">idle_ticks<pos:position pos:line="63" pos:column="19"/></name> <operator pos:line="63" pos:column="20">=<pos:position pos:line="63" pos:column="21"/></operator> <name><name pos:line="63" pos:column="22">lparstats<pos:position pos:line="63" pos:column="31"/></name><operator pos:line="63" pos:column="31">.<pos:position pos:line="63" pos:column="32"/></operator><name pos:line="63" pos:column="32">pidle<pos:position pos:line="63" pos:column="37"/></name></name> <operator pos:line="63" pos:column="38">-<pos:position pos:line="63" pos:column="39"/></operator> <name><name pos:line="63" pos:column="40">lparstats_old<pos:position pos:line="63" pos:column="53"/></name><operator pos:line="63" pos:column="53">.<pos:position pos:line="63" pos:column="54"/></operator><name pos:line="63" pos:column="54">pidle<pos:position pos:line="63" pos:column="59"/></name></name></expr>;<pos:position pos:line="63" pos:column="60"/></expr_stmt>
	<expr_stmt><expr><name pos:line="64" pos:column="9">consumed_ticks<pos:position pos:line="64" pos:column="23"/></name> <operator pos:line="64" pos:column="24">=<pos:position pos:line="64" pos:column="25"/></operator> <name pos:line="64" pos:column="26">user_ticks<pos:position pos:line="64" pos:column="36"/></name> <operator pos:line="64" pos:column="37">+<pos:position pos:line="64" pos:column="38"/></operator> <name pos:line="64" pos:column="39">syst_ticks<pos:position pos:line="64" pos:column="49"/></name> <operator pos:line="64" pos:column="50">+<pos:position pos:line="64" pos:column="51"/></operator> <name pos:line="64" pos:column="52">wait_ticks<pos:position pos:line="64" pos:column="62"/></name> <operator pos:line="64" pos:column="63">+<pos:position pos:line="64" pos:column="64"/></operator> <name pos:line="64" pos:column="65">idle_ticks<pos:position pos:line="64" pos:column="75"/></name></expr>;<pos:position pos:line="64" pos:column="76"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="66" pos:column="9">lpar_submit<pos:position pos:line="66" pos:column="20"/></name> <argument_list pos:line="66" pos:column="21">(<argument><expr><literal type="string" pos:line="66" pos:column="22">"user"<pos:position pos:line="66" pos:column="28"/></literal></expr></argument>, <argument><expr><operator pos:line="66" pos:column="30">(<pos:position pos:line="66" pos:column="31"/></operator><name pos:line="66" pos:column="31">double<pos:position pos:line="66" pos:column="37"/></name><operator pos:line="66" pos:column="37">)<pos:position pos:line="66" pos:column="38"/></operator> <name pos:line="66" pos:column="39">user_ticks<pos:position pos:line="66" pos:column="49"/></name> <operator pos:line="66" pos:column="50">/<pos:position pos:line="66" pos:column="51"/></operator> <operator pos:line="66" pos:column="52">(<pos:position pos:line="66" pos:column="53"/></operator><name pos:line="66" pos:column="53">double<pos:position pos:line="66" pos:column="59"/></name><operator pos:line="66" pos:column="59">)<pos:position pos:line="66" pos:column="60"/></operator> <name pos:line="66" pos:column="61">ticks<pos:position pos:line="66" pos:column="66"/></name></expr></argument>)<pos:position pos:line="66" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="68"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="67" pos:column="9">lpar_submit<pos:position pos:line="67" pos:column="20"/></name> <argument_list pos:line="67" pos:column="21">(<argument><expr><literal type="string" pos:line="67" pos:column="22">"system"<pos:position pos:line="67" pos:column="30"/></literal></expr></argument>, <argument><expr><operator pos:line="67" pos:column="32">(<pos:position pos:line="67" pos:column="33"/></operator><name pos:line="67" pos:column="33">double<pos:position pos:line="67" pos:column="39"/></name><operator pos:line="67" pos:column="39">)<pos:position pos:line="67" pos:column="40"/></operator> <name pos:line="67" pos:column="41">syst_ticks<pos:position pos:line="67" pos:column="51"/></name> <operator pos:line="67" pos:column="52">/<pos:position pos:line="67" pos:column="53"/></operator> <operator pos:line="67" pos:column="54">(<pos:position pos:line="67" pos:column="55"/></operator><name pos:line="67" pos:column="55">double<pos:position pos:line="67" pos:column="61"/></name><operator pos:line="67" pos:column="61">)<pos:position pos:line="67" pos:column="62"/></operator> <name pos:line="67" pos:column="63">ticks<pos:position pos:line="67" pos:column="68"/></name></expr></argument>)<pos:position pos:line="67" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="70"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="68" pos:column="9">lpar_submit<pos:position pos:line="68" pos:column="20"/></name> <argument_list pos:line="68" pos:column="21">(<argument><expr><literal type="string" pos:line="68" pos:column="22">"wait"<pos:position pos:line="68" pos:column="28"/></literal></expr></argument>, <argument><expr><operator pos:line="68" pos:column="30">(<pos:position pos:line="68" pos:column="31"/></operator><name pos:line="68" pos:column="31">double<pos:position pos:line="68" pos:column="37"/></name><operator pos:line="68" pos:column="37">)<pos:position pos:line="68" pos:column="38"/></operator> <name pos:line="68" pos:column="39">wait_ticks<pos:position pos:line="68" pos:column="49"/></name> <operator pos:line="68" pos:column="50">/<pos:position pos:line="68" pos:column="51"/></operator> <operator pos:line="68" pos:column="52">(<pos:position pos:line="68" pos:column="53"/></operator><name pos:line="68" pos:column="53">double<pos:position pos:line="68" pos:column="59"/></name><operator pos:line="68" pos:column="59">)<pos:position pos:line="68" pos:column="60"/></operator> <name pos:line="68" pos:column="61">ticks<pos:position pos:line="68" pos:column="66"/></name></expr></argument>)<pos:position pos:line="68" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="68"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="69" pos:column="9">lpar_submit<pos:position pos:line="69" pos:column="20"/></name> <argument_list pos:line="69" pos:column="21">(<argument><expr><literal type="string" pos:line="69" pos:column="22">"idle"<pos:position pos:line="69" pos:column="28"/></literal></expr></argument>, <argument><expr><operator pos:line="69" pos:column="30">(<pos:position pos:line="69" pos:column="31"/></operator><name pos:line="69" pos:column="31">double<pos:position pos:line="69" pos:column="37"/></name><operator pos:line="69" pos:column="37">)<pos:position pos:line="69" pos:column="38"/></operator> <name pos:line="69" pos:column="39">idle_ticks<pos:position pos:line="69" pos:column="49"/></name> <operator pos:line="69" pos:column="50">/<pos:position pos:line="69" pos:column="51"/></operator> <operator pos:line="69" pos:column="52">(<pos:position pos:line="69" pos:column="53"/></operator><name pos:line="69" pos:column="53">double<pos:position pos:line="69" pos:column="59"/></name><operator pos:line="69" pos:column="59">)<pos:position pos:line="69" pos:column="60"/></operator> <name pos:line="69" pos:column="61">ticks<pos:position pos:line="69" pos:column="66"/></name></expr></argument>)<pos:position pos:line="69" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="68"/></expr_stmt>

<cpp:if pos:line="71" pos:column="1">#<cpp:directive pos:line="71" pos:column="2">if<pos:position pos:line="71" pos:column="4"/></cpp:directive> <expr><name pos:line="71" pos:column="5">PERFSTAT_SUPPORTS_DONATION<pos:position pos:line="71" pos:column="31"/></name></expr></cpp:if>
	<if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><name pos:line="72" pos:column="13">donate_flag<pos:position pos:line="72" pos:column="24"/></name></expr>)<pos:position pos:line="72" pos:column="25"/></condition><then pos:line="72" pos:column="25">
	<block pos:line="73" pos:column="9">{
		<comment type="block" pos:line="74" pos:column="17">/* donated =&gt; ticks given to another partition
		 * stolen  =&gt; ticks received from another partition */</comment>
		<decl_stmt><decl><type><name pos:line="76" pos:column="17">u_longlong_t<pos:position pos:line="76" pos:column="29"/></name></type> <name pos:line="76" pos:column="30">idle_donated_ticks<pos:position pos:line="76" pos:column="48"/></name></decl>, <decl><type ref="prev"/><name pos:line="76" pos:column="50">busy_donated_ticks<pos:position pos:line="76" pos:column="68"/></name></decl>;<pos:position pos:line="76" pos:column="69"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="77" pos:column="17">u_longlong_t<pos:position pos:line="77" pos:column="29"/></name></type> <name pos:line="77" pos:column="30">idle_stolen_ticks<pos:position pos:line="77" pos:column="47"/></name></decl>, <decl><type ref="prev"/><name pos:line="77" pos:column="49">busy_stolen_ticks<pos:position pos:line="77" pos:column="66"/></name></decl>;<pos:position pos:line="77" pos:column="67"/></decl_stmt>

		<comment type="block" pos:line="79" pos:column="17">/* FYI:  PURR == Processor Utilization of Resources Register
		 *      SPURR == Scaled PURR */</comment>
		<expr_stmt><expr><name pos:line="81" pos:column="17">idle_donated_ticks<pos:position pos:line="81" pos:column="35"/></name> <operator pos:line="81" pos:column="36">=<pos:position pos:line="81" pos:column="37"/></operator> <name><name pos:line="81" pos:column="38">lparstats<pos:position pos:line="81" pos:column="47"/></name><operator pos:line="81" pos:column="47">.<pos:position pos:line="81" pos:column="48"/></operator><name pos:line="81" pos:column="48">idle_donated_purr<pos:position pos:line="81" pos:column="65"/></name></name> <operator pos:line="81" pos:column="66">-<pos:position pos:line="81" pos:column="67"/></operator> <name><name pos:line="81" pos:column="68">lparstats_old<pos:position pos:line="81" pos:column="81"/></name><operator pos:line="81" pos:column="81">.<pos:position pos:line="81" pos:column="82"/></operator><name pos:line="81" pos:column="82">idle_donated_purr<pos:position pos:line="81" pos:column="99"/></name></name></expr>;<pos:position pos:line="81" pos:column="100"/></expr_stmt>
		<expr_stmt><expr><name pos:line="82" pos:column="17">busy_donated_ticks<pos:position pos:line="82" pos:column="35"/></name> <operator pos:line="82" pos:column="36">=<pos:position pos:line="82" pos:column="37"/></operator> <name><name pos:line="82" pos:column="38">lparstats<pos:position pos:line="82" pos:column="47"/></name><operator pos:line="82" pos:column="47">.<pos:position pos:line="82" pos:column="48"/></operator><name pos:line="82" pos:column="48">busy_donated_purr<pos:position pos:line="82" pos:column="65"/></name></name> <operator pos:line="82" pos:column="66">-<pos:position pos:line="82" pos:column="67"/></operator> <name><name pos:line="82" pos:column="68">lparstats_old<pos:position pos:line="82" pos:column="81"/></name><operator pos:line="82" pos:column="81">.<pos:position pos:line="82" pos:column="82"/></operator><name pos:line="82" pos:column="82">busy_donated_purr<pos:position pos:line="82" pos:column="99"/></name></name></expr>;<pos:position pos:line="82" pos:column="100"/></expr_stmt>
		<expr_stmt><expr><name pos:line="83" pos:column="17">idle_stolen_ticks<pos:position pos:line="83" pos:column="34"/></name>  <operator pos:line="83" pos:column="36">=<pos:position pos:line="83" pos:column="37"/></operator> <name><name pos:line="83" pos:column="38">lparstats<pos:position pos:line="83" pos:column="47"/></name><operator pos:line="83" pos:column="47">.<pos:position pos:line="83" pos:column="48"/></operator><name pos:line="83" pos:column="48">idle_stolen_purr<pos:position pos:line="83" pos:column="64"/></name></name>  <operator pos:line="83" pos:column="66">-<pos:position pos:line="83" pos:column="67"/></operator> <name><name pos:line="83" pos:column="68">lparstats_old<pos:position pos:line="83" pos:column="81"/></name><operator pos:line="83" pos:column="81">.<pos:position pos:line="83" pos:column="82"/></operator><name pos:line="83" pos:column="82">idle_stolen_purr<pos:position pos:line="83" pos:column="98"/></name></name></expr>;<pos:position pos:line="83" pos:column="99"/></expr_stmt>
		<expr_stmt><expr><name pos:line="84" pos:column="17">busy_stolen_ticks<pos:position pos:line="84" pos:column="34"/></name>  <operator pos:line="84" pos:column="36">=<pos:position pos:line="84" pos:column="37"/></operator> <name><name pos:line="84" pos:column="38">lparstats<pos:position pos:line="84" pos:column="47"/></name><operator pos:line="84" pos:column="47">.<pos:position pos:line="84" pos:column="48"/></operator><name pos:line="84" pos:column="48">busy_stolen_purr<pos:position pos:line="84" pos:column="64"/></name></name>  <operator pos:line="84" pos:column="66">-<pos:position pos:line="84" pos:column="67"/></operator> <name><name pos:line="84" pos:column="68">lparstats_old<pos:position pos:line="84" pos:column="81"/></name><operator pos:line="84" pos:column="81">.<pos:position pos:line="84" pos:column="82"/></operator><name pos:line="84" pos:column="82">busy_stolen_purr<pos:position pos:line="84" pos:column="98"/></name></name></expr>;<pos:position pos:line="84" pos:column="99"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="86" pos:column="17">lpar_submit<pos:position pos:line="86" pos:column="28"/></name> <argument_list pos:line="86" pos:column="29">(<argument><expr><literal type="string" pos:line="86" pos:column="30">"idle_donated"<pos:position pos:line="86" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="86" pos:column="46">(<pos:position pos:line="86" pos:column="47"/></operator><name pos:line="86" pos:column="47">double<pos:position pos:line="86" pos:column="53"/></name><operator pos:line="86" pos:column="53">)<pos:position pos:line="86" pos:column="54"/></operator> <name pos:line="86" pos:column="55">idle_donated_ticks<pos:position pos:line="86" pos:column="73"/></name> <operator pos:line="86" pos:column="74">/<pos:position pos:line="86" pos:column="75"/></operator> <operator pos:line="86" pos:column="76">(<pos:position pos:line="86" pos:column="77"/></operator><name pos:line="86" pos:column="77">double<pos:position pos:line="86" pos:column="83"/></name><operator pos:line="86" pos:column="83">)<pos:position pos:line="86" pos:column="84"/></operator> <name pos:line="86" pos:column="85">ticks<pos:position pos:line="86" pos:column="90"/></name></expr></argument>)<pos:position pos:line="86" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="92"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="87" pos:column="17">lpar_submit<pos:position pos:line="87" pos:column="28"/></name> <argument_list pos:line="87" pos:column="29">(<argument><expr><literal type="string" pos:line="87" pos:column="30">"busy_donated"<pos:position pos:line="87" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="87" pos:column="46">(<pos:position pos:line="87" pos:column="47"/></operator><name pos:line="87" pos:column="47">double<pos:position pos:line="87" pos:column="53"/></name><operator pos:line="87" pos:column="53">)<pos:position pos:line="87" pos:column="54"/></operator> <name pos:line="87" pos:column="55">busy_donated_ticks<pos:position pos:line="87" pos:column="73"/></name> <operator pos:line="87" pos:column="74">/<pos:position pos:line="87" pos:column="75"/></operator> <operator pos:line="87" pos:column="76">(<pos:position pos:line="87" pos:column="77"/></operator><name pos:line="87" pos:column="77">double<pos:position pos:line="87" pos:column="83"/></name><operator pos:line="87" pos:column="83">)<pos:position pos:line="87" pos:column="84"/></operator> <name pos:line="87" pos:column="85">ticks<pos:position pos:line="87" pos:column="90"/></name></expr></argument>)<pos:position pos:line="87" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="92"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="88" pos:column="17">lpar_submit<pos:position pos:line="88" pos:column="28"/></name> <argument_list pos:line="88" pos:column="29">(<argument><expr><literal type="string" pos:line="88" pos:column="30">"idle_stolen"<pos:position pos:line="88" pos:column="43"/></literal></expr></argument>,  <argument><expr><operator pos:line="88" pos:column="46">(<pos:position pos:line="88" pos:column="47"/></operator><name pos:line="88" pos:column="47">double<pos:position pos:line="88" pos:column="53"/></name><operator pos:line="88" pos:column="53">)<pos:position pos:line="88" pos:column="54"/></operator> <name pos:line="88" pos:column="55">idle_stolen_ticks<pos:position pos:line="88" pos:column="72"/></name>  <operator pos:line="88" pos:column="74">/<pos:position pos:line="88" pos:column="75"/></operator> <operator pos:line="88" pos:column="76">(<pos:position pos:line="88" pos:column="77"/></operator><name pos:line="88" pos:column="77">double<pos:position pos:line="88" pos:column="83"/></name><operator pos:line="88" pos:column="83">)<pos:position pos:line="88" pos:column="84"/></operator> <name pos:line="88" pos:column="85">ticks<pos:position pos:line="88" pos:column="90"/></name></expr></argument>)<pos:position pos:line="88" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="92"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="89" pos:column="17">lpar_submit<pos:position pos:line="89" pos:column="28"/></name> <argument_list pos:line="89" pos:column="29">(<argument><expr><literal type="string" pos:line="89" pos:column="30">"busy_stolen"<pos:position pos:line="89" pos:column="43"/></literal></expr></argument>,  <argument><expr><operator pos:line="89" pos:column="46">(<pos:position pos:line="89" pos:column="47"/></operator><name pos:line="89" pos:column="47">double<pos:position pos:line="89" pos:column="53"/></name><operator pos:line="89" pos:column="53">)<pos:position pos:line="89" pos:column="54"/></operator> <name pos:line="89" pos:column="55">busy_stolen_ticks<pos:position pos:line="89" pos:column="72"/></name>  <operator pos:line="89" pos:column="74">/<pos:position pos:line="89" pos:column="75"/></operator> <operator pos:line="89" pos:column="76">(<pos:position pos:line="89" pos:column="77"/></operator><name pos:line="89" pos:column="77">double<pos:position pos:line="89" pos:column="83"/></name><operator pos:line="89" pos:column="83">)<pos:position pos:line="89" pos:column="84"/></operator> <name pos:line="89" pos:column="85">ticks<pos:position pos:line="89" pos:column="90"/></name></expr></argument>)<pos:position pos:line="89" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="92"/></expr_stmt>

		<comment type="block" pos:line="91" pos:column="17">/* Donated ticks will be accounted for as stolen ticks in other LPARs */</comment>
		<expr_stmt><expr><name pos:line="92" pos:column="17">consumed_ticks<pos:position pos:line="92" pos:column="31"/></name> <operator pos:line="92" pos:column="32">+=<pos:position pos:line="92" pos:column="34"/></operator> <name pos:line="92" pos:column="35">idle_stolen_ticks<pos:position pos:line="92" pos:column="52"/></name> <operator pos:line="92" pos:column="53">+<pos:position pos:line="92" pos:column="54"/></operator> <name pos:line="92" pos:column="55">busy_stolen_ticks<pos:position pos:line="92" pos:column="72"/></name></expr>;<pos:position pos:line="92" pos:column="73"/></expr_stmt>
	}<pos:position pos:line="93" pos:column="10"/></block></then></if>
<cpp:endif pos:line="94" pos:column="1">#<cpp:directive pos:line="94" pos:column="2">endif<pos:position pos:line="94" pos:column="7"/></cpp:directive></cpp:endif>

	<expr_stmt><expr><call><name pos:line="96" pos:column="9">lpar_submit<pos:position pos:line="96" pos:column="20"/></name> <argument_list pos:line="96" pos:column="21">(<argument><expr><literal type="string" pos:line="96" pos:column="22">"consumed"<pos:position pos:line="96" pos:column="32"/></literal></expr></argument>, <argument><expr><operator pos:line="96" pos:column="34">(<pos:position pos:line="96" pos:column="35"/></operator><name pos:line="96" pos:column="35">double<pos:position pos:line="96" pos:column="41"/></name><operator pos:line="96" pos:column="41">)<pos:position pos:line="96" pos:column="42"/></operator> <name pos:line="96" pos:column="43">consumed_ticks<pos:position pos:line="96" pos:column="57"/></name> <operator pos:line="96" pos:column="58">/<pos:position pos:line="96" pos:column="59"/></operator> <operator pos:line="96" pos:column="60">(<pos:position pos:line="96" pos:column="61"/></operator><name pos:line="96" pos:column="61">double<pos:position pos:line="96" pos:column="67"/></name><operator pos:line="96" pos:column="67">)<pos:position pos:line="96" pos:column="68"/></operator> <name pos:line="96" pos:column="69">ticks<pos:position pos:line="96" pos:column="74"/></name></expr></argument>)<pos:position pos:line="96" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="76"/></expr_stmt>

	<if pos:line="98" pos:column="9">if <condition pos:line="98" pos:column="12">(<expr><name pos:line="98" pos:column="13">pool_stats<pos:position pos:line="98" pos:column="23"/></name></expr>)<pos:position pos:line="98" pos:column="24"/></condition><then pos:line="98" pos:column="24">
	<block pos:line="99" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="100" pos:column="17">char<pos:position pos:line="100" pos:column="21"/></name></type> <name><name pos:line="100" pos:column="22">typinst<pos:position pos:line="100" pos:column="29"/></name><index pos:line="100" pos:column="29">[<expr><name pos:line="100" pos:column="30">DATA_MAX_NAME_LEN<pos:position pos:line="100" pos:column="47"/></name></expr>]<pos:position pos:line="100" pos:column="48"/></index></name></decl>;<pos:position pos:line="100" pos:column="49"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="101" pos:column="17">u_longlong_t<pos:position pos:line="101" pos:column="29"/></name></type> <name pos:line="101" pos:column="30">pool_idle_cticks<pos:position pos:line="101" pos:column="46"/></name></decl>;<pos:position pos:line="101" pos:column="47"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="102" pos:column="17">double<pos:position pos:line="102" pos:column="23"/></name></type> <name pos:line="102" pos:column="24">pool_idle_cpus<pos:position pos:line="102" pos:column="38"/></name></decl>;<pos:position pos:line="102" pos:column="39"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="103" pos:column="17">double<pos:position pos:line="103" pos:column="23"/></name></type> <name pos:line="103" pos:column="24">pool_busy_cpus<pos:position pos:line="103" pos:column="38"/></name></decl>;<pos:position pos:line="103" pos:column="39"/></decl_stmt>

		<comment type="block" pos:line="105" pos:column="17">/* We're calculating "busy" from "idle" and the total number of
		 * CPUs, because the "busy" member didn't exist in early versions
		 * of libperfstat. It was added somewhere between AIX 5.3 ML5 and ML9. */</comment>
		<expr_stmt><expr><name pos:line="108" pos:column="17">pool_idle_cticks<pos:position pos:line="108" pos:column="33"/></name> <operator pos:line="108" pos:column="34">=<pos:position pos:line="108" pos:column="35"/></operator> <name><name pos:line="108" pos:column="36">lparstats<pos:position pos:line="108" pos:column="45"/></name><operator pos:line="108" pos:column="45">.<pos:position pos:line="108" pos:column="46"/></operator><name pos:line="108" pos:column="46">pool_idle_time<pos:position pos:line="108" pos:column="60"/></name></name> <operator pos:line="108" pos:column="61">-<pos:position pos:line="108" pos:column="62"/></operator> <name><name pos:line="108" pos:column="63">lparstats_old<pos:position pos:line="108" pos:column="76"/></name><operator pos:line="108" pos:column="76">.<pos:position pos:line="108" pos:column="77"/></operator><name pos:line="108" pos:column="77">pool_idle_time<pos:position pos:line="108" pos:column="91"/></name></name></expr>;<pos:position pos:line="108" pos:column="92"/></expr_stmt>
		<expr_stmt><expr><name pos:line="109" pos:column="17">pool_idle_cpus<pos:position pos:line="109" pos:column="31"/></name> <operator pos:line="109" pos:column="32">=<pos:position pos:line="109" pos:column="33"/></operator> <call><name pos:line="109" pos:column="34">CLOCKTICKS_TO_TICKS<pos:position pos:line="109" pos:column="53"/></name> <argument_list pos:line="109" pos:column="54">(<argument><expr><operator pos:line="109" pos:column="55">(<pos:position pos:line="109" pos:column="56"/></operator><name pos:line="109" pos:column="56">double<pos:position pos:line="109" pos:column="62"/></name><operator pos:line="109" pos:column="62">)<pos:position pos:line="109" pos:column="63"/></operator> <name pos:line="109" pos:column="64">pool_idle_cticks<pos:position pos:line="109" pos:column="80"/></name></expr></argument>)<pos:position pos:line="109" pos:column="81"/></argument_list></call> <operator pos:line="109" pos:column="82">/<pos:position pos:line="109" pos:column="83"/></operator> <operator pos:line="109" pos:column="84">(<pos:position pos:line="109" pos:column="85"/></operator><name pos:line="109" pos:column="85">double<pos:position pos:line="109" pos:column="91"/></name><operator pos:line="109" pos:column="91">)<pos:position pos:line="109" pos:column="92"/></operator> <name pos:line="109" pos:column="93">ticks<pos:position pos:line="109" pos:column="98"/></name></expr>;<pos:position pos:line="109" pos:column="99"/></expr_stmt>
		<expr_stmt><expr><name pos:line="110" pos:column="17">pool_busy_cpus<pos:position pos:line="110" pos:column="31"/></name> <operator pos:line="110" pos:column="32">=<pos:position pos:line="110" pos:column="33"/></operator> <operator pos:line="110" pos:column="34">(<pos:position pos:line="110" pos:column="35"/></operator><operator pos:line="110" pos:column="35">(<pos:position pos:line="110" pos:column="36"/></operator><name pos:line="110" pos:column="36">double<pos:position pos:line="110" pos:column="42"/></name><operator pos:line="110" pos:column="42">)<pos:position pos:line="110" pos:column="43"/></operator> <name><name pos:line="110" pos:column="44">lparstats<pos:position pos:line="110" pos:column="53"/></name><operator pos:line="110" pos:column="53">.<pos:position pos:line="110" pos:column="54"/></operator><name pos:line="110" pos:column="54">phys_cpus_pool<pos:position pos:line="110" pos:column="68"/></name></name><operator pos:line="110" pos:column="68">)<pos:position pos:line="110" pos:column="69"/></operator> <operator pos:line="110" pos:column="70">-<pos:position pos:line="110" pos:column="71"/></operator> <name pos:line="110" pos:column="72">pool_idle_cpus<pos:position pos:line="110" pos:column="86"/></name></expr>;<pos:position pos:line="110" pos:column="87"/></expr_stmt>
		<if pos:line="111" pos:column="17">if <condition pos:line="111" pos:column="20">(<expr><name pos:line="111" pos:column="21">pool_busy_cpus<pos:position pos:line="111" pos:column="35"/></name> <operator pos:line="111" pos:column="36">&lt;<pos:position pos:line="111" pos:column="40"/></operator> <literal type="number" pos:line="111" pos:column="38">0.0<pos:position pos:line="111" pos:column="41"/></literal></expr>)<pos:position pos:line="111" pos:column="42"/></condition><then pos:line="111" pos:column="42">
			<block type="pseudo"><expr_stmt><expr><name pos:line="112" pos:column="25">pool_busy_cpus<pos:position pos:line="112" pos:column="39"/></name> <operator pos:line="112" pos:column="40">=<pos:position pos:line="112" pos:column="41"/></operator> <literal type="number" pos:line="112" pos:column="42">0.0<pos:position pos:line="112" pos:column="45"/></literal></expr>;<pos:position pos:line="112" pos:column="46"/></expr_stmt></block></then></if>

		<expr_stmt><expr><call><name pos:line="114" pos:column="17">ssnprintf<pos:position pos:line="114" pos:column="26"/></name> <argument_list pos:line="114" pos:column="27">(<argument><expr><name pos:line="114" pos:column="28">typinst<pos:position pos:line="114" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="114" pos:column="37">sizeof <argument_list pos:line="114" pos:column="44">(<argument><expr><name pos:line="114" pos:column="45">typinst<pos:position pos:line="114" pos:column="52"/></name></expr></argument>)<pos:position pos:line="114" pos:column="53"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="114" pos:column="55">"pool-%X-busy"<pos:position pos:line="114" pos:column="69"/></literal></expr></argument>, <argument><expr><name><name pos:line="114" pos:column="71">lparstats<pos:position pos:line="114" pos:column="80"/></name><operator pos:line="114" pos:column="80">.<pos:position pos:line="114" pos:column="81"/></operator><name pos:line="114" pos:column="81">pool_id<pos:position pos:line="114" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="114" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="90"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="115" pos:column="17">lpar_submit<pos:position pos:line="115" pos:column="28"/></name> <argument_list pos:line="115" pos:column="29">(<argument><expr><name pos:line="115" pos:column="30">typinst<pos:position pos:line="115" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="39">pool_busy_cpus<pos:position pos:line="115" pos:column="53"/></name></expr></argument>)<pos:position pos:line="115" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="55"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="117" pos:column="17">ssnprintf<pos:position pos:line="117" pos:column="26"/></name> <argument_list pos:line="117" pos:column="27">(<argument><expr><name pos:line="117" pos:column="28">typinst<pos:position pos:line="117" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="117" pos:column="37">sizeof <argument_list pos:line="117" pos:column="44">(<argument><expr><name pos:line="117" pos:column="45">typinst<pos:position pos:line="117" pos:column="52"/></name></expr></argument>)<pos:position pos:line="117" pos:column="53"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="117" pos:column="55">"pool-%X-idle"<pos:position pos:line="117" pos:column="69"/></literal></expr></argument>, <argument><expr><name><name pos:line="117" pos:column="71">lparstats<pos:position pos:line="117" pos:column="80"/></name><operator pos:line="117" pos:column="80">.<pos:position pos:line="117" pos:column="81"/></operator><name pos:line="117" pos:column="81">pool_id<pos:position pos:line="117" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="117" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="90"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="118" pos:column="17">lpar_submit<pos:position pos:line="118" pos:column="28"/></name> <argument_list pos:line="118" pos:column="29">(<argument><expr><name pos:line="118" pos:column="30">typinst<pos:position pos:line="118" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="39">pool_idle_cpus<pos:position pos:line="118" pos:column="53"/></name></expr></argument>)<pos:position pos:line="118" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="55"/></expr_stmt>
	}<pos:position pos:line="119" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="121" pos:column="9">memcpy<pos:position pos:line="121" pos:column="15"/></name> <argument_list pos:line="121" pos:column="16">(<argument><expr><operator pos:line="121" pos:column="17">&amp;<pos:position pos:line="121" pos:column="22"/></operator><name pos:line="121" pos:column="18">lparstats_old<pos:position pos:line="121" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="121" pos:column="33">&amp;<pos:position pos:line="121" pos:column="38"/></operator><name pos:line="121" pos:column="34">lparstats<pos:position pos:line="121" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="121" pos:column="45">sizeof <argument_list pos:line="121" pos:column="52">(<argument><expr><name pos:line="121" pos:column="53">lparstats_old<pos:position pos:line="121" pos:column="66"/></name></expr></argument>)<pos:position pos:line="121" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="121" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="69"/></expr_stmt>

	<return pos:line="123" pos:column="9">return <expr><operator pos:line="123" pos:column="16">(<pos:position pos:line="123" pos:column="17"/></operator><literal type="number" pos:line="123" pos:column="17">0<pos:position pos:line="123" pos:column="18"/></literal><operator pos:line="123" pos:column="18">)<pos:position pos:line="123" pos:column="19"/></operator></expr>;<pos:position pos:line="123" pos:column="20"/></return>
}<pos:position pos:line="124" pos:column="2"/></block></function></unit>

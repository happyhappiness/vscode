<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1502_collectd-4.10.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cpy_write_callback<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">data_set_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">ds<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="53">const<pos:position pos:line="1" pos:column="58"/></specifier> <name pos:line="1" pos:column="59">value_list_t<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">value_list<pos:position pos:line="1" pos:column="83"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="85">user_data_t<pos:position pos:line="1" pos:column="96"/></name> <modifier pos:line="1" pos:column="97">*<pos:position pos:line="1" pos:column="98"/></modifier></type><name pos:line="1" pos:column="98">data<pos:position pos:line="1" pos:column="102"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="103"/></parameter_list> <block pos:line="1" pos:column="104">{
	<decl_stmt><decl><type><name pos:line="2" pos:column="9">int<pos:position pos:line="2" pos:column="12"/></name></type> <name pos:line="2" pos:column="13">i<pos:position pos:line="2" pos:column="14"/></name></decl>;<pos:position pos:line="2" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">cpy_callback_t<pos:position pos:line="3" pos:column="23"/></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">c<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><name><name pos:line="3" pos:column="29">data<pos:position pos:line="3" pos:column="33"/></name><operator pos:line="3" pos:column="33">-&gt;<pos:position pos:line="3" pos:column="38"/></operator><name pos:line="3" pos:column="35">data<pos:position pos:line="3" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">PyObject<pos:position pos:line="4" pos:column="17"/></name> <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">ret<pos:position pos:line="4" pos:column="22"/></name></decl>, <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="25">list<pos:position pos:line="4" pos:column="29"/></name></decl>, <modifier pos:line="4" pos:column="31">*<pos:position pos:line="4" pos:column="32"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="32">temp<pos:position pos:line="4" pos:column="36"/></name></decl>, <modifier pos:line="4" pos:column="38">*<pos:position pos:line="4" pos:column="39"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="39">dict<pos:position pos:line="4" pos:column="43"/></name> <init pos:line="4" pos:column="44">= <expr><name pos:line="4" pos:column="46">NULL<pos:position pos:line="4" pos:column="50"/></name></expr></init></decl>, <modifier pos:line="4" pos:column="52">*<pos:position pos:line="4" pos:column="53"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="53">val<pos:position pos:line="4" pos:column="56"/></name></decl>;<pos:position pos:line="4" pos:column="57"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">Values<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">v<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="7" pos:column="9">CPY_LOCK_THREADS<pos:position pos:line="7" pos:column="25"/></name></type>
		<name pos:line="8" pos:column="17">list<pos:position pos:line="8" pos:column="21"/></name> <init pos:line="8" pos:column="22">= <expr><call><name pos:line="8" pos:column="24">PyList_New<pos:position pos:line="8" pos:column="34"/></name><argument_list pos:line="8" pos:column="34">(<argument><expr><name><name pos:line="8" pos:column="35">value_list<pos:position pos:line="8" pos:column="45"/></name><operator pos:line="8" pos:column="45">-&gt;<pos:position pos:line="8" pos:column="50"/></operator><name pos:line="8" pos:column="47">values_len<pos:position pos:line="8" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="59"/></decl_stmt> <comment type="block" pos:line="8" pos:column="60">/* New reference. */</comment>
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><name pos:line="9" pos:column="21">list<pos:position pos:line="9" pos:column="25"/></name> <operator pos:line="9" pos:column="26">==<pos:position pos:line="9" pos:column="28"/></operator> <name pos:line="9" pos:column="29">NULL<pos:position pos:line="9" pos:column="33"/></name></expr>)<pos:position pos:line="9" pos:column="34"/></condition><then pos:line="9" pos:column="34"> <block pos:line="9" pos:column="35">{
			<expr_stmt><expr><call><name pos:line="10" pos:column="25">cpy_log_exception<pos:position pos:line="10" pos:column="42"/></name><argument_list pos:line="10" pos:column="42">(<argument><expr><literal type="string" pos:line="10" pos:column="43">"write callback"<pos:position pos:line="10" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="61"/></expr_stmt>
			<expr_stmt><expr><name pos:line="11" pos:column="25">CPY_RETURN_FROM_THREADS<pos:position pos:line="11" pos:column="48"/></name> <literal type="number" pos:line="11" pos:column="49">0<pos:position pos:line="11" pos:column="50"/></literal></expr>;<pos:position pos:line="11" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="12" pos:column="18"/></block></then></if>
		<for pos:line="13" pos:column="17">for <control pos:line="13" pos:column="21">(<init><expr><name pos:line="13" pos:column="22">i<pos:position pos:line="13" pos:column="23"/></name> <operator pos:line="13" pos:column="24">=<pos:position pos:line="13" pos:column="25"/></operator> <literal type="number" pos:line="13" pos:column="26">0<pos:position pos:line="13" pos:column="27"/></literal></expr>;<pos:position pos:line="13" pos:column="28"/></init> <condition><expr><name pos:line="13" pos:column="29">i<pos:position pos:line="13" pos:column="30"/></name> <operator pos:line="13" pos:column="31">&lt;<pos:position pos:line="13" pos:column="35"/></operator> <name><name pos:line="13" pos:column="33">value_list<pos:position pos:line="13" pos:column="43"/></name><operator pos:line="13" pos:column="43">-&gt;<pos:position pos:line="13" pos:column="48"/></operator><name pos:line="13" pos:column="45">values_len<pos:position pos:line="13" pos:column="55"/></name></name></expr>;<pos:position pos:line="13" pos:column="56"/></condition> <incr><expr><operator pos:line="13" pos:column="57">++<pos:position pos:line="13" pos:column="59"/></operator><name pos:line="13" pos:column="59">i<pos:position pos:line="13" pos:column="60"/></name></expr></incr>)<pos:position pos:line="13" pos:column="61"/></control> <block pos:line="13" pos:column="62">{
			<if pos:line="14" pos:column="25">if <condition pos:line="14" pos:column="28">(<expr><name><name pos:line="14" pos:column="29">ds<pos:position pos:line="14" pos:column="31"/></name><operator pos:line="14" pos:column="31">-&gt;<pos:position pos:line="14" pos:column="36"/></operator><name pos:line="14" pos:column="33">ds<pos:position pos:line="14" pos:column="35"/></name><index pos:line="14" pos:column="35">[<expr><name pos:line="14" pos:column="36">i<pos:position pos:line="14" pos:column="37"/></name></expr>]<pos:position pos:line="14" pos:column="38"/></index></name><operator pos:line="14" pos:column="38">.<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="39">type<pos:position pos:line="14" pos:column="43"/></name> <operator pos:line="14" pos:column="44">==<pos:position pos:line="14" pos:column="46"/></operator> <name pos:line="14" pos:column="47">DS_TYPE_COUNTER<pos:position pos:line="14" pos:column="62"/></name></expr>)<pos:position pos:line="14" pos:column="63"/></condition><then pos:line="14" pos:column="63"> <block pos:line="14" pos:column="64">{
				<if pos:line="15" pos:column="33">if <condition pos:line="15" pos:column="36">(<expr><operator pos:line="15" pos:column="37">(<pos:position pos:line="15" pos:column="38"/></operator><name pos:line="15" pos:column="38">long<pos:position pos:line="15" pos:column="42"/></name><operator pos:line="15" pos:column="42">)<pos:position pos:line="15" pos:column="43"/></operator> <name><name pos:line="15" pos:column="44">value_list<pos:position pos:line="15" pos:column="54"/></name><operator pos:line="15" pos:column="54">-&gt;<pos:position pos:line="15" pos:column="59"/></operator><name pos:line="15" pos:column="56">values<pos:position pos:line="15" pos:column="62"/></name><index pos:line="15" pos:column="62">[<expr><name pos:line="15" pos:column="63">i<pos:position pos:line="15" pos:column="64"/></name></expr>]<pos:position pos:line="15" pos:column="65"/></index></name><operator pos:line="15" pos:column="65">.<pos:position pos:line="15" pos:column="66"/></operator><name pos:line="15" pos:column="66">counter<pos:position pos:line="15" pos:column="73"/></name> <operator pos:line="15" pos:column="74">==<pos:position pos:line="15" pos:column="76"/></operator> <name><name pos:line="15" pos:column="77">value_list<pos:position pos:line="15" pos:column="87"/></name><operator pos:line="15" pos:column="87">-&gt;<pos:position pos:line="15" pos:column="92"/></operator><name pos:line="15" pos:column="89">values<pos:position pos:line="15" pos:column="95"/></name><index pos:line="15" pos:column="95">[<expr><name pos:line="15" pos:column="96">i<pos:position pos:line="15" pos:column="97"/></name></expr>]<pos:position pos:line="15" pos:column="98"/></index></name><operator pos:line="15" pos:column="98">.<pos:position pos:line="15" pos:column="99"/></operator><name pos:line="15" pos:column="99">counter<pos:position pos:line="15" pos:column="106"/></name></expr>)<pos:position pos:line="15" pos:column="107"/></condition><then pos:line="15" pos:column="107">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="41">PyList_SetItem<pos:position pos:line="16" pos:column="55"/></name><argument_list pos:line="16" pos:column="55">(<argument><expr><name pos:line="16" pos:column="56">list<pos:position pos:line="16" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="62">i<pos:position pos:line="16" pos:column="63"/></name></expr></argument>, <argument><expr><call><name pos:line="16" pos:column="65">PyInt_FromLong<pos:position pos:line="16" pos:column="79"/></name><argument_list pos:line="16" pos:column="79">(<argument><expr><name><name pos:line="16" pos:column="80">value_list<pos:position pos:line="16" pos:column="90"/></name><operator pos:line="16" pos:column="90">-&gt;<pos:position pos:line="16" pos:column="95"/></operator><name pos:line="16" pos:column="92">values<pos:position pos:line="16" pos:column="98"/></name><index pos:line="16" pos:column="98">[<expr><name pos:line="16" pos:column="99">i<pos:position pos:line="16" pos:column="100"/></name></expr>]<pos:position pos:line="16" pos:column="101"/></index></name><operator pos:line="16" pos:column="101">.<pos:position pos:line="16" pos:column="102"/></operator><name pos:line="16" pos:column="102">counter<pos:position pos:line="16" pos:column="109"/></name></expr></argument>)<pos:position pos:line="16" pos:column="110"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="112"/></expr_stmt></block></then>
				<else pos:line="17" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="41">PyList_SetItem<pos:position pos:line="18" pos:column="55"/></name><argument_list pos:line="18" pos:column="55">(<argument><expr><name pos:line="18" pos:column="56">list<pos:position pos:line="18" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="62">i<pos:position pos:line="18" pos:column="63"/></name></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="65">PyLong_FromUnsignedLongLong<pos:position pos:line="18" pos:column="92"/></name><argument_list pos:line="18" pos:column="92">(<argument><expr><name><name pos:line="18" pos:column="93">value_list<pos:position pos:line="18" pos:column="103"/></name><operator pos:line="18" pos:column="103">-&gt;<pos:position pos:line="18" pos:column="108"/></operator><name pos:line="18" pos:column="105">values<pos:position pos:line="18" pos:column="111"/></name><index pos:line="18" pos:column="111">[<expr><name pos:line="18" pos:column="112">i<pos:position pos:line="18" pos:column="113"/></name></expr>]<pos:position pos:line="18" pos:column="114"/></index></name><operator pos:line="18" pos:column="114">.<pos:position pos:line="18" pos:column="115"/></operator><name pos:line="18" pos:column="115">counter<pos:position pos:line="18" pos:column="122"/></name></expr></argument>)<pos:position pos:line="18" pos:column="123"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="124"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="125"/></expr_stmt></block></else></if>
			}<pos:position pos:line="19" pos:column="26"/></block></then> <elseif pos:line="19" pos:column="27">else <if pos:line="19" pos:column="32">if <condition pos:line="19" pos:column="35">(<expr><name><name pos:line="19" pos:column="36">ds<pos:position pos:line="19" pos:column="38"/></name><operator pos:line="19" pos:column="38">-&gt;<pos:position pos:line="19" pos:column="43"/></operator><name pos:line="19" pos:column="40">ds<pos:position pos:line="19" pos:column="42"/></name><index pos:line="19" pos:column="42">[<expr><name pos:line="19" pos:column="43">i<pos:position pos:line="19" pos:column="44"/></name></expr>]<pos:position pos:line="19" pos:column="45"/></index></name><operator pos:line="19" pos:column="45">.<pos:position pos:line="19" pos:column="46"/></operator><name pos:line="19" pos:column="46">type<pos:position pos:line="19" pos:column="50"/></name> <operator pos:line="19" pos:column="51">==<pos:position pos:line="19" pos:column="53"/></operator> <name pos:line="19" pos:column="54">DS_TYPE_GAUGE<pos:position pos:line="19" pos:column="67"/></name></expr>)<pos:position pos:line="19" pos:column="68"/></condition><then pos:line="19" pos:column="68"> <block pos:line="19" pos:column="69">{
				<expr_stmt><expr><call><name pos:line="20" pos:column="33">PyList_SetItem<pos:position pos:line="20" pos:column="47"/></name><argument_list pos:line="20" pos:column="47">(<argument><expr><name pos:line="20" pos:column="48">list<pos:position pos:line="20" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="54">i<pos:position pos:line="20" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="57">PyFloat_FromDouble<pos:position pos:line="20" pos:column="75"/></name><argument_list pos:line="20" pos:column="75">(<argument><expr><name><name pos:line="20" pos:column="76">value_list<pos:position pos:line="20" pos:column="86"/></name><operator pos:line="20" pos:column="86">-&gt;<pos:position pos:line="20" pos:column="91"/></operator><name pos:line="20" pos:column="88">values<pos:position pos:line="20" pos:column="94"/></name><index pos:line="20" pos:column="94">[<expr><name pos:line="20" pos:column="95">i<pos:position pos:line="20" pos:column="96"/></name></expr>]<pos:position pos:line="20" pos:column="97"/></index></name><operator pos:line="20" pos:column="97">.<pos:position pos:line="20" pos:column="98"/></operator><name pos:line="20" pos:column="98">gauge<pos:position pos:line="20" pos:column="103"/></name></expr></argument>)<pos:position pos:line="20" pos:column="104"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="106"/></expr_stmt>
			}<pos:position pos:line="21" pos:column="26"/></block></then></if></elseif> <elseif pos:line="21" pos:column="27">else <if pos:line="21" pos:column="32">if <condition pos:line="21" pos:column="35">(<expr><name><name pos:line="21" pos:column="36">ds<pos:position pos:line="21" pos:column="38"/></name><operator pos:line="21" pos:column="38">-&gt;<pos:position pos:line="21" pos:column="43"/></operator><name pos:line="21" pos:column="40">ds<pos:position pos:line="21" pos:column="42"/></name><index pos:line="21" pos:column="42">[<expr><name pos:line="21" pos:column="43">i<pos:position pos:line="21" pos:column="44"/></name></expr>]<pos:position pos:line="21" pos:column="45"/></index></name><operator pos:line="21" pos:column="45">.<pos:position pos:line="21" pos:column="46"/></operator><name pos:line="21" pos:column="46">type<pos:position pos:line="21" pos:column="50"/></name> <operator pos:line="21" pos:column="51">==<pos:position pos:line="21" pos:column="53"/></operator> <name pos:line="21" pos:column="54">DS_TYPE_DERIVE<pos:position pos:line="21" pos:column="68"/></name></expr>)<pos:position pos:line="21" pos:column="69"/></condition><then pos:line="21" pos:column="69"> <block pos:line="21" pos:column="70">{
				<if pos:line="22" pos:column="33">if <condition pos:line="22" pos:column="36">(<expr><operator pos:line="22" pos:column="37">(<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="38">long<pos:position pos:line="22" pos:column="42"/></name><operator pos:line="22" pos:column="42">)<pos:position pos:line="22" pos:column="43"/></operator> <name><name pos:line="22" pos:column="44">value_list<pos:position pos:line="22" pos:column="54"/></name><operator pos:line="22" pos:column="54">-&gt;<pos:position pos:line="22" pos:column="59"/></operator><name pos:line="22" pos:column="56">values<pos:position pos:line="22" pos:column="62"/></name><index pos:line="22" pos:column="62">[<expr><name pos:line="22" pos:column="63">i<pos:position pos:line="22" pos:column="64"/></name></expr>]<pos:position pos:line="22" pos:column="65"/></index></name><operator pos:line="22" pos:column="65">.<pos:position pos:line="22" pos:column="66"/></operator><name pos:line="22" pos:column="66">derive<pos:position pos:line="22" pos:column="72"/></name> <operator pos:line="22" pos:column="73">==<pos:position pos:line="22" pos:column="75"/></operator> <name><name pos:line="22" pos:column="76">value_list<pos:position pos:line="22" pos:column="86"/></name><operator pos:line="22" pos:column="86">-&gt;<pos:position pos:line="22" pos:column="91"/></operator><name pos:line="22" pos:column="88">values<pos:position pos:line="22" pos:column="94"/></name><index pos:line="22" pos:column="94">[<expr><name pos:line="22" pos:column="95">i<pos:position pos:line="22" pos:column="96"/></name></expr>]<pos:position pos:line="22" pos:column="97"/></index></name><operator pos:line="22" pos:column="97">.<pos:position pos:line="22" pos:column="98"/></operator><name pos:line="22" pos:column="98">derive<pos:position pos:line="22" pos:column="104"/></name></expr>)<pos:position pos:line="22" pos:column="105"/></condition><then pos:line="22" pos:column="105">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="41">PyList_SetItem<pos:position pos:line="23" pos:column="55"/></name><argument_list pos:line="23" pos:column="55">(<argument><expr><name pos:line="23" pos:column="56">list<pos:position pos:line="23" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="62">i<pos:position pos:line="23" pos:column="63"/></name></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="65">PyInt_FromLong<pos:position pos:line="23" pos:column="79"/></name><argument_list pos:line="23" pos:column="79">(<argument><expr><name><name pos:line="23" pos:column="80">value_list<pos:position pos:line="23" pos:column="90"/></name><operator pos:line="23" pos:column="90">-&gt;<pos:position pos:line="23" pos:column="95"/></operator><name pos:line="23" pos:column="92">values<pos:position pos:line="23" pos:column="98"/></name><index pos:line="23" pos:column="98">[<expr><name pos:line="23" pos:column="99">i<pos:position pos:line="23" pos:column="100"/></name></expr>]<pos:position pos:line="23" pos:column="101"/></index></name><operator pos:line="23" pos:column="101">.<pos:position pos:line="23" pos:column="102"/></operator><name pos:line="23" pos:column="102">derive<pos:position pos:line="23" pos:column="108"/></name></expr></argument>)<pos:position pos:line="23" pos:column="109"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="111"/></expr_stmt></block></then>
				<else pos:line="24" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="41">PyList_SetItem<pos:position pos:line="25" pos:column="55"/></name><argument_list pos:line="25" pos:column="55">(<argument><expr><name pos:line="25" pos:column="56">list<pos:position pos:line="25" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="62">i<pos:position pos:line="25" pos:column="63"/></name></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="65">PyLong_FromLongLong<pos:position pos:line="25" pos:column="84"/></name><argument_list pos:line="25" pos:column="84">(<argument><expr><name><name pos:line="25" pos:column="85">value_list<pos:position pos:line="25" pos:column="95"/></name><operator pos:line="25" pos:column="95">-&gt;<pos:position pos:line="25" pos:column="100"/></operator><name pos:line="25" pos:column="97">values<pos:position pos:line="25" pos:column="103"/></name><index pos:line="25" pos:column="103">[<expr><name pos:line="25" pos:column="104">i<pos:position pos:line="25" pos:column="105"/></name></expr>]<pos:position pos:line="25" pos:column="106"/></index></name><operator pos:line="25" pos:column="106">.<pos:position pos:line="25" pos:column="107"/></operator><name pos:line="25" pos:column="107">derive<pos:position pos:line="25" pos:column="113"/></name></expr></argument>)<pos:position pos:line="25" pos:column="114"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="115"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="116"/></expr_stmt></block></else></if>
			}<pos:position pos:line="26" pos:column="26"/></block></then></if></elseif> <elseif pos:line="26" pos:column="27">else <if pos:line="26" pos:column="32">if <condition pos:line="26" pos:column="35">(<expr><name><name pos:line="26" pos:column="36">ds<pos:position pos:line="26" pos:column="38"/></name><operator pos:line="26" pos:column="38">-&gt;<pos:position pos:line="26" pos:column="43"/></operator><name pos:line="26" pos:column="40">ds<pos:position pos:line="26" pos:column="42"/></name><index pos:line="26" pos:column="42">[<expr><name pos:line="26" pos:column="43">i<pos:position pos:line="26" pos:column="44"/></name></expr>]<pos:position pos:line="26" pos:column="45"/></index></name><operator pos:line="26" pos:column="45">.<pos:position pos:line="26" pos:column="46"/></operator><name pos:line="26" pos:column="46">type<pos:position pos:line="26" pos:column="50"/></name> <operator pos:line="26" pos:column="51">==<pos:position pos:line="26" pos:column="53"/></operator> <name pos:line="26" pos:column="54">DS_TYPE_ABSOLUTE<pos:position pos:line="26" pos:column="70"/></name></expr>)<pos:position pos:line="26" pos:column="71"/></condition><then pos:line="26" pos:column="71"> <block pos:line="26" pos:column="72">{
				<if pos:line="27" pos:column="33">if <condition pos:line="27" pos:column="36">(<expr><operator pos:line="27" pos:column="37">(<pos:position pos:line="27" pos:column="38"/></operator><name pos:line="27" pos:column="38">long<pos:position pos:line="27" pos:column="42"/></name><operator pos:line="27" pos:column="42">)<pos:position pos:line="27" pos:column="43"/></operator> <name><name pos:line="27" pos:column="44">value_list<pos:position pos:line="27" pos:column="54"/></name><operator pos:line="27" pos:column="54">-&gt;<pos:position pos:line="27" pos:column="59"/></operator><name pos:line="27" pos:column="56">values<pos:position pos:line="27" pos:column="62"/></name><index pos:line="27" pos:column="62">[<expr><name pos:line="27" pos:column="63">i<pos:position pos:line="27" pos:column="64"/></name></expr>]<pos:position pos:line="27" pos:column="65"/></index></name><operator pos:line="27" pos:column="65">.<pos:position pos:line="27" pos:column="66"/></operator><name pos:line="27" pos:column="66">absolute<pos:position pos:line="27" pos:column="74"/></name> <operator pos:line="27" pos:column="75">==<pos:position pos:line="27" pos:column="77"/></operator> <name><name pos:line="27" pos:column="78">value_list<pos:position pos:line="27" pos:column="88"/></name><operator pos:line="27" pos:column="88">-&gt;<pos:position pos:line="27" pos:column="93"/></operator><name pos:line="27" pos:column="90">values<pos:position pos:line="27" pos:column="96"/></name><index pos:line="27" pos:column="96">[<expr><name pos:line="27" pos:column="97">i<pos:position pos:line="27" pos:column="98"/></name></expr>]<pos:position pos:line="27" pos:column="99"/></index></name><operator pos:line="27" pos:column="99">.<pos:position pos:line="27" pos:column="100"/></operator><name pos:line="27" pos:column="100">absolute<pos:position pos:line="27" pos:column="108"/></name></expr>)<pos:position pos:line="27" pos:column="109"/></condition><then pos:line="27" pos:column="109">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="41">PyList_SetItem<pos:position pos:line="28" pos:column="55"/></name><argument_list pos:line="28" pos:column="55">(<argument><expr><name pos:line="28" pos:column="56">list<pos:position pos:line="28" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="62">i<pos:position pos:line="28" pos:column="63"/></name></expr></argument>, <argument><expr><call><name pos:line="28" pos:column="65">PyInt_FromLong<pos:position pos:line="28" pos:column="79"/></name><argument_list pos:line="28" pos:column="79">(<argument><expr><name><name pos:line="28" pos:column="80">value_list<pos:position pos:line="28" pos:column="90"/></name><operator pos:line="28" pos:column="90">-&gt;<pos:position pos:line="28" pos:column="95"/></operator><name pos:line="28" pos:column="92">values<pos:position pos:line="28" pos:column="98"/></name><index pos:line="28" pos:column="98">[<expr><name pos:line="28" pos:column="99">i<pos:position pos:line="28" pos:column="100"/></name></expr>]<pos:position pos:line="28" pos:column="101"/></index></name><operator pos:line="28" pos:column="101">.<pos:position pos:line="28" pos:column="102"/></operator><name pos:line="28" pos:column="102">absolute<pos:position pos:line="28" pos:column="110"/></name></expr></argument>)<pos:position pos:line="28" pos:column="111"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="113"/></expr_stmt></block></then>
				<else pos:line="29" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="41">PyList_SetItem<pos:position pos:line="30" pos:column="55"/></name><argument_list pos:line="30" pos:column="55">(<argument><expr><name pos:line="30" pos:column="56">list<pos:position pos:line="30" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="62">i<pos:position pos:line="30" pos:column="63"/></name></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="65">PyLong_FromUnsignedLongLong<pos:position pos:line="30" pos:column="92"/></name><argument_list pos:line="30" pos:column="92">(<argument><expr><name><name pos:line="30" pos:column="93">value_list<pos:position pos:line="30" pos:column="103"/></name><operator pos:line="30" pos:column="103">-&gt;<pos:position pos:line="30" pos:column="108"/></operator><name pos:line="30" pos:column="105">values<pos:position pos:line="30" pos:column="111"/></name><index pos:line="30" pos:column="111">[<expr><name pos:line="30" pos:column="112">i<pos:position pos:line="30" pos:column="113"/></name></expr>]<pos:position pos:line="30" pos:column="114"/></index></name><operator pos:line="30" pos:column="114">.<pos:position pos:line="30" pos:column="115"/></operator><name pos:line="30" pos:column="115">absolute<pos:position pos:line="30" pos:column="123"/></name></expr></argument>)<pos:position pos:line="30" pos:column="124"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="125"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="126"/></expr_stmt></block></else></if>
			}<pos:position pos:line="31" pos:column="26"/></block></then></if></elseif> <else pos:line="31" pos:column="27">else <block pos:line="31" pos:column="32">{
				<decl_stmt><decl><type><name pos:line="32" pos:column="33">Py_BEGIN_ALLOW_THREADS<pos:position pos:line="32" pos:column="55"/></name></type>
				<name pos:line="33" pos:column="33">ERROR<pos:position pos:line="33" pos:column="38"/></name><argument_list pos:line="33" pos:column="38">(<argument><expr><literal type="string" pos:line="33" pos:column="39">"cpy_write_callback: Unknown value type %d."<pos:position pos:line="33" pos:column="83"/></literal></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="85">ds<pos:position pos:line="33" pos:column="87"/></name><operator pos:line="33" pos:column="87">-&gt;<pos:position pos:line="33" pos:column="92"/></operator><name pos:line="33" pos:column="89">ds<pos:position pos:line="33" pos:column="91"/></name><index pos:line="33" pos:column="91">[<expr><name pos:line="33" pos:column="92">i<pos:position pos:line="33" pos:column="93"/></name></expr>]<pos:position pos:line="33" pos:column="94"/></index></name><operator pos:line="33" pos:column="94">.<pos:position pos:line="33" pos:column="95"/></operator><name pos:line="33" pos:column="95">type<pos:position pos:line="33" pos:column="99"/></name></expr></argument>)<pos:position pos:line="33" pos:column="100"/></argument_list></decl>;<pos:position pos:line="33" pos:column="101"/></decl_stmt>
				<decl_stmt><decl><type><name pos:line="34" pos:column="33">Py_END_ALLOW_THREADS<pos:position pos:line="34" pos:column="53"/></name></type>
				<name pos:line="35" pos:column="33">Py_DECREF<pos:position pos:line="35" pos:column="42"/></name><argument_list pos:line="35" pos:column="42">(<argument><expr><name pos:line="35" pos:column="43">list<pos:position pos:line="35" pos:column="47"/></name></expr></argument>)<pos:position pos:line="35" pos:column="48"/></argument_list></decl>;<pos:position pos:line="35" pos:column="49"/></decl_stmt>
				<expr_stmt><expr><name pos:line="36" pos:column="33">CPY_RETURN_FROM_THREADS<pos:position pos:line="36" pos:column="56"/></name> <literal type="number" pos:line="36" pos:column="57">0<pos:position pos:line="36" pos:column="58"/></literal></expr>;<pos:position pos:line="36" pos:column="59"/></expr_stmt>
			}<pos:position pos:line="37" pos:column="26"/></block></else></if>
			<if pos:line="38" pos:column="25">if <condition pos:line="38" pos:column="28">(<expr><call><name pos:line="38" pos:column="29">PyErr_Occurred<pos:position pos:line="38" pos:column="43"/></name><argument_list pos:line="38" pos:column="43">()<pos:position pos:line="38" pos:column="45"/></argument_list></call> <operator pos:line="38" pos:column="46">!=<pos:position pos:line="38" pos:column="48"/></operator> <name pos:line="38" pos:column="49">NULL<pos:position pos:line="38" pos:column="53"/></name></expr>)<pos:position pos:line="38" pos:column="54"/></condition><then pos:line="38" pos:column="54"> <block pos:line="38" pos:column="55">{
				<expr_stmt><expr><call><name pos:line="39" pos:column="33">cpy_log_exception<pos:position pos:line="39" pos:column="50"/></name><argument_list pos:line="39" pos:column="50">(<argument><expr><literal type="string" pos:line="39" pos:column="51">"value building for write callback"<pos:position pos:line="39" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="88"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="40" pos:column="33">Py_DECREF<pos:position pos:line="40" pos:column="42"/></name><argument_list pos:line="40" pos:column="42">(<argument><expr><name pos:line="40" pos:column="43">list<pos:position pos:line="40" pos:column="47"/></name></expr></argument>)<pos:position pos:line="40" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="49"/></expr_stmt>
				<expr_stmt><expr><name pos:line="41" pos:column="33">CPY_RETURN_FROM_THREADS<pos:position pos:line="41" pos:column="56"/></name> <literal type="number" pos:line="41" pos:column="57">0<pos:position pos:line="41" pos:column="58"/></literal></expr>;<pos:position pos:line="41" pos:column="59"/></expr_stmt>
			}<pos:position pos:line="42" pos:column="26"/></block></then></if>
		}<pos:position pos:line="43" pos:column="18"/></block></for>
		<expr_stmt><expr><name pos:line="44" pos:column="17">dict<pos:position pos:line="44" pos:column="21"/></name> <operator pos:line="44" pos:column="22">=<pos:position pos:line="44" pos:column="23"/></operator> <call><name pos:line="44" pos:column="24">PyDict_New<pos:position pos:line="44" pos:column="34"/></name><argument_list pos:line="44" pos:column="34">()<pos:position pos:line="44" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="37"/></expr_stmt>
		<if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><name><name pos:line="45" pos:column="21">value_list<pos:position pos:line="45" pos:column="31"/></name><operator pos:line="45" pos:column="31">-&gt;<pos:position pos:line="45" pos:column="36"/></operator><name pos:line="45" pos:column="33">meta<pos:position pos:line="45" pos:column="37"/></name></name></expr>)<pos:position pos:line="45" pos:column="38"/></condition><then pos:line="45" pos:column="38"> <block pos:line="45" pos:column="39">{
			<decl_stmt><decl><type><name pos:line="46" pos:column="25">int<pos:position pos:line="46" pos:column="28"/></name></type> <name pos:line="46" pos:column="29">i<pos:position pos:line="46" pos:column="30"/></name></decl>, <decl><type ref="prev"/><name pos:line="46" pos:column="32">num<pos:position pos:line="46" pos:column="35"/></name></decl>;<pos:position pos:line="46" pos:column="36"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="47" pos:column="25">char<pos:position pos:line="47" pos:column="29"/></name> <modifier pos:line="47" pos:column="30">*<pos:position pos:line="47" pos:column="31"/></modifier><modifier pos:line="47" pos:column="31">*<pos:position pos:line="47" pos:column="32"/></modifier></type><name pos:line="47" pos:column="32">table<pos:position pos:line="47" pos:column="37"/></name></decl>;<pos:position pos:line="47" pos:column="38"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="48" pos:column="25">meta_data_t<pos:position pos:line="48" pos:column="36"/></name> <modifier pos:line="48" pos:column="37">*<pos:position pos:line="48" pos:column="38"/></modifier></type><name pos:line="48" pos:column="38">meta<pos:position pos:line="48" pos:column="42"/></name> <init pos:line="48" pos:column="43">= <expr><name><name pos:line="48" pos:column="45">value_list<pos:position pos:line="48" pos:column="55"/></name><operator pos:line="48" pos:column="55">-&gt;<pos:position pos:line="48" pos:column="60"/></operator><name pos:line="48" pos:column="57">meta<pos:position pos:line="48" pos:column="61"/></name></name></expr></init></decl>;<pos:position pos:line="48" pos:column="62"/></decl_stmt>

			<expr_stmt><expr><name pos:line="50" pos:column="25">num<pos:position pos:line="50" pos:column="28"/></name> <operator pos:line="50" pos:column="29">=<pos:position pos:line="50" pos:column="30"/></operator> <call><name pos:line="50" pos:column="31">meta_data_toc<pos:position pos:line="50" pos:column="44"/></name><argument_list pos:line="50" pos:column="44">(<argument><expr><name pos:line="50" pos:column="45">meta<pos:position pos:line="50" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="51">&amp;<pos:position pos:line="50" pos:column="56"/></operator><name pos:line="50" pos:column="52">table<pos:position pos:line="50" pos:column="57"/></name></expr></argument>)<pos:position pos:line="50" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="59"/></expr_stmt>
			<for pos:line="51" pos:column="25">for <control pos:line="51" pos:column="29">(<init><expr><name pos:line="51" pos:column="30">i<pos:position pos:line="51" pos:column="31"/></name> <operator pos:line="51" pos:column="32">=<pos:position pos:line="51" pos:column="33"/></operator> <literal type="number" pos:line="51" pos:column="34">0<pos:position pos:line="51" pos:column="35"/></literal></expr>;<pos:position pos:line="51" pos:column="36"/></init> <condition><expr><name pos:line="51" pos:column="37">i<pos:position pos:line="51" pos:column="38"/></name> <operator pos:line="51" pos:column="39">&lt;<pos:position pos:line="51" pos:column="43"/></operator> <name pos:line="51" pos:column="41">num<pos:position pos:line="51" pos:column="44"/></name></expr>;<pos:position pos:line="51" pos:column="45"/></condition> <incr><expr><operator pos:line="51" pos:column="46">++<pos:position pos:line="51" pos:column="48"/></operator><name pos:line="51" pos:column="48">i<pos:position pos:line="51" pos:column="49"/></name></expr></incr>)<pos:position pos:line="51" pos:column="50"/></control> <block pos:line="51" pos:column="51">{
				<decl_stmt><decl><type><name pos:line="52" pos:column="33">int<pos:position pos:line="52" pos:column="36"/></name></type> <name pos:line="52" pos:column="37">type<pos:position pos:line="52" pos:column="41"/></name></decl>;<pos:position pos:line="52" pos:column="42"/></decl_stmt>
				<decl_stmt><decl><type><name pos:line="53" pos:column="33">char<pos:position pos:line="53" pos:column="37"/></name> <modifier pos:line="53" pos:column="38">*<pos:position pos:line="53" pos:column="39"/></modifier></type><name pos:line="53" pos:column="39">string<pos:position pos:line="53" pos:column="45"/></name></decl>;<pos:position pos:line="53" pos:column="46"/></decl_stmt>
				<decl_stmt><decl><type><name pos:line="54" pos:column="33">int64_t<pos:position pos:line="54" pos:column="40"/></name></type> <name pos:line="54" pos:column="41">si<pos:position pos:line="54" pos:column="43"/></name></decl>;<pos:position pos:line="54" pos:column="44"/></decl_stmt>
				<decl_stmt><decl><type><name pos:line="55" pos:column="33">uint64_t<pos:position pos:line="55" pos:column="41"/></name></type> <name pos:line="55" pos:column="42">ui<pos:position pos:line="55" pos:column="44"/></name></decl>;<pos:position pos:line="55" pos:column="45"/></decl_stmt>
				<decl_stmt><decl><type><name pos:line="56" pos:column="33">double<pos:position pos:line="56" pos:column="39"/></name></type> <name pos:line="56" pos:column="40">d<pos:position pos:line="56" pos:column="41"/></name></decl>;<pos:position pos:line="56" pos:column="42"/></decl_stmt>
				<decl_stmt><decl><type><name pos:line="57" pos:column="33">_Bool<pos:position pos:line="57" pos:column="38"/></name></type> <name pos:line="57" pos:column="39">b<pos:position pos:line="57" pos:column="40"/></name></decl>;<pos:position pos:line="57" pos:column="41"/></decl_stmt>
				
				<expr_stmt><expr><name pos:line="59" pos:column="33">type<pos:position pos:line="59" pos:column="37"/></name> <operator pos:line="59" pos:column="38">=<pos:position pos:line="59" pos:column="39"/></operator> <call><name pos:line="59" pos:column="40">meta_data_type<pos:position pos:line="59" pos:column="54"/></name><argument_list pos:line="59" pos:column="54">(<argument><expr><name pos:line="59" pos:column="55">meta<pos:position pos:line="59" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="61">table<pos:position pos:line="59" pos:column="66"/></name><index pos:line="59" pos:column="66">[<expr><name pos:line="59" pos:column="67">i<pos:position pos:line="59" pos:column="68"/></name></expr>]<pos:position pos:line="59" pos:column="69"/></index></name></expr></argument>)<pos:position pos:line="59" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="71"/></expr_stmt>
				<if pos:line="60" pos:column="33">if <condition pos:line="60" pos:column="36">(<expr><name pos:line="60" pos:column="37">type<pos:position pos:line="60" pos:column="41"/></name> <operator pos:line="60" pos:column="42">==<pos:position pos:line="60" pos:column="44"/></operator> <name pos:line="60" pos:column="45">MD_TYPE_STRING<pos:position pos:line="60" pos:column="59"/></name></expr>)<pos:position pos:line="60" pos:column="60"/></condition><then pos:line="60" pos:column="60"> <block pos:line="60" pos:column="61">{
					<if pos:line="61" pos:column="41">if <condition pos:line="61" pos:column="44">(<expr><call><name pos:line="61" pos:column="45">meta_data_get_string<pos:position pos:line="61" pos:column="65"/></name><argument_list pos:line="61" pos:column="65">(<argument><expr><name pos:line="61" pos:column="66">meta<pos:position pos:line="61" pos:column="70"/></name></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="72">table<pos:position pos:line="61" pos:column="77"/></name><index pos:line="61" pos:column="77">[<expr><name pos:line="61" pos:column="78">i<pos:position pos:line="61" pos:column="79"/></name></expr>]<pos:position pos:line="61" pos:column="80"/></index></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="82">&amp;<pos:position pos:line="61" pos:column="87"/></operator><name pos:line="61" pos:column="83">string<pos:position pos:line="61" pos:column="89"/></name></expr></argument>)<pos:position pos:line="61" pos:column="90"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="91"/></condition><then pos:line="61" pos:column="91">
						<block type="pseudo"><continue pos:line="62" pos:column="49">continue;<pos:position pos:line="62" pos:column="58"/></continue></block></then></if>
					<expr_stmt><expr><name pos:line="63" pos:column="41">temp<pos:position pos:line="63" pos:column="45"/></name> <operator pos:line="63" pos:column="46">=<pos:position pos:line="63" pos:column="47"/></operator> <call><name pos:line="63" pos:column="48">cpy_string_to_unicode_or_bytes<pos:position pos:line="63" pos:column="78"/></name><argument_list pos:line="63" pos:column="78">(<argument><expr><name pos:line="63" pos:column="79">string<pos:position pos:line="63" pos:column="85"/></name></expr></argument>)<pos:position pos:line="63" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="87"/></expr_stmt>
					<expr_stmt><expr><call><name pos:line="64" pos:column="41">free<pos:position pos:line="64" pos:column="45"/></name><argument_list pos:line="64" pos:column="45">(<argument><expr><name pos:line="64" pos:column="46">string<pos:position pos:line="64" pos:column="52"/></name></expr></argument>)<pos:position pos:line="64" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="54"/></expr_stmt>
					<expr_stmt><expr><call><name pos:line="65" pos:column="41">PyDict_SetItemString<pos:position pos:line="65" pos:column="61"/></name><argument_list pos:line="65" pos:column="61">(<argument><expr><name pos:line="65" pos:column="62">dict<pos:position pos:line="65" pos:column="66"/></name></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="68">table<pos:position pos:line="65" pos:column="73"/></name><index pos:line="65" pos:column="73">[<expr><name pos:line="65" pos:column="74">i<pos:position pos:line="65" pos:column="75"/></name></expr>]<pos:position pos:line="65" pos:column="76"/></index></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="78">temp<pos:position pos:line="65" pos:column="82"/></name></expr></argument>)<pos:position pos:line="65" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="84"/></expr_stmt>
					<expr_stmt><expr><call><name pos:line="66" pos:column="41">Py_XDECREF<pos:position pos:line="66" pos:column="51"/></name><argument_list pos:line="66" pos:column="51">(<argument><expr><name pos:line="66" pos:column="52">temp<pos:position pos:line="66" pos:column="56"/></name></expr></argument>)<pos:position pos:line="66" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="58"/></expr_stmt>
				}<pos:position pos:line="67" pos:column="34"/></block></then> <elseif pos:line="67" pos:column="35">else <if pos:line="67" pos:column="40">if <condition pos:line="67" pos:column="43">(<expr><name pos:line="67" pos:column="44">type<pos:position pos:line="67" pos:column="48"/></name> <operator pos:line="67" pos:column="49">==<pos:position pos:line="67" pos:column="51"/></operator> <name pos:line="67" pos:column="52">MD_TYPE_SIGNED_INT<pos:position pos:line="67" pos:column="70"/></name></expr>)<pos:position pos:line="67" pos:column="71"/></condition><then pos:line="67" pos:column="71"> <block pos:line="67" pos:column="72">{
					<if pos:line="68" pos:column="41">if <condition pos:line="68" pos:column="44">(<expr><call><name pos:line="68" pos:column="45">meta_data_get_signed_int<pos:position pos:line="68" pos:column="69"/></name><argument_list pos:line="68" pos:column="69">(<argument><expr><name pos:line="68" pos:column="70">meta<pos:position pos:line="68" pos:column="74"/></name></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="76">table<pos:position pos:line="68" pos:column="81"/></name><index pos:line="68" pos:column="81">[<expr><name pos:line="68" pos:column="82">i<pos:position pos:line="68" pos:column="83"/></name></expr>]<pos:position pos:line="68" pos:column="84"/></index></name></expr></argument>, <argument><expr><operator pos:line="68" pos:column="86">&amp;<pos:position pos:line="68" pos:column="91"/></operator><name pos:line="68" pos:column="87">si<pos:position pos:line="68" pos:column="89"/></name></expr></argument>)<pos:position pos:line="68" pos:column="90"/></argument_list></call></expr>)<pos:position pos:line="68" pos:column="91"/></condition><then pos:line="68" pos:column="91">
						<block type="pseudo"><continue pos:line="69" pos:column="49">continue;<pos:position pos:line="69" pos:column="58"/></continue></block></then></if>
					<expr_stmt><expr><name pos:line="70" pos:column="41">temp<pos:position pos:line="70" pos:column="45"/></name> <operator pos:line="70" pos:column="46">=<pos:position pos:line="70" pos:column="47"/></operator> <call><name pos:line="70" pos:column="48">PyObject_CallFunctionObjArgs<pos:position pos:line="70" pos:column="76"/></name><argument_list pos:line="70" pos:column="76">(<argument><expr><operator pos:line="70" pos:column="77">(<pos:position pos:line="70" pos:column="78"/></operator><name pos:line="70" pos:column="78">void<pos:position pos:line="70" pos:column="82"/></name> <operator pos:line="70" pos:column="83">*<pos:position pos:line="70" pos:column="84"/></operator><operator pos:line="70" pos:column="84">)<pos:position pos:line="70" pos:column="85"/></operator> <operator pos:line="70" pos:column="86">&amp;<pos:position pos:line="70" pos:column="91"/></operator><name pos:line="70" pos:column="87">SignedType<pos:position pos:line="70" pos:column="97"/></name></expr></argument>, <argument><expr><call><name pos:line="70" pos:column="99">PyLong_FromLongLong<pos:position pos:line="70" pos:column="118"/></name><argument_list pos:line="70" pos:column="118">(<argument><expr><name pos:line="70" pos:column="119">si<pos:position pos:line="70" pos:column="121"/></name></expr></argument>)<pos:position pos:line="70" pos:column="122"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="70" pos:column="124">(<pos:position pos:line="70" pos:column="125"/></operator><name pos:line="70" pos:column="125">void<pos:position pos:line="70" pos:column="129"/></name> <operator pos:line="70" pos:column="130">*<pos:position pos:line="70" pos:column="131"/></operator><operator pos:line="70" pos:column="131">)<pos:position pos:line="70" pos:column="132"/></operator> <literal type="number" pos:line="70" pos:column="133">0<pos:position pos:line="70" pos:column="134"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="135"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="136"/></expr_stmt>
					<expr_stmt><expr><call><name pos:line="71" pos:column="41">PyDict_SetItemString<pos:position pos:line="71" pos:column="61"/></name><argument_list pos:line="71" pos:column="61">(<argument><expr><name pos:line="71" pos:column="62">dict<pos:position pos:line="71" pos:column="66"/></name></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="68">table<pos:position pos:line="71" pos:column="73"/></name><index pos:line="71" pos:column="73">[<expr><name pos:line="71" pos:column="74">i<pos:position pos:line="71" pos:column="75"/></name></expr>]<pos:position pos:line="71" pos:column="76"/></index></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="78">temp<pos:position pos:line="71" pos:column="82"/></name></expr></argument>)<pos:position pos:line="71" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="84"/></expr_stmt>
					<expr_stmt><expr><call><name pos:line="72" pos:column="41">Py_XDECREF<pos:position pos:line="72" pos:column="51"/></name><argument_list pos:line="72" pos:column="51">(<argument><expr><name pos:line="72" pos:column="52">temp<pos:position pos:line="72" pos:column="56"/></name></expr></argument>)<pos:position pos:line="72" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="58"/></expr_stmt>
				}<pos:position pos:line="73" pos:column="34"/></block></then></if></elseif> <elseif pos:line="73" pos:column="35">else <if pos:line="73" pos:column="40">if <condition pos:line="73" pos:column="43">(<expr><name pos:line="73" pos:column="44">type<pos:position pos:line="73" pos:column="48"/></name> <operator pos:line="73" pos:column="49">==<pos:position pos:line="73" pos:column="51"/></operator> <name pos:line="73" pos:column="52">MD_TYPE_UNSIGNED_INT<pos:position pos:line="73" pos:column="72"/></name></expr>)<pos:position pos:line="73" pos:column="73"/></condition><then pos:line="73" pos:column="73"> <block pos:line="73" pos:column="74">{
					<if pos:line="74" pos:column="41">if <condition pos:line="74" pos:column="44">(<expr><call><name pos:line="74" pos:column="45">meta_data_get_unsigned_int<pos:position pos:line="74" pos:column="71"/></name><argument_list pos:line="74" pos:column="71">(<argument><expr><name pos:line="74" pos:column="72">meta<pos:position pos:line="74" pos:column="76"/></name></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="78">table<pos:position pos:line="74" pos:column="83"/></name><index pos:line="74" pos:column="83">[<expr><name pos:line="74" pos:column="84">i<pos:position pos:line="74" pos:column="85"/></name></expr>]<pos:position pos:line="74" pos:column="86"/></index></name></expr></argument>, <argument><expr><operator pos:line="74" pos:column="88">&amp;<pos:position pos:line="74" pos:column="93"/></operator><name pos:line="74" pos:column="89">ui<pos:position pos:line="74" pos:column="91"/></name></expr></argument>)<pos:position pos:line="74" pos:column="92"/></argument_list></call></expr>)<pos:position pos:line="74" pos:column="93"/></condition><then pos:line="74" pos:column="93">
						<block type="pseudo"><continue pos:line="75" pos:column="49">continue;<pos:position pos:line="75" pos:column="58"/></continue></block></then></if>
					<expr_stmt><expr><name pos:line="76" pos:column="41">temp<pos:position pos:line="76" pos:column="45"/></name> <operator pos:line="76" pos:column="46">=<pos:position pos:line="76" pos:column="47"/></operator> <call><name pos:line="76" pos:column="48">PyObject_CallFunctionObjArgs<pos:position pos:line="76" pos:column="76"/></name><argument_list pos:line="76" pos:column="76">(<argument><expr><operator pos:line="76" pos:column="77">(<pos:position pos:line="76" pos:column="78"/></operator><name pos:line="76" pos:column="78">void<pos:position pos:line="76" pos:column="82"/></name> <operator pos:line="76" pos:column="83">*<pos:position pos:line="76" pos:column="84"/></operator><operator pos:line="76" pos:column="84">)<pos:position pos:line="76" pos:column="85"/></operator> <operator pos:line="76" pos:column="86">&amp;<pos:position pos:line="76" pos:column="91"/></operator><name pos:line="76" pos:column="87">UnsignedType<pos:position pos:line="76" pos:column="99"/></name></expr></argument>, <argument><expr><call><name pos:line="76" pos:column="101">PyLong_FromUnsignedLongLong<pos:position pos:line="76" pos:column="128"/></name><argument_list pos:line="76" pos:column="128">(<argument><expr><name pos:line="76" pos:column="129">ui<pos:position pos:line="76" pos:column="131"/></name></expr></argument>)<pos:position pos:line="76" pos:column="132"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="76" pos:column="134">(<pos:position pos:line="76" pos:column="135"/></operator><name pos:line="76" pos:column="135">void<pos:position pos:line="76" pos:column="139"/></name> <operator pos:line="76" pos:column="140">*<pos:position pos:line="76" pos:column="141"/></operator><operator pos:line="76" pos:column="141">)<pos:position pos:line="76" pos:column="142"/></operator> <literal type="number" pos:line="76" pos:column="143">0<pos:position pos:line="76" pos:column="144"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="145"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="146"/></expr_stmt>
					<expr_stmt><expr><call><name pos:line="77" pos:column="41">PyDict_SetItemString<pos:position pos:line="77" pos:column="61"/></name><argument_list pos:line="77" pos:column="61">(<argument><expr><name pos:line="77" pos:column="62">dict<pos:position pos:line="77" pos:column="66"/></name></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="68">table<pos:position pos:line="77" pos:column="73"/></name><index pos:line="77" pos:column="73">[<expr><name pos:line="77" pos:column="74">i<pos:position pos:line="77" pos:column="75"/></name></expr>]<pos:position pos:line="77" pos:column="76"/></index></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="78">temp<pos:position pos:line="77" pos:column="82"/></name></expr></argument>)<pos:position pos:line="77" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="84"/></expr_stmt>
					<expr_stmt><expr><call><name pos:line="78" pos:column="41">Py_XDECREF<pos:position pos:line="78" pos:column="51"/></name><argument_list pos:line="78" pos:column="51">(<argument><expr><name pos:line="78" pos:column="52">temp<pos:position pos:line="78" pos:column="56"/></name></expr></argument>)<pos:position pos:line="78" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="58"/></expr_stmt>
				}<pos:position pos:line="79" pos:column="34"/></block></then></if></elseif> <elseif pos:line="79" pos:column="35">else <if pos:line="79" pos:column="40">if <condition pos:line="79" pos:column="43">(<expr><name pos:line="79" pos:column="44">type<pos:position pos:line="79" pos:column="48"/></name> <operator pos:line="79" pos:column="49">==<pos:position pos:line="79" pos:column="51"/></operator> <name pos:line="79" pos:column="52">MD_TYPE_DOUBLE<pos:position pos:line="79" pos:column="66"/></name></expr>)<pos:position pos:line="79" pos:column="67"/></condition><then pos:line="79" pos:column="67"> <block pos:line="79" pos:column="68">{
					<if pos:line="80" pos:column="41">if <condition pos:line="80" pos:column="44">(<expr><call><name pos:line="80" pos:column="45">meta_data_get_double<pos:position pos:line="80" pos:column="65"/></name><argument_list pos:line="80" pos:column="65">(<argument><expr><name pos:line="80" pos:column="66">meta<pos:position pos:line="80" pos:column="70"/></name></expr></argument>, <argument><expr><name><name pos:line="80" pos:column="72">table<pos:position pos:line="80" pos:column="77"/></name><index pos:line="80" pos:column="77">[<expr><name pos:line="80" pos:column="78">i<pos:position pos:line="80" pos:column="79"/></name></expr>]<pos:position pos:line="80" pos:column="80"/></index></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="82">&amp;<pos:position pos:line="80" pos:column="87"/></operator><name pos:line="80" pos:column="83">d<pos:position pos:line="80" pos:column="84"/></name></expr></argument>)<pos:position pos:line="80" pos:column="85"/></argument_list></call></expr>)<pos:position pos:line="80" pos:column="86"/></condition><then pos:line="80" pos:column="86">
						<block type="pseudo"><continue pos:line="81" pos:column="49">continue;<pos:position pos:line="81" pos:column="58"/></continue></block></then></if>
					<expr_stmt><expr><name pos:line="82" pos:column="41">temp<pos:position pos:line="82" pos:column="45"/></name> <operator pos:line="82" pos:column="46">=<pos:position pos:line="82" pos:column="47"/></operator> <call><name pos:line="82" pos:column="48">PyFloat_FromDouble<pos:position pos:line="82" pos:column="66"/></name><argument_list pos:line="82" pos:column="66">(<argument><expr><name pos:line="82" pos:column="67">d<pos:position pos:line="82" pos:column="68"/></name></expr></argument>)<pos:position pos:line="82" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="70"/></expr_stmt>
					<expr_stmt><expr><call><name pos:line="83" pos:column="41">PyDict_SetItemString<pos:position pos:line="83" pos:column="61"/></name><argument_list pos:line="83" pos:column="61">(<argument><expr><name pos:line="83" pos:column="62">dict<pos:position pos:line="83" pos:column="66"/></name></expr></argument>, <argument><expr><name><name pos:line="83" pos:column="68">table<pos:position pos:line="83" pos:column="73"/></name><index pos:line="83" pos:column="73">[<expr><name pos:line="83" pos:column="74">i<pos:position pos:line="83" pos:column="75"/></name></expr>]<pos:position pos:line="83" pos:column="76"/></index></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="78">temp<pos:position pos:line="83" pos:column="82"/></name></expr></argument>)<pos:position pos:line="83" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="84"/></expr_stmt>
					<expr_stmt><expr><call><name pos:line="84" pos:column="41">Py_XDECREF<pos:position pos:line="84" pos:column="51"/></name><argument_list pos:line="84" pos:column="51">(<argument><expr><name pos:line="84" pos:column="52">temp<pos:position pos:line="84" pos:column="56"/></name></expr></argument>)<pos:position pos:line="84" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="58"/></expr_stmt>
				}<pos:position pos:line="85" pos:column="34"/></block></then></if></elseif> <elseif pos:line="85" pos:column="35">else <if pos:line="85" pos:column="40">if <condition pos:line="85" pos:column="43">(<expr><name pos:line="85" pos:column="44">type<pos:position pos:line="85" pos:column="48"/></name> <operator pos:line="85" pos:column="49">==<pos:position pos:line="85" pos:column="51"/></operator> <name pos:line="85" pos:column="52">MD_TYPE_BOOLEAN<pos:position pos:line="85" pos:column="67"/></name></expr>)<pos:position pos:line="85" pos:column="68"/></condition><then pos:line="85" pos:column="68"> <block pos:line="85" pos:column="69">{
					<if pos:line="86" pos:column="41">if <condition pos:line="86" pos:column="44">(<expr><call><name pos:line="86" pos:column="45">meta_data_get_boolean<pos:position pos:line="86" pos:column="66"/></name><argument_list pos:line="86" pos:column="66">(<argument><expr><name pos:line="86" pos:column="67">meta<pos:position pos:line="86" pos:column="71"/></name></expr></argument>, <argument><expr><name><name pos:line="86" pos:column="73">table<pos:position pos:line="86" pos:column="78"/></name><index pos:line="86" pos:column="78">[<expr><name pos:line="86" pos:column="79">i<pos:position pos:line="86" pos:column="80"/></name></expr>]<pos:position pos:line="86" pos:column="81"/></index></name></expr></argument>, <argument><expr><operator pos:line="86" pos:column="83">&amp;<pos:position pos:line="86" pos:column="88"/></operator><name pos:line="86" pos:column="84">b<pos:position pos:line="86" pos:column="85"/></name></expr></argument>)<pos:position pos:line="86" pos:column="86"/></argument_list></call></expr>)<pos:position pos:line="86" pos:column="87"/></condition><then pos:line="86" pos:column="87">
						<block type="pseudo"><continue pos:line="87" pos:column="49">continue;<pos:position pos:line="87" pos:column="58"/></continue></block></then></if>
					<if pos:line="88" pos:column="41">if <condition pos:line="88" pos:column="44">(<expr><name pos:line="88" pos:column="45">b<pos:position pos:line="88" pos:column="46"/></name></expr>)<pos:position pos:line="88" pos:column="47"/></condition><then pos:line="88" pos:column="47">
						<block type="pseudo"><expr_stmt><expr><call><name pos:line="89" pos:column="49">PyDict_SetItemString<pos:position pos:line="89" pos:column="69"/></name><argument_list pos:line="89" pos:column="69">(<argument><expr><name pos:line="89" pos:column="70">dict<pos:position pos:line="89" pos:column="74"/></name></expr></argument>, <argument><expr><name><name pos:line="89" pos:column="76">table<pos:position pos:line="89" pos:column="81"/></name><index pos:line="89" pos:column="81">[<expr><name pos:line="89" pos:column="82">i<pos:position pos:line="89" pos:column="83"/></name></expr>]<pos:position pos:line="89" pos:column="84"/></index></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="86">Py_True<pos:position pos:line="89" pos:column="93"/></name></expr></argument>)<pos:position pos:line="89" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="95"/></expr_stmt></block></then>
					<else pos:line="90" pos:column="41">else
						<block type="pseudo"><expr_stmt><expr><call><name pos:line="91" pos:column="49">PyDict_SetItemString<pos:position pos:line="91" pos:column="69"/></name><argument_list pos:line="91" pos:column="69">(<argument><expr><name pos:line="91" pos:column="70">dict<pos:position pos:line="91" pos:column="74"/></name></expr></argument>, <argument><expr><name><name pos:line="91" pos:column="76">table<pos:position pos:line="91" pos:column="81"/></name><index pos:line="91" pos:column="81">[<expr><name pos:line="91" pos:column="82">i<pos:position pos:line="91" pos:column="83"/></name></expr>]<pos:position pos:line="91" pos:column="84"/></index></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="86">Py_False<pos:position pos:line="91" pos:column="94"/></name></expr></argument>)<pos:position pos:line="91" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="96"/></expr_stmt></block></else></if>
				}<pos:position pos:line="92" pos:column="34"/></block></then></if></elseif></if>
				<expr_stmt><expr><call><name pos:line="93" pos:column="33">free<pos:position pos:line="93" pos:column="37"/></name><argument_list pos:line="93" pos:column="37">(<argument><expr><name><name pos:line="93" pos:column="38">table<pos:position pos:line="93" pos:column="43"/></name><index pos:line="93" pos:column="43">[<expr><name pos:line="93" pos:column="44">i<pos:position pos:line="93" pos:column="45"/></name></expr>]<pos:position pos:line="93" pos:column="46"/></index></name></expr></argument>)<pos:position pos:line="93" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="48"/></expr_stmt>
			}<pos:position pos:line="94" pos:column="26"/></block></for>
			<expr_stmt><expr><call><name pos:line="95" pos:column="25">free<pos:position pos:line="95" pos:column="29"/></name><argument_list pos:line="95" pos:column="29">(<argument><expr><name pos:line="95" pos:column="30">table<pos:position pos:line="95" pos:column="35"/></name></expr></argument>)<pos:position pos:line="95" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="37"/></expr_stmt>
		}<pos:position pos:line="96" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="97" pos:column="17">val<pos:position pos:line="97" pos:column="20"/></name> <operator pos:line="97" pos:column="21">=<pos:position pos:line="97" pos:column="22"/></operator> <call><name pos:line="97" pos:column="23">Values_New<pos:position pos:line="97" pos:column="33"/></name><argument_list pos:line="97" pos:column="33">()<pos:position pos:line="97" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="36"/></expr_stmt> <comment type="block" pos:line="97" pos:column="37">/* New reference. */</comment>
		<expr_stmt><expr><name pos:line="98" pos:column="17">v<pos:position pos:line="98" pos:column="18"/></name> <operator pos:line="98" pos:column="19">=<pos:position pos:line="98" pos:column="20"/></operator> <operator pos:line="98" pos:column="21">(<pos:position pos:line="98" pos:column="22"/></operator><name pos:line="98" pos:column="22">Values<pos:position pos:line="98" pos:column="28"/></name> <operator pos:line="98" pos:column="29">*<pos:position pos:line="98" pos:column="30"/></operator><operator pos:line="98" pos:column="30">)<pos:position pos:line="98" pos:column="31"/></operator> <name pos:line="98" pos:column="32">val<pos:position pos:line="98" pos:column="35"/></name></expr>;<pos:position pos:line="98" pos:column="36"/></expr_stmt> 
		<expr_stmt><expr><call><name pos:line="99" pos:column="17">sstrncpy<pos:position pos:line="99" pos:column="25"/></name><argument_list pos:line="99" pos:column="25">(<argument><expr><name><name pos:line="99" pos:column="26">v<pos:position pos:line="99" pos:column="27"/></name><operator pos:line="99" pos:column="27">-&gt;<pos:position pos:line="99" pos:column="32"/></operator><name pos:line="99" pos:column="29">data<pos:position pos:line="99" pos:column="33"/></name><operator pos:line="99" pos:column="33">.<pos:position pos:line="99" pos:column="34"/></operator><name pos:line="99" pos:column="34">host<pos:position pos:line="99" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="99" pos:column="40">value_list<pos:position pos:line="99" pos:column="50"/></name><operator pos:line="99" pos:column="50">-&gt;<pos:position pos:line="99" pos:column="55"/></operator><name pos:line="99" pos:column="52">host<pos:position pos:line="99" pos:column="56"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="99" pos:column="58">sizeof<argument_list pos:line="99" pos:column="64">(<argument><expr><name><name pos:line="99" pos:column="65">v<pos:position pos:line="99" pos:column="66"/></name><operator pos:line="99" pos:column="66">-&gt;<pos:position pos:line="99" pos:column="71"/></operator><name pos:line="99" pos:column="68">data<pos:position pos:line="99" pos:column="72"/></name><operator pos:line="99" pos:column="72">.<pos:position pos:line="99" pos:column="73"/></operator><name pos:line="99" pos:column="73">host<pos:position pos:line="99" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="78"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="99" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="80"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="100" pos:column="17">sstrncpy<pos:position pos:line="100" pos:column="25"/></name><argument_list pos:line="100" pos:column="25">(<argument><expr><name><name pos:line="100" pos:column="26">v<pos:position pos:line="100" pos:column="27"/></name><operator pos:line="100" pos:column="27">-&gt;<pos:position pos:line="100" pos:column="32"/></operator><name pos:line="100" pos:column="29">data<pos:position pos:line="100" pos:column="33"/></name><operator pos:line="100" pos:column="33">.<pos:position pos:line="100" pos:column="34"/></operator><name pos:line="100" pos:column="34">type<pos:position pos:line="100" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="100" pos:column="40">value_list<pos:position pos:line="100" pos:column="50"/></name><operator pos:line="100" pos:column="50">-&gt;<pos:position pos:line="100" pos:column="55"/></operator><name pos:line="100" pos:column="52">type<pos:position pos:line="100" pos:column="56"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="100" pos:column="58">sizeof<argument_list pos:line="100" pos:column="64">(<argument><expr><name><name pos:line="100" pos:column="65">v<pos:position pos:line="100" pos:column="66"/></name><operator pos:line="100" pos:column="66">-&gt;<pos:position pos:line="100" pos:column="71"/></operator><name pos:line="100" pos:column="68">data<pos:position pos:line="100" pos:column="72"/></name><operator pos:line="100" pos:column="72">.<pos:position pos:line="100" pos:column="73"/></operator><name pos:line="100" pos:column="73">type<pos:position pos:line="100" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="100" pos:column="78"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="100" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="80"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="101" pos:column="17">sstrncpy<pos:position pos:line="101" pos:column="25"/></name><argument_list pos:line="101" pos:column="25">(<argument><expr><name><name pos:line="101" pos:column="26">v<pos:position pos:line="101" pos:column="27"/></name><operator pos:line="101" pos:column="27">-&gt;<pos:position pos:line="101" pos:column="32"/></operator><name pos:line="101" pos:column="29">data<pos:position pos:line="101" pos:column="33"/></name><operator pos:line="101" pos:column="33">.<pos:position pos:line="101" pos:column="34"/></operator><name pos:line="101" pos:column="34">type_instance<pos:position pos:line="101" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="101" pos:column="49">value_list<pos:position pos:line="101" pos:column="59"/></name><operator pos:line="101" pos:column="59">-&gt;<pos:position pos:line="101" pos:column="64"/></operator><name pos:line="101" pos:column="61">type_instance<pos:position pos:line="101" pos:column="74"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="101" pos:column="76">sizeof<argument_list pos:line="101" pos:column="82">(<argument><expr><name><name pos:line="101" pos:column="83">v<pos:position pos:line="101" pos:column="84"/></name><operator pos:line="101" pos:column="84">-&gt;<pos:position pos:line="101" pos:column="89"/></operator><name pos:line="101" pos:column="86">data<pos:position pos:line="101" pos:column="90"/></name><operator pos:line="101" pos:column="90">.<pos:position pos:line="101" pos:column="91"/></operator><name pos:line="101" pos:column="91">type_instance<pos:position pos:line="101" pos:column="104"/></name></name></expr></argument>)<pos:position pos:line="101" pos:column="105"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="101" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="107"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="102" pos:column="17">sstrncpy<pos:position pos:line="102" pos:column="25"/></name><argument_list pos:line="102" pos:column="25">(<argument><expr><name><name pos:line="102" pos:column="26">v<pos:position pos:line="102" pos:column="27"/></name><operator pos:line="102" pos:column="27">-&gt;<pos:position pos:line="102" pos:column="32"/></operator><name pos:line="102" pos:column="29">data<pos:position pos:line="102" pos:column="33"/></name><operator pos:line="102" pos:column="33">.<pos:position pos:line="102" pos:column="34"/></operator><name pos:line="102" pos:column="34">plugin<pos:position pos:line="102" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="102" pos:column="42">value_list<pos:position pos:line="102" pos:column="52"/></name><operator pos:line="102" pos:column="52">-&gt;<pos:position pos:line="102" pos:column="57"/></operator><name pos:line="102" pos:column="54">plugin<pos:position pos:line="102" pos:column="60"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="102" pos:column="62">sizeof<argument_list pos:line="102" pos:column="68">(<argument><expr><name><name pos:line="102" pos:column="69">v<pos:position pos:line="102" pos:column="70"/></name><operator pos:line="102" pos:column="70">-&gt;<pos:position pos:line="102" pos:column="75"/></operator><name pos:line="102" pos:column="72">data<pos:position pos:line="102" pos:column="76"/></name><operator pos:line="102" pos:column="76">.<pos:position pos:line="102" pos:column="77"/></operator><name pos:line="102" pos:column="77">plugin<pos:position pos:line="102" pos:column="83"/></name></name></expr></argument>)<pos:position pos:line="102" pos:column="84"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="102" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="86"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="103" pos:column="17">sstrncpy<pos:position pos:line="103" pos:column="25"/></name><argument_list pos:line="103" pos:column="25">(<argument><expr><name><name pos:line="103" pos:column="26">v<pos:position pos:line="103" pos:column="27"/></name><operator pos:line="103" pos:column="27">-&gt;<pos:position pos:line="103" pos:column="32"/></operator><name pos:line="103" pos:column="29">data<pos:position pos:line="103" pos:column="33"/></name><operator pos:line="103" pos:column="33">.<pos:position pos:line="103" pos:column="34"/></operator><name pos:line="103" pos:column="34">plugin_instance<pos:position pos:line="103" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="103" pos:column="51">value_list<pos:position pos:line="103" pos:column="61"/></name><operator pos:line="103" pos:column="61">-&gt;<pos:position pos:line="103" pos:column="66"/></operator><name pos:line="103" pos:column="63">plugin_instance<pos:position pos:line="103" pos:column="78"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="103" pos:column="80">sizeof<argument_list pos:line="103" pos:column="86">(<argument><expr><name><name pos:line="103" pos:column="87">v<pos:position pos:line="103" pos:column="88"/></name><operator pos:line="103" pos:column="88">-&gt;<pos:position pos:line="103" pos:column="93"/></operator><name pos:line="103" pos:column="90">data<pos:position pos:line="103" pos:column="94"/></name><operator pos:line="103" pos:column="94">.<pos:position pos:line="103" pos:column="95"/></operator><name pos:line="103" pos:column="95">plugin_instance<pos:position pos:line="103" pos:column="110"/></name></name></expr></argument>)<pos:position pos:line="103" pos:column="111"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="103" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="113"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="104" pos:column="17">v<pos:position pos:line="104" pos:column="18"/></name><operator pos:line="104" pos:column="18">-&gt;<pos:position pos:line="104" pos:column="23"/></operator><name pos:line="104" pos:column="20">data<pos:position pos:line="104" pos:column="24"/></name><operator pos:line="104" pos:column="24">.<pos:position pos:line="104" pos:column="25"/></operator><name pos:line="104" pos:column="25">time<pos:position pos:line="104" pos:column="29"/></name></name> <operator pos:line="104" pos:column="30">=<pos:position pos:line="104" pos:column="31"/></operator> <name><name pos:line="104" pos:column="32">value_list<pos:position pos:line="104" pos:column="42"/></name><operator pos:line="104" pos:column="42">-&gt;<pos:position pos:line="104" pos:column="47"/></operator><name pos:line="104" pos:column="44">time<pos:position pos:line="104" pos:column="48"/></name></name></expr>;<pos:position pos:line="104" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="105" pos:column="17">v<pos:position pos:line="105" pos:column="18"/></name><operator pos:line="105" pos:column="18">-&gt;<pos:position pos:line="105" pos:column="23"/></operator><name pos:line="105" pos:column="20">interval<pos:position pos:line="105" pos:column="28"/></name></name> <operator pos:line="105" pos:column="29">=<pos:position pos:line="105" pos:column="30"/></operator> <name><name pos:line="105" pos:column="31">value_list<pos:position pos:line="105" pos:column="41"/></name><operator pos:line="105" pos:column="41">-&gt;<pos:position pos:line="105" pos:column="46"/></operator><name pos:line="105" pos:column="43">interval<pos:position pos:line="105" pos:column="51"/></name></name></expr>;<pos:position pos:line="105" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="106" pos:column="17">Py_CLEAR<pos:position pos:line="106" pos:column="25"/></name><argument_list pos:line="106" pos:column="25">(<argument><expr><name><name pos:line="106" pos:column="26">v<pos:position pos:line="106" pos:column="27"/></name><operator pos:line="106" pos:column="27">-&gt;<pos:position pos:line="106" pos:column="32"/></operator><name pos:line="106" pos:column="29">values<pos:position pos:line="106" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="106" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="107" pos:column="17">v<pos:position pos:line="107" pos:column="18"/></name><operator pos:line="107" pos:column="18">-&gt;<pos:position pos:line="107" pos:column="23"/></operator><name pos:line="107" pos:column="20">values<pos:position pos:line="107" pos:column="26"/></name></name> <operator pos:line="107" pos:column="27">=<pos:position pos:line="107" pos:column="28"/></operator> <name pos:line="107" pos:column="29">list<pos:position pos:line="107" pos:column="33"/></name></expr>;<pos:position pos:line="107" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="108" pos:column="17">Py_CLEAR<pos:position pos:line="108" pos:column="25"/></name><argument_list pos:line="108" pos:column="25">(<argument><expr><name><name pos:line="108" pos:column="26">v<pos:position pos:line="108" pos:column="27"/></name><operator pos:line="108" pos:column="27">-&gt;<pos:position pos:line="108" pos:column="32"/></operator><name pos:line="108" pos:column="29">meta<pos:position pos:line="108" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="108" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="109" pos:column="17">v<pos:position pos:line="109" pos:column="18"/></name><operator pos:line="109" pos:column="18">-&gt;<pos:position pos:line="109" pos:column="23"/></operator><name pos:line="109" pos:column="20">meta<pos:position pos:line="109" pos:column="24"/></name></name> <operator pos:line="109" pos:column="25">=<pos:position pos:line="109" pos:column="26"/></operator> <name pos:line="109" pos:column="27">dict<pos:position pos:line="109" pos:column="31"/></name></expr>;<pos:position pos:line="109" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name pos:line="110" pos:column="17">ret<pos:position pos:line="110" pos:column="20"/></name> <operator pos:line="110" pos:column="21">=<pos:position pos:line="110" pos:column="22"/></operator> <call><name pos:line="110" pos:column="23">PyObject_CallFunctionObjArgs<pos:position pos:line="110" pos:column="51"/></name><argument_list pos:line="110" pos:column="51">(<argument><expr><name><name pos:line="110" pos:column="52">c<pos:position pos:line="110" pos:column="53"/></name><operator pos:line="110" pos:column="53">-&gt;<pos:position pos:line="110" pos:column="58"/></operator><name pos:line="110" pos:column="55">callback<pos:position pos:line="110" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="65">v<pos:position pos:line="110" pos:column="66"/></name></expr></argument>, <argument><expr><name><name pos:line="110" pos:column="68">c<pos:position pos:line="110" pos:column="69"/></name><operator pos:line="110" pos:column="69">-&gt;<pos:position pos:line="110" pos:column="74"/></operator><name pos:line="110" pos:column="71">data<pos:position pos:line="110" pos:column="75"/></name></name></expr></argument>, <argument><expr><operator pos:line="110" pos:column="77">(<pos:position pos:line="110" pos:column="78"/></operator><name pos:line="110" pos:column="78">void<pos:position pos:line="110" pos:column="82"/></name> <operator pos:line="110" pos:column="83">*<pos:position pos:line="110" pos:column="84"/></operator><operator pos:line="110" pos:column="84">)<pos:position pos:line="110" pos:column="85"/></operator> <literal type="number" pos:line="110" pos:column="86">0<pos:position pos:line="110" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="110" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="89"/></expr_stmt> <comment type="block" pos:line="110" pos:column="90">/* New reference. */</comment>
		<expr_stmt><expr><call><name pos:line="111" pos:column="17">Py_XDECREF<pos:position pos:line="111" pos:column="27"/></name><argument_list pos:line="111" pos:column="27">(<argument><expr><name pos:line="111" pos:column="28">val<pos:position pos:line="111" pos:column="31"/></name></expr></argument>)<pos:position pos:line="111" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="33"/></expr_stmt>
		<if pos:line="112" pos:column="17">if <condition pos:line="112" pos:column="20">(<expr><name pos:line="112" pos:column="21">ret<pos:position pos:line="112" pos:column="24"/></name> <operator pos:line="112" pos:column="25">==<pos:position pos:line="112" pos:column="27"/></operator> <name pos:line="112" pos:column="28">NULL<pos:position pos:line="112" pos:column="32"/></name></expr>)<pos:position pos:line="112" pos:column="33"/></condition><then pos:line="112" pos:column="33"> <block pos:line="112" pos:column="34">{
			<expr_stmt><expr><call><name pos:line="113" pos:column="25">cpy_log_exception<pos:position pos:line="113" pos:column="42"/></name><argument_list pos:line="113" pos:column="42">(<argument><expr><literal type="string" pos:line="113" pos:column="43">"write callback"<pos:position pos:line="113" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="113" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="61"/></expr_stmt>
		}<pos:position pos:line="114" pos:column="18"/></block></then> <else pos:line="114" pos:column="19">else <block pos:line="114" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="115" pos:column="25">Py_DECREF<pos:position pos:line="115" pos:column="34"/></name><argument_list pos:line="115" pos:column="34">(<argument><expr><name pos:line="115" pos:column="35">ret<pos:position pos:line="115" pos:column="38"/></name></expr></argument>)<pos:position pos:line="115" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="40"/></expr_stmt>
		}<pos:position pos:line="116" pos:column="18"/></block></else></if>
	<macro><name pos:line="117" pos:column="9">CPY_RELEASE_THREADS<pos:position pos:line="117" pos:column="28"/></name></macro>
	<return pos:line="118" pos:column="9">return <expr><literal type="number" pos:line="118" pos:column="16">0<pos:position pos:line="118" pos:column="17"/></literal></expr>;<pos:position pos:line="118" pos:column="18"/></return>
}<pos:position pos:line="119" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2572_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">rebalance<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">c_avl_tree_t<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">t<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">c_avl_node_t<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">n<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list> <block pos:line="1" pos:column="57">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">b_top<pos:position pos:line="2" pos:column="12"/></name></decl>;<pos:position pos:line="2" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">b_bottom<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>

  <while pos:line="5" pos:column="3">while <condition pos:line="5" pos:column="9">(<expr><name pos:line="5" pos:column="10">n<pos:position pos:line="5" pos:column="11"/></name> <operator pos:line="5" pos:column="12">!=<pos:position pos:line="5" pos:column="14"/></operator> <name pos:line="5" pos:column="15">NULL<pos:position pos:line="5" pos:column="19"/></name></expr>)<pos:position pos:line="5" pos:column="20"/></condition> <block pos:line="5" pos:column="21">{
    <expr_stmt><expr><name pos:line="6" pos:column="5">b_top<pos:position pos:line="6" pos:column="10"/></name> <operator pos:line="6" pos:column="11">=<pos:position pos:line="6" pos:column="12"/></operator> <call><name pos:line="6" pos:column="13">BALANCE<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><name pos:line="6" pos:column="21">n<pos:position pos:line="6" pos:column="22"/></name></expr></argument>)<pos:position pos:line="6" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">assert<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><operator pos:line="7" pos:column="12">(<pos:position pos:line="7" pos:column="13"/></operator><name pos:line="7" pos:column="13">b_top<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">&gt;=<pos:position pos:line="7" pos:column="24"/></operator> <operator pos:line="7" pos:column="22">-<pos:position pos:line="7" pos:column="23"/></operator><literal type="number" pos:line="7" pos:column="23">2<pos:position pos:line="7" pos:column="24"/></literal><operator pos:line="7" pos:column="24">)<pos:position pos:line="7" pos:column="25"/></operator> <operator pos:line="7" pos:column="26">&amp;&amp;<pos:position pos:line="7" pos:column="36"/></operator> <operator pos:line="7" pos:column="29">(<pos:position pos:line="7" pos:column="30"/></operator><name pos:line="7" pos:column="30">b_top<pos:position pos:line="7" pos:column="35"/></name> <operator pos:line="7" pos:column="36">&lt;=<pos:position pos:line="7" pos:column="41"/></operator> <literal type="number" pos:line="7" pos:column="39">2<pos:position pos:line="7" pos:column="40"/></literal><operator pos:line="7" pos:column="40">)<pos:position pos:line="7" pos:column="41"/></operator></expr></argument>)<pos:position pos:line="7" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="43"/></expr_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">b_top<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">==<pos:position pos:line="9" pos:column="17"/></operator> <operator pos:line="9" pos:column="18">-<pos:position pos:line="9" pos:column="19"/></operator><literal type="number" pos:line="9" pos:column="19">2<pos:position pos:line="9" pos:column="20"/></literal></expr>)<pos:position pos:line="9" pos:column="21"/></condition><then pos:line="9" pos:column="21"> <block pos:line="9" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="10" pos:column="7">assert<pos:position pos:line="10" pos:column="13"/></name><argument_list pos:line="10" pos:column="13">(<argument><expr><name><name pos:line="10" pos:column="14">n<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">-&gt;<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="17">right<pos:position pos:line="10" pos:column="22"/></name></name> <operator pos:line="10" pos:column="23">!=<pos:position pos:line="10" pos:column="25"/></operator> <name pos:line="10" pos:column="26">NULL<pos:position pos:line="10" pos:column="30"/></name></expr></argument>)<pos:position pos:line="10" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><name pos:line="11" pos:column="7">b_bottom<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <call><name pos:line="11" pos:column="18">BALANCE<pos:position pos:line="11" pos:column="25"/></name><argument_list pos:line="11" pos:column="25">(<argument><expr><name><name pos:line="11" pos:column="26">n<pos:position pos:line="11" pos:column="27"/></name><operator pos:line="11" pos:column="27">-&gt;<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="29">right<pos:position pos:line="11" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="12" pos:column="7">assert<pos:position pos:line="12" pos:column="13"/></name><argument_list pos:line="12" pos:column="13">(<argument><expr><operator pos:line="12" pos:column="14">(<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="15">b_bottom<pos:position pos:line="12" pos:column="23"/></name> <operator pos:line="12" pos:column="24">&gt;=<pos:position pos:line="12" pos:column="29"/></operator> <operator pos:line="12" pos:column="27">-<pos:position pos:line="12" pos:column="28"/></operator><literal type="number" pos:line="12" pos:column="28">1<pos:position pos:line="12" pos:column="29"/></literal><operator pos:line="12" pos:column="29">)<pos:position pos:line="12" pos:column="30"/></operator> <operator pos:line="12" pos:column="31">&amp;&amp;<pos:position pos:line="12" pos:column="41"/></operator> <operator pos:line="12" pos:column="34">(<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="35">b_bottom<pos:position pos:line="12" pos:column="43"/></name> <operator pos:line="12" pos:column="44">&lt;=<pos:position pos:line="12" pos:column="49"/></operator> <literal type="number" pos:line="12" pos:column="47">1<pos:position pos:line="12" pos:column="48"/></literal><operator pos:line="12" pos:column="48">)<pos:position pos:line="12" pos:column="49"/></operator></expr></argument>)<pos:position pos:line="12" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="51"/></expr_stmt>
      <if pos:line="13" pos:column="7">if <condition pos:line="13" pos:column="10">(<expr><name pos:line="13" pos:column="11">b_bottom<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">==<pos:position pos:line="13" pos:column="22"/></operator> <literal type="number" pos:line="13" pos:column="23">1<pos:position pos:line="13" pos:column="24"/></literal></expr>)<pos:position pos:line="13" pos:column="25"/></condition><then pos:line="13" pos:column="25">
        <block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="9">n<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <call><name pos:line="14" pos:column="13">rotate_right_left<pos:position pos:line="14" pos:column="30"/></name><argument_list pos:line="14" pos:column="30">(<argument><expr><name pos:line="14" pos:column="31">t<pos:position pos:line="14" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="34">n<pos:position pos:line="14" pos:column="35"/></name></expr></argument>)<pos:position pos:line="14" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="37"/></expr_stmt></block></then>
      <else pos:line="15" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="9">n<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <call><name pos:line="16" pos:column="13">rotate_left<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><name pos:line="16" pos:column="25">t<pos:position pos:line="16" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="28">n<pos:position pos:line="16" pos:column="29"/></name></expr></argument>)<pos:position pos:line="16" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="31"/></expr_stmt></block></else></if>
    }<pos:position pos:line="17" pos:column="6"/></block></then> <elseif pos:line="17" pos:column="7">else <if pos:line="17" pos:column="12">if <condition pos:line="17" pos:column="15">(<expr><name pos:line="17" pos:column="16">b_top<pos:position pos:line="17" pos:column="21"/></name> <operator pos:line="17" pos:column="22">==<pos:position pos:line="17" pos:column="24"/></operator> <literal type="number" pos:line="17" pos:column="25">2<pos:position pos:line="17" pos:column="26"/></literal></expr>)<pos:position pos:line="17" pos:column="27"/></condition><then pos:line="17" pos:column="27"> <block pos:line="17" pos:column="28">{
      <expr_stmt><expr><call><name pos:line="18" pos:column="7">assert<pos:position pos:line="18" pos:column="13"/></name><argument_list pos:line="18" pos:column="13">(<argument><expr><name><name pos:line="18" pos:column="14">n<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">-&gt;<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="17">left<pos:position pos:line="18" pos:column="21"/></name></name> <operator pos:line="18" pos:column="22">!=<pos:position pos:line="18" pos:column="24"/></operator> <name pos:line="18" pos:column="25">NULL<pos:position pos:line="18" pos:column="29"/></name></expr></argument>)<pos:position pos:line="18" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><name pos:line="19" pos:column="7">b_bottom<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <call><name pos:line="19" pos:column="18">BALANCE<pos:position pos:line="19" pos:column="25"/></name><argument_list pos:line="19" pos:column="25">(<argument><expr><name><name pos:line="19" pos:column="26">n<pos:position pos:line="19" pos:column="27"/></name><operator pos:line="19" pos:column="27">-&gt;<pos:position pos:line="19" pos:column="32"/></operator><name pos:line="19" pos:column="29">left<pos:position pos:line="19" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="20" pos:column="7">assert<pos:position pos:line="20" pos:column="13"/></name><argument_list pos:line="20" pos:column="13">(<argument><expr><operator pos:line="20" pos:column="14">(<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="15">b_bottom<pos:position pos:line="20" pos:column="23"/></name> <operator pos:line="20" pos:column="24">&gt;=<pos:position pos:line="20" pos:column="29"/></operator> <operator pos:line="20" pos:column="27">-<pos:position pos:line="20" pos:column="28"/></operator><literal type="number" pos:line="20" pos:column="28">1<pos:position pos:line="20" pos:column="29"/></literal><operator pos:line="20" pos:column="29">)<pos:position pos:line="20" pos:column="30"/></operator> <operator pos:line="20" pos:column="31">&amp;&amp;<pos:position pos:line="20" pos:column="41"/></operator> <operator pos:line="20" pos:column="34">(<pos:position pos:line="20" pos:column="35"/></operator><name pos:line="20" pos:column="35">b_bottom<pos:position pos:line="20" pos:column="43"/></name> <operator pos:line="20" pos:column="44">&lt;=<pos:position pos:line="20" pos:column="49"/></operator> <literal type="number" pos:line="20" pos:column="47">1<pos:position pos:line="20" pos:column="48"/></literal><operator pos:line="20" pos:column="48">)<pos:position pos:line="20" pos:column="49"/></operator></expr></argument>)<pos:position pos:line="20" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="51"/></expr_stmt>
      <if pos:line="21" pos:column="7">if <condition pos:line="21" pos:column="10">(<expr><name pos:line="21" pos:column="11">b_bottom<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">==<pos:position pos:line="21" pos:column="22"/></operator> <operator pos:line="21" pos:column="23">-<pos:position pos:line="21" pos:column="24"/></operator><literal type="number" pos:line="21" pos:column="24">1<pos:position pos:line="21" pos:column="25"/></literal></expr>)<pos:position pos:line="21" pos:column="26"/></condition><then pos:line="21" pos:column="26">
        <block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="9">n<pos:position pos:line="22" pos:column="10"/></name> <operator pos:line="22" pos:column="11">=<pos:position pos:line="22" pos:column="12"/></operator> <call><name pos:line="22" pos:column="13">rotate_left_right<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><name pos:line="22" pos:column="31">t<pos:position pos:line="22" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="34">n<pos:position pos:line="22" pos:column="35"/></name></expr></argument>)<pos:position pos:line="22" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="37"/></expr_stmt></block></then>
      <else pos:line="23" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="9">n<pos:position pos:line="24" pos:column="10"/></name> <operator pos:line="24" pos:column="11">=<pos:position pos:line="24" pos:column="12"/></operator> <call><name pos:line="24" pos:column="13">rotate_right<pos:position pos:line="24" pos:column="25"/></name><argument_list pos:line="24" pos:column="25">(<argument><expr><name pos:line="24" pos:column="26">t<pos:position pos:line="24" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="29">n<pos:position pos:line="24" pos:column="30"/></name></expr></argument>)<pos:position pos:line="24" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="32"/></expr_stmt></block></else></if>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if></elseif> <else pos:line="25" pos:column="7">else <block pos:line="25" pos:column="12">{
      <decl_stmt><decl><type><name pos:line="26" pos:column="7">int<pos:position pos:line="26" pos:column="10"/></name></type> <name pos:line="26" pos:column="11">height<pos:position pos:line="26" pos:column="17"/></name> <init pos:line="26" pos:column="18">= <expr><call><name pos:line="26" pos:column="20">calc_height<pos:position pos:line="26" pos:column="31"/></name><argument_list pos:line="26" pos:column="31">(<argument><expr><name pos:line="26" pos:column="32">n<pos:position pos:line="26" pos:column="33"/></name></expr></argument>)<pos:position pos:line="26" pos:column="34"/></argument_list></call></expr></init></decl>;<pos:position pos:line="26" pos:column="35"/></decl_stmt>
      <if pos:line="27" pos:column="7">if <condition pos:line="27" pos:column="10">(<expr><name pos:line="27" pos:column="11">height<pos:position pos:line="27" pos:column="17"/></name> <operator pos:line="27" pos:column="18">==<pos:position pos:line="27" pos:column="20"/></operator> <name><name pos:line="27" pos:column="21">n<pos:position pos:line="27" pos:column="22"/></name><operator pos:line="27" pos:column="22">-&gt;<pos:position pos:line="27" pos:column="27"/></operator><name pos:line="27" pos:column="24">height<pos:position pos:line="27" pos:column="30"/></name></name></expr>)<pos:position pos:line="27" pos:column="31"/></condition><then pos:line="27" pos:column="31">
        <block type="pseudo"><break pos:line="28" pos:column="9">break;<pos:position pos:line="28" pos:column="15"/></break></block></then></if>
      <expr_stmt><expr><name><name pos:line="29" pos:column="7">n<pos:position pos:line="29" pos:column="8"/></name><operator pos:line="29" pos:column="8">-&gt;<pos:position pos:line="29" pos:column="13"/></operator><name pos:line="29" pos:column="10">height<pos:position pos:line="29" pos:column="16"/></name></name> <operator pos:line="29" pos:column="17">=<pos:position pos:line="29" pos:column="18"/></operator> <name pos:line="29" pos:column="19">height<pos:position pos:line="29" pos:column="25"/></name></expr>;<pos:position pos:line="29" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="32" pos:column="5">assert<pos:position pos:line="32" pos:column="11"/></name><argument_list pos:line="32" pos:column="11">(<argument><expr><name><name pos:line="32" pos:column="12">n<pos:position pos:line="32" pos:column="13"/></name><operator pos:line="32" pos:column="13">-&gt;<pos:position pos:line="32" pos:column="18"/></operator><name pos:line="32" pos:column="15">height<pos:position pos:line="32" pos:column="21"/></name></name> <operator pos:line="32" pos:column="22">==<pos:position pos:line="32" pos:column="24"/></operator> <call><name pos:line="32" pos:column="25">calc_height<pos:position pos:line="32" pos:column="36"/></name><argument_list pos:line="32" pos:column="36">(<argument><expr><name pos:line="32" pos:column="37">n<pos:position pos:line="32" pos:column="38"/></name></expr></argument>)<pos:position pos:line="32" pos:column="39"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="41"/></expr_stmt>

    <expr_stmt><expr><name pos:line="34" pos:column="5">n<pos:position pos:line="34" pos:column="6"/></name> <operator pos:line="34" pos:column="7">=<pos:position pos:line="34" pos:column="8"/></operator> <name><name pos:line="34" pos:column="9">n<pos:position pos:line="34" pos:column="10"/></name><operator pos:line="34" pos:column="10">-&gt;<pos:position pos:line="34" pos:column="15"/></operator><name pos:line="34" pos:column="12">parent<pos:position pos:line="34" pos:column="18"/></name></name></expr>;<pos:position pos:line="34" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="35" pos:column="4"/></block></while> <comment type="block" pos:line="35" pos:column="5">/* while (n != NULL) */</comment>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

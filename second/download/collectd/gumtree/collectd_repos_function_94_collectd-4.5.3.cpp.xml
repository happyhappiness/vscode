<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_94_collectd-4.5.3.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">lt_dlloader_remove<pos:position pos:line="2" pos:column="19"/></name> <argument_list pos:line="2" pos:column="20">(<argument><expr><name pos:line="2" pos:column="21">loader_name<pos:position pos:line="2" pos:column="32"/></name></expr></argument>)<pos:position pos:line="2" pos:column="33"/></argument_list>
     const <name pos:line="3" pos:column="12">char<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier><name pos:line="3" pos:column="18">loader_name<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">lt_dlloader<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">place<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><call><name pos:line="5" pos:column="24">lt_dlloader_find<pos:position pos:line="5" pos:column="40"/></name> <argument_list pos:line="5" pos:column="41">(<argument><expr><name pos:line="5" pos:column="42">loader_name<pos:position pos:line="5" pos:column="53"/></name></expr></argument>)<pos:position pos:line="5" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="55"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">lt_dlhandle<pos:position pos:line="6" pos:column="14"/></name></type> <name pos:line="6" pos:column="15">handle<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">errors<pos:position pos:line="7" pos:column="13"/></name> <init pos:line="7" pos:column="14">= <expr><literal type="number" pos:line="7" pos:column="16">0<pos:position pos:line="7" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">!<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">place<pos:position pos:line="9" pos:column="13"/></name></expr>)<pos:position pos:line="9" pos:column="14"/></condition><then pos:line="9" pos:column="14">
    <block pos:line="10" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="11" pos:column="7">LT_DLMUTEX_SETERROR<pos:position pos:line="11" pos:column="26"/></name> <argument_list pos:line="11" pos:column="27">(<argument><expr><call><name pos:line="11" pos:column="28">LT_DLSTRERROR<pos:position pos:line="11" pos:column="41"/></name> <argument_list pos:line="11" pos:column="42">(<argument><expr><name pos:line="11" pos:column="43">INVALID_LOADER<pos:position pos:line="11" pos:column="57"/></name></expr></argument>)<pos:position pos:line="11" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="60"/></expr_stmt>
      <return pos:line="12" pos:column="7">return <expr><literal type="number" pos:line="12" pos:column="14">1<pos:position pos:line="12" pos:column="15"/></literal></expr>;<pos:position pos:line="12" pos:column="16"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">LT_DLMUTEX_LOCK<pos:position pos:line="15" pos:column="18"/></name> <argument_list pos:line="15" pos:column="19">()<pos:position pos:line="15" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="22"/></expr_stmt>

  <comment type="block" pos:line="17" pos:column="3">/* Fail if there are any open modules which use this loader. */</comment>
  <for pos:line="18" pos:column="3">for  <control pos:line="18" pos:column="8">(<init><expr><name pos:line="18" pos:column="9">handle<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <name pos:line="18" pos:column="18">handles<pos:position pos:line="18" pos:column="25"/></name></expr>;<pos:position pos:line="18" pos:column="26"/></init> <condition><expr><name pos:line="18" pos:column="27">handle<pos:position pos:line="18" pos:column="33"/></name></expr>;<pos:position pos:line="18" pos:column="34"/></condition> <incr><expr><name pos:line="18" pos:column="35">handle<pos:position pos:line="18" pos:column="41"/></name> <operator pos:line="18" pos:column="42">=<pos:position pos:line="18" pos:column="43"/></operator> <name><name pos:line="18" pos:column="44">handle<pos:position pos:line="18" pos:column="50"/></name><operator pos:line="18" pos:column="50">-&gt;<pos:position pos:line="18" pos:column="55"/></operator><name pos:line="18" pos:column="52">next<pos:position pos:line="18" pos:column="56"/></name></name></expr></incr>)<pos:position pos:line="18" pos:column="57"/></control>
    <block pos:line="19" pos:column="5">{
      <if pos:line="20" pos:column="7">if <condition pos:line="20" pos:column="10">(<expr><name><name pos:line="20" pos:column="11">handle<pos:position pos:line="20" pos:column="17"/></name><operator pos:line="20" pos:column="17">-&gt;<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="19">loader<pos:position pos:line="20" pos:column="25"/></name></name> <operator pos:line="20" pos:column="26">==<pos:position pos:line="20" pos:column="28"/></operator> <name pos:line="20" pos:column="29">place<pos:position pos:line="20" pos:column="34"/></name></expr>)<pos:position pos:line="20" pos:column="35"/></condition><then pos:line="20" pos:column="35">
	<block pos:line="21" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="22" pos:column="11">LT_DLMUTEX_SETERROR<pos:position pos:line="22" pos:column="30"/></name> <argument_list pos:line="22" pos:column="31">(<argument><expr><call><name pos:line="22" pos:column="32">LT_DLSTRERROR<pos:position pos:line="22" pos:column="45"/></name> <argument_list pos:line="22" pos:column="46">(<argument><expr><name pos:line="22" pos:column="47">REMOVE_LOADER<pos:position pos:line="22" pos:column="60"/></name></expr></argument>)<pos:position pos:line="22" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="63"/></expr_stmt>
	  <expr_stmt><expr><operator pos:line="23" pos:column="11">++<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="13">errors<pos:position pos:line="23" pos:column="19"/></name></expr>;<pos:position pos:line="23" pos:column="20"/></expr_stmt>
	  <goto pos:line="24" pos:column="11">goto <name pos:line="24" pos:column="16">done<pos:position pos:line="24" pos:column="20"/></name>;<pos:position pos:line="24" pos:column="21"/></goto>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if>
    }<pos:position pos:line="26" pos:column="6"/></block></for>

  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name pos:line="28" pos:column="7">place<pos:position pos:line="28" pos:column="12"/></name> <operator pos:line="28" pos:column="13">==<pos:position pos:line="28" pos:column="15"/></operator> <name pos:line="28" pos:column="16">loaders<pos:position pos:line="28" pos:column="23"/></name></expr>)<pos:position pos:line="28" pos:column="24"/></condition><then pos:line="28" pos:column="24">
    <block pos:line="29" pos:column="5">{
      <comment type="block" pos:line="30" pos:column="7">/* PLACE is the first loader in the list. */</comment>
      <expr_stmt><expr><name pos:line="31" pos:column="7">loaders<pos:position pos:line="31" pos:column="14"/></name> <operator pos:line="31" pos:column="15">=<pos:position pos:line="31" pos:column="16"/></operator> <name><name pos:line="31" pos:column="17">loaders<pos:position pos:line="31" pos:column="24"/></name><operator pos:line="31" pos:column="24">-&gt;<pos:position pos:line="31" pos:column="29"/></operator><name pos:line="31" pos:column="26">next<pos:position pos:line="31" pos:column="30"/></name></name></expr>;<pos:position pos:line="31" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></then>
  <else pos:line="33" pos:column="3">else
    <block pos:line="34" pos:column="5">{
      <comment type="block" pos:line="35" pos:column="7">/* Find the loader before the one being removed. */</comment>
      <decl_stmt><decl><type><name pos:line="36" pos:column="7">lt_dlloader<pos:position pos:line="36" pos:column="18"/></name> <modifier pos:line="36" pos:column="19">*<pos:position pos:line="36" pos:column="20"/></modifier></type><name pos:line="36" pos:column="20">prev<pos:position pos:line="36" pos:column="24"/></name></decl>;<pos:position pos:line="36" pos:column="25"/></decl_stmt>
      <for pos:line="37" pos:column="7">for <control pos:line="37" pos:column="11">(<init><expr><name pos:line="37" pos:column="12">prev<pos:position pos:line="37" pos:column="16"/></name> <operator pos:line="37" pos:column="17">=<pos:position pos:line="37" pos:column="18"/></operator> <name pos:line="37" pos:column="19">loaders<pos:position pos:line="37" pos:column="26"/></name></expr>;<pos:position pos:line="37" pos:column="27"/></init> <condition><expr><name><name pos:line="37" pos:column="28">prev<pos:position pos:line="37" pos:column="32"/></name><operator pos:line="37" pos:column="32">-&gt;<pos:position pos:line="37" pos:column="37"/></operator><name pos:line="37" pos:column="34">next<pos:position pos:line="37" pos:column="38"/></name></name></expr>;<pos:position pos:line="37" pos:column="39"/></condition> <incr><expr><name pos:line="37" pos:column="40">prev<pos:position pos:line="37" pos:column="44"/></name> <operator pos:line="37" pos:column="45">=<pos:position pos:line="37" pos:column="46"/></operator> <name><name pos:line="37" pos:column="47">prev<pos:position pos:line="37" pos:column="51"/></name><operator pos:line="37" pos:column="51">-&gt;<pos:position pos:line="37" pos:column="56"/></operator><name pos:line="37" pos:column="53">next<pos:position pos:line="37" pos:column="57"/></name></name></expr></incr>)<pos:position pos:line="37" pos:column="58"/></control>
	<block pos:line="38" pos:column="9">{
	  <if pos:line="39" pos:column="11">if <condition pos:line="39" pos:column="14">(<expr><operator pos:line="39" pos:column="15">!<pos:position pos:line="39" pos:column="16"/></operator><call><name pos:line="39" pos:column="16">strcmp<pos:position pos:line="39" pos:column="22"/></name> <argument_list pos:line="39" pos:column="23">(<argument><expr><name><name pos:line="39" pos:column="24">prev<pos:position pos:line="39" pos:column="28"/></name><operator pos:line="39" pos:column="28">-&gt;<pos:position pos:line="39" pos:column="33"/></operator><name pos:line="39" pos:column="30">next<pos:position pos:line="39" pos:column="34"/></name><operator pos:line="39" pos:column="34">-&gt;<pos:position pos:line="39" pos:column="39"/></operator><name pos:line="39" pos:column="36">loader_name<pos:position pos:line="39" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="49">loader_name<pos:position pos:line="39" pos:column="60"/></name></expr></argument>)<pos:position pos:line="39" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="62"/></condition><then pos:line="39" pos:column="62">
	    <block pos:line="40" pos:column="13">{
	      <break pos:line="41" pos:column="15">break;<pos:position pos:line="41" pos:column="21"/></break>
	    }<pos:position pos:line="42" pos:column="14"/></block></then></if>
	}<pos:position pos:line="43" pos:column="10"/></block></for>

      <expr_stmt><expr><name pos:line="45" pos:column="7">place<pos:position pos:line="45" pos:column="12"/></name> <operator pos:line="45" pos:column="13">=<pos:position pos:line="45" pos:column="14"/></operator> <name><name pos:line="45" pos:column="15">prev<pos:position pos:line="45" pos:column="19"/></name><operator pos:line="45" pos:column="19">-&gt;<pos:position pos:line="45" pos:column="24"/></operator><name pos:line="45" pos:column="21">next<pos:position pos:line="45" pos:column="25"/></name></name></expr>;<pos:position pos:line="45" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="46" pos:column="7">prev<pos:position pos:line="46" pos:column="11"/></name><operator pos:line="46" pos:column="11">-&gt;<pos:position pos:line="46" pos:column="16"/></operator><name pos:line="46" pos:column="13">next<pos:position pos:line="46" pos:column="17"/></name></name> <operator pos:line="46" pos:column="18">=<pos:position pos:line="46" pos:column="19"/></operator> <name><name pos:line="46" pos:column="20">prev<pos:position pos:line="46" pos:column="24"/></name><operator pos:line="46" pos:column="24">-&gt;<pos:position pos:line="46" pos:column="29"/></operator><name pos:line="46" pos:column="26">next<pos:position pos:line="46" pos:column="30"/></name><operator pos:line="46" pos:column="30">-&gt;<pos:position pos:line="46" pos:column="35"/></operator><name pos:line="46" pos:column="32">next<pos:position pos:line="46" pos:column="36"/></name></name></expr>;<pos:position pos:line="46" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="47" pos:column="6"/></block></else></if>

  <if pos:line="49" pos:column="3">if <condition pos:line="49" pos:column="6">(<expr><name><name pos:line="49" pos:column="7">place<pos:position pos:line="49" pos:column="12"/></name><operator pos:line="49" pos:column="12">-&gt;<pos:position pos:line="49" pos:column="17"/></operator><name pos:line="49" pos:column="14">dlloader_exit<pos:position pos:line="49" pos:column="27"/></name></name></expr>)<pos:position pos:line="49" pos:column="28"/></condition><then pos:line="49" pos:column="28">
    <block pos:line="50" pos:column="5">{
      <expr_stmt><expr><name pos:line="51" pos:column="7">errors<pos:position pos:line="51" pos:column="13"/></name> <operator pos:line="51" pos:column="14">=<pos:position pos:line="51" pos:column="15"/></operator> <call><name><name pos:line="51" pos:column="16">place<pos:position pos:line="51" pos:column="21"/></name><operator pos:line="51" pos:column="21">-&gt;<pos:position pos:line="51" pos:column="26"/></operator><name pos:line="51" pos:column="23">dlloader_exit<pos:position pos:line="51" pos:column="36"/></name></name> <argument_list pos:line="51" pos:column="37">(<argument><expr><name><name pos:line="51" pos:column="38">place<pos:position pos:line="51" pos:column="43"/></name><operator pos:line="51" pos:column="43">-&gt;<pos:position pos:line="51" pos:column="48"/></operator><name pos:line="51" pos:column="45">dlloader_data<pos:position pos:line="51" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="54" pos:column="3">LT_DLFREE<pos:position pos:line="54" pos:column="12"/></name> <argument_list pos:line="54" pos:column="13">(<argument><expr><name pos:line="54" pos:column="14">place<pos:position pos:line="54" pos:column="19"/></name></expr></argument>)<pos:position pos:line="54" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="21"/></expr_stmt>

 <label><name pos:line="56" pos:column="2">done<pos:position pos:line="56" pos:column="6"/></name>:<pos:position pos:line="56" pos:column="7"/></label>
  <expr_stmt><expr><call><name pos:line="57" pos:column="3">LT_DLMUTEX_UNLOCK<pos:position pos:line="57" pos:column="20"/></name> <argument_list pos:line="57" pos:column="21">()<pos:position pos:line="57" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="24"/></expr_stmt>

  <return pos:line="59" pos:column="3">return <expr><name pos:line="59" pos:column="10">errors<pos:position pos:line="59" pos:column="16"/></name></expr>;<pos:position pos:line="59" pos:column="17"/></return>
}<pos:position pos:line="60" pos:column="2"/></block></unit>

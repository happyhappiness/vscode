<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_203_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">gr_format_name<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">ret<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">int<pos:position pos:line="1" pos:column="42"/></name></type> <name pos:line="1" pos:column="43">ret_len<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>,
        <parameter><decl><type><name pos:line="2" pos:column="9">value_list_t<pos:position pos:line="2" pos:column="21"/></name> <specifier pos:line="2" pos:column="22">const<pos:position pos:line="2" pos:column="27"/></specifier> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">vl<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>,
        <parameter><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <specifier pos:line="3" pos:column="14">const<pos:position pos:line="3" pos:column="19"/></specifier> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">ds_name<pos:position pos:line="3" pos:column="28"/></name></decl></parameter>,
        <parameter><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <specifier pos:line="4" pos:column="14">const<pos:position pos:line="4" pos:column="19"/></specifier> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">prefix<pos:position pos:line="4" pos:column="27"/></name></decl></parameter>,
        <parameter><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <specifier pos:line="5" pos:column="14">const<pos:position pos:line="5" pos:column="19"/></specifier> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">postfix<pos:position pos:line="5" pos:column="28"/></name></decl></parameter>,
        <parameter><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <specifier pos:line="6" pos:column="14">const<pos:position pos:line="6" pos:column="19"/></specifier></type> <name pos:line="6" pos:column="20">escape_char<pos:position pos:line="6" pos:column="31"/></name></decl></parameter>,
        <parameter><decl><type><name pos:line="7" pos:column="9">unsigned<pos:position pos:line="7" pos:column="17"/></name> <name pos:line="7" pos:column="18">int<pos:position pos:line="7" pos:column="21"/></name></type> <name pos:line="7" pos:column="22">flags<pos:position pos:line="7" pos:column="27"/></name></decl></parameter>)<pos:position pos:line="7" pos:column="28"/></parameter_list>
<block pos:line="8" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name></type> <name><name pos:line="9" pos:column="10">n_host<pos:position pos:line="9" pos:column="16"/></name><index pos:line="9" pos:column="16">[<expr><name pos:line="9" pos:column="17">DATA_MAX_NAME_LEN<pos:position pos:line="9" pos:column="34"/></name></expr>]<pos:position pos:line="9" pos:column="35"/></index></name></decl>;<pos:position pos:line="9" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name></type> <name><name pos:line="10" pos:column="10">n_plugin<pos:position pos:line="10" pos:column="18"/></name><index pos:line="10" pos:column="18">[<expr><name pos:line="10" pos:column="19">DATA_MAX_NAME_LEN<pos:position pos:line="10" pos:column="36"/></name></expr>]<pos:position pos:line="10" pos:column="37"/></index></name></decl>;<pos:position pos:line="10" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name></type> <name><name pos:line="11" pos:column="10">n_plugin_instance<pos:position pos:line="11" pos:column="27"/></name><index pos:line="11" pos:column="27">[<expr><name pos:line="11" pos:column="28">DATA_MAX_NAME_LEN<pos:position pos:line="11" pos:column="45"/></name></expr>]<pos:position pos:line="11" pos:column="46"/></index></name></decl>;<pos:position pos:line="11" pos:column="47"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">char<pos:position pos:line="12" pos:column="9"/></name></type> <name><name pos:line="12" pos:column="10">n_type<pos:position pos:line="12" pos:column="16"/></name><index pos:line="12" pos:column="16">[<expr><name pos:line="12" pos:column="17">DATA_MAX_NAME_LEN<pos:position pos:line="12" pos:column="34"/></name></expr>]<pos:position pos:line="12" pos:column="35"/></index></name></decl>;<pos:position pos:line="12" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">char<pos:position pos:line="13" pos:column="9"/></name></type> <name><name pos:line="13" pos:column="10">n_type_instance<pos:position pos:line="13" pos:column="25"/></name><index pos:line="13" pos:column="25">[<expr><name pos:line="13" pos:column="26">DATA_MAX_NAME_LEN<pos:position pos:line="13" pos:column="43"/></name></expr>]<pos:position pos:line="13" pos:column="44"/></index></name></decl>;<pos:position pos:line="13" pos:column="45"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="15" pos:column="5">char<pos:position pos:line="15" pos:column="9"/></name></type> <name><name pos:line="15" pos:column="10">tmp_plugin<pos:position pos:line="15" pos:column="20"/></name><index pos:line="15" pos:column="20">[<expr><literal type="number" pos:line="15" pos:column="21">2<pos:position pos:line="15" pos:column="22"/></literal> <operator pos:line="15" pos:column="23">*<pos:position pos:line="15" pos:column="24"/></operator> <name pos:line="15" pos:column="25">DATA_MAX_NAME_LEN<pos:position pos:line="15" pos:column="42"/></name> <operator pos:line="15" pos:column="43">+<pos:position pos:line="15" pos:column="44"/></operator> <literal type="number" pos:line="15" pos:column="45">1<pos:position pos:line="15" pos:column="46"/></literal></expr>]<pos:position pos:line="15" pos:column="47"/></index></name></decl>;<pos:position pos:line="15" pos:column="48"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">char<pos:position pos:line="16" pos:column="9"/></name></type> <name><name pos:line="16" pos:column="10">tmp_type<pos:position pos:line="16" pos:column="18"/></name><index pos:line="16" pos:column="18">[<expr><literal type="number" pos:line="16" pos:column="19">2<pos:position pos:line="16" pos:column="20"/></literal> <operator pos:line="16" pos:column="21">*<pos:position pos:line="16" pos:column="22"/></operator> <name pos:line="16" pos:column="23">DATA_MAX_NAME_LEN<pos:position pos:line="16" pos:column="40"/></name> <operator pos:line="16" pos:column="41">+<pos:position pos:line="16" pos:column="42"/></operator> <literal type="number" pos:line="16" pos:column="43">1<pos:position pos:line="16" pos:column="44"/></literal></expr>]<pos:position pos:line="16" pos:column="45"/></index></name></decl>;<pos:position pos:line="16" pos:column="46"/></decl_stmt>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">prefix<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">==<pos:position pos:line="18" pos:column="18"/></operator> <name pos:line="18" pos:column="19">NULL<pos:position pos:line="18" pos:column="23"/></name></expr>)<pos:position pos:line="18" pos:column="24"/></condition><then pos:line="18" pos:column="24">
        <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="9">prefix<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <literal type="string" pos:line="19" pos:column="18">""<pos:position pos:line="19" pos:column="20"/></literal></expr>;<pos:position pos:line="19" pos:column="21"/></expr_stmt></block></then></if>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">postfix<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">==<pos:position pos:line="21" pos:column="19"/></operator> <name pos:line="21" pos:column="20">NULL<pos:position pos:line="21" pos:column="24"/></name></expr>)<pos:position pos:line="21" pos:column="25"/></condition><then pos:line="21" pos:column="25">
        <block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="9">postfix<pos:position pos:line="22" pos:column="16"/></name> <operator pos:line="22" pos:column="17">=<pos:position pos:line="22" pos:column="18"/></operator> <literal type="string" pos:line="22" pos:column="19">""<pos:position pos:line="22" pos:column="21"/></literal></expr>;<pos:position pos:line="22" pos:column="22"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="24" pos:column="5">gr_copy_escape_part<pos:position pos:line="24" pos:column="24"/></name> <argument_list pos:line="24" pos:column="25">(<argument><expr><name pos:line="24" pos:column="26">n_host<pos:position pos:line="24" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="34">vl<pos:position pos:line="24" pos:column="36"/></name><operator pos:line="24" pos:column="36">-&gt;<pos:position pos:line="24" pos:column="41"/></operator><name pos:line="24" pos:column="38">host<pos:position pos:line="24" pos:column="42"/></name></name></expr></argument>,
            <argument><expr><sizeof pos:line="25" pos:column="13">sizeof <argument_list pos:line="25" pos:column="20">(<argument><expr><name pos:line="25" pos:column="21">n_host<pos:position pos:line="25" pos:column="27"/></name></expr></argument>)<pos:position pos:line="25" pos:column="28"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="25" pos:column="30">escape_char<pos:position pos:line="25" pos:column="41"/></name></expr></argument>)<pos:position pos:line="25" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">gr_copy_escape_part<pos:position pos:line="26" pos:column="24"/></name> <argument_list pos:line="26" pos:column="25">(<argument><expr><name pos:line="26" pos:column="26">n_plugin<pos:position pos:line="26" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="36">vl<pos:position pos:line="26" pos:column="38"/></name><operator pos:line="26" pos:column="38">-&gt;<pos:position pos:line="26" pos:column="43"/></operator><name pos:line="26" pos:column="40">plugin<pos:position pos:line="26" pos:column="46"/></name></name></expr></argument>,
            <argument><expr><sizeof pos:line="27" pos:column="13">sizeof <argument_list pos:line="27" pos:column="20">(<argument><expr><name pos:line="27" pos:column="21">n_plugin<pos:position pos:line="27" pos:column="29"/></name></expr></argument>)<pos:position pos:line="27" pos:column="30"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="27" pos:column="32">escape_char<pos:position pos:line="27" pos:column="43"/></name></expr></argument>)<pos:position pos:line="27" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">gr_copy_escape_part<pos:position pos:line="28" pos:column="24"/></name> <argument_list pos:line="28" pos:column="25">(<argument><expr><name pos:line="28" pos:column="26">n_plugin_instance<pos:position pos:line="28" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="45">vl<pos:position pos:line="28" pos:column="47"/></name><operator pos:line="28" pos:column="47">-&gt;<pos:position pos:line="28" pos:column="52"/></operator><name pos:line="28" pos:column="49">plugin_instance<pos:position pos:line="28" pos:column="64"/></name></name></expr></argument>,
            <argument><expr><sizeof pos:line="29" pos:column="13">sizeof <argument_list pos:line="29" pos:column="20">(<argument><expr><name pos:line="29" pos:column="21">n_plugin_instance<pos:position pos:line="29" pos:column="38"/></name></expr></argument>)<pos:position pos:line="29" pos:column="39"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="29" pos:column="41">escape_char<pos:position pos:line="29" pos:column="52"/></name></expr></argument>)<pos:position pos:line="29" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">gr_copy_escape_part<pos:position pos:line="30" pos:column="24"/></name> <argument_list pos:line="30" pos:column="25">(<argument><expr><name pos:line="30" pos:column="26">n_type<pos:position pos:line="30" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="34">vl<pos:position pos:line="30" pos:column="36"/></name><operator pos:line="30" pos:column="36">-&gt;<pos:position pos:line="30" pos:column="41"/></operator><name pos:line="30" pos:column="38">type<pos:position pos:line="30" pos:column="42"/></name></name></expr></argument>,
            <argument><expr><sizeof pos:line="31" pos:column="13">sizeof <argument_list pos:line="31" pos:column="20">(<argument><expr><name pos:line="31" pos:column="21">n_type<pos:position pos:line="31" pos:column="27"/></name></expr></argument>)<pos:position pos:line="31" pos:column="28"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="31" pos:column="30">escape_char<pos:position pos:line="31" pos:column="41"/></name></expr></argument>)<pos:position pos:line="31" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">gr_copy_escape_part<pos:position pos:line="32" pos:column="24"/></name> <argument_list pos:line="32" pos:column="25">(<argument><expr><name pos:line="32" pos:column="26">n_type_instance<pos:position pos:line="32" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="43">vl<pos:position pos:line="32" pos:column="45"/></name><operator pos:line="32" pos:column="45">-&gt;<pos:position pos:line="32" pos:column="50"/></operator><name pos:line="32" pos:column="47">type_instance<pos:position pos:line="32" pos:column="60"/></name></name></expr></argument>,
            <argument><expr><sizeof pos:line="33" pos:column="13">sizeof <argument_list pos:line="33" pos:column="20">(<argument><expr><name pos:line="33" pos:column="21">n_type_instance<pos:position pos:line="33" pos:column="36"/></name></expr></argument>)<pos:position pos:line="33" pos:column="37"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="33" pos:column="39">escape_char<pos:position pos:line="33" pos:column="50"/></name></expr></argument>)<pos:position pos:line="33" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="52"/></expr_stmt>

    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name><name pos:line="35" pos:column="9">n_plugin_instance<pos:position pos:line="35" pos:column="26"/></name><index pos:line="35" pos:column="26">[<expr><literal type="number" pos:line="35" pos:column="27">0<pos:position pos:line="35" pos:column="28"/></literal></expr>]<pos:position pos:line="35" pos:column="29"/></index></name> <operator pos:line="35" pos:column="30">!=<pos:position pos:line="35" pos:column="32"/></operator> <literal type="char" pos:line="35" pos:column="33">'\0'<pos:position pos:line="35" pos:column="37"/></literal></expr>)<pos:position pos:line="35" pos:column="38"/></condition><then pos:line="35" pos:column="38">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="9">ssnprintf<pos:position pos:line="36" pos:column="18"/></name> <argument_list pos:line="36" pos:column="19">(<argument><expr><name pos:line="36" pos:column="20">tmp_plugin<pos:position pos:line="36" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="36" pos:column="32">sizeof <argument_list pos:line="36" pos:column="39">(<argument><expr><name pos:line="36" pos:column="40">tmp_plugin<pos:position pos:line="36" pos:column="50"/></name></expr></argument>)<pos:position pos:line="36" pos:column="51"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="53">"%s%c%s"<pos:position pos:line="36" pos:column="61"/></literal></expr></argument>,
            <argument><expr><name pos:line="37" pos:column="13">n_plugin<pos:position pos:line="37" pos:column="21"/></name></expr></argument>,
            <argument><expr><ternary><condition><expr><operator pos:line="38" pos:column="13">(<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="14">flags<pos:position pos:line="38" pos:column="19"/></name> <operator pos:line="38" pos:column="20">&amp;<pos:position pos:line="38" pos:column="25"/></operator> <name pos:line="38" pos:column="22">GRAPHITE_SEPARATE_INSTANCES<pos:position pos:line="38" pos:column="49"/></name><operator pos:line="38" pos:column="49">)<pos:position pos:line="38" pos:column="50"/></operator></expr> ?<pos:position pos:line="38" pos:column="52"/></condition><then pos:line="38" pos:column="52"> <expr><literal type="char" pos:line="38" pos:column="53">'.'<pos:position pos:line="38" pos:column="56"/></literal></expr> <pos:position pos:line="38" pos:column="57"/></then><else pos:line="38" pos:column="57">: <expr><literal type="char" pos:line="38" pos:column="59">'-'<pos:position pos:line="38" pos:column="62"/></literal></expr></else></ternary></expr></argument>,
            <argument><expr><name pos:line="39" pos:column="13">n_plugin_instance<pos:position pos:line="39" pos:column="30"/></name></expr></argument>)<pos:position pos:line="39" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="32"/></expr_stmt></block></then>
    <else pos:line="40" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="9">sstrncpy<pos:position pos:line="41" pos:column="17"/></name> <argument_list pos:line="41" pos:column="18">(<argument><expr><name pos:line="41" pos:column="19">tmp_plugin<pos:position pos:line="41" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="31">n_plugin<pos:position pos:line="41" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="41" pos:column="41">sizeof <argument_list pos:line="41" pos:column="48">(<argument><expr><name pos:line="41" pos:column="49">tmp_plugin<pos:position pos:line="41" pos:column="59"/></name></expr></argument>)<pos:position pos:line="41" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="41" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="62"/></expr_stmt></block></else></if>

    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name><name pos:line="43" pos:column="9">n_type_instance<pos:position pos:line="43" pos:column="24"/></name><index pos:line="43" pos:column="24">[<expr><literal type="number" pos:line="43" pos:column="25">0<pos:position pos:line="43" pos:column="26"/></literal></expr>]<pos:position pos:line="43" pos:column="27"/></index></name> <operator pos:line="43" pos:column="28">!=<pos:position pos:line="43" pos:column="30"/></operator> <literal type="char" pos:line="43" pos:column="31">'\0'<pos:position pos:line="43" pos:column="35"/></literal></expr>)<pos:position pos:line="43" pos:column="36"/></condition><then pos:line="43" pos:column="36">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="9">ssnprintf<pos:position pos:line="44" pos:column="18"/></name> <argument_list pos:line="44" pos:column="19">(<argument><expr><name pos:line="44" pos:column="20">tmp_type<pos:position pos:line="44" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="30">sizeof <argument_list pos:line="44" pos:column="37">(<argument><expr><name pos:line="44" pos:column="38">tmp_type<pos:position pos:line="44" pos:column="46"/></name></expr></argument>)<pos:position pos:line="44" pos:column="47"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="49">"%s%c%s"<pos:position pos:line="44" pos:column="57"/></literal></expr></argument>,
            <argument><expr><name pos:line="45" pos:column="13">n_type<pos:position pos:line="45" pos:column="19"/></name></expr></argument>,
            <argument><expr><ternary><condition><expr><operator pos:line="46" pos:column="13">(<pos:position pos:line="46" pos:column="14"/></operator><name pos:line="46" pos:column="14">flags<pos:position pos:line="46" pos:column="19"/></name> <operator pos:line="46" pos:column="20">&amp;<pos:position pos:line="46" pos:column="25"/></operator> <name pos:line="46" pos:column="22">GRAPHITE_SEPARATE_INSTANCES<pos:position pos:line="46" pos:column="49"/></name><operator pos:line="46" pos:column="49">)<pos:position pos:line="46" pos:column="50"/></operator></expr> ?<pos:position pos:line="46" pos:column="52"/></condition><then pos:line="46" pos:column="52"> <expr><literal type="char" pos:line="46" pos:column="53">'.'<pos:position pos:line="46" pos:column="56"/></literal></expr> <pos:position pos:line="46" pos:column="57"/></then><else pos:line="46" pos:column="57">: <expr><literal type="char" pos:line="46" pos:column="59">'-'<pos:position pos:line="46" pos:column="62"/></literal></expr></else></ternary></expr></argument>,
            <argument><expr><name pos:line="47" pos:column="13">n_type_instance<pos:position pos:line="47" pos:column="28"/></name></expr></argument>)<pos:position pos:line="47" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="30"/></expr_stmt></block></then>
    <else pos:line="48" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="9">sstrncpy<pos:position pos:line="49" pos:column="17"/></name> <argument_list pos:line="49" pos:column="18">(<argument><expr><name pos:line="49" pos:column="19">tmp_type<pos:position pos:line="49" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="29">n_type<pos:position pos:line="49" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="49" pos:column="37">sizeof <argument_list pos:line="49" pos:column="44">(<argument><expr><name pos:line="49" pos:column="45">tmp_type<pos:position pos:line="49" pos:column="53"/></name></expr></argument>)<pos:position pos:line="49" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="49" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="56"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="51" pos:column="5">/* Assert always_append_ds -&gt; ds_name */</comment>
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">assert<pos:position pos:line="52" pos:column="11"/></name> <argument_list pos:line="52" pos:column="12">(<argument><expr><operator pos:line="52" pos:column="13">!<pos:position pos:line="52" pos:column="14"/></operator><operator pos:line="52" pos:column="14">(<pos:position pos:line="52" pos:column="15"/></operator><name pos:line="52" pos:column="15">flags<pos:position pos:line="52" pos:column="20"/></name> <operator pos:line="52" pos:column="21">&amp;<pos:position pos:line="52" pos:column="26"/></operator> <name pos:line="52" pos:column="23">GRAPHITE_ALWAYS_APPEND_DS<pos:position pos:line="52" pos:column="48"/></name><operator pos:line="52" pos:column="48">)<pos:position pos:line="52" pos:column="49"/></operator> <operator pos:line="52" pos:column="50">||<pos:position pos:line="52" pos:column="52"/></operator> <operator pos:line="52" pos:column="53">(<pos:position pos:line="52" pos:column="54"/></operator><name pos:line="52" pos:column="54">ds_name<pos:position pos:line="52" pos:column="61"/></name> <operator pos:line="52" pos:column="62">!=<pos:position pos:line="52" pos:column="64"/></operator> <name pos:line="52" pos:column="65">NULL<pos:position pos:line="52" pos:column="69"/></name><operator pos:line="52" pos:column="69">)<pos:position pos:line="52" pos:column="70"/></operator></expr></argument>)<pos:position pos:line="52" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="72"/></expr_stmt>
    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><name pos:line="53" pos:column="9">ds_name<pos:position pos:line="53" pos:column="16"/></name> <operator pos:line="53" pos:column="17">!=<pos:position pos:line="53" pos:column="19"/></operator> <name pos:line="53" pos:column="20">NULL<pos:position pos:line="53" pos:column="24"/></name></expr>)<pos:position pos:line="53" pos:column="25"/></condition><then pos:line="53" pos:column="25">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="9">ssnprintf<pos:position pos:line="54" pos:column="18"/></name> <argument_list pos:line="54" pos:column="19">(<argument><expr><name pos:line="54" pos:column="20">ret<pos:position pos:line="54" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="25">ret_len<pos:position pos:line="54" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="34">"%s%s%s.%s.%s.%s"<pos:position pos:line="54" pos:column="51"/></literal></expr></argument>,
            <argument><expr><name pos:line="55" pos:column="13">prefix<pos:position pos:line="55" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="21">n_host<pos:position pos:line="55" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="29">postfix<pos:position pos:line="55" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="38">tmp_plugin<pos:position pos:line="55" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="50">tmp_type<pos:position pos:line="55" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="60">ds_name<pos:position pos:line="55" pos:column="67"/></name></expr></argument>)<pos:position pos:line="55" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="69"/></expr_stmt></block></then>
    <else pos:line="56" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="57" pos:column="9">ssnprintf<pos:position pos:line="57" pos:column="18"/></name> <argument_list pos:line="57" pos:column="19">(<argument><expr><name pos:line="57" pos:column="20">ret<pos:position pos:line="57" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="25">ret_len<pos:position pos:line="57" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="34">"%s%s%s.%s.%s"<pos:position pos:line="57" pos:column="48"/></literal></expr></argument>,
            <argument><expr><name pos:line="58" pos:column="13">prefix<pos:position pos:line="58" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="21">n_host<pos:position pos:line="58" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="29">postfix<pos:position pos:line="58" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="38">tmp_plugin<pos:position pos:line="58" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="50">tmp_type<pos:position pos:line="58" pos:column="58"/></name></expr></argument>)<pos:position pos:line="58" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="60"/></expr_stmt></block></else></if>

    <return pos:line="60" pos:column="5">return <expr><operator pos:line="60" pos:column="12">(<pos:position pos:line="60" pos:column="13"/></operator><literal type="number" pos:line="60" pos:column="13">0<pos:position pos:line="60" pos:column="14"/></literal><operator pos:line="60" pos:column="14">)<pos:position pos:line="60" pos:column="15"/></operator></expr>;<pos:position pos:line="60" pos:column="16"/></return>
}<pos:position pos:line="61" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1542_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">Io__Prometheus__Client__Metric<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type>
<name pos:line="2" pos:column="1">metric_family_get_metric<pos:position pos:line="2" pos:column="25"/></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><name pos:line="2" pos:column="26">Io__Prometheus__Client__MetricFamily<pos:position pos:line="2" pos:column="62"/></name> <modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="64">fam<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>,
                         <parameter><decl><type><name pos:line="3" pos:column="26">value_list_t<pos:position pos:line="3" pos:column="38"/></name> <specifier pos:line="3" pos:column="39">const<pos:position pos:line="3" pos:column="44"/></specifier> <modifier pos:line="3" pos:column="45">*<pos:position pos:line="3" pos:column="46"/></modifier></type><name pos:line="3" pos:column="46">vl<pos:position pos:line="3" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="49"/></parameter_list> <block pos:line="3" pos:column="50">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">Io__Prometheus__Client__Metric<pos:position pos:line="4" pos:column="33"/></name> <modifier pos:line="4" pos:column="34">*<pos:position pos:line="4" pos:column="35"/></modifier></type><name pos:line="4" pos:column="35">key<pos:position pos:line="4" pos:column="38"/></name> <init pos:line="4" pos:column="39">= <expr><name pos:line="4" pos:column="41">METRIC_INIT<pos:position pos:line="4" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="53"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="5" pos:column="3">METRIC_ADD_LABELS<pos:position pos:line="5" pos:column="20"/></name><argument_list pos:line="5" pos:column="20">(<argument><expr><name pos:line="5" pos:column="21">key<pos:position pos:line="5" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="26">vl<pos:position pos:line="5" pos:column="28"/></name></expr></argument>)<pos:position pos:line="5" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="30"/></expr_stmt>

  <comment type="block" pos:line="7" pos:column="3">/* Metrics are sorted in metric_family_add_metric() so that we can do a binary
   * search here. */</comment>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">Io__Prometheus__Client__Metric<pos:position pos:line="9" pos:column="33"/></name> <modifier pos:line="9" pos:column="34">*<pos:position pos:line="9" pos:column="35"/></modifier><modifier pos:line="9" pos:column="35">*<pos:position pos:line="9" pos:column="36"/></modifier></type><name pos:line="9" pos:column="36">m<pos:position pos:line="9" pos:column="37"/></name> <init pos:line="9" pos:column="38">= <expr><call><name pos:line="9" pos:column="40">bsearch<pos:position pos:line="9" pos:column="47"/></name><argument_list pos:line="9" pos:column="47">(
      <argument><expr><operator pos:line="10" pos:column="7">&amp;<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="8">key<pos:position pos:line="10" pos:column="11"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="13">fam<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">-&gt;<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="18">metric<pos:position pos:line="10" pos:column="24"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="26">fam<pos:position pos:line="10" pos:column="29"/></name><operator pos:line="10" pos:column="29">-&gt;<pos:position pos:line="10" pos:column="34"/></operator><name pos:line="10" pos:column="31">n_metric<pos:position pos:line="10" pos:column="39"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="41">sizeof<argument_list pos:line="10" pos:column="47">(<argument><expr><operator pos:line="10" pos:column="48">*<pos:position pos:line="10" pos:column="49"/></operator><name><name pos:line="10" pos:column="49">fam<pos:position pos:line="10" pos:column="52"/></name><operator pos:line="10" pos:column="52">-&gt;<pos:position pos:line="10" pos:column="57"/></operator><name pos:line="10" pos:column="54">metric<pos:position pos:line="10" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="61"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="10" pos:column="63">metric_cmp<pos:position pos:line="10" pos:column="73"/></name></expr></argument>)<pos:position pos:line="10" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="75"/></decl_stmt>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">m<pos:position pos:line="12" pos:column="8"/></name> <operator pos:line="12" pos:column="9">!=<pos:position pos:line="12" pos:column="11"/></operator> <name pos:line="12" pos:column="12">NULL<pos:position pos:line="12" pos:column="16"/></name></expr>)<pos:position pos:line="12" pos:column="17"/></condition><then pos:line="12" pos:column="17"> <block pos:line="12" pos:column="18">{
    <return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">*<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="13">m<pos:position pos:line="13" pos:column="14"/></name></expr>;<pos:position pos:line="13" pos:column="15"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name pos:line="16" pos:column="3">Io__Prometheus__Client__Metric<pos:position pos:line="16" pos:column="33"/></name> <modifier pos:line="16" pos:column="34">*<pos:position pos:line="16" pos:column="35"/></modifier></type><name pos:line="16" pos:column="35">new_metric<pos:position pos:line="16" pos:column="45"/></name> <init pos:line="16" pos:column="46">= <expr><call><name pos:line="16" pos:column="48">metric_clone<pos:position pos:line="16" pos:column="60"/></name><argument_list pos:line="16" pos:column="60">(<argument><expr><name pos:line="16" pos:column="61">key<pos:position pos:line="16" pos:column="64"/></name></expr></argument>)<pos:position pos:line="16" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="66"/></decl_stmt>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">new_metric<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">==<pos:position pos:line="17" pos:column="20"/></operator> <name pos:line="17" pos:column="21">NULL<pos:position pos:line="17" pos:column="25"/></name></expr>)<pos:position pos:line="17" pos:column="26"/></condition><then pos:line="17" pos:column="26">
    <block type="pseudo"><return pos:line="18" pos:column="5">return <expr><name pos:line="18" pos:column="12">NULL<pos:position pos:line="18" pos:column="16"/></name></expr>;<pos:position pos:line="18" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="20" pos:column="3">DEBUG<pos:position pos:line="20" pos:column="8"/></name><argument_list pos:line="20" pos:column="8">(<argument><expr><literal type="string" pos:line="20" pos:column="9">"write_prometheus plugin: created new metric in family"<pos:position pos:line="20" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="66"/></expr_stmt>
  <decl_stmt><decl><type><name pos:line="21" pos:column="3">int<pos:position pos:line="21" pos:column="6"/></name></type> <name pos:line="21" pos:column="7">status<pos:position pos:line="21" pos:column="13"/></name> <init pos:line="21" pos:column="14">= <expr><call><name pos:line="21" pos:column="16">metric_family_add_metric<pos:position pos:line="21" pos:column="40"/></name><argument_list pos:line="21" pos:column="40">(<argument><expr><name pos:line="21" pos:column="41">fam<pos:position pos:line="21" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="46">new_metric<pos:position pos:line="21" pos:column="56"/></name></expr></argument>)<pos:position pos:line="21" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="21" pos:column="58"/></decl_stmt>
  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><name pos:line="22" pos:column="7">status<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">!=<pos:position pos:line="22" pos:column="16"/></operator> <literal type="number" pos:line="22" pos:column="17">0<pos:position pos:line="22" pos:column="18"/></literal></expr>)<pos:position pos:line="22" pos:column="19"/></condition><then pos:line="22" pos:column="19"> <block pos:line="22" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">metric_destroy<pos:position pos:line="23" pos:column="19"/></name><argument_list pos:line="23" pos:column="19">(<argument><expr><name pos:line="23" pos:column="20">new_metric<pos:position pos:line="23" pos:column="30"/></name></expr></argument>)<pos:position pos:line="23" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="32"/></expr_stmt>
    <return pos:line="24" pos:column="5">return <expr><name pos:line="24" pos:column="12">NULL<pos:position pos:line="24" pos:column="16"/></name></expr>;<pos:position pos:line="24" pos:column="17"/></return>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if>

  <return pos:line="27" pos:column="3">return <expr><name pos:line="27" pos:column="10">new_metric<pos:position pos:line="27" pos:column="20"/></name></expr>;<pos:position pos:line="27" pos:column="21"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

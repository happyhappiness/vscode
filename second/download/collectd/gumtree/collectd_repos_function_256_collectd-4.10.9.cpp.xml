<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_256_collectd-4.10.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ir_read<pos:position pos:line="1" pos:column="19"/></name> <parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">void<pos:position pos:line="1" pos:column="25"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="26"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">tcmsg<pos:position pos:line="3" pos:column="15"/></name></name></type> <name pos:line="3" pos:column="16">tm<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">ifindex<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

  <decl_stmt><decl><specifier pos:line="6" pos:column="3">static<pos:position pos:line="6" pos:column="9"/></specifier> <type><specifier pos:line="6" pos:column="10">const<pos:position pos:line="6" pos:column="15"/></specifier> <name pos:line="6" pos:column="16">int<pos:position pos:line="6" pos:column="19"/></name></type> <name><name pos:line="6" pos:column="20">type_id<pos:position pos:line="6" pos:column="27"/></name><index pos:line="6" pos:column="27">[]<pos:position pos:line="6" pos:column="29"/></index></name> <init pos:line="6" pos:column="30">= <expr><block pos:line="6" pos:column="32">{ <expr><name pos:line="6" pos:column="34">RTM_GETQDISC<pos:position pos:line="6" pos:column="46"/></name></expr>, <expr><name pos:line="6" pos:column="48">RTM_GETTCLASS<pos:position pos:line="6" pos:column="61"/></name></expr>, <expr><name pos:line="6" pos:column="63">RTM_GETTFILTER<pos:position pos:line="6" pos:column="77"/></name></expr> }<pos:position pos:line="6" pos:column="79"/></block></expr></init></decl>;<pos:position pos:line="6" pos:column="80"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="7" pos:column="3">static<pos:position pos:line="7" pos:column="9"/></specifier> <type><specifier pos:line="7" pos:column="10">const<pos:position pos:line="7" pos:column="15"/></specifier> <name pos:line="7" pos:column="16">char<pos:position pos:line="7" pos:column="20"/></name> <modifier pos:line="7" pos:column="21">*<pos:position pos:line="7" pos:column="22"/></modifier></type><name><name pos:line="7" pos:column="22">type_name<pos:position pos:line="7" pos:column="31"/></name><index pos:line="7" pos:column="31">[]<pos:position pos:line="7" pos:column="33"/></index></name> <init pos:line="7" pos:column="34">= <expr><block pos:line="7" pos:column="36">{ <expr><literal type="string" pos:line="7" pos:column="38">"qdisc"<pos:position pos:line="7" pos:column="45"/></literal></expr>, <expr><literal type="string" pos:line="7" pos:column="47">"class"<pos:position pos:line="7" pos:column="54"/></literal></expr>, <expr><literal type="string" pos:line="7" pos:column="56">"filter"<pos:position pos:line="7" pos:column="64"/></literal></expr> }<pos:position pos:line="7" pos:column="66"/></block></expr></init></decl>;<pos:position pos:line="7" pos:column="67"/></decl_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><call><name pos:line="9" pos:column="7">rtnl_wilddump_request<pos:position pos:line="9" pos:column="28"/></name> <argument_list pos:line="9" pos:column="29">(<argument><expr><operator pos:line="9" pos:column="30">&amp;<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="31">rth<pos:position pos:line="9" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="36">AF_UNSPEC<pos:position pos:line="9" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="47">RTM_GETLINK<pos:position pos:line="9" pos:column="58"/></name></expr></argument>)<pos:position pos:line="9" pos:column="59"/></argument_list></call> <operator pos:line="9" pos:column="60">&lt;<pos:position pos:line="9" pos:column="64"/></operator> <literal type="number" pos:line="9" pos:column="62">0<pos:position pos:line="9" pos:column="63"/></literal></expr>)<pos:position pos:line="9" pos:column="64"/></condition><then pos:line="9" pos:column="64">
  <block pos:line="10" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">ERROR<pos:position pos:line="11" pos:column="10"/></name> <argument_list pos:line="11" pos:column="11">(<argument><expr><literal type="string" pos:line="11" pos:column="12">"netlink plugin: ir_read: rtnl_wilddump_request failed."<pos:position pos:line="11" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="70"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">(<pos:position pos:line="12" pos:column="13"/></operator><operator pos:line="12" pos:column="13">-<pos:position pos:line="12" pos:column="14"/></operator><literal type="number" pos:line="12" pos:column="14">1<pos:position pos:line="12" pos:column="15"/></literal><operator pos:line="12" pos:column="15">)<pos:position pos:line="12" pos:column="16"/></operator></expr>;<pos:position pos:line="12" pos:column="17"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>

<cpp:ifdef pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">ifdef<pos:position pos:line="15" pos:column="7"/></cpp:directive> <name pos:line="15" pos:column="8">RTNL_DUMP_FILTER_FIVE_ARGS<pos:position pos:line="15" pos:column="34"/></name></cpp:ifdef>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><call><name pos:line="16" pos:column="7">rtnl_dump_filter<pos:position pos:line="16" pos:column="23"/></name> <argument_list pos:line="16" pos:column="24">(<argument><expr><operator pos:line="16" pos:column="25">&amp;<pos:position pos:line="16" pos:column="30"/></operator><name pos:line="16" pos:column="26">rth<pos:position pos:line="16" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="31">link_filter<pos:position pos:line="16" pos:column="42"/></name></expr></argument>, <comment type="block" pos:line="16" pos:column="44">/* arg1 = */</comment> <argument><expr><name pos:line="16" pos:column="57">NULL<pos:position pos:line="16" pos:column="61"/></name></expr></argument>,
	<argument><expr><name pos:line="17" pos:column="9">NULL<pos:position pos:line="17" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="15">NULL<pos:position pos:line="17" pos:column="19"/></name></expr></argument>)<pos:position pos:line="17" pos:column="20"/></argument_list></call> <operator pos:line="17" pos:column="21">!=<pos:position pos:line="17" pos:column="23"/></operator> <literal type="number" pos:line="17" pos:column="24">0<pos:position pos:line="17" pos:column="25"/></literal></expr>)<pos:position pos:line="17" pos:column="26"/></condition><then pos:line="17" pos:column="26">
<cpp:elif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">elif<pos:position pos:line="18" pos:column="6"/></cpp:directive> <expr><call><name pos:line="18" pos:column="7">defined<pos:position pos:line="18" pos:column="14"/></name><argument_list pos:line="18" pos:column="14">(<argument><expr><name pos:line="18" pos:column="15">RTNL_DUMP_FILTER_THREE_ARGS<pos:position pos:line="18" pos:column="42"/></name></expr></argument>)<pos:position pos:line="18" pos:column="43"/></argument_list></call></expr></cpp:elif>
  <block type="pseudo"><if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><call><name pos:line="19" pos:column="7">rtnl_dump_filter<pos:position pos:line="19" pos:column="23"/></name> <argument_list pos:line="19" pos:column="24">(<argument><expr><operator pos:line="19" pos:column="25">&amp;<pos:position pos:line="19" pos:column="30"/></operator><name pos:line="19" pos:column="26">rth<pos:position pos:line="19" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="31">link_filter<pos:position pos:line="19" pos:column="42"/></name></expr></argument>, <comment type="block" pos:line="19" pos:column="44">/* arg = */</comment> <argument><expr><name pos:line="19" pos:column="56">NULL<pos:position pos:line="19" pos:column="60"/></name></expr></argument>)<pos:position pos:line="19" pos:column="61"/></argument_list></call> <operator pos:line="19" pos:column="62">!=<pos:position pos:line="19" pos:column="64"/></operator> <literal type="number" pos:line="19" pos:column="65">0<pos:position pos:line="19" pos:column="66"/></literal></expr>)<pos:position pos:line="19" pos:column="67"/></condition><then pos:line="19" pos:column="67">
<cpp:else pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">else<pos:position pos:line="20" pos:column="6"/></cpp:directive></cpp:else>
<cpp:error pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">error<pos:position pos:line="21" pos:column="7"/></cpp:directive> <cpp:literal pos:line="21" pos:column="8">"Failed to determine the number of arguments to 'rtnl_dump_filter'!"<pos:position pos:line="21" pos:column="76"/></cpp:literal></cpp:error>
<cpp:endif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">endif<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:endif>
  <block pos:line="23" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">ERROR<pos:position pos:line="24" pos:column="10"/></name> <argument_list pos:line="24" pos:column="11">(<argument><expr><literal type="string" pos:line="24" pos:column="12">"netlink plugin: ir_read: rtnl_dump_filter failed."<pos:position pos:line="24" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="65"/></expr_stmt>
    <return pos:line="25" pos:column="5">return <expr><operator pos:line="25" pos:column="12">(<pos:position pos:line="25" pos:column="13"/></operator><operator pos:line="25" pos:column="13">-<pos:position pos:line="25" pos:column="14"/></operator><literal type="number" pos:line="25" pos:column="14">1<pos:position pos:line="25" pos:column="15"/></literal><operator pos:line="25" pos:column="15">)<pos:position pos:line="25" pos:column="16"/></operator></expr>;<pos:position pos:line="25" pos:column="17"/></return>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if></block></then></if>

  <comment type="block" pos:line="28" pos:column="3">/* `link_filter' will update `iflist' which is used here to iterate over all
   * interfaces. */</comment>
  <for pos:line="30" pos:column="3">for <control pos:line="30" pos:column="7">(<init><expr><name pos:line="30" pos:column="8">ifindex<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <literal type="number" pos:line="30" pos:column="18">0<pos:position pos:line="30" pos:column="19"/></literal></expr>;<pos:position pos:line="30" pos:column="20"/></init> <condition><expr><operator pos:line="30" pos:column="21">(<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="22">size_t<pos:position pos:line="30" pos:column="28"/></name><operator pos:line="30" pos:column="28">)<pos:position pos:line="30" pos:column="29"/></operator> <name pos:line="30" pos:column="30">ifindex<pos:position pos:line="30" pos:column="37"/></name> <operator pos:line="30" pos:column="38">&lt;<pos:position pos:line="30" pos:column="42"/></operator> <name pos:line="30" pos:column="40">iflist_len<pos:position pos:line="30" pos:column="50"/></name></expr>;<pos:position pos:line="30" pos:column="51"/></condition> <incr><expr><name pos:line="30" pos:column="52">ifindex<pos:position pos:line="30" pos:column="59"/></name><operator pos:line="30" pos:column="59">++<pos:position pos:line="30" pos:column="61"/></operator></expr></incr>)<pos:position pos:line="30" pos:column="62"/></control>
  <block pos:line="31" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="32" pos:column="5">size_t<pos:position pos:line="32" pos:column="11"/></name></type> <name pos:line="32" pos:column="12">type_index<pos:position pos:line="32" pos:column="22"/></name></decl>;<pos:position pos:line="32" pos:column="23"/></decl_stmt>

    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name><name pos:line="34" pos:column="9">iflist<pos:position pos:line="34" pos:column="15"/></name><index pos:line="34" pos:column="15">[<expr><name pos:line="34" pos:column="16">ifindex<pos:position pos:line="34" pos:column="23"/></name></expr>]<pos:position pos:line="34" pos:column="24"/></index></name> <operator pos:line="34" pos:column="25">==<pos:position pos:line="34" pos:column="27"/></operator> <name pos:line="34" pos:column="28">NULL<pos:position pos:line="34" pos:column="32"/></name></expr>)<pos:position pos:line="34" pos:column="33"/></condition><then pos:line="34" pos:column="33">
      <block type="pseudo"><continue pos:line="35" pos:column="7">continue;<pos:position pos:line="35" pos:column="16"/></continue></block></then></if>

    <for pos:line="37" pos:column="5">for <control pos:line="37" pos:column="9">(<init><expr><name pos:line="37" pos:column="10">type_index<pos:position pos:line="37" pos:column="20"/></name> <operator pos:line="37" pos:column="21">=<pos:position pos:line="37" pos:column="22"/></operator> <literal type="number" pos:line="37" pos:column="23">0<pos:position pos:line="37" pos:column="24"/></literal></expr>;<pos:position pos:line="37" pos:column="25"/></init> <condition><expr><name pos:line="37" pos:column="26">type_index<pos:position pos:line="37" pos:column="36"/></name> <operator pos:line="37" pos:column="37">&lt;<pos:position pos:line="37" pos:column="41"/></operator> <call><name pos:line="37" pos:column="39">STATIC_ARRAY_SIZE<pos:position pos:line="37" pos:column="56"/></name> <argument_list pos:line="37" pos:column="57">(<argument><expr><name pos:line="37" pos:column="58">type_id<pos:position pos:line="37" pos:column="65"/></name></expr></argument>)<pos:position pos:line="37" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="67"/></condition> <incr><expr><name pos:line="37" pos:column="68">type_index<pos:position pos:line="37" pos:column="78"/></name><operator pos:line="37" pos:column="78">++<pos:position pos:line="37" pos:column="80"/></operator></expr></incr>)<pos:position pos:line="37" pos:column="81"/></control>
    <block pos:line="38" pos:column="5">{
      <if pos:line="39" pos:column="7">if <condition pos:line="39" pos:column="10">(<expr><call><name pos:line="39" pos:column="11">check_ignorelist<pos:position pos:line="39" pos:column="27"/></name> <argument_list pos:line="39" pos:column="28">(<argument><expr><name><name pos:line="39" pos:column="29">iflist<pos:position pos:line="39" pos:column="35"/></name><index pos:line="39" pos:column="35">[<expr><name pos:line="39" pos:column="36">ifindex<pos:position pos:line="39" pos:column="43"/></name></expr>]<pos:position pos:line="39" pos:column="44"/></index></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="46">type_name<pos:position pos:line="39" pos:column="55"/></name><index pos:line="39" pos:column="55">[<expr><name pos:line="39" pos:column="56">type_index<pos:position pos:line="39" pos:column="66"/></name></expr>]<pos:position pos:line="39" pos:column="67"/></index></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="69">NULL<pos:position pos:line="39" pos:column="73"/></name></expr></argument>)<pos:position pos:line="39" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="75"/></condition><then pos:line="39" pos:column="75">
      <block pos:line="40" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="41" pos:column="9">DEBUG<pos:position pos:line="41" pos:column="14"/></name> <argument_list pos:line="41" pos:column="15">(<argument><expr><literal type="string" pos:line="41" pos:column="16">"netlink plugin: ir_read: check_ignorelist (%s, %s, (nil)) "<pos:position pos:line="41" pos:column="76"/></literal>
	    <literal type="string" pos:line="42" pos:column="13">"== TRUE"<pos:position pos:line="42" pos:column="22"/></literal></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="24">iflist<pos:position pos:line="42" pos:column="30"/></name><index pos:line="42" pos:column="30">[<expr><name pos:line="42" pos:column="31">ifindex<pos:position pos:line="42" pos:column="38"/></name></expr>]<pos:position pos:line="42" pos:column="39"/></index></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="41">type_name<pos:position pos:line="42" pos:column="50"/></name><index pos:line="42" pos:column="50">[<expr><name pos:line="42" pos:column="51">type_index<pos:position pos:line="42" pos:column="61"/></name></expr>]<pos:position pos:line="42" pos:column="62"/></index></name></expr></argument>)<pos:position pos:line="42" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="64"/></expr_stmt>
	<continue pos:line="43" pos:column="9">continue;<pos:position pos:line="43" pos:column="18"/></continue>
      }<pos:position pos:line="44" pos:column="8"/></block></then></if>

      <expr_stmt><expr><call><name pos:line="46" pos:column="7">DEBUG<pos:position pos:line="46" pos:column="12"/></name> <argument_list pos:line="46" pos:column="13">(<argument><expr><literal type="string" pos:line="46" pos:column="14">"netlink plugin: ir_read: querying %s from %s (%i)."<pos:position pos:line="46" pos:column="66"/></literal></expr></argument>,
	  <argument><expr><name><name pos:line="47" pos:column="11">type_name<pos:position pos:line="47" pos:column="20"/></name><index pos:line="47" pos:column="20">[<expr><name pos:line="47" pos:column="21">type_index<pos:position pos:line="47" pos:column="31"/></name></expr>]<pos:position pos:line="47" pos:column="32"/></index></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="34">iflist<pos:position pos:line="47" pos:column="40"/></name><index pos:line="47" pos:column="40">[<expr><name pos:line="47" pos:column="41">ifindex<pos:position pos:line="47" pos:column="48"/></name></expr>]<pos:position pos:line="47" pos:column="49"/></index></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="51">ifindex<pos:position pos:line="47" pos:column="58"/></name></expr></argument>)<pos:position pos:line="47" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="60"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="49" pos:column="7">memset<pos:position pos:line="49" pos:column="13"/></name> <argument_list pos:line="49" pos:column="14">(<argument><expr><operator pos:line="49" pos:column="15">&amp;<pos:position pos:line="49" pos:column="20"/></operator><name pos:line="49" pos:column="16">tm<pos:position pos:line="49" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="49" pos:column="20">'\0'<pos:position pos:line="49" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="49" pos:column="26">sizeof <argument_list pos:line="49" pos:column="33">(<argument><expr><name pos:line="49" pos:column="34">tm<pos:position pos:line="49" pos:column="36"/></name></expr></argument>)<pos:position pos:line="49" pos:column="37"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="49" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="50" pos:column="7">tm<pos:position pos:line="50" pos:column="9"/></name><operator pos:line="50" pos:column="9">.<pos:position pos:line="50" pos:column="10"/></operator><name pos:line="50" pos:column="10">tcm_family<pos:position pos:line="50" pos:column="20"/></name></name> <operator pos:line="50" pos:column="21">=<pos:position pos:line="50" pos:column="22"/></operator> <name pos:line="50" pos:column="23">AF_UNSPEC<pos:position pos:line="50" pos:column="32"/></name></expr>;<pos:position pos:line="50" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="51" pos:column="7">tm<pos:position pos:line="51" pos:column="9"/></name><operator pos:line="51" pos:column="9">.<pos:position pos:line="51" pos:column="10"/></operator><name pos:line="51" pos:column="10">tcm_ifindex<pos:position pos:line="51" pos:column="21"/></name></name> <operator pos:line="51" pos:column="22">=<pos:position pos:line="51" pos:column="23"/></operator> <name pos:line="51" pos:column="24">ifindex<pos:position pos:line="51" pos:column="31"/></name></expr>;<pos:position pos:line="51" pos:column="32"/></expr_stmt>

      <if pos:line="53" pos:column="7">if <condition pos:line="53" pos:column="10">(<expr><call><name pos:line="53" pos:column="11">rtnl_dump_request<pos:position pos:line="53" pos:column="28"/></name> <argument_list pos:line="53" pos:column="29">(<argument><expr><operator pos:line="53" pos:column="30">&amp;<pos:position pos:line="53" pos:column="35"/></operator><name pos:line="53" pos:column="31">rth<pos:position pos:line="53" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="36">type_id<pos:position pos:line="53" pos:column="43"/></name><index pos:line="53" pos:column="43">[<expr><name pos:line="53" pos:column="44">type_index<pos:position pos:line="53" pos:column="54"/></name></expr>]<pos:position pos:line="53" pos:column="55"/></index></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="57">&amp;<pos:position pos:line="53" pos:column="62"/></operator><name pos:line="53" pos:column="58">tm<pos:position pos:line="53" pos:column="60"/></name></expr></argument>, <argument><expr><sizeof pos:line="53" pos:column="62">sizeof <argument_list pos:line="53" pos:column="69">(<argument><expr><name pos:line="53" pos:column="70">tm<pos:position pos:line="53" pos:column="72"/></name></expr></argument>)<pos:position pos:line="53" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="53" pos:column="74"/></argument_list></call> <operator pos:line="53" pos:column="75">&lt;<pos:position pos:line="53" pos:column="79"/></operator> <literal type="number" pos:line="53" pos:column="77">0<pos:position pos:line="53" pos:column="78"/></literal></expr>)<pos:position pos:line="53" pos:column="79"/></condition><then pos:line="53" pos:column="79">
      <block pos:line="54" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="55" pos:column="9">ERROR<pos:position pos:line="55" pos:column="14"/></name> <argument_list pos:line="55" pos:column="15">(<argument><expr><literal type="string" pos:line="55" pos:column="16">"netlink plugin: ir_read: rtnl_dump_request failed."<pos:position pos:line="55" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="70"/></expr_stmt>
	<continue pos:line="56" pos:column="9">continue;<pos:position pos:line="56" pos:column="18"/></continue>
      }<pos:position pos:line="57" pos:column="8"/></block></then></if>

<cpp:ifdef pos:line="59" pos:column="1">#<cpp:directive pos:line="59" pos:column="2">ifdef<pos:position pos:line="59" pos:column="7"/></cpp:directive> <name pos:line="59" pos:column="8">RTNL_DUMP_FILTER_FIVE_ARGS<pos:position pos:line="59" pos:column="34"/></name></cpp:ifdef>
      <if pos:line="60" pos:column="7">if <condition pos:line="60" pos:column="10">(<expr><call><name pos:line="60" pos:column="11">rtnl_dump_filter<pos:position pos:line="60" pos:column="27"/></name> <argument_list pos:line="60" pos:column="28">(<argument><expr><operator pos:line="60" pos:column="29">&amp;<pos:position pos:line="60" pos:column="34"/></operator><name pos:line="60" pos:column="30">rth<pos:position pos:line="60" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="35">qos_filter<pos:position pos:line="60" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="47">(<pos:position pos:line="60" pos:column="48"/></operator><name pos:line="60" pos:column="48">void<pos:position pos:line="60" pos:column="52"/></name> <operator pos:line="60" pos:column="53">*<pos:position pos:line="60" pos:column="54"/></operator><operator pos:line="60" pos:column="54">)<pos:position pos:line="60" pos:column="55"/></operator> <operator pos:line="60" pos:column="56">&amp;<pos:position pos:line="60" pos:column="61"/></operator><name pos:line="60" pos:column="57">ifindex<pos:position pos:line="60" pos:column="64"/></name></expr></argument>,
	    <argument><expr><name pos:line="61" pos:column="13">NULL<pos:position pos:line="61" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="19">NULL<pos:position pos:line="61" pos:column="23"/></name></expr></argument>)<pos:position pos:line="61" pos:column="24"/></argument_list></call> <operator pos:line="61" pos:column="25">!=<pos:position pos:line="61" pos:column="27"/></operator> <literal type="number" pos:line="61" pos:column="28">0<pos:position pos:line="61" pos:column="29"/></literal></expr>)<pos:position pos:line="61" pos:column="30"/></condition><then pos:line="61" pos:column="30">
<cpp:elif pos:line="62" pos:column="1">#<cpp:directive pos:line="62" pos:column="2">elif<pos:position pos:line="62" pos:column="6"/></cpp:directive> <expr><call><name pos:line="62" pos:column="7">defined<pos:position pos:line="62" pos:column="14"/></name><argument_list pos:line="62" pos:column="14">(<argument><expr><name pos:line="62" pos:column="15">RTNL_DUMP_FILTER_THREE_ARGS<pos:position pos:line="62" pos:column="42"/></name></expr></argument>)<pos:position pos:line="62" pos:column="43"/></argument_list></call></expr></cpp:elif>
      <block type="pseudo"><if pos:line="63" pos:column="7">if <condition pos:line="63" pos:column="10">(<expr><call><name pos:line="63" pos:column="11">rtnl_dump_filter<pos:position pos:line="63" pos:column="27"/></name> <argument_list pos:line="63" pos:column="28">(<argument><expr><operator pos:line="63" pos:column="29">&amp;<pos:position pos:line="63" pos:column="34"/></operator><name pos:line="63" pos:column="30">rth<pos:position pos:line="63" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="35">qos_filter<pos:position pos:line="63" pos:column="45"/></name></expr></argument>, <comment type="block" pos:line="63" pos:column="47">/* arg = */</comment> <argument><expr><operator pos:line="63" pos:column="59">&amp;<pos:position pos:line="63" pos:column="64"/></operator><name pos:line="63" pos:column="60">ifindex<pos:position pos:line="63" pos:column="67"/></name></expr></argument>)<pos:position pos:line="63" pos:column="68"/></argument_list></call> <operator pos:line="63" pos:column="69">!=<pos:position pos:line="63" pos:column="71"/></operator> <literal type="number" pos:line="63" pos:column="72">0<pos:position pos:line="63" pos:column="73"/></literal></expr>)<pos:position pos:line="63" pos:column="74"/></condition><then pos:line="63" pos:column="74">
<cpp:else pos:line="64" pos:column="1">#<cpp:directive pos:line="64" pos:column="2">else<pos:position pos:line="64" pos:column="6"/></cpp:directive></cpp:else>
<cpp:error pos:line="65" pos:column="1">#<cpp:directive pos:line="65" pos:column="2">error<pos:position pos:line="65" pos:column="7"/></cpp:directive> <cpp:literal pos:line="65" pos:column="8">"Failed to determine the number of arguments to 'rtnl_dump_filter'!"<pos:position pos:line="65" pos:column="76"/></cpp:literal></cpp:error>
<cpp:endif pos:line="66" pos:column="1">#<cpp:directive pos:line="66" pos:column="2">endif<pos:position pos:line="66" pos:column="7"/></cpp:directive></cpp:endif>
      <block pos:line="67" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="68" pos:column="9">ERROR<pos:position pos:line="68" pos:column="14"/></name> <argument_list pos:line="68" pos:column="15">(<argument><expr><literal type="string" pos:line="68" pos:column="16">"netlink plugin: ir_read: rtnl_dump_filter failed."<pos:position pos:line="68" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="69"/></expr_stmt>
	<continue pos:line="69" pos:column="9">continue;<pos:position pos:line="69" pos:column="18"/></continue>
      }<pos:position pos:line="70" pos:column="8"/></block></then></if></block></then></if>
    }<pos:position pos:line="71" pos:column="6"/></block></for> <comment type="block" pos:line="71" pos:column="7">/* for (type_index) */</comment>
  }<pos:position pos:line="72" pos:column="4"/></block></for> <comment type="block" pos:line="72" pos:column="5">/* for (if_index) */</comment>

  <return pos:line="74" pos:column="3">return <expr><operator pos:line="74" pos:column="10">(<pos:position pos:line="74" pos:column="11"/></operator><literal type="number" pos:line="74" pos:column="11">0<pos:position pos:line="74" pos:column="12"/></literal><operator pos:line="74" pos:column="12">)<pos:position pos:line="74" pos:column="13"/></operator></expr>;<pos:position pos:line="74" pos:column="14"/></return>
}<pos:position pos:line="75" pos:column="2"/></block></function></unit>

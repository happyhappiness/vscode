<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1607_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">json_add_string<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">yajl_gen<pos:position pos:line="1" pos:column="36"/></name></type> <name pos:line="1" pos:column="37">g<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">str<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list> <comment type="block" pos:line="1" pos:column="57">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><name pos:line="3" pos:column="7">str<pos:position pos:line="3" pos:column="10"/></name> <operator pos:line="3" pos:column="11">==<pos:position pos:line="3" pos:column="13"/></operator> <name pos:line="3" pos:column="14">NULL<pos:position pos:line="3" pos:column="18"/></name></expr>)<pos:position pos:line="3" pos:column="19"/></condition><then pos:line="3" pos:column="19">
    <block type="pseudo"><return pos:line="4" pos:column="5">return <expr><operator pos:line="4" pos:column="12">(<pos:position pos:line="4" pos:column="13"/></operator><name pos:line="4" pos:column="13">int<pos:position pos:line="4" pos:column="16"/></name><operator pos:line="4" pos:column="16">)<pos:position pos:line="4" pos:column="17"/></operator><call><name pos:line="4" pos:column="17">yajl_gen_null<pos:position pos:line="4" pos:column="30"/></name><argument_list pos:line="4" pos:column="30">(<argument><expr><name pos:line="4" pos:column="31">g<pos:position pos:line="4" pos:column="32"/></name></expr></argument>)<pos:position pos:line="4" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="34"/></return></block></then></if>

  <return pos:line="6" pos:column="3">return <expr><operator pos:line="6" pos:column="10">(<pos:position pos:line="6" pos:column="11"/></operator><name pos:line="6" pos:column="11">int<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">)<pos:position pos:line="6" pos:column="15"/></operator><call><name pos:line="6" pos:column="15">yajl_gen_string<pos:position pos:line="6" pos:column="30"/></name><argument_list pos:line="6" pos:column="30">(<argument><expr><name pos:line="6" pos:column="31">g<pos:position pos:line="6" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="34">(<pos:position pos:line="6" pos:column="35"/></operator><name pos:line="6" pos:column="35">unsigned<pos:position pos:line="6" pos:column="43"/></name> <name pos:line="6" pos:column="44">char<pos:position pos:line="6" pos:column="48"/></name> <specifier pos:line="6" pos:column="49">const<pos:position pos:line="6" pos:column="54"/></specifier> <operator pos:line="6" pos:column="55">*<pos:position pos:line="6" pos:column="56"/></operator><operator pos:line="6" pos:column="56">)<pos:position pos:line="6" pos:column="57"/></operator><name pos:line="6" pos:column="57">str<pos:position pos:line="6" pos:column="60"/></name></expr></argument>,
                              <argument><expr><operator pos:line="7" pos:column="31">(<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="32">unsigned<pos:position pos:line="7" pos:column="40"/></name> <name pos:line="7" pos:column="41">int<pos:position pos:line="7" pos:column="44"/></name><operator pos:line="7" pos:column="44">)<pos:position pos:line="7" pos:column="45"/></operator><call><name pos:line="7" pos:column="45">strlen<pos:position pos:line="7" pos:column="51"/></name><argument_list pos:line="7" pos:column="51">(<argument><expr><name pos:line="7" pos:column="52">str<pos:position pos:line="7" pos:column="55"/></name></expr></argument>)<pos:position pos:line="7" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="58"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

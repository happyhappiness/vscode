<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1594_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">statsd_parse_line<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">buffer<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list> <comment type="block" pos:line="1" pos:column="45">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">name<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><name pos:line="3" pos:column="16">buffer<pos:position pos:line="3" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">value<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">type<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">extra<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>

  <expr_stmt><expr><name pos:line="8" pos:column="3">type<pos:position pos:line="8" pos:column="7"/></name> <operator pos:line="8" pos:column="8">=<pos:position pos:line="8" pos:column="9"/></operator> <call><name pos:line="8" pos:column="10">strchr<pos:position pos:line="8" pos:column="16"/></name> <argument_list pos:line="8" pos:column="17">(<argument><expr><name pos:line="8" pos:column="18">name<pos:position pos:line="8" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="8" pos:column="24">'|'<pos:position pos:line="8" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="29"/></expr_stmt>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">type<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">==<pos:position pos:line="9" pos:column="14"/></operator> <name pos:line="9" pos:column="15">NULL<pos:position pos:line="9" pos:column="19"/></name></expr>)<pos:position pos:line="9" pos:column="20"/></condition><then pos:line="9" pos:column="20">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">(<pos:position pos:line="10" pos:column="13"/></operator><operator pos:line="10" pos:column="13">-<pos:position pos:line="10" pos:column="14"/></operator><literal type="number" pos:line="10" pos:column="14">1<pos:position pos:line="10" pos:column="15"/></literal><operator pos:line="10" pos:column="15">)<pos:position pos:line="10" pos:column="16"/></operator></expr>;<pos:position pos:line="10" pos:column="17"/></return></block></then></if>
  <expr_stmt><expr><operator pos:line="11" pos:column="3">*<pos:position pos:line="11" pos:column="4"/></operator><name pos:line="11" pos:column="4">type<pos:position pos:line="11" pos:column="8"/></name> <operator pos:line="11" pos:column="9">=<pos:position pos:line="11" pos:column="10"/></operator> <literal type="number" pos:line="11" pos:column="11">0<pos:position pos:line="11" pos:column="12"/></literal></expr>;<pos:position pos:line="11" pos:column="13"/></expr_stmt>
  <expr_stmt><expr><name pos:line="12" pos:column="3">type<pos:position pos:line="12" pos:column="7"/></name><operator pos:line="12" pos:column="7">++<pos:position pos:line="12" pos:column="9"/></operator></expr>;<pos:position pos:line="12" pos:column="10"/></expr_stmt>

  <expr_stmt><expr><name pos:line="14" pos:column="3">value<pos:position pos:line="14" pos:column="8"/></name> <operator pos:line="14" pos:column="9">=<pos:position pos:line="14" pos:column="10"/></operator> <call><name pos:line="14" pos:column="11">strrchr<pos:position pos:line="14" pos:column="18"/></name> <argument_list pos:line="14" pos:column="19">(<argument><expr><name pos:line="14" pos:column="20">name<pos:position pos:line="14" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="14" pos:column="26">':'<pos:position pos:line="14" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="31"/></expr_stmt>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name pos:line="15" pos:column="7">value<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">==<pos:position pos:line="15" pos:column="15"/></operator> <name pos:line="15" pos:column="16">NULL<pos:position pos:line="15" pos:column="20"/></name></expr>)<pos:position pos:line="15" pos:column="21"/></condition><then pos:line="15" pos:column="21">
    <block type="pseudo"><return pos:line="16" pos:column="5">return <expr><operator pos:line="16" pos:column="12">(<pos:position pos:line="16" pos:column="13"/></operator><operator pos:line="16" pos:column="13">-<pos:position pos:line="16" pos:column="14"/></operator><literal type="number" pos:line="16" pos:column="14">1<pos:position pos:line="16" pos:column="15"/></literal><operator pos:line="16" pos:column="15">)<pos:position pos:line="16" pos:column="16"/></operator></expr>;<pos:position pos:line="16" pos:column="17"/></return></block></then></if>
  <expr_stmt><expr><operator pos:line="17" pos:column="3">*<pos:position pos:line="17" pos:column="4"/></operator><name pos:line="17" pos:column="4">value<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">=<pos:position pos:line="17" pos:column="11"/></operator> <literal type="number" pos:line="17" pos:column="12">0<pos:position pos:line="17" pos:column="13"/></literal></expr>;<pos:position pos:line="17" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><name pos:line="18" pos:column="3">value<pos:position pos:line="18" pos:column="8"/></name><operator pos:line="18" pos:column="8">++<pos:position pos:line="18" pos:column="10"/></operator></expr>;<pos:position pos:line="18" pos:column="11"/></expr_stmt>

  <expr_stmt><expr><name pos:line="20" pos:column="3">extra<pos:position pos:line="20" pos:column="8"/></name> <operator pos:line="20" pos:column="9">=<pos:position pos:line="20" pos:column="10"/></operator> <call><name pos:line="20" pos:column="11">strchr<pos:position pos:line="20" pos:column="17"/></name> <argument_list pos:line="20" pos:column="18">(<argument><expr><name pos:line="20" pos:column="19">type<pos:position pos:line="20" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="20" pos:column="25">'|'<pos:position pos:line="20" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="30"/></expr_stmt>
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><name pos:line="21" pos:column="7">extra<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">!=<pos:position pos:line="21" pos:column="15"/></operator> <name pos:line="21" pos:column="16">NULL<pos:position pos:line="21" pos:column="20"/></name></expr>)<pos:position pos:line="21" pos:column="21"/></condition><then pos:line="21" pos:column="21">
  <block pos:line="22" pos:column="3">{
    <expr_stmt><expr><operator pos:line="23" pos:column="5">*<pos:position pos:line="23" pos:column="6"/></operator><name pos:line="23" pos:column="6">extra<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <literal type="number" pos:line="23" pos:column="14">0<pos:position pos:line="23" pos:column="15"/></literal></expr>;<pos:position pos:line="23" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name pos:line="24" pos:column="5">extra<pos:position pos:line="24" pos:column="10"/></name><operator pos:line="24" pos:column="10">++<pos:position pos:line="24" pos:column="12"/></operator></expr>;<pos:position pos:line="24" pos:column="13"/></expr_stmt>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if>

  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><call><name pos:line="27" pos:column="7">strcmp<pos:position pos:line="27" pos:column="13"/></name> <argument_list pos:line="27" pos:column="14">(<argument><expr><literal type="string" pos:line="27" pos:column="15">"c"<pos:position pos:line="27" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="20">type<pos:position pos:line="27" pos:column="24"/></name></expr></argument>)<pos:position pos:line="27" pos:column="25"/></argument_list></call> <operator pos:line="27" pos:column="26">==<pos:position pos:line="27" pos:column="28"/></operator> <literal type="number" pos:line="27" pos:column="29">0<pos:position pos:line="27" pos:column="30"/></literal></expr>)<pos:position pos:line="27" pos:column="31"/></condition><then pos:line="27" pos:column="31">
    <block type="pseudo"><return pos:line="28" pos:column="5">return <expr><operator pos:line="28" pos:column="12">(<pos:position pos:line="28" pos:column="13"/></operator><call><name pos:line="28" pos:column="13">statsd_handle_counter<pos:position pos:line="28" pos:column="34"/></name> <argument_list pos:line="28" pos:column="35">(<argument><expr><name pos:line="28" pos:column="36">name<pos:position pos:line="28" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="42">value<pos:position pos:line="28" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="49">extra<pos:position pos:line="28" pos:column="54"/></name></expr></argument>)<pos:position pos:line="28" pos:column="55"/></argument_list></call><operator pos:line="28" pos:column="55">)<pos:position pos:line="28" pos:column="56"/></operator></expr>;<pos:position pos:line="28" pos:column="57"/></return></block></then>
  <elseif pos:line="29" pos:column="3">else <if pos:line="29" pos:column="8">if <condition pos:line="29" pos:column="11">(<expr><call><name pos:line="29" pos:column="12">strcmp<pos:position pos:line="29" pos:column="18"/></name> <argument_list pos:line="29" pos:column="19">(<argument><expr><literal type="string" pos:line="29" pos:column="20">"ms"<pos:position pos:line="29" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="26">type<pos:position pos:line="29" pos:column="30"/></name></expr></argument>)<pos:position pos:line="29" pos:column="31"/></argument_list></call> <operator pos:line="29" pos:column="32">==<pos:position pos:line="29" pos:column="34"/></operator> <literal type="number" pos:line="29" pos:column="35">0<pos:position pos:line="29" pos:column="36"/></literal></expr>)<pos:position pos:line="29" pos:column="37"/></condition><then pos:line="29" pos:column="37">
    <block type="pseudo"><return pos:line="30" pos:column="5">return <expr><operator pos:line="30" pos:column="12">(<pos:position pos:line="30" pos:column="13"/></operator><call><name pos:line="30" pos:column="13">statsd_handle_timer<pos:position pos:line="30" pos:column="32"/></name> <argument_list pos:line="30" pos:column="33">(<argument><expr><name pos:line="30" pos:column="34">name<pos:position pos:line="30" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="40">value<pos:position pos:line="30" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="47">extra<pos:position pos:line="30" pos:column="52"/></name></expr></argument>)<pos:position pos:line="30" pos:column="53"/></argument_list></call><operator pos:line="30" pos:column="53">)<pos:position pos:line="30" pos:column="54"/></operator></expr>;<pos:position pos:line="30" pos:column="55"/></return></block></then></if></elseif></if>

  <comment type="block" pos:line="32" pos:column="3">/* extra is only valid for counters and timers */</comment>
  <if pos:line="33" pos:column="3">if <condition pos:line="33" pos:column="6">(<expr><name pos:line="33" pos:column="7">extra<pos:position pos:line="33" pos:column="12"/></name> <operator pos:line="33" pos:column="13">!=<pos:position pos:line="33" pos:column="15"/></operator> <name pos:line="33" pos:column="16">NULL<pos:position pos:line="33" pos:column="20"/></name></expr>)<pos:position pos:line="33" pos:column="21"/></condition><then pos:line="33" pos:column="21">
    <block type="pseudo"><return pos:line="34" pos:column="5">return <expr><operator pos:line="34" pos:column="12">(<pos:position pos:line="34" pos:column="13"/></operator><operator pos:line="34" pos:column="13">-<pos:position pos:line="34" pos:column="14"/></operator><literal type="number" pos:line="34" pos:column="14">1<pos:position pos:line="34" pos:column="15"/></literal><operator pos:line="34" pos:column="15">)<pos:position pos:line="34" pos:column="16"/></operator></expr>;<pos:position pos:line="34" pos:column="17"/></return></block></then></if>

  <if pos:line="36" pos:column="3">if <condition pos:line="36" pos:column="6">(<expr><call><name pos:line="36" pos:column="7">strcmp<pos:position pos:line="36" pos:column="13"/></name> <argument_list pos:line="36" pos:column="14">(<argument><expr><literal type="string" pos:line="36" pos:column="15">"g"<pos:position pos:line="36" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="20">type<pos:position pos:line="36" pos:column="24"/></name></expr></argument>)<pos:position pos:line="36" pos:column="25"/></argument_list></call> <operator pos:line="36" pos:column="26">==<pos:position pos:line="36" pos:column="28"/></operator> <literal type="number" pos:line="36" pos:column="29">0<pos:position pos:line="36" pos:column="30"/></literal></expr>)<pos:position pos:line="36" pos:column="31"/></condition><then pos:line="36" pos:column="31">
    <block type="pseudo"><return pos:line="37" pos:column="5">return <expr><operator pos:line="37" pos:column="12">(<pos:position pos:line="37" pos:column="13"/></operator><call><name pos:line="37" pos:column="13">statsd_handle_gauge<pos:position pos:line="37" pos:column="32"/></name> <argument_list pos:line="37" pos:column="33">(<argument><expr><name pos:line="37" pos:column="34">name<pos:position pos:line="37" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="40">value<pos:position pos:line="37" pos:column="45"/></name></expr></argument>)<pos:position pos:line="37" pos:column="46"/></argument_list></call><operator pos:line="37" pos:column="46">)<pos:position pos:line="37" pos:column="47"/></operator></expr>;<pos:position pos:line="37" pos:column="48"/></return></block></then>
  <elseif pos:line="38" pos:column="3">else <if pos:line="38" pos:column="8">if <condition pos:line="38" pos:column="11">(<expr><call><name pos:line="38" pos:column="12">strcmp<pos:position pos:line="38" pos:column="18"/></name> <argument_list pos:line="38" pos:column="19">(<argument><expr><literal type="string" pos:line="38" pos:column="20">"s"<pos:position pos:line="38" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="25">type<pos:position pos:line="38" pos:column="29"/></name></expr></argument>)<pos:position pos:line="38" pos:column="30"/></argument_list></call> <operator pos:line="38" pos:column="31">==<pos:position pos:line="38" pos:column="33"/></operator> <literal type="number" pos:line="38" pos:column="34">0<pos:position pos:line="38" pos:column="35"/></literal></expr>)<pos:position pos:line="38" pos:column="36"/></condition><then pos:line="38" pos:column="36">
    <block type="pseudo"><return pos:line="39" pos:column="5">return <expr><operator pos:line="39" pos:column="12">(<pos:position pos:line="39" pos:column="13"/></operator><call><name pos:line="39" pos:column="13">statsd_handle_set<pos:position pos:line="39" pos:column="30"/></name> <argument_list pos:line="39" pos:column="31">(<argument><expr><name pos:line="39" pos:column="32">name<pos:position pos:line="39" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="38">value<pos:position pos:line="39" pos:column="43"/></name></expr></argument>)<pos:position pos:line="39" pos:column="44"/></argument_list></call><operator pos:line="39" pos:column="44">)<pos:position pos:line="39" pos:column="45"/></operator></expr>;<pos:position pos:line="39" pos:column="46"/></return></block></then></if></elseif>
  <else pos:line="40" pos:column="3">else
    <block type="pseudo"><return pos:line="41" pos:column="5">return <expr><operator pos:line="41" pos:column="12">(<pos:position pos:line="41" pos:column="13"/></operator><operator pos:line="41" pos:column="13">-<pos:position pos:line="41" pos:column="14"/></operator><literal type="number" pos:line="41" pos:column="14">1<pos:position pos:line="41" pos:column="15"/></literal><operator pos:line="41" pos:column="15">)<pos:position pos:line="41" pos:column="16"/></operator></expr>;<pos:position pos:line="41" pos:column="17"/></return></block></else></if>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

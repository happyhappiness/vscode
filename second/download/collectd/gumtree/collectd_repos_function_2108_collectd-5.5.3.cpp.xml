<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2108_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">nb_add_signature<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">lcc_network_buffer_t<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">nb<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list> <comment type="block" pos:line="1" pos:column="56">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">buffer<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">buffer_size<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">gcry_md_hd_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">hd<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">gcry_error_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">err<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">unsigned<pos:position pos:line="8" pos:column="11"/></name> <name pos:line="8" pos:column="12">char<pos:position pos:line="8" pos:column="16"/></name> <modifier pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></modifier></type><name pos:line="8" pos:column="18">hash<pos:position pos:line="8" pos:column="22"/></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="9" pos:column="3">const<pos:position pos:line="9" pos:column="8"/></specifier> <name pos:line="9" pos:column="9">size_t<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">hash_length<pos:position pos:line="9" pos:column="27"/></name> <init pos:line="9" pos:column="28">= <expr><literal type="number" pos:line="9" pos:column="30">32<pos:position pos:line="9" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="33"/></decl_stmt>

  <comment type="block" pos:line="11" pos:column="3">/* The type, length and username have already been filled in by
   * "lcc_network_buffer_initialize". All we do here is calculate the hash over
   * the username and the data and add the hash value to the buffer. */</comment>

  <expr_stmt><expr><name pos:line="15" pos:column="3">buffer<pos:position pos:line="15" pos:column="9"/></name> <operator pos:line="15" pos:column="10">=<pos:position pos:line="15" pos:column="11"/></operator> <name><name pos:line="15" pos:column="12">nb<pos:position pos:line="15" pos:column="14"/></name><operator pos:line="15" pos:column="14">-&gt;<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="16">buffer<pos:position pos:line="15" pos:column="22"/></name></name> <operator pos:line="15" pos:column="23">+<pos:position pos:line="15" pos:column="24"/></operator> <name pos:line="15" pos:column="25">PART_SIGNATURE_SHA256_SIZE<pos:position pos:line="15" pos:column="51"/></name></expr>;<pos:position pos:line="15" pos:column="52"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="16" pos:column="3">assert<pos:position pos:line="16" pos:column="9"/></name> <argument_list pos:line="16" pos:column="10">(<argument><expr><name><name pos:line="16" pos:column="11">nb<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">-&gt;<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="15">size<pos:position pos:line="16" pos:column="19"/></name></name> <operator pos:line="16" pos:column="20">&gt;=<pos:position pos:line="16" pos:column="25"/></operator> <operator pos:line="16" pos:column="23">(<pos:position pos:line="16" pos:column="24"/></operator><name><name pos:line="16" pos:column="24">nb<pos:position pos:line="16" pos:column="26"/></name><operator pos:line="16" pos:column="26">-&gt;<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="28">free<pos:position pos:line="16" pos:column="32"/></name></name> <operator pos:line="16" pos:column="33">+<pos:position pos:line="16" pos:column="34"/></operator> <name pos:line="16" pos:column="35">PART_SIGNATURE_SHA256_SIZE<pos:position pos:line="16" pos:column="61"/></name><operator pos:line="16" pos:column="61">)<pos:position pos:line="16" pos:column="62"/></operator></expr></argument>)<pos:position pos:line="16" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="64"/></expr_stmt>
  <expr_stmt><expr><name pos:line="17" pos:column="3">buffer_size<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">=<pos:position pos:line="17" pos:column="16"/></operator> <name><name pos:line="17" pos:column="17">nb<pos:position pos:line="17" pos:column="19"/></name><operator pos:line="17" pos:column="19">-&gt;<pos:position pos:line="17" pos:column="24"/></operator><name pos:line="17" pos:column="21">size<pos:position pos:line="17" pos:column="25"/></name></name> <operator pos:line="17" pos:column="26">-<pos:position pos:line="17" pos:column="27"/></operator> <operator pos:line="17" pos:column="28">(<pos:position pos:line="17" pos:column="29"/></operator><name><name pos:line="17" pos:column="29">nb<pos:position pos:line="17" pos:column="31"/></name><operator pos:line="17" pos:column="31">-&gt;<pos:position pos:line="17" pos:column="36"/></operator><name pos:line="17" pos:column="33">free<pos:position pos:line="17" pos:column="37"/></name></name> <operator pos:line="17" pos:column="38">+<pos:position pos:line="17" pos:column="39"/></operator> <name pos:line="17" pos:column="40">PART_SIGNATURE_SHA256_SIZE<pos:position pos:line="17" pos:column="66"/></name><operator pos:line="17" pos:column="66">)<pos:position pos:line="17" pos:column="67"/></operator></expr>;<pos:position pos:line="17" pos:column="68"/></expr_stmt>

  <expr_stmt><expr><name pos:line="19" pos:column="3">hd<pos:position pos:line="19" pos:column="5"/></name> <operator pos:line="19" pos:column="6">=<pos:position pos:line="19" pos:column="7"/></operator> <name pos:line="19" pos:column="8">NULL<pos:position pos:line="19" pos:column="12"/></name></expr>;<pos:position pos:line="19" pos:column="13"/></expr_stmt>
  <expr_stmt><expr><name pos:line="20" pos:column="3">err<pos:position pos:line="20" pos:column="6"/></name> <operator pos:line="20" pos:column="7">=<pos:position pos:line="20" pos:column="8"/></operator> <call><name pos:line="20" pos:column="9">gcry_md_open<pos:position pos:line="20" pos:column="21"/></name> <argument_list pos:line="20" pos:column="22">(<argument><expr><operator pos:line="20" pos:column="23">&amp;<pos:position pos:line="20" pos:column="28"/></operator><name pos:line="20" pos:column="24">hd<pos:position pos:line="20" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="28">GCRY_MD_SHA256<pos:position pos:line="20" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="44">GCRY_MD_FLAG_HMAC<pos:position pos:line="20" pos:column="61"/></name></expr></argument>)<pos:position pos:line="20" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="63"/></expr_stmt>
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><name pos:line="21" pos:column="7">err<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">!=<pos:position pos:line="21" pos:column="13"/></operator> <literal type="number" pos:line="21" pos:column="14">0<pos:position pos:line="21" pos:column="15"/></literal></expr>)<pos:position pos:line="21" pos:column="16"/></condition><then pos:line="21" pos:column="16">
    <block type="pseudo"><return pos:line="22" pos:column="5">return <expr><operator pos:line="22" pos:column="12">(<pos:position pos:line="22" pos:column="13"/></operator><operator pos:line="22" pos:column="13">-<pos:position pos:line="22" pos:column="14"/></operator><literal type="number" pos:line="22" pos:column="14">1<pos:position pos:line="22" pos:column="15"/></literal><operator pos:line="22" pos:column="15">)<pos:position pos:line="22" pos:column="16"/></operator></expr>;<pos:position pos:line="22" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="24" pos:column="3">assert<pos:position pos:line="24" pos:column="9"/></name> <argument_list pos:line="24" pos:column="10">(<argument><expr><name><name pos:line="24" pos:column="11">nb<pos:position pos:line="24" pos:column="13"/></name><operator pos:line="24" pos:column="13">-&gt;<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="15">password<pos:position pos:line="24" pos:column="23"/></name></name> <operator pos:line="24" pos:column="24">!=<pos:position pos:line="24" pos:column="26"/></operator> <name pos:line="24" pos:column="27">NULL<pos:position pos:line="24" pos:column="31"/></name></expr></argument>)<pos:position pos:line="24" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><name pos:line="25" pos:column="3">err<pos:position pos:line="25" pos:column="6"/></name> <operator pos:line="25" pos:column="7">=<pos:position pos:line="25" pos:column="8"/></operator> <call><name pos:line="25" pos:column="9">gcry_md_setkey<pos:position pos:line="25" pos:column="23"/></name> <argument_list pos:line="25" pos:column="24">(<argument><expr><name pos:line="25" pos:column="25">hd<pos:position pos:line="25" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="29">nb<pos:position pos:line="25" pos:column="31"/></name><operator pos:line="25" pos:column="31">-&gt;<pos:position pos:line="25" pos:column="36"/></operator><name pos:line="25" pos:column="33">password<pos:position pos:line="25" pos:column="41"/></name></name></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="43">strlen<pos:position pos:line="25" pos:column="49"/></name> <argument_list pos:line="25" pos:column="50">(<argument><expr><name><name pos:line="25" pos:column="51">nb<pos:position pos:line="25" pos:column="53"/></name><operator pos:line="25" pos:column="53">-&gt;<pos:position pos:line="25" pos:column="58"/></operator><name pos:line="25" pos:column="55">password<pos:position pos:line="25" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="66"/></expr_stmt>
  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><name pos:line="26" pos:column="7">err<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">!=<pos:position pos:line="26" pos:column="13"/></operator> <literal type="number" pos:line="26" pos:column="14">0<pos:position pos:line="26" pos:column="15"/></literal></expr>)<pos:position pos:line="26" pos:column="16"/></condition><then pos:line="26" pos:column="16">
  <block pos:line="27" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">gcry_md_close<pos:position pos:line="28" pos:column="18"/></name> <argument_list pos:line="28" pos:column="19">(<argument><expr><name pos:line="28" pos:column="20">hd<pos:position pos:line="28" pos:column="22"/></name></expr></argument>)<pos:position pos:line="28" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="24"/></expr_stmt>
    <return pos:line="29" pos:column="5">return <expr><operator pos:line="29" pos:column="12">(<pos:position pos:line="29" pos:column="13"/></operator><operator pos:line="29" pos:column="13">-<pos:position pos:line="29" pos:column="14"/></operator><literal type="number" pos:line="29" pos:column="14">1<pos:position pos:line="29" pos:column="15"/></literal><operator pos:line="29" pos:column="15">)<pos:position pos:line="29" pos:column="16"/></operator></expr>;<pos:position pos:line="29" pos:column="17"/></return>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="32" pos:column="3">gcry_md_write<pos:position pos:line="32" pos:column="16"/></name> <argument_list pos:line="32" pos:column="17">(<argument><expr><name pos:line="32" pos:column="18">hd<pos:position pos:line="32" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="22">buffer<pos:position pos:line="32" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="30">buffer_size<pos:position pos:line="32" pos:column="41"/></name></expr></argument>)<pos:position pos:line="32" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><name pos:line="33" pos:column="3">hash<pos:position pos:line="33" pos:column="7"/></name> <operator pos:line="33" pos:column="8">=<pos:position pos:line="33" pos:column="9"/></operator> <call><name pos:line="33" pos:column="10">gcry_md_read<pos:position pos:line="33" pos:column="22"/></name> <argument_list pos:line="33" pos:column="23">(<argument><expr><name pos:line="33" pos:column="24">hd<pos:position pos:line="33" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="28">GCRY_MD_SHA256<pos:position pos:line="33" pos:column="42"/></name></expr></argument>)<pos:position pos:line="33" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="44"/></expr_stmt>
  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><name pos:line="34" pos:column="7">hash<pos:position pos:line="34" pos:column="11"/></name> <operator pos:line="34" pos:column="12">==<pos:position pos:line="34" pos:column="14"/></operator> <name pos:line="34" pos:column="15">NULL<pos:position pos:line="34" pos:column="19"/></name></expr>)<pos:position pos:line="34" pos:column="20"/></condition><then pos:line="34" pos:column="20">
  <block pos:line="35" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">gcry_md_close<pos:position pos:line="36" pos:column="18"/></name> <argument_list pos:line="36" pos:column="19">(<argument><expr><name pos:line="36" pos:column="20">hd<pos:position pos:line="36" pos:column="22"/></name></expr></argument>)<pos:position pos:line="36" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="24"/></expr_stmt>
    <return pos:line="37" pos:column="5">return <expr><operator pos:line="37" pos:column="12">(<pos:position pos:line="37" pos:column="13"/></operator><operator pos:line="37" pos:column="13">-<pos:position pos:line="37" pos:column="14"/></operator><literal type="number" pos:line="37" pos:column="14">1<pos:position pos:line="37" pos:column="15"/></literal><operator pos:line="37" pos:column="15">)<pos:position pos:line="37" pos:column="16"/></operator></expr>;<pos:position pos:line="37" pos:column="17"/></return>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="40" pos:column="3">assert<pos:position pos:line="40" pos:column="9"/></name> <argument_list pos:line="40" pos:column="10">(<argument><expr><operator pos:line="40" pos:column="11">(<pos:position pos:line="40" pos:column="12"/></operator><operator pos:line="40" pos:column="12">(<pos:position pos:line="40" pos:column="13"/></operator><literal type="number" pos:line="40" pos:column="13">2<pos:position pos:line="40" pos:column="14"/></literal> <operator pos:line="40" pos:column="15">*<pos:position pos:line="40" pos:column="16"/></operator> <sizeof pos:line="40" pos:column="17">sizeof <argument_list pos:line="40" pos:column="24">(<argument><expr><name pos:line="40" pos:column="25">uint16_t<pos:position pos:line="40" pos:column="33"/></name></expr></argument>)<pos:position pos:line="40" pos:column="34"/></argument_list></sizeof><operator pos:line="40" pos:column="34">)<pos:position pos:line="40" pos:column="35"/></operator> <operator pos:line="40" pos:column="36">+<pos:position pos:line="40" pos:column="37"/></operator> <name pos:line="40" pos:column="38">hash_length<pos:position pos:line="40" pos:column="49"/></name><operator pos:line="40" pos:column="49">)<pos:position pos:line="40" pos:column="50"/></operator> <operator pos:line="40" pos:column="51">==<pos:position pos:line="40" pos:column="53"/></operator> <name pos:line="40" pos:column="54">PART_SIGNATURE_SHA256_SIZE<pos:position pos:line="40" pos:column="80"/></name></expr></argument>)<pos:position pos:line="40" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="82"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="41" pos:column="3">memcpy<pos:position pos:line="41" pos:column="9"/></name> <argument_list pos:line="41" pos:column="10">(<argument><expr><name><name pos:line="41" pos:column="11">nb<pos:position pos:line="41" pos:column="13"/></name><operator pos:line="41" pos:column="13">-&gt;<pos:position pos:line="41" pos:column="18"/></operator><name pos:line="41" pos:column="15">buffer<pos:position pos:line="41" pos:column="21"/></name></name> <operator pos:line="41" pos:column="22">+<pos:position pos:line="41" pos:column="23"/></operator> <operator pos:line="41" pos:column="24">(<pos:position pos:line="41" pos:column="25"/></operator><literal type="number" pos:line="41" pos:column="25">2<pos:position pos:line="41" pos:column="26"/></literal> <operator pos:line="41" pos:column="27">*<pos:position pos:line="41" pos:column="28"/></operator> <sizeof pos:line="41" pos:column="29">sizeof <argument_list pos:line="41" pos:column="36">(<argument><expr><name pos:line="41" pos:column="37">uint16_t<pos:position pos:line="41" pos:column="45"/></name></expr></argument>)<pos:position pos:line="41" pos:column="46"/></argument_list></sizeof><operator pos:line="41" pos:column="46">)<pos:position pos:line="41" pos:column="47"/></operator></expr></argument>, <argument><expr><name pos:line="41" pos:column="49">hash<pos:position pos:line="41" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="55">hash_length<pos:position pos:line="41" pos:column="66"/></name></expr></argument>)<pos:position pos:line="41" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="68"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="43" pos:column="3">gcry_md_close<pos:position pos:line="43" pos:column="16"/></name> <argument_list pos:line="43" pos:column="17">(<argument><expr><name pos:line="43" pos:column="18">hd<pos:position pos:line="43" pos:column="20"/></name></expr></argument>)<pos:position pos:line="43" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="22"/></expr_stmt>
  <return pos:line="44" pos:column="3">return <expr><operator pos:line="44" pos:column="10">(<pos:position pos:line="44" pos:column="11"/></operator><literal type="number" pos:line="44" pos:column="11">0<pos:position pos:line="44" pos:column="12"/></literal><operator pos:line="44" pos:column="12">)<pos:position pos:line="44" pos:column="13"/></operator></expr>;<pos:position pos:line="44" pos:column="14"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

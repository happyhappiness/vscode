<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_707_collectd-4.10.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">conn_read<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">void<pos:position pos:line="1" pos:column="27"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="28"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">status<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">buffer<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">buffer_len<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt><empty_stmt pos:line="5" pos:column="21">;<pos:position pos:line="5" pos:column="22"/></empty_stmt>

  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">xinpgen<pos:position pos:line="7" pos:column="17"/></name></name> <modifier pos:line="7" pos:column="18">*<pos:position pos:line="7" pos:column="19"/></modifier></type><name pos:line="7" pos:column="19">in_orig<pos:position pos:line="7" pos:column="26"/></name></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">xinpgen<pos:position pos:line="8" pos:column="17"/></name></name> <modifier pos:line="8" pos:column="18">*<pos:position pos:line="8" pos:column="19"/></modifier></type><name pos:line="8" pos:column="19">in_ptr<pos:position pos:line="8" pos:column="25"/></name></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="10" pos:column="3">conn_reset_port_entry<pos:position pos:line="10" pos:column="24"/></name> <argument_list pos:line="10" pos:column="25">()<pos:position pos:line="10" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="28"/></expr_stmt>

  <expr_stmt><expr><name pos:line="12" pos:column="3">buffer_len<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <literal type="number" pos:line="12" pos:column="16">0<pos:position pos:line="12" pos:column="17"/></literal></expr>;<pos:position pos:line="12" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name pos:line="13" pos:column="3">status<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">=<pos:position pos:line="13" pos:column="11"/></operator> <call><name pos:line="13" pos:column="12">sysctlbyname<pos:position pos:line="13" pos:column="24"/></name> <argument_list pos:line="13" pos:column="25">(<argument><expr><literal type="string" pos:line="13" pos:column="26">"net.inet.tcp.pcblist"<pos:position pos:line="13" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="50">NULL<pos:position pos:line="13" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="56">&amp;<pos:position pos:line="13" pos:column="61"/></operator><name pos:line="13" pos:column="57">buffer_len<pos:position pos:line="13" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="69">0<pos:position pos:line="13" pos:column="70"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="72">0<pos:position pos:line="13" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="75"/></expr_stmt>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">status<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">&lt;<pos:position pos:line="14" pos:column="18"/></operator> <literal type="number" pos:line="14" pos:column="16">0<pos:position pos:line="14" pos:column="17"/></literal></expr>)<pos:position pos:line="14" pos:column="18"/></condition><then pos:line="14" pos:column="18">
  <block pos:line="15" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">ERROR<pos:position pos:line="16" pos:column="10"/></name> <argument_list pos:line="16" pos:column="11">(<argument><expr><literal type="string" pos:line="16" pos:column="12">"tcpconns plugin: sysctlbyname failed."<pos:position pos:line="16" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="53"/></expr_stmt>
    <return pos:line="17" pos:column="5">return <expr><operator pos:line="17" pos:column="12">(<pos:position pos:line="17" pos:column="13"/></operator><operator pos:line="17" pos:column="13">-<pos:position pos:line="17" pos:column="14"/></operator><literal type="number" pos:line="17" pos:column="14">1<pos:position pos:line="17" pos:column="15"/></literal><operator pos:line="17" pos:column="15">)<pos:position pos:line="17" pos:column="16"/></operator></expr>;<pos:position pos:line="17" pos:column="17"/></return>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="20" pos:column="3">buffer<pos:position pos:line="20" pos:column="9"/></name> <operator pos:line="20" pos:column="10">=<pos:position pos:line="20" pos:column="11"/></operator> <operator pos:line="20" pos:column="12">(<pos:position pos:line="20" pos:column="13"/></operator><name pos:line="20" pos:column="13">char<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">*<pos:position pos:line="20" pos:column="19"/></operator><operator pos:line="20" pos:column="19">)<pos:position pos:line="20" pos:column="20"/></operator> <call><name pos:line="20" pos:column="21">malloc<pos:position pos:line="20" pos:column="27"/></name> <argument_list pos:line="20" pos:column="28">(<argument><expr><name pos:line="20" pos:column="29">buffer_len<pos:position pos:line="20" pos:column="39"/></name></expr></argument>)<pos:position pos:line="20" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="41"/></expr_stmt>
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><name pos:line="21" pos:column="7">buffer<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">==<pos:position pos:line="21" pos:column="16"/></operator> <name pos:line="21" pos:column="17">NULL<pos:position pos:line="21" pos:column="21"/></name></expr>)<pos:position pos:line="21" pos:column="22"/></condition><then pos:line="21" pos:column="22">
  <block pos:line="22" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">ERROR<pos:position pos:line="23" pos:column="10"/></name> <argument_list pos:line="23" pos:column="11">(<argument><expr><literal type="string" pos:line="23" pos:column="12">"tcpconns plugin: malloc failed."<pos:position pos:line="23" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="47"/></expr_stmt>
    <return pos:line="24" pos:column="5">return <expr><operator pos:line="24" pos:column="12">(<pos:position pos:line="24" pos:column="13"/></operator><operator pos:line="24" pos:column="13">-<pos:position pos:line="24" pos:column="14"/></operator><literal type="number" pos:line="24" pos:column="14">1<pos:position pos:line="24" pos:column="15"/></literal><operator pos:line="24" pos:column="15">)<pos:position pos:line="24" pos:column="16"/></operator></expr>;<pos:position pos:line="24" pos:column="17"/></return>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="27" pos:column="3">status<pos:position pos:line="27" pos:column="9"/></name> <operator pos:line="27" pos:column="10">=<pos:position pos:line="27" pos:column="11"/></operator> <call><name pos:line="27" pos:column="12">sysctlbyname<pos:position pos:line="27" pos:column="24"/></name> <argument_list pos:line="27" pos:column="25">(<argument><expr><literal type="string" pos:line="27" pos:column="26">"net.inet.tcp.pcblist"<pos:position pos:line="27" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="50">buffer<pos:position pos:line="27" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="58">&amp;<pos:position pos:line="27" pos:column="63"/></operator><name pos:line="27" pos:column="59">buffer_len<pos:position pos:line="27" pos:column="69"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="71">0<pos:position pos:line="27" pos:column="72"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="74">0<pos:position pos:line="27" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="77"/></expr_stmt>
  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name pos:line="28" pos:column="7">status<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">&lt;<pos:position pos:line="28" pos:column="18"/></operator> <literal type="number" pos:line="28" pos:column="16">0<pos:position pos:line="28" pos:column="17"/></literal></expr>)<pos:position pos:line="28" pos:column="18"/></condition><then pos:line="28" pos:column="18">
  <block pos:line="29" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">ERROR<pos:position pos:line="30" pos:column="10"/></name> <argument_list pos:line="30" pos:column="11">(<argument><expr><literal type="string" pos:line="30" pos:column="12">"tcpconns plugin: sysctlbyname failed."<pos:position pos:line="30" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">sfree<pos:position pos:line="31" pos:column="10"/></name> <argument_list pos:line="31" pos:column="11">(<argument><expr><name pos:line="31" pos:column="12">buffer<pos:position pos:line="31" pos:column="18"/></name></expr></argument>)<pos:position pos:line="31" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="20"/></expr_stmt>
    <return pos:line="32" pos:column="5">return <expr><operator pos:line="32" pos:column="12">(<pos:position pos:line="32" pos:column="13"/></operator><operator pos:line="32" pos:column="13">-<pos:position pos:line="32" pos:column="14"/></operator><literal type="number" pos:line="32" pos:column="14">1<pos:position pos:line="32" pos:column="15"/></literal><operator pos:line="32" pos:column="15">)<pos:position pos:line="32" pos:column="16"/></operator></expr>;<pos:position pos:line="32" pos:column="17"/></return>
  }<pos:position pos:line="33" pos:column="4"/></block></then></if>

  <if pos:line="35" pos:column="3">if <condition pos:line="35" pos:column="6">(<expr><name pos:line="35" pos:column="7">buffer_len<pos:position pos:line="35" pos:column="17"/></name> <operator pos:line="35" pos:column="18">&lt;=<pos:position pos:line="35" pos:column="23"/></operator> <sizeof pos:line="35" pos:column="21">sizeof <argument_list pos:line="35" pos:column="28">(<argument><expr pos:line="35" pos:column="29">struct <name pos:line="35" pos:column="36">xinpgen<pos:position pos:line="35" pos:column="43"/></name></expr></argument>)<pos:position pos:line="35" pos:column="44"/></argument_list></sizeof></expr>)<pos:position pos:line="35" pos:column="45"/></condition><then pos:line="35" pos:column="45">
  <block pos:line="36" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">ERROR<pos:position pos:line="37" pos:column="10"/></name> <argument_list pos:line="37" pos:column="11">(<argument><expr><literal type="string" pos:line="37" pos:column="12">"tcpconns plugin: (buffer_len &lt;= sizeof (struct xinpgen))"<pos:position pos:line="37" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">sfree<pos:position pos:line="38" pos:column="10"/></name> <argument_list pos:line="38" pos:column="11">(<argument><expr><name pos:line="38" pos:column="12">buffer<pos:position pos:line="38" pos:column="18"/></name></expr></argument>)<pos:position pos:line="38" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="20"/></expr_stmt>
    <return pos:line="39" pos:column="5">return <expr><operator pos:line="39" pos:column="12">(<pos:position pos:line="39" pos:column="13"/></operator><operator pos:line="39" pos:column="13">-<pos:position pos:line="39" pos:column="14"/></operator><literal type="number" pos:line="39" pos:column="14">1<pos:position pos:line="39" pos:column="15"/></literal><operator pos:line="39" pos:column="15">)<pos:position pos:line="39" pos:column="16"/></operator></expr>;<pos:position pos:line="39" pos:column="17"/></return>
  }<pos:position pos:line="40" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="42" pos:column="3">in_orig<pos:position pos:line="42" pos:column="10"/></name> <operator pos:line="42" pos:column="11">=<pos:position pos:line="42" pos:column="12"/></operator> <operator pos:line="42" pos:column="13">(<pos:position pos:line="42" pos:column="14"/></operator>struct <name pos:line="42" pos:column="21">xinpgen<pos:position pos:line="42" pos:column="28"/></name> <operator pos:line="42" pos:column="29">*<pos:position pos:line="42" pos:column="30"/></operator><operator pos:line="42" pos:column="30">)<pos:position pos:line="42" pos:column="31"/></operator> <name pos:line="42" pos:column="32">buffer<pos:position pos:line="42" pos:column="38"/></name></expr>;<pos:position pos:line="42" pos:column="39"/></expr_stmt>
  <for pos:line="43" pos:column="3">for <control pos:line="43" pos:column="7">(<init><expr><name pos:line="43" pos:column="8">in_ptr<pos:position pos:line="43" pos:column="14"/></name> <operator pos:line="43" pos:column="15">=<pos:position pos:line="43" pos:column="16"/></operator> <operator pos:line="43" pos:column="17">(<pos:position pos:line="43" pos:column="18"/></operator>struct <name pos:line="43" pos:column="25">xinpgen<pos:position pos:line="43" pos:column="32"/></name> <operator pos:line="43" pos:column="33">*<pos:position pos:line="43" pos:column="34"/></operator><operator pos:line="43" pos:column="34">)<pos:position pos:line="43" pos:column="35"/></operator> <operator pos:line="43" pos:column="36">(<pos:position pos:line="43" pos:column="37"/></operator><operator pos:line="43" pos:column="37">(<pos:position pos:line="43" pos:column="38"/></operator><operator pos:line="43" pos:column="38">(<pos:position pos:line="43" pos:column="39"/></operator><name pos:line="43" pos:column="39">char<pos:position pos:line="43" pos:column="43"/></name> <operator pos:line="43" pos:column="44">*<pos:position pos:line="43" pos:column="45"/></operator><operator pos:line="43" pos:column="45">)<pos:position pos:line="43" pos:column="46"/></operator> <name pos:line="43" pos:column="47">in_orig<pos:position pos:line="43" pos:column="54"/></name><operator pos:line="43" pos:column="54">)<pos:position pos:line="43" pos:column="55"/></operator> <operator pos:line="43" pos:column="56">+<pos:position pos:line="43" pos:column="57"/></operator> <name><name pos:line="43" pos:column="58">in_orig<pos:position pos:line="43" pos:column="65"/></name><operator pos:line="43" pos:column="65">-&gt;<pos:position pos:line="43" pos:column="70"/></operator><name pos:line="43" pos:column="67">xig_len<pos:position pos:line="43" pos:column="74"/></name></name><operator pos:line="43" pos:column="74">)<pos:position pos:line="43" pos:column="75"/></operator></expr>;<pos:position pos:line="43" pos:column="76"/></init>
      <condition><expr><name><name pos:line="44" pos:column="7">in_ptr<pos:position pos:line="44" pos:column="13"/></name><operator pos:line="44" pos:column="13">-&gt;<pos:position pos:line="44" pos:column="18"/></operator><name pos:line="44" pos:column="15">xig_len<pos:position pos:line="44" pos:column="22"/></name></name> <operator pos:line="44" pos:column="23">&gt;<pos:position pos:line="44" pos:column="27"/></operator> <sizeof pos:line="44" pos:column="25">sizeof <argument_list pos:line="44" pos:column="32">(<argument><expr pos:line="44" pos:column="33">struct <name pos:line="44" pos:column="40">xinpgen<pos:position pos:line="44" pos:column="47"/></name></expr></argument>)<pos:position pos:line="44" pos:column="48"/></argument_list></sizeof></expr>;<pos:position pos:line="44" pos:column="49"/></condition>
      <incr><expr><name pos:line="45" pos:column="7">in_ptr<pos:position pos:line="45" pos:column="13"/></name> <operator pos:line="45" pos:column="14">=<pos:position pos:line="45" pos:column="15"/></operator> <operator pos:line="45" pos:column="16">(<pos:position pos:line="45" pos:column="17"/></operator>struct <name pos:line="45" pos:column="24">xinpgen<pos:position pos:line="45" pos:column="31"/></name> <operator pos:line="45" pos:column="32">*<pos:position pos:line="45" pos:column="33"/></operator><operator pos:line="45" pos:column="33">)<pos:position pos:line="45" pos:column="34"/></operator> <operator pos:line="45" pos:column="35">(<pos:position pos:line="45" pos:column="36"/></operator><operator pos:line="45" pos:column="36">(<pos:position pos:line="45" pos:column="37"/></operator><operator pos:line="45" pos:column="37">(<pos:position pos:line="45" pos:column="38"/></operator><name pos:line="45" pos:column="38">char<pos:position pos:line="45" pos:column="42"/></name> <operator pos:line="45" pos:column="43">*<pos:position pos:line="45" pos:column="44"/></operator><operator pos:line="45" pos:column="44">)<pos:position pos:line="45" pos:column="45"/></operator> <name pos:line="45" pos:column="46">in_ptr<pos:position pos:line="45" pos:column="52"/></name><operator pos:line="45" pos:column="52">)<pos:position pos:line="45" pos:column="53"/></operator> <operator pos:line="45" pos:column="54">+<pos:position pos:line="45" pos:column="55"/></operator> <name><name pos:line="45" pos:column="56">in_ptr<pos:position pos:line="45" pos:column="62"/></name><operator pos:line="45" pos:column="62">-&gt;<pos:position pos:line="45" pos:column="67"/></operator><name pos:line="45" pos:column="64">xig_len<pos:position pos:line="45" pos:column="71"/></name></name><operator pos:line="45" pos:column="71">)<pos:position pos:line="45" pos:column="72"/></operator></expr></incr>)<pos:position pos:line="45" pos:column="73"/></control>
  <block pos:line="46" pos:column="3">{
    <decl_stmt><decl><type><name><name pos:line="47" pos:column="5">struct<pos:position pos:line="47" pos:column="11"/></name> <name pos:line="47" pos:column="12">tcpcb<pos:position pos:line="47" pos:column="17"/></name></name> <modifier pos:line="47" pos:column="18">*<pos:position pos:line="47" pos:column="19"/></modifier></type><name pos:line="47" pos:column="19">tp<pos:position pos:line="47" pos:column="21"/></name> <init pos:line="47" pos:column="22">= <expr><operator pos:line="47" pos:column="24">&amp;<pos:position pos:line="47" pos:column="29"/></operator><operator pos:line="47" pos:column="25">(<pos:position pos:line="47" pos:column="26"/></operator><operator pos:line="47" pos:column="26">(<pos:position pos:line="47" pos:column="27"/></operator>struct <name pos:line="47" pos:column="34">xtcpcb<pos:position pos:line="47" pos:column="40"/></name> <operator pos:line="47" pos:column="41">*<pos:position pos:line="47" pos:column="42"/></operator><operator pos:line="47" pos:column="42">)<pos:position pos:line="47" pos:column="43"/></operator> <name pos:line="47" pos:column="44">in_ptr<pos:position pos:line="47" pos:column="50"/></name><operator pos:line="47" pos:column="50">)<pos:position pos:line="47" pos:column="51"/></operator><operator pos:line="47" pos:column="51">-&gt;<pos:position pos:line="47" pos:column="56"/></operator><name pos:line="47" pos:column="53">xt_tp<pos:position pos:line="47" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="47" pos:column="59"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="48" pos:column="5">struct<pos:position pos:line="48" pos:column="11"/></name> <name pos:line="48" pos:column="12">inpcb<pos:position pos:line="48" pos:column="17"/></name></name> <modifier pos:line="48" pos:column="18">*<pos:position pos:line="48" pos:column="19"/></modifier></type><name pos:line="48" pos:column="19">inp<pos:position pos:line="48" pos:column="22"/></name> <init pos:line="48" pos:column="23">= <expr><operator pos:line="48" pos:column="25">&amp;<pos:position pos:line="48" pos:column="30"/></operator><operator pos:line="48" pos:column="26">(<pos:position pos:line="48" pos:column="27"/></operator><operator pos:line="48" pos:column="27">(<pos:position pos:line="48" pos:column="28"/></operator>struct <name pos:line="48" pos:column="35">xtcpcb<pos:position pos:line="48" pos:column="41"/></name> <operator pos:line="48" pos:column="42">*<pos:position pos:line="48" pos:column="43"/></operator><operator pos:line="48" pos:column="43">)<pos:position pos:line="48" pos:column="44"/></operator> <name pos:line="48" pos:column="45">in_ptr<pos:position pos:line="48" pos:column="51"/></name><operator pos:line="48" pos:column="51">)<pos:position pos:line="48" pos:column="52"/></operator><operator pos:line="48" pos:column="52">-&gt;<pos:position pos:line="48" pos:column="57"/></operator><name pos:line="48" pos:column="54">xt_inp<pos:position pos:line="48" pos:column="60"/></name></expr></init></decl>;<pos:position pos:line="48" pos:column="61"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="49" pos:column="5">struct<pos:position pos:line="49" pos:column="11"/></name> <name pos:line="49" pos:column="12">xsocket<pos:position pos:line="49" pos:column="19"/></name></name> <modifier pos:line="49" pos:column="20">*<pos:position pos:line="49" pos:column="21"/></modifier></type><name pos:line="49" pos:column="21">so<pos:position pos:line="49" pos:column="23"/></name> <init pos:line="49" pos:column="24">= <expr><operator pos:line="49" pos:column="26">&amp;<pos:position pos:line="49" pos:column="31"/></operator><operator pos:line="49" pos:column="27">(<pos:position pos:line="49" pos:column="28"/></operator><operator pos:line="49" pos:column="28">(<pos:position pos:line="49" pos:column="29"/></operator>struct <name pos:line="49" pos:column="36">xtcpcb<pos:position pos:line="49" pos:column="42"/></name> <operator pos:line="49" pos:column="43">*<pos:position pos:line="49" pos:column="44"/></operator><operator pos:line="49" pos:column="44">)<pos:position pos:line="49" pos:column="45"/></operator> <name pos:line="49" pos:column="46">in_ptr<pos:position pos:line="49" pos:column="52"/></name><operator pos:line="49" pos:column="52">)<pos:position pos:line="49" pos:column="53"/></operator><operator pos:line="49" pos:column="53">-&gt;<pos:position pos:line="49" pos:column="58"/></operator><name pos:line="49" pos:column="55">xt_socket<pos:position pos:line="49" pos:column="64"/></name></expr></init></decl>;<pos:position pos:line="49" pos:column="65"/></decl_stmt>

    <comment type="block" pos:line="51" pos:column="5">/* Ignore non-TCP sockets */</comment>
    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><name><name pos:line="52" pos:column="9">so<pos:position pos:line="52" pos:column="11"/></name><operator pos:line="52" pos:column="11">-&gt;<pos:position pos:line="52" pos:column="16"/></operator><name pos:line="52" pos:column="13">xso_protocol<pos:position pos:line="52" pos:column="25"/></name></name> <operator pos:line="52" pos:column="26">!=<pos:position pos:line="52" pos:column="28"/></operator> <name pos:line="52" pos:column="29">IPPROTO_TCP<pos:position pos:line="52" pos:column="40"/></name></expr>)<pos:position pos:line="52" pos:column="41"/></condition><then pos:line="52" pos:column="41">
      <block type="pseudo"><continue pos:line="53" pos:column="7">continue;<pos:position pos:line="53" pos:column="16"/></continue></block></then></if>

    <comment type="block" pos:line="55" pos:column="5">/* Ignore PCBs which were freed during copyout. */</comment>
    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><name><name pos:line="56" pos:column="9">inp<pos:position pos:line="56" pos:column="12"/></name><operator pos:line="56" pos:column="12">-&gt;<pos:position pos:line="56" pos:column="17"/></operator><name pos:line="56" pos:column="14">inp_gencnt<pos:position pos:line="56" pos:column="24"/></name></name> <operator pos:line="56" pos:column="25">&gt;<pos:position pos:line="56" pos:column="29"/></operator> <name><name pos:line="56" pos:column="27">in_orig<pos:position pos:line="56" pos:column="34"/></name><operator pos:line="56" pos:column="34">-&gt;<pos:position pos:line="56" pos:column="39"/></operator><name pos:line="56" pos:column="36">xig_gen<pos:position pos:line="56" pos:column="43"/></name></name></expr>)<pos:position pos:line="56" pos:column="44"/></condition><then pos:line="56" pos:column="44">
      <block type="pseudo"><continue pos:line="57" pos:column="7">continue;<pos:position pos:line="57" pos:column="16"/></continue></block></then></if>

    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><operator pos:line="59" pos:column="9">(<pos:position pos:line="59" pos:column="10"/></operator><operator pos:line="59" pos:column="10">(<pos:position pos:line="59" pos:column="11"/></operator><name><name pos:line="59" pos:column="11">inp<pos:position pos:line="59" pos:column="14"/></name><operator pos:line="59" pos:column="14">-&gt;<pos:position pos:line="59" pos:column="19"/></operator><name pos:line="59" pos:column="16">inp_vflag<pos:position pos:line="59" pos:column="25"/></name></name> <operator pos:line="59" pos:column="26">&amp;<pos:position pos:line="59" pos:column="31"/></operator> <name pos:line="59" pos:column="28">INP_IPV4<pos:position pos:line="59" pos:column="36"/></name><operator pos:line="59" pos:column="36">)<pos:position pos:line="59" pos:column="37"/></operator> <operator pos:line="59" pos:column="38">==<pos:position pos:line="59" pos:column="40"/></operator> <literal type="number" pos:line="59" pos:column="41">0<pos:position pos:line="59" pos:column="42"/></literal><operator pos:line="59" pos:column="42">)<pos:position pos:line="59" pos:column="43"/></operator>
	<operator pos:line="60" pos:column="9">&amp;&amp;<pos:position pos:line="60" pos:column="19"/></operator> <operator pos:line="60" pos:column="12">(<pos:position pos:line="60" pos:column="13"/></operator><operator pos:line="60" pos:column="13">(<pos:position pos:line="60" pos:column="14"/></operator><name><name pos:line="60" pos:column="14">inp<pos:position pos:line="60" pos:column="17"/></name><operator pos:line="60" pos:column="17">-&gt;<pos:position pos:line="60" pos:column="22"/></operator><name pos:line="60" pos:column="19">inp_vflag<pos:position pos:line="60" pos:column="28"/></name></name> <operator pos:line="60" pos:column="29">&amp;<pos:position pos:line="60" pos:column="34"/></operator> <name pos:line="60" pos:column="31">INP_IPV6<pos:position pos:line="60" pos:column="39"/></name><operator pos:line="60" pos:column="39">)<pos:position pos:line="60" pos:column="40"/></operator> <operator pos:line="60" pos:column="41">==<pos:position pos:line="60" pos:column="43"/></operator> <literal type="number" pos:line="60" pos:column="44">0<pos:position pos:line="60" pos:column="45"/></literal><operator pos:line="60" pos:column="45">)<pos:position pos:line="60" pos:column="46"/></operator></expr>)<pos:position pos:line="60" pos:column="47"/></condition><then pos:line="60" pos:column="47">
      <block type="pseudo"><continue pos:line="61" pos:column="7">continue;<pos:position pos:line="61" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><call><name pos:line="63" pos:column="5">conn_handle_ports<pos:position pos:line="63" pos:column="22"/></name> <argument_list pos:line="63" pos:column="23">(<argument><expr><call><name pos:line="63" pos:column="24">ntohs<pos:position pos:line="63" pos:column="29"/></name> <argument_list pos:line="63" pos:column="30">(<argument><expr><name><name pos:line="63" pos:column="31">inp<pos:position pos:line="63" pos:column="34"/></name><operator pos:line="63" pos:column="34">-&gt;<pos:position pos:line="63" pos:column="39"/></operator><name pos:line="63" pos:column="36">inp_lport<pos:position pos:line="63" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="63" pos:column="48">ntohs<pos:position pos:line="63" pos:column="53"/></name> <argument_list pos:line="63" pos:column="54">(<argument><expr><name><name pos:line="63" pos:column="55">inp<pos:position pos:line="63" pos:column="58"/></name><operator pos:line="63" pos:column="58">-&gt;<pos:position pos:line="63" pos:column="63"/></operator><name pos:line="63" pos:column="60">inp_fport<pos:position pos:line="63" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="70"/></argument_list></call></expr></argument>,
	<argument><expr><name><name pos:line="64" pos:column="9">tp<pos:position pos:line="64" pos:column="11"/></name><operator pos:line="64" pos:column="11">-&gt;<pos:position pos:line="64" pos:column="16"/></operator><name pos:line="64" pos:column="13">t_state<pos:position pos:line="64" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="65" pos:column="4"/></block></for> <comment type="block" pos:line="65" pos:column="5">/* for (in_ptr) */</comment>

  <expr_stmt><expr><name pos:line="67" pos:column="3">in_orig<pos:position pos:line="67" pos:column="10"/></name> <operator pos:line="67" pos:column="11">=<pos:position pos:line="67" pos:column="12"/></operator> <name pos:line="67" pos:column="13">NULL<pos:position pos:line="67" pos:column="17"/></name></expr>;<pos:position pos:line="67" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name pos:line="68" pos:column="3">in_ptr<pos:position pos:line="68" pos:column="9"/></name> <operator pos:line="68" pos:column="10">=<pos:position pos:line="68" pos:column="11"/></operator> <name pos:line="68" pos:column="12">NULL<pos:position pos:line="68" pos:column="16"/></name></expr>;<pos:position pos:line="68" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="69" pos:column="3">sfree<pos:position pos:line="69" pos:column="8"/></name> <argument_list pos:line="69" pos:column="9">(<argument><expr><name pos:line="69" pos:column="10">buffer<pos:position pos:line="69" pos:column="16"/></name></expr></argument>)<pos:position pos:line="69" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="18"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="71" pos:column="3">conn_submit_all<pos:position pos:line="71" pos:column="18"/></name> <argument_list pos:line="71" pos:column="19">()<pos:position pos:line="71" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="22"/></expr_stmt>

  <return pos:line="73" pos:column="3">return <expr><operator pos:line="73" pos:column="10">(<pos:position pos:line="73" pos:column="11"/></operator><literal type="number" pos:line="73" pos:column="11">0<pos:position pos:line="73" pos:column="12"/></literal><operator pos:line="73" pos:column="12">)<pos:position pos:line="73" pos:column="13"/></operator></expr>;<pos:position pos:line="73" pos:column="14"/></return>
}<pos:position pos:line="74" pos:column="2"/></block></function></unit>

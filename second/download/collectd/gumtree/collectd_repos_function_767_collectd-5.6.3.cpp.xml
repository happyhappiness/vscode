<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_767_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">redis_handle_info<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">node<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">info_line<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="2" pos:column="30">char<pos:position pos:line="2" pos:column="34"/></name> <specifier pos:line="2" pos:column="35">const<pos:position pos:line="2" pos:column="40"/></specifier> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">type<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">char<pos:position pos:line="2" pos:column="52"/></name> <specifier pos:line="2" pos:column="53">const<pos:position pos:line="2" pos:column="58"/></specifier> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">type_instance<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="3" pos:column="30">char<pos:position pos:line="3" pos:column="34"/></name> <specifier pos:line="3" pos:column="35">const<pos:position pos:line="3" pos:column="40"/></specifier> <modifier pos:line="3" pos:column="41">*<pos:position pos:line="3" pos:column="42"/></modifier></type><name pos:line="3" pos:column="42">field_name<pos:position pos:line="3" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="54">int<pos:position pos:line="3" pos:column="57"/></name></type> <name pos:line="3" pos:column="58">ds_type<pos:position pos:line="3" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="66"/></parameter_list> <comment type="block" pos:line="3" pos:column="67">/* {{{ */</comment>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">str<pos:position pos:line="5" pos:column="12"/></name> <init pos:line="5" pos:column="13">= <expr><call><name pos:line="5" pos:column="15">strstr<pos:position pos:line="5" pos:column="21"/></name><argument_list pos:line="5" pos:column="21">(<argument><expr><name pos:line="5" pos:column="22">info_line<pos:position pos:line="5" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="33">field_name<pos:position pos:line="5" pos:column="43"/></name></expr></argument>)<pos:position pos:line="5" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="6" pos:column="3">static<pos:position pos:line="6" pos:column="9"/></specifier> <type><name pos:line="6" pos:column="10">char<pos:position pos:line="6" pos:column="14"/></name></type> <name><name pos:line="6" pos:column="15">buf<pos:position pos:line="6" pos:column="18"/></name><index pos:line="6" pos:column="18">[<expr><name pos:line="6" pos:column="19">MAX_REDIS_VAL_SIZE<pos:position pos:line="6" pos:column="37"/></name></expr>]<pos:position pos:line="6" pos:column="38"/></index></name></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">value_t<pos:position pos:line="7" pos:column="10"/></name></type> <name pos:line="7" pos:column="11">val<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">str<pos:position pos:line="8" pos:column="10"/></name></expr>)<pos:position pos:line="8" pos:column="11"/></condition><then pos:line="8" pos:column="11"> <block pos:line="8" pos:column="12">{
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">i<pos:position pos:line="9" pos:column="10"/></name></decl>;<pos:position pos:line="9" pos:column="11"/></decl_stmt>

    <expr_stmt><expr><name pos:line="11" pos:column="5">str<pos:position pos:line="11" pos:column="8"/></name> <operator pos:line="11" pos:column="9">+=<pos:position pos:line="11" pos:column="11"/></operator> <call><name pos:line="11" pos:column="12">strlen<pos:position pos:line="11" pos:column="18"/></name><argument_list pos:line="11" pos:column="18">(<argument><expr><name pos:line="11" pos:column="19">field_name<pos:position pos:line="11" pos:column="29"/></name></expr></argument>)<pos:position pos:line="11" pos:column="30"/></argument_list></call> <operator pos:line="11" pos:column="31">+<pos:position pos:line="11" pos:column="32"/></operator> <literal type="number" pos:line="11" pos:column="33">1<pos:position pos:line="11" pos:column="34"/></literal></expr>;<pos:position pos:line="11" pos:column="35"/></expr_stmt> <comment type="block" pos:line="11" pos:column="36">/* also skip the ':' */</comment>
    <for pos:line="12" pos:column="5">for <control pos:line="12" pos:column="9">(<init><expr><name pos:line="12" pos:column="10">i<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <literal type="number" pos:line="12" pos:column="14">0<pos:position pos:line="12" pos:column="15"/></literal></expr>;<pos:position pos:line="12" pos:column="16"/></init> <condition><expr><operator pos:line="12" pos:column="17">(<pos:position pos:line="12" pos:column="18"/></operator><operator pos:line="12" pos:column="18">*<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="19">str<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">&amp;&amp;<pos:position pos:line="12" pos:column="33"/></operator> <operator pos:line="12" pos:column="26">(<pos:position pos:line="12" pos:column="27"/></operator><call><name pos:line="12" pos:column="27">isdigit<pos:position pos:line="12" pos:column="34"/></name><argument_list pos:line="12" pos:column="34">(<argument><expr><operator pos:line="12" pos:column="35">(<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="36">unsigned<pos:position pos:line="12" pos:column="44"/></name> <name pos:line="12" pos:column="45">char<pos:position pos:line="12" pos:column="49"/></name><operator pos:line="12" pos:column="49">)<pos:position pos:line="12" pos:column="50"/></operator><operator pos:line="12" pos:column="50">*<pos:position pos:line="12" pos:column="51"/></operator><name pos:line="12" pos:column="51">str<pos:position pos:line="12" pos:column="54"/></name></expr></argument>)<pos:position pos:line="12" pos:column="55"/></argument_list></call> <operator pos:line="12" pos:column="56">||<pos:position pos:line="12" pos:column="58"/></operator> <operator pos:line="12" pos:column="59">*<pos:position pos:line="12" pos:column="60"/></operator><name pos:line="12" pos:column="60">str<pos:position pos:line="12" pos:column="63"/></name> <operator pos:line="12" pos:column="64">==<pos:position pos:line="12" pos:column="66"/></operator> <literal type="char" pos:line="12" pos:column="67">'.'<pos:position pos:line="12" pos:column="70"/></literal><operator pos:line="12" pos:column="70">)<pos:position pos:line="12" pos:column="71"/></operator><operator pos:line="12" pos:column="71">)<pos:position pos:line="12" pos:column="72"/></operator></expr>;<pos:position pos:line="12" pos:column="73"/></condition>
         <incr><expr><name pos:line="13" pos:column="10">i<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">++<pos:position pos:line="13" pos:column="13"/></operator></expr><operator pos:line="13" pos:column="13">,<pos:position pos:line="13" pos:column="14"/></operator> <expr><name pos:line="13" pos:column="15">str<pos:position pos:line="13" pos:column="18"/></name><operator pos:line="13" pos:column="18">++<pos:position pos:line="13" pos:column="20"/></operator></expr></incr>)<pos:position pos:line="13" pos:column="21"/></control>
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="14" pos:column="7">buf<pos:position pos:line="14" pos:column="10"/></name><index pos:line="14" pos:column="10">[<expr><name pos:line="14" pos:column="11">i<pos:position pos:line="14" pos:column="12"/></name></expr>]<pos:position pos:line="14" pos:column="13"/></index></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <operator pos:line="14" pos:column="16">*<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="17">str<pos:position pos:line="14" pos:column="20"/></name></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt></block></for>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">buf<pos:position pos:line="15" pos:column="8"/></name><index pos:line="15" pos:column="8">[<expr><name pos:line="15" pos:column="9">i<pos:position pos:line="15" pos:column="10"/></name></expr>]<pos:position pos:line="15" pos:column="11"/></index></name> <operator pos:line="15" pos:column="12">=<pos:position pos:line="15" pos:column="13"/></operator> <literal type="char" pos:line="15" pos:column="14">'\0'<pos:position pos:line="15" pos:column="18"/></literal></expr>;<pos:position pos:line="15" pos:column="19"/></expr_stmt>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><call><name pos:line="17" pos:column="9">parse_value<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><name pos:line="17" pos:column="21">buf<pos:position pos:line="17" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="26">&amp;<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="27">val<pos:position pos:line="17" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="32">ds_type<pos:position pos:line="17" pos:column="39"/></name></expr></argument>)<pos:position pos:line="17" pos:column="40"/></argument_list></call> <operator pos:line="17" pos:column="41">==<pos:position pos:line="17" pos:column="43"/></operator> <operator pos:line="17" pos:column="44">-<pos:position pos:line="17" pos:column="45"/></operator><literal type="number" pos:line="17" pos:column="45">1<pos:position pos:line="17" pos:column="46"/></literal></expr>)<pos:position pos:line="17" pos:column="47"/></condition><then pos:line="17" pos:column="47"> <block pos:line="17" pos:column="48">{
      <expr_stmt><expr><call><name pos:line="18" pos:column="7">WARNING<pos:position pos:line="18" pos:column="14"/></name><argument_list pos:line="18" pos:column="14">(<argument><expr><literal type="string" pos:line="18" pos:column="15">"redis plugin: Unable to parse field `%s'."<pos:position pos:line="18" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="60">field_name<pos:position pos:line="18" pos:column="70"/></name></expr></argument>)<pos:position pos:line="18" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="72"/></expr_stmt>
      <return pos:line="19" pos:column="7">return <expr><operator pos:line="19" pos:column="14">(<pos:position pos:line="19" pos:column="15"/></operator><operator pos:line="19" pos:column="15">-<pos:position pos:line="19" pos:column="16"/></operator><literal type="number" pos:line="19" pos:column="16">1<pos:position pos:line="19" pos:column="17"/></literal><operator pos:line="19" pos:column="17">)<pos:position pos:line="19" pos:column="18"/></operator></expr>;<pos:position pos:line="19" pos:column="19"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="22" pos:column="5">redis_submit<pos:position pos:line="22" pos:column="17"/></name><argument_list pos:line="22" pos:column="17">(<argument><expr><name pos:line="22" pos:column="18">node<pos:position pos:line="22" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="24">type<pos:position pos:line="22" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="30">type_instance<pos:position pos:line="22" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="45">val<pos:position pos:line="22" pos:column="48"/></name></expr></argument>)<pos:position pos:line="22" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="50"/></expr_stmt>
    <return pos:line="23" pos:column="5">return <expr><operator pos:line="23" pos:column="12">(<pos:position pos:line="23" pos:column="13"/></operator><literal type="number" pos:line="23" pos:column="13">0<pos:position pos:line="23" pos:column="14"/></literal><operator pos:line="23" pos:column="14">)<pos:position pos:line="23" pos:column="15"/></operator></expr>;<pos:position pos:line="23" pos:column="16"/></return>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>
  <return pos:line="25" pos:column="3">return <expr><operator pos:line="25" pos:column="10">(<pos:position pos:line="25" pos:column="11"/></operator><operator pos:line="25" pos:column="11">-<pos:position pos:line="25" pos:column="12"/></operator><literal type="number" pos:line="25" pos:column="12">1<pos:position pos:line="25" pos:column="13"/></literal><operator pos:line="25" pos:column="13">)<pos:position pos:line="25" pos:column="14"/></operator></expr>;<pos:position pos:line="25" pos:column="15"/></return>

}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_87_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">vcpu_pin_submit<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">virDomainPtr<pos:position pos:line="1" pos:column="41"/></name></type> <name pos:line="1" pos:column="42">dom<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">int<pos:position pos:line="1" pos:column="50"/></name></type> <name pos:line="1" pos:column="51">max_cpus<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">int<pos:position pos:line="1" pos:column="64"/></name></type> <name pos:line="1" pos:column="65">vcpu<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
                            <parameter><decl><type><name pos:line="2" pos:column="29">unsigned<pos:position pos:line="2" pos:column="37"/></name> <name pos:line="2" pos:column="38">char<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">cpu_maps<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="54">int<pos:position pos:line="2" pos:column="57"/></name></type> <name pos:line="2" pos:column="58">cpu_map_len<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="70"/></parameter_list> <block pos:line="2" pos:column="71">{
  <for pos:line="3" pos:column="3">for <control pos:line="3" pos:column="7">(<init><decl><type><name pos:line="3" pos:column="8">int<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">cpu<pos:position pos:line="3" pos:column="15"/></name> <init pos:line="3" pos:column="16">= <expr><literal type="number" pos:line="3" pos:column="18">0<pos:position pos:line="3" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="20"/></init> <condition><expr><name pos:line="3" pos:column="21">cpu<pos:position pos:line="3" pos:column="24"/></name> <operator pos:line="3" pos:column="25">&lt;<pos:position pos:line="3" pos:column="29"/></operator> <name pos:line="3" pos:column="27">max_cpus<pos:position pos:line="3" pos:column="35"/></name></expr>;<pos:position pos:line="3" pos:column="36"/></condition> <incr><expr><operator pos:line="3" pos:column="37">++<pos:position pos:line="3" pos:column="39"/></operator><name pos:line="3" pos:column="39">cpu<pos:position pos:line="3" pos:column="42"/></name></expr></incr>)<pos:position pos:line="3" pos:column="43"/></control> <block pos:line="3" pos:column="44">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">type_instance<pos:position pos:line="4" pos:column="23"/></name><index pos:line="4" pos:column="23">[<expr><name pos:line="4" pos:column="24">DATA_MAX_NAME_LEN<pos:position pos:line="4" pos:column="41"/></name></expr>]<pos:position pos:line="4" pos:column="42"/></index></name></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">_Bool<pos:position pos:line="5" pos:column="10"/></name></type> <name pos:line="5" pos:column="11">is_set<pos:position pos:line="5" pos:column="17"/></name> <init pos:line="5" pos:column="18">= <expr><ternary><condition><expr><call><name pos:line="5" pos:column="20">VIR_CPU_USABLE<pos:position pos:line="5" pos:column="34"/></name><argument_list pos:line="5" pos:column="34">(<argument><expr><name pos:line="5" pos:column="35">cpu_maps<pos:position pos:line="5" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="45">cpu_map_len<pos:position pos:line="5" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="58">vcpu<pos:position pos:line="5" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="64">cpu<pos:position pos:line="5" pos:column="67"/></name></expr></argument>)<pos:position pos:line="5" pos:column="68"/></argument_list></call></expr> ?<pos:position pos:line="5" pos:column="70"/></condition><then pos:line="5" pos:column="70"> <expr><literal type="number" pos:line="5" pos:column="71">1<pos:position pos:line="5" pos:column="72"/></literal></expr> <pos:position pos:line="5" pos:column="73"/></then><else pos:line="5" pos:column="73">: <expr><literal type="number" pos:line="5" pos:column="75">0<pos:position pos:line="5" pos:column="76"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="5" pos:column="77"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">snprintf<pos:position pos:line="7" pos:column="13"/></name><argument_list pos:line="7" pos:column="13">(<argument><expr><name pos:line="7" pos:column="14">type_instance<pos:position pos:line="7" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="29">sizeof<argument_list pos:line="7" pos:column="35">(<argument><expr><name pos:line="7" pos:column="36">type_instance<pos:position pos:line="7" pos:column="49"/></name></expr></argument>)<pos:position pos:line="7" pos:column="50"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="52">"vcpu_%d-cpu_%d"<pos:position pos:line="7" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="70">vcpu<pos:position pos:line="7" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="76">cpu<pos:position pos:line="7" pos:column="79"/></name></expr></argument>)<pos:position pos:line="7" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="81"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">submit<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><name pos:line="8" pos:column="12">dom<pos:position pos:line="8" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="17">"cpu_affinity"<pos:position pos:line="8" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="33">type_instance<pos:position pos:line="8" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="48">&amp;<pos:position pos:line="8" pos:column="53"/></operator><operator pos:line="8" pos:column="49">(<pos:position pos:line="8" pos:column="50"/></operator><name pos:line="8" pos:column="50">value_t<pos:position pos:line="8" pos:column="57"/></name><operator pos:line="8" pos:column="57">)<pos:position pos:line="8" pos:column="58"/></operator><block pos:line="8" pos:column="58">{<expr><operator pos:line="8" pos:column="59">.<pos:position pos:line="8" pos:column="60"/></operator><name pos:line="8" pos:column="60">gauge<pos:position pos:line="8" pos:column="65"/></name> <operator pos:line="8" pos:column="66">=<pos:position pos:line="8" pos:column="67"/></operator> <name pos:line="8" pos:column="68">is_set<pos:position pos:line="8" pos:column="74"/></name></expr>}<pos:position pos:line="8" pos:column="75"/></block></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="77">1<pos:position pos:line="8" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="80"/></expr_stmt>
  }<pos:position pos:line="9" pos:column="4"/></block></for>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_960_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">hv2value_list<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">pTHX_<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">HV<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">hash<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">value_list_t<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">vl<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list> <block pos:line="1" pos:column="60">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">SV<pos:position pos:line="2" pos:column="5"/></name> <modifier pos:line="2" pos:column="6">*<pos:position pos:line="2" pos:column="7"/></modifier><modifier pos:line="2" pos:column="7">*<pos:position pos:line="2" pos:column="8"/></modifier></type><name pos:line="2" pos:column="8">tmp<pos:position pos:line="2" pos:column="11"/></name></decl>;<pos:position pos:line="2" pos:column="12"/></decl_stmt>

  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><operator pos:line="4" pos:column="7">(<pos:position pos:line="4" pos:column="8"/></operator><name pos:line="4" pos:column="8">NULL<pos:position pos:line="4" pos:column="12"/></name> <operator pos:line="4" pos:column="13">==<pos:position pos:line="4" pos:column="15"/></operator> <name pos:line="4" pos:column="16">hash<pos:position pos:line="4" pos:column="20"/></name><operator pos:line="4" pos:column="20">)<pos:position pos:line="4" pos:column="21"/></operator> <operator pos:line="4" pos:column="22">||<pos:position pos:line="4" pos:column="24"/></operator> <operator pos:line="4" pos:column="25">(<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="26">NULL<pos:position pos:line="4" pos:column="30"/></name> <operator pos:line="4" pos:column="31">==<pos:position pos:line="4" pos:column="33"/></operator> <name pos:line="4" pos:column="34">vl<pos:position pos:line="4" pos:column="36"/></name><operator pos:line="4" pos:column="36">)<pos:position pos:line="4" pos:column="37"/></operator></expr>)<pos:position pos:line="4" pos:column="38"/></condition><then pos:line="4" pos:column="38">
    <block type="pseudo"><return pos:line="5" pos:column="5">return <expr><operator pos:line="5" pos:column="12">-<pos:position pos:line="5" pos:column="13"/></operator><literal type="number" pos:line="5" pos:column="13">1<pos:position pos:line="5" pos:column="14"/></literal></expr>;<pos:position pos:line="5" pos:column="15"/></return></block></then></if>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">NULL<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">==<pos:position pos:line="7" pos:column="14"/></operator> <operator pos:line="7" pos:column="15">(<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="16">tmp<pos:position pos:line="7" pos:column="19"/></name> <operator pos:line="7" pos:column="20">=<pos:position pos:line="7" pos:column="21"/></operator> <call><name pos:line="7" pos:column="22">hv_fetch<pos:position pos:line="7" pos:column="30"/></name><argument_list pos:line="7" pos:column="30">(<argument><expr><name pos:line="7" pos:column="31">hash<pos:position pos:line="7" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="37">"type"<pos:position pos:line="7" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="45">4<pos:position pos:line="7" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="48">0<pos:position pos:line="7" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="50"/></argument_list></call><operator pos:line="7" pos:column="50">)<pos:position pos:line="7" pos:column="51"/></operator></expr>)<pos:position pos:line="7" pos:column="52"/></condition><then pos:line="7" pos:column="52"> <block pos:line="7" pos:column="53">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">log_err<pos:position pos:line="8" pos:column="12"/></name><argument_list pos:line="8" pos:column="12">(<argument><expr><literal type="string" pos:line="8" pos:column="13">"hv2value_list: No type given."<pos:position pos:line="8" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="46"/></expr_stmt>
    <return pos:line="9" pos:column="5">return <expr><operator pos:line="9" pos:column="12">-<pos:position pos:line="9" pos:column="13"/></operator><literal type="number" pos:line="9" pos:column="13">1<pos:position pos:line="9" pos:column="14"/></literal></expr>;<pos:position pos:line="9" pos:column="15"/></return>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="12" pos:column="3">sstrncpy<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><name><name pos:line="12" pos:column="12">vl<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">-&gt;<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="16">type<pos:position pos:line="12" pos:column="20"/></name></name></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="22">SvPV_nolen<pos:position pos:line="12" pos:column="32"/></name><argument_list pos:line="12" pos:column="32">(<argument><expr><operator pos:line="12" pos:column="33">*<pos:position pos:line="12" pos:column="34"/></operator><name pos:line="12" pos:column="34">tmp<pos:position pos:line="12" pos:column="37"/></name></expr></argument>)<pos:position pos:line="12" pos:column="38"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="40">sizeof<argument_list pos:line="12" pos:column="46">(<argument><expr><name><name pos:line="12" pos:column="47">vl<pos:position pos:line="12" pos:column="49"/></name><operator pos:line="12" pos:column="49">-&gt;<pos:position pos:line="12" pos:column="54"/></operator><name pos:line="12" pos:column="51">type<pos:position pos:line="12" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="58"/></expr_stmt>

  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><operator pos:line="14" pos:column="7">(<pos:position pos:line="14" pos:column="8"/></operator><name pos:line="14" pos:column="8">NULL<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">==<pos:position pos:line="14" pos:column="15"/></operator> <operator pos:line="14" pos:column="16">(<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="17">tmp<pos:position pos:line="14" pos:column="20"/></name> <operator pos:line="14" pos:column="21">=<pos:position pos:line="14" pos:column="22"/></operator> <call><name pos:line="14" pos:column="23">hv_fetch<pos:position pos:line="14" pos:column="31"/></name><argument_list pos:line="14" pos:column="31">(<argument><expr><name pos:line="14" pos:column="32">hash<pos:position pos:line="14" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="38">"values"<pos:position pos:line="14" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="48">6<pos:position pos:line="14" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="51">0<pos:position pos:line="14" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="53"/></argument_list></call><operator pos:line="14" pos:column="53">)<pos:position pos:line="14" pos:column="54"/></operator><operator pos:line="14" pos:column="54">)<pos:position pos:line="14" pos:column="55"/></operator> <operator pos:line="14" pos:column="56">||<pos:position pos:line="14" pos:column="58"/></operator>
      <operator pos:line="15" pos:column="7">(<pos:position pos:line="15" pos:column="8"/></operator><operator pos:line="15" pos:column="8">!<pos:position pos:line="15" pos:column="9"/></operator><operator pos:line="15" pos:column="9">(<pos:position pos:line="15" pos:column="10"/></operator><call><name pos:line="15" pos:column="10">SvROK<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><operator pos:line="15" pos:column="16">*<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="17">tmp<pos:position pos:line="15" pos:column="20"/></name></expr></argument>)<pos:position pos:line="15" pos:column="21"/></argument_list></call> <operator pos:line="15" pos:column="22">&amp;&amp;<pos:position pos:line="15" pos:column="32"/></operator> <operator pos:line="15" pos:column="25">(<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="26">SVt_PVAV<pos:position pos:line="15" pos:column="34"/></name> <operator pos:line="15" pos:column="35">==<pos:position pos:line="15" pos:column="37"/></operator> <call><name pos:line="15" pos:column="38">SvTYPE<pos:position pos:line="15" pos:column="44"/></name><argument_list pos:line="15" pos:column="44">(<argument><expr><call><name pos:line="15" pos:column="45">SvRV<pos:position pos:line="15" pos:column="49"/></name><argument_list pos:line="15" pos:column="49">(<argument><expr><operator pos:line="15" pos:column="50">*<pos:position pos:line="15" pos:column="51"/></operator><name pos:line="15" pos:column="51">tmp<pos:position pos:line="15" pos:column="54"/></name></expr></argument>)<pos:position pos:line="15" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="56"/></argument_list></call><operator pos:line="15" pos:column="56">)<pos:position pos:line="15" pos:column="57"/></operator><operator pos:line="15" pos:column="57">)<pos:position pos:line="15" pos:column="58"/></operator><operator pos:line="15" pos:column="58">)<pos:position pos:line="15" pos:column="59"/></operator></expr>)<pos:position pos:line="15" pos:column="60"/></condition><then pos:line="15" pos:column="60"> <block pos:line="15" pos:column="61">{
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">log_err<pos:position pos:line="16" pos:column="12"/></name><argument_list pos:line="16" pos:column="12">(<argument><expr><literal type="string" pos:line="16" pos:column="13">"hv2value_list: No valid values given."<pos:position pos:line="16" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="54"/></expr_stmt>
    <return pos:line="17" pos:column="5">return <expr><operator pos:line="17" pos:column="12">-<pos:position pos:line="17" pos:column="13"/></operator><literal type="number" pos:line="17" pos:column="13">1<pos:position pos:line="17" pos:column="14"/></literal></expr>;<pos:position pos:line="17" pos:column="15"/></return>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>

  <block pos:line="20" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">AV<pos:position pos:line="21" pos:column="7"/></name> <modifier pos:line="21" pos:column="8">*<pos:position pos:line="21" pos:column="9"/></modifier></type><name pos:line="21" pos:column="9">array<pos:position pos:line="21" pos:column="14"/></name> <init pos:line="21" pos:column="15">= <expr><operator pos:line="21" pos:column="17">(<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="18">AV<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">*<pos:position pos:line="21" pos:column="22"/></operator><operator pos:line="21" pos:column="22">)<pos:position pos:line="21" pos:column="23"/></operator><call><name pos:line="21" pos:column="23">SvRV<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><operator pos:line="21" pos:column="28">*<pos:position pos:line="21" pos:column="29"/></operator><name pos:line="21" pos:column="29">tmp<pos:position pos:line="21" pos:column="32"/></name></expr></argument>)<pos:position pos:line="21" pos:column="33"/></argument_list></call></expr></init></decl>;<pos:position pos:line="21" pos:column="34"/></decl_stmt>
    <comment type="block" pos:line="22" pos:column="5">/* av_len returns the highest index, not the actual length. */</comment>
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">size_t<pos:position pos:line="23" pos:column="11"/></name></type> <name pos:line="23" pos:column="12">array_len<pos:position pos:line="23" pos:column="21"/></name> <init pos:line="23" pos:column="22">= <expr><call pos:line="23" pos:column="24">(<name pos:line="23" pos:column="25">size_t<pos:position pos:line="23" pos:column="31"/></name>)<argument_list pos:line="23" pos:column="32">(<argument><expr><call><name pos:line="23" pos:column="33">av_len<pos:position pos:line="23" pos:column="39"/></name><argument_list pos:line="23" pos:column="39">(<argument><expr><name pos:line="23" pos:column="40">array<pos:position pos:line="23" pos:column="45"/></name></expr></argument>)<pos:position pos:line="23" pos:column="46"/></argument_list></call> <operator pos:line="23" pos:column="47">+<pos:position pos:line="23" pos:column="48"/></operator> <literal type="number" pos:line="23" pos:column="49">1<pos:position pos:line="23" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="23" pos:column="52"/></decl_stmt>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">array_len<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">==<pos:position pos:line="24" pos:column="21"/></operator> <literal type="number" pos:line="24" pos:column="22">0<pos:position pos:line="24" pos:column="23"/></literal></expr>)<pos:position pos:line="24" pos:column="24"/></condition><then pos:line="24" pos:column="24">
      <block type="pseudo"><return pos:line="25" pos:column="7">return <expr><operator pos:line="25" pos:column="14">-<pos:position pos:line="25" pos:column="15"/></operator><literal type="number" pos:line="25" pos:column="15">1<pos:position pos:line="25" pos:column="16"/></literal></expr>;<pos:position pos:line="25" pos:column="17"/></return></block></then></if>

    <expr_stmt><expr><name><name pos:line="27" pos:column="5">vl<pos:position pos:line="27" pos:column="7"/></name><operator pos:line="27" pos:column="7">-&gt;<pos:position pos:line="27" pos:column="12"/></operator><name pos:line="27" pos:column="9">values<pos:position pos:line="27" pos:column="15"/></name></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <call><name pos:line="27" pos:column="18">calloc<pos:position pos:line="27" pos:column="24"/></name><argument_list pos:line="27" pos:column="24">(<argument><expr><name pos:line="27" pos:column="25">array_len<pos:position pos:line="27" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="36">sizeof<argument_list pos:line="27" pos:column="42">(<argument><expr><operator pos:line="27" pos:column="43">*<pos:position pos:line="27" pos:column="44"/></operator><name><name pos:line="27" pos:column="44">vl<pos:position pos:line="27" pos:column="46"/></name><operator pos:line="27" pos:column="46">-&gt;<pos:position pos:line="27" pos:column="51"/></operator><name pos:line="27" pos:column="48">values<pos:position pos:line="27" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="28" pos:column="5">vl<pos:position pos:line="28" pos:column="7"/></name><operator pos:line="28" pos:column="7">-&gt;<pos:position pos:line="28" pos:column="12"/></operator><name pos:line="28" pos:column="9">values_len<pos:position pos:line="28" pos:column="19"/></name></name> <operator pos:line="28" pos:column="20">=<pos:position pos:line="28" pos:column="21"/></operator>
        <macro><name pos:line="29" pos:column="9">av2value<pos:position pos:line="29" pos:column="17"/></name><argument_list pos:line="29" pos:column="17">(<argument pos:line="29" pos:column="18">aTHX_ vl-&gt;type<pos:position pos:line="29" pos:column="32"/></argument>, <argument pos:line="29" pos:column="34">(AV *)SvRV(*tmp)<pos:position pos:line="29" pos:column="50"/></argument>, <argument pos:line="29" pos:column="52">vl-&gt;values<pos:position pos:line="29" pos:column="62"/></argument>, <argument pos:line="29" pos:column="64">array_len<pos:position pos:line="29" pos:column="73"/></argument>)<pos:position pos:line="29" pos:column="74"/></argument_list></macro></expr>;<pos:position pos:line="29" pos:column="75"/></expr_stmt>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name><name pos:line="30" pos:column="9">vl<pos:position pos:line="30" pos:column="11"/></name><operator pos:line="30" pos:column="11">-&gt;<pos:position pos:line="30" pos:column="16"/></operator><name pos:line="30" pos:column="13">values_len<pos:position pos:line="30" pos:column="23"/></name></name> <operator pos:line="30" pos:column="24">==<pos:position pos:line="30" pos:column="26"/></operator> <literal type="number" pos:line="30" pos:column="27">0<pos:position pos:line="30" pos:column="28"/></literal></expr>)<pos:position pos:line="30" pos:column="29"/></condition><then pos:line="30" pos:column="29"> <block pos:line="30" pos:column="30">{
      <expr_stmt><expr><call><name pos:line="31" pos:column="7">sfree<pos:position pos:line="31" pos:column="12"/></name><argument_list pos:line="31" pos:column="12">(<argument><expr><name><name pos:line="31" pos:column="13">vl<pos:position pos:line="31" pos:column="15"/></name><operator pos:line="31" pos:column="15">-&gt;<pos:position pos:line="31" pos:column="20"/></operator><name pos:line="31" pos:column="17">values<pos:position pos:line="31" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="25"/></expr_stmt>
      <return pos:line="32" pos:column="7">return <expr><operator pos:line="32" pos:column="14">-<pos:position pos:line="32" pos:column="15"/></operator><literal type="number" pos:line="32" pos:column="15">1<pos:position pos:line="32" pos:column="16"/></literal></expr>;<pos:position pos:line="32" pos:column="17"/></return>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>
  }<pos:position pos:line="34" pos:column="4"/></block>

  <if pos:line="36" pos:column="3">if <condition pos:line="36" pos:column="6">(<expr><name pos:line="36" pos:column="7">NULL<pos:position pos:line="36" pos:column="11"/></name> <operator pos:line="36" pos:column="12">!=<pos:position pos:line="36" pos:column="14"/></operator> <operator pos:line="36" pos:column="15">(<pos:position pos:line="36" pos:column="16"/></operator><name pos:line="36" pos:column="16">tmp<pos:position pos:line="36" pos:column="19"/></name> <operator pos:line="36" pos:column="20">=<pos:position pos:line="36" pos:column="21"/></operator> <call><name pos:line="36" pos:column="22">hv_fetch<pos:position pos:line="36" pos:column="30"/></name><argument_list pos:line="36" pos:column="30">(<argument><expr><name pos:line="36" pos:column="31">hash<pos:position pos:line="36" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="37">"time"<pos:position pos:line="36" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="45">4<pos:position pos:line="36" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="48">0<pos:position pos:line="36" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="50"/></argument_list></call><operator pos:line="36" pos:column="50">)<pos:position pos:line="36" pos:column="51"/></operator></expr>)<pos:position pos:line="36" pos:column="52"/></condition><then pos:line="36" pos:column="52"> <block pos:line="36" pos:column="53">{
    <decl_stmt><decl><type><name pos:line="37" pos:column="5">double<pos:position pos:line="37" pos:column="11"/></name></type> <name pos:line="37" pos:column="12">t<pos:position pos:line="37" pos:column="13"/></name> <init pos:line="37" pos:column="14">= <expr><call><name pos:line="37" pos:column="16">SvNV<pos:position pos:line="37" pos:column="20"/></name><argument_list pos:line="37" pos:column="20">(<argument><expr><operator pos:line="37" pos:column="21">*<pos:position pos:line="37" pos:column="22"/></operator><name pos:line="37" pos:column="22">tmp<pos:position pos:line="37" pos:column="25"/></name></expr></argument>)<pos:position pos:line="37" pos:column="26"/></argument_list></call></expr></init></decl>;<pos:position pos:line="37" pos:column="27"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="38" pos:column="5">vl<pos:position pos:line="38" pos:column="7"/></name><operator pos:line="38" pos:column="7">-&gt;<pos:position pos:line="38" pos:column="12"/></operator><name pos:line="38" pos:column="9">time<pos:position pos:line="38" pos:column="13"/></name></name> <operator pos:line="38" pos:column="14">=<pos:position pos:line="38" pos:column="15"/></operator> <call><name pos:line="38" pos:column="16">DOUBLE_TO_CDTIME_T<pos:position pos:line="38" pos:column="34"/></name><argument_list pos:line="38" pos:column="34">(<argument><expr><name pos:line="38" pos:column="35">t<pos:position pos:line="38" pos:column="36"/></name></expr></argument>)<pos:position pos:line="38" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="38"/></expr_stmt>
  }<pos:position pos:line="39" pos:column="4"/></block></then></if>

  <if pos:line="41" pos:column="3">if <condition pos:line="41" pos:column="6">(<expr><name pos:line="41" pos:column="7">NULL<pos:position pos:line="41" pos:column="11"/></name> <operator pos:line="41" pos:column="12">!=<pos:position pos:line="41" pos:column="14"/></operator> <operator pos:line="41" pos:column="15">(<pos:position pos:line="41" pos:column="16"/></operator><name pos:line="41" pos:column="16">tmp<pos:position pos:line="41" pos:column="19"/></name> <operator pos:line="41" pos:column="20">=<pos:position pos:line="41" pos:column="21"/></operator> <call><name pos:line="41" pos:column="22">hv_fetch<pos:position pos:line="41" pos:column="30"/></name><argument_list pos:line="41" pos:column="30">(<argument><expr><name pos:line="41" pos:column="31">hash<pos:position pos:line="41" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="37">"interval"<pos:position pos:line="41" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="49">8<pos:position pos:line="41" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="52">0<pos:position pos:line="41" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="54"/></argument_list></call><operator pos:line="41" pos:column="54">)<pos:position pos:line="41" pos:column="55"/></operator></expr>)<pos:position pos:line="41" pos:column="56"/></condition><then pos:line="41" pos:column="56"> <block pos:line="41" pos:column="57">{
    <decl_stmt><decl><type><name pos:line="42" pos:column="5">double<pos:position pos:line="42" pos:column="11"/></name></type> <name pos:line="42" pos:column="12">t<pos:position pos:line="42" pos:column="13"/></name> <init pos:line="42" pos:column="14">= <expr><call><name pos:line="42" pos:column="16">SvNV<pos:position pos:line="42" pos:column="20"/></name><argument_list pos:line="42" pos:column="20">(<argument><expr><operator pos:line="42" pos:column="21">*<pos:position pos:line="42" pos:column="22"/></operator><name pos:line="42" pos:column="22">tmp<pos:position pos:line="42" pos:column="25"/></name></expr></argument>)<pos:position pos:line="42" pos:column="26"/></argument_list></call></expr></init></decl>;<pos:position pos:line="42" pos:column="27"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="43" pos:column="5">vl<pos:position pos:line="43" pos:column="7"/></name><operator pos:line="43" pos:column="7">-&gt;<pos:position pos:line="43" pos:column="12"/></operator><name pos:line="43" pos:column="9">interval<pos:position pos:line="43" pos:column="17"/></name></name> <operator pos:line="43" pos:column="18">=<pos:position pos:line="43" pos:column="19"/></operator> <call><name pos:line="43" pos:column="20">DOUBLE_TO_CDTIME_T<pos:position pos:line="43" pos:column="38"/></name><argument_list pos:line="43" pos:column="38">(<argument><expr><name pos:line="43" pos:column="39">t<pos:position pos:line="43" pos:column="40"/></name></expr></argument>)<pos:position pos:line="43" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="42"/></expr_stmt>
  }<pos:position pos:line="44" pos:column="4"/></block></then></if>

  <if pos:line="46" pos:column="3">if <condition pos:line="46" pos:column="6">(<expr><name pos:line="46" pos:column="7">NULL<pos:position pos:line="46" pos:column="11"/></name> <operator pos:line="46" pos:column="12">!=<pos:position pos:line="46" pos:column="14"/></operator> <operator pos:line="46" pos:column="15">(<pos:position pos:line="46" pos:column="16"/></operator><name pos:line="46" pos:column="16">tmp<pos:position pos:line="46" pos:column="19"/></name> <operator pos:line="46" pos:column="20">=<pos:position pos:line="46" pos:column="21"/></operator> <call><name pos:line="46" pos:column="22">hv_fetch<pos:position pos:line="46" pos:column="30"/></name><argument_list pos:line="46" pos:column="30">(<argument><expr><name pos:line="46" pos:column="31">hash<pos:position pos:line="46" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="37">"host"<pos:position pos:line="46" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="45">4<pos:position pos:line="46" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="48">0<pos:position pos:line="46" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="50"/></argument_list></call><operator pos:line="46" pos:column="50">)<pos:position pos:line="46" pos:column="51"/></operator></expr>)<pos:position pos:line="46" pos:column="52"/></condition><then pos:line="46" pos:column="52">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="5">sstrncpy<pos:position pos:line="47" pos:column="13"/></name><argument_list pos:line="47" pos:column="13">(<argument><expr><name><name pos:line="47" pos:column="14">vl<pos:position pos:line="47" pos:column="16"/></name><operator pos:line="47" pos:column="16">-&gt;<pos:position pos:line="47" pos:column="21"/></operator><name pos:line="47" pos:column="18">host<pos:position pos:line="47" pos:column="22"/></name></name></expr></argument>, <argument><expr><call><name pos:line="47" pos:column="24">SvPV_nolen<pos:position pos:line="47" pos:column="34"/></name><argument_list pos:line="47" pos:column="34">(<argument><expr><operator pos:line="47" pos:column="35">*<pos:position pos:line="47" pos:column="36"/></operator><name pos:line="47" pos:column="36">tmp<pos:position pos:line="47" pos:column="39"/></name></expr></argument>)<pos:position pos:line="47" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="47" pos:column="42">sizeof<argument_list pos:line="47" pos:column="48">(<argument><expr><name><name pos:line="47" pos:column="49">vl<pos:position pos:line="47" pos:column="51"/></name><operator pos:line="47" pos:column="51">-&gt;<pos:position pos:line="47" pos:column="56"/></operator><name pos:line="47" pos:column="53">host<pos:position pos:line="47" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="47" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="60"/></expr_stmt></block></then>
  <else pos:line="48" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="5">sstrncpy<pos:position pos:line="49" pos:column="13"/></name><argument_list pos:line="49" pos:column="13">(<argument><expr><name><name pos:line="49" pos:column="14">vl<pos:position pos:line="49" pos:column="16"/></name><operator pos:line="49" pos:column="16">-&gt;<pos:position pos:line="49" pos:column="21"/></operator><name pos:line="49" pos:column="18">host<pos:position pos:line="49" pos:column="22"/></name></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="24">hostname_g<pos:position pos:line="49" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="49" pos:column="36">sizeof<argument_list pos:line="49" pos:column="42">(<argument><expr><name><name pos:line="49" pos:column="43">vl<pos:position pos:line="49" pos:column="45"/></name><operator pos:line="49" pos:column="45">-&gt;<pos:position pos:line="49" pos:column="50"/></operator><name pos:line="49" pos:column="47">host<pos:position pos:line="49" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="49" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="54"/></expr_stmt></block></else></if>

  <if pos:line="51" pos:column="3">if <condition pos:line="51" pos:column="6">(<expr><name pos:line="51" pos:column="7">NULL<pos:position pos:line="51" pos:column="11"/></name> <operator pos:line="51" pos:column="12">!=<pos:position pos:line="51" pos:column="14"/></operator> <operator pos:line="51" pos:column="15">(<pos:position pos:line="51" pos:column="16"/></operator><name pos:line="51" pos:column="16">tmp<pos:position pos:line="51" pos:column="19"/></name> <operator pos:line="51" pos:column="20">=<pos:position pos:line="51" pos:column="21"/></operator> <call><name pos:line="51" pos:column="22">hv_fetch<pos:position pos:line="51" pos:column="30"/></name><argument_list pos:line="51" pos:column="30">(<argument><expr><name pos:line="51" pos:column="31">hash<pos:position pos:line="51" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="37">"plugin"<pos:position pos:line="51" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="47">6<pos:position pos:line="51" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="50">0<pos:position pos:line="51" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="52"/></argument_list></call><operator pos:line="51" pos:column="52">)<pos:position pos:line="51" pos:column="53"/></operator></expr>)<pos:position pos:line="51" pos:column="54"/></condition><then pos:line="51" pos:column="54">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="5">sstrncpy<pos:position pos:line="52" pos:column="13"/></name><argument_list pos:line="52" pos:column="13">(<argument><expr><name><name pos:line="52" pos:column="14">vl<pos:position pos:line="52" pos:column="16"/></name><operator pos:line="52" pos:column="16">-&gt;<pos:position pos:line="52" pos:column="21"/></operator><name pos:line="52" pos:column="18">plugin<pos:position pos:line="52" pos:column="24"/></name></name></expr></argument>, <argument><expr><call><name pos:line="52" pos:column="26">SvPV_nolen<pos:position pos:line="52" pos:column="36"/></name><argument_list pos:line="52" pos:column="36">(<argument><expr><operator pos:line="52" pos:column="37">*<pos:position pos:line="52" pos:column="38"/></operator><name pos:line="52" pos:column="38">tmp<pos:position pos:line="52" pos:column="41"/></name></expr></argument>)<pos:position pos:line="52" pos:column="42"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="52" pos:column="44">sizeof<argument_list pos:line="52" pos:column="50">(<argument><expr><name><name pos:line="52" pos:column="51">vl<pos:position pos:line="52" pos:column="53"/></name><operator pos:line="52" pos:column="53">-&gt;<pos:position pos:line="52" pos:column="58"/></operator><name pos:line="52" pos:column="55">plugin<pos:position pos:line="52" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="52" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="64"/></expr_stmt></block></then></if>

  <if pos:line="54" pos:column="3">if <condition pos:line="54" pos:column="6">(<expr><name pos:line="54" pos:column="7">NULL<pos:position pos:line="54" pos:column="11"/></name> <operator pos:line="54" pos:column="12">!=<pos:position pos:line="54" pos:column="14"/></operator> <operator pos:line="54" pos:column="15">(<pos:position pos:line="54" pos:column="16"/></operator><name pos:line="54" pos:column="16">tmp<pos:position pos:line="54" pos:column="19"/></name> <operator pos:line="54" pos:column="20">=<pos:position pos:line="54" pos:column="21"/></operator> <call><name pos:line="54" pos:column="22">hv_fetch<pos:position pos:line="54" pos:column="30"/></name><argument_list pos:line="54" pos:column="30">(<argument><expr><name pos:line="54" pos:column="31">hash<pos:position pos:line="54" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="37">"plugin_instance"<pos:position pos:line="54" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="56">15<pos:position pos:line="54" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="60">0<pos:position pos:line="54" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="62"/></argument_list></call><operator pos:line="54" pos:column="62">)<pos:position pos:line="54" pos:column="63"/></operator></expr>)<pos:position pos:line="54" pos:column="64"/></condition><then pos:line="54" pos:column="64">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="55" pos:column="5">sstrncpy<pos:position pos:line="55" pos:column="13"/></name><argument_list pos:line="55" pos:column="13">(<argument><expr><name><name pos:line="55" pos:column="14">vl<pos:position pos:line="55" pos:column="16"/></name><operator pos:line="55" pos:column="16">-&gt;<pos:position pos:line="55" pos:column="21"/></operator><name pos:line="55" pos:column="18">plugin_instance<pos:position pos:line="55" pos:column="33"/></name></name></expr></argument>, <argument><expr><call><name pos:line="55" pos:column="35">SvPV_nolen<pos:position pos:line="55" pos:column="45"/></name><argument_list pos:line="55" pos:column="45">(<argument><expr><operator pos:line="55" pos:column="46">*<pos:position pos:line="55" pos:column="47"/></operator><name pos:line="55" pos:column="47">tmp<pos:position pos:line="55" pos:column="50"/></name></expr></argument>)<pos:position pos:line="55" pos:column="51"/></argument_list></call></expr></argument>,
             <argument><expr><sizeof pos:line="56" pos:column="14">sizeof<argument_list pos:line="56" pos:column="20">(<argument><expr><name><name pos:line="56" pos:column="21">vl<pos:position pos:line="56" pos:column="23"/></name><operator pos:line="56" pos:column="23">-&gt;<pos:position pos:line="56" pos:column="28"/></operator><name pos:line="56" pos:column="25">plugin_instance<pos:position pos:line="56" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="56" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="43"/></expr_stmt></block></then></if>

  <if pos:line="58" pos:column="3">if <condition pos:line="58" pos:column="6">(<expr><name pos:line="58" pos:column="7">NULL<pos:position pos:line="58" pos:column="11"/></name> <operator pos:line="58" pos:column="12">!=<pos:position pos:line="58" pos:column="14"/></operator> <operator pos:line="58" pos:column="15">(<pos:position pos:line="58" pos:column="16"/></operator><name pos:line="58" pos:column="16">tmp<pos:position pos:line="58" pos:column="19"/></name> <operator pos:line="58" pos:column="20">=<pos:position pos:line="58" pos:column="21"/></operator> <call><name pos:line="58" pos:column="22">hv_fetch<pos:position pos:line="58" pos:column="30"/></name><argument_list pos:line="58" pos:column="30">(<argument><expr><name pos:line="58" pos:column="31">hash<pos:position pos:line="58" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="37">"type_instance"<pos:position pos:line="58" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="54">13<pos:position pos:line="58" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="58">0<pos:position pos:line="58" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="60"/></argument_list></call><operator pos:line="58" pos:column="60">)<pos:position pos:line="58" pos:column="61"/></operator></expr>)<pos:position pos:line="58" pos:column="62"/></condition><then pos:line="58" pos:column="62">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="59" pos:column="5">sstrncpy<pos:position pos:line="59" pos:column="13"/></name><argument_list pos:line="59" pos:column="13">(<argument><expr><name><name pos:line="59" pos:column="14">vl<pos:position pos:line="59" pos:column="16"/></name><operator pos:line="59" pos:column="16">-&gt;<pos:position pos:line="59" pos:column="21"/></operator><name pos:line="59" pos:column="18">type_instance<pos:position pos:line="59" pos:column="31"/></name></name></expr></argument>, <argument><expr><call><name pos:line="59" pos:column="33">SvPV_nolen<pos:position pos:line="59" pos:column="43"/></name><argument_list pos:line="59" pos:column="43">(<argument><expr><operator pos:line="59" pos:column="44">*<pos:position pos:line="59" pos:column="45"/></operator><name pos:line="59" pos:column="45">tmp<pos:position pos:line="59" pos:column="48"/></name></expr></argument>)<pos:position pos:line="59" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="59" pos:column="51">sizeof<argument_list pos:line="59" pos:column="57">(<argument><expr><name><name pos:line="59" pos:column="58">vl<pos:position pos:line="59" pos:column="60"/></name><operator pos:line="59" pos:column="60">-&gt;<pos:position pos:line="59" pos:column="65"/></operator><name pos:line="59" pos:column="62">type_instance<pos:position pos:line="59" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="76"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="59" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="78"/></expr_stmt></block></then></if>
  <return pos:line="60" pos:column="3">return <expr><literal type="number" pos:line="60" pos:column="10">0<pos:position pos:line="60" pos:column="11"/></literal></expr>;<pos:position pos:line="60" pos:column="12"/></return>
}<pos:position pos:line="61" pos:column="2"/></block></function></unit>

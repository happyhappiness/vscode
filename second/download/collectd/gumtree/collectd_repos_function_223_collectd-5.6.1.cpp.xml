<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_223_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">lv_read<pos:position pos:line="2" pos:column="8"/></name> <parameter_list pos:line="2" pos:column="9">(<parameter><decl><type><name pos:line="2" pos:column="10">void<pos:position pos:line="2" pos:column="14"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="15"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">time_t<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">t<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">conn<pos:position pos:line="6" pos:column="13"/></name> <operator pos:line="6" pos:column="14">==<pos:position pos:line="6" pos:column="16"/></operator> <name pos:line="6" pos:column="17">NULL<pos:position pos:line="6" pos:column="21"/></name></expr>)<pos:position pos:line="6" pos:column="22"/></condition><then pos:line="6" pos:column="22"> <block pos:line="6" pos:column="23">{
        <comment type="block" pos:line="7" pos:column="9">/* `conn_string == NULL' is acceptable. */</comment>
        <expr_stmt><expr><name pos:line="8" pos:column="9">conn<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator> <call><name pos:line="8" pos:column="16">virConnectOpenReadOnly<pos:position pos:line="8" pos:column="38"/></name> <argument_list pos:line="8" pos:column="39">(<argument><expr><name pos:line="8" pos:column="40">conn_string<pos:position pos:line="8" pos:column="51"/></name></expr></argument>)<pos:position pos:line="8" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="53"/></expr_stmt>
        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">conn<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">==<pos:position pos:line="9" pos:column="20"/></operator> <name pos:line="9" pos:column="21">NULL<pos:position pos:line="9" pos:column="25"/></name></expr>)<pos:position pos:line="9" pos:column="26"/></condition><then pos:line="9" pos:column="26"> <block pos:line="9" pos:column="27">{
            <expr_stmt><expr><call><name pos:line="10" pos:column="13">c_complain<pos:position pos:line="10" pos:column="23"/></name> <argument_list pos:line="10" pos:column="24">(<argument><expr><name pos:line="10" pos:column="25">LOG_ERR<pos:position pos:line="10" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="34">&amp;<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="35">conn_complain<pos:position pos:line="10" pos:column="48"/></name></expr></argument>,
                    <argument><expr><name pos:line="11" pos:column="21">PLUGIN_NAME<pos:position pos:line="11" pos:column="32"/></name> <literal type="string" pos:line="11" pos:column="33">" plugin: Unable to connect: "<pos:position pos:line="11" pos:column="63"/></literal>
                    <literal type="string" pos:line="12" pos:column="21">"virConnectOpenReadOnly failed."<pos:position pos:line="12" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="55"/></expr_stmt>
            <return pos:line="13" pos:column="13">return <expr><operator pos:line="13" pos:column="20">-<pos:position pos:line="13" pos:column="21"/></operator><literal type="number" pos:line="13" pos:column="21">1<pos:position pos:line="13" pos:column="22"/></literal></expr>;<pos:position pos:line="13" pos:column="23"/></return>
        }<pos:position pos:line="14" pos:column="10"/></block></then></if>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">c_release<pos:position pos:line="16" pos:column="14"/></name> <argument_list pos:line="16" pos:column="15">(<argument><expr><name pos:line="16" pos:column="16">LOG_NOTICE<pos:position pos:line="16" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="28">&amp;<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="29">conn_complain<pos:position pos:line="16" pos:column="42"/></name></expr></argument>,
            <argument><expr><name pos:line="17" pos:column="13">PLUGIN_NAME<pos:position pos:line="17" pos:column="24"/></name> <literal type="string" pos:line="17" pos:column="25">" plugin: Connection established."<pos:position pos:line="17" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="61"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">time<pos:position pos:line="19" pos:column="9"/></name> <argument_list pos:line="19" pos:column="10">(<argument><expr><operator pos:line="19" pos:column="11">&amp;<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="12">t<pos:position pos:line="19" pos:column="13"/></name></expr></argument>)<pos:position pos:line="19" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="15"/></expr_stmt>

    <comment type="block" pos:line="21" pos:column="5">/* Need to refresh domain or device lists? */</comment>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">(<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="10">last_refresh<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">==<pos:position pos:line="22" pos:column="25"/></operator> <operator pos:line="22" pos:column="26">(<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="27">time_t<pos:position pos:line="22" pos:column="33"/></name><operator pos:line="22" pos:column="33">)<pos:position pos:line="22" pos:column="34"/></operator> <literal type="number" pos:line="22" pos:column="35">0<pos:position pos:line="22" pos:column="36"/></literal><operator pos:line="22" pos:column="36">)<pos:position pos:line="22" pos:column="37"/></operator> <operator pos:line="22" pos:column="38">||<pos:position pos:line="22" pos:column="40"/></operator>
            <operator pos:line="23" pos:column="13">(<pos:position pos:line="23" pos:column="14"/></operator><operator pos:line="23" pos:column="14">(<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="15">interval<pos:position pos:line="23" pos:column="23"/></name> <operator pos:line="23" pos:column="24">&gt;<pos:position pos:line="23" pos:column="28"/></operator> <literal type="number" pos:line="23" pos:column="26">0<pos:position pos:line="23" pos:column="27"/></literal><operator pos:line="23" pos:column="27">)<pos:position pos:line="23" pos:column="28"/></operator> <operator pos:line="23" pos:column="29">&amp;&amp;<pos:position pos:line="23" pos:column="39"/></operator> <operator pos:line="23" pos:column="32">(<pos:position pos:line="23" pos:column="33"/></operator><operator pos:line="23" pos:column="33">(<pos:position pos:line="23" pos:column="34"/></operator><name pos:line="23" pos:column="34">last_refresh<pos:position pos:line="23" pos:column="46"/></name> <operator pos:line="23" pos:column="47">+<pos:position pos:line="23" pos:column="48"/></operator> <name pos:line="23" pos:column="49">interval<pos:position pos:line="23" pos:column="57"/></name><operator pos:line="23" pos:column="57">)<pos:position pos:line="23" pos:column="58"/></operator> <operator pos:line="23" pos:column="59">&lt;=<pos:position pos:line="23" pos:column="64"/></operator> <name pos:line="23" pos:column="62">t<pos:position pos:line="23" pos:column="63"/></name><operator pos:line="23" pos:column="63">)<pos:position pos:line="23" pos:column="64"/></operator><operator pos:line="23" pos:column="64">)<pos:position pos:line="23" pos:column="65"/></operator></expr>)<pos:position pos:line="23" pos:column="66"/></condition><then pos:line="23" pos:column="66"> <block pos:line="23" pos:column="67">{
        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><call><name pos:line="24" pos:column="13">refresh_lists<pos:position pos:line="24" pos:column="26"/></name> <argument_list pos:line="24" pos:column="27">()<pos:position pos:line="24" pos:column="29"/></argument_list></call> <operator pos:line="24" pos:column="30">!=<pos:position pos:line="24" pos:column="32"/></operator> <literal type="number" pos:line="24" pos:column="33">0<pos:position pos:line="24" pos:column="34"/></literal></expr>)<pos:position pos:line="24" pos:column="35"/></condition><then pos:line="24" pos:column="35"> <block pos:line="24" pos:column="36">{
            <if pos:line="25" pos:column="13">if <condition pos:line="25" pos:column="16">(<expr><name pos:line="25" pos:column="17">conn<pos:position pos:line="25" pos:column="21"/></name> <operator pos:line="25" pos:column="22">!=<pos:position pos:line="25" pos:column="24"/></operator> <name pos:line="25" pos:column="25">NULL<pos:position pos:line="25" pos:column="29"/></name></expr>)<pos:position pos:line="25" pos:column="30"/></condition><then pos:line="25" pos:column="30">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="17">virConnectClose<pos:position pos:line="26" pos:column="32"/></name> <argument_list pos:line="26" pos:column="33">(<argument><expr><name pos:line="26" pos:column="34">conn<pos:position pos:line="26" pos:column="38"/></name></expr></argument>)<pos:position pos:line="26" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="40"/></expr_stmt></block></then></if>
            <expr_stmt><expr><name pos:line="27" pos:column="13">conn<pos:position pos:line="27" pos:column="17"/></name> <operator pos:line="27" pos:column="18">=<pos:position pos:line="27" pos:column="19"/></operator> <name pos:line="27" pos:column="20">NULL<pos:position pos:line="27" pos:column="24"/></name></expr>;<pos:position pos:line="27" pos:column="25"/></expr_stmt>
            <return pos:line="28" pos:column="13">return <expr><operator pos:line="28" pos:column="20">-<pos:position pos:line="28" pos:column="21"/></operator><literal type="number" pos:line="28" pos:column="21">1<pos:position pos:line="28" pos:column="22"/></literal></expr>;<pos:position pos:line="28" pos:column="23"/></return>
        }<pos:position pos:line="29" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="30" pos:column="9">last_refresh<pos:position pos:line="30" pos:column="21"/></name> <operator pos:line="30" pos:column="22">=<pos:position pos:line="30" pos:column="23"/></operator> <name pos:line="30" pos:column="24">t<pos:position pos:line="30" pos:column="25"/></name></expr>;<pos:position pos:line="30" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

<cpp:if pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">if<pos:position pos:line="33" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="33" pos:column="5">0<pos:position pos:line="33" pos:column="6"/></literal></expr></cpp:if>
    for (int i = 0; i &lt; nr_domains; ++i)
        fprintf (stderr, "domain %s\n", virDomainGetName (domains[i]));
    for (int i = 0; i &lt; nr_block_devices; ++i)
        fprintf  (stderr, "block device %d %s:%s\n",
                  i, virDomainGetName (block_devices[i].dom),
                  block_devices[i].path);
    for (int i = 0; i &lt; nr_interface_devices; ++i)
        fprintf (stderr, "interface device %d %s:%s\n",
                 i, virDomainGetName (interface_devices[i].dom),
                 interface_devices[i].path);
<cpp:endif pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">endif<pos:position pos:line="44" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="46" pos:column="5">/* Get CPU usage, memory, VCPU usage for each domain. */</comment>
    <for pos:line="47" pos:column="5">for <control pos:line="47" pos:column="9">(<init><decl><type><name pos:line="47" pos:column="10">int<pos:position pos:line="47" pos:column="13"/></name></type> <name pos:line="47" pos:column="14">i<pos:position pos:line="47" pos:column="15"/></name> <init pos:line="47" pos:column="16">= <expr><literal type="number" pos:line="47" pos:column="18">0<pos:position pos:line="47" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="47" pos:column="20"/></init> <condition><expr><name pos:line="47" pos:column="21">i<pos:position pos:line="47" pos:column="22"/></name> <operator pos:line="47" pos:column="23">&lt;<pos:position pos:line="47" pos:column="27"/></operator> <name pos:line="47" pos:column="25">nr_domains<pos:position pos:line="47" pos:column="35"/></name></expr>;<pos:position pos:line="47" pos:column="36"/></condition> <incr><expr><operator pos:line="47" pos:column="37">++<pos:position pos:line="47" pos:column="39"/></operator><name pos:line="47" pos:column="39">i<pos:position pos:line="47" pos:column="40"/></name></expr></incr>)<pos:position pos:line="47" pos:column="41"/></control> <block pos:line="47" pos:column="42">{
        <decl_stmt><decl><type><name pos:line="48" pos:column="9">virDomainInfo<pos:position pos:line="48" pos:column="22"/></name></type> <name pos:line="48" pos:column="23">info<pos:position pos:line="48" pos:column="27"/></name></decl>;<pos:position pos:line="48" pos:column="28"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="49" pos:column="9">virVcpuInfoPtr<pos:position pos:line="49" pos:column="23"/></name></type> <name pos:line="49" pos:column="24">vinfo<pos:position pos:line="49" pos:column="29"/></name> <init pos:line="49" pos:column="30">= <expr><name pos:line="49" pos:column="32">NULL<pos:position pos:line="49" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="49" pos:column="37"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="50" pos:column="9">virDomainMemoryStatPtr<pos:position pos:line="50" pos:column="31"/></name></type> <name pos:line="50" pos:column="32">minfo<pos:position pos:line="50" pos:column="37"/></name> <init pos:line="50" pos:column="38">= <expr><name pos:line="50" pos:column="40">NULL<pos:position pos:line="50" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="50" pos:column="45"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="51" pos:column="9">int<pos:position pos:line="51" pos:column="12"/></name></type> <name pos:line="51" pos:column="13">status<pos:position pos:line="51" pos:column="19"/></name></decl>;<pos:position pos:line="51" pos:column="20"/></decl_stmt>

        <expr_stmt><expr><name pos:line="53" pos:column="9">status<pos:position pos:line="53" pos:column="15"/></name> <operator pos:line="53" pos:column="16">=<pos:position pos:line="53" pos:column="17"/></operator> <call><name pos:line="53" pos:column="18">virDomainGetInfo<pos:position pos:line="53" pos:column="34"/></name> <argument_list pos:line="53" pos:column="35">(<argument><expr><name><name pos:line="53" pos:column="36">domains<pos:position pos:line="53" pos:column="43"/></name><index pos:line="53" pos:column="43">[<expr><name pos:line="53" pos:column="44">i<pos:position pos:line="53" pos:column="45"/></name></expr>]<pos:position pos:line="53" pos:column="46"/></index></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="48">&amp;<pos:position pos:line="53" pos:column="53"/></operator><name pos:line="53" pos:column="49">info<pos:position pos:line="53" pos:column="53"/></name></expr></argument>)<pos:position pos:line="53" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="55"/></expr_stmt>
        <if pos:line="54" pos:column="9">if <condition pos:line="54" pos:column="12">(<expr><name pos:line="54" pos:column="13">status<pos:position pos:line="54" pos:column="19"/></name> <operator pos:line="54" pos:column="20">!=<pos:position pos:line="54" pos:column="22"/></operator> <literal type="number" pos:line="54" pos:column="23">0<pos:position pos:line="54" pos:column="24"/></literal></expr>)<pos:position pos:line="54" pos:column="25"/></condition><then pos:line="54" pos:column="25">
        <block pos:line="55" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="56" pos:column="13">ERROR<pos:position pos:line="56" pos:column="18"/></name> <argument_list pos:line="56" pos:column="19">(<argument><expr><name pos:line="56" pos:column="20">PLUGIN_NAME<pos:position pos:line="56" pos:column="31"/></name> <literal type="string" pos:line="56" pos:column="32">" plugin: virDomainGetInfo failed with status %i."<pos:position pos:line="56" pos:column="82"/></literal></expr></argument>,
                    <argument><expr><name pos:line="57" pos:column="21">status<pos:position pos:line="57" pos:column="27"/></name></expr></argument>)<pos:position pos:line="57" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="29"/></expr_stmt>
            <continue pos:line="58" pos:column="13">continue;<pos:position pos:line="58" pos:column="22"/></continue>
        }<pos:position pos:line="59" pos:column="10"/></block></then></if>

        <if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><name><name pos:line="61" pos:column="13">info<pos:position pos:line="61" pos:column="17"/></name><operator pos:line="61" pos:column="17">.<pos:position pos:line="61" pos:column="18"/></operator><name pos:line="61" pos:column="18">state<pos:position pos:line="61" pos:column="23"/></name></name> <operator pos:line="61" pos:column="24">!=<pos:position pos:line="61" pos:column="26"/></operator> <name pos:line="61" pos:column="27">VIR_DOMAIN_RUNNING<pos:position pos:line="61" pos:column="45"/></name></expr>)<pos:position pos:line="61" pos:column="46"/></condition><then pos:line="61" pos:column="46">
        <block pos:line="62" pos:column="9">{
            <comment type="block" pos:line="63" pos:column="13">/* only gather stats for running domains */</comment>
            <continue pos:line="64" pos:column="13">continue;<pos:position pos:line="64" pos:column="22"/></continue>
        }<pos:position pos:line="65" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="67" pos:column="9">cpu_submit<pos:position pos:line="67" pos:column="19"/></name> <argument_list pos:line="67" pos:column="20">(<argument><expr><name><name pos:line="67" pos:column="21">info<pos:position pos:line="67" pos:column="25"/></name><operator pos:line="67" pos:column="25">.<pos:position pos:line="67" pos:column="26"/></operator><name pos:line="67" pos:column="26">cpuTime<pos:position pos:line="67" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="35">domains<pos:position pos:line="67" pos:column="42"/></name><index pos:line="67" pos:column="42">[<expr><name pos:line="67" pos:column="43">i<pos:position pos:line="67" pos:column="44"/></name></expr>]<pos:position pos:line="67" pos:column="45"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="47">"virt_cpu_total"<pos:position pos:line="67" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="68" pos:column="9">memory_submit<pos:position pos:line="68" pos:column="22"/></name> <argument_list pos:line="68" pos:column="23">(<argument><expr><operator pos:line="68" pos:column="24">(<pos:position pos:line="68" pos:column="25"/></operator><name pos:line="68" pos:column="25">gauge_t<pos:position pos:line="68" pos:column="32"/></name><operator pos:line="68" pos:column="32">)<pos:position pos:line="68" pos:column="33"/></operator> <name><name pos:line="68" pos:column="34">info<pos:position pos:line="68" pos:column="38"/></name><operator pos:line="68" pos:column="38">.<pos:position pos:line="68" pos:column="39"/></operator><name pos:line="68" pos:column="39">memory<pos:position pos:line="68" pos:column="45"/></name></name> <operator pos:line="68" pos:column="46">*<pos:position pos:line="68" pos:column="47"/></operator> <literal type="number" pos:line="68" pos:column="48">1024<pos:position pos:line="68" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="54">domains<pos:position pos:line="68" pos:column="61"/></name><index pos:line="68" pos:column="61">[<expr><name pos:line="68" pos:column="62">i<pos:position pos:line="68" pos:column="63"/></name></expr>]<pos:position pos:line="68" pos:column="64"/></index></name></expr></argument>)<pos:position pos:line="68" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="66"/></expr_stmt>

        <expr_stmt><expr><name pos:line="70" pos:column="9">vinfo<pos:position pos:line="70" pos:column="14"/></name> <operator pos:line="70" pos:column="15">=<pos:position pos:line="70" pos:column="16"/></operator> <call><name pos:line="70" pos:column="17">malloc<pos:position pos:line="70" pos:column="23"/></name> <argument_list pos:line="70" pos:column="24">(<argument><expr><name><name pos:line="70" pos:column="25">info<pos:position pos:line="70" pos:column="29"/></name><operator pos:line="70" pos:column="29">.<pos:position pos:line="70" pos:column="30"/></operator><name pos:line="70" pos:column="30">nrVirtCpu<pos:position pos:line="70" pos:column="39"/></name></name> <operator pos:line="70" pos:column="40">*<pos:position pos:line="70" pos:column="41"/></operator> <sizeof pos:line="70" pos:column="42">sizeof <argument_list pos:line="70" pos:column="49">(<argument><expr><name><name pos:line="70" pos:column="50">vinfo<pos:position pos:line="70" pos:column="55"/></name><index pos:line="70" pos:column="55">[<expr><literal type="number" pos:line="70" pos:column="56">0<pos:position pos:line="70" pos:column="57"/></literal></expr>]<pos:position pos:line="70" pos:column="58"/></index></name></expr></argument>)<pos:position pos:line="70" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="70" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="61"/></expr_stmt>
        <if pos:line="71" pos:column="9">if <condition pos:line="71" pos:column="12">(<expr><name pos:line="71" pos:column="13">vinfo<pos:position pos:line="71" pos:column="18"/></name> <operator pos:line="71" pos:column="19">==<pos:position pos:line="71" pos:column="21"/></operator> <name pos:line="71" pos:column="22">NULL<pos:position pos:line="71" pos:column="26"/></name></expr>)<pos:position pos:line="71" pos:column="27"/></condition><then pos:line="71" pos:column="27"> <block pos:line="71" pos:column="28">{
            <expr_stmt><expr><call><name pos:line="72" pos:column="13">ERROR<pos:position pos:line="72" pos:column="18"/></name> <argument_list pos:line="72" pos:column="19">(<argument><expr><name pos:line="72" pos:column="20">PLUGIN_NAME<pos:position pos:line="72" pos:column="31"/></name> <literal type="string" pos:line="72" pos:column="32">" plugin: malloc failed."<pos:position pos:line="72" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="59"/></expr_stmt>
            <continue pos:line="73" pos:column="13">continue;<pos:position pos:line="73" pos:column="22"/></continue>
        }<pos:position pos:line="74" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="76" pos:column="9">status<pos:position pos:line="76" pos:column="15"/></name> <operator pos:line="76" pos:column="16">=<pos:position pos:line="76" pos:column="17"/></operator> <call><name pos:line="76" pos:column="18">virDomainGetVcpus<pos:position pos:line="76" pos:column="35"/></name> <argument_list pos:line="76" pos:column="36">(<argument><expr><name><name pos:line="76" pos:column="37">domains<pos:position pos:line="76" pos:column="44"/></name><index pos:line="76" pos:column="44">[<expr><name pos:line="76" pos:column="45">i<pos:position pos:line="76" pos:column="46"/></name></expr>]<pos:position pos:line="76" pos:column="47"/></index></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="49">vinfo<pos:position pos:line="76" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="76" pos:column="56">info<pos:position pos:line="76" pos:column="60"/></name><operator pos:line="76" pos:column="60">.<pos:position pos:line="76" pos:column="61"/></operator><name pos:line="76" pos:column="61">nrVirtCpu<pos:position pos:line="76" pos:column="70"/></name></name></expr></argument>,
                <comment type="block" pos:line="77" pos:column="17">/* cpu map = */</comment> <argument><expr><name pos:line="77" pos:column="33">NULL<pos:position pos:line="77" pos:column="37"/></name></expr></argument>, <comment type="block" pos:line="77" pos:column="39">/* cpu map length = */</comment> <argument><expr><literal type="number" pos:line="77" pos:column="62">0<pos:position pos:line="77" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="65"/></expr_stmt>
        <if pos:line="78" pos:column="9">if <condition pos:line="78" pos:column="12">(<expr><name pos:line="78" pos:column="13">status<pos:position pos:line="78" pos:column="19"/></name> <operator pos:line="78" pos:column="20">&lt;<pos:position pos:line="78" pos:column="24"/></operator> <literal type="number" pos:line="78" pos:column="22">0<pos:position pos:line="78" pos:column="23"/></literal></expr>)<pos:position pos:line="78" pos:column="24"/></condition><then pos:line="78" pos:column="24">
        <block pos:line="79" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="80" pos:column="13">ERROR<pos:position pos:line="80" pos:column="18"/></name> <argument_list pos:line="80" pos:column="19">(<argument><expr><name pos:line="80" pos:column="20">PLUGIN_NAME<pos:position pos:line="80" pos:column="31"/></name> <literal type="string" pos:line="80" pos:column="32">" plugin: virDomainGetVcpus failed with status %i."<pos:position pos:line="80" pos:column="83"/></literal></expr></argument>,
                    <argument><expr><name pos:line="81" pos:column="21">status<pos:position pos:line="81" pos:column="27"/></name></expr></argument>)<pos:position pos:line="81" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="82" pos:column="13">sfree<pos:position pos:line="82" pos:column="18"/></name> <argument_list pos:line="82" pos:column="19">(<argument><expr><name pos:line="82" pos:column="20">vinfo<pos:position pos:line="82" pos:column="25"/></name></expr></argument>)<pos:position pos:line="82" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="27"/></expr_stmt>
            <continue pos:line="83" pos:column="13">continue;<pos:position pos:line="83" pos:column="22"/></continue>
        }<pos:position pos:line="84" pos:column="10"/></block></then></if>

        <for pos:line="86" pos:column="9">for <control pos:line="86" pos:column="13">(<init><decl><type><name pos:line="86" pos:column="14">int<pos:position pos:line="86" pos:column="17"/></name></type> <name pos:line="86" pos:column="18">j<pos:position pos:line="86" pos:column="19"/></name> <init pos:line="86" pos:column="20">= <expr><literal type="number" pos:line="86" pos:column="22">0<pos:position pos:line="86" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="86" pos:column="24"/></init> <condition><expr><name pos:line="86" pos:column="25">j<pos:position pos:line="86" pos:column="26"/></name> <operator pos:line="86" pos:column="27">&lt;<pos:position pos:line="86" pos:column="31"/></operator> <name><name pos:line="86" pos:column="29">info<pos:position pos:line="86" pos:column="33"/></name><operator pos:line="86" pos:column="33">.<pos:position pos:line="86" pos:column="34"/></operator><name pos:line="86" pos:column="34">nrVirtCpu<pos:position pos:line="86" pos:column="43"/></name></name></expr>;<pos:position pos:line="86" pos:column="44"/></condition> <incr><expr><operator pos:line="86" pos:column="45">++<pos:position pos:line="86" pos:column="47"/></operator><name pos:line="86" pos:column="47">j<pos:position pos:line="86" pos:column="48"/></name></expr></incr>)<pos:position pos:line="86" pos:column="49"/></control>
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="87" pos:column="13">vcpu_submit<pos:position pos:line="87" pos:column="24"/></name> <argument_list pos:line="87" pos:column="25">(<argument><expr><name><name pos:line="87" pos:column="26">vinfo<pos:position pos:line="87" pos:column="31"/></name><index pos:line="87" pos:column="31">[<expr><name pos:line="87" pos:column="32">j<pos:position pos:line="87" pos:column="33"/></name></expr>]<pos:position pos:line="87" pos:column="34"/></index></name><operator pos:line="87" pos:column="34">.<pos:position pos:line="87" pos:column="35"/></operator><name pos:line="87" pos:column="35">cpuTime<pos:position pos:line="87" pos:column="42"/></name></expr></argument>,
                    <argument><expr><name><name pos:line="88" pos:column="21">domains<pos:position pos:line="88" pos:column="28"/></name><index pos:line="88" pos:column="28">[<expr><name pos:line="88" pos:column="29">i<pos:position pos:line="88" pos:column="30"/></name></expr>]<pos:position pos:line="88" pos:column="31"/></index></name></expr></argument>, <argument><expr><name><name pos:line="88" pos:column="33">vinfo<pos:position pos:line="88" pos:column="38"/></name><index pos:line="88" pos:column="38">[<expr><name pos:line="88" pos:column="39">j<pos:position pos:line="88" pos:column="40"/></name></expr>]<pos:position pos:line="88" pos:column="41"/></index></name><operator pos:line="88" pos:column="41">.<pos:position pos:line="88" pos:column="42"/></operator><name pos:line="88" pos:column="42">number<pos:position pos:line="88" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="50">"virt_vcpu"<pos:position pos:line="88" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="63"/></expr_stmt></block></for>

        <expr_stmt><expr><call><name pos:line="90" pos:column="9">sfree<pos:position pos:line="90" pos:column="14"/></name> <argument_list pos:line="90" pos:column="15">(<argument><expr><name pos:line="90" pos:column="16">vinfo<pos:position pos:line="90" pos:column="21"/></name></expr></argument>)<pos:position pos:line="90" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="23"/></expr_stmt>

        <expr_stmt><expr><name pos:line="92" pos:column="9">minfo<pos:position pos:line="92" pos:column="14"/></name> <operator pos:line="92" pos:column="15">=<pos:position pos:line="92" pos:column="16"/></operator> <call><name pos:line="92" pos:column="17">malloc<pos:position pos:line="92" pos:column="23"/></name> <argument_list pos:line="92" pos:column="24">(<argument><expr><name pos:line="92" pos:column="25">VIR_DOMAIN_MEMORY_STAT_NR<pos:position pos:line="92" pos:column="50"/></name> <operator pos:line="92" pos:column="51">*<pos:position pos:line="92" pos:column="52"/></operator> <sizeof pos:line="92" pos:column="53">sizeof <argument_list pos:line="92" pos:column="60">(<argument><expr><name pos:line="92" pos:column="61">virDomainMemoryStatStruct<pos:position pos:line="92" pos:column="86"/></name></expr></argument>)<pos:position pos:line="92" pos:column="87"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="92" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="89"/></expr_stmt>
        <if pos:line="93" pos:column="9">if <condition pos:line="93" pos:column="12">(<expr><name pos:line="93" pos:column="13">minfo<pos:position pos:line="93" pos:column="18"/></name> <operator pos:line="93" pos:column="19">==<pos:position pos:line="93" pos:column="21"/></operator> <name pos:line="93" pos:column="22">NULL<pos:position pos:line="93" pos:column="26"/></name></expr>)<pos:position pos:line="93" pos:column="27"/></condition><then pos:line="93" pos:column="27"> <block pos:line="93" pos:column="28">{
            <expr_stmt><expr><call><name pos:line="94" pos:column="13">ERROR<pos:position pos:line="94" pos:column="18"/></name> <argument_list pos:line="94" pos:column="19">(<argument><expr><literal type="string" pos:line="94" pos:column="20">"virt plugin: malloc failed."<pos:position pos:line="94" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="51"/></expr_stmt>
            <continue pos:line="95" pos:column="13">continue;<pos:position pos:line="95" pos:column="22"/></continue>
        }<pos:position pos:line="96" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="98" pos:column="9">status<pos:position pos:line="98" pos:column="15"/></name> <operator pos:line="98" pos:column="16">=<pos:position pos:line="98" pos:column="17"/></operator> <call><name pos:line="98" pos:column="18">virDomainMemoryStats<pos:position pos:line="98" pos:column="38"/></name> <argument_list pos:line="98" pos:column="39">(<argument><expr><name><name pos:line="98" pos:column="40">domains<pos:position pos:line="98" pos:column="47"/></name><index pos:line="98" pos:column="47">[<expr><name pos:line="98" pos:column="48">i<pos:position pos:line="98" pos:column="49"/></name></expr>]<pos:position pos:line="98" pos:column="50"/></index></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="52">minfo<pos:position pos:line="98" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="59">VIR_DOMAIN_MEMORY_STAT_NR<pos:position pos:line="98" pos:column="84"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="98" pos:column="86">0<pos:position pos:line="98" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="89"/></expr_stmt>

        <if pos:line="100" pos:column="9">if <condition pos:line="100" pos:column="12">(<expr><name pos:line="100" pos:column="13">status<pos:position pos:line="100" pos:column="19"/></name> <operator pos:line="100" pos:column="20">&lt;<pos:position pos:line="100" pos:column="24"/></operator> <literal type="number" pos:line="100" pos:column="22">0<pos:position pos:line="100" pos:column="23"/></literal></expr>)<pos:position pos:line="100" pos:column="24"/></condition><then pos:line="100" pos:column="24"> <block pos:line="100" pos:column="25">{
            <expr_stmt><expr><call><name pos:line="101" pos:column="13">ERROR<pos:position pos:line="101" pos:column="18"/></name> <argument_list pos:line="101" pos:column="19">(<argument><expr><literal type="string" pos:line="101" pos:column="20">"virt plugin: virDomainMemoryStats failed with status %i."<pos:position pos:line="101" pos:column="78"/></literal></expr></argument>,
                    <argument><expr><name pos:line="102" pos:column="21">status<pos:position pos:line="102" pos:column="27"/></name></expr></argument>)<pos:position pos:line="102" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="103" pos:column="13">sfree<pos:position pos:line="103" pos:column="18"/></name> <argument_list pos:line="103" pos:column="19">(<argument><expr><name pos:line="103" pos:column="20">minfo<pos:position pos:line="103" pos:column="25"/></name></expr></argument>)<pos:position pos:line="103" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="27"/></expr_stmt>
            <continue pos:line="104" pos:column="13">continue;<pos:position pos:line="104" pos:column="22"/></continue>
        }<pos:position pos:line="105" pos:column="10"/></block></then></if>

        <for pos:line="107" pos:column="9">for <control pos:line="107" pos:column="13">(<init><decl><type><name pos:line="107" pos:column="14">int<pos:position pos:line="107" pos:column="17"/></name></type> <name pos:line="107" pos:column="18">j<pos:position pos:line="107" pos:column="19"/></name> <init pos:line="107" pos:column="20">= <expr><literal type="number" pos:line="107" pos:column="22">0<pos:position pos:line="107" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="107" pos:column="24"/></init> <condition><expr><name pos:line="107" pos:column="25">j<pos:position pos:line="107" pos:column="26"/></name> <operator pos:line="107" pos:column="27">&lt;<pos:position pos:line="107" pos:column="31"/></operator> <name pos:line="107" pos:column="29">status<pos:position pos:line="107" pos:column="35"/></name></expr>;<pos:position pos:line="107" pos:column="36"/></condition> <incr><expr><name pos:line="107" pos:column="37">j<pos:position pos:line="107" pos:column="38"/></name><operator pos:line="107" pos:column="38">++<pos:position pos:line="107" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="107" pos:column="41"/></control> <block pos:line="107" pos:column="42">{
            <expr_stmt><expr><call><name pos:line="108" pos:column="13">memory_stats_submit<pos:position pos:line="108" pos:column="32"/></name> <argument_list pos:line="108" pos:column="33">(<argument><expr><operator pos:line="108" pos:column="34">(<pos:position pos:line="108" pos:column="35"/></operator><name pos:line="108" pos:column="35">gauge_t<pos:position pos:line="108" pos:column="42"/></name><operator pos:line="108" pos:column="42">)<pos:position pos:line="108" pos:column="43"/></operator> <name><name pos:line="108" pos:column="44">minfo<pos:position pos:line="108" pos:column="49"/></name><index pos:line="108" pos:column="49">[<expr><name pos:line="108" pos:column="50">j<pos:position pos:line="108" pos:column="51"/></name></expr>]<pos:position pos:line="108" pos:column="52"/></index></name><operator pos:line="108" pos:column="52">.<pos:position pos:line="108" pos:column="53"/></operator><name pos:line="108" pos:column="53">val<pos:position pos:line="108" pos:column="56"/></name> <operator pos:line="108" pos:column="57">*<pos:position pos:line="108" pos:column="58"/></operator> <literal type="number" pos:line="108" pos:column="59">1024<pos:position pos:line="108" pos:column="63"/></literal></expr></argument>, <argument><expr><name><name pos:line="108" pos:column="65">domains<pos:position pos:line="108" pos:column="72"/></name><index pos:line="108" pos:column="72">[<expr><name pos:line="108" pos:column="73">i<pos:position pos:line="108" pos:column="74"/></name></expr>]<pos:position pos:line="108" pos:column="75"/></index></name></expr></argument>, <argument><expr><name><name pos:line="108" pos:column="77">minfo<pos:position pos:line="108" pos:column="82"/></name><index pos:line="108" pos:column="82">[<expr><name pos:line="108" pos:column="83">j<pos:position pos:line="108" pos:column="84"/></name></expr>]<pos:position pos:line="108" pos:column="85"/></index></name><operator pos:line="108" pos:column="85">.<pos:position pos:line="108" pos:column="86"/></operator><name pos:line="108" pos:column="86">tag<pos:position pos:line="108" pos:column="89"/></name></expr></argument>)<pos:position pos:line="108" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="91"/></expr_stmt>
        }<pos:position pos:line="109" pos:column="10"/></block></for>

        <expr_stmt><expr><call><name pos:line="111" pos:column="9">sfree<pos:position pos:line="111" pos:column="14"/></name> <argument_list pos:line="111" pos:column="15">(<argument><expr><name pos:line="111" pos:column="16">minfo<pos:position pos:line="111" pos:column="21"/></name></expr></argument>)<pos:position pos:line="111" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="112" pos:column="6"/></block></for>


    <comment type="block" pos:line="115" pos:column="5">/* Get block device stats for each domain. */</comment>
    <for pos:line="116" pos:column="5">for <control pos:line="116" pos:column="9">(<init><decl><type><name pos:line="116" pos:column="10">int<pos:position pos:line="116" pos:column="13"/></name></type> <name pos:line="116" pos:column="14">i<pos:position pos:line="116" pos:column="15"/></name> <init pos:line="116" pos:column="16">= <expr><literal type="number" pos:line="116" pos:column="18">0<pos:position pos:line="116" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="116" pos:column="20"/></init> <condition><expr><name pos:line="116" pos:column="21">i<pos:position pos:line="116" pos:column="22"/></name> <operator pos:line="116" pos:column="23">&lt;<pos:position pos:line="116" pos:column="27"/></operator> <name pos:line="116" pos:column="25">nr_block_devices<pos:position pos:line="116" pos:column="41"/></name></expr>;<pos:position pos:line="116" pos:column="42"/></condition> <incr><expr><operator pos:line="116" pos:column="43">++<pos:position pos:line="116" pos:column="45"/></operator><name pos:line="116" pos:column="45">i<pos:position pos:line="116" pos:column="46"/></name></expr></incr>)<pos:position pos:line="116" pos:column="47"/></control> <block pos:line="116" pos:column="48">{
        <decl_stmt><decl><type><name><name pos:line="117" pos:column="9">struct<pos:position pos:line="117" pos:column="15"/></name> <name pos:line="117" pos:column="16">_virDomainBlockStats<pos:position pos:line="117" pos:column="36"/></name></name></type> <name pos:line="117" pos:column="37">stats<pos:position pos:line="117" pos:column="42"/></name></decl>;<pos:position pos:line="117" pos:column="43"/></decl_stmt>

        <if pos:line="119" pos:column="9">if <condition pos:line="119" pos:column="12">(<expr><call><name pos:line="119" pos:column="13">virDomainBlockStats<pos:position pos:line="119" pos:column="32"/></name> <argument_list pos:line="119" pos:column="33">(<argument><expr><name><name pos:line="119" pos:column="34">block_devices<pos:position pos:line="119" pos:column="47"/></name><index pos:line="119" pos:column="47">[<expr><name pos:line="119" pos:column="48">i<pos:position pos:line="119" pos:column="49"/></name></expr>]<pos:position pos:line="119" pos:column="50"/></index></name><operator pos:line="119" pos:column="50">.<pos:position pos:line="119" pos:column="51"/></operator><name pos:line="119" pos:column="51">dom<pos:position pos:line="119" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="119" pos:column="56">block_devices<pos:position pos:line="119" pos:column="69"/></name><index pos:line="119" pos:column="69">[<expr><name pos:line="119" pos:column="70">i<pos:position pos:line="119" pos:column="71"/></name></expr>]<pos:position pos:line="119" pos:column="72"/></index></name><operator pos:line="119" pos:column="72">.<pos:position pos:line="119" pos:column="73"/></operator><name pos:line="119" pos:column="73">path<pos:position pos:line="119" pos:column="77"/></name></expr></argument>,
                    <argument><expr><operator pos:line="120" pos:column="21">&amp;<pos:position pos:line="120" pos:column="26"/></operator><name pos:line="120" pos:column="22">stats<pos:position pos:line="120" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="120" pos:column="29">sizeof <name pos:line="120" pos:column="36">stats<pos:position pos:line="120" pos:column="41"/></name></sizeof></expr></argument>)<pos:position pos:line="120" pos:column="42"/></argument_list></call> <operator pos:line="120" pos:column="43">!=<pos:position pos:line="120" pos:column="45"/></operator> <literal type="number" pos:line="120" pos:column="46">0<pos:position pos:line="120" pos:column="47"/></literal></expr>)<pos:position pos:line="120" pos:column="48"/></condition><then pos:line="120" pos:column="48">
            <block type="pseudo"><continue pos:line="121" pos:column="13">continue;<pos:position pos:line="121" pos:column="22"/></continue></block></then></if>

        <if pos:line="123" pos:column="9">if <condition pos:line="123" pos:column="12">(<expr><operator pos:line="123" pos:column="13">(<pos:position pos:line="123" pos:column="14"/></operator><name><name pos:line="123" pos:column="14">stats<pos:position pos:line="123" pos:column="19"/></name><operator pos:line="123" pos:column="19">.<pos:position pos:line="123" pos:column="20"/></operator><name pos:line="123" pos:column="20">rd_req<pos:position pos:line="123" pos:column="26"/></name></name> <operator pos:line="123" pos:column="27">!=<pos:position pos:line="123" pos:column="29"/></operator> <operator pos:line="123" pos:column="30">-<pos:position pos:line="123" pos:column="31"/></operator><literal type="number" pos:line="123" pos:column="31">1<pos:position pos:line="123" pos:column="32"/></literal><operator pos:line="123" pos:column="32">)<pos:position pos:line="123" pos:column="33"/></operator> <operator pos:line="123" pos:column="34">&amp;&amp;<pos:position pos:line="123" pos:column="44"/></operator> <operator pos:line="123" pos:column="37">(<pos:position pos:line="123" pos:column="38"/></operator><name><name pos:line="123" pos:column="38">stats<pos:position pos:line="123" pos:column="43"/></name><operator pos:line="123" pos:column="43">.<pos:position pos:line="123" pos:column="44"/></operator><name pos:line="123" pos:column="44">wr_req<pos:position pos:line="123" pos:column="50"/></name></name> <operator pos:line="123" pos:column="51">!=<pos:position pos:line="123" pos:column="53"/></operator> <operator pos:line="123" pos:column="54">-<pos:position pos:line="123" pos:column="55"/></operator><literal type="number" pos:line="123" pos:column="55">1<pos:position pos:line="123" pos:column="56"/></literal><operator pos:line="123" pos:column="56">)<pos:position pos:line="123" pos:column="57"/></operator></expr>)<pos:position pos:line="123" pos:column="58"/></condition><then pos:line="123" pos:column="58">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="124" pos:column="13">submit_derive2<pos:position pos:line="124" pos:column="27"/></name> <argument_list pos:line="124" pos:column="28">(<argument><expr><literal type="string" pos:line="124" pos:column="29">"disk_ops"<pos:position pos:line="124" pos:column="39"/></literal></expr></argument>,
                    <argument><expr><operator pos:line="125" pos:column="21">(<pos:position pos:line="125" pos:column="22"/></operator><name pos:line="125" pos:column="22">derive_t<pos:position pos:line="125" pos:column="30"/></name><operator pos:line="125" pos:column="30">)<pos:position pos:line="125" pos:column="31"/></operator> <name><name pos:line="125" pos:column="32">stats<pos:position pos:line="125" pos:column="37"/></name><operator pos:line="125" pos:column="37">.<pos:position pos:line="125" pos:column="38"/></operator><name pos:line="125" pos:column="38">rd_req<pos:position pos:line="125" pos:column="44"/></name></name></expr></argument>, <argument><expr><operator pos:line="125" pos:column="46">(<pos:position pos:line="125" pos:column="47"/></operator><name pos:line="125" pos:column="47">derive_t<pos:position pos:line="125" pos:column="55"/></name><operator pos:line="125" pos:column="55">)<pos:position pos:line="125" pos:column="56"/></operator> <name><name pos:line="125" pos:column="57">stats<pos:position pos:line="125" pos:column="62"/></name><operator pos:line="125" pos:column="62">.<pos:position pos:line="125" pos:column="63"/></operator><name pos:line="125" pos:column="63">wr_req<pos:position pos:line="125" pos:column="69"/></name></name></expr></argument>,
                    <argument><expr><name><name pos:line="126" pos:column="21">block_devices<pos:position pos:line="126" pos:column="34"/></name><index pos:line="126" pos:column="34">[<expr><name pos:line="126" pos:column="35">i<pos:position pos:line="126" pos:column="36"/></name></expr>]<pos:position pos:line="126" pos:column="37"/></index></name><operator pos:line="126" pos:column="37">.<pos:position pos:line="126" pos:column="38"/></operator><name pos:line="126" pos:column="38">dom<pos:position pos:line="126" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="126" pos:column="43">block_devices<pos:position pos:line="126" pos:column="56"/></name><index pos:line="126" pos:column="56">[<expr><name pos:line="126" pos:column="57">i<pos:position pos:line="126" pos:column="58"/></name></expr>]<pos:position pos:line="126" pos:column="59"/></index></name><operator pos:line="126" pos:column="59">.<pos:position pos:line="126" pos:column="60"/></operator><name pos:line="126" pos:column="60">path<pos:position pos:line="126" pos:column="64"/></name></expr></argument>)<pos:position pos:line="126" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="66"/></expr_stmt></block></then></if>

        <if pos:line="128" pos:column="9">if <condition pos:line="128" pos:column="12">(<expr><operator pos:line="128" pos:column="13">(<pos:position pos:line="128" pos:column="14"/></operator><name><name pos:line="128" pos:column="14">stats<pos:position pos:line="128" pos:column="19"/></name><operator pos:line="128" pos:column="19">.<pos:position pos:line="128" pos:column="20"/></operator><name pos:line="128" pos:column="20">rd_bytes<pos:position pos:line="128" pos:column="28"/></name></name> <operator pos:line="128" pos:column="29">!=<pos:position pos:line="128" pos:column="31"/></operator> <operator pos:line="128" pos:column="32">-<pos:position pos:line="128" pos:column="33"/></operator><literal type="number" pos:line="128" pos:column="33">1<pos:position pos:line="128" pos:column="34"/></literal><operator pos:line="128" pos:column="34">)<pos:position pos:line="128" pos:column="35"/></operator> <operator pos:line="128" pos:column="36">&amp;&amp;<pos:position pos:line="128" pos:column="46"/></operator> <operator pos:line="128" pos:column="39">(<pos:position pos:line="128" pos:column="40"/></operator><name><name pos:line="128" pos:column="40">stats<pos:position pos:line="128" pos:column="45"/></name><operator pos:line="128" pos:column="45">.<pos:position pos:line="128" pos:column="46"/></operator><name pos:line="128" pos:column="46">wr_bytes<pos:position pos:line="128" pos:column="54"/></name></name> <operator pos:line="128" pos:column="55">!=<pos:position pos:line="128" pos:column="57"/></operator> <operator pos:line="128" pos:column="58">-<pos:position pos:line="128" pos:column="59"/></operator><literal type="number" pos:line="128" pos:column="59">1<pos:position pos:line="128" pos:column="60"/></literal><operator pos:line="128" pos:column="60">)<pos:position pos:line="128" pos:column="61"/></operator></expr>)<pos:position pos:line="128" pos:column="62"/></condition><then pos:line="128" pos:column="62">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="129" pos:column="13">submit_derive2<pos:position pos:line="129" pos:column="27"/></name> <argument_list pos:line="129" pos:column="28">(<argument><expr><literal type="string" pos:line="129" pos:column="29">"disk_octets"<pos:position pos:line="129" pos:column="42"/></literal></expr></argument>,
                    <argument><expr><operator pos:line="130" pos:column="21">(<pos:position pos:line="130" pos:column="22"/></operator><name pos:line="130" pos:column="22">derive_t<pos:position pos:line="130" pos:column="30"/></name><operator pos:line="130" pos:column="30">)<pos:position pos:line="130" pos:column="31"/></operator> <name><name pos:line="130" pos:column="32">stats<pos:position pos:line="130" pos:column="37"/></name><operator pos:line="130" pos:column="37">.<pos:position pos:line="130" pos:column="38"/></operator><name pos:line="130" pos:column="38">rd_bytes<pos:position pos:line="130" pos:column="46"/></name></name></expr></argument>, <argument><expr><operator pos:line="130" pos:column="48">(<pos:position pos:line="130" pos:column="49"/></operator><name pos:line="130" pos:column="49">derive_t<pos:position pos:line="130" pos:column="57"/></name><operator pos:line="130" pos:column="57">)<pos:position pos:line="130" pos:column="58"/></operator> <name><name pos:line="130" pos:column="59">stats<pos:position pos:line="130" pos:column="64"/></name><operator pos:line="130" pos:column="64">.<pos:position pos:line="130" pos:column="65"/></operator><name pos:line="130" pos:column="65">wr_bytes<pos:position pos:line="130" pos:column="73"/></name></name></expr></argument>,
                    <argument><expr><name><name pos:line="131" pos:column="21">block_devices<pos:position pos:line="131" pos:column="34"/></name><index pos:line="131" pos:column="34">[<expr><name pos:line="131" pos:column="35">i<pos:position pos:line="131" pos:column="36"/></name></expr>]<pos:position pos:line="131" pos:column="37"/></index></name><operator pos:line="131" pos:column="37">.<pos:position pos:line="131" pos:column="38"/></operator><name pos:line="131" pos:column="38">dom<pos:position pos:line="131" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="131" pos:column="43">block_devices<pos:position pos:line="131" pos:column="56"/></name><index pos:line="131" pos:column="56">[<expr><name pos:line="131" pos:column="57">i<pos:position pos:line="131" pos:column="58"/></name></expr>]<pos:position pos:line="131" pos:column="59"/></index></name><operator pos:line="131" pos:column="59">.<pos:position pos:line="131" pos:column="60"/></operator><name pos:line="131" pos:column="60">path<pos:position pos:line="131" pos:column="64"/></name></expr></argument>)<pos:position pos:line="131" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="66"/></expr_stmt></block></then></if>
    }<pos:position pos:line="132" pos:column="6"/></block></for> <comment type="block" pos:line="132" pos:column="7">/* for (nr_block_devices) */</comment>

    <comment type="block" pos:line="134" pos:column="5">/* Get interface stats for each domain. */</comment>
    <for pos:line="135" pos:column="5">for <control pos:line="135" pos:column="9">(<init><decl><type><name pos:line="135" pos:column="10">int<pos:position pos:line="135" pos:column="13"/></name></type> <name pos:line="135" pos:column="14">i<pos:position pos:line="135" pos:column="15"/></name> <init pos:line="135" pos:column="16">= <expr><literal type="number" pos:line="135" pos:column="18">0<pos:position pos:line="135" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="135" pos:column="20"/></init> <condition><expr><name pos:line="135" pos:column="21">i<pos:position pos:line="135" pos:column="22"/></name> <operator pos:line="135" pos:column="23">&lt;<pos:position pos:line="135" pos:column="27"/></operator> <name pos:line="135" pos:column="25">nr_interface_devices<pos:position pos:line="135" pos:column="45"/></name></expr>;<pos:position pos:line="135" pos:column="46"/></condition> <incr><expr><operator pos:line="135" pos:column="47">++<pos:position pos:line="135" pos:column="49"/></operator><name pos:line="135" pos:column="49">i<pos:position pos:line="135" pos:column="50"/></name></expr></incr>)<pos:position pos:line="135" pos:column="51"/></control> <block pos:line="135" pos:column="52">{
        <decl_stmt><decl><type><name><name pos:line="136" pos:column="9">struct<pos:position pos:line="136" pos:column="15"/></name> <name pos:line="136" pos:column="16">_virDomainInterfaceStats<pos:position pos:line="136" pos:column="40"/></name></name></type> <name pos:line="136" pos:column="41">stats<pos:position pos:line="136" pos:column="46"/></name></decl>;<pos:position pos:line="136" pos:column="47"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="137" pos:column="9">char<pos:position pos:line="137" pos:column="13"/></name> <modifier pos:line="137" pos:column="14">*<pos:position pos:line="137" pos:column="15"/></modifier></type><name pos:line="137" pos:column="15">display_name<pos:position pos:line="137" pos:column="27"/></name> <init pos:line="137" pos:column="28">= <expr><name pos:line="137" pos:column="30">NULL<pos:position pos:line="137" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="137" pos:column="35"/></decl_stmt>


        <switch pos:line="140" pos:column="9">switch <condition pos:line="140" pos:column="16">(<expr><name pos:line="140" pos:column="17">interface_format<pos:position pos:line="140" pos:column="33"/></name></expr>)<pos:position pos:line="140" pos:column="34"/></condition> <block pos:line="140" pos:column="35">{
            <case pos:line="141" pos:column="13">case <expr><name pos:line="141" pos:column="18">if_address<pos:position pos:line="141" pos:column="28"/></name></expr>:<pos:position pos:line="141" pos:column="29"/></case>
                <expr_stmt><expr><name pos:line="142" pos:column="17">display_name<pos:position pos:line="142" pos:column="29"/></name> <operator pos:line="142" pos:column="30">=<pos:position pos:line="142" pos:column="31"/></operator> <name><name pos:line="142" pos:column="32">interface_devices<pos:position pos:line="142" pos:column="49"/></name><index pos:line="142" pos:column="49">[<expr><name pos:line="142" pos:column="50">i<pos:position pos:line="142" pos:column="51"/></name></expr>]<pos:position pos:line="142" pos:column="52"/></index></name><operator pos:line="142" pos:column="52">.<pos:position pos:line="142" pos:column="53"/></operator><name pos:line="142" pos:column="53">address<pos:position pos:line="142" pos:column="60"/></name></expr>;<pos:position pos:line="142" pos:column="61"/></expr_stmt>
                <break pos:line="143" pos:column="17">break;<pos:position pos:line="143" pos:column="23"/></break>
            <case pos:line="144" pos:column="13">case <expr><name pos:line="144" pos:column="18">if_number<pos:position pos:line="144" pos:column="27"/></name></expr>:<pos:position pos:line="144" pos:column="28"/></case>
                <expr_stmt><expr><name pos:line="145" pos:column="17">display_name<pos:position pos:line="145" pos:column="29"/></name> <operator pos:line="145" pos:column="30">=<pos:position pos:line="145" pos:column="31"/></operator> <name><name pos:line="145" pos:column="32">interface_devices<pos:position pos:line="145" pos:column="49"/></name><index pos:line="145" pos:column="49">[<expr><name pos:line="145" pos:column="50">i<pos:position pos:line="145" pos:column="51"/></name></expr>]<pos:position pos:line="145" pos:column="52"/></index></name><operator pos:line="145" pos:column="52">.<pos:position pos:line="145" pos:column="53"/></operator><name pos:line="145" pos:column="53">number<pos:position pos:line="145" pos:column="59"/></name></expr>;<pos:position pos:line="145" pos:column="60"/></expr_stmt>
                <break pos:line="146" pos:column="17">break;<pos:position pos:line="146" pos:column="23"/></break>
            <case pos:line="147" pos:column="13">case <expr><name pos:line="147" pos:column="18">if_name<pos:position pos:line="147" pos:column="25"/></name></expr>:<pos:position pos:line="147" pos:column="26"/></case>
            <default pos:line="148" pos:column="13">default:<pos:position pos:line="148" pos:column="21"/></default>
                <expr_stmt><expr><name pos:line="149" pos:column="17">display_name<pos:position pos:line="149" pos:column="29"/></name> <operator pos:line="149" pos:column="30">=<pos:position pos:line="149" pos:column="31"/></operator> <name><name pos:line="149" pos:column="32">interface_devices<pos:position pos:line="149" pos:column="49"/></name><index pos:line="149" pos:column="49">[<expr><name pos:line="149" pos:column="50">i<pos:position pos:line="149" pos:column="51"/></name></expr>]<pos:position pos:line="149" pos:column="52"/></index></name><operator pos:line="149" pos:column="52">.<pos:position pos:line="149" pos:column="53"/></operator><name pos:line="149" pos:column="53">path<pos:position pos:line="149" pos:column="57"/></name></expr>;<pos:position pos:line="149" pos:column="58"/></expr_stmt>
        }<pos:position pos:line="150" pos:column="10"/></block></switch>

        <if pos:line="152" pos:column="9">if <condition pos:line="152" pos:column="12">(<expr><call><name pos:line="152" pos:column="13">virDomainInterfaceStats<pos:position pos:line="152" pos:column="36"/></name> <argument_list pos:line="152" pos:column="37">(<argument><expr><name><name pos:line="152" pos:column="38">interface_devices<pos:position pos:line="152" pos:column="55"/></name><index pos:line="152" pos:column="55">[<expr><name pos:line="152" pos:column="56">i<pos:position pos:line="152" pos:column="57"/></name></expr>]<pos:position pos:line="152" pos:column="58"/></index></name><operator pos:line="152" pos:column="58">.<pos:position pos:line="152" pos:column="59"/></operator><name pos:line="152" pos:column="59">dom<pos:position pos:line="152" pos:column="62"/></name></expr></argument>,
                    <argument><expr><name><name pos:line="153" pos:column="21">interface_devices<pos:position pos:line="153" pos:column="38"/></name><index pos:line="153" pos:column="38">[<expr><name pos:line="153" pos:column="39">i<pos:position pos:line="153" pos:column="40"/></name></expr>]<pos:position pos:line="153" pos:column="41"/></index></name><operator pos:line="153" pos:column="41">.<pos:position pos:line="153" pos:column="42"/></operator><name pos:line="153" pos:column="42">path<pos:position pos:line="153" pos:column="46"/></name></expr></argument>,
                    <argument><expr><operator pos:line="154" pos:column="21">&amp;<pos:position pos:line="154" pos:column="26"/></operator><name pos:line="154" pos:column="22">stats<pos:position pos:line="154" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="154" pos:column="29">sizeof <name pos:line="154" pos:column="36">stats<pos:position pos:line="154" pos:column="41"/></name></sizeof></expr></argument>)<pos:position pos:line="154" pos:column="42"/></argument_list></call> <operator pos:line="154" pos:column="43">!=<pos:position pos:line="154" pos:column="45"/></operator> <literal type="number" pos:line="154" pos:column="46">0<pos:position pos:line="154" pos:column="47"/></literal></expr>)<pos:position pos:line="154" pos:column="48"/></condition><then pos:line="154" pos:column="48">
            <block type="pseudo"><continue pos:line="155" pos:column="13">continue;<pos:position pos:line="155" pos:column="22"/></continue></block></then></if>

	<if pos:line="157" pos:column="9">if <condition pos:line="157" pos:column="12">(<expr><operator pos:line="157" pos:column="13">(<pos:position pos:line="157" pos:column="14"/></operator><name><name pos:line="157" pos:column="14">stats<pos:position pos:line="157" pos:column="19"/></name><operator pos:line="157" pos:column="19">.<pos:position pos:line="157" pos:column="20"/></operator><name pos:line="157" pos:column="20">rx_bytes<pos:position pos:line="157" pos:column="28"/></name></name> <operator pos:line="157" pos:column="29">!=<pos:position pos:line="157" pos:column="31"/></operator> <operator pos:line="157" pos:column="32">-<pos:position pos:line="157" pos:column="33"/></operator><literal type="number" pos:line="157" pos:column="33">1<pos:position pos:line="157" pos:column="34"/></literal><operator pos:line="157" pos:column="34">)<pos:position pos:line="157" pos:column="35"/></operator> <operator pos:line="157" pos:column="36">&amp;&amp;<pos:position pos:line="157" pos:column="46"/></operator> <operator pos:line="157" pos:column="39">(<pos:position pos:line="157" pos:column="40"/></operator><name><name pos:line="157" pos:column="40">stats<pos:position pos:line="157" pos:column="45"/></name><operator pos:line="157" pos:column="45">.<pos:position pos:line="157" pos:column="46"/></operator><name pos:line="157" pos:column="46">tx_bytes<pos:position pos:line="157" pos:column="54"/></name></name> <operator pos:line="157" pos:column="55">!=<pos:position pos:line="157" pos:column="57"/></operator> <operator pos:line="157" pos:column="58">-<pos:position pos:line="157" pos:column="59"/></operator><literal type="number" pos:line="157" pos:column="59">1<pos:position pos:line="157" pos:column="60"/></literal><operator pos:line="157" pos:column="60">)<pos:position pos:line="157" pos:column="61"/></operator></expr>)<pos:position pos:line="157" pos:column="62"/></condition><then pos:line="157" pos:column="62">
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="158" pos:column="13">submit_derive2<pos:position pos:line="158" pos:column="27"/></name> <argument_list pos:line="158" pos:column="28">(<argument><expr><literal type="string" pos:line="158" pos:column="29">"if_octets"<pos:position pos:line="158" pos:column="40"/></literal></expr></argument>,
		    <argument><expr><operator pos:line="159" pos:column="21">(<pos:position pos:line="159" pos:column="22"/></operator><name pos:line="159" pos:column="22">derive_t<pos:position pos:line="159" pos:column="30"/></name><operator pos:line="159" pos:column="30">)<pos:position pos:line="159" pos:column="31"/></operator> <name><name pos:line="159" pos:column="32">stats<pos:position pos:line="159" pos:column="37"/></name><operator pos:line="159" pos:column="37">.<pos:position pos:line="159" pos:column="38"/></operator><name pos:line="159" pos:column="38">rx_bytes<pos:position pos:line="159" pos:column="46"/></name></name></expr></argument>, <argument><expr><operator pos:line="159" pos:column="48">(<pos:position pos:line="159" pos:column="49"/></operator><name pos:line="159" pos:column="49">derive_t<pos:position pos:line="159" pos:column="57"/></name><operator pos:line="159" pos:column="57">)<pos:position pos:line="159" pos:column="58"/></operator> <name><name pos:line="159" pos:column="59">stats<pos:position pos:line="159" pos:column="64"/></name><operator pos:line="159" pos:column="64">.<pos:position pos:line="159" pos:column="65"/></operator><name pos:line="159" pos:column="65">tx_bytes<pos:position pos:line="159" pos:column="73"/></name></name></expr></argument>,
		    <argument><expr><name><name pos:line="160" pos:column="21">interface_devices<pos:position pos:line="160" pos:column="38"/></name><index pos:line="160" pos:column="38">[<expr><name pos:line="160" pos:column="39">i<pos:position pos:line="160" pos:column="40"/></name></expr>]<pos:position pos:line="160" pos:column="41"/></index></name><operator pos:line="160" pos:column="41">.<pos:position pos:line="160" pos:column="42"/></operator><name pos:line="160" pos:column="42">dom<pos:position pos:line="160" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="47">display_name<pos:position pos:line="160" pos:column="59"/></name></expr></argument>)<pos:position pos:line="160" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="61"/></expr_stmt></block></then></if>

	<if pos:line="162" pos:column="9">if <condition pos:line="162" pos:column="12">(<expr><operator pos:line="162" pos:column="13">(<pos:position pos:line="162" pos:column="14"/></operator><name><name pos:line="162" pos:column="14">stats<pos:position pos:line="162" pos:column="19"/></name><operator pos:line="162" pos:column="19">.<pos:position pos:line="162" pos:column="20"/></operator><name pos:line="162" pos:column="20">rx_packets<pos:position pos:line="162" pos:column="30"/></name></name> <operator pos:line="162" pos:column="31">!=<pos:position pos:line="162" pos:column="33"/></operator> <operator pos:line="162" pos:column="34">-<pos:position pos:line="162" pos:column="35"/></operator><literal type="number" pos:line="162" pos:column="35">1<pos:position pos:line="162" pos:column="36"/></literal><operator pos:line="162" pos:column="36">)<pos:position pos:line="162" pos:column="37"/></operator> <operator pos:line="162" pos:column="38">&amp;&amp;<pos:position pos:line="162" pos:column="48"/></operator> <operator pos:line="162" pos:column="41">(<pos:position pos:line="162" pos:column="42"/></operator><name><name pos:line="162" pos:column="42">stats<pos:position pos:line="162" pos:column="47"/></name><operator pos:line="162" pos:column="47">.<pos:position pos:line="162" pos:column="48"/></operator><name pos:line="162" pos:column="48">tx_packets<pos:position pos:line="162" pos:column="58"/></name></name> <operator pos:line="162" pos:column="59">!=<pos:position pos:line="162" pos:column="61"/></operator> <operator pos:line="162" pos:column="62">-<pos:position pos:line="162" pos:column="63"/></operator><literal type="number" pos:line="162" pos:column="63">1<pos:position pos:line="162" pos:column="64"/></literal><operator pos:line="162" pos:column="64">)<pos:position pos:line="162" pos:column="65"/></operator></expr>)<pos:position pos:line="162" pos:column="66"/></condition><then pos:line="162" pos:column="66">
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="163" pos:column="13">submit_derive2<pos:position pos:line="163" pos:column="27"/></name> <argument_list pos:line="163" pos:column="28">(<argument><expr><literal type="string" pos:line="163" pos:column="29">"if_packets"<pos:position pos:line="163" pos:column="41"/></literal></expr></argument>,
		    <argument><expr><operator pos:line="164" pos:column="21">(<pos:position pos:line="164" pos:column="22"/></operator><name pos:line="164" pos:column="22">derive_t<pos:position pos:line="164" pos:column="30"/></name><operator pos:line="164" pos:column="30">)<pos:position pos:line="164" pos:column="31"/></operator> <name><name pos:line="164" pos:column="32">stats<pos:position pos:line="164" pos:column="37"/></name><operator pos:line="164" pos:column="37">.<pos:position pos:line="164" pos:column="38"/></operator><name pos:line="164" pos:column="38">rx_packets<pos:position pos:line="164" pos:column="48"/></name></name></expr></argument>, <argument><expr><operator pos:line="164" pos:column="50">(<pos:position pos:line="164" pos:column="51"/></operator><name pos:line="164" pos:column="51">derive_t<pos:position pos:line="164" pos:column="59"/></name><operator pos:line="164" pos:column="59">)<pos:position pos:line="164" pos:column="60"/></operator> <name><name pos:line="164" pos:column="61">stats<pos:position pos:line="164" pos:column="66"/></name><operator pos:line="164" pos:column="66">.<pos:position pos:line="164" pos:column="67"/></operator><name pos:line="164" pos:column="67">tx_packets<pos:position pos:line="164" pos:column="77"/></name></name></expr></argument>,
		    <argument><expr><name><name pos:line="165" pos:column="21">interface_devices<pos:position pos:line="165" pos:column="38"/></name><index pos:line="165" pos:column="38">[<expr><name pos:line="165" pos:column="39">i<pos:position pos:line="165" pos:column="40"/></name></expr>]<pos:position pos:line="165" pos:column="41"/></index></name><operator pos:line="165" pos:column="41">.<pos:position pos:line="165" pos:column="42"/></operator><name pos:line="165" pos:column="42">dom<pos:position pos:line="165" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="165" pos:column="47">display_name<pos:position pos:line="165" pos:column="59"/></name></expr></argument>)<pos:position pos:line="165" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="61"/></expr_stmt></block></then></if>

	<if pos:line="167" pos:column="9">if <condition pos:line="167" pos:column="12">(<expr><operator pos:line="167" pos:column="13">(<pos:position pos:line="167" pos:column="14"/></operator><name><name pos:line="167" pos:column="14">stats<pos:position pos:line="167" pos:column="19"/></name><operator pos:line="167" pos:column="19">.<pos:position pos:line="167" pos:column="20"/></operator><name pos:line="167" pos:column="20">rx_errs<pos:position pos:line="167" pos:column="27"/></name></name> <operator pos:line="167" pos:column="28">!=<pos:position pos:line="167" pos:column="30"/></operator> <operator pos:line="167" pos:column="31">-<pos:position pos:line="167" pos:column="32"/></operator><literal type="number" pos:line="167" pos:column="32">1<pos:position pos:line="167" pos:column="33"/></literal><operator pos:line="167" pos:column="33">)<pos:position pos:line="167" pos:column="34"/></operator> <operator pos:line="167" pos:column="35">&amp;&amp;<pos:position pos:line="167" pos:column="45"/></operator> <operator pos:line="167" pos:column="38">(<pos:position pos:line="167" pos:column="39"/></operator><name><name pos:line="167" pos:column="39">stats<pos:position pos:line="167" pos:column="44"/></name><operator pos:line="167" pos:column="44">.<pos:position pos:line="167" pos:column="45"/></operator><name pos:line="167" pos:column="45">tx_errs<pos:position pos:line="167" pos:column="52"/></name></name> <operator pos:line="167" pos:column="53">!=<pos:position pos:line="167" pos:column="55"/></operator> <operator pos:line="167" pos:column="56">-<pos:position pos:line="167" pos:column="57"/></operator><literal type="number" pos:line="167" pos:column="57">1<pos:position pos:line="167" pos:column="58"/></literal><operator pos:line="167" pos:column="58">)<pos:position pos:line="167" pos:column="59"/></operator></expr>)<pos:position pos:line="167" pos:column="60"/></condition><then pos:line="167" pos:column="60">
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="168" pos:column="13">submit_derive2<pos:position pos:line="168" pos:column="27"/></name> <argument_list pos:line="168" pos:column="28">(<argument><expr><literal type="string" pos:line="168" pos:column="29">"if_errors"<pos:position pos:line="168" pos:column="40"/></literal></expr></argument>,
		    <argument><expr><operator pos:line="169" pos:column="21">(<pos:position pos:line="169" pos:column="22"/></operator><name pos:line="169" pos:column="22">derive_t<pos:position pos:line="169" pos:column="30"/></name><operator pos:line="169" pos:column="30">)<pos:position pos:line="169" pos:column="31"/></operator> <name><name pos:line="169" pos:column="32">stats<pos:position pos:line="169" pos:column="37"/></name><operator pos:line="169" pos:column="37">.<pos:position pos:line="169" pos:column="38"/></operator><name pos:line="169" pos:column="38">rx_errs<pos:position pos:line="169" pos:column="45"/></name></name></expr></argument>, <argument><expr><operator pos:line="169" pos:column="47">(<pos:position pos:line="169" pos:column="48"/></operator><name pos:line="169" pos:column="48">derive_t<pos:position pos:line="169" pos:column="56"/></name><operator pos:line="169" pos:column="56">)<pos:position pos:line="169" pos:column="57"/></operator> <name><name pos:line="169" pos:column="58">stats<pos:position pos:line="169" pos:column="63"/></name><operator pos:line="169" pos:column="63">.<pos:position pos:line="169" pos:column="64"/></operator><name pos:line="169" pos:column="64">tx_errs<pos:position pos:line="169" pos:column="71"/></name></name></expr></argument>,
		    <argument><expr><name><name pos:line="170" pos:column="21">interface_devices<pos:position pos:line="170" pos:column="38"/></name><index pos:line="170" pos:column="38">[<expr><name pos:line="170" pos:column="39">i<pos:position pos:line="170" pos:column="40"/></name></expr>]<pos:position pos:line="170" pos:column="41"/></index></name><operator pos:line="170" pos:column="41">.<pos:position pos:line="170" pos:column="42"/></operator><name pos:line="170" pos:column="42">dom<pos:position pos:line="170" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="170" pos:column="47">display_name<pos:position pos:line="170" pos:column="59"/></name></expr></argument>)<pos:position pos:line="170" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="61"/></expr_stmt></block></then></if>

	<if pos:line="172" pos:column="9">if <condition pos:line="172" pos:column="12">(<expr><operator pos:line="172" pos:column="13">(<pos:position pos:line="172" pos:column="14"/></operator><name><name pos:line="172" pos:column="14">stats<pos:position pos:line="172" pos:column="19"/></name><operator pos:line="172" pos:column="19">.<pos:position pos:line="172" pos:column="20"/></operator><name pos:line="172" pos:column="20">rx_drop<pos:position pos:line="172" pos:column="27"/></name></name> <operator pos:line="172" pos:column="28">!=<pos:position pos:line="172" pos:column="30"/></operator> <operator pos:line="172" pos:column="31">-<pos:position pos:line="172" pos:column="32"/></operator><literal type="number" pos:line="172" pos:column="32">1<pos:position pos:line="172" pos:column="33"/></literal><operator pos:line="172" pos:column="33">)<pos:position pos:line="172" pos:column="34"/></operator> <operator pos:line="172" pos:column="35">&amp;&amp;<pos:position pos:line="172" pos:column="45"/></operator> <operator pos:line="172" pos:column="38">(<pos:position pos:line="172" pos:column="39"/></operator><name><name pos:line="172" pos:column="39">stats<pos:position pos:line="172" pos:column="44"/></name><operator pos:line="172" pos:column="44">.<pos:position pos:line="172" pos:column="45"/></operator><name pos:line="172" pos:column="45">tx_drop<pos:position pos:line="172" pos:column="52"/></name></name> <operator pos:line="172" pos:column="53">!=<pos:position pos:line="172" pos:column="55"/></operator> <operator pos:line="172" pos:column="56">-<pos:position pos:line="172" pos:column="57"/></operator><literal type="number" pos:line="172" pos:column="57">1<pos:position pos:line="172" pos:column="58"/></literal><operator pos:line="172" pos:column="58">)<pos:position pos:line="172" pos:column="59"/></operator></expr>)<pos:position pos:line="172" pos:column="60"/></condition><then pos:line="172" pos:column="60">
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="173" pos:column="13">submit_derive2<pos:position pos:line="173" pos:column="27"/></name> <argument_list pos:line="173" pos:column="28">(<argument><expr><literal type="string" pos:line="173" pos:column="29">"if_dropped"<pos:position pos:line="173" pos:column="41"/></literal></expr></argument>,
		    <argument><expr><operator pos:line="174" pos:column="21">(<pos:position pos:line="174" pos:column="22"/></operator><name pos:line="174" pos:column="22">derive_t<pos:position pos:line="174" pos:column="30"/></name><operator pos:line="174" pos:column="30">)<pos:position pos:line="174" pos:column="31"/></operator> <name><name pos:line="174" pos:column="32">stats<pos:position pos:line="174" pos:column="37"/></name><operator pos:line="174" pos:column="37">.<pos:position pos:line="174" pos:column="38"/></operator><name pos:line="174" pos:column="38">rx_drop<pos:position pos:line="174" pos:column="45"/></name></name></expr></argument>, <argument><expr><operator pos:line="174" pos:column="47">(<pos:position pos:line="174" pos:column="48"/></operator><name pos:line="174" pos:column="48">derive_t<pos:position pos:line="174" pos:column="56"/></name><operator pos:line="174" pos:column="56">)<pos:position pos:line="174" pos:column="57"/></operator> <name><name pos:line="174" pos:column="58">stats<pos:position pos:line="174" pos:column="63"/></name><operator pos:line="174" pos:column="63">.<pos:position pos:line="174" pos:column="64"/></operator><name pos:line="174" pos:column="64">tx_drop<pos:position pos:line="174" pos:column="71"/></name></name></expr></argument>,
		    <argument><expr><name><name pos:line="175" pos:column="21">interface_devices<pos:position pos:line="175" pos:column="38"/></name><index pos:line="175" pos:column="38">[<expr><name pos:line="175" pos:column="39">i<pos:position pos:line="175" pos:column="40"/></name></expr>]<pos:position pos:line="175" pos:column="41"/></index></name><operator pos:line="175" pos:column="41">.<pos:position pos:line="175" pos:column="42"/></operator><name pos:line="175" pos:column="42">dom<pos:position pos:line="175" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="47">display_name<pos:position pos:line="175" pos:column="59"/></name></expr></argument>)<pos:position pos:line="175" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="61"/></expr_stmt></block></then></if>
    }<pos:position pos:line="176" pos:column="6"/></block></for> <comment type="block" pos:line="176" pos:column="7">/* for (nr_interface_devices) */</comment>

    <return pos:line="178" pos:column="5">return <expr><literal type="number" pos:line="178" pos:column="12">0<pos:position pos:line="178" pos:column="13"/></literal></expr>;<pos:position pos:line="178" pos:column="14"/></return>
}<pos:position pos:line="179" pos:column="2"/></block></function></unit>

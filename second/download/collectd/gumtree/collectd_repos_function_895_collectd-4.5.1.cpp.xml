<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_895_collectd-4.5.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">stop_threads<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">void<pos:position pos:line="1" pos:column="31"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="5" pos:column="9">pthread_mutex_lock<pos:position pos:line="5" pos:column="27"/></name> <argument_list pos:line="5" pos:column="28">(<argument><expr><operator pos:line="5" pos:column="29">&amp;<pos:position pos:line="5" pos:column="34"/></operator><name pos:line="5" pos:column="30">read_lock<pos:position pos:line="5" pos:column="39"/></name></expr></argument>)<pos:position pos:line="5" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><name pos:line="6" pos:column="9">read_loop<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">=<pos:position pos:line="6" pos:column="20"/></operator> <literal type="number" pos:line="6" pos:column="21">0<pos:position pos:line="6" pos:column="22"/></literal></expr>;<pos:position pos:line="6" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="7" pos:column="9">DEBUG<pos:position pos:line="7" pos:column="14"/></name> <argument_list pos:line="7" pos:column="15">(<argument><expr><literal type="string" pos:line="7" pos:column="16">"plugin: stop_threads: Signalling `read_cond'"<pos:position pos:line="7" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="64"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">pthread_cond_broadcast<pos:position pos:line="8" pos:column="31"/></name> <argument_list pos:line="8" pos:column="32">(<argument><expr><operator pos:line="8" pos:column="33">&amp;<pos:position pos:line="8" pos:column="38"/></operator><name pos:line="8" pos:column="34">read_cond<pos:position pos:line="8" pos:column="43"/></name></expr></argument>)<pos:position pos:line="8" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">pthread_mutex_unlock<pos:position pos:line="9" pos:column="29"/></name> <argument_list pos:line="9" pos:column="30">(<argument><expr><operator pos:line="9" pos:column="31">&amp;<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="32">read_lock<pos:position pos:line="9" pos:column="41"/></name></expr></argument>)<pos:position pos:line="9" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="43"/></expr_stmt>

	<for pos:line="11" pos:column="9">for <control pos:line="11" pos:column="13">(<init><expr><name pos:line="11" pos:column="14">i<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <literal type="number" pos:line="11" pos:column="18">0<pos:position pos:line="11" pos:column="19"/></literal></expr>;<pos:position pos:line="11" pos:column="20"/></init> <condition><expr><name pos:line="11" pos:column="21">i<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">&lt;<pos:position pos:line="11" pos:column="27"/></operator> <name pos:line="11" pos:column="25">read_threads_num<pos:position pos:line="11" pos:column="41"/></name></expr>;<pos:position pos:line="11" pos:column="42"/></condition> <incr><expr><name pos:line="11" pos:column="43">i<pos:position pos:line="11" pos:column="44"/></name><operator pos:line="11" pos:column="44">++<pos:position pos:line="11" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="47"/></control>
	<block pos:line="12" pos:column="9">{
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><call><name pos:line="13" pos:column="21">pthread_join<pos:position pos:line="13" pos:column="33"/></name> <argument_list pos:line="13" pos:column="34">(<argument><expr><name><name pos:line="13" pos:column="35">read_threads<pos:position pos:line="13" pos:column="47"/></name><index pos:line="13" pos:column="47">[<expr><name pos:line="13" pos:column="48">i<pos:position pos:line="13" pos:column="49"/></name></expr>]<pos:position pos:line="13" pos:column="50"/></index></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="52">NULL<pos:position pos:line="13" pos:column="56"/></name></expr></argument>)<pos:position pos:line="13" pos:column="57"/></argument_list></call> <operator pos:line="13" pos:column="58">!=<pos:position pos:line="13" pos:column="60"/></operator> <literal type="number" pos:line="13" pos:column="61">0<pos:position pos:line="13" pos:column="62"/></literal></expr>)<pos:position pos:line="13" pos:column="63"/></condition><then pos:line="13" pos:column="63">
		<block pos:line="14" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="15" pos:column="25">ERROR<pos:position pos:line="15" pos:column="30"/></name> <argument_list pos:line="15" pos:column="31">(<argument><expr><literal type="string" pos:line="15" pos:column="32">"plugin: stop_threads: pthread_join failed."<pos:position pos:line="15" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="78"/></expr_stmt>
		}<pos:position pos:line="16" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name><name pos:line="17" pos:column="17">read_threads<pos:position pos:line="17" pos:column="29"/></name><index pos:line="17" pos:column="29">[<expr><name pos:line="17" pos:column="30">i<pos:position pos:line="17" pos:column="31"/></name></expr>]<pos:position pos:line="17" pos:column="32"/></index></name> <operator pos:line="17" pos:column="33">=<pos:position pos:line="17" pos:column="34"/></operator> <operator pos:line="17" pos:column="35">(<pos:position pos:line="17" pos:column="36"/></operator><name pos:line="17" pos:column="36">pthread_t<pos:position pos:line="17" pos:column="45"/></name><operator pos:line="17" pos:column="45">)<pos:position pos:line="17" pos:column="46"/></operator> <literal type="number" pos:line="17" pos:column="47">0<pos:position pos:line="17" pos:column="48"/></literal></expr>;<pos:position pos:line="17" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="18" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="19" pos:column="9">sfree<pos:position pos:line="19" pos:column="14"/></name> <argument_list pos:line="19" pos:column="15">(<argument><expr><name pos:line="19" pos:column="16">read_threads<pos:position pos:line="19" pos:column="28"/></name></expr></argument>)<pos:position pos:line="19" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name pos:line="20" pos:column="9">read_threads_num<pos:position pos:line="20" pos:column="25"/></name> <operator pos:line="20" pos:column="26">=<pos:position pos:line="20" pos:column="27"/></operator> <literal type="number" pos:line="20" pos:column="28">0<pos:position pos:line="20" pos:column="29"/></literal></expr>;<pos:position pos:line="20" pos:column="30"/></expr_stmt>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

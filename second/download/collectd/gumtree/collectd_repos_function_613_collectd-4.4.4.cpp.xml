<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_613_collectd-4.4.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">rrd_create_file<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">filename<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">data_set_t<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">ds<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="67">const<pos:position pos:line="1" pos:column="72"/></specifier> <name pos:line="1" pos:column="73">value_list_t<pos:position pos:line="1" pos:column="85"/></name> <modifier pos:line="1" pos:column="86">*<pos:position pos:line="1" pos:column="87"/></modifier></type><name pos:line="1" pos:column="87">vl<pos:position pos:line="1" pos:column="89"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="90"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier><modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">argv<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">argc<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier><modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">rra_def<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">rra_num<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier><modifier pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></modifier></type><name pos:line="7" pos:column="16">ds_def<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">ds_num<pos:position pos:line="8" pos:column="19"/></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">status<pos:position pos:line="9" pos:column="19"/></name> <init pos:line="9" pos:column="20">= <expr><literal type="number" pos:line="9" pos:column="22">0<pos:position pos:line="9" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><call><name pos:line="11" pos:column="13">check_create_dir<pos:position pos:line="11" pos:column="29"/></name> <argument_list pos:line="11" pos:column="30">(<argument><expr><name pos:line="11" pos:column="31">filename<pos:position pos:line="11" pos:column="39"/></name></expr></argument>)<pos:position pos:line="11" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="41"/></condition><then pos:line="11" pos:column="41">
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><operator pos:line="12" pos:column="24">(<pos:position pos:line="12" pos:column="25"/></operator><operator pos:line="12" pos:column="25">-<pos:position pos:line="12" pos:column="26"/></operator><literal type="number" pos:line="12" pos:column="26">1<pos:position pos:line="12" pos:column="27"/></literal><operator pos:line="12" pos:column="27">)<pos:position pos:line="12" pos:column="28"/></operator></expr>;<pos:position pos:line="12" pos:column="29"/></return></block></then></if>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">(<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">rra_num<pos:position pos:line="14" pos:column="21"/></name> <operator pos:line="14" pos:column="22">=<pos:position pos:line="14" pos:column="23"/></operator> <call><name pos:line="14" pos:column="24">rra_get<pos:position pos:line="14" pos:column="31"/></name> <argument_list pos:line="14" pos:column="32">(<argument><expr><operator pos:line="14" pos:column="33">&amp;<pos:position pos:line="14" pos:column="38"/></operator><name pos:line="14" pos:column="34">rra_def<pos:position pos:line="14" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="43">vl<pos:position pos:line="14" pos:column="45"/></name></expr></argument>)<pos:position pos:line="14" pos:column="46"/></argument_list></call><operator pos:line="14" pos:column="46">)<pos:position pos:line="14" pos:column="47"/></operator> <operator pos:line="14" pos:column="48">&lt;<pos:position pos:line="14" pos:column="52"/></operator> <literal type="number" pos:line="14" pos:column="50">1<pos:position pos:line="14" pos:column="51"/></literal></expr>)<pos:position pos:line="14" pos:column="52"/></condition><then pos:line="14" pos:column="52">
	<block pos:line="15" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">ERROR<pos:position pos:line="16" pos:column="22"/></name> <argument_list pos:line="16" pos:column="23">(<argument><expr><literal type="string" pos:line="16" pos:column="24">"rrd_create_file failed: Could not calculate RRAs"<pos:position pos:line="16" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="76"/></expr_stmt>
		<return pos:line="17" pos:column="17">return <expr><operator pos:line="17" pos:column="24">(<pos:position pos:line="17" pos:column="25"/></operator><operator pos:line="17" pos:column="25">-<pos:position pos:line="17" pos:column="26"/></operator><literal type="number" pos:line="17" pos:column="26">1<pos:position pos:line="17" pos:column="27"/></literal><operator pos:line="17" pos:column="27">)<pos:position pos:line="17" pos:column="28"/></operator></expr>;<pos:position pos:line="17" pos:column="29"/></return>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if>

	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">(<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">ds_num<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator> <call><name pos:line="20" pos:column="23">ds_get<pos:position pos:line="20" pos:column="29"/></name> <argument_list pos:line="20" pos:column="30">(<argument><expr><operator pos:line="20" pos:column="31">&amp;<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="32">ds_def<pos:position pos:line="20" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="40">ds<pos:position pos:line="20" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="44">vl<pos:position pos:line="20" pos:column="46"/></name></expr></argument>)<pos:position pos:line="20" pos:column="47"/></argument_list></call><operator pos:line="20" pos:column="47">)<pos:position pos:line="20" pos:column="48"/></operator> <operator pos:line="20" pos:column="49">&lt;<pos:position pos:line="20" pos:column="53"/></operator> <literal type="number" pos:line="20" pos:column="51">1<pos:position pos:line="20" pos:column="52"/></literal></expr>)<pos:position pos:line="20" pos:column="53"/></condition><then pos:line="20" pos:column="53">
	<block pos:line="21" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">ERROR<pos:position pos:line="22" pos:column="22"/></name> <argument_list pos:line="22" pos:column="23">(<argument><expr><literal type="string" pos:line="22" pos:column="24">"rrd_create_file failed: Could not calculate DSes"<pos:position pos:line="22" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="76"/></expr_stmt>
		<return pos:line="23" pos:column="17">return <expr><operator pos:line="23" pos:column="24">(<pos:position pos:line="23" pos:column="25"/></operator><operator pos:line="23" pos:column="25">-<pos:position pos:line="23" pos:column="26"/></operator><literal type="number" pos:line="23" pos:column="26">1<pos:position pos:line="23" pos:column="27"/></literal><operator pos:line="23" pos:column="27">)<pos:position pos:line="23" pos:column="28"/></operator></expr>;<pos:position pos:line="23" pos:column="29"/></return>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="26" pos:column="9">argc<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">=<pos:position pos:line="26" pos:column="15"/></operator> <name pos:line="26" pos:column="16">ds_num<pos:position pos:line="26" pos:column="22"/></name> <operator pos:line="26" pos:column="23">+<pos:position pos:line="26" pos:column="24"/></operator> <name pos:line="26" pos:column="25">rra_num<pos:position pos:line="26" pos:column="32"/></name></expr>;<pos:position pos:line="26" pos:column="33"/></expr_stmt>

	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">(<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">argv<pos:position pos:line="28" pos:column="18"/></name> <operator pos:line="28" pos:column="19">=<pos:position pos:line="28" pos:column="20"/></operator> <operator pos:line="28" pos:column="21">(<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="22">char<pos:position pos:line="28" pos:column="26"/></name> <operator pos:line="28" pos:column="27">*<pos:position pos:line="28" pos:column="28"/></operator><operator pos:line="28" pos:column="28">*<pos:position pos:line="28" pos:column="29"/></operator><operator pos:line="28" pos:column="29">)<pos:position pos:line="28" pos:column="30"/></operator> <call><name pos:line="28" pos:column="31">malloc<pos:position pos:line="28" pos:column="37"/></name> <argument_list pos:line="28" pos:column="38">(<argument><expr><sizeof pos:line="28" pos:column="39">sizeof <argument_list pos:line="28" pos:column="46">(<argument><expr><name pos:line="28" pos:column="47">char<pos:position pos:line="28" pos:column="51"/></name> <operator pos:line="28" pos:column="52">*<pos:position pos:line="28" pos:column="53"/></operator></expr></argument>)<pos:position pos:line="28" pos:column="54"/></argument_list></sizeof> <operator pos:line="28" pos:column="55">*<pos:position pos:line="28" pos:column="56"/></operator> <operator pos:line="28" pos:column="57">(<pos:position pos:line="28" pos:column="58"/></operator><name pos:line="28" pos:column="58">argc<pos:position pos:line="28" pos:column="62"/></name> <operator pos:line="28" pos:column="63">+<pos:position pos:line="28" pos:column="64"/></operator> <literal type="number" pos:line="28" pos:column="65">1<pos:position pos:line="28" pos:column="66"/></literal><operator pos:line="28" pos:column="66">)<pos:position pos:line="28" pos:column="67"/></operator></expr></argument>)<pos:position pos:line="28" pos:column="68"/></argument_list></call><operator pos:line="28" pos:column="68">)<pos:position pos:line="28" pos:column="69"/></operator> <operator pos:line="28" pos:column="70">==<pos:position pos:line="28" pos:column="72"/></operator> <name pos:line="28" pos:column="73">NULL<pos:position pos:line="28" pos:column="77"/></name></expr>)<pos:position pos:line="28" pos:column="78"/></condition><then pos:line="28" pos:column="78">
	<block pos:line="29" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="30" pos:column="17">char<pos:position pos:line="30" pos:column="21"/></name></type> <name><name pos:line="30" pos:column="22">errbuf<pos:position pos:line="30" pos:column="28"/></name><index pos:line="30" pos:column="28">[<expr><literal type="number" pos:line="30" pos:column="29">1024<pos:position pos:line="30" pos:column="33"/></literal></expr>]<pos:position pos:line="30" pos:column="34"/></index></name></decl>;<pos:position pos:line="30" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">ERROR<pos:position pos:line="31" pos:column="22"/></name> <argument_list pos:line="31" pos:column="23">(<argument><expr><literal type="string" pos:line="31" pos:column="24">"rrd_create failed: %s"<pos:position pos:line="31" pos:column="47"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="32" pos:column="33">sstrerror<pos:position pos:line="32" pos:column="42"/></name> <argument_list pos:line="32" pos:column="43">(<argument><expr><name pos:line="32" pos:column="44">errno<pos:position pos:line="32" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="51">errbuf<pos:position pos:line="32" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="32" pos:column="59">sizeof <argument_list pos:line="32" pos:column="66">(<argument><expr><name pos:line="32" pos:column="67">errbuf<pos:position pos:line="32" pos:column="73"/></name></expr></argument>)<pos:position pos:line="32" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="32" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="77"/></expr_stmt>
		<return pos:line="33" pos:column="17">return <expr><operator pos:line="33" pos:column="24">(<pos:position pos:line="33" pos:column="25"/></operator><operator pos:line="33" pos:column="25">-<pos:position pos:line="33" pos:column="26"/></operator><literal type="number" pos:line="33" pos:column="26">1<pos:position pos:line="33" pos:column="27"/></literal><operator pos:line="33" pos:column="27">)<pos:position pos:line="33" pos:column="28"/></operator></expr>;<pos:position pos:line="33" pos:column="29"/></return>
	}<pos:position pos:line="34" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="36" pos:column="9">memcpy<pos:position pos:line="36" pos:column="15"/></name> <argument_list pos:line="36" pos:column="16">(<argument><expr><name pos:line="36" pos:column="17">argv<pos:position pos:line="36" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="23">ds_def<pos:position pos:line="36" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="31">ds_num<pos:position pos:line="36" pos:column="37"/></name> <operator pos:line="36" pos:column="38">*<pos:position pos:line="36" pos:column="39"/></operator> <sizeof pos:line="36" pos:column="40">sizeof <argument_list pos:line="36" pos:column="47">(<argument><expr><name pos:line="36" pos:column="48">char<pos:position pos:line="36" pos:column="52"/></name> <operator pos:line="36" pos:column="53">*<pos:position pos:line="36" pos:column="54"/></operator></expr></argument>)<pos:position pos:line="36" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="36" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="57"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="37" pos:column="9">memcpy<pos:position pos:line="37" pos:column="15"/></name> <argument_list pos:line="37" pos:column="16">(<argument><expr><name pos:line="37" pos:column="17">argv<pos:position pos:line="37" pos:column="21"/></name> <operator pos:line="37" pos:column="22">+<pos:position pos:line="37" pos:column="23"/></operator> <name pos:line="37" pos:column="24">ds_num<pos:position pos:line="37" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="32">rra_def<pos:position pos:line="37" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="41">rra_num<pos:position pos:line="37" pos:column="48"/></name> <operator pos:line="37" pos:column="49">*<pos:position pos:line="37" pos:column="50"/></operator> <sizeof pos:line="37" pos:column="51">sizeof <argument_list pos:line="37" pos:column="58">(<argument><expr><name pos:line="37" pos:column="59">char<pos:position pos:line="37" pos:column="63"/></name> <operator pos:line="37" pos:column="64">*<pos:position pos:line="37" pos:column="65"/></operator></expr></argument>)<pos:position pos:line="37" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="37" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="68"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="38" pos:column="9">argv<pos:position pos:line="38" pos:column="13"/></name><index pos:line="38" pos:column="13">[<expr><name pos:line="38" pos:column="14">ds_num<pos:position pos:line="38" pos:column="20"/></name> <operator pos:line="38" pos:column="21">+<pos:position pos:line="38" pos:column="22"/></operator> <name pos:line="38" pos:column="23">rra_num<pos:position pos:line="38" pos:column="30"/></name></expr>]<pos:position pos:line="38" pos:column="31"/></index></name> <operator pos:line="38" pos:column="32">=<pos:position pos:line="38" pos:column="33"/></operator> <name pos:line="38" pos:column="34">NULL<pos:position pos:line="38" pos:column="38"/></name></expr>;<pos:position pos:line="38" pos:column="39"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="40" pos:column="9">assert<pos:position pos:line="40" pos:column="15"/></name> <argument_list pos:line="40" pos:column="16">(<argument><expr><name><name pos:line="40" pos:column="17">vl<pos:position pos:line="40" pos:column="19"/></name><operator pos:line="40" pos:column="19">-&gt;<pos:position pos:line="40" pos:column="24"/></operator><name pos:line="40" pos:column="21">time<pos:position pos:line="40" pos:column="25"/></name></name> <operator pos:line="40" pos:column="26">&gt;<pos:position pos:line="40" pos:column="30"/></operator> <literal type="number" pos:line="40" pos:column="28">10<pos:position pos:line="40" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name pos:line="41" pos:column="9">status<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">=<pos:position pos:line="41" pos:column="17"/></operator> <call><name pos:line="41" pos:column="18">srrd_create<pos:position pos:line="41" pos:column="29"/></name> <argument_list pos:line="41" pos:column="30">(<argument><expr><name pos:line="41" pos:column="31">filename<pos:position pos:line="41" pos:column="39"/></name></expr></argument>,
			<argument><expr><ternary><condition><expr><operator pos:line="42" pos:column="25">(<pos:position pos:line="42" pos:column="26"/></operator><name pos:line="42" pos:column="26">stepsize<pos:position pos:line="42" pos:column="34"/></name> <operator pos:line="42" pos:column="35">&gt;<pos:position pos:line="42" pos:column="39"/></operator> <literal type="number" pos:line="42" pos:column="37">0<pos:position pos:line="42" pos:column="38"/></literal><operator pos:line="42" pos:column="38">)<pos:position pos:line="42" pos:column="39"/></operator></expr> ?<pos:position pos:line="42" pos:column="41"/></condition><then pos:line="42" pos:column="41"> <expr><name pos:line="42" pos:column="42">stepsize<pos:position pos:line="42" pos:column="50"/></name></expr> <pos:position pos:line="42" pos:column="51"/></then><else pos:line="42" pos:column="51">: <expr><name><name pos:line="42" pos:column="53">vl<pos:position pos:line="42" pos:column="55"/></name><operator pos:line="42" pos:column="55">-&gt;<pos:position pos:line="42" pos:column="60"/></operator><name pos:line="42" pos:column="57">interval<pos:position pos:line="42" pos:column="65"/></name></name></expr></else></ternary></expr></argument>,
			<argument><expr><name><name pos:line="43" pos:column="25">vl<pos:position pos:line="43" pos:column="27"/></name><operator pos:line="43" pos:column="27">-&gt;<pos:position pos:line="43" pos:column="32"/></operator><name pos:line="43" pos:column="29">time<pos:position pos:line="43" pos:column="33"/></name></name> <operator pos:line="43" pos:column="34">-<pos:position pos:line="43" pos:column="35"/></operator> <literal type="number" pos:line="43" pos:column="36">10<pos:position pos:line="43" pos:column="38"/></literal></expr></argument>,
			<argument><expr><name pos:line="44" pos:column="25">argc<pos:position pos:line="44" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="31">argv<pos:position pos:line="44" pos:column="35"/></name></expr></argument>)<pos:position pos:line="44" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="37"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="46" pos:column="9">free<pos:position pos:line="46" pos:column="13"/></name> <argument_list pos:line="46" pos:column="14">(<argument><expr><name pos:line="46" pos:column="15">argv<pos:position pos:line="46" pos:column="19"/></name></expr></argument>)<pos:position pos:line="46" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="47" pos:column="9">ds_free<pos:position pos:line="47" pos:column="16"/></name> <argument_list pos:line="47" pos:column="17">(<argument><expr><name pos:line="47" pos:column="18">ds_num<pos:position pos:line="47" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="26">ds_def<pos:position pos:line="47" pos:column="32"/></name></expr></argument>)<pos:position pos:line="47" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="48" pos:column="9">rra_free<pos:position pos:line="48" pos:column="17"/></name> <argument_list pos:line="48" pos:column="18">(<argument><expr><name pos:line="48" pos:column="19">rra_num<pos:position pos:line="48" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="28">rra_def<pos:position pos:line="48" pos:column="35"/></name></expr></argument>)<pos:position pos:line="48" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="37"/></expr_stmt>

	<return pos:line="50" pos:column="9">return <expr><operator pos:line="50" pos:column="16">(<pos:position pos:line="50" pos:column="17"/></operator><name pos:line="50" pos:column="17">status<pos:position pos:line="50" pos:column="23"/></name><operator pos:line="50" pos:column="23">)<pos:position pos:line="50" pos:column="24"/></operator></expr>;<pos:position pos:line="50" pos:column="25"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

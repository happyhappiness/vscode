<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2342_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">wt_callback_init<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">wt_callback<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">cb<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list> <block pos:line="1" pos:column="53">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">status<pos:position pos:line="2" pos:column="13"/></name></decl>;<pos:position pos:line="2" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">cdtime_t<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">now<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>

  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">node<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><ternary><condition><expr><name><name pos:line="5" pos:column="22">cb<pos:position pos:line="5" pos:column="24"/></name><operator pos:line="5" pos:column="24">-&gt;<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="26">node<pos:position pos:line="5" pos:column="30"/></name></name></expr> ?<pos:position pos:line="5" pos:column="32"/></condition><then pos:line="5" pos:column="32"> <expr><name><name pos:line="5" pos:column="33">cb<pos:position pos:line="5" pos:column="35"/></name><operator pos:line="5" pos:column="35">-&gt;<pos:position pos:line="5" pos:column="40"/></operator><name pos:line="5" pos:column="37">node<pos:position pos:line="5" pos:column="41"/></name></name></expr> <pos:position pos:line="5" pos:column="42"/></then><else pos:line="5" pos:column="42">: <expr><name pos:line="5" pos:column="44">WT_DEFAULT_NODE<pos:position pos:line="5" pos:column="59"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="5" pos:column="60"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">service<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><ternary><condition><expr><name><name pos:line="6" pos:column="25">cb<pos:position pos:line="6" pos:column="27"/></name><operator pos:line="6" pos:column="27">-&gt;<pos:position pos:line="6" pos:column="32"/></operator><name pos:line="6" pos:column="29">service<pos:position pos:line="6" pos:column="36"/></name></name></expr> ?<pos:position pos:line="6" pos:column="38"/></condition><then pos:line="6" pos:column="38"> <expr><name><name pos:line="6" pos:column="39">cb<pos:position pos:line="6" pos:column="41"/></name><operator pos:line="6" pos:column="41">-&gt;<pos:position pos:line="6" pos:column="46"/></operator><name pos:line="6" pos:column="43">service<pos:position pos:line="6" pos:column="50"/></name></name></expr> <pos:position pos:line="6" pos:column="51"/></then><else pos:line="6" pos:column="51">: <expr><name pos:line="6" pos:column="53">WT_DEFAULT_SERVICE<pos:position pos:line="6" pos:column="71"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="6" pos:column="72"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name><name pos:line="8" pos:column="7">cb<pos:position pos:line="8" pos:column="9"/></name><operator pos:line="8" pos:column="9">-&gt;<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="11">sock_fd<pos:position pos:line="8" pos:column="18"/></name></name> <operator pos:line="8" pos:column="19">&gt;<pos:position pos:line="8" pos:column="23"/></operator> <literal type="number" pos:line="8" pos:column="21">0<pos:position pos:line="8" pos:column="22"/></literal></expr>)<pos:position pos:line="8" pos:column="23"/></condition><then pos:line="8" pos:column="23">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><literal type="number" pos:line="9" pos:column="12">0<pos:position pos:line="9" pos:column="13"/></literal></expr>;<pos:position pos:line="9" pos:column="14"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="11" pos:column="3">now<pos:position pos:line="11" pos:column="6"/></name> <operator pos:line="11" pos:column="7">=<pos:position pos:line="11" pos:column="8"/></operator> <call><name pos:line="11" pos:column="9">cdtime<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">()<pos:position pos:line="11" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="18"/></expr_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name><name pos:line="12" pos:column="7">cb<pos:position pos:line="12" pos:column="9"/></name><operator pos:line="12" pos:column="9">-&gt;<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="11">ai<pos:position pos:line="12" pos:column="13"/></name></name></expr>)<pos:position pos:line="12" pos:column="14"/></condition><then pos:line="12" pos:column="14"> <block pos:line="12" pos:column="15">{
    <comment type="block" pos:line="13" pos:column="5">/* When we are here, we still have the IP in cache.
     * If we have remaining attempts without calling the DNS, we update the
     * last_update date so we keep the info until next time.
     * If there is no more attempts, we need to flush the cache.
     */</comment>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">(<pos:position pos:line="19" pos:column="10"/></operator><name><name pos:line="19" pos:column="10">cb<pos:position pos:line="19" pos:column="12"/></name><operator pos:line="19" pos:column="12">-&gt;<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="14">ai_last_update<pos:position pos:line="19" pos:column="28"/></name></name> <operator pos:line="19" pos:column="29">+<pos:position pos:line="19" pos:column="30"/></operator> <name pos:line="19" pos:column="31">resolve_interval<pos:position pos:line="19" pos:column="47"/></name> <operator pos:line="19" pos:column="48">+<pos:position pos:line="19" pos:column="49"/></operator> <name><name pos:line="19" pos:column="50">cb<pos:position pos:line="19" pos:column="52"/></name><operator pos:line="19" pos:column="52">-&gt;<pos:position pos:line="19" pos:column="57"/></operator><name pos:line="19" pos:column="54">next_random_ttl<pos:position pos:line="19" pos:column="69"/></name></name><operator pos:line="19" pos:column="69">)<pos:position pos:line="19" pos:column="70"/></operator> <operator pos:line="19" pos:column="71">&lt;<pos:position pos:line="19" pos:column="75"/></operator> <name pos:line="19" pos:column="73">now<pos:position pos:line="19" pos:column="76"/></name></expr>)<pos:position pos:line="19" pos:column="77"/></condition><then pos:line="19" pos:column="77"> <block pos:line="19" pos:column="78">{
      <expr_stmt><expr><name><name pos:line="20" pos:column="7">cb<pos:position pos:line="20" pos:column="9"/></name><operator pos:line="20" pos:column="9">-&gt;<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="11">next_random_ttl<pos:position pos:line="20" pos:column="26"/></name></name> <operator pos:line="20" pos:column="27">=<pos:position pos:line="20" pos:column="28"/></operator> <call><name pos:line="20" pos:column="29">new_random_ttl<pos:position pos:line="20" pos:column="43"/></name><argument_list pos:line="20" pos:column="43">()<pos:position pos:line="20" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="46"/></expr_stmt>
      <if pos:line="21" pos:column="7">if <condition pos:line="21" pos:column="10">(<expr><name><name pos:line="21" pos:column="11">cb<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">-&gt;<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="15">connect_dns_failed_attempts_remaining<pos:position pos:line="21" pos:column="52"/></name></name> <operator pos:line="21" pos:column="53">&gt;<pos:position pos:line="21" pos:column="57"/></operator> <literal type="number" pos:line="21" pos:column="55">0<pos:position pos:line="21" pos:column="56"/></literal></expr>)<pos:position pos:line="21" pos:column="57"/></condition><then pos:line="21" pos:column="57"> <block pos:line="21" pos:column="58">{
        <comment type="block" pos:line="22" pos:column="9">/* Warning : this is run under send_lock mutex.
         * This is why we do not use another mutex here.
         * */</comment>
        <expr_stmt><expr><name><name pos:line="25" pos:column="9">cb<pos:position pos:line="25" pos:column="11"/></name><operator pos:line="25" pos:column="11">-&gt;<pos:position pos:line="25" pos:column="16"/></operator><name pos:line="25" pos:column="13">ai_last_update<pos:position pos:line="25" pos:column="27"/></name></name> <operator pos:line="25" pos:column="28">=<pos:position pos:line="25" pos:column="29"/></operator> <name pos:line="25" pos:column="30">now<pos:position pos:line="25" pos:column="33"/></name></expr>;<pos:position pos:line="25" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="26" pos:column="9">cb<pos:position pos:line="26" pos:column="11"/></name><operator pos:line="26" pos:column="11">-&gt;<pos:position pos:line="26" pos:column="16"/></operator><name pos:line="26" pos:column="13">connect_dns_failed_attempts_remaining<pos:position pos:line="26" pos:column="50"/></name></name><operator pos:line="26" pos:column="50">--<pos:position pos:line="26" pos:column="52"/></operator></expr>;<pos:position pos:line="26" pos:column="53"/></expr_stmt>
      }<pos:position pos:line="27" pos:column="8"/></block></then> <else pos:line="27" pos:column="9">else <block pos:line="27" pos:column="14">{
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">freeaddrinfo<pos:position pos:line="28" pos:column="21"/></name><argument_list pos:line="28" pos:column="21">(<argument><expr><name><name pos:line="28" pos:column="22">cb<pos:position pos:line="28" pos:column="24"/></name><operator pos:line="28" pos:column="24">-&gt;<pos:position pos:line="28" pos:column="29"/></operator><name pos:line="28" pos:column="26">ai<pos:position pos:line="28" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="29" pos:column="9">cb<pos:position pos:line="29" pos:column="11"/></name><operator pos:line="29" pos:column="11">-&gt;<pos:position pos:line="29" pos:column="16"/></operator><name pos:line="29" pos:column="13">ai<pos:position pos:line="29" pos:column="15"/></name></name> <operator pos:line="29" pos:column="16">=<pos:position pos:line="29" pos:column="17"/></operator> <name pos:line="29" pos:column="18">NULL<pos:position pos:line="29" pos:column="22"/></name></expr>;<pos:position pos:line="29" pos:column="23"/></expr_stmt>
      }<pos:position pos:line="30" pos:column="8"/></block></else></if>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if>

  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><name><name pos:line="34" pos:column="7">cb<pos:position pos:line="34" pos:column="9"/></name><operator pos:line="34" pos:column="9">-&gt;<pos:position pos:line="34" pos:column="14"/></operator><name pos:line="34" pos:column="11">ai<pos:position pos:line="34" pos:column="13"/></name></name> <operator pos:line="34" pos:column="14">==<pos:position pos:line="34" pos:column="16"/></operator> <name pos:line="34" pos:column="17">NULL<pos:position pos:line="34" pos:column="21"/></name></expr>)<pos:position pos:line="34" pos:column="22"/></condition><then pos:line="34" pos:column="22"> <block pos:line="34" pos:column="23">{
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><operator pos:line="35" pos:column="9">(<pos:position pos:line="35" pos:column="10"/></operator><name><name pos:line="35" pos:column="10">cb<pos:position pos:line="35" pos:column="12"/></name><operator pos:line="35" pos:column="12">-&gt;<pos:position pos:line="35" pos:column="17"/></operator><name pos:line="35" pos:column="14">ai_last_update<pos:position pos:line="35" pos:column="28"/></name></name> <operator pos:line="35" pos:column="29">+<pos:position pos:line="35" pos:column="30"/></operator> <name pos:line="35" pos:column="31">resolve_interval<pos:position pos:line="35" pos:column="47"/></name> <operator pos:line="35" pos:column="48">+<pos:position pos:line="35" pos:column="49"/></operator> <name><name pos:line="35" pos:column="50">cb<pos:position pos:line="35" pos:column="52"/></name><operator pos:line="35" pos:column="52">-&gt;<pos:position pos:line="35" pos:column="57"/></operator><name pos:line="35" pos:column="54">next_random_ttl<pos:position pos:line="35" pos:column="69"/></name></name><operator pos:line="35" pos:column="69">)<pos:position pos:line="35" pos:column="70"/></operator> <operator pos:line="35" pos:column="71">&gt;=<pos:position pos:line="35" pos:column="76"/></operator> <name pos:line="35" pos:column="74">now<pos:position pos:line="35" pos:column="77"/></name></expr>)<pos:position pos:line="35" pos:column="78"/></condition><then pos:line="35" pos:column="78"> <block pos:line="35" pos:column="79">{
      <expr_stmt><expr><call><name pos:line="36" pos:column="7">DEBUG<pos:position pos:line="36" pos:column="12"/></name><argument_list pos:line="36" pos:column="12">(<argument><expr><literal type="string" pos:line="36" pos:column="13">"write_tsdb plugin: too many getaddrinfo(%s, %s) failures"<pos:position pos:line="36" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="73">node<pos:position pos:line="36" pos:column="77"/></name></expr></argument>,
            <argument><expr><name pos:line="37" pos:column="13">service<pos:position pos:line="37" pos:column="20"/></name></expr></argument>)<pos:position pos:line="37" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="22"/></expr_stmt>
      <return pos:line="38" pos:column="7">return <expr><operator pos:line="38" pos:column="14">-<pos:position pos:line="38" pos:column="15"/></operator><literal type="number" pos:line="38" pos:column="15">1<pos:position pos:line="38" pos:column="16"/></literal></expr>;<pos:position pos:line="38" pos:column="17"/></return>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="40" pos:column="5">cb<pos:position pos:line="40" pos:column="7"/></name><operator pos:line="40" pos:column="7">-&gt;<pos:position pos:line="40" pos:column="12"/></operator><name pos:line="40" pos:column="9">ai_last_update<pos:position pos:line="40" pos:column="23"/></name></name> <operator pos:line="40" pos:column="24">=<pos:position pos:line="40" pos:column="25"/></operator> <name pos:line="40" pos:column="26">now<pos:position pos:line="40" pos:column="29"/></name></expr>;<pos:position pos:line="40" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="41" pos:column="5">cb<pos:position pos:line="41" pos:column="7"/></name><operator pos:line="41" pos:column="7">-&gt;<pos:position pos:line="41" pos:column="12"/></operator><name pos:line="41" pos:column="9">next_random_ttl<pos:position pos:line="41" pos:column="24"/></name></name> <operator pos:line="41" pos:column="25">=<pos:position pos:line="41" pos:column="26"/></operator> <call><name pos:line="41" pos:column="27">new_random_ttl<pos:position pos:line="41" pos:column="41"/></name><argument_list pos:line="41" pos:column="41">()<pos:position pos:line="41" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="44"/></expr_stmt>

    <decl_stmt><decl><type><name><name pos:line="43" pos:column="5">struct<pos:position pos:line="43" pos:column="11"/></name> <name pos:line="43" pos:column="12">addrinfo<pos:position pos:line="43" pos:column="20"/></name></name></type> <name pos:line="43" pos:column="21">ai_hints<pos:position pos:line="43" pos:column="29"/></name> <init pos:line="43" pos:column="30">= <expr><block pos:line="43" pos:column="32">{
        <expr><operator pos:line="44" pos:column="9">.<pos:position pos:line="44" pos:column="10"/></operator><name pos:line="44" pos:column="10">ai_family<pos:position pos:line="44" pos:column="19"/></name> <operator pos:line="44" pos:column="20">=<pos:position pos:line="44" pos:column="21"/></operator> <name pos:line="44" pos:column="22">AF_UNSPEC<pos:position pos:line="44" pos:column="31"/></name></expr>,
        <expr><operator pos:line="45" pos:column="9">.<pos:position pos:line="45" pos:column="10"/></operator><name pos:line="45" pos:column="10">ai_flags<pos:position pos:line="45" pos:column="18"/></name> <operator pos:line="45" pos:column="19">=<pos:position pos:line="45" pos:column="20"/></operator> <name pos:line="45" pos:column="21">AI_ADDRCONFIG<pos:position pos:line="45" pos:column="34"/></name></expr>,
        <expr><operator pos:line="46" pos:column="9">.<pos:position pos:line="46" pos:column="10"/></operator><name pos:line="46" pos:column="10">ai_socktype<pos:position pos:line="46" pos:column="21"/></name> <operator pos:line="46" pos:column="22">=<pos:position pos:line="46" pos:column="23"/></operator> <name pos:line="46" pos:column="24">SOCK_STREAM<pos:position pos:line="46" pos:column="35"/></name></expr>,
    }<pos:position pos:line="47" pos:column="6"/></block></expr></init></decl>;<pos:position pos:line="47" pos:column="7"/></decl_stmt>

    <expr_stmt><expr><name pos:line="49" pos:column="5">status<pos:position pos:line="49" pos:column="11"/></name> <operator pos:line="49" pos:column="12">=<pos:position pos:line="49" pos:column="13"/></operator> <call><name pos:line="49" pos:column="14">getaddrinfo<pos:position pos:line="49" pos:column="25"/></name><argument_list pos:line="49" pos:column="25">(<argument><expr><name pos:line="49" pos:column="26">node<pos:position pos:line="49" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="32">service<pos:position pos:line="49" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="41">&amp;<pos:position pos:line="49" pos:column="46"/></operator><name pos:line="49" pos:column="42">ai_hints<pos:position pos:line="49" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="52">&amp;<pos:position pos:line="49" pos:column="57"/></operator><name><name pos:line="49" pos:column="53">cb<pos:position pos:line="49" pos:column="55"/></name><operator pos:line="49" pos:column="55">-&gt;<pos:position pos:line="49" pos:column="60"/></operator><name pos:line="49" pos:column="57">ai<pos:position pos:line="49" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="61"/></expr_stmt>
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><name pos:line="50" pos:column="9">status<pos:position pos:line="50" pos:column="15"/></name> <operator pos:line="50" pos:column="16">!=<pos:position pos:line="50" pos:column="18"/></operator> <literal type="number" pos:line="50" pos:column="19">0<pos:position pos:line="50" pos:column="20"/></literal></expr>)<pos:position pos:line="50" pos:column="21"/></condition><then pos:line="50" pos:column="21"> <block pos:line="50" pos:column="22">{
      <if pos:line="51" pos:column="7">if <condition pos:line="51" pos:column="10">(<expr><name><name pos:line="51" pos:column="11">cb<pos:position pos:line="51" pos:column="13"/></name><operator pos:line="51" pos:column="13">-&gt;<pos:position pos:line="51" pos:column="18"/></operator><name pos:line="51" pos:column="15">ai<pos:position pos:line="51" pos:column="17"/></name></name></expr>)<pos:position pos:line="51" pos:column="18"/></condition><then pos:line="51" pos:column="18"> <block pos:line="51" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">freeaddrinfo<pos:position pos:line="52" pos:column="21"/></name><argument_list pos:line="52" pos:column="21">(<argument><expr><name><name pos:line="52" pos:column="22">cb<pos:position pos:line="52" pos:column="24"/></name><operator pos:line="52" pos:column="24">-&gt;<pos:position pos:line="52" pos:column="29"/></operator><name pos:line="52" pos:column="26">ai<pos:position pos:line="52" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="53" pos:column="9">cb<pos:position pos:line="53" pos:column="11"/></name><operator pos:line="53" pos:column="11">-&gt;<pos:position pos:line="53" pos:column="16"/></operator><name pos:line="53" pos:column="13">ai<pos:position pos:line="53" pos:column="15"/></name></name> <operator pos:line="53" pos:column="16">=<pos:position pos:line="53" pos:column="17"/></operator> <name pos:line="53" pos:column="18">NULL<pos:position pos:line="53" pos:column="22"/></name></expr>;<pos:position pos:line="53" pos:column="23"/></expr_stmt>
      }<pos:position pos:line="54" pos:column="8"/></block></then></if>
      <if pos:line="55" pos:column="7">if <condition pos:line="55" pos:column="10">(<expr><name><name pos:line="55" pos:column="11">cb<pos:position pos:line="55" pos:column="13"/></name><operator pos:line="55" pos:column="13">-&gt;<pos:position pos:line="55" pos:column="18"/></operator><name pos:line="55" pos:column="15">connect_failed_log_enabled<pos:position pos:line="55" pos:column="41"/></name></name></expr>)<pos:position pos:line="55" pos:column="42"/></condition><then pos:line="55" pos:column="42"> <block pos:line="55" pos:column="43">{
        <expr_stmt><expr><call><name pos:line="56" pos:column="9">ERROR<pos:position pos:line="56" pos:column="14"/></name><argument_list pos:line="56" pos:column="14">(<argument><expr><literal type="string" pos:line="56" pos:column="15">"write_tsdb plugin: getaddrinfo(%s, %s) failed: %s"<pos:position pos:line="56" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="68">node<pos:position pos:line="56" pos:column="72"/></name></expr></argument>,
              <argument><expr><name pos:line="57" pos:column="15">service<pos:position pos:line="57" pos:column="22"/></name></expr></argument>, <argument><expr><call><name pos:line="57" pos:column="24">gai_strerror<pos:position pos:line="57" pos:column="36"/></name><argument_list pos:line="57" pos:column="36">(<argument><expr><name pos:line="57" pos:column="37">status<pos:position pos:line="57" pos:column="43"/></name></expr></argument>)<pos:position pos:line="57" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="57" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="58" pos:column="9">cb<pos:position pos:line="58" pos:column="11"/></name><operator pos:line="58" pos:column="11">-&gt;<pos:position pos:line="58" pos:column="16"/></operator><name pos:line="58" pos:column="13">connect_failed_log_enabled<pos:position pos:line="58" pos:column="39"/></name></name> <operator pos:line="58" pos:column="40">=<pos:position pos:line="58" pos:column="41"/></operator> <literal type="number" pos:line="58" pos:column="42">0<pos:position pos:line="58" pos:column="43"/></literal></expr>;<pos:position pos:line="58" pos:column="44"/></expr_stmt>
      }<pos:position pos:line="59" pos:column="8"/></block></then></if>
      <return pos:line="60" pos:column="7">return <expr><operator pos:line="60" pos:column="14">-<pos:position pos:line="60" pos:column="15"/></operator><literal type="number" pos:line="60" pos:column="15">1<pos:position pos:line="60" pos:column="16"/></literal></expr>;<pos:position pos:line="60" pos:column="17"/></return>
    }<pos:position pos:line="61" pos:column="6"/></block></then></if>
  }<pos:position pos:line="62" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="64" pos:column="3">assert<pos:position pos:line="64" pos:column="9"/></name><argument_list pos:line="64" pos:column="9">(<argument><expr><name><name pos:line="64" pos:column="10">cb<pos:position pos:line="64" pos:column="12"/></name><operator pos:line="64" pos:column="12">-&gt;<pos:position pos:line="64" pos:column="17"/></operator><name pos:line="64" pos:column="14">ai<pos:position pos:line="64" pos:column="16"/></name></name> <operator pos:line="64" pos:column="17">!=<pos:position pos:line="64" pos:column="19"/></operator> <name pos:line="64" pos:column="20">NULL<pos:position pos:line="64" pos:column="24"/></name></expr></argument>)<pos:position pos:line="64" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="26"/></expr_stmt>
  <for pos:line="65" pos:column="3">for <control pos:line="65" pos:column="7">(<init><decl><type><name><name pos:line="65" pos:column="8">struct<pos:position pos:line="65" pos:column="14"/></name> <name pos:line="65" pos:column="15">addrinfo<pos:position pos:line="65" pos:column="23"/></name></name> <modifier pos:line="65" pos:column="24">*<pos:position pos:line="65" pos:column="25"/></modifier><name pos:line="65" pos:column="25">ai<pos:position pos:line="65" pos:column="27"/></name></type> <init pos:line="65" pos:column="28">= <expr><name><name pos:line="65" pos:column="30">cb<pos:position pos:line="65" pos:column="32"/></name><operator pos:line="65" pos:column="32">-&gt;<pos:position pos:line="65" pos:column="37"/></operator><name pos:line="65" pos:column="34">ai<pos:position pos:line="65" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="65" pos:column="37"/></init> <condition><expr><name pos:line="65" pos:column="38">ai<pos:position pos:line="65" pos:column="40"/></name> <operator pos:line="65" pos:column="41">!=<pos:position pos:line="65" pos:column="43"/></operator> <name pos:line="65" pos:column="44">NULL<pos:position pos:line="65" pos:column="48"/></name></expr>;<pos:position pos:line="65" pos:column="49"/></condition> <incr><expr><name pos:line="65" pos:column="50">ai<pos:position pos:line="65" pos:column="52"/></name> <operator pos:line="65" pos:column="53">=<pos:position pos:line="65" pos:column="54"/></operator> <name><name pos:line="65" pos:column="55">ai<pos:position pos:line="65" pos:column="57"/></name><operator pos:line="65" pos:column="57">-&gt;<pos:position pos:line="65" pos:column="62"/></operator><name pos:line="65" pos:column="59">ai_next<pos:position pos:line="65" pos:column="66"/></name></name></expr></incr>)<pos:position pos:line="65" pos:column="67"/></control> <block pos:line="65" pos:column="68">{
    <expr_stmt><expr><name><name pos:line="66" pos:column="5">cb<pos:position pos:line="66" pos:column="7"/></name><operator pos:line="66" pos:column="7">-&gt;<pos:position pos:line="66" pos:column="12"/></operator><name pos:line="66" pos:column="9">sock_fd<pos:position pos:line="66" pos:column="16"/></name></name> <operator pos:line="66" pos:column="17">=<pos:position pos:line="66" pos:column="18"/></operator> <call><name pos:line="66" pos:column="19">socket<pos:position pos:line="66" pos:column="25"/></name><argument_list pos:line="66" pos:column="25">(<argument><expr><name><name pos:line="66" pos:column="26">ai<pos:position pos:line="66" pos:column="28"/></name><operator pos:line="66" pos:column="28">-&gt;<pos:position pos:line="66" pos:column="33"/></operator><name pos:line="66" pos:column="30">ai_family<pos:position pos:line="66" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="41">ai<pos:position pos:line="66" pos:column="43"/></name><operator pos:line="66" pos:column="43">-&gt;<pos:position pos:line="66" pos:column="48"/></operator><name pos:line="66" pos:column="45">ai_socktype<pos:position pos:line="66" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="58">ai<pos:position pos:line="66" pos:column="60"/></name><operator pos:line="66" pos:column="60">-&gt;<pos:position pos:line="66" pos:column="65"/></operator><name pos:line="66" pos:column="62">ai_protocol<pos:position pos:line="66" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="75"/></expr_stmt>
    <if pos:line="67" pos:column="5">if <condition pos:line="67" pos:column="8">(<expr><name><name pos:line="67" pos:column="9">cb<pos:position pos:line="67" pos:column="11"/></name><operator pos:line="67" pos:column="11">-&gt;<pos:position pos:line="67" pos:column="16"/></operator><name pos:line="67" pos:column="13">sock_fd<pos:position pos:line="67" pos:column="20"/></name></name> <operator pos:line="67" pos:column="21">&lt;<pos:position pos:line="67" pos:column="25"/></operator> <literal type="number" pos:line="67" pos:column="23">0<pos:position pos:line="67" pos:column="24"/></literal></expr>)<pos:position pos:line="67" pos:column="25"/></condition><then pos:line="67" pos:column="25">
      <block type="pseudo"><continue pos:line="68" pos:column="7">continue;<pos:position pos:line="68" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><call><name pos:line="70" pos:column="5">set_sock_opts<pos:position pos:line="70" pos:column="18"/></name><argument_list pos:line="70" pos:column="18">(<argument><expr><name><name pos:line="70" pos:column="19">cb<pos:position pos:line="70" pos:column="21"/></name><operator pos:line="70" pos:column="21">-&gt;<pos:position pos:line="70" pos:column="26"/></operator><name pos:line="70" pos:column="23">sock_fd<pos:position pos:line="70" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="32"/></expr_stmt>

    <expr_stmt><expr><name pos:line="72" pos:column="5">status<pos:position pos:line="72" pos:column="11"/></name> <operator pos:line="72" pos:column="12">=<pos:position pos:line="72" pos:column="13"/></operator> <call><name pos:line="72" pos:column="14">connect<pos:position pos:line="72" pos:column="21"/></name><argument_list pos:line="72" pos:column="21">(<argument><expr><name><name pos:line="72" pos:column="22">cb<pos:position pos:line="72" pos:column="24"/></name><operator pos:line="72" pos:column="24">-&gt;<pos:position pos:line="72" pos:column="29"/></operator><name pos:line="72" pos:column="26">sock_fd<pos:position pos:line="72" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="35">ai<pos:position pos:line="72" pos:column="37"/></name><operator pos:line="72" pos:column="37">-&gt;<pos:position pos:line="72" pos:column="42"/></operator><name pos:line="72" pos:column="39">ai_addr<pos:position pos:line="72" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="48">ai<pos:position pos:line="72" pos:column="50"/></name><operator pos:line="72" pos:column="50">-&gt;<pos:position pos:line="72" pos:column="55"/></operator><name pos:line="72" pos:column="52">ai_addrlen<pos:position pos:line="72" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="64"/></expr_stmt>
    <if pos:line="73" pos:column="5">if <condition pos:line="73" pos:column="8">(<expr><name pos:line="73" pos:column="9">status<pos:position pos:line="73" pos:column="15"/></name> <operator pos:line="73" pos:column="16">!=<pos:position pos:line="73" pos:column="18"/></operator> <literal type="number" pos:line="73" pos:column="19">0<pos:position pos:line="73" pos:column="20"/></literal></expr>)<pos:position pos:line="73" pos:column="21"/></condition><then pos:line="73" pos:column="21"> <block pos:line="73" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="74" pos:column="7">close<pos:position pos:line="74" pos:column="12"/></name><argument_list pos:line="74" pos:column="12">(<argument><expr><name><name pos:line="74" pos:column="13">cb<pos:position pos:line="74" pos:column="15"/></name><operator pos:line="74" pos:column="15">-&gt;<pos:position pos:line="74" pos:column="20"/></operator><name pos:line="74" pos:column="17">sock_fd<pos:position pos:line="74" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="75" pos:column="7">cb<pos:position pos:line="75" pos:column="9"/></name><operator pos:line="75" pos:column="9">-&gt;<pos:position pos:line="75" pos:column="14"/></operator><name pos:line="75" pos:column="11">sock_fd<pos:position pos:line="75" pos:column="18"/></name></name> <operator pos:line="75" pos:column="19">=<pos:position pos:line="75" pos:column="20"/></operator> <operator pos:line="75" pos:column="21">-<pos:position pos:line="75" pos:column="22"/></operator><literal type="number" pos:line="75" pos:column="22">1<pos:position pos:line="75" pos:column="23"/></literal></expr>;<pos:position pos:line="75" pos:column="24"/></expr_stmt>
      <continue pos:line="76" pos:column="7">continue;<pos:position pos:line="76" pos:column="16"/></continue>
    }<pos:position pos:line="77" pos:column="6"/></block></then></if>

    <break pos:line="79" pos:column="5">break;<pos:position pos:line="79" pos:column="11"/></break>
  }<pos:position pos:line="80" pos:column="4"/></block></for>

  <if pos:line="82" pos:column="3">if <condition pos:line="82" pos:column="6">(<expr><name><name pos:line="82" pos:column="7">cb<pos:position pos:line="82" pos:column="9"/></name><operator pos:line="82" pos:column="9">-&gt;<pos:position pos:line="82" pos:column="14"/></operator><name pos:line="82" pos:column="11">sock_fd<pos:position pos:line="82" pos:column="18"/></name></name> <operator pos:line="82" pos:column="19">&lt;<pos:position pos:line="82" pos:column="23"/></operator> <literal type="number" pos:line="82" pos:column="21">0<pos:position pos:line="82" pos:column="22"/></literal></expr>)<pos:position pos:line="82" pos:column="23"/></condition><then pos:line="82" pos:column="23"> <block pos:line="82" pos:column="24">{
    <decl_stmt><decl><type><name pos:line="83" pos:column="5">char<pos:position pos:line="83" pos:column="9"/></name></type> <name><name pos:line="83" pos:column="10">errbuf<pos:position pos:line="83" pos:column="16"/></name><index pos:line="83" pos:column="16">[<expr><literal type="number" pos:line="83" pos:column="17">1024<pos:position pos:line="83" pos:column="21"/></literal></expr>]<pos:position pos:line="83" pos:column="22"/></index></name></decl>;<pos:position pos:line="83" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="84" pos:column="5">ERROR<pos:position pos:line="84" pos:column="10"/></name><argument_list pos:line="84" pos:column="10">(<argument><expr><literal type="string" pos:line="84" pos:column="11">"write_tsdb plugin: Connecting to %s:%s failed. "<pos:position pos:line="84" pos:column="60"/></literal>
          <literal type="string" pos:line="85" pos:column="11">"The last error was: %s"<pos:position pos:line="85" pos:column="35"/></literal></expr></argument>,
          <argument><expr><name pos:line="86" pos:column="11">node<pos:position pos:line="86" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="17">service<pos:position pos:line="86" pos:column="24"/></name></expr></argument>, <argument><expr><call><name pos:line="86" pos:column="26">sstrerror<pos:position pos:line="86" pos:column="35"/></name><argument_list pos:line="86" pos:column="35">(<argument><expr><name pos:line="86" pos:column="36">errno<pos:position pos:line="86" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="43">errbuf<pos:position pos:line="86" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="86" pos:column="51">sizeof<argument_list pos:line="86" pos:column="57">(<argument><expr><name pos:line="86" pos:column="58">errbuf<pos:position pos:line="86" pos:column="64"/></name></expr></argument>)<pos:position pos:line="86" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="86" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="86" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="68"/></expr_stmt>
    <return pos:line="87" pos:column="5">return <expr><operator pos:line="87" pos:column="12">-<pos:position pos:line="87" pos:column="13"/></operator><literal type="number" pos:line="87" pos:column="13">1<pos:position pos:line="87" pos:column="14"/></literal></expr>;<pos:position pos:line="87" pos:column="15"/></return>
  }<pos:position pos:line="88" pos:column="4"/></block></then></if>

  <if pos:line="90" pos:column="3">if <condition pos:line="90" pos:column="6">(<expr><literal type="number" pos:line="90" pos:column="7">0<pos:position pos:line="90" pos:column="8"/></literal> <operator pos:line="90" pos:column="9">==<pos:position pos:line="90" pos:column="11"/></operator> <name><name pos:line="90" pos:column="12">cb<pos:position pos:line="90" pos:column="14"/></name><operator pos:line="90" pos:column="14">-&gt;<pos:position pos:line="90" pos:column="19"/></operator><name pos:line="90" pos:column="16">connect_failed_log_enabled<pos:position pos:line="90" pos:column="42"/></name></name></expr>)<pos:position pos:line="90" pos:column="43"/></condition><then pos:line="90" pos:column="43"> <block pos:line="90" pos:column="44">{
    <expr_stmt><expr><call><name pos:line="91" pos:column="5">WARNING<pos:position pos:line="91" pos:column="12"/></name><argument_list pos:line="91" pos:column="12">(<argument><expr><literal type="string" pos:line="91" pos:column="13">"write_tsdb plugin: Connecting to %s:%s succeeded."<pos:position pos:line="91" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="91" pos:column="66">node<pos:position pos:line="91" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="72">service<pos:position pos:line="91" pos:column="79"/></name></expr></argument>)<pos:position pos:line="91" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="81"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="92" pos:column="5">cb<pos:position pos:line="92" pos:column="7"/></name><operator pos:line="92" pos:column="7">-&gt;<pos:position pos:line="92" pos:column="12"/></operator><name pos:line="92" pos:column="9">connect_failed_log_enabled<pos:position pos:line="92" pos:column="35"/></name></name> <operator pos:line="92" pos:column="36">=<pos:position pos:line="92" pos:column="37"/></operator> <literal type="number" pos:line="92" pos:column="38">1<pos:position pos:line="92" pos:column="39"/></literal></expr>;<pos:position pos:line="92" pos:column="40"/></expr_stmt>
  }<pos:position pos:line="93" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="94" pos:column="3">cb<pos:position pos:line="94" pos:column="5"/></name><operator pos:line="94" pos:column="5">-&gt;<pos:position pos:line="94" pos:column="10"/></operator><name pos:line="94" pos:column="7">connect_dns_failed_attempts_remaining<pos:position pos:line="94" pos:column="44"/></name></name> <operator pos:line="94" pos:column="45">=<pos:position pos:line="94" pos:column="46"/></operator> <literal type="number" pos:line="94" pos:column="47">1<pos:position pos:line="94" pos:column="48"/></literal></expr>;<pos:position pos:line="94" pos:column="49"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="96" pos:column="3">wt_reset_buffer<pos:position pos:line="96" pos:column="18"/></name><argument_list pos:line="96" pos:column="18">(<argument><expr><name pos:line="96" pos:column="19">cb<pos:position pos:line="96" pos:column="21"/></name></expr></argument>)<pos:position pos:line="96" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="23"/></expr_stmt>

  <return pos:line="98" pos:column="3">return <expr><literal type="number" pos:line="98" pos:column="10">0<pos:position pos:line="98" pos:column="11"/></literal></expr>;<pos:position pos:line="98" pos:column="12"/></return>
}<pos:position pos:line="99" pos:column="2"/></block></function></unit>

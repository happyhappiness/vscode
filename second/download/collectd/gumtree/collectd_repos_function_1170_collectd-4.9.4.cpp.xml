<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1170_collectd-4.9.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">parse_file<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">FILE<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">fh<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="34"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">buf<pos:position pos:line="3" pos:column="11"/></name><index pos:line="3" pos:column="11">[<expr><literal type="number" pos:line="3" pos:column="12">4096<pos:position pos:line="3" pos:column="16"/></literal></expr>]<pos:position pos:line="3" pos:column="17"/></index></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">buf_len<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>

  <while pos:line="6" pos:column="3">while <condition pos:line="6" pos:column="9">(<expr><call><name pos:line="6" pos:column="10">fgets<pos:position pos:line="6" pos:column="15"/></name> <argument_list pos:line="6" pos:column="16">(<argument><expr><name pos:line="6" pos:column="17">buf<pos:position pos:line="6" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="22">sizeof <argument_list pos:line="6" pos:column="29">(<argument><expr><name pos:line="6" pos:column="30">buf<pos:position pos:line="6" pos:column="33"/></name></expr></argument>)<pos:position pos:line="6" pos:column="34"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="6" pos:column="36">fh<pos:position pos:line="6" pos:column="38"/></name></expr></argument>)<pos:position pos:line="6" pos:column="39"/></argument_list></call> <operator pos:line="6" pos:column="40">!=<pos:position pos:line="6" pos:column="42"/></operator> <name pos:line="6" pos:column="43">NULL<pos:position pos:line="6" pos:column="47"/></name></expr>)<pos:position pos:line="6" pos:column="48"/></condition>
  <block pos:line="7" pos:column="3">{
    <expr_stmt><expr><name pos:line="8" pos:column="5">buf_len<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">=<pos:position pos:line="8" pos:column="14"/></operator> <call><name pos:line="8" pos:column="15">strlen<pos:position pos:line="8" pos:column="21"/></name> <argument_list pos:line="8" pos:column="22">(<argument><expr><name pos:line="8" pos:column="23">buf<pos:position pos:line="8" pos:column="26"/></name></expr></argument>)<pos:position pos:line="8" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="28"/></expr_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">buf_len<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">&gt;=<pos:position pos:line="10" pos:column="22"/></operator> <literal type="number" pos:line="10" pos:column="20">4095<pos:position pos:line="10" pos:column="24"/></literal></expr>)<pos:position pos:line="10" pos:column="25"/></condition><then pos:line="10" pos:column="25">
    <block pos:line="11" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="12" pos:column="7">NOTICE<pos:position pos:line="12" pos:column="13"/></name> <argument_list pos:line="12" pos:column="14">(<argument><expr><literal type="string" pos:line="12" pos:column="15">"Skipping line with more than 4095 characters."<pos:position pos:line="12" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="64"/></expr_stmt>
      <do pos:line="13" pos:column="7">do
      <block pos:line="14" pos:column="7">{
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><call><name pos:line="15" pos:column="13">fgets<pos:position pos:line="15" pos:column="18"/></name> <argument_list pos:line="15" pos:column="19">(<argument><expr><name pos:line="15" pos:column="20">buf<pos:position pos:line="15" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="25">sizeof <argument_list pos:line="15" pos:column="32">(<argument><expr><name pos:line="15" pos:column="33">buf<pos:position pos:line="15" pos:column="36"/></name></expr></argument>)<pos:position pos:line="15" pos:column="37"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="15" pos:column="39">fh<pos:position pos:line="15" pos:column="41"/></name></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></call> <operator pos:line="15" pos:column="43">==<pos:position pos:line="15" pos:column="45"/></operator> <name pos:line="15" pos:column="46">NULL<pos:position pos:line="15" pos:column="50"/></name></expr>)<pos:position pos:line="15" pos:column="51"/></condition><then pos:line="15" pos:column="51">
	  <block type="pseudo"><break pos:line="16" pos:column="11">break;<pos:position pos:line="16" pos:column="17"/></break></block></then></if>
	<expr_stmt><expr><name pos:line="17" pos:column="9">buf_len<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <call><name pos:line="17" pos:column="19">strlen<pos:position pos:line="17" pos:column="25"/></name> <argument_list pos:line="17" pos:column="26">(<argument><expr><name pos:line="17" pos:column="27">buf<pos:position pos:line="17" pos:column="30"/></name></expr></argument>)<pos:position pos:line="17" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="32"/></expr_stmt>
      }<pos:position pos:line="18" pos:column="8"/></block> while <condition pos:line="18" pos:column="15">(<expr><name pos:line="18" pos:column="16">buf_len<pos:position pos:line="18" pos:column="23"/></name> <operator pos:line="18" pos:column="24">&gt;=<pos:position pos:line="18" pos:column="29"/></operator> <literal type="number" pos:line="18" pos:column="27">4095<pos:position pos:line="18" pos:column="31"/></literal></expr>)<pos:position pos:line="18" pos:column="32"/></condition>;<pos:position pos:line="18" pos:column="33"/></do>
      <continue pos:line="19" pos:column="7">continue;<pos:position pos:line="19" pos:column="16"/></continue>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if> <comment type="block" pos:line="20" pos:column="7">/* if (buf_len &gt;= 4095) */</comment>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">(<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="10">buf_len<pos:position pos:line="22" pos:column="17"/></name> <operator pos:line="22" pos:column="18">==<pos:position pos:line="22" pos:column="20"/></operator> <literal type="number" pos:line="22" pos:column="21">0<pos:position pos:line="22" pos:column="22"/></literal><operator pos:line="22" pos:column="22">)<pos:position pos:line="22" pos:column="23"/></operator> <operator pos:line="22" pos:column="24">||<pos:position pos:line="22" pos:column="26"/></operator> <operator pos:line="22" pos:column="27">(<pos:position pos:line="22" pos:column="28"/></operator><name><name pos:line="22" pos:column="28">buf<pos:position pos:line="22" pos:column="31"/></name><index pos:line="22" pos:column="31">[<expr><literal type="number" pos:line="22" pos:column="32">0<pos:position pos:line="22" pos:column="33"/></literal></expr>]<pos:position pos:line="22" pos:column="34"/></index></name> <operator pos:line="22" pos:column="35">==<pos:position pos:line="22" pos:column="37"/></operator> <literal type="char" pos:line="22" pos:column="38">'#'<pos:position pos:line="22" pos:column="41"/></literal><operator pos:line="22" pos:column="41">)<pos:position pos:line="22" pos:column="42"/></operator></expr>)<pos:position pos:line="22" pos:column="43"/></condition><then pos:line="22" pos:column="43">
      <block type="pseudo"><continue pos:line="23" pos:column="7">continue;<pos:position pos:line="23" pos:column="16"/></continue></block></then></if>

    <while pos:line="25" pos:column="5">while <condition pos:line="25" pos:column="11">(<expr><operator pos:line="25" pos:column="12">(<pos:position pos:line="25" pos:column="13"/></operator><name pos:line="25" pos:column="13">buf_len<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">&gt;<pos:position pos:line="25" pos:column="25"/></operator> <literal type="number" pos:line="25" pos:column="23">0<pos:position pos:line="25" pos:column="24"/></literal><operator pos:line="25" pos:column="24">)<pos:position pos:line="25" pos:column="25"/></operator> <operator pos:line="25" pos:column="26">&amp;&amp;<pos:position pos:line="25" pos:column="36"/></operator> <operator pos:line="25" pos:column="29">(<pos:position pos:line="25" pos:column="30"/></operator><operator pos:line="25" pos:column="30">(<pos:position pos:line="25" pos:column="31"/></operator><name><name pos:line="25" pos:column="31">buf<pos:position pos:line="25" pos:column="34"/></name><index pos:line="25" pos:column="34">[<expr><name pos:line="25" pos:column="35">buf_len<pos:position pos:line="25" pos:column="42"/></name> <operator pos:line="25" pos:column="43">-<pos:position pos:line="25" pos:column="44"/></operator> <literal type="number" pos:line="25" pos:column="45">1<pos:position pos:line="25" pos:column="46"/></literal></expr>]<pos:position pos:line="25" pos:column="47"/></index></name> <operator pos:line="25" pos:column="48">==<pos:position pos:line="25" pos:column="50"/></operator> <literal type="char" pos:line="25" pos:column="51">'\n'<pos:position pos:line="25" pos:column="55"/></literal><operator pos:line="25" pos:column="55">)<pos:position pos:line="25" pos:column="56"/></operator>
	  <operator pos:line="26" pos:column="11">||<pos:position pos:line="26" pos:column="13"/></operator> <operator pos:line="26" pos:column="14">(<pos:position pos:line="26" pos:column="15"/></operator><name><name pos:line="26" pos:column="15">buf<pos:position pos:line="26" pos:column="18"/></name><index pos:line="26" pos:column="18">[<expr><name pos:line="26" pos:column="19">buf_len<pos:position pos:line="26" pos:column="26"/></name> <operator pos:line="26" pos:column="27">-<pos:position pos:line="26" pos:column="28"/></operator> <literal type="number" pos:line="26" pos:column="29">1<pos:position pos:line="26" pos:column="30"/></literal></expr>]<pos:position pos:line="26" pos:column="31"/></index></name> <operator pos:line="26" pos:column="32">==<pos:position pos:line="26" pos:column="34"/></operator> <literal type="char" pos:line="26" pos:column="35">'\n'<pos:position pos:line="26" pos:column="39"/></literal><operator pos:line="26" pos:column="39">)<pos:position pos:line="26" pos:column="40"/></operator><operator pos:line="26" pos:column="40">)<pos:position pos:line="26" pos:column="41"/></operator></expr>)<pos:position pos:line="26" pos:column="42"/></condition>
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="27" pos:column="7">buf<pos:position pos:line="27" pos:column="10"/></name><index pos:line="27" pos:column="10">[<expr><operator pos:line="27" pos:column="11">--<pos:position pos:line="27" pos:column="13"/></operator><name pos:line="27" pos:column="13">buf_len<pos:position pos:line="27" pos:column="20"/></name></expr>]<pos:position pos:line="27" pos:column="21"/></index></name> <operator pos:line="27" pos:column="22">=<pos:position pos:line="27" pos:column="23"/></operator> <literal type="char" pos:line="27" pos:column="24">'\0'<pos:position pos:line="27" pos:column="28"/></literal></expr>;<pos:position pos:line="27" pos:column="29"/></expr_stmt></block></while>

    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">buf_len<pos:position pos:line="29" pos:column="16"/></name> <operator pos:line="29" pos:column="17">==<pos:position pos:line="29" pos:column="19"/></operator> <literal type="number" pos:line="29" pos:column="20">0<pos:position pos:line="29" pos:column="21"/></literal></expr>)<pos:position pos:line="29" pos:column="22"/></condition><then pos:line="29" pos:column="22">
      <block type="pseudo"><continue pos:line="30" pos:column="7">continue;<pos:position pos:line="30" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><call><name pos:line="32" pos:column="5">parse_line<pos:position pos:line="32" pos:column="15"/></name> <argument_list pos:line="32" pos:column="16">(<argument><expr><name pos:line="32" pos:column="17">buf<pos:position pos:line="32" pos:column="20"/></name></expr></argument>)<pos:position pos:line="32" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="33" pos:column="4"/></block></while> <comment type="block" pos:line="33" pos:column="5">/* while (fgets) */</comment>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

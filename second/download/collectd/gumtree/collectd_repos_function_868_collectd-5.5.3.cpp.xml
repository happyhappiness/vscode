<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_868_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">setup_all_buffers<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">void<pos:position pos:line="1" pos:column="34"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="35"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">ret<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="5" pos:column="9">DO_OR_GOTO_ERR<pos:position pos:line="5" pos:column="23"/></name><argument_list pos:line="5" pos:column="23">(<argument><expr><call><name pos:line="5" pos:column="24">topology_probe<pos:position pos:line="5" pos:column="38"/></name><argument_list pos:line="5" pos:column="38">()<pos:position pos:line="5" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="6" pos:column="9">DO_OR_GOTO_ERR<pos:position pos:line="6" pos:column="23"/></name><argument_list pos:line="6" pos:column="23">(<argument><expr><call><name pos:line="6" pos:column="24">allocate_counters<pos:position pos:line="6" pos:column="41"/></name><argument_list pos:line="6" pos:column="41">(<argument><expr><operator pos:line="6" pos:column="42">&amp;<pos:position pos:line="6" pos:column="47"/></operator><name pos:line="6" pos:column="43">thread_even<pos:position pos:line="6" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="56">&amp;<pos:position pos:line="6" pos:column="61"/></operator><name pos:line="6" pos:column="57">core_even<pos:position pos:line="6" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="68">&amp;<pos:position pos:line="6" pos:column="73"/></operator><name pos:line="6" pos:column="69">package_even<pos:position pos:line="6" pos:column="81"/></name></expr></argument>)<pos:position pos:line="6" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="84"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="7" pos:column="9">DO_OR_GOTO_ERR<pos:position pos:line="7" pos:column="23"/></name><argument_list pos:line="7" pos:column="23">(<argument><expr><call><name pos:line="7" pos:column="24">allocate_counters<pos:position pos:line="7" pos:column="41"/></name><argument_list pos:line="7" pos:column="41">(<argument><expr><operator pos:line="7" pos:column="42">&amp;<pos:position pos:line="7" pos:column="47"/></operator><name pos:line="7" pos:column="43">thread_odd<pos:position pos:line="7" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="55">&amp;<pos:position pos:line="7" pos:column="60"/></operator><name pos:line="7" pos:column="56">core_odd<pos:position pos:line="7" pos:column="64"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="66">&amp;<pos:position pos:line="7" pos:column="71"/></operator><name pos:line="7" pos:column="67">package_odd<pos:position pos:line="7" pos:column="78"/></name></expr></argument>)<pos:position pos:line="7" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="81"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">DO_OR_GOTO_ERR<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">(<argument><expr><call><name pos:line="8" pos:column="24">allocate_counters<pos:position pos:line="8" pos:column="41"/></name><argument_list pos:line="8" pos:column="41">(<argument><expr><operator pos:line="8" pos:column="42">&amp;<pos:position pos:line="8" pos:column="47"/></operator><name pos:line="8" pos:column="43">thread_delta<pos:position pos:line="8" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="57">&amp;<pos:position pos:line="8" pos:column="62"/></operator><name pos:line="8" pos:column="58">core_delta<pos:position pos:line="8" pos:column="68"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="70">&amp;<pos:position pos:line="8" pos:column="75"/></operator><name pos:line="8" pos:column="71">package_delta<pos:position pos:line="8" pos:column="84"/></name></expr></argument>)<pos:position pos:line="8" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="87"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">initialize_counters<pos:position pos:line="9" pos:column="28"/></name><argument_list pos:line="9" pos:column="28">()<pos:position pos:line="9" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="10" pos:column="9">DO_OR_GOTO_ERR<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><call><name pos:line="10" pos:column="24">for_all_cpus<pos:position pos:line="10" pos:column="36"/></name><argument_list pos:line="10" pos:column="36">(<argument><expr><name pos:line="10" pos:column="37">set_temperature_target<pos:position pos:line="10" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="61">EVEN_COUNTERS<pos:position pos:line="10" pos:column="74"/></name></expr></argument>)<pos:position pos:line="10" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="77"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">DO_OR_GOTO_ERR<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">(<argument><expr><call><name pos:line="11" pos:column="24">for_all_cpus<pos:position pos:line="11" pos:column="36"/></name><argument_list pos:line="11" pos:column="36">(<argument><expr><name pos:line="11" pos:column="37">set_temperature_target<pos:position pos:line="11" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="61">ODD_COUNTERS<pos:position pos:line="11" pos:column="73"/></name></expr></argument>)<pos:position pos:line="11" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="76"/></expr_stmt>

	<expr_stmt><expr><name pos:line="13" pos:column="9">allocated<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">=<pos:position pos:line="13" pos:column="20"/></operator> <literal type="number" pos:line="13" pos:column="21">1<pos:position pos:line="13" pos:column="22"/></literal></expr>;<pos:position pos:line="13" pos:column="23"/></expr_stmt>
	<return pos:line="14" pos:column="9">return <expr><literal type="number" pos:line="14" pos:column="16">0<pos:position pos:line="14" pos:column="17"/></literal></expr>;<pos:position pos:line="14" pos:column="18"/></return>
<label><name pos:line="15" pos:column="1">err<pos:position pos:line="15" pos:column="4"/></name>:<pos:position pos:line="15" pos:column="5"/></label>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">free_all_buffers<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">()<pos:position pos:line="16" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="28"/></expr_stmt>
	<return pos:line="17" pos:column="9">return <expr><name pos:line="17" pos:column="16">ret<pos:position pos:line="17" pos:column="19"/></name></expr>;<pos:position pos:line="17" pos:column="20"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

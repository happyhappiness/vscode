<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2614_collectd-5.6.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">plugin_register_log<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">name<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">plugin_log_cb<pos:position pos:line="1" pos:column="56"/></name></type> <name pos:line="1" pos:column="57">callback<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
                        <parameter><decl><type><name pos:line="2" pos:column="25">user_data_t<pos:position pos:line="2" pos:column="36"/></name> <specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">ud<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list> <block pos:line="2" pos:column="48">{
  <return pos:line="3" pos:column="3">return <expr><operator pos:line="3" pos:column="10">(<pos:position pos:line="3" pos:column="11"/></operator><call><name pos:line="3" pos:column="11">create_register_callback<pos:position pos:line="3" pos:column="35"/></name><argument_list pos:line="3" pos:column="35">(<argument><expr><operator pos:line="3" pos:column="36">&amp;<pos:position pos:line="3" pos:column="41"/></operator><name pos:line="3" pos:column="37">list_log<pos:position pos:line="3" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="47">name<pos:position pos:line="3" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="3" pos:column="53">(<pos:position pos:line="3" pos:column="54"/></operator><name pos:line="3" pos:column="54">void<pos:position pos:line="3" pos:column="58"/></name> <operator pos:line="3" pos:column="59">*<pos:position pos:line="3" pos:column="60"/></operator><operator pos:line="3" pos:column="60">)<pos:position pos:line="3" pos:column="61"/></operator><name pos:line="3" pos:column="61">callback<pos:position pos:line="3" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="71">ud<pos:position pos:line="3" pos:column="73"/></name></expr></argument>)<pos:position pos:line="3" pos:column="74"/></argument_list></call><operator pos:line="3" pos:column="74">)<pos:position pos:line="3" pos:column="75"/></operator></expr>;<pos:position pos:line="3" pos:column="76"/></return>
}<pos:position pos:line="4" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_190_collectd-4.3.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">value_cache_t<pos:position pos:line="1" pos:column="21"/></name> <modifier pos:line="1" pos:column="22">*<pos:position pos:line="1" pos:column="23"/></modifier></type><name pos:line="1" pos:column="23">cache_search<pos:position pos:line="1" pos:column="35"/></name> <parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><specifier pos:line="1" pos:column="37">const<pos:position pos:line="1" pos:column="42"/></specifier> <name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">name<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">value_cache_t<pos:position pos:line="3" pos:column="22"/></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">vc<pos:position pos:line="3" pos:column="26"/></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>

	<for pos:line="5" pos:column="9">for <control pos:line="5" pos:column="13">(<init><expr><name pos:line="5" pos:column="14">vc<pos:position pos:line="5" pos:column="16"/></name> <operator pos:line="5" pos:column="17">=<pos:position pos:line="5" pos:column="18"/></operator> <name pos:line="5" pos:column="19">cache_head<pos:position pos:line="5" pos:column="29"/></name></expr>;<pos:position pos:line="5" pos:column="30"/></init> <condition><expr><name pos:line="5" pos:column="31">vc<pos:position pos:line="5" pos:column="33"/></name> <operator pos:line="5" pos:column="34">!=<pos:position pos:line="5" pos:column="36"/></operator> <name pos:line="5" pos:column="37">NULL<pos:position pos:line="5" pos:column="41"/></name></expr>;<pos:position pos:line="5" pos:column="42"/></condition> <incr><expr><name pos:line="5" pos:column="43">vc<pos:position pos:line="5" pos:column="45"/></name> <operator pos:line="5" pos:column="46">=<pos:position pos:line="5" pos:column="47"/></operator> <name><name pos:line="5" pos:column="48">vc<pos:position pos:line="5" pos:column="50"/></name><operator pos:line="5" pos:column="50">-&gt;<pos:position pos:line="5" pos:column="55"/></operator><name pos:line="5" pos:column="52">next<pos:position pos:line="5" pos:column="56"/></name></name></expr></incr>)<pos:position pos:line="5" pos:column="57"/></control>
	<block pos:line="6" pos:column="9">{
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><call><name pos:line="7" pos:column="21">strcmp<pos:position pos:line="7" pos:column="27"/></name> <argument_list pos:line="7" pos:column="28">(<argument><expr><name><name pos:line="7" pos:column="29">vc<pos:position pos:line="7" pos:column="31"/></name><operator pos:line="7" pos:column="31">-&gt;<pos:position pos:line="7" pos:column="36"/></operator><name pos:line="7" pos:column="33">name<pos:position pos:line="7" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="39">name<pos:position pos:line="7" pos:column="43"/></name></expr></argument>)<pos:position pos:line="7" pos:column="44"/></argument_list></call> <operator pos:line="7" pos:column="45">==<pos:position pos:line="7" pos:column="47"/></operator> <literal type="number" pos:line="7" pos:column="48">0<pos:position pos:line="7" pos:column="49"/></literal></expr>)<pos:position pos:line="7" pos:column="50"/></condition><then pos:line="7" pos:column="50">
			<block type="pseudo"><break pos:line="8" pos:column="25">break;<pos:position pos:line="8" pos:column="31"/></break></block></then></if>
	}<pos:position pos:line="9" pos:column="10"/></block></for> <comment type="block" pos:line="9" pos:column="11">/* for vc = cache_head .. NULL */</comment>

	<return pos:line="11" pos:column="9">return <expr><operator pos:line="11" pos:column="16">(<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="17">vc<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">)<pos:position pos:line="11" pos:column="20"/></operator></expr>;<pos:position pos:line="11" pos:column="21"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1151_collectd-4.5.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">my_write<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <name pos:line="1" pos:column="28">data_set_t<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">ds<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name pos:line="1" pos:column="50">value_list_t<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">vl<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name></type> <name><name pos:line="3" pos:column="14">name<pos:position pos:line="3" pos:column="18"/></name><index pos:line="3" pos:column="18">[<expr><literal type="number" pos:line="3" pos:column="19">1024<pos:position pos:line="3" pos:column="23"/></literal></expr>]<pos:position pos:line="3" pos:column="24"/></index></name> <init pos:line="3" pos:column="25">= <expr><literal type="string" pos:line="3" pos:column="27">""<pos:position pos:line="3" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><literal type="number" pos:line="4" pos:column="17">0<pos:position pos:line="4" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name><name pos:line="6" pos:column="13">ds<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">-&gt;<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="17">ds_num<pos:position pos:line="6" pos:column="23"/></name></name> <operator pos:line="6" pos:column="24">!=<pos:position pos:line="6" pos:column="26"/></operator> <name><name pos:line="6" pos:column="27">vl<pos:position pos:line="6" pos:column="29"/></name><operator pos:line="6" pos:column="29">-&gt;<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="31">values_len<pos:position pos:line="6" pos:column="41"/></name></name></expr>)<pos:position pos:line="6" pos:column="42"/></condition><then pos:line="6" pos:column="42"> <block pos:line="6" pos:column="43">{
		<expr_stmt><expr><call><name pos:line="7" pos:column="17">plugin_log<pos:position pos:line="7" pos:column="27"/></name> <argument_list pos:line="7" pos:column="28">(<argument><expr><name pos:line="7" pos:column="29">LOG_WARNING<pos:position pos:line="7" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="42">"DS number does not match values length"<pos:position pos:line="7" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="84"/></expr_stmt>
		<return pos:line="8" pos:column="17">return <expr><operator pos:line="8" pos:column="24">-<pos:position pos:line="8" pos:column="25"/></operator><literal type="number" pos:line="8" pos:column="25">1<pos:position pos:line="8" pos:column="26"/></literal></expr>;<pos:position pos:line="8" pos:column="27"/></return>
	}<pos:position pos:line="9" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="11" pos:column="9">/* get the default base filename for the output file - depending on the
	 * provided values this will be something like
	 * &lt;host&gt;/&lt;plugin&gt;[-&lt;plugin_type&gt;]/&lt;instance&gt;[-&lt;instance_type&gt;] */</comment>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><literal type="number" pos:line="14" pos:column="13">0<pos:position pos:line="14" pos:column="14"/></literal> <operator pos:line="14" pos:column="15">!=<pos:position pos:line="14" pos:column="17"/></operator> <call><name pos:line="14" pos:column="18">format_name<pos:position pos:line="14" pos:column="29"/></name> <argument_list pos:line="14" pos:column="30">(<argument><expr><name pos:line="14" pos:column="31">name<pos:position pos:line="14" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="37">1024<pos:position pos:line="14" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="43">vl<pos:position pos:line="14" pos:column="45"/></name><operator pos:line="14" pos:column="45">-&gt;<pos:position pos:line="14" pos:column="50"/></operator><name pos:line="14" pos:column="47">host<pos:position pos:line="14" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="53">vl<pos:position pos:line="14" pos:column="55"/></name><operator pos:line="14" pos:column="55">-&gt;<pos:position pos:line="14" pos:column="60"/></operator><name pos:line="14" pos:column="57">plugin<pos:position pos:line="14" pos:column="63"/></name></name></expr></argument>,
			<argument><expr><name><name pos:line="15" pos:column="25">vl<pos:position pos:line="15" pos:column="27"/></name><operator pos:line="15" pos:column="27">-&gt;<pos:position pos:line="15" pos:column="32"/></operator><name pos:line="15" pos:column="29">plugin_instance<pos:position pos:line="15" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="46">ds<pos:position pos:line="15" pos:column="48"/></name><operator pos:line="15" pos:column="48">-&gt;<pos:position pos:line="15" pos:column="53"/></operator><name pos:line="15" pos:column="50">type<pos:position pos:line="15" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="56">vl<pos:position pos:line="15" pos:column="58"/></name><operator pos:line="15" pos:column="58">-&gt;<pos:position pos:line="15" pos:column="63"/></operator><name pos:line="15" pos:column="60">type_instance<pos:position pos:line="15" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="75"/></condition><then pos:line="15" pos:column="75">
		<block type="pseudo"><return pos:line="16" pos:column="17">return <expr><operator pos:line="16" pos:column="24">-<pos:position pos:line="16" pos:column="25"/></operator><literal type="number" pos:line="16" pos:column="25">1<pos:position pos:line="16" pos:column="26"/></literal></expr>;<pos:position pos:line="16" pos:column="27"/></return></block></then></if>

	<for pos:line="18" pos:column="9">for <control pos:line="18" pos:column="13">(<init><expr><name pos:line="18" pos:column="14">i<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <literal type="number" pos:line="18" pos:column="18">0<pos:position pos:line="18" pos:column="19"/></literal></expr>;<pos:position pos:line="18" pos:column="20"/></init> <condition><expr><name pos:line="18" pos:column="21">i<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">&lt;<pos:position pos:line="18" pos:column="27"/></operator> <name><name pos:line="18" pos:column="25">ds<pos:position pos:line="18" pos:column="27"/></name><operator pos:line="18" pos:column="27">-&gt;<pos:position pos:line="18" pos:column="32"/></operator><name pos:line="18" pos:column="29">ds_num<pos:position pos:line="18" pos:column="35"/></name></name></expr>;<pos:position pos:line="18" pos:column="36"/></condition> <incr><expr><operator pos:line="18" pos:column="37">++<pos:position pos:line="18" pos:column="39"/></operator><name pos:line="18" pos:column="39">i<pos:position pos:line="18" pos:column="40"/></name></expr></incr>)<pos:position pos:line="18" pos:column="41"/></control> <block pos:line="18" pos:column="42">{
		<comment type="block" pos:line="19" pos:column="17">/* do the magic to output the data */</comment>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">printf<pos:position pos:line="20" pos:column="23"/></name> <argument_list pos:line="20" pos:column="24">(<argument><expr><literal type="string" pos:line="20" pos:column="25">"%s (%s) at %i: "<pos:position pos:line="20" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="44">name<pos:position pos:line="20" pos:column="48"/></name></expr></argument>,
				<argument><expr><ternary><condition><expr><operator pos:line="21" pos:column="33">(<pos:position pos:line="21" pos:column="34"/></operator><name><name pos:line="21" pos:column="34">ds<pos:position pos:line="21" pos:column="36"/></name><operator pos:line="21" pos:column="36">-&gt;<pos:position pos:line="21" pos:column="41"/></operator><name pos:line="21" pos:column="38">ds<pos:position pos:line="21" pos:column="40"/></name><operator pos:line="21" pos:column="40">-&gt;<pos:position pos:line="21" pos:column="45"/></operator><name pos:line="21" pos:column="42">type<pos:position pos:line="21" pos:column="46"/></name></name> <operator pos:line="21" pos:column="47">==<pos:position pos:line="21" pos:column="49"/></operator> <name pos:line="21" pos:column="50">DS_TYPE_GAUGE<pos:position pos:line="21" pos:column="63"/></name><operator pos:line="21" pos:column="63">)<pos:position pos:line="21" pos:column="64"/></operator></expr> ?<pos:position pos:line="21" pos:column="66"/></condition><then pos:line="21" pos:column="66"> <expr><literal type="string" pos:line="21" pos:column="67">"GAUGE"<pos:position pos:line="21" pos:column="74"/></literal></expr> <pos:position pos:line="21" pos:column="75"/></then><else pos:line="21" pos:column="75">: <expr><literal type="string" pos:line="21" pos:column="77">"COUNTER"<pos:position pos:line="21" pos:column="86"/></literal></expr></else></ternary></expr></argument>,
				<argument><expr><operator pos:line="22" pos:column="33">(<pos:position pos:line="22" pos:column="34"/></operator><name pos:line="22" pos:column="34">int<pos:position pos:line="22" pos:column="37"/></name><operator pos:line="22" pos:column="37">)<pos:position pos:line="22" pos:column="38"/></operator><name><name pos:line="22" pos:column="38">vl<pos:position pos:line="22" pos:column="40"/></name><operator pos:line="22" pos:column="40">-&gt;<pos:position pos:line="22" pos:column="45"/></operator><name pos:line="22" pos:column="42">time<pos:position pos:line="22" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="48"/></expr_stmt>

		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><name><name pos:line="24" pos:column="21">ds<pos:position pos:line="24" pos:column="23"/></name><operator pos:line="24" pos:column="23">-&gt;<pos:position pos:line="24" pos:column="28"/></operator><name pos:line="24" pos:column="25">ds<pos:position pos:line="24" pos:column="27"/></name><operator pos:line="24" pos:column="27">-&gt;<pos:position pos:line="24" pos:column="32"/></operator><name pos:line="24" pos:column="29">type<pos:position pos:line="24" pos:column="33"/></name></name> <operator pos:line="24" pos:column="34">==<pos:position pos:line="24" pos:column="36"/></operator> <name pos:line="24" pos:column="37">DS_TYPE_GAUGE<pos:position pos:line="24" pos:column="50"/></name></expr>)<pos:position pos:line="24" pos:column="51"/></condition><then pos:line="24" pos:column="51">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="25">printf<pos:position pos:line="25" pos:column="31"/></name> <argument_list pos:line="25" pos:column="32">(<argument><expr><literal type="string" pos:line="25" pos:column="33">"%f\n"<pos:position pos:line="25" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="41">vl<pos:position pos:line="25" pos:column="43"/></name><operator pos:line="25" pos:column="43">-&gt;<pos:position pos:line="25" pos:column="48"/></operator><name pos:line="25" pos:column="45">values<pos:position pos:line="25" pos:column="51"/></name><index pos:line="25" pos:column="51">[<expr><name pos:line="25" pos:column="52">i<pos:position pos:line="25" pos:column="53"/></name></expr>]<pos:position pos:line="25" pos:column="54"/></index></name><operator pos:line="25" pos:column="54">.<pos:position pos:line="25" pos:column="55"/></operator><name pos:line="25" pos:column="55">gauge<pos:position pos:line="25" pos:column="60"/></name></expr></argument>)<pos:position pos:line="25" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="62"/></expr_stmt></block></then>
		<else pos:line="26" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="25">printf<pos:position pos:line="27" pos:column="31"/></name> <argument_list pos:line="27" pos:column="32">(<argument><expr><literal type="string" pos:line="27" pos:column="33">"%lld\n"<pos:position pos:line="27" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="43">vl<pos:position pos:line="27" pos:column="45"/></name><operator pos:line="27" pos:column="45">-&gt;<pos:position pos:line="27" pos:column="50"/></operator><name pos:line="27" pos:column="47">values<pos:position pos:line="27" pos:column="53"/></name><index pos:line="27" pos:column="53">[<expr><name pos:line="27" pos:column="54">i<pos:position pos:line="27" pos:column="55"/></name></expr>]<pos:position pos:line="27" pos:column="56"/></index></name><operator pos:line="27" pos:column="56">.<pos:position pos:line="27" pos:column="57"/></operator><name pos:line="27" pos:column="57">counter<pos:position pos:line="27" pos:column="64"/></name></expr></argument>)<pos:position pos:line="27" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="66"/></expr_stmt></block></else></if>
	}<pos:position pos:line="28" pos:column="10"/></block></for>
	<return pos:line="29" pos:column="9">return <expr><literal type="number" pos:line="29" pos:column="16">0<pos:position pos:line="29" pos:column="17"/></literal></expr>;<pos:position pos:line="29" pos:column="18"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2095_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">wt_format_name<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">ret<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">int<pos:position pos:line="1" pos:column="41"/></name></type> <name pos:line="1" pos:column="42">ret_len<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="51">const<pos:position pos:line="1" pos:column="56"/></specifier> <name pos:line="1" pos:column="57">value_list_t<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">vl<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>,
                          <parameter><decl><type><specifier pos:line="2" pos:column="27">const<pos:position pos:line="2" pos:column="32"/></specifier> <name><name pos:line="2" pos:column="33">struct<pos:position pos:line="2" pos:column="39"/></name> <name pos:line="2" pos:column="40">wt_callback<pos:position pos:line="2" pos:column="51"/></name></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">cb<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="57">const<pos:position pos:line="2" pos:column="62"/></specifier> <name pos:line="2" pos:column="63">char<pos:position pos:line="2" pos:column="67"/></name> <modifier pos:line="2" pos:column="68">*<pos:position pos:line="2" pos:column="69"/></modifier></type><name pos:line="2" pos:column="69">ds_name<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="77"/></parameter_list> <block pos:line="2" pos:column="78">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">status<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">temp<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><name pos:line="4" pos:column="16">NULL<pos:position pos:line="4" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">prefix<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><literal type="string" pos:line="5" pos:column="24">""<pos:position pos:line="5" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">meta_prefix<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><literal type="string" pos:line="6" pos:column="29">"tsdb_prefix"<pos:position pos:line="6" pos:column="42"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="43"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name><name pos:line="8" pos:column="7">vl<pos:position pos:line="8" pos:column="9"/></name><operator pos:line="8" pos:column="9">-&gt;<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="11">meta<pos:position pos:line="8" pos:column="15"/></name></name></expr>)<pos:position pos:line="8" pos:column="16"/></condition><then pos:line="8" pos:column="16"> <block pos:line="8" pos:column="17">{
    <expr_stmt><expr><name pos:line="9" pos:column="5">status<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <call><name pos:line="9" pos:column="14">meta_data_get_string<pos:position pos:line="9" pos:column="34"/></name><argument_list pos:line="9" pos:column="34">(<argument><expr><name><name pos:line="9" pos:column="35">vl<pos:position pos:line="9" pos:column="37"/></name><operator pos:line="9" pos:column="37">-&gt;<pos:position pos:line="9" pos:column="42"/></operator><name pos:line="9" pos:column="39">meta<pos:position pos:line="9" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="45">meta_prefix<pos:position pos:line="9" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="58">&amp;<pos:position pos:line="9" pos:column="63"/></operator><name pos:line="9" pos:column="59">temp<pos:position pos:line="9" pos:column="63"/></name></expr></argument>)<pos:position pos:line="9" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="65"/></expr_stmt>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">status<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">==<pos:position pos:line="10" pos:column="18"/></operator> <operator pos:line="10" pos:column="19">-<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="20">ENOENT<pos:position pos:line="10" pos:column="26"/></name></expr>)<pos:position pos:line="10" pos:column="27"/></condition><then pos:line="10" pos:column="27"> <block pos:line="10" pos:column="28">{
      <comment type="block" pos:line="11" pos:column="7">/* defaults to empty string */</comment>
    }<pos:position pos:line="12" pos:column="6"/></block></then> <elseif pos:line="12" pos:column="7">else <if pos:line="12" pos:column="12">if <condition pos:line="12" pos:column="15">(<expr><name pos:line="12" pos:column="16">status<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">&lt;<pos:position pos:line="12" pos:column="27"/></operator> <literal type="number" pos:line="12" pos:column="25">0<pos:position pos:line="12" pos:column="26"/></literal></expr>)<pos:position pos:line="12" pos:column="27"/></condition><then pos:line="12" pos:column="27"> <block pos:line="12" pos:column="28">{
      <expr_stmt><expr><call><name pos:line="13" pos:column="7">sfree<pos:position pos:line="13" pos:column="12"/></name><argument_list pos:line="13" pos:column="12">(<argument><expr><name pos:line="13" pos:column="13">temp<pos:position pos:line="13" pos:column="17"/></name></expr></argument>)<pos:position pos:line="13" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="19"/></expr_stmt>
      <return pos:line="14" pos:column="7">return <expr><name pos:line="14" pos:column="14">status<pos:position pos:line="14" pos:column="20"/></name></expr>;<pos:position pos:line="14" pos:column="21"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if></elseif> <else pos:line="15" pos:column="7">else <block pos:line="15" pos:column="12">{
      <expr_stmt><expr><name pos:line="16" pos:column="7">prefix<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <name pos:line="16" pos:column="16">temp<pos:position pos:line="16" pos:column="20"/></name></expr>;<pos:position pos:line="16" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></else></if>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>

  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><name pos:line="20" pos:column="7">ds_name<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">!=<pos:position pos:line="20" pos:column="17"/></operator> <name pos:line="20" pos:column="18">NULL<pos:position pos:line="20" pos:column="22"/></name></expr>)<pos:position pos:line="20" pos:column="23"/></condition><then pos:line="20" pos:column="23"> <block pos:line="20" pos:column="24">{
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name><name pos:line="21" pos:column="9">vl<pos:position pos:line="21" pos:column="11"/></name><operator pos:line="21" pos:column="11">-&gt;<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="13">plugin_instance<pos:position pos:line="21" pos:column="28"/></name><index pos:line="21" pos:column="28">[<expr><literal type="number" pos:line="21" pos:column="29">0<pos:position pos:line="21" pos:column="30"/></literal></expr>]<pos:position pos:line="21" pos:column="31"/></index></name> <operator pos:line="21" pos:column="32">==<pos:position pos:line="21" pos:column="34"/></operator> <literal type="char" pos:line="21" pos:column="35">'\0'<pos:position pos:line="21" pos:column="39"/></literal></expr>)<pos:position pos:line="21" pos:column="40"/></condition><then pos:line="21" pos:column="40"> <block pos:line="21" pos:column="41">{
      <if pos:line="22" pos:column="7">if <condition pos:line="22" pos:column="10">(<expr><name><name pos:line="22" pos:column="11">vl<pos:position pos:line="22" pos:column="13"/></name><operator pos:line="22" pos:column="13">-&gt;<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="15">type_instance<pos:position pos:line="22" pos:column="28"/></name><index pos:line="22" pos:column="28">[<expr><literal type="number" pos:line="22" pos:column="29">0<pos:position pos:line="22" pos:column="30"/></literal></expr>]<pos:position pos:line="22" pos:column="31"/></index></name> <operator pos:line="22" pos:column="32">==<pos:position pos:line="22" pos:column="34"/></operator> <literal type="char" pos:line="22" pos:column="35">'\0'<pos:position pos:line="22" pos:column="39"/></literal></expr>)<pos:position pos:line="22" pos:column="40"/></condition><then pos:line="22" pos:column="40"> <block pos:line="22" pos:column="41">{
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">ssnprintf<pos:position pos:line="23" pos:column="18"/></name><argument_list pos:line="23" pos:column="18">(<argument><expr><name pos:line="23" pos:column="19">ret<pos:position pos:line="23" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="24">ret_len<pos:position pos:line="23" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="33">"%s%s.%s.%s"<pos:position pos:line="23" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="47">prefix<pos:position pos:line="23" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="55">vl<pos:position pos:line="23" pos:column="57"/></name><operator pos:line="23" pos:column="57">-&gt;<pos:position pos:line="23" pos:column="62"/></operator><name pos:line="23" pos:column="59">plugin<pos:position pos:line="23" pos:column="65"/></name></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="67">vl<pos:position pos:line="23" pos:column="69"/></name><operator pos:line="23" pos:column="69">-&gt;<pos:position pos:line="23" pos:column="74"/></operator><name pos:line="23" pos:column="71">type<pos:position pos:line="23" pos:column="75"/></name></name></expr></argument>,
                  <argument><expr><name pos:line="24" pos:column="19">ds_name<pos:position pos:line="24" pos:column="26"/></name></expr></argument>)<pos:position pos:line="24" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="28"/></expr_stmt>
      }<pos:position pos:line="25" pos:column="8"/></block></then> <else pos:line="25" pos:column="9">else <block pos:line="25" pos:column="14">{
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">ssnprintf<pos:position pos:line="26" pos:column="18"/></name><argument_list pos:line="26" pos:column="18">(<argument><expr><name pos:line="26" pos:column="19">ret<pos:position pos:line="26" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="24">ret_len<pos:position pos:line="26" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="33">"%s%s.%s.%s.%s"<pos:position pos:line="26" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="50">prefix<pos:position pos:line="26" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="58">vl<pos:position pos:line="26" pos:column="60"/></name><operator pos:line="26" pos:column="60">-&gt;<pos:position pos:line="26" pos:column="65"/></operator><name pos:line="26" pos:column="62">plugin<pos:position pos:line="26" pos:column="68"/></name></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="70">vl<pos:position pos:line="26" pos:column="72"/></name><operator pos:line="26" pos:column="72">-&gt;<pos:position pos:line="26" pos:column="77"/></operator><name pos:line="26" pos:column="74">type<pos:position pos:line="26" pos:column="78"/></name></name></expr></argument>,
                  <argument><expr><name><name pos:line="27" pos:column="19">vl<pos:position pos:line="27" pos:column="21"/></name><operator pos:line="27" pos:column="21">-&gt;<pos:position pos:line="27" pos:column="26"/></operator><name pos:line="27" pos:column="23">type_instance<pos:position pos:line="27" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="38">ds_name<pos:position pos:line="27" pos:column="45"/></name></expr></argument>)<pos:position pos:line="27" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="47"/></expr_stmt>
      }<pos:position pos:line="28" pos:column="8"/></block></else></if>
    }<pos:position pos:line="29" pos:column="6"/></block></then> <else pos:line="29" pos:column="7">else <block pos:line="29" pos:column="12">{ <comment type="block" pos:line="29" pos:column="14">/* vl-&gt;plugin_instance != "" */</comment>
      <if pos:line="30" pos:column="7">if <condition pos:line="30" pos:column="10">(<expr><name><name pos:line="30" pos:column="11">vl<pos:position pos:line="30" pos:column="13"/></name><operator pos:line="30" pos:column="13">-&gt;<pos:position pos:line="30" pos:column="18"/></operator><name pos:line="30" pos:column="15">type_instance<pos:position pos:line="30" pos:column="28"/></name><index pos:line="30" pos:column="28">[<expr><literal type="number" pos:line="30" pos:column="29">0<pos:position pos:line="30" pos:column="30"/></literal></expr>]<pos:position pos:line="30" pos:column="31"/></index></name> <operator pos:line="30" pos:column="32">==<pos:position pos:line="30" pos:column="34"/></operator> <literal type="char" pos:line="30" pos:column="35">'\0'<pos:position pos:line="30" pos:column="39"/></literal></expr>)<pos:position pos:line="30" pos:column="40"/></condition><then pos:line="30" pos:column="40"> <block pos:line="30" pos:column="41">{
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">ssnprintf<pos:position pos:line="31" pos:column="18"/></name><argument_list pos:line="31" pos:column="18">(<argument><expr><name pos:line="31" pos:column="19">ret<pos:position pos:line="31" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="24">ret_len<pos:position pos:line="31" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="33">"%s%s.%s.%s.%s"<pos:position pos:line="31" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="50">prefix<pos:position pos:line="31" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="58">vl<pos:position pos:line="31" pos:column="60"/></name><operator pos:line="31" pos:column="60">-&gt;<pos:position pos:line="31" pos:column="65"/></operator><name pos:line="31" pos:column="62">plugin<pos:position pos:line="31" pos:column="68"/></name></name></expr></argument>,
                  <argument><expr><name><name pos:line="32" pos:column="19">vl<pos:position pos:line="32" pos:column="21"/></name><operator pos:line="32" pos:column="21">-&gt;<pos:position pos:line="32" pos:column="26"/></operator><name pos:line="32" pos:column="23">plugin_instance<pos:position pos:line="32" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="40">vl<pos:position pos:line="32" pos:column="42"/></name><operator pos:line="32" pos:column="42">-&gt;<pos:position pos:line="32" pos:column="47"/></operator><name pos:line="32" pos:column="44">type<pos:position pos:line="32" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="50">ds_name<pos:position pos:line="32" pos:column="57"/></name></expr></argument>)<pos:position pos:line="32" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="59"/></expr_stmt>
      }<pos:position pos:line="33" pos:column="8"/></block></then> <else pos:line="33" pos:column="9">else <block pos:line="33" pos:column="14">{
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">ssnprintf<pos:position pos:line="34" pos:column="18"/></name><argument_list pos:line="34" pos:column="18">(<argument><expr><name pos:line="34" pos:column="19">ret<pos:position pos:line="34" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="24">ret_len<pos:position pos:line="34" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="33">"%s%s.%s.%s.%s.%s"<pos:position pos:line="34" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="53">prefix<pos:position pos:line="34" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="61">vl<pos:position pos:line="34" pos:column="63"/></name><operator pos:line="34" pos:column="63">-&gt;<pos:position pos:line="34" pos:column="68"/></operator><name pos:line="34" pos:column="65">plugin<pos:position pos:line="34" pos:column="71"/></name></name></expr></argument>,
                  <argument><expr><name><name pos:line="35" pos:column="19">vl<pos:position pos:line="35" pos:column="21"/></name><operator pos:line="35" pos:column="21">-&gt;<pos:position pos:line="35" pos:column="26"/></operator><name pos:line="35" pos:column="23">plugin_instance<pos:position pos:line="35" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="40">vl<pos:position pos:line="35" pos:column="42"/></name><operator pos:line="35" pos:column="42">-&gt;<pos:position pos:line="35" pos:column="47"/></operator><name pos:line="35" pos:column="44">type<pos:position pos:line="35" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="50">vl<pos:position pos:line="35" pos:column="52"/></name><operator pos:line="35" pos:column="52">-&gt;<pos:position pos:line="35" pos:column="57"/></operator><name pos:line="35" pos:column="54">type_instance<pos:position pos:line="35" pos:column="67"/></name></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="69">ds_name<pos:position pos:line="35" pos:column="76"/></name></expr></argument>)<pos:position pos:line="35" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="78"/></expr_stmt>
      }<pos:position pos:line="36" pos:column="8"/></block></else></if>
    }<pos:position pos:line="37" pos:column="6"/></block></else></if>
  }<pos:position pos:line="38" pos:column="4"/></block></then> <else pos:line="38" pos:column="5">else <block pos:line="38" pos:column="10">{ <comment type="block" pos:line="38" pos:column="12">/* ds_name == NULL */</comment>
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name><name pos:line="39" pos:column="9">vl<pos:position pos:line="39" pos:column="11"/></name><operator pos:line="39" pos:column="11">-&gt;<pos:position pos:line="39" pos:column="16"/></operator><name pos:line="39" pos:column="13">plugin_instance<pos:position pos:line="39" pos:column="28"/></name><index pos:line="39" pos:column="28">[<expr><literal type="number" pos:line="39" pos:column="29">0<pos:position pos:line="39" pos:column="30"/></literal></expr>]<pos:position pos:line="39" pos:column="31"/></index></name> <operator pos:line="39" pos:column="32">==<pos:position pos:line="39" pos:column="34"/></operator> <literal type="char" pos:line="39" pos:column="35">'\0'<pos:position pos:line="39" pos:column="39"/></literal></expr>)<pos:position pos:line="39" pos:column="40"/></condition><then pos:line="39" pos:column="40"> <block pos:line="39" pos:column="41">{
      <if pos:line="40" pos:column="7">if <condition pos:line="40" pos:column="10">(<expr><name><name pos:line="40" pos:column="11">vl<pos:position pos:line="40" pos:column="13"/></name><operator pos:line="40" pos:column="13">-&gt;<pos:position pos:line="40" pos:column="18"/></operator><name pos:line="40" pos:column="15">type_instance<pos:position pos:line="40" pos:column="28"/></name><index pos:line="40" pos:column="28">[<expr><literal type="number" pos:line="40" pos:column="29">0<pos:position pos:line="40" pos:column="30"/></literal></expr>]<pos:position pos:line="40" pos:column="31"/></index></name> <operator pos:line="40" pos:column="32">==<pos:position pos:line="40" pos:column="34"/></operator> <literal type="char" pos:line="40" pos:column="35">'\0'<pos:position pos:line="40" pos:column="39"/></literal></expr>)<pos:position pos:line="40" pos:column="40"/></condition><then pos:line="40" pos:column="40"> <block pos:line="40" pos:column="41">{
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">ssnprintf<pos:position pos:line="41" pos:column="18"/></name><argument_list pos:line="41" pos:column="18">(<argument><expr><name pos:line="41" pos:column="19">ret<pos:position pos:line="41" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="24">ret_len<pos:position pos:line="41" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="33">"%s%s.%s"<pos:position pos:line="41" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="44">prefix<pos:position pos:line="41" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="52">vl<pos:position pos:line="41" pos:column="54"/></name><operator pos:line="41" pos:column="54">-&gt;<pos:position pos:line="41" pos:column="59"/></operator><name pos:line="41" pos:column="56">plugin<pos:position pos:line="41" pos:column="62"/></name></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="64">vl<pos:position pos:line="41" pos:column="66"/></name><operator pos:line="41" pos:column="66">-&gt;<pos:position pos:line="41" pos:column="71"/></operator><name pos:line="41" pos:column="68">type<pos:position pos:line="41" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="74"/></expr_stmt>
      }<pos:position pos:line="42" pos:column="8"/></block></then> <else pos:line="42" pos:column="9">else <block pos:line="42" pos:column="14">{
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">ssnprintf<pos:position pos:line="43" pos:column="18"/></name><argument_list pos:line="43" pos:column="18">(<argument><expr><name pos:line="43" pos:column="19">ret<pos:position pos:line="43" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="24">ret_len<pos:position pos:line="43" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="33">"%s%s.%s.%s"<pos:position pos:line="43" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="47">prefix<pos:position pos:line="43" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="55">vl<pos:position pos:line="43" pos:column="57"/></name><operator pos:line="43" pos:column="57">-&gt;<pos:position pos:line="43" pos:column="62"/></operator><name pos:line="43" pos:column="59">plugin<pos:position pos:line="43" pos:column="65"/></name></name></expr></argument>,
                  <argument><expr><name><name pos:line="44" pos:column="19">vl<pos:position pos:line="44" pos:column="21"/></name><operator pos:line="44" pos:column="21">-&gt;<pos:position pos:line="44" pos:column="26"/></operator><name pos:line="44" pos:column="23">type_instance<pos:position pos:line="44" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="38">vl<pos:position pos:line="44" pos:column="40"/></name><operator pos:line="44" pos:column="40">-&gt;<pos:position pos:line="44" pos:column="45"/></operator><name pos:line="44" pos:column="42">type<pos:position pos:line="44" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="48"/></expr_stmt>
      }<pos:position pos:line="45" pos:column="8"/></block></else></if>
    }<pos:position pos:line="46" pos:column="6"/></block></then> <else pos:line="46" pos:column="7">else <block pos:line="46" pos:column="12">{ <comment type="block" pos:line="46" pos:column="14">/* vl-&gt;plugin_instance != "" */</comment>
      <if pos:line="47" pos:column="7">if <condition pos:line="47" pos:column="10">(<expr><name><name pos:line="47" pos:column="11">vl<pos:position pos:line="47" pos:column="13"/></name><operator pos:line="47" pos:column="13">-&gt;<pos:position pos:line="47" pos:column="18"/></operator><name pos:line="47" pos:column="15">type_instance<pos:position pos:line="47" pos:column="28"/></name><index pos:line="47" pos:column="28">[<expr><literal type="number" pos:line="47" pos:column="29">0<pos:position pos:line="47" pos:column="30"/></literal></expr>]<pos:position pos:line="47" pos:column="31"/></index></name> <operator pos:line="47" pos:column="32">==<pos:position pos:line="47" pos:column="34"/></operator> <literal type="char" pos:line="47" pos:column="35">'\0'<pos:position pos:line="47" pos:column="39"/></literal></expr>)<pos:position pos:line="47" pos:column="40"/></condition><then pos:line="47" pos:column="40"> <block pos:line="47" pos:column="41">{
        <expr_stmt><expr><call><name pos:line="48" pos:column="9">ssnprintf<pos:position pos:line="48" pos:column="18"/></name><argument_list pos:line="48" pos:column="18">(<argument><expr><name pos:line="48" pos:column="19">ret<pos:position pos:line="48" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="24">ret_len<pos:position pos:line="48" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="33">"%s%s.%s.%s"<pos:position pos:line="48" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="47">prefix<pos:position pos:line="48" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="55">vl<pos:position pos:line="48" pos:column="57"/></name><operator pos:line="48" pos:column="57">-&gt;<pos:position pos:line="48" pos:column="62"/></operator><name pos:line="48" pos:column="59">plugin<pos:position pos:line="48" pos:column="65"/></name></name></expr></argument>,
                  <argument><expr><name><name pos:line="49" pos:column="19">vl<pos:position pos:line="49" pos:column="21"/></name><operator pos:line="49" pos:column="21">-&gt;<pos:position pos:line="49" pos:column="26"/></operator><name pos:line="49" pos:column="23">plugin_instance<pos:position pos:line="49" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="40">vl<pos:position pos:line="49" pos:column="42"/></name><operator pos:line="49" pos:column="42">-&gt;<pos:position pos:line="49" pos:column="47"/></operator><name pos:line="49" pos:column="44">type<pos:position pos:line="49" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="50"/></expr_stmt>
      }<pos:position pos:line="50" pos:column="8"/></block></then> <else pos:line="50" pos:column="9">else <block pos:line="50" pos:column="14">{
        <expr_stmt><expr><call><name pos:line="51" pos:column="9">ssnprintf<pos:position pos:line="51" pos:column="18"/></name><argument_list pos:line="51" pos:column="18">(<argument><expr><name pos:line="51" pos:column="19">ret<pos:position pos:line="51" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="24">ret_len<pos:position pos:line="51" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="33">"%s%s.%s.%s.%s"<pos:position pos:line="51" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="50">prefix<pos:position pos:line="51" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="58">vl<pos:position pos:line="51" pos:column="60"/></name><operator pos:line="51" pos:column="60">-&gt;<pos:position pos:line="51" pos:column="65"/></operator><name pos:line="51" pos:column="62">plugin<pos:position pos:line="51" pos:column="68"/></name></name></expr></argument>,
                  <argument><expr><name><name pos:line="52" pos:column="19">vl<pos:position pos:line="52" pos:column="21"/></name><operator pos:line="52" pos:column="21">-&gt;<pos:position pos:line="52" pos:column="26"/></operator><name pos:line="52" pos:column="23">plugin_instance<pos:position pos:line="52" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="40">vl<pos:position pos:line="52" pos:column="42"/></name><operator pos:line="52" pos:column="42">-&gt;<pos:position pos:line="52" pos:column="47"/></operator><name pos:line="52" pos:column="44">type<pos:position pos:line="52" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="50">vl<pos:position pos:line="52" pos:column="52"/></name><operator pos:line="52" pos:column="52">-&gt;<pos:position pos:line="52" pos:column="57"/></operator><name pos:line="52" pos:column="54">type_instance<pos:position pos:line="52" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="69"/></expr_stmt>
      }<pos:position pos:line="53" pos:column="8"/></block></else></if>
    }<pos:position pos:line="54" pos:column="6"/></block></else></if>
  }<pos:position pos:line="55" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="57" pos:column="3">sfree<pos:position pos:line="57" pos:column="8"/></name><argument_list pos:line="57" pos:column="8">(<argument><expr><name pos:line="57" pos:column="9">temp<pos:position pos:line="57" pos:column="13"/></name></expr></argument>)<pos:position pos:line="57" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="15"/></expr_stmt>
  <return pos:line="58" pos:column="3">return <expr><literal type="number" pos:line="58" pos:column="10">0<pos:position pos:line="58" pos:column="11"/></literal></expr>;<pos:position pos:line="58" pos:column="12"/></return>
}<pos:position pos:line="59" pos:column="2"/></block></function></unit>

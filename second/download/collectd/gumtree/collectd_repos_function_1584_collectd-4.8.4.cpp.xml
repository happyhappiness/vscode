<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1584_collectd-4.8.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse_table<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">TC_HANDLE_T<pos:position pos:line="1" pos:column="35"/></name></type> <name pos:line="1" pos:column="36">h<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">STRUCT_ENTRY<pos:position pos:line="3" pos:column="21"/></name> <modifier pos:line="3" pos:column="22">*<pos:position pos:line="3" pos:column="23"/></modifier></type><name pos:line="3" pos:column="23">prev<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">int<pos:position pos:line="4" pos:column="21"/></name></type> <name pos:line="4" pos:column="22">num<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><literal type="number" pos:line="4" pos:column="28">0<pos:position pos:line="4" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">chain_head<pos:position pos:line="5" pos:column="26"/></name></name> <modifier pos:line="5" pos:column="27">*<pos:position pos:line="5" pos:column="28"/></modifier></type><name pos:line="5" pos:column="28">c<pos:position pos:line="5" pos:column="29"/></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>

	<comment type="block" pos:line="7" pos:column="9">/* First pass: over ruleset blob */</comment>
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">ENTRY_ITERATE<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><name><name pos:line="8" pos:column="23">h<pos:position pos:line="8" pos:column="24"/></name><operator pos:line="8" pos:column="24">-&gt;<pos:position pos:line="8" pos:column="29"/></operator><name pos:line="8" pos:column="26">entries<pos:position pos:line="8" pos:column="33"/></name><operator pos:line="8" pos:column="33">-&gt;<pos:position pos:line="8" pos:column="38"/></operator><name pos:line="8" pos:column="35">entrytable<pos:position pos:line="8" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="47">h<pos:position pos:line="8" pos:column="48"/></name><operator pos:line="8" pos:column="48">-&gt;<pos:position pos:line="8" pos:column="53"/></operator><name pos:line="8" pos:column="50">entries<pos:position pos:line="8" pos:column="57"/></name><operator pos:line="8" pos:column="57">-&gt;<pos:position pos:line="8" pos:column="62"/></operator><name pos:line="8" pos:column="59">size<pos:position pos:line="8" pos:column="63"/></name></name></expr></argument>,
			<argument><expr><name pos:line="9" pos:column="25">cache_add_entry<pos:position pos:line="9" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="42">h<pos:position pos:line="9" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="45">&amp;<pos:position pos:line="9" pos:column="50"/></operator><name pos:line="9" pos:column="46">prev<pos:position pos:line="9" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="52">&amp;<pos:position pos:line="9" pos:column="57"/></operator><name pos:line="9" pos:column="53">num<pos:position pos:line="9" pos:column="56"/></name></expr></argument>)<pos:position pos:line="9" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="58"/></expr_stmt>

	<comment type="block" pos:line="11" pos:column="9">/* Build the chain index, used for chain list search speedup */</comment>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">(<pos:position pos:line="12" pos:column="14"/></operator><call><name pos:line="12" pos:column="14">iptcc_chain_index_alloc<pos:position pos:line="12" pos:column="37"/></name><argument_list pos:line="12" pos:column="37">(<argument><expr><name pos:line="12" pos:column="38">h<pos:position pos:line="12" pos:column="39"/></name></expr></argument>)<pos:position pos:line="12" pos:column="40"/></argument_list></call><operator pos:line="12" pos:column="40">)<pos:position pos:line="12" pos:column="41"/></operator> <operator pos:line="12" pos:column="42">&lt;<pos:position pos:line="12" pos:column="46"/></operator> <literal type="number" pos:line="12" pos:column="44">0<pos:position pos:line="12" pos:column="45"/></literal></expr>)<pos:position pos:line="12" pos:column="46"/></condition><then pos:line="12" pos:column="46">
		<block type="pseudo"><return pos:line="13" pos:column="17">return <expr><operator pos:line="13" pos:column="24">-<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="25">ENOMEM<pos:position pos:line="13" pos:column="31"/></name></expr>;<pos:position pos:line="13" pos:column="32"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">iptcc_chain_index_build<pos:position pos:line="14" pos:column="32"/></name><argument_list pos:line="14" pos:column="32">(<argument><expr><name pos:line="14" pos:column="33">h<pos:position pos:line="14" pos:column="34"/></name></expr></argument>)<pos:position pos:line="14" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="36"/></expr_stmt>

	<comment type="block" pos:line="16" pos:column="9">/* Second pass: fixup parsed data from first pass */</comment>
	<macro><name pos:line="17" pos:column="9">list_for_each_entry<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">(<argument pos:line="17" pos:column="29">c<pos:position pos:line="17" pos:column="30"/></argument>, <argument pos:line="17" pos:column="32">&amp;h-&gt;chains<pos:position pos:line="17" pos:column="42"/></argument>, <argument pos:line="17" pos:column="44">list<pos:position pos:line="17" pos:column="48"/></argument>)<pos:position pos:line="17" pos:column="49"/></argument_list></macro> <block pos:line="17" pos:column="50">{
		<decl_stmt><decl><type><name><name pos:line="18" pos:column="17">struct<pos:position pos:line="18" pos:column="23"/></name> <name pos:line="18" pos:column="24">rule_head<pos:position pos:line="18" pos:column="33"/></name></name> <modifier pos:line="18" pos:column="34">*<pos:position pos:line="18" pos:column="35"/></modifier></type><name pos:line="18" pos:column="35">r<pos:position pos:line="18" pos:column="36"/></name></decl>;<pos:position pos:line="18" pos:column="37"/></decl_stmt>
		<macro><name pos:line="19" pos:column="17">list_for_each_entry<pos:position pos:line="19" pos:column="36"/></name><argument_list pos:line="19" pos:column="36">(<argument pos:line="19" pos:column="37">r<pos:position pos:line="19" pos:column="38"/></argument>, <argument pos:line="19" pos:column="40">&amp;c-&gt;rules<pos:position pos:line="19" pos:column="49"/></argument>, <argument pos:line="19" pos:column="51">list<pos:position pos:line="19" pos:column="55"/></argument>)<pos:position pos:line="19" pos:column="56"/></argument_list></macro> <block pos:line="19" pos:column="57">{
			<decl_stmt><decl><type><name><name pos:line="20" pos:column="25">struct<pos:position pos:line="20" pos:column="31"/></name> <name pos:line="20" pos:column="32">chain_head<pos:position pos:line="20" pos:column="42"/></name></name> <modifier pos:line="20" pos:column="43">*<pos:position pos:line="20" pos:column="44"/></modifier></type><name pos:line="20" pos:column="44">lc<pos:position pos:line="20" pos:column="46"/></name></decl>;<pos:position pos:line="20" pos:column="47"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="21" pos:column="25">STRUCT_STANDARD_TARGET<pos:position pos:line="21" pos:column="47"/></name> <modifier pos:line="21" pos:column="48">*<pos:position pos:line="21" pos:column="49"/></modifier></type><name pos:line="21" pos:column="49">t<pos:position pos:line="21" pos:column="50"/></name></decl>;<pos:position pos:line="21" pos:column="51"/></decl_stmt>

			<if pos:line="23" pos:column="25">if <condition pos:line="23" pos:column="28">(<expr><name><name pos:line="23" pos:column="29">r<pos:position pos:line="23" pos:column="30"/></name><operator pos:line="23" pos:column="30">-&gt;<pos:position pos:line="23" pos:column="35"/></operator><name pos:line="23" pos:column="32">type<pos:position pos:line="23" pos:column="36"/></name></name> <operator pos:line="23" pos:column="37">!=<pos:position pos:line="23" pos:column="39"/></operator> <name pos:line="23" pos:column="40">IPTCC_R_JUMP<pos:position pos:line="23" pos:column="52"/></name></expr>)<pos:position pos:line="23" pos:column="53"/></condition><then pos:line="23" pos:column="53">
				<block type="pseudo"><continue pos:line="24" pos:column="33">continue;<pos:position pos:line="24" pos:column="42"/></continue></block></then></if>

			<expr_stmt><expr><name pos:line="26" pos:column="25">t<pos:position pos:line="26" pos:column="26"/></name> <operator pos:line="26" pos:column="27">=<pos:position pos:line="26" pos:column="28"/></operator> <operator pos:line="26" pos:column="29">(<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="30">STRUCT_STANDARD_TARGET<pos:position pos:line="26" pos:column="52"/></name> <operator pos:line="26" pos:column="53">*<pos:position pos:line="26" pos:column="54"/></operator><operator pos:line="26" pos:column="54">)<pos:position pos:line="26" pos:column="55"/></operator><call><name pos:line="26" pos:column="55">GET_TARGET<pos:position pos:line="26" pos:column="65"/></name><argument_list pos:line="26" pos:column="65">(<argument><expr><name><name pos:line="26" pos:column="66">r<pos:position pos:line="26" pos:column="67"/></name><operator pos:line="26" pos:column="67">-&gt;<pos:position pos:line="26" pos:column="72"/></operator><name pos:line="26" pos:column="69">entry<pos:position pos:line="26" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="76"/></expr_stmt>
			<expr_stmt><expr><name pos:line="27" pos:column="25">lc<pos:position pos:line="27" pos:column="27"/></name> <operator pos:line="27" pos:column="28">=<pos:position pos:line="27" pos:column="29"/></operator> <call><name pos:line="27" pos:column="30">iptcc_find_chain_by_offset<pos:position pos:line="27" pos:column="56"/></name><argument_list pos:line="27" pos:column="56">(<argument><expr><name pos:line="27" pos:column="57">h<pos:position pos:line="27" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="60">t<pos:position pos:line="27" pos:column="61"/></name><operator pos:line="27" pos:column="61">-&gt;<pos:position pos:line="27" pos:column="66"/></operator><name pos:line="27" pos:column="63">verdict<pos:position pos:line="27" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="72"/></expr_stmt>
			<if pos:line="28" pos:column="25">if <condition pos:line="28" pos:column="28">(<expr><operator pos:line="28" pos:column="29">!<pos:position pos:line="28" pos:column="30"/></operator><name pos:line="28" pos:column="30">lc<pos:position pos:line="28" pos:column="32"/></name></expr>)<pos:position pos:line="28" pos:column="33"/></condition><then pos:line="28" pos:column="33">
				<block type="pseudo"><return pos:line="29" pos:column="33">return <expr><operator pos:line="29" pos:column="40">-<pos:position pos:line="29" pos:column="41"/></operator><literal type="number" pos:line="29" pos:column="41">1<pos:position pos:line="29" pos:column="42"/></literal></expr>;<pos:position pos:line="29" pos:column="43"/></return></block></then></if>
			<expr_stmt><expr><name><name pos:line="30" pos:column="25">r<pos:position pos:line="30" pos:column="26"/></name><operator pos:line="30" pos:column="26">-&gt;<pos:position pos:line="30" pos:column="31"/></operator><name pos:line="30" pos:column="28">jump<pos:position pos:line="30" pos:column="32"/></name></name> <operator pos:line="30" pos:column="33">=<pos:position pos:line="30" pos:column="34"/></operator> <name pos:line="30" pos:column="35">lc<pos:position pos:line="30" pos:column="37"/></name></expr>;<pos:position pos:line="30" pos:column="38"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="31" pos:column="25">lc<pos:position pos:line="31" pos:column="27"/></name><operator pos:line="31" pos:column="27">-&gt;<pos:position pos:line="31" pos:column="32"/></operator><name pos:line="31" pos:column="29">references<pos:position pos:line="31" pos:column="39"/></name></name><operator pos:line="31" pos:column="39">++<pos:position pos:line="31" pos:column="41"/></operator></expr>;<pos:position pos:line="31" pos:column="42"/></expr_stmt>
		}<pos:position pos:line="32" pos:column="18"/></block>
	}<pos:position pos:line="33" pos:column="10"/></block>

	<comment type="block" pos:line="35" pos:column="9">/* FIXME: sort chains */</comment>

	<return pos:line="37" pos:column="9">return <expr><literal type="number" pos:line="37" pos:column="16">1<pos:position pos:line="37" pos:column="17"/></literal></expr>;<pos:position pos:line="37" pos:column="18"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

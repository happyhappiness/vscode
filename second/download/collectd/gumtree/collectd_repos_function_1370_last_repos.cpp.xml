<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1370_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">receive_loop<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">void<pos:position pos:line="1" pos:column="29"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="30"/></parameter_list> <comment type="block" pos:line="1" pos:column="31">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">pinba_socket_t<pos:position pos:line="3" pos:column="17"/></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">s<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>

  <expr_stmt><expr><name pos:line="5" pos:column="3">s<pos:position pos:line="5" pos:column="4"/></name> <operator pos:line="5" pos:column="5">=<pos:position pos:line="5" pos:column="6"/></operator> <call><name pos:line="5" pos:column="7">pinba_socket_open<pos:position pos:line="5" pos:column="24"/></name><argument_list pos:line="5" pos:column="24">(<argument><expr><name pos:line="5" pos:column="25">conf_node<pos:position pos:line="5" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="36">conf_service<pos:position pos:line="5" pos:column="48"/></name></expr></argument>)<pos:position pos:line="5" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="50"/></expr_stmt>
  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">s<pos:position pos:line="6" pos:column="8"/></name> <operator pos:line="6" pos:column="9">==<pos:position pos:line="6" pos:column="11"/></operator> <name pos:line="6" pos:column="12">NULL<pos:position pos:line="6" pos:column="16"/></name></expr>)<pos:position pos:line="6" pos:column="17"/></condition><then pos:line="6" pos:column="17"> <block pos:line="6" pos:column="18">{
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">ERROR<pos:position pos:line="7" pos:column="10"/></name><argument_list pos:line="7" pos:column="10">(<argument><expr><literal type="string" pos:line="7" pos:column="11">"pinba plugin: Collector thread is exiting prematurely."<pos:position pos:line="7" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="69"/></expr_stmt>
    <return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">-<pos:position pos:line="8" pos:column="13"/></operator><literal type="number" pos:line="8" pos:column="13">1<pos:position pos:line="8" pos:column="14"/></literal></expr>;<pos:position pos:line="8" pos:column="15"/></return>
  }<pos:position pos:line="9" pos:column="4"/></block></then></if>

  <while pos:line="11" pos:column="3">while <condition pos:line="11" pos:column="9">(<expr><operator pos:line="11" pos:column="10">!<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">collector_thread_do_shutdown<pos:position pos:line="11" pos:column="39"/></name></expr>)<pos:position pos:line="11" pos:column="40"/></condition> <block pos:line="11" pos:column="41">{
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">status<pos:position pos:line="12" pos:column="15"/></name></decl>;<pos:position pos:line="12" pos:column="16"/></decl_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name><name pos:line="14" pos:column="9">s<pos:position pos:line="14" pos:column="10"/></name><operator pos:line="14" pos:column="10">-&gt;<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="12">fd_num<pos:position pos:line="14" pos:column="18"/></name></name> <operator pos:line="14" pos:column="19">&lt;<pos:position pos:line="14" pos:column="23"/></operator> <literal type="number" pos:line="14" pos:column="21">1<pos:position pos:line="14" pos:column="22"/></literal></expr>)<pos:position pos:line="14" pos:column="23"/></condition><then pos:line="14" pos:column="23">
      <block type="pseudo"><break pos:line="15" pos:column="7">break;<pos:position pos:line="15" pos:column="13"/></break></block></then></if>

    <expr_stmt><expr><name pos:line="17" pos:column="5">status<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <call><name pos:line="17" pos:column="14">poll<pos:position pos:line="17" pos:column="18"/></name><argument_list pos:line="17" pos:column="18">(<argument><expr><name><name pos:line="17" pos:column="19">s<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">-&gt;<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="22">fd<pos:position pos:line="17" pos:column="24"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="26">s<pos:position pos:line="17" pos:column="27"/></name><operator pos:line="17" pos:column="27">-&gt;<pos:position pos:line="17" pos:column="32"/></operator><name pos:line="17" pos:column="29">fd_num<pos:position pos:line="17" pos:column="35"/></name></name></expr></argument>, <comment type="block" pos:line="17" pos:column="37">/* timeout = */</comment> <argument><expr><literal type="number" pos:line="17" pos:column="53">1000<pos:position pos:line="17" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="59"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">status<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">==<pos:position pos:line="18" pos:column="18"/></operator> <literal type="number" pos:line="18" pos:column="19">0<pos:position pos:line="18" pos:column="20"/></literal></expr>)<pos:position pos:line="18" pos:column="21"/></condition><then pos:line="18" pos:column="21"> <comment type="block" pos:line="18" pos:column="22">/* timeout */</comment>
    <block pos:line="19" pos:column="5">{
      <continue pos:line="20" pos:column="7">continue;<pos:position pos:line="20" pos:column="16"/></continue>
    }<pos:position pos:line="21" pos:column="6"/></block></then> <elseif pos:line="21" pos:column="7">else <if pos:line="21" pos:column="12">if <condition pos:line="21" pos:column="15">(<expr><name pos:line="21" pos:column="16">status<pos:position pos:line="21" pos:column="22"/></name> <operator pos:line="21" pos:column="23">&lt;<pos:position pos:line="21" pos:column="27"/></operator> <literal type="number" pos:line="21" pos:column="25">0<pos:position pos:line="21" pos:column="26"/></literal></expr>)<pos:position pos:line="21" pos:column="27"/></condition><then pos:line="21" pos:column="27"> <block pos:line="21" pos:column="28">{
      <decl_stmt><decl><type><name pos:line="22" pos:column="7">char<pos:position pos:line="22" pos:column="11"/></name></type> <name><name pos:line="22" pos:column="12">errbuf<pos:position pos:line="22" pos:column="18"/></name><index pos:line="22" pos:column="18">[<expr><literal type="number" pos:line="22" pos:column="19">1024<pos:position pos:line="22" pos:column="23"/></literal></expr>]<pos:position pos:line="22" pos:column="24"/></index></name></decl>;<pos:position pos:line="22" pos:column="25"/></decl_stmt>

      <if pos:line="24" pos:column="7">if <condition pos:line="24" pos:column="10">(<expr><operator pos:line="24" pos:column="11">(<pos:position pos:line="24" pos:column="12"/></operator><name pos:line="24" pos:column="12">errno<pos:position pos:line="24" pos:column="17"/></name> <operator pos:line="24" pos:column="18">==<pos:position pos:line="24" pos:column="20"/></operator> <name pos:line="24" pos:column="21">EINTR<pos:position pos:line="24" pos:column="26"/></name><operator pos:line="24" pos:column="26">)<pos:position pos:line="24" pos:column="27"/></operator> <operator pos:line="24" pos:column="28">||<pos:position pos:line="24" pos:column="30"/></operator> <operator pos:line="24" pos:column="31">(<pos:position pos:line="24" pos:column="32"/></operator><name pos:line="24" pos:column="32">errno<pos:position pos:line="24" pos:column="37"/></name> <operator pos:line="24" pos:column="38">==<pos:position pos:line="24" pos:column="40"/></operator> <name pos:line="24" pos:column="41">EAGAIN<pos:position pos:line="24" pos:column="47"/></name><operator pos:line="24" pos:column="47">)<pos:position pos:line="24" pos:column="48"/></operator></expr>)<pos:position pos:line="24" pos:column="49"/></condition><then pos:line="24" pos:column="49">
        <block type="pseudo"><continue pos:line="25" pos:column="9">continue;<pos:position pos:line="25" pos:column="18"/></continue></block></then></if>

      <expr_stmt><expr><call><name pos:line="27" pos:column="7">ERROR<pos:position pos:line="27" pos:column="12"/></name><argument_list pos:line="27" pos:column="12">(<argument><expr><literal type="string" pos:line="27" pos:column="13">"pinba plugin: poll(2) failed: %s"<pos:position pos:line="27" pos:column="47"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="28" pos:column="13">sstrerror<pos:position pos:line="28" pos:column="22"/></name><argument_list pos:line="28" pos:column="22">(<argument><expr><name pos:line="28" pos:column="23">errno<pos:position pos:line="28" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="30">errbuf<pos:position pos:line="28" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="38">sizeof<argument_list pos:line="28" pos:column="44">(<argument><expr><name pos:line="28" pos:column="45">errbuf<pos:position pos:line="28" pos:column="51"/></name></expr></argument>)<pos:position pos:line="28" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="55"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="29" pos:column="7">pinba_socket_free<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">(<argument><expr><name pos:line="29" pos:column="25">s<pos:position pos:line="29" pos:column="26"/></name></expr></argument>)<pos:position pos:line="29" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="28"/></expr_stmt>
      <return pos:line="30" pos:column="7">return <expr><operator pos:line="30" pos:column="14">-<pos:position pos:line="30" pos:column="15"/></operator><literal type="number" pos:line="30" pos:column="15">1<pos:position pos:line="30" pos:column="16"/></literal></expr>;<pos:position pos:line="30" pos:column="17"/></return>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if></elseif></if>

    <for pos:line="33" pos:column="5">for <control pos:line="33" pos:column="9">(<init><decl><type><name pos:line="33" pos:column="10">nfds_t<pos:position pos:line="33" pos:column="16"/></name></type> <name pos:line="33" pos:column="17">i<pos:position pos:line="33" pos:column="18"/></name> <init pos:line="33" pos:column="19">= <expr><literal type="number" pos:line="33" pos:column="21">0<pos:position pos:line="33" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="33" pos:column="23"/></init> <condition><expr><name pos:line="33" pos:column="24">i<pos:position pos:line="33" pos:column="25"/></name> <operator pos:line="33" pos:column="26">&lt;<pos:position pos:line="33" pos:column="30"/></operator> <name><name pos:line="33" pos:column="28">s<pos:position pos:line="33" pos:column="29"/></name><operator pos:line="33" pos:column="29">-&gt;<pos:position pos:line="33" pos:column="34"/></operator><name pos:line="33" pos:column="31">fd_num<pos:position pos:line="33" pos:column="37"/></name></name></expr>;<pos:position pos:line="33" pos:column="38"/></condition> <incr><expr><name pos:line="33" pos:column="39">i<pos:position pos:line="33" pos:column="40"/></name><operator pos:line="33" pos:column="40">++<pos:position pos:line="33" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="33" pos:column="43"/></control> <block pos:line="33" pos:column="44">{
      <if pos:line="34" pos:column="7">if <condition pos:line="34" pos:column="10">(<expr><name><name pos:line="34" pos:column="11">s<pos:position pos:line="34" pos:column="12"/></name><operator pos:line="34" pos:column="12">-&gt;<pos:position pos:line="34" pos:column="17"/></operator><name pos:line="34" pos:column="14">fd<pos:position pos:line="34" pos:column="16"/></name><index pos:line="34" pos:column="16">[<expr><name pos:line="34" pos:column="17">i<pos:position pos:line="34" pos:column="18"/></name></expr>]<pos:position pos:line="34" pos:column="19"/></index></name><operator pos:line="34" pos:column="19">.<pos:position pos:line="34" pos:column="20"/></operator><name pos:line="34" pos:column="20">revents<pos:position pos:line="34" pos:column="27"/></name> <operator pos:line="34" pos:column="28">&amp;<pos:position pos:line="34" pos:column="33"/></operator> <operator pos:line="34" pos:column="30">(<pos:position pos:line="34" pos:column="31"/></operator><name pos:line="34" pos:column="31">POLLERR<pos:position pos:line="34" pos:column="38"/></name> <operator pos:line="34" pos:column="39">|<pos:position pos:line="34" pos:column="40"/></operator> <name pos:line="34" pos:column="41">POLLHUP<pos:position pos:line="34" pos:column="48"/></name> <operator pos:line="34" pos:column="49">|<pos:position pos:line="34" pos:column="50"/></operator> <name pos:line="34" pos:column="51">POLLNVAL<pos:position pos:line="34" pos:column="59"/></name><operator pos:line="34" pos:column="59">)<pos:position pos:line="34" pos:column="60"/></operator></expr>)<pos:position pos:line="34" pos:column="61"/></condition><then pos:line="34" pos:column="61"> <block pos:line="34" pos:column="62">{
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">pb_del_socket<pos:position pos:line="35" pos:column="22"/></name><argument_list pos:line="35" pos:column="22">(<argument><expr><name pos:line="35" pos:column="23">s<pos:position pos:line="35" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="26">i<pos:position pos:line="35" pos:column="27"/></name></expr></argument>)<pos:position pos:line="35" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="36" pos:column="9">i<pos:position pos:line="36" pos:column="10"/></name><operator pos:line="36" pos:column="10">--<pos:position pos:line="36" pos:column="12"/></operator></expr>;<pos:position pos:line="36" pos:column="13"/></expr_stmt>
      }<pos:position pos:line="37" pos:column="8"/></block></then> <elseif pos:line="37" pos:column="9">else <if pos:line="37" pos:column="14">if <condition pos:line="37" pos:column="17">(<expr><name><name pos:line="37" pos:column="18">s<pos:position pos:line="37" pos:column="19"/></name><operator pos:line="37" pos:column="19">-&gt;<pos:position pos:line="37" pos:column="24"/></operator><name pos:line="37" pos:column="21">fd<pos:position pos:line="37" pos:column="23"/></name><index pos:line="37" pos:column="23">[<expr><name pos:line="37" pos:column="24">i<pos:position pos:line="37" pos:column="25"/></name></expr>]<pos:position pos:line="37" pos:column="26"/></index></name><operator pos:line="37" pos:column="26">.<pos:position pos:line="37" pos:column="27"/></operator><name pos:line="37" pos:column="27">revents<pos:position pos:line="37" pos:column="34"/></name> <operator pos:line="37" pos:column="35">&amp;<pos:position pos:line="37" pos:column="40"/></operator> <operator pos:line="37" pos:column="37">(<pos:position pos:line="37" pos:column="38"/></operator><name pos:line="37" pos:column="38">POLLIN<pos:position pos:line="37" pos:column="44"/></name> <operator pos:line="37" pos:column="45">|<pos:position pos:line="37" pos:column="46"/></operator> <name pos:line="37" pos:column="47">POLLPRI<pos:position pos:line="37" pos:column="54"/></name><operator pos:line="37" pos:column="54">)<pos:position pos:line="37" pos:column="55"/></operator></expr>)<pos:position pos:line="37" pos:column="56"/></condition><then pos:line="37" pos:column="56"> <block pos:line="37" pos:column="57">{
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">pinba_udp_read_callback_fn<pos:position pos:line="38" pos:column="35"/></name><argument_list pos:line="38" pos:column="35">(<argument><expr><name><name pos:line="38" pos:column="36">s<pos:position pos:line="38" pos:column="37"/></name><operator pos:line="38" pos:column="37">-&gt;<pos:position pos:line="38" pos:column="42"/></operator><name pos:line="38" pos:column="39">fd<pos:position pos:line="38" pos:column="41"/></name><index pos:line="38" pos:column="41">[<expr><name pos:line="38" pos:column="42">i<pos:position pos:line="38" pos:column="43"/></name></expr>]<pos:position pos:line="38" pos:column="44"/></index></name><operator pos:line="38" pos:column="44">.<pos:position pos:line="38" pos:column="45"/></operator><name pos:line="38" pos:column="45">fd<pos:position pos:line="38" pos:column="47"/></name></expr></argument>)<pos:position pos:line="38" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="49"/></expr_stmt>
      }<pos:position pos:line="39" pos:column="8"/></block></then></if></elseif></if>
    }<pos:position pos:line="40" pos:column="6"/></block></for> <comment type="block" pos:line="40" pos:column="7">/* for (s-&gt;fd) */</comment>
  }<pos:position pos:line="41" pos:column="4"/></block></while>   <comment type="block" pos:line="41" pos:column="7">/* while (!collector_thread_do_shutdown) */</comment>

  <expr_stmt><expr><call><name pos:line="43" pos:column="3">pinba_socket_free<pos:position pos:line="43" pos:column="20"/></name><argument_list pos:line="43" pos:column="20">(<argument><expr><name pos:line="43" pos:column="21">s<pos:position pos:line="43" pos:column="22"/></name></expr></argument>)<pos:position pos:line="43" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name pos:line="44" pos:column="3">s<pos:position pos:line="44" pos:column="4"/></name> <operator pos:line="44" pos:column="5">=<pos:position pos:line="44" pos:column="6"/></operator> <name pos:line="44" pos:column="7">NULL<pos:position pos:line="44" pos:column="11"/></name></expr>;<pos:position pos:line="44" pos:column="12"/></expr_stmt>

  <return pos:line="46" pos:column="3">return <expr><literal type="number" pos:line="46" pos:column="10">0<pos:position pos:line="46" pos:column="11"/></literal></expr>;<pos:position pos:line="46" pos:column="12"/></return>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

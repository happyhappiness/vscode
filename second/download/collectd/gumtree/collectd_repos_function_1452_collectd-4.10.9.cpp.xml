<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1452_collectd-4.10.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">sockent_add<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">sockent_t<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">se<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="39"/></parameter_list> <comment type="block" pos:line="1" pos:column="40">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">sockent_t<pos:position pos:line="3" pos:column="18"/></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">last_ptr<pos:position pos:line="3" pos:column="28"/></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">se<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">==<pos:position pos:line="5" pos:column="18"/></operator> <name pos:line="5" pos:column="19">NULL<pos:position pos:line="5" pos:column="23"/></name></expr>)<pos:position pos:line="5" pos:column="24"/></condition><then pos:line="5" pos:column="24">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><operator pos:line="6" pos:column="24">(<pos:position pos:line="6" pos:column="25"/></operator><operator pos:line="6" pos:column="25">-<pos:position pos:line="6" pos:column="26"/></operator><literal type="number" pos:line="6" pos:column="26">1<pos:position pos:line="6" pos:column="27"/></literal><operator pos:line="6" pos:column="27">)<pos:position pos:line="6" pos:column="28"/></operator></expr>;<pos:position pos:line="6" pos:column="29"/></return></block></then></if>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name><name pos:line="8" pos:column="13">se<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">-&gt;<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="17">type<pos:position pos:line="8" pos:column="21"/></name></name> <operator pos:line="8" pos:column="22">==<pos:position pos:line="8" pos:column="24"/></operator> <name pos:line="8" pos:column="25">SOCKENT_TYPE_SERVER<pos:position pos:line="8" pos:column="44"/></name></expr>)<pos:position pos:line="8" pos:column="45"/></condition><then pos:line="8" pos:column="45">
	<block pos:line="9" pos:column="9">{
		<decl_stmt><decl><type><name><name pos:line="10" pos:column="17">struct<pos:position pos:line="10" pos:column="23"/></name> <name pos:line="10" pos:column="24">pollfd<pos:position pos:line="10" pos:column="30"/></name></name> <modifier pos:line="10" pos:column="31">*<pos:position pos:line="10" pos:column="32"/></modifier></type><name pos:line="10" pos:column="32">tmp<pos:position pos:line="10" pos:column="35"/></name></decl>;<pos:position pos:line="10" pos:column="36"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">size_t<pos:position pos:line="11" pos:column="23"/></name></type> <name pos:line="11" pos:column="24">i<pos:position pos:line="11" pos:column="25"/></name></decl>;<pos:position pos:line="11" pos:column="26"/></decl_stmt>

		<expr_stmt><expr><name pos:line="13" pos:column="17">tmp<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">=<pos:position pos:line="13" pos:column="22"/></operator> <call><name pos:line="13" pos:column="23">realloc<pos:position pos:line="13" pos:column="30"/></name> <argument_list pos:line="13" pos:column="31">(<argument><expr><name pos:line="13" pos:column="32">listen_sockets_pollfd<pos:position pos:line="13" pos:column="53"/></name></expr></argument>,
				<argument><expr><sizeof pos:line="14" pos:column="33">sizeof <argument_list pos:line="14" pos:column="40">(<argument><expr><operator pos:line="14" pos:column="41">*<pos:position pos:line="14" pos:column="42"/></operator><name pos:line="14" pos:column="42">tmp<pos:position pos:line="14" pos:column="45"/></name></expr></argument>)<pos:position pos:line="14" pos:column="46"/></argument_list></sizeof> <operator pos:line="14" pos:column="47">*<pos:position pos:line="14" pos:column="48"/></operator> <operator pos:line="14" pos:column="49">(<pos:position pos:line="14" pos:column="50"/></operator><name pos:line="14" pos:column="50">listen_sockets_num<pos:position pos:line="14" pos:column="68"/></name>
					<operator pos:line="15" pos:column="41">+<pos:position pos:line="15" pos:column="42"/></operator> <name><name pos:line="15" pos:column="43">se<pos:position pos:line="15" pos:column="45"/></name><operator pos:line="15" pos:column="45">-&gt;<pos:position pos:line="15" pos:column="50"/></operator><name pos:line="15" pos:column="47">data<pos:position pos:line="15" pos:column="51"/></name><operator pos:line="15" pos:column="51">.<pos:position pos:line="15" pos:column="52"/></operator><name pos:line="15" pos:column="52">server<pos:position pos:line="15" pos:column="58"/></name><operator pos:line="15" pos:column="58">.<pos:position pos:line="15" pos:column="59"/></operator><name pos:line="15" pos:column="59">fd_num<pos:position pos:line="15" pos:column="65"/></name></name><operator pos:line="15" pos:column="65">)<pos:position pos:line="15" pos:column="66"/></operator></expr></argument>)<pos:position pos:line="15" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="68"/></expr_stmt>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name pos:line="16" pos:column="21">tmp<pos:position pos:line="16" pos:column="24"/></name> <operator pos:line="16" pos:column="25">==<pos:position pos:line="16" pos:column="27"/></operator> <name pos:line="16" pos:column="28">NULL<pos:position pos:line="16" pos:column="32"/></name></expr>)<pos:position pos:line="16" pos:column="33"/></condition><then pos:line="16" pos:column="33">
		<block pos:line="17" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="18" pos:column="25">ERROR<pos:position pos:line="18" pos:column="30"/></name> <argument_list pos:line="18" pos:column="31">(<argument><expr><literal type="string" pos:line="18" pos:column="32">"network plugin: realloc failed."<pos:position pos:line="18" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="67"/></expr_stmt>
			<return pos:line="19" pos:column="25">return <expr><operator pos:line="19" pos:column="32">(<pos:position pos:line="19" pos:column="33"/></operator><operator pos:line="19" pos:column="33">-<pos:position pos:line="19" pos:column="34"/></operator><literal type="number" pos:line="19" pos:column="34">1<pos:position pos:line="19" pos:column="35"/></literal><operator pos:line="19" pos:column="35">)<pos:position pos:line="19" pos:column="36"/></operator></expr>;<pos:position pos:line="19" pos:column="37"/></return>
		}<pos:position pos:line="20" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="21" pos:column="17">listen_sockets_pollfd<pos:position pos:line="21" pos:column="38"/></name> <operator pos:line="21" pos:column="39">=<pos:position pos:line="21" pos:column="40"/></operator> <name pos:line="21" pos:column="41">tmp<pos:position pos:line="21" pos:column="44"/></name></expr>;<pos:position pos:line="21" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name pos:line="22" pos:column="17">tmp<pos:position pos:line="22" pos:column="20"/></name> <operator pos:line="22" pos:column="21">=<pos:position pos:line="22" pos:column="22"/></operator> <name pos:line="22" pos:column="23">listen_sockets_pollfd<pos:position pos:line="22" pos:column="44"/></name> <operator pos:line="22" pos:column="45">+<pos:position pos:line="22" pos:column="46"/></operator> <name pos:line="22" pos:column="47">listen_sockets_num<pos:position pos:line="22" pos:column="65"/></name></expr>;<pos:position pos:line="22" pos:column="66"/></expr_stmt>

		<for pos:line="24" pos:column="17">for <control pos:line="24" pos:column="21">(<init><expr><name pos:line="24" pos:column="22">i<pos:position pos:line="24" pos:column="23"/></name> <operator pos:line="24" pos:column="24">=<pos:position pos:line="24" pos:column="25"/></operator> <literal type="number" pos:line="24" pos:column="26">0<pos:position pos:line="24" pos:column="27"/></literal></expr>;<pos:position pos:line="24" pos:column="28"/></init> <condition><expr><name pos:line="24" pos:column="29">i<pos:position pos:line="24" pos:column="30"/></name> <operator pos:line="24" pos:column="31">&lt;<pos:position pos:line="24" pos:column="35"/></operator> <name><name pos:line="24" pos:column="33">se<pos:position pos:line="24" pos:column="35"/></name><operator pos:line="24" pos:column="35">-&gt;<pos:position pos:line="24" pos:column="40"/></operator><name pos:line="24" pos:column="37">data<pos:position pos:line="24" pos:column="41"/></name><operator pos:line="24" pos:column="41">.<pos:position pos:line="24" pos:column="42"/></operator><name pos:line="24" pos:column="42">server<pos:position pos:line="24" pos:column="48"/></name><operator pos:line="24" pos:column="48">.<pos:position pos:line="24" pos:column="49"/></operator><name pos:line="24" pos:column="49">fd_num<pos:position pos:line="24" pos:column="55"/></name></name></expr>;<pos:position pos:line="24" pos:column="56"/></condition> <incr><expr><name pos:line="24" pos:column="57">i<pos:position pos:line="24" pos:column="58"/></name><operator pos:line="24" pos:column="58">++<pos:position pos:line="24" pos:column="60"/></operator></expr></incr>)<pos:position pos:line="24" pos:column="61"/></control>
		<block pos:line="25" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="26" pos:column="25">memset<pos:position pos:line="26" pos:column="31"/></name> <argument_list pos:line="26" pos:column="32">(<argument><expr><name pos:line="26" pos:column="33">tmp<pos:position pos:line="26" pos:column="36"/></name> <operator pos:line="26" pos:column="37">+<pos:position pos:line="26" pos:column="38"/></operator> <name pos:line="26" pos:column="39">i<pos:position pos:line="26" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="42">0<pos:position pos:line="26" pos:column="43"/></literal></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="45">sizeof <argument_list pos:line="26" pos:column="52">(<argument><expr><operator pos:line="26" pos:column="53">*<pos:position pos:line="26" pos:column="54"/></operator><name pos:line="26" pos:column="54">tmp<pos:position pos:line="26" pos:column="57"/></name></expr></argument>)<pos:position pos:line="26" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="27" pos:column="25">tmp<pos:position pos:line="27" pos:column="28"/></name><index pos:line="27" pos:column="28">[<expr><name pos:line="27" pos:column="29">i<pos:position pos:line="27" pos:column="30"/></name></expr>]<pos:position pos:line="27" pos:column="31"/></index></name><operator pos:line="27" pos:column="31">.<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="32">fd<pos:position pos:line="27" pos:column="34"/></name> <operator pos:line="27" pos:column="35">=<pos:position pos:line="27" pos:column="36"/></operator> <name><name pos:line="27" pos:column="37">se<pos:position pos:line="27" pos:column="39"/></name><operator pos:line="27" pos:column="39">-&gt;<pos:position pos:line="27" pos:column="44"/></operator><name pos:line="27" pos:column="41">data<pos:position pos:line="27" pos:column="45"/></name><operator pos:line="27" pos:column="45">.<pos:position pos:line="27" pos:column="46"/></operator><name pos:line="27" pos:column="46">server<pos:position pos:line="27" pos:column="52"/></name><operator pos:line="27" pos:column="52">.<pos:position pos:line="27" pos:column="53"/></operator><name pos:line="27" pos:column="53">fd<pos:position pos:line="27" pos:column="55"/></name><index pos:line="27" pos:column="55">[<expr><name pos:line="27" pos:column="56">i<pos:position pos:line="27" pos:column="57"/></name></expr>]<pos:position pos:line="27" pos:column="58"/></index></name></expr>;<pos:position pos:line="27" pos:column="59"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="28" pos:column="25">tmp<pos:position pos:line="28" pos:column="28"/></name><index pos:line="28" pos:column="28">[<expr><name pos:line="28" pos:column="29">i<pos:position pos:line="28" pos:column="30"/></name></expr>]<pos:position pos:line="28" pos:column="31"/></index></name><operator pos:line="28" pos:column="31">.<pos:position pos:line="28" pos:column="32"/></operator><name pos:line="28" pos:column="32">events<pos:position pos:line="28" pos:column="38"/></name> <operator pos:line="28" pos:column="39">=<pos:position pos:line="28" pos:column="40"/></operator> <name pos:line="28" pos:column="41">POLLIN<pos:position pos:line="28" pos:column="47"/></name> <operator pos:line="28" pos:column="48">|<pos:position pos:line="28" pos:column="49"/></operator> <name pos:line="28" pos:column="50">POLLPRI<pos:position pos:line="28" pos:column="57"/></name></expr>;<pos:position pos:line="28" pos:column="58"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="29" pos:column="25">tmp<pos:position pos:line="29" pos:column="28"/></name><index pos:line="29" pos:column="28">[<expr><name pos:line="29" pos:column="29">i<pos:position pos:line="29" pos:column="30"/></name></expr>]<pos:position pos:line="29" pos:column="31"/></index></name><operator pos:line="29" pos:column="31">.<pos:position pos:line="29" pos:column="32"/></operator><name pos:line="29" pos:column="32">revents<pos:position pos:line="29" pos:column="39"/></name> <operator pos:line="29" pos:column="40">=<pos:position pos:line="29" pos:column="41"/></operator> <literal type="number" pos:line="29" pos:column="42">0<pos:position pos:line="29" pos:column="43"/></literal></expr>;<pos:position pos:line="29" pos:column="44"/></expr_stmt>
		}<pos:position pos:line="30" pos:column="18"/></block></for>

		<expr_stmt><expr><name pos:line="32" pos:column="17">listen_sockets_num<pos:position pos:line="32" pos:column="35"/></name> <operator pos:line="32" pos:column="36">+=<pos:position pos:line="32" pos:column="38"/></operator> <name><name pos:line="32" pos:column="39">se<pos:position pos:line="32" pos:column="41"/></name><operator pos:line="32" pos:column="41">-&gt;<pos:position pos:line="32" pos:column="46"/></operator><name pos:line="32" pos:column="43">data<pos:position pos:line="32" pos:column="47"/></name><operator pos:line="32" pos:column="47">.<pos:position pos:line="32" pos:column="48"/></operator><name pos:line="32" pos:column="48">server<pos:position pos:line="32" pos:column="54"/></name><operator pos:line="32" pos:column="54">.<pos:position pos:line="32" pos:column="55"/></operator><name pos:line="32" pos:column="55">fd_num<pos:position pos:line="32" pos:column="61"/></name></name></expr>;<pos:position pos:line="32" pos:column="62"/></expr_stmt>

		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><name pos:line="34" pos:column="21">listen_sockets<pos:position pos:line="34" pos:column="35"/></name> <operator pos:line="34" pos:column="36">==<pos:position pos:line="34" pos:column="38"/></operator> <name pos:line="34" pos:column="39">NULL<pos:position pos:line="34" pos:column="43"/></name></expr>)<pos:position pos:line="34" pos:column="44"/></condition><then pos:line="34" pos:column="44">
		<block pos:line="35" pos:column="17">{
			<expr_stmt><expr><name pos:line="36" pos:column="25">listen_sockets<pos:position pos:line="36" pos:column="39"/></name> <operator pos:line="36" pos:column="40">=<pos:position pos:line="36" pos:column="41"/></operator> <name pos:line="36" pos:column="42">se<pos:position pos:line="36" pos:column="44"/></name></expr>;<pos:position pos:line="36" pos:column="45"/></expr_stmt>
			<return pos:line="37" pos:column="25">return <expr><operator pos:line="37" pos:column="32">(<pos:position pos:line="37" pos:column="33"/></operator><literal type="number" pos:line="37" pos:column="33">0<pos:position pos:line="37" pos:column="34"/></literal><operator pos:line="37" pos:column="34">)<pos:position pos:line="37" pos:column="35"/></operator></expr>;<pos:position pos:line="37" pos:column="36"/></return>
		}<pos:position pos:line="38" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="39" pos:column="17">last_ptr<pos:position pos:line="39" pos:column="25"/></name> <operator pos:line="39" pos:column="26">=<pos:position pos:line="39" pos:column="27"/></operator> <name pos:line="39" pos:column="28">listen_sockets<pos:position pos:line="39" pos:column="42"/></name></expr>;<pos:position pos:line="39" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="40" pos:column="10"/></block></then>
	<else pos:line="41" pos:column="9">else <comment type="block" pos:line="41" pos:column="14">/* if (se-&gt;type == SOCKENT_TYPE_CLIENT) */</comment>
	<block pos:line="42" pos:column="9">{
		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><name pos:line="43" pos:column="21">sending_sockets<pos:position pos:line="43" pos:column="36"/></name> <operator pos:line="43" pos:column="37">==<pos:position pos:line="43" pos:column="39"/></operator> <name pos:line="43" pos:column="40">NULL<pos:position pos:line="43" pos:column="44"/></name></expr>)<pos:position pos:line="43" pos:column="45"/></condition><then pos:line="43" pos:column="45">
		<block pos:line="44" pos:column="17">{
			<expr_stmt><expr><name pos:line="45" pos:column="25">sending_sockets<pos:position pos:line="45" pos:column="40"/></name> <operator pos:line="45" pos:column="41">=<pos:position pos:line="45" pos:column="42"/></operator> <name pos:line="45" pos:column="43">se<pos:position pos:line="45" pos:column="45"/></name></expr>;<pos:position pos:line="45" pos:column="46"/></expr_stmt>
			<return pos:line="46" pos:column="25">return <expr><operator pos:line="46" pos:column="32">(<pos:position pos:line="46" pos:column="33"/></operator><literal type="number" pos:line="46" pos:column="33">0<pos:position pos:line="46" pos:column="34"/></literal><operator pos:line="46" pos:column="34">)<pos:position pos:line="46" pos:column="35"/></operator></expr>;<pos:position pos:line="46" pos:column="36"/></return>
		}<pos:position pos:line="47" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="48" pos:column="17">last_ptr<pos:position pos:line="48" pos:column="25"/></name> <operator pos:line="48" pos:column="26">=<pos:position pos:line="48" pos:column="27"/></operator> <name pos:line="48" pos:column="28">sending_sockets<pos:position pos:line="48" pos:column="43"/></name></expr>;<pos:position pos:line="48" pos:column="44"/></expr_stmt>
	}<pos:position pos:line="49" pos:column="10"/></block></else></if>

	<while pos:line="51" pos:column="9">while <condition pos:line="51" pos:column="15">(<expr><name><name pos:line="51" pos:column="16">last_ptr<pos:position pos:line="51" pos:column="24"/></name><operator pos:line="51" pos:column="24">-&gt;<pos:position pos:line="51" pos:column="29"/></operator><name pos:line="51" pos:column="26">next<pos:position pos:line="51" pos:column="30"/></name></name> <operator pos:line="51" pos:column="31">!=<pos:position pos:line="51" pos:column="33"/></operator> <name pos:line="51" pos:column="34">NULL<pos:position pos:line="51" pos:column="38"/></name></expr>)<pos:position pos:line="51" pos:column="39"/></condition>
		<block type="pseudo"><expr_stmt><expr><name pos:line="52" pos:column="17">last_ptr<pos:position pos:line="52" pos:column="25"/></name> <operator pos:line="52" pos:column="26">=<pos:position pos:line="52" pos:column="27"/></operator> <name><name pos:line="52" pos:column="28">last_ptr<pos:position pos:line="52" pos:column="36"/></name><operator pos:line="52" pos:column="36">-&gt;<pos:position pos:line="52" pos:column="41"/></operator><name pos:line="52" pos:column="38">next<pos:position pos:line="52" pos:column="42"/></name></name></expr>;<pos:position pos:line="52" pos:column="43"/></expr_stmt></block></while>
	<expr_stmt><expr><name><name pos:line="53" pos:column="9">last_ptr<pos:position pos:line="53" pos:column="17"/></name><operator pos:line="53" pos:column="17">-&gt;<pos:position pos:line="53" pos:column="22"/></operator><name pos:line="53" pos:column="19">next<pos:position pos:line="53" pos:column="23"/></name></name> <operator pos:line="53" pos:column="24">=<pos:position pos:line="53" pos:column="25"/></operator> <name pos:line="53" pos:column="26">se<pos:position pos:line="53" pos:column="28"/></name></expr>;<pos:position pos:line="53" pos:column="29"/></expr_stmt>

	<return pos:line="55" pos:column="9">return <expr><operator pos:line="55" pos:column="16">(<pos:position pos:line="55" pos:column="17"/></operator><literal type="number" pos:line="55" pos:column="17">0<pos:position pos:line="55" pos:column="18"/></literal><operator pos:line="55" pos:column="18">)<pos:position pos:line="55" pos:column="19"/></operator></expr>;<pos:position pos:line="55" pos:column="20"/></return>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_599_collectd-4.10.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">fc_init_once<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">void<pos:position pos:line="1" pos:column="30"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="31"/></parameter_list> <comment type="block" pos:line="1" pos:column="32">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><specifier pos:line="3" pos:column="3">static<pos:position pos:line="3" pos:column="9"/></specifier> <type><name pos:line="3" pos:column="10">int<pos:position pos:line="3" pos:column="13"/></name></type> <name pos:line="3" pos:column="14">done<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><literal type="number" pos:line="3" pos:column="21">0<pos:position pos:line="3" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">target_proc_t<pos:position pos:line="4" pos:column="16"/></name></type> <name pos:line="4" pos:column="17">tproc<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">done<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">!=<pos:position pos:line="6" pos:column="14"/></operator> <literal type="number" pos:line="6" pos:column="15">0<pos:position pos:line="6" pos:column="16"/></literal></expr>)<pos:position pos:line="6" pos:column="17"/></condition><then pos:line="6" pos:column="17">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><operator pos:line="7" pos:column="12">(<pos:position pos:line="7" pos:column="13"/></operator><literal type="number" pos:line="7" pos:column="13">0<pos:position pos:line="7" pos:column="14"/></literal><operator pos:line="7" pos:column="14">)<pos:position pos:line="7" pos:column="15"/></operator></expr>;<pos:position pos:line="7" pos:column="16"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="9" pos:column="3">memset<pos:position pos:line="9" pos:column="9"/></name> <argument_list pos:line="9" pos:column="10">(<argument><expr><operator pos:line="9" pos:column="11">&amp;<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="12">tproc<pos:position pos:line="9" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="19">0<pos:position pos:line="9" pos:column="20"/></literal></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="22">sizeof <argument_list pos:line="9" pos:column="29">(<argument><expr><name pos:line="9" pos:column="30">tproc<pos:position pos:line="9" pos:column="35"/></name></expr></argument>)<pos:position pos:line="9" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="10" pos:column="3">tproc<pos:position pos:line="10" pos:column="8"/></name><operator pos:line="10" pos:column="8">.<pos:position pos:line="10" pos:column="9"/></operator><name pos:line="10" pos:column="9">create<pos:position pos:line="10" pos:column="15"/></name></name>  <operator pos:line="10" pos:column="17">=<pos:position pos:line="10" pos:column="18"/></operator> <name pos:line="10" pos:column="19">fc_bit_jump_create<pos:position pos:line="10" pos:column="37"/></name></expr>;<pos:position pos:line="10" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="11" pos:column="3">tproc<pos:position pos:line="11" pos:column="8"/></name><operator pos:line="11" pos:column="8">.<pos:position pos:line="11" pos:column="9"/></operator><name pos:line="11" pos:column="9">destroy<pos:position pos:line="11" pos:column="16"/></name></name> <operator pos:line="11" pos:column="17">=<pos:position pos:line="11" pos:column="18"/></operator> <name pos:line="11" pos:column="19">fc_bit_jump_destroy<pos:position pos:line="11" pos:column="38"/></name></expr>;<pos:position pos:line="11" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="12" pos:column="3">tproc<pos:position pos:line="12" pos:column="8"/></name><operator pos:line="12" pos:column="8">.<pos:position pos:line="12" pos:column="9"/></operator><name pos:line="12" pos:column="9">invoke<pos:position pos:line="12" pos:column="15"/></name></name>  <operator pos:line="12" pos:column="17">=<pos:position pos:line="12" pos:column="18"/></operator> <name pos:line="12" pos:column="19">fc_bit_jump_invoke<pos:position pos:line="12" pos:column="37"/></name></expr>;<pos:position pos:line="12" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">fc_register_target<pos:position pos:line="13" pos:column="21"/></name> <argument_list pos:line="13" pos:column="22">(<argument><expr><literal type="string" pos:line="13" pos:column="23">"jump"<pos:position pos:line="13" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="31">tproc<pos:position pos:line="13" pos:column="36"/></name></expr></argument>)<pos:position pos:line="13" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="38"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">memset<pos:position pos:line="15" pos:column="9"/></name> <argument_list pos:line="15" pos:column="10">(<argument><expr><operator pos:line="15" pos:column="11">&amp;<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="12">tproc<pos:position pos:line="15" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="19">0<pos:position pos:line="15" pos:column="20"/></literal></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="22">sizeof <argument_list pos:line="15" pos:column="29">(<argument><expr><name pos:line="15" pos:column="30">tproc<pos:position pos:line="15" pos:column="35"/></name></expr></argument>)<pos:position pos:line="15" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">tproc<pos:position pos:line="16" pos:column="8"/></name><operator pos:line="16" pos:column="8">.<pos:position pos:line="16" pos:column="9"/></operator><name pos:line="16" pos:column="9">create<pos:position pos:line="16" pos:column="15"/></name></name>  <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <name pos:line="16" pos:column="19">NULL<pos:position pos:line="16" pos:column="23"/></name></expr>;<pos:position pos:line="16" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">tproc<pos:position pos:line="17" pos:column="8"/></name><operator pos:line="17" pos:column="8">.<pos:position pos:line="17" pos:column="9"/></operator><name pos:line="17" pos:column="9">destroy<pos:position pos:line="17" pos:column="16"/></name></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <name pos:line="17" pos:column="19">NULL<pos:position pos:line="17" pos:column="23"/></name></expr>;<pos:position pos:line="17" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="18" pos:column="3">tproc<pos:position pos:line="18" pos:column="8"/></name><operator pos:line="18" pos:column="8">.<pos:position pos:line="18" pos:column="9"/></operator><name pos:line="18" pos:column="9">invoke<pos:position pos:line="18" pos:column="15"/></name></name>  <operator pos:line="18" pos:column="17">=<pos:position pos:line="18" pos:column="18"/></operator> <name pos:line="18" pos:column="19">fc_bit_stop_invoke<pos:position pos:line="18" pos:column="37"/></name></expr>;<pos:position pos:line="18" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">fc_register_target<pos:position pos:line="19" pos:column="21"/></name> <argument_list pos:line="19" pos:column="22">(<argument><expr><literal type="string" pos:line="19" pos:column="23">"stop"<pos:position pos:line="19" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="31">tproc<pos:position pos:line="19" pos:column="36"/></name></expr></argument>)<pos:position pos:line="19" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="38"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="21" pos:column="3">memset<pos:position pos:line="21" pos:column="9"/></name> <argument_list pos:line="21" pos:column="10">(<argument><expr><operator pos:line="21" pos:column="11">&amp;<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="12">tproc<pos:position pos:line="21" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="19">0<pos:position pos:line="21" pos:column="20"/></literal></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="22">sizeof <argument_list pos:line="21" pos:column="29">(<argument><expr><name pos:line="21" pos:column="30">tproc<pos:position pos:line="21" pos:column="35"/></name></expr></argument>)<pos:position pos:line="21" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="22" pos:column="3">tproc<pos:position pos:line="22" pos:column="8"/></name><operator pos:line="22" pos:column="8">.<pos:position pos:line="22" pos:column="9"/></operator><name pos:line="22" pos:column="9">create<pos:position pos:line="22" pos:column="15"/></name></name>  <operator pos:line="22" pos:column="17">=<pos:position pos:line="22" pos:column="18"/></operator> <name pos:line="22" pos:column="19">NULL<pos:position pos:line="22" pos:column="23"/></name></expr>;<pos:position pos:line="22" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="23" pos:column="3">tproc<pos:position pos:line="23" pos:column="8"/></name><operator pos:line="23" pos:column="8">.<pos:position pos:line="23" pos:column="9"/></operator><name pos:line="23" pos:column="9">destroy<pos:position pos:line="23" pos:column="16"/></name></name> <operator pos:line="23" pos:column="17">=<pos:position pos:line="23" pos:column="18"/></operator> <name pos:line="23" pos:column="19">NULL<pos:position pos:line="23" pos:column="23"/></name></expr>;<pos:position pos:line="23" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="24" pos:column="3">tproc<pos:position pos:line="24" pos:column="8"/></name><operator pos:line="24" pos:column="8">.<pos:position pos:line="24" pos:column="9"/></operator><name pos:line="24" pos:column="9">invoke<pos:position pos:line="24" pos:column="15"/></name></name>  <operator pos:line="24" pos:column="17">=<pos:position pos:line="24" pos:column="18"/></operator> <name pos:line="24" pos:column="19">fc_bit_return_invoke<pos:position pos:line="24" pos:column="39"/></name></expr>;<pos:position pos:line="24" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">fc_register_target<pos:position pos:line="25" pos:column="21"/></name> <argument_list pos:line="25" pos:column="22">(<argument><expr><literal type="string" pos:line="25" pos:column="23">"return"<pos:position pos:line="25" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="33">tproc<pos:position pos:line="25" pos:column="38"/></name></expr></argument>)<pos:position pos:line="25" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="40"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="27" pos:column="3">memset<pos:position pos:line="27" pos:column="9"/></name> <argument_list pos:line="27" pos:column="10">(<argument><expr><operator pos:line="27" pos:column="11">&amp;<pos:position pos:line="27" pos:column="16"/></operator><name pos:line="27" pos:column="12">tproc<pos:position pos:line="27" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="19">0<pos:position pos:line="27" pos:column="20"/></literal></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="22">sizeof <argument_list pos:line="27" pos:column="29">(<argument><expr><name pos:line="27" pos:column="30">tproc<pos:position pos:line="27" pos:column="35"/></name></expr></argument>)<pos:position pos:line="27" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="28" pos:column="3">tproc<pos:position pos:line="28" pos:column="8"/></name><operator pos:line="28" pos:column="8">.<pos:position pos:line="28" pos:column="9"/></operator><name pos:line="28" pos:column="9">create<pos:position pos:line="28" pos:column="15"/></name></name>  <operator pos:line="28" pos:column="17">=<pos:position pos:line="28" pos:column="18"/></operator> <name pos:line="28" pos:column="19">fc_bit_write_create<pos:position pos:line="28" pos:column="38"/></name></expr>;<pos:position pos:line="28" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="29" pos:column="3">tproc<pos:position pos:line="29" pos:column="8"/></name><operator pos:line="29" pos:column="8">.<pos:position pos:line="29" pos:column="9"/></operator><name pos:line="29" pos:column="9">destroy<pos:position pos:line="29" pos:column="16"/></name></name> <operator pos:line="29" pos:column="17">=<pos:position pos:line="29" pos:column="18"/></operator> <name pos:line="29" pos:column="19">fc_bit_write_destroy<pos:position pos:line="29" pos:column="39"/></name></expr>;<pos:position pos:line="29" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="30" pos:column="3">tproc<pos:position pos:line="30" pos:column="8"/></name><operator pos:line="30" pos:column="8">.<pos:position pos:line="30" pos:column="9"/></operator><name pos:line="30" pos:column="9">invoke<pos:position pos:line="30" pos:column="15"/></name></name>  <operator pos:line="30" pos:column="17">=<pos:position pos:line="30" pos:column="18"/></operator> <name pos:line="30" pos:column="19">fc_bit_write_invoke<pos:position pos:line="30" pos:column="38"/></name></expr>;<pos:position pos:line="30" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="31" pos:column="3">fc_register_target<pos:position pos:line="31" pos:column="21"/></name> <argument_list pos:line="31" pos:column="22">(<argument><expr><literal type="string" pos:line="31" pos:column="23">"write"<pos:position pos:line="31" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="32">tproc<pos:position pos:line="31" pos:column="37"/></name></expr></argument>)<pos:position pos:line="31" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="39"/></expr_stmt>

  <expr_stmt><expr><name pos:line="33" pos:column="3">done<pos:position pos:line="33" pos:column="7"/></name><operator pos:line="33" pos:column="7">++<pos:position pos:line="33" pos:column="9"/></operator></expr>;<pos:position pos:line="33" pos:column="10"/></expr_stmt>
  <return pos:line="34" pos:column="3">return <expr><operator pos:line="34" pos:column="10">(<pos:position pos:line="34" pos:column="11"/></operator><literal type="number" pos:line="34" pos:column="11">0<pos:position pos:line="34" pos:column="12"/></literal><operator pos:line="34" pos:column="12">)<pos:position pos:line="34" pos:column="13"/></operator></expr>;<pos:position pos:line="34" pos:column="14"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1721_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">clua_load_callback<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">lua_State<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">L<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">int<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">callback_ref<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list> <comment type="block" pos:line="1" pos:column="63">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <expr_stmt><expr><call><name pos:line="3" pos:column="3">lua_rawgeti<pos:position pos:line="3" pos:column="14"/></name><argument_list pos:line="3" pos:column="14">(<argument><expr><name pos:line="3" pos:column="15">L<pos:position pos:line="3" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="18">LUA_REGISTRYINDEX<pos:position pos:line="3" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="37">callback_ref<pos:position pos:line="3" pos:column="49"/></name></expr></argument>)<pos:position pos:line="3" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="51"/></expr_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><operator pos:line="5" pos:column="7">!<pos:position pos:line="5" pos:column="8"/></operator><call><name pos:line="5" pos:column="8">lua_isfunction<pos:position pos:line="5" pos:column="22"/></name><argument_list pos:line="5" pos:column="22">(<argument><expr><name pos:line="5" pos:column="23">L<pos:position pos:line="5" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="26">-<pos:position pos:line="5" pos:column="27"/></operator><literal type="number" pos:line="5" pos:column="27">1<pos:position pos:line="5" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="30"/></condition><then pos:line="5" pos:column="30"> <block pos:line="5" pos:column="31">{
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">lua_pop<pos:position pos:line="6" pos:column="12"/></name><argument_list pos:line="6" pos:column="12">(<argument><expr><name pos:line="6" pos:column="13">L<pos:position pos:line="6" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="16">1<pos:position pos:line="6" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="19"/></expr_stmt>
    <return pos:line="7" pos:column="5">return <expr><operator pos:line="7" pos:column="12">(<pos:position pos:line="7" pos:column="13"/></operator><operator pos:line="7" pos:column="13">-<pos:position pos:line="7" pos:column="14"/></operator><literal type="number" pos:line="7" pos:column="14">1<pos:position pos:line="7" pos:column="15"/></literal><operator pos:line="7" pos:column="15">)<pos:position pos:line="7" pos:column="16"/></operator></expr>;<pos:position pos:line="7" pos:column="17"/></return>
  }<pos:position pos:line="8" pos:column="4"/></block></then></if>

  <return pos:line="10" pos:column="3">return <expr><operator pos:line="10" pos:column="10">(<pos:position pos:line="10" pos:column="11"/></operator><literal type="number" pos:line="10" pos:column="11">0<pos:position pos:line="10" pos:column="12"/></literal><operator pos:line="10" pos:column="12">)<pos:position pos:line="10" pos:column="13"/></operator></expr>;<pos:position pos:line="10" pos:column="14"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

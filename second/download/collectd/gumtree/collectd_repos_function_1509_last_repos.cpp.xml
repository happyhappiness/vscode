<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1509_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">c_ipmi_shutdown<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">void<pos:position pos:line="1" pos:column="32"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list> <block pos:line="1" pos:column="34">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">c_ipmi_instance_t<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name pos:line="2" pos:column="22">st<pos:position pos:line="2" pos:column="24"/></name> <init pos:line="2" pos:column="25">= <expr><name pos:line="2" pos:column="27">instances<pos:position pos:line="2" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="2" pos:column="37"/></decl_stmt>
  <expr_stmt><expr><name pos:line="3" pos:column="3">instances<pos:position pos:line="3" pos:column="12"/></name> <operator pos:line="3" pos:column="13">=<pos:position pos:line="3" pos:column="14"/></operator> <name pos:line="3" pos:column="15">NULL<pos:position pos:line="3" pos:column="19"/></name></expr>;<pos:position pos:line="3" pos:column="20"/></expr_stmt>

  <while pos:line="5" pos:column="3">while <condition pos:line="5" pos:column="9">(<expr><name pos:line="5" pos:column="10">st<pos:position pos:line="5" pos:column="12"/></name> <operator pos:line="5" pos:column="13">!=<pos:position pos:line="5" pos:column="15"/></operator> <name pos:line="5" pos:column="16">NULL<pos:position pos:line="5" pos:column="20"/></name></expr>)<pos:position pos:line="5" pos:column="21"/></condition> <block pos:line="5" pos:column="22">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">c_ipmi_instance_t<pos:position pos:line="6" pos:column="22"/></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">next<pos:position pos:line="6" pos:column="28"/></name> <init pos:line="6" pos:column="29">= <expr><name><name pos:line="6" pos:column="31">st<pos:position pos:line="6" pos:column="33"/></name><operator pos:line="6" pos:column="33">-&gt;<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="35">next<pos:position pos:line="6" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="40"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="8" pos:column="5">st<pos:position pos:line="8" pos:column="7"/></name><operator pos:line="8" pos:column="7">-&gt;<pos:position pos:line="8" pos:column="12"/></operator><name pos:line="8" pos:column="9">next<pos:position pos:line="8" pos:column="13"/></name></name> <operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator> <name pos:line="8" pos:column="16">NULL<pos:position pos:line="8" pos:column="20"/></name></expr>;<pos:position pos:line="8" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">st<pos:position pos:line="9" pos:column="7"/></name><operator pos:line="9" pos:column="7">-&gt;<pos:position pos:line="9" pos:column="12"/></operator><name pos:line="9" pos:column="9">active<pos:position pos:line="9" pos:column="15"/></name></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <literal type="number" pos:line="9" pos:column="18">0<pos:position pos:line="9" pos:column="19"/></literal></expr>;<pos:position pos:line="9" pos:column="20"/></expr_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><call><name pos:line="11" pos:column="10">pthread_equal<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">(<argument><expr><name><name pos:line="11" pos:column="24">st<pos:position pos:line="11" pos:column="26"/></name><operator pos:line="11" pos:column="26">-&gt;<pos:position pos:line="11" pos:column="31"/></operator><name pos:line="11" pos:column="28">thread_id<pos:position pos:line="11" pos:column="37"/></name></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="39">(<pos:position pos:line="11" pos:column="40"/></operator><name pos:line="11" pos:column="40">pthread_t<pos:position pos:line="11" pos:column="49"/></name><operator pos:line="11" pos:column="49">)<pos:position pos:line="11" pos:column="50"/></operator></expr></argument></argument_list></call></expr></condition><then><block pos:line="11" pos:column="50">{<expr_stmt><expr><literal type="number" pos:line="11" pos:column="51">0<pos:position pos:line="11" pos:column="52"/></literal></expr></expr_stmt>}<pos:position pos:line="11" pos:column="53"/></block></then></if>)<pos:position pos:line="11" pos:column="54"/></block></while>)<pos:position pos:line="11" pos:column="55"/></block> <block pos:line="11" pos:column="56">{
      <expr_stmt><expr><call><name pos:line="12" pos:column="7">pthread_join<pos:position pos:line="12" pos:column="19"/></name><argument_list pos:line="12" pos:column="19">(<argument><expr><name><name pos:line="12" pos:column="20">st<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">-&gt;<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="24">thread_id<pos:position pos:line="12" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="35">NULL<pos:position pos:line="12" pos:column="39"/></name></expr></argument>)<pos:position pos:line="12" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="13" pos:column="7">st<pos:position pos:line="13" pos:column="9"/></name><operator pos:line="13" pos:column="9">-&gt;<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="11">thread_id<pos:position pos:line="13" pos:column="20"/></name></name> <operator pos:line="13" pos:column="21">=<pos:position pos:line="13" pos:column="22"/></operator> <operator pos:line="13" pos:column="23">(<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="24">pthread_t<pos:position pos:line="13" pos:column="33"/></name><operator pos:line="13" pos:column="33">)<pos:position pos:line="13" pos:column="34"/></operator><block pos:line="13" pos:column="34">{<expr><literal type="number" pos:line="13" pos:column="35">0<pos:position pos:line="13" pos:column="36"/></literal></expr>}<pos:position pos:line="13" pos:column="37"/></block></expr>;<pos:position pos:line="13" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></function></unit>

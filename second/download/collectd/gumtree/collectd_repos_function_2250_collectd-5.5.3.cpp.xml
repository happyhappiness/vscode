<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2250_collectd-5.5.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">value_to_rate<pos:position pos:line="1" pos:column="18"/></name> <parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">value_t<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">ret_rate<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">derive_t<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">value<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="55">/* {{{ */</comment>
		<parameter><decl><type><name pos:line="2" pos:column="17">value_to_rate_state_t<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">state<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="3" pos:column="17">int<pos:position pos:line="3" pos:column="20"/></name></type> <name pos:line="3" pos:column="21">ds_type<pos:position pos:line="3" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="30">cdtime_t<pos:position pos:line="3" pos:column="38"/></name></type> <name pos:line="3" pos:column="39">t<pos:position pos:line="3" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="41"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">double<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">interval<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>

	<comment type="block" pos:line="7" pos:column="9">/* Another invalid state: The time is not increasing. */</comment>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">t<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">&lt;=<pos:position pos:line="8" pos:column="20"/></operator> <name><name pos:line="8" pos:column="18">state<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">-&gt;<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="25">last_time<pos:position pos:line="8" pos:column="34"/></name></name></expr>)<pos:position pos:line="8" pos:column="35"/></condition><then pos:line="8" pos:column="35">
	<block pos:line="9" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">memset<pos:position pos:line="10" pos:column="23"/></name> <argument_list pos:line="10" pos:column="24">(<argument><expr><name pos:line="10" pos:column="25">state<pos:position pos:line="10" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="32">0<pos:position pos:line="10" pos:column="33"/></literal></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="35">sizeof <argument_list pos:line="10" pos:column="42">(<argument><expr><operator pos:line="10" pos:column="43">*<pos:position pos:line="10" pos:column="44"/></operator><name pos:line="10" pos:column="44">state<pos:position pos:line="10" pos:column="49"/></name></expr></argument>)<pos:position pos:line="10" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="52"/></expr_stmt>
		<return pos:line="11" pos:column="17">return <expr><operator pos:line="11" pos:column="24">(<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="25">EINVAL<pos:position pos:line="11" pos:column="31"/></name><operator pos:line="11" pos:column="31">)<pos:position pos:line="11" pos:column="32"/></operator></expr>;<pos:position pos:line="11" pos:column="33"/></return>
	}<pos:position pos:line="12" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="14" pos:column="9">interval<pos:position pos:line="14" pos:column="17"/></name> <operator pos:line="14" pos:column="18">=<pos:position pos:line="14" pos:column="19"/></operator> <call><name pos:line="14" pos:column="20">CDTIME_T_TO_DOUBLE<pos:position pos:line="14" pos:column="38"/></name><argument_list pos:line="14" pos:column="38">(<argument><expr><name pos:line="14" pos:column="39">t<pos:position pos:line="14" pos:column="40"/></name> <operator pos:line="14" pos:column="41">-<pos:position pos:line="14" pos:column="42"/></operator> <name><name pos:line="14" pos:column="43">state<pos:position pos:line="14" pos:column="48"/></name><operator pos:line="14" pos:column="48">-&gt;<pos:position pos:line="14" pos:column="53"/></operator><name pos:line="14" pos:column="50">last_time<pos:position pos:line="14" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="61"/></expr_stmt>

	<comment type="block" pos:line="16" pos:column="9">/* Previous value is invalid. */</comment>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name><name pos:line="17" pos:column="13">state<pos:position pos:line="17" pos:column="18"/></name><operator pos:line="17" pos:column="18">-&gt;<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="20">last_time<pos:position pos:line="17" pos:column="29"/></name></name> <operator pos:line="17" pos:column="30">==<pos:position pos:line="17" pos:column="32"/></operator> <literal type="number" pos:line="17" pos:column="33">0<pos:position pos:line="17" pos:column="34"/></literal></expr>)<pos:position pos:line="17" pos:column="35"/></condition><then pos:line="17" pos:column="35"> <comment type="block" pos:line="17" pos:column="36">/* {{{ */</comment>
	<block pos:line="18" pos:column="9">{
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><name pos:line="19" pos:column="21">ds_type<pos:position pos:line="19" pos:column="28"/></name> <operator pos:line="19" pos:column="29">==<pos:position pos:line="19" pos:column="31"/></operator> <name pos:line="19" pos:column="32">DS_TYPE_DERIVE<pos:position pos:line="19" pos:column="46"/></name></expr>)<pos:position pos:line="19" pos:column="47"/></condition><then pos:line="19" pos:column="47">
		<block pos:line="20" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="21" pos:column="25">state<pos:position pos:line="21" pos:column="30"/></name><operator pos:line="21" pos:column="30">-&gt;<pos:position pos:line="21" pos:column="35"/></operator><name pos:line="21" pos:column="32">last_value<pos:position pos:line="21" pos:column="42"/></name><operator pos:line="21" pos:column="42">.<pos:position pos:line="21" pos:column="43"/></operator><name pos:line="21" pos:column="43">derive<pos:position pos:line="21" pos:column="49"/></name></name> <operator pos:line="21" pos:column="50">=<pos:position pos:line="21" pos:column="51"/></operator> <name pos:line="21" pos:column="52">value<pos:position pos:line="21" pos:column="57"/></name></expr>;<pos:position pos:line="21" pos:column="58"/></expr_stmt>
		}<pos:position pos:line="22" pos:column="18"/></block></then>
		<elseif pos:line="23" pos:column="17">else <if pos:line="23" pos:column="22">if <condition pos:line="23" pos:column="25">(<expr><name pos:line="23" pos:column="26">ds_type<pos:position pos:line="23" pos:column="33"/></name> <operator pos:line="23" pos:column="34">==<pos:position pos:line="23" pos:column="36"/></operator> <name pos:line="23" pos:column="37">DS_TYPE_COUNTER<pos:position pos:line="23" pos:column="52"/></name></expr>)<pos:position pos:line="23" pos:column="53"/></condition><then pos:line="23" pos:column="53">
		<block pos:line="24" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="25" pos:column="25">state<pos:position pos:line="25" pos:column="30"/></name><operator pos:line="25" pos:column="30">-&gt;<pos:position pos:line="25" pos:column="35"/></operator><name pos:line="25" pos:column="32">last_value<pos:position pos:line="25" pos:column="42"/></name><operator pos:line="25" pos:column="42">.<pos:position pos:line="25" pos:column="43"/></operator><name pos:line="25" pos:column="43">counter<pos:position pos:line="25" pos:column="50"/></name></name> <operator pos:line="25" pos:column="51">=<pos:position pos:line="25" pos:column="52"/></operator> <operator pos:line="25" pos:column="53">(<pos:position pos:line="25" pos:column="54"/></operator><name pos:line="25" pos:column="54">counter_t<pos:position pos:line="25" pos:column="63"/></name><operator pos:line="25" pos:column="63">)<pos:position pos:line="25" pos:column="64"/></operator> <name pos:line="25" pos:column="65">value<pos:position pos:line="25" pos:column="70"/></name></expr>;<pos:position pos:line="25" pos:column="71"/></expr_stmt>
		}<pos:position pos:line="26" pos:column="18"/></block></then></if></elseif>
		<elseif pos:line="27" pos:column="17">else <if pos:line="27" pos:column="22">if <condition pos:line="27" pos:column="25">(<expr><name pos:line="27" pos:column="26">ds_type<pos:position pos:line="27" pos:column="33"/></name> <operator pos:line="27" pos:column="34">==<pos:position pos:line="27" pos:column="36"/></operator> <name pos:line="27" pos:column="37">DS_TYPE_ABSOLUTE<pos:position pos:line="27" pos:column="53"/></name></expr>)<pos:position pos:line="27" pos:column="54"/></condition><then pos:line="27" pos:column="54">
		<block pos:line="28" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="29" pos:column="25">state<pos:position pos:line="29" pos:column="30"/></name><operator pos:line="29" pos:column="30">-&gt;<pos:position pos:line="29" pos:column="35"/></operator><name pos:line="29" pos:column="32">last_value<pos:position pos:line="29" pos:column="42"/></name><operator pos:line="29" pos:column="42">.<pos:position pos:line="29" pos:column="43"/></operator><name pos:line="29" pos:column="43">absolute<pos:position pos:line="29" pos:column="51"/></name></name> <operator pos:line="29" pos:column="52">=<pos:position pos:line="29" pos:column="53"/></operator> <operator pos:line="29" pos:column="54">(<pos:position pos:line="29" pos:column="55"/></operator><name pos:line="29" pos:column="55">absolute_t<pos:position pos:line="29" pos:column="65"/></name><operator pos:line="29" pos:column="65">)<pos:position pos:line="29" pos:column="66"/></operator> <name pos:line="29" pos:column="67">value<pos:position pos:line="29" pos:column="72"/></name></expr>;<pos:position pos:line="29" pos:column="73"/></expr_stmt>
		}<pos:position pos:line="30" pos:column="18"/></block></then></if></elseif>
		<else pos:line="31" pos:column="17">else
		<block pos:line="32" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="33" pos:column="25">assert<pos:position pos:line="33" pos:column="31"/></name> <argument_list pos:line="33" pos:column="32">(<argument><expr><literal type="number" pos:line="33" pos:column="33">23<pos:position pos:line="33" pos:column="35"/></literal> <operator pos:line="33" pos:column="36">==<pos:position pos:line="33" pos:column="38"/></operator> <literal type="number" pos:line="33" pos:column="39">42<pos:position pos:line="33" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="43"/></expr_stmt>
		}<pos:position pos:line="34" pos:column="18"/></block></else></if>

		<expr_stmt><expr><name><name pos:line="36" pos:column="17">state<pos:position pos:line="36" pos:column="22"/></name><operator pos:line="36" pos:column="22">-&gt;<pos:position pos:line="36" pos:column="27"/></operator><name pos:line="36" pos:column="24">last_time<pos:position pos:line="36" pos:column="33"/></name></name> <operator pos:line="36" pos:column="34">=<pos:position pos:line="36" pos:column="35"/></operator> <name pos:line="36" pos:column="36">t<pos:position pos:line="36" pos:column="37"/></name></expr>;<pos:position pos:line="36" pos:column="38"/></expr_stmt>
		<return pos:line="37" pos:column="17">return <expr><operator pos:line="37" pos:column="24">(<pos:position pos:line="37" pos:column="25"/></operator><name pos:line="37" pos:column="25">EAGAIN<pos:position pos:line="37" pos:column="31"/></name><operator pos:line="37" pos:column="31">)<pos:position pos:line="37" pos:column="32"/></operator></expr>;<pos:position pos:line="37" pos:column="33"/></return>
	}<pos:position pos:line="38" pos:column="10"/></block></then></if> <comment type="block" pos:line="38" pos:column="11">/* }}} */</comment>

	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">ds_type<pos:position pos:line="40" pos:column="20"/></name> <operator pos:line="40" pos:column="21">==<pos:position pos:line="40" pos:column="23"/></operator> <name pos:line="40" pos:column="24">DS_TYPE_DERIVE<pos:position pos:line="40" pos:column="38"/></name></expr>)<pos:position pos:line="40" pos:column="39"/></condition><then pos:line="40" pos:column="39">
	<block pos:line="41" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="42" pos:column="17">ret_rate<pos:position pos:line="42" pos:column="25"/></name><operator pos:line="42" pos:column="25">-&gt;<pos:position pos:line="42" pos:column="30"/></operator><name pos:line="42" pos:column="27">gauge<pos:position pos:line="42" pos:column="32"/></name></name> <operator pos:line="42" pos:column="33">=<pos:position pos:line="42" pos:column="34"/></operator> <operator pos:line="42" pos:column="35">(<pos:position pos:line="42" pos:column="36"/></operator><name pos:line="42" pos:column="36">value<pos:position pos:line="42" pos:column="41"/></name> <operator pos:line="42" pos:column="42">-<pos:position pos:line="42" pos:column="43"/></operator> <name><name pos:line="42" pos:column="44">state<pos:position pos:line="42" pos:column="49"/></name><operator pos:line="42" pos:column="49">-&gt;<pos:position pos:line="42" pos:column="54"/></operator><name pos:line="42" pos:column="51">last_value<pos:position pos:line="42" pos:column="61"/></name><operator pos:line="42" pos:column="61">.<pos:position pos:line="42" pos:column="62"/></operator><name pos:line="42" pos:column="62">derive<pos:position pos:line="42" pos:column="68"/></name></name><operator pos:line="42" pos:column="68">)<pos:position pos:line="42" pos:column="69"/></operator> <operator pos:line="42" pos:column="70">/<pos:position pos:line="42" pos:column="71"/></operator> <name pos:line="42" pos:column="72">interval<pos:position pos:line="42" pos:column="80"/></name></expr>;<pos:position pos:line="42" pos:column="81"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="43" pos:column="17">state<pos:position pos:line="43" pos:column="22"/></name><operator pos:line="43" pos:column="22">-&gt;<pos:position pos:line="43" pos:column="27"/></operator><name pos:line="43" pos:column="24">last_value<pos:position pos:line="43" pos:column="34"/></name><operator pos:line="43" pos:column="34">.<pos:position pos:line="43" pos:column="35"/></operator><name pos:line="43" pos:column="35">derive<pos:position pos:line="43" pos:column="41"/></name></name> <operator pos:line="43" pos:column="42">=<pos:position pos:line="43" pos:column="43"/></operator> <name pos:line="43" pos:column="44">value<pos:position pos:line="43" pos:column="49"/></name></expr>;<pos:position pos:line="43" pos:column="50"/></expr_stmt>
	}<pos:position pos:line="44" pos:column="10"/></block></then>
	<elseif pos:line="45" pos:column="9">else <if pos:line="45" pos:column="14">if <condition pos:line="45" pos:column="17">(<expr><name pos:line="45" pos:column="18">ds_type<pos:position pos:line="45" pos:column="25"/></name> <operator pos:line="45" pos:column="26">==<pos:position pos:line="45" pos:column="28"/></operator> <name pos:line="45" pos:column="29">DS_TYPE_COUNTER<pos:position pos:line="45" pos:column="44"/></name></expr>)<pos:position pos:line="45" pos:column="45"/></condition><then pos:line="45" pos:column="45">
	<block pos:line="46" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="47" pos:column="17">ret_rate<pos:position pos:line="47" pos:column="25"/></name><operator pos:line="47" pos:column="25">-&gt;<pos:position pos:line="47" pos:column="30"/></operator><name pos:line="47" pos:column="27">gauge<pos:position pos:line="47" pos:column="32"/></name></name> <operator pos:line="47" pos:column="33">=<pos:position pos:line="47" pos:column="34"/></operator> <operator pos:line="47" pos:column="35">(<pos:position pos:line="47" pos:column="36"/></operator><operator pos:line="47" pos:column="36">(<pos:position pos:line="47" pos:column="37"/></operator><operator pos:line="47" pos:column="37">(<pos:position pos:line="47" pos:column="38"/></operator><name pos:line="47" pos:column="38">counter_t<pos:position pos:line="47" pos:column="47"/></name><operator pos:line="47" pos:column="47">)<pos:position pos:line="47" pos:column="48"/></operator><name pos:line="47" pos:column="48">value<pos:position pos:line="47" pos:column="53"/></name><operator pos:line="47" pos:column="53">)<pos:position pos:line="47" pos:column="54"/></operator> <operator pos:line="47" pos:column="55">-<pos:position pos:line="47" pos:column="56"/></operator> <name><name pos:line="47" pos:column="57">state<pos:position pos:line="47" pos:column="62"/></name><operator pos:line="47" pos:column="62">-&gt;<pos:position pos:line="47" pos:column="67"/></operator><name pos:line="47" pos:column="64">last_value<pos:position pos:line="47" pos:column="74"/></name><operator pos:line="47" pos:column="74">.<pos:position pos:line="47" pos:column="75"/></operator><name pos:line="47" pos:column="75">counter<pos:position pos:line="47" pos:column="82"/></name></name><operator pos:line="47" pos:column="82">)<pos:position pos:line="47" pos:column="83"/></operator> <operator pos:line="47" pos:column="84">/<pos:position pos:line="47" pos:column="85"/></operator> <name pos:line="47" pos:column="86">interval<pos:position pos:line="47" pos:column="94"/></name></expr>;<pos:position pos:line="47" pos:column="95"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="48" pos:column="17">state<pos:position pos:line="48" pos:column="22"/></name><operator pos:line="48" pos:column="22">-&gt;<pos:position pos:line="48" pos:column="27"/></operator><name pos:line="48" pos:column="24">last_value<pos:position pos:line="48" pos:column="34"/></name><operator pos:line="48" pos:column="34">.<pos:position pos:line="48" pos:column="35"/></operator><name pos:line="48" pos:column="35">counter<pos:position pos:line="48" pos:column="42"/></name></name> <operator pos:line="48" pos:column="43">=<pos:position pos:line="48" pos:column="44"/></operator> <operator pos:line="48" pos:column="45">(<pos:position pos:line="48" pos:column="46"/></operator><name pos:line="48" pos:column="46">counter_t<pos:position pos:line="48" pos:column="55"/></name><operator pos:line="48" pos:column="55">)<pos:position pos:line="48" pos:column="56"/></operator> <name pos:line="48" pos:column="57">value<pos:position pos:line="48" pos:column="62"/></name></expr>;<pos:position pos:line="48" pos:column="63"/></expr_stmt>
	}<pos:position pos:line="49" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="50" pos:column="9">else <if pos:line="50" pos:column="14">if <condition pos:line="50" pos:column="17">(<expr><name pos:line="50" pos:column="18">ds_type<pos:position pos:line="50" pos:column="25"/></name> <operator pos:line="50" pos:column="26">==<pos:position pos:line="50" pos:column="28"/></operator> <name pos:line="50" pos:column="29">DS_TYPE_ABSOLUTE<pos:position pos:line="50" pos:column="45"/></name></expr>)<pos:position pos:line="50" pos:column="46"/></condition><then pos:line="50" pos:column="46">
	<block pos:line="51" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="52" pos:column="17">ret_rate<pos:position pos:line="52" pos:column="25"/></name><operator pos:line="52" pos:column="25">-&gt;<pos:position pos:line="52" pos:column="30"/></operator><name pos:line="52" pos:column="27">gauge<pos:position pos:line="52" pos:column="32"/></name></name> <operator pos:line="52" pos:column="33">=<pos:position pos:line="52" pos:column="34"/></operator> <operator pos:line="52" pos:column="35">(<pos:position pos:line="52" pos:column="36"/></operator><operator pos:line="52" pos:column="36">(<pos:position pos:line="52" pos:column="37"/></operator><operator pos:line="52" pos:column="37">(<pos:position pos:line="52" pos:column="38"/></operator><name pos:line="52" pos:column="38">absolute_t<pos:position pos:line="52" pos:column="48"/></name><operator pos:line="52" pos:column="48">)<pos:position pos:line="52" pos:column="49"/></operator><name pos:line="52" pos:column="49">value<pos:position pos:line="52" pos:column="54"/></name><operator pos:line="52" pos:column="54">)<pos:position pos:line="52" pos:column="55"/></operator> <operator pos:line="52" pos:column="56">-<pos:position pos:line="52" pos:column="57"/></operator> <name><name pos:line="52" pos:column="58">state<pos:position pos:line="52" pos:column="63"/></name><operator pos:line="52" pos:column="63">-&gt;<pos:position pos:line="52" pos:column="68"/></operator><name pos:line="52" pos:column="65">last_value<pos:position pos:line="52" pos:column="75"/></name><operator pos:line="52" pos:column="75">.<pos:position pos:line="52" pos:column="76"/></operator><name pos:line="52" pos:column="76">absolute<pos:position pos:line="52" pos:column="84"/></name></name><operator pos:line="52" pos:column="84">)<pos:position pos:line="52" pos:column="85"/></operator> <operator pos:line="52" pos:column="86">/<pos:position pos:line="52" pos:column="87"/></operator> <name pos:line="52" pos:column="88">interval<pos:position pos:line="52" pos:column="96"/></name></expr>;<pos:position pos:line="52" pos:column="97"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="53" pos:column="17">state<pos:position pos:line="53" pos:column="22"/></name><operator pos:line="53" pos:column="22">-&gt;<pos:position pos:line="53" pos:column="27"/></operator><name pos:line="53" pos:column="24">last_value<pos:position pos:line="53" pos:column="34"/></name><operator pos:line="53" pos:column="34">.<pos:position pos:line="53" pos:column="35"/></operator><name pos:line="53" pos:column="35">absolute<pos:position pos:line="53" pos:column="43"/></name></name> <operator pos:line="53" pos:column="44">=<pos:position pos:line="53" pos:column="45"/></operator> <operator pos:line="53" pos:column="46">(<pos:position pos:line="53" pos:column="47"/></operator><name pos:line="53" pos:column="47">absolute_t<pos:position pos:line="53" pos:column="57"/></name><operator pos:line="53" pos:column="57">)<pos:position pos:line="53" pos:column="58"/></operator> <name pos:line="53" pos:column="59">value<pos:position pos:line="53" pos:column="64"/></name></expr>;<pos:position pos:line="53" pos:column="65"/></expr_stmt>
	}<pos:position pos:line="54" pos:column="10"/></block></then></if></elseif>
	<else pos:line="55" pos:column="9">else
	<block pos:line="56" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="57" pos:column="17">assert<pos:position pos:line="57" pos:column="23"/></name> <argument_list pos:line="57" pos:column="24">(<argument><expr><literal type="number" pos:line="57" pos:column="25">23<pos:position pos:line="57" pos:column="27"/></literal> <operator pos:line="57" pos:column="28">==<pos:position pos:line="57" pos:column="30"/></operator> <literal type="number" pos:line="57" pos:column="31">42<pos:position pos:line="57" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="58" pos:column="10"/></block></else></if>

        <expr_stmt><expr><name><name pos:line="60" pos:column="9">state<pos:position pos:line="60" pos:column="14"/></name><operator pos:line="60" pos:column="14">-&gt;<pos:position pos:line="60" pos:column="19"/></operator><name pos:line="60" pos:column="16">last_time<pos:position pos:line="60" pos:column="25"/></name></name> <operator pos:line="60" pos:column="26">=<pos:position pos:line="60" pos:column="27"/></operator> <name pos:line="60" pos:column="28">t<pos:position pos:line="60" pos:column="29"/></name></expr>;<pos:position pos:line="60" pos:column="30"/></expr_stmt>
	<return pos:line="61" pos:column="9">return <expr><operator pos:line="61" pos:column="16">(<pos:position pos:line="61" pos:column="17"/></operator><literal type="number" pos:line="61" pos:column="17">0<pos:position pos:line="61" pos:column="18"/></literal><operator pos:line="61" pos:column="18">)<pos:position pos:line="61" pos:column="19"/></operator></expr>;<pos:position pos:line="61" pos:column="20"/></return>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

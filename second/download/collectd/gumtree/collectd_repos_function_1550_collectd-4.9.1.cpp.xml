<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1550_collectd-4.9.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">plugin_dispatch_values<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">value_list_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">vl<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">status<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><name pos:line="4" pos:column="16">c_complain_t<pos:position pos:line="4" pos:column="28"/></name></type> <name pos:line="4" pos:column="29">no_write_complaint<pos:position pos:line="4" pos:column="47"/></name> <init pos:line="4" pos:column="48">= <expr><name pos:line="4" pos:column="50">C_COMPLAIN_INIT_STATIC<pos:position pos:line="4" pos:column="72"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="73"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="6" pos:column="9">value_t<pos:position pos:line="6" pos:column="16"/></name> <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">saved_values<pos:position pos:line="6" pos:column="30"/></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type>      <name pos:line="7" pos:column="18">saved_values_len<pos:position pos:line="7" pos:column="34"/></name></decl>;<pos:position pos:line="7" pos:column="35"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="9" pos:column="9">data_set_t<pos:position pos:line="9" pos:column="19"/></name> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier></type><name pos:line="9" pos:column="21">ds<pos:position pos:line="9" pos:column="23"/></name></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">free_meta_data<pos:position pos:line="11" pos:column="27"/></name> <init pos:line="11" pos:column="28">= <expr><literal type="number" pos:line="11" pos:column="30">0<pos:position pos:line="11" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="32"/></decl_stmt>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">(<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">vl<pos:position pos:line="13" pos:column="16"/></name> <operator pos:line="13" pos:column="17">==<pos:position pos:line="13" pos:column="19"/></operator> <name pos:line="13" pos:column="20">NULL<pos:position pos:line="13" pos:column="24"/></name><operator pos:line="13" pos:column="24">)<pos:position pos:line="13" pos:column="25"/></operator> <operator pos:line="13" pos:column="26">||<pos:position pos:line="13" pos:column="28"/></operator> <operator pos:line="13" pos:column="29">(<pos:position pos:line="13" pos:column="30"/></operator><name><name pos:line="13" pos:column="30">vl<pos:position pos:line="13" pos:column="32"/></name><operator pos:line="13" pos:column="32">-&gt;<pos:position pos:line="13" pos:column="37"/></operator><name pos:line="13" pos:column="34">type<pos:position pos:line="13" pos:column="38"/></name><index pos:line="13" pos:column="38">[<expr><literal type="number" pos:line="13" pos:column="39">0<pos:position pos:line="13" pos:column="40"/></literal></expr>]<pos:position pos:line="13" pos:column="41"/></index></name> <operator pos:line="13" pos:column="42">==<pos:position pos:line="13" pos:column="44"/></operator> <literal type="number" pos:line="13" pos:column="45">0<pos:position pos:line="13" pos:column="46"/></literal><operator pos:line="13" pos:column="46">)<pos:position pos:line="13" pos:column="47"/></operator>
			<operator pos:line="14" pos:column="25">||<pos:position pos:line="14" pos:column="27"/></operator> <operator pos:line="14" pos:column="28">(<pos:position pos:line="14" pos:column="29"/></operator><name><name pos:line="14" pos:column="29">vl<pos:position pos:line="14" pos:column="31"/></name><operator pos:line="14" pos:column="31">-&gt;<pos:position pos:line="14" pos:column="36"/></operator><name pos:line="14" pos:column="33">values<pos:position pos:line="14" pos:column="39"/></name></name> <operator pos:line="14" pos:column="40">==<pos:position pos:line="14" pos:column="42"/></operator> <name pos:line="14" pos:column="43">NULL<pos:position pos:line="14" pos:column="47"/></name><operator pos:line="14" pos:column="47">)<pos:position pos:line="14" pos:column="48"/></operator> <operator pos:line="14" pos:column="49">||<pos:position pos:line="14" pos:column="51"/></operator> <operator pos:line="14" pos:column="52">(<pos:position pos:line="14" pos:column="53"/></operator><name><name pos:line="14" pos:column="53">vl<pos:position pos:line="14" pos:column="55"/></name><operator pos:line="14" pos:column="55">-&gt;<pos:position pos:line="14" pos:column="60"/></operator><name pos:line="14" pos:column="57">values_len<pos:position pos:line="14" pos:column="67"/></name></name> <operator pos:line="14" pos:column="68">&lt;<pos:position pos:line="14" pos:column="72"/></operator> <literal type="number" pos:line="14" pos:column="70">1<pos:position pos:line="14" pos:column="71"/></literal><operator pos:line="14" pos:column="71">)<pos:position pos:line="14" pos:column="72"/></operator></expr>)<pos:position pos:line="14" pos:column="73"/></condition><then pos:line="14" pos:column="73">
	<block pos:line="15" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">ERROR<pos:position pos:line="16" pos:column="22"/></name> <argument_list pos:line="16" pos:column="23">(<argument><expr><literal type="string" pos:line="16" pos:column="24">"plugin_dispatch_values: Invalid value list."<pos:position pos:line="16" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="71"/></expr_stmt>
		<return pos:line="17" pos:column="17">return <expr><operator pos:line="17" pos:column="24">(<pos:position pos:line="17" pos:column="25"/></operator><operator pos:line="17" pos:column="25">-<pos:position pos:line="17" pos:column="26"/></operator><literal type="number" pos:line="17" pos:column="26">1<pos:position pos:line="17" pos:column="27"/></literal><operator pos:line="17" pos:column="27">)<pos:position pos:line="17" pos:column="28"/></operator></expr>;<pos:position pos:line="17" pos:column="29"/></return>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="20" pos:column="9">/* Free meta data only if the calling function didn't specify any. In
	 * this case matches and targets may add some and the calling function
	 * may not expect (and therefore free) that data. */</comment>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name><name pos:line="23" pos:column="13">vl<pos:position pos:line="23" pos:column="15"/></name><operator pos:line="23" pos:column="15">-&gt;<pos:position pos:line="23" pos:column="20"/></operator><name pos:line="23" pos:column="17">meta<pos:position pos:line="23" pos:column="21"/></name></name> <operator pos:line="23" pos:column="22">==<pos:position pos:line="23" pos:column="24"/></operator> <name pos:line="23" pos:column="25">NULL<pos:position pos:line="23" pos:column="29"/></name></expr>)<pos:position pos:line="23" pos:column="30"/></condition><then pos:line="23" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="17">free_meta_data<pos:position pos:line="24" pos:column="31"/></name> <operator pos:line="24" pos:column="32">=<pos:position pos:line="24" pos:column="33"/></operator> <literal type="number" pos:line="24" pos:column="34">1<pos:position pos:line="24" pos:column="35"/></literal></expr>;<pos:position pos:line="24" pos:column="36"/></expr_stmt></block></then></if>

	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">list_write<pos:position pos:line="26" pos:column="23"/></name> <operator pos:line="26" pos:column="24">==<pos:position pos:line="26" pos:column="26"/></operator> <name pos:line="26" pos:column="27">NULL<pos:position pos:line="26" pos:column="31"/></name></expr>)<pos:position pos:line="26" pos:column="32"/></condition><then pos:line="26" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="17">c_complain_once<pos:position pos:line="27" pos:column="32"/></name> <argument_list pos:line="27" pos:column="33">(<argument><expr><name pos:line="27" pos:column="34">LOG_WARNING<pos:position pos:line="27" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="47">&amp;<pos:position pos:line="27" pos:column="52"/></operator><name pos:line="27" pos:column="48">no_write_complaint<pos:position pos:line="27" pos:column="66"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="28" pos:column="33">"plugin_dispatch_values: No write callback has been "<pos:position pos:line="28" pos:column="86"/></literal>
				<literal type="string" pos:line="29" pos:column="33">"registered. Please load at least one output plugin, "<pos:position pos:line="29" pos:column="87"/></literal>
				<literal type="string" pos:line="30" pos:column="33">"if you want the collected data to be stored."<pos:position pos:line="30" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="81"/></expr_stmt></block></then></if>

	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name pos:line="32" pos:column="13">data_sets<pos:position pos:line="32" pos:column="22"/></name> <operator pos:line="32" pos:column="23">==<pos:position pos:line="32" pos:column="25"/></operator> <name pos:line="32" pos:column="26">NULL<pos:position pos:line="32" pos:column="30"/></name></expr>)<pos:position pos:line="32" pos:column="31"/></condition><then pos:line="32" pos:column="31">
	<block pos:line="33" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">ERROR<pos:position pos:line="34" pos:column="22"/></name> <argument_list pos:line="34" pos:column="23">(<argument><expr><literal type="string" pos:line="34" pos:column="24">"plugin_dispatch_values: No data sets registered. "<pos:position pos:line="34" pos:column="75"/></literal>
				<literal type="string" pos:line="35" pos:column="33">"Could the types database be read? Check "<pos:position pos:line="35" pos:column="75"/></literal>
				<literal type="string" pos:line="36" pos:column="33">"your `TypesDB' setting!"<pos:position pos:line="36" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="60"/></expr_stmt>
		<return pos:line="37" pos:column="17">return <expr><operator pos:line="37" pos:column="24">(<pos:position pos:line="37" pos:column="25"/></operator><operator pos:line="37" pos:column="25">-<pos:position pos:line="37" pos:column="26"/></operator><literal type="number" pos:line="37" pos:column="26">1<pos:position pos:line="37" pos:column="27"/></literal><operator pos:line="37" pos:column="27">)<pos:position pos:line="37" pos:column="28"/></operator></expr>;<pos:position pos:line="37" pos:column="29"/></return>
	}<pos:position pos:line="38" pos:column="10"/></block></then></if>

	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><call><name pos:line="40" pos:column="13">c_avl_get<pos:position pos:line="40" pos:column="22"/></name> <argument_list pos:line="40" pos:column="23">(<argument><expr><name pos:line="40" pos:column="24">data_sets<pos:position pos:line="40" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="35">vl<pos:position pos:line="40" pos:column="37"/></name><operator pos:line="40" pos:column="37">-&gt;<pos:position pos:line="40" pos:column="42"/></operator><name pos:line="40" pos:column="39">type<pos:position pos:line="40" pos:column="43"/></name></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="45">(<pos:position pos:line="40" pos:column="46"/></operator><name pos:line="40" pos:column="46">void<pos:position pos:line="40" pos:column="50"/></name> <operator pos:line="40" pos:column="51">*<pos:position pos:line="40" pos:column="52"/></operator><operator pos:line="40" pos:column="52">)<pos:position pos:line="40" pos:column="53"/></operator> <operator pos:line="40" pos:column="54">&amp;<pos:position pos:line="40" pos:column="59"/></operator><name pos:line="40" pos:column="55">ds<pos:position pos:line="40" pos:column="57"/></name></expr></argument>)<pos:position pos:line="40" pos:column="58"/></argument_list></call> <operator pos:line="40" pos:column="59">!=<pos:position pos:line="40" pos:column="61"/></operator> <literal type="number" pos:line="40" pos:column="62">0<pos:position pos:line="40" pos:column="63"/></literal></expr>)<pos:position pos:line="40" pos:column="64"/></condition><then pos:line="40" pos:column="64">
	<block pos:line="41" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="42" pos:column="17">INFO<pos:position pos:line="42" pos:column="21"/></name> <argument_list pos:line="42" pos:column="22">(<argument><expr><literal type="string" pos:line="42" pos:column="23">"plugin_dispatch_values: Dataset not found: %s"<pos:position pos:line="42" pos:column="70"/></literal></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="72">vl<pos:position pos:line="42" pos:column="74"/></name><operator pos:line="42" pos:column="74">-&gt;<pos:position pos:line="42" pos:column="79"/></operator><name pos:line="42" pos:column="76">type<pos:position pos:line="42" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="82"/></expr_stmt>
		<return pos:line="43" pos:column="17">return <expr><operator pos:line="43" pos:column="24">(<pos:position pos:line="43" pos:column="25"/></operator><operator pos:line="43" pos:column="25">-<pos:position pos:line="43" pos:column="26"/></operator><literal type="number" pos:line="43" pos:column="26">1<pos:position pos:line="43" pos:column="27"/></literal><operator pos:line="43" pos:column="27">)<pos:position pos:line="43" pos:column="28"/></operator></expr>;<pos:position pos:line="43" pos:column="29"/></return>
	}<pos:position pos:line="44" pos:column="10"/></block></then></if>

	<if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><name><name pos:line="46" pos:column="13">vl<pos:position pos:line="46" pos:column="15"/></name><operator pos:line="46" pos:column="15">-&gt;<pos:position pos:line="46" pos:column="20"/></operator><name pos:line="46" pos:column="17">time<pos:position pos:line="46" pos:column="21"/></name></name> <operator pos:line="46" pos:column="22">==<pos:position pos:line="46" pos:column="24"/></operator> <literal type="number" pos:line="46" pos:column="25">0<pos:position pos:line="46" pos:column="26"/></literal></expr>)<pos:position pos:line="46" pos:column="27"/></condition><then pos:line="46" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="47" pos:column="17">vl<pos:position pos:line="47" pos:column="19"/></name><operator pos:line="47" pos:column="19">-&gt;<pos:position pos:line="47" pos:column="24"/></operator><name pos:line="47" pos:column="21">time<pos:position pos:line="47" pos:column="25"/></name></name> <operator pos:line="47" pos:column="26">=<pos:position pos:line="47" pos:column="27"/></operator> <call><name pos:line="47" pos:column="28">time<pos:position pos:line="47" pos:column="32"/></name> <argument_list pos:line="47" pos:column="33">(<argument><expr><name pos:line="47" pos:column="34">NULL<pos:position pos:line="47" pos:column="38"/></name></expr></argument>)<pos:position pos:line="47" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="40"/></expr_stmt></block></then></if>

	<if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><name><name pos:line="49" pos:column="13">vl<pos:position pos:line="49" pos:column="15"/></name><operator pos:line="49" pos:column="15">-&gt;<pos:position pos:line="49" pos:column="20"/></operator><name pos:line="49" pos:column="17">interval<pos:position pos:line="49" pos:column="25"/></name></name> <operator pos:line="49" pos:column="26">&lt;=<pos:position pos:line="49" pos:column="31"/></operator> <literal type="number" pos:line="49" pos:column="29">0<pos:position pos:line="49" pos:column="30"/></literal></expr>)<pos:position pos:line="49" pos:column="31"/></condition><then pos:line="49" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="50" pos:column="17">vl<pos:position pos:line="50" pos:column="19"/></name><operator pos:line="50" pos:column="19">-&gt;<pos:position pos:line="50" pos:column="24"/></operator><name pos:line="50" pos:column="21">interval<pos:position pos:line="50" pos:column="29"/></name></name> <operator pos:line="50" pos:column="30">=<pos:position pos:line="50" pos:column="31"/></operator> <name pos:line="50" pos:column="32">interval_g<pos:position pos:line="50" pos:column="42"/></name></expr>;<pos:position pos:line="50" pos:column="43"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="52" pos:column="9">DEBUG<pos:position pos:line="52" pos:column="14"/></name> <argument_list pos:line="52" pos:column="15">(<argument><expr><literal type="string" pos:line="52" pos:column="16">"plugin_dispatch_values: time = %u; interval = %i; "<pos:position pos:line="52" pos:column="68"/></literal>
			<literal type="string" pos:line="53" pos:column="25">"host = %s; "<pos:position pos:line="53" pos:column="38"/></literal>
			<literal type="string" pos:line="54" pos:column="25">"plugin = %s; plugin_instance = %s; "<pos:position pos:line="54" pos:column="62"/></literal>
			<literal type="string" pos:line="55" pos:column="25">"type = %s; type_instance = %s;"<pos:position pos:line="55" pos:column="57"/></literal></expr></argument>,
			<argument><expr><operator pos:line="56" pos:column="25">(<pos:position pos:line="56" pos:column="26"/></operator><name pos:line="56" pos:column="26">unsigned<pos:position pos:line="56" pos:column="34"/></name> <name pos:line="56" pos:column="35">int<pos:position pos:line="56" pos:column="38"/></name><operator pos:line="56" pos:column="38">)<pos:position pos:line="56" pos:column="39"/></operator> <name><name pos:line="56" pos:column="40">vl<pos:position pos:line="56" pos:column="42"/></name><operator pos:line="56" pos:column="42">-&gt;<pos:position pos:line="56" pos:column="47"/></operator><name pos:line="56" pos:column="44">time<pos:position pos:line="56" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="50">vl<pos:position pos:line="56" pos:column="52"/></name><operator pos:line="56" pos:column="52">-&gt;<pos:position pos:line="56" pos:column="57"/></operator><name pos:line="56" pos:column="54">interval<pos:position pos:line="56" pos:column="62"/></name></name></expr></argument>,
			<argument><expr><name><name pos:line="57" pos:column="25">vl<pos:position pos:line="57" pos:column="27"/></name><operator pos:line="57" pos:column="27">-&gt;<pos:position pos:line="57" pos:column="32"/></operator><name pos:line="57" pos:column="29">host<pos:position pos:line="57" pos:column="33"/></name></name></expr></argument>,
			<argument><expr><name><name pos:line="58" pos:column="25">vl<pos:position pos:line="58" pos:column="27"/></name><operator pos:line="58" pos:column="27">-&gt;<pos:position pos:line="58" pos:column="32"/></operator><name pos:line="58" pos:column="29">plugin<pos:position pos:line="58" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="37">vl<pos:position pos:line="58" pos:column="39"/></name><operator pos:line="58" pos:column="39">-&gt;<pos:position pos:line="58" pos:column="44"/></operator><name pos:line="58" pos:column="41">plugin_instance<pos:position pos:line="58" pos:column="56"/></name></name></expr></argument>,
			<argument><expr><name><name pos:line="59" pos:column="25">vl<pos:position pos:line="59" pos:column="27"/></name><operator pos:line="59" pos:column="27">-&gt;<pos:position pos:line="59" pos:column="32"/></operator><name pos:line="59" pos:column="29">type<pos:position pos:line="59" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="35">vl<pos:position pos:line="59" pos:column="37"/></name><operator pos:line="59" pos:column="37">-&gt;<pos:position pos:line="59" pos:column="42"/></operator><name pos:line="59" pos:column="39">type_instance<pos:position pos:line="59" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="54"/></expr_stmt>

<cpp:if pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">if<pos:position pos:line="61" pos:column="4"/></cpp:directive> <expr><name pos:line="61" pos:column="5">COLLECT_DEBUG<pos:position pos:line="61" pos:column="18"/></name></expr></cpp:if>
	<expr_stmt><expr><call><name pos:line="62" pos:column="9">assert<pos:position pos:line="62" pos:column="15"/></name> <argument_list pos:line="62" pos:column="16">(<argument><expr><literal type="number" pos:line="62" pos:column="17">0<pos:position pos:line="62" pos:column="18"/></literal> <operator pos:line="62" pos:column="19">==<pos:position pos:line="62" pos:column="21"/></operator> <call><name pos:line="62" pos:column="22">strcmp<pos:position pos:line="62" pos:column="28"/></name> <argument_list pos:line="62" pos:column="29">(<argument><expr><name><name pos:line="62" pos:column="30">ds<pos:position pos:line="62" pos:column="32"/></name><operator pos:line="62" pos:column="32">-&gt;<pos:position pos:line="62" pos:column="37"/></operator><name pos:line="62" pos:column="34">type<pos:position pos:line="62" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="40">vl<pos:position pos:line="62" pos:column="42"/></name><operator pos:line="62" pos:column="42">-&gt;<pos:position pos:line="62" pos:column="47"/></operator><name pos:line="62" pos:column="44">type<pos:position pos:line="62" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="62" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="51"/></expr_stmt>
<cpp:else pos:line="63" pos:column="1">#<cpp:directive pos:line="63" pos:column="2">else<pos:position pos:line="63" pos:column="6"/></cpp:directive></cpp:else>
	<if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><literal type="number" pos:line="64" pos:column="13">0<pos:position pos:line="64" pos:column="14"/></literal> <operator pos:line="64" pos:column="15">!=<pos:position pos:line="64" pos:column="17"/></operator> <call><name pos:line="64" pos:column="18">strcmp<pos:position pos:line="64" pos:column="24"/></name> <argument_list pos:line="64" pos:column="25">(<argument><expr><name><name pos:line="64" pos:column="26">ds<pos:position pos:line="64" pos:column="28"/></name><operator pos:line="64" pos:column="28">-&gt;<pos:position pos:line="64" pos:column="33"/></operator><name pos:line="64" pos:column="30">type<pos:position pos:line="64" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="36">vl<pos:position pos:line="64" pos:column="38"/></name><operator pos:line="64" pos:column="38">-&gt;<pos:position pos:line="64" pos:column="43"/></operator><name pos:line="64" pos:column="40">type<pos:position pos:line="64" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="64" pos:column="46"/></condition><then pos:line="64" pos:column="46">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="65" pos:column="17">WARNING<pos:position pos:line="65" pos:column="24"/></name> <argument_list pos:line="65" pos:column="25">(<argument><expr><literal type="string" pos:line="65" pos:column="26">"plugin_dispatch_values: (ds-&gt;type = %s) != (vl-&gt;type = %s)"<pos:position pos:line="65" pos:column="92"/></literal></expr></argument>,
				<argument><expr><name><name pos:line="66" pos:column="33">ds<pos:position pos:line="66" pos:column="35"/></name><operator pos:line="66" pos:column="35">-&gt;<pos:position pos:line="66" pos:column="40"/></operator><name pos:line="66" pos:column="37">type<pos:position pos:line="66" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="43">vl<pos:position pos:line="66" pos:column="45"/></name><operator pos:line="66" pos:column="45">-&gt;<pos:position pos:line="66" pos:column="50"/></operator><name pos:line="66" pos:column="47">type<pos:position pos:line="66" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="53"/></expr_stmt></block></then></if>
<cpp:endif pos:line="67" pos:column="1">#<cpp:directive pos:line="67" pos:column="2">endif<pos:position pos:line="67" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="69" pos:column="1">#<cpp:directive pos:line="69" pos:column="2">if<pos:position pos:line="69" pos:column="4"/></cpp:directive> <expr><name pos:line="69" pos:column="5">COLLECT_DEBUG<pos:position pos:line="69" pos:column="18"/></name></expr></cpp:if>
	<expr_stmt><expr><call><name pos:line="70" pos:column="9">assert<pos:position pos:line="70" pos:column="15"/></name> <argument_list pos:line="70" pos:column="16">(<argument><expr><name><name pos:line="70" pos:column="17">ds<pos:position pos:line="70" pos:column="19"/></name><operator pos:line="70" pos:column="19">-&gt;<pos:position pos:line="70" pos:column="24"/></operator><name pos:line="70" pos:column="21">ds_num<pos:position pos:line="70" pos:column="27"/></name></name> <operator pos:line="70" pos:column="28">==<pos:position pos:line="70" pos:column="30"/></operator> <name><name pos:line="70" pos:column="31">vl<pos:position pos:line="70" pos:column="33"/></name><operator pos:line="70" pos:column="33">-&gt;<pos:position pos:line="70" pos:column="38"/></operator><name pos:line="70" pos:column="35">values_len<pos:position pos:line="70" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="47"/></expr_stmt>
<cpp:else pos:line="71" pos:column="1">#<cpp:directive pos:line="71" pos:column="2">else<pos:position pos:line="71" pos:column="6"/></cpp:directive></cpp:else>
	<if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><name><name pos:line="72" pos:column="13">ds<pos:position pos:line="72" pos:column="15"/></name><operator pos:line="72" pos:column="15">-&gt;<pos:position pos:line="72" pos:column="20"/></operator><name pos:line="72" pos:column="17">ds_num<pos:position pos:line="72" pos:column="23"/></name></name> <operator pos:line="72" pos:column="24">!=<pos:position pos:line="72" pos:column="26"/></operator> <name><name pos:line="72" pos:column="27">vl<pos:position pos:line="72" pos:column="29"/></name><operator pos:line="72" pos:column="29">-&gt;<pos:position pos:line="72" pos:column="34"/></operator><name pos:line="72" pos:column="31">values_len<pos:position pos:line="72" pos:column="41"/></name></name></expr>)<pos:position pos:line="72" pos:column="42"/></condition><then pos:line="72" pos:column="42">
	<block pos:line="73" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="74" pos:column="17">ERROR<pos:position pos:line="74" pos:column="22"/></name> <argument_list pos:line="74" pos:column="23">(<argument><expr><literal type="string" pos:line="74" pos:column="24">"plugin_dispatch_values: ds-&gt;type = %s: "<pos:position pos:line="74" pos:column="68"/></literal>
				<literal type="string" pos:line="75" pos:column="33">"(ds-&gt;ds_num = %i) != "<pos:position pos:line="75" pos:column="59"/></literal>
				<literal type="string" pos:line="76" pos:column="33">"(vl-&gt;values_len = %i)"<pos:position pos:line="76" pos:column="59"/></literal></expr></argument>,
				<argument><expr><name><name pos:line="77" pos:column="33">ds<pos:position pos:line="77" pos:column="35"/></name><operator pos:line="77" pos:column="35">-&gt;<pos:position pos:line="77" pos:column="40"/></operator><name pos:line="77" pos:column="37">type<pos:position pos:line="77" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="43">ds<pos:position pos:line="77" pos:column="45"/></name><operator pos:line="77" pos:column="45">-&gt;<pos:position pos:line="77" pos:column="50"/></operator><name pos:line="77" pos:column="47">ds_num<pos:position pos:line="77" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="55">vl<pos:position pos:line="77" pos:column="57"/></name><operator pos:line="77" pos:column="57">-&gt;<pos:position pos:line="77" pos:column="62"/></operator><name pos:line="77" pos:column="59">values_len<pos:position pos:line="77" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="71"/></expr_stmt>
		<return pos:line="78" pos:column="17">return <expr><operator pos:line="78" pos:column="24">(<pos:position pos:line="78" pos:column="25"/></operator><operator pos:line="78" pos:column="25">-<pos:position pos:line="78" pos:column="26"/></operator><literal type="number" pos:line="78" pos:column="26">1<pos:position pos:line="78" pos:column="27"/></literal><operator pos:line="78" pos:column="27">)<pos:position pos:line="78" pos:column="28"/></operator></expr>;<pos:position pos:line="78" pos:column="29"/></return>
	}<pos:position pos:line="79" pos:column="10"/></block></then></if>
<cpp:endif pos:line="80" pos:column="1">#<cpp:directive pos:line="80" pos:column="2">endif<pos:position pos:line="80" pos:column="7"/></cpp:directive></cpp:endif>

	<expr_stmt><expr><call><name pos:line="82" pos:column="9">escape_slashes<pos:position pos:line="82" pos:column="23"/></name> <argument_list pos:line="82" pos:column="24">(<argument><expr><name><name pos:line="82" pos:column="25">vl<pos:position pos:line="82" pos:column="27"/></name><operator pos:line="82" pos:column="27">-&gt;<pos:position pos:line="82" pos:column="32"/></operator><name pos:line="82" pos:column="29">host<pos:position pos:line="82" pos:column="33"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="82" pos:column="35">sizeof <argument_list pos:line="82" pos:column="42">(<argument><expr><name><name pos:line="82" pos:column="43">vl<pos:position pos:line="82" pos:column="45"/></name><operator pos:line="82" pos:column="45">-&gt;<pos:position pos:line="82" pos:column="50"/></operator><name pos:line="82" pos:column="47">host<pos:position pos:line="82" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="82" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="54"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="83" pos:column="9">escape_slashes<pos:position pos:line="83" pos:column="23"/></name> <argument_list pos:line="83" pos:column="24">(<argument><expr><name><name pos:line="83" pos:column="25">vl<pos:position pos:line="83" pos:column="27"/></name><operator pos:line="83" pos:column="27">-&gt;<pos:position pos:line="83" pos:column="32"/></operator><name pos:line="83" pos:column="29">plugin<pos:position pos:line="83" pos:column="35"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="83" pos:column="37">sizeof <argument_list pos:line="83" pos:column="44">(<argument><expr><name><name pos:line="83" pos:column="45">vl<pos:position pos:line="83" pos:column="47"/></name><operator pos:line="83" pos:column="47">-&gt;<pos:position pos:line="83" pos:column="52"/></operator><name pos:line="83" pos:column="49">plugin<pos:position pos:line="83" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="83" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="58"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="84" pos:column="9">escape_slashes<pos:position pos:line="84" pos:column="23"/></name> <argument_list pos:line="84" pos:column="24">(<argument><expr><name><name pos:line="84" pos:column="25">vl<pos:position pos:line="84" pos:column="27"/></name><operator pos:line="84" pos:column="27">-&gt;<pos:position pos:line="84" pos:column="32"/></operator><name pos:line="84" pos:column="29">plugin_instance<pos:position pos:line="84" pos:column="44"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="84" pos:column="46">sizeof <argument_list pos:line="84" pos:column="53">(<argument><expr><name><name pos:line="84" pos:column="54">vl<pos:position pos:line="84" pos:column="56"/></name><operator pos:line="84" pos:column="56">-&gt;<pos:position pos:line="84" pos:column="61"/></operator><name pos:line="84" pos:column="58">plugin_instance<pos:position pos:line="84" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="84" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="76"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="85" pos:column="9">escape_slashes<pos:position pos:line="85" pos:column="23"/></name> <argument_list pos:line="85" pos:column="24">(<argument><expr><name><name pos:line="85" pos:column="25">vl<pos:position pos:line="85" pos:column="27"/></name><operator pos:line="85" pos:column="27">-&gt;<pos:position pos:line="85" pos:column="32"/></operator><name pos:line="85" pos:column="29">type<pos:position pos:line="85" pos:column="33"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="85" pos:column="35">sizeof <argument_list pos:line="85" pos:column="42">(<argument><expr><name><name pos:line="85" pos:column="43">vl<pos:position pos:line="85" pos:column="45"/></name><operator pos:line="85" pos:column="45">-&gt;<pos:position pos:line="85" pos:column="50"/></operator><name pos:line="85" pos:column="47">type<pos:position pos:line="85" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="85" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="85" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="54"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="86" pos:column="9">escape_slashes<pos:position pos:line="86" pos:column="23"/></name> <argument_list pos:line="86" pos:column="24">(<argument><expr><name><name pos:line="86" pos:column="25">vl<pos:position pos:line="86" pos:column="27"/></name><operator pos:line="86" pos:column="27">-&gt;<pos:position pos:line="86" pos:column="32"/></operator><name pos:line="86" pos:column="29">type_instance<pos:position pos:line="86" pos:column="42"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="86" pos:column="44">sizeof <argument_list pos:line="86" pos:column="51">(<argument><expr><name><name pos:line="86" pos:column="52">vl<pos:position pos:line="86" pos:column="54"/></name><operator pos:line="86" pos:column="54">-&gt;<pos:position pos:line="86" pos:column="59"/></operator><name pos:line="86" pos:column="56">type_instance<pos:position pos:line="86" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="86" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="86" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="72"/></expr_stmt>

	<comment type="block" pos:line="88" pos:column="9">/* Copy the values. This way, we can assure `targets' that they get
	 * dynamically allocated values, which they can free and replace if
	 * they like. */</comment>
	<if pos:line="91" pos:column="9">if <condition pos:line="91" pos:column="12">(<expr><operator pos:line="91" pos:column="13">(<pos:position pos:line="91" pos:column="14"/></operator><name pos:line="91" pos:column="14">pre_cache_chain<pos:position pos:line="91" pos:column="29"/></name> <operator pos:line="91" pos:column="30">!=<pos:position pos:line="91" pos:column="32"/></operator> <name pos:line="91" pos:column="33">NULL<pos:position pos:line="91" pos:column="37"/></name><operator pos:line="91" pos:column="37">)<pos:position pos:line="91" pos:column="38"/></operator> <operator pos:line="91" pos:column="39">||<pos:position pos:line="91" pos:column="41"/></operator> <operator pos:line="91" pos:column="42">(<pos:position pos:line="91" pos:column="43"/></operator><name pos:line="91" pos:column="43">post_cache_chain<pos:position pos:line="91" pos:column="59"/></name> <operator pos:line="91" pos:column="60">!=<pos:position pos:line="91" pos:column="62"/></operator> <name pos:line="91" pos:column="63">NULL<pos:position pos:line="91" pos:column="67"/></name><operator pos:line="91" pos:column="67">)<pos:position pos:line="91" pos:column="68"/></operator></expr>)<pos:position pos:line="91" pos:column="69"/></condition><then pos:line="91" pos:column="69">
	<block pos:line="92" pos:column="9">{
		<expr_stmt><expr><name pos:line="93" pos:column="17">saved_values<pos:position pos:line="93" pos:column="29"/></name>     <operator pos:line="93" pos:column="34">=<pos:position pos:line="93" pos:column="35"/></operator> <name><name pos:line="93" pos:column="36">vl<pos:position pos:line="93" pos:column="38"/></name><operator pos:line="93" pos:column="38">-&gt;<pos:position pos:line="93" pos:column="43"/></operator><name pos:line="93" pos:column="40">values<pos:position pos:line="93" pos:column="46"/></name></name></expr>;<pos:position pos:line="93" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name pos:line="94" pos:column="17">saved_values_len<pos:position pos:line="94" pos:column="33"/></name> <operator pos:line="94" pos:column="34">=<pos:position pos:line="94" pos:column="35"/></operator> <name><name pos:line="94" pos:column="36">vl<pos:position pos:line="94" pos:column="38"/></name><operator pos:line="94" pos:column="38">-&gt;<pos:position pos:line="94" pos:column="43"/></operator><name pos:line="94" pos:column="40">values_len<pos:position pos:line="94" pos:column="50"/></name></name></expr>;<pos:position pos:line="94" pos:column="51"/></expr_stmt>

		<expr_stmt><expr><name><name pos:line="96" pos:column="17">vl<pos:position pos:line="96" pos:column="19"/></name><operator pos:line="96" pos:column="19">-&gt;<pos:position pos:line="96" pos:column="24"/></operator><name pos:line="96" pos:column="21">values<pos:position pos:line="96" pos:column="27"/></name></name> <operator pos:line="96" pos:column="28">=<pos:position pos:line="96" pos:column="29"/></operator> <operator pos:line="96" pos:column="30">(<pos:position pos:line="96" pos:column="31"/></operator><name pos:line="96" pos:column="31">value_t<pos:position pos:line="96" pos:column="38"/></name> <operator pos:line="96" pos:column="39">*<pos:position pos:line="96" pos:column="40"/></operator><operator pos:line="96" pos:column="40">)<pos:position pos:line="96" pos:column="41"/></operator> <call><name pos:line="96" pos:column="42">calloc<pos:position pos:line="96" pos:column="48"/></name> <argument_list pos:line="96" pos:column="49">(<argument><expr><name><name pos:line="96" pos:column="50">vl<pos:position pos:line="96" pos:column="52"/></name><operator pos:line="96" pos:column="52">-&gt;<pos:position pos:line="96" pos:column="57"/></operator><name pos:line="96" pos:column="54">values_len<pos:position pos:line="96" pos:column="64"/></name></name></expr></argument>,
				<argument><expr><sizeof pos:line="97" pos:column="33">sizeof <argument_list pos:line="97" pos:column="40">(<argument><expr><operator pos:line="97" pos:column="41">*<pos:position pos:line="97" pos:column="42"/></operator><name><name pos:line="97" pos:column="42">vl<pos:position pos:line="97" pos:column="44"/></name><operator pos:line="97" pos:column="44">-&gt;<pos:position pos:line="97" pos:column="49"/></operator><name pos:line="97" pos:column="46">values<pos:position pos:line="97" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="97" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="97" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="55"/></expr_stmt>
		<if pos:line="98" pos:column="17">if <condition pos:line="98" pos:column="20">(<expr><name><name pos:line="98" pos:column="21">vl<pos:position pos:line="98" pos:column="23"/></name><operator pos:line="98" pos:column="23">-&gt;<pos:position pos:line="98" pos:column="28"/></operator><name pos:line="98" pos:column="25">values<pos:position pos:line="98" pos:column="31"/></name></name> <operator pos:line="98" pos:column="32">==<pos:position pos:line="98" pos:column="34"/></operator> <name pos:line="98" pos:column="35">NULL<pos:position pos:line="98" pos:column="39"/></name></expr>)<pos:position pos:line="98" pos:column="40"/></condition><then pos:line="98" pos:column="40">
		<block pos:line="99" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="100" pos:column="25">ERROR<pos:position pos:line="100" pos:column="30"/></name> <argument_list pos:line="100" pos:column="31">(<argument><expr><literal type="string" pos:line="100" pos:column="32">"plugin_dispatch_values: calloc failed."<pos:position pos:line="100" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="74"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="101" pos:column="25">vl<pos:position pos:line="101" pos:column="27"/></name><operator pos:line="101" pos:column="27">-&gt;<pos:position pos:line="101" pos:column="32"/></operator><name pos:line="101" pos:column="29">values<pos:position pos:line="101" pos:column="35"/></name></name> <operator pos:line="101" pos:column="36">=<pos:position pos:line="101" pos:column="37"/></operator> <name pos:line="101" pos:column="38">saved_values<pos:position pos:line="101" pos:column="50"/></name></expr>;<pos:position pos:line="101" pos:column="51"/></expr_stmt>
			<return pos:line="102" pos:column="25">return <expr><operator pos:line="102" pos:column="32">(<pos:position pos:line="102" pos:column="33"/></operator><operator pos:line="102" pos:column="33">-<pos:position pos:line="102" pos:column="34"/></operator><literal type="number" pos:line="102" pos:column="34">1<pos:position pos:line="102" pos:column="35"/></literal><operator pos:line="102" pos:column="35">)<pos:position pos:line="102" pos:column="36"/></operator></expr>;<pos:position pos:line="102" pos:column="37"/></return>
		}<pos:position pos:line="103" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="104" pos:column="17">memcpy<pos:position pos:line="104" pos:column="23"/></name> <argument_list pos:line="104" pos:column="24">(<argument><expr><name><name pos:line="104" pos:column="25">vl<pos:position pos:line="104" pos:column="27"/></name><operator pos:line="104" pos:column="27">-&gt;<pos:position pos:line="104" pos:column="32"/></operator><name pos:line="104" pos:column="29">values<pos:position pos:line="104" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="37">saved_values<pos:position pos:line="104" pos:column="49"/></name></expr></argument>,
				<argument><expr><name><name pos:line="105" pos:column="33">vl<pos:position pos:line="105" pos:column="35"/></name><operator pos:line="105" pos:column="35">-&gt;<pos:position pos:line="105" pos:column="40"/></operator><name pos:line="105" pos:column="37">values_len<pos:position pos:line="105" pos:column="47"/></name></name> <operator pos:line="105" pos:column="48">*<pos:position pos:line="105" pos:column="49"/></operator> <sizeof pos:line="105" pos:column="50">sizeof <argument_list pos:line="105" pos:column="57">(<argument><expr><operator pos:line="105" pos:column="58">*<pos:position pos:line="105" pos:column="59"/></operator><name><name pos:line="105" pos:column="59">vl<pos:position pos:line="105" pos:column="61"/></name><operator pos:line="105" pos:column="61">-&gt;<pos:position pos:line="105" pos:column="66"/></operator><name pos:line="105" pos:column="63">values<pos:position pos:line="105" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="105" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="105" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="72"/></expr_stmt>
	}<pos:position pos:line="106" pos:column="10"/></block></then>
	<else pos:line="107" pos:column="9">else <comment type="block" pos:line="107" pos:column="14">/* if ((pre == NULL) &amp;&amp; (post == NULL)) */</comment>
	<block pos:line="108" pos:column="9">{
		<expr_stmt><expr><name pos:line="109" pos:column="17">saved_values<pos:position pos:line="109" pos:column="29"/></name>     <operator pos:line="109" pos:column="34">=<pos:position pos:line="109" pos:column="35"/></operator> <name pos:line="109" pos:column="36">NULL<pos:position pos:line="109" pos:column="40"/></name></expr>;<pos:position pos:line="109" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name pos:line="110" pos:column="17">saved_values_len<pos:position pos:line="110" pos:column="33"/></name> <operator pos:line="110" pos:column="34">=<pos:position pos:line="110" pos:column="35"/></operator> <literal type="number" pos:line="110" pos:column="36">0<pos:position pos:line="110" pos:column="37"/></literal></expr>;<pos:position pos:line="110" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="111" pos:column="10"/></block></else></if>

	<if pos:line="113" pos:column="9">if <condition pos:line="113" pos:column="12">(<expr><name pos:line="113" pos:column="13">pre_cache_chain<pos:position pos:line="113" pos:column="28"/></name> <operator pos:line="113" pos:column="29">!=<pos:position pos:line="113" pos:column="31"/></operator> <name pos:line="113" pos:column="32">NULL<pos:position pos:line="113" pos:column="36"/></name></expr>)<pos:position pos:line="113" pos:column="37"/></condition><then pos:line="113" pos:column="37">
	<block pos:line="114" pos:column="9">{
		<expr_stmt><expr><name pos:line="115" pos:column="17">status<pos:position pos:line="115" pos:column="23"/></name> <operator pos:line="115" pos:column="24">=<pos:position pos:line="115" pos:column="25"/></operator> <call><name pos:line="115" pos:column="26">fc_process_chain<pos:position pos:line="115" pos:column="42"/></name> <argument_list pos:line="115" pos:column="43">(<argument><expr><name pos:line="115" pos:column="44">ds<pos:position pos:line="115" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="48">vl<pos:position pos:line="115" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="52">pre_cache_chain<pos:position pos:line="115" pos:column="67"/></name></expr></argument>)<pos:position pos:line="115" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="69"/></expr_stmt>
		<if pos:line="116" pos:column="17">if <condition pos:line="116" pos:column="20">(<expr><name pos:line="116" pos:column="21">status<pos:position pos:line="116" pos:column="27"/></name> <operator pos:line="116" pos:column="28">&lt;<pos:position pos:line="116" pos:column="32"/></operator> <literal type="number" pos:line="116" pos:column="30">0<pos:position pos:line="116" pos:column="31"/></literal></expr>)<pos:position pos:line="116" pos:column="32"/></condition><then pos:line="116" pos:column="32">
		<block pos:line="117" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="118" pos:column="25">WARNING<pos:position pos:line="118" pos:column="32"/></name> <argument_list pos:line="118" pos:column="33">(<argument><expr><literal type="string" pos:line="118" pos:column="34">"plugin_dispatch_values: Running the "<pos:position pos:line="118" pos:column="72"/></literal>
					<literal type="string" pos:line="119" pos:column="41">"pre-cache chain failed with "<pos:position pos:line="119" pos:column="71"/></literal>
					<literal type="string" pos:line="120" pos:column="41">"status %i (%#x)."<pos:position pos:line="120" pos:column="59"/></literal></expr></argument>,
					<argument><expr><name pos:line="121" pos:column="41">status<pos:position pos:line="121" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="49">status<pos:position pos:line="121" pos:column="55"/></name></expr></argument>)<pos:position pos:line="121" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="57"/></expr_stmt>
		}<pos:position pos:line="122" pos:column="18"/></block></then>
		<elseif pos:line="123" pos:column="17">else <if pos:line="123" pos:column="22">if <condition pos:line="123" pos:column="25">(<expr><name pos:line="123" pos:column="26">status<pos:position pos:line="123" pos:column="32"/></name> <operator pos:line="123" pos:column="33">==<pos:position pos:line="123" pos:column="35"/></operator> <name pos:line="123" pos:column="36">FC_TARGET_STOP<pos:position pos:line="123" pos:column="50"/></name></expr>)<pos:position pos:line="123" pos:column="51"/></condition><then pos:line="123" pos:column="51">
		<block pos:line="124" pos:column="17">{
			<comment type="block" pos:line="125" pos:column="25">/* Restore the state of the value_list so that plugins
			 * don't get confused.. */</comment>
			<if pos:line="127" pos:column="25">if <condition pos:line="127" pos:column="28">(<expr><name pos:line="127" pos:column="29">saved_values<pos:position pos:line="127" pos:column="41"/></name> <operator pos:line="127" pos:column="42">!=<pos:position pos:line="127" pos:column="44"/></operator> <name pos:line="127" pos:column="45">NULL<pos:position pos:line="127" pos:column="49"/></name></expr>)<pos:position pos:line="127" pos:column="50"/></condition><then pos:line="127" pos:column="50">
			<block pos:line="128" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="129" pos:column="33">free<pos:position pos:line="129" pos:column="37"/></name> <argument_list pos:line="129" pos:column="38">(<argument><expr><name><name pos:line="129" pos:column="39">vl<pos:position pos:line="129" pos:column="41"/></name><operator pos:line="129" pos:column="41">-&gt;<pos:position pos:line="129" pos:column="46"/></operator><name pos:line="129" pos:column="43">values<pos:position pos:line="129" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="129" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="51"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="130" pos:column="33">vl<pos:position pos:line="130" pos:column="35"/></name><operator pos:line="130" pos:column="35">-&gt;<pos:position pos:line="130" pos:column="40"/></operator><name pos:line="130" pos:column="37">values<pos:position pos:line="130" pos:column="43"/></name></name>     <operator pos:line="130" pos:column="48">=<pos:position pos:line="130" pos:column="49"/></operator> <name pos:line="130" pos:column="50">saved_values<pos:position pos:line="130" pos:column="62"/></name></expr>;<pos:position pos:line="130" pos:column="63"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="131" pos:column="33">vl<pos:position pos:line="131" pos:column="35"/></name><operator pos:line="131" pos:column="35">-&gt;<pos:position pos:line="131" pos:column="40"/></operator><name pos:line="131" pos:column="37">values_len<pos:position pos:line="131" pos:column="47"/></name></name> <operator pos:line="131" pos:column="48">=<pos:position pos:line="131" pos:column="49"/></operator> <name pos:line="131" pos:column="50">saved_values_len<pos:position pos:line="131" pos:column="66"/></name></expr>;<pos:position pos:line="131" pos:column="67"/></expr_stmt>
			}<pos:position pos:line="132" pos:column="26"/></block></then></if>
			<return pos:line="133" pos:column="25">return <expr><operator pos:line="133" pos:column="32">(<pos:position pos:line="133" pos:column="33"/></operator><literal type="number" pos:line="133" pos:column="33">0<pos:position pos:line="133" pos:column="34"/></literal><operator pos:line="133" pos:column="34">)<pos:position pos:line="133" pos:column="35"/></operator></expr>;<pos:position pos:line="133" pos:column="36"/></return>
		}<pos:position pos:line="134" pos:column="18"/></block></then></if></elseif></if>
	}<pos:position pos:line="135" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="137" pos:column="9">/* Update the value cache */</comment>
	<expr_stmt><expr><call><name pos:line="138" pos:column="9">uc_update<pos:position pos:line="138" pos:column="18"/></name> <argument_list pos:line="138" pos:column="19">(<argument><expr><name pos:line="138" pos:column="20">ds<pos:position pos:line="138" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="138" pos:column="24">vl<pos:position pos:line="138" pos:column="26"/></name></expr></argument>)<pos:position pos:line="138" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="28"/></expr_stmt>

	<comment type="block" pos:line="140" pos:column="9">/* Initiate threshold checking */</comment>
	<expr_stmt><expr><call><name pos:line="141" pos:column="9">ut_check_threshold<pos:position pos:line="141" pos:column="27"/></name> <argument_list pos:line="141" pos:column="28">(<argument><expr><name pos:line="141" pos:column="29">ds<pos:position pos:line="141" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="33">vl<pos:position pos:line="141" pos:column="35"/></name></expr></argument>)<pos:position pos:line="141" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="37"/></expr_stmt>

	<if pos:line="143" pos:column="9">if <condition pos:line="143" pos:column="12">(<expr><name pos:line="143" pos:column="13">post_cache_chain<pos:position pos:line="143" pos:column="29"/></name> <operator pos:line="143" pos:column="30">!=<pos:position pos:line="143" pos:column="32"/></operator> <name pos:line="143" pos:column="33">NULL<pos:position pos:line="143" pos:column="37"/></name></expr>)<pos:position pos:line="143" pos:column="38"/></condition><then pos:line="143" pos:column="38">
	<block pos:line="144" pos:column="9">{
		<expr_stmt><expr><name pos:line="145" pos:column="17">status<pos:position pos:line="145" pos:column="23"/></name> <operator pos:line="145" pos:column="24">=<pos:position pos:line="145" pos:column="25"/></operator> <call><name pos:line="145" pos:column="26">fc_process_chain<pos:position pos:line="145" pos:column="42"/></name> <argument_list pos:line="145" pos:column="43">(<argument><expr><name pos:line="145" pos:column="44">ds<pos:position pos:line="145" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="145" pos:column="48">vl<pos:position pos:line="145" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="145" pos:column="52">post_cache_chain<pos:position pos:line="145" pos:column="68"/></name></expr></argument>)<pos:position pos:line="145" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="70"/></expr_stmt>
		<if pos:line="146" pos:column="17">if <condition pos:line="146" pos:column="20">(<expr><name pos:line="146" pos:column="21">status<pos:position pos:line="146" pos:column="27"/></name> <operator pos:line="146" pos:column="28">&lt;<pos:position pos:line="146" pos:column="32"/></operator> <literal type="number" pos:line="146" pos:column="30">0<pos:position pos:line="146" pos:column="31"/></literal></expr>)<pos:position pos:line="146" pos:column="32"/></condition><then pos:line="146" pos:column="32">
		<block pos:line="147" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="148" pos:column="25">WARNING<pos:position pos:line="148" pos:column="32"/></name> <argument_list pos:line="148" pos:column="33">(<argument><expr><literal type="string" pos:line="148" pos:column="34">"plugin_dispatch_values: Running the "<pos:position pos:line="148" pos:column="72"/></literal>
					<literal type="string" pos:line="149" pos:column="41">"post-cache chain failed with "<pos:position pos:line="149" pos:column="72"/></literal>
					<literal type="string" pos:line="150" pos:column="41">"status %i (%#x)."<pos:position pos:line="150" pos:column="59"/></literal></expr></argument>,
					<argument><expr><name pos:line="151" pos:column="41">status<pos:position pos:line="151" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="151" pos:column="49">status<pos:position pos:line="151" pos:column="55"/></name></expr></argument>)<pos:position pos:line="151" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="57"/></expr_stmt>
		}<pos:position pos:line="152" pos:column="18"/></block></then></if>
	}<pos:position pos:line="153" pos:column="10"/></block></then>
	<else pos:line="154" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="155" pos:column="17">fc_default_action<pos:position pos:line="155" pos:column="34"/></name> <argument_list pos:line="155" pos:column="35">(<argument><expr><name pos:line="155" pos:column="36">ds<pos:position pos:line="155" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="155" pos:column="40">vl<pos:position pos:line="155" pos:column="42"/></name></expr></argument>)<pos:position pos:line="155" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="44"/></expr_stmt></block></else></if>

	<comment type="block" pos:line="157" pos:column="9">/* Restore the state of the value_list so that plugins don't get
	 * confused.. */</comment>
	<if pos:line="159" pos:column="9">if <condition pos:line="159" pos:column="12">(<expr><name pos:line="159" pos:column="13">saved_values<pos:position pos:line="159" pos:column="25"/></name> <operator pos:line="159" pos:column="26">!=<pos:position pos:line="159" pos:column="28"/></operator> <name pos:line="159" pos:column="29">NULL<pos:position pos:line="159" pos:column="33"/></name></expr>)<pos:position pos:line="159" pos:column="34"/></condition><then pos:line="159" pos:column="34">
	<block pos:line="160" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="161" pos:column="17">free<pos:position pos:line="161" pos:column="21"/></name> <argument_list pos:line="161" pos:column="22">(<argument><expr><name><name pos:line="161" pos:column="23">vl<pos:position pos:line="161" pos:column="25"/></name><operator pos:line="161" pos:column="25">-&gt;<pos:position pos:line="161" pos:column="30"/></operator><name pos:line="161" pos:column="27">values<pos:position pos:line="161" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="161" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="162" pos:column="17">vl<pos:position pos:line="162" pos:column="19"/></name><operator pos:line="162" pos:column="19">-&gt;<pos:position pos:line="162" pos:column="24"/></operator><name pos:line="162" pos:column="21">values<pos:position pos:line="162" pos:column="27"/></name></name>     <operator pos:line="162" pos:column="32">=<pos:position pos:line="162" pos:column="33"/></operator> <name pos:line="162" pos:column="34">saved_values<pos:position pos:line="162" pos:column="46"/></name></expr>;<pos:position pos:line="162" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="163" pos:column="17">vl<pos:position pos:line="163" pos:column="19"/></name><operator pos:line="163" pos:column="19">-&gt;<pos:position pos:line="163" pos:column="24"/></operator><name pos:line="163" pos:column="21">values_len<pos:position pos:line="163" pos:column="31"/></name></name> <operator pos:line="163" pos:column="32">=<pos:position pos:line="163" pos:column="33"/></operator> <name pos:line="163" pos:column="34">saved_values_len<pos:position pos:line="163" pos:column="50"/></name></expr>;<pos:position pos:line="163" pos:column="51"/></expr_stmt>
	}<pos:position pos:line="164" pos:column="10"/></block></then></if>

	<if pos:line="166" pos:column="9">if <condition pos:line="166" pos:column="12">(<expr><operator pos:line="166" pos:column="13">(<pos:position pos:line="166" pos:column="14"/></operator><name pos:line="166" pos:column="14">free_meta_data<pos:position pos:line="166" pos:column="28"/></name> <operator pos:line="166" pos:column="29">!=<pos:position pos:line="166" pos:column="31"/></operator> <literal type="number" pos:line="166" pos:column="32">0<pos:position pos:line="166" pos:column="33"/></literal><operator pos:line="166" pos:column="33">)<pos:position pos:line="166" pos:column="34"/></operator> <operator pos:line="166" pos:column="35">&amp;&amp;<pos:position pos:line="166" pos:column="45"/></operator> <operator pos:line="166" pos:column="38">(<pos:position pos:line="166" pos:column="39"/></operator><name><name pos:line="166" pos:column="39">vl<pos:position pos:line="166" pos:column="41"/></name><operator pos:line="166" pos:column="41">-&gt;<pos:position pos:line="166" pos:column="46"/></operator><name pos:line="166" pos:column="43">meta<pos:position pos:line="166" pos:column="47"/></name></name> <operator pos:line="166" pos:column="48">!=<pos:position pos:line="166" pos:column="50"/></operator> <name pos:line="166" pos:column="51">NULL<pos:position pos:line="166" pos:column="55"/></name><operator pos:line="166" pos:column="55">)<pos:position pos:line="166" pos:column="56"/></operator></expr>)<pos:position pos:line="166" pos:column="57"/></condition><then pos:line="166" pos:column="57">
	<block pos:line="167" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="168" pos:column="17">meta_data_destroy<pos:position pos:line="168" pos:column="34"/></name> <argument_list pos:line="168" pos:column="35">(<argument><expr><name><name pos:line="168" pos:column="36">vl<pos:position pos:line="168" pos:column="38"/></name><operator pos:line="168" pos:column="38">-&gt;<pos:position pos:line="168" pos:column="43"/></operator><name pos:line="168" pos:column="40">meta<pos:position pos:line="168" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="168" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="169" pos:column="17">vl<pos:position pos:line="169" pos:column="19"/></name><operator pos:line="169" pos:column="19">-&gt;<pos:position pos:line="169" pos:column="24"/></operator><name pos:line="169" pos:column="21">meta<pos:position pos:line="169" pos:column="25"/></name></name> <operator pos:line="169" pos:column="26">=<pos:position pos:line="169" pos:column="27"/></operator> <name pos:line="169" pos:column="28">NULL<pos:position pos:line="169" pos:column="32"/></name></expr>;<pos:position pos:line="169" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="170" pos:column="10"/></block></then></if>

	<return pos:line="172" pos:column="9">return <expr><operator pos:line="172" pos:column="16">(<pos:position pos:line="172" pos:column="17"/></operator><literal type="number" pos:line="172" pos:column="17">0<pos:position pos:line="172" pos:column="18"/></literal><operator pos:line="172" pos:column="18">)<pos:position pos:line="172" pos:column="19"/></operator></expr>;<pos:position pos:line="172" pos:column="20"/></return>
}<pos:position pos:line="173" pos:column="2"/></block></function></unit>

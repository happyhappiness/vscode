<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1011_collectd-4.7.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dispatch_values<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">data_set_t<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">ds<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">value_list_t<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">vl<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
	       	<parameter><decl><type><name pos:line="2" pos:column="17">FILE<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">fh<pos:position pos:line="2" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="27">char<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">buffer<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">dummy<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">ptr<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">saveptr<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">i<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name pos:line="9" pos:column="15">time_str<pos:position pos:line="9" pos:column="23"/></name> <init pos:line="9" pos:column="24">= <expr><name pos:line="9" pos:column="26">buffer<pos:position pos:line="9" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name pos:line="10" pos:column="15">value_str<pos:position pos:line="10" pos:column="24"/></name> <init pos:line="10" pos:column="25">= <expr><call><name pos:line="10" pos:column="27">strchr<pos:position pos:line="10" pos:column="33"/></name> <argument_list pos:line="10" pos:column="34">(<argument><expr><name pos:line="10" pos:column="35">time_str<pos:position pos:line="10" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="10" pos:column="45">':'<pos:position pos:line="10" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="50"/></decl_stmt>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">value_str<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">==<pos:position pos:line="11" pos:column="25"/></operator> <name pos:line="11" pos:column="26">NULL<pos:position pos:line="11" pos:column="30"/></name></expr>)<pos:position pos:line="11" pos:column="31"/></condition><then pos:line="11" pos:column="31">
	<block pos:line="12" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">print_to_socket<pos:position pos:line="13" pos:column="32"/></name> <argument_list pos:line="13" pos:column="33">(<argument><expr><name pos:line="13" pos:column="34">fh<pos:position pos:line="13" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="38">"-1 No time found.\n"<pos:position pos:line="13" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="61"/></expr_stmt>
		<return pos:line="14" pos:column="17">return <expr><operator pos:line="14" pos:column="24">(<pos:position pos:line="14" pos:column="25"/></operator><operator pos:line="14" pos:column="25">-<pos:position pos:line="14" pos:column="26"/></operator><literal type="number" pos:line="14" pos:column="26">1<pos:position pos:line="14" pos:column="27"/></literal><operator pos:line="14" pos:column="27">)<pos:position pos:line="14" pos:column="28"/></operator></expr>;<pos:position pos:line="14" pos:column="29"/></return>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>
	<expr_stmt><expr><operator pos:line="16" pos:column="9">*<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">value_str<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">=<pos:position pos:line="16" pos:column="21"/></operator> <literal type="char" pos:line="16" pos:column="22">'\0'<pos:position pos:line="16" pos:column="26"/></literal></expr>;<pos:position pos:line="16" pos:column="27"/></expr_stmt> <expr_stmt><expr><name pos:line="16" pos:column="28">value_str<pos:position pos:line="16" pos:column="37"/></name><operator pos:line="16" pos:column="37">++<pos:position pos:line="16" pos:column="39"/></operator></expr>;<pos:position pos:line="16" pos:column="40"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="18" pos:column="9">vl<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">-&gt;<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="13">time<pos:position pos:line="18" pos:column="17"/></name></name> <operator pos:line="18" pos:column="18">=<pos:position pos:line="18" pos:column="19"/></operator> <operator pos:line="18" pos:column="20">(<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="21">time_t<pos:position pos:line="18" pos:column="27"/></name><operator pos:line="18" pos:column="27">)<pos:position pos:line="18" pos:column="28"/></operator> <call><name pos:line="18" pos:column="29">atoi<pos:position pos:line="18" pos:column="33"/></name> <argument_list pos:line="18" pos:column="34">(<argument><expr><name pos:line="18" pos:column="35">time_str<pos:position pos:line="18" pos:column="43"/></name></expr></argument>)<pos:position pos:line="18" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="45"/></expr_stmt>

	<expr_stmt><expr><name pos:line="20" pos:column="9">i<pos:position pos:line="20" pos:column="10"/></name> <operator pos:line="20" pos:column="11">=<pos:position pos:line="20" pos:column="12"/></operator> <literal type="number" pos:line="20" pos:column="13">0<pos:position pos:line="20" pos:column="14"/></literal></expr>;<pos:position pos:line="20" pos:column="15"/></expr_stmt>
	<expr_stmt><expr><name pos:line="21" pos:column="9">dummy<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">=<pos:position pos:line="21" pos:column="16"/></operator> <name pos:line="21" pos:column="17">value_str<pos:position pos:line="21" pos:column="26"/></name></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name pos:line="22" pos:column="9">saveptr<pos:position pos:line="22" pos:column="16"/></name> <operator pos:line="22" pos:column="17">=<pos:position pos:line="22" pos:column="18"/></operator> <name pos:line="22" pos:column="19">NULL<pos:position pos:line="22" pos:column="23"/></name></expr>;<pos:position pos:line="22" pos:column="24"/></expr_stmt>
	<while pos:line="23" pos:column="9">while <condition pos:line="23" pos:column="15">(<expr><operator pos:line="23" pos:column="16">(<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="17">ptr<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">=<pos:position pos:line="23" pos:column="22"/></operator> <call><name pos:line="23" pos:column="23">strtok_r<pos:position pos:line="23" pos:column="31"/></name> <argument_list pos:line="23" pos:column="32">(<argument><expr><name pos:line="23" pos:column="33">dummy<pos:position pos:line="23" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="40">":"<pos:position pos:line="23" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="23" pos:column="45">&amp;<pos:position pos:line="23" pos:column="50"/></operator><name pos:line="23" pos:column="46">saveptr<pos:position pos:line="23" pos:column="53"/></name></expr></argument>)<pos:position pos:line="23" pos:column="54"/></argument_list></call><operator pos:line="23" pos:column="54">)<pos:position pos:line="23" pos:column="55"/></operator> <operator pos:line="23" pos:column="56">!=<pos:position pos:line="23" pos:column="58"/></operator> <name pos:line="23" pos:column="59">NULL<pos:position pos:line="23" pos:column="63"/></name></expr>)<pos:position pos:line="23" pos:column="64"/></condition>
	<block pos:line="24" pos:column="9">{
		<expr_stmt><expr><name pos:line="25" pos:column="17">dummy<pos:position pos:line="25" pos:column="22"/></name> <operator pos:line="25" pos:column="23">=<pos:position pos:line="25" pos:column="24"/></operator> <name pos:line="25" pos:column="25">NULL<pos:position pos:line="25" pos:column="29"/></name></expr>;<pos:position pos:line="25" pos:column="30"/></expr_stmt>

		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><name pos:line="27" pos:column="21">i<pos:position pos:line="27" pos:column="22"/></name> <operator pos:line="27" pos:column="23">&gt;=<pos:position pos:line="27" pos:column="28"/></operator> <name><name pos:line="27" pos:column="26">vl<pos:position pos:line="27" pos:column="28"/></name><operator pos:line="27" pos:column="28">-&gt;<pos:position pos:line="27" pos:column="33"/></operator><name pos:line="27" pos:column="30">values_len<pos:position pos:line="27" pos:column="40"/></name></name></expr>)<pos:position pos:line="27" pos:column="41"/></condition><then pos:line="27" pos:column="41">
		<block pos:line="28" pos:column="17">{
			<expr_stmt><expr><name pos:line="29" pos:column="25">i<pos:position pos:line="29" pos:column="26"/></name> <operator pos:line="29" pos:column="27">=<pos:position pos:line="29" pos:column="28"/></operator> <name><name pos:line="29" pos:column="29">vl<pos:position pos:line="29" pos:column="31"/></name><operator pos:line="29" pos:column="31">-&gt;<pos:position pos:line="29" pos:column="36"/></operator><name pos:line="29" pos:column="33">values_len<pos:position pos:line="29" pos:column="43"/></name></name> <operator pos:line="29" pos:column="44">+<pos:position pos:line="29" pos:column="45"/></operator> <literal type="number" pos:line="29" pos:column="46">1<pos:position pos:line="29" pos:column="47"/></literal></expr>;<pos:position pos:line="29" pos:column="48"/></expr_stmt>
			<break pos:line="30" pos:column="25">break;<pos:position pos:line="30" pos:column="31"/></break>
		}<pos:position pos:line="31" pos:column="18"/></block></then></if>

		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><operator pos:line="33" pos:column="21">(<pos:position pos:line="33" pos:column="22"/></operator><call><name pos:line="33" pos:column="22">strcmp<pos:position pos:line="33" pos:column="28"/></name> <argument_list pos:line="33" pos:column="29">(<argument><expr><name pos:line="33" pos:column="30">ptr<pos:position pos:line="33" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="35">"U"<pos:position pos:line="33" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="39"/></argument_list></call> <operator pos:line="33" pos:column="40">==<pos:position pos:line="33" pos:column="42"/></operator> <literal type="number" pos:line="33" pos:column="43">0<pos:position pos:line="33" pos:column="44"/></literal><operator pos:line="33" pos:column="44">)<pos:position pos:line="33" pos:column="45"/></operator> <operator pos:line="33" pos:column="46">&amp;&amp;<pos:position pos:line="33" pos:column="56"/></operator> <operator pos:line="33" pos:column="49">(<pos:position pos:line="33" pos:column="50"/></operator><name><name pos:line="33" pos:column="50">ds<pos:position pos:line="33" pos:column="52"/></name><operator pos:line="33" pos:column="52">-&gt;<pos:position pos:line="33" pos:column="57"/></operator><name pos:line="33" pos:column="54">ds<pos:position pos:line="33" pos:column="56"/></name><index pos:line="33" pos:column="56">[<expr><name pos:line="33" pos:column="57">i<pos:position pos:line="33" pos:column="58"/></name></expr>]<pos:position pos:line="33" pos:column="59"/></index></name><operator pos:line="33" pos:column="59">.<pos:position pos:line="33" pos:column="60"/></operator><name pos:line="33" pos:column="60">type<pos:position pos:line="33" pos:column="64"/></name> <operator pos:line="33" pos:column="65">==<pos:position pos:line="33" pos:column="67"/></operator> <name pos:line="33" pos:column="68">DS_TYPE_GAUGE<pos:position pos:line="33" pos:column="81"/></name><operator pos:line="33" pos:column="81">)<pos:position pos:line="33" pos:column="82"/></operator></expr>)<pos:position pos:line="33" pos:column="83"/></condition><then pos:line="33" pos:column="83">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="34" pos:column="25">vl<pos:position pos:line="34" pos:column="27"/></name><operator pos:line="34" pos:column="27">-&gt;<pos:position pos:line="34" pos:column="32"/></operator><name pos:line="34" pos:column="29">values<pos:position pos:line="34" pos:column="35"/></name><index pos:line="34" pos:column="35">[<expr><name pos:line="34" pos:column="36">i<pos:position pos:line="34" pos:column="37"/></name></expr>]<pos:position pos:line="34" pos:column="38"/></index></name><operator pos:line="34" pos:column="38">.<pos:position pos:line="34" pos:column="39"/></operator><name pos:line="34" pos:column="39">gauge<pos:position pos:line="34" pos:column="44"/></name> <operator pos:line="34" pos:column="45">=<pos:position pos:line="34" pos:column="46"/></operator> <name pos:line="34" pos:column="47">NAN<pos:position pos:line="34" pos:column="50"/></name></expr>;<pos:position pos:line="34" pos:column="51"/></expr_stmt></block></then>
		<elseif pos:line="35" pos:column="17">else <if pos:line="35" pos:column="22">if <condition pos:line="35" pos:column="25">(<expr><literal type="number" pos:line="35" pos:column="26">0<pos:position pos:line="35" pos:column="27"/></literal> <operator pos:line="35" pos:column="28">!=<pos:position pos:line="35" pos:column="30"/></operator> <call><name pos:line="35" pos:column="31">parse_value<pos:position pos:line="35" pos:column="42"/></name> <argument_list pos:line="35" pos:column="43">(<argument><expr><name pos:line="35" pos:column="44">ptr<pos:position pos:line="35" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="49">&amp;<pos:position pos:line="35" pos:column="54"/></operator><name><name pos:line="35" pos:column="50">vl<pos:position pos:line="35" pos:column="52"/></name><operator pos:line="35" pos:column="52">-&gt;<pos:position pos:line="35" pos:column="57"/></operator><name pos:line="35" pos:column="54">values<pos:position pos:line="35" pos:column="60"/></name><index pos:line="35" pos:column="60">[<expr><name pos:line="35" pos:column="61">i<pos:position pos:line="35" pos:column="62"/></name></expr>]<pos:position pos:line="35" pos:column="63"/></index></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="65">ds<pos:position pos:line="35" pos:column="67"/></name><operator pos:line="35" pos:column="67">-&gt;<pos:position pos:line="35" pos:column="72"/></operator><name pos:line="35" pos:column="69">ds<pos:position pos:line="35" pos:column="71"/></name><index pos:line="35" pos:column="71">[<expr><name pos:line="35" pos:column="72">i<pos:position pos:line="35" pos:column="73"/></name></expr>]<pos:position pos:line="35" pos:column="74"/></index></name></expr></argument>)<pos:position pos:line="35" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="76"/></condition><then pos:line="35" pos:column="76">
		<block pos:line="36" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="37" pos:column="25">print_to_socket<pos:position pos:line="37" pos:column="40"/></name> <argument_list pos:line="37" pos:column="41">(<argument><expr><name pos:line="37" pos:column="42">fh<pos:position pos:line="37" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="46">"-1 Failed to parse value `%s'.\n"<pos:position pos:line="37" pos:column="80"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="82">ptr<pos:position pos:line="37" pos:column="85"/></name></expr></argument>)<pos:position pos:line="37" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="87"/></expr_stmt>
			<return pos:line="38" pos:column="25">return <expr><operator pos:line="38" pos:column="32">(<pos:position pos:line="38" pos:column="33"/></operator><operator pos:line="38" pos:column="33">-<pos:position pos:line="38" pos:column="34"/></operator><literal type="number" pos:line="38" pos:column="34">1<pos:position pos:line="38" pos:column="35"/></literal><operator pos:line="38" pos:column="35">)<pos:position pos:line="38" pos:column="36"/></operator></expr>;<pos:position pos:line="38" pos:column="37"/></return>
		}<pos:position pos:line="39" pos:column="18"/></block></then></if></elseif></if>

		<expr_stmt><expr><name pos:line="41" pos:column="17">i<pos:position pos:line="41" pos:column="18"/></name><operator pos:line="41" pos:column="18">++<pos:position pos:line="41" pos:column="20"/></operator></expr>;<pos:position pos:line="41" pos:column="21"/></expr_stmt>
	}<pos:position pos:line="42" pos:column="10"/></block></while> <comment type="block" pos:line="42" pos:column="11">/* while (strtok_r) */</comment>

	<if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name pos:line="44" pos:column="13">i<pos:position pos:line="44" pos:column="14"/></name> <operator pos:line="44" pos:column="15">!=<pos:position pos:line="44" pos:column="17"/></operator> <name><name pos:line="44" pos:column="18">vl<pos:position pos:line="44" pos:column="20"/></name><operator pos:line="44" pos:column="20">-&gt;<pos:position pos:line="44" pos:column="25"/></operator><name pos:line="44" pos:column="22">values_len<pos:position pos:line="44" pos:column="32"/></name></name></expr>)<pos:position pos:line="44" pos:column="33"/></condition><then pos:line="44" pos:column="33">
	<block pos:line="45" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="46" pos:column="17">char<pos:position pos:line="46" pos:column="21"/></name></type> <name><name pos:line="46" pos:column="22">identifier<pos:position pos:line="46" pos:column="32"/></name><index pos:line="46" pos:column="32">[<expr><literal type="number" pos:line="46" pos:column="33">128<pos:position pos:line="46" pos:column="36"/></literal></expr>]<pos:position pos:line="46" pos:column="37"/></index></name></decl>;<pos:position pos:line="46" pos:column="38"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="47" pos:column="17">FORMAT_VL<pos:position pos:line="47" pos:column="26"/></name> <argument_list pos:line="47" pos:column="27">(<argument><expr><name pos:line="47" pos:column="28">identifier<pos:position pos:line="47" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="47" pos:column="40">sizeof <argument_list pos:line="47" pos:column="47">(<argument><expr><name pos:line="47" pos:column="48">identifier<pos:position pos:line="47" pos:column="58"/></name></expr></argument>)<pos:position pos:line="47" pos:column="59"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="47" pos:column="61">vl<pos:position pos:line="47" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="65">ds<pos:position pos:line="47" pos:column="67"/></name></expr></argument>)<pos:position pos:line="47" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="69"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="48" pos:column="17">ERROR<pos:position pos:line="48" pos:column="22"/></name> <argument_list pos:line="48" pos:column="23">(<argument><expr><literal type="string" pos:line="48" pos:column="24">"cmd putval: dispatch_values: "<pos:position pos:line="48" pos:column="55"/></literal>
				<literal type="string" pos:line="49" pos:column="33">"Number of values incorrect: "<pos:position pos:line="49" pos:column="63"/></literal>
				<literal type="string" pos:line="50" pos:column="33">"Got %i, expected %i. Identifier is `%s'."<pos:position pos:line="50" pos:column="75"/></literal></expr></argument>,
				<argument><expr><name pos:line="51" pos:column="33">i<pos:position pos:line="51" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="36">vl<pos:position pos:line="51" pos:column="38"/></name><operator pos:line="51" pos:column="38">-&gt;<pos:position pos:line="51" pos:column="43"/></operator><name pos:line="51" pos:column="40">values_len<pos:position pos:line="51" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="52">identifier<pos:position pos:line="51" pos:column="62"/></name></expr></argument>)<pos:position pos:line="51" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="64"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="52" pos:column="17">print_to_socket<pos:position pos:line="52" pos:column="32"/></name> <argument_list pos:line="52" pos:column="33">(<argument><expr><name pos:line="52" pos:column="34">fh<pos:position pos:line="52" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="38">"-1 Number of values incorrect: "<pos:position pos:line="52" pos:column="71"/></literal>
				<literal type="string" pos:line="53" pos:column="33">"Got %i, expected %i.\n"<pos:position pos:line="53" pos:column="57"/></literal></expr></argument>,
			       	<argument><expr><name pos:line="54" pos:column="33">i<pos:position pos:line="54" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="36">vl<pos:position pos:line="54" pos:column="38"/></name><operator pos:line="54" pos:column="38">-&gt;<pos:position pos:line="54" pos:column="43"/></operator><name pos:line="54" pos:column="40">values_len<pos:position pos:line="54" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="52"/></expr_stmt>
		<return pos:line="55" pos:column="17">return <expr><operator pos:line="55" pos:column="24">(<pos:position pos:line="55" pos:column="25"/></operator><operator pos:line="55" pos:column="25">-<pos:position pos:line="55" pos:column="26"/></operator><literal type="number" pos:line="55" pos:column="26">1<pos:position pos:line="55" pos:column="27"/></literal><operator pos:line="55" pos:column="27">)<pos:position pos:line="55" pos:column="28"/></operator></expr>;<pos:position pos:line="55" pos:column="29"/></return>
	}<pos:position pos:line="56" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="58" pos:column="9">plugin_dispatch_values<pos:position pos:line="58" pos:column="31"/></name> <argument_list pos:line="58" pos:column="32">(<argument><expr><name pos:line="58" pos:column="33">vl<pos:position pos:line="58" pos:column="35"/></name></expr></argument>)<pos:position pos:line="58" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="37"/></expr_stmt>
	<return pos:line="59" pos:column="9">return <expr><operator pos:line="59" pos:column="16">(<pos:position pos:line="59" pos:column="17"/></operator><literal type="number" pos:line="59" pos:column="17">0<pos:position pos:line="59" pos:column="18"/></literal><operator pos:line="59" pos:column="18">)<pos:position pos:line="59" pos:column="19"/></operator></expr>;<pos:position pos:line="59" pos:column="20"/></return>
}<pos:position pos:line="60" pos:column="2"/></block></function></unit>

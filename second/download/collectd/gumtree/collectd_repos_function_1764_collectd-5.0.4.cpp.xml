<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1764_collectd-5.0.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cj_cb_map_key<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">void<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">ctx<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <name pos:line="1" pos:column="44">unsigned<pos:position pos:line="1" pos:column="52"/></name> <name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">val<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="2" pos:column="5">yajl_len_t<pos:position pos:line="2" pos:column="15"/></name></type> <name pos:line="2" pos:column="16">len<pos:position pos:line="2" pos:column="19"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="20"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">cj_t<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">db<pos:position pos:line="4" pos:column="11"/></name> <init pos:line="4" pos:column="12">= <expr><operator pos:line="4" pos:column="14">(<pos:position pos:line="4" pos:column="15"/></operator><name pos:line="4" pos:column="15">cj_t<pos:position pos:line="4" pos:column="19"/></name> <operator pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></operator><operator pos:line="4" pos:column="21">)<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="22">ctx<pos:position pos:line="4" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">c_avl_tree_t<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">tree<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">tree<pos:position pos:line="7" pos:column="7"/></name> <operator pos:line="7" pos:column="8">=<pos:position pos:line="7" pos:column="9"/></operator> <name><name pos:line="7" pos:column="10">db<pos:position pos:line="7" pos:column="12"/></name><operator pos:line="7" pos:column="12">-&gt;<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="14">state<pos:position pos:line="7" pos:column="19"/></name><index pos:line="7" pos:column="19">[<expr><name><name pos:line="7" pos:column="20">db<pos:position pos:line="7" pos:column="22"/></name><operator pos:line="7" pos:column="22">-&gt;<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="24">depth<pos:position pos:line="7" pos:column="29"/></name></name><operator pos:line="7" pos:column="29">-<pos:position pos:line="7" pos:column="30"/></operator><literal type="number" pos:line="7" pos:column="30">1<pos:position pos:line="7" pos:column="31"/></literal></expr>]<pos:position pos:line="7" pos:column="32"/></index></name><operator pos:line="7" pos:column="32">.<pos:position pos:line="7" pos:column="33"/></operator><name pos:line="7" pos:column="33">tree<pos:position pos:line="7" pos:column="37"/></name></expr>;<pos:position pos:line="7" pos:column="38"/></expr_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">tree<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">!=<pos:position pos:line="9" pos:column="14"/></operator> <name pos:line="9" pos:column="15">NULL<pos:position pos:line="9" pos:column="19"/></name></expr>)<pos:position pos:line="9" pos:column="20"/></condition><then pos:line="9" pos:column="20">
  <block pos:line="10" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">cj_key_t<pos:position pos:line="11" pos:column="13"/></name> <modifier pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></modifier></type><name pos:line="11" pos:column="15">value<pos:position pos:line="11" pos:column="20"/></name></decl>;<pos:position pos:line="11" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">char<pos:position pos:line="12" pos:column="9"/></name> <modifier pos:line="12" pos:column="10">*<pos:position pos:line="12" pos:column="11"/></modifier></type><name pos:line="12" pos:column="11">name<pos:position pos:line="12" pos:column="15"/></name></decl>;<pos:position pos:line="12" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><name pos:line="14" pos:column="5">name<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">=<pos:position pos:line="14" pos:column="11"/></operator> <name><name pos:line="14" pos:column="12">db<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">-&gt;<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="16">state<pos:position pos:line="14" pos:column="21"/></name><index pos:line="14" pos:column="21">[<expr><name><name pos:line="14" pos:column="22">db<pos:position pos:line="14" pos:column="24"/></name><operator pos:line="14" pos:column="24">-&gt;<pos:position pos:line="14" pos:column="29"/></operator><name pos:line="14" pos:column="26">depth<pos:position pos:line="14" pos:column="31"/></name></name></expr>]<pos:position pos:line="14" pos:column="32"/></index></name><operator pos:line="14" pos:column="32">.<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="33">name<pos:position pos:line="14" pos:column="37"/></name></expr>;<pos:position pos:line="14" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="15" pos:column="5">len<pos:position pos:line="15" pos:column="8"/></name> <operator pos:line="15" pos:column="9">=<pos:position pos:line="15" pos:column="10"/></operator> <call><name pos:line="15" pos:column="11">COUCH_MIN<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><name pos:line="15" pos:column="21">len<pos:position pos:line="15" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="26">sizeof <argument_list pos:line="15" pos:column="33">(<argument><expr><name><name pos:line="15" pos:column="34">db<pos:position pos:line="15" pos:column="36"/></name><operator pos:line="15" pos:column="36">-&gt;<pos:position pos:line="15" pos:column="41"/></operator><name pos:line="15" pos:column="38">state<pos:position pos:line="15" pos:column="43"/></name><index pos:line="15" pos:column="43">[<expr><name><name pos:line="15" pos:column="44">db<pos:position pos:line="15" pos:column="46"/></name><operator pos:line="15" pos:column="46">-&gt;<pos:position pos:line="15" pos:column="51"/></operator><name pos:line="15" pos:column="48">depth<pos:position pos:line="15" pos:column="53"/></name></name></expr>]<pos:position pos:line="15" pos:column="54"/></index></name><operator pos:line="15" pos:column="54">.<pos:position pos:line="15" pos:column="55"/></operator><name pos:line="15" pos:column="55">name<pos:position pos:line="15" pos:column="59"/></name></expr></argument>)<pos:position pos:line="15" pos:column="60"/></argument_list></sizeof><operator pos:line="15" pos:column="60">-<pos:position pos:line="15" pos:column="61"/></operator><literal type="number" pos:line="15" pos:column="61">1<pos:position pos:line="15" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">sstrncpy<pos:position pos:line="16" pos:column="13"/></name> <argument_list pos:line="16" pos:column="14">(<argument><expr><name pos:line="16" pos:column="15">name<pos:position pos:line="16" pos:column="19"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="21">(<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="22">char<pos:position pos:line="16" pos:column="26"/></name> <operator pos:line="16" pos:column="27">*<pos:position pos:line="16" pos:column="28"/></operator><operator pos:line="16" pos:column="28">)<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="29">val<pos:position pos:line="16" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="34">len<pos:position pos:line="16" pos:column="37"/></name><operator pos:line="16" pos:column="37">+<pos:position pos:line="16" pos:column="38"/></operator><literal type="number" pos:line="16" pos:column="38">1<pos:position pos:line="16" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="41"/></expr_stmt>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><call><name pos:line="18" pos:column="9">c_avl_get<pos:position pos:line="18" pos:column="18"/></name> <argument_list pos:line="18" pos:column="19">(<argument><expr><name pos:line="18" pos:column="20">tree<pos:position pos:line="18" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="26">name<pos:position pos:line="18" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="32">(<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="33">void<pos:position pos:line="18" pos:column="37"/></name> <operator pos:line="18" pos:column="38">*<pos:position pos:line="18" pos:column="39"/></operator><operator pos:line="18" pos:column="39">)<pos:position pos:line="18" pos:column="40"/></operator> <operator pos:line="18" pos:column="41">&amp;<pos:position pos:line="18" pos:column="46"/></operator><name pos:line="18" pos:column="42">value<pos:position pos:line="18" pos:column="47"/></name></expr></argument>)<pos:position pos:line="18" pos:column="48"/></argument_list></call> <operator pos:line="18" pos:column="49">==<pos:position pos:line="18" pos:column="51"/></operator> <literal type="number" pos:line="18" pos:column="52">0<pos:position pos:line="18" pos:column="53"/></literal></expr>)<pos:position pos:line="18" pos:column="54"/></condition><then pos:line="18" pos:column="54">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="19" pos:column="7">db<pos:position pos:line="19" pos:column="9"/></name><operator pos:line="19" pos:column="9">-&gt;<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="11">state<pos:position pos:line="19" pos:column="16"/></name><index pos:line="19" pos:column="16">[<expr><name><name pos:line="19" pos:column="17">db<pos:position pos:line="19" pos:column="19"/></name><operator pos:line="19" pos:column="19">-&gt;<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="21">depth<pos:position pos:line="19" pos:column="26"/></name></name></expr>]<pos:position pos:line="19" pos:column="27"/></index></name><operator pos:line="19" pos:column="27">.<pos:position pos:line="19" pos:column="28"/></operator><name pos:line="19" pos:column="28">key<pos:position pos:line="19" pos:column="31"/></name> <operator pos:line="19" pos:column="32">=<pos:position pos:line="19" pos:column="33"/></operator> <name pos:line="19" pos:column="34">value<pos:position pos:line="19" pos:column="39"/></name></expr>;<pos:position pos:line="19" pos:column="40"/></expr_stmt></block></then>
    <elseif pos:line="20" pos:column="5">else <if pos:line="20" pos:column="10">if <condition pos:line="20" pos:column="13">(<expr><call><name pos:line="20" pos:column="14">c_avl_get<pos:position pos:line="20" pos:column="23"/></name> <argument_list pos:line="20" pos:column="24">(<argument><expr><name pos:line="20" pos:column="25">tree<pos:position pos:line="20" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="31">CJ_ANY<pos:position pos:line="20" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="39">(<pos:position pos:line="20" pos:column="40"/></operator><name pos:line="20" pos:column="40">void<pos:position pos:line="20" pos:column="44"/></name> <operator pos:line="20" pos:column="45">*<pos:position pos:line="20" pos:column="46"/></operator><operator pos:line="20" pos:column="46">)<pos:position pos:line="20" pos:column="47"/></operator> <operator pos:line="20" pos:column="48">&amp;<pos:position pos:line="20" pos:column="53"/></operator><name pos:line="20" pos:column="49">value<pos:position pos:line="20" pos:column="54"/></name></expr></argument>)<pos:position pos:line="20" pos:column="55"/></argument_list></call> <operator pos:line="20" pos:column="56">==<pos:position pos:line="20" pos:column="58"/></operator> <literal type="number" pos:line="20" pos:column="59">0<pos:position pos:line="20" pos:column="60"/></literal></expr>)<pos:position pos:line="20" pos:column="61"/></condition><then pos:line="20" pos:column="61">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="21" pos:column="7">db<pos:position pos:line="21" pos:column="9"/></name><operator pos:line="21" pos:column="9">-&gt;<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="11">state<pos:position pos:line="21" pos:column="16"/></name><index pos:line="21" pos:column="16">[<expr><name><name pos:line="21" pos:column="17">db<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">-&gt;<pos:position pos:line="21" pos:column="24"/></operator><name pos:line="21" pos:column="21">depth<pos:position pos:line="21" pos:column="26"/></name></name></expr>]<pos:position pos:line="21" pos:column="27"/></index></name><operator pos:line="21" pos:column="27">.<pos:position pos:line="21" pos:column="28"/></operator><name pos:line="21" pos:column="28">key<pos:position pos:line="21" pos:column="31"/></name> <operator pos:line="21" pos:column="32">=<pos:position pos:line="21" pos:column="33"/></operator> <name pos:line="21" pos:column="34">value<pos:position pos:line="21" pos:column="39"/></name></expr>;<pos:position pos:line="21" pos:column="40"/></expr_stmt></block></then></if></elseif>
    <else pos:line="22" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="23" pos:column="7">db<pos:position pos:line="23" pos:column="9"/></name><operator pos:line="23" pos:column="9">-&gt;<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="11">state<pos:position pos:line="23" pos:column="16"/></name><index pos:line="23" pos:column="16">[<expr><name><name pos:line="23" pos:column="17">db<pos:position pos:line="23" pos:column="19"/></name><operator pos:line="23" pos:column="19">-&gt;<pos:position pos:line="23" pos:column="24"/></operator><name pos:line="23" pos:column="21">depth<pos:position pos:line="23" pos:column="26"/></name></name></expr>]<pos:position pos:line="23" pos:column="27"/></index></name><operator pos:line="23" pos:column="27">.<pos:position pos:line="23" pos:column="28"/></operator><name pos:line="23" pos:column="28">key<pos:position pos:line="23" pos:column="31"/></name> <operator pos:line="23" pos:column="32">=<pos:position pos:line="23" pos:column="33"/></operator> <name pos:line="23" pos:column="34">NULL<pos:position pos:line="23" pos:column="38"/></name></expr>;<pos:position pos:line="23" pos:column="39"/></expr_stmt></block></else></if>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>

  <return pos:line="26" pos:column="3">return <expr><operator pos:line="26" pos:column="10">(<pos:position pos:line="26" pos:column="11"/></operator><name pos:line="26" pos:column="11">CJ_CB_CONTINUE<pos:position pos:line="26" pos:column="25"/></name><operator pos:line="26" pos:column="25">)<pos:position pos:line="26" pos:column="26"/></operator></expr>;<pos:position pos:line="26" pos:column="27"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1380_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">long<pos:position pos:line="1" pos:column="12"/></name> <name pos:line="1" pos:column="13">long<pos:position pos:line="1" pos:column="17"/></name></type> <name pos:line="1" pos:column="18">get_zfs_value<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">kstat_t<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">ksp<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">key<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list> <block pos:line="1" pos:column="63">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">llentry_t<pos:position pos:line="2" pos:column="12"/></name> <modifier pos:line="2" pos:column="13">*<pos:position pos:line="2" pos:column="14"/></modifier></type><name pos:line="2" pos:column="14">e<pos:position pos:line="2" pos:column="15"/></name></decl>;<pos:position pos:line="2" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">value_t<pos:position pos:line="3" pos:column="10"/></name> <modifier pos:line="3" pos:column="11">*<pos:position pos:line="3" pos:column="12"/></modifier></type><name pos:line="3" pos:column="12">v<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><name pos:line="5" pos:column="3">e<pos:position pos:line="5" pos:column="4"/></name> <operator pos:line="5" pos:column="5">=<pos:position pos:line="5" pos:column="6"/></operator> <call><name pos:line="5" pos:column="7">llist_search<pos:position pos:line="5" pos:column="19"/></name><argument_list pos:line="5" pos:column="19">(<argument><expr><name pos:line="5" pos:column="20">ksp<pos:position pos:line="5" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="25">key<pos:position pos:line="5" pos:column="28"/></name></expr></argument>)<pos:position pos:line="5" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="30"/></expr_stmt>
  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">e<pos:position pos:line="6" pos:column="8"/></name> <operator pos:line="6" pos:column="9">==<pos:position pos:line="6" pos:column="11"/></operator> <name pos:line="6" pos:column="12">NULL<pos:position pos:line="6" pos:column="16"/></name></expr>)<pos:position pos:line="6" pos:column="17"/></condition><then pos:line="6" pos:column="17"> <block pos:line="6" pos:column="18">{
    <return pos:line="7" pos:column="5">return <expr><operator pos:line="7" pos:column="12">-<pos:position pos:line="7" pos:column="13"/></operator><literal type="number" pos:line="7" pos:column="13">1<pos:position pos:line="7" pos:column="14"/></literal></expr>;<pos:position pos:line="7" pos:column="15"/></return>
  }<pos:position pos:line="8" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="10" pos:column="3">v<pos:position pos:line="10" pos:column="4"/></name> <operator pos:line="10" pos:column="5">=<pos:position pos:line="10" pos:column="6"/></operator> <name><name pos:line="10" pos:column="7">e<pos:position pos:line="10" pos:column="8"/></name><operator pos:line="10" pos:column="8">-&gt;<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="10">value<pos:position pos:line="10" pos:column="15"/></name></name></expr>;<pos:position pos:line="10" pos:column="16"/></expr_stmt>
  <return pos:line="11" pos:column="3">return <expr><operator pos:line="11" pos:column="10">(<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">long<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">long<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">)<pos:position pos:line="11" pos:column="21"/></operator><name><name pos:line="11" pos:column="21">v<pos:position pos:line="11" pos:column="22"/></name><operator pos:line="11" pos:column="22">-&gt;<pos:position pos:line="11" pos:column="27"/></operator><name pos:line="11" pos:column="24">derive<pos:position pos:line="11" pos:column="30"/></name></name></expr>;<pos:position pos:line="11" pos:column="31"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1005_collectd-5.0.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">mv_config_add_data_source<pos:position pos:line="1" pos:column="37"/></name> <parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">mv_match_t<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">m<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="54">/* {{{ */</comment>
    <parameter><decl><type><name pos:line="2" pos:column="5">oconfig_item_t<pos:position pos:line="2" pos:column="19"/></name> <modifier pos:line="2" pos:column="20">*<pos:position pos:line="2" pos:column="21"/></modifier></type><name pos:line="2" pos:column="21">ci<pos:position pos:line="2" pos:column="23"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="24"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">new_data_sources_num<pos:position pos:line="4" pos:column="30"/></name></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier><modifier pos:line="5" pos:column="9">*<pos:position pos:line="5" pos:column="10"/></modifier></type><name pos:line="5" pos:column="10">temp<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">i<pos:position pos:line="6" pos:column="8"/></name></decl>;<pos:position pos:line="6" pos:column="9"/></decl_stmt>

  <comment type="block" pos:line="8" pos:column="3">/* Check number of arbuments. */</comment>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name><name pos:line="9" pos:column="7">ci<pos:position pos:line="9" pos:column="9"/></name><operator pos:line="9" pos:column="9">-&gt;<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="11">values_num<pos:position pos:line="9" pos:column="21"/></name></name> <operator pos:line="9" pos:column="22">&lt;<pos:position pos:line="9" pos:column="26"/></operator> <literal type="number" pos:line="9" pos:column="24">1<pos:position pos:line="9" pos:column="25"/></literal></expr>)<pos:position pos:line="9" pos:column="26"/></condition><then pos:line="9" pos:column="26">
  <block pos:line="10" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">ERROR<pos:position pos:line="11" pos:column="10"/></name> <argument_list pos:line="11" pos:column="11">(<argument><expr><literal type="string" pos:line="11" pos:column="12">"`value' match: `%s' needs at least one argument."<pos:position pos:line="11" pos:column="62"/></literal></expr></argument>,
        <argument><expr><name><name pos:line="12" pos:column="9">ci<pos:position pos:line="12" pos:column="11"/></name><operator pos:line="12" pos:column="11">-&gt;<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="13">key<pos:position pos:line="12" pos:column="16"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="18"/></expr_stmt>
    <return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">(<pos:position pos:line="13" pos:column="13"/></operator><operator pos:line="13" pos:column="13">-<pos:position pos:line="13" pos:column="14"/></operator><literal type="number" pos:line="13" pos:column="14">1<pos:position pos:line="13" pos:column="15"/></literal><operator pos:line="13" pos:column="15">)<pos:position pos:line="13" pos:column="16"/></operator></expr>;<pos:position pos:line="13" pos:column="17"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="16" pos:column="3">/* Check type of arguments */</comment>
  <for pos:line="17" pos:column="3">for <control pos:line="17" pos:column="7">(<init><expr><name pos:line="17" pos:column="8">i<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">=<pos:position pos:line="17" pos:column="11"/></operator> <literal type="number" pos:line="17" pos:column="12">0<pos:position pos:line="17" pos:column="13"/></literal></expr>;<pos:position pos:line="17" pos:column="14"/></init> <condition><expr><name pos:line="17" pos:column="15">i<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">&lt;<pos:position pos:line="17" pos:column="21"/></operator> <name><name pos:line="17" pos:column="19">ci<pos:position pos:line="17" pos:column="21"/></name><operator pos:line="17" pos:column="21">-&gt;<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="23">values_num<pos:position pos:line="17" pos:column="33"/></name></name></expr>;<pos:position pos:line="17" pos:column="34"/></condition> <incr><expr><name pos:line="17" pos:column="35">i<pos:position pos:line="17" pos:column="36"/></name><operator pos:line="17" pos:column="36">++<pos:position pos:line="17" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="17" pos:column="39"/></control>
  <block pos:line="18" pos:column="3">{
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name><name pos:line="19" pos:column="9">ci<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">-&gt;<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="13">values<pos:position pos:line="19" pos:column="19"/></name><index pos:line="19" pos:column="19">[<expr><name pos:line="19" pos:column="20">i<pos:position pos:line="19" pos:column="21"/></name></expr>]<pos:position pos:line="19" pos:column="22"/></index></name><operator pos:line="19" pos:column="22">.<pos:position pos:line="19" pos:column="23"/></operator><name pos:line="19" pos:column="23">type<pos:position pos:line="19" pos:column="27"/></name> <operator pos:line="19" pos:column="28">==<pos:position pos:line="19" pos:column="30"/></operator> <name pos:line="19" pos:column="31">OCONFIG_TYPE_STRING<pos:position pos:line="19" pos:column="50"/></name></expr>)<pos:position pos:line="19" pos:column="51"/></condition><then pos:line="19" pos:column="51">
      <block type="pseudo"><continue pos:line="20" pos:column="7">continue;<pos:position pos:line="20" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><call><name pos:line="22" pos:column="5">ERROR<pos:position pos:line="22" pos:column="10"/></name> <argument_list pos:line="22" pos:column="11">(<argument><expr><literal type="string" pos:line="22" pos:column="12">"`value' match: `%s' accepts only string arguments "<pos:position pos:line="22" pos:column="64"/></literal>
        <literal type="string" pos:line="23" pos:column="9">"(argument %i is a %s)."<pos:position pos:line="23" pos:column="33"/></literal></expr></argument>,
        <argument><expr><name><name pos:line="24" pos:column="9">ci<pos:position pos:line="24" pos:column="11"/></name><operator pos:line="24" pos:column="11">-&gt;<pos:position pos:line="24" pos:column="16"/></operator><name pos:line="24" pos:column="13">key<pos:position pos:line="24" pos:column="16"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="18">i<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">+<pos:position pos:line="24" pos:column="21"/></operator> <literal type="number" pos:line="24" pos:column="22">1<pos:position pos:line="24" pos:column="23"/></literal></expr></argument>,
        <argument><expr><ternary><condition><expr><operator pos:line="25" pos:column="9">(<pos:position pos:line="25" pos:column="10"/></operator><name><name pos:line="25" pos:column="10">ci<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">-&gt;<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="14">values<pos:position pos:line="25" pos:column="20"/></name><index pos:line="25" pos:column="20">[<expr><name pos:line="25" pos:column="21">i<pos:position pos:line="25" pos:column="22"/></name></expr>]<pos:position pos:line="25" pos:column="23"/></index></name><operator pos:line="25" pos:column="23">.<pos:position pos:line="25" pos:column="24"/></operator><name pos:line="25" pos:column="24">type<pos:position pos:line="25" pos:column="28"/></name> <operator pos:line="25" pos:column="29">==<pos:position pos:line="25" pos:column="31"/></operator> <name pos:line="25" pos:column="32">OCONFIG_TYPE_BOOLEAN<pos:position pos:line="25" pos:column="52"/></name><operator pos:line="25" pos:column="52">)<pos:position pos:line="25" pos:column="53"/></operator></expr>
        ?<pos:position pos:line="26" pos:column="10"/></condition><then pos:line="26" pos:column="10"> <expr><literal type="string" pos:line="26" pos:column="11">"truth value"<pos:position pos:line="26" pos:column="24"/></literal></expr> <pos:position pos:line="26" pos:column="25"/></then><else pos:line="26" pos:column="25">: <expr><literal type="string" pos:line="26" pos:column="27">"number"<pos:position pos:line="26" pos:column="35"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="26" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="37"/></expr_stmt>
    <return pos:line="27" pos:column="5">return <expr><operator pos:line="27" pos:column="12">(<pos:position pos:line="27" pos:column="13"/></operator><operator pos:line="27" pos:column="13">-<pos:position pos:line="27" pos:column="14"/></operator><literal type="number" pos:line="27" pos:column="14">1<pos:position pos:line="27" pos:column="15"/></literal><operator pos:line="27" pos:column="15">)<pos:position pos:line="27" pos:column="16"/></operator></expr>;<pos:position pos:line="27" pos:column="17"/></return>
  }<pos:position pos:line="28" pos:column="4"/></block></for>

  <comment type="block" pos:line="30" pos:column="3">/* Allocate space for the char pointers */</comment>
  <expr_stmt><expr><name pos:line="31" pos:column="3">new_data_sources_num<pos:position pos:line="31" pos:column="23"/></name> <operator pos:line="31" pos:column="24">=<pos:position pos:line="31" pos:column="25"/></operator> <name><name pos:line="31" pos:column="26">m<pos:position pos:line="31" pos:column="27"/></name><operator pos:line="31" pos:column="27">-&gt;<pos:position pos:line="31" pos:column="32"/></operator><name pos:line="31" pos:column="29">data_sources_num<pos:position pos:line="31" pos:column="45"/></name></name> <operator pos:line="31" pos:column="46">+<pos:position pos:line="31" pos:column="47"/></operator> <operator pos:line="31" pos:column="48">(<pos:position pos:line="31" pos:column="49"/></operator><operator pos:line="31" pos:column="49">(<pos:position pos:line="31" pos:column="50"/></operator><name pos:line="31" pos:column="50">size_t<pos:position pos:line="31" pos:column="56"/></name><operator pos:line="31" pos:column="56">)<pos:position pos:line="31" pos:column="57"/></operator> <name><name pos:line="31" pos:column="58">ci<pos:position pos:line="31" pos:column="60"/></name><operator pos:line="31" pos:column="60">-&gt;<pos:position pos:line="31" pos:column="65"/></operator><name pos:line="31" pos:column="62">values_num<pos:position pos:line="31" pos:column="72"/></name></name><operator pos:line="31" pos:column="72">)<pos:position pos:line="31" pos:column="73"/></operator></expr>;<pos:position pos:line="31" pos:column="74"/></expr_stmt>
  <expr_stmt><expr><name pos:line="32" pos:column="3">temp<pos:position pos:line="32" pos:column="7"/></name> <operator pos:line="32" pos:column="8">=<pos:position pos:line="32" pos:column="9"/></operator> <operator pos:line="32" pos:column="10">(<pos:position pos:line="32" pos:column="11"/></operator><name pos:line="32" pos:column="11">char<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">*<pos:position pos:line="32" pos:column="17"/></operator><operator pos:line="32" pos:column="17">*<pos:position pos:line="32" pos:column="18"/></operator><operator pos:line="32" pos:column="18">)<pos:position pos:line="32" pos:column="19"/></operator> <call><name pos:line="32" pos:column="20">realloc<pos:position pos:line="32" pos:column="27"/></name> <argument_list pos:line="32" pos:column="28">(<argument><expr><name><name pos:line="32" pos:column="29">m<pos:position pos:line="32" pos:column="30"/></name><operator pos:line="32" pos:column="30">-&gt;<pos:position pos:line="32" pos:column="35"/></operator><name pos:line="32" pos:column="32">data_sources<pos:position pos:line="32" pos:column="44"/></name></name></expr></argument>,
      <argument><expr><name pos:line="33" pos:column="7">new_data_sources_num<pos:position pos:line="33" pos:column="27"/></name> <operator pos:line="33" pos:column="28">*<pos:position pos:line="33" pos:column="29"/></operator> <sizeof pos:line="33" pos:column="30">sizeof <argument_list pos:line="33" pos:column="37">(<argument><expr><name pos:line="33" pos:column="38">char<pos:position pos:line="33" pos:column="42"/></name> <operator pos:line="33" pos:column="43">*<pos:position pos:line="33" pos:column="44"/></operator></expr></argument>)<pos:position pos:line="33" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="33" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="47"/></expr_stmt>
  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><name pos:line="34" pos:column="7">temp<pos:position pos:line="34" pos:column="11"/></name> <operator pos:line="34" pos:column="12">==<pos:position pos:line="34" pos:column="14"/></operator> <name pos:line="34" pos:column="15">NULL<pos:position pos:line="34" pos:column="19"/></name></expr>)<pos:position pos:line="34" pos:column="20"/></condition><then pos:line="34" pos:column="20">
  <block pos:line="35" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">ERROR<pos:position pos:line="36" pos:column="10"/></name> <argument_list pos:line="36" pos:column="11">(<argument><expr><literal type="string" pos:line="36" pos:column="12">"`value' match: realloc failed."<pos:position pos:line="36" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="46"/></expr_stmt>
    <return pos:line="37" pos:column="5">return <expr><operator pos:line="37" pos:column="12">(<pos:position pos:line="37" pos:column="13"/></operator><operator pos:line="37" pos:column="13">-<pos:position pos:line="37" pos:column="14"/></operator><literal type="number" pos:line="37" pos:column="14">1<pos:position pos:line="37" pos:column="15"/></literal><operator pos:line="37" pos:column="15">)<pos:position pos:line="37" pos:column="16"/></operator></expr>;<pos:position pos:line="37" pos:column="17"/></return>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="39" pos:column="3">m<pos:position pos:line="39" pos:column="4"/></name><operator pos:line="39" pos:column="4">-&gt;<pos:position pos:line="39" pos:column="9"/></operator><name pos:line="39" pos:column="6">data_sources<pos:position pos:line="39" pos:column="18"/></name></name> <operator pos:line="39" pos:column="19">=<pos:position pos:line="39" pos:column="20"/></operator> <name pos:line="39" pos:column="21">temp<pos:position pos:line="39" pos:column="25"/></name></expr>;<pos:position pos:line="39" pos:column="26"/></expr_stmt>

  <comment type="block" pos:line="41" pos:column="3">/* Copy the strings, allocating memory as needed. */</comment>
  <for pos:line="42" pos:column="3">for <control pos:line="42" pos:column="7">(<init><expr><name pos:line="42" pos:column="8">i<pos:position pos:line="42" pos:column="9"/></name> <operator pos:line="42" pos:column="10">=<pos:position pos:line="42" pos:column="11"/></operator> <literal type="number" pos:line="42" pos:column="12">0<pos:position pos:line="42" pos:column="13"/></literal></expr>;<pos:position pos:line="42" pos:column="14"/></init> <condition><expr><name pos:line="42" pos:column="15">i<pos:position pos:line="42" pos:column="16"/></name> <operator pos:line="42" pos:column="17">&lt;<pos:position pos:line="42" pos:column="21"/></operator> <name><name pos:line="42" pos:column="19">ci<pos:position pos:line="42" pos:column="21"/></name><operator pos:line="42" pos:column="21">-&gt;<pos:position pos:line="42" pos:column="26"/></operator><name pos:line="42" pos:column="23">values_num<pos:position pos:line="42" pos:column="33"/></name></name></expr>;<pos:position pos:line="42" pos:column="34"/></condition> <incr><expr><name pos:line="42" pos:column="35">i<pos:position pos:line="42" pos:column="36"/></name><operator pos:line="42" pos:column="36">++<pos:position pos:line="42" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="42" pos:column="39"/></control>
  <block pos:line="43" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="44" pos:column="5">size_t<pos:position pos:line="44" pos:column="11"/></name></type> <name pos:line="44" pos:column="12">j<pos:position pos:line="44" pos:column="13"/></name></decl>;<pos:position pos:line="44" pos:column="14"/></decl_stmt>

    <comment type="block" pos:line="46" pos:column="5">/* If we get here, there better be memory for us to write to. */</comment>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">assert<pos:position pos:line="47" pos:column="11"/></name> <argument_list pos:line="47" pos:column="12">(<argument><expr><name><name pos:line="47" pos:column="13">m<pos:position pos:line="47" pos:column="14"/></name><operator pos:line="47" pos:column="14">-&gt;<pos:position pos:line="47" pos:column="19"/></operator><name pos:line="47" pos:column="16">data_sources_num<pos:position pos:line="47" pos:column="32"/></name></name> <operator pos:line="47" pos:column="33">&lt;<pos:position pos:line="47" pos:column="37"/></operator> <name pos:line="47" pos:column="35">new_data_sources_num<pos:position pos:line="47" pos:column="55"/></name></expr></argument>)<pos:position pos:line="47" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="57"/></expr_stmt>

    <expr_stmt><expr><name pos:line="49" pos:column="5">j<pos:position pos:line="49" pos:column="6"/></name> <operator pos:line="49" pos:column="7">=<pos:position pos:line="49" pos:column="8"/></operator> <name><name pos:line="49" pos:column="9">m<pos:position pos:line="49" pos:column="10"/></name><operator pos:line="49" pos:column="10">-&gt;<pos:position pos:line="49" pos:column="15"/></operator><name pos:line="49" pos:column="12">data_sources_num<pos:position pos:line="49" pos:column="28"/></name></name></expr>;<pos:position pos:line="49" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="50" pos:column="5">m<pos:position pos:line="50" pos:column="6"/></name><operator pos:line="50" pos:column="6">-&gt;<pos:position pos:line="50" pos:column="11"/></operator><name pos:line="50" pos:column="8">data_sources<pos:position pos:line="50" pos:column="20"/></name><index pos:line="50" pos:column="20">[<expr><name pos:line="50" pos:column="21">j<pos:position pos:line="50" pos:column="22"/></name></expr>]<pos:position pos:line="50" pos:column="23"/></index></name> <operator pos:line="50" pos:column="24">=<pos:position pos:line="50" pos:column="25"/></operator> <call><name pos:line="50" pos:column="26">sstrdup<pos:position pos:line="50" pos:column="33"/></name> <argument_list pos:line="50" pos:column="34">(<argument><expr><name><name pos:line="50" pos:column="35">ci<pos:position pos:line="50" pos:column="37"/></name><operator pos:line="50" pos:column="37">-&gt;<pos:position pos:line="50" pos:column="42"/></operator><name pos:line="50" pos:column="39">values<pos:position pos:line="50" pos:column="45"/></name><index pos:line="50" pos:column="45">[<expr><name pos:line="50" pos:column="46">i<pos:position pos:line="50" pos:column="47"/></name></expr>]<pos:position pos:line="50" pos:column="48"/></index></name><operator pos:line="50" pos:column="48">.<pos:position pos:line="50" pos:column="49"/></operator><name><name pos:line="50" pos:column="49">value<pos:position pos:line="50" pos:column="54"/></name><operator pos:line="50" pos:column="54">.<pos:position pos:line="50" pos:column="55"/></operator><name pos:line="50" pos:column="55">string<pos:position pos:line="50" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="63"/></expr_stmt>
    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><name><name pos:line="51" pos:column="9">m<pos:position pos:line="51" pos:column="10"/></name><operator pos:line="51" pos:column="10">-&gt;<pos:position pos:line="51" pos:column="15"/></operator><name pos:line="51" pos:column="12">data_sources<pos:position pos:line="51" pos:column="24"/></name><index pos:line="51" pos:column="24">[<expr><name pos:line="51" pos:column="25">j<pos:position pos:line="51" pos:column="26"/></name></expr>]<pos:position pos:line="51" pos:column="27"/></index></name> <operator pos:line="51" pos:column="28">==<pos:position pos:line="51" pos:column="30"/></operator> <name pos:line="51" pos:column="31">NULL<pos:position pos:line="51" pos:column="35"/></name></expr>)<pos:position pos:line="51" pos:column="36"/></condition><then pos:line="51" pos:column="36">
    <block pos:line="52" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="53" pos:column="7">ERROR<pos:position pos:line="53" pos:column="12"/></name> <argument_list pos:line="53" pos:column="13">(<argument><expr><literal type="string" pos:line="53" pos:column="14">"`value' match: sstrdup failed."<pos:position pos:line="53" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="48"/></expr_stmt>
      <continue pos:line="54" pos:column="7">continue;<pos:position pos:line="54" pos:column="16"/></continue>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="56" pos:column="5">m<pos:position pos:line="56" pos:column="6"/></name><operator pos:line="56" pos:column="6">-&gt;<pos:position pos:line="56" pos:column="11"/></operator><name pos:line="56" pos:column="8">data_sources_num<pos:position pos:line="56" pos:column="24"/></name></name><operator pos:line="56" pos:column="24">++<pos:position pos:line="56" pos:column="26"/></operator></expr>;<pos:position pos:line="56" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="57" pos:column="4"/></block></for>

  <return pos:line="59" pos:column="3">return <expr><operator pos:line="59" pos:column="10">(<pos:position pos:line="59" pos:column="11"/></operator><literal type="number" pos:line="59" pos:column="11">0<pos:position pos:line="59" pos:column="12"/></literal><operator pos:line="59" pos:column="12">)<pos:position pos:line="59" pos:column="13"/></operator></expr>;<pos:position pos:line="59" pos:column="14"/></return>
}<pos:position pos:line="60" pos:column="2"/></block></function></unit>

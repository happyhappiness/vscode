<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_584_collectd-5.7.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">cmd_error<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><name pos:line="1" pos:column="16">cmd_status_t<pos:position pos:line="1" pos:column="28"/></name></type> <name pos:line="1" pos:column="29">status<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">cmd_error_handler_t<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">err<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
               <parameter><decl><type><specifier pos:line="2" pos:column="16">const<pos:position pos:line="2" pos:column="21"/></specifier> <name pos:line="2" pos:column="22">char<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type><name pos:line="2" pos:column="28">format<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><modifier pos:line="2" pos:column="36">...<pos:position pos:line="2" pos:column="39"/></modifier></type></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list> <block pos:line="2" pos:column="41">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">va_list<pos:position pos:line="3" pos:column="10"/></name></type> <name pos:line="3" pos:column="11">ap<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><operator pos:line="5" pos:column="7">(<pos:position pos:line="5" pos:column="8"/></operator><name pos:line="5" pos:column="8">err<pos:position pos:line="5" pos:column="11"/></name> <operator pos:line="5" pos:column="12">==<pos:position pos:line="5" pos:column="14"/></operator> <name pos:line="5" pos:column="15">NULL<pos:position pos:line="5" pos:column="19"/></name><operator pos:line="5" pos:column="19">)<pos:position pos:line="5" pos:column="20"/></operator> <operator pos:line="5" pos:column="21">||<pos:position pos:line="5" pos:column="23"/></operator> <operator pos:line="5" pos:column="24">(<pos:position pos:line="5" pos:column="25"/></operator><name><name pos:line="5" pos:column="25">err<pos:position pos:line="5" pos:column="28"/></name><operator pos:line="5" pos:column="28">-&gt;<pos:position pos:line="5" pos:column="33"/></operator><name pos:line="5" pos:column="30">cb<pos:position pos:line="5" pos:column="32"/></name></name> <operator pos:line="5" pos:column="33">==<pos:position pos:line="5" pos:column="35"/></operator> <name pos:line="5" pos:column="36">NULL<pos:position pos:line="5" pos:column="40"/></name><operator pos:line="5" pos:column="40">)<pos:position pos:line="5" pos:column="41"/></operator></expr>)<pos:position pos:line="5" pos:column="42"/></condition><then pos:line="5" pos:column="42">
    <block type="pseudo"><return pos:line="6" pos:column="5">return;<pos:position pos:line="6" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">va_start<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><name pos:line="8" pos:column="12">ap<pos:position pos:line="8" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="16">format<pos:position pos:line="8" pos:column="22"/></name></expr></argument>)<pos:position pos:line="8" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><call><name><name pos:line="9" pos:column="3">err<pos:position pos:line="9" pos:column="6"/></name><operator pos:line="9" pos:column="6">-&gt;<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="8">cb<pos:position pos:line="9" pos:column="10"/></name></name><argument_list pos:line="9" pos:column="10">(<argument><expr><name><name pos:line="9" pos:column="11">err<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">-&gt;<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="16">ud<pos:position pos:line="9" pos:column="18"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="20">status<pos:position pos:line="9" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="28">format<pos:position pos:line="9" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="36">ap<pos:position pos:line="9" pos:column="38"/></name></expr></argument>)<pos:position pos:line="9" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">va_end<pos:position pos:line="10" pos:column="9"/></name><argument_list pos:line="10" pos:column="9">(<argument><expr><name pos:line="10" pos:column="10">ap<pos:position pos:line="10" pos:column="12"/></name></expr></argument>)<pos:position pos:line="10" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="14"/></expr_stmt>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

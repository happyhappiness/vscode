<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2356_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">get_ti<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name><name pos:line="1" pos:column="19">struct<pos:position pos:line="1" pos:column="25"/></name> <name pos:line="1" pos:column="26">ip_vs_dest_entry<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">de<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">ti<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">size_t<pos:position pos:line="1" pos:column="64"/></name></type> <name pos:line="1" pos:column="65">size<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list> <block pos:line="1" pos:column="71">{
  <if pos:line="2" pos:column="3">if <condition pos:line="2" pos:column="6">(<expr><operator pos:line="2" pos:column="7">(<pos:position pos:line="2" pos:column="8"/></operator><name pos:line="2" pos:column="8">de<pos:position pos:line="2" pos:column="10"/></name> <operator pos:line="2" pos:column="11">==<pos:position pos:line="2" pos:column="13"/></operator> <name pos:line="2" pos:column="14">NULL<pos:position pos:line="2" pos:column="18"/></name><operator pos:line="2" pos:column="18">)<pos:position pos:line="2" pos:column="19"/></operator> <operator pos:line="2" pos:column="20">||<pos:position pos:line="2" pos:column="22"/></operator> <operator pos:line="2" pos:column="23">(<pos:position pos:line="2" pos:column="24"/></operator><name pos:line="2" pos:column="24">ti<pos:position pos:line="2" pos:column="26"/></name> <operator pos:line="2" pos:column="27">==<pos:position pos:line="2" pos:column="29"/></operator> <name pos:line="2" pos:column="30">NULL<pos:position pos:line="2" pos:column="34"/></name><operator pos:line="2" pos:column="34">)<pos:position pos:line="2" pos:column="35"/></operator></expr>)<pos:position pos:line="2" pos:column="36"/></condition><then pos:line="2" pos:column="36">
    <block type="pseudo"><return pos:line="3" pos:column="5">return <expr><literal type="number" pos:line="3" pos:column="12">0<pos:position pos:line="3" pos:column="13"/></literal></expr>;<pos:position pos:line="3" pos:column="14"/></return></block></then></if>

  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">in_addr<pos:position pos:line="5" pos:column="17"/></name></name></type> <name pos:line="5" pos:column="18">addr<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><block pos:line="5" pos:column="25">{<expr><operator pos:line="5" pos:column="26">.<pos:position pos:line="5" pos:column="27"/></operator><name pos:line="5" pos:column="27">s_addr<pos:position pos:line="5" pos:column="33"/></name> <operator pos:line="5" pos:column="34">=<pos:position pos:line="5" pos:column="35"/></operator> <name><name pos:line="5" pos:column="36">de<pos:position pos:line="5" pos:column="38"/></name><operator pos:line="5" pos:column="38">-&gt;<pos:position pos:line="5" pos:column="43"/></operator><name pos:line="5" pos:column="40">addr<pos:position pos:line="5" pos:column="44"/></name></name></expr>}<pos:position pos:line="5" pos:column="45"/></block></expr></init></decl>;<pos:position pos:line="5" pos:column="46"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">len<pos:position pos:line="7" pos:column="10"/></name> <init pos:line="7" pos:column="11">= <expr><call><name pos:line="7" pos:column="13">snprintf<pos:position pos:line="7" pos:column="21"/></name><argument_list pos:line="7" pos:column="21">(<argument><expr><name pos:line="7" pos:column="22">ti<pos:position pos:line="7" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="26">size<pos:position pos:line="7" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="32">"%s_%u"<pos:position pos:line="7" pos:column="39"/></literal></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="41">inet_ntoa<pos:position pos:line="7" pos:column="50"/></name><argument_list pos:line="7" pos:column="50">(<argument><expr><name pos:line="7" pos:column="51">addr<pos:position pos:line="7" pos:column="55"/></name></expr></argument>)<pos:position pos:line="7" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="58">ntohs<pos:position pos:line="7" pos:column="63"/></name><argument_list pos:line="7" pos:column="63">(<argument><expr><name><name pos:line="7" pos:column="64">de<pos:position pos:line="7" pos:column="66"/></name><operator pos:line="7" pos:column="66">-&gt;<pos:position pos:line="7" pos:column="71"/></operator><name pos:line="7" pos:column="68">port<pos:position pos:line="7" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="75"/></decl_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">(<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">len<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">&lt;<pos:position pos:line="9" pos:column="16"/></operator> <literal type="number" pos:line="9" pos:column="14">0<pos:position pos:line="9" pos:column="15"/></literal><operator pos:line="9" pos:column="15">)<pos:position pos:line="9" pos:column="16"/></operator> <operator pos:line="9" pos:column="17">||<pos:position pos:line="9" pos:column="19"/></operator> <operator pos:line="9" pos:column="20">(<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="21">size<pos:position pos:line="9" pos:column="25"/></name> <operator pos:line="9" pos:column="26">&lt;=<pos:position pos:line="9" pos:column="31"/></operator> <operator pos:line="9" pos:column="29">(<pos:position pos:line="9" pos:column="30"/></operator><operator pos:line="9" pos:column="30">(<pos:position pos:line="9" pos:column="31"/></operator><name pos:line="9" pos:column="31">size_t<pos:position pos:line="9" pos:column="37"/></name><operator pos:line="9" pos:column="37">)<pos:position pos:line="9" pos:column="38"/></operator><name pos:line="9" pos:column="38">len<pos:position pos:line="9" pos:column="41"/></name><operator pos:line="9" pos:column="41">)<pos:position pos:line="9" pos:column="42"/></operator><operator pos:line="9" pos:column="42">)<pos:position pos:line="9" pos:column="43"/></operator></expr>)<pos:position pos:line="9" pos:column="44"/></condition><then pos:line="9" pos:column="44"> <block pos:line="9" pos:column="45">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">log_err<pos:position pos:line="10" pos:column="12"/></name><argument_list pos:line="10" pos:column="12">(<argument><expr><literal type="string" pos:line="10" pos:column="13">"type instance truncated: %s"<pos:position pos:line="10" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="44">ti<pos:position pos:line="10" pos:column="46"/></name></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="48"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">-<pos:position pos:line="11" pos:column="13"/></operator><literal type="number" pos:line="11" pos:column="13">1<pos:position pos:line="11" pos:column="14"/></literal></expr>;<pos:position pos:line="11" pos:column="15"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>
  <return pos:line="13" pos:column="3">return <expr><literal type="number" pos:line="13" pos:column="10">0<pos:position pos:line="13" pos:column="11"/></literal></expr>;<pos:position pos:line="13" pos:column="12"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

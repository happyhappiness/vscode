<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1596_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">json_escape_string<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">buffer<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">size_t<pos:position pos:line="1" pos:column="51"/></name></type> <name pos:line="1" pos:column="52">buffer_size<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="65">/* {{{ */</comment>
                              <parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name pos:line="2" pos:column="37">char<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">string<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list> <block pos:line="2" pos:column="51">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">dst_pos<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><operator pos:line="5" pos:column="7">(<pos:position pos:line="5" pos:column="8"/></operator><name pos:line="5" pos:column="8">buffer<pos:position pos:line="5" pos:column="14"/></name> <operator pos:line="5" pos:column="15">==<pos:position pos:line="5" pos:column="17"/></operator> <name pos:line="5" pos:column="18">NULL<pos:position pos:line="5" pos:column="22"/></name><operator pos:line="5" pos:column="22">)<pos:position pos:line="5" pos:column="23"/></operator> <operator pos:line="5" pos:column="24">||<pos:position pos:line="5" pos:column="26"/></operator> <operator pos:line="5" pos:column="27">(<pos:position pos:line="5" pos:column="28"/></operator><name pos:line="5" pos:column="28">string<pos:position pos:line="5" pos:column="34"/></name> <operator pos:line="5" pos:column="35">==<pos:position pos:line="5" pos:column="37"/></operator> <name pos:line="5" pos:column="38">NULL<pos:position pos:line="5" pos:column="42"/></name><operator pos:line="5" pos:column="42">)<pos:position pos:line="5" pos:column="43"/></operator></expr>)<pos:position pos:line="5" pos:column="44"/></condition><then pos:line="5" pos:column="44">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><operator pos:line="6" pos:column="12">(<pos:position pos:line="6" pos:column="13"/></operator><operator pos:line="6" pos:column="13">-<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">EINVAL<pos:position pos:line="6" pos:column="20"/></name><operator pos:line="6" pos:column="20">)<pos:position pos:line="6" pos:column="21"/></operator></expr>;<pos:position pos:line="6" pos:column="22"/></return></block></then></if>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">buffer_size<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">&lt;<pos:position pos:line="8" pos:column="23"/></operator> <literal type="number" pos:line="8" pos:column="21">3<pos:position pos:line="8" pos:column="22"/></literal></expr>)<pos:position pos:line="8" pos:column="23"/></condition><then pos:line="8" pos:column="23">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><operator pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></operator><operator pos:line="9" pos:column="13">-<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">ENOMEM<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">)<pos:position pos:line="9" pos:column="21"/></operator></expr>;<pos:position pos:line="9" pos:column="22"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="11" pos:column="3">dst_pos<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">=<pos:position pos:line="11" pos:column="12"/></operator> <literal type="number" pos:line="11" pos:column="13">0<pos:position pos:line="11" pos:column="14"/></literal></expr>;<pos:position pos:line="11" pos:column="15"/></expr_stmt>

<cpp:define pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">define<pos:position pos:line="13" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="13" pos:column="9">BUFFER_ADD<pos:position pos:line="13" pos:column="19"/></name><parameter_list pos:line="13" pos:column="19">(<parameter><type><name pos:line="13" pos:column="20">c<pos:position pos:line="13" pos:column="21"/></name></type></parameter>)<pos:position pos:line="13" pos:column="22"/></parameter_list></cpp:macro>                                                          \
  <cpp:value pos:line="14" pos:column="3">do {                                                                         \
    if (dst_pos &gt;= (buffer_size - 1)) {                                        \
      buffer[buffer_size - 1] = 0;                                             \
      return (-ENOMEM);                                                        \
    }                                                                          \
    buffer[dst_pos] = (c);                                                     \
    dst_pos++;                                                                 \
  } while (0)<pos:position pos:line="21" pos:column="14"/></cpp:value></cpp:define>

  <comment type="block" pos:line="23" pos:column="3">/* Escape special characters */</comment>
  <expr_stmt><expr><call><name pos:line="24" pos:column="3">BUFFER_ADD<pos:position pos:line="24" pos:column="13"/></name><argument_list pos:line="24" pos:column="13">(<argument><expr><literal type="char" pos:line="24" pos:column="14">'"'<pos:position pos:line="24" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="19"/></expr_stmt>
  <for pos:line="25" pos:column="3">for <control pos:line="25" pos:column="7">(<init><decl><type><name pos:line="25" pos:column="8">size_t<pos:position pos:line="25" pos:column="14"/></name></type> <name pos:line="25" pos:column="15">src_pos<pos:position pos:line="25" pos:column="22"/></name> <init pos:line="25" pos:column="23">= <expr><literal type="number" pos:line="25" pos:column="25">0<pos:position pos:line="25" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="25" pos:column="27"/></init> <condition><expr><name><name pos:line="25" pos:column="28">string<pos:position pos:line="25" pos:column="34"/></name><index pos:line="25" pos:column="34">[<expr><name pos:line="25" pos:column="35">src_pos<pos:position pos:line="25" pos:column="42"/></name></expr>]<pos:position pos:line="25" pos:column="43"/></index></name> <operator pos:line="25" pos:column="44">!=<pos:position pos:line="25" pos:column="46"/></operator> <literal type="number" pos:line="25" pos:column="47">0<pos:position pos:line="25" pos:column="48"/></literal></expr>;<pos:position pos:line="25" pos:column="49"/></condition> <incr><expr><name pos:line="25" pos:column="50">src_pos<pos:position pos:line="25" pos:column="57"/></name><operator pos:line="25" pos:column="57">++<pos:position pos:line="25" pos:column="59"/></operator></expr></incr>)<pos:position pos:line="25" pos:column="60"/></control> <block pos:line="25" pos:column="61">{
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><operator pos:line="26" pos:column="9">(<pos:position pos:line="26" pos:column="10"/></operator><name><name pos:line="26" pos:column="10">string<pos:position pos:line="26" pos:column="16"/></name><index pos:line="26" pos:column="16">[<expr><name pos:line="26" pos:column="17">src_pos<pos:position pos:line="26" pos:column="24"/></name></expr>]<pos:position pos:line="26" pos:column="25"/></index></name> <operator pos:line="26" pos:column="26">==<pos:position pos:line="26" pos:column="28"/></operator> <literal type="char" pos:line="26" pos:column="29">'"'<pos:position pos:line="26" pos:column="32"/></literal><operator pos:line="26" pos:column="32">)<pos:position pos:line="26" pos:column="33"/></operator> <operator pos:line="26" pos:column="34">||<pos:position pos:line="26" pos:column="36"/></operator> <operator pos:line="26" pos:column="37">(<pos:position pos:line="26" pos:column="38"/></operator><name><name pos:line="26" pos:column="38">string<pos:position pos:line="26" pos:column="44"/></name><index pos:line="26" pos:column="44">[<expr><name pos:line="26" pos:column="45">src_pos<pos:position pos:line="26" pos:column="52"/></name></expr>]<pos:position pos:line="26" pos:column="53"/></index></name> <operator pos:line="26" pos:column="54">==<pos:position pos:line="26" pos:column="56"/></operator> <literal type="char" pos:line="26" pos:column="57">'\\'<pos:position pos:line="26" pos:column="61"/></literal><operator pos:line="26" pos:column="61">)<pos:position pos:line="26" pos:column="62"/></operator></expr>)<pos:position pos:line="26" pos:column="63"/></condition><then pos:line="26" pos:column="63"> <block pos:line="26" pos:column="64">{
      <expr_stmt><expr><call><name pos:line="27" pos:column="7">BUFFER_ADD<pos:position pos:line="27" pos:column="17"/></name><argument_list pos:line="27" pos:column="17">(<argument><expr><literal type="char" pos:line="27" pos:column="18">'\\'<pos:position pos:line="27" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="28" pos:column="7">BUFFER_ADD<pos:position pos:line="28" pos:column="17"/></name><argument_list pos:line="28" pos:column="17">(<argument><expr><name><name pos:line="28" pos:column="18">string<pos:position pos:line="28" pos:column="24"/></name><index pos:line="28" pos:column="24">[<expr><name pos:line="28" pos:column="25">src_pos<pos:position pos:line="28" pos:column="32"/></name></expr>]<pos:position pos:line="28" pos:column="33"/></index></name></expr></argument>)<pos:position pos:line="28" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></then> <elseif pos:line="29" pos:column="7">else <if pos:line="29" pos:column="12">if <condition pos:line="29" pos:column="15">(<expr><name><name pos:line="29" pos:column="16">string<pos:position pos:line="29" pos:column="22"/></name><index pos:line="29" pos:column="22">[<expr><name pos:line="29" pos:column="23">src_pos<pos:position pos:line="29" pos:column="30"/></name></expr>]<pos:position pos:line="29" pos:column="31"/></index></name> <operator pos:line="29" pos:column="32">&lt;=<pos:position pos:line="29" pos:column="37"/></operator> <literal type="number" pos:line="29" pos:column="35">0x001F<pos:position pos:line="29" pos:column="41"/></literal></expr>)<pos:position pos:line="29" pos:column="42"/></condition><then pos:line="29" pos:column="42">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="7">BUFFER_ADD<pos:position pos:line="30" pos:column="17"/></name><argument_list pos:line="30" pos:column="17">(<argument><expr><literal type="char" pos:line="30" pos:column="18">'?'<pos:position pos:line="30" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="23"/></expr_stmt></block></then></if></elseif>
    <else pos:line="31" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="7">BUFFER_ADD<pos:position pos:line="32" pos:column="17"/></name><argument_list pos:line="32" pos:column="17">(<argument><expr><name><name pos:line="32" pos:column="18">string<pos:position pos:line="32" pos:column="24"/></name><index pos:line="32" pos:column="24">[<expr><name pos:line="32" pos:column="25">src_pos<pos:position pos:line="32" pos:column="32"/></name></expr>]<pos:position pos:line="32" pos:column="33"/></index></name></expr></argument>)<pos:position pos:line="32" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="35"/></expr_stmt></block></else></if>
  }<pos:position pos:line="33" pos:column="4"/></block></for> <comment type="block" pos:line="33" pos:column="5">/* for */</comment>
  <expr_stmt><expr><call><name pos:line="34" pos:column="3">BUFFER_ADD<pos:position pos:line="34" pos:column="13"/></name><argument_list pos:line="34" pos:column="13">(<argument><expr><literal type="char" pos:line="34" pos:column="14">'"'<pos:position pos:line="34" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="35" pos:column="3">buffer<pos:position pos:line="35" pos:column="9"/></name><index pos:line="35" pos:column="9">[<expr><name pos:line="35" pos:column="10">dst_pos<pos:position pos:line="35" pos:column="17"/></name></expr>]<pos:position pos:line="35" pos:column="18"/></index></name> <operator pos:line="35" pos:column="19">=<pos:position pos:line="35" pos:column="20"/></operator> <literal type="number" pos:line="35" pos:column="21">0<pos:position pos:line="35" pos:column="22"/></literal></expr>;<pos:position pos:line="35" pos:column="23"/></expr_stmt>

<cpp:undef pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">undef<pos:position pos:line="37" pos:column="7"/></cpp:directive> <name pos:line="37" pos:column="8">BUFFER_ADD<pos:position pos:line="37" pos:column="18"/></name></cpp:undef>

  <return pos:line="39" pos:column="3">return <expr><operator pos:line="39" pos:column="10">(<pos:position pos:line="39" pos:column="11"/></operator><literal type="number" pos:line="39" pos:column="11">0<pos:position pos:line="39" pos:column="12"/></literal><operator pos:line="39" pos:column="12">)<pos:position pos:line="39" pos:column="13"/></operator></expr>;<pos:position pos:line="39" pos:column="14"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

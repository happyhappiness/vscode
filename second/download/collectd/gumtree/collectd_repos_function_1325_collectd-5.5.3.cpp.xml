<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1325_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">get_label_uuid<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><specifier pos:line="2" pos:column="16">const<pos:position pos:line="2" pos:column="21"/></specifier> <name pos:line="2" pos:column="22">char<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type><name pos:line="2" pos:column="28">device<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="36">char<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier><modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">label<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="50">char<pos:position pos:line="2" pos:column="54"/></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="56">uuid<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<comment type="block" pos:line="4" pos:column="9">/* start with ext2 and xfs tests, taken from mount_guess_fstype */</comment>
	<comment type="block" pos:line="5" pos:column="9">/* should merge these later */</comment>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">fd<pos:position pos:line="6" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="17">rv<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><literal type="number" pos:line="6" pos:column="22">1<pos:position pos:line="6" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">size_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">namesize<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">ext2_super_block<pos:position pos:line="8" pos:column="32"/></name></name></type> <name pos:line="8" pos:column="33">e2sb<pos:position pos:line="8" pos:column="37"/></name></decl>;<pos:position pos:line="8" pos:column="38"/></decl_stmt>
<cpp:if pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">if<pos:position pos:line="9" pos:column="4"/></cpp:directive> <expr><name pos:line="9" pos:column="5">HAVE_XFS_XQM_H<pos:position pos:line="9" pos:column="19"/></name></expr></cpp:if>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">xfs_super_block<pos:position pos:line="10" pos:column="31"/></name></name></type> <name pos:line="10" pos:column="32">xfsb<pos:position pos:line="10" pos:column="36"/></name></decl>;<pos:position pos:line="10" pos:column="37"/></decl_stmt>
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif>
	<decl_stmt><decl><type><name><name pos:line="12" pos:column="9">struct<pos:position pos:line="12" pos:column="15"/></name> <name pos:line="12" pos:column="16">reiserfs_super_block<pos:position pos:line="12" pos:column="36"/></name></name></type> <name pos:line="12" pos:column="37">reisersb<pos:position pos:line="12" pos:column="45"/></name></decl>;<pos:position pos:line="12" pos:column="46"/></decl_stmt>

	<expr_stmt><expr><name pos:line="14" pos:column="9">fd<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <call><name pos:line="14" pos:column="14">open<pos:position pos:line="14" pos:column="18"/></name><argument_list pos:line="14" pos:column="18">(<argument><expr><name pos:line="14" pos:column="19">device<pos:position pos:line="14" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="27">O_RDONLY<pos:position pos:line="14" pos:column="35"/></name></expr></argument>)<pos:position pos:line="14" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="37"/></expr_stmt>
	<if pos:line="15" pos:column="9">if<condition pos:line="15" pos:column="11">(<expr><name pos:line="15" pos:column="12">fd<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">==<pos:position pos:line="15" pos:column="17"/></operator> <operator pos:line="15" pos:column="18">-<pos:position pos:line="15" pos:column="19"/></operator><literal type="number" pos:line="15" pos:column="19">1<pos:position pos:line="15" pos:column="20"/></literal></expr>)<pos:position pos:line="15" pos:column="21"/></condition><then pos:line="15" pos:column="21"> <block pos:line="15" pos:column="22">{
		<return pos:line="16" pos:column="17">return <expr><name pos:line="16" pos:column="24">rv<pos:position pos:line="16" pos:column="26"/></name></expr>;<pos:position pos:line="16" pos:column="27"/></return>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>

	<if pos:line="19" pos:column="9">if<condition pos:line="19" pos:column="11">(<expr><call><name pos:line="19" pos:column="12">lseek<pos:position pos:line="19" pos:column="17"/></name><argument_list pos:line="19" pos:column="17">(<argument><expr><name pos:line="19" pos:column="18">fd<pos:position pos:line="19" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="22">1024<pos:position pos:line="19" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="28">SEEK_SET<pos:position pos:line="19" pos:column="36"/></name></expr></argument>)<pos:position pos:line="19" pos:column="37"/></argument_list></call> <operator pos:line="19" pos:column="38">==<pos:position pos:line="19" pos:column="40"/></operator> <literal type="number" pos:line="19" pos:column="41">1024<pos:position pos:line="19" pos:column="45"/></literal>
	<operator pos:line="20" pos:column="9">&amp;&amp;<pos:position pos:line="20" pos:column="19"/></operator> <call><name pos:line="20" pos:column="12">read<pos:position pos:line="20" pos:column="16"/></name><argument_list pos:line="20" pos:column="16">(<argument><expr><name pos:line="20" pos:column="17">fd<pos:position pos:line="20" pos:column="19"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="21">(<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="22">char<pos:position pos:line="20" pos:column="26"/></name> <operator pos:line="20" pos:column="27">*<pos:position pos:line="20" pos:column="28"/></operator><operator pos:line="20" pos:column="28">)<pos:position pos:line="20" pos:column="29"/></operator><operator pos:line="20" pos:column="29">&amp;<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="30">e2sb<pos:position pos:line="20" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="36">sizeof<argument_list pos:line="20" pos:column="42">(<argument><expr><name pos:line="20" pos:column="43">e2sb<pos:position pos:line="20" pos:column="47"/></name></expr></argument>)<pos:position pos:line="20" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="49"/></argument_list></call> <operator pos:line="20" pos:column="50">==<pos:position pos:line="20" pos:column="52"/></operator> <sizeof pos:line="20" pos:column="53">sizeof<argument_list pos:line="20" pos:column="59">(<argument><expr><name pos:line="20" pos:column="60">e2sb<pos:position pos:line="20" pos:column="64"/></name></expr></argument>)<pos:position pos:line="20" pos:column="65"/></argument_list></sizeof>
	<operator pos:line="21" pos:column="9">&amp;&amp;<pos:position pos:line="21" pos:column="19"/></operator> <call><name pos:line="21" pos:column="12">ext2magic<pos:position pos:line="21" pos:column="21"/></name><argument_list pos:line="21" pos:column="21">(<argument><expr><name pos:line="21" pos:column="22">e2sb<pos:position pos:line="21" pos:column="26"/></name></expr></argument>)<pos:position pos:line="21" pos:column="27"/></argument_list></call> <operator pos:line="21" pos:column="28">==<pos:position pos:line="21" pos:column="30"/></operator> <name pos:line="21" pos:column="31">EXT2_SUPER_MAGIC<pos:position pos:line="21" pos:column="47"/></name></expr>)<pos:position pos:line="21" pos:column="48"/></condition><then pos:line="21" pos:column="48"> <block pos:line="21" pos:column="49">{
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">memcpy<pos:position pos:line="22" pos:column="23"/></name><argument_list pos:line="22" pos:column="23">(<argument><expr><name pos:line="22" pos:column="24">uuid<pos:position pos:line="22" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="30">e2sb<pos:position pos:line="22" pos:column="34"/></name><operator pos:line="22" pos:column="34">.<pos:position pos:line="22" pos:column="35"/></operator><name pos:line="22" pos:column="35">s_uuid<pos:position pos:line="22" pos:column="41"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="43">sizeof<argument_list pos:line="22" pos:column="49">(<argument><expr><name><name pos:line="22" pos:column="50">e2sb<pos:position pos:line="22" pos:column="54"/></name><operator pos:line="22" pos:column="54">.<pos:position pos:line="22" pos:column="55"/></operator><name pos:line="22" pos:column="55">s_uuid<pos:position pos:line="22" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="64"/></expr_stmt>
		<expr_stmt><expr><name pos:line="23" pos:column="17">namesize<pos:position pos:line="23" pos:column="25"/></name> <operator pos:line="23" pos:column="26">=<pos:position pos:line="23" pos:column="27"/></operator> <sizeof pos:line="23" pos:column="28">sizeof<argument_list pos:line="23" pos:column="34">(<argument><expr><name><name pos:line="23" pos:column="35">e2sb<pos:position pos:line="23" pos:column="39"/></name><operator pos:line="23" pos:column="39">.<pos:position pos:line="23" pos:column="40"/></operator><name pos:line="23" pos:column="40">s_volume_name<pos:position pos:line="23" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="54"/></argument_list></sizeof></expr>;<pos:position pos:line="23" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="24" pos:column="17">*<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="18">label<pos:position pos:line="24" pos:column="23"/></name> <operator pos:line="24" pos:column="24">=<pos:position pos:line="24" pos:column="25"/></operator> <call><name pos:line="24" pos:column="26">smalloc<pos:position pos:line="24" pos:column="33"/></name><argument_list pos:line="24" pos:column="33">(<argument><expr><name pos:line="24" pos:column="34">namesize<pos:position pos:line="24" pos:column="42"/></name> <operator pos:line="24" pos:column="43">+<pos:position pos:line="24" pos:column="44"/></operator> <literal type="number" pos:line="24" pos:column="45">1<pos:position pos:line="24" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">sstrncpy<pos:position pos:line="25" pos:column="25"/></name><argument_list pos:line="25" pos:column="25">(<argument><expr><operator pos:line="25" pos:column="26">*<pos:position pos:line="25" pos:column="27"/></operator><name pos:line="25" pos:column="27">label<pos:position pos:line="25" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="34">e2sb<pos:position pos:line="25" pos:column="38"/></name><operator pos:line="25" pos:column="38">.<pos:position pos:line="25" pos:column="39"/></operator><name pos:line="25" pos:column="39">s_volume_name<pos:position pos:line="25" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="54">namesize<pos:position pos:line="25" pos:column="62"/></name></expr></argument>)<pos:position pos:line="25" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="64"/></expr_stmt>
		<expr_stmt><expr><name pos:line="26" pos:column="17">rv<pos:position pos:line="26" pos:column="19"/></name> <operator pos:line="26" pos:column="20">=<pos:position pos:line="26" pos:column="21"/></operator> <literal type="number" pos:line="26" pos:column="22">0<pos:position pos:line="26" pos:column="23"/></literal></expr>;<pos:position pos:line="26" pos:column="24"/></expr_stmt>
<cpp:if pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">if<pos:position pos:line="27" pos:column="4"/></cpp:directive> <expr><name pos:line="27" pos:column="5">HAVE_XFS_XQM_H<pos:position pos:line="27" pos:column="19"/></name></expr></cpp:if>
	}<pos:position pos:line="28" pos:column="10"/></block></then> <elseif pos:line="28" pos:column="11">else <if pos:line="28" pos:column="16">if<condition pos:line="28" pos:column="18">(<expr><call><name pos:line="28" pos:column="19">lseek<pos:position pos:line="28" pos:column="24"/></name><argument_list pos:line="28" pos:column="24">(<argument><expr><name pos:line="28" pos:column="25">fd<pos:position pos:line="28" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="29">0<pos:position pos:line="28" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="32">SEEK_SET<pos:position pos:line="28" pos:column="40"/></name></expr></argument>)<pos:position pos:line="28" pos:column="41"/></argument_list></call> <operator pos:line="28" pos:column="42">==<pos:position pos:line="28" pos:column="44"/></operator> <literal type="number" pos:line="28" pos:column="45">0<pos:position pos:line="28" pos:column="46"/></literal>
	<operator pos:line="29" pos:column="9">&amp;&amp;<pos:position pos:line="29" pos:column="19"/></operator> <call><name pos:line="29" pos:column="12">read<pos:position pos:line="29" pos:column="16"/></name><argument_list pos:line="29" pos:column="16">(<argument><expr><name pos:line="29" pos:column="17">fd<pos:position pos:line="29" pos:column="19"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="21">(<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="22">char<pos:position pos:line="29" pos:column="26"/></name> <operator pos:line="29" pos:column="27">*<pos:position pos:line="29" pos:column="28"/></operator><operator pos:line="29" pos:column="28">)<pos:position pos:line="29" pos:column="29"/></operator><operator pos:line="29" pos:column="29">&amp;<pos:position pos:line="29" pos:column="34"/></operator><name pos:line="29" pos:column="30">xfsb<pos:position pos:line="29" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="36">sizeof<argument_list pos:line="29" pos:column="42">(<argument><expr><name pos:line="29" pos:column="43">xfsb<pos:position pos:line="29" pos:column="47"/></name></expr></argument>)<pos:position pos:line="29" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="49"/></argument_list></call> <operator pos:line="29" pos:column="50">==<pos:position pos:line="29" pos:column="52"/></operator> <sizeof pos:line="29" pos:column="53">sizeof<argument_list pos:line="29" pos:column="59">(<argument><expr><name pos:line="29" pos:column="60">xfsb<pos:position pos:line="29" pos:column="64"/></name></expr></argument>)<pos:position pos:line="29" pos:column="65"/></argument_list></sizeof>
	<operator pos:line="30" pos:column="9">&amp;&amp;<pos:position pos:line="30" pos:column="19"/></operator> <operator pos:line="30" pos:column="12">(<pos:position pos:line="30" pos:column="13"/></operator><call><name pos:line="30" pos:column="13">strncmp<pos:position pos:line="30" pos:column="20"/></name><argument_list pos:line="30" pos:column="20">(<argument><expr><operator pos:line="30" pos:column="21">(<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="22">char<pos:position pos:line="30" pos:column="26"/></name> <operator pos:line="30" pos:column="27">*<pos:position pos:line="30" pos:column="28"/></operator><operator pos:line="30" pos:column="28">)<pos:position pos:line="30" pos:column="29"/></operator><operator pos:line="30" pos:column="29">&amp;<pos:position pos:line="30" pos:column="34"/></operator><name><name pos:line="30" pos:column="30">xfsb<pos:position pos:line="30" pos:column="34"/></name><operator pos:line="30" pos:column="34">.<pos:position pos:line="30" pos:column="35"/></operator><name pos:line="30" pos:column="35">s_magic<pos:position pos:line="30" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="44">XFS_SUPER_MAGIC_STR<pos:position pos:line="30" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="65">4<pos:position pos:line="30" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="67"/></argument_list></call> <operator pos:line="30" pos:column="68">==<pos:position pos:line="30" pos:column="70"/></operator> <literal type="number" pos:line="30" pos:column="71">0<pos:position pos:line="30" pos:column="72"/></literal> <operator pos:line="30" pos:column="73">||<pos:position pos:line="30" pos:column="75"/></operator>
	<call><name pos:line="31" pos:column="9">strncmp<pos:position pos:line="31" pos:column="16"/></name><argument_list pos:line="31" pos:column="16">(<argument><expr><operator pos:line="31" pos:column="17">(<pos:position pos:line="31" pos:column="18"/></operator><name pos:line="31" pos:column="18">char<pos:position pos:line="31" pos:column="22"/></name> <operator pos:line="31" pos:column="23">*<pos:position pos:line="31" pos:column="24"/></operator><operator pos:line="31" pos:column="24">)<pos:position pos:line="31" pos:column="25"/></operator><operator pos:line="31" pos:column="25">&amp;<pos:position pos:line="31" pos:column="30"/></operator><name><name pos:line="31" pos:column="26">xfsb<pos:position pos:line="31" pos:column="30"/></name><operator pos:line="31" pos:column="30">.<pos:position pos:line="31" pos:column="31"/></operator><name pos:line="31" pos:column="31">s_magic<pos:position pos:line="31" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="40">XFS_SUPER_MAGIC2_STR<pos:position pos:line="31" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="62">4<pos:position pos:line="31" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="64"/></argument_list></call> <operator pos:line="31" pos:column="65">==<pos:position pos:line="31" pos:column="67"/></operator> <literal type="number" pos:line="31" pos:column="68">0<pos:position pos:line="31" pos:column="69"/></literal><operator pos:line="31" pos:column="69">)<pos:position pos:line="31" pos:column="70"/></operator></expr>)<pos:position pos:line="31" pos:column="71"/></condition><then pos:line="31" pos:column="71"> <block pos:line="31" pos:column="72">{
		<expr_stmt><expr><call><name pos:line="32" pos:column="17">memcpy<pos:position pos:line="32" pos:column="23"/></name><argument_list pos:line="32" pos:column="23">(<argument><expr><name pos:line="32" pos:column="24">uuid<pos:position pos:line="32" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="30">xfsb<pos:position pos:line="32" pos:column="34"/></name><operator pos:line="32" pos:column="34">.<pos:position pos:line="32" pos:column="35"/></operator><name pos:line="32" pos:column="35">s_uuid<pos:position pos:line="32" pos:column="41"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="32" pos:column="43">sizeof<argument_list pos:line="32" pos:column="49">(<argument><expr><name><name pos:line="32" pos:column="50">xfsb<pos:position pos:line="32" pos:column="54"/></name><operator pos:line="32" pos:column="54">.<pos:position pos:line="32" pos:column="55"/></operator><name pos:line="32" pos:column="55">s_uuid<pos:position pos:line="32" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="32" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="64"/></expr_stmt>
		<expr_stmt><expr><name pos:line="33" pos:column="17">namesize<pos:position pos:line="33" pos:column="25"/></name> <operator pos:line="33" pos:column="26">=<pos:position pos:line="33" pos:column="27"/></operator> <sizeof pos:line="33" pos:column="28">sizeof<argument_list pos:line="33" pos:column="34">(<argument><expr><name><name pos:line="33" pos:column="35">xfsb<pos:position pos:line="33" pos:column="39"/></name><operator pos:line="33" pos:column="39">.<pos:position pos:line="33" pos:column="40"/></operator><name pos:line="33" pos:column="40">s_fsname<pos:position pos:line="33" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="49"/></argument_list></sizeof></expr>;<pos:position pos:line="33" pos:column="50"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="34" pos:column="17">*<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="18">label<pos:position pos:line="34" pos:column="23"/></name> <operator pos:line="34" pos:column="24">=<pos:position pos:line="34" pos:column="25"/></operator> <call><name pos:line="34" pos:column="26">smalloc<pos:position pos:line="34" pos:column="33"/></name><argument_list pos:line="34" pos:column="33">(<argument><expr><name pos:line="34" pos:column="34">namesize<pos:position pos:line="34" pos:column="42"/></name> <operator pos:line="34" pos:column="43">+<pos:position pos:line="34" pos:column="44"/></operator> <literal type="number" pos:line="34" pos:column="45">1<pos:position pos:line="34" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="35" pos:column="17">sstrncpy<pos:position pos:line="35" pos:column="25"/></name><argument_list pos:line="35" pos:column="25">(<argument><expr><operator pos:line="35" pos:column="26">*<pos:position pos:line="35" pos:column="27"/></operator><name pos:line="35" pos:column="27">label<pos:position pos:line="35" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="34">xfsb<pos:position pos:line="35" pos:column="38"/></name><operator pos:line="35" pos:column="38">.<pos:position pos:line="35" pos:column="39"/></operator><name pos:line="35" pos:column="39">s_fsname<pos:position pos:line="35" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="49">namesize<pos:position pos:line="35" pos:column="57"/></name></expr></argument>)<pos:position pos:line="35" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><name pos:line="36" pos:column="17">rv<pos:position pos:line="36" pos:column="19"/></name> <operator pos:line="36" pos:column="20">=<pos:position pos:line="36" pos:column="21"/></operator> <literal type="number" pos:line="36" pos:column="22">0<pos:position pos:line="36" pos:column="23"/></literal></expr>;<pos:position pos:line="36" pos:column="24"/></expr_stmt>
<cpp:endif pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">endif<pos:position pos:line="37" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="37" pos:column="8">/* HAVE_XFS_XQM_H */</comment>
	}<pos:position pos:line="38" pos:column="10"/></block></then></if></elseif> <elseif pos:line="38" pos:column="11">else <if pos:line="38" pos:column="16">if<condition pos:line="38" pos:column="18">(<expr><call><name pos:line="38" pos:column="19">lseek<pos:position pos:line="38" pos:column="24"/></name><argument_list pos:line="38" pos:column="24">(<argument><expr><name pos:line="38" pos:column="25">fd<pos:position pos:line="38" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="29">65536<pos:position pos:line="38" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="36">SEEK_SET<pos:position pos:line="38" pos:column="44"/></name></expr></argument>)<pos:position pos:line="38" pos:column="45"/></argument_list></call> <operator pos:line="38" pos:column="46">==<pos:position pos:line="38" pos:column="48"/></operator> <literal type="number" pos:line="38" pos:column="49">65536<pos:position pos:line="38" pos:column="54"/></literal>
	<operator pos:line="39" pos:column="9">&amp;&amp;<pos:position pos:line="39" pos:column="19"/></operator> <call><name pos:line="39" pos:column="12">read<pos:position pos:line="39" pos:column="16"/></name><argument_list pos:line="39" pos:column="16">(<argument><expr><name pos:line="39" pos:column="17">fd<pos:position pos:line="39" pos:column="19"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="21">(<pos:position pos:line="39" pos:column="22"/></operator><name pos:line="39" pos:column="22">char<pos:position pos:line="39" pos:column="26"/></name> <operator pos:line="39" pos:column="27">*<pos:position pos:line="39" pos:column="28"/></operator><operator pos:line="39" pos:column="28">)<pos:position pos:line="39" pos:column="29"/></operator><operator pos:line="39" pos:column="29">&amp;<pos:position pos:line="39" pos:column="34"/></operator><name pos:line="39" pos:column="30">reisersb<pos:position pos:line="39" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="39" pos:column="40">sizeof<argument_list pos:line="39" pos:column="46">(<argument><expr><name pos:line="39" pos:column="47">reisersb<pos:position pos:line="39" pos:column="55"/></name></expr></argument>)<pos:position pos:line="39" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="39" pos:column="57"/></argument_list></call> <operator pos:line="39" pos:column="58">==<pos:position pos:line="39" pos:column="60"/></operator> <sizeof pos:line="39" pos:column="61">sizeof<argument_list pos:line="39" pos:column="67">(<argument><expr><name pos:line="39" pos:column="68">reisersb<pos:position pos:line="39" pos:column="76"/></name></expr></argument>)<pos:position pos:line="39" pos:column="77"/></argument_list></sizeof>
	<operator pos:line="40" pos:column="9">&amp;&amp;<pos:position pos:line="40" pos:column="19"/></operator> <operator pos:line="40" pos:column="12">!<pos:position pos:line="40" pos:column="13"/></operator><call><name pos:line="40" pos:column="13">strncmp<pos:position pos:line="40" pos:column="20"/></name><argument_list pos:line="40" pos:column="20">(<argument><expr><operator pos:line="40" pos:column="21">(<pos:position pos:line="40" pos:column="22"/></operator><name pos:line="40" pos:column="22">char<pos:position pos:line="40" pos:column="26"/></name> <operator pos:line="40" pos:column="27">*<pos:position pos:line="40" pos:column="28"/></operator><operator pos:line="40" pos:column="28">)<pos:position pos:line="40" pos:column="29"/></operator><operator pos:line="40" pos:column="29">&amp;<pos:position pos:line="40" pos:column="34"/></operator><name><name pos:line="40" pos:column="30">reisersb<pos:position pos:line="40" pos:column="38"/></name><operator pos:line="40" pos:column="38">.<pos:position pos:line="40" pos:column="39"/></operator><name pos:line="40" pos:column="39">s_magic<pos:position pos:line="40" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="48">REISER_SUPER_MAGIC<pos:position pos:line="40" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="68">9<pos:position pos:line="40" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="71"/></condition><then pos:line="40" pos:column="71"> <block pos:line="40" pos:column="72">{
		<expr_stmt><expr><call><name pos:line="41" pos:column="17">memcpy<pos:position pos:line="41" pos:column="23"/></name><argument_list pos:line="41" pos:column="23">(<argument><expr><name pos:line="41" pos:column="24">uuid<pos:position pos:line="41" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="30">reisersb<pos:position pos:line="41" pos:column="38"/></name><operator pos:line="41" pos:column="38">.<pos:position pos:line="41" pos:column="39"/></operator><name pos:line="41" pos:column="39">s_uuid<pos:position pos:line="41" pos:column="45"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="41" pos:column="47">sizeof<argument_list pos:line="41" pos:column="53">(<argument><expr><name><name pos:line="41" pos:column="54">reisersb<pos:position pos:line="41" pos:column="62"/></name><operator pos:line="41" pos:column="62">.<pos:position pos:line="41" pos:column="63"/></operator><name pos:line="41" pos:column="63">s_uuid<pos:position pos:line="41" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="41" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="72"/></expr_stmt>
		<expr_stmt><expr><name pos:line="42" pos:column="17">namesize<pos:position pos:line="42" pos:column="25"/></name> <operator pos:line="42" pos:column="26">=<pos:position pos:line="42" pos:column="27"/></operator> <sizeof pos:line="42" pos:column="28">sizeof<argument_list pos:line="42" pos:column="34">(<argument><expr><name><name pos:line="42" pos:column="35">reisersb<pos:position pos:line="42" pos:column="43"/></name><operator pos:line="42" pos:column="43">.<pos:position pos:line="42" pos:column="44"/></operator><name pos:line="42" pos:column="44">s_volume_name<pos:position pos:line="42" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="58"/></argument_list></sizeof></expr>;<pos:position pos:line="42" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="43" pos:column="17">*<pos:position pos:line="43" pos:column="18"/></operator><name pos:line="43" pos:column="18">label<pos:position pos:line="43" pos:column="23"/></name> <operator pos:line="43" pos:column="24">=<pos:position pos:line="43" pos:column="25"/></operator> <call><name pos:line="43" pos:column="26">smalloc<pos:position pos:line="43" pos:column="33"/></name><argument_list pos:line="43" pos:column="33">(<argument><expr><name pos:line="43" pos:column="34">namesize<pos:position pos:line="43" pos:column="42"/></name> <operator pos:line="43" pos:column="43">+<pos:position pos:line="43" pos:column="44"/></operator> <literal type="number" pos:line="43" pos:column="45">1<pos:position pos:line="43" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="44" pos:column="17">sstrncpy<pos:position pos:line="44" pos:column="25"/></name><argument_list pos:line="44" pos:column="25">(<argument><expr><operator pos:line="44" pos:column="26">*<pos:position pos:line="44" pos:column="27"/></operator><name pos:line="44" pos:column="27">label<pos:position pos:line="44" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="34">reisersb<pos:position pos:line="44" pos:column="42"/></name><operator pos:line="44" pos:column="42">.<pos:position pos:line="44" pos:column="43"/></operator><name pos:line="44" pos:column="43">s_volume_name<pos:position pos:line="44" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="58">namesize<pos:position pos:line="44" pos:column="66"/></name></expr></argument>)<pos:position pos:line="44" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><name pos:line="45" pos:column="17">rv<pos:position pos:line="45" pos:column="19"/></name> <operator pos:line="45" pos:column="20">=<pos:position pos:line="45" pos:column="21"/></operator> <literal type="number" pos:line="45" pos:column="22">0<pos:position pos:line="45" pos:column="23"/></literal></expr>;<pos:position pos:line="45" pos:column="24"/></expr_stmt>
	}<pos:position pos:line="46" pos:column="10"/></block></then></if></elseif></if>
	<expr_stmt><expr><call><name pos:line="47" pos:column="9">close<pos:position pos:line="47" pos:column="14"/></name><argument_list pos:line="47" pos:column="14">(<argument><expr><name pos:line="47" pos:column="15">fd<pos:position pos:line="47" pos:column="17"/></name></expr></argument>)<pos:position pos:line="47" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="19"/></expr_stmt>
	<return pos:line="48" pos:column="9">return <expr><name pos:line="48" pos:column="16">rv<pos:position pos:line="48" pos:column="18"/></name></expr>;<pos:position pos:line="48" pos:column="19"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2515_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">parse_line<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">char<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">buf<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="35"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name>  <modifier pos:line="3" pos:column="9">*<pos:position pos:line="3" pos:column="10"/></modifier></type><name><name pos:line="3" pos:column="10">fields<pos:position pos:line="3" pos:column="16"/></name><index pos:line="3" pos:column="16">[<expr><literal type="number" pos:line="3" pos:column="17">64<pos:position pos:line="3" pos:column="19"/></literal></expr>]<pos:position pos:line="3" pos:column="20"/></index></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">fields_num<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">data_set_t<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">ds<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">fields_num<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">=<pos:position pos:line="7" pos:column="15"/></operator> <call><name pos:line="7" pos:column="16">strsplit<pos:position pos:line="7" pos:column="24"/></name> <argument_list pos:line="7" pos:column="25">(<argument><expr><name pos:line="7" pos:column="26">buf<pos:position pos:line="7" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="31">fields<pos:position pos:line="7" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="39">64<pos:position pos:line="7" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="43"/></expr_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">fields_num<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">&lt;<pos:position pos:line="8" pos:column="22"/></operator> <literal type="number" pos:line="8" pos:column="20">2<pos:position pos:line="8" pos:column="21"/></literal></expr>)<pos:position pos:line="8" pos:column="22"/></condition><then pos:line="8" pos:column="22">
    <block type="pseudo"><return pos:line="9" pos:column="5">return;<pos:position pos:line="9" pos:column="12"/></return></block></then></if>

  <comment type="block" pos:line="11" pos:column="3">/* Ignore lines which begin with a hash sign. */</comment>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name><name pos:line="12" pos:column="7">fields<pos:position pos:line="12" pos:column="13"/></name><index pos:line="12" pos:column="13">[<expr><literal type="number" pos:line="12" pos:column="14">0<pos:position pos:line="12" pos:column="15"/></literal></expr>]<pos:position pos:line="12" pos:column="16"/></index><index pos:line="12" pos:column="16">[<expr><literal type="number" pos:line="12" pos:column="17">0<pos:position pos:line="12" pos:column="18"/></literal></expr>]<pos:position pos:line="12" pos:column="19"/></index></name> <operator pos:line="12" pos:column="20">==<pos:position pos:line="12" pos:column="22"/></operator> <literal type="char" pos:line="12" pos:column="23">'#'<pos:position pos:line="12" pos:column="26"/></literal></expr>)<pos:position pos:line="12" pos:column="27"/></condition><then pos:line="12" pos:column="27">
    <block type="pseudo"><return pos:line="13" pos:column="5">return;<pos:position pos:line="13" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="15" pos:column="3">ds<pos:position pos:line="15" pos:column="5"/></name> <operator pos:line="15" pos:column="6">=<pos:position pos:line="15" pos:column="7"/></operator> <call><name pos:line="15" pos:column="8">calloc<pos:position pos:line="15" pos:column="14"/></name> <argument_list pos:line="15" pos:column="15">(<argument><expr><literal type="number" pos:line="15" pos:column="16">1<pos:position pos:line="15" pos:column="17"/></literal></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="19">sizeof <argument_list pos:line="15" pos:column="26">(<argument><expr><operator pos:line="15" pos:column="27">*<pos:position pos:line="15" pos:column="28"/></operator><name pos:line="15" pos:column="28">ds<pos:position pos:line="15" pos:column="30"/></name></expr></argument>)<pos:position pos:line="15" pos:column="31"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="33"/></expr_stmt>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">ds<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">==<pos:position pos:line="16" pos:column="12"/></operator> <name pos:line="16" pos:column="13">NULL<pos:position pos:line="16" pos:column="17"/></name></expr>)<pos:position pos:line="16" pos:column="18"/></condition><then pos:line="16" pos:column="18">
    <block type="pseudo"><return pos:line="17" pos:column="5">return;<pos:position pos:line="17" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="19" pos:column="3">sstrncpy<pos:position pos:line="19" pos:column="11"/></name> <argument_list pos:line="19" pos:column="12">(<argument><expr><name><name pos:line="19" pos:column="13">ds<pos:position pos:line="19" pos:column="15"/></name><operator pos:line="19" pos:column="15">-&gt;<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="17">type<pos:position pos:line="19" pos:column="21"/></name></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="23">fields<pos:position pos:line="19" pos:column="29"/></name><index pos:line="19" pos:column="29">[<expr><literal type="number" pos:line="19" pos:column="30">0<pos:position pos:line="19" pos:column="31"/></literal></expr>]<pos:position pos:line="19" pos:column="32"/></index></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="34">sizeof <argument_list pos:line="19" pos:column="41">(<argument><expr><name><name pos:line="19" pos:column="42">ds<pos:position pos:line="19" pos:column="44"/></name><operator pos:line="19" pos:column="44">-&gt;<pos:position pos:line="19" pos:column="49"/></operator><name pos:line="19" pos:column="46">type<pos:position pos:line="19" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="53"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="21" pos:column="3">ds<pos:position pos:line="21" pos:column="5"/></name><operator pos:line="21" pos:column="5">-&gt;<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="7">ds_num<pos:position pos:line="21" pos:column="13"/></name></name> <operator pos:line="21" pos:column="14">=<pos:position pos:line="21" pos:column="15"/></operator> <name pos:line="21" pos:column="16">fields_num<pos:position pos:line="21" pos:column="26"/></name> <operator pos:line="21" pos:column="27">-<pos:position pos:line="21" pos:column="28"/></operator> <literal type="number" pos:line="21" pos:column="29">1<pos:position pos:line="21" pos:column="30"/></literal></expr>;<pos:position pos:line="21" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="22" pos:column="3">ds<pos:position pos:line="22" pos:column="5"/></name><operator pos:line="22" pos:column="5">-&gt;<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="7">ds<pos:position pos:line="22" pos:column="9"/></name></name> <operator pos:line="22" pos:column="10">=<pos:position pos:line="22" pos:column="11"/></operator> <operator pos:line="22" pos:column="12">(<pos:position pos:line="22" pos:column="13"/></operator><name pos:line="22" pos:column="13">data_source_t<pos:position pos:line="22" pos:column="26"/></name> <operator pos:line="22" pos:column="27">*<pos:position pos:line="22" pos:column="28"/></operator><operator pos:line="22" pos:column="28">)<pos:position pos:line="22" pos:column="29"/></operator> <call><name pos:line="22" pos:column="30">calloc<pos:position pos:line="22" pos:column="36"/></name> <argument_list pos:line="22" pos:column="37">(<argument><expr><name><name pos:line="22" pos:column="38">ds<pos:position pos:line="22" pos:column="40"/></name><operator pos:line="22" pos:column="40">-&gt;<pos:position pos:line="22" pos:column="45"/></operator><name pos:line="22" pos:column="42">ds_num<pos:position pos:line="22" pos:column="48"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="50">sizeof <argument_list pos:line="22" pos:column="57">(<argument><expr><name pos:line="22" pos:column="58">data_source_t<pos:position pos:line="22" pos:column="71"/></name></expr></argument>)<pos:position pos:line="22" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="74"/></expr_stmt>
  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><name><name pos:line="23" pos:column="7">ds<pos:position pos:line="23" pos:column="9"/></name><operator pos:line="23" pos:column="9">-&gt;<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="11">ds<pos:position pos:line="23" pos:column="13"/></name></name> <operator pos:line="23" pos:column="14">==<pos:position pos:line="23" pos:column="16"/></operator> <name pos:line="23" pos:column="17">NULL<pos:position pos:line="23" pos:column="21"/></name></expr>)<pos:position pos:line="23" pos:column="22"/></condition><then pos:line="23" pos:column="22">
  <block pos:line="24" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">sfree<pos:position pos:line="25" pos:column="10"/></name> <argument_list pos:line="25" pos:column="11">(<argument><expr><name pos:line="25" pos:column="12">ds<pos:position pos:line="25" pos:column="14"/></name></expr></argument>)<pos:position pos:line="25" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="16"/></expr_stmt>
    <return pos:line="26" pos:column="5">return;<pos:position pos:line="26" pos:column="12"/></return>
  }<pos:position pos:line="27" pos:column="4"/></block></then></if>

  <for pos:line="29" pos:column="3">for <control pos:line="29" pos:column="7">(<init><decl><type><name pos:line="29" pos:column="8">size_t<pos:position pos:line="29" pos:column="14"/></name></type> <name pos:line="29" pos:column="15">i<pos:position pos:line="29" pos:column="16"/></name> <init pos:line="29" pos:column="17">= <expr><literal type="number" pos:line="29" pos:column="19">0<pos:position pos:line="29" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="29" pos:column="21"/></init> <condition><expr><name pos:line="29" pos:column="22">i<pos:position pos:line="29" pos:column="23"/></name> <operator pos:line="29" pos:column="24">&lt;<pos:position pos:line="29" pos:column="28"/></operator> <name><name pos:line="29" pos:column="26">ds<pos:position pos:line="29" pos:column="28"/></name><operator pos:line="29" pos:column="28">-&gt;<pos:position pos:line="29" pos:column="33"/></operator><name pos:line="29" pos:column="30">ds_num<pos:position pos:line="29" pos:column="36"/></name></name></expr>;<pos:position pos:line="29" pos:column="37"/></condition> <incr><expr><name pos:line="29" pos:column="38">i<pos:position pos:line="29" pos:column="39"/></name><operator pos:line="29" pos:column="39">++<pos:position pos:line="29" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="29" pos:column="42"/></control>
    <block type="pseudo"><if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><call><name pos:line="30" pos:column="9">parse_ds<pos:position pos:line="30" pos:column="17"/></name> <argument_list pos:line="30" pos:column="18">(<argument><expr><name><name pos:line="30" pos:column="19">ds<pos:position pos:line="30" pos:column="21"/></name><operator pos:line="30" pos:column="21">-&gt;<pos:position pos:line="30" pos:column="26"/></operator><name pos:line="30" pos:column="23">ds<pos:position pos:line="30" pos:column="25"/></name></name> <operator pos:line="30" pos:column="26">+<pos:position pos:line="30" pos:column="27"/></operator> <name pos:line="30" pos:column="28">i<pos:position pos:line="30" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="31">fields<pos:position pos:line="30" pos:column="37"/></name><index pos:line="30" pos:column="37">[<expr><name pos:line="30" pos:column="38">i<pos:position pos:line="30" pos:column="39"/></name> <operator pos:line="30" pos:column="40">+<pos:position pos:line="30" pos:column="41"/></operator> <literal type="number" pos:line="30" pos:column="42">1<pos:position pos:line="30" pos:column="43"/></literal></expr>]<pos:position pos:line="30" pos:column="44"/></index></name></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="46">strlen<pos:position pos:line="30" pos:column="52"/></name> <argument_list pos:line="30" pos:column="53">(<argument><expr><name><name pos:line="30" pos:column="54">fields<pos:position pos:line="30" pos:column="60"/></name><index pos:line="30" pos:column="60">[<expr><name pos:line="30" pos:column="61">i<pos:position pos:line="30" pos:column="62"/></name> <operator pos:line="30" pos:column="63">+<pos:position pos:line="30" pos:column="64"/></operator> <literal type="number" pos:line="30" pos:column="65">1<pos:position pos:line="30" pos:column="66"/></literal></expr>]<pos:position pos:line="30" pos:column="67"/></index></name></expr></argument>)<pos:position pos:line="30" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="69"/></argument_list></call> <operator pos:line="30" pos:column="70">!=<pos:position pos:line="30" pos:column="72"/></operator> <literal type="number" pos:line="30" pos:column="73">0<pos:position pos:line="30" pos:column="74"/></literal></expr>)<pos:position pos:line="30" pos:column="75"/></condition><then pos:line="30" pos:column="75">
    <block pos:line="31" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="32" pos:column="7">ERROR<pos:position pos:line="32" pos:column="12"/></name> <argument_list pos:line="32" pos:column="13">(<argument><expr><literal type="string" pos:line="32" pos:column="14">"types_list: parse_line: Cannot parse data source #%zu "<pos:position pos:line="32" pos:column="70"/></literal>
	  <literal type="string" pos:line="33" pos:column="11">"of data set %s"<pos:position pos:line="33" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="29">i<pos:position pos:line="33" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="32">ds<pos:position pos:line="33" pos:column="34"/></name><operator pos:line="33" pos:column="34">-&gt;<pos:position pos:line="33" pos:column="39"/></operator><name pos:line="33" pos:column="36">type<pos:position pos:line="33" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="34" pos:column="7">sfree<pos:position pos:line="34" pos:column="12"/></name> <argument_list pos:line="34" pos:column="13">(<argument><expr><name><name pos:line="34" pos:column="14">ds<pos:position pos:line="34" pos:column="16"/></name><operator pos:line="34" pos:column="16">-&gt;<pos:position pos:line="34" pos:column="21"/></operator><name pos:line="34" pos:column="18">ds<pos:position pos:line="34" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="35" pos:column="7">sfree<pos:position pos:line="35" pos:column="12"/></name> <argument_list pos:line="35" pos:column="13">(<argument><expr><name pos:line="35" pos:column="14">ds<pos:position pos:line="35" pos:column="16"/></name></expr></argument>)<pos:position pos:line="35" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="18"/></expr_stmt>
      <return pos:line="36" pos:column="7">return;<pos:position pos:line="36" pos:column="14"/></return>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if></block></for>

  <expr_stmt><expr><call><name pos:line="39" pos:column="3">plugin_register_data_set<pos:position pos:line="39" pos:column="27"/></name> <argument_list pos:line="39" pos:column="28">(<argument><expr><name pos:line="39" pos:column="29">ds<pos:position pos:line="39" pos:column="31"/></name></expr></argument>)<pos:position pos:line="39" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="33"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="41" pos:column="3">sfree<pos:position pos:line="41" pos:column="8"/></name> <argument_list pos:line="41" pos:column="9">(<argument><expr><name><name pos:line="41" pos:column="10">ds<pos:position pos:line="41" pos:column="12"/></name><operator pos:line="41" pos:column="12">-&gt;<pos:position pos:line="41" pos:column="17"/></operator><name pos:line="41" pos:column="14">ds<pos:position pos:line="41" pos:column="16"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="42" pos:column="3">sfree<pos:position pos:line="42" pos:column="8"/></name> <argument_list pos:line="42" pos:column="9">(<argument><expr><name pos:line="42" pos:column="10">ds<pos:position pos:line="42" pos:column="12"/></name></expr></argument>)<pos:position pos:line="42" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="14"/></expr_stmt>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2487_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dispatch_value_plugin<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">plugin<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">oconfig_item_t<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">ci<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list> <block pos:line="1" pos:column="74">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">char<pos:position pos:line="2" pos:column="7"/></name></type> <name><name pos:line="2" pos:column="8">buffer<pos:position pos:line="2" pos:column="14"/></name><index pos:line="2" pos:column="14">[<expr><literal type="number" pos:line="2" pos:column="15">4096<pos:position pos:line="2" pos:column="19"/></literal></expr>]<pos:position pos:line="2" pos:column="20"/></index></name></decl>;<pos:position pos:line="2" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">buffer_ptr<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">buffer_free<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">buffer_ptr<pos:position pos:line="6" pos:column="13"/></name> <operator pos:line="6" pos:column="14">=<pos:position pos:line="6" pos:column="15"/></operator> <name pos:line="6" pos:column="16">buffer<pos:position pos:line="6" pos:column="22"/></name></expr>;<pos:position pos:line="6" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name pos:line="7" pos:column="3">buffer_free<pos:position pos:line="7" pos:column="14"/></name> <operator pos:line="7" pos:column="15">=<pos:position pos:line="7" pos:column="16"/></operator> <sizeof pos:line="7" pos:column="17">sizeof<argument_list pos:line="7" pos:column="23">(<argument><expr><name pos:line="7" pos:column="24">buffer<pos:position pos:line="7" pos:column="30"/></name></expr></argument>)<pos:position pos:line="7" pos:column="31"/></argument_list></sizeof></expr>;<pos:position pos:line="7" pos:column="32"/></expr_stmt>

  <for pos:line="9" pos:column="3">for <control pos:line="9" pos:column="7">(<init><decl><type><name pos:line="9" pos:column="8">int<pos:position pos:line="9" pos:column="11"/></name></type> <name pos:line="9" pos:column="12">i<pos:position pos:line="9" pos:column="13"/></name> <init pos:line="9" pos:column="14">= <expr><literal type="number" pos:line="9" pos:column="16">0<pos:position pos:line="9" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="18"/></init> <condition><expr><name pos:line="9" pos:column="19">i<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">&lt;<pos:position pos:line="9" pos:column="25"/></operator> <name><name pos:line="9" pos:column="23">ci<pos:position pos:line="9" pos:column="25"/></name><operator pos:line="9" pos:column="25">-&gt;<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="27">values_num<pos:position pos:line="9" pos:column="37"/></name></name></expr>;<pos:position pos:line="9" pos:column="38"/></condition> <incr><expr><name pos:line="9" pos:column="39">i<pos:position pos:line="9" pos:column="40"/></name><operator pos:line="9" pos:column="40">++<pos:position pos:line="9" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="9" pos:column="43"/></control> <block pos:line="9" pos:column="44">{
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">status<pos:position pos:line="10" pos:column="15"/></name> <init pos:line="10" pos:column="16">= <expr><operator pos:line="10" pos:column="18">-<pos:position pos:line="10" pos:column="19"/></operator><literal type="number" pos:line="10" pos:column="19">1<pos:position pos:line="10" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name><name pos:line="12" pos:column="9">ci<pos:position pos:line="12" pos:column="11"/></name><operator pos:line="12" pos:column="11">-&gt;<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="13">values<pos:position pos:line="12" pos:column="19"/></name><index pos:line="12" pos:column="19">[<expr><name pos:line="12" pos:column="20">i<pos:position pos:line="12" pos:column="21"/></name></expr>]<pos:position pos:line="12" pos:column="22"/></index></name><operator pos:line="12" pos:column="22">.<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="23">type<pos:position pos:line="12" pos:column="27"/></name> <operator pos:line="12" pos:column="28">==<pos:position pos:line="12" pos:column="30"/></operator> <name pos:line="12" pos:column="31">OCONFIG_TYPE_STRING<pos:position pos:line="12" pos:column="50"/></name></expr>)<pos:position pos:line="12" pos:column="51"/></condition><then pos:line="12" pos:column="51">
      <block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="7">status<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator>
          <call><name pos:line="14" pos:column="11">ssnprintf<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><name pos:line="14" pos:column="21">buffer_ptr<pos:position pos:line="14" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="33">buffer_free<pos:position pos:line="14" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="46">" %s"<pos:position pos:line="14" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="53">ci<pos:position pos:line="14" pos:column="55"/></name><operator pos:line="14" pos:column="55">-&gt;<pos:position pos:line="14" pos:column="60"/></operator><name pos:line="14" pos:column="57">values<pos:position pos:line="14" pos:column="63"/></name><index pos:line="14" pos:column="63">[<expr><name pos:line="14" pos:column="64">i<pos:position pos:line="14" pos:column="65"/></name></expr>]<pos:position pos:line="14" pos:column="66"/></index></name><operator pos:line="14" pos:column="66">.<pos:position pos:line="14" pos:column="67"/></operator><name><name pos:line="14" pos:column="67">value<pos:position pos:line="14" pos:column="72"/></name><operator pos:line="14" pos:column="72">.<pos:position pos:line="14" pos:column="73"/></operator><name pos:line="14" pos:column="73">string<pos:position pos:line="14" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="81"/></expr_stmt></block></then>
    <elseif pos:line="15" pos:column="5">else <if pos:line="15" pos:column="10">if <condition pos:line="15" pos:column="13">(<expr><name><name pos:line="15" pos:column="14">ci<pos:position pos:line="15" pos:column="16"/></name><operator pos:line="15" pos:column="16">-&gt;<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="18">values<pos:position pos:line="15" pos:column="24"/></name><index pos:line="15" pos:column="24">[<expr><name pos:line="15" pos:column="25">i<pos:position pos:line="15" pos:column="26"/></name></expr>]<pos:position pos:line="15" pos:column="27"/></index></name><operator pos:line="15" pos:column="27">.<pos:position pos:line="15" pos:column="28"/></operator><name pos:line="15" pos:column="28">type<pos:position pos:line="15" pos:column="32"/></name> <operator pos:line="15" pos:column="33">==<pos:position pos:line="15" pos:column="35"/></operator> <name pos:line="15" pos:column="36">OCONFIG_TYPE_NUMBER<pos:position pos:line="15" pos:column="55"/></name></expr>)<pos:position pos:line="15" pos:column="56"/></condition><then pos:line="15" pos:column="56">
      <block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="7">status<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <call><name pos:line="16" pos:column="16">ssnprintf<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">(<argument><expr><name pos:line="16" pos:column="26">buffer_ptr<pos:position pos:line="16" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="38">buffer_free<pos:position pos:line="16" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="51">" %lf"<pos:position pos:line="16" pos:column="57"/></literal></expr></argument>,
                         <argument><expr><name><name pos:line="17" pos:column="26">ci<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">-&gt;<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="30">values<pos:position pos:line="17" pos:column="36"/></name><index pos:line="17" pos:column="36">[<expr><name pos:line="17" pos:column="37">i<pos:position pos:line="17" pos:column="38"/></name></expr>]<pos:position pos:line="17" pos:column="39"/></index></name><operator pos:line="17" pos:column="39">.<pos:position pos:line="17" pos:column="40"/></operator><name><name pos:line="17" pos:column="40">value<pos:position pos:line="17" pos:column="45"/></name><operator pos:line="17" pos:column="45">.<pos:position pos:line="17" pos:column="46"/></operator><name pos:line="17" pos:column="46">number<pos:position pos:line="17" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="54"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="18" pos:column="5">else <if pos:line="18" pos:column="10">if <condition pos:line="18" pos:column="13">(<expr><name><name pos:line="18" pos:column="14">ci<pos:position pos:line="18" pos:column="16"/></name><operator pos:line="18" pos:column="16">-&gt;<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="18">values<pos:position pos:line="18" pos:column="24"/></name><index pos:line="18" pos:column="24">[<expr><name pos:line="18" pos:column="25">i<pos:position pos:line="18" pos:column="26"/></name></expr>]<pos:position pos:line="18" pos:column="27"/></index></name><operator pos:line="18" pos:column="27">.<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="28">type<pos:position pos:line="18" pos:column="32"/></name> <operator pos:line="18" pos:column="33">==<pos:position pos:line="18" pos:column="35"/></operator> <name pos:line="18" pos:column="36">OCONFIG_TYPE_BOOLEAN<pos:position pos:line="18" pos:column="56"/></name></expr>)<pos:position pos:line="18" pos:column="57"/></condition><then pos:line="18" pos:column="57">
      <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="7">status<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">=<pos:position pos:line="19" pos:column="15"/></operator> <call><name pos:line="19" pos:column="16">ssnprintf<pos:position pos:line="19" pos:column="25"/></name><argument_list pos:line="19" pos:column="25">(<argument><expr><name pos:line="19" pos:column="26">buffer_ptr<pos:position pos:line="19" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="38">buffer_free<pos:position pos:line="19" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="51">" %s"<pos:position pos:line="19" pos:column="56"/></literal></expr></argument>,
                         <argument><expr><ternary><condition><expr><name><name pos:line="20" pos:column="26">ci<pos:position pos:line="20" pos:column="28"/></name><operator pos:line="20" pos:column="28">-&gt;<pos:position pos:line="20" pos:column="33"/></operator><name pos:line="20" pos:column="30">values<pos:position pos:line="20" pos:column="36"/></name><index pos:line="20" pos:column="36">[<expr><name pos:line="20" pos:column="37">i<pos:position pos:line="20" pos:column="38"/></name></expr>]<pos:position pos:line="20" pos:column="39"/></index></name><operator pos:line="20" pos:column="39">.<pos:position pos:line="20" pos:column="40"/></operator><name><name pos:line="20" pos:column="40">value<pos:position pos:line="20" pos:column="45"/></name><operator pos:line="20" pos:column="45">.<pos:position pos:line="20" pos:column="46"/></operator><name pos:line="20" pos:column="46">boolean<pos:position pos:line="20" pos:column="53"/></name></name></expr> ?<pos:position pos:line="20" pos:column="55"/></condition><then pos:line="20" pos:column="55"> <expr><literal type="string" pos:line="20" pos:column="56">"true"<pos:position pos:line="20" pos:column="62"/></literal></expr> <pos:position pos:line="20" pos:column="63"/></then><else pos:line="20" pos:column="63">: <expr><literal type="string" pos:line="20" pos:column="65">"false"<pos:position pos:line="20" pos:column="72"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="20" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="74"/></expr_stmt></block></then></if></elseif></if>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">(<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="10">status<pos:position pos:line="22" pos:column="16"/></name> <operator pos:line="22" pos:column="17">&lt;<pos:position pos:line="22" pos:column="21"/></operator> <literal type="number" pos:line="22" pos:column="19">0<pos:position pos:line="22" pos:column="20"/></literal><operator pos:line="22" pos:column="20">)<pos:position pos:line="22" pos:column="21"/></operator> <operator pos:line="22" pos:column="22">||<pos:position pos:line="22" pos:column="24"/></operator> <operator pos:line="22" pos:column="25">(<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="26">status<pos:position pos:line="22" pos:column="32"/></name> <operator pos:line="22" pos:column="33">&gt;=<pos:position pos:line="22" pos:column="38"/></operator> <name pos:line="22" pos:column="36">buffer_free<pos:position pos:line="22" pos:column="47"/></name><operator pos:line="22" pos:column="47">)<pos:position pos:line="22" pos:column="48"/></operator></expr>)<pos:position pos:line="22" pos:column="49"/></condition><then pos:line="22" pos:column="49">
      <block type="pseudo"><return pos:line="23" pos:column="7">return <expr><operator pos:line="23" pos:column="14">(<pos:position pos:line="23" pos:column="15"/></operator><operator pos:line="23" pos:column="15">-<pos:position pos:line="23" pos:column="16"/></operator><literal type="number" pos:line="23" pos:column="16">1<pos:position pos:line="23" pos:column="17"/></literal><operator pos:line="23" pos:column="17">)<pos:position pos:line="23" pos:column="18"/></operator></expr>;<pos:position pos:line="23" pos:column="19"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="24" pos:column="5">buffer_free<pos:position pos:line="24" pos:column="16"/></name> <operator pos:line="24" pos:column="17">-=<pos:position pos:line="24" pos:column="19"/></operator> <name pos:line="24" pos:column="20">status<pos:position pos:line="24" pos:column="26"/></name></expr>;<pos:position pos:line="24" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="25" pos:column="5">buffer_ptr<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">+=<pos:position pos:line="25" pos:column="18"/></operator> <name pos:line="25" pos:column="19">status<pos:position pos:line="25" pos:column="25"/></name></expr>;<pos:position pos:line="25" pos:column="26"/></expr_stmt>
  }<pos:position pos:line="26" pos:column="4"/></block></for>
  <comment type="block" pos:line="27" pos:column="3">/* skip the initial space */</comment>
  <expr_stmt><expr><name pos:line="28" pos:column="3">buffer_ptr<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">=<pos:position pos:line="28" pos:column="15"/></operator> <name pos:line="28" pos:column="16">buffer<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">+<pos:position pos:line="28" pos:column="24"/></operator> <literal type="number" pos:line="28" pos:column="25">1<pos:position pos:line="28" pos:column="26"/></literal></expr>;<pos:position pos:line="28" pos:column="27"/></expr_stmt>

  <return pos:line="30" pos:column="3">return <expr><operator pos:line="30" pos:column="10">(<pos:position pos:line="30" pos:column="11"/></operator><call><name pos:line="30" pos:column="11">cf_dispatch<pos:position pos:line="30" pos:column="22"/></name><argument_list pos:line="30" pos:column="22">(<argument><expr><name pos:line="30" pos:column="23">plugin<pos:position pos:line="30" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="31">ci<pos:position pos:line="30" pos:column="33"/></name><operator pos:line="30" pos:column="33">-&gt;<pos:position pos:line="30" pos:column="38"/></operator><name pos:line="30" pos:column="35">key<pos:position pos:line="30" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="40">buffer_ptr<pos:position pos:line="30" pos:column="50"/></name></expr></argument>)<pos:position pos:line="30" pos:column="51"/></argument_list></call><operator pos:line="30" pos:column="51">)<pos:position pos:line="30" pos:column="52"/></operator></expr>;<pos:position pos:line="30" pos:column="53"/></return>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

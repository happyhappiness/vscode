<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_992_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">perl_shutdown<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">void<pos:position pos:line="1" pos:column="30"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="31"/></parameter_list> <block pos:line="1" pos:column="32">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">c_ithread_t<pos:position pos:line="2" pos:column="14"/></name> <modifier pos:line="2" pos:column="15">*<pos:position pos:line="2" pos:column="16"/></modifier></type><name pos:line="2" pos:column="16">t<pos:position pos:line="2" pos:column="17"/></name></decl>;<pos:position pos:line="2" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">ret<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>

  <expr_stmt><expr><name pos:line="5" pos:column="3">dTHX<pos:position pos:line="5" pos:column="7"/></name></expr>;<pos:position pos:line="5" pos:column="8"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="7" pos:column="3">plugin_unregister_complex_config<pos:position pos:line="7" pos:column="35"/></name><argument_list pos:line="7" pos:column="35">(<argument><expr><literal type="string" pos:line="7" pos:column="36">"perl"<pos:position pos:line="7" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="44"/></expr_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">NULL<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">==<pos:position pos:line="9" pos:column="14"/></operator> <name pos:line="9" pos:column="15">perl_threads<pos:position pos:line="9" pos:column="27"/></name></expr>)<pos:position pos:line="9" pos:column="28"/></condition><then pos:line="9" pos:column="28">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><literal type="number" pos:line="10" pos:column="12">0<pos:position pos:line="10" pos:column="13"/></literal></expr>;<pos:position pos:line="10" pos:column="14"/></return></block></then></if>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">NULL<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">==<pos:position pos:line="12" pos:column="14"/></operator> <name pos:line="12" pos:column="15">aTHX<pos:position pos:line="12" pos:column="19"/></name></expr>)<pos:position pos:line="12" pos:column="20"/></condition><then pos:line="12" pos:column="20"> <block pos:line="12" pos:column="21">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">pthread_mutex_lock<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><operator pos:line="13" pos:column="24">&amp;<pos:position pos:line="13" pos:column="29"/></operator><name><name pos:line="13" pos:column="25">perl_threads<pos:position pos:line="13" pos:column="37"/></name><operator pos:line="13" pos:column="37">-&gt;<pos:position pos:line="13" pos:column="42"/></operator><name pos:line="13" pos:column="39">mutex<pos:position pos:line="13" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">t<pos:position pos:line="14" pos:column="6"/></name> <operator pos:line="14" pos:column="7">=<pos:position pos:line="14" pos:column="8"/></operator> <call><name pos:line="14" pos:column="9">c_ithread_create<pos:position pos:line="14" pos:column="25"/></name><argument_list pos:line="14" pos:column="25">(<argument><expr><name><name pos:line="14" pos:column="26">perl_threads<pos:position pos:line="14" pos:column="38"/></name><operator pos:line="14" pos:column="38">-&gt;<pos:position pos:line="14" pos:column="43"/></operator><name pos:line="14" pos:column="40">head<pos:position pos:line="14" pos:column="44"/></name><operator pos:line="14" pos:column="44">-&gt;<pos:position pos:line="14" pos:column="49"/></operator><name pos:line="14" pos:column="46">interp<pos:position pos:line="14" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">pthread_mutex_unlock<pos:position pos:line="15" pos:column="25"/></name><argument_list pos:line="15" pos:column="25">(<argument><expr><operator pos:line="15" pos:column="26">&amp;<pos:position pos:line="15" pos:column="31"/></operator><name><name pos:line="15" pos:column="27">perl_threads<pos:position pos:line="15" pos:column="39"/></name><operator pos:line="15" pos:column="39">-&gt;<pos:position pos:line="15" pos:column="44"/></operator><name pos:line="15" pos:column="41">mutex<pos:position pos:line="15" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="48"/></expr_stmt>

    <expr_stmt><expr><name pos:line="17" pos:column="5">aTHX<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">=<pos:position pos:line="17" pos:column="11"/></operator> <name><name pos:line="17" pos:column="12">t<pos:position pos:line="17" pos:column="13"/></name><operator pos:line="17" pos:column="13">-&gt;<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="15">interp<pos:position pos:line="17" pos:column="21"/></name></name></expr>;<pos:position pos:line="17" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="20" pos:column="3">log_debug<pos:position pos:line="20" pos:column="12"/></name><argument_list pos:line="20" pos:column="12">(<argument><expr><literal type="string" pos:line="20" pos:column="13">"perl_shutdown: c_ithread: interp = %p (active threads: %i)"<pos:position pos:line="20" pos:column="73"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="75">aTHX<pos:position pos:line="20" pos:column="79"/></name></expr></argument>,
            <argument><expr><name><name pos:line="21" pos:column="13">perl_threads<pos:position pos:line="21" pos:column="25"/></name><operator pos:line="21" pos:column="25">-&gt;<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="27">number_of_threads<pos:position pos:line="21" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="46"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="23" pos:column="3">plugin_unregister_log<pos:position pos:line="23" pos:column="24"/></name><argument_list pos:line="23" pos:column="24">(<argument><expr><literal type="string" pos:line="23" pos:column="25">"perl"<pos:position pos:line="23" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="24" pos:column="3">plugin_unregister_notification<pos:position pos:line="24" pos:column="33"/></name><argument_list pos:line="24" pos:column="33">(<argument><expr><literal type="string" pos:line="24" pos:column="34">"perl"<pos:position pos:line="24" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">plugin_unregister_init<pos:position pos:line="25" pos:column="25"/></name><argument_list pos:line="25" pos:column="25">(<argument><expr><literal type="string" pos:line="25" pos:column="26">"perl"<pos:position pos:line="25" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="26" pos:column="3">plugin_unregister_read<pos:position pos:line="26" pos:column="25"/></name><argument_list pos:line="26" pos:column="25">(<argument><expr><literal type="string" pos:line="26" pos:column="26">"perl"<pos:position pos:line="26" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="27" pos:column="3">plugin_unregister_write<pos:position pos:line="27" pos:column="26"/></name><argument_list pos:line="27" pos:column="26">(<argument><expr><literal type="string" pos:line="27" pos:column="27">"perl"<pos:position pos:line="27" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="28" pos:column="3">plugin_unregister_flush<pos:position pos:line="28" pos:column="26"/></name><argument_list pos:line="28" pos:column="26">(<argument><expr><literal type="string" pos:line="28" pos:column="27">"perl"<pos:position pos:line="28" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="35"/></expr_stmt>

  <expr_stmt><expr><name pos:line="30" pos:column="3">ret<pos:position pos:line="30" pos:column="6"/></name> <operator pos:line="30" pos:column="7">=<pos:position pos:line="30" pos:column="8"/></operator> <macro><name pos:line="30" pos:column="9">pplugin_call_all<pos:position pos:line="30" pos:column="25"/></name><argument_list pos:line="30" pos:column="25">(<argument pos:line="30" pos:column="26">aTHX_ PLUGIN_SHUTDOWN<pos:position pos:line="30" pos:column="47"/></argument>)<pos:position pos:line="30" pos:column="48"/></argument_list></macro></expr>;<pos:position pos:line="30" pos:column="49"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="32" pos:column="3">pthread_mutex_lock<pos:position pos:line="32" pos:column="21"/></name><argument_list pos:line="32" pos:column="21">(<argument><expr><operator pos:line="32" pos:column="22">&amp;<pos:position pos:line="32" pos:column="27"/></operator><name><name pos:line="32" pos:column="23">perl_threads<pos:position pos:line="32" pos:column="35"/></name><operator pos:line="32" pos:column="35">-&gt;<pos:position pos:line="32" pos:column="40"/></operator><name pos:line="32" pos:column="37">mutex<pos:position pos:line="32" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><name pos:line="33" pos:column="3">t<pos:position pos:line="33" pos:column="4"/></name> <operator pos:line="33" pos:column="5">=<pos:position pos:line="33" pos:column="6"/></operator> <name><name pos:line="33" pos:column="7">perl_threads<pos:position pos:line="33" pos:column="19"/></name><operator pos:line="33" pos:column="19">-&gt;<pos:position pos:line="33" pos:column="24"/></operator><name pos:line="33" pos:column="21">tail<pos:position pos:line="33" pos:column="25"/></name></name></expr>;<pos:position pos:line="33" pos:column="26"/></expr_stmt>

  <while pos:line="35" pos:column="3">while <condition pos:line="35" pos:column="9">(<expr><name pos:line="35" pos:column="10">NULL<pos:position pos:line="35" pos:column="14"/></name> <operator pos:line="35" pos:column="15">!=<pos:position pos:line="35" pos:column="17"/></operator> <name pos:line="35" pos:column="18">t<pos:position pos:line="35" pos:column="19"/></name></expr>)<pos:position pos:line="35" pos:column="20"/></condition> <block pos:line="35" pos:column="21">{
    <decl_stmt><decl><type><name><name pos:line="36" pos:column="5">struct<pos:position pos:line="36" pos:column="11"/></name> <name pos:line="36" pos:column="12">timespec<pos:position pos:line="36" pos:column="20"/></name></name></type> <name pos:line="36" pos:column="21">ts_wait<pos:position pos:line="36" pos:column="28"/></name></decl>;<pos:position pos:line="36" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="37" pos:column="5">c_ithread_t<pos:position pos:line="37" pos:column="16"/></name> <modifier pos:line="37" pos:column="17">*<pos:position pos:line="37" pos:column="18"/></modifier></type><name pos:line="37" pos:column="18">thr<pos:position pos:line="37" pos:column="21"/></name> <init pos:line="37" pos:column="22">= <expr><name pos:line="37" pos:column="24">t<pos:position pos:line="37" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="37" pos:column="26"/></decl_stmt>

    <comment type="block" pos:line="39" pos:column="5">/* the pointer has to be advanced before destroying
     * the thread as this will free the memory */</comment>
    <expr_stmt><expr><name pos:line="41" pos:column="5">t<pos:position pos:line="41" pos:column="6"/></name> <operator pos:line="41" pos:column="7">=<pos:position pos:line="41" pos:column="8"/></operator> <name><name pos:line="41" pos:column="9">t<pos:position pos:line="41" pos:column="10"/></name><operator pos:line="41" pos:column="10">-&gt;<pos:position pos:line="41" pos:column="15"/></operator><name pos:line="41" pos:column="12">prev<pos:position pos:line="41" pos:column="16"/></name></name></expr>;<pos:position pos:line="41" pos:column="17"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="43" pos:column="5">thr<pos:position pos:line="43" pos:column="8"/></name><operator pos:line="43" pos:column="8">-&gt;<pos:position pos:line="43" pos:column="13"/></operator><name pos:line="43" pos:column="10">shutdown<pos:position pos:line="43" pos:column="18"/></name></name> <operator pos:line="43" pos:column="19">=<pos:position pos:line="43" pos:column="20"/></operator> <literal type="number" pos:line="43" pos:column="21">1<pos:position pos:line="43" pos:column="22"/></literal></expr>;<pos:position pos:line="43" pos:column="23"/></expr_stmt>
    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><name><name pos:line="44" pos:column="9">thr<pos:position pos:line="44" pos:column="12"/></name><operator pos:line="44" pos:column="12">-&gt;<pos:position pos:line="44" pos:column="17"/></operator><name pos:line="44" pos:column="14">running<pos:position pos:line="44" pos:column="21"/></name></name></expr>)<pos:position pos:line="44" pos:column="22"/></condition><then pos:line="44" pos:column="22"> <block pos:line="44" pos:column="23">{
      <comment type="block" pos:line="45" pos:column="7">/* Give some time to thread to exit from Perl interpreter */</comment>
      <expr_stmt><expr><call><name pos:line="46" pos:column="7">WARNING<pos:position pos:line="46" pos:column="14"/></name><argument_list pos:line="46" pos:column="14">(<argument><expr><literal type="string" pos:line="46" pos:column="15">"perl shutdown: Thread is running inside Perl. Waiting."<pos:position pos:line="46" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="73"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="47" pos:column="7">ts_wait<pos:position pos:line="47" pos:column="14"/></name><operator pos:line="47" pos:column="14">.<pos:position pos:line="47" pos:column="15"/></operator><name pos:line="47" pos:column="15">tv_sec<pos:position pos:line="47" pos:column="21"/></name></name> <operator pos:line="47" pos:column="22">=<pos:position pos:line="47" pos:column="23"/></operator> <literal type="number" pos:line="47" pos:column="24">0<pos:position pos:line="47" pos:column="25"/></literal></expr>;<pos:position pos:line="47" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="48" pos:column="7">ts_wait<pos:position pos:line="48" pos:column="14"/></name><operator pos:line="48" pos:column="14">.<pos:position pos:line="48" pos:column="15"/></operator><name pos:line="48" pos:column="15">tv_nsec<pos:position pos:line="48" pos:column="22"/></name></name> <operator pos:line="48" pos:column="23">=<pos:position pos:line="48" pos:column="24"/></operator> <literal type="number" pos:line="48" pos:column="25">500000<pos:position pos:line="48" pos:column="31"/></literal></expr>;<pos:position pos:line="48" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="49" pos:column="7">nanosleep<pos:position pos:line="49" pos:column="16"/></name><argument_list pos:line="49" pos:column="16">(<argument><expr><operator pos:line="49" pos:column="17">&amp;<pos:position pos:line="49" pos:column="22"/></operator><name pos:line="49" pos:column="18">ts_wait<pos:position pos:line="49" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="27">NULL<pos:position pos:line="49" pos:column="31"/></name></expr></argument>)<pos:position pos:line="49" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>
    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><name><name pos:line="51" pos:column="9">thr<pos:position pos:line="51" pos:column="12"/></name><operator pos:line="51" pos:column="12">-&gt;<pos:position pos:line="51" pos:column="17"/></operator><name pos:line="51" pos:column="14">running<pos:position pos:line="51" pos:column="21"/></name></name></expr>)<pos:position pos:line="51" pos:column="22"/></condition><then pos:line="51" pos:column="22"> <block pos:line="51" pos:column="23">{
      <expr_stmt><expr><call><name pos:line="52" pos:column="7">pthread_kill<pos:position pos:line="52" pos:column="19"/></name><argument_list pos:line="52" pos:column="19">(<argument><expr><name><name pos:line="52" pos:column="20">thr<pos:position pos:line="52" pos:column="23"/></name><operator pos:line="52" pos:column="23">-&gt;<pos:position pos:line="52" pos:column="28"/></operator><name pos:line="52" pos:column="25">pthread<pos:position pos:line="52" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="34">SIGTERM<pos:position pos:line="52" pos:column="41"/></name></expr></argument>)<pos:position pos:line="52" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="43"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="53" pos:column="7">ERROR<pos:position pos:line="53" pos:column="12"/></name><argument_list pos:line="53" pos:column="12">(<argument><expr><literal type="string" pos:line="53" pos:column="13">"perl shutdown: Thread hangs inside Perl. Thread killed."<pos:position pos:line="53" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="72"/></expr_stmt>
    }<pos:position pos:line="54" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="55" pos:column="5">c_ithread_destroy<pos:position pos:line="55" pos:column="22"/></name><argument_list pos:line="55" pos:column="22">(<argument><expr><name pos:line="55" pos:column="23">thr<pos:position pos:line="55" pos:column="26"/></name></expr></argument>)<pos:position pos:line="55" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="56" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="58" pos:column="3">pthread_mutex_unlock<pos:position pos:line="58" pos:column="23"/></name><argument_list pos:line="58" pos:column="23">(<argument><expr><operator pos:line="58" pos:column="24">&amp;<pos:position pos:line="58" pos:column="29"/></operator><name><name pos:line="58" pos:column="25">perl_threads<pos:position pos:line="58" pos:column="37"/></name><operator pos:line="58" pos:column="37">-&gt;<pos:position pos:line="58" pos:column="42"/></operator><name pos:line="58" pos:column="39">mutex<pos:position pos:line="58" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="59" pos:column="3">pthread_mutex_destroy<pos:position pos:line="59" pos:column="24"/></name><argument_list pos:line="59" pos:column="24">(<argument><expr><operator pos:line="59" pos:column="25">&amp;<pos:position pos:line="59" pos:column="30"/></operator><name><name pos:line="59" pos:column="26">perl_threads<pos:position pos:line="59" pos:column="38"/></name><operator pos:line="59" pos:column="38">-&gt;<pos:position pos:line="59" pos:column="43"/></operator><name pos:line="59" pos:column="40">mutex<pos:position pos:line="59" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="47"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="60" pos:column="3">pthread_mutexattr_destroy<pos:position pos:line="60" pos:column="28"/></name><argument_list pos:line="60" pos:column="28">(<argument><expr><operator pos:line="60" pos:column="29">&amp;<pos:position pos:line="60" pos:column="34"/></operator><name><name pos:line="60" pos:column="30">perl_threads<pos:position pos:line="60" pos:column="42"/></name><operator pos:line="60" pos:column="42">-&gt;<pos:position pos:line="60" pos:column="47"/></operator><name pos:line="60" pos:column="44">mutexattr<pos:position pos:line="60" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="55"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="62" pos:column="3">sfree<pos:position pos:line="62" pos:column="8"/></name><argument_list pos:line="62" pos:column="8">(<argument><expr><name pos:line="62" pos:column="9">perl_threads<pos:position pos:line="62" pos:column="21"/></name></expr></argument>)<pos:position pos:line="62" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="23"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="64" pos:column="3">pthread_key_delete<pos:position pos:line="64" pos:column="21"/></name><argument_list pos:line="64" pos:column="21">(<argument><expr><name pos:line="64" pos:column="22">perl_thr_key<pos:position pos:line="64" pos:column="34"/></name></expr></argument>)<pos:position pos:line="64" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="66" pos:column="3">PERL_SYS_TERM<pos:position pos:line="66" pos:column="16"/></name><argument_list pos:line="66" pos:column="16">()<pos:position pos:line="66" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="19"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="68" pos:column="3">plugin_unregister_shutdown<pos:position pos:line="68" pos:column="29"/></name><argument_list pos:line="68" pos:column="29">(<argument><expr><literal type="string" pos:line="68" pos:column="30">"perl"<pos:position pos:line="68" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="38"/></expr_stmt>
  <return pos:line="69" pos:column="3">return <expr><name pos:line="69" pos:column="10">ret<pos:position pos:line="69" pos:column="13"/></name></expr>;<pos:position pos:line="69" pos:column="14"/></return>
}<pos:position pos:line="70" pos:column="2"/></block></function></unit>

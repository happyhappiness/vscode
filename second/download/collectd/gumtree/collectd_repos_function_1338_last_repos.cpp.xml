<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1338_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">c_grpc_config_server<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">oconfig_item_t<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">ci<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list> <block pos:line="1" pos:column="46">{
  <if pos:line="2" pos:column="3">if <condition pos:line="2" pos:column="6">(<expr><operator pos:line="2" pos:column="7">(<pos:position pos:line="2" pos:column="8"/></operator><name><name pos:line="2" pos:column="8">ci<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">-&gt;<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="12">values_num<pos:position pos:line="2" pos:column="22"/></name></name> <operator pos:line="2" pos:column="23">!=<pos:position pos:line="2" pos:column="25"/></operator> <literal type="number" pos:line="2" pos:column="26">2<pos:position pos:line="2" pos:column="27"/></literal><operator pos:line="2" pos:column="27">)<pos:position pos:line="2" pos:column="28"/></operator> <operator pos:line="2" pos:column="29">||<pos:position pos:line="2" pos:column="31"/></operator> <operator pos:line="2" pos:column="32">(<pos:position pos:line="2" pos:column="33"/></operator><name><name pos:line="2" pos:column="33">ci<pos:position pos:line="2" pos:column="35"/></name><operator pos:line="2" pos:column="35">-&gt;<pos:position pos:line="2" pos:column="40"/></operator><name pos:line="2" pos:column="37">values<pos:position pos:line="2" pos:column="43"/></name><index pos:line="2" pos:column="43">[<expr><literal type="number" pos:line="2" pos:column="44">0<pos:position pos:line="2" pos:column="45"/></literal></expr>]<pos:position pos:line="2" pos:column="46"/></index></name><operator pos:line="2" pos:column="46">.<pos:position pos:line="2" pos:column="47"/></operator><name pos:line="2" pos:column="47">type<pos:position pos:line="2" pos:column="51"/></name> <operator pos:line="2" pos:column="52">!=<pos:position pos:line="2" pos:column="54"/></operator> <name pos:line="2" pos:column="55">OCONFIG_TYPE_STRING<pos:position pos:line="2" pos:column="74"/></name><operator pos:line="2" pos:column="74">)<pos:position pos:line="2" pos:column="75"/></operator> <operator pos:line="2" pos:column="76">||<pos:position pos:line="2" pos:column="78"/></operator>
      <operator pos:line="3" pos:column="7">(<pos:position pos:line="3" pos:column="8"/></operator><name><name pos:line="3" pos:column="8">ci<pos:position pos:line="3" pos:column="10"/></name><operator pos:line="3" pos:column="10">-&gt;<pos:position pos:line="3" pos:column="15"/></operator><name pos:line="3" pos:column="12">values<pos:position pos:line="3" pos:column="18"/></name><index pos:line="3" pos:column="18">[<expr><literal type="number" pos:line="3" pos:column="19">1<pos:position pos:line="3" pos:column="20"/></literal></expr>]<pos:position pos:line="3" pos:column="21"/></index></name><operator pos:line="3" pos:column="21">.<pos:position pos:line="3" pos:column="22"/></operator><name pos:line="3" pos:column="22">type<pos:position pos:line="3" pos:column="26"/></name> <operator pos:line="3" pos:column="27">!=<pos:position pos:line="3" pos:column="29"/></operator> <name pos:line="3" pos:column="30">OCONFIG_TYPE_STRING<pos:position pos:line="3" pos:column="49"/></name><operator pos:line="3" pos:column="49">)<pos:position pos:line="3" pos:column="50"/></operator></expr>)<pos:position pos:line="3" pos:column="51"/></condition><then pos:line="3" pos:column="51"> <block pos:line="3" pos:column="52">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">ERROR<pos:position pos:line="4" pos:column="10"/></name><argument_list pos:line="4" pos:column="10">(<argument><expr><literal type="string" pos:line="4" pos:column="11">"grpc: The `%s` config option needs exactly "<pos:position pos:line="4" pos:column="56"/></literal>
          <literal type="string" pos:line="5" pos:column="11">"two string argument (address and port)."<pos:position pos:line="5" pos:column="52"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="6" pos:column="11">ci<pos:position pos:line="6" pos:column="13"/></name><operator pos:line="6" pos:column="13">-&gt;<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="15">key<pos:position pos:line="6" pos:column="18"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="20"/></expr_stmt>
    <return pos:line="7" pos:column="5">return <expr><operator pos:line="7" pos:column="12">-<pos:position pos:line="7" pos:column="13"/></operator><literal type="number" pos:line="7" pos:column="13">1<pos:position pos:line="7" pos:column="14"/></literal></expr>;<pos:position pos:line="7" pos:column="15"/></return>
  }<pos:position pos:line="8" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name><name pos:line="10" pos:column="3">grpc<pos:position pos:line="10" pos:column="7"/></name><operator pos:line="10" pos:column="7">::<pos:position pos:line="10" pos:column="9"/></operator><name pos:line="10" pos:column="9">SslCredentialsOptions<pos:position pos:line="10" pos:column="30"/></name></name></type> <name pos:line="10" pos:column="31">ssl_opts<pos:position pos:line="10" pos:column="39"/></name></decl>;<pos:position pos:line="10" pos:column="40"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">bool<pos:position pos:line="11" pos:column="7"/></name></type> <name pos:line="11" pos:column="8">use_ssl<pos:position pos:line="11" pos:column="15"/></name> <init pos:line="11" pos:column="16">= <expr><literal type="boolean" pos:line="11" pos:column="18">false<pos:position pos:line="11" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="24"/></decl_stmt>

  <for pos:line="13" pos:column="3">for <control pos:line="13" pos:column="7">(<init><decl><type><name pos:line="13" pos:column="8">int<pos:position pos:line="13" pos:column="11"/></name></type> <name pos:line="13" pos:column="12">i<pos:position pos:line="13" pos:column="13"/></name> <init pos:line="13" pos:column="14">= <expr><literal type="number" pos:line="13" pos:column="16">0<pos:position pos:line="13" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="18"/></init> <condition><expr><name pos:line="13" pos:column="19">i<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">&lt;<pos:position pos:line="13" pos:column="25"/></operator> <name><name pos:line="13" pos:column="23">ci<pos:position pos:line="13" pos:column="25"/></name><operator pos:line="13" pos:column="25">-&gt;<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="27">children_num<pos:position pos:line="13" pos:column="39"/></name></name></expr>;<pos:position pos:line="13" pos:column="40"/></condition> <incr><expr><name pos:line="13" pos:column="41">i<pos:position pos:line="13" pos:column="42"/></name><operator pos:line="13" pos:column="42">++<pos:position pos:line="13" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="13" pos:column="45"/></control> <block pos:line="13" pos:column="46">{
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">oconfig_item_t<pos:position pos:line="14" pos:column="19"/></name> <modifier pos:line="14" pos:column="20">*<pos:position pos:line="14" pos:column="21"/></modifier></type><name pos:line="14" pos:column="21">child<pos:position pos:line="14" pos:column="26"/></name> <init pos:line="14" pos:column="27">= <expr><name><name pos:line="14" pos:column="29">ci<pos:position pos:line="14" pos:column="31"/></name><operator pos:line="14" pos:column="31">-&gt;<pos:position pos:line="14" pos:column="36"/></operator><name pos:line="14" pos:column="33">children<pos:position pos:line="14" pos:column="41"/></name></name> <operator pos:line="14" pos:column="42">+<pos:position pos:line="14" pos:column="43"/></operator> <name pos:line="14" pos:column="44">i<pos:position pos:line="14" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="46"/></decl_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">!<pos:position pos:line="16" pos:column="10"/></operator><call><name pos:line="16" pos:column="10">strcasecmp<pos:position pos:line="16" pos:column="20"/></name><argument_list pos:line="16" pos:column="20">(<argument><expr><literal type="string" pos:line="16" pos:column="21">"EnableSSL"<pos:position pos:line="16" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="34">child<pos:position pos:line="16" pos:column="39"/></name><operator pos:line="16" pos:column="39">-&gt;<pos:position pos:line="16" pos:column="44"/></operator><name pos:line="16" pos:column="41">key<pos:position pos:line="16" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="46"/></condition><then pos:line="16" pos:column="46"> <block pos:line="16" pos:column="47">{
      <if pos:line="17" pos:column="7">if <condition pos:line="17" pos:column="10">(<expr><call><name pos:line="17" pos:column="11">cf_util_get_boolean<pos:position pos:line="17" pos:column="30"/></name><argument_list pos:line="17" pos:column="30">(<argument><expr><name pos:line="17" pos:column="31">child<pos:position pos:line="17" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="38">&amp;<pos:position pos:line="17" pos:column="43"/></operator><name pos:line="17" pos:column="39">use_ssl<pos:position pos:line="17" pos:column="46"/></name></expr></argument>)<pos:position pos:line="17" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="48"/></condition><then pos:line="17" pos:column="48"> <block pos:line="17" pos:column="49">{
        <return pos:line="18" pos:column="9">return <expr><operator pos:line="18" pos:column="16">-<pos:position pos:line="18" pos:column="17"/></operator><literal type="number" pos:line="18" pos:column="17">1<pos:position pos:line="18" pos:column="18"/></literal></expr>;<pos:position pos:line="18" pos:column="19"/></return>
      }<pos:position pos:line="19" pos:column="8"/></block></then></if>
    }<pos:position pos:line="20" pos:column="6"/></block></then> <elseif pos:line="20" pos:column="7">else <if pos:line="20" pos:column="12">if <condition pos:line="20" pos:column="15">(<expr><operator pos:line="20" pos:column="16">!<pos:position pos:line="20" pos:column="17"/></operator><call><name pos:line="20" pos:column="17">strcasecmp<pos:position pos:line="20" pos:column="27"/></name><argument_list pos:line="20" pos:column="27">(<argument><expr><literal type="string" pos:line="20" pos:column="28">"SSLCACertificateFile"<pos:position pos:line="20" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="52">child<pos:position pos:line="20" pos:column="57"/></name><operator pos:line="20" pos:column="57">-&gt;<pos:position pos:line="20" pos:column="62"/></operator><name pos:line="20" pos:column="59">key<pos:position pos:line="20" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="64"/></condition><then pos:line="20" pos:column="64"> <block pos:line="20" pos:column="65">{
      <decl_stmt><decl><type><name pos:line="21" pos:column="7">char<pos:position pos:line="21" pos:column="11"/></name> <modifier pos:line="21" pos:column="12">*<pos:position pos:line="21" pos:column="13"/></modifier></type><name pos:line="21" pos:column="13">certs<pos:position pos:line="21" pos:column="18"/></name> <init pos:line="21" pos:column="19">= <expr><name pos:line="21" pos:column="21">NULL<pos:position pos:line="21" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="21" pos:column="26"/></decl_stmt>
      <if pos:line="22" pos:column="7">if <condition pos:line="22" pos:column="10">(<expr><call><name pos:line="22" pos:column="11">cf_util_get_string<pos:position pos:line="22" pos:column="29"/></name><argument_list pos:line="22" pos:column="29">(<argument><expr><name pos:line="22" pos:column="30">child<pos:position pos:line="22" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="37">&amp;<pos:position pos:line="22" pos:column="42"/></operator><name pos:line="22" pos:column="38">certs<pos:position pos:line="22" pos:column="43"/></name></expr></argument>)<pos:position pos:line="22" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="45"/></condition><then pos:line="22" pos:column="45"> <block pos:line="22" pos:column="46">{
        <return pos:line="23" pos:column="9">return <expr><operator pos:line="23" pos:column="16">-<pos:position pos:line="23" pos:column="17"/></operator><literal type="number" pos:line="23" pos:column="17">1<pos:position pos:line="23" pos:column="18"/></literal></expr>;<pos:position pos:line="23" pos:column="19"/></return>
      }<pos:position pos:line="24" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name><name pos:line="25" pos:column="7">ssl_opts<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">.<pos:position pos:line="25" pos:column="16"/></operator><name pos:line="25" pos:column="16">pem_root_certs<pos:position pos:line="25" pos:column="30"/></name></name> <operator pos:line="25" pos:column="31">=<pos:position pos:line="25" pos:column="32"/></operator> <call><name pos:line="25" pos:column="33">read_file<pos:position pos:line="25" pos:column="42"/></name><argument_list pos:line="25" pos:column="42">(<argument><expr><name pos:line="25" pos:column="43">certs<pos:position pos:line="25" pos:column="48"/></name></expr></argument>)<pos:position pos:line="25" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if></elseif> <elseif pos:line="26" pos:column="7">else <if pos:line="26" pos:column="12">if <condition pos:line="26" pos:column="15">(<expr><operator pos:line="26" pos:column="16">!<pos:position pos:line="26" pos:column="17"/></operator><call><name pos:line="26" pos:column="17">strcasecmp<pos:position pos:line="26" pos:column="27"/></name><argument_list pos:line="26" pos:column="27">(<argument><expr><literal type="string" pos:line="26" pos:column="28">"SSLCertificateKeyFile"<pos:position pos:line="26" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="53">child<pos:position pos:line="26" pos:column="58"/></name><operator pos:line="26" pos:column="58">-&gt;<pos:position pos:line="26" pos:column="63"/></operator><name pos:line="26" pos:column="60">key<pos:position pos:line="26" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="65"/></condition><then pos:line="26" pos:column="65"> <block pos:line="26" pos:column="66">{
      <decl_stmt><decl><type><name pos:line="27" pos:column="7">char<pos:position pos:line="27" pos:column="11"/></name> <modifier pos:line="27" pos:column="12">*<pos:position pos:line="27" pos:column="13"/></modifier></type><name pos:line="27" pos:column="13">key<pos:position pos:line="27" pos:column="16"/></name> <init pos:line="27" pos:column="17">= <expr><name pos:line="27" pos:column="19">NULL<pos:position pos:line="27" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="27" pos:column="24"/></decl_stmt>
      <if pos:line="28" pos:column="7">if <condition pos:line="28" pos:column="10">(<expr><call><name pos:line="28" pos:column="11">cf_util_get_string<pos:position pos:line="28" pos:column="29"/></name><argument_list pos:line="28" pos:column="29">(<argument><expr><name pos:line="28" pos:column="30">child<pos:position pos:line="28" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="37">&amp;<pos:position pos:line="28" pos:column="42"/></operator><name pos:line="28" pos:column="38">key<pos:position pos:line="28" pos:column="41"/></name></expr></argument>)<pos:position pos:line="28" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="43"/></condition><then pos:line="28" pos:column="43"> <block pos:line="28" pos:column="44">{
        <return pos:line="29" pos:column="9">return <expr><operator pos:line="29" pos:column="16">-<pos:position pos:line="29" pos:column="17"/></operator><literal type="number" pos:line="29" pos:column="17">1<pos:position pos:line="29" pos:column="18"/></literal></expr>;<pos:position pos:line="29" pos:column="19"/></return>
      }<pos:position pos:line="30" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name><name pos:line="31" pos:column="7">ssl_opts<pos:position pos:line="31" pos:column="15"/></name><operator pos:line="31" pos:column="15">.<pos:position pos:line="31" pos:column="16"/></operator><name pos:line="31" pos:column="16">pem_private_key<pos:position pos:line="31" pos:column="31"/></name></name> <operator pos:line="31" pos:column="32">=<pos:position pos:line="31" pos:column="33"/></operator> <call><name pos:line="31" pos:column="34">read_file<pos:position pos:line="31" pos:column="43"/></name><argument_list pos:line="31" pos:column="43">(<argument><expr><name pos:line="31" pos:column="44">key<pos:position pos:line="31" pos:column="47"/></name></expr></argument>)<pos:position pos:line="31" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if></elseif> <elseif pos:line="32" pos:column="7">else <if pos:line="32" pos:column="12">if <condition pos:line="32" pos:column="15">(<expr><operator pos:line="32" pos:column="16">!<pos:position pos:line="32" pos:column="17"/></operator><call><name pos:line="32" pos:column="17">strcasecmp<pos:position pos:line="32" pos:column="27"/></name><argument_list pos:line="32" pos:column="27">(<argument><expr><literal type="string" pos:line="32" pos:column="28">"SSLCertificateFile"<pos:position pos:line="32" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="50">child<pos:position pos:line="32" pos:column="55"/></name><operator pos:line="32" pos:column="55">-&gt;<pos:position pos:line="32" pos:column="60"/></operator><name pos:line="32" pos:column="57">key<pos:position pos:line="32" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="62"/></condition><then pos:line="32" pos:column="62"> <block pos:line="32" pos:column="63">{
      <decl_stmt><decl><type><name pos:line="33" pos:column="7">char<pos:position pos:line="33" pos:column="11"/></name> <modifier pos:line="33" pos:column="12">*<pos:position pos:line="33" pos:column="13"/></modifier></type><name pos:line="33" pos:column="13">cert<pos:position pos:line="33" pos:column="17"/></name> <init pos:line="33" pos:column="18">= <expr><name pos:line="33" pos:column="20">NULL<pos:position pos:line="33" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="33" pos:column="25"/></decl_stmt>
      <if pos:line="34" pos:column="7">if <condition pos:line="34" pos:column="10">(<expr><call><name pos:line="34" pos:column="11">cf_util_get_string<pos:position pos:line="34" pos:column="29"/></name><argument_list pos:line="34" pos:column="29">(<argument><expr><name pos:line="34" pos:column="30">child<pos:position pos:line="34" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="37">&amp;<pos:position pos:line="34" pos:column="42"/></operator><name pos:line="34" pos:column="38">cert<pos:position pos:line="34" pos:column="42"/></name></expr></argument>)<pos:position pos:line="34" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="44"/></condition><then pos:line="34" pos:column="44"> <block pos:line="34" pos:column="45">{
        <return pos:line="35" pos:column="9">return <expr><operator pos:line="35" pos:column="16">-<pos:position pos:line="35" pos:column="17"/></operator><literal type="number" pos:line="35" pos:column="17">1<pos:position pos:line="35" pos:column="18"/></literal></expr>;<pos:position pos:line="35" pos:column="19"/></return>
      }<pos:position pos:line="36" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name><name pos:line="37" pos:column="7">ssl_opts<pos:position pos:line="37" pos:column="15"/></name><operator pos:line="37" pos:column="15">.<pos:position pos:line="37" pos:column="16"/></operator><name pos:line="37" pos:column="16">pem_cert_chain<pos:position pos:line="37" pos:column="30"/></name></name> <operator pos:line="37" pos:column="31">=<pos:position pos:line="37" pos:column="32"/></operator> <call><name pos:line="37" pos:column="33">read_file<pos:position pos:line="37" pos:column="42"/></name><argument_list pos:line="37" pos:column="42">(<argument><expr><name pos:line="37" pos:column="43">cert<pos:position pos:line="37" pos:column="47"/></name></expr></argument>)<pos:position pos:line="37" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if></elseif> <else pos:line="38" pos:column="7">else <block pos:line="38" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="39" pos:column="7">WARNING<pos:position pos:line="39" pos:column="14"/></name><argument_list pos:line="39" pos:column="14">(<argument><expr><literal type="string" pos:line="39" pos:column="15">"grpc: Option `%s` not allowed in &lt;%s&gt; block."<pos:position pos:line="39" pos:column="67"/></literal></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="63">child<pos:position pos:line="39" pos:column="68"/></name><operator pos:line="39" pos:column="68">-&gt;<pos:position pos:line="39" pos:column="73"/></operator><name pos:line="39" pos:column="70">key<pos:position pos:line="39" pos:column="73"/></name></name></expr></argument>,
              <argument><expr><name><name pos:line="40" pos:column="15">ci<pos:position pos:line="40" pos:column="17"/></name><operator pos:line="40" pos:column="17">-&gt;<pos:position pos:line="40" pos:column="22"/></operator><name pos:line="40" pos:column="19">key<pos:position pos:line="40" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></else></if>
  }<pos:position pos:line="42" pos:column="4"/></block></for>

  <decl_stmt><decl><type><name pos:line="44" pos:column="3">auto<pos:position pos:line="44" pos:column="7"/></name></type> <name pos:line="44" pos:column="8">node<pos:position pos:line="44" pos:column="12"/></name> <init pos:line="44" pos:column="13">= <expr><call><name><name pos:line="44" pos:column="15">grpc<pos:position pos:line="44" pos:column="19"/></name><operator pos:line="44" pos:column="19">::<pos:position pos:line="44" pos:column="21"/></operator><name pos:line="44" pos:column="21">string<pos:position pos:line="44" pos:column="27"/></name></name><argument_list pos:line="44" pos:column="27">(<argument><expr><name><name pos:line="44" pos:column="28">ci<pos:position pos:line="44" pos:column="30"/></name><operator pos:line="44" pos:column="30">-&gt;<pos:position pos:line="44" pos:column="35"/></operator><name pos:line="44" pos:column="32">values<pos:position pos:line="44" pos:column="38"/></name><index pos:line="44" pos:column="38">[<expr><literal type="number" pos:line="44" pos:column="39">0<pos:position pos:line="44" pos:column="40"/></literal></expr>]<pos:position pos:line="44" pos:column="41"/></index></name><operator pos:line="44" pos:column="41">.<pos:position pos:line="44" pos:column="42"/></operator><name><name pos:line="44" pos:column="42">value<pos:position pos:line="44" pos:column="47"/></name><operator pos:line="44" pos:column="47">.<pos:position pos:line="44" pos:column="48"/></operator><name pos:line="44" pos:column="48">string<pos:position pos:line="44" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="44" pos:column="56"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="45" pos:column="3">auto<pos:position pos:line="45" pos:column="7"/></name></type> <name pos:line="45" pos:column="8">service<pos:position pos:line="45" pos:column="15"/></name> <init pos:line="45" pos:column="16">= <expr><call><name><name pos:line="45" pos:column="18">grpc<pos:position pos:line="45" pos:column="22"/></name><operator pos:line="45" pos:column="22">::<pos:position pos:line="45" pos:column="24"/></operator><name pos:line="45" pos:column="24">string<pos:position pos:line="45" pos:column="30"/></name></name><argument_list pos:line="45" pos:column="30">(<argument><expr><name><name pos:line="45" pos:column="31">ci<pos:position pos:line="45" pos:column="33"/></name><operator pos:line="45" pos:column="33">-&gt;<pos:position pos:line="45" pos:column="38"/></operator><name pos:line="45" pos:column="35">values<pos:position pos:line="45" pos:column="41"/></name><index pos:line="45" pos:column="41">[<expr><literal type="number" pos:line="45" pos:column="42">1<pos:position pos:line="45" pos:column="43"/></literal></expr>]<pos:position pos:line="45" pos:column="44"/></index></name><operator pos:line="45" pos:column="44">.<pos:position pos:line="45" pos:column="45"/></operator><name><name pos:line="45" pos:column="45">value<pos:position pos:line="45" pos:column="50"/></name><operator pos:line="45" pos:column="50">.<pos:position pos:line="45" pos:column="51"/></operator><name pos:line="45" pos:column="51">string<pos:position pos:line="45" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="45" pos:column="59"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="46" pos:column="3">auto<pos:position pos:line="46" pos:column="7"/></name></type> <name pos:line="46" pos:column="8">addr<pos:position pos:line="46" pos:column="12"/></name> <init pos:line="46" pos:column="13">= <expr><name pos:line="46" pos:column="15">node<pos:position pos:line="46" pos:column="19"/></name> <operator pos:line="46" pos:column="20">+<pos:position pos:line="46" pos:column="21"/></operator> <literal type="string" pos:line="46" pos:column="22">":"<pos:position pos:line="46" pos:column="25"/></literal> <operator pos:line="46" pos:column="26">+<pos:position pos:line="46" pos:column="27"/></operator> <name pos:line="46" pos:column="28">service<pos:position pos:line="46" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="46" pos:column="36"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="48" pos:column="3">CollectdClient<pos:position pos:line="48" pos:column="17"/></name> <modifier pos:line="48" pos:column="18">*<pos:position pos:line="48" pos:column="19"/></modifier></type><name pos:line="48" pos:column="19">client<pos:position pos:line="48" pos:column="25"/></name></decl>;<pos:position pos:line="48" pos:column="26"/></decl_stmt>
  <if pos:line="49" pos:column="3">if <condition pos:line="49" pos:column="6">(<expr><name pos:line="49" pos:column="7">use_ssl<pos:position pos:line="49" pos:column="14"/></name></expr>)<pos:position pos:line="49" pos:column="15"/></condition><then pos:line="49" pos:column="15"> <block pos:line="49" pos:column="16">{
    <decl_stmt><decl><type><name pos:line="50" pos:column="5">auto<pos:position pos:line="50" pos:column="9"/></name></type> <name pos:line="50" pos:column="10">channel_creds<pos:position pos:line="50" pos:column="23"/></name> <init pos:line="50" pos:column="24">= <expr><call><name><name pos:line="50" pos:column="26">grpc<pos:position pos:line="50" pos:column="30"/></name><operator pos:line="50" pos:column="30">::<pos:position pos:line="50" pos:column="32"/></operator><name pos:line="50" pos:column="32">SslCredentials<pos:position pos:line="50" pos:column="46"/></name></name><argument_list pos:line="50" pos:column="46">(<argument><expr><name pos:line="50" pos:column="47">ssl_opts<pos:position pos:line="50" pos:column="55"/></name></expr></argument>)<pos:position pos:line="50" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="50" pos:column="57"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="51" pos:column="5">auto<pos:position pos:line="51" pos:column="9"/></name></type> <name pos:line="51" pos:column="10">channel<pos:position pos:line="51" pos:column="17"/></name> <init pos:line="51" pos:column="18">= <expr><call><name><name pos:line="51" pos:column="20">grpc<pos:position pos:line="51" pos:column="24"/></name><operator pos:line="51" pos:column="24">::<pos:position pos:line="51" pos:column="26"/></operator><name pos:line="51" pos:column="26">CreateChannel<pos:position pos:line="51" pos:column="39"/></name></name><argument_list pos:line="51" pos:column="39">(<argument><expr><name pos:line="51" pos:column="40">addr<pos:position pos:line="51" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="46">channel_creds<pos:position pos:line="51" pos:column="59"/></name></expr></argument>)<pos:position pos:line="51" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="51" pos:column="61"/></decl_stmt>
    <expr_stmt><expr><name pos:line="52" pos:column="5">client<pos:position pos:line="52" pos:column="11"/></name> <operator pos:line="52" pos:column="12">=<pos:position pos:line="52" pos:column="13"/></operator> <operator pos:line="52" pos:column="14">new<pos:position pos:line="52" pos:column="17"/></operator> <call><name pos:line="52" pos:column="18">CollectdClient<pos:position pos:line="52" pos:column="32"/></name><argument_list pos:line="52" pos:column="32">(<argument><expr><name pos:line="52" pos:column="33">channel<pos:position pos:line="52" pos:column="40"/></name></expr></argument>)<pos:position pos:line="52" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="42"/></expr_stmt>
  }<pos:position pos:line="53" pos:column="4"/></block></then> <else pos:line="53" pos:column="5">else <block pos:line="53" pos:column="10">{
    <decl_stmt><decl><type><name pos:line="54" pos:column="5">auto<pos:position pos:line="54" pos:column="9"/></name></type> <name pos:line="54" pos:column="10">channel<pos:position pos:line="54" pos:column="17"/></name> <init pos:line="54" pos:column="18">=
        <expr><call><name><name pos:line="55" pos:column="9">grpc<pos:position pos:line="55" pos:column="13"/></name><operator pos:line="55" pos:column="13">::<pos:position pos:line="55" pos:column="15"/></operator><name pos:line="55" pos:column="15">CreateChannel<pos:position pos:line="55" pos:column="28"/></name></name><argument_list pos:line="55" pos:column="28">(<argument><expr><name pos:line="55" pos:column="29">addr<pos:position pos:line="55" pos:column="33"/></name></expr></argument>, <argument><expr><call><name><name pos:line="55" pos:column="35">grpc<pos:position pos:line="55" pos:column="39"/></name><operator pos:line="55" pos:column="39">::<pos:position pos:line="55" pos:column="41"/></operator><name pos:line="55" pos:column="41">InsecureChannelCredentials<pos:position pos:line="55" pos:column="67"/></name></name><argument_list pos:line="55" pos:column="67">()<pos:position pos:line="55" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="55" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="55" pos:column="71"/></decl_stmt>
    <expr_stmt><expr><name pos:line="56" pos:column="5">client<pos:position pos:line="56" pos:column="11"/></name> <operator pos:line="56" pos:column="12">=<pos:position pos:line="56" pos:column="13"/></operator> <operator pos:line="56" pos:column="14">new<pos:position pos:line="56" pos:column="17"/></operator> <call><name pos:line="56" pos:column="18">CollectdClient<pos:position pos:line="56" pos:column="32"/></name><argument_list pos:line="56" pos:column="32">(<argument><expr><name pos:line="56" pos:column="33">channel<pos:position pos:line="56" pos:column="40"/></name></expr></argument>)<pos:position pos:line="56" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="42"/></expr_stmt>
  }<pos:position pos:line="57" pos:column="4"/></block></else></if>

  <decl_stmt><decl><type><name pos:line="59" pos:column="3">auto<pos:position pos:line="59" pos:column="7"/></name></type> <name pos:line="59" pos:column="8">callback_name<pos:position pos:line="59" pos:column="21"/></name> <init pos:line="59" pos:column="22">= <expr><call><name><name pos:line="59" pos:column="24">grpc<pos:position pos:line="59" pos:column="28"/></name><operator pos:line="59" pos:column="28">::<pos:position pos:line="59" pos:column="30"/></operator><name pos:line="59" pos:column="30">string<pos:position pos:line="59" pos:column="36"/></name></name><argument_list pos:line="59" pos:column="36">(<argument><expr><literal type="string" pos:line="59" pos:column="37">"grpc/"<pos:position pos:line="59" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="45"/></argument_list></call> <operator pos:line="59" pos:column="46">+<pos:position pos:line="59" pos:column="47"/></operator> <name pos:line="59" pos:column="48">addr<pos:position pos:line="59" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="59" pos:column="53"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="60" pos:column="3">user_data_t<pos:position pos:line="60" pos:column="14"/></name></type> <name pos:line="60" pos:column="15">ud<pos:position pos:line="60" pos:column="17"/></name> <init pos:line="60" pos:column="18">= <expr><block pos:line="60" pos:column="20">{
      <expr><operator pos:line="61" pos:column="7">.<pos:position pos:line="61" pos:column="8"/></operator><name pos:line="61" pos:column="8">data<pos:position pos:line="61" pos:column="12"/></name> <operator pos:line="61" pos:column="13">=<pos:position pos:line="61" pos:column="14"/></operator> <name pos:line="61" pos:column="15">client<pos:position pos:line="61" pos:column="21"/></name></expr>, <expr><operator pos:line="61" pos:column="23">.<pos:position pos:line="61" pos:column="24"/></operator><name pos:line="61" pos:column="24">free_func<pos:position pos:line="61" pos:column="33"/></name> <operator pos:line="61" pos:column="34">=<pos:position pos:line="61" pos:column="35"/></operator> <name pos:line="61" pos:column="36">c_grpc_destroy_write_callback<pos:position pos:line="61" pos:column="65"/></name></expr>,
  }<pos:position pos:line="62" pos:column="4"/></block></expr></init></decl>;<pos:position pos:line="62" pos:column="5"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="64" pos:column="3">plugin_register_write<pos:position pos:line="64" pos:column="24"/></name><argument_list pos:line="64" pos:column="24">(<argument><expr><call><name><name pos:line="64" pos:column="25">callback_name<pos:position pos:line="64" pos:column="38"/></name><operator pos:line="64" pos:column="38">.<pos:position pos:line="64" pos:column="39"/></operator><name pos:line="64" pos:column="39">c_str<pos:position pos:line="64" pos:column="44"/></name></name><argument_list pos:line="64" pos:column="44">()<pos:position pos:line="64" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="64" pos:column="48">c_grpc_write<pos:position pos:line="64" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="62">&amp;<pos:position pos:line="64" pos:column="67"/></operator><name pos:line="64" pos:column="63">ud<pos:position pos:line="64" pos:column="65"/></name></expr></argument>)<pos:position pos:line="64" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="67"/></expr_stmt>
  <return pos:line="65" pos:column="3">return <expr><literal type="number" pos:line="65" pos:column="10">0<pos:position pos:line="65" pos:column="11"/></literal></expr>;<pos:position pos:line="65" pos:column="12"/></return>
}<pos:position pos:line="66" pos:column="2"/></block></function></unit>

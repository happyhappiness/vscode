<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2751_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">do_loop<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">void<pos:position pos:line="1" pos:column="24"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="25"/></parameter_list> <block pos:line="1" pos:column="26">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">cdtime_t<pos:position pos:line="2" pos:column="11"/></name></type> <name pos:line="2" pos:column="12">interval<pos:position pos:line="2" pos:column="20"/></name> <init pos:line="2" pos:column="21">= <expr><call><name pos:line="2" pos:column="23">cf_get_default_interval<pos:position pos:line="2" pos:column="46"/></name><argument_list pos:line="2" pos:column="46">()<pos:position pos:line="2" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="2" pos:column="49"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">cdtime_t<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">wait_until<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>

  <expr_stmt><expr><name pos:line="5" pos:column="3">wait_until<pos:position pos:line="5" pos:column="13"/></name> <operator pos:line="5" pos:column="14">=<pos:position pos:line="5" pos:column="15"/></operator> <call><name pos:line="5" pos:column="16">cdtime<pos:position pos:line="5" pos:column="22"/></name><argument_list pos:line="5" pos:column="22">()<pos:position pos:line="5" pos:column="24"/></argument_list></call> <operator pos:line="5" pos:column="25">+<pos:position pos:line="5" pos:column="26"/></operator> <name pos:line="5" pos:column="27">interval<pos:position pos:line="5" pos:column="35"/></name></expr>;<pos:position pos:line="5" pos:column="36"/></expr_stmt>

  <while pos:line="7" pos:column="3">while <condition pos:line="7" pos:column="9">(<expr><name pos:line="7" pos:column="10">loop<pos:position pos:line="7" pos:column="14"/></name> <operator pos:line="7" pos:column="15">==<pos:position pos:line="7" pos:column="17"/></operator> <literal type="number" pos:line="7" pos:column="18">0<pos:position pos:line="7" pos:column="19"/></literal></expr>)<pos:position pos:line="7" pos:column="20"/></condition> <block pos:line="7" pos:column="21">{
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">cdtime_t<pos:position pos:line="8" pos:column="13"/></name></type> <name pos:line="8" pos:column="14">now<pos:position pos:line="8" pos:column="17"/></name></decl>;<pos:position pos:line="8" pos:column="18"/></decl_stmt>

<cpp:if pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">if<pos:position pos:line="10" pos:column="4"/></cpp:directive> <expr><name pos:line="10" pos:column="5">HAVE_LIBKSTAT<pos:position pos:line="10" pos:column="18"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">update_kstat<pos:position pos:line="11" pos:column="17"/></name><argument_list pos:line="11" pos:column="17">()<pos:position pos:line="11" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="20"/></expr_stmt>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="14" pos:column="5">/* Issue all plugins */</comment>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">plugin_read_all<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">()<pos:position pos:line="15" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><name pos:line="17" pos:column="5">now<pos:position pos:line="17" pos:column="8"/></name> <operator pos:line="17" pos:column="9">=<pos:position pos:line="17" pos:column="10"/></operator> <call><name pos:line="17" pos:column="11">cdtime<pos:position pos:line="17" pos:column="17"/></name><argument_list pos:line="17" pos:column="17">()<pos:position pos:line="17" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="20"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">now<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">&gt;=<pos:position pos:line="18" pos:column="18"/></operator> <name pos:line="18" pos:column="16">wait_until<pos:position pos:line="18" pos:column="26"/></name></expr>)<pos:position pos:line="18" pos:column="27"/></condition><then pos:line="18" pos:column="27"> <block pos:line="18" pos:column="28">{
      <expr_stmt><expr><call><name pos:line="19" pos:column="7">WARNING<pos:position pos:line="19" pos:column="14"/></name><argument_list pos:line="19" pos:column="14">(<argument><expr><literal type="string" pos:line="19" pos:column="15">"Not sleeping because the next interval is "<pos:position pos:line="19" pos:column="59"/></literal>
              <literal type="string" pos:line="20" pos:column="15">"%.3f seconds in the past!"<pos:position pos:line="20" pos:column="42"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="21" pos:column="15">CDTIME_T_TO_DOUBLE<pos:position pos:line="21" pos:column="33"/></name><argument_list pos:line="21" pos:column="33">(<argument><expr><name pos:line="21" pos:column="34">now<pos:position pos:line="21" pos:column="37"/></name> <operator pos:line="21" pos:column="38">-<pos:position pos:line="21" pos:column="39"/></operator> <name pos:line="21" pos:column="40">wait_until<pos:position pos:line="21" pos:column="50"/></name></expr></argument>)<pos:position pos:line="21" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="53"/></expr_stmt>
      <expr_stmt><expr><name pos:line="22" pos:column="7">wait_until<pos:position pos:line="22" pos:column="17"/></name> <operator pos:line="22" pos:column="18">=<pos:position pos:line="22" pos:column="19"/></operator> <name pos:line="22" pos:column="20">now<pos:position pos:line="22" pos:column="23"/></name> <operator pos:line="22" pos:column="24">+<pos:position pos:line="22" pos:column="25"/></operator> <name pos:line="22" pos:column="26">interval<pos:position pos:line="22" pos:column="34"/></name></expr>;<pos:position pos:line="22" pos:column="35"/></expr_stmt>
      <continue pos:line="23" pos:column="7">continue;<pos:position pos:line="23" pos:column="16"/></continue>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name><name pos:line="26" pos:column="5">struct<pos:position pos:line="26" pos:column="11"/></name> <name pos:line="26" pos:column="12">timespec<pos:position pos:line="26" pos:column="20"/></name></name></type> <name pos:line="26" pos:column="21">ts_wait<pos:position pos:line="26" pos:column="28"/></name> <init pos:line="26" pos:column="29">= <expr><call><name pos:line="26" pos:column="31">CDTIME_T_TO_TIMESPEC<pos:position pos:line="26" pos:column="51"/></name><argument_list pos:line="26" pos:column="51">(<argument><expr><name pos:line="26" pos:column="52">wait_until<pos:position pos:line="26" pos:column="62"/></name> <operator pos:line="26" pos:column="63">-<pos:position pos:line="26" pos:column="64"/></operator> <name pos:line="26" pos:column="65">now<pos:position pos:line="26" pos:column="68"/></name></expr></argument>)<pos:position pos:line="26" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="26" pos:column="70"/></decl_stmt>
    <expr_stmt><expr><name pos:line="27" pos:column="5">wait_until<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <name pos:line="27" pos:column="18">wait_until<pos:position pos:line="27" pos:column="28"/></name> <operator pos:line="27" pos:column="29">+<pos:position pos:line="27" pos:column="30"/></operator> <name pos:line="27" pos:column="31">interval<pos:position pos:line="27" pos:column="39"/></name></expr>;<pos:position pos:line="27" pos:column="40"/></expr_stmt>

    <while pos:line="29" pos:column="5">while <condition pos:line="29" pos:column="11">(<expr><operator pos:line="29" pos:column="12">(<pos:position pos:line="29" pos:column="13"/></operator><name pos:line="29" pos:column="13">loop<pos:position pos:line="29" pos:column="17"/></name> <operator pos:line="29" pos:column="18">==<pos:position pos:line="29" pos:column="20"/></operator> <literal type="number" pos:line="29" pos:column="21">0<pos:position pos:line="29" pos:column="22"/></literal><operator pos:line="29" pos:column="22">)<pos:position pos:line="29" pos:column="23"/></operator> <operator pos:line="29" pos:column="24">&amp;&amp;<pos:position pos:line="29" pos:column="34"/></operator> <operator pos:line="29" pos:column="27">(<pos:position pos:line="29" pos:column="28"/></operator><call><name pos:line="29" pos:column="28">nanosleep<pos:position pos:line="29" pos:column="37"/></name><argument_list pos:line="29" pos:column="37">(<argument><expr><operator pos:line="29" pos:column="38">&amp;<pos:position pos:line="29" pos:column="43"/></operator><name pos:line="29" pos:column="39">ts_wait<pos:position pos:line="29" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="48">&amp;<pos:position pos:line="29" pos:column="53"/></operator><name pos:line="29" pos:column="49">ts_wait<pos:position pos:line="29" pos:column="56"/></name></expr></argument>)<pos:position pos:line="29" pos:column="57"/></argument_list></call> <operator pos:line="29" pos:column="58">!=<pos:position pos:line="29" pos:column="60"/></operator> <literal type="number" pos:line="29" pos:column="61">0<pos:position pos:line="29" pos:column="62"/></literal><operator pos:line="29" pos:column="62">)<pos:position pos:line="29" pos:column="63"/></operator></expr>)<pos:position pos:line="29" pos:column="64"/></condition> <block pos:line="29" pos:column="65">{
      <if pos:line="30" pos:column="7">if <condition pos:line="30" pos:column="10">(<expr><name pos:line="30" pos:column="11">errno<pos:position pos:line="30" pos:column="16"/></name> <operator pos:line="30" pos:column="17">!=<pos:position pos:line="30" pos:column="19"/></operator> <name pos:line="30" pos:column="20">EINTR<pos:position pos:line="30" pos:column="25"/></name></expr>)<pos:position pos:line="30" pos:column="26"/></condition><then pos:line="30" pos:column="26"> <block pos:line="30" pos:column="27">{
        <decl_stmt><decl><type><name pos:line="31" pos:column="9">char<pos:position pos:line="31" pos:column="13"/></name></type> <name><name pos:line="31" pos:column="14">errbuf<pos:position pos:line="31" pos:column="20"/></name><index pos:line="31" pos:column="20">[<expr><literal type="number" pos:line="31" pos:column="21">1024<pos:position pos:line="31" pos:column="25"/></literal></expr>]<pos:position pos:line="31" pos:column="26"/></index></name></decl>;<pos:position pos:line="31" pos:column="27"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">ERROR<pos:position pos:line="32" pos:column="14"/></name><argument_list pos:line="32" pos:column="14">(<argument><expr><literal type="string" pos:line="32" pos:column="15">"nanosleep failed: %s"<pos:position pos:line="32" pos:column="37"/></literal></expr></argument>, <argument><expr><call><name pos:line="32" pos:column="39">sstrerror<pos:position pos:line="32" pos:column="48"/></name><argument_list pos:line="32" pos:column="48">(<argument><expr><name pos:line="32" pos:column="49">errno<pos:position pos:line="32" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="56">errbuf<pos:position pos:line="32" pos:column="62"/></name></expr></argument>, <argument><expr><sizeof pos:line="32" pos:column="64">sizeof<argument_list pos:line="32" pos:column="70">(<argument><expr><name pos:line="32" pos:column="71">errbuf<pos:position pos:line="32" pos:column="77"/></name></expr></argument>)<pos:position pos:line="32" pos:column="78"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="32" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="81"/></expr_stmt>
        <return pos:line="33" pos:column="9">return <expr><operator pos:line="33" pos:column="16">-<pos:position pos:line="33" pos:column="17"/></operator><literal type="number" pos:line="33" pos:column="17">1<pos:position pos:line="33" pos:column="18"/></literal></expr>;<pos:position pos:line="33" pos:column="19"/></return>
      }<pos:position pos:line="34" pos:column="8"/></block></then></if>
    }<pos:position pos:line="35" pos:column="6"/></block></while>
  }<pos:position pos:line="36" pos:column="4"/></block></while> <comment type="block" pos:line="36" pos:column="5">/* while (loop == 0) */</comment>

  <return pos:line="38" pos:column="3">return <expr><literal type="number" pos:line="38" pos:column="10">0<pos:position pos:line="38" pos:column="11"/></literal></expr>;<pos:position pos:line="38" pos:column="12"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_143_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">add_symlist<pos:position pos:line="2" pos:column="12"/></name> <parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><specifier pos:line="2" pos:column="14">const<pos:position pos:line="2" pos:column="19"/></specifier> <name pos:line="2" pos:column="20">lt_dlsymlist<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">symlist<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="42"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">symlist_chain<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">lists<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type>		 <name pos:line="5" pos:column="18">errors<pos:position pos:line="5" pos:column="24"/></name>   <init pos:line="5" pos:column="27">= <expr><literal type="number" pos:line="5" pos:column="29">0<pos:position pos:line="5" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>

  <comment type="block" pos:line="7" pos:column="3">/* Search for duplicate entries:  */</comment>
  <for pos:line="8" pos:column="3">for <control pos:line="8" pos:column="7">(<init><expr><name pos:line="8" pos:column="8">lists<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator> <name pos:line="8" pos:column="16">preloaded_symlists<pos:position pos:line="8" pos:column="34"/></name></expr>;<pos:position pos:line="8" pos:column="35"/></init>
       <condition><expr><name pos:line="9" pos:column="8">lists<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">&amp;&amp;<pos:position pos:line="9" pos:column="24"/></operator> <name><name pos:line="9" pos:column="17">lists<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">-&gt;<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="24">symlist<pos:position pos:line="9" pos:column="31"/></name></name> <operator pos:line="9" pos:column="32">!=<pos:position pos:line="9" pos:column="34"/></operator> <name pos:line="9" pos:column="35">symlist<pos:position pos:line="9" pos:column="42"/></name></expr>;<pos:position pos:line="9" pos:column="43"/></condition> <incr><expr><name pos:line="9" pos:column="44">lists<pos:position pos:line="9" pos:column="49"/></name> <operator pos:line="9" pos:column="50">=<pos:position pos:line="9" pos:column="51"/></operator> <name><name pos:line="9" pos:column="52">lists<pos:position pos:line="9" pos:column="57"/></name><operator pos:line="9" pos:column="57">-&gt;<pos:position pos:line="9" pos:column="62"/></operator><name pos:line="9" pos:column="59">next<pos:position pos:line="9" pos:column="63"/></name></name></expr></incr>)<pos:position pos:line="9" pos:column="64"/></control>
    <comment type="block" pos:line="10" pos:column="5">/*NOWORK*/</comment><block type="pseudo"><empty_stmt pos:line="10" pos:column="15">;<pos:position pos:line="10" pos:column="16"/></empty_stmt></block></for>

  <comment type="block" pos:line="12" pos:column="3">/* Don't add the same list twice:  */</comment>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><operator pos:line="13" pos:column="7">!<pos:position pos:line="13" pos:column="8"/></operator><name pos:line="13" pos:column="8">lists<pos:position pos:line="13" pos:column="13"/></name></expr>)<pos:position pos:line="13" pos:column="14"/></condition><then pos:line="13" pos:column="14">
    <block pos:line="14" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="15" pos:column="7">symlist_chain<pos:position pos:line="15" pos:column="20"/></name> <modifier pos:line="15" pos:column="21">*<pos:position pos:line="15" pos:column="22"/></modifier></type><name pos:line="15" pos:column="22">tmp<pos:position pos:line="15" pos:column="25"/></name> <init pos:line="15" pos:column="26">= <expr><operator pos:line="15" pos:column="28">(<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="29">symlist_chain<pos:position pos:line="15" pos:column="42"/></name> <operator pos:line="15" pos:column="43">*<pos:position pos:line="15" pos:column="44"/></operator><operator pos:line="15" pos:column="44">)<pos:position pos:line="15" pos:column="45"/></operator> <call><name pos:line="15" pos:column="46">lt__zalloc<pos:position pos:line="15" pos:column="56"/></name> <argument_list pos:line="15" pos:column="57">(<argument><expr><sizeof pos:line="15" pos:column="58">sizeof <name><pos:position pos:line="15" pos:column="65"/></name></sizeof>*<name pos:line="15" pos:column="66">tmp<pos:position pos:line="15" pos:column="69"/></name></expr></argument>)<pos:position pos:line="15" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="71"/></decl_stmt>

      <if pos:line="17" pos:column="7">if <condition pos:line="17" pos:column="10">(<expr><name pos:line="17" pos:column="11">tmp<pos:position pos:line="17" pos:column="14"/></name></expr>)<pos:position pos:line="17" pos:column="15"/></condition><then pos:line="17" pos:column="15">
	<block pos:line="18" pos:column="9">{
	  <expr_stmt><expr><name><name pos:line="19" pos:column="11">tmp<pos:position pos:line="19" pos:column="14"/></name><operator pos:line="19" pos:column="14">-&gt;<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="16">symlist<pos:position pos:line="19" pos:column="23"/></name></name> <operator pos:line="19" pos:column="24">=<pos:position pos:line="19" pos:column="25"/></operator> <name pos:line="19" pos:column="26">symlist<pos:position pos:line="19" pos:column="33"/></name></expr>;<pos:position pos:line="19" pos:column="34"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="20" pos:column="11">tmp<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">-&gt;<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="16">next<pos:position pos:line="20" pos:column="20"/></name></name> <operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator> <name pos:line="20" pos:column="23">preloaded_symlists<pos:position pos:line="20" pos:column="41"/></name></expr>;<pos:position pos:line="20" pos:column="42"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="21" pos:column="11">preloaded_symlists<pos:position pos:line="21" pos:column="29"/></name> <operator pos:line="21" pos:column="30">=<pos:position pos:line="21" pos:column="31"/></operator> <name pos:line="21" pos:column="32">tmp<pos:position pos:line="21" pos:column="35"/></name></expr>;<pos:position pos:line="21" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="22" pos:column="10"/></block></then>
      <else pos:line="23" pos:column="7">else
	<block pos:line="24" pos:column="9">{
	  <expr_stmt><expr><operator pos:line="25" pos:column="11">++<pos:position pos:line="25" pos:column="13"/></operator><name pos:line="25" pos:column="13">errors<pos:position pos:line="25" pos:column="19"/></name></expr>;<pos:position pos:line="25" pos:column="20"/></expr_stmt>
	}<pos:position pos:line="26" pos:column="10"/></block></else></if>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

  <return pos:line="29" pos:column="3">return <expr><name pos:line="29" pos:column="10">errors<pos:position pos:line="29" pos:column="16"/></name></expr>;<pos:position pos:line="29" pos:column="17"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

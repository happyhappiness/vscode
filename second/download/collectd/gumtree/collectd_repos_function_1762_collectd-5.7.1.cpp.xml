<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1762_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">traverse_json<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">unsigned<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">char<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">json<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">uint32_t<pos:position pos:line="1" pos:column="61"/></name></type> <name pos:line="1" pos:column="62">json_len<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>,
                         <parameter><decl><type><name pos:line="2" pos:column="26">yajl_handle<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">hand<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="43"/></parameter_list> <block pos:line="2" pos:column="44">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">yajl_status<pos:position pos:line="3" pos:column="14"/></name></type> <name pos:line="3" pos:column="15">status<pos:position pos:line="3" pos:column="21"/></name> <init pos:line="3" pos:column="22">= <expr><call><name pos:line="3" pos:column="24">yajl_parse<pos:position pos:line="3" pos:column="34"/></name><argument_list pos:line="3" pos:column="34">(<argument><expr><name pos:line="3" pos:column="35">hand<pos:position pos:line="3" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="41">json<pos:position pos:line="3" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="47">json_len<pos:position pos:line="3" pos:column="55"/></name></expr></argument>)<pos:position pos:line="3" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="57"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">unsigned<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">char<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">msg<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>

  <switch pos:line="6" pos:column="3">switch <condition pos:line="6" pos:column="10">(<expr><name pos:line="6" pos:column="11">status<pos:position pos:line="6" pos:column="17"/></name></expr>)<pos:position pos:line="6" pos:column="18"/></condition> <block pos:line="6" pos:column="19">{
  <case pos:line="7" pos:column="3">case <expr><name pos:line="7" pos:column="8">yajl_status_error<pos:position pos:line="7" pos:column="25"/></name></expr>:<pos:position pos:line="7" pos:column="26"/></case>
    <expr_stmt><expr><name pos:line="8" pos:column="5">msg<pos:position pos:line="8" pos:column="8"/></name> <operator pos:line="8" pos:column="9">=<pos:position pos:line="8" pos:column="10"/></operator> <call><name pos:line="8" pos:column="11">yajl_get_error<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><name pos:line="8" pos:column="26">hand<pos:position pos:line="8" pos:column="30"/></name></expr></argument>, <comment type="block" pos:line="8" pos:column="32">/* verbose = */</comment> <argument><expr><literal type="number" pos:line="8" pos:column="48">1<pos:position pos:line="8" pos:column="49"/></literal></expr></argument>,
                         <comment type="block" pos:line="9" pos:column="26">/* jsonText = */</comment> <argument><expr><operator pos:line="9" pos:column="43">(<pos:position pos:line="9" pos:column="44"/></operator><name pos:line="9" pos:column="44">unsigned<pos:position pos:line="9" pos:column="52"/></name> <name pos:line="9" pos:column="53">char<pos:position pos:line="9" pos:column="57"/></name> <operator pos:line="9" pos:column="58">*<pos:position pos:line="9" pos:column="59"/></operator><operator pos:line="9" pos:column="59">)<pos:position pos:line="9" pos:column="60"/></operator><name pos:line="9" pos:column="60">json<pos:position pos:line="9" pos:column="64"/></name></expr></argument>,
                         <argument><expr><operator pos:line="10" pos:column="26">(<pos:position pos:line="10" pos:column="27"/></operator><name pos:line="10" pos:column="27">unsigned<pos:position pos:line="10" pos:column="35"/></name> <name pos:line="10" pos:column="36">int<pos:position pos:line="10" pos:column="39"/></name><operator pos:line="10" pos:column="39">)<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="40">json_len<pos:position pos:line="10" pos:column="48"/></name></expr></argument>)<pos:position pos:line="10" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">ERROR<pos:position pos:line="11" pos:column="10"/></name><argument_list pos:line="11" pos:column="10">(<argument><expr><literal type="string" pos:line="11" pos:column="11">"ceph plugin: yajl_parse failed: %s"<pos:position pos:line="11" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="49">msg<pos:position pos:line="11" pos:column="52"/></name></expr></argument>)<pos:position pos:line="11" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">yajl_free_error<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><name pos:line="12" pos:column="21">hand<pos:position pos:line="12" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="27">msg<pos:position pos:line="12" pos:column="30"/></name></expr></argument>)<pos:position pos:line="12" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="32"/></expr_stmt>
    <return pos:line="13" pos:column="5">return <expr><literal type="number" pos:line="13" pos:column="12">1<pos:position pos:line="13" pos:column="13"/></literal></expr>;<pos:position pos:line="13" pos:column="14"/></return>
  <case pos:line="14" pos:column="3">case <expr><name pos:line="14" pos:column="8">yajl_status_client_canceled<pos:position pos:line="14" pos:column="35"/></name></expr>:<pos:position pos:line="14" pos:column="36"/></case>
    <return pos:line="15" pos:column="5">return <expr><literal type="number" pos:line="15" pos:column="12">1<pos:position pos:line="15" pos:column="13"/></literal></expr>;<pos:position pos:line="15" pos:column="14"/></return>
  <default pos:line="16" pos:column="3">default:<pos:position pos:line="16" pos:column="11"/></default>
    <return pos:line="17" pos:column="5">return <expr><literal type="number" pos:line="17" pos:column="12">0<pos:position pos:line="17" pos:column="13"/></literal></expr>;<pos:position pos:line="17" pos:column="14"/></return>
  }<pos:position pos:line="18" pos:column="4"/></block></switch>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

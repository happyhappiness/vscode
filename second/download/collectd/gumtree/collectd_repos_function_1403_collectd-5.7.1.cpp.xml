<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1403_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">za_read_gauge<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">kstat_t<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">ksp<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="40">const<pos:position pos:line="1" pos:column="45"/></specifier> <name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">kstat_value<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
                         <parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name pos:line="2" pos:column="32">char<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">type<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="44">const<pos:position pos:line="2" pos:column="49"/></specifier> <name pos:line="2" pos:column="50">char<pos:position pos:line="2" pos:column="54"/></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="56">type_instance<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="70"/></parameter_list> <block pos:line="2" pos:column="71">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">long<pos:position pos:line="3" pos:column="7"/></name> <name pos:line="3" pos:column="8">long<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">tmp<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><call><name pos:line="3" pos:column="19">get_zfs_value<pos:position pos:line="3" pos:column="32"/></name><argument_list pos:line="3" pos:column="32">(<argument><expr><name pos:line="3" pos:column="33">ksp<pos:position pos:line="3" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="3" pos:column="38">(<pos:position pos:line="3" pos:column="39"/></operator><name pos:line="3" pos:column="39">char<pos:position pos:line="3" pos:column="43"/></name> <operator pos:line="3" pos:column="44">*<pos:position pos:line="3" pos:column="45"/></operator><operator pos:line="3" pos:column="45">)<pos:position pos:line="3" pos:column="46"/></operator><name pos:line="3" pos:column="46">kstat_value<pos:position pos:line="3" pos:column="57"/></name></expr></argument>)<pos:position pos:line="3" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="59"/></decl_stmt>
  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><name pos:line="4" pos:column="7">tmp<pos:position pos:line="4" pos:column="10"/></name> <operator pos:line="4" pos:column="11">==<pos:position pos:line="4" pos:column="13"/></operator> <operator pos:line="4" pos:column="14">-<pos:position pos:line="4" pos:column="15"/></operator><literal type="number" pos:line="4" pos:column="15">1LL<pos:position pos:line="4" pos:column="18"/></literal></expr>)<pos:position pos:line="4" pos:column="19"/></condition><then pos:line="4" pos:column="19"> <block pos:line="4" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">WARNING<pos:position pos:line="5" pos:column="12"/></name><argument_list pos:line="5" pos:column="12">(<argument><expr><literal type="string" pos:line="5" pos:column="13">"zfs_arc plugin: Reading kstat value \"%s\" failed."<pos:position pos:line="5" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="67">kstat_value<pos:position pos:line="5" pos:column="78"/></name></expr></argument>)<pos:position pos:line="5" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="80"/></expr_stmt>
    <return pos:line="6" pos:column="5">return <expr><operator pos:line="6" pos:column="12">(<pos:position pos:line="6" pos:column="13"/></operator><operator pos:line="6" pos:column="13">-<pos:position pos:line="6" pos:column="14"/></operator><literal type="number" pos:line="6" pos:column="14">1<pos:position pos:line="6" pos:column="15"/></literal><operator pos:line="6" pos:column="15">)<pos:position pos:line="6" pos:column="16"/></operator></expr>;<pos:position pos:line="6" pos:column="17"/></return>
  }<pos:position pos:line="7" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="9" pos:column="3">za_submit<pos:position pos:line="9" pos:column="12"/></name><argument_list pos:line="9" pos:column="12">(<argument><expr><name pos:line="9" pos:column="13">type<pos:position pos:line="9" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="19">type_instance<pos:position pos:line="9" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="34">&amp;<pos:position pos:line="9" pos:column="39"/></operator><operator pos:line="9" pos:column="35">(<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="36">value_t<pos:position pos:line="9" pos:column="43"/></name><operator pos:line="9" pos:column="43">)<pos:position pos:line="9" pos:column="44"/></operator><block pos:line="9" pos:column="44">{<expr><operator pos:line="9" pos:column="45">.<pos:position pos:line="9" pos:column="46"/></operator><name pos:line="9" pos:column="46">gauge<pos:position pos:line="9" pos:column="51"/></name> <operator pos:line="9" pos:column="52">=<pos:position pos:line="9" pos:column="53"/></operator> <operator pos:line="9" pos:column="54">(<pos:position pos:line="9" pos:column="55"/></operator><name pos:line="9" pos:column="55">gauge_t<pos:position pos:line="9" pos:column="62"/></name><operator pos:line="9" pos:column="62">)<pos:position pos:line="9" pos:column="63"/></operator><name pos:line="9" pos:column="63">tmp<pos:position pos:line="9" pos:column="66"/></name></expr>}<pos:position pos:line="9" pos:column="67"/></block></expr></argument>,
            <comment type="block" pos:line="10" pos:column="13">/* values_num = */</comment> <argument><expr><literal type="number" pos:line="10" pos:column="32">1<pos:position pos:line="10" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="35"/></expr_stmt>
  <return pos:line="11" pos:column="3">return <expr><operator pos:line="11" pos:column="10">(<pos:position pos:line="11" pos:column="11"/></operator><literal type="number" pos:line="11" pos:column="11">0<pos:position pos:line="11" pos:column="12"/></literal><operator pos:line="11" pos:column="12">)<pos:position pos:line="11" pos:column="13"/></operator></expr>;<pos:position pos:line="11" pos:column="14"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

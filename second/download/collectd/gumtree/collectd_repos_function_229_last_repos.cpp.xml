<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_229_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cpu_states_alloc<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">size_t<pos:position pos:line="1" pos:column="35"/></name></type> <name pos:line="1" pos:column="36">cpu_num<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list> <comment type="block" pos:line="1" pos:column="45">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">cpu_state_t<pos:position pos:line="3" pos:column="14"/></name> <modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">tmp<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">sz<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">sz<pos:position pos:line="6" pos:column="5"/></name> <operator pos:line="6" pos:column="6">=<pos:position pos:line="6" pos:column="7"/></operator> <operator pos:line="6" pos:column="8">(<pos:position pos:line="6" pos:column="9"/></operator><operator pos:line="6" pos:column="9">(<pos:position pos:line="6" pos:column="10"/></operator><operator pos:line="6" pos:column="10">(<pos:position pos:line="6" pos:column="11"/></operator><name pos:line="6" pos:column="11">size_t<pos:position pos:line="6" pos:column="17"/></name><operator pos:line="6" pos:column="17">)<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="18">cpu_num<pos:position pos:line="6" pos:column="25"/></name><operator pos:line="6" pos:column="25">)<pos:position pos:line="6" pos:column="26"/></operator> <operator pos:line="6" pos:column="27">+<pos:position pos:line="6" pos:column="28"/></operator> <literal type="number" pos:line="6" pos:column="29">1<pos:position pos:line="6" pos:column="30"/></literal><operator pos:line="6" pos:column="30">)<pos:position pos:line="6" pos:column="31"/></operator> <operator pos:line="6" pos:column="32">*<pos:position pos:line="6" pos:column="33"/></operator> <name pos:line="6" pos:column="34">COLLECTD_CPU_STATE_MAX<pos:position pos:line="6" pos:column="56"/></name></expr>;<pos:position pos:line="6" pos:column="57"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">assert<pos:position pos:line="7" pos:column="9"/></name><argument_list pos:line="7" pos:column="9">(<argument><expr><name pos:line="7" pos:column="10">sz<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">&gt;<pos:position pos:line="7" pos:column="17"/></operator> <literal type="number" pos:line="7" pos:column="15">0<pos:position pos:line="7" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="18"/></expr_stmt>

  <comment type="block" pos:line="9" pos:column="3">/* We already have enough space. */</comment>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">cpu_states_num<pos:position pos:line="10" pos:column="21"/></name> <operator pos:line="10" pos:column="22">&gt;=<pos:position pos:line="10" pos:column="27"/></operator> <name pos:line="10" pos:column="25">sz<pos:position pos:line="10" pos:column="27"/></name></expr>)<pos:position pos:line="10" pos:column="28"/></condition><then pos:line="10" pos:column="28">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><literal type="number" pos:line="11" pos:column="12">0<pos:position pos:line="11" pos:column="13"/></literal></expr>;<pos:position pos:line="11" pos:column="14"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="13" pos:column="3">tmp<pos:position pos:line="13" pos:column="6"/></name> <operator pos:line="13" pos:column="7">=<pos:position pos:line="13" pos:column="8"/></operator> <call><name pos:line="13" pos:column="9">realloc<pos:position pos:line="13" pos:column="16"/></name><argument_list pos:line="13" pos:column="16">(<argument><expr><name pos:line="13" pos:column="17">cpu_states<pos:position pos:line="13" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="29">sz<pos:position pos:line="13" pos:column="31"/></name> <operator pos:line="13" pos:column="32">*<pos:position pos:line="13" pos:column="33"/></operator> <sizeof pos:line="13" pos:column="34">sizeof<argument_list pos:line="13" pos:column="40">(<argument><expr><operator pos:line="13" pos:column="41">*<pos:position pos:line="13" pos:column="42"/></operator><name pos:line="13" pos:column="42">cpu_states<pos:position pos:line="13" pos:column="52"/></name></expr></argument>)<pos:position pos:line="13" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="55"/></expr_stmt>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">tmp<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">==<pos:position pos:line="14" pos:column="13"/></operator> <name pos:line="14" pos:column="14">NULL<pos:position pos:line="14" pos:column="18"/></name></expr>)<pos:position pos:line="14" pos:column="19"/></condition><then pos:line="14" pos:column="19"> <block pos:line="14" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">ERROR<pos:position pos:line="15" pos:column="10"/></name><argument_list pos:line="15" pos:column="10">(<argument><expr><literal type="string" pos:line="15" pos:column="11">"cpu plugin: realloc failed."<pos:position pos:line="15" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="42"/></expr_stmt>
    <return pos:line="16" pos:column="5">return <expr><name pos:line="16" pos:column="12">ENOMEM<pos:position pos:line="16" pos:column="18"/></name></expr>;<pos:position pos:line="16" pos:column="19"/></return>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="18" pos:column="3">cpu_states<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <name pos:line="18" pos:column="16">tmp<pos:position pos:line="18" pos:column="19"/></name></expr>;<pos:position pos:line="18" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><name pos:line="19" pos:column="3">tmp<pos:position pos:line="19" pos:column="6"/></name> <operator pos:line="19" pos:column="7">=<pos:position pos:line="19" pos:column="8"/></operator> <name pos:line="19" pos:column="9">cpu_states<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">+<pos:position pos:line="19" pos:column="21"/></operator> <name pos:line="19" pos:column="22">cpu_states_num<pos:position pos:line="19" pos:column="36"/></name></expr>;<pos:position pos:line="19" pos:column="37"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="21" pos:column="3">memset<pos:position pos:line="21" pos:column="9"/></name><argument_list pos:line="21" pos:column="9">(<argument><expr><name pos:line="21" pos:column="10">tmp<pos:position pos:line="21" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="15">0<pos:position pos:line="21" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="21" pos:column="18">(<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="19">sz<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">-<pos:position pos:line="21" pos:column="23"/></operator> <name pos:line="21" pos:column="24">cpu_states_num<pos:position pos:line="21" pos:column="38"/></name><operator pos:line="21" pos:column="38">)<pos:position pos:line="21" pos:column="39"/></operator> <operator pos:line="21" pos:column="40">*<pos:position pos:line="21" pos:column="41"/></operator> <sizeof pos:line="21" pos:column="42">sizeof<argument_list pos:line="21" pos:column="48">(<argument><expr><operator pos:line="21" pos:column="49">*<pos:position pos:line="21" pos:column="50"/></operator><name pos:line="21" pos:column="50">cpu_states<pos:position pos:line="21" pos:column="60"/></name></expr></argument>)<pos:position pos:line="21" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="63"/></expr_stmt>
  <expr_stmt><expr><name pos:line="22" pos:column="3">cpu_states_num<pos:position pos:line="22" pos:column="17"/></name> <operator pos:line="22" pos:column="18">=<pos:position pos:line="22" pos:column="19"/></operator> <name pos:line="22" pos:column="20">sz<pos:position pos:line="22" pos:column="22"/></name></expr>;<pos:position pos:line="22" pos:column="23"/></expr_stmt>
  <return pos:line="23" pos:column="3">return <expr><literal type="number" pos:line="23" pos:column="10">0<pos:position pos:line="23" pos:column="11"/></literal></expr>;<pos:position pos:line="23" pos:column="12"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

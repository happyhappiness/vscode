<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1106_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">openvpn_read<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">user_data_t<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">user_data<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list> <block pos:line="1" pos:column="49">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">char<pos:position pos:line="2" pos:column="7"/></name></type> <name><name pos:line="2" pos:column="8">buffer<pos:position pos:line="2" pos:column="14"/></name><index pos:line="2" pos:column="14">[<expr><literal type="number" pos:line="2" pos:column="15">1024<pos:position pos:line="2" pos:column="19"/></literal></expr>]<pos:position pos:line="2" pos:column="20"/></index></name></decl>;<pos:position pos:line="2" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">read<pos:position pos:line="3" pos:column="11"/></name> <init pos:line="3" pos:column="12">= <expr><literal type="number" pos:line="3" pos:column="14">0<pos:position pos:line="3" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="5" pos:column="3">vpn_status_t<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">st<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><name><name pos:line="5" pos:column="22">user_data<pos:position pos:line="5" pos:column="31"/></name><operator pos:line="5" pos:column="31">-&gt;<pos:position pos:line="5" pos:column="36"/></operator><name pos:line="5" pos:column="33">data<pos:position pos:line="5" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="38"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="7" pos:column="3">FILE<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">fh<pos:position pos:line="7" pos:column="11"/></name> <init pos:line="7" pos:column="12">= <expr><call><name pos:line="7" pos:column="14">fopen<pos:position pos:line="7" pos:column="19"/></name><argument_list pos:line="7" pos:column="19">(<argument><expr><name><name pos:line="7" pos:column="20">st<pos:position pos:line="7" pos:column="22"/></name><operator pos:line="7" pos:column="22">-&gt;<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="24">file<pos:position pos:line="7" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="30">"r"<pos:position pos:line="7" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="34"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="35"/></decl_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">fh<pos:position pos:line="8" pos:column="9"/></name> <operator pos:line="8" pos:column="10">==<pos:position pos:line="8" pos:column="12"/></operator> <name pos:line="8" pos:column="13">NULL<pos:position pos:line="8" pos:column="17"/></name></expr>)<pos:position pos:line="8" pos:column="18"/></condition><then pos:line="8" pos:column="18"> <block pos:line="8" pos:column="19">{
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name></type> <name><name pos:line="9" pos:column="10">errbuf<pos:position pos:line="9" pos:column="16"/></name><index pos:line="9" pos:column="16">[<expr><literal type="number" pos:line="9" pos:column="17">1024<pos:position pos:line="9" pos:column="21"/></literal></expr>]<pos:position pos:line="9" pos:column="22"/></index></name></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">WARNING<pos:position pos:line="10" pos:column="12"/></name><argument_list pos:line="10" pos:column="12">(<argument><expr><literal type="string" pos:line="10" pos:column="13">"openvpn plugin: fopen(%s) failed: %s"<pos:position pos:line="10" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="53">st<pos:position pos:line="10" pos:column="55"/></name><operator pos:line="10" pos:column="55">-&gt;<pos:position pos:line="10" pos:column="60"/></operator><name pos:line="10" pos:column="57">file<pos:position pos:line="10" pos:column="61"/></name></name></expr></argument>,
            <argument><expr><call><name pos:line="11" pos:column="13">sstrerror<pos:position pos:line="11" pos:column="22"/></name><argument_list pos:line="11" pos:column="22">(<argument><expr><name pos:line="11" pos:column="23">errno<pos:position pos:line="11" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="30">errbuf<pos:position pos:line="11" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="38">sizeof<argument_list pos:line="11" pos:column="44">(<argument><expr><name pos:line="11" pos:column="45">errbuf<pos:position pos:line="11" pos:column="51"/></name></expr></argument>)<pos:position pos:line="11" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="55"/></expr_stmt>

    <return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">-<pos:position pos:line="13" pos:column="13"/></operator><literal type="number" pos:line="13" pos:column="13">1<pos:position pos:line="13" pos:column="14"/></literal></expr>;<pos:position pos:line="13" pos:column="15"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <comment type="line" pos:line="16" pos:column="3">// Try to detect file format by its first line</comment>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><operator pos:line="17" pos:column="7">(<pos:position pos:line="17" pos:column="8"/></operator><call><name pos:line="17" pos:column="8">fgets<pos:position pos:line="17" pos:column="13"/></name><argument_list pos:line="17" pos:column="13">(<argument><expr><name pos:line="17" pos:column="14">buffer<pos:position pos:line="17" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="22">sizeof<argument_list pos:line="17" pos:column="28">(<argument><expr><name pos:line="17" pos:column="29">buffer<pos:position pos:line="17" pos:column="35"/></name></expr></argument>)<pos:position pos:line="17" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="17" pos:column="38">fh<pos:position pos:line="17" pos:column="40"/></name></expr></argument>)<pos:position pos:line="17" pos:column="41"/></argument_list></call><operator pos:line="17" pos:column="41">)<pos:position pos:line="17" pos:column="42"/></operator> <operator pos:line="17" pos:column="43">==<pos:position pos:line="17" pos:column="45"/></operator> <name pos:line="17" pos:column="46">NULL<pos:position pos:line="17" pos:column="50"/></name></expr>)<pos:position pos:line="17" pos:column="51"/></condition><then pos:line="17" pos:column="51"> <block pos:line="17" pos:column="52">{
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">WARNING<pos:position pos:line="18" pos:column="12"/></name><argument_list pos:line="18" pos:column="12">(<argument><expr><literal type="string" pos:line="18" pos:column="13">"openvpn plugin: failed to get data from: %s"<pos:position pos:line="18" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="60">st<pos:position pos:line="18" pos:column="62"/></name><operator pos:line="18" pos:column="62">-&gt;<pos:position pos:line="18" pos:column="67"/></operator><name pos:line="18" pos:column="64">file<pos:position pos:line="18" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="70"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">fclose<pos:position pos:line="19" pos:column="11"/></name><argument_list pos:line="19" pos:column="11">(<argument><expr><name pos:line="19" pos:column="12">fh<pos:position pos:line="19" pos:column="14"/></name></expr></argument>)<pos:position pos:line="19" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="16"/></expr_stmt>
    <return pos:line="20" pos:column="5">return <expr><operator pos:line="20" pos:column="12">-<pos:position pos:line="20" pos:column="13"/></operator><literal type="number" pos:line="20" pos:column="13">1<pos:position pos:line="20" pos:column="14"/></literal></expr>;<pos:position pos:line="20" pos:column="15"/></return>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>

  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><call><name pos:line="23" pos:column="7">strcmp<pos:position pos:line="23" pos:column="13"/></name><argument_list pos:line="23" pos:column="13">(<argument><expr><name pos:line="23" pos:column="14">buffer<pos:position pos:line="23" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="22">TITLE_SINGLE<pos:position pos:line="23" pos:column="34"/></name></expr></argument>)<pos:position pos:line="23" pos:column="35"/></argument_list></call> <operator pos:line="23" pos:column="36">==<pos:position pos:line="23" pos:column="38"/></operator> <literal type="number" pos:line="23" pos:column="39">0<pos:position pos:line="23" pos:column="40"/></literal></expr>)<pos:position pos:line="23" pos:column="41"/></condition><then pos:line="23" pos:column="41"> <block pos:line="23" pos:column="42">{ <comment type="line" pos:line="23" pos:column="44">// OpenVPN STATISTICS</comment>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">DEBUG<pos:position pos:line="24" pos:column="10"/></name><argument_list pos:line="24" pos:column="10">(<argument><expr><literal type="string" pos:line="24" pos:column="11">"openvpn plugin: found status file SINGLE"<pos:position pos:line="24" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><name pos:line="25" pos:column="5">read<pos:position pos:line="25" pos:column="9"/></name> <operator pos:line="25" pos:column="10">=<pos:position pos:line="25" pos:column="11"/></operator> <call><name pos:line="25" pos:column="12">single_read<pos:position pos:line="25" pos:column="23"/></name><argument_list pos:line="25" pos:column="23">(<argument><expr><name><name pos:line="25" pos:column="24">st<pos:position pos:line="25" pos:column="26"/></name><operator pos:line="25" pos:column="26">-&gt;<pos:position pos:line="25" pos:column="31"/></operator><name pos:line="25" pos:column="28">name<pos:position pos:line="25" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="34">fh<pos:position pos:line="25" pos:column="36"/></name></expr></argument>)<pos:position pos:line="25" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="38"/></expr_stmt>
  }<pos:position pos:line="26" pos:column="4"/></block></then> <elseif pos:line="26" pos:column="5">else <if pos:line="26" pos:column="10">if <condition pos:line="26" pos:column="13">(<expr><call><name pos:line="26" pos:column="14">strcmp<pos:position pos:line="26" pos:column="20"/></name><argument_list pos:line="26" pos:column="20">(<argument><expr><name pos:line="26" pos:column="21">buffer<pos:position pos:line="26" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="29">TITLE_V1<pos:position pos:line="26" pos:column="37"/></name></expr></argument>)<pos:position pos:line="26" pos:column="38"/></argument_list></call> <operator pos:line="26" pos:column="39">==<pos:position pos:line="26" pos:column="41"/></operator> <literal type="number" pos:line="26" pos:column="42">0<pos:position pos:line="26" pos:column="43"/></literal></expr>)<pos:position pos:line="26" pos:column="44"/></condition><then pos:line="26" pos:column="44"> <block pos:line="26" pos:column="45">{ <comment type="line" pos:line="26" pos:column="47">// OpenVPN CLIENT LIST</comment>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">DEBUG<pos:position pos:line="27" pos:column="10"/></name><argument_list pos:line="27" pos:column="10">(<argument><expr><literal type="string" pos:line="27" pos:column="11">"openvpn plugin: found status file MULTI version 1"<pos:position pos:line="27" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><name pos:line="28" pos:column="5">read<pos:position pos:line="28" pos:column="9"/></name> <operator pos:line="28" pos:column="10">=<pos:position pos:line="28" pos:column="11"/></operator> <call><name pos:line="28" pos:column="12">multi1_read<pos:position pos:line="28" pos:column="23"/></name><argument_list pos:line="28" pos:column="23">(<argument><expr><name><name pos:line="28" pos:column="24">st<pos:position pos:line="28" pos:column="26"/></name><operator pos:line="28" pos:column="26">-&gt;<pos:position pos:line="28" pos:column="31"/></operator><name pos:line="28" pos:column="28">name<pos:position pos:line="28" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="34">fh<pos:position pos:line="28" pos:column="36"/></name></expr></argument>)<pos:position pos:line="28" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="38"/></expr_stmt>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if></elseif> <elseif pos:line="29" pos:column="5">else <if pos:line="29" pos:column="10">if <condition pos:line="29" pos:column="13">(<expr><call><name pos:line="29" pos:column="14">strncmp<pos:position pos:line="29" pos:column="21"/></name><argument_list pos:line="29" pos:column="21">(<argument><expr><name pos:line="29" pos:column="22">buffer<pos:position pos:line="29" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="30">TITLE_V2<pos:position pos:line="29" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="29" pos:column="40">strlen<pos:position pos:line="29" pos:column="46"/></name><argument_list pos:line="29" pos:column="46">(<argument><expr><name pos:line="29" pos:column="47">TITLE_V2<pos:position pos:line="29" pos:column="55"/></name></expr></argument>)<pos:position pos:line="29" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="57"/></argument_list></call> <operator pos:line="29" pos:column="58">==<pos:position pos:line="29" pos:column="60"/></operator> <literal type="number" pos:line="29" pos:column="61">0<pos:position pos:line="29" pos:column="62"/></literal></expr>)<pos:position pos:line="29" pos:column="63"/></condition><then pos:line="29" pos:column="63"> <block pos:line="29" pos:column="64">{ <comment type="line" pos:line="29" pos:column="66">// TITLE</comment>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">DEBUG<pos:position pos:line="30" pos:column="10"/></name><argument_list pos:line="30" pos:column="10">(<argument><expr><literal type="string" pos:line="30" pos:column="11">"openvpn plugin: found status file MULTI version 2/3"<pos:position pos:line="30" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><name pos:line="31" pos:column="5">read<pos:position pos:line="31" pos:column="9"/></name> <operator pos:line="31" pos:column="10">=<pos:position pos:line="31" pos:column="11"/></operator> <call><name pos:line="31" pos:column="12">multi2_read<pos:position pos:line="31" pos:column="23"/></name><argument_list pos:line="31" pos:column="23">(<argument><expr><name><name pos:line="31" pos:column="24">st<pos:position pos:line="31" pos:column="26"/></name><operator pos:line="31" pos:column="26">-&gt;<pos:position pos:line="31" pos:column="31"/></operator><name pos:line="31" pos:column="28">name<pos:position pos:line="31" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="34">fh<pos:position pos:line="31" pos:column="36"/></name></expr></argument>)<pos:position pos:line="31" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="38"/></expr_stmt>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if></elseif> <else pos:line="32" pos:column="5">else <block pos:line="32" pos:column="10">{
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">NOTICE<pos:position pos:line="33" pos:column="11"/></name><argument_list pos:line="33" pos:column="11">(<argument><expr><literal type="string" pos:line="33" pos:column="12">"openvpn plugin: %s: Unknown file format, please "<pos:position pos:line="33" pos:column="62"/></literal>
           <literal type="string" pos:line="34" pos:column="12">"report this as bug. Make sure to include "<pos:position pos:line="34" pos:column="55"/></literal>
           <literal type="string" pos:line="35" pos:column="12">"your status file, so the plugin can "<pos:position pos:line="35" pos:column="50"/></literal>
           <literal type="string" pos:line="36" pos:column="12">"be adapted."<pos:position pos:line="36" pos:column="25"/></literal></expr></argument>,
           <argument><expr><name><name pos:line="37" pos:column="12">st<pos:position pos:line="37" pos:column="14"/></name><operator pos:line="37" pos:column="14">-&gt;<pos:position pos:line="37" pos:column="19"/></operator><name pos:line="37" pos:column="16">file<pos:position pos:line="37" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="38" pos:column="5">read<pos:position pos:line="38" pos:column="9"/></name> <operator pos:line="38" pos:column="10">=<pos:position pos:line="38" pos:column="11"/></operator> <operator pos:line="38" pos:column="12">-<pos:position pos:line="38" pos:column="13"/></operator><literal type="number" pos:line="38" pos:column="13">1<pos:position pos:line="38" pos:column="14"/></literal></expr>;<pos:position pos:line="38" pos:column="15"/></expr_stmt>
  }<pos:position pos:line="39" pos:column="4"/></block></else></if>
  <expr_stmt><expr><call><name pos:line="40" pos:column="3">fclose<pos:position pos:line="40" pos:column="9"/></name><argument_list pos:line="40" pos:column="9">(<argument><expr><name pos:line="40" pos:column="10">fh<pos:position pos:line="40" pos:column="12"/></name></expr></argument>)<pos:position pos:line="40" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="14"/></expr_stmt>
  <return pos:line="41" pos:column="3">return <expr><name pos:line="41" pos:column="10">read<pos:position pos:line="41" pos:column="14"/></name></expr>;<pos:position pos:line="41" pos:column="15"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

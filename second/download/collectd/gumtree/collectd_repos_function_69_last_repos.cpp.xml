<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_69_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">submit_notif<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">virDomainPtr<pos:position pos:line="1" pos:column="44"/></name></type> <name pos:line="1" pos:column="45">domain<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">int<pos:position pos:line="1" pos:column="56"/></name></type> <name pos:line="1" pos:column="57">severity<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
                         <parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name pos:line="2" pos:column="32">char<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">msg<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="43">const<pos:position pos:line="2" pos:column="48"/></specifier> <name pos:line="2" pos:column="49">char<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">type<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>,
                         <parameter><decl><type><specifier pos:line="3" pos:column="26">const<pos:position pos:line="3" pos:column="31"/></specifier> <name pos:line="3" pos:column="32">char<pos:position pos:line="3" pos:column="36"/></name> <modifier pos:line="3" pos:column="37">*<pos:position pos:line="3" pos:column="38"/></modifier></type><name pos:line="3" pos:column="38">type_instance<pos:position pos:line="3" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="52"/></parameter_list> <block pos:line="3" pos:column="53">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">notification_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">notif<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">init_notif<pos:position pos:line="6" pos:column="13"/></name><argument_list pos:line="6" pos:column="13">(<argument><expr><operator pos:line="6" pos:column="14">&amp;<pos:position pos:line="6" pos:column="19"/></operator><name pos:line="6" pos:column="15">notif<pos:position pos:line="6" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="22">domain<pos:position pos:line="6" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="30">severity<pos:position pos:line="6" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="40">msg<pos:position pos:line="6" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="45">type<pos:position pos:line="6" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="51">type_instance<pos:position pos:line="6" pos:column="64"/></name></expr></argument>)<pos:position pos:line="6" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="66"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">plugin_dispatch_notification<pos:position pos:line="7" pos:column="31"/></name><argument_list pos:line="7" pos:column="31">(<argument><expr><operator pos:line="7" pos:column="32">&amp;<pos:position pos:line="7" pos:column="37"/></operator><name pos:line="7" pos:column="33">notif<pos:position pos:line="7" pos:column="38"/></name></expr></argument>)<pos:position pos:line="7" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="40"/></expr_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name><name pos:line="8" pos:column="7">notif<pos:position pos:line="8" pos:column="12"/></name><operator pos:line="8" pos:column="12">.<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="13">meta<pos:position pos:line="8" pos:column="17"/></name></name></expr>)<pos:position pos:line="8" pos:column="18"/></condition><then pos:line="8" pos:column="18">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="5">plugin_notification_meta_free<pos:position pos:line="9" pos:column="34"/></name><argument_list pos:line="9" pos:column="34">(<argument><expr><name><name pos:line="9" pos:column="35">notif<pos:position pos:line="9" pos:column="40"/></name><operator pos:line="9" pos:column="40">.<pos:position pos:line="9" pos:column="41"/></operator><name pos:line="9" pos:column="41">meta<pos:position pos:line="9" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="47"/></expr_stmt></block></then></if>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

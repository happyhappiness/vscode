<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1666_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">log_status<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">int<pos:position pos:line="1" pos:column="27"/></name></type> <name pos:line="1" pos:column="28">status<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="35"/></parameter_list> <block pos:line="1" pos:column="36">{
  <if pos:line="2" pos:column="3">if <condition pos:line="2" pos:column="6">(<expr><call><name pos:line="2" pos:column="7">WIFEXITED<pos:position pos:line="2" pos:column="16"/></name><argument_list pos:line="2" pos:column="16">(<argument><expr><name pos:line="2" pos:column="17">status<pos:position pos:line="2" pos:column="23"/></name></expr></argument>)<pos:position pos:line="2" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="2" pos:column="25"/></condition><then pos:line="2" pos:column="25"> <block pos:line="2" pos:column="26">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><literal type="number" pos:line="3" pos:column="9">0<pos:position pos:line="3" pos:column="10"/></literal> <operator pos:line="3" pos:column="11">==<pos:position pos:line="3" pos:column="13"/></operator> <call><name pos:line="3" pos:column="14">WEXITSTATUS<pos:position pos:line="3" pos:column="25"/></name><argument_list pos:line="3" pos:column="25">(<argument><expr><name pos:line="3" pos:column="26">status<pos:position pos:line="3" pos:column="32"/></name></expr></argument>)<pos:position pos:line="3" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="34"/></condition><then pos:line="3" pos:column="34">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="4" pos:column="7">syslog<pos:position pos:line="4" pos:column="13"/></name><argument_list pos:line="4" pos:column="13">(<argument><expr><name pos:line="4" pos:column="14">LOG_INFO<pos:position pos:line="4" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="24">"Info: collectd terminated with exit status %i"<pos:position pos:line="4" pos:column="71"/></literal></expr></argument>,
             <argument><expr><call><name pos:line="5" pos:column="14">WEXITSTATUS<pos:position pos:line="5" pos:column="25"/></name><argument_list pos:line="5" pos:column="25">(<argument><expr><name pos:line="5" pos:column="26">status<pos:position pos:line="5" pos:column="32"/></name></expr></argument>)<pos:position pos:line="5" pos:column="33"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="35"/></expr_stmt></block></then>
    <else pos:line="6" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="7">syslog<pos:position pos:line="7" pos:column="13"/></name><argument_list pos:line="7" pos:column="13">(<argument><expr><name pos:line="7" pos:column="14">LOG_WARNING<pos:position pos:line="7" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="27">"Warning: collectd terminated with exit status %i"<pos:position pos:line="7" pos:column="77"/></literal></expr></argument>,
             <argument><expr><call><name pos:line="8" pos:column="14">WEXITSTATUS<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><name pos:line="8" pos:column="26">status<pos:position pos:line="8" pos:column="32"/></name></expr></argument>)<pos:position pos:line="8" pos:column="33"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="35"/></expr_stmt></block></else></if>
  }<pos:position pos:line="9" pos:column="4"/></block></then> <elseif pos:line="9" pos:column="5">else <if pos:line="9" pos:column="10">if <condition pos:line="9" pos:column="13">(<expr><call><name pos:line="9" pos:column="14">WIFSIGNALED<pos:position pos:line="9" pos:column="25"/></name><argument_list pos:line="9" pos:column="25">(<argument><expr><name pos:line="9" pos:column="26">status<pos:position pos:line="9" pos:column="32"/></name></expr></argument>)<pos:position pos:line="9" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="34"/></condition><then pos:line="9" pos:column="34"> <block pos:line="9" pos:column="35">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">syslog<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><name pos:line="10" pos:column="12">LOG_WARNING<pos:position pos:line="10" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="25">"Warning: collectd was terminated by signal %i%s"<pos:position pos:line="10" pos:column="74"/></literal></expr></argument>,
           <argument><expr><call><name pos:line="11" pos:column="12">WTERMSIG<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><name pos:line="11" pos:column="21">status<pos:position pos:line="11" pos:column="27"/></name></expr></argument>)<pos:position pos:line="11" pos:column="28"/></argument_list></call></expr></argument>, <argument><expr><ternary><condition><expr><call><name pos:line="11" pos:column="30">WCOREDUMP<pos:position pos:line="11" pos:column="39"/></name><argument_list pos:line="11" pos:column="39">(<argument><expr><name pos:line="11" pos:column="40">status<pos:position pos:line="11" pos:column="46"/></name></expr></argument>)<pos:position pos:line="11" pos:column="47"/></argument_list></call></expr> ?<pos:position pos:line="11" pos:column="49"/></condition><then pos:line="11" pos:column="49"> <expr><literal type="string" pos:line="11" pos:column="50">" (core dumped)"<pos:position pos:line="11" pos:column="66"/></literal></expr> <pos:position pos:line="11" pos:column="67"/></then><else pos:line="11" pos:column="67">: <expr><literal type="string" pos:line="11" pos:column="69">""<pos:position pos:line="11" pos:column="71"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="11" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="73"/></expr_stmt>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if></elseif></if>
  <return pos:line="13" pos:column="3">return;<pos:position pos:line="13" pos:column="10"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

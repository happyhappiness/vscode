<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1315_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">pb_add_socket<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">pinba_socket_t<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">s<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="45">/* {{{ */</comment>
                         <parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name><name pos:line="2" pos:column="32">struct<pos:position pos:line="2" pos:column="38"/></name> <name pos:line="2" pos:column="39">addrinfo<pos:position pos:line="2" pos:column="47"/></name></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">ai<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list> <block pos:line="2" pos:column="53">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">fd<pos:position pos:line="3" pos:column="9"/></name></decl>;<pos:position pos:line="3" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">tmp<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">status<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name><name pos:line="7" pos:column="7">s<pos:position pos:line="7" pos:column="8"/></name><operator pos:line="7" pos:column="8">-&gt;<pos:position pos:line="7" pos:column="13"/></operator><name pos:line="7" pos:column="10">fd_num<pos:position pos:line="7" pos:column="16"/></name></name> <operator pos:line="7" pos:column="17">==<pos:position pos:line="7" pos:column="19"/></operator> <name pos:line="7" pos:column="20">PINBA_MAX_SOCKETS<pos:position pos:line="7" pos:column="37"/></name></expr>)<pos:position pos:line="7" pos:column="38"/></condition><then pos:line="7" pos:column="38"> <block pos:line="7" pos:column="39">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">WARNING<pos:position pos:line="8" pos:column="12"/></name><argument_list pos:line="8" pos:column="12">(<argument><expr><literal type="string" pos:line="8" pos:column="13">"pinba plugin: Sorry, you have hit the built-in limit of "<pos:position pos:line="8" pos:column="71"/></literal>
            <literal type="string" pos:line="9" pos:column="13">"%i sockets. Please complain to the collectd developers so we can "<pos:position pos:line="9" pos:column="80"/></literal>
            <literal type="string" pos:line="10" pos:column="13">"raise the limit."<pos:position pos:line="10" pos:column="31"/></literal></expr></argument>,
            <argument><expr><name pos:line="11" pos:column="13">PINBA_MAX_SOCKETS<pos:position pos:line="11" pos:column="30"/></name></expr></argument>)<pos:position pos:line="11" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="32"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">(<pos:position pos:line="12" pos:column="13"/></operator><operator pos:line="12" pos:column="13">-<pos:position pos:line="12" pos:column="14"/></operator><literal type="number" pos:line="12" pos:column="14">1<pos:position pos:line="12" pos:column="15"/></literal><operator pos:line="12" pos:column="15">)<pos:position pos:line="12" pos:column="16"/></operator></expr>;<pos:position pos:line="12" pos:column="17"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="15" pos:column="3">fd<pos:position pos:line="15" pos:column="5"/></name> <operator pos:line="15" pos:column="6">=<pos:position pos:line="15" pos:column="7"/></operator> <call><name pos:line="15" pos:column="8">socket<pos:position pos:line="15" pos:column="14"/></name><argument_list pos:line="15" pos:column="14">(<argument><expr><name><name pos:line="15" pos:column="15">ai<pos:position pos:line="15" pos:column="17"/></name><operator pos:line="15" pos:column="17">-&gt;<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="19">ai_family<pos:position pos:line="15" pos:column="28"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="30">ai<pos:position pos:line="15" pos:column="32"/></name><operator pos:line="15" pos:column="32">-&gt;<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="34">ai_socktype<pos:position pos:line="15" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="47">ai<pos:position pos:line="15" pos:column="49"/></name><operator pos:line="15" pos:column="49">-&gt;<pos:position pos:line="15" pos:column="54"/></operator><name pos:line="15" pos:column="51">ai_protocol<pos:position pos:line="15" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="64"/></expr_stmt>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">fd<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">&lt;<pos:position pos:line="16" pos:column="14"/></operator> <literal type="number" pos:line="16" pos:column="12">0<pos:position pos:line="16" pos:column="13"/></literal></expr>)<pos:position pos:line="16" pos:column="14"/></condition><then pos:line="16" pos:column="14"> <block pos:line="16" pos:column="15">{
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">char<pos:position pos:line="17" pos:column="9"/></name></type> <name><name pos:line="17" pos:column="10">errbuf<pos:position pos:line="17" pos:column="16"/></name><index pos:line="17" pos:column="16">[<expr><literal type="number" pos:line="17" pos:column="17">1024<pos:position pos:line="17" pos:column="21"/></literal></expr>]<pos:position pos:line="17" pos:column="22"/></index></name></decl>;<pos:position pos:line="17" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">ERROR<pos:position pos:line="18" pos:column="10"/></name><argument_list pos:line="18" pos:column="10">(<argument><expr><literal type="string" pos:line="18" pos:column="11">"pinba plugin: socket(2) failed: %s"<pos:position pos:line="18" pos:column="47"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="19" pos:column="11">sstrerror<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><name pos:line="19" pos:column="21">errno<pos:position pos:line="19" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="28">errbuf<pos:position pos:line="19" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="36">sizeof<argument_list pos:line="19" pos:column="42">(<argument><expr><name pos:line="19" pos:column="43">errbuf<pos:position pos:line="19" pos:column="49"/></name></expr></argument>)<pos:position pos:line="19" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="53"/></expr_stmt>
    <return pos:line="20" pos:column="5">return <expr><operator pos:line="20" pos:column="12">(<pos:position pos:line="20" pos:column="13"/></operator><literal type="number" pos:line="20" pos:column="13">0<pos:position pos:line="20" pos:column="14"/></literal><operator pos:line="20" pos:column="14">)<pos:position pos:line="20" pos:column="15"/></operator></expr>;<pos:position pos:line="20" pos:column="16"/></return>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="23" pos:column="3">tmp<pos:position pos:line="23" pos:column="6"/></name> <operator pos:line="23" pos:column="7">=<pos:position pos:line="23" pos:column="8"/></operator> <literal type="number" pos:line="23" pos:column="9">1<pos:position pos:line="23" pos:column="10"/></literal></expr>;<pos:position pos:line="23" pos:column="11"/></expr_stmt>
  <expr_stmt><expr><name pos:line="24" pos:column="3">status<pos:position pos:line="24" pos:column="9"/></name> <operator pos:line="24" pos:column="10">=<pos:position pos:line="24" pos:column="11"/></operator> <call><name pos:line="24" pos:column="12">setsockopt<pos:position pos:line="24" pos:column="22"/></name><argument_list pos:line="24" pos:column="22">(<argument><expr><name pos:line="24" pos:column="23">fd<pos:position pos:line="24" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="27">SOL_SOCKET<pos:position pos:line="24" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="39">SO_REUSEADDR<pos:position pos:line="24" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="53">&amp;<pos:position pos:line="24" pos:column="58"/></operator><name pos:line="24" pos:column="54">tmp<pos:position pos:line="24" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="59">sizeof<argument_list pos:line="24" pos:column="65">(<argument><expr><name pos:line="24" pos:column="66">tmp<pos:position pos:line="24" pos:column="69"/></name></expr></argument>)<pos:position pos:line="24" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="72"/></expr_stmt>
  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><name pos:line="25" pos:column="7">status<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">!=<pos:position pos:line="25" pos:column="16"/></operator> <literal type="number" pos:line="25" pos:column="17">0<pos:position pos:line="25" pos:column="18"/></literal></expr>)<pos:position pos:line="25" pos:column="19"/></condition><then pos:line="25" pos:column="19"> <block pos:line="25" pos:column="20">{
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">char<pos:position pos:line="26" pos:column="9"/></name></type> <name><name pos:line="26" pos:column="10">errbuf<pos:position pos:line="26" pos:column="16"/></name><index pos:line="26" pos:column="16">[<expr><literal type="number" pos:line="26" pos:column="17">1024<pos:position pos:line="26" pos:column="21"/></literal></expr>]<pos:position pos:line="26" pos:column="22"/></index></name></decl>;<pos:position pos:line="26" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">WARNING<pos:position pos:line="27" pos:column="12"/></name><argument_list pos:line="27" pos:column="12">(<argument><expr><literal type="string" pos:line="27" pos:column="13">"pinba plugin: setsockopt(SO_REUSEADDR) failed: %s"<pos:position pos:line="27" pos:column="64"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="28" pos:column="13">sstrerror<pos:position pos:line="28" pos:column="22"/></name><argument_list pos:line="28" pos:column="22">(<argument><expr><name pos:line="28" pos:column="23">errno<pos:position pos:line="28" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="30">errbuf<pos:position pos:line="28" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="38">sizeof<argument_list pos:line="28" pos:column="44">(<argument><expr><name pos:line="28" pos:column="45">errbuf<pos:position pos:line="28" pos:column="51"/></name></expr></argument>)<pos:position pos:line="28" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="55"/></expr_stmt>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="31" pos:column="3">status<pos:position pos:line="31" pos:column="9"/></name> <operator pos:line="31" pos:column="10">=<pos:position pos:line="31" pos:column="11"/></operator> <call><name pos:line="31" pos:column="12">bind<pos:position pos:line="31" pos:column="16"/></name><argument_list pos:line="31" pos:column="16">(<argument><expr><name pos:line="31" pos:column="17">fd<pos:position pos:line="31" pos:column="19"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="21">ai<pos:position pos:line="31" pos:column="23"/></name><operator pos:line="31" pos:column="23">-&gt;<pos:position pos:line="31" pos:column="28"/></operator><name pos:line="31" pos:column="25">ai_addr<pos:position pos:line="31" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="34">ai<pos:position pos:line="31" pos:column="36"/></name><operator pos:line="31" pos:column="36">-&gt;<pos:position pos:line="31" pos:column="41"/></operator><name pos:line="31" pos:column="38">ai_addrlen<pos:position pos:line="31" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="50"/></expr_stmt>
  <if pos:line="32" pos:column="3">if <condition pos:line="32" pos:column="6">(<expr><name pos:line="32" pos:column="7">status<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">!=<pos:position pos:line="32" pos:column="16"/></operator> <literal type="number" pos:line="32" pos:column="17">0<pos:position pos:line="32" pos:column="18"/></literal></expr>)<pos:position pos:line="32" pos:column="19"/></condition><then pos:line="32" pos:column="19"> <block pos:line="32" pos:column="20">{
    <decl_stmt><decl><type><name pos:line="33" pos:column="5">char<pos:position pos:line="33" pos:column="9"/></name></type> <name><name pos:line="33" pos:column="10">errbuf<pos:position pos:line="33" pos:column="16"/></name><index pos:line="33" pos:column="16">[<expr><literal type="number" pos:line="33" pos:column="17">1024<pos:position pos:line="33" pos:column="21"/></literal></expr>]<pos:position pos:line="33" pos:column="22"/></index></name></decl>;<pos:position pos:line="33" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">ERROR<pos:position pos:line="34" pos:column="10"/></name><argument_list pos:line="34" pos:column="10">(<argument><expr><literal type="string" pos:line="34" pos:column="11">"pinba plugin: bind(2) failed: %s"<pos:position pos:line="34" pos:column="45"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="35" pos:column="11">sstrerror<pos:position pos:line="35" pos:column="20"/></name><argument_list pos:line="35" pos:column="20">(<argument><expr><name pos:line="35" pos:column="21">errno<pos:position pos:line="35" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="28">errbuf<pos:position pos:line="35" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="36">sizeof<argument_list pos:line="35" pos:column="42">(<argument><expr><name pos:line="35" pos:column="43">errbuf<pos:position pos:line="35" pos:column="49"/></name></expr></argument>)<pos:position pos:line="35" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="35" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">close<pos:position pos:line="36" pos:column="10"/></name><argument_list pos:line="36" pos:column="10">(<argument><expr><name pos:line="36" pos:column="11">fd<pos:position pos:line="36" pos:column="13"/></name></expr></argument>)<pos:position pos:line="36" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="15"/></expr_stmt>
    <return pos:line="37" pos:column="5">return <expr><operator pos:line="37" pos:column="12">(<pos:position pos:line="37" pos:column="13"/></operator><literal type="number" pos:line="37" pos:column="13">0<pos:position pos:line="37" pos:column="14"/></literal><operator pos:line="37" pos:column="14">)<pos:position pos:line="37" pos:column="15"/></operator></expr>;<pos:position pos:line="37" pos:column="16"/></return>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="40" pos:column="3">s<pos:position pos:line="40" pos:column="4"/></name><operator pos:line="40" pos:column="4">-&gt;<pos:position pos:line="40" pos:column="9"/></operator><name pos:line="40" pos:column="6">fd<pos:position pos:line="40" pos:column="8"/></name><index pos:line="40" pos:column="8">[<expr><name><name pos:line="40" pos:column="9">s<pos:position pos:line="40" pos:column="10"/></name><operator pos:line="40" pos:column="10">-&gt;<pos:position pos:line="40" pos:column="15"/></operator><name pos:line="40" pos:column="12">fd_num<pos:position pos:line="40" pos:column="18"/></name></name></expr>]<pos:position pos:line="40" pos:column="19"/></index></name><operator pos:line="40" pos:column="19">.<pos:position pos:line="40" pos:column="20"/></operator><name pos:line="40" pos:column="20">fd<pos:position pos:line="40" pos:column="22"/></name> <operator pos:line="40" pos:column="23">=<pos:position pos:line="40" pos:column="24"/></operator> <name pos:line="40" pos:column="25">fd<pos:position pos:line="40" pos:column="27"/></name></expr>;<pos:position pos:line="40" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="41" pos:column="3">s<pos:position pos:line="41" pos:column="4"/></name><operator pos:line="41" pos:column="4">-&gt;<pos:position pos:line="41" pos:column="9"/></operator><name pos:line="41" pos:column="6">fd<pos:position pos:line="41" pos:column="8"/></name><index pos:line="41" pos:column="8">[<expr><name><name pos:line="41" pos:column="9">s<pos:position pos:line="41" pos:column="10"/></name><operator pos:line="41" pos:column="10">-&gt;<pos:position pos:line="41" pos:column="15"/></operator><name pos:line="41" pos:column="12">fd_num<pos:position pos:line="41" pos:column="18"/></name></name></expr>]<pos:position pos:line="41" pos:column="19"/></index></name><operator pos:line="41" pos:column="19">.<pos:position pos:line="41" pos:column="20"/></operator><name pos:line="41" pos:column="20">events<pos:position pos:line="41" pos:column="26"/></name> <operator pos:line="41" pos:column="27">=<pos:position pos:line="41" pos:column="28"/></operator> <name pos:line="41" pos:column="29">POLLIN<pos:position pos:line="41" pos:column="35"/></name> <operator pos:line="41" pos:column="36">|<pos:position pos:line="41" pos:column="37"/></operator> <name pos:line="41" pos:column="38">POLLPRI<pos:position pos:line="41" pos:column="45"/></name></expr>;<pos:position pos:line="41" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="42" pos:column="3">s<pos:position pos:line="42" pos:column="4"/></name><operator pos:line="42" pos:column="4">-&gt;<pos:position pos:line="42" pos:column="9"/></operator><name pos:line="42" pos:column="6">fd<pos:position pos:line="42" pos:column="8"/></name><index pos:line="42" pos:column="8">[<expr><name><name pos:line="42" pos:column="9">s<pos:position pos:line="42" pos:column="10"/></name><operator pos:line="42" pos:column="10">-&gt;<pos:position pos:line="42" pos:column="15"/></operator><name pos:line="42" pos:column="12">fd_num<pos:position pos:line="42" pos:column="18"/></name></name></expr>]<pos:position pos:line="42" pos:column="19"/></index></name><operator pos:line="42" pos:column="19">.<pos:position pos:line="42" pos:column="20"/></operator><name pos:line="42" pos:column="20">revents<pos:position pos:line="42" pos:column="27"/></name> <operator pos:line="42" pos:column="28">=<pos:position pos:line="42" pos:column="29"/></operator> <literal type="number" pos:line="42" pos:column="30">0<pos:position pos:line="42" pos:column="31"/></literal></expr>;<pos:position pos:line="42" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="43" pos:column="3">s<pos:position pos:line="43" pos:column="4"/></name><operator pos:line="43" pos:column="4">-&gt;<pos:position pos:line="43" pos:column="9"/></operator><name pos:line="43" pos:column="6">fd_num<pos:position pos:line="43" pos:column="12"/></name></name><operator pos:line="43" pos:column="12">++<pos:position pos:line="43" pos:column="14"/></operator></expr>;<pos:position pos:line="43" pos:column="15"/></expr_stmt>

  <return pos:line="45" pos:column="3">return <expr><operator pos:line="45" pos:column="10">(<pos:position pos:line="45" pos:column="11"/></operator><literal type="number" pos:line="45" pos:column="11">0<pos:position pos:line="45" pos:column="12"/></literal><operator pos:line="45" pos:column="12">)<pos:position pos:line="45" pos:column="13"/></operator></expr>;<pos:position pos:line="45" pos:column="14"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

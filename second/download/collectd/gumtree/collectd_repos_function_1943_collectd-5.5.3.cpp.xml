<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1943_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">wt_callback_init<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">wt_callback<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">cb<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="3" pos:column="5">struct<pos:position pos:line="3" pos:column="11"/></name> <name pos:line="3" pos:column="12">addrinfo<pos:position pos:line="3" pos:column="20"/></name></name></type> <name pos:line="3" pos:column="21">ai_hints<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">addrinfo<pos:position pos:line="4" pos:column="20"/></name></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">ai_list<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">struct<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">addrinfo<pos:position pos:line="5" pos:column="20"/></name></name> <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">ai_ptr<pos:position pos:line="5" pos:column="28"/></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">status<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">char<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">node<pos:position pos:line="8" pos:column="21"/></name> <init pos:line="8" pos:column="22">= <expr><ternary><condition><expr><name><name pos:line="8" pos:column="24">cb<pos:position pos:line="8" pos:column="26"/></name><operator pos:line="8" pos:column="26">-&gt;<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="28">node<pos:position pos:line="8" pos:column="32"/></name></name></expr> ?<pos:position pos:line="8" pos:column="34"/></condition><then pos:line="8" pos:column="34"> <expr><name><name pos:line="8" pos:column="35">cb<pos:position pos:line="8" pos:column="37"/></name><operator pos:line="8" pos:column="37">-&gt;<pos:position pos:line="8" pos:column="42"/></operator><name pos:line="8" pos:column="39">node<pos:position pos:line="8" pos:column="43"/></name></name></expr> <pos:position pos:line="8" pos:column="44"/></then><else pos:line="8" pos:column="44">: <expr><name pos:line="8" pos:column="46">WT_DEFAULT_NODE<pos:position pos:line="8" pos:column="61"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="8" pos:column="62"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">char<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">service<pos:position pos:line="9" pos:column="24"/></name> <init pos:line="9" pos:column="25">= <expr><ternary><condition><expr><name><name pos:line="9" pos:column="27">cb<pos:position pos:line="9" pos:column="29"/></name><operator pos:line="9" pos:column="29">-&gt;<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="31">service<pos:position pos:line="9" pos:column="38"/></name></name></expr> ?<pos:position pos:line="9" pos:column="40"/></condition><then pos:line="9" pos:column="40"> <expr><name><name pos:line="9" pos:column="41">cb<pos:position pos:line="9" pos:column="43"/></name><operator pos:line="9" pos:column="43">-&gt;<pos:position pos:line="9" pos:column="48"/></operator><name pos:line="9" pos:column="45">service<pos:position pos:line="9" pos:column="52"/></name></name></expr> <pos:position pos:line="9" pos:column="53"/></then><else pos:line="9" pos:column="53">: <expr><name pos:line="9" pos:column="55">WT_DEFAULT_SERVICE<pos:position pos:line="9" pos:column="73"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="9" pos:column="74"/></decl_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">cb<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">-&gt;<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="13">sock_fd<pos:position pos:line="11" pos:column="20"/></name></name> <operator pos:line="11" pos:column="21">&gt;<pos:position pos:line="11" pos:column="25"/></operator> <literal type="number" pos:line="11" pos:column="23">0<pos:position pos:line="11" pos:column="24"/></literal></expr>)<pos:position pos:line="11" pos:column="25"/></condition><then pos:line="11" pos:column="25">
        <block type="pseudo"><return pos:line="12" pos:column="9">return <expr><literal type="number" pos:line="12" pos:column="16">0<pos:position pos:line="12" pos:column="17"/></literal></expr>;<pos:position pos:line="12" pos:column="18"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">memset<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><operator pos:line="14" pos:column="12">&amp;<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="13">ai_hints<pos:position pos:line="14" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="23">0<pos:position pos:line="14" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="26">sizeof<argument_list pos:line="14" pos:column="32">(<argument><expr><name pos:line="14" pos:column="33">ai_hints<pos:position pos:line="14" pos:column="41"/></name></expr></argument>)<pos:position pos:line="14" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="44"/></expr_stmt>
<cpp:ifdef pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">ifdef<pos:position pos:line="15" pos:column="7"/></cpp:directive> <name pos:line="15" pos:column="8">AI_ADDRCONFIG<pos:position pos:line="15" pos:column="21"/></name></cpp:ifdef>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">ai_hints<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">.<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">ai_flags<pos:position pos:line="16" pos:column="22"/></name></name>    <operator pos:line="16" pos:column="26">|=<pos:position pos:line="16" pos:column="28"/></operator> <name pos:line="16" pos:column="29">AI_ADDRCONFIG<pos:position pos:line="16" pos:column="42"/></name></expr>;<pos:position pos:line="16" pos:column="43"/></expr_stmt>
<cpp:endif pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">endif<pos:position pos:line="17" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">ai_hints<pos:position pos:line="18" pos:column="13"/></name><operator pos:line="18" pos:column="13">.<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">ai_family<pos:position pos:line="18" pos:column="23"/></name></name>   <operator pos:line="18" pos:column="26">=<pos:position pos:line="18" pos:column="27"/></operator> <name pos:line="18" pos:column="28">AF_UNSPEC<pos:position pos:line="18" pos:column="37"/></name></expr>;<pos:position pos:line="18" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">ai_hints<pos:position pos:line="19" pos:column="13"/></name><operator pos:line="19" pos:column="13">.<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">ai_socktype<pos:position pos:line="19" pos:column="25"/></name></name> <operator pos:line="19" pos:column="26">=<pos:position pos:line="19" pos:column="27"/></operator> <name pos:line="19" pos:column="28">SOCK_STREAM<pos:position pos:line="19" pos:column="39"/></name></expr>;<pos:position pos:line="19" pos:column="40"/></expr_stmt>

    <expr_stmt><expr><name pos:line="21" pos:column="5">ai_list<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">=<pos:position pos:line="21" pos:column="14"/></operator> <name pos:line="21" pos:column="15">NULL<pos:position pos:line="21" pos:column="19"/></name></expr>;<pos:position pos:line="21" pos:column="20"/></expr_stmt>

    <expr_stmt><expr><name pos:line="23" pos:column="5">status<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <call><name pos:line="23" pos:column="14">getaddrinfo<pos:position pos:line="23" pos:column="25"/></name><argument_list pos:line="23" pos:column="25">(<argument><expr><name pos:line="23" pos:column="26">node<pos:position pos:line="23" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="32">service<pos:position pos:line="23" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="41">&amp;<pos:position pos:line="23" pos:column="46"/></operator><name pos:line="23" pos:column="42">ai_hints<pos:position pos:line="23" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="52">&amp;<pos:position pos:line="23" pos:column="57"/></operator><name pos:line="23" pos:column="53">ai_list<pos:position pos:line="23" pos:column="60"/></name></expr></argument>)<pos:position pos:line="23" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="62"/></expr_stmt>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">status<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">!=<pos:position pos:line="24" pos:column="18"/></operator> <literal type="number" pos:line="24" pos:column="19">0<pos:position pos:line="24" pos:column="20"/></literal></expr>)<pos:position pos:line="24" pos:column="21"/></condition><then pos:line="24" pos:column="21">
    <block pos:line="25" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">ERROR<pos:position pos:line="26" pos:column="14"/></name><argument_list pos:line="26" pos:column="14">(<argument><expr><literal type="string" pos:line="26" pos:column="15">"write_tsdb plugin: getaddrinfo (%s, %s) failed: %s"<pos:position pos:line="26" pos:column="67"/></literal></expr></argument>,
              <argument><expr><name pos:line="27" pos:column="15">node<pos:position pos:line="27" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="21">service<pos:position pos:line="27" pos:column="28"/></name></expr></argument>, <argument><expr><call><name pos:line="27" pos:column="30">gai_strerror<pos:position pos:line="27" pos:column="42"/></name> <argument_list pos:line="27" pos:column="43">(<argument><expr><name pos:line="27" pos:column="44">status<pos:position pos:line="27" pos:column="50"/></name></expr></argument>)<pos:position pos:line="27" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="53"/></expr_stmt>
        <return pos:line="28" pos:column="9">return <expr><operator pos:line="28" pos:column="16">-<pos:position pos:line="28" pos:column="17"/></operator><literal type="number" pos:line="28" pos:column="17">1<pos:position pos:line="28" pos:column="18"/></literal></expr>;<pos:position pos:line="28" pos:column="19"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="31" pos:column="5">assert<pos:position pos:line="31" pos:column="11"/></name> <argument_list pos:line="31" pos:column="12">(<argument><expr><name pos:line="31" pos:column="13">ai_list<pos:position pos:line="31" pos:column="20"/></name> <operator pos:line="31" pos:column="21">!=<pos:position pos:line="31" pos:column="23"/></operator> <name pos:line="31" pos:column="24">NULL<pos:position pos:line="31" pos:column="28"/></name></expr></argument>)<pos:position pos:line="31" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="30"/></expr_stmt>
    <for pos:line="32" pos:column="5">for <control pos:line="32" pos:column="9">(<init><expr><name pos:line="32" pos:column="10">ai_ptr<pos:position pos:line="32" pos:column="16"/></name> <operator pos:line="32" pos:column="17">=<pos:position pos:line="32" pos:column="18"/></operator> <name pos:line="32" pos:column="19">ai_list<pos:position pos:line="32" pos:column="26"/></name></expr>;<pos:position pos:line="32" pos:column="27"/></init> <condition><expr><name pos:line="32" pos:column="28">ai_ptr<pos:position pos:line="32" pos:column="34"/></name> <operator pos:line="32" pos:column="35">!=<pos:position pos:line="32" pos:column="37"/></operator> <name pos:line="32" pos:column="38">NULL<pos:position pos:line="32" pos:column="42"/></name></expr>;<pos:position pos:line="32" pos:column="43"/></condition> <incr><expr><name pos:line="32" pos:column="44">ai_ptr<pos:position pos:line="32" pos:column="50"/></name> <operator pos:line="32" pos:column="51">=<pos:position pos:line="32" pos:column="52"/></operator> <name><name pos:line="32" pos:column="53">ai_ptr<pos:position pos:line="32" pos:column="59"/></name><operator pos:line="32" pos:column="59">-&gt;<pos:position pos:line="32" pos:column="64"/></operator><name pos:line="32" pos:column="61">ai_next<pos:position pos:line="32" pos:column="68"/></name></name></expr></incr>)<pos:position pos:line="32" pos:column="69"/></control>
    <block pos:line="33" pos:column="5">{
        <expr_stmt><expr><name><name pos:line="34" pos:column="9">cb<pos:position pos:line="34" pos:column="11"/></name><operator pos:line="34" pos:column="11">-&gt;<pos:position pos:line="34" pos:column="16"/></operator><name pos:line="34" pos:column="13">sock_fd<pos:position pos:line="34" pos:column="20"/></name></name> <operator pos:line="34" pos:column="21">=<pos:position pos:line="34" pos:column="22"/></operator> <call><name pos:line="34" pos:column="23">socket<pos:position pos:line="34" pos:column="29"/></name><argument_list pos:line="34" pos:column="29">(<argument><expr><name><name pos:line="34" pos:column="30">ai_ptr<pos:position pos:line="34" pos:column="36"/></name><operator pos:line="34" pos:column="36">-&gt;<pos:position pos:line="34" pos:column="41"/></operator><name pos:line="34" pos:column="38">ai_family<pos:position pos:line="34" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="49">ai_ptr<pos:position pos:line="34" pos:column="55"/></name><operator pos:line="34" pos:column="55">-&gt;<pos:position pos:line="34" pos:column="60"/></operator><name pos:line="34" pos:column="57">ai_socktype<pos:position pos:line="34" pos:column="68"/></name></name></expr></argument>,
                             <argument><expr><name><name pos:line="35" pos:column="30">ai_ptr<pos:position pos:line="35" pos:column="36"/></name><operator pos:line="35" pos:column="36">-&gt;<pos:position pos:line="35" pos:column="41"/></operator><name pos:line="35" pos:column="38">ai_protocol<pos:position pos:line="35" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="51"/></expr_stmt>
        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name><name pos:line="36" pos:column="13">cb<pos:position pos:line="36" pos:column="15"/></name><operator pos:line="36" pos:column="15">-&gt;<pos:position pos:line="36" pos:column="20"/></operator><name pos:line="36" pos:column="17">sock_fd<pos:position pos:line="36" pos:column="24"/></name></name> <operator pos:line="36" pos:column="25">&lt;<pos:position pos:line="36" pos:column="29"/></operator> <literal type="number" pos:line="36" pos:column="27">0<pos:position pos:line="36" pos:column="28"/></literal></expr>)<pos:position pos:line="36" pos:column="29"/></condition><then pos:line="36" pos:column="29">
            <block type="pseudo"><continue pos:line="37" pos:column="13">continue;<pos:position pos:line="37" pos:column="22"/></continue></block></then></if>

        <expr_stmt><expr><name pos:line="39" pos:column="9">status<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">=<pos:position pos:line="39" pos:column="17"/></operator> <call><name pos:line="39" pos:column="18">connect<pos:position pos:line="39" pos:column="25"/></name><argument_list pos:line="39" pos:column="25">(<argument><expr><name><name pos:line="39" pos:column="26">cb<pos:position pos:line="39" pos:column="28"/></name><operator pos:line="39" pos:column="28">-&gt;<pos:position pos:line="39" pos:column="33"/></operator><name pos:line="39" pos:column="30">sock_fd<pos:position pos:line="39" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="39">ai_ptr<pos:position pos:line="39" pos:column="45"/></name><operator pos:line="39" pos:column="45">-&gt;<pos:position pos:line="39" pos:column="50"/></operator><name pos:line="39" pos:column="47">ai_addr<pos:position pos:line="39" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="56">ai_ptr<pos:position pos:line="39" pos:column="62"/></name><operator pos:line="39" pos:column="62">-&gt;<pos:position pos:line="39" pos:column="67"/></operator><name pos:line="39" pos:column="64">ai_addrlen<pos:position pos:line="39" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="76"/></expr_stmt>
        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">status<pos:position pos:line="40" pos:column="19"/></name> <operator pos:line="40" pos:column="20">!=<pos:position pos:line="40" pos:column="22"/></operator> <literal type="number" pos:line="40" pos:column="23">0<pos:position pos:line="40" pos:column="24"/></literal></expr>)<pos:position pos:line="40" pos:column="25"/></condition><then pos:line="40" pos:column="25">
        <block pos:line="41" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="42" pos:column="13">close<pos:position pos:line="42" pos:column="18"/></name><argument_list pos:line="42" pos:column="18">(<argument><expr><name><name pos:line="42" pos:column="19">cb<pos:position pos:line="42" pos:column="21"/></name><operator pos:line="42" pos:column="21">-&gt;<pos:position pos:line="42" pos:column="26"/></operator><name pos:line="42" pos:column="23">sock_fd<pos:position pos:line="42" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="43" pos:column="13">cb<pos:position pos:line="43" pos:column="15"/></name><operator pos:line="43" pos:column="15">-&gt;<pos:position pos:line="43" pos:column="20"/></operator><name pos:line="43" pos:column="17">sock_fd<pos:position pos:line="43" pos:column="24"/></name></name> <operator pos:line="43" pos:column="25">=<pos:position pos:line="43" pos:column="26"/></operator> <operator pos:line="43" pos:column="27">-<pos:position pos:line="43" pos:column="28"/></operator><literal type="number" pos:line="43" pos:column="28">1<pos:position pos:line="43" pos:column="29"/></literal></expr>;<pos:position pos:line="43" pos:column="30"/></expr_stmt>
            <continue pos:line="44" pos:column="13">continue;<pos:position pos:line="44" pos:column="22"/></continue>
        }<pos:position pos:line="45" pos:column="10"/></block></then></if>

        <break pos:line="47" pos:column="9">break;<pos:position pos:line="47" pos:column="15"/></break>
    }<pos:position pos:line="48" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="50" pos:column="5">freeaddrinfo<pos:position pos:line="50" pos:column="17"/></name><argument_list pos:line="50" pos:column="17">(<argument><expr><name pos:line="50" pos:column="18">ai_list<pos:position pos:line="50" pos:column="25"/></name></expr></argument>)<pos:position pos:line="50" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="27"/></expr_stmt>

    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><name><name pos:line="52" pos:column="9">cb<pos:position pos:line="52" pos:column="11"/></name><operator pos:line="52" pos:column="11">-&gt;<pos:position pos:line="52" pos:column="16"/></operator><name pos:line="52" pos:column="13">sock_fd<pos:position pos:line="52" pos:column="20"/></name></name> <operator pos:line="52" pos:column="21">&lt;<pos:position pos:line="52" pos:column="25"/></operator> <literal type="number" pos:line="52" pos:column="23">0<pos:position pos:line="52" pos:column="24"/></literal></expr>)<pos:position pos:line="52" pos:column="25"/></condition><then pos:line="52" pos:column="25">
    <block pos:line="53" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="54" pos:column="9">char<pos:position pos:line="54" pos:column="13"/></name></type> <name><name pos:line="54" pos:column="14">errbuf<pos:position pos:line="54" pos:column="20"/></name><index pos:line="54" pos:column="20">[<expr><literal type="number" pos:line="54" pos:column="21">1024<pos:position pos:line="54" pos:column="25"/></literal></expr>]<pos:position pos:line="54" pos:column="26"/></index></name></decl>;<pos:position pos:line="54" pos:column="27"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="55" pos:column="9">ERROR<pos:position pos:line="55" pos:column="14"/></name><argument_list pos:line="55" pos:column="14">(<argument><expr><literal type="string" pos:line="55" pos:column="15">"write_tsdb plugin: Connecting to %s:%s failed. "<pos:position pos:line="55" pos:column="64"/></literal>
              <literal type="string" pos:line="56" pos:column="15">"The last error was: %s"<pos:position pos:line="56" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="41">node<pos:position pos:line="56" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="47">service<pos:position pos:line="56" pos:column="54"/></name></expr></argument>,
              <argument><expr><call><name pos:line="57" pos:column="15">sstrerror<pos:position pos:line="57" pos:column="24"/></name> <argument_list pos:line="57" pos:column="25">(<argument><expr><name pos:line="57" pos:column="26">errno<pos:position pos:line="57" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="33">errbuf<pos:position pos:line="57" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="57" pos:column="41">sizeof<argument_list pos:line="57" pos:column="47">(<argument><expr><name pos:line="57" pos:column="48">errbuf<pos:position pos:line="57" pos:column="54"/></name></expr></argument>)<pos:position pos:line="57" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="57" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="57" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="58"/></expr_stmt>
        <return pos:line="58" pos:column="9">return <expr><operator pos:line="58" pos:column="16">-<pos:position pos:line="58" pos:column="17"/></operator><literal type="number" pos:line="58" pos:column="17">1<pos:position pos:line="58" pos:column="18"/></literal></expr>;<pos:position pos:line="58" pos:column="19"/></return>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="61" pos:column="5">wt_reset_buffer<pos:position pos:line="61" pos:column="20"/></name><argument_list pos:line="61" pos:column="20">(<argument><expr><name pos:line="61" pos:column="21">cb<pos:position pos:line="61" pos:column="23"/></name></expr></argument>)<pos:position pos:line="61" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="25"/></expr_stmt>

    <return pos:line="63" pos:column="5">return <expr><literal type="number" pos:line="63" pos:column="12">0<pos:position pos:line="63" pos:column="13"/></literal></expr>;<pos:position pos:line="63" pos:column="14"/></return>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

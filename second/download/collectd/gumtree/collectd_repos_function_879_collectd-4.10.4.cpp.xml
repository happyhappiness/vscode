<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_879_collectd-4.10.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cna_config_volume_performance<pos:position pos:line="1" pos:column="41"/></name> <parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><name pos:line="1" pos:column="43">host_config_t<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">host<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="64">/* {{{ */</comment>
		<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">oconfig_item_t<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">ci<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="42"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">cfg_volume_perf_t<pos:position pos:line="4" pos:column="26"/></name> <modifier pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></modifier></type><name pos:line="4" pos:column="28">cfg_volume_perf<pos:position pos:line="4" pos:column="43"/></name></decl>;<pos:position pos:line="4" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">(<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">host<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">==<pos:position pos:line="7" pos:column="21"/></operator> <name pos:line="7" pos:column="22">NULL<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">)<pos:position pos:line="7" pos:column="27"/></operator> <operator pos:line="7" pos:column="28">||<pos:position pos:line="7" pos:column="30"/></operator> <operator pos:line="7" pos:column="31">(<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="32">ci<pos:position pos:line="7" pos:column="34"/></name> <operator pos:line="7" pos:column="35">==<pos:position pos:line="7" pos:column="37"/></operator> <name pos:line="7" pos:column="38">NULL<pos:position pos:line="7" pos:column="42"/></name><operator pos:line="7" pos:column="42">)<pos:position pos:line="7" pos:column="43"/></operator></expr>)<pos:position pos:line="7" pos:column="44"/></condition><then pos:line="7" pos:column="44">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><operator pos:line="8" pos:column="24">(<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="25">EINVAL<pos:position pos:line="8" pos:column="31"/></name><operator pos:line="8" pos:column="31">)<pos:position pos:line="8" pos:column="32"/></operator></expr>;<pos:position pos:line="8" pos:column="33"/></return></block></then></if>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name><name pos:line="10" pos:column="13">host<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">-&gt;<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="19">cfg_volume_perf<pos:position pos:line="10" pos:column="34"/></name></name> <operator pos:line="10" pos:column="35">==<pos:position pos:line="10" pos:column="37"/></operator> <name pos:line="10" pos:column="38">NULL<pos:position pos:line="10" pos:column="42"/></name></expr>)<pos:position pos:line="10" pos:column="43"/></condition><then pos:line="10" pos:column="43">
	<block pos:line="11" pos:column="9">{
		<expr_stmt><expr><name pos:line="12" pos:column="17">cfg_volume_perf<pos:position pos:line="12" pos:column="32"/></name> <operator pos:line="12" pos:column="33">=<pos:position pos:line="12" pos:column="34"/></operator> <call><name pos:line="12" pos:column="35">malloc<pos:position pos:line="12" pos:column="41"/></name> <argument_list pos:line="12" pos:column="42">(<argument><expr><sizeof pos:line="12" pos:column="43">sizeof <argument_list pos:line="12" pos:column="50">(<argument><expr><operator pos:line="12" pos:column="51">*<pos:position pos:line="12" pos:column="52"/></operator><name pos:line="12" pos:column="52">cfg_volume_perf<pos:position pos:line="12" pos:column="67"/></name></expr></argument>)<pos:position pos:line="12" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="70"/></expr_stmt>
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><name pos:line="13" pos:column="21">cfg_volume_perf<pos:position pos:line="13" pos:column="36"/></name> <operator pos:line="13" pos:column="37">==<pos:position pos:line="13" pos:column="39"/></operator> <name pos:line="13" pos:column="40">NULL<pos:position pos:line="13" pos:column="44"/></name></expr>)<pos:position pos:line="13" pos:column="45"/></condition><then pos:line="13" pos:column="45">
			<block type="pseudo"><return pos:line="14" pos:column="25">return <expr><operator pos:line="14" pos:column="32">(<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="33">ENOMEM<pos:position pos:line="14" pos:column="39"/></name><operator pos:line="14" pos:column="39">)<pos:position pos:line="14" pos:column="40"/></operator></expr>;<pos:position pos:line="14" pos:column="41"/></return></block></then></if>
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">memset<pos:position pos:line="15" pos:column="23"/></name> <argument_list pos:line="15" pos:column="24">(<argument><expr><name pos:line="15" pos:column="25">cfg_volume_perf<pos:position pos:line="15" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="42">0<pos:position pos:line="15" pos:column="43"/></literal></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="45">sizeof <argument_list pos:line="15" pos:column="52">(<argument><expr><operator pos:line="15" pos:column="53">*<pos:position pos:line="15" pos:column="54"/></operator><name pos:line="15" pos:column="54">cfg_volume_perf<pos:position pos:line="15" pos:column="69"/></name></expr></argument>)<pos:position pos:line="15" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="72"/></expr_stmt>

		<comment type="block" pos:line="17" pos:column="17">/* Set default flags */</comment>
		<expr_stmt><expr><name><name pos:line="18" pos:column="17">cfg_volume_perf<pos:position pos:line="18" pos:column="32"/></name><operator pos:line="18" pos:column="32">-&gt;<pos:position pos:line="18" pos:column="37"/></operator><name pos:line="18" pos:column="34">query<pos:position pos:line="18" pos:column="39"/></name></name> <operator pos:line="18" pos:column="40">=<pos:position pos:line="18" pos:column="41"/></operator> <name pos:line="18" pos:column="42">NULL<pos:position pos:line="18" pos:column="46"/></name></expr>;<pos:position pos:line="18" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="19" pos:column="17">cfg_volume_perf<pos:position pos:line="19" pos:column="32"/></name><operator pos:line="19" pos:column="32">-&gt;<pos:position pos:line="19" pos:column="37"/></operator><name pos:line="19" pos:column="34">volumes<pos:position pos:line="19" pos:column="41"/></name></name> <operator pos:line="19" pos:column="42">=<pos:position pos:line="19" pos:column="43"/></operator> <name pos:line="19" pos:column="44">NULL<pos:position pos:line="19" pos:column="48"/></name></expr>;<pos:position pos:line="19" pos:column="49"/></expr_stmt>

		<expr_stmt><expr><name><name pos:line="21" pos:column="17">cfg_volume_perf<pos:position pos:line="21" pos:column="32"/></name><operator pos:line="21" pos:column="32">-&gt;<pos:position pos:line="21" pos:column="37"/></operator><name pos:line="21" pos:column="34">il_octets<pos:position pos:line="21" pos:column="43"/></name></name> <operator pos:line="21" pos:column="44">=<pos:position pos:line="21" pos:column="45"/></operator> <call><name pos:line="21" pos:column="46">ignorelist_create<pos:position pos:line="21" pos:column="63"/></name> <argument_list pos:line="21" pos:column="64">(<comment type="block" pos:line="21" pos:column="65">/* invert = */</comment> <argument><expr><literal type="number" pos:line="21" pos:column="80">1<pos:position pos:line="21" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="83"/></expr_stmt>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name><name pos:line="22" pos:column="21">cfg_volume_perf<pos:position pos:line="22" pos:column="36"/></name><operator pos:line="22" pos:column="36">-&gt;<pos:position pos:line="22" pos:column="41"/></operator><name pos:line="22" pos:column="38">il_octets<pos:position pos:line="22" pos:column="47"/></name></name> <operator pos:line="22" pos:column="48">==<pos:position pos:line="22" pos:column="50"/></operator> <name pos:line="22" pos:column="51">NULL<pos:position pos:line="22" pos:column="55"/></name></expr>)<pos:position pos:line="22" pos:column="56"/></condition><then pos:line="22" pos:column="56">
		<block pos:line="23" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="24" pos:column="25">sfree<pos:position pos:line="24" pos:column="30"/></name> <argument_list pos:line="24" pos:column="31">(<argument><expr><name pos:line="24" pos:column="32">cfg_volume_perf<pos:position pos:line="24" pos:column="47"/></name></expr></argument>)<pos:position pos:line="24" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="49"/></expr_stmt>
			<return pos:line="25" pos:column="25">return <expr><operator pos:line="25" pos:column="32">(<pos:position pos:line="25" pos:column="33"/></operator><name pos:line="25" pos:column="33">ENOMEM<pos:position pos:line="25" pos:column="39"/></name><operator pos:line="25" pos:column="39">)<pos:position pos:line="25" pos:column="40"/></operator></expr>;<pos:position pos:line="25" pos:column="41"/></return>
		}<pos:position pos:line="26" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name><name pos:line="28" pos:column="17">cfg_volume_perf<pos:position pos:line="28" pos:column="32"/></name><operator pos:line="28" pos:column="32">-&gt;<pos:position pos:line="28" pos:column="37"/></operator><name pos:line="28" pos:column="34">il_operations<pos:position pos:line="28" pos:column="47"/></name></name> <operator pos:line="28" pos:column="48">=<pos:position pos:line="28" pos:column="49"/></operator> <call><name pos:line="28" pos:column="50">ignorelist_create<pos:position pos:line="28" pos:column="67"/></name> <argument_list pos:line="28" pos:column="68">(<comment type="block" pos:line="28" pos:column="69">/* invert = */</comment> <argument><expr><literal type="number" pos:line="28" pos:column="84">1<pos:position pos:line="28" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="87"/></expr_stmt>
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><name><name pos:line="29" pos:column="21">cfg_volume_perf<pos:position pos:line="29" pos:column="36"/></name><operator pos:line="29" pos:column="36">-&gt;<pos:position pos:line="29" pos:column="41"/></operator><name pos:line="29" pos:column="38">il_operations<pos:position pos:line="29" pos:column="51"/></name></name> <operator pos:line="29" pos:column="52">==<pos:position pos:line="29" pos:column="54"/></operator> <name pos:line="29" pos:column="55">NULL<pos:position pos:line="29" pos:column="59"/></name></expr>)<pos:position pos:line="29" pos:column="60"/></condition><then pos:line="29" pos:column="60">
		<block pos:line="30" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="31" pos:column="25">ignorelist_free<pos:position pos:line="31" pos:column="40"/></name> <argument_list pos:line="31" pos:column="41">(<argument><expr><name><name pos:line="31" pos:column="42">cfg_volume_perf<pos:position pos:line="31" pos:column="57"/></name><operator pos:line="31" pos:column="57">-&gt;<pos:position pos:line="31" pos:column="62"/></operator><name pos:line="31" pos:column="59">il_octets<pos:position pos:line="31" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="70"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="32" pos:column="25">sfree<pos:position pos:line="32" pos:column="30"/></name> <argument_list pos:line="32" pos:column="31">(<argument><expr><name pos:line="32" pos:column="32">cfg_volume_perf<pos:position pos:line="32" pos:column="47"/></name></expr></argument>)<pos:position pos:line="32" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="49"/></expr_stmt>
			<return pos:line="33" pos:column="25">return <expr><operator pos:line="33" pos:column="32">(<pos:position pos:line="33" pos:column="33"/></operator><name pos:line="33" pos:column="33">ENOMEM<pos:position pos:line="33" pos:column="39"/></name><operator pos:line="33" pos:column="39">)<pos:position pos:line="33" pos:column="40"/></operator></expr>;<pos:position pos:line="33" pos:column="41"/></return>
		}<pos:position pos:line="34" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name><name pos:line="36" pos:column="17">cfg_volume_perf<pos:position pos:line="36" pos:column="32"/></name><operator pos:line="36" pos:column="32">-&gt;<pos:position pos:line="36" pos:column="37"/></operator><name pos:line="36" pos:column="34">il_latency<pos:position pos:line="36" pos:column="44"/></name></name> <operator pos:line="36" pos:column="45">=<pos:position pos:line="36" pos:column="46"/></operator> <call><name pos:line="36" pos:column="47">ignorelist_create<pos:position pos:line="36" pos:column="64"/></name> <argument_list pos:line="36" pos:column="65">(<comment type="block" pos:line="36" pos:column="66">/* invert = */</comment> <argument><expr><literal type="number" pos:line="36" pos:column="81">1<pos:position pos:line="36" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="84"/></expr_stmt>
		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><name><name pos:line="37" pos:column="21">cfg_volume_perf<pos:position pos:line="37" pos:column="36"/></name><operator pos:line="37" pos:column="36">-&gt;<pos:position pos:line="37" pos:column="41"/></operator><name pos:line="37" pos:column="38">il_latency<pos:position pos:line="37" pos:column="48"/></name></name> <operator pos:line="37" pos:column="49">==<pos:position pos:line="37" pos:column="51"/></operator> <name pos:line="37" pos:column="52">NULL<pos:position pos:line="37" pos:column="56"/></name></expr>)<pos:position pos:line="37" pos:column="57"/></condition><then pos:line="37" pos:column="57">
		<block pos:line="38" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="39" pos:column="25">ignorelist_free<pos:position pos:line="39" pos:column="40"/></name> <argument_list pos:line="39" pos:column="41">(<argument><expr><name><name pos:line="39" pos:column="42">cfg_volume_perf<pos:position pos:line="39" pos:column="57"/></name><operator pos:line="39" pos:column="57">-&gt;<pos:position pos:line="39" pos:column="62"/></operator><name pos:line="39" pos:column="59">il_octets<pos:position pos:line="39" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="70"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="40" pos:column="25">ignorelist_free<pos:position pos:line="40" pos:column="40"/></name> <argument_list pos:line="40" pos:column="41">(<argument><expr><name><name pos:line="40" pos:column="42">cfg_volume_perf<pos:position pos:line="40" pos:column="57"/></name><operator pos:line="40" pos:column="57">-&gt;<pos:position pos:line="40" pos:column="62"/></operator><name pos:line="40" pos:column="59">il_operations<pos:position pos:line="40" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="74"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="41" pos:column="25">sfree<pos:position pos:line="41" pos:column="30"/></name> <argument_list pos:line="41" pos:column="31">(<argument><expr><name pos:line="41" pos:column="32">cfg_volume_perf<pos:position pos:line="41" pos:column="47"/></name></expr></argument>)<pos:position pos:line="41" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="49"/></expr_stmt>
			<return pos:line="42" pos:column="25">return <expr><operator pos:line="42" pos:column="32">(<pos:position pos:line="42" pos:column="33"/></operator><name pos:line="42" pos:column="33">ENOMEM<pos:position pos:line="42" pos:column="39"/></name><operator pos:line="42" pos:column="39">)<pos:position pos:line="42" pos:column="40"/></operator></expr>;<pos:position pos:line="42" pos:column="41"/></return>
		}<pos:position pos:line="43" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name><name pos:line="45" pos:column="17">host<pos:position pos:line="45" pos:column="21"/></name><operator pos:line="45" pos:column="21">-&gt;<pos:position pos:line="45" pos:column="26"/></operator><name pos:line="45" pos:column="23">cfg_volume_perf<pos:position pos:line="45" pos:column="38"/></name></name> <operator pos:line="45" pos:column="39">=<pos:position pos:line="45" pos:column="40"/></operator> <name pos:line="45" pos:column="41">cfg_volume_perf<pos:position pos:line="45" pos:column="56"/></name></expr>;<pos:position pos:line="45" pos:column="57"/></expr_stmt>
	}<pos:position pos:line="46" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="47" pos:column="9">cfg_volume_perf<pos:position pos:line="47" pos:column="24"/></name> <operator pos:line="47" pos:column="25">=<pos:position pos:line="47" pos:column="26"/></operator> <name><name pos:line="47" pos:column="27">host<pos:position pos:line="47" pos:column="31"/></name><operator pos:line="47" pos:column="31">-&gt;<pos:position pos:line="47" pos:column="36"/></operator><name pos:line="47" pos:column="33">cfg_volume_perf<pos:position pos:line="47" pos:column="48"/></name></name></expr>;<pos:position pos:line="47" pos:column="49"/></expr_stmt>
	
	<for pos:line="49" pos:column="9">for <control pos:line="49" pos:column="13">(<init><expr><name pos:line="49" pos:column="14">i<pos:position pos:line="49" pos:column="15"/></name> <operator pos:line="49" pos:column="16">=<pos:position pos:line="49" pos:column="17"/></operator> <literal type="number" pos:line="49" pos:column="18">0<pos:position pos:line="49" pos:column="19"/></literal></expr>;<pos:position pos:line="49" pos:column="20"/></init> <condition><expr><name pos:line="49" pos:column="21">i<pos:position pos:line="49" pos:column="22"/></name> <operator pos:line="49" pos:column="23">&lt;<pos:position pos:line="49" pos:column="27"/></operator> <name><name pos:line="49" pos:column="25">ci<pos:position pos:line="49" pos:column="27"/></name><operator pos:line="49" pos:column="27">-&gt;<pos:position pos:line="49" pos:column="32"/></operator><name pos:line="49" pos:column="29">children_num<pos:position pos:line="49" pos:column="41"/></name></name></expr>;<pos:position pos:line="49" pos:column="42"/></condition> <incr><expr><operator pos:line="49" pos:column="43">++<pos:position pos:line="49" pos:column="45"/></operator><name pos:line="49" pos:column="45">i<pos:position pos:line="49" pos:column="46"/></name></expr></incr>)<pos:position pos:line="49" pos:column="47"/></control> <block pos:line="49" pos:column="48">{
		<decl_stmt><decl><type><name pos:line="50" pos:column="17">oconfig_item_t<pos:position pos:line="50" pos:column="31"/></name> <modifier pos:line="50" pos:column="32">*<pos:position pos:line="50" pos:column="33"/></modifier></type><name pos:line="50" pos:column="33">item<pos:position pos:line="50" pos:column="37"/></name> <init pos:line="50" pos:column="38">= <expr><name><name pos:line="50" pos:column="40">ci<pos:position pos:line="50" pos:column="42"/></name><operator pos:line="50" pos:column="42">-&gt;<pos:position pos:line="50" pos:column="47"/></operator><name pos:line="50" pos:column="44">children<pos:position pos:line="50" pos:column="52"/></name></name> <operator pos:line="50" pos:column="53">+<pos:position pos:line="50" pos:column="54"/></operator> <name pos:line="50" pos:column="55">i<pos:position pos:line="50" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="50" pos:column="57"/></decl_stmt>
		
		<comment type="block" pos:line="52" pos:column="17">/* if (!item || !item-&gt;key || !*item-&gt;key) continue; */</comment>
		<if pos:line="53" pos:column="17">if <condition pos:line="53" pos:column="20">(<expr><call><name pos:line="53" pos:column="21">strcasecmp<pos:position pos:line="53" pos:column="31"/></name><argument_list pos:line="53" pos:column="31">(<argument><expr><name><name pos:line="53" pos:column="32">item<pos:position pos:line="53" pos:column="36"/></name><operator pos:line="53" pos:column="36">-&gt;<pos:position pos:line="53" pos:column="41"/></operator><name pos:line="53" pos:column="38">key<pos:position pos:line="53" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="43">"Interval"<pos:position pos:line="53" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="54"/></argument_list></call> <operator pos:line="53" pos:column="55">==<pos:position pos:line="53" pos:column="57"/></operator> <literal type="number" pos:line="53" pos:column="58">0<pos:position pos:line="53" pos:column="59"/></literal></expr>)<pos:position pos:line="53" pos:column="60"/></condition><then pos:line="53" pos:column="60">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="25">cna_config_get_interval<pos:position pos:line="54" pos:column="48"/></name> <argument_list pos:line="54" pos:column="49">(<argument><expr><name pos:line="54" pos:column="50">item<pos:position pos:line="54" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="56">&amp;<pos:position pos:line="54" pos:column="61"/></operator><name><name pos:line="54" pos:column="57">cfg_volume_perf<pos:position pos:line="54" pos:column="72"/></name><operator pos:line="54" pos:column="72">-&gt;<pos:position pos:line="54" pos:column="77"/></operator><name pos:line="54" pos:column="74">interval<pos:position pos:line="54" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="84"/></expr_stmt></block></then>
		<elseif pos:line="55" pos:column="17">else <if pos:line="55" pos:column="22">if <condition pos:line="55" pos:column="25">(<expr><operator pos:line="55" pos:column="26">!<pos:position pos:line="55" pos:column="27"/></operator><call><name pos:line="55" pos:column="27">strcasecmp<pos:position pos:line="55" pos:column="37"/></name><argument_list pos:line="55" pos:column="37">(<argument><expr><name><name pos:line="55" pos:column="38">item<pos:position pos:line="55" pos:column="42"/></name><operator pos:line="55" pos:column="42">-&gt;<pos:position pos:line="55" pos:column="47"/></operator><name pos:line="55" pos:column="44">key<pos:position pos:line="55" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="49">"GetIO"<pos:position pos:line="55" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="58"/></condition><then pos:line="55" pos:column="58">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="56" pos:column="25">cna_config_volume_perf_option<pos:position pos:line="56" pos:column="54"/></name> <argument_list pos:line="56" pos:column="55">(<argument><expr><name pos:line="56" pos:column="56">cfg_volume_perf<pos:position pos:line="56" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="73">item<pos:position pos:line="56" pos:column="77"/></name></expr></argument>)<pos:position pos:line="56" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="79"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="57" pos:column="17">else <if pos:line="57" pos:column="22">if <condition pos:line="57" pos:column="25">(<expr><operator pos:line="57" pos:column="26">!<pos:position pos:line="57" pos:column="27"/></operator><call><name pos:line="57" pos:column="27">strcasecmp<pos:position pos:line="57" pos:column="37"/></name><argument_list pos:line="57" pos:column="37">(<argument><expr><name><name pos:line="57" pos:column="38">item<pos:position pos:line="57" pos:column="42"/></name><operator pos:line="57" pos:column="42">-&gt;<pos:position pos:line="57" pos:column="47"/></operator><name pos:line="57" pos:column="44">key<pos:position pos:line="57" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="49">"GetOps"<pos:position pos:line="57" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="57" pos:column="59"/></condition><then pos:line="57" pos:column="59">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="25">cna_config_volume_perf_option<pos:position pos:line="58" pos:column="54"/></name> <argument_list pos:line="58" pos:column="55">(<argument><expr><name pos:line="58" pos:column="56">cfg_volume_perf<pos:position pos:line="58" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="73">item<pos:position pos:line="58" pos:column="77"/></name></expr></argument>)<pos:position pos:line="58" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="79"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="59" pos:column="17">else <if pos:line="59" pos:column="22">if <condition pos:line="59" pos:column="25">(<expr><operator pos:line="59" pos:column="26">!<pos:position pos:line="59" pos:column="27"/></operator><call><name pos:line="59" pos:column="27">strcasecmp<pos:position pos:line="59" pos:column="37"/></name><argument_list pos:line="59" pos:column="37">(<argument><expr><name><name pos:line="59" pos:column="38">item<pos:position pos:line="59" pos:column="42"/></name><operator pos:line="59" pos:column="42">-&gt;<pos:position pos:line="59" pos:column="47"/></operator><name pos:line="59" pos:column="44">key<pos:position pos:line="59" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="49">"GetLatency"<pos:position pos:line="59" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="59" pos:column="63"/></condition><then pos:line="59" pos:column="63">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="60" pos:column="25">cna_config_volume_perf_option<pos:position pos:line="60" pos:column="54"/></name> <argument_list pos:line="60" pos:column="55">(<argument><expr><name pos:line="60" pos:column="56">cfg_volume_perf<pos:position pos:line="60" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="73">item<pos:position pos:line="60" pos:column="77"/></name></expr></argument>)<pos:position pos:line="60" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="79"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="61" pos:column="17">else <if pos:line="61" pos:column="22">if <condition pos:line="61" pos:column="25">(<expr><operator pos:line="61" pos:column="26">!<pos:position pos:line="61" pos:column="27"/></operator><call><name pos:line="61" pos:column="27">strcasecmp<pos:position pos:line="61" pos:column="37"/></name><argument_list pos:line="61" pos:column="37">(<argument><expr><name><name pos:line="61" pos:column="38">item<pos:position pos:line="61" pos:column="42"/></name><operator pos:line="61" pos:column="42">-&gt;<pos:position pos:line="61" pos:column="47"/></operator><name pos:line="61" pos:column="44">key<pos:position pos:line="61" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="49">"IgnoreSelectedIO"<pos:position pos:line="61" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="69"/></condition><then pos:line="61" pos:column="69">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="25">cna_config_volume_perf_default<pos:position pos:line="62" pos:column="55"/></name> <argument_list pos:line="62" pos:column="56">(<argument><expr><name pos:line="62" pos:column="57">cfg_volume_perf<pos:position pos:line="62" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="74">item<pos:position pos:line="62" pos:column="78"/></name></expr></argument>)<pos:position pos:line="62" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="80"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="63" pos:column="17">else <if pos:line="63" pos:column="22">if <condition pos:line="63" pos:column="25">(<expr><operator pos:line="63" pos:column="26">!<pos:position pos:line="63" pos:column="27"/></operator><call><name pos:line="63" pos:column="27">strcasecmp<pos:position pos:line="63" pos:column="37"/></name><argument_list pos:line="63" pos:column="37">(<argument><expr><name><name pos:line="63" pos:column="38">item<pos:position pos:line="63" pos:column="42"/></name><operator pos:line="63" pos:column="42">-&gt;<pos:position pos:line="63" pos:column="47"/></operator><name pos:line="63" pos:column="44">key<pos:position pos:line="63" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="49">"IgnoreSelectedOps"<pos:position pos:line="63" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="63" pos:column="70"/></condition><then pos:line="63" pos:column="70">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="25">cna_config_volume_perf_default<pos:position pos:line="64" pos:column="55"/></name> <argument_list pos:line="64" pos:column="56">(<argument><expr><name pos:line="64" pos:column="57">cfg_volume_perf<pos:position pos:line="64" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="74">item<pos:position pos:line="64" pos:column="78"/></name></expr></argument>)<pos:position pos:line="64" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="80"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="65" pos:column="17">else <if pos:line="65" pos:column="22">if <condition pos:line="65" pos:column="25">(<expr><operator pos:line="65" pos:column="26">!<pos:position pos:line="65" pos:column="27"/></operator><call><name pos:line="65" pos:column="27">strcasecmp<pos:position pos:line="65" pos:column="37"/></name><argument_list pos:line="65" pos:column="37">(<argument><expr><name><name pos:line="65" pos:column="38">item<pos:position pos:line="65" pos:column="42"/></name><operator pos:line="65" pos:column="42">-&gt;<pos:position pos:line="65" pos:column="47"/></operator><name pos:line="65" pos:column="44">key<pos:position pos:line="65" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="49">"IgnoreSelectedLatency"<pos:position pos:line="65" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="65" pos:column="74"/></condition><then pos:line="65" pos:column="74">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="66" pos:column="25">cna_config_volume_perf_default<pos:position pos:line="66" pos:column="55"/></name> <argument_list pos:line="66" pos:column="56">(<argument><expr><name pos:line="66" pos:column="57">cfg_volume_perf<pos:position pos:line="66" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="74">item<pos:position pos:line="66" pos:column="78"/></name></expr></argument>)<pos:position pos:line="66" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="80"/></expr_stmt></block></then></if></elseif>
		<else pos:line="67" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="68" pos:column="25">WARNING<pos:position pos:line="68" pos:column="32"/></name> <argument_list pos:line="68" pos:column="33">(<argument><expr><literal type="string" pos:line="68" pos:column="34">"netapp plugin: The option %s is not allowed within "<pos:position pos:line="68" pos:column="87"/></literal>
					<literal type="string" pos:line="69" pos:column="41">"`VolumePerf' blocks."<pos:position pos:line="69" pos:column="63"/></literal></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="65">item<pos:position pos:line="69" pos:column="69"/></name><operator pos:line="69" pos:column="69">-&gt;<pos:position pos:line="69" pos:column="74"/></operator><name pos:line="69" pos:column="71">key<pos:position pos:line="69" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="76"/></expr_stmt></block></else></if>
	}<pos:position pos:line="70" pos:column="10"/></block></for>

	<return pos:line="72" pos:column="9">return <expr><operator pos:line="72" pos:column="16">(<pos:position pos:line="72" pos:column="17"/></operator><literal type="number" pos:line="72" pos:column="17">0<pos:position pos:line="72" pos:column="18"/></literal><operator pos:line="72" pos:column="18">)<pos:position pos:line="72" pos:column="19"/></operator></expr>;<pos:position pos:line="72" pos:column="20"/></return>
}<pos:position pos:line="73" pos:column="2"/></block></function></unit>

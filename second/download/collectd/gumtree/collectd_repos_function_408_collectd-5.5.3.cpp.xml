<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_408_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">numa_read_node<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">int<pos:position pos:line="1" pos:column="31"/></name></type> <name pos:line="1" pos:column="32">node<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="37"/></parameter_list> <comment type="block" pos:line="1" pos:column="38">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">path<pos:position pos:line="3" pos:column="12"/></name><index pos:line="3" pos:column="12">[<expr><name pos:line="3" pos:column="13">PATH_MAX<pos:position pos:line="3" pos:column="21"/></name></expr>]<pos:position pos:line="3" pos:column="22"/></index></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">FILE<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">fh<pos:position pos:line="4" pos:column="11"/></name></decl>;<pos:position pos:line="4" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">buffer<pos:position pos:line="5" pos:column="14"/></name><index pos:line="5" pos:column="14">[<expr><literal type="number" pos:line="5" pos:column="15">128<pos:position pos:line="5" pos:column="18"/></literal></expr>]<pos:position pos:line="5" pos:column="19"/></index></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">status<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">success<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="9" pos:column="3">ssnprintf<pos:position pos:line="9" pos:column="12"/></name> <argument_list pos:line="9" pos:column="13">(<argument><expr><name pos:line="9" pos:column="14">path<pos:position pos:line="9" pos:column="18"/></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="20">sizeof <argument_list pos:line="9" pos:column="27">(<argument><expr><name pos:line="9" pos:column="28">path<pos:position pos:line="9" pos:column="32"/></name></expr></argument>)<pos:position pos:line="9" pos:column="33"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="9" pos:column="35">NUMA_ROOT_DIR<pos:position pos:line="9" pos:column="48"/></name> <literal type="string" pos:line="9" pos:column="49">"/node%i/numastat"<pos:position pos:line="9" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="69">node<pos:position pos:line="9" pos:column="73"/></name></expr></argument>)<pos:position pos:line="9" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="75"/></expr_stmt>

  <expr_stmt><expr><name pos:line="11" pos:column="3">fh<pos:position pos:line="11" pos:column="5"/></name> <operator pos:line="11" pos:column="6">=<pos:position pos:line="11" pos:column="7"/></operator> <call><name pos:line="11" pos:column="8">fopen<pos:position pos:line="11" pos:column="13"/></name> <argument_list pos:line="11" pos:column="14">(<argument><expr><name pos:line="11" pos:column="15">path<pos:position pos:line="11" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="21">"r"<pos:position pos:line="11" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="26"/></expr_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">fh<pos:position pos:line="12" pos:column="9"/></name> <operator pos:line="12" pos:column="10">==<pos:position pos:line="12" pos:column="12"/></operator> <name pos:line="12" pos:column="13">NULL<pos:position pos:line="12" pos:column="17"/></name></expr>)<pos:position pos:line="12" pos:column="18"/></condition><then pos:line="12" pos:column="18">
  <block pos:line="13" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">char<pos:position pos:line="14" pos:column="9"/></name></type> <name><name pos:line="14" pos:column="10">errbuf<pos:position pos:line="14" pos:column="16"/></name><index pos:line="14" pos:column="16">[<expr><literal type="number" pos:line="14" pos:column="17">1024<pos:position pos:line="14" pos:column="21"/></literal></expr>]<pos:position pos:line="14" pos:column="22"/></index></name></decl>;<pos:position pos:line="14" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">ERROR<pos:position pos:line="15" pos:column="10"/></name> <argument_list pos:line="15" pos:column="11">(<argument><expr><literal type="string" pos:line="15" pos:column="12">"numa plugin: Reading node %i failed: open(%s): %s"<pos:position pos:line="15" pos:column="63"/></literal></expr></argument>,
        <argument><expr><name pos:line="16" pos:column="9">node<pos:position pos:line="16" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="15">path<pos:position pos:line="16" pos:column="19"/></name></expr></argument>, <argument><expr><call><name pos:line="16" pos:column="21">sstrerror<pos:position pos:line="16" pos:column="30"/></name> <argument_list pos:line="16" pos:column="31">(<argument><expr><name pos:line="16" pos:column="32">errno<pos:position pos:line="16" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="39">errbuf<pos:position pos:line="16" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="47">sizeof <argument_list pos:line="16" pos:column="54">(<argument><expr><name pos:line="16" pos:column="55">errbuf<pos:position pos:line="16" pos:column="61"/></name></expr></argument>)<pos:position pos:line="16" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="65"/></expr_stmt>
    <return pos:line="17" pos:column="5">return <expr><operator pos:line="17" pos:column="12">(<pos:position pos:line="17" pos:column="13"/></operator><operator pos:line="17" pos:column="13">-<pos:position pos:line="17" pos:column="14"/></operator><literal type="number" pos:line="17" pos:column="14">1<pos:position pos:line="17" pos:column="15"/></literal><operator pos:line="17" pos:column="15">)<pos:position pos:line="17" pos:column="16"/></operator></expr>;<pos:position pos:line="17" pos:column="17"/></return>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="20" pos:column="3">success<pos:position pos:line="20" pos:column="10"/></name> <operator pos:line="20" pos:column="11">=<pos:position pos:line="20" pos:column="12"/></operator> <literal type="number" pos:line="20" pos:column="13">0<pos:position pos:line="20" pos:column="14"/></literal></expr>;<pos:position pos:line="20" pos:column="15"/></expr_stmt>
  <while pos:line="21" pos:column="3">while <condition pos:line="21" pos:column="9">(<expr><call><name pos:line="21" pos:column="10">fgets<pos:position pos:line="21" pos:column="15"/></name> <argument_list pos:line="21" pos:column="16">(<argument><expr><name pos:line="21" pos:column="17">buffer<pos:position pos:line="21" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="25">sizeof <argument_list pos:line="21" pos:column="32">(<argument><expr><name pos:line="21" pos:column="33">buffer<pos:position pos:line="21" pos:column="39"/></name></expr></argument>)<pos:position pos:line="21" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="21" pos:column="42">fh<pos:position pos:line="21" pos:column="44"/></name></expr></argument>)<pos:position pos:line="21" pos:column="45"/></argument_list></call> <operator pos:line="21" pos:column="46">!=<pos:position pos:line="21" pos:column="48"/></operator> <name pos:line="21" pos:column="49">NULL<pos:position pos:line="21" pos:column="53"/></name></expr>)<pos:position pos:line="21" pos:column="54"/></condition>
  <block pos:line="22" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">char<pos:position pos:line="23" pos:column="9"/></name> <modifier pos:line="23" pos:column="10">*<pos:position pos:line="23" pos:column="11"/></modifier></type><name><name pos:line="23" pos:column="11">fields<pos:position pos:line="23" pos:column="17"/></name><index pos:line="23" pos:column="17">[<expr><literal type="number" pos:line="23" pos:column="18">4<pos:position pos:line="23" pos:column="19"/></literal></expr>]<pos:position pos:line="23" pos:column="20"/></index></name></decl>;<pos:position pos:line="23" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">value_t<pos:position pos:line="24" pos:column="12"/></name></type> <name pos:line="24" pos:column="13">v<pos:position pos:line="24" pos:column="14"/></name></decl>;<pos:position pos:line="24" pos:column="15"/></decl_stmt>

    <expr_stmt><expr><name pos:line="26" pos:column="5">status<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <call><name pos:line="26" pos:column="14">strsplit<pos:position pos:line="26" pos:column="22"/></name> <argument_list pos:line="26" pos:column="23">(<argument><expr><name pos:line="26" pos:column="24">buffer<pos:position pos:line="26" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="32">fields<pos:position pos:line="26" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="40">STATIC_ARRAY_SIZE<pos:position pos:line="26" pos:column="57"/></name> <argument_list pos:line="26" pos:column="58">(<argument><expr><name pos:line="26" pos:column="59">fields<pos:position pos:line="26" pos:column="65"/></name></expr></argument>)<pos:position pos:line="26" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="68"/></expr_stmt>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">status<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">!=<pos:position pos:line="27" pos:column="18"/></operator> <literal type="number" pos:line="27" pos:column="19">2<pos:position pos:line="27" pos:column="20"/></literal></expr>)<pos:position pos:line="27" pos:column="21"/></condition><then pos:line="27" pos:column="21">
    <block pos:line="28" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="29" pos:column="7">WARNING<pos:position pos:line="29" pos:column="14"/></name> <argument_list pos:line="29" pos:column="15">(<argument><expr><literal type="string" pos:line="29" pos:column="16">"numa plugin: Ignoring line with unexpected "<pos:position pos:line="29" pos:column="61"/></literal>
          <literal type="string" pos:line="30" pos:column="11">"number of fields (node %i)."<pos:position pos:line="30" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="42">node<pos:position pos:line="30" pos:column="46"/></name></expr></argument>)<pos:position pos:line="30" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="48"/></expr_stmt>
      <continue pos:line="31" pos:column="7">continue;<pos:position pos:line="31" pos:column="16"/></continue>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="34" pos:column="5">v<pos:position pos:line="34" pos:column="6"/></name><operator pos:line="34" pos:column="6">.<pos:position pos:line="34" pos:column="7"/></operator><name pos:line="34" pos:column="7">derive<pos:position pos:line="34" pos:column="13"/></name></name> <operator pos:line="34" pos:column="14">=<pos:position pos:line="34" pos:column="15"/></operator> <literal type="number" pos:line="34" pos:column="16">0<pos:position pos:line="34" pos:column="17"/></literal></expr>;<pos:position pos:line="34" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name pos:line="35" pos:column="5">status<pos:position pos:line="35" pos:column="11"/></name> <operator pos:line="35" pos:column="12">=<pos:position pos:line="35" pos:column="13"/></operator> <call><name pos:line="35" pos:column="14">parse_value<pos:position pos:line="35" pos:column="25"/></name> <argument_list pos:line="35" pos:column="26">(<argument><expr><name><name pos:line="35" pos:column="27">fields<pos:position pos:line="35" pos:column="33"/></name><index pos:line="35" pos:column="33">[<expr><literal type="number" pos:line="35" pos:column="34">1<pos:position pos:line="35" pos:column="35"/></literal></expr>]<pos:position pos:line="35" pos:column="36"/></index></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="38">&amp;<pos:position pos:line="35" pos:column="43"/></operator><name pos:line="35" pos:column="39">v<pos:position pos:line="35" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="42">DS_TYPE_DERIVE<pos:position pos:line="35" pos:column="56"/></name></expr></argument>)<pos:position pos:line="35" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="58"/></expr_stmt>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name pos:line="36" pos:column="9">status<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">!=<pos:position pos:line="36" pos:column="18"/></operator> <literal type="number" pos:line="36" pos:column="19">0<pos:position pos:line="36" pos:column="20"/></literal></expr>)<pos:position pos:line="36" pos:column="21"/></condition><then pos:line="36" pos:column="21">
      <block type="pseudo"><continue pos:line="37" pos:column="7">continue;<pos:position pos:line="37" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><call><name pos:line="39" pos:column="5">numa_dispatch_value<pos:position pos:line="39" pos:column="24"/></name> <argument_list pos:line="39" pos:column="25">(<argument><expr><name pos:line="39" pos:column="26">node<pos:position pos:line="39" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="32">fields<pos:position pos:line="39" pos:column="38"/></name><index pos:line="39" pos:column="38">[<expr><literal type="number" pos:line="39" pos:column="39">0<pos:position pos:line="39" pos:column="40"/></literal></expr>]<pos:position pos:line="39" pos:column="41"/></index></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="43">v<pos:position pos:line="39" pos:column="44"/></name></expr></argument>)<pos:position pos:line="39" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name pos:line="40" pos:column="5">success<pos:position pos:line="40" pos:column="12"/></name><operator pos:line="40" pos:column="12">++<pos:position pos:line="40" pos:column="14"/></operator></expr>;<pos:position pos:line="40" pos:column="15"/></expr_stmt>
  }<pos:position pos:line="41" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="43" pos:column="3">fclose<pos:position pos:line="43" pos:column="9"/></name> <argument_list pos:line="43" pos:column="10">(<argument><expr><name pos:line="43" pos:column="11">fh<pos:position pos:line="43" pos:column="13"/></name></expr></argument>)<pos:position pos:line="43" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="15"/></expr_stmt>
  <return pos:line="44" pos:column="3">return <expr><operator pos:line="44" pos:column="10">(<pos:position pos:line="44" pos:column="11"/></operator><ternary><condition><expr><name pos:line="44" pos:column="11">success<pos:position pos:line="44" pos:column="18"/></name></expr> ?<pos:position pos:line="44" pos:column="20"/></condition><then pos:line="44" pos:column="20"> <expr><literal type="number" pos:line="44" pos:column="21">0<pos:position pos:line="44" pos:column="22"/></literal></expr> <pos:position pos:line="44" pos:column="23"/></then><else pos:line="44" pos:column="23">: <expr><operator pos:line="44" pos:column="25">-<pos:position pos:line="44" pos:column="26"/></operator><literal type="number" pos:line="44" pos:column="26">1<pos:position pos:line="44" pos:column="27"/></literal></expr></else></ternary><operator pos:line="44" pos:column="27">)<pos:position pos:line="44" pos:column="28"/></operator></expr>;<pos:position pos:line="44" pos:column="29"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_882_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">synproxy_read<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">void<pos:position pos:line="1" pos:column="30"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="31"/></parameter_list> <block pos:line="1" pos:column="32">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">char<pos:position pos:line="2" pos:column="7"/></name></type> <name><name pos:line="2" pos:column="8">buf<pos:position pos:line="2" pos:column="11"/></name><index pos:line="2" pos:column="11">[<expr><literal type="number" pos:line="2" pos:column="12">1024<pos:position pos:line="2" pos:column="16"/></literal></expr>]<pos:position pos:line="2" pos:column="17"/></index></name></decl>;<pos:position pos:line="2" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">value_t<pos:position pos:line="3" pos:column="10"/></name></type> <name><name pos:line="3" pos:column="11">results<pos:position pos:line="3" pos:column="18"/></name><index pos:line="3" pos:column="18">[<expr><name pos:line="3" pos:column="19">SYNPROXY_FIELDS<pos:position pos:line="3" pos:column="34"/></name></expr>]<pos:position pos:line="3" pos:column="35"/></index></name></decl>;<pos:position pos:line="3" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">is_header<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><literal type="number" pos:line="4" pos:column="19">1<pos:position pos:line="4" pos:column="20"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="22">status<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><literal type="number" pos:line="4" pos:column="31">0<pos:position pos:line="4" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">FILE<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">fh<pos:position pos:line="6" pos:column="11"/></name> <init pos:line="6" pos:column="12">= <expr><call><name pos:line="6" pos:column="14">fopen<pos:position pos:line="6" pos:column="19"/></name><argument_list pos:line="6" pos:column="19">(<argument><expr><name pos:line="6" pos:column="20">synproxy_stat_path<pos:position pos:line="6" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="40">"r"<pos:position pos:line="6" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="45"/></decl_stmt>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">fh<pos:position pos:line="7" pos:column="9"/></name> <operator pos:line="7" pos:column="10">==<pos:position pos:line="7" pos:column="12"/></operator> <name pos:line="7" pos:column="13">NULL<pos:position pos:line="7" pos:column="17"/></name></expr>)<pos:position pos:line="7" pos:column="18"/></condition><then pos:line="7" pos:column="18"> <block pos:line="7" pos:column="19">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">ERROR<pos:position pos:line="8" pos:column="10"/></name><argument_list pos:line="8" pos:column="10">(<argument><expr><literal type="string" pos:line="8" pos:column="11">"synproxy plugin: unable to open %s"<pos:position pos:line="8" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="49">synproxy_stat_path<pos:position pos:line="8" pos:column="67"/></name></expr></argument>)<pos:position pos:line="8" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="69"/></expr_stmt>
    <return pos:line="9" pos:column="5">return <expr><operator pos:line="9" pos:column="12">-<pos:position pos:line="9" pos:column="13"/></operator><literal type="number" pos:line="9" pos:column="13">1<pos:position pos:line="9" pos:column="14"/></literal></expr>;<pos:position pos:line="9" pos:column="15"/></return>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="12" pos:column="3">memset<pos:position pos:line="12" pos:column="9"/></name><argument_list pos:line="12" pos:column="9">(<argument><expr><name pos:line="12" pos:column="10">results<pos:position pos:line="12" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="19">0<pos:position pos:line="12" pos:column="20"/></literal></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="22">sizeof<argument_list pos:line="12" pos:column="28">(<argument><expr><name pos:line="12" pos:column="29">results<pos:position pos:line="12" pos:column="36"/></name></expr></argument>)<pos:position pos:line="12" pos:column="37"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="39"/></expr_stmt>

  <while pos:line="14" pos:column="3">while <condition pos:line="14" pos:column="9">(<expr><call><name pos:line="14" pos:column="10">fgets<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><name pos:line="14" pos:column="16">buf<pos:position pos:line="14" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="21">sizeof<argument_list pos:line="14" pos:column="27">(<argument><expr><name pos:line="14" pos:column="28">buf<pos:position pos:line="14" pos:column="31"/></name></expr></argument>)<pos:position pos:line="14" pos:column="32"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="14" pos:column="34">fh<pos:position pos:line="14" pos:column="36"/></name></expr></argument>)<pos:position pos:line="14" pos:column="37"/></argument_list></call> <operator pos:line="14" pos:column="38">!=<pos:position pos:line="14" pos:column="40"/></operator> <name pos:line="14" pos:column="41">NULL<pos:position pos:line="14" pos:column="45"/></name></expr>)<pos:position pos:line="14" pos:column="46"/></condition> <block pos:line="14" pos:column="47">{
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">char<pos:position pos:line="15" pos:column="9"/></name> <modifier pos:line="15" pos:column="10">*<pos:position pos:line="15" pos:column="11"/></modifier></type><name><name pos:line="15" pos:column="11">fields<pos:position pos:line="15" pos:column="17"/></name><index pos:line="15" pos:column="17">[<expr><name pos:line="15" pos:column="18">SYNPROXY_FIELDS<pos:position pos:line="15" pos:column="33"/></name></expr>]<pos:position pos:line="15" pos:column="34"/></index></name></decl>, <modifier pos:line="15" pos:column="36">*<pos:position pos:line="15" pos:column="37"/></modifier><decl><type ref="prev"/><name pos:line="15" pos:column="37">endprt<pos:position pos:line="15" pos:column="43"/></name></decl>;<pos:position pos:line="15" pos:column="44"/></decl_stmt>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">is_header<pos:position pos:line="17" pos:column="18"/></name></expr>)<pos:position pos:line="17" pos:column="19"/></condition><then pos:line="17" pos:column="19"> <block pos:line="17" pos:column="20">{
      <expr_stmt><expr><name pos:line="18" pos:column="7">is_header<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">=<pos:position pos:line="18" pos:column="18"/></operator> <literal type="number" pos:line="18" pos:column="19">0<pos:position pos:line="18" pos:column="20"/></literal></expr>;<pos:position pos:line="18" pos:column="21"/></expr_stmt>
      <continue pos:line="19" pos:column="7">continue;<pos:position pos:line="19" pos:column="16"/></continue>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="22" pos:column="5">int<pos:position pos:line="22" pos:column="8"/></name></type> <name pos:line="22" pos:column="9">numfields<pos:position pos:line="22" pos:column="18"/></name> <init pos:line="22" pos:column="19">= <expr><call><name pos:line="22" pos:column="21">strsplit<pos:position pos:line="22" pos:column="29"/></name><argument_list pos:line="22" pos:column="29">(<argument><expr><name pos:line="22" pos:column="30">buf<pos:position pos:line="22" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="35">fields<pos:position pos:line="22" pos:column="41"/></name></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="43">STATIC_ARRAY_SIZE<pos:position pos:line="22" pos:column="60"/></name><argument_list pos:line="22" pos:column="60">(<argument><expr><name pos:line="22" pos:column="61">fields<pos:position pos:line="22" pos:column="67"/></name></expr></argument>)<pos:position pos:line="22" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="22" pos:column="70"/></decl_stmt>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name pos:line="23" pos:column="9">numfields<pos:position pos:line="23" pos:column="18"/></name> <operator pos:line="23" pos:column="19">!=<pos:position pos:line="23" pos:column="21"/></operator> <name pos:line="23" pos:column="22">SYNPROXY_FIELDS<pos:position pos:line="23" pos:column="37"/></name></expr>)<pos:position pos:line="23" pos:column="38"/></condition><then pos:line="23" pos:column="38"> <block pos:line="23" pos:column="39">{
      <expr_stmt><expr><call><name pos:line="24" pos:column="7">ERROR<pos:position pos:line="24" pos:column="12"/></name><argument_list pos:line="24" pos:column="12">(<argument><expr><literal type="string" pos:line="24" pos:column="13">"synproxy plugin: unexpected number of columns in %s"<pos:position pos:line="24" pos:column="66"/></literal></expr></argument>,
            <argument><expr><name pos:line="25" pos:column="13">synproxy_stat_path<pos:position pos:line="25" pos:column="31"/></name></expr></argument>)<pos:position pos:line="25" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><name pos:line="26" pos:column="7">status<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">=<pos:position pos:line="26" pos:column="15"/></operator> <operator pos:line="26" pos:column="16">-<pos:position pos:line="26" pos:column="17"/></operator><literal type="number" pos:line="26" pos:column="17">1<pos:position pos:line="26" pos:column="18"/></literal></expr>;<pos:position pos:line="26" pos:column="19"/></expr_stmt>
      <break pos:line="27" pos:column="7">break;<pos:position pos:line="27" pos:column="13"/></break>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="30" pos:column="5">/* 1st column (entries) is hardcoded to 0 in kernel code */</comment>
    <for pos:line="31" pos:column="5">for <control pos:line="31" pos:column="9">(<init><decl><type><name pos:line="31" pos:column="10">size_t<pos:position pos:line="31" pos:column="16"/></name></type> <name pos:line="31" pos:column="17">n<pos:position pos:line="31" pos:column="18"/></name> <init pos:line="31" pos:column="19">= <expr><literal type="number" pos:line="31" pos:column="21">1<pos:position pos:line="31" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="31" pos:column="23"/></init> <condition><expr><name pos:line="31" pos:column="24">n<pos:position pos:line="31" pos:column="25"/></name> <operator pos:line="31" pos:column="26">&lt;<pos:position pos:line="31" pos:column="30"/></operator> <name pos:line="31" pos:column="28">SYNPROXY_FIELDS<pos:position pos:line="31" pos:column="43"/></name></expr>;<pos:position pos:line="31" pos:column="44"/></condition> <incr><expr><name pos:line="31" pos:column="45">n<pos:position pos:line="31" pos:column="46"/></name><operator pos:line="31" pos:column="46">++<pos:position pos:line="31" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="31" pos:column="49"/></control> <block pos:line="31" pos:column="50">{
      <decl_stmt><decl><type><name pos:line="32" pos:column="7">char<pos:position pos:line="32" pos:column="11"/></name> <modifier pos:line="32" pos:column="12">*<pos:position pos:line="32" pos:column="13"/></modifier></type><name pos:line="32" pos:column="13">endptr<pos:position pos:line="32" pos:column="19"/></name> <init pos:line="32" pos:column="20">= <expr><name pos:line="32" pos:column="22">NULL<pos:position pos:line="32" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="32" pos:column="27"/></decl_stmt>
      <expr_stmt><expr><name pos:line="33" pos:column="7">errno<pos:position pos:line="33" pos:column="12"/></name> <operator pos:line="33" pos:column="13">=<pos:position pos:line="33" pos:column="14"/></operator> <literal type="number" pos:line="33" pos:column="15">0<pos:position pos:line="33" pos:column="16"/></literal></expr>;<pos:position pos:line="33" pos:column="17"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="35" pos:column="7">results<pos:position pos:line="35" pos:column="14"/></name><index pos:line="35" pos:column="14">[<expr><name pos:line="35" pos:column="15">n<pos:position pos:line="35" pos:column="16"/></name></expr>]<pos:position pos:line="35" pos:column="17"/></index></name><operator pos:line="35" pos:column="17">.<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="18">derive<pos:position pos:line="35" pos:column="24"/></name> <operator pos:line="35" pos:column="25">+=<pos:position pos:line="35" pos:column="27"/></operator> <call><name pos:line="35" pos:column="28">strtoull<pos:position pos:line="35" pos:column="36"/></name><argument_list pos:line="35" pos:column="36">(<argument><expr><name><name pos:line="35" pos:column="37">fields<pos:position pos:line="35" pos:column="43"/></name><index pos:line="35" pos:column="43">[<expr><name pos:line="35" pos:column="44">n<pos:position pos:line="35" pos:column="45"/></name></expr>]<pos:position pos:line="35" pos:column="46"/></index></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="48">&amp;<pos:position pos:line="35" pos:column="53"/></operator><name pos:line="35" pos:column="49">endprt<pos:position pos:line="35" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="57">16<pos:position pos:line="35" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="61"/></expr_stmt>
      <if pos:line="36" pos:column="7">if <condition pos:line="36" pos:column="10">(<expr><operator pos:line="36" pos:column="11">(<pos:position pos:line="36" pos:column="12"/></operator><name pos:line="36" pos:column="12">endptr<pos:position pos:line="36" pos:column="18"/></name> <operator pos:line="36" pos:column="19">==<pos:position pos:line="36" pos:column="21"/></operator> <name><name pos:line="36" pos:column="22">fields<pos:position pos:line="36" pos:column="28"/></name><index pos:line="36" pos:column="28">[<expr><name pos:line="36" pos:column="29">n<pos:position pos:line="36" pos:column="30"/></name></expr>]<pos:position pos:line="36" pos:column="31"/></index></name><operator pos:line="36" pos:column="31">)<pos:position pos:line="36" pos:column="32"/></operator> <operator pos:line="36" pos:column="33">||<pos:position pos:line="36" pos:column="35"/></operator> <name pos:line="36" pos:column="36">errno<pos:position pos:line="36" pos:column="41"/></name> <operator pos:line="36" pos:column="42">!=<pos:position pos:line="36" pos:column="44"/></operator> <literal type="number" pos:line="36" pos:column="45">0<pos:position pos:line="36" pos:column="46"/></literal></expr>)<pos:position pos:line="36" pos:column="47"/></condition><then pos:line="36" pos:column="47"> <block pos:line="36" pos:column="48">{
        <expr_stmt><expr><call><name pos:line="37" pos:column="9">ERROR<pos:position pos:line="37" pos:column="14"/></name><argument_list pos:line="37" pos:column="14">(<argument><expr><literal type="string" pos:line="37" pos:column="15">"synproxy plugin: unable to parse value: %s"<pos:position pos:line="37" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="61">fields<pos:position pos:line="37" pos:column="67"/></name><index pos:line="37" pos:column="67">[<expr><name pos:line="37" pos:column="68">n<pos:position pos:line="37" pos:column="69"/></name></expr>]<pos:position pos:line="37" pos:column="70"/></index></name></expr></argument>)<pos:position pos:line="37" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">fclose<pos:position pos:line="38" pos:column="15"/></name><argument_list pos:line="38" pos:column="15">(<argument><expr><name pos:line="38" pos:column="16">fh<pos:position pos:line="38" pos:column="18"/></name></expr></argument>)<pos:position pos:line="38" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="20"/></expr_stmt>
        <return pos:line="39" pos:column="9">return <expr><operator pos:line="39" pos:column="16">-<pos:position pos:line="39" pos:column="17"/></operator><literal type="number" pos:line="39" pos:column="17">1<pos:position pos:line="39" pos:column="18"/></literal></expr>;<pos:position pos:line="39" pos:column="19"/></return>
      }<pos:position pos:line="40" pos:column="8"/></block></then></if>
    }<pos:position pos:line="41" pos:column="6"/></block></for>
  }<pos:position pos:line="42" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="44" pos:column="3">fclose<pos:position pos:line="44" pos:column="9"/></name><argument_list pos:line="44" pos:column="9">(<argument><expr><name pos:line="44" pos:column="10">fh<pos:position pos:line="44" pos:column="12"/></name></expr></argument>)<pos:position pos:line="44" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="14"/></expr_stmt>

  <if pos:line="46" pos:column="3">if <condition pos:line="46" pos:column="6">(<expr><name pos:line="46" pos:column="7">status<pos:position pos:line="46" pos:column="13"/></name> <operator pos:line="46" pos:column="14">==<pos:position pos:line="46" pos:column="16"/></operator> <literal type="number" pos:line="46" pos:column="17">0<pos:position pos:line="46" pos:column="18"/></literal></expr>)<pos:position pos:line="46" pos:column="19"/></condition><then pos:line="46" pos:column="19"> <block pos:line="46" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">synproxy_submit<pos:position pos:line="47" pos:column="20"/></name><argument_list pos:line="47" pos:column="20">(<argument><expr><name pos:line="47" pos:column="21">results<pos:position pos:line="47" pos:column="28"/></name></expr></argument>)<pos:position pos:line="47" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="30"/></expr_stmt>
  }<pos:position pos:line="48" pos:column="4"/></block></then></if>

  <return pos:line="50" pos:column="3">return <expr><name pos:line="50" pos:column="10">status<pos:position pos:line="50" pos:column="16"/></name></expr>;<pos:position pos:line="50" pos:column="17"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

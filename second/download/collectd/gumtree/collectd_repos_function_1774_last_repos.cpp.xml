<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1774_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dpdk_shm_init<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">name<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">size_t<pos:position pos:line="1" pos:column="50"/></name></type> <name pos:line="1" pos:column="51">size<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">void<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier><modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">map<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list> <block pos:line="1" pos:column="69">{
  <expr_stmt><expr><call><name pos:line="2" pos:column="3">DPDK_HELPER_TRACE<pos:position pos:line="2" pos:column="20"/></name><argument_list pos:line="2" pos:column="20">(<argument><expr><name pos:line="2" pos:column="21">name<pos:position pos:line="2" pos:column="25"/></name></expr></argument>)<pos:position pos:line="2" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="2" pos:column="27"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">errbuf<pos:position pos:line="4" pos:column="14"/></name><index pos:line="4" pos:column="14">[<expr><name pos:line="4" pos:column="15">ERR_BUF_SIZE<pos:position pos:line="4" pos:column="27"/></name></expr>]<pos:position pos:line="4" pos:column="28"/></index></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">fd<pos:position pos:line="6" pos:column="9"/></name> <init pos:line="6" pos:column="10">= <expr><call><name pos:line="6" pos:column="12">shm_open<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><name pos:line="6" pos:column="21">name<pos:position pos:line="6" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="27">O_CREAT<pos:position pos:line="6" pos:column="34"/></name> <operator pos:line="6" pos:column="35">|<pos:position pos:line="6" pos:column="36"/></operator> <name pos:line="6" pos:column="37">O_TRUNC<pos:position pos:line="6" pos:column="44"/></name> <operator pos:line="6" pos:column="45">|<pos:position pos:line="6" pos:column="46"/></operator> <name pos:line="6" pos:column="47">O_RDWR<pos:position pos:line="6" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="55">0666<pos:position pos:line="6" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="61"/></decl_stmt>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">fd<pos:position pos:line="7" pos:column="9"/></name> <operator pos:line="7" pos:column="10">&lt;<pos:position pos:line="7" pos:column="14"/></operator> <literal type="number" pos:line="7" pos:column="12">0<pos:position pos:line="7" pos:column="13"/></literal></expr>)<pos:position pos:line="7" pos:column="14"/></condition><then pos:line="7" pos:column="14"> <block pos:line="7" pos:column="15">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">WARNING<pos:position pos:line="8" pos:column="12"/></name><argument_list pos:line="8" pos:column="12">(<argument><expr><literal type="string" pos:line="8" pos:column="13">"dpdk_shm_init: Failed to open %s as SHM:%s"<pos:position pos:line="8" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="59">name<pos:position pos:line="8" pos:column="63"/></name></expr></argument>,
            <argument><expr><call><name pos:line="9" pos:column="13">sstrerror<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><name pos:line="9" pos:column="23">errno<pos:position pos:line="9" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="30">errbuf<pos:position pos:line="9" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="38">sizeof<argument_list pos:line="9" pos:column="44">(<argument><expr><name pos:line="9" pos:column="45">errbuf<pos:position pos:line="9" pos:column="51"/></name></expr></argument>)<pos:position pos:line="9" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="10" pos:column="5">*<pos:position pos:line="10" pos:column="6"/></operator><name pos:line="10" pos:column="6">map<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">=<pos:position pos:line="10" pos:column="11"/></operator> <name pos:line="10" pos:column="12">NULL<pos:position pos:line="10" pos:column="16"/></name></expr>;<pos:position pos:line="10" pos:column="17"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">-<pos:position pos:line="11" pos:column="13"/></operator><literal type="number" pos:line="11" pos:column="13">1<pos:position pos:line="11" pos:column="14"/></literal></expr>;<pos:position pos:line="11" pos:column="15"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name pos:line="14" pos:column="3">int<pos:position pos:line="14" pos:column="6"/></name></type> <name pos:line="14" pos:column="7">ret<pos:position pos:line="14" pos:column="10"/></name> <init pos:line="14" pos:column="11">= <expr><call><name pos:line="14" pos:column="13">ftruncate<pos:position pos:line="14" pos:column="22"/></name><argument_list pos:line="14" pos:column="22">(<argument><expr><name pos:line="14" pos:column="23">fd<pos:position pos:line="14" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="27">size<pos:position pos:line="14" pos:column="31"/></name></expr></argument>)<pos:position pos:line="14" pos:column="32"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="33"/></decl_stmt>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name pos:line="15" pos:column="7">ret<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">!=<pos:position pos:line="15" pos:column="13"/></operator> <literal type="number" pos:line="15" pos:column="14">0<pos:position pos:line="15" pos:column="15"/></literal></expr>)<pos:position pos:line="15" pos:column="16"/></condition><then pos:line="15" pos:column="16"> <block pos:line="15" pos:column="17">{
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">WARNING<pos:position pos:line="16" pos:column="12"/></name><argument_list pos:line="16" pos:column="12">(<argument><expr><literal type="string" pos:line="16" pos:column="13">"dpdk_shm_init: Failed to resize SHM:%s"<pos:position pos:line="16" pos:column="53"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="17" pos:column="13">sstrerror<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><name pos:line="17" pos:column="23">errno<pos:position pos:line="17" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="30">errbuf<pos:position pos:line="17" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="38">sizeof<argument_list pos:line="17" pos:column="44">(<argument><expr><name pos:line="17" pos:column="45">errbuf<pos:position pos:line="17" pos:column="51"/></name></expr></argument>)<pos:position pos:line="17" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">close<pos:position pos:line="18" pos:column="10"/></name><argument_list pos:line="18" pos:column="10">(<argument><expr><name pos:line="18" pos:column="11">fd<pos:position pos:line="18" pos:column="13"/></name></expr></argument>)<pos:position pos:line="18" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="19" pos:column="5">*<pos:position pos:line="19" pos:column="6"/></operator><name pos:line="19" pos:column="6">map<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <name pos:line="19" pos:column="12">NULL<pos:position pos:line="19" pos:column="16"/></name></expr>;<pos:position pos:line="19" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">dpdk_shm_cleanup<pos:position pos:line="20" pos:column="21"/></name><argument_list pos:line="20" pos:column="21">(<argument><expr><name pos:line="20" pos:column="22">name<pos:position pos:line="20" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="28">size<pos:position pos:line="20" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="34">NULL<pos:position pos:line="20" pos:column="38"/></name></expr></argument>)<pos:position pos:line="20" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="40"/></expr_stmt>
    <return pos:line="21" pos:column="5">return <expr><operator pos:line="21" pos:column="12">-<pos:position pos:line="21" pos:column="13"/></operator><literal type="number" pos:line="21" pos:column="13">1<pos:position pos:line="21" pos:column="14"/></literal></expr>;<pos:position pos:line="21" pos:column="15"/></return>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>

  <expr_stmt><expr><operator pos:line="24" pos:column="3">*<pos:position pos:line="24" pos:column="4"/></operator><name pos:line="24" pos:column="4">map<pos:position pos:line="24" pos:column="7"/></name> <operator pos:line="24" pos:column="8">=<pos:position pos:line="24" pos:column="9"/></operator> <call><name pos:line="24" pos:column="10">mmap<pos:position pos:line="24" pos:column="14"/></name><argument_list pos:line="24" pos:column="14">(<argument><expr><literal type="number" pos:line="24" pos:column="15">0<pos:position pos:line="24" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="18">size<pos:position pos:line="24" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="24">PROT_READ<pos:position pos:line="24" pos:column="33"/></name> <operator pos:line="24" pos:column="34">|<pos:position pos:line="24" pos:column="35"/></operator> <name pos:line="24" pos:column="36">PROT_WRITE<pos:position pos:line="24" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="48">MAP_SHARED<pos:position pos:line="24" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="60">fd<pos:position pos:line="24" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="64">0<pos:position pos:line="24" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="67"/></expr_stmt>
  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><operator pos:line="25" pos:column="7">*<pos:position pos:line="25" pos:column="8"/></operator><name pos:line="25" pos:column="8">map<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">==<pos:position pos:line="25" pos:column="14"/></operator> <name pos:line="25" pos:column="15">MAP_FAILED<pos:position pos:line="25" pos:column="25"/></name></expr>)<pos:position pos:line="25" pos:column="26"/></condition><then pos:line="25" pos:column="26"> <block pos:line="25" pos:column="27">{
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">WARNING<pos:position pos:line="26" pos:column="12"/></name><argument_list pos:line="26" pos:column="12">(<argument><expr><literal type="string" pos:line="26" pos:column="13">"dpdk_shm_init:Failed to mmap SHM:%s"<pos:position pos:line="26" pos:column="50"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="27" pos:column="13">sstrerror<pos:position pos:line="27" pos:column="22"/></name><argument_list pos:line="27" pos:column="22">(<argument><expr><name pos:line="27" pos:column="23">errno<pos:position pos:line="27" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="30">errbuf<pos:position pos:line="27" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="38">sizeof<argument_list pos:line="27" pos:column="44">(<argument><expr><name pos:line="27" pos:column="45">errbuf<pos:position pos:line="27" pos:column="51"/></name></expr></argument>)<pos:position pos:line="27" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">close<pos:position pos:line="28" pos:column="10"/></name><argument_list pos:line="28" pos:column="10">(<argument><expr><name pos:line="28" pos:column="11">fd<pos:position pos:line="28" pos:column="13"/></name></expr></argument>)<pos:position pos:line="28" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="29" pos:column="5">*<pos:position pos:line="29" pos:column="6"/></operator><name pos:line="29" pos:column="6">map<pos:position pos:line="29" pos:column="9"/></name> <operator pos:line="29" pos:column="10">=<pos:position pos:line="29" pos:column="11"/></operator> <name pos:line="29" pos:column="12">NULL<pos:position pos:line="29" pos:column="16"/></name></expr>;<pos:position pos:line="29" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">dpdk_shm_cleanup<pos:position pos:line="30" pos:column="21"/></name><argument_list pos:line="30" pos:column="21">(<argument><expr><name pos:line="30" pos:column="22">name<pos:position pos:line="30" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="28">size<pos:position pos:line="30" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="34">NULL<pos:position pos:line="30" pos:column="38"/></name></expr></argument>)<pos:position pos:line="30" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="40"/></expr_stmt>
    <return pos:line="31" pos:column="5">return <expr><operator pos:line="31" pos:column="12">-<pos:position pos:line="31" pos:column="13"/></operator><literal type="number" pos:line="31" pos:column="13">1<pos:position pos:line="31" pos:column="14"/></literal></expr>;<pos:position pos:line="31" pos:column="15"/></return>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if>
  <comment type="block" pos:line="33" pos:column="3">/* File descriptor no longer needed for shared memory operations */</comment>
  <expr_stmt><expr><call><name pos:line="34" pos:column="3">close<pos:position pos:line="34" pos:column="8"/></name><argument_list pos:line="34" pos:column="8">(<argument><expr><name pos:line="34" pos:column="9">fd<pos:position pos:line="34" pos:column="11"/></name></expr></argument>)<pos:position pos:line="34" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="13"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="35" pos:column="3">memset<pos:position pos:line="35" pos:column="9"/></name><argument_list pos:line="35" pos:column="9">(<argument><expr><operator pos:line="35" pos:column="10">*<pos:position pos:line="35" pos:column="11"/></operator><name pos:line="35" pos:column="11">map<pos:position pos:line="35" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="16">0<pos:position pos:line="35" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="19">size<pos:position pos:line="35" pos:column="23"/></name></expr></argument>)<pos:position pos:line="35" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="25"/></expr_stmt>

  <return pos:line="37" pos:column="3">return <expr><literal type="number" pos:line="37" pos:column="10">0<pos:position pos:line="37" pos:column="11"/></literal></expr>;<pos:position pos:line="37" pos:column="12"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

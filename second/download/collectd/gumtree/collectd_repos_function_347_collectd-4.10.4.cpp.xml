<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_347_collectd-4.10.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">csnmp_strvbcopy<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">dst<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="40">/* {{{ */</comment>
    <parameter><decl><type><specifier pos:line="2" pos:column="5">const<pos:position pos:line="2" pos:column="10"/></specifier> <name><name pos:line="2" pos:column="11">struct<pos:position pos:line="2" pos:column="17"/></name> <name pos:line="2" pos:column="18">variable_list<pos:position pos:line="2" pos:column="31"/></name></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">vb<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="37">size_t<pos:position pos:line="2" pos:column="43"/></name></type> <name pos:line="2" pos:column="44">dst_size<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">src<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">num_chars<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">i<pos:position pos:line="6" pos:column="11"/></name></decl>;<pos:position pos:line="6" pos:column="12"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name><name pos:line="8" pos:column="7">vb<pos:position pos:line="8" pos:column="9"/></name><operator pos:line="8" pos:column="9">-&gt;<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="11">type<pos:position pos:line="8" pos:column="15"/></name></name> <operator pos:line="8" pos:column="16">==<pos:position pos:line="8" pos:column="18"/></operator> <name pos:line="8" pos:column="19">ASN_OCTET_STR<pos:position pos:line="8" pos:column="32"/></name></expr>)<pos:position pos:line="8" pos:column="33"/></condition><then pos:line="8" pos:column="33">
    <block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="5">src<pos:position pos:line="9" pos:column="8"/></name> <operator pos:line="9" pos:column="9">=<pos:position pos:line="9" pos:column="10"/></operator> <operator pos:line="9" pos:column="11">(<pos:position pos:line="9" pos:column="12"/></operator><name pos:line="9" pos:column="12">char<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">*<pos:position pos:line="9" pos:column="18"/></operator><operator pos:line="9" pos:column="18">)<pos:position pos:line="9" pos:column="19"/></operator> <name><name pos:line="9" pos:column="20">vb<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">-&gt;<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="24">val<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">.<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="28">string<pos:position pos:line="9" pos:column="34"/></name></name></expr>;<pos:position pos:line="9" pos:column="35"/></expr_stmt></block></then>
  <elseif pos:line="10" pos:column="3">else <if pos:line="10" pos:column="8">if <condition pos:line="10" pos:column="11">(<expr><name><name pos:line="10" pos:column="12">vb<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">-&gt;<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="16">type<pos:position pos:line="10" pos:column="20"/></name></name> <operator pos:line="10" pos:column="21">==<pos:position pos:line="10" pos:column="23"/></operator> <name pos:line="10" pos:column="24">ASN_BIT_STR<pos:position pos:line="10" pos:column="35"/></name></expr>)<pos:position pos:line="10" pos:column="36"/></condition><then pos:line="10" pos:column="36">
    <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="5">src<pos:position pos:line="11" pos:column="8"/></name> <operator pos:line="11" pos:column="9">=<pos:position pos:line="11" pos:column="10"/></operator> <operator pos:line="11" pos:column="11">(<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="12">char<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">*<pos:position pos:line="11" pos:column="18"/></operator><operator pos:line="11" pos:column="18">)<pos:position pos:line="11" pos:column="19"/></operator> <name><name pos:line="11" pos:column="20">vb<pos:position pos:line="11" pos:column="22"/></name><operator pos:line="11" pos:column="22">-&gt;<pos:position pos:line="11" pos:column="27"/></operator><name pos:line="11" pos:column="24">val<pos:position pos:line="11" pos:column="27"/></name><operator pos:line="11" pos:column="27">.<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="28">bitstring<pos:position pos:line="11" pos:column="37"/></name></name></expr>;<pos:position pos:line="11" pos:column="38"/></expr_stmt></block></then></if></elseif>
  <else pos:line="12" pos:column="3">else
  <block pos:line="13" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">dst<pos:position pos:line="14" pos:column="8"/></name><index pos:line="14" pos:column="8">[<expr><literal type="number" pos:line="14" pos:column="9">0<pos:position pos:line="14" pos:column="10"/></literal></expr>]<pos:position pos:line="14" pos:column="11"/></index></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <literal type="number" pos:line="14" pos:column="14">0<pos:position pos:line="14" pos:column="15"/></literal></expr>;<pos:position pos:line="14" pos:column="16"/></expr_stmt>
    <return pos:line="15" pos:column="5">return <expr><operator pos:line="15" pos:column="12">(<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="13">EINVAL<pos:position pos:line="15" pos:column="19"/></name><operator pos:line="15" pos:column="19">)<pos:position pos:line="15" pos:column="20"/></operator></expr>;<pos:position pos:line="15" pos:column="21"/></return>
  }<pos:position pos:line="16" pos:column="4"/></block></else></if>

  <expr_stmt><expr><name pos:line="18" pos:column="3">num_chars<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <name pos:line="18" pos:column="15">dst_size<pos:position pos:line="18" pos:column="23"/></name> <operator pos:line="18" pos:column="24">-<pos:position pos:line="18" pos:column="25"/></operator> <literal type="number" pos:line="18" pos:column="26">1<pos:position pos:line="18" pos:column="27"/></literal></expr>;<pos:position pos:line="18" pos:column="28"/></expr_stmt>
  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><name pos:line="19" pos:column="7">num_chars<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">&gt;<pos:position pos:line="19" pos:column="21"/></operator> <name><name pos:line="19" pos:column="19">vb<pos:position pos:line="19" pos:column="21"/></name><operator pos:line="19" pos:column="21">-&gt;<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="23">val_len<pos:position pos:line="19" pos:column="30"/></name></name></expr>)<pos:position pos:line="19" pos:column="31"/></condition><then pos:line="19" pos:column="31">
    <block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="5">num_chars<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <name><name pos:line="20" pos:column="17">vb<pos:position pos:line="20" pos:column="19"/></name><operator pos:line="20" pos:column="19">-&gt;<pos:position pos:line="20" pos:column="24"/></operator><name pos:line="20" pos:column="21">val_len<pos:position pos:line="20" pos:column="28"/></name></name></expr>;<pos:position pos:line="20" pos:column="29"/></expr_stmt></block></then></if>

  <for pos:line="22" pos:column="3">for <control pos:line="22" pos:column="7">(<init><expr><name pos:line="22" pos:column="8">i<pos:position pos:line="22" pos:column="9"/></name> <operator pos:line="22" pos:column="10">=<pos:position pos:line="22" pos:column="11"/></operator> <literal type="number" pos:line="22" pos:column="12">0<pos:position pos:line="22" pos:column="13"/></literal></expr>;<pos:position pos:line="22" pos:column="14"/></init> <condition><expr><name pos:line="22" pos:column="15">i<pos:position pos:line="22" pos:column="16"/></name> <operator pos:line="22" pos:column="17">&lt;<pos:position pos:line="22" pos:column="21"/></operator> <name pos:line="22" pos:column="19">num_chars<pos:position pos:line="22" pos:column="28"/></name></expr>;<pos:position pos:line="22" pos:column="29"/></condition> <incr><expr><name pos:line="22" pos:column="30">i<pos:position pos:line="22" pos:column="31"/></name><operator pos:line="22" pos:column="31">++<pos:position pos:line="22" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="22" pos:column="34"/></control>
  <block pos:line="23" pos:column="3">{
    <comment type="block" pos:line="24" pos:column="5">/* Check for control characters. */</comment>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><operator pos:line="25" pos:column="9">(<pos:position pos:line="25" pos:column="10"/></operator><name pos:line="25" pos:column="10">unsigned<pos:position pos:line="25" pos:column="18"/></name> <name pos:line="25" pos:column="19">char<pos:position pos:line="25" pos:column="23"/></name><operator pos:line="25" pos:column="23">)<pos:position pos:line="25" pos:column="24"/></operator><name><name pos:line="25" pos:column="24">src<pos:position pos:line="25" pos:column="27"/></name><index pos:line="25" pos:column="27">[<expr><name pos:line="25" pos:column="28">i<pos:position pos:line="25" pos:column="29"/></name></expr>]<pos:position pos:line="25" pos:column="30"/></index></name> <operator pos:line="25" pos:column="31">&lt;<pos:position pos:line="25" pos:column="35"/></operator> <literal type="number" pos:line="25" pos:column="33">32<pos:position pos:line="25" pos:column="35"/></literal></expr>)<pos:position pos:line="25" pos:column="36"/></condition><then pos:line="25" pos:column="36">
      <block type="pseudo"><return pos:line="26" pos:column="7">return <expr><operator pos:line="26" pos:column="14">(<pos:position pos:line="26" pos:column="15"/></operator><call><name pos:line="26" pos:column="15">csnmp_strvbcopy_hexstring<pos:position pos:line="26" pos:column="40"/></name> <argument_list pos:line="26" pos:column="41">(<argument><expr><name pos:line="26" pos:column="42">dst<pos:position pos:line="26" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="47">vb<pos:position pos:line="26" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="51">dst_size<pos:position pos:line="26" pos:column="59"/></name></expr></argument>)<pos:position pos:line="26" pos:column="60"/></argument_list></call><operator pos:line="26" pos:column="60">)<pos:position pos:line="26" pos:column="61"/></operator></expr>;<pos:position pos:line="26" pos:column="62"/></return></block></then></if>
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">dst<pos:position pos:line="27" pos:column="8"/></name><index pos:line="27" pos:column="8">[<expr><name pos:line="27" pos:column="9">i<pos:position pos:line="27" pos:column="10"/></name></expr>]<pos:position pos:line="27" pos:column="11"/></index></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator> <name><name pos:line="27" pos:column="14">src<pos:position pos:line="27" pos:column="17"/></name><index pos:line="27" pos:column="17">[<expr><name pos:line="27" pos:column="18">i<pos:position pos:line="27" pos:column="19"/></name></expr>]<pos:position pos:line="27" pos:column="20"/></index></name></expr>;<pos:position pos:line="27" pos:column="21"/></expr_stmt>
  }<pos:position pos:line="28" pos:column="4"/></block></for>
  <expr_stmt><expr><name><name pos:line="29" pos:column="3">dst<pos:position pos:line="29" pos:column="6"/></name><index pos:line="29" pos:column="6">[<expr><name pos:line="29" pos:column="7">num_chars<pos:position pos:line="29" pos:column="16"/></name></expr>]<pos:position pos:line="29" pos:column="17"/></index></name> <operator pos:line="29" pos:column="18">=<pos:position pos:line="29" pos:column="19"/></operator> <literal type="number" pos:line="29" pos:column="20">0<pos:position pos:line="29" pos:column="21"/></literal></expr>;<pos:position pos:line="29" pos:column="22"/></expr_stmt>

  <return pos:line="31" pos:column="3">return <expr><operator pos:line="31" pos:column="10">(<pos:position pos:line="31" pos:column="11"/></operator><operator pos:line="31" pos:column="11">(<pos:position pos:line="31" pos:column="12"/></operator><name pos:line="31" pos:column="12">int<pos:position pos:line="31" pos:column="15"/></name><operator pos:line="31" pos:column="15">)<pos:position pos:line="31" pos:column="16"/></operator> <name><name pos:line="31" pos:column="17">vb<pos:position pos:line="31" pos:column="19"/></name><operator pos:line="31" pos:column="19">-&gt;<pos:position pos:line="31" pos:column="24"/></operator><name pos:line="31" pos:column="21">val_len<pos:position pos:line="31" pos:column="28"/></name></name><operator pos:line="31" pos:column="28">)<pos:position pos:line="31" pos:column="29"/></operator></expr>;<pos:position pos:line="31" pos:column="30"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

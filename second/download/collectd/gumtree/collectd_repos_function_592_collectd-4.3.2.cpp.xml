<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_592_collectd-4.3.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cf_dispatch<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">type<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">orig_key<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">char<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">orig_value<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">cf_callback_t<pos:position pos:line="4" pos:column="22"/></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">cf_cb<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">key<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">value<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">ret<pos:position pos:line="7" pos:column="16"/></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">i<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="10" pos:column="9">DEBUG<pos:position pos:line="10" pos:column="14"/></name> <argument_list pos:line="10" pos:column="15">(<argument><expr><literal type="string" pos:line="10" pos:column="16">"type = %s, key = %s, value = %s"<pos:position pos:line="10" pos:column="49"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="11" pos:column="25">ESCAPE_NULL<pos:position pos:line="11" pos:column="36"/></name><argument_list pos:line="11" pos:column="36">(<argument><expr><name pos:line="11" pos:column="37">type<pos:position pos:line="11" pos:column="41"/></name></expr></argument>)<pos:position pos:line="11" pos:column="42"/></argument_list></call></expr></argument>,
			<argument><expr><call><name pos:line="12" pos:column="25">ESCAPE_NULL<pos:position pos:line="12" pos:column="36"/></name><argument_list pos:line="12" pos:column="36">(<argument><expr><name pos:line="12" pos:column="37">orig_key<pos:position pos:line="12" pos:column="45"/></name></expr></argument>)<pos:position pos:line="12" pos:column="46"/></argument_list></call></expr></argument>,
			<argument><expr><call><name pos:line="13" pos:column="25">ESCAPE_NULL<pos:position pos:line="13" pos:column="36"/></name><argument_list pos:line="13" pos:column="36">(<argument><expr><name pos:line="13" pos:column="37">orig_value<pos:position pos:line="13" pos:column="47"/></name></expr></argument>)<pos:position pos:line="13" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="50"/></expr_stmt>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">(<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">cf_cb<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">=<pos:position pos:line="15" pos:column="21"/></operator> <call><name pos:line="15" pos:column="22">cf_search<pos:position pos:line="15" pos:column="31"/></name> <argument_list pos:line="15" pos:column="32">(<argument><expr><name pos:line="15" pos:column="33">type<pos:position pos:line="15" pos:column="37"/></name></expr></argument>)<pos:position pos:line="15" pos:column="38"/></argument_list></call><operator pos:line="15" pos:column="38">)<pos:position pos:line="15" pos:column="39"/></operator> <operator pos:line="15" pos:column="40">==<pos:position pos:line="15" pos:column="42"/></operator> <name pos:line="15" pos:column="43">NULL<pos:position pos:line="15" pos:column="47"/></name></expr>)<pos:position pos:line="15" pos:column="48"/></condition><then pos:line="15" pos:column="48">
	<block pos:line="16" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">WARNING<pos:position pos:line="17" pos:column="24"/></name> <argument_list pos:line="17" pos:column="25">(<argument><expr><literal type="string" pos:line="17" pos:column="26">"Found a configuration for the `%s' plugin, but "<pos:position pos:line="17" pos:column="75"/></literal>
				<literal type="string" pos:line="18" pos:column="33">"the plugin isn't loaded or didn't register "<pos:position pos:line="18" pos:column="78"/></literal>
				<literal type="string" pos:line="19" pos:column="33">"a configuration callback."<pos:position pos:line="19" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="62">type<pos:position pos:line="19" pos:column="66"/></name></expr></argument>)<pos:position pos:line="19" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="68"/></expr_stmt>
		<return pos:line="20" pos:column="17">return <expr><operator pos:line="20" pos:column="24">(<pos:position pos:line="20" pos:column="25"/></operator><operator pos:line="20" pos:column="25">-<pos:position pos:line="20" pos:column="26"/></operator><literal type="number" pos:line="20" pos:column="26">1<pos:position pos:line="20" pos:column="27"/></literal><operator pos:line="20" pos:column="27">)<pos:position pos:line="20" pos:column="28"/></operator></expr>;<pos:position pos:line="20" pos:column="29"/></return>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>

	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">(<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="14">key<pos:position pos:line="23" pos:column="17"/></name> <operator pos:line="23" pos:column="18">=<pos:position pos:line="23" pos:column="19"/></operator> <call><name pos:line="23" pos:column="20">strdup<pos:position pos:line="23" pos:column="26"/></name> <argument_list pos:line="23" pos:column="27">(<argument><expr><name pos:line="23" pos:column="28">orig_key<pos:position pos:line="23" pos:column="36"/></name></expr></argument>)<pos:position pos:line="23" pos:column="37"/></argument_list></call><operator pos:line="23" pos:column="37">)<pos:position pos:line="23" pos:column="38"/></operator> <operator pos:line="23" pos:column="39">==<pos:position pos:line="23" pos:column="41"/></operator> <name pos:line="23" pos:column="42">NULL<pos:position pos:line="23" pos:column="46"/></name></expr>)<pos:position pos:line="23" pos:column="47"/></condition><then pos:line="23" pos:column="47">
		<block type="pseudo"><return pos:line="24" pos:column="17">return <expr><operator pos:line="24" pos:column="24">(<pos:position pos:line="24" pos:column="25"/></operator><literal type="number" pos:line="24" pos:column="25">1<pos:position pos:line="24" pos:column="26"/></literal><operator pos:line="24" pos:column="26">)<pos:position pos:line="24" pos:column="27"/></operator></expr>;<pos:position pos:line="24" pos:column="28"/></return></block></then></if>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><operator pos:line="25" pos:column="13">(<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="14">value<pos:position pos:line="25" pos:column="19"/></name> <operator pos:line="25" pos:column="20">=<pos:position pos:line="25" pos:column="21"/></operator> <call><name pos:line="25" pos:column="22">strdup<pos:position pos:line="25" pos:column="28"/></name> <argument_list pos:line="25" pos:column="29">(<argument><expr><name pos:line="25" pos:column="30">orig_value<pos:position pos:line="25" pos:column="40"/></name></expr></argument>)<pos:position pos:line="25" pos:column="41"/></argument_list></call><operator pos:line="25" pos:column="41">)<pos:position pos:line="25" pos:column="42"/></operator> <operator pos:line="25" pos:column="43">==<pos:position pos:line="25" pos:column="45"/></operator> <name pos:line="25" pos:column="46">NULL<pos:position pos:line="25" pos:column="50"/></name></expr>)<pos:position pos:line="25" pos:column="51"/></condition><then pos:line="25" pos:column="51">
	<block pos:line="26" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">free<pos:position pos:line="27" pos:column="21"/></name> <argument_list pos:line="27" pos:column="22">(<argument><expr><name pos:line="27" pos:column="23">key<pos:position pos:line="27" pos:column="26"/></name></expr></argument>)<pos:position pos:line="27" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="28"/></expr_stmt>
		<return pos:line="28" pos:column="17">return <expr><operator pos:line="28" pos:column="24">(<pos:position pos:line="28" pos:column="25"/></operator><literal type="number" pos:line="28" pos:column="25">2<pos:position pos:line="28" pos:column="26"/></literal><operator pos:line="28" pos:column="26">)<pos:position pos:line="28" pos:column="27"/></operator></expr>;<pos:position pos:line="28" pos:column="28"/></return>
	}<pos:position pos:line="29" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="31" pos:column="9">ret<pos:position pos:line="31" pos:column="12"/></name> <operator pos:line="31" pos:column="13">=<pos:position pos:line="31" pos:column="14"/></operator> <operator pos:line="31" pos:column="15">-<pos:position pos:line="31" pos:column="16"/></operator><literal type="number" pos:line="31" pos:column="16">1<pos:position pos:line="31" pos:column="17"/></literal></expr>;<pos:position pos:line="31" pos:column="18"/></expr_stmt>

	<for pos:line="33" pos:column="9">for <control pos:line="33" pos:column="13">(<init><expr><name pos:line="33" pos:column="14">i<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">=<pos:position pos:line="33" pos:column="17"/></operator> <literal type="number" pos:line="33" pos:column="18">0<pos:position pos:line="33" pos:column="19"/></literal></expr>;<pos:position pos:line="33" pos:column="20"/></init> <condition><expr><name pos:line="33" pos:column="21">i<pos:position pos:line="33" pos:column="22"/></name> <operator pos:line="33" pos:column="23">&lt;<pos:position pos:line="33" pos:column="27"/></operator> <name><name pos:line="33" pos:column="25">cf_cb<pos:position pos:line="33" pos:column="30"/></name><operator pos:line="33" pos:column="30">-&gt;<pos:position pos:line="33" pos:column="35"/></operator><name pos:line="33" pos:column="32">keys_num<pos:position pos:line="33" pos:column="40"/></name></name></expr>;<pos:position pos:line="33" pos:column="41"/></condition> <incr><expr><name pos:line="33" pos:column="42">i<pos:position pos:line="33" pos:column="43"/></name><operator pos:line="33" pos:column="43">++<pos:position pos:line="33" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="33" pos:column="46"/></control>
	<block pos:line="34" pos:column="9">{
		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><call><name pos:line="35" pos:column="21">strcasecmp<pos:position pos:line="35" pos:column="31"/></name> <argument_list pos:line="35" pos:column="32">(<argument><expr><name><name pos:line="35" pos:column="33">cf_cb<pos:position pos:line="35" pos:column="38"/></name><operator pos:line="35" pos:column="38">-&gt;<pos:position pos:line="35" pos:column="43"/></operator><name pos:line="35" pos:column="40">keys<pos:position pos:line="35" pos:column="44"/></name><index pos:line="35" pos:column="44">[<expr><name pos:line="35" pos:column="45">i<pos:position pos:line="35" pos:column="46"/></name></expr>]<pos:position pos:line="35" pos:column="47"/></index></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="49">key<pos:position pos:line="35" pos:column="52"/></name></expr></argument>)<pos:position pos:line="35" pos:column="53"/></argument_list></call> <operator pos:line="35" pos:column="54">==<pos:position pos:line="35" pos:column="56"/></operator> <literal type="number" pos:line="35" pos:column="57">0<pos:position pos:line="35" pos:column="58"/></literal></expr>)<pos:position pos:line="35" pos:column="59"/></condition><then pos:line="35" pos:column="59">
		<block pos:line="36" pos:column="17">{
			<expr_stmt><expr><name pos:line="37" pos:column="25">ret<pos:position pos:line="37" pos:column="28"/></name> <operator pos:line="37" pos:column="29">=<pos:position pos:line="37" pos:column="30"/></operator> <call pos:line="37" pos:column="31">(<modifier pos:line="37" pos:column="32">*<pos:position pos:line="37" pos:column="33"/></modifier><name><name pos:line="37" pos:column="33">cf_cb<pos:position pos:line="37" pos:column="38"/></name><operator pos:line="37" pos:column="38">-&gt;<pos:position pos:line="37" pos:column="43"/></operator><name pos:line="37" pos:column="40">callback<pos:position pos:line="37" pos:column="48"/></name></name>) <argument_list pos:line="37" pos:column="50">(<argument><expr><name pos:line="37" pos:column="51">key<pos:position pos:line="37" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="56">value<pos:position pos:line="37" pos:column="61"/></name></expr></argument>)<pos:position pos:line="37" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="63"/></expr_stmt>
			<break pos:line="38" pos:column="25">break;<pos:position pos:line="38" pos:column="31"/></break>
		}<pos:position pos:line="39" pos:column="18"/></block></then></if>
	}<pos:position pos:line="40" pos:column="10"/></block></for>

	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name pos:line="42" pos:column="13">i<pos:position pos:line="42" pos:column="14"/></name> <operator pos:line="42" pos:column="15">&gt;=<pos:position pos:line="42" pos:column="20"/></operator> <name><name pos:line="42" pos:column="18">cf_cb<pos:position pos:line="42" pos:column="23"/></name><operator pos:line="42" pos:column="23">-&gt;<pos:position pos:line="42" pos:column="28"/></operator><name pos:line="42" pos:column="25">keys_num<pos:position pos:line="42" pos:column="33"/></name></name></expr>)<pos:position pos:line="42" pos:column="34"/></condition><then pos:line="42" pos:column="34">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="17">WARNING<pos:position pos:line="43" pos:column="24"/></name> <argument_list pos:line="43" pos:column="25">(<argument><expr><literal type="string" pos:line="43" pos:column="26">"Plugin `%s' did not register for value `%s'."<pos:position pos:line="43" pos:column="72"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="74">type<pos:position pos:line="43" pos:column="78"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="80">key<pos:position pos:line="43" pos:column="83"/></name></expr></argument>)<pos:position pos:line="43" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="85"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="45" pos:column="9">free<pos:position pos:line="45" pos:column="13"/></name> <argument_list pos:line="45" pos:column="14">(<argument><expr><name pos:line="45" pos:column="15">key<pos:position pos:line="45" pos:column="18"/></name></expr></argument>)<pos:position pos:line="45" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="46" pos:column="9">free<pos:position pos:line="46" pos:column="13"/></name> <argument_list pos:line="46" pos:column="14">(<argument><expr><name pos:line="46" pos:column="15">value<pos:position pos:line="46" pos:column="20"/></name></expr></argument>)<pos:position pos:line="46" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="22"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="48" pos:column="9">DEBUG<pos:position pos:line="48" pos:column="14"/></name> <argument_list pos:line="48" pos:column="15">(<argument><expr><literal type="string" pos:line="48" pos:column="16">"return (%i)"<pos:position pos:line="48" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="31">ret<pos:position pos:line="48" pos:column="34"/></name></expr></argument>)<pos:position pos:line="48" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="36"/></expr_stmt>

	<return pos:line="50" pos:column="9">return <expr><operator pos:line="50" pos:column="16">(<pos:position pos:line="50" pos:column="17"/></operator><name pos:line="50" pos:column="17">ret<pos:position pos:line="50" pos:column="20"/></name><operator pos:line="50" pos:column="20">)<pos:position pos:line="50" pos:column="21"/></operator></expr>;<pos:position pos:line="50" pos:column="22"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_705_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">mic_read_temps<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">int<pos:position pos:line="1" pos:column="30"/></name></type> <name pos:line="1" pos:column="31">mic<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="35"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">size_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">num_therms<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><call><name pos:line="3" pos:column="29">STATIC_ARRAY_SIZE<pos:position pos:line="3" pos:column="46"/></name><argument_list pos:line="3" pos:column="46">(<argument><expr><name pos:line="3" pos:column="47">therm_ids<pos:position pos:line="3" pos:column="56"/></name></expr></argument>)<pos:position pos:line="3" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="58"/></decl_stmt>

	<for pos:line="5" pos:column="9">for <control pos:line="5" pos:column="13">(<init><decl><type><name pos:line="5" pos:column="14">size_t<pos:position pos:line="5" pos:column="20"/></name></type> <name pos:line="5" pos:column="21">j<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><literal type="number" pos:line="5" pos:column="25">0<pos:position pos:line="5" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="27"/></init> <condition><expr><name pos:line="5" pos:column="28">j<pos:position pos:line="5" pos:column="29"/></name> <operator pos:line="5" pos:column="30">&lt;<pos:position pos:line="5" pos:column="34"/></operator> <name pos:line="5" pos:column="32">num_therms<pos:position pos:line="5" pos:column="42"/></name></expr>;<pos:position pos:line="5" pos:column="43"/></condition> <incr><expr><name pos:line="5" pos:column="44">j<pos:position pos:line="5" pos:column="45"/></name><operator pos:line="5" pos:column="45">++<pos:position pos:line="5" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="5" pos:column="48"/></control> <block pos:line="5" pos:column="49">{
		<decl_stmt><decl><type><name pos:line="6" pos:column="17">U32<pos:position pos:line="6" pos:column="20"/></name></type> <name pos:line="6" pos:column="21">status<pos:position pos:line="6" pos:column="27"/></name></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="7" pos:column="17">U32<pos:position pos:line="7" pos:column="20"/></name></type> <name pos:line="7" pos:column="21">temp_buffer<pos:position pos:line="7" pos:column="32"/></name></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="8" pos:column="17">U32<pos:position pos:line="8" pos:column="20"/></name></type> <name pos:line="8" pos:column="21">buffer_size<pos:position pos:line="8" pos:column="32"/></name> <init pos:line="8" pos:column="33">= <expr><operator pos:line="8" pos:column="35">(<pos:position pos:line="8" pos:column="36"/></operator><name pos:line="8" pos:column="36">U32<pos:position pos:line="8" pos:column="39"/></name><operator pos:line="8" pos:column="39">)<pos:position pos:line="8" pos:column="40"/></operator><sizeof pos:line="8" pos:column="40">sizeof<argument_list pos:line="8" pos:column="46">(<argument><expr><name pos:line="8" pos:column="47">temp_buffer<pos:position pos:line="8" pos:column="58"/></name></expr></argument>)<pos:position pos:line="8" pos:column="59"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="8" pos:column="60"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">char<pos:position pos:line="9" pos:column="21"/></name> <specifier pos:line="9" pos:column="22">const<pos:position pos:line="9" pos:column="27"/></specifier> <modifier pos:line="9" pos:column="28">*<pos:position pos:line="9" pos:column="29"/></modifier></type><name pos:line="9" pos:column="29">name<pos:position pos:line="9" pos:column="33"/></name> <init pos:line="9" pos:column="34">= <expr><name><name pos:line="9" pos:column="36">therm_names<pos:position pos:line="9" pos:column="47"/></name><index pos:line="9" pos:column="47">[<expr><name pos:line="9" pos:column="48">j<pos:position pos:line="9" pos:column="49"/></name></expr>]<pos:position pos:line="9" pos:column="50"/></index></name></expr></init></decl>;<pos:position pos:line="9" pos:column="51"/></decl_stmt>

		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><call><name pos:line="11" pos:column="21">ignorelist_match<pos:position pos:line="11" pos:column="37"/></name><argument_list pos:line="11" pos:column="37">(<argument><expr><name pos:line="11" pos:column="38">temp_ignore<pos:position pos:line="11" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="51">name<pos:position pos:line="11" pos:column="55"/></name></expr></argument>)<pos:position pos:line="11" pos:column="56"/></argument_list></call> <operator pos:line="11" pos:column="57">!=<pos:position pos:line="11" pos:column="59"/></operator> <literal type="number" pos:line="11" pos:column="60">0<pos:position pos:line="11" pos:column="61"/></literal></expr>)<pos:position pos:line="11" pos:column="62"/></condition><then pos:line="11" pos:column="62">
			<block type="pseudo"><continue pos:line="12" pos:column="25">continue;<pos:position pos:line="12" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="14" pos:column="17">status<pos:position pos:line="14" pos:column="23"/></name> <operator pos:line="14" pos:column="24">=<pos:position pos:line="14" pos:column="25"/></operator> <call><name pos:line="14" pos:column="26">MicGetTemperature<pos:position pos:line="14" pos:column="43"/></name><argument_list pos:line="14" pos:column="43">(<argument><expr><name pos:line="14" pos:column="44">mic_handle<pos:position pos:line="14" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="56">therm_ids<pos:position pos:line="14" pos:column="65"/></name><index pos:line="14" pos:column="65">[<expr><name pos:line="14" pos:column="66">j<pos:position pos:line="14" pos:column="67"/></name></expr>]<pos:position pos:line="14" pos:column="68"/></index></name></expr></argument>,
				<argument><expr><operator pos:line="15" pos:column="33">&amp;<pos:position pos:line="15" pos:column="38"/></operator><name pos:line="15" pos:column="34">temp_buffer<pos:position pos:line="15" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="47">&amp;<pos:position pos:line="15" pos:column="52"/></operator><name pos:line="15" pos:column="48">buffer_size<pos:position pos:line="15" pos:column="59"/></name></expr></argument>)<pos:position pos:line="15" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="61"/></expr_stmt>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name pos:line="16" pos:column="21">status<pos:position pos:line="16" pos:column="27"/></name> <operator pos:line="16" pos:column="28">!=<pos:position pos:line="16" pos:column="30"/></operator> <name pos:line="16" pos:column="31">MIC_ACCESS_API_SUCCESS<pos:position pos:line="16" pos:column="53"/></name></expr>)<pos:position pos:line="16" pos:column="54"/></condition><then pos:line="16" pos:column="54"> <block pos:line="16" pos:column="55">{
			<expr_stmt><expr><call><name pos:line="17" pos:column="25">ERROR<pos:position pos:line="17" pos:column="30"/></name><argument_list pos:line="17" pos:column="30">(<argument><expr><literal type="string" pos:line="17" pos:column="31">"mic plugin: Error reading temperature \"%s\": "<pos:position pos:line="17" pos:column="79"/></literal>
					<literal type="string" pos:line="18" pos:column="41">"%s"<pos:position pos:line="18" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="47">name<pos:position pos:line="18" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="53">MicGetErrorString<pos:position pos:line="18" pos:column="70"/></name><argument_list pos:line="18" pos:column="70">(<argument><expr><name pos:line="18" pos:column="71">status<pos:position pos:line="18" pos:column="77"/></name></expr></argument>)<pos:position pos:line="18" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="80"/></expr_stmt>
			<return pos:line="19" pos:column="25">return <expr><operator pos:line="19" pos:column="32">(<pos:position pos:line="19" pos:column="33"/></operator><literal type="number" pos:line="19" pos:column="33">1<pos:position pos:line="19" pos:column="34"/></literal><operator pos:line="19" pos:column="34">)<pos:position pos:line="19" pos:column="35"/></operator></expr>;<pos:position pos:line="19" pos:column="36"/></return>
		}<pos:position pos:line="20" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">mic_submit_temp<pos:position pos:line="21" pos:column="32"/></name><argument_list pos:line="21" pos:column="32">(<argument><expr><name pos:line="21" pos:column="33">mic<pos:position pos:line="21" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="38">name<pos:position pos:line="21" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="44">temp_buffer<pos:position pos:line="21" pos:column="55"/></name></expr></argument>)<pos:position pos:line="21" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="57"/></expr_stmt>
	}<pos:position pos:line="22" pos:column="10"/></block></for>
	<return pos:line="23" pos:column="9">return <expr><operator pos:line="23" pos:column="16">(<pos:position pos:line="23" pos:column="17"/></operator><literal type="number" pos:line="23" pos:column="17">0<pos:position pos:line="23" pos:column="18"/></literal><operator pos:line="23" pos:column="18">)<pos:position pos:line="23" pos:column="19"/></operator></expr>;<pos:position pos:line="23" pos:column="20"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_222_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">rdt_shutdown<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">void<pos:position pos:line="1" pos:column="29"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="30"/></parameter_list> <block pos:line="1" pos:column="31">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">ret<pos:position pos:line="2" pos:column="10"/></name></decl>;<pos:position pos:line="2" pos:column="11"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="4" pos:column="3">DEBUG<pos:position pos:line="4" pos:column="8"/></name><argument_list pos:line="4" pos:column="8">(<argument><expr><name pos:line="4" pos:column="9">RDT_PLUGIN<pos:position pos:line="4" pos:column="19"/></name> <literal type="string" pos:line="4" pos:column="20">": rdt_shutdown."<pos:position pos:line="4" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="39"/></expr_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">g_rdt<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">==<pos:position pos:line="6" pos:column="15"/></operator> <name pos:line="6" pos:column="16">NULL<pos:position pos:line="6" pos:column="20"/></name></expr>)<pos:position pos:line="6" pos:column="21"/></condition><then pos:line="6" pos:column="21">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><literal type="number" pos:line="7" pos:column="12">0<pos:position pos:line="7" pos:column="13"/></literal></expr>;<pos:position pos:line="7" pos:column="14"/></return></block></then></if>

  <comment type="block" pos:line="9" pos:column="3">/* Stop monitoring */</comment>
  <for pos:line="10" pos:column="3">for <control pos:line="10" pos:column="7">(<init><decl><type><name pos:line="10" pos:column="8">int<pos:position pos:line="10" pos:column="11"/></name></type> <name pos:line="10" pos:column="12">i<pos:position pos:line="10" pos:column="13"/></name> <init pos:line="10" pos:column="14">= <expr><literal type="number" pos:line="10" pos:column="16">0<pos:position pos:line="10" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="18"/></init> <condition><expr><name pos:line="10" pos:column="19">i<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">&lt;<pos:position pos:line="10" pos:column="25"/></operator> <name><name pos:line="10" pos:column="23">g_rdt<pos:position pos:line="10" pos:column="28"/></name><operator pos:line="10" pos:column="28">-&gt;<pos:position pos:line="10" pos:column="33"/></operator><name pos:line="10" pos:column="30">num_groups<pos:position pos:line="10" pos:column="40"/></name></name></expr>;<pos:position pos:line="10" pos:column="41"/></condition> <incr><expr><name pos:line="10" pos:column="42">i<pos:position pos:line="10" pos:column="43"/></name><operator pos:line="10" pos:column="43">++<pos:position pos:line="10" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="10" pos:column="46"/></control> <block pos:line="10" pos:column="47">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">pqos_mon_stop<pos:position pos:line="11" pos:column="18"/></name><argument_list pos:line="11" pos:column="18">(<argument><expr><name><name pos:line="11" pos:column="19">g_rdt<pos:position pos:line="11" pos:column="24"/></name><operator pos:line="11" pos:column="24">-&gt;<pos:position pos:line="11" pos:column="29"/></operator><name pos:line="11" pos:column="26">pgroups<pos:position pos:line="11" pos:column="33"/></name><index pos:line="11" pos:column="33">[<expr><name pos:line="11" pos:column="34">i<pos:position pos:line="11" pos:column="35"/></name></expr>]<pos:position pos:line="11" pos:column="36"/></index></name></expr></argument>)<pos:position pos:line="11" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="38"/></expr_stmt>
  }<pos:position pos:line="12" pos:column="4"/></block></for>

  <expr_stmt><expr><name pos:line="14" pos:column="3">ret<pos:position pos:line="14" pos:column="6"/></name> <operator pos:line="14" pos:column="7">=<pos:position pos:line="14" pos:column="8"/></operator> <call><name pos:line="14" pos:column="9">pqos_fini<pos:position pos:line="14" pos:column="18"/></name><argument_list pos:line="14" pos:column="18">()<pos:position pos:line="14" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name pos:line="15" pos:column="7">ret<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">!=<pos:position pos:line="15" pos:column="13"/></operator> <name pos:line="15" pos:column="14">PQOS_RETVAL_OK<pos:position pos:line="15" pos:column="28"/></name></expr>)<pos:position pos:line="15" pos:column="29"/></condition><then pos:line="15" pos:column="29">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="5">ERROR<pos:position pos:line="16" pos:column="10"/></name><argument_list pos:line="16" pos:column="10">(<argument><expr><name pos:line="16" pos:column="11">RDT_PLUGIN<pos:position pos:line="16" pos:column="21"/></name> <literal type="string" pos:line="16" pos:column="22">": Error shutting down PQoS library."<pos:position pos:line="16" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="61"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="18" pos:column="3">rdt_free_cgroups<pos:position pos:line="18" pos:column="19"/></name><argument_list pos:line="18" pos:column="19">()<pos:position pos:line="18" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">sfree<pos:position pos:line="19" pos:column="8"/></name><argument_list pos:line="19" pos:column="8">(<argument><expr><name pos:line="19" pos:column="9">g_rdt<pos:position pos:line="19" pos:column="14"/></name></expr></argument>)<pos:position pos:line="19" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="16"/></expr_stmt>

  <return pos:line="21" pos:column="3">return <expr><literal type="number" pos:line="21" pos:column="10">0<pos:position pos:line="21" pos:column="11"/></literal></expr>;<pos:position pos:line="21" pos:column="12"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

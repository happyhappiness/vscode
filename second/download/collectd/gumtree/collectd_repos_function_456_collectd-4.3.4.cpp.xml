<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_456_collectd-4.3.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">c_avl_node_t<pos:position pos:line="1" pos:column="20"/></name> <modifier pos:line="1" pos:column="21">*<pos:position pos:line="1" pos:column="22"/></modifier></type><name pos:line="1" pos:column="22">rotate_left_right<pos:position pos:line="1" pos:column="39"/></name> <parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">c_avl_tree_t<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">t<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">c_avl_node_t<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">x<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="3" pos:column="9">rotate_left<pos:position pos:line="3" pos:column="20"/></name> <argument_list pos:line="3" pos:column="21">(<argument><expr><name pos:line="3" pos:column="22">t<pos:position pos:line="3" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="3" pos:column="25">x<pos:position pos:line="3" pos:column="26"/></name><operator pos:line="3" pos:column="26">-&gt;<pos:position pos:line="3" pos:column="31"/></operator><name pos:line="3" pos:column="28">left<pos:position pos:line="3" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="34"/></expr_stmt>
	<return pos:line="4" pos:column="9">return <expr><operator pos:line="4" pos:column="16">(<pos:position pos:line="4" pos:column="17"/></operator><call><name pos:line="4" pos:column="17">rotate_right<pos:position pos:line="4" pos:column="29"/></name> <argument_list pos:line="4" pos:column="30">(<argument><expr><name pos:line="4" pos:column="31">t<pos:position pos:line="4" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="34">x<pos:position pos:line="4" pos:column="35"/></name></expr></argument>)<pos:position pos:line="4" pos:column="36"/></argument_list></call><operator pos:line="4" pos:column="36">)<pos:position pos:line="4" pos:column="37"/></operator></expr>;<pos:position pos:line="4" pos:column="38"/></return>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_901_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">memcached_init<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">void<pos:position pos:line="1" pos:column="31"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list> <block pos:line="1" pos:column="33">{

  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><name pos:line="3" pos:column="7">memcached_have_instances<pos:position pos:line="3" pos:column="31"/></name></expr>)<pos:position pos:line="3" pos:column="32"/></condition><then pos:line="3" pos:column="32">
    <block type="pseudo"><return pos:line="4" pos:column="5">return <expr><literal type="number" pos:line="4" pos:column="12">0<pos:position pos:line="4" pos:column="13"/></literal></expr>;<pos:position pos:line="4" pos:column="14"/></return></block></then></if>

  <comment type="block" pos:line="6" pos:column="3">/* No instances were configured, lets start a default instance. */</comment>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">memcached_t<pos:position pos:line="7" pos:column="14"/></name> <modifier pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></modifier></type><name pos:line="7" pos:column="16">st<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><call><name pos:line="7" pos:column="21">calloc<pos:position pos:line="7" pos:column="27"/></name><argument_list pos:line="7" pos:column="27">(<argument><expr><literal type="number" pos:line="7" pos:column="28">1<pos:position pos:line="7" pos:column="29"/></literal></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="31">sizeof<argument_list pos:line="7" pos:column="37">(<argument><expr><operator pos:line="7" pos:column="38">*<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="39">st<pos:position pos:line="7" pos:column="41"/></name></expr></argument>)<pos:position pos:line="7" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="44"/></decl_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">st<pos:position pos:line="8" pos:column="9"/></name> <operator pos:line="8" pos:column="10">==<pos:position pos:line="8" pos:column="12"/></operator> <name pos:line="8" pos:column="13">NULL<pos:position pos:line="8" pos:column="17"/></name></expr>)<pos:position pos:line="8" pos:column="18"/></condition><then pos:line="8" pos:column="18">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><name pos:line="9" pos:column="12">ENOMEM<pos:position pos:line="9" pos:column="18"/></name></expr>;<pos:position pos:line="9" pos:column="19"/></return></block></then></if>
  <expr_stmt><expr><name><name pos:line="10" pos:column="3">st<pos:position pos:line="10" pos:column="5"/></name><operator pos:line="10" pos:column="5">-&gt;<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="7">name<pos:position pos:line="10" pos:column="11"/></name></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <name pos:line="10" pos:column="14">NULL<pos:position pos:line="10" pos:column="18"/></name></expr>;<pos:position pos:line="10" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="11" pos:column="3">st<pos:position pos:line="11" pos:column="5"/></name><operator pos:line="11" pos:column="5">-&gt;<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="7">host<pos:position pos:line="11" pos:column="11"/></name></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <name pos:line="11" pos:column="14">NULL<pos:position pos:line="11" pos:column="18"/></name></expr>;<pos:position pos:line="11" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="12" pos:column="3">st<pos:position pos:line="12" pos:column="5"/></name><operator pos:line="12" pos:column="5">-&gt;<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="7">socket<pos:position pos:line="12" pos:column="13"/></name></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <name pos:line="12" pos:column="16">NULL<pos:position pos:line="12" pos:column="20"/></name></expr>;<pos:position pos:line="12" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="13" pos:column="3">st<pos:position pos:line="13" pos:column="5"/></name><operator pos:line="13" pos:column="5">-&gt;<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="7">connhost<pos:position pos:line="13" pos:column="15"/></name></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <name pos:line="13" pos:column="18">NULL<pos:position pos:line="13" pos:column="22"/></name></expr>;<pos:position pos:line="13" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="14" pos:column="3">st<pos:position pos:line="14" pos:column="5"/></name><operator pos:line="14" pos:column="5">-&gt;<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="7">connport<pos:position pos:line="14" pos:column="15"/></name></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <name pos:line="14" pos:column="18">NULL<pos:position pos:line="14" pos:column="22"/></name></expr>;<pos:position pos:line="14" pos:column="23"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="16" pos:column="3">st<pos:position pos:line="16" pos:column="5"/></name><operator pos:line="16" pos:column="5">-&gt;<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="7">fd<pos:position pos:line="16" pos:column="9"/></name></name> <operator pos:line="16" pos:column="10">=<pos:position pos:line="16" pos:column="11"/></operator> <operator pos:line="16" pos:column="12">-<pos:position pos:line="16" pos:column="13"/></operator><literal type="number" pos:line="16" pos:column="13">1<pos:position pos:line="16" pos:column="14"/></literal></expr>;<pos:position pos:line="16" pos:column="15"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="18" pos:column="3">int<pos:position pos:line="18" pos:column="6"/></name></type> <name pos:line="18" pos:column="7">status<pos:position pos:line="18" pos:column="13"/></name> <init pos:line="18" pos:column="14">= <expr><call><name pos:line="18" pos:column="16">memcached_add_read_callback<pos:position pos:line="18" pos:column="43"/></name><argument_list pos:line="18" pos:column="43">(<argument><expr><name pos:line="18" pos:column="44">st<pos:position pos:line="18" pos:column="46"/></name></expr></argument>)<pos:position pos:line="18" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="48"/></decl_stmt>
  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><name pos:line="19" pos:column="7">status<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">==<pos:position pos:line="19" pos:column="16"/></operator> <literal type="number" pos:line="19" pos:column="17">0<pos:position pos:line="19" pos:column="18"/></literal></expr>)<pos:position pos:line="19" pos:column="19"/></condition><then pos:line="19" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="5">memcached_have_instances<pos:position pos:line="20" pos:column="29"/></name> <operator pos:line="20" pos:column="30">=<pos:position pos:line="20" pos:column="31"/></operator> <literal type="number" pos:line="20" pos:column="32">1<pos:position pos:line="20" pos:column="33"/></literal></expr>;<pos:position pos:line="20" pos:column="34"/></expr_stmt></block></then></if>

  <return pos:line="22" pos:column="3">return <expr><name pos:line="22" pos:column="10">status<pos:position pos:line="22" pos:column="16"/></name></expr>;<pos:position pos:line="22" pos:column="17"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

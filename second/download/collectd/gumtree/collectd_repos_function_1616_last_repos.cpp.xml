<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1616_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dsnames_to_json<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">buffer<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">size_t<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">buffer_size<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="62">/* {{{ */</comment>
                           <parameter><decl><type><specifier pos:line="2" pos:column="28">const<pos:position pos:line="2" pos:column="33"/></specifier> <name pos:line="2" pos:column="34">data_set_t<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">ds<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="49"/></parameter_list> <block pos:line="2" pos:column="50">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">offset<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><literal type="number" pos:line="3" pos:column="19">0<pos:position pos:line="3" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="5" pos:column="3">memset<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">(<argument><expr><name pos:line="5" pos:column="10">buffer<pos:position pos:line="5" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="18">0<pos:position pos:line="5" pos:column="19"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="21">buffer_size<pos:position pos:line="5" pos:column="32"/></name></expr></argument>)<pos:position pos:line="5" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="34"/></expr_stmt>

<cpp:define pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">define<pos:position pos:line="7" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="7" pos:column="9">BUFFER_ADD<pos:position pos:line="7" pos:column="19"/></name><parameter_list pos:line="7" pos:column="19">(<parameter><type><modifier pos:line="7" pos:column="20">...<pos:position pos:line="7" pos:column="23"/></modifier></type></parameter>)<pos:position pos:line="7" pos:column="24"/></parameter_list></cpp:macro>                                                        \
  <cpp:value pos:line="8" pos:column="3">do {                                                                         \
    int status;                                                                \
    status = snprintf(buffer + offset, buffer_size - offset, __VA_ARGS__);     \
    if (status &lt; 1)                                                            \
      return -1;                                                               \
    else if (((size_t)status) &gt;= (buffer_size - offset))                       \
      return -ENOMEM;                                                          \
    else                                                                       \
      offset += ((size_t)status);                                              \
  } while (0)<pos:position pos:line="17" pos:column="14"/></cpp:value></cpp:define>

  <expr_stmt><expr><call><name pos:line="19" pos:column="3">BUFFER_ADD<pos:position pos:line="19" pos:column="13"/></name><argument_list pos:line="19" pos:column="13">(<argument><expr><literal type="string" pos:line="19" pos:column="14">"["<pos:position pos:line="19" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="19"/></expr_stmt>
  <for pos:line="20" pos:column="3">for <control pos:line="20" pos:column="7">(<init><decl><type><name pos:line="20" pos:column="8">size_t<pos:position pos:line="20" pos:column="14"/></name></type> <name pos:line="20" pos:column="15">i<pos:position pos:line="20" pos:column="16"/></name> <init pos:line="20" pos:column="17">= <expr><literal type="number" pos:line="20" pos:column="19">0<pos:position pos:line="20" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="21"/></init> <condition><expr><name pos:line="20" pos:column="22">i<pos:position pos:line="20" pos:column="23"/></name> <operator pos:line="20" pos:column="24">&lt;<pos:position pos:line="20" pos:column="28"/></operator> <name><name pos:line="20" pos:column="26">ds<pos:position pos:line="20" pos:column="28"/></name><operator pos:line="20" pos:column="28">-&gt;<pos:position pos:line="20" pos:column="33"/></operator><name pos:line="20" pos:column="30">ds_num<pos:position pos:line="20" pos:column="36"/></name></name></expr>;<pos:position pos:line="20" pos:column="37"/></condition> <incr><expr><name pos:line="20" pos:column="38">i<pos:position pos:line="20" pos:column="39"/></name><operator pos:line="20" pos:column="39">++<pos:position pos:line="20" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="20" pos:column="42"/></control> <block pos:line="20" pos:column="43">{
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">i<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">&gt;<pos:position pos:line="21" pos:column="15"/></operator> <literal type="number" pos:line="21" pos:column="13">0<pos:position pos:line="21" pos:column="14"/></literal></expr>)<pos:position pos:line="21" pos:column="15"/></condition><then pos:line="21" pos:column="15">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="7">BUFFER_ADD<pos:position pos:line="22" pos:column="17"/></name><argument_list pos:line="22" pos:column="17">(<argument><expr><literal type="string" pos:line="22" pos:column="18">","<pos:position pos:line="22" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="23"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="24" pos:column="5">BUFFER_ADD<pos:position pos:line="24" pos:column="15"/></name><argument_list pos:line="24" pos:column="15">(<argument><expr><literal type="string" pos:line="24" pos:column="16">"\"%s\""<pos:position pos:line="24" pos:column="24"/></literal></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="26">ds<pos:position pos:line="24" pos:column="28"/></name><operator pos:line="24" pos:column="28">-&gt;<pos:position pos:line="24" pos:column="33"/></operator><name pos:line="24" pos:column="30">ds<pos:position pos:line="24" pos:column="32"/></name><index pos:line="24" pos:column="32">[<expr><name pos:line="24" pos:column="33">i<pos:position pos:line="24" pos:column="34"/></name></expr>]<pos:position pos:line="24" pos:column="35"/></index></name><operator pos:line="24" pos:column="35">.<pos:position pos:line="24" pos:column="36"/></operator><name pos:line="24" pos:column="36">name<pos:position pos:line="24" pos:column="40"/></name></expr></argument>)<pos:position pos:line="24" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="42"/></expr_stmt>
  }<pos:position pos:line="25" pos:column="4"/></block></for> <comment type="block" pos:line="25" pos:column="5">/* for ds-&gt;ds_num */</comment>
  <expr_stmt><expr><call><name pos:line="26" pos:column="3">BUFFER_ADD<pos:position pos:line="26" pos:column="13"/></name><argument_list pos:line="26" pos:column="13">(<argument><expr><literal type="string" pos:line="26" pos:column="14">"]"<pos:position pos:line="26" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="19"/></expr_stmt>

<cpp:undef pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">undef<pos:position pos:line="28" pos:column="7"/></cpp:directive> <name pos:line="28" pos:column="8">BUFFER_ADD<pos:position pos:line="28" pos:column="18"/></name></cpp:undef>

  <expr_stmt><expr><call><name pos:line="30" pos:column="3">DEBUG<pos:position pos:line="30" pos:column="8"/></name><argument_list pos:line="30" pos:column="8">(<argument><expr><literal type="string" pos:line="30" pos:column="9">"format_json: dsnames_to_json: buffer = %s;"<pos:position pos:line="30" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="55">buffer<pos:position pos:line="30" pos:column="61"/></name></expr></argument>)<pos:position pos:line="30" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="63"/></expr_stmt>

  <return pos:line="32" pos:column="3">return <expr><literal type="number" pos:line="32" pos:column="10">0<pos:position pos:line="32" pos:column="11"/></literal></expr>;<pos:position pos:line="32" pos:column="12"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_677_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">jtoc_string<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">JNIEnv<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">jvm_env<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="41">/* {{{ */</comment>
                       <parameter><decl><type><name pos:line="2" pos:column="24">char<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="30">buffer<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="38">size_t<pos:position pos:line="2" pos:column="44"/></name></type> <name pos:line="2" pos:column="45">buffer_size<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="58">int<pos:position pos:line="2" pos:column="61"/></name></type> <name pos:line="2" pos:column="62">empty_okay<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>,
                       <parameter><decl><type><name pos:line="3" pos:column="24">jclass<pos:position pos:line="3" pos:column="30"/></name></type> <name pos:line="3" pos:column="31">class_ptr<pos:position pos:line="3" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="42">jobject<pos:position pos:line="3" pos:column="49"/></name></type> <name pos:line="3" pos:column="50">object_ptr<pos:position pos:line="3" pos:column="60"/></name></decl></parameter>,
                       <parameter><decl><type><specifier pos:line="4" pos:column="24">const<pos:position pos:line="4" pos:column="29"/></specifier> <name pos:line="4" pos:column="30">char<pos:position pos:line="4" pos:column="34"/></name> <modifier pos:line="4" pos:column="35">*<pos:position pos:line="4" pos:column="36"/></modifier></type><name pos:line="4" pos:column="36">method_name<pos:position pos:line="4" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="48"/></parameter_list> <block pos:line="4" pos:column="49">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">jmethodID<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">method_id<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">jobject<pos:position pos:line="6" pos:column="10"/></name></type> <name pos:line="6" pos:column="11">string_obj<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">const<pos:position pos:line="7" pos:column="8"/></specifier> <name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">c_str<pos:position pos:line="7" pos:column="20"/></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>

  <expr_stmt><expr><name pos:line="9" pos:column="3">method_id<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <call><name><operator pos:line="9" pos:column="15">(<pos:position pos:line="9" pos:column="16"/></operator><operator pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="17">jvm_env<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">)<pos:position pos:line="9" pos:column="25"/></operator><operator pos:line="9" pos:column="25">-&gt;<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="27">GetMethodID<pos:position pos:line="9" pos:column="38"/></name></name><argument_list pos:line="9" pos:column="38">(<argument><expr><name pos:line="9" pos:column="39">jvm_env<pos:position pos:line="9" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="48">class_ptr<pos:position pos:line="9" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="59">method_name<pos:position pos:line="9" pos:column="70"/></name></expr></argument>,
                                      <argument><expr><literal type="string" pos:line="10" pos:column="39">"()Ljava/lang/String;"<pos:position pos:line="10" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="63"/></expr_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">method_id<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">==<pos:position pos:line="11" pos:column="19"/></operator> <name pos:line="11" pos:column="20">NULL<pos:position pos:line="11" pos:column="24"/></name></expr>)<pos:position pos:line="11" pos:column="25"/></condition><then pos:line="11" pos:column="25"> <block pos:line="11" pos:column="26">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">ERROR<pos:position pos:line="12" pos:column="10"/></name><argument_list pos:line="12" pos:column="10">(<argument><expr><literal type="string" pos:line="12" pos:column="11">"java plugin: jtoc_string: Cannot find method `String %s ()'."<pos:position pos:line="12" pos:column="73"/></literal></expr></argument>,
          <argument><expr><name pos:line="13" pos:column="11">method_name<pos:position pos:line="13" pos:column="22"/></name></expr></argument>)<pos:position pos:line="13" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="24"/></expr_stmt>
    <return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">(<pos:position pos:line="14" pos:column="13"/></operator><operator pos:line="14" pos:column="13">-<pos:position pos:line="14" pos:column="14"/></operator><literal type="number" pos:line="14" pos:column="14">1<pos:position pos:line="14" pos:column="15"/></literal><operator pos:line="14" pos:column="15">)<pos:position pos:line="14" pos:column="16"/></operator></expr>;<pos:position pos:line="14" pos:column="17"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="17" pos:column="3">string_obj<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator> <call><name><operator pos:line="17" pos:column="16">(<pos:position pos:line="17" pos:column="17"/></operator><operator pos:line="17" pos:column="17">*<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="18">jvm_env<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">)<pos:position pos:line="17" pos:column="26"/></operator><operator pos:line="17" pos:column="26">-&gt;<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="28">CallObjectMethod<pos:position pos:line="17" pos:column="44"/></name></name><argument_list pos:line="17" pos:column="44">(<argument><expr><name pos:line="17" pos:column="45">jvm_env<pos:position pos:line="17" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="54">object_ptr<pos:position pos:line="17" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="66">method_id<pos:position pos:line="17" pos:column="75"/></name></expr></argument>)<pos:position pos:line="17" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="77"/></expr_stmt>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><operator pos:line="18" pos:column="7">(<pos:position pos:line="18" pos:column="8"/></operator><name pos:line="18" pos:column="8">string_obj<pos:position pos:line="18" pos:column="18"/></name> <operator pos:line="18" pos:column="19">==<pos:position pos:line="18" pos:column="21"/></operator> <name pos:line="18" pos:column="22">NULL<pos:position pos:line="18" pos:column="26"/></name><operator pos:line="18" pos:column="26">)<pos:position pos:line="18" pos:column="27"/></operator> <operator pos:line="18" pos:column="28">&amp;&amp;<pos:position pos:line="18" pos:column="38"/></operator> <operator pos:line="18" pos:column="31">(<pos:position pos:line="18" pos:column="32"/></operator><name pos:line="18" pos:column="32">empty_okay<pos:position pos:line="18" pos:column="42"/></name> <operator pos:line="18" pos:column="43">==<pos:position pos:line="18" pos:column="45"/></operator> <literal type="number" pos:line="18" pos:column="46">0<pos:position pos:line="18" pos:column="47"/></literal><operator pos:line="18" pos:column="47">)<pos:position pos:line="18" pos:column="48"/></operator></expr>)<pos:position pos:line="18" pos:column="49"/></condition><then pos:line="18" pos:column="49"> <block pos:line="18" pos:column="50">{
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">ERROR<pos:position pos:line="19" pos:column="10"/></name><argument_list pos:line="19" pos:column="10">(<argument><expr><literal type="string" pos:line="19" pos:column="11">"java plugin: jtoc_string: CallObjectMethod (%s) failed."<pos:position pos:line="19" pos:column="68"/></literal></expr></argument>,
          <argument><expr><name pos:line="20" pos:column="11">method_name<pos:position pos:line="20" pos:column="22"/></name></expr></argument>)<pos:position pos:line="20" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="24"/></expr_stmt>
    <return pos:line="21" pos:column="5">return <expr><operator pos:line="21" pos:column="12">(<pos:position pos:line="21" pos:column="13"/></operator><operator pos:line="21" pos:column="13">-<pos:position pos:line="21" pos:column="14"/></operator><literal type="number" pos:line="21" pos:column="14">1<pos:position pos:line="21" pos:column="15"/></literal><operator pos:line="21" pos:column="15">)<pos:position pos:line="21" pos:column="16"/></operator></expr>;<pos:position pos:line="21" pos:column="17"/></return>
  }<pos:position pos:line="22" pos:column="4"/></block></then> <elseif pos:line="22" pos:column="5">else <if pos:line="22" pos:column="10">if <condition pos:line="22" pos:column="13">(<expr><operator pos:line="22" pos:column="14">(<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="15">string_obj<pos:position pos:line="22" pos:column="25"/></name> <operator pos:line="22" pos:column="26">==<pos:position pos:line="22" pos:column="28"/></operator> <name pos:line="22" pos:column="29">NULL<pos:position pos:line="22" pos:column="33"/></name><operator pos:line="22" pos:column="33">)<pos:position pos:line="22" pos:column="34"/></operator> <operator pos:line="22" pos:column="35">&amp;&amp;<pos:position pos:line="22" pos:column="45"/></operator> <operator pos:line="22" pos:column="38">(<pos:position pos:line="22" pos:column="39"/></operator><name pos:line="22" pos:column="39">empty_okay<pos:position pos:line="22" pos:column="49"/></name> <operator pos:line="22" pos:column="50">!=<pos:position pos:line="22" pos:column="52"/></operator> <literal type="number" pos:line="22" pos:column="53">0<pos:position pos:line="22" pos:column="54"/></literal><operator pos:line="22" pos:column="54">)<pos:position pos:line="22" pos:column="55"/></operator></expr>)<pos:position pos:line="22" pos:column="56"/></condition><then pos:line="22" pos:column="56"> <block pos:line="22" pos:column="57">{
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">memset<pos:position pos:line="23" pos:column="11"/></name><argument_list pos:line="23" pos:column="11">(<argument><expr><name pos:line="23" pos:column="12">buffer<pos:position pos:line="23" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="20">0<pos:position pos:line="23" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="23">buffer_size<pos:position pos:line="23" pos:column="34"/></name></expr></argument>)<pos:position pos:line="23" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="36"/></expr_stmt>
    <return pos:line="24" pos:column="5">return <expr><operator pos:line="24" pos:column="12">(<pos:position pos:line="24" pos:column="13"/></operator><literal type="number" pos:line="24" pos:column="13">0<pos:position pos:line="24" pos:column="14"/></literal><operator pos:line="24" pos:column="14">)<pos:position pos:line="24" pos:column="15"/></operator></expr>;<pos:position pos:line="24" pos:column="16"/></return>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if></elseif></if>

  <expr_stmt><expr><name pos:line="27" pos:column="3">c_str<pos:position pos:line="27" pos:column="8"/></name> <operator pos:line="27" pos:column="9">=<pos:position pos:line="27" pos:column="10"/></operator> <call><name><operator pos:line="27" pos:column="11">(<pos:position pos:line="27" pos:column="12"/></operator><operator pos:line="27" pos:column="12">*<pos:position pos:line="27" pos:column="13"/></operator><name pos:line="27" pos:column="13">jvm_env<pos:position pos:line="27" pos:column="20"/></name><operator pos:line="27" pos:column="20">)<pos:position pos:line="27" pos:column="21"/></operator><operator pos:line="27" pos:column="21">-&gt;<pos:position pos:line="27" pos:column="26"/></operator><name pos:line="27" pos:column="23">GetStringUTFChars<pos:position pos:line="27" pos:column="40"/></name></name><argument_list pos:line="27" pos:column="40">(<argument><expr><name pos:line="27" pos:column="41">jvm_env<pos:position pos:line="27" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="50">string_obj<pos:position pos:line="27" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="62">0<pos:position pos:line="27" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="65"/></expr_stmt>
  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name pos:line="28" pos:column="7">c_str<pos:position pos:line="28" pos:column="12"/></name> <operator pos:line="28" pos:column="13">==<pos:position pos:line="28" pos:column="15"/></operator> <name pos:line="28" pos:column="16">NULL<pos:position pos:line="28" pos:column="20"/></name></expr>)<pos:position pos:line="28" pos:column="21"/></condition><then pos:line="28" pos:column="21"> <block pos:line="28" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">ERROR<pos:position pos:line="29" pos:column="10"/></name><argument_list pos:line="29" pos:column="10">(<argument><expr><literal type="string" pos:line="29" pos:column="11">"java plugin: jtoc_string: GetStringUTFChars failed."<pos:position pos:line="29" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><call><name><operator pos:line="30" pos:column="5">(<pos:position pos:line="30" pos:column="6"/></operator><operator pos:line="30" pos:column="6">*<pos:position pos:line="30" pos:column="7"/></operator><name pos:line="30" pos:column="7">jvm_env<pos:position pos:line="30" pos:column="14"/></name><operator pos:line="30" pos:column="14">)<pos:position pos:line="30" pos:column="15"/></operator><operator pos:line="30" pos:column="15">-&gt;<pos:position pos:line="30" pos:column="20"/></operator><name pos:line="30" pos:column="17">DeleteLocalRef<pos:position pos:line="30" pos:column="31"/></name></name><argument_list pos:line="30" pos:column="31">(<argument><expr><name pos:line="30" pos:column="32">jvm_env<pos:position pos:line="30" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="41">string_obj<pos:position pos:line="30" pos:column="51"/></name></expr></argument>)<pos:position pos:line="30" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="53"/></expr_stmt>
    <return pos:line="31" pos:column="5">return <expr><operator pos:line="31" pos:column="12">(<pos:position pos:line="31" pos:column="13"/></operator><operator pos:line="31" pos:column="13">-<pos:position pos:line="31" pos:column="14"/></operator><literal type="number" pos:line="31" pos:column="14">1<pos:position pos:line="31" pos:column="15"/></literal><operator pos:line="31" pos:column="15">)<pos:position pos:line="31" pos:column="16"/></operator></expr>;<pos:position pos:line="31" pos:column="17"/></return>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="34" pos:column="3">sstrncpy<pos:position pos:line="34" pos:column="11"/></name><argument_list pos:line="34" pos:column="11">(<argument><expr><name pos:line="34" pos:column="12">buffer<pos:position pos:line="34" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="20">c_str<pos:position pos:line="34" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="27">buffer_size<pos:position pos:line="34" pos:column="38"/></name></expr></argument>)<pos:position pos:line="34" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="40"/></expr_stmt>

  <expr_stmt><expr><call><name><operator pos:line="36" pos:column="3">(<pos:position pos:line="36" pos:column="4"/></operator><operator pos:line="36" pos:column="4">*<pos:position pos:line="36" pos:column="5"/></operator><name pos:line="36" pos:column="5">jvm_env<pos:position pos:line="36" pos:column="12"/></name><operator pos:line="36" pos:column="12">)<pos:position pos:line="36" pos:column="13"/></operator><operator pos:line="36" pos:column="13">-&gt;<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="15">ReleaseStringUTFChars<pos:position pos:line="36" pos:column="36"/></name></name><argument_list pos:line="36" pos:column="36">(<argument><expr><name pos:line="36" pos:column="37">jvm_env<pos:position pos:line="36" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="46">string_obj<pos:position pos:line="36" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="58">c_str<pos:position pos:line="36" pos:column="63"/></name></expr></argument>)<pos:position pos:line="36" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="65"/></expr_stmt>
  <expr_stmt><expr><call><name><operator pos:line="37" pos:column="3">(<pos:position pos:line="37" pos:column="4"/></operator><operator pos:line="37" pos:column="4">*<pos:position pos:line="37" pos:column="5"/></operator><name pos:line="37" pos:column="5">jvm_env<pos:position pos:line="37" pos:column="12"/></name><operator pos:line="37" pos:column="12">)<pos:position pos:line="37" pos:column="13"/></operator><operator pos:line="37" pos:column="13">-&gt;<pos:position pos:line="37" pos:column="18"/></operator><name pos:line="37" pos:column="15">DeleteLocalRef<pos:position pos:line="37" pos:column="29"/></name></name><argument_list pos:line="37" pos:column="29">(<argument><expr><name pos:line="37" pos:column="30">jvm_env<pos:position pos:line="37" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="39">string_obj<pos:position pos:line="37" pos:column="49"/></name></expr></argument>)<pos:position pos:line="37" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="51"/></expr_stmt>

  <return pos:line="39" pos:column="3">return <expr><operator pos:line="39" pos:column="10">(<pos:position pos:line="39" pos:column="11"/></operator><literal type="number" pos:line="39" pos:column="11">0<pos:position pos:line="39" pos:column="12"/></literal><operator pos:line="39" pos:column="12">)<pos:position pos:line="39" pos:column="13"/></operator></expr>;<pos:position pos:line="39" pos:column="14"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

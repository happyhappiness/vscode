<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_397_collectd-4.5.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">handle_ether<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><specifier pos:line="2" pos:column="14">const<pos:position pos:line="2" pos:column="19"/></specifier> <name pos:line="2" pos:column="20">u_char<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type> <name pos:line="2" pos:column="29">pkt<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="34">int<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">len<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="42"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">buf<pos:position pos:line="4" pos:column="13"/></name><index pos:line="4" pos:column="13">[<expr><name pos:line="4" pos:column="14">PCAP_SNAPLEN<pos:position pos:line="4" pos:column="26"/></name></expr>]<pos:position pos:line="4" pos:column="27"/></index></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">struct<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">ether_header<pos:position pos:line="5" pos:column="24"/></name></name> <modifier pos:line="5" pos:column="25">*<pos:position pos:line="5" pos:column="26"/></modifier></type><name pos:line="5" pos:column="26">e<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><operator pos:line="5" pos:column="30">(<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="31">void<pos:position pos:line="5" pos:column="35"/></name> <operator pos:line="5" pos:column="36">*<pos:position pos:line="5" pos:column="37"/></operator><operator pos:line="5" pos:column="37">)<pos:position pos:line="5" pos:column="38"/></operator> <name pos:line="5" pos:column="39">pkt<pos:position pos:line="5" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">unsigned<pos:position pos:line="6" pos:column="13"/></name> <name pos:line="6" pos:column="14">short<pos:position pos:line="6" pos:column="19"/></name></type> <name pos:line="6" pos:column="20">etype<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><call><name pos:line="6" pos:column="28">ntohs<pos:position pos:line="6" pos:column="33"/></name><argument_list pos:line="6" pos:column="33">(<argument><expr><name><name pos:line="6" pos:column="34">e<pos:position pos:line="6" pos:column="35"/></name><operator pos:line="6" pos:column="35">-&gt;<pos:position pos:line="6" pos:column="40"/></operator><name pos:line="6" pos:column="37">ether_type<pos:position pos:line="6" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="49"/></decl_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">len<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">&lt;<pos:position pos:line="7" pos:column="17"/></operator> <name pos:line="7" pos:column="15">ETHER_HDR_LEN<pos:position pos:line="7" pos:column="28"/></name></expr>)<pos:position pos:line="7" pos:column="29"/></condition><then pos:line="7" pos:column="29">
	<block type="pseudo"><return pos:line="8" pos:column="9">return <expr><literal type="number" pos:line="8" pos:column="16">0<pos:position pos:line="8" pos:column="17"/></literal></expr>;<pos:position pos:line="8" pos:column="18"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="9" pos:column="5">pkt<pos:position pos:line="9" pos:column="8"/></name> <operator pos:line="9" pos:column="9">+=<pos:position pos:line="9" pos:column="11"/></operator> <name pos:line="9" pos:column="12">ETHER_HDR_LEN<pos:position pos:line="9" pos:column="25"/></name></expr>;<pos:position pos:line="9" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="10" pos:column="5">len<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">-=<pos:position pos:line="10" pos:column="11"/></operator> <name pos:line="10" pos:column="12">ETHER_HDR_LEN<pos:position pos:line="10" pos:column="25"/></name></expr>;<pos:position pos:line="10" pos:column="26"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">ETHERTYPE_8021Q<pos:position pos:line="11" pos:column="24"/></name> <operator pos:line="11" pos:column="25">==<pos:position pos:line="11" pos:column="27"/></operator> <name pos:line="11" pos:column="28">etype<pos:position pos:line="11" pos:column="33"/></name></expr>)<pos:position pos:line="11" pos:column="34"/></condition><then pos:line="11" pos:column="34"> <block pos:line="11" pos:column="35">{
	<expr_stmt><expr><name pos:line="12" pos:column="9">etype<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <call><name pos:line="12" pos:column="17">ntohs<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<argument><expr><operator pos:line="12" pos:column="23">*<pos:position pos:line="12" pos:column="24"/></operator><operator pos:line="12" pos:column="24">(<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="25">unsigned<pos:position pos:line="12" pos:column="33"/></name> <name pos:line="12" pos:column="34">short<pos:position pos:line="12" pos:column="39"/></name> <operator pos:line="12" pos:column="40">*<pos:position pos:line="12" pos:column="41"/></operator><operator pos:line="12" pos:column="41">)<pos:position pos:line="12" pos:column="42"/></operator> <operator pos:line="12" pos:column="43">(<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="44">pkt<pos:position pos:line="12" pos:column="47"/></name> <operator pos:line="12" pos:column="48">+<pos:position pos:line="12" pos:column="49"/></operator> <literal type="number" pos:line="12" pos:column="50">2<pos:position pos:line="12" pos:column="51"/></literal><operator pos:line="12" pos:column="51">)<pos:position pos:line="12" pos:column="52"/></operator></expr></argument>)<pos:position pos:line="12" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="54"/></expr_stmt>
	<expr_stmt><expr><name pos:line="13" pos:column="9">pkt<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">+=<pos:position pos:line="13" pos:column="15"/></operator> <literal type="number" pos:line="13" pos:column="16">4<pos:position pos:line="13" pos:column="17"/></literal></expr>;<pos:position pos:line="13" pos:column="18"/></expr_stmt>
	<expr_stmt><expr><name pos:line="14" pos:column="9">len<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">-=<pos:position pos:line="14" pos:column="15"/></operator> <literal type="number" pos:line="14" pos:column="16">4<pos:position pos:line="14" pos:column="17"/></literal></expr>;<pos:position pos:line="14" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">(<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">ETHERTYPE_IP<pos:position pos:line="16" pos:column="22"/></name> <operator pos:line="16" pos:column="23">!=<pos:position pos:line="16" pos:column="25"/></operator> <name pos:line="16" pos:column="26">etype<pos:position pos:line="16" pos:column="31"/></name><operator pos:line="16" pos:column="31">)<pos:position pos:line="16" pos:column="32"/></operator>
	    <operator pos:line="17" pos:column="13">&amp;&amp;<pos:position pos:line="17" pos:column="23"/></operator> <operator pos:line="17" pos:column="16">(<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="17">ETHERTYPE_IPV6<pos:position pos:line="17" pos:column="31"/></name> <operator pos:line="17" pos:column="32">!=<pos:position pos:line="17" pos:column="34"/></operator> <name pos:line="17" pos:column="35">etype<pos:position pos:line="17" pos:column="40"/></name><operator pos:line="17" pos:column="40">)<pos:position pos:line="17" pos:column="41"/></operator></expr>)<pos:position pos:line="17" pos:column="42"/></condition><then pos:line="17" pos:column="42">
	<block type="pseudo"><return pos:line="18" pos:column="9">return <expr><literal type="number" pos:line="18" pos:column="16">0<pos:position pos:line="18" pos:column="17"/></literal></expr>;<pos:position pos:line="18" pos:column="18"/></return></block></then></if>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">memcpy<pos:position pos:line="19" pos:column="11"/></name><argument_list pos:line="19" pos:column="11">(<argument><expr><name pos:line="19" pos:column="12">buf<pos:position pos:line="19" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="17">pkt<pos:position pos:line="19" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="22">len<pos:position pos:line="19" pos:column="25"/></name></expr></argument>)<pos:position pos:line="19" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="27"/></expr_stmt>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">ETHERTYPE_IPV6<pos:position pos:line="20" pos:column="23"/></name> <operator pos:line="20" pos:column="24">==<pos:position pos:line="20" pos:column="26"/></operator> <name pos:line="20" pos:column="27">etype<pos:position pos:line="20" pos:column="32"/></name></expr>)<pos:position pos:line="20" pos:column="33"/></condition><then pos:line="20" pos:column="33">
	<block type="pseudo"><return pos:line="21" pos:column="9">return <expr><operator pos:line="21" pos:column="16">(<pos:position pos:line="21" pos:column="17"/></operator><call><name pos:line="21" pos:column="17">handle_ipv6<pos:position pos:line="21" pos:column="28"/></name> <argument_list pos:line="21" pos:column="29">(<argument><expr><operator pos:line="21" pos:column="30">(<pos:position pos:line="21" pos:column="31"/></operator>struct <name pos:line="21" pos:column="38">ip6_hdr<pos:position pos:line="21" pos:column="45"/></name> <operator pos:line="21" pos:column="46">*<pos:position pos:line="21" pos:column="47"/></operator><operator pos:line="21" pos:column="47">)<pos:position pos:line="21" pos:column="48"/></operator> <name pos:line="21" pos:column="49">buf<pos:position pos:line="21" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="54">len<pos:position pos:line="21" pos:column="57"/></name></expr></argument>)<pos:position pos:line="21" pos:column="58"/></argument_list></call><operator pos:line="21" pos:column="58">)<pos:position pos:line="21" pos:column="59"/></operator></expr>;<pos:position pos:line="21" pos:column="60"/></return></block></then>
    <else pos:line="22" pos:column="5">else
	<block type="pseudo"><return pos:line="23" pos:column="9">return <expr><call><name pos:line="23" pos:column="16">handle_ip<pos:position pos:line="23" pos:column="25"/></name><argument_list pos:line="23" pos:column="25">(<argument><expr><operator pos:line="23" pos:column="26">(<pos:position pos:line="23" pos:column="27"/></operator>struct <name pos:line="23" pos:column="34">ip<pos:position pos:line="23" pos:column="36"/></name> <operator pos:line="23" pos:column="37">*<pos:position pos:line="23" pos:column="38"/></operator><operator pos:line="23" pos:column="38">)<pos:position pos:line="23" pos:column="39"/></operator> <name pos:line="23" pos:column="40">buf<pos:position pos:line="23" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="45">len<pos:position pos:line="23" pos:column="48"/></name></expr></argument>)<pos:position pos:line="23" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="50"/></return></block></else></if>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

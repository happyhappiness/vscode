<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_18_collectd-4.2.6.cpp" pos:tabs="8"><function_decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">lt_ptr<pos:position pos:line="1" pos:column="14"/></name></type>
<name pos:line="2" pos:column="1">lt_erealloc<pos:position pos:line="2" pos:column="12"/></name> <parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">addr<pos:position pos:line="2" pos:column="18"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="20">size<pos:position pos:line="2" pos:column="24"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="25"/></parameter_list>
     <decl_stmt><decl><type><name pos:line="3" pos:column="6">lt_ptr<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">addr<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
     <decl_stmt><decl><type><name pos:line="4" pos:column="6">size_t<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">size<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">lt_ptr<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">mem<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <expr><call><name pos:line="6" pos:column="16">lt_dlrealloc<pos:position pos:line="6" pos:column="28"/></name> <argument_list pos:line="6" pos:column="29">(<argument><expr><name pos:line="6" pos:column="30">addr<pos:position pos:line="6" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="36">size<pos:position pos:line="6" pos:column="40"/></name></expr></argument>)<pos:position pos:line="6" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="42"/></decl_stmt>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">size<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">&amp;&amp;<pos:position pos:line="7" pos:column="22"/></operator> <operator pos:line="7" pos:column="15">!<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="16">mem<pos:position pos:line="7" pos:column="19"/></name></expr>)<pos:position pos:line="7" pos:column="20"/></condition><then pos:line="7" pos:column="20">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="5">LT_DLMUTEX_SETERROR<pos:position pos:line="8" pos:column="24"/></name> <argument_list pos:line="8" pos:column="25">(<argument><expr><call><name pos:line="8" pos:column="26">LT_DLSTRERROR<pos:position pos:line="8" pos:column="39"/></name> <argument_list pos:line="8" pos:column="40">(<argument><expr><name pos:line="8" pos:column="41">NO_MEMORY<pos:position pos:line="8" pos:column="50"/></name></expr></argument>)<pos:position pos:line="8" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="53"/></expr_stmt></block></then></if>
  <return pos:line="9" pos:column="3">return <expr><name pos:line="9" pos:column="10">mem<pos:position pos:line="9" pos:column="13"/></name></expr>;<pos:position pos:line="9" pos:column="14"/></return>
}<pos:position pos:line="10" pos:column="2"/></block></function_decl></unit>

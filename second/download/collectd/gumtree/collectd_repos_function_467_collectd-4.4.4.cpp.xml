<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_467_collectd-4.4.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">vserver_read<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">void<pos:position pos:line="1" pos:column="30"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="31"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><name pos:line="3" pos:column="5">NAME_MAX<pos:position pos:line="3" pos:column="13"/></name> <operator pos:line="3" pos:column="14">&lt;<pos:position pos:line="3" pos:column="18"/></operator> <literal type="number" pos:line="3" pos:column="16">1024<pos:position pos:line="3" pos:column="20"/></literal></expr></cpp:if>
<cpp:define pos:line="4" pos:column="1"># <cpp:directive pos:line="4" pos:column="3">define<pos:position pos:line="4" pos:column="9"/></cpp:directive> <cpp:macro><name pos:line="4" pos:column="10">DIRENT_BUFFER_SIZE<pos:position pos:line="4" pos:column="28"/></name></cpp:macro> <cpp:value pos:line="4" pos:column="29">(sizeof (struct dirent) + 1024 + 1)<pos:position pos:line="4" pos:column="64"/></cpp:value></cpp:define>
<cpp:else pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">else<pos:position pos:line="5" pos:column="6"/></cpp:directive></cpp:else>
<cpp:define pos:line="6" pos:column="1"># <cpp:directive pos:line="6" pos:column="3">define<pos:position pos:line="6" pos:column="9"/></cpp:directive> <cpp:macro><name pos:line="6" pos:column="10">DIRENT_BUFFER_SIZE<pos:position pos:line="6" pos:column="28"/></name></cpp:macro> <cpp:value pos:line="6" pos:column="29">(sizeof (struct dirent) + NAME_MAX + 1)<pos:position pos:line="6" pos:column="68"/></cpp:value></cpp:define>
<cpp:endif pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">endif<pos:position pos:line="7" pos:column="7"/></cpp:directive></cpp:endif>

	<decl_stmt><decl><type><name pos:line="9" pos:column="9">DIR<pos:position pos:line="9" pos:column="12"/></name> 			<modifier pos:line="9" pos:column="33">*<pos:position pos:line="9" pos:column="34"/></modifier></type><name pos:line="9" pos:column="34">proc<pos:position pos:line="9" pos:column="38"/></name></decl>;<pos:position pos:line="9" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">dirent<pos:position pos:line="10" pos:column="22"/></name></name> 	<modifier pos:line="10" pos:column="25">*<pos:position pos:line="10" pos:column="26"/></modifier></type><name pos:line="10" pos:column="26">dent<pos:position pos:line="10" pos:column="30"/></name></decl>;<pos:position pos:line="10" pos:column="31"/></decl_stmt> <comment type="block" pos:line="10" pos:column="32">/* 42 */</comment>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">char<pos:position pos:line="11" pos:column="13"/></name></type> <name><name pos:line="11" pos:column="14">dirent_buffer<pos:position pos:line="11" pos:column="27"/></name><index pos:line="11" pos:column="27">[<expr><name pos:line="11" pos:column="28">DIRENT_BUFFER_SIZE<pos:position pos:line="11" pos:column="46"/></name></expr>]<pos:position pos:line="11" pos:column="47"/></index></name></decl>;<pos:position pos:line="11" pos:column="48"/></decl_stmt>

	<expr_stmt><expr><name pos:line="13" pos:column="9">errno<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">=<pos:position pos:line="13" pos:column="16"/></operator> <literal type="number" pos:line="13" pos:column="17">0<pos:position pos:line="13" pos:column="18"/></literal></expr>;<pos:position pos:line="13" pos:column="19"/></expr_stmt>
	<expr_stmt><expr><name pos:line="14" pos:column="9">proc<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <call><name pos:line="14" pos:column="16">opendir<pos:position pos:line="14" pos:column="23"/></name> <argument_list pos:line="14" pos:column="24">(<argument><expr><name pos:line="14" pos:column="25">PROCDIR<pos:position pos:line="14" pos:column="32"/></name></expr></argument>)<pos:position pos:line="14" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="34"/></expr_stmt>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">proc<pos:position pos:line="15" pos:column="17"/></name> <operator pos:line="15" pos:column="18">==<pos:position pos:line="15" pos:column="20"/></operator> <name pos:line="15" pos:column="21">NULL<pos:position pos:line="15" pos:column="25"/></name></expr>)<pos:position pos:line="15" pos:column="26"/></condition><then pos:line="15" pos:column="26">
	<block pos:line="16" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="17" pos:column="17">char<pos:position pos:line="17" pos:column="21"/></name></type> <name><name pos:line="17" pos:column="22">errbuf<pos:position pos:line="17" pos:column="28"/></name><index pos:line="17" pos:column="28">[<expr><literal type="number" pos:line="17" pos:column="29">1024<pos:position pos:line="17" pos:column="33"/></literal></expr>]<pos:position pos:line="17" pos:column="34"/></index></name></decl>;<pos:position pos:line="17" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">ERROR<pos:position pos:line="18" pos:column="22"/></name> <argument_list pos:line="18" pos:column="23">(<argument><expr><literal type="string" pos:line="18" pos:column="24">"vserver plugin: fopen (%s): %s"<pos:position pos:line="18" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="58">PROCDIR<pos:position pos:line="18" pos:column="65"/></name></expr></argument>, 
				<argument><expr><call><name pos:line="19" pos:column="33">sstrerror<pos:position pos:line="19" pos:column="42"/></name> <argument_list pos:line="19" pos:column="43">(<argument><expr><name pos:line="19" pos:column="44">errno<pos:position pos:line="19" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="51">errbuf<pos:position pos:line="19" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="59">sizeof <argument_list pos:line="19" pos:column="66">(<argument><expr><name pos:line="19" pos:column="67">errbuf<pos:position pos:line="19" pos:column="73"/></name></expr></argument>)<pos:position pos:line="19" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="77"/></expr_stmt>
		<return pos:line="20" pos:column="17">return <expr><operator pos:line="20" pos:column="24">(<pos:position pos:line="20" pos:column="25"/></operator><operator pos:line="20" pos:column="25">-<pos:position pos:line="20" pos:column="26"/></operator><literal type="number" pos:line="20" pos:column="26">1<pos:position pos:line="20" pos:column="27"/></literal><operator pos:line="20" pos:column="27">)<pos:position pos:line="20" pos:column="28"/></operator></expr>;<pos:position pos:line="20" pos:column="29"/></return>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>

	<while pos:line="23" pos:column="9">while <condition pos:line="23" pos:column="15">(<expr><literal type="number" pos:line="23" pos:column="16">42<pos:position pos:line="23" pos:column="18"/></literal></expr>)<pos:position pos:line="23" pos:column="19"/></condition>
	<block pos:line="24" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="25" pos:column="17">size_t<pos:position pos:line="25" pos:column="23"/></name></type> <name pos:line="25" pos:column="24">len<pos:position pos:line="25" pos:column="27"/></name></decl>;<pos:position pos:line="25" pos:column="28"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="26" pos:column="17">char<pos:position pos:line="26" pos:column="21"/></name></type> <name><name pos:line="26" pos:column="22">file<pos:position pos:line="26" pos:column="26"/></name><index pos:line="26" pos:column="26">[<expr><name pos:line="26" pos:column="27">BUFSIZE<pos:position pos:line="26" pos:column="34"/></name></expr>]<pos:position pos:line="26" pos:column="35"/></index></name></decl>;<pos:position pos:line="26" pos:column="36"/></decl_stmt>

		<decl_stmt><decl><type><name pos:line="28" pos:column="17">FILE<pos:position pos:line="28" pos:column="21"/></name> <modifier pos:line="28" pos:column="22">*<pos:position pos:line="28" pos:column="23"/></modifier></type><name pos:line="28" pos:column="23">fh<pos:position pos:line="28" pos:column="25"/></name></decl>;<pos:position pos:line="28" pos:column="26"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="29" pos:column="17">char<pos:position pos:line="29" pos:column="21"/></name></type> <name><name pos:line="29" pos:column="22">buffer<pos:position pos:line="29" pos:column="28"/></name><index pos:line="29" pos:column="28">[<expr><name pos:line="29" pos:column="29">BUFSIZE<pos:position pos:line="29" pos:column="36"/></name></expr>]<pos:position pos:line="29" pos:column="37"/></index></name></decl>;<pos:position pos:line="29" pos:column="38"/></decl_stmt>

		<decl_stmt><decl><type><name><name pos:line="31" pos:column="17">struct<pos:position pos:line="31" pos:column="23"/></name> <name pos:line="31" pos:column="24">stat<pos:position pos:line="31" pos:column="28"/></name></name></type> <name pos:line="31" pos:column="29">statbuf<pos:position pos:line="31" pos:column="36"/></name></decl>;<pos:position pos:line="31" pos:column="37"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="32" pos:column="17">char<pos:position pos:line="32" pos:column="21"/></name> <modifier pos:line="32" pos:column="22">*<pos:position pos:line="32" pos:column="23"/></modifier></type><name><name pos:line="32" pos:column="23">cols<pos:position pos:line="32" pos:column="27"/></name><index pos:line="32" pos:column="27">[<expr><literal type="number" pos:line="32" pos:column="28">4<pos:position pos:line="32" pos:column="29"/></literal></expr>]<pos:position pos:line="32" pos:column="30"/></index></name></decl>;<pos:position pos:line="32" pos:column="31"/></decl_stmt>

		<decl_stmt><decl><type><name pos:line="34" pos:column="17">int<pos:position pos:line="34" pos:column="20"/></name></type> <name pos:line="34" pos:column="21">status<pos:position pos:line="34" pos:column="27"/></name></decl>;<pos:position pos:line="34" pos:column="28"/></decl_stmt>

		<expr_stmt><expr><name pos:line="36" pos:column="17">status<pos:position pos:line="36" pos:column="23"/></name> <operator pos:line="36" pos:column="24">=<pos:position pos:line="36" pos:column="25"/></operator> <call><name pos:line="36" pos:column="26">readdir_r<pos:position pos:line="36" pos:column="35"/></name> <argument_list pos:line="36" pos:column="36">(<argument><expr><name pos:line="36" pos:column="37">proc<pos:position pos:line="36" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="43">(<pos:position pos:line="36" pos:column="44"/></operator>struct <name pos:line="36" pos:column="51">dirent<pos:position pos:line="36" pos:column="57"/></name> <operator pos:line="36" pos:column="58">*<pos:position pos:line="36" pos:column="59"/></operator><operator pos:line="36" pos:column="59">)<pos:position pos:line="36" pos:column="60"/></operator> <name pos:line="36" pos:column="61">dirent_buffer<pos:position pos:line="36" pos:column="74"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="76">&amp;<pos:position pos:line="36" pos:column="81"/></operator><name pos:line="36" pos:column="77">dent<pos:position pos:line="36" pos:column="81"/></name></expr></argument>)<pos:position pos:line="36" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="83"/></expr_stmt>
		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><name pos:line="37" pos:column="21">status<pos:position pos:line="37" pos:column="27"/></name> <operator pos:line="37" pos:column="28">!=<pos:position pos:line="37" pos:column="30"/></operator> <literal type="number" pos:line="37" pos:column="31">0<pos:position pos:line="37" pos:column="32"/></literal></expr>)<pos:position pos:line="37" pos:column="33"/></condition><then pos:line="37" pos:column="33">
		<block pos:line="38" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="39" pos:column="25">char<pos:position pos:line="39" pos:column="29"/></name></type> <name><name pos:line="39" pos:column="30">errbuf<pos:position pos:line="39" pos:column="36"/></name><index pos:line="39" pos:column="36">[<expr><literal type="number" pos:line="39" pos:column="37">4096<pos:position pos:line="39" pos:column="41"/></literal></expr>]<pos:position pos:line="39" pos:column="42"/></index></name></decl>;<pos:position pos:line="39" pos:column="43"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="40" pos:column="25">ERROR<pos:position pos:line="40" pos:column="30"/></name> <argument_list pos:line="40" pos:column="31">(<argument><expr><literal type="string" pos:line="40" pos:column="32">"vserver plugin: readdir_r failed: %s"<pos:position pos:line="40" pos:column="70"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="41" pos:column="41">sstrerror<pos:position pos:line="41" pos:column="50"/></name> <argument_list pos:line="41" pos:column="51">(<argument><expr><name pos:line="41" pos:column="52">errno<pos:position pos:line="41" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="59">errbuf<pos:position pos:line="41" pos:column="65"/></name></expr></argument>, <argument><expr><sizeof pos:line="41" pos:column="67">sizeof <argument_list pos:line="41" pos:column="74">(<argument><expr><name pos:line="41" pos:column="75">errbuf<pos:position pos:line="41" pos:column="81"/></name></expr></argument>)<pos:position pos:line="41" pos:column="82"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="41" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="85"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="42" pos:column="25">closedir<pos:position pos:line="42" pos:column="33"/></name> <argument_list pos:line="42" pos:column="34">(<argument><expr><name pos:line="42" pos:column="35">proc<pos:position pos:line="42" pos:column="39"/></name></expr></argument>)<pos:position pos:line="42" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="41"/></expr_stmt>
			<return pos:line="43" pos:column="25">return <expr><operator pos:line="43" pos:column="32">(<pos:position pos:line="43" pos:column="33"/></operator><operator pos:line="43" pos:column="33">-<pos:position pos:line="43" pos:column="34"/></operator><literal type="number" pos:line="43" pos:column="34">1<pos:position pos:line="43" pos:column="35"/></literal><operator pos:line="43" pos:column="35">)<pos:position pos:line="43" pos:column="36"/></operator></expr>;<pos:position pos:line="43" pos:column="37"/></return>
		}<pos:position pos:line="44" pos:column="18"/></block></then>
		<elseif pos:line="45" pos:column="17">else <if pos:line="45" pos:column="22">if <condition pos:line="45" pos:column="25">(<expr><name pos:line="45" pos:column="26">dent<pos:position pos:line="45" pos:column="30"/></name> <operator pos:line="45" pos:column="31">==<pos:position pos:line="45" pos:column="33"/></operator> <name pos:line="45" pos:column="34">NULL<pos:position pos:line="45" pos:column="38"/></name></expr>)<pos:position pos:line="45" pos:column="39"/></condition><then pos:line="45" pos:column="39">
		<block pos:line="46" pos:column="17">{
			<comment type="block" pos:line="47" pos:column="25">/* end of directory */</comment>
			<break pos:line="48" pos:column="25">break;<pos:position pos:line="48" pos:column="31"/></break>
		}<pos:position pos:line="49" pos:column="18"/></block></then></if></elseif></if>

		<if pos:line="51" pos:column="17">if <condition pos:line="51" pos:column="20">(<expr><name><name pos:line="51" pos:column="21">dent<pos:position pos:line="51" pos:column="25"/></name><operator pos:line="51" pos:column="25">-&gt;<pos:position pos:line="51" pos:column="30"/></operator><name pos:line="51" pos:column="27">d_name<pos:position pos:line="51" pos:column="33"/></name><index pos:line="51" pos:column="33">[<expr><literal type="number" pos:line="51" pos:column="34">0<pos:position pos:line="51" pos:column="35"/></literal></expr>]<pos:position pos:line="51" pos:column="36"/></index></name> <operator pos:line="51" pos:column="37">==<pos:position pos:line="51" pos:column="39"/></operator> <literal type="char" pos:line="51" pos:column="40">'.'<pos:position pos:line="51" pos:column="43"/></literal></expr>)<pos:position pos:line="51" pos:column="44"/></condition><then pos:line="51" pos:column="44">
			<block type="pseudo"><continue pos:line="52" pos:column="25">continue;<pos:position pos:line="52" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="54" pos:column="17">len<pos:position pos:line="54" pos:column="20"/></name> <operator pos:line="54" pos:column="21">=<pos:position pos:line="54" pos:column="22"/></operator> <call><name pos:line="54" pos:column="23">snprintf<pos:position pos:line="54" pos:column="31"/></name> <argument_list pos:line="54" pos:column="32">(<argument><expr><name pos:line="54" pos:column="33">file<pos:position pos:line="54" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="54" pos:column="39">sizeof <argument_list pos:line="54" pos:column="46">(<argument><expr><name pos:line="54" pos:column="47">file<pos:position pos:line="54" pos:column="51"/></name></expr></argument>)<pos:position pos:line="54" pos:column="52"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="54" pos:column="54">PROCDIR<pos:position pos:line="54" pos:column="61"/></name> <literal type="string" pos:line="54" pos:column="62">"/%s"<pos:position pos:line="54" pos:column="67"/></literal></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="69">dent<pos:position pos:line="54" pos:column="73"/></name><operator pos:line="54" pos:column="73">-&gt;<pos:position pos:line="54" pos:column="78"/></operator><name pos:line="54" pos:column="75">d_name<pos:position pos:line="54" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="83"/></expr_stmt>
		<if pos:line="55" pos:column="17">if <condition pos:line="55" pos:column="20">(<expr><operator pos:line="55" pos:column="21">(<pos:position pos:line="55" pos:column="22"/></operator><name pos:line="55" pos:column="22">len<pos:position pos:line="55" pos:column="25"/></name> <operator pos:line="55" pos:column="26">&lt;<pos:position pos:line="55" pos:column="30"/></operator> <literal type="number" pos:line="55" pos:column="28">0<pos:position pos:line="55" pos:column="29"/></literal><operator pos:line="55" pos:column="29">)<pos:position pos:line="55" pos:column="30"/></operator> <operator pos:line="55" pos:column="31">||<pos:position pos:line="55" pos:column="33"/></operator> <operator pos:line="55" pos:column="34">(<pos:position pos:line="55" pos:column="35"/></operator><name pos:line="55" pos:column="35">len<pos:position pos:line="55" pos:column="38"/></name> <operator pos:line="55" pos:column="39">&gt;=<pos:position pos:line="55" pos:column="44"/></operator> <name pos:line="55" pos:column="42">BUFSIZE<pos:position pos:line="55" pos:column="49"/></name><operator pos:line="55" pos:column="49">)<pos:position pos:line="55" pos:column="50"/></operator></expr>)<pos:position pos:line="55" pos:column="51"/></condition><then pos:line="55" pos:column="51">
			<block type="pseudo"><continue pos:line="56" pos:column="25">continue;<pos:position pos:line="56" pos:column="34"/></continue></block></then></if>
		
		<expr_stmt><expr><name pos:line="58" pos:column="17">status<pos:position pos:line="58" pos:column="23"/></name> <operator pos:line="58" pos:column="24">=<pos:position pos:line="58" pos:column="25"/></operator> <call><name pos:line="58" pos:column="26">stat<pos:position pos:line="58" pos:column="30"/></name> <argument_list pos:line="58" pos:column="31">(<argument><expr><name pos:line="58" pos:column="32">file<pos:position pos:line="58" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="58" pos:column="38">&amp;<pos:position pos:line="58" pos:column="43"/></operator><name pos:line="58" pos:column="39">statbuf<pos:position pos:line="58" pos:column="46"/></name></expr></argument>)<pos:position pos:line="58" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="48"/></expr_stmt>
		<if pos:line="59" pos:column="17">if <condition pos:line="59" pos:column="20">(<expr><name pos:line="59" pos:column="21">status<pos:position pos:line="59" pos:column="27"/></name> <operator pos:line="59" pos:column="28">!=<pos:position pos:line="59" pos:column="30"/></operator> <literal type="number" pos:line="59" pos:column="31">0<pos:position pos:line="59" pos:column="32"/></literal></expr>)<pos:position pos:line="59" pos:column="33"/></condition><then pos:line="59" pos:column="33">
		<block pos:line="60" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="61" pos:column="25">char<pos:position pos:line="61" pos:column="29"/></name></type> <name><name pos:line="61" pos:column="30">errbuf<pos:position pos:line="61" pos:column="36"/></name><index pos:line="61" pos:column="36">[<expr><literal type="number" pos:line="61" pos:column="37">4096<pos:position pos:line="61" pos:column="41"/></literal></expr>]<pos:position pos:line="61" pos:column="42"/></index></name></decl>;<pos:position pos:line="61" pos:column="43"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="62" pos:column="25">WARNING<pos:position pos:line="62" pos:column="32"/></name> <argument_list pos:line="62" pos:column="33">(<argument><expr><literal type="string" pos:line="62" pos:column="34">"vserver plugin: stat (%s) failed: %s"<pos:position pos:line="62" pos:column="72"/></literal></expr></argument>,
					<argument><expr><name pos:line="63" pos:column="41">file<pos:position pos:line="63" pos:column="45"/></name></expr></argument>, <argument><expr><call><name pos:line="63" pos:column="47">sstrerror<pos:position pos:line="63" pos:column="56"/></name> <argument_list pos:line="63" pos:column="57">(<argument><expr><name pos:line="63" pos:column="58">errno<pos:position pos:line="63" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="65">errbuf<pos:position pos:line="63" pos:column="71"/></name></expr></argument>, <argument><expr><sizeof pos:line="63" pos:column="73">sizeof <argument_list pos:line="63" pos:column="80">(<argument><expr><name pos:line="63" pos:column="81">errbuf<pos:position pos:line="63" pos:column="87"/></name></expr></argument>)<pos:position pos:line="63" pos:column="88"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="63" pos:column="89"/></argument_list></call></expr></argument>)<pos:position pos:line="63" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="91"/></expr_stmt>
			<continue pos:line="64" pos:column="25">continue;<pos:position pos:line="64" pos:column="34"/></continue>
		}<pos:position pos:line="65" pos:column="18"/></block></then></if>
		
		<if pos:line="67" pos:column="17">if <condition pos:line="67" pos:column="20">(<expr><operator pos:line="67" pos:column="21">!<pos:position pos:line="67" pos:column="22"/></operator><call><name pos:line="67" pos:column="22">S_ISDIR<pos:position pos:line="67" pos:column="29"/></name> <argument_list pos:line="67" pos:column="30">(<argument><expr><name><name pos:line="67" pos:column="31">statbuf<pos:position pos:line="67" pos:column="38"/></name><operator pos:line="67" pos:column="38">.<pos:position pos:line="67" pos:column="39"/></operator><name pos:line="67" pos:column="39">st_mode<pos:position pos:line="67" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="67" pos:column="48"/></condition><then pos:line="67" pos:column="48">
			<block type="pseudo"><continue pos:line="68" pos:column="25">continue;<pos:position pos:line="68" pos:column="34"/></continue></block></then></if>

		<comment type="block" pos:line="70" pos:column="17">/* socket message accounting */</comment>
		<expr_stmt><expr><name pos:line="71" pos:column="17">len<pos:position pos:line="71" pos:column="20"/></name> <operator pos:line="71" pos:column="21">=<pos:position pos:line="71" pos:column="22"/></operator> <call><name pos:line="71" pos:column="23">snprintf<pos:position pos:line="71" pos:column="31"/></name> <argument_list pos:line="71" pos:column="32">(<argument><expr><name pos:line="71" pos:column="33">file<pos:position pos:line="71" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="39">BUFSIZE<pos:position pos:line="71" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="48">PROCDIR<pos:position pos:line="71" pos:column="55"/></name> <literal type="string" pos:line="71" pos:column="56">"/%s/cacct"<pos:position pos:line="71" pos:column="67"/></literal></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="69">dent<pos:position pos:line="71" pos:column="73"/></name><operator pos:line="71" pos:column="73">-&gt;<pos:position pos:line="71" pos:column="78"/></operator><name pos:line="71" pos:column="75">d_name<pos:position pos:line="71" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="83"/></expr_stmt>
		<if pos:line="72" pos:column="17">if <condition pos:line="72" pos:column="20">(<expr><operator pos:line="72" pos:column="21">(<pos:position pos:line="72" pos:column="22"/></operator><name pos:line="72" pos:column="22">len<pos:position pos:line="72" pos:column="25"/></name> <operator pos:line="72" pos:column="26">&lt;<pos:position pos:line="72" pos:column="30"/></operator> <literal type="number" pos:line="72" pos:column="28">0<pos:position pos:line="72" pos:column="29"/></literal><operator pos:line="72" pos:column="29">)<pos:position pos:line="72" pos:column="30"/></operator> <operator pos:line="72" pos:column="31">||<pos:position pos:line="72" pos:column="33"/></operator> <operator pos:line="72" pos:column="34">(<pos:position pos:line="72" pos:column="35"/></operator><name pos:line="72" pos:column="35">len<pos:position pos:line="72" pos:column="38"/></name> <operator pos:line="72" pos:column="39">&gt;=<pos:position pos:line="72" pos:column="44"/></operator> <name pos:line="72" pos:column="42">BUFSIZE<pos:position pos:line="72" pos:column="49"/></name><operator pos:line="72" pos:column="49">)<pos:position pos:line="72" pos:column="50"/></operator></expr>)<pos:position pos:line="72" pos:column="51"/></condition><then pos:line="72" pos:column="51">
			<block type="pseudo"><continue pos:line="73" pos:column="25">continue;<pos:position pos:line="73" pos:column="34"/></continue></block></then></if>

		<if pos:line="75" pos:column="17">if <condition pos:line="75" pos:column="20">(<expr><name pos:line="75" pos:column="21">NULL<pos:position pos:line="75" pos:column="25"/></name> <operator pos:line="75" pos:column="26">==<pos:position pos:line="75" pos:column="28"/></operator> <operator pos:line="75" pos:column="29">(<pos:position pos:line="75" pos:column="30"/></operator><name pos:line="75" pos:column="30">fh<pos:position pos:line="75" pos:column="32"/></name> <operator pos:line="75" pos:column="33">=<pos:position pos:line="75" pos:column="34"/></operator> <call><name pos:line="75" pos:column="35">fopen<pos:position pos:line="75" pos:column="40"/></name> <argument_list pos:line="75" pos:column="41">(<argument><expr><name pos:line="75" pos:column="42">file<pos:position pos:line="75" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="48">"r"<pos:position pos:line="75" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="52"/></argument_list></call><operator pos:line="75" pos:column="52">)<pos:position pos:line="75" pos:column="53"/></operator></expr>)<pos:position pos:line="75" pos:column="54"/></condition><then pos:line="75" pos:column="54">
		<block pos:line="76" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="77" pos:column="25">char<pos:position pos:line="77" pos:column="29"/></name></type> <name><name pos:line="77" pos:column="30">errbuf<pos:position pos:line="77" pos:column="36"/></name><index pos:line="77" pos:column="36">[<expr><literal type="number" pos:line="77" pos:column="37">1024<pos:position pos:line="77" pos:column="41"/></literal></expr>]<pos:position pos:line="77" pos:column="42"/></index></name></decl>;<pos:position pos:line="77" pos:column="43"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="78" pos:column="25">ERROR<pos:position pos:line="78" pos:column="30"/></name> <argument_list pos:line="78" pos:column="31">(<argument><expr><literal type="string" pos:line="78" pos:column="32">"Cannot open '%s': %s"<pos:position pos:line="78" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="78" pos:column="56">file<pos:position pos:line="78" pos:column="60"/></name></expr></argument>,
					<argument><expr><call><name pos:line="79" pos:column="41">sstrerror<pos:position pos:line="79" pos:column="50"/></name> <argument_list pos:line="79" pos:column="51">(<argument><expr><name pos:line="79" pos:column="52">errno<pos:position pos:line="79" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="59">errbuf<pos:position pos:line="79" pos:column="65"/></name></expr></argument>, <argument><expr><sizeof pos:line="79" pos:column="67">sizeof <argument_list pos:line="79" pos:column="74">(<argument><expr><name pos:line="79" pos:column="75">errbuf<pos:position pos:line="79" pos:column="81"/></name></expr></argument>)<pos:position pos:line="79" pos:column="82"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="79" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="79" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="85"/></expr_stmt>
		}<pos:position pos:line="80" pos:column="18"/></block></then></if>

		<while pos:line="82" pos:column="17">while <condition pos:line="82" pos:column="23">(<expr><operator pos:line="82" pos:column="24">(<pos:position pos:line="82" pos:column="25"/></operator><name pos:line="82" pos:column="25">fh<pos:position pos:line="82" pos:column="27"/></name> <operator pos:line="82" pos:column="28">!=<pos:position pos:line="82" pos:column="30"/></operator> <name pos:line="82" pos:column="31">NULL<pos:position pos:line="82" pos:column="35"/></name><operator pos:line="82" pos:column="35">)<pos:position pos:line="82" pos:column="36"/></operator> <operator pos:line="82" pos:column="37">&amp;&amp;<pos:position pos:line="82" pos:column="47"/></operator> <operator pos:line="82" pos:column="40">(<pos:position pos:line="82" pos:column="41"/></operator><name pos:line="82" pos:column="41">NULL<pos:position pos:line="82" pos:column="45"/></name> <operator pos:line="82" pos:column="46">!=<pos:position pos:line="82" pos:column="48"/></operator> <call><name pos:line="82" pos:column="49">fgets<pos:position pos:line="82" pos:column="54"/></name> <argument_list pos:line="82" pos:column="55">(<argument><expr><name pos:line="82" pos:column="56">buffer<pos:position pos:line="82" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="64">BUFSIZE<pos:position pos:line="82" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="73">fh<pos:position pos:line="82" pos:column="75"/></name></expr></argument>)<pos:position pos:line="82" pos:column="76"/></argument_list></call><operator pos:line="82" pos:column="76">)<pos:position pos:line="82" pos:column="77"/></operator></expr>)<pos:position pos:line="82" pos:column="78"/></condition>
		<block pos:line="83" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="84" pos:column="25">counter_t<pos:position pos:line="84" pos:column="34"/></name></type> <name pos:line="84" pos:column="35">rx<pos:position pos:line="84" pos:column="37"/></name></decl>;<pos:position pos:line="84" pos:column="38"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="85" pos:column="25">counter_t<pos:position pos:line="85" pos:column="34"/></name></type> <name pos:line="85" pos:column="35">tx<pos:position pos:line="85" pos:column="37"/></name></decl>;<pos:position pos:line="85" pos:column="38"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="86" pos:column="25">char<pos:position pos:line="86" pos:column="29"/></name> <modifier pos:line="86" pos:column="30">*<pos:position pos:line="86" pos:column="31"/></modifier></type><name pos:line="86" pos:column="31">type_instance<pos:position pos:line="86" pos:column="44"/></name></decl>;<pos:position pos:line="86" pos:column="45"/></decl_stmt>

			<if pos:line="88" pos:column="25">if <condition pos:line="88" pos:column="28">(<expr><call><name pos:line="88" pos:column="29">strsplit<pos:position pos:line="88" pos:column="37"/></name> <argument_list pos:line="88" pos:column="38">(<argument><expr><name pos:line="88" pos:column="39">buffer<pos:position pos:line="88" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="47">cols<pos:position pos:line="88" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="88" pos:column="53">4<pos:position pos:line="88" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="55"/></argument_list></call> <operator pos:line="88" pos:column="56">&lt;<pos:position pos:line="88" pos:column="60"/></operator> <literal type="number" pos:line="88" pos:column="58">4<pos:position pos:line="88" pos:column="59"/></literal></expr>)<pos:position pos:line="88" pos:column="60"/></condition><then pos:line="88" pos:column="60">
				<block type="pseudo"><continue pos:line="89" pos:column="33">continue;<pos:position pos:line="89" pos:column="42"/></continue></block></then></if>

			<if pos:line="91" pos:column="25">if <condition pos:line="91" pos:column="28">(<expr><literal type="number" pos:line="91" pos:column="29">0<pos:position pos:line="91" pos:column="30"/></literal> <operator pos:line="91" pos:column="31">==<pos:position pos:line="91" pos:column="33"/></operator> <call><name pos:line="91" pos:column="34">strcmp<pos:position pos:line="91" pos:column="40"/></name> <argument_list pos:line="91" pos:column="41">(<argument><expr><name><name pos:line="91" pos:column="42">cols<pos:position pos:line="91" pos:column="46"/></name><index pos:line="91" pos:column="46">[<expr><literal type="number" pos:line="91" pos:column="47">0<pos:position pos:line="91" pos:column="48"/></literal></expr>]<pos:position pos:line="91" pos:column="49"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="51">"UNIX:"<pos:position pos:line="91" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="91" pos:column="60"/></condition><then pos:line="91" pos:column="60">
				<block type="pseudo"><expr_stmt><expr><name pos:line="92" pos:column="33">type_instance<pos:position pos:line="92" pos:column="46"/></name> <operator pos:line="92" pos:column="47">=<pos:position pos:line="92" pos:column="48"/></operator> <literal type="string" pos:line="92" pos:column="49">"unix"<pos:position pos:line="92" pos:column="55"/></literal></expr>;<pos:position pos:line="92" pos:column="56"/></expr_stmt></block></then>
			<elseif pos:line="93" pos:column="25">else <if pos:line="93" pos:column="30">if <condition pos:line="93" pos:column="33">(<expr><literal type="number" pos:line="93" pos:column="34">0<pos:position pos:line="93" pos:column="35"/></literal> <operator pos:line="93" pos:column="36">==<pos:position pos:line="93" pos:column="38"/></operator> <call><name pos:line="93" pos:column="39">strcmp<pos:position pos:line="93" pos:column="45"/></name> <argument_list pos:line="93" pos:column="46">(<argument><expr><name><name pos:line="93" pos:column="47">cols<pos:position pos:line="93" pos:column="51"/></name><index pos:line="93" pos:column="51">[<expr><literal type="number" pos:line="93" pos:column="52">0<pos:position pos:line="93" pos:column="53"/></literal></expr>]<pos:position pos:line="93" pos:column="54"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="56">"INET:"<pos:position pos:line="93" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="93" pos:column="65"/></condition><then pos:line="93" pos:column="65">
				<block type="pseudo"><expr_stmt><expr><name pos:line="94" pos:column="33">type_instance<pos:position pos:line="94" pos:column="46"/></name> <operator pos:line="94" pos:column="47">=<pos:position pos:line="94" pos:column="48"/></operator> <literal type="string" pos:line="94" pos:column="49">"inet"<pos:position pos:line="94" pos:column="55"/></literal></expr>;<pos:position pos:line="94" pos:column="56"/></expr_stmt></block></then></if></elseif>
			<elseif pos:line="95" pos:column="25">else <if pos:line="95" pos:column="30">if <condition pos:line="95" pos:column="33">(<expr><literal type="number" pos:line="95" pos:column="34">0<pos:position pos:line="95" pos:column="35"/></literal> <operator pos:line="95" pos:column="36">==<pos:position pos:line="95" pos:column="38"/></operator> <call><name pos:line="95" pos:column="39">strcmp<pos:position pos:line="95" pos:column="45"/></name> <argument_list pos:line="95" pos:column="46">(<argument><expr><name><name pos:line="95" pos:column="47">cols<pos:position pos:line="95" pos:column="51"/></name><index pos:line="95" pos:column="51">[<expr><literal type="number" pos:line="95" pos:column="52">0<pos:position pos:line="95" pos:column="53"/></literal></expr>]<pos:position pos:line="95" pos:column="54"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="95" pos:column="56">"INET6:"<pos:position pos:line="95" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="95" pos:column="66"/></condition><then pos:line="95" pos:column="66">
				<block type="pseudo"><expr_stmt><expr><name pos:line="96" pos:column="33">type_instance<pos:position pos:line="96" pos:column="46"/></name> <operator pos:line="96" pos:column="47">=<pos:position pos:line="96" pos:column="48"/></operator> <literal type="string" pos:line="96" pos:column="49">"inet6"<pos:position pos:line="96" pos:column="56"/></literal></expr>;<pos:position pos:line="96" pos:column="57"/></expr_stmt></block></then></if></elseif>
			<elseif pos:line="97" pos:column="25">else <if pos:line="97" pos:column="30">if <condition pos:line="97" pos:column="33">(<expr><literal type="number" pos:line="97" pos:column="34">0<pos:position pos:line="97" pos:column="35"/></literal> <operator pos:line="97" pos:column="36">==<pos:position pos:line="97" pos:column="38"/></operator> <call><name pos:line="97" pos:column="39">strcmp<pos:position pos:line="97" pos:column="45"/></name> <argument_list pos:line="97" pos:column="46">(<argument><expr><name><name pos:line="97" pos:column="47">cols<pos:position pos:line="97" pos:column="51"/></name><index pos:line="97" pos:column="51">[<expr><literal type="number" pos:line="97" pos:column="52">0<pos:position pos:line="97" pos:column="53"/></literal></expr>]<pos:position pos:line="97" pos:column="54"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="56">"OTHER:"<pos:position pos:line="97" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="97" pos:column="66"/></condition><then pos:line="97" pos:column="66">
				<block type="pseudo"><expr_stmt><expr><name pos:line="98" pos:column="33">type_instance<pos:position pos:line="98" pos:column="46"/></name> <operator pos:line="98" pos:column="47">=<pos:position pos:line="98" pos:column="48"/></operator> <literal type="string" pos:line="98" pos:column="49">"other"<pos:position pos:line="98" pos:column="56"/></literal></expr>;<pos:position pos:line="98" pos:column="57"/></expr_stmt></block></then></if></elseif>
			<elseif pos:line="99" pos:column="25">else <if pos:line="99" pos:column="30">if <condition pos:line="99" pos:column="33">(<expr><literal type="number" pos:line="99" pos:column="34">0<pos:position pos:line="99" pos:column="35"/></literal> <operator pos:line="99" pos:column="36">==<pos:position pos:line="99" pos:column="38"/></operator> <call><name pos:line="99" pos:column="39">strcmp<pos:position pos:line="99" pos:column="45"/></name> <argument_list pos:line="99" pos:column="46">(<argument><expr><name><name pos:line="99" pos:column="47">cols<pos:position pos:line="99" pos:column="51"/></name><index pos:line="99" pos:column="51">[<expr><literal type="number" pos:line="99" pos:column="52">0<pos:position pos:line="99" pos:column="53"/></literal></expr>]<pos:position pos:line="99" pos:column="54"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="99" pos:column="56">"UNSPEC:"<pos:position pos:line="99" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="99" pos:column="67"/></condition><then pos:line="99" pos:column="67">
				<block type="pseudo"><expr_stmt><expr><name pos:line="100" pos:column="33">type_instance<pos:position pos:line="100" pos:column="46"/></name> <operator pos:line="100" pos:column="47">=<pos:position pos:line="100" pos:column="48"/></operator> <literal type="string" pos:line="100" pos:column="49">"unspec"<pos:position pos:line="100" pos:column="57"/></literal></expr>;<pos:position pos:line="100" pos:column="58"/></expr_stmt></block></then></if></elseif>
			<else pos:line="101" pos:column="25">else
				<block type="pseudo"><continue pos:line="102" pos:column="33">continue;<pos:position pos:line="102" pos:column="42"/></continue></block></else></if>

			<expr_stmt><expr><name pos:line="104" pos:column="25">rx<pos:position pos:line="104" pos:column="27"/></name> <operator pos:line="104" pos:column="28">=<pos:position pos:line="104" pos:column="29"/></operator> <call><name pos:line="104" pos:column="30">__get_sock_bytes<pos:position pos:line="104" pos:column="46"/></name> <argument_list pos:line="104" pos:column="47">(<argument><expr><name><name pos:line="104" pos:column="48">cols<pos:position pos:line="104" pos:column="52"/></name><index pos:line="104" pos:column="52">[<expr><literal type="number" pos:line="104" pos:column="53">1<pos:position pos:line="104" pos:column="54"/></literal></expr>]<pos:position pos:line="104" pos:column="55"/></index></name></expr></argument>)<pos:position pos:line="104" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="57"/></expr_stmt>
			<expr_stmt><expr><name pos:line="105" pos:column="25">tx<pos:position pos:line="105" pos:column="27"/></name> <operator pos:line="105" pos:column="28">=<pos:position pos:line="105" pos:column="29"/></operator> <call><name pos:line="105" pos:column="30">__get_sock_bytes<pos:position pos:line="105" pos:column="46"/></name> <argument_list pos:line="105" pos:column="47">(<argument><expr><name><name pos:line="105" pos:column="48">cols<pos:position pos:line="105" pos:column="52"/></name><index pos:line="105" pos:column="52">[<expr><literal type="number" pos:line="105" pos:column="53">2<pos:position pos:line="105" pos:column="54"/></literal></expr>]<pos:position pos:line="105" pos:column="55"/></index></name></expr></argument>)<pos:position pos:line="105" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="57"/></expr_stmt>
			<comment type="block" pos:line="106" pos:column="25">/* cols[3] == errors */</comment>

			<expr_stmt><expr><call><name pos:line="108" pos:column="25">traffic_submit<pos:position pos:line="108" pos:column="39"/></name> <argument_list pos:line="108" pos:column="40">(<argument><expr><name><name pos:line="108" pos:column="41">dent<pos:position pos:line="108" pos:column="45"/></name><operator pos:line="108" pos:column="45">-&gt;<pos:position pos:line="108" pos:column="50"/></operator><name pos:line="108" pos:column="47">d_name<pos:position pos:line="108" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="55">type_instance<pos:position pos:line="108" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="70">rx<pos:position pos:line="108" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="74">tx<pos:position pos:line="108" pos:column="76"/></name></expr></argument>)<pos:position pos:line="108" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="78"/></expr_stmt>
		}<pos:position pos:line="109" pos:column="18"/></block></while> <comment type="block" pos:line="109" pos:column="19">/* while (fgets) */</comment>

		<if pos:line="111" pos:column="17">if <condition pos:line="111" pos:column="20">(<expr><name pos:line="111" pos:column="21">fh<pos:position pos:line="111" pos:column="23"/></name> <operator pos:line="111" pos:column="24">!=<pos:position pos:line="111" pos:column="26"/></operator> <name pos:line="111" pos:column="27">NULL<pos:position pos:line="111" pos:column="31"/></name></expr>)<pos:position pos:line="111" pos:column="32"/></condition><then pos:line="111" pos:column="32">
		<block pos:line="112" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="113" pos:column="25">fclose<pos:position pos:line="113" pos:column="31"/></name> <argument_list pos:line="113" pos:column="32">(<argument><expr><name pos:line="113" pos:column="33">fh<pos:position pos:line="113" pos:column="35"/></name></expr></argument>)<pos:position pos:line="113" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="37"/></expr_stmt>
			<expr_stmt><expr><name pos:line="114" pos:column="25">fh<pos:position pos:line="114" pos:column="27"/></name> <operator pos:line="114" pos:column="28">=<pos:position pos:line="114" pos:column="29"/></operator> <name pos:line="114" pos:column="30">NULL<pos:position pos:line="114" pos:column="34"/></name></expr>;<pos:position pos:line="114" pos:column="35"/></expr_stmt>
		}<pos:position pos:line="115" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="117" pos:column="17">/* thread information and load */</comment>
		<expr_stmt><expr><name pos:line="118" pos:column="17">len<pos:position pos:line="118" pos:column="20"/></name> <operator pos:line="118" pos:column="21">=<pos:position pos:line="118" pos:column="22"/></operator> <call><name pos:line="118" pos:column="23">snprintf<pos:position pos:line="118" pos:column="31"/></name> <argument_list pos:line="118" pos:column="32">(<argument><expr><name pos:line="118" pos:column="33">file<pos:position pos:line="118" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="39">BUFSIZE<pos:position pos:line="118" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="48">PROCDIR<pos:position pos:line="118" pos:column="55"/></name> <literal type="string" pos:line="118" pos:column="56">"/%s/cvirt"<pos:position pos:line="118" pos:column="67"/></literal></expr></argument>, <argument><expr><name><name pos:line="118" pos:column="69">dent<pos:position pos:line="118" pos:column="73"/></name><operator pos:line="118" pos:column="73">-&gt;<pos:position pos:line="118" pos:column="78"/></operator><name pos:line="118" pos:column="75">d_name<pos:position pos:line="118" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="118" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="83"/></expr_stmt>
		<if pos:line="119" pos:column="17">if <condition pos:line="119" pos:column="20">(<expr><operator pos:line="119" pos:column="21">(<pos:position pos:line="119" pos:column="22"/></operator><name pos:line="119" pos:column="22">len<pos:position pos:line="119" pos:column="25"/></name> <operator pos:line="119" pos:column="26">&lt;<pos:position pos:line="119" pos:column="30"/></operator> <literal type="number" pos:line="119" pos:column="28">0<pos:position pos:line="119" pos:column="29"/></literal><operator pos:line="119" pos:column="29">)<pos:position pos:line="119" pos:column="30"/></operator> <operator pos:line="119" pos:column="31">||<pos:position pos:line="119" pos:column="33"/></operator> <operator pos:line="119" pos:column="34">(<pos:position pos:line="119" pos:column="35"/></operator><name pos:line="119" pos:column="35">len<pos:position pos:line="119" pos:column="38"/></name> <operator pos:line="119" pos:column="39">&gt;=<pos:position pos:line="119" pos:column="44"/></operator> <name pos:line="119" pos:column="42">BUFSIZE<pos:position pos:line="119" pos:column="49"/></name><operator pos:line="119" pos:column="49">)<pos:position pos:line="119" pos:column="50"/></operator></expr>)<pos:position pos:line="119" pos:column="51"/></condition><then pos:line="119" pos:column="51">
			<block type="pseudo"><continue pos:line="120" pos:column="25">continue;<pos:position pos:line="120" pos:column="34"/></continue></block></then></if>

		<if pos:line="122" pos:column="17">if <condition pos:line="122" pos:column="20">(<expr><name pos:line="122" pos:column="21">NULL<pos:position pos:line="122" pos:column="25"/></name> <operator pos:line="122" pos:column="26">==<pos:position pos:line="122" pos:column="28"/></operator> <operator pos:line="122" pos:column="29">(<pos:position pos:line="122" pos:column="30"/></operator><name pos:line="122" pos:column="30">fh<pos:position pos:line="122" pos:column="32"/></name> <operator pos:line="122" pos:column="33">=<pos:position pos:line="122" pos:column="34"/></operator> <call><name pos:line="122" pos:column="35">fopen<pos:position pos:line="122" pos:column="40"/></name> <argument_list pos:line="122" pos:column="41">(<argument><expr><name pos:line="122" pos:column="42">file<pos:position pos:line="122" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="122" pos:column="48">"r"<pos:position pos:line="122" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="52"/></argument_list></call><operator pos:line="122" pos:column="52">)<pos:position pos:line="122" pos:column="53"/></operator></expr>)<pos:position pos:line="122" pos:column="54"/></condition><then pos:line="122" pos:column="54">
		<block pos:line="123" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="124" pos:column="25">char<pos:position pos:line="124" pos:column="29"/></name></type> <name><name pos:line="124" pos:column="30">errbuf<pos:position pos:line="124" pos:column="36"/></name><index pos:line="124" pos:column="36">[<expr><literal type="number" pos:line="124" pos:column="37">1024<pos:position pos:line="124" pos:column="41"/></literal></expr>]<pos:position pos:line="124" pos:column="42"/></index></name></decl>;<pos:position pos:line="124" pos:column="43"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="125" pos:column="25">ERROR<pos:position pos:line="125" pos:column="30"/></name> <argument_list pos:line="125" pos:column="31">(<argument><expr><literal type="string" pos:line="125" pos:column="32">"Cannot open '%s': %s"<pos:position pos:line="125" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="125" pos:column="56">file<pos:position pos:line="125" pos:column="60"/></name></expr></argument>,
					<argument><expr><call><name pos:line="126" pos:column="41">sstrerror<pos:position pos:line="126" pos:column="50"/></name> <argument_list pos:line="126" pos:column="51">(<argument><expr><name pos:line="126" pos:column="52">errno<pos:position pos:line="126" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="59">errbuf<pos:position pos:line="126" pos:column="65"/></name></expr></argument>, <argument><expr><sizeof pos:line="126" pos:column="67">sizeof <argument_list pos:line="126" pos:column="74">(<argument><expr><name pos:line="126" pos:column="75">errbuf<pos:position pos:line="126" pos:column="81"/></name></expr></argument>)<pos:position pos:line="126" pos:column="82"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="126" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="126" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="85"/></expr_stmt>
		}<pos:position pos:line="127" pos:column="18"/></block></then></if>

		<while pos:line="129" pos:column="17">while <condition pos:line="129" pos:column="23">(<expr><operator pos:line="129" pos:column="24">(<pos:position pos:line="129" pos:column="25"/></operator><name pos:line="129" pos:column="25">fh<pos:position pos:line="129" pos:column="27"/></name> <operator pos:line="129" pos:column="28">!=<pos:position pos:line="129" pos:column="30"/></operator> <name pos:line="129" pos:column="31">NULL<pos:position pos:line="129" pos:column="35"/></name><operator pos:line="129" pos:column="35">)<pos:position pos:line="129" pos:column="36"/></operator> <operator pos:line="129" pos:column="37">&amp;&amp;<pos:position pos:line="129" pos:column="47"/></operator> <operator pos:line="129" pos:column="40">(<pos:position pos:line="129" pos:column="41"/></operator><name pos:line="129" pos:column="41">NULL<pos:position pos:line="129" pos:column="45"/></name> <operator pos:line="129" pos:column="46">!=<pos:position pos:line="129" pos:column="48"/></operator> <call><name pos:line="129" pos:column="49">fgets<pos:position pos:line="129" pos:column="54"/></name> <argument_list pos:line="129" pos:column="55">(<argument><expr><name pos:line="129" pos:column="56">buffer<pos:position pos:line="129" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="64">BUFSIZE<pos:position pos:line="129" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="73">fh<pos:position pos:line="129" pos:column="75"/></name></expr></argument>)<pos:position pos:line="129" pos:column="76"/></argument_list></call><operator pos:line="129" pos:column="76">)<pos:position pos:line="129" pos:column="77"/></operator></expr>)<pos:position pos:line="129" pos:column="78"/></condition>
		<block pos:line="130" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="131" pos:column="25">int<pos:position pos:line="131" pos:column="28"/></name></type> <name pos:line="131" pos:column="29">n<pos:position pos:line="131" pos:column="30"/></name> <init pos:line="131" pos:column="31">= <expr><call><name pos:line="131" pos:column="33">strsplit<pos:position pos:line="131" pos:column="41"/></name> <argument_list pos:line="131" pos:column="42">(<argument><expr><name pos:line="131" pos:column="43">buffer<pos:position pos:line="131" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="131" pos:column="51">cols<pos:position pos:line="131" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="131" pos:column="57">4<pos:position pos:line="131" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="131" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="131" pos:column="60"/></decl_stmt>

			<if pos:line="133" pos:column="25">if <condition pos:line="133" pos:column="28">(<expr><literal type="number" pos:line="133" pos:column="29">2<pos:position pos:line="133" pos:column="30"/></literal> <operator pos:line="133" pos:column="31">==<pos:position pos:line="133" pos:column="33"/></operator> <name pos:line="133" pos:column="34">n<pos:position pos:line="133" pos:column="35"/></name></expr>)<pos:position pos:line="133" pos:column="36"/></condition><then pos:line="133" pos:column="36">
			<block pos:line="134" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="135" pos:column="33">char<pos:position pos:line="135" pos:column="37"/></name>   <modifier pos:line="135" pos:column="40">*<pos:position pos:line="135" pos:column="41"/></modifier></type><name pos:line="135" pos:column="41">type_instance<pos:position pos:line="135" pos:column="54"/></name></decl>;<pos:position pos:line="135" pos:column="55"/></decl_stmt>
				<decl_stmt><decl><type><name pos:line="136" pos:column="33">gauge_t<pos:position pos:line="136" pos:column="40"/></name></type> <name pos:line="136" pos:column="41">value<pos:position pos:line="136" pos:column="46"/></name></decl>;<pos:position pos:line="136" pos:column="47"/></decl_stmt>

				<if pos:line="138" pos:column="33">if <condition pos:line="138" pos:column="36">(<expr><literal type="number" pos:line="138" pos:column="37">0<pos:position pos:line="138" pos:column="38"/></literal> <operator pos:line="138" pos:column="39">==<pos:position pos:line="138" pos:column="41"/></operator> <call><name pos:line="138" pos:column="42">strcmp<pos:position pos:line="138" pos:column="48"/></name> <argument_list pos:line="138" pos:column="49">(<argument><expr><name><name pos:line="138" pos:column="50">cols<pos:position pos:line="138" pos:column="54"/></name><index pos:line="138" pos:column="54">[<expr><literal type="number" pos:line="138" pos:column="55">0<pos:position pos:line="138" pos:column="56"/></literal></expr>]<pos:position pos:line="138" pos:column="57"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="138" pos:column="59">"nr_threads:"<pos:position pos:line="138" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="138" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="138" pos:column="74"/></condition><then pos:line="138" pos:column="74">
					<block type="pseudo"><expr_stmt><expr><name pos:line="139" pos:column="41">type_instance<pos:position pos:line="139" pos:column="54"/></name> <operator pos:line="139" pos:column="55">=<pos:position pos:line="139" pos:column="56"/></operator> <literal type="string" pos:line="139" pos:column="57">"total"<pos:position pos:line="139" pos:column="64"/></literal></expr>;<pos:position pos:line="139" pos:column="65"/></expr_stmt></block></then>
				<elseif pos:line="140" pos:column="33">else <if pos:line="140" pos:column="38">if <condition pos:line="140" pos:column="41">(<expr><literal type="number" pos:line="140" pos:column="42">0<pos:position pos:line="140" pos:column="43"/></literal> <operator pos:line="140" pos:column="44">==<pos:position pos:line="140" pos:column="46"/></operator> <call><name pos:line="140" pos:column="47">strcmp<pos:position pos:line="140" pos:column="53"/></name> <argument_list pos:line="140" pos:column="54">(<argument><expr><name><name pos:line="140" pos:column="55">cols<pos:position pos:line="140" pos:column="59"/></name><index pos:line="140" pos:column="59">[<expr><literal type="number" pos:line="140" pos:column="60">0<pos:position pos:line="140" pos:column="61"/></literal></expr>]<pos:position pos:line="140" pos:column="62"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="140" pos:column="64">"nr_running:"<pos:position pos:line="140" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="140" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="140" pos:column="79"/></condition><then pos:line="140" pos:column="79">
					<block type="pseudo"><expr_stmt><expr><name pos:line="141" pos:column="41">type_instance<pos:position pos:line="141" pos:column="54"/></name> <operator pos:line="141" pos:column="55">=<pos:position pos:line="141" pos:column="56"/></operator> <literal type="string" pos:line="141" pos:column="57">"running"<pos:position pos:line="141" pos:column="66"/></literal></expr>;<pos:position pos:line="141" pos:column="67"/></expr_stmt></block></then></if></elseif>
				<elseif pos:line="142" pos:column="33">else <if pos:line="142" pos:column="38">if <condition pos:line="142" pos:column="41">(<expr><literal type="number" pos:line="142" pos:column="42">0<pos:position pos:line="142" pos:column="43"/></literal> <operator pos:line="142" pos:column="44">==<pos:position pos:line="142" pos:column="46"/></operator> <call><name pos:line="142" pos:column="47">strcmp<pos:position pos:line="142" pos:column="53"/></name> <argument_list pos:line="142" pos:column="54">(<argument><expr><name><name pos:line="142" pos:column="55">cols<pos:position pos:line="142" pos:column="59"/></name><index pos:line="142" pos:column="59">[<expr><literal type="number" pos:line="142" pos:column="60">0<pos:position pos:line="142" pos:column="61"/></literal></expr>]<pos:position pos:line="142" pos:column="62"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="142" pos:column="64">"nr_unintr:"<pos:position pos:line="142" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="142" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="142" pos:column="78"/></condition><then pos:line="142" pos:column="78">
					<block type="pseudo"><expr_stmt><expr><name pos:line="143" pos:column="41">type_instance<pos:position pos:line="143" pos:column="54"/></name> <operator pos:line="143" pos:column="55">=<pos:position pos:line="143" pos:column="56"/></operator> <literal type="string" pos:line="143" pos:column="57">"uninterruptable"<pos:position pos:line="143" pos:column="74"/></literal></expr>;<pos:position pos:line="143" pos:column="75"/></expr_stmt></block></then></if></elseif>
				<elseif pos:line="144" pos:column="33">else <if pos:line="144" pos:column="38">if <condition pos:line="144" pos:column="41">(<expr><literal type="number" pos:line="144" pos:column="42">0<pos:position pos:line="144" pos:column="43"/></literal> <operator pos:line="144" pos:column="44">==<pos:position pos:line="144" pos:column="46"/></operator> <call><name pos:line="144" pos:column="47">strcmp<pos:position pos:line="144" pos:column="53"/></name> <argument_list pos:line="144" pos:column="54">(<argument><expr><name><name pos:line="144" pos:column="55">cols<pos:position pos:line="144" pos:column="59"/></name><index pos:line="144" pos:column="59">[<expr><literal type="number" pos:line="144" pos:column="60">0<pos:position pos:line="144" pos:column="61"/></literal></expr>]<pos:position pos:line="144" pos:column="62"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="144" pos:column="64">"nr_onhold:"<pos:position pos:line="144" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="144" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="144" pos:column="78"/></condition><then pos:line="144" pos:column="78">
					<block type="pseudo"><expr_stmt><expr><name pos:line="145" pos:column="41">type_instance<pos:position pos:line="145" pos:column="54"/></name> <operator pos:line="145" pos:column="55">=<pos:position pos:line="145" pos:column="56"/></operator> <literal type="string" pos:line="145" pos:column="57">"onhold"<pos:position pos:line="145" pos:column="65"/></literal></expr>;<pos:position pos:line="145" pos:column="66"/></expr_stmt></block></then></if></elseif>
				<else pos:line="146" pos:column="33">else
					<block type="pseudo"><continue pos:line="147" pos:column="41">continue;<pos:position pos:line="147" pos:column="50"/></continue></block></else></if>

				<expr_stmt><expr><name pos:line="149" pos:column="33">value<pos:position pos:line="149" pos:column="38"/></name> <operator pos:line="149" pos:column="39">=<pos:position pos:line="149" pos:column="40"/></operator> <call><name pos:line="149" pos:column="41">atof<pos:position pos:line="149" pos:column="45"/></name> <argument_list pos:line="149" pos:column="46">(<argument><expr><name><name pos:line="149" pos:column="47">cols<pos:position pos:line="149" pos:column="51"/></name><index pos:line="149" pos:column="51">[<expr><literal type="number" pos:line="149" pos:column="52">1<pos:position pos:line="149" pos:column="53"/></literal></expr>]<pos:position pos:line="149" pos:column="54"/></index></name></expr></argument>)<pos:position pos:line="149" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="56"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="150" pos:column="33">submit_gauge<pos:position pos:line="150" pos:column="45"/></name> <argument_list pos:line="150" pos:column="46">(<argument><expr><name><name pos:line="150" pos:column="47">dent<pos:position pos:line="150" pos:column="51"/></name><operator pos:line="150" pos:column="51">-&gt;<pos:position pos:line="150" pos:column="56"/></operator><name pos:line="150" pos:column="53">d_name<pos:position pos:line="150" pos:column="59"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="150" pos:column="61">"vs_threads"<pos:position pos:line="150" pos:column="73"/></literal></expr></argument>, <argument><expr><name pos:line="150" pos:column="75">type_instance<pos:position pos:line="150" pos:column="88"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="90">value<pos:position pos:line="150" pos:column="95"/></name></expr></argument>)<pos:position pos:line="150" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="97"/></expr_stmt>
			}<pos:position pos:line="151" pos:column="26"/></block></then>
			<elseif pos:line="152" pos:column="25">else <if pos:line="152" pos:column="30">if <condition pos:line="152" pos:column="33">(<expr><literal type="number" pos:line="152" pos:column="34">4<pos:position pos:line="152" pos:column="35"/></literal> <operator pos:line="152" pos:column="36">==<pos:position pos:line="152" pos:column="38"/></operator> <name pos:line="152" pos:column="39">n<pos:position pos:line="152" pos:column="40"/></name></expr>)<pos:position pos:line="152" pos:column="41"/></condition><then pos:line="152" pos:column="41"> <block pos:line="152" pos:column="42">{
				<if pos:line="153" pos:column="33">if <condition pos:line="153" pos:column="36">(<expr><literal type="number" pos:line="153" pos:column="37">0<pos:position pos:line="153" pos:column="38"/></literal> <operator pos:line="153" pos:column="39">==<pos:position pos:line="153" pos:column="41"/></operator> <call><name pos:line="153" pos:column="42">strcmp<pos:position pos:line="153" pos:column="48"/></name> <argument_list pos:line="153" pos:column="49">(<argument><expr><name><name pos:line="153" pos:column="50">cols<pos:position pos:line="153" pos:column="54"/></name><index pos:line="153" pos:column="54">[<expr><literal type="number" pos:line="153" pos:column="55">0<pos:position pos:line="153" pos:column="56"/></literal></expr>]<pos:position pos:line="153" pos:column="57"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="153" pos:column="59">"loadavg:"<pos:position pos:line="153" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="153" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="153" pos:column="71"/></condition><then pos:line="153" pos:column="71">
				<block pos:line="154" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="155" pos:column="41">gauge_t<pos:position pos:line="155" pos:column="48"/></name></type> <name pos:line="155" pos:column="49">snum<pos:position pos:line="155" pos:column="53"/></name> <init pos:line="155" pos:column="54">= <expr><call><name pos:line="155" pos:column="56">atof<pos:position pos:line="155" pos:column="60"/></name> <argument_list pos:line="155" pos:column="61">(<argument><expr><name><name pos:line="155" pos:column="62">cols<pos:position pos:line="155" pos:column="66"/></name><index pos:line="155" pos:column="66">[<expr><literal type="number" pos:line="155" pos:column="67">1<pos:position pos:line="155" pos:column="68"/></literal></expr>]<pos:position pos:line="155" pos:column="69"/></index></name></expr></argument>)<pos:position pos:line="155" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="155" pos:column="71"/></decl_stmt>
					<decl_stmt><decl><type><name pos:line="156" pos:column="41">gauge_t<pos:position pos:line="156" pos:column="48"/></name></type> <name pos:line="156" pos:column="49">mnum<pos:position pos:line="156" pos:column="53"/></name> <init pos:line="156" pos:column="54">= <expr><call><name pos:line="156" pos:column="56">atof<pos:position pos:line="156" pos:column="60"/></name> <argument_list pos:line="156" pos:column="61">(<argument><expr><name><name pos:line="156" pos:column="62">cols<pos:position pos:line="156" pos:column="66"/></name><index pos:line="156" pos:column="66">[<expr><literal type="number" pos:line="156" pos:column="67">2<pos:position pos:line="156" pos:column="68"/></literal></expr>]<pos:position pos:line="156" pos:column="69"/></index></name></expr></argument>)<pos:position pos:line="156" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="156" pos:column="71"/></decl_stmt>
					<decl_stmt><decl><type><name pos:line="157" pos:column="41">gauge_t<pos:position pos:line="157" pos:column="48"/></name></type> <name pos:line="157" pos:column="49">lnum<pos:position pos:line="157" pos:column="53"/></name> <init pos:line="157" pos:column="54">= <expr><call><name pos:line="157" pos:column="56">atof<pos:position pos:line="157" pos:column="60"/></name> <argument_list pos:line="157" pos:column="61">(<argument><expr><name><name pos:line="157" pos:column="62">cols<pos:position pos:line="157" pos:column="66"/></name><index pos:line="157" pos:column="66">[<expr><literal type="number" pos:line="157" pos:column="67">3<pos:position pos:line="157" pos:column="68"/></literal></expr>]<pos:position pos:line="157" pos:column="69"/></index></name></expr></argument>)<pos:position pos:line="157" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="157" pos:column="71"/></decl_stmt>
					<expr_stmt><expr><call><name pos:line="158" pos:column="41">load_submit<pos:position pos:line="158" pos:column="52"/></name> <argument_list pos:line="158" pos:column="53">(<argument><expr><name><name pos:line="158" pos:column="54">dent<pos:position pos:line="158" pos:column="58"/></name><operator pos:line="158" pos:column="58">-&gt;<pos:position pos:line="158" pos:column="63"/></operator><name pos:line="158" pos:column="60">d_name<pos:position pos:line="158" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="68">snum<pos:position pos:line="158" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="74">mnum<pos:position pos:line="158" pos:column="78"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="80">lnum<pos:position pos:line="158" pos:column="84"/></name></expr></argument>)<pos:position pos:line="158" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="86"/></expr_stmt>
				}<pos:position pos:line="159" pos:column="34"/></block></then></if>
			}<pos:position pos:line="160" pos:column="26"/></block></then></if></elseif></if>
		}<pos:position pos:line="161" pos:column="18"/></block></while> <comment type="block" pos:line="161" pos:column="19">/* while (fgets) */</comment>

		<if pos:line="163" pos:column="17">if <condition pos:line="163" pos:column="20">(<expr><name pos:line="163" pos:column="21">fh<pos:position pos:line="163" pos:column="23"/></name> <operator pos:line="163" pos:column="24">!=<pos:position pos:line="163" pos:column="26"/></operator> <name pos:line="163" pos:column="27">NULL<pos:position pos:line="163" pos:column="31"/></name></expr>)<pos:position pos:line="163" pos:column="32"/></condition><then pos:line="163" pos:column="32">
		<block pos:line="164" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="165" pos:column="25">fclose<pos:position pos:line="165" pos:column="31"/></name> <argument_list pos:line="165" pos:column="32">(<argument><expr><name pos:line="165" pos:column="33">fh<pos:position pos:line="165" pos:column="35"/></name></expr></argument>)<pos:position pos:line="165" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="37"/></expr_stmt>
			<expr_stmt><expr><name pos:line="166" pos:column="25">fh<pos:position pos:line="166" pos:column="27"/></name> <operator pos:line="166" pos:column="28">=<pos:position pos:line="166" pos:column="29"/></operator> <name pos:line="166" pos:column="30">NULL<pos:position pos:line="166" pos:column="34"/></name></expr>;<pos:position pos:line="166" pos:column="35"/></expr_stmt>
		}<pos:position pos:line="167" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="169" pos:column="17">/* processes and memory usage */</comment>
		<expr_stmt><expr><name pos:line="170" pos:column="17">len<pos:position pos:line="170" pos:column="20"/></name> <operator pos:line="170" pos:column="21">=<pos:position pos:line="170" pos:column="22"/></operator> <call><name pos:line="170" pos:column="23">snprintf<pos:position pos:line="170" pos:column="31"/></name> <argument_list pos:line="170" pos:column="32">(<argument><expr><name pos:line="170" pos:column="33">file<pos:position pos:line="170" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="170" pos:column="39">BUFSIZE<pos:position pos:line="170" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="170" pos:column="48">PROCDIR<pos:position pos:line="170" pos:column="55"/></name> <literal type="string" pos:line="170" pos:column="56">"/%s/limit"<pos:position pos:line="170" pos:column="67"/></literal></expr></argument>, <argument><expr><name><name pos:line="170" pos:column="69">dent<pos:position pos:line="170" pos:column="73"/></name><operator pos:line="170" pos:column="73">-&gt;<pos:position pos:line="170" pos:column="78"/></operator><name pos:line="170" pos:column="75">d_name<pos:position pos:line="170" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="170" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="83"/></expr_stmt>
		<if pos:line="171" pos:column="17">if <condition pos:line="171" pos:column="20">(<expr><operator pos:line="171" pos:column="21">(<pos:position pos:line="171" pos:column="22"/></operator><name pos:line="171" pos:column="22">len<pos:position pos:line="171" pos:column="25"/></name> <operator pos:line="171" pos:column="26">&lt;<pos:position pos:line="171" pos:column="30"/></operator> <literal type="number" pos:line="171" pos:column="28">0<pos:position pos:line="171" pos:column="29"/></literal><operator pos:line="171" pos:column="29">)<pos:position pos:line="171" pos:column="30"/></operator> <operator pos:line="171" pos:column="31">||<pos:position pos:line="171" pos:column="33"/></operator> <operator pos:line="171" pos:column="34">(<pos:position pos:line="171" pos:column="35"/></operator><name pos:line="171" pos:column="35">len<pos:position pos:line="171" pos:column="38"/></name> <operator pos:line="171" pos:column="39">&gt;=<pos:position pos:line="171" pos:column="44"/></operator> <name pos:line="171" pos:column="42">BUFSIZE<pos:position pos:line="171" pos:column="49"/></name><operator pos:line="171" pos:column="49">)<pos:position pos:line="171" pos:column="50"/></operator></expr>)<pos:position pos:line="171" pos:column="51"/></condition><then pos:line="171" pos:column="51">
			<block type="pseudo"><continue pos:line="172" pos:column="25">continue;<pos:position pos:line="172" pos:column="34"/></continue></block></then></if>

		<if pos:line="174" pos:column="17">if <condition pos:line="174" pos:column="20">(<expr><name pos:line="174" pos:column="21">NULL<pos:position pos:line="174" pos:column="25"/></name> <operator pos:line="174" pos:column="26">==<pos:position pos:line="174" pos:column="28"/></operator> <operator pos:line="174" pos:column="29">(<pos:position pos:line="174" pos:column="30"/></operator><name pos:line="174" pos:column="30">fh<pos:position pos:line="174" pos:column="32"/></name> <operator pos:line="174" pos:column="33">=<pos:position pos:line="174" pos:column="34"/></operator> <call><name pos:line="174" pos:column="35">fopen<pos:position pos:line="174" pos:column="40"/></name> <argument_list pos:line="174" pos:column="41">(<argument><expr><name pos:line="174" pos:column="42">file<pos:position pos:line="174" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="174" pos:column="48">"r"<pos:position pos:line="174" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="174" pos:column="52"/></argument_list></call><operator pos:line="174" pos:column="52">)<pos:position pos:line="174" pos:column="53"/></operator></expr>)<pos:position pos:line="174" pos:column="54"/></condition><then pos:line="174" pos:column="54">
		<block pos:line="175" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="176" pos:column="25">char<pos:position pos:line="176" pos:column="29"/></name></type> <name><name pos:line="176" pos:column="30">errbuf<pos:position pos:line="176" pos:column="36"/></name><index pos:line="176" pos:column="36">[<expr><literal type="number" pos:line="176" pos:column="37">1024<pos:position pos:line="176" pos:column="41"/></literal></expr>]<pos:position pos:line="176" pos:column="42"/></index></name></decl>;<pos:position pos:line="176" pos:column="43"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="177" pos:column="25">ERROR<pos:position pos:line="177" pos:column="30"/></name> <argument_list pos:line="177" pos:column="31">(<argument><expr><literal type="string" pos:line="177" pos:column="32">"Cannot open '%s': %s"<pos:position pos:line="177" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="177" pos:column="56">file<pos:position pos:line="177" pos:column="60"/></name></expr></argument>,
					<argument><expr><call><name pos:line="178" pos:column="41">sstrerror<pos:position pos:line="178" pos:column="50"/></name> <argument_list pos:line="178" pos:column="51">(<argument><expr><name pos:line="178" pos:column="52">errno<pos:position pos:line="178" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="178" pos:column="59">errbuf<pos:position pos:line="178" pos:column="65"/></name></expr></argument>, <argument><expr><sizeof pos:line="178" pos:column="67">sizeof <argument_list pos:line="178" pos:column="74">(<argument><expr><name pos:line="178" pos:column="75">errbuf<pos:position pos:line="178" pos:column="81"/></name></expr></argument>)<pos:position pos:line="178" pos:column="82"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="178" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="178" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="85"/></expr_stmt>
		}<pos:position pos:line="179" pos:column="18"/></block></then></if>

		<while pos:line="181" pos:column="17">while <condition pos:line="181" pos:column="23">(<expr><operator pos:line="181" pos:column="24">(<pos:position pos:line="181" pos:column="25"/></operator><name pos:line="181" pos:column="25">fh<pos:position pos:line="181" pos:column="27"/></name> <operator pos:line="181" pos:column="28">!=<pos:position pos:line="181" pos:column="30"/></operator> <name pos:line="181" pos:column="31">NULL<pos:position pos:line="181" pos:column="35"/></name><operator pos:line="181" pos:column="35">)<pos:position pos:line="181" pos:column="36"/></operator> <operator pos:line="181" pos:column="37">&amp;&amp;<pos:position pos:line="181" pos:column="47"/></operator> <operator pos:line="181" pos:column="40">(<pos:position pos:line="181" pos:column="41"/></operator><name pos:line="181" pos:column="41">NULL<pos:position pos:line="181" pos:column="45"/></name> <operator pos:line="181" pos:column="46">!=<pos:position pos:line="181" pos:column="48"/></operator> <call><name pos:line="181" pos:column="49">fgets<pos:position pos:line="181" pos:column="54"/></name> <argument_list pos:line="181" pos:column="55">(<argument><expr><name pos:line="181" pos:column="56">buffer<pos:position pos:line="181" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="181" pos:column="64">BUFSIZE<pos:position pos:line="181" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="181" pos:column="73">fh<pos:position pos:line="181" pos:column="75"/></name></expr></argument>)<pos:position pos:line="181" pos:column="76"/></argument_list></call><operator pos:line="181" pos:column="76">)<pos:position pos:line="181" pos:column="77"/></operator></expr>)<pos:position pos:line="181" pos:column="78"/></condition>
		<block pos:line="182" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="183" pos:column="25">char<pos:position pos:line="183" pos:column="29"/></name> <modifier pos:line="183" pos:column="30">*<pos:position pos:line="183" pos:column="31"/></modifier></type><name pos:line="183" pos:column="31">type<pos:position pos:line="183" pos:column="35"/></name> <init pos:line="183" pos:column="36">= <expr><literal type="string" pos:line="183" pos:column="38">"vs_memory"<pos:position pos:line="183" pos:column="49"/></literal></expr></init></decl>;<pos:position pos:line="183" pos:column="50"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="184" pos:column="25">char<pos:position pos:line="184" pos:column="29"/></name> <modifier pos:line="184" pos:column="30">*<pos:position pos:line="184" pos:column="31"/></modifier></type><name pos:line="184" pos:column="31">type_instance<pos:position pos:line="184" pos:column="44"/></name></decl>;<pos:position pos:line="184" pos:column="45"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="185" pos:column="25">gauge_t<pos:position pos:line="185" pos:column="32"/></name></type> <name pos:line="185" pos:column="33">value<pos:position pos:line="185" pos:column="38"/></name></decl>;<pos:position pos:line="185" pos:column="39"/></decl_stmt>

			<if pos:line="187" pos:column="25">if <condition pos:line="187" pos:column="28">(<expr><call><name pos:line="187" pos:column="29">strsplit<pos:position pos:line="187" pos:column="37"/></name> <argument_list pos:line="187" pos:column="38">(<argument><expr><name pos:line="187" pos:column="39">buffer<pos:position pos:line="187" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="187" pos:column="47">cols<pos:position pos:line="187" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="187" pos:column="53">2<pos:position pos:line="187" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="187" pos:column="55"/></argument_list></call> <operator pos:line="187" pos:column="56">&lt;<pos:position pos:line="187" pos:column="60"/></operator> <literal type="number" pos:line="187" pos:column="58">2<pos:position pos:line="187" pos:column="59"/></literal></expr>)<pos:position pos:line="187" pos:column="60"/></condition><then pos:line="187" pos:column="60">
				<block type="pseudo"><continue pos:line="188" pos:column="33">continue;<pos:position pos:line="188" pos:column="42"/></continue></block></then></if>

			<if pos:line="190" pos:column="25">if <condition pos:line="190" pos:column="28">(<expr><literal type="number" pos:line="190" pos:column="29">0<pos:position pos:line="190" pos:column="30"/></literal> <operator pos:line="190" pos:column="31">==<pos:position pos:line="190" pos:column="33"/></operator> <call><name pos:line="190" pos:column="34">strcmp<pos:position pos:line="190" pos:column="40"/></name> <argument_list pos:line="190" pos:column="41">(<argument><expr><name><name pos:line="190" pos:column="42">cols<pos:position pos:line="190" pos:column="46"/></name><index pos:line="190" pos:column="46">[<expr><literal type="number" pos:line="190" pos:column="47">0<pos:position pos:line="190" pos:column="48"/></literal></expr>]<pos:position pos:line="190" pos:column="49"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="190" pos:column="51">"PROC:"<pos:position pos:line="190" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="190" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="190" pos:column="60"/></condition><then pos:line="190" pos:column="60">
			<block pos:line="191" pos:column="25">{
				<expr_stmt><expr><name pos:line="192" pos:column="33">type<pos:position pos:line="192" pos:column="37"/></name> <operator pos:line="192" pos:column="38">=<pos:position pos:line="192" pos:column="39"/></operator> <literal type="string" pos:line="192" pos:column="40">"vs_processes"<pos:position pos:line="192" pos:column="54"/></literal></expr>;<pos:position pos:line="192" pos:column="55"/></expr_stmt>
				<expr_stmt><expr><name pos:line="193" pos:column="33">type_instance<pos:position pos:line="193" pos:column="46"/></name> <operator pos:line="193" pos:column="47">=<pos:position pos:line="193" pos:column="48"/></operator> <literal type="string" pos:line="193" pos:column="49">""<pos:position pos:line="193" pos:column="51"/></literal></expr>;<pos:position pos:line="193" pos:column="52"/></expr_stmt>
				<expr_stmt><expr><name pos:line="194" pos:column="33">value<pos:position pos:line="194" pos:column="38"/></name> <operator pos:line="194" pos:column="39">=<pos:position pos:line="194" pos:column="40"/></operator> <call><name pos:line="194" pos:column="41">atof<pos:position pos:line="194" pos:column="45"/></name> <argument_list pos:line="194" pos:column="46">(<argument><expr><name><name pos:line="194" pos:column="47">cols<pos:position pos:line="194" pos:column="51"/></name><index pos:line="194" pos:column="51">[<expr><literal type="number" pos:line="194" pos:column="52">1<pos:position pos:line="194" pos:column="53"/></literal></expr>]<pos:position pos:line="194" pos:column="54"/></index></name></expr></argument>)<pos:position pos:line="194" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="56"/></expr_stmt>
			}<pos:position pos:line="195" pos:column="26"/></block></then>
			<else pos:line="196" pos:column="25">else
			<block pos:line="197" pos:column="25">{
				<if pos:line="198" pos:column="33">if <condition pos:line="198" pos:column="36">(<expr><literal type="number" pos:line="198" pos:column="37">0<pos:position pos:line="198" pos:column="38"/></literal> <operator pos:line="198" pos:column="39">==<pos:position pos:line="198" pos:column="41"/></operator> <call><name pos:line="198" pos:column="42">strcmp<pos:position pos:line="198" pos:column="48"/></name> <argument_list pos:line="198" pos:column="49">(<argument><expr><name><name pos:line="198" pos:column="50">cols<pos:position pos:line="198" pos:column="54"/></name><index pos:line="198" pos:column="54">[<expr><literal type="number" pos:line="198" pos:column="55">0<pos:position pos:line="198" pos:column="56"/></literal></expr>]<pos:position pos:line="198" pos:column="57"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="198" pos:column="59">"VM:"<pos:position pos:line="198" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="198" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="198" pos:column="66"/></condition><then pos:line="198" pos:column="66">
					<block type="pseudo"><expr_stmt><expr><name pos:line="199" pos:column="41">type_instance<pos:position pos:line="199" pos:column="54"/></name> <operator pos:line="199" pos:column="55">=<pos:position pos:line="199" pos:column="56"/></operator> <literal type="string" pos:line="199" pos:column="57">"vm"<pos:position pos:line="199" pos:column="61"/></literal></expr>;<pos:position pos:line="199" pos:column="62"/></expr_stmt></block></then>
				<elseif pos:line="200" pos:column="33">else <if pos:line="200" pos:column="38">if <condition pos:line="200" pos:column="41">(<expr><literal type="number" pos:line="200" pos:column="42">0<pos:position pos:line="200" pos:column="43"/></literal> <operator pos:line="200" pos:column="44">==<pos:position pos:line="200" pos:column="46"/></operator> <call><name pos:line="200" pos:column="47">strcmp<pos:position pos:line="200" pos:column="53"/></name> <argument_list pos:line="200" pos:column="54">(<argument><expr><name><name pos:line="200" pos:column="55">cols<pos:position pos:line="200" pos:column="59"/></name><index pos:line="200" pos:column="59">[<expr><literal type="number" pos:line="200" pos:column="60">0<pos:position pos:line="200" pos:column="61"/></literal></expr>]<pos:position pos:line="200" pos:column="62"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="200" pos:column="64">"VML:"<pos:position pos:line="200" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="200" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="200" pos:column="72"/></condition><then pos:line="200" pos:column="72">
					<block type="pseudo"><expr_stmt><expr><name pos:line="201" pos:column="41">type_instance<pos:position pos:line="201" pos:column="54"/></name> <operator pos:line="201" pos:column="55">=<pos:position pos:line="201" pos:column="56"/></operator> <literal type="string" pos:line="201" pos:column="57">"vml"<pos:position pos:line="201" pos:column="62"/></literal></expr>;<pos:position pos:line="201" pos:column="63"/></expr_stmt></block></then></if></elseif>
				<elseif pos:line="202" pos:column="33">else <if pos:line="202" pos:column="38">if <condition pos:line="202" pos:column="41">(<expr><literal type="number" pos:line="202" pos:column="42">0<pos:position pos:line="202" pos:column="43"/></literal> <operator pos:line="202" pos:column="44">==<pos:position pos:line="202" pos:column="46"/></operator> <call><name pos:line="202" pos:column="47">strcmp<pos:position pos:line="202" pos:column="53"/></name> <argument_list pos:line="202" pos:column="54">(<argument><expr><name><name pos:line="202" pos:column="55">cols<pos:position pos:line="202" pos:column="59"/></name><index pos:line="202" pos:column="59">[<expr><literal type="number" pos:line="202" pos:column="60">0<pos:position pos:line="202" pos:column="61"/></literal></expr>]<pos:position pos:line="202" pos:column="62"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="202" pos:column="64">"RSS:"<pos:position pos:line="202" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="202" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="202" pos:column="72"/></condition><then pos:line="202" pos:column="72">
					<block type="pseudo"><expr_stmt><expr><name pos:line="203" pos:column="41">type_instance<pos:position pos:line="203" pos:column="54"/></name> <operator pos:line="203" pos:column="55">=<pos:position pos:line="203" pos:column="56"/></operator> <literal type="string" pos:line="203" pos:column="57">"rss"<pos:position pos:line="203" pos:column="62"/></literal></expr>;<pos:position pos:line="203" pos:column="63"/></expr_stmt></block></then></if></elseif>
				<elseif pos:line="204" pos:column="33">else <if pos:line="204" pos:column="38">if <condition pos:line="204" pos:column="41">(<expr><literal type="number" pos:line="204" pos:column="42">0<pos:position pos:line="204" pos:column="43"/></literal> <operator pos:line="204" pos:column="44">==<pos:position pos:line="204" pos:column="46"/></operator> <call><name pos:line="204" pos:column="47">strcmp<pos:position pos:line="204" pos:column="53"/></name> <argument_list pos:line="204" pos:column="54">(<argument><expr><name><name pos:line="204" pos:column="55">cols<pos:position pos:line="204" pos:column="59"/></name><index pos:line="204" pos:column="59">[<expr><literal type="number" pos:line="204" pos:column="60">0<pos:position pos:line="204" pos:column="61"/></literal></expr>]<pos:position pos:line="204" pos:column="62"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="204" pos:column="64">"ANON:"<pos:position pos:line="204" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="204" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="204" pos:column="73"/></condition><then pos:line="204" pos:column="73">
					<block type="pseudo"><expr_stmt><expr><name pos:line="205" pos:column="41">type_instance<pos:position pos:line="205" pos:column="54"/></name> <operator pos:line="205" pos:column="55">=<pos:position pos:line="205" pos:column="56"/></operator> <literal type="string" pos:line="205" pos:column="57">"anon"<pos:position pos:line="205" pos:column="63"/></literal></expr>;<pos:position pos:line="205" pos:column="64"/></expr_stmt></block></then></if></elseif>
				<else pos:line="206" pos:column="33">else
					<block type="pseudo"><continue pos:line="207" pos:column="41">continue;<pos:position pos:line="207" pos:column="50"/></continue></block></else></if>

				<expr_stmt><expr><name pos:line="209" pos:column="33">value<pos:position pos:line="209" pos:column="38"/></name> <operator pos:line="209" pos:column="39">=<pos:position pos:line="209" pos:column="40"/></operator> <call><name pos:line="209" pos:column="41">atof<pos:position pos:line="209" pos:column="45"/></name> <argument_list pos:line="209" pos:column="46">(<argument><expr><name><name pos:line="209" pos:column="47">cols<pos:position pos:line="209" pos:column="51"/></name><index pos:line="209" pos:column="51">[<expr><literal type="number" pos:line="209" pos:column="52">1<pos:position pos:line="209" pos:column="53"/></literal></expr>]<pos:position pos:line="209" pos:column="54"/></index></name></expr></argument>)<pos:position pos:line="209" pos:column="55"/></argument_list></call> <operator pos:line="209" pos:column="56">*<pos:position pos:line="209" pos:column="57"/></operator> <name pos:line="209" pos:column="58">pagesize<pos:position pos:line="209" pos:column="66"/></name></expr>;<pos:position pos:line="209" pos:column="67"/></expr_stmt>
			}<pos:position pos:line="210" pos:column="26"/></block></else></if>

			<expr_stmt><expr><call><name pos:line="212" pos:column="25">submit_gauge<pos:position pos:line="212" pos:column="37"/></name> <argument_list pos:line="212" pos:column="38">(<argument><expr><name><name pos:line="212" pos:column="39">dent<pos:position pos:line="212" pos:column="43"/></name><operator pos:line="212" pos:column="43">-&gt;<pos:position pos:line="212" pos:column="48"/></operator><name pos:line="212" pos:column="45">d_name<pos:position pos:line="212" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="212" pos:column="53">type<pos:position pos:line="212" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="212" pos:column="59">type_instance<pos:position pos:line="212" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="212" pos:column="74">value<pos:position pos:line="212" pos:column="79"/></name></expr></argument>)<pos:position pos:line="212" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="212" pos:column="81"/></expr_stmt>
		}<pos:position pos:line="213" pos:column="18"/></block></while> <comment type="block" pos:line="213" pos:column="19">/* while (fgets) */</comment>

		<if pos:line="215" pos:column="17">if <condition pos:line="215" pos:column="20">(<expr><name pos:line="215" pos:column="21">fh<pos:position pos:line="215" pos:column="23"/></name> <operator pos:line="215" pos:column="24">!=<pos:position pos:line="215" pos:column="26"/></operator> <name pos:line="215" pos:column="27">NULL<pos:position pos:line="215" pos:column="31"/></name></expr>)<pos:position pos:line="215" pos:column="32"/></condition><then pos:line="215" pos:column="32">
		<block pos:line="216" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="217" pos:column="25">fclose<pos:position pos:line="217" pos:column="31"/></name> <argument_list pos:line="217" pos:column="32">(<argument><expr><name pos:line="217" pos:column="33">fh<pos:position pos:line="217" pos:column="35"/></name></expr></argument>)<pos:position pos:line="217" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="217" pos:column="37"/></expr_stmt>
			<expr_stmt><expr><name pos:line="218" pos:column="25">fh<pos:position pos:line="218" pos:column="27"/></name> <operator pos:line="218" pos:column="28">=<pos:position pos:line="218" pos:column="29"/></operator> <name pos:line="218" pos:column="30">NULL<pos:position pos:line="218" pos:column="34"/></name></expr>;<pos:position pos:line="218" pos:column="35"/></expr_stmt>
		}<pos:position pos:line="219" pos:column="18"/></block></then></if>
	}<pos:position pos:line="220" pos:column="10"/></block></while> <comment type="block" pos:line="220" pos:column="11">/* while (readdir) */</comment>

	<expr_stmt><expr><call><name pos:line="222" pos:column="9">closedir<pos:position pos:line="222" pos:column="17"/></name> <argument_list pos:line="222" pos:column="18">(<argument><expr><name pos:line="222" pos:column="19">proc<pos:position pos:line="222" pos:column="23"/></name></expr></argument>)<pos:position pos:line="222" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="25"/></expr_stmt>

	<return pos:line="224" pos:column="9">return <expr><operator pos:line="224" pos:column="16">(<pos:position pos:line="224" pos:column="17"/></operator><literal type="number" pos:line="224" pos:column="17">0<pos:position pos:line="224" pos:column="18"/></literal><operator pos:line="224" pos:column="18">)<pos:position pos:line="224" pos:column="19"/></operator></expr>;<pos:position pos:line="224" pos:column="20"/></return>
}<pos:position pos:line="225" pos:column="2"/></block></function></unit>

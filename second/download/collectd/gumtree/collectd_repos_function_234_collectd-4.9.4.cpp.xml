<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_234_collectd-4.9.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">ping_thread<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">void<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">arg<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="37"/></parameter_list> <comment type="block" pos:line="1" pos:column="38">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><specifier pos:line="3" pos:column="3">static<pos:position pos:line="3" pos:column="9"/></specifier> <type><name pos:line="3" pos:column="10">pingobj_t<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">pingobj<pos:position pos:line="3" pos:column="28"/></name> <init pos:line="3" pos:column="29">= <expr><name pos:line="3" pos:column="31">NULL<pos:position pos:line="3" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="36"/></decl_stmt>

  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">timeval<pos:position pos:line="5" pos:column="17"/></name></name></type>  <name pos:line="5" pos:column="19">tv_begin<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">timeval<pos:position pos:line="6" pos:column="17"/></name></name></type>  <name pos:line="6" pos:column="19">tv_end<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">timespec<pos:position pos:line="7" pos:column="18"/></name></name></type> <name pos:line="7" pos:column="19">ts_wait<pos:position pos:line="7" pos:column="26"/></name></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">timespec<pos:position pos:line="8" pos:column="18"/></name></name></type> <name pos:line="8" pos:column="19">ts_int<pos:position pos:line="8" pos:column="25"/></name></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="10" pos:column="3">hostlist_t<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name pos:line="10" pos:column="15">hl<pos:position pos:line="10" pos:column="17"/></name></decl>;<pos:position pos:line="10" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">count<pos:position pos:line="11" pos:column="12"/></name></decl>;<pos:position pos:line="11" pos:column="13"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="13" pos:column="3">pthread_mutex_lock<pos:position pos:line="13" pos:column="21"/></name> <argument_list pos:line="13" pos:column="22">(<argument><expr><operator pos:line="13" pos:column="23">&amp;<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="24">ping_lock<pos:position pos:line="13" pos:column="33"/></name></expr></argument>)<pos:position pos:line="13" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="35"/></expr_stmt>

  <expr_stmt><expr><name pos:line="15" pos:column="3">pingobj<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">=<pos:position pos:line="15" pos:column="12"/></operator> <call><name pos:line="15" pos:column="13">ping_construct<pos:position pos:line="15" pos:column="27"/></name> <argument_list pos:line="15" pos:column="28">()<pos:position pos:line="15" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="31"/></expr_stmt>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">pingobj<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">==<pos:position pos:line="16" pos:column="17"/></operator> <name pos:line="16" pos:column="18">NULL<pos:position pos:line="16" pos:column="22"/></name></expr>)<pos:position pos:line="16" pos:column="23"/></condition><then pos:line="16" pos:column="23">
  <block pos:line="17" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">ERROR<pos:position pos:line="18" pos:column="10"/></name> <argument_list pos:line="18" pos:column="11">(<argument><expr><literal type="string" pos:line="18" pos:column="12">"ping plugin: ping_construct failed."<pos:position pos:line="18" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">ping_thread_error<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">=<pos:position pos:line="19" pos:column="24"/></operator> <literal type="number" pos:line="19" pos:column="25">1<pos:position pos:line="19" pos:column="26"/></literal></expr>;<pos:position pos:line="19" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">pthread_mutex_unlock<pos:position pos:line="20" pos:column="25"/></name> <argument_list pos:line="20" pos:column="26">(<argument><expr><operator pos:line="20" pos:column="27">&amp;<pos:position pos:line="20" pos:column="32"/></operator><name pos:line="20" pos:column="28">ping_lock<pos:position pos:line="20" pos:column="37"/></name></expr></argument>)<pos:position pos:line="20" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="39"/></expr_stmt>
    <return pos:line="21" pos:column="5">return <expr><operator pos:line="21" pos:column="12">(<pos:position pos:line="21" pos:column="13"/></operator><operator pos:line="21" pos:column="13">(<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="14">void<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">*<pos:position pos:line="21" pos:column="20"/></operator><operator pos:line="21" pos:column="20">)<pos:position pos:line="21" pos:column="21"/></operator> <operator pos:line="21" pos:column="22">-<pos:position pos:line="21" pos:column="23"/></operator><literal type="number" pos:line="21" pos:column="23">1<pos:position pos:line="21" pos:column="24"/></literal><operator pos:line="21" pos:column="24">)<pos:position pos:line="21" pos:column="25"/></operator></expr>;<pos:position pos:line="21" pos:column="26"/></return>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>

  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><name pos:line="24" pos:column="7">ping_source<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">!=<pos:position pos:line="24" pos:column="21"/></operator> <name pos:line="24" pos:column="22">NULL<pos:position pos:line="24" pos:column="26"/></name></expr>)<pos:position pos:line="24" pos:column="27"/></condition><then pos:line="24" pos:column="27">
    <block type="pseudo"><if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><call><name pos:line="25" pos:column="9">ping_setopt<pos:position pos:line="25" pos:column="20"/></name> <argument_list pos:line="25" pos:column="21">(<argument><expr><name pos:line="25" pos:column="22">pingobj<pos:position pos:line="25" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="31">PING_OPT_SOURCE<pos:position pos:line="25" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="48">(<pos:position pos:line="25" pos:column="49"/></operator><name pos:line="25" pos:column="49">void<pos:position pos:line="25" pos:column="53"/></name> <operator pos:line="25" pos:column="54">*<pos:position pos:line="25" pos:column="55"/></operator><operator pos:line="25" pos:column="55">)<pos:position pos:line="25" pos:column="56"/></operator> <name pos:line="25" pos:column="57">ping_source<pos:position pos:line="25" pos:column="68"/></name></expr></argument>)<pos:position pos:line="25" pos:column="69"/></argument_list></call> <operator pos:line="25" pos:column="70">!=<pos:position pos:line="25" pos:column="72"/></operator> <literal type="number" pos:line="25" pos:column="73">0<pos:position pos:line="25" pos:column="74"/></literal></expr>)<pos:position pos:line="25" pos:column="75"/></condition><then pos:line="25" pos:column="75">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="7">ERROR<pos:position pos:line="26" pos:column="12"/></name> <argument_list pos:line="26" pos:column="13">(<argument><expr><literal type="string" pos:line="26" pos:column="14">"ping plugin: Failed to set source address: %s"<pos:position pos:line="26" pos:column="61"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="27" pos:column="11">ping_get_error<pos:position pos:line="27" pos:column="25"/></name> <argument_list pos:line="27" pos:column="26">(<argument><expr><name pos:line="27" pos:column="27">pingobj<pos:position pos:line="27" pos:column="34"/></name></expr></argument>)<pos:position pos:line="27" pos:column="35"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="37"/></expr_stmt></block></then></if></block></then></if>

<cpp:ifdef pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">ifdef<pos:position pos:line="29" pos:column="7"/></cpp:directive> <name pos:line="29" pos:column="8">HAVE_OPING_1_3<pos:position pos:line="29" pos:column="22"/></name></cpp:ifdef>
  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><name pos:line="30" pos:column="7">ping_device<pos:position pos:line="30" pos:column="18"/></name> <operator pos:line="30" pos:column="19">!=<pos:position pos:line="30" pos:column="21"/></operator> <name pos:line="30" pos:column="22">NULL<pos:position pos:line="30" pos:column="26"/></name></expr>)<pos:position pos:line="30" pos:column="27"/></condition><then pos:line="30" pos:column="27">
    <block type="pseudo"><if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><call><name pos:line="31" pos:column="9">ping_setopt<pos:position pos:line="31" pos:column="20"/></name> <argument_list pos:line="31" pos:column="21">(<argument><expr><name pos:line="31" pos:column="22">pingobj<pos:position pos:line="31" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="31">PING_OPT_DEVICE<pos:position pos:line="31" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="48">(<pos:position pos:line="31" pos:column="49"/></operator><name pos:line="31" pos:column="49">void<pos:position pos:line="31" pos:column="53"/></name> <operator pos:line="31" pos:column="54">*<pos:position pos:line="31" pos:column="55"/></operator><operator pos:line="31" pos:column="55">)<pos:position pos:line="31" pos:column="56"/></operator> <name pos:line="31" pos:column="57">ping_device<pos:position pos:line="31" pos:column="68"/></name></expr></argument>)<pos:position pos:line="31" pos:column="69"/></argument_list></call> <operator pos:line="31" pos:column="70">!=<pos:position pos:line="31" pos:column="72"/></operator> <literal type="number" pos:line="31" pos:column="73">0<pos:position pos:line="31" pos:column="74"/></literal></expr>)<pos:position pos:line="31" pos:column="75"/></condition><then pos:line="31" pos:column="75">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="7">ERROR<pos:position pos:line="32" pos:column="12"/></name> <argument_list pos:line="32" pos:column="13">(<argument><expr><literal type="string" pos:line="32" pos:column="14">"ping plugin: Failed to set device: %s"<pos:position pos:line="32" pos:column="53"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="33" pos:column="11">ping_get_error<pos:position pos:line="33" pos:column="25"/></name> <argument_list pos:line="33" pos:column="26">(<argument><expr><name pos:line="33" pos:column="27">pingobj<pos:position pos:line="33" pos:column="34"/></name></expr></argument>)<pos:position pos:line="33" pos:column="35"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="37"/></expr_stmt></block></then></if></block></then></if>
<cpp:endif pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">endif<pos:position pos:line="34" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><call><name pos:line="36" pos:column="3">ping_setopt<pos:position pos:line="36" pos:column="14"/></name> <argument_list pos:line="36" pos:column="15">(<argument><expr><name pos:line="36" pos:column="16">pingobj<pos:position pos:line="36" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="25">PING_OPT_TIMEOUT<pos:position pos:line="36" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="43">(<pos:position pos:line="36" pos:column="44"/></operator><name pos:line="36" pos:column="44">void<pos:position pos:line="36" pos:column="48"/></name> <operator pos:line="36" pos:column="49">*<pos:position pos:line="36" pos:column="50"/></operator><operator pos:line="36" pos:column="50">)<pos:position pos:line="36" pos:column="51"/></operator> <operator pos:line="36" pos:column="52">&amp;<pos:position pos:line="36" pos:column="57"/></operator><name pos:line="36" pos:column="53">ping_timeout<pos:position pos:line="36" pos:column="65"/></name></expr></argument>)<pos:position pos:line="36" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="67"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="37" pos:column="3">ping_setopt<pos:position pos:line="37" pos:column="14"/></name> <argument_list pos:line="37" pos:column="15">(<argument><expr><name pos:line="37" pos:column="16">pingobj<pos:position pos:line="37" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="25">PING_OPT_TTL<pos:position pos:line="37" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="39">(<pos:position pos:line="37" pos:column="40"/></operator><name pos:line="37" pos:column="40">void<pos:position pos:line="37" pos:column="44"/></name> <operator pos:line="37" pos:column="45">*<pos:position pos:line="37" pos:column="46"/></operator><operator pos:line="37" pos:column="46">)<pos:position pos:line="37" pos:column="47"/></operator> <operator pos:line="37" pos:column="48">&amp;<pos:position pos:line="37" pos:column="53"/></operator><name pos:line="37" pos:column="49">ping_ttl<pos:position pos:line="37" pos:column="57"/></name></expr></argument>)<pos:position pos:line="37" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="59"/></expr_stmt>

  <comment type="block" pos:line="39" pos:column="3">/* Add all the hosts to the ping object. */</comment>
  <expr_stmt><expr><name pos:line="40" pos:column="3">count<pos:position pos:line="40" pos:column="8"/></name> <operator pos:line="40" pos:column="9">=<pos:position pos:line="40" pos:column="10"/></operator> <literal type="number" pos:line="40" pos:column="11">0<pos:position pos:line="40" pos:column="12"/></literal></expr>;<pos:position pos:line="40" pos:column="13"/></expr_stmt>
  <for pos:line="41" pos:column="3">for <control pos:line="41" pos:column="7">(<init><expr><name pos:line="41" pos:column="8">hl<pos:position pos:line="41" pos:column="10"/></name> <operator pos:line="41" pos:column="11">=<pos:position pos:line="41" pos:column="12"/></operator> <name pos:line="41" pos:column="13">hostlist_head<pos:position pos:line="41" pos:column="26"/></name></expr>;<pos:position pos:line="41" pos:column="27"/></init> <condition><expr><name pos:line="41" pos:column="28">hl<pos:position pos:line="41" pos:column="30"/></name> <operator pos:line="41" pos:column="31">!=<pos:position pos:line="41" pos:column="33"/></operator> <name pos:line="41" pos:column="34">NULL<pos:position pos:line="41" pos:column="38"/></name></expr>;<pos:position pos:line="41" pos:column="39"/></condition> <incr><expr><name pos:line="41" pos:column="40">hl<pos:position pos:line="41" pos:column="42"/></name> <operator pos:line="41" pos:column="43">=<pos:position pos:line="41" pos:column="44"/></operator> <name><name pos:line="41" pos:column="45">hl<pos:position pos:line="41" pos:column="47"/></name><operator pos:line="41" pos:column="47">-&gt;<pos:position pos:line="41" pos:column="52"/></operator><name pos:line="41" pos:column="49">next<pos:position pos:line="41" pos:column="53"/></name></name></expr></incr>)<pos:position pos:line="41" pos:column="54"/></control>
  <block pos:line="42" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="43" pos:column="5">int<pos:position pos:line="43" pos:column="8"/></name></type> <name pos:line="43" pos:column="9">tmp_status<pos:position pos:line="43" pos:column="19"/></name></decl>;<pos:position pos:line="43" pos:column="20"/></decl_stmt>
    <expr_stmt><expr><name pos:line="44" pos:column="5">tmp_status<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">=<pos:position pos:line="44" pos:column="17"/></operator> <call><name pos:line="44" pos:column="18">ping_host_add<pos:position pos:line="44" pos:column="31"/></name> <argument_list pos:line="44" pos:column="32">(<argument><expr><name pos:line="44" pos:column="33">pingobj<pos:position pos:line="44" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="42">hl<pos:position pos:line="44" pos:column="44"/></name><operator pos:line="44" pos:column="44">-&gt;<pos:position pos:line="44" pos:column="49"/></operator><name pos:line="44" pos:column="46">host<pos:position pos:line="44" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="52"/></expr_stmt>
    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><name pos:line="45" pos:column="9">tmp_status<pos:position pos:line="45" pos:column="19"/></name> <operator pos:line="45" pos:column="20">!=<pos:position pos:line="45" pos:column="22"/></operator> <literal type="number" pos:line="45" pos:column="23">0<pos:position pos:line="45" pos:column="24"/></literal></expr>)<pos:position pos:line="45" pos:column="25"/></condition><then pos:line="45" pos:column="25">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="7">WARNING<pos:position pos:line="46" pos:column="14"/></name> <argument_list pos:line="46" pos:column="15">(<argument><expr><literal type="string" pos:line="46" pos:column="16">"ping plugin: ping_host_add (%s) failed: %s"<pos:position pos:line="46" pos:column="60"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="47" pos:column="11">hl<pos:position pos:line="47" pos:column="13"/></name><operator pos:line="47" pos:column="13">-&gt;<pos:position pos:line="47" pos:column="18"/></operator><name pos:line="47" pos:column="15">host<pos:position pos:line="47" pos:column="19"/></name></name></expr></argument>, <argument><expr><call><name pos:line="47" pos:column="21">ping_get_error<pos:position pos:line="47" pos:column="35"/></name> <argument_list pos:line="47" pos:column="36">(<argument><expr><name pos:line="47" pos:column="37">pingobj<pos:position pos:line="47" pos:column="44"/></name></expr></argument>)<pos:position pos:line="47" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="47"/></expr_stmt></block></then>
    <else pos:line="48" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="49" pos:column="7">count<pos:position pos:line="49" pos:column="12"/></name><operator pos:line="49" pos:column="12">++<pos:position pos:line="49" pos:column="14"/></operator></expr>;<pos:position pos:line="49" pos:column="15"/></expr_stmt></block></else></if>
  }<pos:position pos:line="50" pos:column="4"/></block></for>

  <if pos:line="52" pos:column="3">if <condition pos:line="52" pos:column="6">(<expr><name pos:line="52" pos:column="7">count<pos:position pos:line="52" pos:column="12"/></name> <operator pos:line="52" pos:column="13">==<pos:position pos:line="52" pos:column="15"/></operator> <literal type="number" pos:line="52" pos:column="16">0<pos:position pos:line="52" pos:column="17"/></literal></expr>)<pos:position pos:line="52" pos:column="18"/></condition><then pos:line="52" pos:column="18">
  <block pos:line="53" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="54" pos:column="5">ERROR<pos:position pos:line="54" pos:column="10"/></name> <argument_list pos:line="54" pos:column="11">(<argument><expr><literal type="string" pos:line="54" pos:column="12">"ping plugin: No host could be added to ping object. Giving up."<pos:position pos:line="54" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="78"/></expr_stmt>
    <expr_stmt><expr><name pos:line="55" pos:column="5">ping_thread_error<pos:position pos:line="55" pos:column="22"/></name> <operator pos:line="55" pos:column="23">=<pos:position pos:line="55" pos:column="24"/></operator> <literal type="number" pos:line="55" pos:column="25">1<pos:position pos:line="55" pos:column="26"/></literal></expr>;<pos:position pos:line="55" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">pthread_mutex_unlock<pos:position pos:line="56" pos:column="25"/></name> <argument_list pos:line="56" pos:column="26">(<argument><expr><operator pos:line="56" pos:column="27">&amp;<pos:position pos:line="56" pos:column="32"/></operator><name pos:line="56" pos:column="28">ping_lock<pos:position pos:line="56" pos:column="37"/></name></expr></argument>)<pos:position pos:line="56" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="39"/></expr_stmt>
    <return pos:line="57" pos:column="5">return <expr><operator pos:line="57" pos:column="12">(<pos:position pos:line="57" pos:column="13"/></operator><operator pos:line="57" pos:column="13">(<pos:position pos:line="57" pos:column="14"/></operator><name pos:line="57" pos:column="14">void<pos:position pos:line="57" pos:column="18"/></name> <operator pos:line="57" pos:column="19">*<pos:position pos:line="57" pos:column="20"/></operator><operator pos:line="57" pos:column="20">)<pos:position pos:line="57" pos:column="21"/></operator> <operator pos:line="57" pos:column="22">-<pos:position pos:line="57" pos:column="23"/></operator><literal type="number" pos:line="57" pos:column="23">1<pos:position pos:line="57" pos:column="24"/></literal><operator pos:line="57" pos:column="24">)<pos:position pos:line="57" pos:column="25"/></operator></expr>;<pos:position pos:line="57" pos:column="26"/></return>
  }<pos:position pos:line="58" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="60" pos:column="3">/* Set up `ts_int' */</comment>
  <block pos:line="61" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="62" pos:column="5">double<pos:position pos:line="62" pos:column="11"/></name></type> <name pos:line="62" pos:column="12">temp_sec<pos:position pos:line="62" pos:column="20"/></name></decl>;<pos:position pos:line="62" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="63" pos:column="5">double<pos:position pos:line="63" pos:column="11"/></name></type> <name pos:line="63" pos:column="12">temp_nsec<pos:position pos:line="63" pos:column="21"/></name></decl>;<pos:position pos:line="63" pos:column="22"/></decl_stmt>

    <expr_stmt><expr><name pos:line="65" pos:column="5">temp_nsec<pos:position pos:line="65" pos:column="14"/></name> <operator pos:line="65" pos:column="15">=<pos:position pos:line="65" pos:column="16"/></operator> <call><name pos:line="65" pos:column="17">modf<pos:position pos:line="65" pos:column="21"/></name> <argument_list pos:line="65" pos:column="22">(<argument><expr><name pos:line="65" pos:column="23">ping_interval<pos:position pos:line="65" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="65" pos:column="38">&amp;<pos:position pos:line="65" pos:column="43"/></operator><name pos:line="65" pos:column="39">temp_sec<pos:position pos:line="65" pos:column="47"/></name></expr></argument>)<pos:position pos:line="65" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="66" pos:column="5">ts_int<pos:position pos:line="66" pos:column="11"/></name><operator pos:line="66" pos:column="11">.<pos:position pos:line="66" pos:column="12"/></operator><name pos:line="66" pos:column="12">tv_sec<pos:position pos:line="66" pos:column="18"/></name></name>  <operator pos:line="66" pos:column="20">=<pos:position pos:line="66" pos:column="21"/></operator> <operator pos:line="66" pos:column="22">(<pos:position pos:line="66" pos:column="23"/></operator><name pos:line="66" pos:column="23">time_t<pos:position pos:line="66" pos:column="29"/></name><operator pos:line="66" pos:column="29">)<pos:position pos:line="66" pos:column="30"/></operator> <name pos:line="66" pos:column="31">temp_sec<pos:position pos:line="66" pos:column="39"/></name></expr>;<pos:position pos:line="66" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="67" pos:column="5">ts_int<pos:position pos:line="67" pos:column="11"/></name><operator pos:line="67" pos:column="11">.<pos:position pos:line="67" pos:column="12"/></operator><name pos:line="67" pos:column="12">tv_nsec<pos:position pos:line="67" pos:column="19"/></name></name> <operator pos:line="67" pos:column="20">=<pos:position pos:line="67" pos:column="21"/></operator> <call pos:line="67" pos:column="22">(<name pos:line="67" pos:column="23">long<pos:position pos:line="67" pos:column="27"/></name>) <argument_list pos:line="67" pos:column="29">(<argument><expr><name pos:line="67" pos:column="30">temp_nsec<pos:position pos:line="67" pos:column="39"/></name> <operator pos:line="67" pos:column="40">*<pos:position pos:line="67" pos:column="41"/></operator> <literal type="number" pos:line="67" pos:column="42">1000000000L<pos:position pos:line="67" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="55"/></expr_stmt>
  }<pos:position pos:line="68" pos:column="4"/></block>

  <while pos:line="70" pos:column="3">while <condition pos:line="70" pos:column="9">(<expr><name pos:line="70" pos:column="10">ping_thread_loop<pos:position pos:line="70" pos:column="26"/></name> <operator pos:line="70" pos:column="27">&gt;<pos:position pos:line="70" pos:column="31"/></operator> <literal type="number" pos:line="70" pos:column="29">0<pos:position pos:line="70" pos:column="30"/></literal></expr>)<pos:position pos:line="70" pos:column="31"/></condition>
  <block pos:line="71" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="72" pos:column="5">pingobj_iter_t<pos:position pos:line="72" pos:column="19"/></name> <modifier pos:line="72" pos:column="20">*<pos:position pos:line="72" pos:column="21"/></modifier></type><name pos:line="72" pos:column="21">iter<pos:position pos:line="72" pos:column="25"/></name></decl>;<pos:position pos:line="72" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="73" pos:column="5">int<pos:position pos:line="73" pos:column="8"/></name></type> <name pos:line="73" pos:column="9">status<pos:position pos:line="73" pos:column="15"/></name></decl>;<pos:position pos:line="73" pos:column="16"/></decl_stmt>

    <if pos:line="75" pos:column="5">if <condition pos:line="75" pos:column="8">(<expr><call><name pos:line="75" pos:column="9">gettimeofday<pos:position pos:line="75" pos:column="21"/></name> <argument_list pos:line="75" pos:column="22">(<argument><expr><operator pos:line="75" pos:column="23">&amp;<pos:position pos:line="75" pos:column="28"/></operator><name pos:line="75" pos:column="24">tv_begin<pos:position pos:line="75" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="34">NULL<pos:position pos:line="75" pos:column="38"/></name></expr></argument>)<pos:position pos:line="75" pos:column="39"/></argument_list></call> <operator pos:line="75" pos:column="40">&lt;<pos:position pos:line="75" pos:column="44"/></operator> <literal type="number" pos:line="75" pos:column="42">0<pos:position pos:line="75" pos:column="43"/></literal></expr>)<pos:position pos:line="75" pos:column="44"/></condition><then pos:line="75" pos:column="44">
    <block pos:line="76" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="77" pos:column="7">char<pos:position pos:line="77" pos:column="11"/></name></type> <name><name pos:line="77" pos:column="12">errbuf<pos:position pos:line="77" pos:column="18"/></name><index pos:line="77" pos:column="18">[<expr><literal type="number" pos:line="77" pos:column="19">1024<pos:position pos:line="77" pos:column="23"/></literal></expr>]<pos:position pos:line="77" pos:column="24"/></index></name></decl>;<pos:position pos:line="77" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="78" pos:column="7">ERROR<pos:position pos:line="78" pos:column="12"/></name> <argument_list pos:line="78" pos:column="13">(<argument><expr><literal type="string" pos:line="78" pos:column="14">"ping plugin: gettimeofday failed: %s"<pos:position pos:line="78" pos:column="52"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="79" pos:column="11">sstrerror<pos:position pos:line="79" pos:column="20"/></name> <argument_list pos:line="79" pos:column="21">(<argument><expr><name pos:line="79" pos:column="22">errno<pos:position pos:line="79" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="29">errbuf<pos:position pos:line="79" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="79" pos:column="37">sizeof <argument_list pos:line="79" pos:column="44">(<argument><expr><name pos:line="79" pos:column="45">errbuf<pos:position pos:line="79" pos:column="51"/></name></expr></argument>)<pos:position pos:line="79" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="79" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="79" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="55"/></expr_stmt>
      <expr_stmt><expr><name pos:line="80" pos:column="7">ping_thread_error<pos:position pos:line="80" pos:column="24"/></name> <operator pos:line="80" pos:column="25">=<pos:position pos:line="80" pos:column="26"/></operator> <literal type="number" pos:line="80" pos:column="27">1<pos:position pos:line="80" pos:column="28"/></literal></expr>;<pos:position pos:line="80" pos:column="29"/></expr_stmt>
      <break pos:line="81" pos:column="7">break;<pos:position pos:line="81" pos:column="13"/></break>
    }<pos:position pos:line="82" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="84" pos:column="5">pthread_mutex_unlock<pos:position pos:line="84" pos:column="25"/></name> <argument_list pos:line="84" pos:column="26">(<argument><expr><operator pos:line="84" pos:column="27">&amp;<pos:position pos:line="84" pos:column="32"/></operator><name pos:line="84" pos:column="28">ping_lock<pos:position pos:line="84" pos:column="37"/></name></expr></argument>)<pos:position pos:line="84" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="39"/></expr_stmt>

    <expr_stmt><expr><name pos:line="86" pos:column="5">status<pos:position pos:line="86" pos:column="11"/></name> <operator pos:line="86" pos:column="12">=<pos:position pos:line="86" pos:column="13"/></operator> <call><name pos:line="86" pos:column="14">ping_send<pos:position pos:line="86" pos:column="23"/></name> <argument_list pos:line="86" pos:column="24">(<argument><expr><name pos:line="86" pos:column="25">pingobj<pos:position pos:line="86" pos:column="32"/></name></expr></argument>)<pos:position pos:line="86" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="34"/></expr_stmt>
    <if pos:line="87" pos:column="5">if <condition pos:line="87" pos:column="8">(<expr><name pos:line="87" pos:column="9">status<pos:position pos:line="87" pos:column="15"/></name> <operator pos:line="87" pos:column="16">&lt;<pos:position pos:line="87" pos:column="20"/></operator> <literal type="number" pos:line="87" pos:column="18">0<pos:position pos:line="87" pos:column="19"/></literal></expr>)<pos:position pos:line="87" pos:column="20"/></condition><then pos:line="87" pos:column="20">
    <block pos:line="88" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="89" pos:column="7">ERROR<pos:position pos:line="89" pos:column="12"/></name> <argument_list pos:line="89" pos:column="13">(<argument><expr><literal type="string" pos:line="89" pos:column="14">"ping plugin: ping_send failed: %s"<pos:position pos:line="89" pos:column="49"/></literal></expr></argument>, <argument><expr><call><name pos:line="89" pos:column="51">ping_get_error<pos:position pos:line="89" pos:column="65"/></name> <argument_list pos:line="89" pos:column="66">(<argument><expr><name pos:line="89" pos:column="67">pingobj<pos:position pos:line="89" pos:column="74"/></name></expr></argument>)<pos:position pos:line="89" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="89" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="77"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="90" pos:column="7">pthread_mutex_lock<pos:position pos:line="90" pos:column="25"/></name> <argument_list pos:line="90" pos:column="26">(<argument><expr><operator pos:line="90" pos:column="27">&amp;<pos:position pos:line="90" pos:column="32"/></operator><name pos:line="90" pos:column="28">ping_lock<pos:position pos:line="90" pos:column="37"/></name></expr></argument>)<pos:position pos:line="90" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><name pos:line="91" pos:column="7">ping_thread_error<pos:position pos:line="91" pos:column="24"/></name> <operator pos:line="91" pos:column="25">=<pos:position pos:line="91" pos:column="26"/></operator> <literal type="number" pos:line="91" pos:column="27">1<pos:position pos:line="91" pos:column="28"/></literal></expr>;<pos:position pos:line="91" pos:column="29"/></expr_stmt>
      <break pos:line="92" pos:column="7">break;<pos:position pos:line="92" pos:column="13"/></break>
    }<pos:position pos:line="93" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="95" pos:column="5">pthread_mutex_lock<pos:position pos:line="95" pos:column="23"/></name> <argument_list pos:line="95" pos:column="24">(<argument><expr><operator pos:line="95" pos:column="25">&amp;<pos:position pos:line="95" pos:column="30"/></operator><name pos:line="95" pos:column="26">ping_lock<pos:position pos:line="95" pos:column="35"/></name></expr></argument>)<pos:position pos:line="95" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="37"/></expr_stmt>

    <if pos:line="97" pos:column="5">if <condition pos:line="97" pos:column="8">(<expr><name pos:line="97" pos:column="9">ping_thread_loop<pos:position pos:line="97" pos:column="25"/></name> <operator pos:line="97" pos:column="26">&lt;=<pos:position pos:line="97" pos:column="31"/></operator> <literal type="number" pos:line="97" pos:column="29">0<pos:position pos:line="97" pos:column="30"/></literal></expr>)<pos:position pos:line="97" pos:column="31"/></condition><then pos:line="97" pos:column="31">
      <block type="pseudo"><break pos:line="98" pos:column="7">break;<pos:position pos:line="98" pos:column="13"/></break></block></then></if>

    <for pos:line="100" pos:column="5">for <control pos:line="100" pos:column="9">(<init><expr><name pos:line="100" pos:column="10">iter<pos:position pos:line="100" pos:column="14"/></name> <operator pos:line="100" pos:column="15">=<pos:position pos:line="100" pos:column="16"/></operator> <call><name pos:line="100" pos:column="17">ping_iterator_get<pos:position pos:line="100" pos:column="34"/></name> <argument_list pos:line="100" pos:column="35">(<argument><expr><name pos:line="100" pos:column="36">pingobj<pos:position pos:line="100" pos:column="43"/></name></expr></argument>)<pos:position pos:line="100" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="45"/></init>
        <condition><expr><name pos:line="101" pos:column="9">iter<pos:position pos:line="101" pos:column="13"/></name> <operator pos:line="101" pos:column="14">!=<pos:position pos:line="101" pos:column="16"/></operator> <name pos:line="101" pos:column="17">NULL<pos:position pos:line="101" pos:column="21"/></name></expr>;<pos:position pos:line="101" pos:column="22"/></condition>
        <incr><expr><name pos:line="102" pos:column="9">iter<pos:position pos:line="102" pos:column="13"/></name> <operator pos:line="102" pos:column="14">=<pos:position pos:line="102" pos:column="15"/></operator> <call><name pos:line="102" pos:column="16">ping_iterator_next<pos:position pos:line="102" pos:column="34"/></name> <argument_list pos:line="102" pos:column="35">(<argument><expr><name pos:line="102" pos:column="36">iter<pos:position pos:line="102" pos:column="40"/></name></expr></argument>)<pos:position pos:line="102" pos:column="41"/></argument_list></call></expr></incr>)<pos:position pos:line="102" pos:column="42"/></control>
    <block pos:line="103" pos:column="5">{ <comment type="block" pos:line="103" pos:column="7">/* {{{ */</comment>
      <decl_stmt><decl><type><name pos:line="104" pos:column="7">char<pos:position pos:line="104" pos:column="11"/></name></type> <name><name pos:line="104" pos:column="12">userhost<pos:position pos:line="104" pos:column="20"/></name><index pos:line="104" pos:column="20">[<expr><name pos:line="104" pos:column="21">NI_MAXHOST<pos:position pos:line="104" pos:column="31"/></name></expr>]<pos:position pos:line="104" pos:column="32"/></index></name></decl>;<pos:position pos:line="104" pos:column="33"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="105" pos:column="7">double<pos:position pos:line="105" pos:column="13"/></name></type> <name pos:line="105" pos:column="14">latency<pos:position pos:line="105" pos:column="21"/></name></decl>;<pos:position pos:line="105" pos:column="22"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="106" pos:column="7">size_t<pos:position pos:line="106" pos:column="13"/></name></type> <name pos:line="106" pos:column="14">param_size<pos:position pos:line="106" pos:column="24"/></name></decl>;<pos:position pos:line="106" pos:column="25"/></decl_stmt>

      <expr_stmt><expr><name pos:line="108" pos:column="7">param_size<pos:position pos:line="108" pos:column="17"/></name> <operator pos:line="108" pos:column="18">=<pos:position pos:line="108" pos:column="19"/></operator> <sizeof pos:line="108" pos:column="20">sizeof <argument_list pos:line="108" pos:column="27">(<argument><expr><name pos:line="108" pos:column="28">userhost<pos:position pos:line="108" pos:column="36"/></name></expr></argument>)<pos:position pos:line="108" pos:column="37"/></argument_list></sizeof></expr>;<pos:position pos:line="108" pos:column="38"/></expr_stmt>
      <expr_stmt><expr><name pos:line="109" pos:column="7">status<pos:position pos:line="109" pos:column="13"/></name> <operator pos:line="109" pos:column="14">=<pos:position pos:line="109" pos:column="15"/></operator> <call><name pos:line="109" pos:column="16">ping_iterator_get_info<pos:position pos:line="109" pos:column="38"/></name> <argument_list pos:line="109" pos:column="39">(<argument><expr><name pos:line="109" pos:column="40">iter<pos:position pos:line="109" pos:column="44"/></name></expr></argument>,
<cpp:ifdef pos:line="110" pos:column="1">#<cpp:directive pos:line="110" pos:column="2">ifdef<pos:position pos:line="110" pos:column="7"/></cpp:directive> <name pos:line="110" pos:column="8">PING_INFO_USERNAME<pos:position pos:line="110" pos:column="26"/></name></cpp:ifdef>
          <argument><expr><name pos:line="111" pos:column="11">PING_INFO_USERNAME<pos:position pos:line="111" pos:column="29"/></name></expr></argument>,
<cpp:else pos:line="112" pos:column="1">#<cpp:directive pos:line="112" pos:column="2">else<pos:position pos:line="112" pos:column="6"/></cpp:directive></cpp:else>
          <argument><expr><name pos:line="113" pos:column="11">PING_INFO_HOSTNAME<pos:position pos:line="113" pos:column="29"/></name></expr></argument>,
<cpp:endif pos:line="114" pos:column="1">#<cpp:directive pos:line="114" pos:column="2">endif<pos:position pos:line="114" pos:column="7"/></cpp:directive></cpp:endif>
          <argument><expr><name pos:line="115" pos:column="11">userhost<pos:position pos:line="115" pos:column="19"/></name></expr></argument>, <argument><expr><operator pos:line="115" pos:column="21">&amp;<pos:position pos:line="115" pos:column="26"/></operator><name pos:line="115" pos:column="22">param_size<pos:position pos:line="115" pos:column="32"/></name></expr></argument>)<pos:position pos:line="115" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="34"/></expr_stmt>
      <if pos:line="116" pos:column="7">if <condition pos:line="116" pos:column="10">(<expr><name pos:line="116" pos:column="11">status<pos:position pos:line="116" pos:column="17"/></name> <operator pos:line="116" pos:column="18">!=<pos:position pos:line="116" pos:column="20"/></operator> <literal type="number" pos:line="116" pos:column="21">0<pos:position pos:line="116" pos:column="22"/></literal></expr>)<pos:position pos:line="116" pos:column="23"/></condition><then pos:line="116" pos:column="23">
      <block pos:line="117" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="118" pos:column="9">WARNING<pos:position pos:line="118" pos:column="16"/></name> <argument_list pos:line="118" pos:column="17">(<argument><expr><literal type="string" pos:line="118" pos:column="18">"ping plugin: ping_iterator_get_info failed: %s"<pos:position pos:line="118" pos:column="66"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="119" pos:column="13">ping_get_error<pos:position pos:line="119" pos:column="27"/></name> <argument_list pos:line="119" pos:column="28">(<argument><expr><name pos:line="119" pos:column="29">pingobj<pos:position pos:line="119" pos:column="36"/></name></expr></argument>)<pos:position pos:line="119" pos:column="37"/></argument_list></call></expr></argument>)<pos:position pos:line="119" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="39"/></expr_stmt>
        <continue pos:line="120" pos:column="9">continue;<pos:position pos:line="120" pos:column="18"/></continue>
      }<pos:position pos:line="121" pos:column="8"/></block></then></if>

      <for pos:line="123" pos:column="7">for <control pos:line="123" pos:column="11">(<init><expr><name pos:line="123" pos:column="12">hl<pos:position pos:line="123" pos:column="14"/></name> <operator pos:line="123" pos:column="15">=<pos:position pos:line="123" pos:column="16"/></operator> <name pos:line="123" pos:column="17">hostlist_head<pos:position pos:line="123" pos:column="30"/></name></expr>;<pos:position pos:line="123" pos:column="31"/></init> <condition><expr><name pos:line="123" pos:column="32">hl<pos:position pos:line="123" pos:column="34"/></name> <operator pos:line="123" pos:column="35">!=<pos:position pos:line="123" pos:column="37"/></operator> <name pos:line="123" pos:column="38">NULL<pos:position pos:line="123" pos:column="42"/></name></expr>;<pos:position pos:line="123" pos:column="43"/></condition> <incr><expr><name pos:line="123" pos:column="44">hl<pos:position pos:line="123" pos:column="46"/></name> <operator pos:line="123" pos:column="47">=<pos:position pos:line="123" pos:column="48"/></operator> <name><name pos:line="123" pos:column="49">hl<pos:position pos:line="123" pos:column="51"/></name><operator pos:line="123" pos:column="51">-&gt;<pos:position pos:line="123" pos:column="56"/></operator><name pos:line="123" pos:column="53">next<pos:position pos:line="123" pos:column="57"/></name></name></expr></incr>)<pos:position pos:line="123" pos:column="58"/></control>
        <block type="pseudo"><if pos:line="124" pos:column="9">if <condition pos:line="124" pos:column="12">(<expr><call><name pos:line="124" pos:column="13">strcmp<pos:position pos:line="124" pos:column="19"/></name> <argument_list pos:line="124" pos:column="20">(<argument><expr><name pos:line="124" pos:column="21">userhost<pos:position pos:line="124" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="124" pos:column="31">hl<pos:position pos:line="124" pos:column="33"/></name><operator pos:line="124" pos:column="33">-&gt;<pos:position pos:line="124" pos:column="38"/></operator><name pos:line="124" pos:column="35">host<pos:position pos:line="124" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="124" pos:column="40"/></argument_list></call> <operator pos:line="124" pos:column="41">==<pos:position pos:line="124" pos:column="43"/></operator> <literal type="number" pos:line="124" pos:column="44">0<pos:position pos:line="124" pos:column="45"/></literal></expr>)<pos:position pos:line="124" pos:column="46"/></condition><then pos:line="124" pos:column="46">
          <block type="pseudo"><break pos:line="125" pos:column="11">break;<pos:position pos:line="125" pos:column="17"/></break></block></then></if></block></for>

      <if pos:line="127" pos:column="7">if <condition pos:line="127" pos:column="10">(<expr><name pos:line="127" pos:column="11">hl<pos:position pos:line="127" pos:column="13"/></name> <operator pos:line="127" pos:column="14">==<pos:position pos:line="127" pos:column="16"/></operator> <name pos:line="127" pos:column="17">NULL<pos:position pos:line="127" pos:column="21"/></name></expr>)<pos:position pos:line="127" pos:column="22"/></condition><then pos:line="127" pos:column="22">
      <block pos:line="128" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="129" pos:column="9">WARNING<pos:position pos:line="129" pos:column="16"/></name> <argument_list pos:line="129" pos:column="17">(<argument><expr><literal type="string" pos:line="129" pos:column="18">"ping plugin: Cannot find host %s."<pos:position pos:line="129" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="129" pos:column="55">userhost<pos:position pos:line="129" pos:column="63"/></name></expr></argument>)<pos:position pos:line="129" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="65"/></expr_stmt>
        <continue pos:line="130" pos:column="9">continue;<pos:position pos:line="130" pos:column="18"/></continue>
      }<pos:position pos:line="131" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name pos:line="133" pos:column="7">param_size<pos:position pos:line="133" pos:column="17"/></name> <operator pos:line="133" pos:column="18">=<pos:position pos:line="133" pos:column="19"/></operator> <sizeof pos:line="133" pos:column="20">sizeof <argument_list pos:line="133" pos:column="27">(<argument><expr><name pos:line="133" pos:column="28">latency<pos:position pos:line="133" pos:column="35"/></name></expr></argument>)<pos:position pos:line="133" pos:column="36"/></argument_list></sizeof></expr>;<pos:position pos:line="133" pos:column="37"/></expr_stmt>
      <expr_stmt><expr><name pos:line="134" pos:column="7">status<pos:position pos:line="134" pos:column="13"/></name> <operator pos:line="134" pos:column="14">=<pos:position pos:line="134" pos:column="15"/></operator> <call><name pos:line="134" pos:column="16">ping_iterator_get_info<pos:position pos:line="134" pos:column="38"/></name> <argument_list pos:line="134" pos:column="39">(<argument><expr><name pos:line="134" pos:column="40">iter<pos:position pos:line="134" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="46">PING_INFO_LATENCY<pos:position pos:line="134" pos:column="63"/></name></expr></argument>,
          <argument><expr><operator pos:line="135" pos:column="11">(<pos:position pos:line="135" pos:column="12"/></operator><name pos:line="135" pos:column="12">void<pos:position pos:line="135" pos:column="16"/></name> <operator pos:line="135" pos:column="17">*<pos:position pos:line="135" pos:column="18"/></operator><operator pos:line="135" pos:column="18">)<pos:position pos:line="135" pos:column="19"/></operator> <operator pos:line="135" pos:column="20">&amp;<pos:position pos:line="135" pos:column="25"/></operator><name pos:line="135" pos:column="21">latency<pos:position pos:line="135" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="135" pos:column="30">&amp;<pos:position pos:line="135" pos:column="35"/></operator><name pos:line="135" pos:column="31">param_size<pos:position pos:line="135" pos:column="41"/></name></expr></argument>)<pos:position pos:line="135" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="43"/></expr_stmt>
      <if pos:line="136" pos:column="7">if <condition pos:line="136" pos:column="10">(<expr><name pos:line="136" pos:column="11">status<pos:position pos:line="136" pos:column="17"/></name> <operator pos:line="136" pos:column="18">!=<pos:position pos:line="136" pos:column="20"/></operator> <literal type="number" pos:line="136" pos:column="21">0<pos:position pos:line="136" pos:column="22"/></literal></expr>)<pos:position pos:line="136" pos:column="23"/></condition><then pos:line="136" pos:column="23">
      <block pos:line="137" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="138" pos:column="9">WARNING<pos:position pos:line="138" pos:column="16"/></name> <argument_list pos:line="138" pos:column="17">(<argument><expr><literal type="string" pos:line="138" pos:column="18">"ping plugin: ping_iterator_get_info failed: %s"<pos:position pos:line="138" pos:column="66"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="139" pos:column="13">ping_get_error<pos:position pos:line="139" pos:column="27"/></name> <argument_list pos:line="139" pos:column="28">(<argument><expr><name pos:line="139" pos:column="29">pingobj<pos:position pos:line="139" pos:column="36"/></name></expr></argument>)<pos:position pos:line="139" pos:column="37"/></argument_list></call></expr></argument>)<pos:position pos:line="139" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="39"/></expr_stmt>
        <continue pos:line="140" pos:column="9">continue;<pos:position pos:line="140" pos:column="18"/></continue>
      }<pos:position pos:line="141" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name><name pos:line="143" pos:column="7">hl<pos:position pos:line="143" pos:column="9"/></name><operator pos:line="143" pos:column="9">-&gt;<pos:position pos:line="143" pos:column="14"/></operator><name pos:line="143" pos:column="11">pkg_sent<pos:position pos:line="143" pos:column="19"/></name></name><operator pos:line="143" pos:column="19">++<pos:position pos:line="143" pos:column="21"/></operator></expr>;<pos:position pos:line="143" pos:column="22"/></expr_stmt>
      <if pos:line="144" pos:column="7">if <condition pos:line="144" pos:column="10">(<expr><name pos:line="144" pos:column="11">latency<pos:position pos:line="144" pos:column="18"/></name> <operator pos:line="144" pos:column="19">&gt;=<pos:position pos:line="144" pos:column="24"/></operator> <literal type="number" pos:line="144" pos:column="22">0.0<pos:position pos:line="144" pos:column="25"/></literal></expr>)<pos:position pos:line="144" pos:column="26"/></condition><then pos:line="144" pos:column="26">
      <block pos:line="145" pos:column="7">{
        <expr_stmt><expr><name><name pos:line="146" pos:column="9">hl<pos:position pos:line="146" pos:column="11"/></name><operator pos:line="146" pos:column="11">-&gt;<pos:position pos:line="146" pos:column="16"/></operator><name pos:line="146" pos:column="13">pkg_recv<pos:position pos:line="146" pos:column="21"/></name></name><operator pos:line="146" pos:column="21">++<pos:position pos:line="146" pos:column="23"/></operator></expr>;<pos:position pos:line="146" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="147" pos:column="9">hl<pos:position pos:line="147" pos:column="11"/></name><operator pos:line="147" pos:column="11">-&gt;<pos:position pos:line="147" pos:column="16"/></operator><name pos:line="147" pos:column="13">latency_total<pos:position pos:line="147" pos:column="26"/></name></name> <operator pos:line="147" pos:column="27">+=<pos:position pos:line="147" pos:column="29"/></operator> <name pos:line="147" pos:column="30">latency<pos:position pos:line="147" pos:column="37"/></name></expr>;<pos:position pos:line="147" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="148" pos:column="9">hl<pos:position pos:line="148" pos:column="11"/></name><operator pos:line="148" pos:column="11">-&gt;<pos:position pos:line="148" pos:column="16"/></operator><name pos:line="148" pos:column="13">latency_squared<pos:position pos:line="148" pos:column="28"/></name></name> <operator pos:line="148" pos:column="29">+=<pos:position pos:line="148" pos:column="31"/></operator> <operator pos:line="148" pos:column="32">(<pos:position pos:line="148" pos:column="33"/></operator><name pos:line="148" pos:column="33">latency<pos:position pos:line="148" pos:column="40"/></name> <operator pos:line="148" pos:column="41">*<pos:position pos:line="148" pos:column="42"/></operator> <name pos:line="148" pos:column="43">latency<pos:position pos:line="148" pos:column="50"/></name><operator pos:line="148" pos:column="50">)<pos:position pos:line="148" pos:column="51"/></operator></expr>;<pos:position pos:line="148" pos:column="52"/></expr_stmt>

        <comment type="block" pos:line="150" pos:column="9">/* reset missed packages counter */</comment>
        <expr_stmt><expr><name><name pos:line="151" pos:column="9">hl<pos:position pos:line="151" pos:column="11"/></name><operator pos:line="151" pos:column="11">-&gt;<pos:position pos:line="151" pos:column="16"/></operator><name pos:line="151" pos:column="13">pkg_missed<pos:position pos:line="151" pos:column="23"/></name></name> <operator pos:line="151" pos:column="24">=<pos:position pos:line="151" pos:column="25"/></operator> <literal type="number" pos:line="151" pos:column="26">0<pos:position pos:line="151" pos:column="27"/></literal></expr>;<pos:position pos:line="151" pos:column="28"/></expr_stmt>
      }<pos:position pos:line="152" pos:column="8"/></block></then> <else pos:line="152" pos:column="9">else
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="153" pos:column="9">hl<pos:position pos:line="153" pos:column="11"/></name><operator pos:line="153" pos:column="11">-&gt;<pos:position pos:line="153" pos:column="16"/></operator><name pos:line="153" pos:column="13">pkg_missed<pos:position pos:line="153" pos:column="23"/></name></name><operator pos:line="153" pos:column="23">++<pos:position pos:line="153" pos:column="25"/></operator></expr>;<pos:position pos:line="153" pos:column="26"/></expr_stmt></block></else></if>

      <comment type="block" pos:line="155" pos:column="7">/* if the host did not answer our last N packages, trigger a resolv. */</comment>
      <if pos:line="156" pos:column="7">if <condition pos:line="156" pos:column="10">(<expr><name pos:line="156" pos:column="11">ping_max_missed<pos:position pos:line="156" pos:column="26"/></name> <operator pos:line="156" pos:column="27">&gt;=<pos:position pos:line="156" pos:column="32"/></operator> <literal type="number" pos:line="156" pos:column="30">0<pos:position pos:line="156" pos:column="31"/></literal> <operator pos:line="156" pos:column="32">&amp;&amp;<pos:position pos:line="156" pos:column="42"/></operator> <name><name pos:line="156" pos:column="35">hl<pos:position pos:line="156" pos:column="37"/></name><operator pos:line="156" pos:column="37">-&gt;<pos:position pos:line="156" pos:column="42"/></operator><name pos:line="156" pos:column="39">pkg_missed<pos:position pos:line="156" pos:column="49"/></name></name> <operator pos:line="156" pos:column="50">&gt;=<pos:position pos:line="156" pos:column="55"/></operator> <name pos:line="156" pos:column="53">ping_max_missed<pos:position pos:line="156" pos:column="68"/></name></expr>)<pos:position pos:line="156" pos:column="69"/></condition><then pos:line="156" pos:column="69">
      <block pos:line="157" pos:column="7">{ <comment type="block" pos:line="157" pos:column="9">/* {{{ */</comment>
        <comment type="block" pos:line="158" pos:column="9">/* we reset the missed package counter here, since we only want to
         * trigger a resolv every N packages and not every package _AFTER_ N
         * missed packages */</comment>
        <expr_stmt><expr><name><name pos:line="161" pos:column="9">hl<pos:position pos:line="161" pos:column="11"/></name><operator pos:line="161" pos:column="11">-&gt;<pos:position pos:line="161" pos:column="16"/></operator><name pos:line="161" pos:column="13">pkg_missed<pos:position pos:line="161" pos:column="23"/></name></name> <operator pos:line="161" pos:column="24">=<pos:position pos:line="161" pos:column="25"/></operator> <literal type="number" pos:line="161" pos:column="26">0<pos:position pos:line="161" pos:column="27"/></literal></expr>;<pos:position pos:line="161" pos:column="28"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="163" pos:column="9">WARNING<pos:position pos:line="163" pos:column="16"/></name> <argument_list pos:line="163" pos:column="17">(<argument><expr><literal type="string" pos:line="163" pos:column="18">"ping plugin: host %s has not answered %d PING requests,"<pos:position pos:line="163" pos:column="75"/></literal>
          <literal type="string" pos:line="164" pos:column="11">" triggering resolve"<pos:position pos:line="164" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="164" pos:column="34">hl<pos:position pos:line="164" pos:column="36"/></name><operator pos:line="164" pos:column="36">-&gt;<pos:position pos:line="164" pos:column="41"/></operator><name pos:line="164" pos:column="38">host<pos:position pos:line="164" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="44">ping_max_missed<pos:position pos:line="164" pos:column="59"/></name></expr></argument>)<pos:position pos:line="164" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="61"/></expr_stmt>

        <comment type="block" pos:line="166" pos:column="9">/* we trigger the resolv simply be removeing and adding the host to our
         * ping object */</comment>
        <expr_stmt><expr><name pos:line="168" pos:column="9">status<pos:position pos:line="168" pos:column="15"/></name> <operator pos:line="168" pos:column="16">=<pos:position pos:line="168" pos:column="17"/></operator> <call><name pos:line="168" pos:column="18">ping_host_remove<pos:position pos:line="168" pos:column="34"/></name> <argument_list pos:line="168" pos:column="35">(<argument><expr><name pos:line="168" pos:column="36">pingobj<pos:position pos:line="168" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="168" pos:column="45">hl<pos:position pos:line="168" pos:column="47"/></name><operator pos:line="168" pos:column="47">-&gt;<pos:position pos:line="168" pos:column="52"/></operator><name pos:line="168" pos:column="49">host<pos:position pos:line="168" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="168" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="55"/></expr_stmt>
        <if pos:line="169" pos:column="9">if <condition pos:line="169" pos:column="12">(<expr><name pos:line="169" pos:column="13">status<pos:position pos:line="169" pos:column="19"/></name> <operator pos:line="169" pos:column="20">!=<pos:position pos:line="169" pos:column="22"/></operator> <literal type="number" pos:line="169" pos:column="23">0<pos:position pos:line="169" pos:column="24"/></literal></expr>)<pos:position pos:line="169" pos:column="25"/></condition><then pos:line="169" pos:column="25">
        <block pos:line="170" pos:column="9">{
          <expr_stmt><expr><call><name pos:line="171" pos:column="11">WARNING<pos:position pos:line="171" pos:column="18"/></name> <argument_list pos:line="171" pos:column="19">(<argument><expr><literal type="string" pos:line="171" pos:column="20">"ping plugin: ping_host_remove (%s) failed."<pos:position pos:line="171" pos:column="64"/></literal></expr></argument>, <argument><expr><name><name pos:line="171" pos:column="66">hl<pos:position pos:line="171" pos:column="68"/></name><operator pos:line="171" pos:column="68">-&gt;<pos:position pos:line="171" pos:column="73"/></operator><name pos:line="171" pos:column="70">host<pos:position pos:line="171" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="171" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="76"/></expr_stmt>
        }<pos:position pos:line="172" pos:column="10"/></block></then>
        <else pos:line="173" pos:column="9">else
        <block pos:line="174" pos:column="9">{
          <expr_stmt><expr><name pos:line="175" pos:column="11">status<pos:position pos:line="175" pos:column="17"/></name> <operator pos:line="175" pos:column="18">=<pos:position pos:line="175" pos:column="19"/></operator> <call><name pos:line="175" pos:column="20">ping_host_add<pos:position pos:line="175" pos:column="33"/></name> <argument_list pos:line="175" pos:column="34">(<argument><expr><name pos:line="175" pos:column="35">pingobj<pos:position pos:line="175" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="175" pos:column="44">hl<pos:position pos:line="175" pos:column="46"/></name><operator pos:line="175" pos:column="46">-&gt;<pos:position pos:line="175" pos:column="51"/></operator><name pos:line="175" pos:column="48">host<pos:position pos:line="175" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="175" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="54"/></expr_stmt>
          <if pos:line="176" pos:column="11">if <condition pos:line="176" pos:column="14">(<expr><name pos:line="176" pos:column="15">status<pos:position pos:line="176" pos:column="21"/></name> <operator pos:line="176" pos:column="22">!=<pos:position pos:line="176" pos:column="24"/></operator> <literal type="number" pos:line="176" pos:column="25">0<pos:position pos:line="176" pos:column="26"/></literal></expr>)<pos:position pos:line="176" pos:column="27"/></condition><then pos:line="176" pos:column="27">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="177" pos:column="13">WARNING<pos:position pos:line="177" pos:column="20"/></name> <argument_list pos:line="177" pos:column="21">(<argument><expr><literal type="string" pos:line="177" pos:column="22">"ping plugin: ping_host_add (%s) failed."<pos:position pos:line="177" pos:column="63"/></literal></expr></argument>, <argument><expr><name><name pos:line="177" pos:column="65">hl<pos:position pos:line="177" pos:column="67"/></name><operator pos:line="177" pos:column="67">-&gt;<pos:position pos:line="177" pos:column="72"/></operator><name pos:line="177" pos:column="69">host<pos:position pos:line="177" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="177" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="75"/></expr_stmt></block></then></if>
        }<pos:position pos:line="178" pos:column="10"/></block></else></if>
      }<pos:position pos:line="179" pos:column="8"/></block></then></if> <comment type="block" pos:line="179" pos:column="9">/* }}} ping_max_missed */</comment>
    }<pos:position pos:line="180" pos:column="6"/></block></for> <comment type="block" pos:line="180" pos:column="7">/* }}} for (iter) */</comment>

    <if pos:line="182" pos:column="5">if <condition pos:line="182" pos:column="8">(<expr><call><name pos:line="182" pos:column="9">gettimeofday<pos:position pos:line="182" pos:column="21"/></name> <argument_list pos:line="182" pos:column="22">(<argument><expr><operator pos:line="182" pos:column="23">&amp;<pos:position pos:line="182" pos:column="28"/></operator><name pos:line="182" pos:column="24">tv_end<pos:position pos:line="182" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="182" pos:column="32">NULL<pos:position pos:line="182" pos:column="36"/></name></expr></argument>)<pos:position pos:line="182" pos:column="37"/></argument_list></call> <operator pos:line="182" pos:column="38">&lt;<pos:position pos:line="182" pos:column="42"/></operator> <literal type="number" pos:line="182" pos:column="40">0<pos:position pos:line="182" pos:column="41"/></literal></expr>)<pos:position pos:line="182" pos:column="42"/></condition><then pos:line="182" pos:column="42">
    <block pos:line="183" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="184" pos:column="7">char<pos:position pos:line="184" pos:column="11"/></name></type> <name><name pos:line="184" pos:column="12">errbuf<pos:position pos:line="184" pos:column="18"/></name><index pos:line="184" pos:column="18">[<expr><literal type="number" pos:line="184" pos:column="19">1024<pos:position pos:line="184" pos:column="23"/></literal></expr>]<pos:position pos:line="184" pos:column="24"/></index></name></decl>;<pos:position pos:line="184" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="185" pos:column="7">ERROR<pos:position pos:line="185" pos:column="12"/></name> <argument_list pos:line="185" pos:column="13">(<argument><expr><literal type="string" pos:line="185" pos:column="14">"ping plugin: gettimeofday failed: %s"<pos:position pos:line="185" pos:column="52"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="186" pos:column="11">sstrerror<pos:position pos:line="186" pos:column="20"/></name> <argument_list pos:line="186" pos:column="21">(<argument><expr><name pos:line="186" pos:column="22">errno<pos:position pos:line="186" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="29">errbuf<pos:position pos:line="186" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="186" pos:column="37">sizeof <argument_list pos:line="186" pos:column="44">(<argument><expr><name pos:line="186" pos:column="45">errbuf<pos:position pos:line="186" pos:column="51"/></name></expr></argument>)<pos:position pos:line="186" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="186" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="186" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="55"/></expr_stmt>
      <expr_stmt><expr><name pos:line="187" pos:column="7">ping_thread_error<pos:position pos:line="187" pos:column="24"/></name> <operator pos:line="187" pos:column="25">=<pos:position pos:line="187" pos:column="26"/></operator> <literal type="number" pos:line="187" pos:column="27">1<pos:position pos:line="187" pos:column="28"/></literal></expr>;<pos:position pos:line="187" pos:column="29"/></expr_stmt>
      <break pos:line="188" pos:column="7">break;<pos:position pos:line="188" pos:column="13"/></break>
    }<pos:position pos:line="189" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="191" pos:column="5">/* Calculate the absolute time until which to wait and store it in
     * `ts_wait'. */</comment>
    <expr_stmt><expr><call><name pos:line="193" pos:column="5">time_calc<pos:position pos:line="193" pos:column="14"/></name> <argument_list pos:line="193" pos:column="15">(<argument><expr><operator pos:line="193" pos:column="16">&amp;<pos:position pos:line="193" pos:column="21"/></operator><name pos:line="193" pos:column="17">ts_wait<pos:position pos:line="193" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="193" pos:column="26">&amp;<pos:position pos:line="193" pos:column="31"/></operator><name pos:line="193" pos:column="27">ts_int<pos:position pos:line="193" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="193" pos:column="35">&amp;<pos:position pos:line="193" pos:column="40"/></operator><name pos:line="193" pos:column="36">tv_begin<pos:position pos:line="193" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="193" pos:column="46">&amp;<pos:position pos:line="193" pos:column="51"/></operator><name pos:line="193" pos:column="47">tv_end<pos:position pos:line="193" pos:column="53"/></name></expr></argument>)<pos:position pos:line="193" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="55"/></expr_stmt>

    <expr_stmt><expr><name pos:line="195" pos:column="5">status<pos:position pos:line="195" pos:column="11"/></name> <operator pos:line="195" pos:column="12">=<pos:position pos:line="195" pos:column="13"/></operator> <call><name pos:line="195" pos:column="14">pthread_cond_timedwait<pos:position pos:line="195" pos:column="36"/></name> <argument_list pos:line="195" pos:column="37">(<argument><expr><operator pos:line="195" pos:column="38">&amp;<pos:position pos:line="195" pos:column="43"/></operator><name pos:line="195" pos:column="39">ping_cond<pos:position pos:line="195" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="195" pos:column="50">&amp;<pos:position pos:line="195" pos:column="55"/></operator><name pos:line="195" pos:column="51">ping_lock<pos:position pos:line="195" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="195" pos:column="62">&amp;<pos:position pos:line="195" pos:column="67"/></operator><name pos:line="195" pos:column="63">ts_wait<pos:position pos:line="195" pos:column="70"/></name></expr></argument>)<pos:position pos:line="195" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="72"/></expr_stmt>
    <if pos:line="196" pos:column="5">if <condition pos:line="196" pos:column="8">(<expr><name pos:line="196" pos:column="9">ping_thread_loop<pos:position pos:line="196" pos:column="25"/></name> <operator pos:line="196" pos:column="26">&lt;=<pos:position pos:line="196" pos:column="31"/></operator> <literal type="number" pos:line="196" pos:column="29">0<pos:position pos:line="196" pos:column="30"/></literal></expr>)<pos:position pos:line="196" pos:column="31"/></condition><then pos:line="196" pos:column="31">
      <block type="pseudo"><break pos:line="197" pos:column="7">break;<pos:position pos:line="197" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="198" pos:column="4"/></block></while> <comment type="block" pos:line="198" pos:column="5">/* while (ping_thread_loop &gt; 0) */</comment>

  <expr_stmt><expr><call><name pos:line="200" pos:column="3">pthread_mutex_unlock<pos:position pos:line="200" pos:column="23"/></name> <argument_list pos:line="200" pos:column="24">(<argument><expr><operator pos:line="200" pos:column="25">&amp;<pos:position pos:line="200" pos:column="30"/></operator><name pos:line="200" pos:column="26">ping_lock<pos:position pos:line="200" pos:column="35"/></name></expr></argument>)<pos:position pos:line="200" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="201" pos:column="3">ping_destroy<pos:position pos:line="201" pos:column="15"/></name> <argument_list pos:line="201" pos:column="16">(<argument><expr><name pos:line="201" pos:column="17">pingobj<pos:position pos:line="201" pos:column="24"/></name></expr></argument>)<pos:position pos:line="201" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="26"/></expr_stmt>

  <return pos:line="203" pos:column="3">return <expr><operator pos:line="203" pos:column="10">(<pos:position pos:line="203" pos:column="11"/></operator><operator pos:line="203" pos:column="11">(<pos:position pos:line="203" pos:column="12"/></operator><name pos:line="203" pos:column="12">void<pos:position pos:line="203" pos:column="16"/></name> <operator pos:line="203" pos:column="17">*<pos:position pos:line="203" pos:column="18"/></operator><operator pos:line="203" pos:column="18">)<pos:position pos:line="203" pos:column="19"/></operator> <literal type="number" pos:line="203" pos:column="20">0<pos:position pos:line="203" pos:column="21"/></literal><operator pos:line="203" pos:column="21">)<pos:position pos:line="203" pos:column="22"/></operator></expr>;<pos:position pos:line="203" pos:column="23"/></return>
}<pos:position pos:line="204" pos:column="2"/></block></function></unit>

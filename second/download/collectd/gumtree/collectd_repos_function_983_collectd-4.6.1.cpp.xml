<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_983_collectd-4.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">md_entry_insert<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">meta_data_t<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">md<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">meta_entry_t<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">e<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list> <comment type="block" pos:line="1" pos:column="63">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">meta_entry_t<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">this<pos:position pos:line="3" pos:column="21"/></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">meta_entry_t<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">prev<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><operator pos:line="6" pos:column="7">(<pos:position pos:line="6" pos:column="8"/></operator><name pos:line="6" pos:column="8">md<pos:position pos:line="6" pos:column="10"/></name> <operator pos:line="6" pos:column="11">==<pos:position pos:line="6" pos:column="13"/></operator> <name pos:line="6" pos:column="14">NULL<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">)<pos:position pos:line="6" pos:column="19"/></operator> <operator pos:line="6" pos:column="20">||<pos:position pos:line="6" pos:column="22"/></operator> <operator pos:line="6" pos:column="23">(<pos:position pos:line="6" pos:column="24"/></operator><name pos:line="6" pos:column="24">e<pos:position pos:line="6" pos:column="25"/></name> <operator pos:line="6" pos:column="26">==<pos:position pos:line="6" pos:column="28"/></operator> <name pos:line="6" pos:column="29">NULL<pos:position pos:line="6" pos:column="33"/></name><operator pos:line="6" pos:column="33">)<pos:position pos:line="6" pos:column="34"/></operator></expr>)<pos:position pos:line="6" pos:column="35"/></condition><then pos:line="6" pos:column="35">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><operator pos:line="7" pos:column="12">(<pos:position pos:line="7" pos:column="13"/></operator><operator pos:line="7" pos:column="13">-<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">EINVAL<pos:position pos:line="7" pos:column="20"/></name><operator pos:line="7" pos:column="20">)<pos:position pos:line="7" pos:column="21"/></operator></expr>;<pos:position pos:line="7" pos:column="22"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="9" pos:column="3">pthread_mutex_lock<pos:position pos:line="9" pos:column="21"/></name> <argument_list pos:line="9" pos:column="22">(<argument><expr><operator pos:line="9" pos:column="23">&amp;<pos:position pos:line="9" pos:column="28"/></operator><name><name pos:line="9" pos:column="24">md<pos:position pos:line="9" pos:column="26"/></name><operator pos:line="9" pos:column="26">-&gt;<pos:position pos:line="9" pos:column="31"/></operator><name pos:line="9" pos:column="28">lock<pos:position pos:line="9" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="34"/></expr_stmt>

  <expr_stmt><expr><name pos:line="11" pos:column="3">prev<pos:position pos:line="11" pos:column="7"/></name> <operator pos:line="11" pos:column="8">=<pos:position pos:line="11" pos:column="9"/></operator> <name pos:line="11" pos:column="10">NULL<pos:position pos:line="11" pos:column="14"/></name></expr>;<pos:position pos:line="11" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><name pos:line="12" pos:column="3">this<pos:position pos:line="12" pos:column="7"/></name> <operator pos:line="12" pos:column="8">=<pos:position pos:line="12" pos:column="9"/></operator> <name><name pos:line="12" pos:column="10">md<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">-&gt;<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="14">head<pos:position pos:line="12" pos:column="18"/></name></name></expr>;<pos:position pos:line="12" pos:column="19"/></expr_stmt>
  <while pos:line="13" pos:column="3">while <condition pos:line="13" pos:column="9">(<expr><name pos:line="13" pos:column="10">this<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">!=<pos:position pos:line="13" pos:column="17"/></operator> <name pos:line="13" pos:column="18">NULL<pos:position pos:line="13" pos:column="22"/></name></expr>)<pos:position pos:line="13" pos:column="23"/></condition>
  <block pos:line="14" pos:column="3">{
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><call><name pos:line="15" pos:column="9">strcasecmp<pos:position pos:line="15" pos:column="19"/></name> <argument_list pos:line="15" pos:column="20">(<argument><expr><name><name pos:line="15" pos:column="21">e<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">-&gt;<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="24">key<pos:position pos:line="15" pos:column="27"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="29">this<pos:position pos:line="15" pos:column="33"/></name><operator pos:line="15" pos:column="33">-&gt;<pos:position pos:line="15" pos:column="38"/></operator><name pos:line="15" pos:column="35">key<pos:position pos:line="15" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="39"/></argument_list></call> <operator pos:line="15" pos:column="40">==<pos:position pos:line="15" pos:column="42"/></operator> <literal type="number" pos:line="15" pos:column="43">0<pos:position pos:line="15" pos:column="44"/></literal></expr>)<pos:position pos:line="15" pos:column="45"/></condition><then pos:line="15" pos:column="45">
      <block type="pseudo"><break pos:line="16" pos:column="7">break;<pos:position pos:line="16" pos:column="13"/></break></block></then></if>

    <expr_stmt><expr><name pos:line="18" pos:column="5">prev<pos:position pos:line="18" pos:column="9"/></name> <operator pos:line="18" pos:column="10">=<pos:position pos:line="18" pos:column="11"/></operator> <name pos:line="18" pos:column="12">this<pos:position pos:line="18" pos:column="16"/></name></expr>;<pos:position pos:line="18" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">this<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <name><name pos:line="19" pos:column="12">this<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">-&gt;<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="18">next<pos:position pos:line="19" pos:column="22"/></name></name></expr>;<pos:position pos:line="19" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="20" pos:column="4"/></block></while>

  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><name pos:line="22" pos:column="7">this<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">==<pos:position pos:line="22" pos:column="14"/></operator> <name pos:line="22" pos:column="15">NULL<pos:position pos:line="22" pos:column="19"/></name></expr>)<pos:position pos:line="22" pos:column="20"/></condition><then pos:line="22" pos:column="20">
  <block pos:line="23" pos:column="3">{
    <comment type="block" pos:line="24" pos:column="5">/* This key does not exist yet. */</comment>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name><name pos:line="25" pos:column="9">md<pos:position pos:line="25" pos:column="11"/></name><operator pos:line="25" pos:column="11">-&gt;<pos:position pos:line="25" pos:column="16"/></operator><name pos:line="25" pos:column="13">head<pos:position pos:line="25" pos:column="17"/></name></name> <operator pos:line="25" pos:column="18">==<pos:position pos:line="25" pos:column="20"/></operator> <name pos:line="25" pos:column="21">NULL<pos:position pos:line="25" pos:column="25"/></name></expr>)<pos:position pos:line="25" pos:column="26"/></condition><then pos:line="25" pos:column="26">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="26" pos:column="7">md<pos:position pos:line="26" pos:column="9"/></name><operator pos:line="26" pos:column="9">-&gt;<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="11">head<pos:position pos:line="26" pos:column="15"/></name></name> <operator pos:line="26" pos:column="16">=<pos:position pos:line="26" pos:column="17"/></operator> <name pos:line="26" pos:column="18">e<pos:position pos:line="26" pos:column="19"/></name></expr>;<pos:position pos:line="26" pos:column="20"/></expr_stmt></block></then>
    <else pos:line="27" pos:column="5">else
    <block pos:line="28" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="29" pos:column="7">assert<pos:position pos:line="29" pos:column="13"/></name> <argument_list pos:line="29" pos:column="14">(<argument><expr><name pos:line="29" pos:column="15">prev<pos:position pos:line="29" pos:column="19"/></name> <operator pos:line="29" pos:column="20">!=<pos:position pos:line="29" pos:column="22"/></operator> <name pos:line="29" pos:column="23">NULL<pos:position pos:line="29" pos:column="27"/></name></expr></argument>)<pos:position pos:line="29" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="30" pos:column="7">prev<pos:position pos:line="30" pos:column="11"/></name><operator pos:line="30" pos:column="11">-&gt;<pos:position pos:line="30" pos:column="16"/></operator><name pos:line="30" pos:column="13">next<pos:position pos:line="30" pos:column="17"/></name></name> <operator pos:line="30" pos:column="18">=<pos:position pos:line="30" pos:column="19"/></operator> <name pos:line="30" pos:column="20">e<pos:position pos:line="30" pos:column="21"/></name></expr>;<pos:position pos:line="30" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name><name pos:line="33" pos:column="5">e<pos:position pos:line="33" pos:column="6"/></name><operator pos:line="33" pos:column="6">-&gt;<pos:position pos:line="33" pos:column="11"/></operator><name pos:line="33" pos:column="8">next<pos:position pos:line="33" pos:column="12"/></name></name> <operator pos:line="33" pos:column="13">=<pos:position pos:line="33" pos:column="14"/></operator> <name pos:line="33" pos:column="15">NULL<pos:position pos:line="33" pos:column="19"/></name></expr>;<pos:position pos:line="33" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="34" pos:column="4"/></block></then>
  <else pos:line="35" pos:column="3">else <comment type="block" pos:line="35" pos:column="8">/* (this != NULL) */</comment>
  <block pos:line="36" pos:column="3">{
    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name pos:line="37" pos:column="9">prev<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">==<pos:position pos:line="37" pos:column="16"/></operator> <name pos:line="37" pos:column="17">NULL<pos:position pos:line="37" pos:column="21"/></name></expr>)<pos:position pos:line="37" pos:column="22"/></condition><then pos:line="37" pos:column="22">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="38" pos:column="7">md<pos:position pos:line="38" pos:column="9"/></name><operator pos:line="38" pos:column="9">-&gt;<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="11">head<pos:position pos:line="38" pos:column="15"/></name></name> <operator pos:line="38" pos:column="16">=<pos:position pos:line="38" pos:column="17"/></operator> <name pos:line="38" pos:column="18">e<pos:position pos:line="38" pos:column="19"/></name></expr>;<pos:position pos:line="38" pos:column="20"/></expr_stmt></block></then>
    <else pos:line="39" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="40" pos:column="7">prev<pos:position pos:line="40" pos:column="11"/></name><operator pos:line="40" pos:column="11">-&gt;<pos:position pos:line="40" pos:column="16"/></operator><name pos:line="40" pos:column="13">next<pos:position pos:line="40" pos:column="17"/></name></name> <operator pos:line="40" pos:column="18">=<pos:position pos:line="40" pos:column="19"/></operator> <name pos:line="40" pos:column="20">e<pos:position pos:line="40" pos:column="21"/></name></expr>;<pos:position pos:line="40" pos:column="22"/></expr_stmt></block></else></if>

    <expr_stmt><expr><name><name pos:line="42" pos:column="5">e<pos:position pos:line="42" pos:column="6"/></name><operator pos:line="42" pos:column="6">-&gt;<pos:position pos:line="42" pos:column="11"/></operator><name pos:line="42" pos:column="8">next<pos:position pos:line="42" pos:column="12"/></name></name> <operator pos:line="42" pos:column="13">=<pos:position pos:line="42" pos:column="14"/></operator> <name><name pos:line="42" pos:column="15">this<pos:position pos:line="42" pos:column="19"/></name><operator pos:line="42" pos:column="19">-&gt;<pos:position pos:line="42" pos:column="24"/></operator><name pos:line="42" pos:column="21">next<pos:position pos:line="42" pos:column="25"/></name></name></expr>;<pos:position pos:line="42" pos:column="26"/></expr_stmt>
  }<pos:position pos:line="43" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="45" pos:column="3">pthread_mutex_unlock<pos:position pos:line="45" pos:column="23"/></name> <argument_list pos:line="45" pos:column="24">(<argument><expr><operator pos:line="45" pos:column="25">&amp;<pos:position pos:line="45" pos:column="30"/></operator><name><name pos:line="45" pos:column="26">md<pos:position pos:line="45" pos:column="28"/></name><operator pos:line="45" pos:column="28">-&gt;<pos:position pos:line="45" pos:column="33"/></operator><name pos:line="45" pos:column="30">lock<pos:position pos:line="45" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="36"/></expr_stmt>

  <if pos:line="47" pos:column="3">if <condition pos:line="47" pos:column="6">(<expr><name pos:line="47" pos:column="7">this<pos:position pos:line="47" pos:column="11"/></name> <operator pos:line="47" pos:column="12">!=<pos:position pos:line="47" pos:column="14"/></operator> <name pos:line="47" pos:column="15">NULL<pos:position pos:line="47" pos:column="19"/></name></expr>)<pos:position pos:line="47" pos:column="20"/></condition><then pos:line="47" pos:column="20">
  <block pos:line="48" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="49" pos:column="5">this<pos:position pos:line="49" pos:column="9"/></name><operator pos:line="49" pos:column="9">-&gt;<pos:position pos:line="49" pos:column="14"/></operator><name pos:line="49" pos:column="11">next<pos:position pos:line="49" pos:column="15"/></name></name> <operator pos:line="49" pos:column="16">=<pos:position pos:line="49" pos:column="17"/></operator> <name pos:line="49" pos:column="18">NULL<pos:position pos:line="49" pos:column="22"/></name></expr>;<pos:position pos:line="49" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">md_entry_free<pos:position pos:line="50" pos:column="18"/></name> <argument_list pos:line="50" pos:column="19">(<argument><expr><name pos:line="50" pos:column="20">this<pos:position pos:line="50" pos:column="24"/></name></expr></argument>)<pos:position pos:line="50" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="26"/></expr_stmt>
  }<pos:position pos:line="51" pos:column="4"/></block></then></if>

  <return pos:line="53" pos:column="3">return <expr><operator pos:line="53" pos:column="10">(<pos:position pos:line="53" pos:column="11"/></operator><literal type="number" pos:line="53" pos:column="11">0<pos:position pos:line="53" pos:column="12"/></literal><operator pos:line="53" pos:column="12">)<pos:position pos:line="53" pos:column="13"/></operator></expr>;<pos:position pos:line="53" pos:column="14"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

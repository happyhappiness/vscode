<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_743_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">pf_read<pos:position pos:line="1" pos:column="19"/></name> <parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">void<pos:position pos:line="1" pos:column="25"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="26"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">pf_status<pos:position pos:line="3" pos:column="25"/></name></name></type> <name pos:line="3" pos:column="26">state<pos:position pos:line="3" pos:column="31"/></name></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">fd<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">status<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">i<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><name pos:line="8" pos:column="9">fd<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <call><name pos:line="8" pos:column="14">open<pos:position pos:line="8" pos:column="18"/></name> <argument_list pos:line="8" pos:column="19">(<argument><expr><name pos:line="8" pos:column="20">pf_device<pos:position pos:line="8" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="31">O_RDONLY<pos:position pos:line="8" pos:column="39"/></name></expr></argument>)<pos:position pos:line="8" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="41"/></expr_stmt>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">fd<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">&lt;<pos:position pos:line="9" pos:column="20"/></operator> <literal type="number" pos:line="9" pos:column="18">0<pos:position pos:line="9" pos:column="19"/></literal></expr>)<pos:position pos:line="9" pos:column="20"/></condition><then pos:line="9" pos:column="20">
	<block pos:line="10" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">char<pos:position pos:line="11" pos:column="21"/></name></type> <name><name pos:line="11" pos:column="22">errbuf<pos:position pos:line="11" pos:column="28"/></name><index pos:line="11" pos:column="28">[<expr><literal type="number" pos:line="11" pos:column="29">1024<pos:position pos:line="11" pos:column="33"/></literal></expr>]<pos:position pos:line="11" pos:column="34"/></index></name></decl>;<pos:position pos:line="11" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">ERROR<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<argument><expr><literal type="string" pos:line="12" pos:column="23">"pf plugin: Unable to open %s: %s"<pos:position pos:line="12" pos:column="57"/></literal></expr></argument>,
				<argument><expr><name pos:line="13" pos:column="33">pf_device<pos:position pos:line="13" pos:column="42"/></name></expr></argument>,
				<argument><expr><call><name pos:line="14" pos:column="33">sstrerror<pos:position pos:line="14" pos:column="42"/></name> <argument_list pos:line="14" pos:column="43">(<argument><expr><name pos:line="14" pos:column="44">errno<pos:position pos:line="14" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="51">errbuf<pos:position pos:line="14" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="59">sizeof <argument_list pos:line="14" pos:column="66">(<argument><expr><name pos:line="14" pos:column="67">errbuf<pos:position pos:line="14" pos:column="73"/></name></expr></argument>)<pos:position pos:line="14" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="77"/></expr_stmt>
		<return pos:line="15" pos:column="17">return <expr><operator pos:line="15" pos:column="24">(<pos:position pos:line="15" pos:column="25"/></operator><operator pos:line="15" pos:column="25">-<pos:position pos:line="15" pos:column="26"/></operator><literal type="number" pos:line="15" pos:column="26">1<pos:position pos:line="15" pos:column="27"/></literal><operator pos:line="15" pos:column="27">)<pos:position pos:line="15" pos:column="28"/></operator></expr>;<pos:position pos:line="15" pos:column="29"/></return>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="18" pos:column="9">memset<pos:position pos:line="18" pos:column="15"/></name> <argument_list pos:line="18" pos:column="16">(<argument><expr><operator pos:line="18" pos:column="17">&amp;<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="18">state<pos:position pos:line="18" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="25">0<pos:position pos:line="18" pos:column="26"/></literal></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="28">sizeof <argument_list pos:line="18" pos:column="35">(<argument><expr><name pos:line="18" pos:column="36">state<pos:position pos:line="18" pos:column="41"/></name></expr></argument>)<pos:position pos:line="18" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><name pos:line="19" pos:column="9">status<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <call><name pos:line="19" pos:column="18">ioctl<pos:position pos:line="19" pos:column="23"/></name> <argument_list pos:line="19" pos:column="24">(<argument><expr><name pos:line="19" pos:column="25">fd<pos:position pos:line="19" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="29">DIOCGETSTATUS<pos:position pos:line="19" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="44">&amp;<pos:position pos:line="19" pos:column="49"/></operator><name pos:line="19" pos:column="45">state<pos:position pos:line="19" pos:column="50"/></name></expr></argument>)<pos:position pos:line="19" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="52"/></expr_stmt>
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name pos:line="20" pos:column="13">status<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">!=<pos:position pos:line="20" pos:column="22"/></operator> <literal type="number" pos:line="20" pos:column="23">0<pos:position pos:line="20" pos:column="24"/></literal></expr>)<pos:position pos:line="20" pos:column="25"/></condition><then pos:line="20" pos:column="25">
	<block pos:line="21" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="22" pos:column="17">char<pos:position pos:line="22" pos:column="21"/></name></type> <name><name pos:line="22" pos:column="22">errbuf<pos:position pos:line="22" pos:column="28"/></name><index pos:line="22" pos:column="28">[<expr><literal type="number" pos:line="22" pos:column="29">1024<pos:position pos:line="22" pos:column="33"/></literal></expr>]<pos:position pos:line="22" pos:column="34"/></index></name></decl>;<pos:position pos:line="22" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="23" pos:column="17">ERROR<pos:position pos:line="23" pos:column="22"/></name><argument_list pos:line="23" pos:column="22">(<argument><expr><literal type="string" pos:line="23" pos:column="23">"pf plugin: ioctl(DIOCGETSTATUS) failed: %s"<pos:position pos:line="23" pos:column="67"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="24" pos:column="33">sstrerror<pos:position pos:line="24" pos:column="42"/></name> <argument_list pos:line="24" pos:column="43">(<argument><expr><name pos:line="24" pos:column="44">errno<pos:position pos:line="24" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="51">errbuf<pos:position pos:line="24" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="59">sizeof <argument_list pos:line="24" pos:column="66">(<argument><expr><name pos:line="24" pos:column="67">errbuf<pos:position pos:line="24" pos:column="73"/></name></expr></argument>)<pos:position pos:line="24" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="77"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">close<pos:position pos:line="25" pos:column="22"/></name><argument_list pos:line="25" pos:column="22">(<argument><expr><name pos:line="25" pos:column="23">fd<pos:position pos:line="25" pos:column="25"/></name></expr></argument>)<pos:position pos:line="25" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="27"/></expr_stmt>
		<return pos:line="26" pos:column="17">return <expr><operator pos:line="26" pos:column="24">(<pos:position pos:line="26" pos:column="25"/></operator><operator pos:line="26" pos:column="25">-<pos:position pos:line="26" pos:column="26"/></operator><literal type="number" pos:line="26" pos:column="26">1<pos:position pos:line="26" pos:column="27"/></literal><operator pos:line="26" pos:column="27">)<pos:position pos:line="26" pos:column="28"/></operator></expr>;<pos:position pos:line="26" pos:column="29"/></return>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="29" pos:column="9">close<pos:position pos:line="29" pos:column="14"/></name> <argument_list pos:line="29" pos:column="15">(<argument><expr><name pos:line="29" pos:column="16">fd<pos:position pos:line="29" pos:column="18"/></name></expr></argument>)<pos:position pos:line="29" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><name pos:line="30" pos:column="9">fd<pos:position pos:line="30" pos:column="11"/></name> <operator pos:line="30" pos:column="12">=<pos:position pos:line="30" pos:column="13"/></operator> <operator pos:line="30" pos:column="14">-<pos:position pos:line="30" pos:column="15"/></operator><literal type="number" pos:line="30" pos:column="15">1<pos:position pos:line="30" pos:column="16"/></literal></expr>;<pos:position pos:line="30" pos:column="17"/></expr_stmt>

	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><operator pos:line="32" pos:column="13">!<pos:position pos:line="32" pos:column="14"/></operator><name><name pos:line="32" pos:column="14">state<pos:position pos:line="32" pos:column="19"/></name><operator pos:line="32" pos:column="19">.<pos:position pos:line="32" pos:column="20"/></operator><name pos:line="32" pos:column="20">running<pos:position pos:line="32" pos:column="27"/></name></name></expr>)<pos:position pos:line="32" pos:column="28"/></condition><then pos:line="32" pos:column="28">
	<block pos:line="33" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">WARNING<pos:position pos:line="34" pos:column="24"/></name> <argument_list pos:line="34" pos:column="25">(<argument><expr><literal type="string" pos:line="34" pos:column="26">"pf plugin: PF is not running."<pos:position pos:line="34" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="59"/></expr_stmt>
		<return pos:line="35" pos:column="17">return <expr><operator pos:line="35" pos:column="24">(<pos:position pos:line="35" pos:column="25"/></operator><operator pos:line="35" pos:column="25">-<pos:position pos:line="35" pos:column="26"/></operator><literal type="number" pos:line="35" pos:column="26">1<pos:position pos:line="35" pos:column="27"/></literal><operator pos:line="35" pos:column="27">)<pos:position pos:line="35" pos:column="28"/></operator></expr>;<pos:position pos:line="35" pos:column="29"/></return>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if>

	<for pos:line="38" pos:column="9">for <control pos:line="38" pos:column="13">(<init><expr><name pos:line="38" pos:column="14">i<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">=<pos:position pos:line="38" pos:column="17"/></operator> <literal type="number" pos:line="38" pos:column="18">0<pos:position pos:line="38" pos:column="19"/></literal></expr>;<pos:position pos:line="38" pos:column="20"/></init> <condition><expr><name pos:line="38" pos:column="21">i<pos:position pos:line="38" pos:column="22"/></name> <operator pos:line="38" pos:column="23">&lt;<pos:position pos:line="38" pos:column="27"/></operator> <name pos:line="38" pos:column="25">PFRES_MAX<pos:position pos:line="38" pos:column="34"/></name></expr>;<pos:position pos:line="38" pos:column="35"/></condition> <incr><expr><name pos:line="38" pos:column="36">i<pos:position pos:line="38" pos:column="37"/></name><operator pos:line="38" pos:column="37">++<pos:position pos:line="38" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="38" pos:column="40"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="17">pf_submit<pos:position pos:line="39" pos:column="26"/></name> <argument_list pos:line="39" pos:column="27">(<argument><expr><literal type="string" pos:line="39" pos:column="28">"pf_counters"<pos:position pos:line="39" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="43">pf_reasons<pos:position pos:line="39" pos:column="53"/></name><index pos:line="39" pos:column="53">[<expr><name pos:line="39" pos:column="54">i<pos:position pos:line="39" pos:column="55"/></name></expr>]<pos:position pos:line="39" pos:column="56"/></index></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="58">state<pos:position pos:line="39" pos:column="63"/></name><operator pos:line="39" pos:column="63">.<pos:position pos:line="39" pos:column="64"/></operator><name pos:line="39" pos:column="64">counters<pos:position pos:line="39" pos:column="72"/></name><index pos:line="39" pos:column="72">[<expr><name pos:line="39" pos:column="73">i<pos:position pos:line="39" pos:column="74"/></name></expr>]<pos:position pos:line="39" pos:column="75"/></index></name></expr></argument>,
				<comment type="block" pos:line="40" pos:column="33">/* is gauge = */</comment> <argument><expr><literal type="number" pos:line="40" pos:column="50">0<pos:position pos:line="40" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="53"/></expr_stmt></block></for>
	<for pos:line="41" pos:column="9">for <control pos:line="41" pos:column="13">(<init><expr><name pos:line="41" pos:column="14">i<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">=<pos:position pos:line="41" pos:column="17"/></operator> <literal type="number" pos:line="41" pos:column="18">0<pos:position pos:line="41" pos:column="19"/></literal></expr>;<pos:position pos:line="41" pos:column="20"/></init> <condition><expr><name pos:line="41" pos:column="21">i<pos:position pos:line="41" pos:column="22"/></name> <operator pos:line="41" pos:column="23">&lt;<pos:position pos:line="41" pos:column="27"/></operator> <name pos:line="41" pos:column="25">LCNT_MAX<pos:position pos:line="41" pos:column="33"/></name></expr>;<pos:position pos:line="41" pos:column="34"/></condition> <incr><expr><name pos:line="41" pos:column="35">i<pos:position pos:line="41" pos:column="36"/></name><operator pos:line="41" pos:column="36">++<pos:position pos:line="41" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="41" pos:column="39"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="17">pf_submit<pos:position pos:line="42" pos:column="26"/></name> <argument_list pos:line="42" pos:column="27">(<argument><expr><literal type="string" pos:line="42" pos:column="28">"pf_limits"<pos:position pos:line="42" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="41">pf_lcounters<pos:position pos:line="42" pos:column="53"/></name><index pos:line="42" pos:column="53">[<expr><name pos:line="42" pos:column="54">i<pos:position pos:line="42" pos:column="55"/></name></expr>]<pos:position pos:line="42" pos:column="56"/></index></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="58">state<pos:position pos:line="42" pos:column="63"/></name><operator pos:line="42" pos:column="63">.<pos:position pos:line="42" pos:column="64"/></operator><name pos:line="42" pos:column="64">lcounters<pos:position pos:line="42" pos:column="73"/></name><index pos:line="42" pos:column="73">[<expr><name pos:line="42" pos:column="74">i<pos:position pos:line="42" pos:column="75"/></name></expr>]<pos:position pos:line="42" pos:column="76"/></index></name></expr></argument>,
				<comment type="block" pos:line="43" pos:column="33">/* is gauge = */</comment> <argument><expr><literal type="number" pos:line="43" pos:column="50">0<pos:position pos:line="43" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="53"/></expr_stmt></block></for>
	<for pos:line="44" pos:column="9">for <control pos:line="44" pos:column="13">(<init><expr><name pos:line="44" pos:column="14">i<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">=<pos:position pos:line="44" pos:column="17"/></operator> <literal type="number" pos:line="44" pos:column="18">0<pos:position pos:line="44" pos:column="19"/></literal></expr>;<pos:position pos:line="44" pos:column="20"/></init> <condition><expr><name pos:line="44" pos:column="21">i<pos:position pos:line="44" pos:column="22"/></name> <operator pos:line="44" pos:column="23">&lt;<pos:position pos:line="44" pos:column="27"/></operator> <name pos:line="44" pos:column="25">FCNT_MAX<pos:position pos:line="44" pos:column="33"/></name></expr>;<pos:position pos:line="44" pos:column="34"/></condition> <incr><expr><name pos:line="44" pos:column="35">i<pos:position pos:line="44" pos:column="36"/></name><operator pos:line="44" pos:column="36">++<pos:position pos:line="44" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="44" pos:column="39"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="17">pf_submit<pos:position pos:line="45" pos:column="26"/></name> <argument_list pos:line="45" pos:column="27">(<argument><expr><literal type="string" pos:line="45" pos:column="28">"pf_state"<pos:position pos:line="45" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="40">pf_fcounters<pos:position pos:line="45" pos:column="52"/></name><index pos:line="45" pos:column="52">[<expr><name pos:line="45" pos:column="53">i<pos:position pos:line="45" pos:column="54"/></name></expr>]<pos:position pos:line="45" pos:column="55"/></index></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="57">state<pos:position pos:line="45" pos:column="62"/></name><operator pos:line="45" pos:column="62">.<pos:position pos:line="45" pos:column="63"/></operator><name pos:line="45" pos:column="63">fcounters<pos:position pos:line="45" pos:column="72"/></name><index pos:line="45" pos:column="72">[<expr><name pos:line="45" pos:column="73">i<pos:position pos:line="45" pos:column="74"/></name></expr>]<pos:position pos:line="45" pos:column="75"/></index></name></expr></argument>,
				<comment type="block" pos:line="46" pos:column="33">/* is gauge = */</comment> <argument><expr><literal type="number" pos:line="46" pos:column="50">0<pos:position pos:line="46" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="53"/></expr_stmt></block></for>
	<for pos:line="47" pos:column="9">for <control pos:line="47" pos:column="13">(<init><expr><name pos:line="47" pos:column="14">i<pos:position pos:line="47" pos:column="15"/></name> <operator pos:line="47" pos:column="16">=<pos:position pos:line="47" pos:column="17"/></operator> <literal type="number" pos:line="47" pos:column="18">0<pos:position pos:line="47" pos:column="19"/></literal></expr>;<pos:position pos:line="47" pos:column="20"/></init> <condition><expr><name pos:line="47" pos:column="21">i<pos:position pos:line="47" pos:column="22"/></name> <operator pos:line="47" pos:column="23">&lt;<pos:position pos:line="47" pos:column="27"/></operator> <name pos:line="47" pos:column="25">SCNT_MAX<pos:position pos:line="47" pos:column="33"/></name></expr>;<pos:position pos:line="47" pos:column="34"/></condition> <incr><expr><name pos:line="47" pos:column="35">i<pos:position pos:line="47" pos:column="36"/></name><operator pos:line="47" pos:column="36">++<pos:position pos:line="47" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="47" pos:column="39"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="17">pf_submit<pos:position pos:line="48" pos:column="26"/></name> <argument_list pos:line="48" pos:column="27">(<argument><expr><literal type="string" pos:line="48" pos:column="28">"pf_source"<pos:position pos:line="48" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="41">pf_scounters<pos:position pos:line="48" pos:column="53"/></name><index pos:line="48" pos:column="53">[<expr><name pos:line="48" pos:column="54">i<pos:position pos:line="48" pos:column="55"/></name></expr>]<pos:position pos:line="48" pos:column="56"/></index></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="58">state<pos:position pos:line="48" pos:column="63"/></name><operator pos:line="48" pos:column="63">.<pos:position pos:line="48" pos:column="64"/></operator><name pos:line="48" pos:column="64">scounters<pos:position pos:line="48" pos:column="73"/></name><index pos:line="48" pos:column="73">[<expr><name pos:line="48" pos:column="74">i<pos:position pos:line="48" pos:column="75"/></name></expr>]<pos:position pos:line="48" pos:column="76"/></index></name></expr></argument>,
				<comment type="block" pos:line="49" pos:column="33">/* is gauge = */</comment> <argument><expr><literal type="number" pos:line="49" pos:column="50">0<pos:position pos:line="49" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="53"/></expr_stmt></block></for>

	<expr_stmt><expr><call><name pos:line="51" pos:column="9">pf_submit<pos:position pos:line="51" pos:column="18"/></name> <argument_list pos:line="51" pos:column="19">(<argument><expr><literal type="string" pos:line="51" pos:column="20">"pf_states"<pos:position pos:line="51" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="33">"current"<pos:position pos:line="51" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="51" pos:column="44">(<pos:position pos:line="51" pos:column="45"/></operator><name pos:line="51" pos:column="45">uint32_t<pos:position pos:line="51" pos:column="53"/></name><operator pos:line="51" pos:column="53">)<pos:position pos:line="51" pos:column="54"/></operator> <name><name pos:line="51" pos:column="55">state<pos:position pos:line="51" pos:column="60"/></name><operator pos:line="51" pos:column="60">.<pos:position pos:line="51" pos:column="61"/></operator><name pos:line="51" pos:column="61">states<pos:position pos:line="51" pos:column="67"/></name></name></expr></argument>,
			<comment type="block" pos:line="52" pos:column="25">/* is gauge = */</comment> <argument><expr><literal type="number" pos:line="52" pos:column="42">1<pos:position pos:line="52" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="45"/></expr_stmt>

	<return pos:line="54" pos:column="9">return <expr><operator pos:line="54" pos:column="16">(<pos:position pos:line="54" pos:column="17"/></operator><literal type="number" pos:line="54" pos:column="17">0<pos:position pos:line="54" pos:column="18"/></literal><operator pos:line="54" pos:column="18">)<pos:position pos:line="54" pos:column="19"/></operator></expr>;<pos:position pos:line="54" pos:column="20"/></return>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

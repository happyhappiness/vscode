<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1081_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">get_memory_machine_checks<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">void<pos:position pos:line="1" pos:column="42"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list> <block pos:line="1" pos:column="44">{
  <decl_stmt><decl><specifier pos:line="2" pos:column="3">static<pos:position pos:line="2" pos:column="9"/></specifier> <type><specifier pos:line="2" pos:column="10">const<pos:position pos:line="2" pos:column="15"/></specifier> <name pos:line="2" pos:column="16">char<pos:position pos:line="2" pos:column="20"/></name></type> <name><name pos:line="2" pos:column="21">dump<pos:position pos:line="2" pos:column="25"/></name><index pos:line="2" pos:column="25">[]<pos:position pos:line="2" pos:column="27"/></index></name> <init pos:line="2" pos:column="28">= <expr><literal type="string" pos:line="2" pos:column="30">"dump all bios\n"<pos:position pos:line="2" pos:column="47"/></literal></expr></init></decl>;<pos:position pos:line="2" pos:column="48"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">ret<pos:position pos:line="3" pos:column="10"/></name> <init pos:line="3" pos:column="11">= <expr><call><name><name pos:line="3" pos:column="13">socket_adapter<pos:position pos:line="3" pos:column="27"/></name><operator pos:line="3" pos:column="27">.<pos:position pos:line="3" pos:column="28"/></operator><name pos:line="3" pos:column="28">write<pos:position pos:line="3" pos:column="33"/></name></name><argument_list pos:line="3" pos:column="33">(<argument><expr><operator pos:line="3" pos:column="34">&amp;<pos:position pos:line="3" pos:column="39"/></operator><name pos:line="3" pos:column="35">socket_adapter<pos:position pos:line="3" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="51">dump<pos:position pos:line="3" pos:column="55"/></name></expr></argument>, <argument><expr><sizeof pos:line="3" pos:column="57">sizeof<argument_list pos:line="3" pos:column="63">(<argument><expr><name pos:line="3" pos:column="64">dump<pos:position pos:line="3" pos:column="68"/></name></expr></argument>)<pos:position pos:line="3" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="3" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="71"/></decl_stmt>
  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><name pos:line="4" pos:column="7">ret<pos:position pos:line="4" pos:column="10"/></name> <operator pos:line="4" pos:column="11">!=<pos:position pos:line="4" pos:column="13"/></operator> <literal type="number" pos:line="4" pos:column="14">0<pos:position pos:line="4" pos:column="15"/></literal></expr>)<pos:position pos:line="4" pos:column="16"/></condition><then pos:line="4" pos:column="16">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="5" pos:column="5">ERROR<pos:position pos:line="5" pos:column="10"/></name><argument_list pos:line="5" pos:column="10">(<argument><expr><name pos:line="5" pos:column="11">MCELOG_PLUGIN<pos:position pos:line="5" pos:column="24"/></name> <literal type="string" pos:line="5" pos:column="25">": SENT DUMP REQUEST FAILED"<pos:position pos:line="5" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="55"/></expr_stmt></block></then>
  <else pos:line="6" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="5">DEBUG<pos:position pos:line="7" pos:column="10"/></name><argument_list pos:line="7" pos:column="10">(<argument><expr><name pos:line="7" pos:column="11">MCELOG_PLUGIN<pos:position pos:line="7" pos:column="24"/></name> <literal type="string" pos:line="7" pos:column="25">": SENT DUMP REQUEST OK"<pos:position pos:line="7" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="51"/></expr_stmt></block></else></if>
  <return pos:line="8" pos:column="3">return <expr><name pos:line="8" pos:column="10">ret<pos:position pos:line="8" pos:column="13"/></name></expr>;<pos:position pos:line="8" pos:column="14"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

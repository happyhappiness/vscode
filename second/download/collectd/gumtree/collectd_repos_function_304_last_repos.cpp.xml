<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_304_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">df_read<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">void<pos:position pos:line="1" pos:column="24"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="25"/></parameter_list> <block pos:line="1" pos:column="26">{
<cpp:if pos:line="2" pos:column="1">#<cpp:directive pos:line="2" pos:column="2">if<pos:position pos:line="2" pos:column="4"/></cpp:directive> <expr><name pos:line="2" pos:column="5">HAVE_STATVFS<pos:position pos:line="2" pos:column="17"/></name></expr></cpp:if>
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">statvfs<pos:position pos:line="3" pos:column="17"/></name></name></type> <name pos:line="3" pos:column="18">statbuf<pos:position pos:line="3" pos:column="25"/></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
<cpp:elif pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">elif<pos:position pos:line="4" pos:column="6"/></cpp:directive> <expr><name pos:line="4" pos:column="7">HAVE_STATFS<pos:position pos:line="4" pos:column="18"/></name></expr></cpp:elif>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">statfs<pos:position pos:line="5" pos:column="16"/></name></name></type> <name pos:line="5" pos:column="17">statbuf<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
<cpp:endif pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">endif<pos:position pos:line="6" pos:column="7"/></cpp:directive></cpp:endif>
  <comment type="block" pos:line="7" pos:column="3">/* struct STATANYFS statbuf; */</comment>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">cu_mount_t<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">mnt_list<pos:position pos:line="8" pos:column="23"/></name></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>

  <expr_stmt><expr><name pos:line="10" pos:column="3">mnt_list<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <name pos:line="10" pos:column="14">NULL<pos:position pos:line="10" pos:column="18"/></name></expr>;<pos:position pos:line="10" pos:column="19"/></expr_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><call><name pos:line="11" pos:column="7">cu_mount_getlist<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">(<argument><expr><operator pos:line="11" pos:column="24">&amp;<pos:position pos:line="11" pos:column="29"/></operator><name pos:line="11" pos:column="25">mnt_list<pos:position pos:line="11" pos:column="33"/></name></expr></argument>)<pos:position pos:line="11" pos:column="34"/></argument_list></call> <operator pos:line="11" pos:column="35">==<pos:position pos:line="11" pos:column="37"/></operator> <name pos:line="11" pos:column="38">NULL<pos:position pos:line="11" pos:column="42"/></name></expr>)<pos:position pos:line="11" pos:column="43"/></condition><then pos:line="11" pos:column="43"> <block pos:line="11" pos:column="44">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">ERROR<pos:position pos:line="12" pos:column="10"/></name><argument_list pos:line="12" pos:column="10">(<argument><expr><literal type="string" pos:line="12" pos:column="11">"df plugin: cu_mount_getlist failed."<pos:position pos:line="12" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="50"/></expr_stmt>
    <return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">-<pos:position pos:line="13" pos:column="13"/></operator><literal type="number" pos:line="13" pos:column="13">1<pos:position pos:line="13" pos:column="14"/></literal></expr>;<pos:position pos:line="13" pos:column="15"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <for pos:line="16" pos:column="3">for <control pos:line="16" pos:column="7">(<init><decl><type><name pos:line="16" pos:column="8">cu_mount_t<pos:position pos:line="16" pos:column="18"/></name> <modifier pos:line="16" pos:column="19">*<pos:position pos:line="16" pos:column="20"/></modifier></type><name pos:line="16" pos:column="20">mnt_ptr<pos:position pos:line="16" pos:column="27"/></name> <init pos:line="16" pos:column="28">= <expr><name pos:line="16" pos:column="30">mnt_list<pos:position pos:line="16" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="39"/></init> <condition><expr><name pos:line="16" pos:column="40">mnt_ptr<pos:position pos:line="16" pos:column="47"/></name> <operator pos:line="16" pos:column="48">!=<pos:position pos:line="16" pos:column="50"/></operator> <name pos:line="16" pos:column="51">NULL<pos:position pos:line="16" pos:column="55"/></name></expr>;<pos:position pos:line="16" pos:column="56"/></condition>
       <incr><expr><name pos:line="17" pos:column="8">mnt_ptr<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <name><name pos:line="17" pos:column="18">mnt_ptr<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">-&gt;<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="27">next<pos:position pos:line="17" pos:column="31"/></name></name></expr></incr>)<pos:position pos:line="17" pos:column="32"/></control> <block pos:line="17" pos:column="33">{
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">unsigned<pos:position pos:line="18" pos:column="13"/></name> <name pos:line="18" pos:column="14">long<pos:position pos:line="18" pos:column="18"/></name> <name pos:line="18" pos:column="19">long<pos:position pos:line="18" pos:column="23"/></name></type> <name pos:line="18" pos:column="24">blocksize<pos:position pos:line="18" pos:column="33"/></name></decl>;<pos:position pos:line="18" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">char<pos:position pos:line="19" pos:column="9"/></name></type> <name><name pos:line="19" pos:column="10">disk_name<pos:position pos:line="19" pos:column="19"/></name><index pos:line="19" pos:column="19">[<expr><literal type="number" pos:line="19" pos:column="20">256<pos:position pos:line="19" pos:column="23"/></literal></expr>]<pos:position pos:line="19" pos:column="24"/></index></name></decl>;<pos:position pos:line="19" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">cu_mount_t<pos:position pos:line="20" pos:column="15"/></name> <modifier pos:line="20" pos:column="16">*<pos:position pos:line="20" pos:column="17"/></modifier></type><name pos:line="20" pos:column="17">dup_ptr<pos:position pos:line="20" pos:column="24"/></name></decl>;<pos:position pos:line="20" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">uint64_t<pos:position pos:line="21" pos:column="13"/></name></type> <name pos:line="21" pos:column="14">blk_free<pos:position pos:line="21" pos:column="22"/></name></decl>;<pos:position pos:line="21" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">uint64_t<pos:position pos:line="22" pos:column="13"/></name></type> <name pos:line="22" pos:column="14">blk_reserved<pos:position pos:line="22" pos:column="26"/></name></decl>;<pos:position pos:line="22" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">uint64_t<pos:position pos:line="23" pos:column="13"/></name></type> <name pos:line="23" pos:column="14">blk_used<pos:position pos:line="23" pos:column="22"/></name></decl>;<pos:position pos:line="23" pos:column="23"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="25" pos:column="5">char<pos:position pos:line="25" pos:column="9"/></name> <specifier pos:line="25" pos:column="10">const<pos:position pos:line="25" pos:column="15"/></specifier> <modifier pos:line="25" pos:column="16">*<pos:position pos:line="25" pos:column="17"/></modifier></type><name pos:line="25" pos:column="17">dev<pos:position pos:line="25" pos:column="20"/></name> <init pos:line="25" pos:column="21">=
        <expr><ternary><condition><expr><operator pos:line="26" pos:column="9">(<pos:position pos:line="26" pos:column="10"/></operator><name><name pos:line="26" pos:column="10">mnt_ptr<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">-&gt;<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="19">spec_device<pos:position pos:line="26" pos:column="30"/></name></name> <operator pos:line="26" pos:column="31">!=<pos:position pos:line="26" pos:column="33"/></operator> <name pos:line="26" pos:column="34">NULL<pos:position pos:line="26" pos:column="38"/></name><operator pos:line="26" pos:column="38">)<pos:position pos:line="26" pos:column="39"/></operator></expr> ?<pos:position pos:line="26" pos:column="41"/></condition><then pos:line="26" pos:column="41"> <expr><name><name pos:line="26" pos:column="42">mnt_ptr<pos:position pos:line="26" pos:column="49"/></name><operator pos:line="26" pos:column="49">-&gt;<pos:position pos:line="26" pos:column="54"/></operator><name pos:line="26" pos:column="51">spec_device<pos:position pos:line="26" pos:column="62"/></name></name></expr> <pos:position pos:line="26" pos:column="63"/></then><else pos:line="26" pos:column="63">: <expr><name><name pos:line="26" pos:column="65">mnt_ptr<pos:position pos:line="26" pos:column="72"/></name><operator pos:line="26" pos:column="72">-&gt;<pos:position pos:line="26" pos:column="77"/></operator><name pos:line="26" pos:column="74">device<pos:position pos:line="26" pos:column="80"/></name></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="26" pos:column="81"/></decl_stmt>

    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><call><name pos:line="28" pos:column="9">ignorelist_match<pos:position pos:line="28" pos:column="25"/></name><argument_list pos:line="28" pos:column="25">(<argument><expr><name pos:line="28" pos:column="26">il_device<pos:position pos:line="28" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="37">dev<pos:position pos:line="28" pos:column="40"/></name></expr></argument>)<pos:position pos:line="28" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="42"/></condition><then pos:line="28" pos:column="42">
      <block type="pseudo"><continue pos:line="29" pos:column="7">continue;<pos:position pos:line="29" pos:column="16"/></continue></block></then></if>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><call><name pos:line="30" pos:column="9">ignorelist_match<pos:position pos:line="30" pos:column="25"/></name><argument_list pos:line="30" pos:column="25">(<argument><expr><name pos:line="30" pos:column="26">il_mountpoint<pos:position pos:line="30" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="41">mnt_ptr<pos:position pos:line="30" pos:column="48"/></name><operator pos:line="30" pos:column="48">-&gt;<pos:position pos:line="30" pos:column="53"/></operator><name pos:line="30" pos:column="50">dir<pos:position pos:line="30" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="55"/></condition><then pos:line="30" pos:column="55">
      <block type="pseudo"><continue pos:line="31" pos:column="7">continue;<pos:position pos:line="31" pos:column="16"/></continue></block></then></if>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><call><name pos:line="32" pos:column="9">ignorelist_match<pos:position pos:line="32" pos:column="25"/></name><argument_list pos:line="32" pos:column="25">(<argument><expr><name pos:line="32" pos:column="26">il_fstype<pos:position pos:line="32" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="37">mnt_ptr<pos:position pos:line="32" pos:column="44"/></name><operator pos:line="32" pos:column="44">-&gt;<pos:position pos:line="32" pos:column="49"/></operator><name pos:line="32" pos:column="46">type<pos:position pos:line="32" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="52"/></condition><then pos:line="32" pos:column="52">
      <block type="pseudo"><continue pos:line="33" pos:column="7">continue;<pos:position pos:line="33" pos:column="16"/></continue></block></then></if>

    <comment type="block" pos:line="35" pos:column="5">/* search for duplicates *in front of* the current mnt_ptr. */</comment>
    <for pos:line="36" pos:column="5">for <control pos:line="36" pos:column="9">(<init><expr><name pos:line="36" pos:column="10">dup_ptr<pos:position pos:line="36" pos:column="17"/></name> <operator pos:line="36" pos:column="18">=<pos:position pos:line="36" pos:column="19"/></operator> <name pos:line="36" pos:column="20">mnt_list<pos:position pos:line="36" pos:column="28"/></name></expr>;<pos:position pos:line="36" pos:column="29"/></init> <condition><expr><name pos:line="36" pos:column="30">dup_ptr<pos:position pos:line="36" pos:column="37"/></name> <operator pos:line="36" pos:column="38">!=<pos:position pos:line="36" pos:column="40"/></operator> <name pos:line="36" pos:column="41">NULL<pos:position pos:line="36" pos:column="45"/></name></expr>;<pos:position pos:line="36" pos:column="46"/></condition> <incr><expr><name pos:line="36" pos:column="47">dup_ptr<pos:position pos:line="36" pos:column="54"/></name> <operator pos:line="36" pos:column="55">=<pos:position pos:line="36" pos:column="56"/></operator> <name><name pos:line="36" pos:column="57">dup_ptr<pos:position pos:line="36" pos:column="64"/></name><operator pos:line="36" pos:column="64">-&gt;<pos:position pos:line="36" pos:column="69"/></operator><name pos:line="36" pos:column="66">next<pos:position pos:line="36" pos:column="70"/></name></name></expr></incr>)<pos:position pos:line="36" pos:column="71"/></control> <block pos:line="36" pos:column="72">{
      <comment type="block" pos:line="37" pos:column="7">/* No duplicate found: mnt_ptr is the first of its kind. */</comment>
      <if pos:line="38" pos:column="7">if <condition pos:line="38" pos:column="10">(<expr><name pos:line="38" pos:column="11">dup_ptr<pos:position pos:line="38" pos:column="18"/></name> <operator pos:line="38" pos:column="19">==<pos:position pos:line="38" pos:column="21"/></operator> <name pos:line="38" pos:column="22">mnt_ptr<pos:position pos:line="38" pos:column="29"/></name></expr>)<pos:position pos:line="38" pos:column="30"/></condition><then pos:line="38" pos:column="30"> <block pos:line="38" pos:column="31">{
        <expr_stmt><expr><name pos:line="39" pos:column="9">dup_ptr<pos:position pos:line="39" pos:column="16"/></name> <operator pos:line="39" pos:column="17">=<pos:position pos:line="39" pos:column="18"/></operator> <name pos:line="39" pos:column="19">NULL<pos:position pos:line="39" pos:column="23"/></name></expr>;<pos:position pos:line="39" pos:column="24"/></expr_stmt>
        <break pos:line="40" pos:column="9">break;<pos:position pos:line="40" pos:column="15"/></break>
      }<pos:position pos:line="41" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="43" pos:column="7">/* Duplicate found: leave non-NULL dup_ptr. */</comment>
      <if pos:line="44" pos:column="7">if <condition pos:line="44" pos:column="10">(<expr><name pos:line="44" pos:column="11">by_device<pos:position pos:line="44" pos:column="20"/></name> <operator pos:line="44" pos:column="21">&amp;&amp;<pos:position pos:line="44" pos:column="31"/></operator> <operator pos:line="44" pos:column="24">(<pos:position pos:line="44" pos:column="25"/></operator><name><name pos:line="44" pos:column="25">mnt_ptr<pos:position pos:line="44" pos:column="32"/></name><operator pos:line="44" pos:column="32">-&gt;<pos:position pos:line="44" pos:column="37"/></operator><name pos:line="44" pos:column="34">spec_device<pos:position pos:line="44" pos:column="45"/></name></name> <operator pos:line="44" pos:column="46">!=<pos:position pos:line="44" pos:column="48"/></operator> <name pos:line="44" pos:column="49">NULL<pos:position pos:line="44" pos:column="53"/></name><operator pos:line="44" pos:column="53">)<pos:position pos:line="44" pos:column="54"/></operator> <operator pos:line="44" pos:column="55">&amp;&amp;<pos:position pos:line="44" pos:column="65"/></operator>
          <operator pos:line="45" pos:column="11">(<pos:position pos:line="45" pos:column="12"/></operator><name><name pos:line="45" pos:column="12">dup_ptr<pos:position pos:line="45" pos:column="19"/></name><operator pos:line="45" pos:column="19">-&gt;<pos:position pos:line="45" pos:column="24"/></operator><name pos:line="45" pos:column="21">spec_device<pos:position pos:line="45" pos:column="32"/></name></name> <operator pos:line="45" pos:column="33">!=<pos:position pos:line="45" pos:column="35"/></operator> <name pos:line="45" pos:column="36">NULL<pos:position pos:line="45" pos:column="40"/></name><operator pos:line="45" pos:column="40">)<pos:position pos:line="45" pos:column="41"/></operator> <operator pos:line="45" pos:column="42">&amp;&amp;<pos:position pos:line="45" pos:column="52"/></operator>
          <operator pos:line="46" pos:column="11">(<pos:position pos:line="46" pos:column="12"/></operator><call><name pos:line="46" pos:column="12">strcmp<pos:position pos:line="46" pos:column="18"/></name><argument_list pos:line="46" pos:column="18">(<argument><expr><name><name pos:line="46" pos:column="19">mnt_ptr<pos:position pos:line="46" pos:column="26"/></name><operator pos:line="46" pos:column="26">-&gt;<pos:position pos:line="46" pos:column="31"/></operator><name pos:line="46" pos:column="28">spec_device<pos:position pos:line="46" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="41">dup_ptr<pos:position pos:line="46" pos:column="48"/></name><operator pos:line="46" pos:column="48">-&gt;<pos:position pos:line="46" pos:column="53"/></operator><name pos:line="46" pos:column="50">spec_device<pos:position pos:line="46" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="62"/></argument_list></call> <operator pos:line="46" pos:column="63">==<pos:position pos:line="46" pos:column="65"/></operator> <literal type="number" pos:line="46" pos:column="66">0<pos:position pos:line="46" pos:column="67"/></literal><operator pos:line="46" pos:column="67">)<pos:position pos:line="46" pos:column="68"/></operator></expr>)<pos:position pos:line="46" pos:column="69"/></condition><then pos:line="46" pos:column="69">
        <block type="pseudo"><break pos:line="47" pos:column="9">break;<pos:position pos:line="47" pos:column="15"/></break></block></then>
      <elseif pos:line="48" pos:column="7">else <if pos:line="48" pos:column="12">if <condition pos:line="48" pos:column="15">(<expr><operator pos:line="48" pos:column="16">!<pos:position pos:line="48" pos:column="17"/></operator><name pos:line="48" pos:column="17">by_device<pos:position pos:line="48" pos:column="26"/></name> <operator pos:line="48" pos:column="27">&amp;&amp;<pos:position pos:line="48" pos:column="37"/></operator> <operator pos:line="48" pos:column="30">(<pos:position pos:line="48" pos:column="31"/></operator><call><name pos:line="48" pos:column="31">strcmp<pos:position pos:line="48" pos:column="37"/></name><argument_list pos:line="48" pos:column="37">(<argument><expr><name><name pos:line="48" pos:column="38">mnt_ptr<pos:position pos:line="48" pos:column="45"/></name><operator pos:line="48" pos:column="45">-&gt;<pos:position pos:line="48" pos:column="50"/></operator><name pos:line="48" pos:column="47">dir<pos:position pos:line="48" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="52">dup_ptr<pos:position pos:line="48" pos:column="59"/></name><operator pos:line="48" pos:column="59">-&gt;<pos:position pos:line="48" pos:column="64"/></operator><name pos:line="48" pos:column="61">dir<pos:position pos:line="48" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="65"/></argument_list></call> <operator pos:line="48" pos:column="66">==<pos:position pos:line="48" pos:column="68"/></operator> <literal type="number" pos:line="48" pos:column="69">0<pos:position pos:line="48" pos:column="70"/></literal><operator pos:line="48" pos:column="70">)<pos:position pos:line="48" pos:column="71"/></operator></expr>)<pos:position pos:line="48" pos:column="72"/></condition><then pos:line="48" pos:column="72">
        <block type="pseudo"><break pos:line="49" pos:column="9">break;<pos:position pos:line="49" pos:column="15"/></break></block></then></if></elseif></if>
    }<pos:position pos:line="50" pos:column="6"/></block></for>

    <comment type="block" pos:line="52" pos:column="5">/* ignore duplicates */</comment>
    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><name pos:line="53" pos:column="9">dup_ptr<pos:position pos:line="53" pos:column="16"/></name> <operator pos:line="53" pos:column="17">!=<pos:position pos:line="53" pos:column="19"/></operator> <name pos:line="53" pos:column="20">NULL<pos:position pos:line="53" pos:column="24"/></name></expr>)<pos:position pos:line="53" pos:column="25"/></condition><then pos:line="53" pos:column="25">
      <block type="pseudo"><continue pos:line="54" pos:column="7">continue;<pos:position pos:line="54" pos:column="16"/></continue></block></then></if>

    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><call><name pos:line="56" pos:column="9">STATANYFS<pos:position pos:line="56" pos:column="18"/></name><argument_list pos:line="56" pos:column="18">(<argument><expr><name><name pos:line="56" pos:column="19">mnt_ptr<pos:position pos:line="56" pos:column="26"/></name><operator pos:line="56" pos:column="26">-&gt;<pos:position pos:line="56" pos:column="31"/></operator><name pos:line="56" pos:column="28">dir<pos:position pos:line="56" pos:column="31"/></name></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="33">&amp;<pos:position pos:line="56" pos:column="38"/></operator><name pos:line="56" pos:column="34">statbuf<pos:position pos:line="56" pos:column="41"/></name></expr></argument>)<pos:position pos:line="56" pos:column="42"/></argument_list></call> <operator pos:line="56" pos:column="43">&lt;<pos:position pos:line="56" pos:column="47"/></operator> <literal type="number" pos:line="56" pos:column="45">0<pos:position pos:line="56" pos:column="46"/></literal></expr>)<pos:position pos:line="56" pos:column="47"/></condition><then pos:line="56" pos:column="47"> <block pos:line="56" pos:column="48">{
      <decl_stmt><decl><type><name pos:line="57" pos:column="7">char<pos:position pos:line="57" pos:column="11"/></name></type> <name><name pos:line="57" pos:column="12">errbuf<pos:position pos:line="57" pos:column="18"/></name><index pos:line="57" pos:column="18">[<expr><literal type="number" pos:line="57" pos:column="19">1024<pos:position pos:line="57" pos:column="23"/></literal></expr>]<pos:position pos:line="57" pos:column="24"/></index></name></decl>;<pos:position pos:line="57" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="58" pos:column="7">ERROR<pos:position pos:line="58" pos:column="12"/></name><argument_list pos:line="58" pos:column="12">(<argument><expr><name pos:line="58" pos:column="13">STATANYFS_STR<pos:position pos:line="58" pos:column="26"/></name> <literal type="string" pos:line="58" pos:column="27">"(%s) failed: %s"<pos:position pos:line="58" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="46">mnt_ptr<pos:position pos:line="58" pos:column="53"/></name><operator pos:line="58" pos:column="53">-&gt;<pos:position pos:line="58" pos:column="58"/></operator><name pos:line="58" pos:column="55">dir<pos:position pos:line="58" pos:column="58"/></name></name></expr></argument>,
            <argument><expr><call><name pos:line="59" pos:column="13">sstrerror<pos:position pos:line="59" pos:column="22"/></name><argument_list pos:line="59" pos:column="22">(<argument><expr><name pos:line="59" pos:column="23">errno<pos:position pos:line="59" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="30">errbuf<pos:position pos:line="59" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="59" pos:column="38">sizeof<argument_list pos:line="59" pos:column="44">(<argument><expr><name pos:line="59" pos:column="45">errbuf<pos:position pos:line="59" pos:column="51"/></name></expr></argument>)<pos:position pos:line="59" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="59" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="59" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="55"/></expr_stmt>
      <continue pos:line="60" pos:column="7">continue;<pos:position pos:line="60" pos:column="16"/></continue>
    }<pos:position pos:line="61" pos:column="6"/></block></then></if>

    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><operator pos:line="63" pos:column="9">!<pos:position pos:line="63" pos:column="10"/></operator><name><name pos:line="63" pos:column="10">statbuf<pos:position pos:line="63" pos:column="17"/></name><operator pos:line="63" pos:column="17">.<pos:position pos:line="63" pos:column="18"/></operator><name pos:line="63" pos:column="18">f_blocks<pos:position pos:line="63" pos:column="26"/></name></name></expr>)<pos:position pos:line="63" pos:column="27"/></condition><then pos:line="63" pos:column="27">
      <block type="pseudo"><continue pos:line="64" pos:column="7">continue;<pos:position pos:line="64" pos:column="16"/></continue></block></then></if>

    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><name pos:line="66" pos:column="9">by_device<pos:position pos:line="66" pos:column="18"/></name></expr>)<pos:position pos:line="66" pos:column="19"/></condition><then pos:line="66" pos:column="19"> <block pos:line="66" pos:column="20">{
      <comment type="block" pos:line="67" pos:column="7">/* eg, /dev/hda1  -- strip off the "/dev/" */</comment>
      <if pos:line="68" pos:column="7">if <condition pos:line="68" pos:column="10">(<expr><call><name pos:line="68" pos:column="11">strncmp<pos:position pos:line="68" pos:column="18"/></name><argument_list pos:line="68" pos:column="18">(<argument><expr><name pos:line="68" pos:column="19">dev<pos:position pos:line="68" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="24">"/dev/"<pos:position pos:line="68" pos:column="31"/></literal></expr></argument>, <argument><expr><call><name pos:line="68" pos:column="33">strlen<pos:position pos:line="68" pos:column="39"/></name><argument_list pos:line="68" pos:column="39">(<argument><expr><literal type="string" pos:line="68" pos:column="40">"/dev/"<pos:position pos:line="68" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="68" pos:column="49"/></argument_list></call> <operator pos:line="68" pos:column="50">==<pos:position pos:line="68" pos:column="52"/></operator> <literal type="number" pos:line="68" pos:column="53">0<pos:position pos:line="68" pos:column="54"/></literal></expr>)<pos:position pos:line="68" pos:column="55"/></condition><then pos:line="68" pos:column="55">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="69" pos:column="9">sstrncpy<pos:position pos:line="69" pos:column="17"/></name><argument_list pos:line="69" pos:column="17">(<argument><expr><name pos:line="69" pos:column="18">disk_name<pos:position pos:line="69" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="29">dev<pos:position pos:line="69" pos:column="32"/></name> <operator pos:line="69" pos:column="33">+<pos:position pos:line="69" pos:column="34"/></operator> <call><name pos:line="69" pos:column="35">strlen<pos:position pos:line="69" pos:column="41"/></name><argument_list pos:line="69" pos:column="41">(<argument><expr><literal type="string" pos:line="69" pos:column="42">"/dev/"<pos:position pos:line="69" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="69" pos:column="52">sizeof<argument_list pos:line="69" pos:column="58">(<argument><expr><name pos:line="69" pos:column="59">disk_name<pos:position pos:line="69" pos:column="68"/></name></expr></argument>)<pos:position pos:line="69" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="69" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="71"/></expr_stmt></block></then>
      <else pos:line="70" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="71" pos:column="9">sstrncpy<pos:position pos:line="71" pos:column="17"/></name><argument_list pos:line="71" pos:column="17">(<argument><expr><name pos:line="71" pos:column="18">disk_name<pos:position pos:line="71" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="29">dev<pos:position pos:line="71" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="71" pos:column="34">sizeof<argument_list pos:line="71" pos:column="40">(<argument><expr><name pos:line="71" pos:column="41">disk_name<pos:position pos:line="71" pos:column="50"/></name></expr></argument>)<pos:position pos:line="71" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="71" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="53"/></expr_stmt></block></else></if>

      <if pos:line="73" pos:column="7">if <condition pos:line="73" pos:column="10">(<expr><call><name pos:line="73" pos:column="11">strlen<pos:position pos:line="73" pos:column="17"/></name><argument_list pos:line="73" pos:column="17">(<argument><expr><name pos:line="73" pos:column="18">disk_name<pos:position pos:line="73" pos:column="27"/></name></expr></argument>)<pos:position pos:line="73" pos:column="28"/></argument_list></call> <operator pos:line="73" pos:column="29">&lt;<pos:position pos:line="73" pos:column="33"/></operator> <literal type="number" pos:line="73" pos:column="31">1<pos:position pos:line="73" pos:column="32"/></literal></expr>)<pos:position pos:line="73" pos:column="33"/></condition><then pos:line="73" pos:column="33"> <block pos:line="73" pos:column="34">{
        <expr_stmt><expr><call><name pos:line="74" pos:column="9">DEBUG<pos:position pos:line="74" pos:column="14"/></name><argument_list pos:line="74" pos:column="14">(<argument><expr><literal type="string" pos:line="74" pos:column="15">"df: no device name for mountpoint %s, skipping"<pos:position pos:line="74" pos:column="63"/></literal></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="65">mnt_ptr<pos:position pos:line="74" pos:column="72"/></name><operator pos:line="74" pos:column="72">-&gt;<pos:position pos:line="74" pos:column="77"/></operator><name pos:line="74" pos:column="74">dir<pos:position pos:line="74" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="79"/></expr_stmt>
        <continue pos:line="75" pos:column="9">continue;<pos:position pos:line="75" pos:column="18"/></continue>
      }<pos:position pos:line="76" pos:column="8"/></block></then></if>
    }<pos:position pos:line="77" pos:column="6"/></block></then> <else pos:line="77" pos:column="7">else <block pos:line="77" pos:column="12">{
      <if pos:line="78" pos:column="7">if <condition pos:line="78" pos:column="10">(<expr><call><name pos:line="78" pos:column="11">strcmp<pos:position pos:line="78" pos:column="17"/></name><argument_list pos:line="78" pos:column="17">(<argument><expr><name><name pos:line="78" pos:column="18">mnt_ptr<pos:position pos:line="78" pos:column="25"/></name><operator pos:line="78" pos:column="25">-&gt;<pos:position pos:line="78" pos:column="30"/></operator><name pos:line="78" pos:column="27">dir<pos:position pos:line="78" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="32">"/"<pos:position pos:line="78" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="36"/></argument_list></call> <operator pos:line="78" pos:column="37">==<pos:position pos:line="78" pos:column="39"/></operator> <literal type="number" pos:line="78" pos:column="40">0<pos:position pos:line="78" pos:column="41"/></literal></expr>)<pos:position pos:line="78" pos:column="42"/></condition><then pos:line="78" pos:column="42">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="79" pos:column="9">sstrncpy<pos:position pos:line="79" pos:column="17"/></name><argument_list pos:line="79" pos:column="17">(<argument><expr><name pos:line="79" pos:column="18">disk_name<pos:position pos:line="79" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="29">"root"<pos:position pos:line="79" pos:column="35"/></literal></expr></argument>, <argument><expr><sizeof pos:line="79" pos:column="37">sizeof<argument_list pos:line="79" pos:column="43">(<argument><expr><name pos:line="79" pos:column="44">disk_name<pos:position pos:line="79" pos:column="53"/></name></expr></argument>)<pos:position pos:line="79" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="79" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="56"/></expr_stmt></block></then>
      <else pos:line="80" pos:column="7">else <block pos:line="80" pos:column="12">{
        <decl_stmt><decl><type><name pos:line="81" pos:column="9">int<pos:position pos:line="81" pos:column="12"/></name></type> <name pos:line="81" pos:column="13">len<pos:position pos:line="81" pos:column="16"/></name></decl>;<pos:position pos:line="81" pos:column="17"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="83" pos:column="9">sstrncpy<pos:position pos:line="83" pos:column="17"/></name><argument_list pos:line="83" pos:column="17">(<argument><expr><name pos:line="83" pos:column="18">disk_name<pos:position pos:line="83" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="83" pos:column="29">mnt_ptr<pos:position pos:line="83" pos:column="36"/></name><operator pos:line="83" pos:column="36">-&gt;<pos:position pos:line="83" pos:column="41"/></operator><name pos:line="83" pos:column="38">dir<pos:position pos:line="83" pos:column="41"/></name></name> <operator pos:line="83" pos:column="42">+<pos:position pos:line="83" pos:column="43"/></operator> <literal type="number" pos:line="83" pos:column="44">1<pos:position pos:line="83" pos:column="45"/></literal></expr></argument>, <argument><expr><sizeof pos:line="83" pos:column="47">sizeof<argument_list pos:line="83" pos:column="53">(<argument><expr><name pos:line="83" pos:column="54">disk_name<pos:position pos:line="83" pos:column="63"/></name></expr></argument>)<pos:position pos:line="83" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="83" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="66"/></expr_stmt>
        <expr_stmt><expr><name pos:line="84" pos:column="9">len<pos:position pos:line="84" pos:column="12"/></name> <operator pos:line="84" pos:column="13">=<pos:position pos:line="84" pos:column="14"/></operator> <call><name pos:line="84" pos:column="15">strlen<pos:position pos:line="84" pos:column="21"/></name><argument_list pos:line="84" pos:column="21">(<argument><expr><name pos:line="84" pos:column="22">disk_name<pos:position pos:line="84" pos:column="31"/></name></expr></argument>)<pos:position pos:line="84" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="33"/></expr_stmt>

        <for pos:line="86" pos:column="9">for <control pos:line="86" pos:column="13">(<init><decl><type><name pos:line="86" pos:column="14">int<pos:position pos:line="86" pos:column="17"/></name></type> <name pos:line="86" pos:column="18">i<pos:position pos:line="86" pos:column="19"/></name> <init pos:line="86" pos:column="20">= <expr><literal type="number" pos:line="86" pos:column="22">0<pos:position pos:line="86" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="86" pos:column="24"/></init> <condition><expr><name pos:line="86" pos:column="25">i<pos:position pos:line="86" pos:column="26"/></name> <operator pos:line="86" pos:column="27">&lt;<pos:position pos:line="86" pos:column="31"/></operator> <name pos:line="86" pos:column="29">len<pos:position pos:line="86" pos:column="32"/></name></expr>;<pos:position pos:line="86" pos:column="33"/></condition> <incr><expr><name pos:line="86" pos:column="34">i<pos:position pos:line="86" pos:column="35"/></name><operator pos:line="86" pos:column="35">++<pos:position pos:line="86" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="86" pos:column="38"/></control>
          <block type="pseudo"><if pos:line="87" pos:column="11">if <condition pos:line="87" pos:column="14">(<expr><name><name pos:line="87" pos:column="15">disk_name<pos:position pos:line="87" pos:column="24"/></name><index pos:line="87" pos:column="24">[<expr><name pos:line="87" pos:column="25">i<pos:position pos:line="87" pos:column="26"/></name></expr>]<pos:position pos:line="87" pos:column="27"/></index></name> <operator pos:line="87" pos:column="28">==<pos:position pos:line="87" pos:column="30"/></operator> <literal type="char" pos:line="87" pos:column="31">'/'<pos:position pos:line="87" pos:column="34"/></literal></expr>)<pos:position pos:line="87" pos:column="35"/></condition><then pos:line="87" pos:column="35">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="88" pos:column="13">disk_name<pos:position pos:line="88" pos:column="22"/></name><index pos:line="88" pos:column="22">[<expr><name pos:line="88" pos:column="23">i<pos:position pos:line="88" pos:column="24"/></name></expr>]<pos:position pos:line="88" pos:column="25"/></index></name> <operator pos:line="88" pos:column="26">=<pos:position pos:line="88" pos:column="27"/></operator> <literal type="char" pos:line="88" pos:column="28">'-'<pos:position pos:line="88" pos:column="31"/></literal></expr>;<pos:position pos:line="88" pos:column="32"/></expr_stmt></block></then></if></block></for>
      }<pos:position pos:line="89" pos:column="8"/></block></else></if>
    }<pos:position pos:line="90" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name pos:line="92" pos:column="5">blocksize<pos:position pos:line="92" pos:column="14"/></name> <operator pos:line="92" pos:column="15">=<pos:position pos:line="92" pos:column="16"/></operator> <call><name pos:line="92" pos:column="17">BLOCKSIZE<pos:position pos:line="92" pos:column="26"/></name><argument_list pos:line="92" pos:column="26">(<argument><expr><name pos:line="92" pos:column="27">statbuf<pos:position pos:line="92" pos:column="34"/></name></expr></argument>)<pos:position pos:line="92" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="36"/></expr_stmt>

<comment type="block" pos:line="94" pos:column="1">/*
 * Sanity-check for the values in the struct
 */</comment>
<comment type="block" pos:line="97" pos:column="1">/* Check for negative "available" byes. For example UFS can
 * report negative free space for user. Notice. blk_reserved
 * will start to diminish after this. */</comment>
<cpp:if pos:line="100" pos:column="1">#<cpp:directive pos:line="100" pos:column="2">if<pos:position pos:line="100" pos:column="4"/></cpp:directive> <expr><name pos:line="100" pos:column="5">HAVE_STATVFS<pos:position pos:line="100" pos:column="17"/></name></expr></cpp:if>
    <comment type="block" pos:line="101" pos:column="5">/* Cast and temporary variable are needed to avoid
     * compiler warnings.
     * ((struct statvfs).f_bavail is unsigned (POSIX)) */</comment>
    <decl_stmt><decl><type><name pos:line="104" pos:column="5">int64_t<pos:position pos:line="104" pos:column="12"/></name></type> <name pos:line="104" pos:column="13">signed_bavail<pos:position pos:line="104" pos:column="26"/></name> <init pos:line="104" pos:column="27">= <expr><operator pos:line="104" pos:column="29">(<pos:position pos:line="104" pos:column="30"/></operator><name pos:line="104" pos:column="30">int64_t<pos:position pos:line="104" pos:column="37"/></name><operator pos:line="104" pos:column="37">)<pos:position pos:line="104" pos:column="38"/></operator><name><name pos:line="104" pos:column="38">statbuf<pos:position pos:line="104" pos:column="45"/></name><operator pos:line="104" pos:column="45">.<pos:position pos:line="104" pos:column="46"/></operator><name pos:line="104" pos:column="46">f_bavail<pos:position pos:line="104" pos:column="54"/></name></name></expr></init></decl>;<pos:position pos:line="104" pos:column="55"/></decl_stmt>
    <if pos:line="105" pos:column="5">if <condition pos:line="105" pos:column="8">(<expr><name pos:line="105" pos:column="9">signed_bavail<pos:position pos:line="105" pos:column="22"/></name> <operator pos:line="105" pos:column="23">&lt;<pos:position pos:line="105" pos:column="27"/></operator> <literal type="number" pos:line="105" pos:column="25">0<pos:position pos:line="105" pos:column="26"/></literal></expr>)<pos:position pos:line="105" pos:column="27"/></condition><then pos:line="105" pos:column="27">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="106" pos:column="7">statbuf<pos:position pos:line="106" pos:column="14"/></name><operator pos:line="106" pos:column="14">.<pos:position pos:line="106" pos:column="15"/></operator><name pos:line="106" pos:column="15">f_bavail<pos:position pos:line="106" pos:column="23"/></name></name> <operator pos:line="106" pos:column="24">=<pos:position pos:line="106" pos:column="25"/></operator> <literal type="number" pos:line="106" pos:column="26">0<pos:position pos:line="106" pos:column="27"/></literal></expr>;<pos:position pos:line="106" pos:column="28"/></expr_stmt></block></then></if>
<cpp:elif pos:line="107" pos:column="1">#<cpp:directive pos:line="107" pos:column="2">elif<pos:position pos:line="107" pos:column="6"/></cpp:directive> <expr><name pos:line="107" pos:column="7">HAVE_STATFS<pos:position pos:line="107" pos:column="18"/></name></expr></cpp:elif>
    <if pos:line="108" pos:column="5">if <condition pos:line="108" pos:column="8">(<expr><name><name pos:line="108" pos:column="9">statbuf<pos:position pos:line="108" pos:column="16"/></name><operator pos:line="108" pos:column="16">.<pos:position pos:line="108" pos:column="17"/></operator><name pos:line="108" pos:column="17">f_bavail<pos:position pos:line="108" pos:column="25"/></name></name> <operator pos:line="108" pos:column="26">&lt;<pos:position pos:line="108" pos:column="30"/></operator> <literal type="number" pos:line="108" pos:column="28">0<pos:position pos:line="108" pos:column="29"/></literal></expr>)<pos:position pos:line="108" pos:column="30"/></condition><then pos:line="108" pos:column="30">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="109" pos:column="7">statbuf<pos:position pos:line="109" pos:column="14"/></name><operator pos:line="109" pos:column="14">.<pos:position pos:line="109" pos:column="15"/></operator><name pos:line="109" pos:column="15">f_bavail<pos:position pos:line="109" pos:column="23"/></name></name> <operator pos:line="109" pos:column="24">=<pos:position pos:line="109" pos:column="25"/></operator> <literal type="number" pos:line="109" pos:column="26">0<pos:position pos:line="109" pos:column="27"/></literal></expr>;<pos:position pos:line="109" pos:column="28"/></expr_stmt></block></then></if>
<cpp:endif pos:line="110" pos:column="1">#<cpp:directive pos:line="110" pos:column="2">endif<pos:position pos:line="110" pos:column="7"/></cpp:directive></cpp:endif>
    <comment type="block" pos:line="111" pos:column="5">/* Make sure that f_blocks &gt;= f_bfree &gt;= f_bavail */</comment>
    <if pos:line="112" pos:column="5">if <condition pos:line="112" pos:column="8">(<expr><name><name pos:line="112" pos:column="9">statbuf<pos:position pos:line="112" pos:column="16"/></name><operator pos:line="112" pos:column="16">.<pos:position pos:line="112" pos:column="17"/></operator><name pos:line="112" pos:column="17">f_bfree<pos:position pos:line="112" pos:column="24"/></name></name> <operator pos:line="112" pos:column="25">&lt;<pos:position pos:line="112" pos:column="29"/></operator> <name><name pos:line="112" pos:column="27">statbuf<pos:position pos:line="112" pos:column="34"/></name><operator pos:line="112" pos:column="34">.<pos:position pos:line="112" pos:column="35"/></operator><name pos:line="112" pos:column="35">f_bavail<pos:position pos:line="112" pos:column="43"/></name></name></expr>)<pos:position pos:line="112" pos:column="44"/></condition><then pos:line="112" pos:column="44">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="113" pos:column="7">statbuf<pos:position pos:line="113" pos:column="14"/></name><operator pos:line="113" pos:column="14">.<pos:position pos:line="113" pos:column="15"/></operator><name pos:line="113" pos:column="15">f_bfree<pos:position pos:line="113" pos:column="22"/></name></name> <operator pos:line="113" pos:column="23">=<pos:position pos:line="113" pos:column="24"/></operator> <name><name pos:line="113" pos:column="25">statbuf<pos:position pos:line="113" pos:column="32"/></name><operator pos:line="113" pos:column="32">.<pos:position pos:line="113" pos:column="33"/></operator><name pos:line="113" pos:column="33">f_bavail<pos:position pos:line="113" pos:column="41"/></name></name></expr>;<pos:position pos:line="113" pos:column="42"/></expr_stmt></block></then></if>
    <if pos:line="114" pos:column="5">if <condition pos:line="114" pos:column="8">(<expr><name><name pos:line="114" pos:column="9">statbuf<pos:position pos:line="114" pos:column="16"/></name><operator pos:line="114" pos:column="16">.<pos:position pos:line="114" pos:column="17"/></operator><name pos:line="114" pos:column="17">f_blocks<pos:position pos:line="114" pos:column="25"/></name></name> <operator pos:line="114" pos:column="26">&lt;<pos:position pos:line="114" pos:column="30"/></operator> <name><name pos:line="114" pos:column="28">statbuf<pos:position pos:line="114" pos:column="35"/></name><operator pos:line="114" pos:column="35">.<pos:position pos:line="114" pos:column="36"/></operator><name pos:line="114" pos:column="36">f_bfree<pos:position pos:line="114" pos:column="43"/></name></name></expr>)<pos:position pos:line="114" pos:column="44"/></condition><then pos:line="114" pos:column="44">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="115" pos:column="7">statbuf<pos:position pos:line="115" pos:column="14"/></name><operator pos:line="115" pos:column="14">.<pos:position pos:line="115" pos:column="15"/></operator><name pos:line="115" pos:column="15">f_blocks<pos:position pos:line="115" pos:column="23"/></name></name> <operator pos:line="115" pos:column="24">=<pos:position pos:line="115" pos:column="25"/></operator> <name><name pos:line="115" pos:column="26">statbuf<pos:position pos:line="115" pos:column="33"/></name><operator pos:line="115" pos:column="33">.<pos:position pos:line="115" pos:column="34"/></operator><name pos:line="115" pos:column="34">f_bfree<pos:position pos:line="115" pos:column="41"/></name></name></expr>;<pos:position pos:line="115" pos:column="42"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="117" pos:column="5">blk_free<pos:position pos:line="117" pos:column="13"/></name> <operator pos:line="117" pos:column="14">=<pos:position pos:line="117" pos:column="15"/></operator> <operator pos:line="117" pos:column="16">(<pos:position pos:line="117" pos:column="17"/></operator><name pos:line="117" pos:column="17">uint64_t<pos:position pos:line="117" pos:column="25"/></name><operator pos:line="117" pos:column="25">)<pos:position pos:line="117" pos:column="26"/></operator><name><name pos:line="117" pos:column="26">statbuf<pos:position pos:line="117" pos:column="33"/></name><operator pos:line="117" pos:column="33">.<pos:position pos:line="117" pos:column="34"/></operator><name pos:line="117" pos:column="34">f_bavail<pos:position pos:line="117" pos:column="42"/></name></name></expr>;<pos:position pos:line="117" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name pos:line="118" pos:column="5">blk_reserved<pos:position pos:line="118" pos:column="17"/></name> <operator pos:line="118" pos:column="18">=<pos:position pos:line="118" pos:column="19"/></operator> <call pos:line="118" pos:column="20">(<name pos:line="118" pos:column="21">uint64_t<pos:position pos:line="118" pos:column="29"/></name>)<argument_list pos:line="118" pos:column="30">(<argument><expr><name><name pos:line="118" pos:column="31">statbuf<pos:position pos:line="118" pos:column="38"/></name><operator pos:line="118" pos:column="38">.<pos:position pos:line="118" pos:column="39"/></operator><name pos:line="118" pos:column="39">f_bfree<pos:position pos:line="118" pos:column="46"/></name></name> <operator pos:line="118" pos:column="47">-<pos:position pos:line="118" pos:column="48"/></operator> <name><name pos:line="118" pos:column="49">statbuf<pos:position pos:line="118" pos:column="56"/></name><operator pos:line="118" pos:column="56">.<pos:position pos:line="118" pos:column="57"/></operator><name pos:line="118" pos:column="57">f_bavail<pos:position pos:line="118" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="118" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="67"/></expr_stmt>
    <expr_stmt><expr><name pos:line="119" pos:column="5">blk_used<pos:position pos:line="119" pos:column="13"/></name> <operator pos:line="119" pos:column="14">=<pos:position pos:line="119" pos:column="15"/></operator> <call pos:line="119" pos:column="16">(<name pos:line="119" pos:column="17">uint64_t<pos:position pos:line="119" pos:column="25"/></name>)<argument_list pos:line="119" pos:column="26">(<argument><expr><name><name pos:line="119" pos:column="27">statbuf<pos:position pos:line="119" pos:column="34"/></name><operator pos:line="119" pos:column="34">.<pos:position pos:line="119" pos:column="35"/></operator><name pos:line="119" pos:column="35">f_blocks<pos:position pos:line="119" pos:column="43"/></name></name> <operator pos:line="119" pos:column="44">-<pos:position pos:line="119" pos:column="45"/></operator> <name><name pos:line="119" pos:column="46">statbuf<pos:position pos:line="119" pos:column="53"/></name><operator pos:line="119" pos:column="53">.<pos:position pos:line="119" pos:column="54"/></operator><name pos:line="119" pos:column="54">f_bfree<pos:position pos:line="119" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="119" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="63"/></expr_stmt>

    <if pos:line="121" pos:column="5">if <condition pos:line="121" pos:column="8">(<expr><name pos:line="121" pos:column="9">values_absolute<pos:position pos:line="121" pos:column="24"/></name></expr>)<pos:position pos:line="121" pos:column="25"/></condition><then pos:line="121" pos:column="25"> <block pos:line="121" pos:column="26">{
      <expr_stmt><expr><call><name pos:line="122" pos:column="7">df_submit_one<pos:position pos:line="122" pos:column="20"/></name><argument_list pos:line="122" pos:column="20">(<argument><expr><name pos:line="122" pos:column="21">disk_name<pos:position pos:line="122" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="122" pos:column="32">"df_complex"<pos:position pos:line="122" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="122" pos:column="46">"free"<pos:position pos:line="122" pos:column="52"/></literal></expr></argument>,
                    <argument><expr><call pos:line="123" pos:column="21">(<name pos:line="123" pos:column="22">gauge_t<pos:position pos:line="123" pos:column="29"/></name>)<argument_list pos:line="123" pos:column="30">(<argument><expr><name pos:line="123" pos:column="31">blk_free<pos:position pos:line="123" pos:column="39"/></name> <operator pos:line="123" pos:column="40">*<pos:position pos:line="123" pos:column="41"/></operator> <name pos:line="123" pos:column="42">blocksize<pos:position pos:line="123" pos:column="51"/></name></expr></argument>)<pos:position pos:line="123" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="123" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="54"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="124" pos:column="7">df_submit_one<pos:position pos:line="124" pos:column="20"/></name><argument_list pos:line="124" pos:column="20">(<argument><expr><name pos:line="124" pos:column="21">disk_name<pos:position pos:line="124" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="124" pos:column="32">"df_complex"<pos:position pos:line="124" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="124" pos:column="46">"reserved"<pos:position pos:line="124" pos:column="56"/></literal></expr></argument>,
                    <argument><expr><call pos:line="125" pos:column="21">(<name pos:line="125" pos:column="22">gauge_t<pos:position pos:line="125" pos:column="29"/></name>)<argument_list pos:line="125" pos:column="30">(<argument><expr><name pos:line="125" pos:column="31">blk_reserved<pos:position pos:line="125" pos:column="43"/></name> <operator pos:line="125" pos:column="44">*<pos:position pos:line="125" pos:column="45"/></operator> <name pos:line="125" pos:column="46">blocksize<pos:position pos:line="125" pos:column="55"/></name></expr></argument>)<pos:position pos:line="125" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="125" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="58"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="126" pos:column="7">df_submit_one<pos:position pos:line="126" pos:column="20"/></name><argument_list pos:line="126" pos:column="20">(<argument><expr><name pos:line="126" pos:column="21">disk_name<pos:position pos:line="126" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="126" pos:column="32">"df_complex"<pos:position pos:line="126" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="126" pos:column="46">"used"<pos:position pos:line="126" pos:column="52"/></literal></expr></argument>,
                    <argument><expr><call pos:line="127" pos:column="21">(<name pos:line="127" pos:column="22">gauge_t<pos:position pos:line="127" pos:column="29"/></name>)<argument_list pos:line="127" pos:column="30">(<argument><expr><name pos:line="127" pos:column="31">blk_used<pos:position pos:line="127" pos:column="39"/></name> <operator pos:line="127" pos:column="40">*<pos:position pos:line="127" pos:column="41"/></operator> <name pos:line="127" pos:column="42">blocksize<pos:position pos:line="127" pos:column="51"/></name></expr></argument>)<pos:position pos:line="127" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="127" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="128" pos:column="6"/></block></then></if>

    <if pos:line="130" pos:column="5">if <condition pos:line="130" pos:column="8">(<expr><name pos:line="130" pos:column="9">values_percentage<pos:position pos:line="130" pos:column="26"/></name></expr>)<pos:position pos:line="130" pos:column="27"/></condition><then pos:line="130" pos:column="27"> <block pos:line="130" pos:column="28">{
      <if pos:line="131" pos:column="7">if <condition pos:line="131" pos:column="10">(<expr><name><name pos:line="131" pos:column="11">statbuf<pos:position pos:line="131" pos:column="18"/></name><operator pos:line="131" pos:column="18">.<pos:position pos:line="131" pos:column="19"/></operator><name pos:line="131" pos:column="19">f_blocks<pos:position pos:line="131" pos:column="27"/></name></name> <operator pos:line="131" pos:column="28">&gt;<pos:position pos:line="131" pos:column="32"/></operator> <literal type="number" pos:line="131" pos:column="30">0<pos:position pos:line="131" pos:column="31"/></literal></expr>)<pos:position pos:line="131" pos:column="32"/></condition><then pos:line="131" pos:column="32"> <block pos:line="131" pos:column="33">{
        <expr_stmt><expr><call><name pos:line="132" pos:column="9">df_submit_one<pos:position pos:line="132" pos:column="22"/></name><argument_list pos:line="132" pos:column="22">(<argument><expr><name pos:line="132" pos:column="23">disk_name<pos:position pos:line="132" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="132" pos:column="34">"percent_bytes"<pos:position pos:line="132" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="132" pos:column="51">"free"<pos:position pos:line="132" pos:column="57"/></literal></expr></argument>,
                      <argument><expr><call pos:line="133" pos:column="23">(<name pos:line="133" pos:column="24">gauge_t<pos:position pos:line="133" pos:column="31"/></name>)<argument_list pos:line="133" pos:column="32">(<argument><expr><call pos:line="133" pos:column="33">(<name pos:line="133" pos:column="34">float_t<pos:position pos:line="133" pos:column="41"/></name>)<argument_list pos:line="133" pos:column="42">(<argument><expr><name pos:line="133" pos:column="43">blk_free<pos:position pos:line="133" pos:column="51"/></name></expr></argument>)<pos:position pos:line="133" pos:column="52"/></argument_list></call> <operator pos:line="133" pos:column="53">/<pos:position pos:line="133" pos:column="54"/></operator> <name><name pos:line="133" pos:column="55">statbuf<pos:position pos:line="133" pos:column="62"/></name><operator pos:line="133" pos:column="62">.<pos:position pos:line="133" pos:column="63"/></operator><name pos:line="133" pos:column="63">f_blocks<pos:position pos:line="133" pos:column="71"/></name></name> <operator pos:line="133" pos:column="72">*<pos:position pos:line="133" pos:column="73"/></operator> <literal type="number" pos:line="133" pos:column="74">100<pos:position pos:line="133" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="133" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="133" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="80"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="134" pos:column="9">df_submit_one<pos:position pos:line="134" pos:column="22"/></name><argument_list pos:line="134" pos:column="22">(
            <argument><expr><name pos:line="135" pos:column="13">disk_name<pos:position pos:line="135" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="135" pos:column="24">"percent_bytes"<pos:position pos:line="135" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="135" pos:column="41">"reserved"<pos:position pos:line="135" pos:column="51"/></literal></expr></argument>,
            <argument><expr><call pos:line="136" pos:column="13">(<name pos:line="136" pos:column="14">gauge_t<pos:position pos:line="136" pos:column="21"/></name>)<argument_list pos:line="136" pos:column="22">(<argument><expr><call pos:line="136" pos:column="23">(<name pos:line="136" pos:column="24">float_t<pos:position pos:line="136" pos:column="31"/></name>)<argument_list pos:line="136" pos:column="32">(<argument><expr><name pos:line="136" pos:column="33">blk_reserved<pos:position pos:line="136" pos:column="45"/></name></expr></argument>)<pos:position pos:line="136" pos:column="46"/></argument_list></call> <operator pos:line="136" pos:column="47">/<pos:position pos:line="136" pos:column="48"/></operator> <name><name pos:line="136" pos:column="49">statbuf<pos:position pos:line="136" pos:column="56"/></name><operator pos:line="136" pos:column="56">.<pos:position pos:line="136" pos:column="57"/></operator><name pos:line="136" pos:column="57">f_blocks<pos:position pos:line="136" pos:column="65"/></name></name> <operator pos:line="136" pos:column="66">*<pos:position pos:line="136" pos:column="67"/></operator> <literal type="number" pos:line="136" pos:column="68">100<pos:position pos:line="136" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="136" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="136" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="74"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="137" pos:column="9">df_submit_one<pos:position pos:line="137" pos:column="22"/></name><argument_list pos:line="137" pos:column="22">(<argument><expr><name pos:line="137" pos:column="23">disk_name<pos:position pos:line="137" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="137" pos:column="34">"percent_bytes"<pos:position pos:line="137" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="137" pos:column="51">"used"<pos:position pos:line="137" pos:column="57"/></literal></expr></argument>,
                      <argument><expr><call pos:line="138" pos:column="23">(<name pos:line="138" pos:column="24">gauge_t<pos:position pos:line="138" pos:column="31"/></name>)<argument_list pos:line="138" pos:column="32">(<argument><expr><call pos:line="138" pos:column="33">(<name pos:line="138" pos:column="34">float_t<pos:position pos:line="138" pos:column="41"/></name>)<argument_list pos:line="138" pos:column="42">(<argument><expr><name pos:line="138" pos:column="43">blk_used<pos:position pos:line="138" pos:column="51"/></name></expr></argument>)<pos:position pos:line="138" pos:column="52"/></argument_list></call> <operator pos:line="138" pos:column="53">/<pos:position pos:line="138" pos:column="54"/></operator> <name><name pos:line="138" pos:column="55">statbuf<pos:position pos:line="138" pos:column="62"/></name><operator pos:line="138" pos:column="62">.<pos:position pos:line="138" pos:column="63"/></operator><name pos:line="138" pos:column="63">f_blocks<pos:position pos:line="138" pos:column="71"/></name></name> <operator pos:line="138" pos:column="72">*<pos:position pos:line="138" pos:column="73"/></operator> <literal type="number" pos:line="138" pos:column="74">100<pos:position pos:line="138" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="138" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="138" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="80"/></expr_stmt>
      }<pos:position pos:line="139" pos:column="8"/></block></then> <else pos:line="139" pos:column="9">else
        <block type="pseudo"><return pos:line="140" pos:column="9">return <expr><operator pos:line="140" pos:column="16">-<pos:position pos:line="140" pos:column="17"/></operator><literal type="number" pos:line="140" pos:column="17">1<pos:position pos:line="140" pos:column="18"/></literal></expr>;<pos:position pos:line="140" pos:column="19"/></return></block></else></if>
    }<pos:position pos:line="141" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="143" pos:column="5">/* inode handling */</comment>
    <if pos:line="144" pos:column="5">if <condition pos:line="144" pos:column="8">(<expr><name pos:line="144" pos:column="9">report_inodes<pos:position pos:line="144" pos:column="22"/></name> <operator pos:line="144" pos:column="23">&amp;&amp;<pos:position pos:line="144" pos:column="33"/></operator> <name><name pos:line="144" pos:column="26">statbuf<pos:position pos:line="144" pos:column="33"/></name><operator pos:line="144" pos:column="33">.<pos:position pos:line="144" pos:column="34"/></operator><name pos:line="144" pos:column="34">f_files<pos:position pos:line="144" pos:column="41"/></name></name> <operator pos:line="144" pos:column="42">!=<pos:position pos:line="144" pos:column="44"/></operator> <literal type="number" pos:line="144" pos:column="45">0<pos:position pos:line="144" pos:column="46"/></literal> <operator pos:line="144" pos:column="47">&amp;&amp;<pos:position pos:line="144" pos:column="57"/></operator> <name><name pos:line="144" pos:column="50">statbuf<pos:position pos:line="144" pos:column="57"/></name><operator pos:line="144" pos:column="57">.<pos:position pos:line="144" pos:column="58"/></operator><name pos:line="144" pos:column="58">f_ffree<pos:position pos:line="144" pos:column="65"/></name></name> <operator pos:line="144" pos:column="66">!=<pos:position pos:line="144" pos:column="68"/></operator> <literal type="number" pos:line="144" pos:column="69">0<pos:position pos:line="144" pos:column="70"/></literal></expr>)<pos:position pos:line="144" pos:column="71"/></condition><then pos:line="144" pos:column="71"> <block pos:line="144" pos:column="72">{
      <decl_stmt><decl><type><name pos:line="145" pos:column="7">uint64_t<pos:position pos:line="145" pos:column="15"/></name></type> <name pos:line="145" pos:column="16">inode_free<pos:position pos:line="145" pos:column="26"/></name></decl>;<pos:position pos:line="145" pos:column="27"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="146" pos:column="7">uint64_t<pos:position pos:line="146" pos:column="15"/></name></type> <name pos:line="146" pos:column="16">inode_reserved<pos:position pos:line="146" pos:column="30"/></name></decl>;<pos:position pos:line="146" pos:column="31"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="147" pos:column="7">uint64_t<pos:position pos:line="147" pos:column="15"/></name></type> <name pos:line="147" pos:column="16">inode_used<pos:position pos:line="147" pos:column="26"/></name></decl>;<pos:position pos:line="147" pos:column="27"/></decl_stmt>

      <comment type="block" pos:line="149" pos:column="7">/* Sanity-check for the values in the struct */</comment>
      <if pos:line="150" pos:column="7">if <condition pos:line="150" pos:column="10">(<expr><name><name pos:line="150" pos:column="11">statbuf<pos:position pos:line="150" pos:column="18"/></name><operator pos:line="150" pos:column="18">.<pos:position pos:line="150" pos:column="19"/></operator><name pos:line="150" pos:column="19">f_ffree<pos:position pos:line="150" pos:column="26"/></name></name> <operator pos:line="150" pos:column="27">&lt;<pos:position pos:line="150" pos:column="31"/></operator> <name><name pos:line="150" pos:column="29">statbuf<pos:position pos:line="150" pos:column="36"/></name><operator pos:line="150" pos:column="36">.<pos:position pos:line="150" pos:column="37"/></operator><name pos:line="150" pos:column="37">f_favail<pos:position pos:line="150" pos:column="45"/></name></name></expr>)<pos:position pos:line="150" pos:column="46"/></condition><then pos:line="150" pos:column="46">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="151" pos:column="9">statbuf<pos:position pos:line="151" pos:column="16"/></name><operator pos:line="151" pos:column="16">.<pos:position pos:line="151" pos:column="17"/></operator><name pos:line="151" pos:column="17">f_ffree<pos:position pos:line="151" pos:column="24"/></name></name> <operator pos:line="151" pos:column="25">=<pos:position pos:line="151" pos:column="26"/></operator> <name><name pos:line="151" pos:column="27">statbuf<pos:position pos:line="151" pos:column="34"/></name><operator pos:line="151" pos:column="34">.<pos:position pos:line="151" pos:column="35"/></operator><name pos:line="151" pos:column="35">f_favail<pos:position pos:line="151" pos:column="43"/></name></name></expr>;<pos:position pos:line="151" pos:column="44"/></expr_stmt></block></then></if>
      <if pos:line="152" pos:column="7">if <condition pos:line="152" pos:column="10">(<expr><name><name pos:line="152" pos:column="11">statbuf<pos:position pos:line="152" pos:column="18"/></name><operator pos:line="152" pos:column="18">.<pos:position pos:line="152" pos:column="19"/></operator><name pos:line="152" pos:column="19">f_files<pos:position pos:line="152" pos:column="26"/></name></name> <operator pos:line="152" pos:column="27">&lt;<pos:position pos:line="152" pos:column="31"/></operator> <name><name pos:line="152" pos:column="29">statbuf<pos:position pos:line="152" pos:column="36"/></name><operator pos:line="152" pos:column="36">.<pos:position pos:line="152" pos:column="37"/></operator><name pos:line="152" pos:column="37">f_ffree<pos:position pos:line="152" pos:column="44"/></name></name></expr>)<pos:position pos:line="152" pos:column="45"/></condition><then pos:line="152" pos:column="45">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="153" pos:column="9">statbuf<pos:position pos:line="153" pos:column="16"/></name><operator pos:line="153" pos:column="16">.<pos:position pos:line="153" pos:column="17"/></operator><name pos:line="153" pos:column="17">f_files<pos:position pos:line="153" pos:column="24"/></name></name> <operator pos:line="153" pos:column="25">=<pos:position pos:line="153" pos:column="26"/></operator> <name><name pos:line="153" pos:column="27">statbuf<pos:position pos:line="153" pos:column="34"/></name><operator pos:line="153" pos:column="34">.<pos:position pos:line="153" pos:column="35"/></operator><name pos:line="153" pos:column="35">f_ffree<pos:position pos:line="153" pos:column="42"/></name></name></expr>;<pos:position pos:line="153" pos:column="43"/></expr_stmt></block></then></if>

      <expr_stmt><expr><name pos:line="155" pos:column="7">inode_free<pos:position pos:line="155" pos:column="17"/></name> <operator pos:line="155" pos:column="18">=<pos:position pos:line="155" pos:column="19"/></operator> <operator pos:line="155" pos:column="20">(<pos:position pos:line="155" pos:column="21"/></operator><name pos:line="155" pos:column="21">uint64_t<pos:position pos:line="155" pos:column="29"/></name><operator pos:line="155" pos:column="29">)<pos:position pos:line="155" pos:column="30"/></operator><name><name pos:line="155" pos:column="30">statbuf<pos:position pos:line="155" pos:column="37"/></name><operator pos:line="155" pos:column="37">.<pos:position pos:line="155" pos:column="38"/></operator><name pos:line="155" pos:column="38">f_favail<pos:position pos:line="155" pos:column="46"/></name></name></expr>;<pos:position pos:line="155" pos:column="47"/></expr_stmt>
      <expr_stmt><expr><name pos:line="156" pos:column="7">inode_reserved<pos:position pos:line="156" pos:column="21"/></name> <operator pos:line="156" pos:column="22">=<pos:position pos:line="156" pos:column="23"/></operator> <call pos:line="156" pos:column="24">(<name pos:line="156" pos:column="25">uint64_t<pos:position pos:line="156" pos:column="33"/></name>)<argument_list pos:line="156" pos:column="34">(<argument><expr><name><name pos:line="156" pos:column="35">statbuf<pos:position pos:line="156" pos:column="42"/></name><operator pos:line="156" pos:column="42">.<pos:position pos:line="156" pos:column="43"/></operator><name pos:line="156" pos:column="43">f_ffree<pos:position pos:line="156" pos:column="50"/></name></name> <operator pos:line="156" pos:column="51">-<pos:position pos:line="156" pos:column="52"/></operator> <name><name pos:line="156" pos:column="53">statbuf<pos:position pos:line="156" pos:column="60"/></name><operator pos:line="156" pos:column="60">.<pos:position pos:line="156" pos:column="61"/></operator><name pos:line="156" pos:column="61">f_favail<pos:position pos:line="156" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="156" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="71"/></expr_stmt>
      <expr_stmt><expr><name pos:line="157" pos:column="7">inode_used<pos:position pos:line="157" pos:column="17"/></name> <operator pos:line="157" pos:column="18">=<pos:position pos:line="157" pos:column="19"/></operator> <call pos:line="157" pos:column="20">(<name pos:line="157" pos:column="21">uint64_t<pos:position pos:line="157" pos:column="29"/></name>)<argument_list pos:line="157" pos:column="30">(<argument><expr><name><name pos:line="157" pos:column="31">statbuf<pos:position pos:line="157" pos:column="38"/></name><operator pos:line="157" pos:column="38">.<pos:position pos:line="157" pos:column="39"/></operator><name pos:line="157" pos:column="39">f_files<pos:position pos:line="157" pos:column="46"/></name></name> <operator pos:line="157" pos:column="47">-<pos:position pos:line="157" pos:column="48"/></operator> <name><name pos:line="157" pos:column="49">statbuf<pos:position pos:line="157" pos:column="56"/></name><operator pos:line="157" pos:column="56">.<pos:position pos:line="157" pos:column="57"/></operator><name pos:line="157" pos:column="57">f_ffree<pos:position pos:line="157" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="157" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="66"/></expr_stmt>

      <if pos:line="159" pos:column="7">if <condition pos:line="159" pos:column="10">(<expr><name pos:line="159" pos:column="11">values_percentage<pos:position pos:line="159" pos:column="28"/></name></expr>)<pos:position pos:line="159" pos:column="29"/></condition><then pos:line="159" pos:column="29"> <block pos:line="159" pos:column="30">{
        <if pos:line="160" pos:column="9">if <condition pos:line="160" pos:column="12">(<expr><name><name pos:line="160" pos:column="13">statbuf<pos:position pos:line="160" pos:column="20"/></name><operator pos:line="160" pos:column="20">.<pos:position pos:line="160" pos:column="21"/></operator><name pos:line="160" pos:column="21">f_files<pos:position pos:line="160" pos:column="28"/></name></name> <operator pos:line="160" pos:column="29">&gt;<pos:position pos:line="160" pos:column="33"/></operator> <literal type="number" pos:line="160" pos:column="31">0<pos:position pos:line="160" pos:column="32"/></literal></expr>)<pos:position pos:line="160" pos:column="33"/></condition><then pos:line="160" pos:column="33"> <block pos:line="160" pos:column="34">{
          <expr_stmt><expr><call><name pos:line="161" pos:column="11">df_submit_one<pos:position pos:line="161" pos:column="24"/></name><argument_list pos:line="161" pos:column="24">(
              <argument><expr><name pos:line="162" pos:column="15">disk_name<pos:position pos:line="162" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="162" pos:column="26">"percent_inodes"<pos:position pos:line="162" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="162" pos:column="44">"free"<pos:position pos:line="162" pos:column="50"/></literal></expr></argument>,
              <argument><expr><call pos:line="163" pos:column="15">(<name pos:line="163" pos:column="16">gauge_t<pos:position pos:line="163" pos:column="23"/></name>)<argument_list pos:line="163" pos:column="24">(<argument><expr><call pos:line="163" pos:column="25">(<name pos:line="163" pos:column="26">float_t<pos:position pos:line="163" pos:column="33"/></name>)<argument_list pos:line="163" pos:column="34">(<argument><expr><name pos:line="163" pos:column="35">inode_free<pos:position pos:line="163" pos:column="45"/></name></expr></argument>)<pos:position pos:line="163" pos:column="46"/></argument_list></call> <operator pos:line="163" pos:column="47">/<pos:position pos:line="163" pos:column="48"/></operator> <name><name pos:line="163" pos:column="49">statbuf<pos:position pos:line="163" pos:column="56"/></name><operator pos:line="163" pos:column="56">.<pos:position pos:line="163" pos:column="57"/></operator><name pos:line="163" pos:column="57">f_files<pos:position pos:line="163" pos:column="64"/></name></name> <operator pos:line="163" pos:column="65">*<pos:position pos:line="163" pos:column="66"/></operator> <literal type="number" pos:line="163" pos:column="67">100<pos:position pos:line="163" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="163" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="163" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="73"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="164" pos:column="11">df_submit_one<pos:position pos:line="164" pos:column="24"/></name><argument_list pos:line="164" pos:column="24">(
              <argument><expr><name pos:line="165" pos:column="15">disk_name<pos:position pos:line="165" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="165" pos:column="26">"percent_inodes"<pos:position pos:line="165" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="165" pos:column="44">"reserved"<pos:position pos:line="165" pos:column="54"/></literal></expr></argument>,
              <argument><expr><call pos:line="166" pos:column="15">(<name pos:line="166" pos:column="16">gauge_t<pos:position pos:line="166" pos:column="23"/></name>)<argument_list pos:line="166" pos:column="24">(<argument><expr><call pos:line="166" pos:column="25">(<name pos:line="166" pos:column="26">float_t<pos:position pos:line="166" pos:column="33"/></name>)<argument_list pos:line="166" pos:column="34">(<argument><expr><name pos:line="166" pos:column="35">inode_reserved<pos:position pos:line="166" pos:column="49"/></name></expr></argument>)<pos:position pos:line="166" pos:column="50"/></argument_list></call> <operator pos:line="166" pos:column="51">/<pos:position pos:line="166" pos:column="52"/></operator> <name><name pos:line="166" pos:column="53">statbuf<pos:position pos:line="166" pos:column="60"/></name><operator pos:line="166" pos:column="60">.<pos:position pos:line="166" pos:column="61"/></operator><name pos:line="166" pos:column="61">f_files<pos:position pos:line="166" pos:column="68"/></name></name> <operator pos:line="166" pos:column="69">*<pos:position pos:line="166" pos:column="70"/></operator> <literal type="number" pos:line="166" pos:column="71">100<pos:position pos:line="166" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="166" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="166" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="77"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="167" pos:column="11">df_submit_one<pos:position pos:line="167" pos:column="24"/></name><argument_list pos:line="167" pos:column="24">(
              <argument><expr><name pos:line="168" pos:column="15">disk_name<pos:position pos:line="168" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="168" pos:column="26">"percent_inodes"<pos:position pos:line="168" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="168" pos:column="44">"used"<pos:position pos:line="168" pos:column="50"/></literal></expr></argument>,
              <argument><expr><call pos:line="169" pos:column="15">(<name pos:line="169" pos:column="16">gauge_t<pos:position pos:line="169" pos:column="23"/></name>)<argument_list pos:line="169" pos:column="24">(<argument><expr><call pos:line="169" pos:column="25">(<name pos:line="169" pos:column="26">float_t<pos:position pos:line="169" pos:column="33"/></name>)<argument_list pos:line="169" pos:column="34">(<argument><expr><name pos:line="169" pos:column="35">inode_used<pos:position pos:line="169" pos:column="45"/></name></expr></argument>)<pos:position pos:line="169" pos:column="46"/></argument_list></call> <operator pos:line="169" pos:column="47">/<pos:position pos:line="169" pos:column="48"/></operator> <name><name pos:line="169" pos:column="49">statbuf<pos:position pos:line="169" pos:column="56"/></name><operator pos:line="169" pos:column="56">.<pos:position pos:line="169" pos:column="57"/></operator><name pos:line="169" pos:column="57">f_files<pos:position pos:line="169" pos:column="64"/></name></name> <operator pos:line="169" pos:column="65">*<pos:position pos:line="169" pos:column="66"/></operator> <literal type="number" pos:line="169" pos:column="67">100<pos:position pos:line="169" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="169" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="169" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="73"/></expr_stmt>
        }<pos:position pos:line="170" pos:column="10"/></block></then> <else pos:line="170" pos:column="11">else
          <block type="pseudo"><return pos:line="171" pos:column="11">return <expr><operator pos:line="171" pos:column="18">-<pos:position pos:line="171" pos:column="19"/></operator><literal type="number" pos:line="171" pos:column="19">1<pos:position pos:line="171" pos:column="20"/></literal></expr>;<pos:position pos:line="171" pos:column="21"/></return></block></else></if>
      }<pos:position pos:line="172" pos:column="8"/></block></then></if>
      <if pos:line="173" pos:column="7">if <condition pos:line="173" pos:column="10">(<expr><name pos:line="173" pos:column="11">values_absolute<pos:position pos:line="173" pos:column="26"/></name></expr>)<pos:position pos:line="173" pos:column="27"/></condition><then pos:line="173" pos:column="27"> <block pos:line="173" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="174" pos:column="9">df_submit_one<pos:position pos:line="174" pos:column="22"/></name><argument_list pos:line="174" pos:column="22">(<argument><expr><name pos:line="174" pos:column="23">disk_name<pos:position pos:line="174" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="174" pos:column="34">"df_inodes"<pos:position pos:line="174" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="174" pos:column="47">"free"<pos:position pos:line="174" pos:column="53"/></literal></expr></argument>, <argument><expr><operator pos:line="174" pos:column="55">(<pos:position pos:line="174" pos:column="56"/></operator><name pos:line="174" pos:column="56">gauge_t<pos:position pos:line="174" pos:column="63"/></name><operator pos:line="174" pos:column="63">)<pos:position pos:line="174" pos:column="64"/></operator><name pos:line="174" pos:column="64">inode_free<pos:position pos:line="174" pos:column="74"/></name></expr></argument>)<pos:position pos:line="174" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="76"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="175" pos:column="9">df_submit_one<pos:position pos:line="175" pos:column="22"/></name><argument_list pos:line="175" pos:column="22">(<argument><expr><name pos:line="175" pos:column="23">disk_name<pos:position pos:line="175" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="175" pos:column="34">"df_inodes"<pos:position pos:line="175" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="175" pos:column="47">"reserved"<pos:position pos:line="175" pos:column="57"/></literal></expr></argument>,
                      <argument><expr><operator pos:line="176" pos:column="23">(<pos:position pos:line="176" pos:column="24"/></operator><name pos:line="176" pos:column="24">gauge_t<pos:position pos:line="176" pos:column="31"/></name><operator pos:line="176" pos:column="31">)<pos:position pos:line="176" pos:column="32"/></operator><name pos:line="176" pos:column="32">inode_reserved<pos:position pos:line="176" pos:column="46"/></name></expr></argument>)<pos:position pos:line="176" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="177" pos:column="9">df_submit_one<pos:position pos:line="177" pos:column="22"/></name><argument_list pos:line="177" pos:column="22">(<argument><expr><name pos:line="177" pos:column="23">disk_name<pos:position pos:line="177" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="177" pos:column="34">"df_inodes"<pos:position pos:line="177" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="177" pos:column="47">"used"<pos:position pos:line="177" pos:column="53"/></literal></expr></argument>, <argument><expr><operator pos:line="177" pos:column="55">(<pos:position pos:line="177" pos:column="56"/></operator><name pos:line="177" pos:column="56">gauge_t<pos:position pos:line="177" pos:column="63"/></name><operator pos:line="177" pos:column="63">)<pos:position pos:line="177" pos:column="64"/></operator><name pos:line="177" pos:column="64">inode_used<pos:position pos:line="177" pos:column="74"/></name></expr></argument>)<pos:position pos:line="177" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="76"/></expr_stmt>
      }<pos:position pos:line="178" pos:column="8"/></block></then></if>
    }<pos:position pos:line="179" pos:column="6"/></block></then></if>
  }<pos:position pos:line="180" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="182" pos:column="3">cu_mount_freelist<pos:position pos:line="182" pos:column="20"/></name><argument_list pos:line="182" pos:column="20">(<argument><expr><name pos:line="182" pos:column="21">mnt_list<pos:position pos:line="182" pos:column="29"/></name></expr></argument>)<pos:position pos:line="182" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="31"/></expr_stmt>

  <return pos:line="184" pos:column="3">return <expr><literal type="number" pos:line="184" pos:column="10">0<pos:position pos:line="184" pos:column="11"/></literal></expr>;<pos:position pos:line="184" pos:column="12"/></return>
}<pos:position pos:line="185" pos:column="2"/></block></function></unit>

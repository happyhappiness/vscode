<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_651_collectd-4.7.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">pplugin_write<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">pTHX_<pos:position pos:line="1" pos:column="32"/></name> <specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">plugin<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">AV<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">data_set<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="67">HV<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">values<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">data_set_t<pos:position pos:line="3" pos:column="19"/></name></type>   <name pos:line="3" pos:column="22">ds<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">value_list_t<pos:position pos:line="4" pos:column="21"/></name></type> <name pos:line="4" pos:column="22">vl<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><name pos:line="4" pos:column="27">VALUE_LIST_INIT<pos:position pos:line="4" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">ret<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">NULL<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">==<pos:position pos:line="8" pos:column="20"/></operator> <name pos:line="8" pos:column="21">values<pos:position pos:line="8" pos:column="27"/></name></expr>)<pos:position pos:line="8" pos:column="28"/></condition><then pos:line="8" pos:column="28">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><operator pos:line="9" pos:column="24">-<pos:position pos:line="9" pos:column="25"/></operator><literal type="number" pos:line="9" pos:column="25">1<pos:position pos:line="9" pos:column="26"/></literal></expr>;<pos:position pos:line="9" pos:column="27"/></return></block></then></if>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><literal type="number" pos:line="11" pos:column="13">0<pos:position pos:line="11" pos:column="14"/></literal> <operator pos:line="11" pos:column="15">!=<pos:position pos:line="11" pos:column="17"/></operator> <macro><name pos:line="11" pos:column="18">hv2value_list<pos:position pos:line="11" pos:column="31"/></name> <argument_list pos:line="11" pos:column="32">(<argument pos:line="11" pos:column="33">aTHX_ values<pos:position pos:line="11" pos:column="45"/></argument>, <argument pos:line="11" pos:column="47">&amp;vl<pos:position pos:line="11" pos:column="50"/></argument>)<pos:position pos:line="11" pos:column="51"/></argument_list></macro></expr>)<pos:position pos:line="11" pos:column="52"/></condition><then pos:line="11" pos:column="52">
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><operator pos:line="12" pos:column="24">-<pos:position pos:line="12" pos:column="25"/></operator><literal type="number" pos:line="12" pos:column="25">1<pos:position pos:line="12" pos:column="26"/></literal></expr>;<pos:position pos:line="12" pos:column="27"/></return></block></then></if>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">(<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">NULL<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">!=<pos:position pos:line="14" pos:column="21"/></operator> <name pos:line="14" pos:column="22">data_set<pos:position pos:line="14" pos:column="30"/></name><operator pos:line="14" pos:column="30">)<pos:position pos:line="14" pos:column="31"/></operator>
			<operator pos:line="15" pos:column="25">&amp;&amp;<pos:position pos:line="15" pos:column="35"/></operator> <operator pos:line="15" pos:column="28">(<pos:position pos:line="15" pos:column="29"/></operator><literal type="number" pos:line="15" pos:column="29">0<pos:position pos:line="15" pos:column="30"/></literal> <operator pos:line="15" pos:column="31">!=<pos:position pos:line="15" pos:column="33"/></operator> <macro><name pos:line="15" pos:column="34">av2data_set<pos:position pos:line="15" pos:column="45"/></name> <argument_list pos:line="15" pos:column="46">(<argument pos:line="15" pos:column="47">aTHX_ data_set<pos:position pos:line="15" pos:column="61"/></argument>, <argument pos:line="15" pos:column="63">vl.type<pos:position pos:line="15" pos:column="70"/></argument>, <argument pos:line="15" pos:column="72">&amp;ds<pos:position pos:line="15" pos:column="75"/></argument>)<pos:position pos:line="15" pos:column="76"/></argument_list></macro><operator pos:line="15" pos:column="76">)<pos:position pos:line="15" pos:column="77"/></operator></expr>)<pos:position pos:line="15" pos:column="78"/></condition><then pos:line="15" pos:column="78">
		<block type="pseudo"><return pos:line="16" pos:column="17">return <expr><operator pos:line="16" pos:column="24">-<pos:position pos:line="16" pos:column="25"/></operator><literal type="number" pos:line="16" pos:column="25">1<pos:position pos:line="16" pos:column="26"/></literal></expr>;<pos:position pos:line="16" pos:column="27"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="18" pos:column="9">ret<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <call><name pos:line="18" pos:column="15">plugin_write<pos:position pos:line="18" pos:column="27"/></name> <argument_list pos:line="18" pos:column="28">(<argument><expr><name pos:line="18" pos:column="29">plugin<pos:position pos:line="18" pos:column="35"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="18" pos:column="37">NULL<pos:position pos:line="18" pos:column="41"/></name> <operator pos:line="18" pos:column="42">==<pos:position pos:line="18" pos:column="44"/></operator> <name pos:line="18" pos:column="45">data_set<pos:position pos:line="18" pos:column="53"/></name></expr> ?<pos:position pos:line="18" pos:column="55"/></condition><then pos:line="18" pos:column="55"> <expr><name pos:line="18" pos:column="56">NULL<pos:position pos:line="18" pos:column="60"/></name></expr> <pos:position pos:line="18" pos:column="61"/></then><else pos:line="18" pos:column="61">: <expr><operator pos:line="18" pos:column="63">&amp;<pos:position pos:line="18" pos:column="68"/></operator><name pos:line="18" pos:column="64">ds<pos:position pos:line="18" pos:column="66"/></name></expr></else></ternary></expr></argument>, <argument><expr><operator pos:line="18" pos:column="68">&amp;<pos:position pos:line="18" pos:column="73"/></operator><name pos:line="18" pos:column="69">vl<pos:position pos:line="18" pos:column="71"/></name></expr></argument>)<pos:position pos:line="18" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="73"/></expr_stmt>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><literal type="number" pos:line="19" pos:column="13">0<pos:position pos:line="19" pos:column="14"/></literal> <operator pos:line="19" pos:column="15">!=<pos:position pos:line="19" pos:column="17"/></operator> <name pos:line="19" pos:column="18">ret<pos:position pos:line="19" pos:column="21"/></name></expr>)<pos:position pos:line="19" pos:column="22"/></condition><then pos:line="19" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="17">log_warn<pos:position pos:line="20" pos:column="25"/></name> <argument_list pos:line="20" pos:column="26">(<argument><expr><literal type="string" pos:line="20" pos:column="27">"Dispatching value to plugin \"%s\" failed with status %i."<pos:position pos:line="20" pos:column="86"/></literal></expr></argument>,
				<argument><expr><ternary><condition><expr><name pos:line="21" pos:column="33">NULL<pos:position pos:line="21" pos:column="37"/></name> <operator pos:line="21" pos:column="38">==<pos:position pos:line="21" pos:column="40"/></operator> <name pos:line="21" pos:column="41">plugin<pos:position pos:line="21" pos:column="47"/></name></expr> ?<pos:position pos:line="21" pos:column="49"/></condition><then pos:line="21" pos:column="49"> <expr><literal type="string" pos:line="21" pos:column="50">"&lt;any&gt;"<pos:position pos:line="21" pos:column="63"/></literal></expr> <pos:position pos:line="21" pos:column="58"/></then><else pos:line="21" pos:column="58">: <expr><name pos:line="21" pos:column="60">plugin<pos:position pos:line="21" pos:column="66"/></name></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="21" pos:column="68">ret<pos:position pos:line="21" pos:column="71"/></name></expr></argument>)<pos:position pos:line="21" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="73"/></expr_stmt></block></then></if>

	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">NULL<pos:position pos:line="23" pos:column="17"/></name> <operator pos:line="23" pos:column="18">!=<pos:position pos:line="23" pos:column="20"/></operator> <name pos:line="23" pos:column="21">data_set<pos:position pos:line="23" pos:column="29"/></name></expr>)<pos:position pos:line="23" pos:column="30"/></condition><then pos:line="23" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="17">sfree<pos:position pos:line="24" pos:column="22"/></name> <argument_list pos:line="24" pos:column="23">(<argument><expr><name><name pos:line="24" pos:column="24">ds<pos:position pos:line="24" pos:column="26"/></name><operator pos:line="24" pos:column="26">.<pos:position pos:line="24" pos:column="27"/></operator><name pos:line="24" pos:column="27">ds<pos:position pos:line="24" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="31"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">sfree<pos:position pos:line="25" pos:column="14"/></name> <argument_list pos:line="25" pos:column="15">(<argument><expr><name><name pos:line="25" pos:column="16">vl<pos:position pos:line="25" pos:column="18"/></name><operator pos:line="25" pos:column="18">.<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="19">values<pos:position pos:line="25" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="27"/></expr_stmt>
	<return pos:line="26" pos:column="9">return <expr><name pos:line="26" pos:column="16">ret<pos:position pos:line="26" pos:column="19"/></name></expr>;<pos:position pos:line="26" pos:column="20"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

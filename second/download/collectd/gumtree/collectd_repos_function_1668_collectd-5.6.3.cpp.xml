<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1668_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">cconn_close<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">cconn<pos:position pos:line="1" pos:column="37"/></name></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">io<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list> <block pos:line="1" pos:column="43">{
  <expr_stmt><expr><name><name pos:line="2" pos:column="3">io<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">-&gt;<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="7">state<pos:position pos:line="2" pos:column="12"/></name></name> <operator pos:line="2" pos:column="13">=<pos:position pos:line="2" pos:column="14"/></operator> <name pos:line="2" pos:column="15">CSTATE_UNCONNECTED<pos:position pos:line="2" pos:column="33"/></name></expr>;<pos:position pos:line="2" pos:column="34"/></expr_stmt>
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><name><name pos:line="3" pos:column="7">io<pos:position pos:line="3" pos:column="9"/></name><operator pos:line="3" pos:column="9">-&gt;<pos:position pos:line="3" pos:column="14"/></operator><name pos:line="3" pos:column="11">asok<pos:position pos:line="3" pos:column="15"/></name></name> <operator pos:line="3" pos:column="16">!=<pos:position pos:line="3" pos:column="18"/></operator> <operator pos:line="3" pos:column="19">-<pos:position pos:line="3" pos:column="20"/></operator><literal type="number" pos:line="3" pos:column="20">1<pos:position pos:line="3" pos:column="21"/></literal></expr>)<pos:position pos:line="3" pos:column="22"/></condition><then pos:line="3" pos:column="22"> <block pos:line="3" pos:column="23">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">res<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">RETRY_ON_EINTR<pos:position pos:line="5" pos:column="19"/></name><argument_list pos:line="5" pos:column="19">(<argument><expr><name pos:line="5" pos:column="20">res<pos:position pos:line="5" pos:column="23"/></name></expr></argument>, <argument><expr><call><name pos:line="5" pos:column="25">close<pos:position pos:line="5" pos:column="30"/></name><argument_list pos:line="5" pos:column="30">(<argument><expr><name><name pos:line="5" pos:column="31">io<pos:position pos:line="5" pos:column="33"/></name><operator pos:line="5" pos:column="33">-&gt;<pos:position pos:line="5" pos:column="38"/></operator><name pos:line="5" pos:column="35">asok<pos:position pos:line="5" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="42"/></expr_stmt>
  }<pos:position pos:line="6" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="7" pos:column="3">io<pos:position pos:line="7" pos:column="5"/></name><operator pos:line="7" pos:column="5">-&gt;<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="7">asok<pos:position pos:line="7" pos:column="11"/></name></name> <operator pos:line="7" pos:column="12">=<pos:position pos:line="7" pos:column="13"/></operator> <operator pos:line="7" pos:column="14">-<pos:position pos:line="7" pos:column="15"/></operator><literal type="number" pos:line="7" pos:column="15">1<pos:position pos:line="7" pos:column="16"/></literal></expr>;<pos:position pos:line="7" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="8" pos:column="3">io<pos:position pos:line="8" pos:column="5"/></name><operator pos:line="8" pos:column="5">-&gt;<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="7">amt<pos:position pos:line="8" pos:column="10"/></name></name> <operator pos:line="8" pos:column="11">=<pos:position pos:line="8" pos:column="12"/></operator> <literal type="number" pos:line="8" pos:column="13">0<pos:position pos:line="8" pos:column="14"/></literal></expr>;<pos:position pos:line="8" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="9" pos:column="3">io<pos:position pos:line="9" pos:column="5"/></name><operator pos:line="9" pos:column="5">-&gt;<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="7">json_len<pos:position pos:line="9" pos:column="15"/></name></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <literal type="number" pos:line="9" pos:column="18">0<pos:position pos:line="9" pos:column="19"/></literal></expr>;<pos:position pos:line="9" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">sfree<pos:position pos:line="10" pos:column="8"/></name><argument_list pos:line="10" pos:column="8">(<argument><expr><name><name pos:line="10" pos:column="9">io<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">-&gt;<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="13">json<pos:position pos:line="10" pos:column="17"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="11" pos:column="3">io<pos:position pos:line="11" pos:column="5"/></name><operator pos:line="11" pos:column="5">-&gt;<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="7">json<pos:position pos:line="11" pos:column="11"/></name></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <name pos:line="11" pos:column="14">NULL<pos:position pos:line="11" pos:column="18"/></name></expr>;<pos:position pos:line="11" pos:column="19"/></expr_stmt>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

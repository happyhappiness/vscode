<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1937_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">sockent_server_listen<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">sockent_t<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">se<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list> <comment type="block" pos:line="1" pos:column="49">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">addrinfo<pos:position pos:line="3" pos:column="18"/></name></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">ai_list<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

  <decl_stmt><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">node<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">const<pos:position pos:line="7" pos:column="8"/></specifier> <name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">service<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">se<pos:position pos:line="9" pos:column="9"/></name> <operator pos:line="9" pos:column="10">==<pos:position pos:line="9" pos:column="12"/></operator> <name pos:line="9" pos:column="13">NULL<pos:position pos:line="9" pos:column="17"/></name></expr>)<pos:position pos:line="9" pos:column="18"/></condition><then pos:line="9" pos:column="18">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">(<pos:position pos:line="10" pos:column="13"/></operator><operator pos:line="10" pos:column="13">-<pos:position pos:line="10" pos:column="14"/></operator><literal type="number" pos:line="10" pos:column="14">1<pos:position pos:line="10" pos:column="15"/></literal><operator pos:line="10" pos:column="15">)<pos:position pos:line="10" pos:column="16"/></operator></expr>;<pos:position pos:line="10" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="12" pos:column="3">assert<pos:position pos:line="12" pos:column="9"/></name><argument_list pos:line="12" pos:column="9">(<argument><expr><name><name pos:line="12" pos:column="10">se<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">-&gt;<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="14">data<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">.<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="19">server<pos:position pos:line="12" pos:column="25"/></name><operator pos:line="12" pos:column="25">.<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="26">fd<pos:position pos:line="12" pos:column="28"/></name></name> <operator pos:line="12" pos:column="29">==<pos:position pos:line="12" pos:column="31"/></operator> <name pos:line="12" pos:column="32">NULL<pos:position pos:line="12" pos:column="36"/></name></expr></argument>)<pos:position pos:line="12" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">assert<pos:position pos:line="13" pos:column="9"/></name><argument_list pos:line="13" pos:column="9">(<argument><expr><name><name pos:line="13" pos:column="10">se<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">-&gt;<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="14">data<pos:position pos:line="13" pos:column="18"/></name><operator pos:line="13" pos:column="18">.<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="19">server<pos:position pos:line="13" pos:column="25"/></name><operator pos:line="13" pos:column="25">.<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="26">fd_num<pos:position pos:line="13" pos:column="32"/></name></name> <operator pos:line="13" pos:column="33">==<pos:position pos:line="13" pos:column="35"/></operator> <literal type="number" pos:line="13" pos:column="36">0<pos:position pos:line="13" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="39"/></expr_stmt>

  <expr_stmt><expr><name pos:line="15" pos:column="3">node<pos:position pos:line="15" pos:column="7"/></name> <operator pos:line="15" pos:column="8">=<pos:position pos:line="15" pos:column="9"/></operator> <name><name pos:line="15" pos:column="10">se<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">-&gt;<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="14">node<pos:position pos:line="15" pos:column="18"/></name></name></expr>;<pos:position pos:line="15" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name pos:line="16" pos:column="3">service<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <name><name pos:line="16" pos:column="13">se<pos:position pos:line="16" pos:column="15"/></name><operator pos:line="16" pos:column="15">-&gt;<pos:position pos:line="16" pos:column="20"/></operator><name pos:line="16" pos:column="17">service<pos:position pos:line="16" pos:column="24"/></name></name></expr>;<pos:position pos:line="16" pos:column="25"/></expr_stmt>

  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name pos:line="18" pos:column="7">service<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">==<pos:position pos:line="18" pos:column="17"/></operator> <name pos:line="18" pos:column="18">NULL<pos:position pos:line="18" pos:column="22"/></name></expr>)<pos:position pos:line="18" pos:column="23"/></condition><then pos:line="18" pos:column="23">
    <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="5">service<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <name pos:line="19" pos:column="15">NET_DEFAULT_PORT<pos:position pos:line="19" pos:column="31"/></name></expr>;<pos:position pos:line="19" pos:column="32"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="21" pos:column="3">DEBUG<pos:position pos:line="21" pos:column="8"/></name><argument_list pos:line="21" pos:column="8">(<argument><expr><literal type="string" pos:line="21" pos:column="9">"network plugin: sockent_server_listen: node = %s; service = %s;"<pos:position pos:line="21" pos:column="74"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="76">node<pos:position pos:line="21" pos:column="80"/></name></expr></argument>,
        <argument><expr><name pos:line="22" pos:column="9">service<pos:position pos:line="22" pos:column="16"/></name></expr></argument>)<pos:position pos:line="22" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="18"/></expr_stmt>

  <decl_stmt><decl><type><name><name pos:line="24" pos:column="3">struct<pos:position pos:line="24" pos:column="9"/></name> <name pos:line="24" pos:column="10">addrinfo<pos:position pos:line="24" pos:column="18"/></name></name></type> <name pos:line="24" pos:column="19">ai_hints<pos:position pos:line="24" pos:column="27"/></name> <init pos:line="24" pos:column="28">= <expr><block pos:line="24" pos:column="30">{<expr><operator pos:line="24" pos:column="31">.<pos:position pos:line="24" pos:column="32"/></operator><name pos:line="24" pos:column="32">ai_family<pos:position pos:line="24" pos:column="41"/></name> <operator pos:line="24" pos:column="42">=<pos:position pos:line="24" pos:column="43"/></operator> <name pos:line="24" pos:column="44">AF_UNSPEC<pos:position pos:line="24" pos:column="53"/></name></expr>,
                              <expr><operator pos:line="25" pos:column="31">.<pos:position pos:line="25" pos:column="32"/></operator><name pos:line="25" pos:column="32">ai_flags<pos:position pos:line="25" pos:column="40"/></name> <operator pos:line="25" pos:column="41">=<pos:position pos:line="25" pos:column="42"/></operator> <name pos:line="25" pos:column="43">AI_ADDRCONFIG<pos:position pos:line="25" pos:column="56"/></name> <operator pos:line="25" pos:column="57">|<pos:position pos:line="25" pos:column="58"/></operator> <name pos:line="25" pos:column="59">AI_PASSIVE<pos:position pos:line="25" pos:column="69"/></name></expr>,
                              <expr><operator pos:line="26" pos:column="31">.<pos:position pos:line="26" pos:column="32"/></operator><name pos:line="26" pos:column="32">ai_protocol<pos:position pos:line="26" pos:column="43"/></name> <operator pos:line="26" pos:column="44">=<pos:position pos:line="26" pos:column="45"/></operator> <name pos:line="26" pos:column="46">IPPROTO_UDP<pos:position pos:line="26" pos:column="57"/></name></expr>,
                              <expr><operator pos:line="27" pos:column="31">.<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="32">ai_socktype<pos:position pos:line="27" pos:column="43"/></name> <operator pos:line="27" pos:column="44">=<pos:position pos:line="27" pos:column="45"/></operator> <name pos:line="27" pos:column="46">SOCK_DGRAM<pos:position pos:line="27" pos:column="56"/></name></expr>}<pos:position pos:line="27" pos:column="57"/></block></expr></init></decl>;<pos:position pos:line="27" pos:column="58"/></decl_stmt>

  <expr_stmt><expr><name pos:line="29" pos:column="3">status<pos:position pos:line="29" pos:column="9"/></name> <operator pos:line="29" pos:column="10">=<pos:position pos:line="29" pos:column="11"/></operator> <call><name pos:line="29" pos:column="12">getaddrinfo<pos:position pos:line="29" pos:column="23"/></name><argument_list pos:line="29" pos:column="23">(<argument><expr><name pos:line="29" pos:column="24">node<pos:position pos:line="29" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="30">service<pos:position pos:line="29" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="39">&amp;<pos:position pos:line="29" pos:column="44"/></operator><name pos:line="29" pos:column="40">ai_hints<pos:position pos:line="29" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="50">&amp;<pos:position pos:line="29" pos:column="55"/></operator><name pos:line="29" pos:column="51">ai_list<pos:position pos:line="29" pos:column="58"/></name></expr></argument>)<pos:position pos:line="29" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="60"/></expr_stmt>
  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><name pos:line="30" pos:column="7">status<pos:position pos:line="30" pos:column="13"/></name> <operator pos:line="30" pos:column="14">!=<pos:position pos:line="30" pos:column="16"/></operator> <literal type="number" pos:line="30" pos:column="17">0<pos:position pos:line="30" pos:column="18"/></literal></expr>)<pos:position pos:line="30" pos:column="19"/></condition><then pos:line="30" pos:column="19"> <block pos:line="30" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">ERROR<pos:position pos:line="31" pos:column="10"/></name><argument_list pos:line="31" pos:column="10">(<argument><expr><literal type="string" pos:line="31" pos:column="11">"network plugin: getaddrinfo (%s, %s) failed: %s"<pos:position pos:line="31" pos:column="60"/></literal></expr></argument>,
          <argument><expr><ternary><condition><expr><operator pos:line="32" pos:column="11">(<pos:position pos:line="32" pos:column="12"/></operator><name><name pos:line="32" pos:column="12">se<pos:position pos:line="32" pos:column="14"/></name><operator pos:line="32" pos:column="14">-&gt;<pos:position pos:line="32" pos:column="19"/></operator><name pos:line="32" pos:column="16">node<pos:position pos:line="32" pos:column="20"/></name></name> <operator pos:line="32" pos:column="21">==<pos:position pos:line="32" pos:column="23"/></operator> <name pos:line="32" pos:column="24">NULL<pos:position pos:line="32" pos:column="28"/></name><operator pos:line="32" pos:column="28">)<pos:position pos:line="32" pos:column="29"/></operator></expr> ?<pos:position pos:line="32" pos:column="31"/></condition><then pos:line="32" pos:column="31"> <expr><literal type="string" pos:line="32" pos:column="32">"(null)"<pos:position pos:line="32" pos:column="40"/></literal></expr> <pos:position pos:line="32" pos:column="41"/></then><else pos:line="32" pos:column="41">: <expr><name><name pos:line="32" pos:column="43">se<pos:position pos:line="32" pos:column="45"/></name><operator pos:line="32" pos:column="45">-&gt;<pos:position pos:line="32" pos:column="50"/></operator><name pos:line="32" pos:column="47">node<pos:position pos:line="32" pos:column="51"/></name></name></expr></else></ternary></expr></argument>,
          <argument><expr><ternary><condition><expr><operator pos:line="33" pos:column="11">(<pos:position pos:line="33" pos:column="12"/></operator><name><name pos:line="33" pos:column="12">se<pos:position pos:line="33" pos:column="14"/></name><operator pos:line="33" pos:column="14">-&gt;<pos:position pos:line="33" pos:column="19"/></operator><name pos:line="33" pos:column="16">service<pos:position pos:line="33" pos:column="23"/></name></name> <operator pos:line="33" pos:column="24">==<pos:position pos:line="33" pos:column="26"/></operator> <name pos:line="33" pos:column="27">NULL<pos:position pos:line="33" pos:column="31"/></name><operator pos:line="33" pos:column="31">)<pos:position pos:line="33" pos:column="32"/></operator></expr> ?<pos:position pos:line="33" pos:column="34"/></condition><then pos:line="33" pos:column="34"> <expr><literal type="string" pos:line="33" pos:column="35">"(null)"<pos:position pos:line="33" pos:column="43"/></literal></expr> <pos:position pos:line="33" pos:column="44"/></then><else pos:line="33" pos:column="44">: <expr><name><name pos:line="33" pos:column="46">se<pos:position pos:line="33" pos:column="48"/></name><operator pos:line="33" pos:column="48">-&gt;<pos:position pos:line="33" pos:column="53"/></operator><name pos:line="33" pos:column="50">service<pos:position pos:line="33" pos:column="57"/></name></name></expr></else></ternary></expr></argument>, <argument><expr><call><name pos:line="33" pos:column="59">gai_strerror<pos:position pos:line="33" pos:column="71"/></name><argument_list pos:line="33" pos:column="71">(<argument><expr><name pos:line="33" pos:column="72">status<pos:position pos:line="33" pos:column="78"/></name></expr></argument>)<pos:position pos:line="33" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="81"/></expr_stmt>
    <return pos:line="34" pos:column="5">return <expr><operator pos:line="34" pos:column="12">(<pos:position pos:line="34" pos:column="13"/></operator><operator pos:line="34" pos:column="13">-<pos:position pos:line="34" pos:column="14"/></operator><literal type="number" pos:line="34" pos:column="14">1<pos:position pos:line="34" pos:column="15"/></literal><operator pos:line="34" pos:column="15">)<pos:position pos:line="34" pos:column="16"/></operator></expr>;<pos:position pos:line="34" pos:column="17"/></return>
  }<pos:position pos:line="35" pos:column="4"/></block></then></if>

  <for pos:line="37" pos:column="3">for <control pos:line="37" pos:column="7">(<init><decl><type><name><name pos:line="37" pos:column="8">struct<pos:position pos:line="37" pos:column="14"/></name> <name pos:line="37" pos:column="15">addrinfo<pos:position pos:line="37" pos:column="23"/></name></name> <modifier pos:line="37" pos:column="24">*<pos:position pos:line="37" pos:column="25"/></modifier><name pos:line="37" pos:column="25">ai_ptr<pos:position pos:line="37" pos:column="31"/></name></type> <init pos:line="37" pos:column="32">= <expr><name pos:line="37" pos:column="34">ai_list<pos:position pos:line="37" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="37" pos:column="42"/></init> <condition><expr><name pos:line="37" pos:column="43">ai_ptr<pos:position pos:line="37" pos:column="49"/></name> <operator pos:line="37" pos:column="50">!=<pos:position pos:line="37" pos:column="52"/></operator> <name pos:line="37" pos:column="53">NULL<pos:position pos:line="37" pos:column="57"/></name></expr>;<pos:position pos:line="37" pos:column="58"/></condition>
       <incr><expr><name pos:line="38" pos:column="8">ai_ptr<pos:position pos:line="38" pos:column="14"/></name> <operator pos:line="38" pos:column="15">=<pos:position pos:line="38" pos:column="16"/></operator> <name><name pos:line="38" pos:column="17">ai_ptr<pos:position pos:line="38" pos:column="23"/></name><operator pos:line="38" pos:column="23">-&gt;<pos:position pos:line="38" pos:column="28"/></operator><name pos:line="38" pos:column="25">ai_next<pos:position pos:line="38" pos:column="32"/></name></name></expr></incr>)<pos:position pos:line="38" pos:column="33"/></control> <block pos:line="38" pos:column="34">{
    <decl_stmt><decl><type><name pos:line="39" pos:column="5">int<pos:position pos:line="39" pos:column="8"/></name> <modifier pos:line="39" pos:column="9">*<pos:position pos:line="39" pos:column="10"/></modifier></type><name pos:line="39" pos:column="10">tmp<pos:position pos:line="39" pos:column="13"/></name></decl>;<pos:position pos:line="39" pos:column="14"/></decl_stmt>

    <expr_stmt><expr><name pos:line="41" pos:column="5">tmp<pos:position pos:line="41" pos:column="8"/></name> <operator pos:line="41" pos:column="9">=<pos:position pos:line="41" pos:column="10"/></operator> <call><name pos:line="41" pos:column="11">realloc<pos:position pos:line="41" pos:column="18"/></name><argument_list pos:line="41" pos:column="18">(<argument><expr><name><name pos:line="41" pos:column="19">se<pos:position pos:line="41" pos:column="21"/></name><operator pos:line="41" pos:column="21">-&gt;<pos:position pos:line="41" pos:column="26"/></operator><name pos:line="41" pos:column="23">data<pos:position pos:line="41" pos:column="27"/></name><operator pos:line="41" pos:column="27">.<pos:position pos:line="41" pos:column="28"/></operator><name pos:line="41" pos:column="28">server<pos:position pos:line="41" pos:column="34"/></name><operator pos:line="41" pos:column="34">.<pos:position pos:line="41" pos:column="35"/></operator><name pos:line="41" pos:column="35">fd<pos:position pos:line="41" pos:column="37"/></name></name></expr></argument>,
                  <argument><expr><sizeof pos:line="42" pos:column="19">sizeof<argument_list pos:line="42" pos:column="25">(<argument><expr><operator pos:line="42" pos:column="26">*<pos:position pos:line="42" pos:column="27"/></operator><name pos:line="42" pos:column="27">tmp<pos:position pos:line="42" pos:column="30"/></name></expr></argument>)<pos:position pos:line="42" pos:column="31"/></argument_list></sizeof> <operator pos:line="42" pos:column="32">*<pos:position pos:line="42" pos:column="33"/></operator> <operator pos:line="42" pos:column="34">(<pos:position pos:line="42" pos:column="35"/></operator><name><name pos:line="42" pos:column="35">se<pos:position pos:line="42" pos:column="37"/></name><operator pos:line="42" pos:column="37">-&gt;<pos:position pos:line="42" pos:column="42"/></operator><name pos:line="42" pos:column="39">data<pos:position pos:line="42" pos:column="43"/></name><operator pos:line="42" pos:column="43">.<pos:position pos:line="42" pos:column="44"/></operator><name pos:line="42" pos:column="44">server<pos:position pos:line="42" pos:column="50"/></name><operator pos:line="42" pos:column="50">.<pos:position pos:line="42" pos:column="51"/></operator><name pos:line="42" pos:column="51">fd_num<pos:position pos:line="42" pos:column="57"/></name></name> <operator pos:line="42" pos:column="58">+<pos:position pos:line="42" pos:column="59"/></operator> <literal type="number" pos:line="42" pos:column="60">1<pos:position pos:line="42" pos:column="61"/></literal><operator pos:line="42" pos:column="61">)<pos:position pos:line="42" pos:column="62"/></operator></expr></argument>)<pos:position pos:line="42" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="64"/></expr_stmt>
    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name pos:line="43" pos:column="9">tmp<pos:position pos:line="43" pos:column="12"/></name> <operator pos:line="43" pos:column="13">==<pos:position pos:line="43" pos:column="15"/></operator> <name pos:line="43" pos:column="16">NULL<pos:position pos:line="43" pos:column="20"/></name></expr>)<pos:position pos:line="43" pos:column="21"/></condition><then pos:line="43" pos:column="21"> <block pos:line="43" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="44" pos:column="7">ERROR<pos:position pos:line="44" pos:column="12"/></name><argument_list pos:line="44" pos:column="12">(<argument><expr><literal type="string" pos:line="44" pos:column="13">"network plugin: realloc failed."<pos:position pos:line="44" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="48"/></expr_stmt>
      <continue pos:line="45" pos:column="7">continue;<pos:position pos:line="45" pos:column="16"/></continue>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="47" pos:column="5">se<pos:position pos:line="47" pos:column="7"/></name><operator pos:line="47" pos:column="7">-&gt;<pos:position pos:line="47" pos:column="12"/></operator><name pos:line="47" pos:column="9">data<pos:position pos:line="47" pos:column="13"/></name><operator pos:line="47" pos:column="13">.<pos:position pos:line="47" pos:column="14"/></operator><name pos:line="47" pos:column="14">server<pos:position pos:line="47" pos:column="20"/></name><operator pos:line="47" pos:column="20">.<pos:position pos:line="47" pos:column="21"/></operator><name pos:line="47" pos:column="21">fd<pos:position pos:line="47" pos:column="23"/></name></name> <operator pos:line="47" pos:column="24">=<pos:position pos:line="47" pos:column="25"/></operator> <name pos:line="47" pos:column="26">tmp<pos:position pos:line="47" pos:column="29"/></name></expr>;<pos:position pos:line="47" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="48" pos:column="5">tmp<pos:position pos:line="48" pos:column="8"/></name> <operator pos:line="48" pos:column="9">=<pos:position pos:line="48" pos:column="10"/></operator> <name><name pos:line="48" pos:column="11">se<pos:position pos:line="48" pos:column="13"/></name><operator pos:line="48" pos:column="13">-&gt;<pos:position pos:line="48" pos:column="18"/></operator><name pos:line="48" pos:column="15">data<pos:position pos:line="48" pos:column="19"/></name><operator pos:line="48" pos:column="19">.<pos:position pos:line="48" pos:column="20"/></operator><name pos:line="48" pos:column="20">server<pos:position pos:line="48" pos:column="26"/></name><operator pos:line="48" pos:column="26">.<pos:position pos:line="48" pos:column="27"/></operator><name pos:line="48" pos:column="27">fd<pos:position pos:line="48" pos:column="29"/></name></name> <operator pos:line="48" pos:column="30">+<pos:position pos:line="48" pos:column="31"/></operator> <name><name pos:line="48" pos:column="32">se<pos:position pos:line="48" pos:column="34"/></name><operator pos:line="48" pos:column="34">-&gt;<pos:position pos:line="48" pos:column="39"/></operator><name pos:line="48" pos:column="36">data<pos:position pos:line="48" pos:column="40"/></name><operator pos:line="48" pos:column="40">.<pos:position pos:line="48" pos:column="41"/></operator><name pos:line="48" pos:column="41">server<pos:position pos:line="48" pos:column="47"/></name><operator pos:line="48" pos:column="47">.<pos:position pos:line="48" pos:column="48"/></operator><name pos:line="48" pos:column="48">fd_num<pos:position pos:line="48" pos:column="54"/></name></name></expr>;<pos:position pos:line="48" pos:column="55"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="50" pos:column="5">*<pos:position pos:line="50" pos:column="6"/></operator><name pos:line="50" pos:column="6">tmp<pos:position pos:line="50" pos:column="9"/></name> <operator pos:line="50" pos:column="10">=<pos:position pos:line="50" pos:column="11"/></operator> <call><name pos:line="50" pos:column="12">socket<pos:position pos:line="50" pos:column="18"/></name><argument_list pos:line="50" pos:column="18">(<argument><expr><name><name pos:line="50" pos:column="19">ai_ptr<pos:position pos:line="50" pos:column="25"/></name><operator pos:line="50" pos:column="25">-&gt;<pos:position pos:line="50" pos:column="30"/></operator><name pos:line="50" pos:column="27">ai_family<pos:position pos:line="50" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="38">ai_ptr<pos:position pos:line="50" pos:column="44"/></name><operator pos:line="50" pos:column="44">-&gt;<pos:position pos:line="50" pos:column="49"/></operator><name pos:line="50" pos:column="46">ai_socktype<pos:position pos:line="50" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="59">ai_ptr<pos:position pos:line="50" pos:column="65"/></name><operator pos:line="50" pos:column="65">-&gt;<pos:position pos:line="50" pos:column="70"/></operator><name pos:line="50" pos:column="67">ai_protocol<pos:position pos:line="50" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="80"/></expr_stmt>
    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><operator pos:line="51" pos:column="9">*<pos:position pos:line="51" pos:column="10"/></operator><name pos:line="51" pos:column="10">tmp<pos:position pos:line="51" pos:column="13"/></name> <operator pos:line="51" pos:column="14">&lt;<pos:position pos:line="51" pos:column="18"/></operator> <literal type="number" pos:line="51" pos:column="16">0<pos:position pos:line="51" pos:column="17"/></literal></expr>)<pos:position pos:line="51" pos:column="18"/></condition><then pos:line="51" pos:column="18"> <block pos:line="51" pos:column="19">{
      <decl_stmt><decl><type><name pos:line="52" pos:column="7">char<pos:position pos:line="52" pos:column="11"/></name></type> <name><name pos:line="52" pos:column="12">errbuf<pos:position pos:line="52" pos:column="18"/></name><index pos:line="52" pos:column="18">[<expr><literal type="number" pos:line="52" pos:column="19">1024<pos:position pos:line="52" pos:column="23"/></literal></expr>]<pos:position pos:line="52" pos:column="24"/></index></name></decl>;<pos:position pos:line="52" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="53" pos:column="7">ERROR<pos:position pos:line="53" pos:column="12"/></name><argument_list pos:line="53" pos:column="12">(<argument><expr><literal type="string" pos:line="53" pos:column="13">"network plugin: socket(2) failed: %s"<pos:position pos:line="53" pos:column="51"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="54" pos:column="13">sstrerror<pos:position pos:line="54" pos:column="22"/></name><argument_list pos:line="54" pos:column="22">(<argument><expr><name pos:line="54" pos:column="23">errno<pos:position pos:line="54" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="30">errbuf<pos:position pos:line="54" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="54" pos:column="38">sizeof<argument_list pos:line="54" pos:column="44">(<argument><expr><name pos:line="54" pos:column="45">errbuf<pos:position pos:line="54" pos:column="51"/></name></expr></argument>)<pos:position pos:line="54" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="54" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="54" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="55"/></expr_stmt>
      <continue pos:line="55" pos:column="7">continue;<pos:position pos:line="55" pos:column="16"/></continue>
    }<pos:position pos:line="56" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="58" pos:column="5">status<pos:position pos:line="58" pos:column="11"/></name> <operator pos:line="58" pos:column="12">=<pos:position pos:line="58" pos:column="13"/></operator> <call><name pos:line="58" pos:column="14">network_bind_socket<pos:position pos:line="58" pos:column="33"/></name><argument_list pos:line="58" pos:column="33">(<argument><expr><operator pos:line="58" pos:column="34">*<pos:position pos:line="58" pos:column="35"/></operator><name pos:line="58" pos:column="35">tmp<pos:position pos:line="58" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="40">ai_ptr<pos:position pos:line="58" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="48">se<pos:position pos:line="58" pos:column="50"/></name><operator pos:line="58" pos:column="50">-&gt;<pos:position pos:line="58" pos:column="55"/></operator><name pos:line="58" pos:column="52">interface<pos:position pos:line="58" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="63"/></expr_stmt>
    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><name pos:line="59" pos:column="9">status<pos:position pos:line="59" pos:column="15"/></name> <operator pos:line="59" pos:column="16">!=<pos:position pos:line="59" pos:column="18"/></operator> <literal type="number" pos:line="59" pos:column="19">0<pos:position pos:line="59" pos:column="20"/></literal></expr>)<pos:position pos:line="59" pos:column="21"/></condition><then pos:line="59" pos:column="21"> <block pos:line="59" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="60" pos:column="7">close<pos:position pos:line="60" pos:column="12"/></name><argument_list pos:line="60" pos:column="12">(<argument><expr><operator pos:line="60" pos:column="13">*<pos:position pos:line="60" pos:column="14"/></operator><name pos:line="60" pos:column="14">tmp<pos:position pos:line="60" pos:column="17"/></name></expr></argument>)<pos:position pos:line="60" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="19"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="61" pos:column="7">*<pos:position pos:line="61" pos:column="8"/></operator><name pos:line="61" pos:column="8">tmp<pos:position pos:line="61" pos:column="11"/></name> <operator pos:line="61" pos:column="12">=<pos:position pos:line="61" pos:column="13"/></operator> <operator pos:line="61" pos:column="14">-<pos:position pos:line="61" pos:column="15"/></operator><literal type="number" pos:line="61" pos:column="15">1<pos:position pos:line="61" pos:column="16"/></literal></expr>;<pos:position pos:line="61" pos:column="17"/></expr_stmt>
      <continue pos:line="62" pos:column="7">continue;<pos:position pos:line="62" pos:column="16"/></continue>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="65" pos:column="5">se<pos:position pos:line="65" pos:column="7"/></name><operator pos:line="65" pos:column="7">-&gt;<pos:position pos:line="65" pos:column="12"/></operator><name pos:line="65" pos:column="9">data<pos:position pos:line="65" pos:column="13"/></name><operator pos:line="65" pos:column="13">.<pos:position pos:line="65" pos:column="14"/></operator><name pos:line="65" pos:column="14">server<pos:position pos:line="65" pos:column="20"/></name><operator pos:line="65" pos:column="20">.<pos:position pos:line="65" pos:column="21"/></operator><name pos:line="65" pos:column="21">fd_num<pos:position pos:line="65" pos:column="27"/></name></name><operator pos:line="65" pos:column="27">++<pos:position pos:line="65" pos:column="29"/></operator></expr>;<pos:position pos:line="65" pos:column="30"/></expr_stmt>
    <continue pos:line="66" pos:column="5">continue;<pos:position pos:line="66" pos:column="14"/></continue>
  }<pos:position pos:line="67" pos:column="4"/></block></for> <comment type="block" pos:line="67" pos:column="5">/* for (ai_list) */</comment>

  <expr_stmt><expr><call><name pos:line="69" pos:column="3">freeaddrinfo<pos:position pos:line="69" pos:column="15"/></name><argument_list pos:line="69" pos:column="15">(<argument><expr><name pos:line="69" pos:column="16">ai_list<pos:position pos:line="69" pos:column="23"/></name></expr></argument>)<pos:position pos:line="69" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="25"/></expr_stmt>

  <if pos:line="71" pos:column="3">if <condition pos:line="71" pos:column="6">(<expr><name><name pos:line="71" pos:column="7">se<pos:position pos:line="71" pos:column="9"/></name><operator pos:line="71" pos:column="9">-&gt;<pos:position pos:line="71" pos:column="14"/></operator><name pos:line="71" pos:column="11">data<pos:position pos:line="71" pos:column="15"/></name><operator pos:line="71" pos:column="15">.<pos:position pos:line="71" pos:column="16"/></operator><name pos:line="71" pos:column="16">server<pos:position pos:line="71" pos:column="22"/></name><operator pos:line="71" pos:column="22">.<pos:position pos:line="71" pos:column="23"/></operator><name pos:line="71" pos:column="23">fd_num<pos:position pos:line="71" pos:column="29"/></name></name> <operator pos:line="71" pos:column="30">==<pos:position pos:line="71" pos:column="32"/></operator> <literal type="number" pos:line="71" pos:column="33">0<pos:position pos:line="71" pos:column="34"/></literal></expr>)<pos:position pos:line="71" pos:column="35"/></condition><then pos:line="71" pos:column="35">
    <block type="pseudo"><return pos:line="72" pos:column="5">return <expr><operator pos:line="72" pos:column="12">(<pos:position pos:line="72" pos:column="13"/></operator><operator pos:line="72" pos:column="13">-<pos:position pos:line="72" pos:column="14"/></operator><literal type="number" pos:line="72" pos:column="14">1<pos:position pos:line="72" pos:column="15"/></literal><operator pos:line="72" pos:column="15">)<pos:position pos:line="72" pos:column="16"/></operator></expr>;<pos:position pos:line="72" pos:column="17"/></return></block></then></if>
  <return pos:line="73" pos:column="3">return <expr><operator pos:line="73" pos:column="10">(<pos:position pos:line="73" pos:column="11"/></operator><literal type="number" pos:line="73" pos:column="11">0<pos:position pos:line="73" pos:column="12"/></literal><operator pos:line="73" pos:column="12">)<pos:position pos:line="73" pos:column="13"/></operator></expr>;<pos:position pos:line="73" pos:column="14"/></return>
}<pos:position pos:line="74" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1976_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">memory_read_internal<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">value_list_t<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">vl<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list> <block pos:line="1" pos:column="51">{
<cpp:if pos:line="2" pos:column="1">#<cpp:directive pos:line="2" pos:column="2">if<pos:position pos:line="2" pos:column="4"/></cpp:directive> <expr><name pos:line="2" pos:column="5">HAVE_HOST_STATISTICS<pos:position pos:line="2" pos:column="25"/></name></expr></cpp:if>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">kern_return_t<pos:position pos:line="3" pos:column="16"/></name></type> <name pos:line="3" pos:column="17">status<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">vm_statistics_data_t<pos:position pos:line="4" pos:column="23"/></name></type> <name pos:line="4" pos:column="24">vm_data<pos:position pos:line="4" pos:column="31"/></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">mach_msg_type_number_t<pos:position pos:line="5" pos:column="25"/></name></type> <name pos:line="5" pos:column="26">vm_data_len<pos:position pos:line="5" pos:column="37"/></name></decl>;<pos:position pos:line="5" pos:column="38"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="7" pos:column="3">gauge_t<pos:position pos:line="7" pos:column="10"/></name></type> <name pos:line="7" pos:column="11">wired<pos:position pos:line="7" pos:column="16"/></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">gauge_t<pos:position pos:line="8" pos:column="10"/></name></type> <name pos:line="8" pos:column="11">active<pos:position pos:line="8" pos:column="17"/></name></decl>;<pos:position pos:line="8" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">gauge_t<pos:position pos:line="9" pos:column="10"/></name></type> <name pos:line="9" pos:column="11">inactive<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">gauge_t<pos:position pos:line="10" pos:column="10"/></name></type> <name pos:line="10" pos:column="11">free<pos:position pos:line="10" pos:column="15"/></name></decl>;<pos:position pos:line="10" pos:column="16"/></decl_stmt>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><operator pos:line="12" pos:column="7">!<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">port_host<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">||<pos:position pos:line="12" pos:column="20"/></operator> <operator pos:line="12" pos:column="21">!<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="22">pagesize<pos:position pos:line="12" pos:column="30"/></name></expr>)<pos:position pos:line="12" pos:column="31"/></condition><then pos:line="12" pos:column="31">
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">-<pos:position pos:line="13" pos:column="13"/></operator><literal type="number" pos:line="13" pos:column="13">1<pos:position pos:line="13" pos:column="14"/></literal></expr>;<pos:position pos:line="13" pos:column="15"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="15" pos:column="3">vm_data_len<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">=<pos:position pos:line="15" pos:column="16"/></operator> <sizeof pos:line="15" pos:column="17">sizeof<argument_list pos:line="15" pos:column="23">(<argument><expr><name pos:line="15" pos:column="24">vm_data<pos:position pos:line="15" pos:column="31"/></name></expr></argument>)<pos:position pos:line="15" pos:column="32"/></argument_list></sizeof> <operator pos:line="15" pos:column="33">/<pos:position pos:line="15" pos:column="34"/></operator> <sizeof pos:line="15" pos:column="35">sizeof<argument_list pos:line="15" pos:column="41">(<argument><expr><name pos:line="15" pos:column="42">natural_t<pos:position pos:line="15" pos:column="51"/></name></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></sizeof></expr>;<pos:position pos:line="15" pos:column="53"/></expr_stmt>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><operator pos:line="16" pos:column="7">(<pos:position pos:line="16" pos:column="8"/></operator><name pos:line="16" pos:column="8">status<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <call><name pos:line="16" pos:column="17">host_statistics<pos:position pos:line="16" pos:column="32"/></name><argument_list pos:line="16" pos:column="32">(<argument><expr><name pos:line="16" pos:column="33">port_host<pos:position pos:line="16" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="44">HOST_VM_INFO<pos:position pos:line="16" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="58">(<pos:position pos:line="16" pos:column="59"/></operator><name pos:line="16" pos:column="59">host_info_t<pos:position pos:line="16" pos:column="70"/></name><operator pos:line="16" pos:column="70">)<pos:position pos:line="16" pos:column="71"/></operator><operator pos:line="16" pos:column="71">&amp;<pos:position pos:line="16" pos:column="76"/></operator><name pos:line="16" pos:column="72">vm_data<pos:position pos:line="16" pos:column="79"/></name></expr></argument>,
                                <argument><expr><operator pos:line="17" pos:column="33">&amp;<pos:position pos:line="17" pos:column="38"/></operator><name pos:line="17" pos:column="34">vm_data_len<pos:position pos:line="17" pos:column="45"/></name></expr></argument>)<pos:position pos:line="17" pos:column="46"/></argument_list></call><operator pos:line="17" pos:column="46">)<pos:position pos:line="17" pos:column="47"/></operator> <operator pos:line="17" pos:column="48">!=<pos:position pos:line="17" pos:column="50"/></operator> <name pos:line="17" pos:column="51">KERN_SUCCESS<pos:position pos:line="17" pos:column="63"/></name></expr>)<pos:position pos:line="17" pos:column="64"/></condition><then pos:line="17" pos:column="64"> <block pos:line="17" pos:column="65">{
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">ERROR<pos:position pos:line="18" pos:column="10"/></name><argument_list pos:line="18" pos:column="10">(<argument><expr><literal type="string" pos:line="18" pos:column="11">"memory-plugin: host_statistics failed and returned the value %i"<pos:position pos:line="18" pos:column="76"/></literal></expr></argument>,
          <argument><expr><operator pos:line="19" pos:column="11">(<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="12">int<pos:position pos:line="19" pos:column="15"/></name><operator pos:line="19" pos:column="15">)<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="16">status<pos:position pos:line="19" pos:column="22"/></name></expr></argument>)<pos:position pos:line="19" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt>
    <return pos:line="20" pos:column="5">return <expr><operator pos:line="20" pos:column="12">-<pos:position pos:line="20" pos:column="13"/></operator><literal type="number" pos:line="20" pos:column="13">1<pos:position pos:line="20" pos:column="14"/></literal></expr>;<pos:position pos:line="20" pos:column="15"/></return>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="23" pos:column="3">/*
   * From &lt;http://docs.info.apple.com/article.html?artnum=107918&gt;:
   *
   * Wired memory
   *   This information can't be cached to disk, so it must stay in RAM.
   *   The amount depends on what applications you are using.
   *
   * Active memory
   *   This information is currently in RAM and actively being used.
   *
   * Inactive memory
   *   This information is no longer being used and has been cached to
   *   disk, but it will remain in RAM until another application needs
   *   the space. Leaving this information in RAM is to your advantage if
   *   you (or a client of your computer) come back to it later.
   *
   * Free memory
   *   This memory is not being used.
   */</comment>

  <expr_stmt><expr><name pos:line="43" pos:column="3">wired<pos:position pos:line="43" pos:column="8"/></name> <operator pos:line="43" pos:column="9">=<pos:position pos:line="43" pos:column="10"/></operator> <call pos:line="43" pos:column="11">(<name pos:line="43" pos:column="12">gauge_t<pos:position pos:line="43" pos:column="19"/></name>)<argument_list pos:line="43" pos:column="20">(<argument><expr><operator pos:line="43" pos:column="21">(<pos:position pos:line="43" pos:column="22"/></operator><operator pos:line="43" pos:column="22">(<pos:position pos:line="43" pos:column="23"/></operator><name pos:line="43" pos:column="23">uint64_t<pos:position pos:line="43" pos:column="31"/></name><operator pos:line="43" pos:column="31">)<pos:position pos:line="43" pos:column="32"/></operator><name><name pos:line="43" pos:column="32">vm_data<pos:position pos:line="43" pos:column="39"/></name><operator pos:line="43" pos:column="39">.<pos:position pos:line="43" pos:column="40"/></operator><name pos:line="43" pos:column="40">wire_count<pos:position pos:line="43" pos:column="50"/></name></name><operator pos:line="43" pos:column="50">)<pos:position pos:line="43" pos:column="51"/></operator> <operator pos:line="43" pos:column="52">*<pos:position pos:line="43" pos:column="53"/></operator> <operator pos:line="43" pos:column="54">(<pos:position pos:line="43" pos:column="55"/></operator><operator pos:line="43" pos:column="55">(<pos:position pos:line="43" pos:column="56"/></operator><name pos:line="43" pos:column="56">uint64_t<pos:position pos:line="43" pos:column="64"/></name><operator pos:line="43" pos:column="64">)<pos:position pos:line="43" pos:column="65"/></operator><name pos:line="43" pos:column="65">pagesize<pos:position pos:line="43" pos:column="73"/></name><operator pos:line="43" pos:column="73">)<pos:position pos:line="43" pos:column="74"/></operator></expr></argument>)<pos:position pos:line="43" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="76"/></expr_stmt>
  <expr_stmt><expr><name pos:line="44" pos:column="3">active<pos:position pos:line="44" pos:column="9"/></name> <operator pos:line="44" pos:column="10">=<pos:position pos:line="44" pos:column="11"/></operator> <call pos:line="44" pos:column="12">(<name pos:line="44" pos:column="13">gauge_t<pos:position pos:line="44" pos:column="20"/></name>)<argument_list pos:line="44" pos:column="21">(<argument><expr><operator pos:line="44" pos:column="22">(<pos:position pos:line="44" pos:column="23"/></operator><operator pos:line="44" pos:column="23">(<pos:position pos:line="44" pos:column="24"/></operator><name pos:line="44" pos:column="24">uint64_t<pos:position pos:line="44" pos:column="32"/></name><operator pos:line="44" pos:column="32">)<pos:position pos:line="44" pos:column="33"/></operator><name><name pos:line="44" pos:column="33">vm_data<pos:position pos:line="44" pos:column="40"/></name><operator pos:line="44" pos:column="40">.<pos:position pos:line="44" pos:column="41"/></operator><name pos:line="44" pos:column="41">active_count<pos:position pos:line="44" pos:column="53"/></name></name><operator pos:line="44" pos:column="53">)<pos:position pos:line="44" pos:column="54"/></operator> <operator pos:line="44" pos:column="55">*<pos:position pos:line="44" pos:column="56"/></operator> <operator pos:line="44" pos:column="57">(<pos:position pos:line="44" pos:column="58"/></operator><operator pos:line="44" pos:column="58">(<pos:position pos:line="44" pos:column="59"/></operator><name pos:line="44" pos:column="59">uint64_t<pos:position pos:line="44" pos:column="67"/></name><operator pos:line="44" pos:column="67">)<pos:position pos:line="44" pos:column="68"/></operator><name pos:line="44" pos:column="68">pagesize<pos:position pos:line="44" pos:column="76"/></name><operator pos:line="44" pos:column="76">)<pos:position pos:line="44" pos:column="77"/></operator></expr></argument>)<pos:position pos:line="44" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="79"/></expr_stmt>
  <expr_stmt><expr><name pos:line="45" pos:column="3">inactive<pos:position pos:line="45" pos:column="11"/></name> <operator pos:line="45" pos:column="12">=<pos:position pos:line="45" pos:column="13"/></operator>
      <call pos:line="46" pos:column="7">(<name pos:line="46" pos:column="8">gauge_t<pos:position pos:line="46" pos:column="15"/></name>)<argument_list pos:line="46" pos:column="16">(<argument><expr><operator pos:line="46" pos:column="17">(<pos:position pos:line="46" pos:column="18"/></operator><operator pos:line="46" pos:column="18">(<pos:position pos:line="46" pos:column="19"/></operator><name pos:line="46" pos:column="19">uint64_t<pos:position pos:line="46" pos:column="27"/></name><operator pos:line="46" pos:column="27">)<pos:position pos:line="46" pos:column="28"/></operator><name><name pos:line="46" pos:column="28">vm_data<pos:position pos:line="46" pos:column="35"/></name><operator pos:line="46" pos:column="35">.<pos:position pos:line="46" pos:column="36"/></operator><name pos:line="46" pos:column="36">inactive_count<pos:position pos:line="46" pos:column="50"/></name></name><operator pos:line="46" pos:column="50">)<pos:position pos:line="46" pos:column="51"/></operator> <operator pos:line="46" pos:column="52">*<pos:position pos:line="46" pos:column="53"/></operator> <operator pos:line="46" pos:column="54">(<pos:position pos:line="46" pos:column="55"/></operator><operator pos:line="46" pos:column="55">(<pos:position pos:line="46" pos:column="56"/></operator><name pos:line="46" pos:column="56">uint64_t<pos:position pos:line="46" pos:column="64"/></name><operator pos:line="46" pos:column="64">)<pos:position pos:line="46" pos:column="65"/></operator><name pos:line="46" pos:column="65">pagesize<pos:position pos:line="46" pos:column="73"/></name><operator pos:line="46" pos:column="73">)<pos:position pos:line="46" pos:column="74"/></operator></expr></argument>)<pos:position pos:line="46" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="76"/></expr_stmt>
  <expr_stmt><expr><name pos:line="47" pos:column="3">free<pos:position pos:line="47" pos:column="7"/></name> <operator pos:line="47" pos:column="8">=<pos:position pos:line="47" pos:column="9"/></operator> <call pos:line="47" pos:column="10">(<name pos:line="47" pos:column="11">gauge_t<pos:position pos:line="47" pos:column="18"/></name>)<argument_list pos:line="47" pos:column="19">(<argument><expr><operator pos:line="47" pos:column="20">(<pos:position pos:line="47" pos:column="21"/></operator><operator pos:line="47" pos:column="21">(<pos:position pos:line="47" pos:column="22"/></operator><name pos:line="47" pos:column="22">uint64_t<pos:position pos:line="47" pos:column="30"/></name><operator pos:line="47" pos:column="30">)<pos:position pos:line="47" pos:column="31"/></operator><name><name pos:line="47" pos:column="31">vm_data<pos:position pos:line="47" pos:column="38"/></name><operator pos:line="47" pos:column="38">.<pos:position pos:line="47" pos:column="39"/></operator><name pos:line="47" pos:column="39">free_count<pos:position pos:line="47" pos:column="49"/></name></name><operator pos:line="47" pos:column="49">)<pos:position pos:line="47" pos:column="50"/></operator> <operator pos:line="47" pos:column="51">*<pos:position pos:line="47" pos:column="52"/></operator> <operator pos:line="47" pos:column="53">(<pos:position pos:line="47" pos:column="54"/></operator><operator pos:line="47" pos:column="54">(<pos:position pos:line="47" pos:column="55"/></operator><name pos:line="47" pos:column="55">uint64_t<pos:position pos:line="47" pos:column="63"/></name><operator pos:line="47" pos:column="63">)<pos:position pos:line="47" pos:column="64"/></operator><name pos:line="47" pos:column="64">pagesize<pos:position pos:line="47" pos:column="72"/></name><operator pos:line="47" pos:column="72">)<pos:position pos:line="47" pos:column="73"/></operator></expr></argument>)<pos:position pos:line="47" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="75"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="49" pos:column="3">MEMORY_SUBMIT<pos:position pos:line="49" pos:column="16"/></name><argument_list pos:line="49" pos:column="16">(<argument><expr><literal type="string" pos:line="49" pos:column="17">"wired"<pos:position pos:line="49" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="26">wired<pos:position pos:line="49" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="33">"active"<pos:position pos:line="49" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="43">active<pos:position pos:line="49" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="51">"inactive"<pos:position pos:line="49" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="63">inactive<pos:position pos:line="49" pos:column="71"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="73">"free"<pos:position pos:line="49" pos:column="79"/></literal></expr></argument>,
                <argument><expr><name pos:line="50" pos:column="17">free<pos:position pos:line="50" pos:column="21"/></name></expr></argument>)<pos:position pos:line="50" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="23"/></expr_stmt>
<comment type="block" pos:line="51" pos:column="1">/* #endif HAVE_HOST_STATISTICS */</comment>

<cpp:elif pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">elif<pos:position pos:line="53" pos:column="6"/></cpp:directive> <expr><name pos:line="53" pos:column="7">HAVE_SYSCTLBYNAME<pos:position pos:line="53" pos:column="24"/></name></expr></cpp:elif>
  <comment type="block" pos:line="54" pos:column="3">/*
   * vm.stats.vm.v_page_size: 4096
   * vm.stats.vm.v_page_count: 246178
   * vm.stats.vm.v_free_count: 28760
   * vm.stats.vm.v_wire_count: 37526
   * vm.stats.vm.v_active_count: 55239
   * vm.stats.vm.v_inactive_count: 113730
   * vm.stats.vm.v_cache_count: 10809
   */</comment>
  <decl_stmt><decl><type><specifier pos:line="63" pos:column="3">const<pos:position pos:line="63" pos:column="8"/></specifier> <name pos:line="63" pos:column="9">char<pos:position pos:line="63" pos:column="13"/></name> <modifier pos:line="63" pos:column="14">*<pos:position pos:line="63" pos:column="15"/></modifier></type><name><name pos:line="63" pos:column="15">sysctl_keys<pos:position pos:line="63" pos:column="26"/></name><index pos:line="63" pos:column="26">[<expr><literal type="number" pos:line="63" pos:column="27">8<pos:position pos:line="63" pos:column="28"/></literal></expr>]<pos:position pos:line="63" pos:column="29"/></index></name> <init pos:line="63" pos:column="30">= <expr><block pos:line="63" pos:column="32">{
      <expr><literal type="string" pos:line="64" pos:column="7">"vm.stats.vm.v_page_size"<pos:position pos:line="64" pos:column="32"/></literal></expr>,    <expr><literal type="string" pos:line="64" pos:column="37">"vm.stats.vm.v_page_count"<pos:position pos:line="64" pos:column="63"/></literal></expr>,
      <expr><literal type="string" pos:line="65" pos:column="7">"vm.stats.vm.v_free_count"<pos:position pos:line="65" pos:column="33"/></literal></expr>,   <expr><literal type="string" pos:line="65" pos:column="37">"vm.stats.vm.v_wire_count"<pos:position pos:line="65" pos:column="63"/></literal></expr>,
      <expr><literal type="string" pos:line="66" pos:column="7">"vm.stats.vm.v_active_count"<pos:position pos:line="66" pos:column="35"/></literal></expr>, <expr><literal type="string" pos:line="66" pos:column="37">"vm.stats.vm.v_inactive_count"<pos:position pos:line="66" pos:column="67"/></literal></expr>,
      <expr><literal type="string" pos:line="67" pos:column="7">"vm.stats.vm.v_cache_count"<pos:position pos:line="67" pos:column="34"/></literal></expr>,  <expr><name pos:line="67" pos:column="37">NULL<pos:position pos:line="67" pos:column="41"/></name></expr>}<pos:position pos:line="67" pos:column="42"/></block></expr></init></decl>;<pos:position pos:line="67" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="68" pos:column="3">double<pos:position pos:line="68" pos:column="9"/></name></type> <name><name pos:line="68" pos:column="10">sysctl_vals<pos:position pos:line="68" pos:column="21"/></name><index pos:line="68" pos:column="21">[<expr><literal type="number" pos:line="68" pos:column="22">8<pos:position pos:line="68" pos:column="23"/></literal></expr>]<pos:position pos:line="68" pos:column="24"/></index></name></decl>;<pos:position pos:line="68" pos:column="25"/></decl_stmt>

  <for pos:line="70" pos:column="3">for <control pos:line="70" pos:column="7">(<init><decl><type><name pos:line="70" pos:column="8">int<pos:position pos:line="70" pos:column="11"/></name></type> <name pos:line="70" pos:column="12">i<pos:position pos:line="70" pos:column="13"/></name> <init pos:line="70" pos:column="14">= <expr><literal type="number" pos:line="70" pos:column="16">0<pos:position pos:line="70" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="70" pos:column="18"/></init> <condition><expr><name><name pos:line="70" pos:column="19">sysctl_keys<pos:position pos:line="70" pos:column="30"/></name><index pos:line="70" pos:column="30">[<expr><name pos:line="70" pos:column="31">i<pos:position pos:line="70" pos:column="32"/></name></expr>]<pos:position pos:line="70" pos:column="33"/></index></name> <operator pos:line="70" pos:column="34">!=<pos:position pos:line="70" pos:column="36"/></operator> <name pos:line="70" pos:column="37">NULL<pos:position pos:line="70" pos:column="41"/></name></expr>;<pos:position pos:line="70" pos:column="42"/></condition> <incr><expr><name pos:line="70" pos:column="43">i<pos:position pos:line="70" pos:column="44"/></name><operator pos:line="70" pos:column="44">++<pos:position pos:line="70" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="70" pos:column="47"/></control> <block pos:line="70" pos:column="48">{
    <decl_stmt><decl><type><name pos:line="71" pos:column="5">int<pos:position pos:line="71" pos:column="8"/></name></type> <name pos:line="71" pos:column="9">value<pos:position pos:line="71" pos:column="14"/></name></decl>;<pos:position pos:line="71" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="72" pos:column="5">size_t<pos:position pos:line="72" pos:column="11"/></name></type> <name pos:line="72" pos:column="12">value_len<pos:position pos:line="72" pos:column="21"/></name> <init pos:line="72" pos:column="22">= <expr><sizeof pos:line="72" pos:column="24">sizeof<argument_list pos:line="72" pos:column="30">(<argument><expr><name pos:line="72" pos:column="31">value<pos:position pos:line="72" pos:column="36"/></name></expr></argument>)<pos:position pos:line="72" pos:column="37"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="72" pos:column="38"/></decl_stmt>

    <if pos:line="74" pos:column="5">if <condition pos:line="74" pos:column="8">(<expr><call><name pos:line="74" pos:column="9">sysctlbyname<pos:position pos:line="74" pos:column="21"/></name><argument_list pos:line="74" pos:column="21">(<argument><expr><name><name pos:line="74" pos:column="22">sysctl_keys<pos:position pos:line="74" pos:column="33"/></name><index pos:line="74" pos:column="33">[<expr><name pos:line="74" pos:column="34">i<pos:position pos:line="74" pos:column="35"/></name></expr>]<pos:position pos:line="74" pos:column="36"/></index></name></expr></argument>, <argument><expr><operator pos:line="74" pos:column="38">(<pos:position pos:line="74" pos:column="39"/></operator><name pos:line="74" pos:column="39">void<pos:position pos:line="74" pos:column="43"/></name> <operator pos:line="74" pos:column="44">*<pos:position pos:line="74" pos:column="45"/></operator><operator pos:line="74" pos:column="45">)<pos:position pos:line="74" pos:column="46"/></operator><operator pos:line="74" pos:column="46">&amp;<pos:position pos:line="74" pos:column="51"/></operator><name pos:line="74" pos:column="47">value<pos:position pos:line="74" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="74" pos:column="54">&amp;<pos:position pos:line="74" pos:column="59"/></operator><name pos:line="74" pos:column="55">value_len<pos:position pos:line="74" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="66">NULL<pos:position pos:line="74" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="74" pos:column="72">0<pos:position pos:line="74" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="74"/></argument_list></call> <operator pos:line="74" pos:column="75">==<pos:position pos:line="74" pos:column="77"/></operator>
        <literal type="number" pos:line="75" pos:column="9">0<pos:position pos:line="75" pos:column="10"/></literal></expr>)<pos:position pos:line="75" pos:column="11"/></condition><then pos:line="75" pos:column="11"> <block pos:line="75" pos:column="12">{
      <expr_stmt><expr><name><name pos:line="76" pos:column="7">sysctl_vals<pos:position pos:line="76" pos:column="18"/></name><index pos:line="76" pos:column="18">[<expr><name pos:line="76" pos:column="19">i<pos:position pos:line="76" pos:column="20"/></name></expr>]<pos:position pos:line="76" pos:column="21"/></index></name> <operator pos:line="76" pos:column="22">=<pos:position pos:line="76" pos:column="23"/></operator> <name pos:line="76" pos:column="24">value<pos:position pos:line="76" pos:column="29"/></name></expr>;<pos:position pos:line="76" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="77" pos:column="7">DEBUG<pos:position pos:line="77" pos:column="12"/></name><argument_list pos:line="77" pos:column="12">(<argument><expr><literal type="string" pos:line="77" pos:column="13">"memory plugin: %26s: %g"<pos:position pos:line="77" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="40">sysctl_keys<pos:position pos:line="77" pos:column="51"/></name><index pos:line="77" pos:column="51">[<expr><name pos:line="77" pos:column="52">i<pos:position pos:line="77" pos:column="53"/></name></expr>]<pos:position pos:line="77" pos:column="54"/></index></name></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="56">sysctl_vals<pos:position pos:line="77" pos:column="67"/></name><index pos:line="77" pos:column="67">[<expr><name pos:line="77" pos:column="68">i<pos:position pos:line="77" pos:column="69"/></name></expr>]<pos:position pos:line="77" pos:column="70"/></index></name></expr></argument>)<pos:position pos:line="77" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="72"/></expr_stmt>
    }<pos:position pos:line="78" pos:column="6"/></block></then> <else pos:line="78" pos:column="7">else <block pos:line="78" pos:column="12">{
      <expr_stmt><expr><name><name pos:line="79" pos:column="7">sysctl_vals<pos:position pos:line="79" pos:column="18"/></name><index pos:line="79" pos:column="18">[<expr><name pos:line="79" pos:column="19">i<pos:position pos:line="79" pos:column="20"/></name></expr>]<pos:position pos:line="79" pos:column="21"/></index></name> <operator pos:line="79" pos:column="22">=<pos:position pos:line="79" pos:column="23"/></operator> <name pos:line="79" pos:column="24">NAN<pos:position pos:line="79" pos:column="27"/></name></expr>;<pos:position pos:line="79" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="80" pos:column="6"/></block></else></if>
  }<pos:position pos:line="81" pos:column="4"/></block></for> <comment type="block" pos:line="81" pos:column="5">/* for (sysctl_keys) */</comment>

  <comment type="block" pos:line="83" pos:column="3">/* multiply all all page counts with the pagesize */</comment>
  <for pos:line="84" pos:column="3">for <control pos:line="84" pos:column="7">(<init><decl><type><name pos:line="84" pos:column="8">int<pos:position pos:line="84" pos:column="11"/></name></type> <name pos:line="84" pos:column="12">i<pos:position pos:line="84" pos:column="13"/></name> <init pos:line="84" pos:column="14">= <expr><literal type="number" pos:line="84" pos:column="16">1<pos:position pos:line="84" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="84" pos:column="18"/></init> <condition><expr><name><name pos:line="84" pos:column="19">sysctl_keys<pos:position pos:line="84" pos:column="30"/></name><index pos:line="84" pos:column="30">[<expr><name pos:line="84" pos:column="31">i<pos:position pos:line="84" pos:column="32"/></name></expr>]<pos:position pos:line="84" pos:column="33"/></index></name> <operator pos:line="84" pos:column="34">!=<pos:position pos:line="84" pos:column="36"/></operator> <name pos:line="84" pos:column="37">NULL<pos:position pos:line="84" pos:column="41"/></name></expr>;<pos:position pos:line="84" pos:column="42"/></condition> <incr><expr><name pos:line="84" pos:column="43">i<pos:position pos:line="84" pos:column="44"/></name><operator pos:line="84" pos:column="44">++<pos:position pos:line="84" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="84" pos:column="47"/></control>
    <block type="pseudo"><if pos:line="85" pos:column="5">if <condition pos:line="85" pos:column="8">(<expr><operator pos:line="85" pos:column="9">!<pos:position pos:line="85" pos:column="10"/></operator><call><name pos:line="85" pos:column="10">isnan<pos:position pos:line="85" pos:column="15"/></name><argument_list pos:line="85" pos:column="15">(<argument><expr><name><name pos:line="85" pos:column="16">sysctl_vals<pos:position pos:line="85" pos:column="27"/></name><index pos:line="85" pos:column="27">[<expr><name pos:line="85" pos:column="28">i<pos:position pos:line="85" pos:column="29"/></name></expr>]<pos:position pos:line="85" pos:column="30"/></index></name></expr></argument>)<pos:position pos:line="85" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="85" pos:column="32"/></condition><then pos:line="85" pos:column="32">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="86" pos:column="7">sysctl_vals<pos:position pos:line="86" pos:column="18"/></name><index pos:line="86" pos:column="18">[<expr><name pos:line="86" pos:column="19">i<pos:position pos:line="86" pos:column="20"/></name></expr>]<pos:position pos:line="86" pos:column="21"/></index></name> <operator pos:line="86" pos:column="22">*=<pos:position pos:line="86" pos:column="24"/></operator> <name><name pos:line="86" pos:column="25">sysctl_vals<pos:position pos:line="86" pos:column="36"/></name><index pos:line="86" pos:column="36">[<expr><literal type="number" pos:line="86" pos:column="37">0<pos:position pos:line="86" pos:column="38"/></literal></expr>]<pos:position pos:line="86" pos:column="39"/></index></name></expr>;<pos:position pos:line="86" pos:column="40"/></expr_stmt></block></then></if></block></for>

  <expr_stmt><expr><call><name pos:line="88" pos:column="3">MEMORY_SUBMIT<pos:position pos:line="88" pos:column="16"/></name><argument_list pos:line="88" pos:column="16">(<argument><expr><literal type="string" pos:line="88" pos:column="17">"free"<pos:position pos:line="88" pos:column="23"/></literal></expr></argument>, <argument><expr><operator pos:line="88" pos:column="25">(<pos:position pos:line="88" pos:column="26"/></operator><name pos:line="88" pos:column="26">gauge_t<pos:position pos:line="88" pos:column="33"/></name><operator pos:line="88" pos:column="33">)<pos:position pos:line="88" pos:column="34"/></operator><name><name pos:line="88" pos:column="34">sysctl_vals<pos:position pos:line="88" pos:column="45"/></name><index pos:line="88" pos:column="45">[<expr><literal type="number" pos:line="88" pos:column="46">2<pos:position pos:line="88" pos:column="47"/></literal></expr>]<pos:position pos:line="88" pos:column="48"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="50">"wired"<pos:position pos:line="88" pos:column="57"/></literal></expr></argument>,
                <argument><expr><operator pos:line="89" pos:column="17">(<pos:position pos:line="89" pos:column="18"/></operator><name pos:line="89" pos:column="18">gauge_t<pos:position pos:line="89" pos:column="25"/></name><operator pos:line="89" pos:column="25">)<pos:position pos:line="89" pos:column="26"/></operator><name><name pos:line="89" pos:column="26">sysctl_vals<pos:position pos:line="89" pos:column="37"/></name><index pos:line="89" pos:column="37">[<expr><literal type="number" pos:line="89" pos:column="38">3<pos:position pos:line="89" pos:column="39"/></literal></expr>]<pos:position pos:line="89" pos:column="40"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="89" pos:column="42">"active"<pos:position pos:line="89" pos:column="50"/></literal></expr></argument>, <argument><expr><operator pos:line="89" pos:column="52">(<pos:position pos:line="89" pos:column="53"/></operator><name pos:line="89" pos:column="53">gauge_t<pos:position pos:line="89" pos:column="60"/></name><operator pos:line="89" pos:column="60">)<pos:position pos:line="89" pos:column="61"/></operator><name><name pos:line="89" pos:column="61">sysctl_vals<pos:position pos:line="89" pos:column="72"/></name><index pos:line="89" pos:column="72">[<expr><literal type="number" pos:line="89" pos:column="73">4<pos:position pos:line="89" pos:column="74"/></literal></expr>]<pos:position pos:line="89" pos:column="75"/></index></name></expr></argument>,
                <argument><expr><literal type="string" pos:line="90" pos:column="17">"inactive"<pos:position pos:line="90" pos:column="27"/></literal></expr></argument>, <argument><expr><operator pos:line="90" pos:column="29">(<pos:position pos:line="90" pos:column="30"/></operator><name pos:line="90" pos:column="30">gauge_t<pos:position pos:line="90" pos:column="37"/></name><operator pos:line="90" pos:column="37">)<pos:position pos:line="90" pos:column="38"/></operator><name><name pos:line="90" pos:column="38">sysctl_vals<pos:position pos:line="90" pos:column="49"/></name><index pos:line="90" pos:column="49">[<expr><literal type="number" pos:line="90" pos:column="50">5<pos:position pos:line="90" pos:column="51"/></literal></expr>]<pos:position pos:line="90" pos:column="52"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="54">"cache"<pos:position pos:line="90" pos:column="61"/></literal></expr></argument>,
                <argument><expr><operator pos:line="91" pos:column="17">(<pos:position pos:line="91" pos:column="18"/></operator><name pos:line="91" pos:column="18">gauge_t<pos:position pos:line="91" pos:column="25"/></name><operator pos:line="91" pos:column="25">)<pos:position pos:line="91" pos:column="26"/></operator><name><name pos:line="91" pos:column="26">sysctl_vals<pos:position pos:line="91" pos:column="37"/></name><index pos:line="91" pos:column="37">[<expr><literal type="number" pos:line="91" pos:column="38">6<pos:position pos:line="91" pos:column="39"/></literal></expr>]<pos:position pos:line="91" pos:column="40"/></index></name></expr></argument>)<pos:position pos:line="91" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="42"/></expr_stmt>
<comment type="block" pos:line="92" pos:column="1">/* #endif HAVE_SYSCTLBYNAME */</comment>

<cpp:elif pos:line="94" pos:column="1">#<cpp:directive pos:line="94" pos:column="2">elif<pos:position pos:line="94" pos:column="6"/></cpp:directive> <expr><name pos:line="94" pos:column="7">KERNEL_LINUX<pos:position pos:line="94" pos:column="19"/></name></expr></cpp:elif>
  <decl_stmt><decl><type><name pos:line="95" pos:column="3">FILE<pos:position pos:line="95" pos:column="7"/></name> <modifier pos:line="95" pos:column="8">*<pos:position pos:line="95" pos:column="9"/></modifier></type><name pos:line="95" pos:column="9">fh<pos:position pos:line="95" pos:column="11"/></name></decl>;<pos:position pos:line="95" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="96" pos:column="3">char<pos:position pos:line="96" pos:column="7"/></name></type> <name><name pos:line="96" pos:column="8">buffer<pos:position pos:line="96" pos:column="14"/></name><index pos:line="96" pos:column="14">[<expr><literal type="number" pos:line="96" pos:column="15">1024<pos:position pos:line="96" pos:column="19"/></literal></expr>]<pos:position pos:line="96" pos:column="20"/></index></name></decl>;<pos:position pos:line="96" pos:column="21"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="98" pos:column="3">char<pos:position pos:line="98" pos:column="7"/></name> <modifier pos:line="98" pos:column="8">*<pos:position pos:line="98" pos:column="9"/></modifier></type><name><name pos:line="98" pos:column="9">fields<pos:position pos:line="98" pos:column="15"/></name><index pos:line="98" pos:column="15">[<expr><literal type="number" pos:line="98" pos:column="16">8<pos:position pos:line="98" pos:column="17"/></literal></expr>]<pos:position pos:line="98" pos:column="18"/></index></name></decl>;<pos:position pos:line="98" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="99" pos:column="3">int<pos:position pos:line="99" pos:column="6"/></name></type> <name pos:line="99" pos:column="7">numfields<pos:position pos:line="99" pos:column="16"/></name></decl>;<pos:position pos:line="99" pos:column="17"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="101" pos:column="3">_Bool<pos:position pos:line="101" pos:column="8"/></name></type> <name pos:line="101" pos:column="9">detailed_slab_info<pos:position pos:line="101" pos:column="27"/></name> <init pos:line="101" pos:column="28">= <expr><literal type="number" pos:line="101" pos:column="30">0<pos:position pos:line="101" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="101" pos:column="32"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="103" pos:column="3">gauge_t<pos:position pos:line="103" pos:column="10"/></name></type> <name pos:line="103" pos:column="11">mem_total<pos:position pos:line="103" pos:column="20"/></name> <init pos:line="103" pos:column="21">= <expr><literal type="number" pos:line="103" pos:column="23">0<pos:position pos:line="103" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="103" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="104" pos:column="3">gauge_t<pos:position pos:line="104" pos:column="10"/></name></type> <name pos:line="104" pos:column="11">mem_used<pos:position pos:line="104" pos:column="19"/></name> <init pos:line="104" pos:column="20">= <expr><literal type="number" pos:line="104" pos:column="22">0<pos:position pos:line="104" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="104" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="105" pos:column="3">gauge_t<pos:position pos:line="105" pos:column="10"/></name></type> <name pos:line="105" pos:column="11">mem_buffered<pos:position pos:line="105" pos:column="23"/></name> <init pos:line="105" pos:column="24">= <expr><literal type="number" pos:line="105" pos:column="26">0<pos:position pos:line="105" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="105" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="106" pos:column="3">gauge_t<pos:position pos:line="106" pos:column="10"/></name></type> <name pos:line="106" pos:column="11">mem_cached<pos:position pos:line="106" pos:column="21"/></name> <init pos:line="106" pos:column="22">= <expr><literal type="number" pos:line="106" pos:column="24">0<pos:position pos:line="106" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="106" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="107" pos:column="3">gauge_t<pos:position pos:line="107" pos:column="10"/></name></type> <name pos:line="107" pos:column="11">mem_free<pos:position pos:line="107" pos:column="19"/></name> <init pos:line="107" pos:column="20">= <expr><literal type="number" pos:line="107" pos:column="22">0<pos:position pos:line="107" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="107" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="108" pos:column="3">gauge_t<pos:position pos:line="108" pos:column="10"/></name></type> <name pos:line="108" pos:column="11">mem_slab_total<pos:position pos:line="108" pos:column="25"/></name> <init pos:line="108" pos:column="26">= <expr><literal type="number" pos:line="108" pos:column="28">0<pos:position pos:line="108" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="108" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="109" pos:column="3">gauge_t<pos:position pos:line="109" pos:column="10"/></name></type> <name pos:line="109" pos:column="11">mem_slab_reclaimable<pos:position pos:line="109" pos:column="31"/></name> <init pos:line="109" pos:column="32">= <expr><literal type="number" pos:line="109" pos:column="34">0<pos:position pos:line="109" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="109" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="110" pos:column="3">gauge_t<pos:position pos:line="110" pos:column="10"/></name></type> <name pos:line="110" pos:column="11">mem_slab_unreclaimable<pos:position pos:line="110" pos:column="33"/></name> <init pos:line="110" pos:column="34">= <expr><literal type="number" pos:line="110" pos:column="36">0<pos:position pos:line="110" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="110" pos:column="38"/></decl_stmt>

  <if pos:line="112" pos:column="3">if <condition pos:line="112" pos:column="6">(<expr><operator pos:line="112" pos:column="7">(<pos:position pos:line="112" pos:column="8"/></operator><name pos:line="112" pos:column="8">fh<pos:position pos:line="112" pos:column="10"/></name> <operator pos:line="112" pos:column="11">=<pos:position pos:line="112" pos:column="12"/></operator> <call><name pos:line="112" pos:column="13">fopen<pos:position pos:line="112" pos:column="18"/></name><argument_list pos:line="112" pos:column="18">(<argument><expr><literal type="string" pos:line="112" pos:column="19">"/proc/meminfo"<pos:position pos:line="112" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="112" pos:column="36">"r"<pos:position pos:line="112" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="112" pos:column="40"/></argument_list></call><operator pos:line="112" pos:column="40">)<pos:position pos:line="112" pos:column="41"/></operator> <operator pos:line="112" pos:column="42">==<pos:position pos:line="112" pos:column="44"/></operator> <name pos:line="112" pos:column="45">NULL<pos:position pos:line="112" pos:column="49"/></name></expr>)<pos:position pos:line="112" pos:column="50"/></condition><then pos:line="112" pos:column="50"> <block pos:line="112" pos:column="51">{
    <decl_stmt><decl><type><name pos:line="113" pos:column="5">char<pos:position pos:line="113" pos:column="9"/></name></type> <name><name pos:line="113" pos:column="10">errbuf<pos:position pos:line="113" pos:column="16"/></name><index pos:line="113" pos:column="16">[<expr><literal type="number" pos:line="113" pos:column="17">1024<pos:position pos:line="113" pos:column="21"/></literal></expr>]<pos:position pos:line="113" pos:column="22"/></index></name></decl>;<pos:position pos:line="113" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="114" pos:column="5">WARNING<pos:position pos:line="114" pos:column="12"/></name><argument_list pos:line="114" pos:column="12">(<argument><expr><literal type="string" pos:line="114" pos:column="13">"memory: fopen: %s"<pos:position pos:line="114" pos:column="32"/></literal></expr></argument>, <argument><expr><call><name pos:line="114" pos:column="34">sstrerror<pos:position pos:line="114" pos:column="43"/></name><argument_list pos:line="114" pos:column="43">(<argument><expr><name pos:line="114" pos:column="44">errno<pos:position pos:line="114" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="51">errbuf<pos:position pos:line="114" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="114" pos:column="59">sizeof<argument_list pos:line="114" pos:column="65">(<argument><expr><name pos:line="114" pos:column="66">errbuf<pos:position pos:line="114" pos:column="72"/></name></expr></argument>)<pos:position pos:line="114" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="114" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="114" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="76"/></expr_stmt>
    <return pos:line="115" pos:column="5">return <expr><operator pos:line="115" pos:column="12">-<pos:position pos:line="115" pos:column="13"/></operator><literal type="number" pos:line="115" pos:column="13">1<pos:position pos:line="115" pos:column="14"/></literal></expr>;<pos:position pos:line="115" pos:column="15"/></return>
  }<pos:position pos:line="116" pos:column="4"/></block></then></if>

  <while pos:line="118" pos:column="3">while <condition pos:line="118" pos:column="9">(<expr><call><name pos:line="118" pos:column="10">fgets<pos:position pos:line="118" pos:column="15"/></name><argument_list pos:line="118" pos:column="15">(<argument><expr><name pos:line="118" pos:column="16">buffer<pos:position pos:line="118" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="118" pos:column="24">sizeof<argument_list pos:line="118" pos:column="30">(<argument><expr><name pos:line="118" pos:column="31">buffer<pos:position pos:line="118" pos:column="37"/></name></expr></argument>)<pos:position pos:line="118" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="118" pos:column="40">fh<pos:position pos:line="118" pos:column="42"/></name></expr></argument>)<pos:position pos:line="118" pos:column="43"/></argument_list></call> <operator pos:line="118" pos:column="44">!=<pos:position pos:line="118" pos:column="46"/></operator> <name pos:line="118" pos:column="47">NULL<pos:position pos:line="118" pos:column="51"/></name></expr>)<pos:position pos:line="118" pos:column="52"/></condition> <block pos:line="118" pos:column="53">{
    <decl_stmt><decl><type><name pos:line="119" pos:column="5">gauge_t<pos:position pos:line="119" pos:column="12"/></name> <modifier pos:line="119" pos:column="13">*<pos:position pos:line="119" pos:column="14"/></modifier></type><name pos:line="119" pos:column="14">val<pos:position pos:line="119" pos:column="17"/></name> <init pos:line="119" pos:column="18">= <expr><name pos:line="119" pos:column="20">NULL<pos:position pos:line="119" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="119" pos:column="25"/></decl_stmt>

    <if pos:line="121" pos:column="5">if <condition pos:line="121" pos:column="8">(<expr><call><name pos:line="121" pos:column="9">strncasecmp<pos:position pos:line="121" pos:column="20"/></name><argument_list pos:line="121" pos:column="20">(<argument><expr><name pos:line="121" pos:column="21">buffer<pos:position pos:line="121" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="121" pos:column="29">"MemTotal:"<pos:position pos:line="121" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="121" pos:column="42">9<pos:position pos:line="121" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="121" pos:column="44"/></argument_list></call> <operator pos:line="121" pos:column="45">==<pos:position pos:line="121" pos:column="47"/></operator> <literal type="number" pos:line="121" pos:column="48">0<pos:position pos:line="121" pos:column="49"/></literal></expr>)<pos:position pos:line="121" pos:column="50"/></condition><then pos:line="121" pos:column="50">
      <block type="pseudo"><expr_stmt><expr><name pos:line="122" pos:column="7">val<pos:position pos:line="122" pos:column="10"/></name> <operator pos:line="122" pos:column="11">=<pos:position pos:line="122" pos:column="12"/></operator> <operator pos:line="122" pos:column="13">&amp;<pos:position pos:line="122" pos:column="18"/></operator><name pos:line="122" pos:column="14">mem_total<pos:position pos:line="122" pos:column="23"/></name></expr>;<pos:position pos:line="122" pos:column="24"/></expr_stmt></block></then>
    <elseif pos:line="123" pos:column="5">else <if pos:line="123" pos:column="10">if <condition pos:line="123" pos:column="13">(<expr><call><name pos:line="123" pos:column="14">strncasecmp<pos:position pos:line="123" pos:column="25"/></name><argument_list pos:line="123" pos:column="25">(<argument><expr><name pos:line="123" pos:column="26">buffer<pos:position pos:line="123" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="123" pos:column="34">"MemFree:"<pos:position pos:line="123" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="123" pos:column="46">8<pos:position pos:line="123" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="123" pos:column="48"/></argument_list></call> <operator pos:line="123" pos:column="49">==<pos:position pos:line="123" pos:column="51"/></operator> <literal type="number" pos:line="123" pos:column="52">0<pos:position pos:line="123" pos:column="53"/></literal></expr>)<pos:position pos:line="123" pos:column="54"/></condition><then pos:line="123" pos:column="54">
      <block type="pseudo"><expr_stmt><expr><name pos:line="124" pos:column="7">val<pos:position pos:line="124" pos:column="10"/></name> <operator pos:line="124" pos:column="11">=<pos:position pos:line="124" pos:column="12"/></operator> <operator pos:line="124" pos:column="13">&amp;<pos:position pos:line="124" pos:column="18"/></operator><name pos:line="124" pos:column="14">mem_free<pos:position pos:line="124" pos:column="22"/></name></expr>;<pos:position pos:line="124" pos:column="23"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="125" pos:column="5">else <if pos:line="125" pos:column="10">if <condition pos:line="125" pos:column="13">(<expr><call><name pos:line="125" pos:column="14">strncasecmp<pos:position pos:line="125" pos:column="25"/></name><argument_list pos:line="125" pos:column="25">(<argument><expr><name pos:line="125" pos:column="26">buffer<pos:position pos:line="125" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="125" pos:column="34">"Buffers:"<pos:position pos:line="125" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="125" pos:column="46">8<pos:position pos:line="125" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="125" pos:column="48"/></argument_list></call> <operator pos:line="125" pos:column="49">==<pos:position pos:line="125" pos:column="51"/></operator> <literal type="number" pos:line="125" pos:column="52">0<pos:position pos:line="125" pos:column="53"/></literal></expr>)<pos:position pos:line="125" pos:column="54"/></condition><then pos:line="125" pos:column="54">
      <block type="pseudo"><expr_stmt><expr><name pos:line="126" pos:column="7">val<pos:position pos:line="126" pos:column="10"/></name> <operator pos:line="126" pos:column="11">=<pos:position pos:line="126" pos:column="12"/></operator> <operator pos:line="126" pos:column="13">&amp;<pos:position pos:line="126" pos:column="18"/></operator><name pos:line="126" pos:column="14">mem_buffered<pos:position pos:line="126" pos:column="26"/></name></expr>;<pos:position pos:line="126" pos:column="27"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="127" pos:column="5">else <if pos:line="127" pos:column="10">if <condition pos:line="127" pos:column="13">(<expr><call><name pos:line="127" pos:column="14">strncasecmp<pos:position pos:line="127" pos:column="25"/></name><argument_list pos:line="127" pos:column="25">(<argument><expr><name pos:line="127" pos:column="26">buffer<pos:position pos:line="127" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="127" pos:column="34">"Cached:"<pos:position pos:line="127" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="127" pos:column="45">7<pos:position pos:line="127" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="127" pos:column="47"/></argument_list></call> <operator pos:line="127" pos:column="48">==<pos:position pos:line="127" pos:column="50"/></operator> <literal type="number" pos:line="127" pos:column="51">0<pos:position pos:line="127" pos:column="52"/></literal></expr>)<pos:position pos:line="127" pos:column="53"/></condition><then pos:line="127" pos:column="53">
      <block type="pseudo"><expr_stmt><expr><name pos:line="128" pos:column="7">val<pos:position pos:line="128" pos:column="10"/></name> <operator pos:line="128" pos:column="11">=<pos:position pos:line="128" pos:column="12"/></operator> <operator pos:line="128" pos:column="13">&amp;<pos:position pos:line="128" pos:column="18"/></operator><name pos:line="128" pos:column="14">mem_cached<pos:position pos:line="128" pos:column="24"/></name></expr>;<pos:position pos:line="128" pos:column="25"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="129" pos:column="5">else <if pos:line="129" pos:column="10">if <condition pos:line="129" pos:column="13">(<expr><call><name pos:line="129" pos:column="14">strncasecmp<pos:position pos:line="129" pos:column="25"/></name><argument_list pos:line="129" pos:column="25">(<argument><expr><name pos:line="129" pos:column="26">buffer<pos:position pos:line="129" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="129" pos:column="34">"Slab:"<pos:position pos:line="129" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="129" pos:column="43">5<pos:position pos:line="129" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="129" pos:column="45"/></argument_list></call> <operator pos:line="129" pos:column="46">==<pos:position pos:line="129" pos:column="48"/></operator> <literal type="number" pos:line="129" pos:column="49">0<pos:position pos:line="129" pos:column="50"/></literal></expr>)<pos:position pos:line="129" pos:column="51"/></condition><then pos:line="129" pos:column="51">
      <block type="pseudo"><expr_stmt><expr><name pos:line="130" pos:column="7">val<pos:position pos:line="130" pos:column="10"/></name> <operator pos:line="130" pos:column="11">=<pos:position pos:line="130" pos:column="12"/></operator> <operator pos:line="130" pos:column="13">&amp;<pos:position pos:line="130" pos:column="18"/></operator><name pos:line="130" pos:column="14">mem_slab_total<pos:position pos:line="130" pos:column="28"/></name></expr>;<pos:position pos:line="130" pos:column="29"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="131" pos:column="5">else <if pos:line="131" pos:column="10">if <condition pos:line="131" pos:column="13">(<expr><call><name pos:line="131" pos:column="14">strncasecmp<pos:position pos:line="131" pos:column="25"/></name><argument_list pos:line="131" pos:column="25">(<argument><expr><name pos:line="131" pos:column="26">buffer<pos:position pos:line="131" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="131" pos:column="34">"SReclaimable:"<pos:position pos:line="131" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="131" pos:column="51">13<pos:position pos:line="131" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="131" pos:column="54"/></argument_list></call> <operator pos:line="131" pos:column="55">==<pos:position pos:line="131" pos:column="57"/></operator> <literal type="number" pos:line="131" pos:column="58">0<pos:position pos:line="131" pos:column="59"/></literal></expr>)<pos:position pos:line="131" pos:column="60"/></condition><then pos:line="131" pos:column="60"> <block pos:line="131" pos:column="61">{
      <expr_stmt><expr><name pos:line="132" pos:column="7">val<pos:position pos:line="132" pos:column="10"/></name> <operator pos:line="132" pos:column="11">=<pos:position pos:line="132" pos:column="12"/></operator> <operator pos:line="132" pos:column="13">&amp;<pos:position pos:line="132" pos:column="18"/></operator><name pos:line="132" pos:column="14">mem_slab_reclaimable<pos:position pos:line="132" pos:column="34"/></name></expr>;<pos:position pos:line="132" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><name pos:line="133" pos:column="7">detailed_slab_info<pos:position pos:line="133" pos:column="25"/></name> <operator pos:line="133" pos:column="26">=<pos:position pos:line="133" pos:column="27"/></operator> <literal type="number" pos:line="133" pos:column="28">1<pos:position pos:line="133" pos:column="29"/></literal></expr>;<pos:position pos:line="133" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="134" pos:column="6"/></block></then></if></elseif> <elseif pos:line="134" pos:column="7">else <if pos:line="134" pos:column="12">if <condition pos:line="134" pos:column="15">(<expr><call><name pos:line="134" pos:column="16">strncasecmp<pos:position pos:line="134" pos:column="27"/></name><argument_list pos:line="134" pos:column="27">(<argument><expr><name pos:line="134" pos:column="28">buffer<pos:position pos:line="134" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="134" pos:column="36">"SUnreclaim:"<pos:position pos:line="134" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="134" pos:column="51">11<pos:position pos:line="134" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="134" pos:column="54"/></argument_list></call> <operator pos:line="134" pos:column="55">==<pos:position pos:line="134" pos:column="57"/></operator> <literal type="number" pos:line="134" pos:column="58">0<pos:position pos:line="134" pos:column="59"/></literal></expr>)<pos:position pos:line="134" pos:column="60"/></condition><then pos:line="134" pos:column="60"> <block pos:line="134" pos:column="61">{
      <expr_stmt><expr><name pos:line="135" pos:column="7">val<pos:position pos:line="135" pos:column="10"/></name> <operator pos:line="135" pos:column="11">=<pos:position pos:line="135" pos:column="12"/></operator> <operator pos:line="135" pos:column="13">&amp;<pos:position pos:line="135" pos:column="18"/></operator><name pos:line="135" pos:column="14">mem_slab_unreclaimable<pos:position pos:line="135" pos:column="36"/></name></expr>;<pos:position pos:line="135" pos:column="37"/></expr_stmt>
      <expr_stmt><expr><name pos:line="136" pos:column="7">detailed_slab_info<pos:position pos:line="136" pos:column="25"/></name> <operator pos:line="136" pos:column="26">=<pos:position pos:line="136" pos:column="27"/></operator> <literal type="number" pos:line="136" pos:column="28">1<pos:position pos:line="136" pos:column="29"/></literal></expr>;<pos:position pos:line="136" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="137" pos:column="6"/></block></then></if></elseif> <else pos:line="137" pos:column="7">else
      <block type="pseudo"><continue pos:line="138" pos:column="7">continue;<pos:position pos:line="138" pos:column="16"/></continue></block></else></if>

    <expr_stmt><expr><name pos:line="140" pos:column="5">numfields<pos:position pos:line="140" pos:column="14"/></name> <operator pos:line="140" pos:column="15">=<pos:position pos:line="140" pos:column="16"/></operator> <call><name pos:line="140" pos:column="17">strsplit<pos:position pos:line="140" pos:column="25"/></name><argument_list pos:line="140" pos:column="25">(<argument><expr><name pos:line="140" pos:column="26">buffer<pos:position pos:line="140" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="140" pos:column="34">fields<pos:position pos:line="140" pos:column="40"/></name></expr></argument>, <argument><expr><call><name pos:line="140" pos:column="42">STATIC_ARRAY_SIZE<pos:position pos:line="140" pos:column="59"/></name><argument_list pos:line="140" pos:column="59">(<argument><expr><name pos:line="140" pos:column="60">fields<pos:position pos:line="140" pos:column="66"/></name></expr></argument>)<pos:position pos:line="140" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="140" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="69"/></expr_stmt>
    <if pos:line="141" pos:column="5">if <condition pos:line="141" pos:column="8">(<expr><name pos:line="141" pos:column="9">numfields<pos:position pos:line="141" pos:column="18"/></name> <operator pos:line="141" pos:column="19">&lt;<pos:position pos:line="141" pos:column="23"/></operator> <literal type="number" pos:line="141" pos:column="21">2<pos:position pos:line="141" pos:column="22"/></literal></expr>)<pos:position pos:line="141" pos:column="23"/></condition><then pos:line="141" pos:column="23">
      <block type="pseudo"><continue pos:line="142" pos:column="7">continue;<pos:position pos:line="142" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><operator pos:line="144" pos:column="5">*<pos:position pos:line="144" pos:column="6"/></operator><name pos:line="144" pos:column="6">val<pos:position pos:line="144" pos:column="9"/></name> <operator pos:line="144" pos:column="10">=<pos:position pos:line="144" pos:column="11"/></operator> <literal type="number" pos:line="144" pos:column="12">1024.0<pos:position pos:line="144" pos:column="18"/></literal> <operator pos:line="144" pos:column="19">*<pos:position pos:line="144" pos:column="20"/></operator> <call><name pos:line="144" pos:column="21">atof<pos:position pos:line="144" pos:column="25"/></name><argument_list pos:line="144" pos:column="25">(<argument><expr><name><name pos:line="144" pos:column="26">fields<pos:position pos:line="144" pos:column="32"/></name><index pos:line="144" pos:column="32">[<expr><literal type="number" pos:line="144" pos:column="33">1<pos:position pos:line="144" pos:column="34"/></literal></expr>]<pos:position pos:line="144" pos:column="35"/></index></name></expr></argument>)<pos:position pos:line="144" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="37"/></expr_stmt>
  }<pos:position pos:line="145" pos:column="4"/></block></while>

  <if pos:line="147" pos:column="3">if <condition pos:line="147" pos:column="6">(<expr><call><name pos:line="147" pos:column="7">fclose<pos:position pos:line="147" pos:column="13"/></name><argument_list pos:line="147" pos:column="13">(<argument><expr><name pos:line="147" pos:column="14">fh<pos:position pos:line="147" pos:column="16"/></name></expr></argument>)<pos:position pos:line="147" pos:column="17"/></argument_list></call></expr>)<pos:position pos:line="147" pos:column="18"/></condition><then pos:line="147" pos:column="18"> <block pos:line="147" pos:column="19">{
    <decl_stmt><decl><type><name pos:line="148" pos:column="5">char<pos:position pos:line="148" pos:column="9"/></name></type> <name><name pos:line="148" pos:column="10">errbuf<pos:position pos:line="148" pos:column="16"/></name><index pos:line="148" pos:column="16">[<expr><literal type="number" pos:line="148" pos:column="17">1024<pos:position pos:line="148" pos:column="21"/></literal></expr>]<pos:position pos:line="148" pos:column="22"/></index></name></decl>;<pos:position pos:line="148" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="149" pos:column="5">WARNING<pos:position pos:line="149" pos:column="12"/></name><argument_list pos:line="149" pos:column="12">(<argument><expr><literal type="string" pos:line="149" pos:column="13">"memory: fclose: %s"<pos:position pos:line="149" pos:column="33"/></literal></expr></argument>, <argument><expr><call><name pos:line="149" pos:column="35">sstrerror<pos:position pos:line="149" pos:column="44"/></name><argument_list pos:line="149" pos:column="44">(<argument><expr><name pos:line="149" pos:column="45">errno<pos:position pos:line="149" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="149" pos:column="52">errbuf<pos:position pos:line="149" pos:column="58"/></name></expr></argument>, <argument><expr><sizeof pos:line="149" pos:column="60">sizeof<argument_list pos:line="149" pos:column="66">(<argument><expr><name pos:line="149" pos:column="67">errbuf<pos:position pos:line="149" pos:column="73"/></name></expr></argument>)<pos:position pos:line="149" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="149" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="149" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="77"/></expr_stmt>
  }<pos:position pos:line="150" pos:column="4"/></block></then></if>

  <if pos:line="152" pos:column="3">if <condition pos:line="152" pos:column="6">(<expr><name pos:line="152" pos:column="7">mem_total<pos:position pos:line="152" pos:column="16"/></name> <operator pos:line="152" pos:column="17">&lt;<pos:position pos:line="152" pos:column="21"/></operator> <operator pos:line="152" pos:column="19">(<pos:position pos:line="152" pos:column="20"/></operator><name pos:line="152" pos:column="20">mem_free<pos:position pos:line="152" pos:column="28"/></name> <operator pos:line="152" pos:column="29">+<pos:position pos:line="152" pos:column="30"/></operator> <name pos:line="152" pos:column="31">mem_buffered<pos:position pos:line="152" pos:column="43"/></name> <operator pos:line="152" pos:column="44">+<pos:position pos:line="152" pos:column="45"/></operator> <name pos:line="152" pos:column="46">mem_cached<pos:position pos:line="152" pos:column="56"/></name> <operator pos:line="152" pos:column="57">+<pos:position pos:line="152" pos:column="58"/></operator> <name pos:line="152" pos:column="59">mem_slab_total<pos:position pos:line="152" pos:column="73"/></name><operator pos:line="152" pos:column="73">)<pos:position pos:line="152" pos:column="74"/></operator></expr>)<pos:position pos:line="152" pos:column="75"/></condition><then pos:line="152" pos:column="75">
    <block type="pseudo"><return pos:line="153" pos:column="5">return <expr><operator pos:line="153" pos:column="12">-<pos:position pos:line="153" pos:column="13"/></operator><literal type="number" pos:line="153" pos:column="13">1<pos:position pos:line="153" pos:column="14"/></literal></expr>;<pos:position pos:line="153" pos:column="15"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="155" pos:column="3">mem_used<pos:position pos:line="155" pos:column="11"/></name> <operator pos:line="155" pos:column="12">=<pos:position pos:line="155" pos:column="13"/></operator>
      <name pos:line="156" pos:column="7">mem_total<pos:position pos:line="156" pos:column="16"/></name> <operator pos:line="156" pos:column="17">-<pos:position pos:line="156" pos:column="18"/></operator> <operator pos:line="156" pos:column="19">(<pos:position pos:line="156" pos:column="20"/></operator><name pos:line="156" pos:column="20">mem_free<pos:position pos:line="156" pos:column="28"/></name> <operator pos:line="156" pos:column="29">+<pos:position pos:line="156" pos:column="30"/></operator> <name pos:line="156" pos:column="31">mem_buffered<pos:position pos:line="156" pos:column="43"/></name> <operator pos:line="156" pos:column="44">+<pos:position pos:line="156" pos:column="45"/></operator> <name pos:line="156" pos:column="46">mem_cached<pos:position pos:line="156" pos:column="56"/></name> <operator pos:line="156" pos:column="57">+<pos:position pos:line="156" pos:column="58"/></operator> <name pos:line="156" pos:column="59">mem_slab_total<pos:position pos:line="156" pos:column="73"/></name><operator pos:line="156" pos:column="73">)<pos:position pos:line="156" pos:column="74"/></operator></expr>;<pos:position pos:line="156" pos:column="75"/></expr_stmt>

  <comment type="block" pos:line="158" pos:column="3">/* SReclaimable and SUnreclaim were introduced in kernel 2.6.19
   * They sum up to the value of Slab, which is available on older &amp; newer
   * kernels. So SReclaimable/SUnreclaim are submitted if available, and Slab
   * if not. */</comment>
  <if pos:line="162" pos:column="3">if <condition pos:line="162" pos:column="6">(<expr><name pos:line="162" pos:column="7">detailed_slab_info<pos:position pos:line="162" pos:column="25"/></name></expr>)<pos:position pos:line="162" pos:column="26"/></condition><then pos:line="162" pos:column="26">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="163" pos:column="5">MEMORY_SUBMIT<pos:position pos:line="163" pos:column="18"/></name><argument_list pos:line="163" pos:column="18">(<argument><expr><literal type="string" pos:line="163" pos:column="19">"used"<pos:position pos:line="163" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="163" pos:column="27">mem_used<pos:position pos:line="163" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="163" pos:column="37">"buffered"<pos:position pos:line="163" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="163" pos:column="49">mem_buffered<pos:position pos:line="163" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="163" pos:column="63">"cached"<pos:position pos:line="163" pos:column="71"/></literal></expr></argument>,
                  <argument><expr><name pos:line="164" pos:column="19">mem_cached<pos:position pos:line="164" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="164" pos:column="31">"free"<pos:position pos:line="164" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="164" pos:column="39">mem_free<pos:position pos:line="164" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="164" pos:column="49">"slab_unrecl"<pos:position pos:line="164" pos:column="62"/></literal></expr></argument>,
                  <argument><expr><name pos:line="165" pos:column="19">mem_slab_unreclaimable<pos:position pos:line="165" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="165" pos:column="43">"slab_recl"<pos:position pos:line="165" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="165" pos:column="56">mem_slab_reclaimable<pos:position pos:line="165" pos:column="76"/></name></expr></argument>)<pos:position pos:line="165" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="78"/></expr_stmt></block></then>
  <else pos:line="166" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="167" pos:column="5">MEMORY_SUBMIT<pos:position pos:line="167" pos:column="18"/></name><argument_list pos:line="167" pos:column="18">(<argument><expr><literal type="string" pos:line="167" pos:column="19">"used"<pos:position pos:line="167" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="167" pos:column="27">mem_used<pos:position pos:line="167" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="167" pos:column="37">"buffered"<pos:position pos:line="167" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="167" pos:column="49">mem_buffered<pos:position pos:line="167" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="167" pos:column="63">"cached"<pos:position pos:line="167" pos:column="71"/></literal></expr></argument>,
                  <argument><expr><name pos:line="168" pos:column="19">mem_cached<pos:position pos:line="168" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="168" pos:column="31">"free"<pos:position pos:line="168" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="168" pos:column="39">mem_free<pos:position pos:line="168" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="168" pos:column="49">"slab"<pos:position pos:line="168" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="168" pos:column="57">mem_slab_total<pos:position pos:line="168" pos:column="71"/></name></expr></argument>)<pos:position pos:line="168" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="73"/></expr_stmt></block></else></if>
<comment type="block" pos:line="169" pos:column="1">/* #endif KERNEL_LINUX */</comment>

<cpp:elif pos:line="171" pos:column="1">#<cpp:directive pos:line="171" pos:column="2">elif<pos:position pos:line="171" pos:column="6"/></cpp:directive> <expr><name pos:line="171" pos:column="7">HAVE_LIBKSTAT<pos:position pos:line="171" pos:column="20"/></name></expr></cpp:elif>
  <comment type="block" pos:line="172" pos:column="3">/* Most of the additions here were taken as-is from the k9toolkit from
   * Brendan Gregg and are subject to change I guess */</comment>
  <decl_stmt><decl><type><name pos:line="174" pos:column="3">long<pos:position pos:line="174" pos:column="7"/></name> <name pos:line="174" pos:column="8">long<pos:position pos:line="174" pos:column="12"/></name></type> <name pos:line="174" pos:column="13">mem_used<pos:position pos:line="174" pos:column="21"/></name></decl>;<pos:position pos:line="174" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="175" pos:column="3">long<pos:position pos:line="175" pos:column="7"/></name> <name pos:line="175" pos:column="8">long<pos:position pos:line="175" pos:column="12"/></name></type> <name pos:line="175" pos:column="13">mem_free<pos:position pos:line="175" pos:column="21"/></name></decl>;<pos:position pos:line="175" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="176" pos:column="3">long<pos:position pos:line="176" pos:column="7"/></name> <name pos:line="176" pos:column="8">long<pos:position pos:line="176" pos:column="12"/></name></type> <name pos:line="176" pos:column="13">mem_lock<pos:position pos:line="176" pos:column="21"/></name></decl>;<pos:position pos:line="176" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="177" pos:column="3">long<pos:position pos:line="177" pos:column="7"/></name> <name pos:line="177" pos:column="8">long<pos:position pos:line="177" pos:column="12"/></name></type> <name pos:line="177" pos:column="13">mem_kern<pos:position pos:line="177" pos:column="21"/></name></decl>;<pos:position pos:line="177" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="178" pos:column="3">long<pos:position pos:line="178" pos:column="7"/></name> <name pos:line="178" pos:column="8">long<pos:position pos:line="178" pos:column="12"/></name></type> <name pos:line="178" pos:column="13">mem_unus<pos:position pos:line="178" pos:column="21"/></name></decl>;<pos:position pos:line="178" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="179" pos:column="3">long<pos:position pos:line="179" pos:column="7"/></name> <name pos:line="179" pos:column="8">long<pos:position pos:line="179" pos:column="12"/></name></type> <name pos:line="179" pos:column="13">arcsize<pos:position pos:line="179" pos:column="20"/></name></decl>;<pos:position pos:line="179" pos:column="21"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="181" pos:column="3">long<pos:position pos:line="181" pos:column="7"/></name> <name pos:line="181" pos:column="8">long<pos:position pos:line="181" pos:column="12"/></name></type> <name pos:line="181" pos:column="13">pp_kernel<pos:position pos:line="181" pos:column="22"/></name></decl>;<pos:position pos:line="181" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="182" pos:column="3">long<pos:position pos:line="182" pos:column="7"/></name> <name pos:line="182" pos:column="8">long<pos:position pos:line="182" pos:column="12"/></name></type> <name pos:line="182" pos:column="13">physmem<pos:position pos:line="182" pos:column="20"/></name></decl>;<pos:position pos:line="182" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="183" pos:column="3">long<pos:position pos:line="183" pos:column="7"/></name> <name pos:line="183" pos:column="8">long<pos:position pos:line="183" pos:column="12"/></name></type> <name pos:line="183" pos:column="13">availrmem<pos:position pos:line="183" pos:column="22"/></name></decl>;<pos:position pos:line="183" pos:column="23"/></decl_stmt>

  <if pos:line="185" pos:column="3">if <condition pos:line="185" pos:column="6">(<expr><name pos:line="185" pos:column="7">ksp<pos:position pos:line="185" pos:column="10"/></name> <operator pos:line="185" pos:column="11">==<pos:position pos:line="185" pos:column="13"/></operator> <name pos:line="185" pos:column="14">NULL<pos:position pos:line="185" pos:column="18"/></name></expr>)<pos:position pos:line="185" pos:column="19"/></condition><then pos:line="185" pos:column="19">
    <block type="pseudo"><return pos:line="186" pos:column="5">return <expr><operator pos:line="186" pos:column="12">-<pos:position pos:line="186" pos:column="13"/></operator><literal type="number" pos:line="186" pos:column="13">1<pos:position pos:line="186" pos:column="14"/></literal></expr>;<pos:position pos:line="186" pos:column="15"/></return></block></then></if>
  <if pos:line="187" pos:column="3">if <condition pos:line="187" pos:column="6">(<expr><name pos:line="187" pos:column="7">ksz<pos:position pos:line="187" pos:column="10"/></name> <operator pos:line="187" pos:column="11">==<pos:position pos:line="187" pos:column="13"/></operator> <name pos:line="187" pos:column="14">NULL<pos:position pos:line="187" pos:column="18"/></name></expr>)<pos:position pos:line="187" pos:column="19"/></condition><then pos:line="187" pos:column="19">
    <block type="pseudo"><return pos:line="188" pos:column="5">return <expr><operator pos:line="188" pos:column="12">-<pos:position pos:line="188" pos:column="13"/></operator><literal type="number" pos:line="188" pos:column="13">1<pos:position pos:line="188" pos:column="14"/></literal></expr>;<pos:position pos:line="188" pos:column="15"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="190" pos:column="3">mem_used<pos:position pos:line="190" pos:column="11"/></name> <operator pos:line="190" pos:column="12">=<pos:position pos:line="190" pos:column="13"/></operator> <call><name pos:line="190" pos:column="14">get_kstat_value<pos:position pos:line="190" pos:column="29"/></name><argument_list pos:line="190" pos:column="29">(<argument><expr><name pos:line="190" pos:column="30">ksp<pos:position pos:line="190" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="190" pos:column="35">"pagestotal"<pos:position pos:line="190" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="190" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><name pos:line="191" pos:column="3">mem_free<pos:position pos:line="191" pos:column="11"/></name> <operator pos:line="191" pos:column="12">=<pos:position pos:line="191" pos:column="13"/></operator> <call><name pos:line="191" pos:column="14">get_kstat_value<pos:position pos:line="191" pos:column="29"/></name><argument_list pos:line="191" pos:column="29">(<argument><expr><name pos:line="191" pos:column="30">ksp<pos:position pos:line="191" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="191" pos:column="35">"pagesfree"<pos:position pos:line="191" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="191" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="48"/></expr_stmt>
  <expr_stmt><expr><name pos:line="192" pos:column="3">mem_lock<pos:position pos:line="192" pos:column="11"/></name> <operator pos:line="192" pos:column="12">=<pos:position pos:line="192" pos:column="13"/></operator> <call><name pos:line="192" pos:column="14">get_kstat_value<pos:position pos:line="192" pos:column="29"/></name><argument_list pos:line="192" pos:column="29">(<argument><expr><name pos:line="192" pos:column="30">ksp<pos:position pos:line="192" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="192" pos:column="35">"pageslocked"<pos:position pos:line="192" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="192" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><name pos:line="193" pos:column="3">arcsize<pos:position pos:line="193" pos:column="10"/></name> <operator pos:line="193" pos:column="11">=<pos:position pos:line="193" pos:column="12"/></operator> <call><name pos:line="193" pos:column="13">get_kstat_value<pos:position pos:line="193" pos:column="28"/></name><argument_list pos:line="193" pos:column="28">(<argument><expr><name pos:line="193" pos:column="29">ksz<pos:position pos:line="193" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="193" pos:column="34">"size"<pos:position pos:line="193" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="193" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><name pos:line="194" pos:column="3">pp_kernel<pos:position pos:line="194" pos:column="12"/></name> <operator pos:line="194" pos:column="13">=<pos:position pos:line="194" pos:column="14"/></operator> <call><name pos:line="194" pos:column="15">get_kstat_value<pos:position pos:line="194" pos:column="30"/></name><argument_list pos:line="194" pos:column="30">(<argument><expr><name pos:line="194" pos:column="31">ksp<pos:position pos:line="194" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="194" pos:column="36">"pp_kernel"<pos:position pos:line="194" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="194" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><name pos:line="195" pos:column="3">physmem<pos:position pos:line="195" pos:column="10"/></name> <operator pos:line="195" pos:column="11">=<pos:position pos:line="195" pos:column="12"/></operator> <call><name pos:line="195" pos:column="13">get_kstat_value<pos:position pos:line="195" pos:column="28"/></name><argument_list pos:line="195" pos:column="28">(<argument><expr><name pos:line="195" pos:column="29">ksp<pos:position pos:line="195" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="195" pos:column="34">"physmem"<pos:position pos:line="195" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="195" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><name pos:line="196" pos:column="3">availrmem<pos:position pos:line="196" pos:column="12"/></name> <operator pos:line="196" pos:column="13">=<pos:position pos:line="196" pos:column="14"/></operator> <call><name pos:line="196" pos:column="15">get_kstat_value<pos:position pos:line="196" pos:column="30"/></name><argument_list pos:line="196" pos:column="30">(<argument><expr><name pos:line="196" pos:column="31">ksp<pos:position pos:line="196" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="196" pos:column="36">"availrmem"<pos:position pos:line="196" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="196" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="49"/></expr_stmt>

  <expr_stmt><expr><name pos:line="198" pos:column="3">mem_kern<pos:position pos:line="198" pos:column="11"/></name> <operator pos:line="198" pos:column="12">=<pos:position pos:line="198" pos:column="13"/></operator> <literal type="number" pos:line="198" pos:column="14">0<pos:position pos:line="198" pos:column="15"/></literal></expr>;<pos:position pos:line="198" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><name pos:line="199" pos:column="3">mem_unus<pos:position pos:line="199" pos:column="11"/></name> <operator pos:line="199" pos:column="12">=<pos:position pos:line="199" pos:column="13"/></operator> <literal type="number" pos:line="199" pos:column="14">0<pos:position pos:line="199" pos:column="15"/></literal></expr>;<pos:position pos:line="199" pos:column="16"/></expr_stmt>

  <if pos:line="201" pos:column="3">if <condition pos:line="201" pos:column="6">(<expr><operator pos:line="201" pos:column="7">(<pos:position pos:line="201" pos:column="8"/></operator><name pos:line="201" pos:column="8">mem_used<pos:position pos:line="201" pos:column="16"/></name> <operator pos:line="201" pos:column="17">&lt;<pos:position pos:line="201" pos:column="21"/></operator> <literal type="number" pos:line="201" pos:column="19">0LL<pos:position pos:line="201" pos:column="22"/></literal><operator pos:line="201" pos:column="22">)<pos:position pos:line="201" pos:column="23"/></operator> <operator pos:line="201" pos:column="24">||<pos:position pos:line="201" pos:column="26"/></operator> <operator pos:line="201" pos:column="27">(<pos:position pos:line="201" pos:column="28"/></operator><name pos:line="201" pos:column="28">mem_free<pos:position pos:line="201" pos:column="36"/></name> <operator pos:line="201" pos:column="37">&lt;<pos:position pos:line="201" pos:column="41"/></operator> <literal type="number" pos:line="201" pos:column="39">0LL<pos:position pos:line="201" pos:column="42"/></literal><operator pos:line="201" pos:column="42">)<pos:position pos:line="201" pos:column="43"/></operator> <operator pos:line="201" pos:column="44">||<pos:position pos:line="201" pos:column="46"/></operator> <operator pos:line="201" pos:column="47">(<pos:position pos:line="201" pos:column="48"/></operator><name pos:line="201" pos:column="48">mem_lock<pos:position pos:line="201" pos:column="56"/></name> <operator pos:line="201" pos:column="57">&lt;<pos:position pos:line="201" pos:column="61"/></operator> <literal type="number" pos:line="201" pos:column="59">0LL<pos:position pos:line="201" pos:column="62"/></literal><operator pos:line="201" pos:column="62">)<pos:position pos:line="201" pos:column="63"/></operator></expr>)<pos:position pos:line="201" pos:column="64"/></condition><then pos:line="201" pos:column="64"> <block pos:line="201" pos:column="65">{
    <expr_stmt><expr><call><name pos:line="202" pos:column="5">WARNING<pos:position pos:line="202" pos:column="12"/></name><argument_list pos:line="202" pos:column="12">(<argument><expr><literal type="string" pos:line="202" pos:column="13">"memory plugin: one of used, free or locked is negative."<pos:position pos:line="202" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="202" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="72"/></expr_stmt>
    <return pos:line="203" pos:column="5">return <expr><operator pos:line="203" pos:column="12">-<pos:position pos:line="203" pos:column="13"/></operator><literal type="number" pos:line="203" pos:column="13">1<pos:position pos:line="203" pos:column="14"/></literal></expr>;<pos:position pos:line="203" pos:column="15"/></return>
  }<pos:position pos:line="204" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="206" pos:column="3">mem_unus<pos:position pos:line="206" pos:column="11"/></name> <operator pos:line="206" pos:column="12">=<pos:position pos:line="206" pos:column="13"/></operator> <name pos:line="206" pos:column="14">physmem<pos:position pos:line="206" pos:column="21"/></name> <operator pos:line="206" pos:column="22">-<pos:position pos:line="206" pos:column="23"/></operator> <name pos:line="206" pos:column="24">mem_used<pos:position pos:line="206" pos:column="32"/></name></expr>;<pos:position pos:line="206" pos:column="33"/></expr_stmt>

  <if pos:line="208" pos:column="3">if <condition pos:line="208" pos:column="6">(<expr><name pos:line="208" pos:column="7">mem_used<pos:position pos:line="208" pos:column="15"/></name> <operator pos:line="208" pos:column="16">&lt;<pos:position pos:line="208" pos:column="20"/></operator> <operator pos:line="208" pos:column="18">(<pos:position pos:line="208" pos:column="19"/></operator><name pos:line="208" pos:column="19">mem_free<pos:position pos:line="208" pos:column="27"/></name> <operator pos:line="208" pos:column="28">+<pos:position pos:line="208" pos:column="29"/></operator> <name pos:line="208" pos:column="30">mem_lock<pos:position pos:line="208" pos:column="38"/></name><operator pos:line="208" pos:column="38">)<pos:position pos:line="208" pos:column="39"/></operator></expr>)<pos:position pos:line="208" pos:column="40"/></condition><then pos:line="208" pos:column="40"> <block pos:line="208" pos:column="41">{
    <comment type="block" pos:line="209" pos:column="5">/* source: http://wesunsolve.net/bugid/id/4909199
     * this seems to happen when swap space is small, e.g. 2G on a 32G system
     * we will make some assumptions here
     * educated solaris internals help welcome here */</comment>
    <expr_stmt><expr><call><name pos:line="213" pos:column="5">DEBUG<pos:position pos:line="213" pos:column="10"/></name><argument_list pos:line="213" pos:column="10">(<argument><expr><literal type="string" pos:line="213" pos:column="11">"memory plugin: pages total is smaller than \"free\" "<pos:position pos:line="213" pos:column="65"/></literal>
          <literal type="string" pos:line="214" pos:column="11">"+ \"locked\". This is probably due to small "<pos:position pos:line="214" pos:column="57"/></literal>
          <literal type="string" pos:line="215" pos:column="11">"swap space"<pos:position pos:line="215" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="215" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="216" pos:column="5">mem_free<pos:position pos:line="216" pos:column="13"/></name> <operator pos:line="216" pos:column="14">=<pos:position pos:line="216" pos:column="15"/></operator> <name pos:line="216" pos:column="16">availrmem<pos:position pos:line="216" pos:column="25"/></name></expr>;<pos:position pos:line="216" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="217" pos:column="5">mem_used<pos:position pos:line="217" pos:column="13"/></name> <operator pos:line="217" pos:column="14">=<pos:position pos:line="217" pos:column="15"/></operator> <literal type="number" pos:line="217" pos:column="16">0<pos:position pos:line="217" pos:column="17"/></literal></expr>;<pos:position pos:line="217" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="218" pos:column="4"/></block></then> <else pos:line="218" pos:column="5">else <block pos:line="218" pos:column="10">{
    <expr_stmt><expr><name pos:line="219" pos:column="5">mem_used<pos:position pos:line="219" pos:column="13"/></name> <operator pos:line="219" pos:column="14">-=<pos:position pos:line="219" pos:column="16"/></operator> <name pos:line="219" pos:column="17">mem_free<pos:position pos:line="219" pos:column="25"/></name> <operator pos:line="219" pos:column="26">+<pos:position pos:line="219" pos:column="27"/></operator> <name pos:line="219" pos:column="28">mem_lock<pos:position pos:line="219" pos:column="36"/></name></expr>;<pos:position pos:line="219" pos:column="37"/></expr_stmt>
  }<pos:position pos:line="220" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="222" pos:column="3">/* mem_kern is accounted for in mem_lock */</comment>
  <if pos:line="223" pos:column="3">if <condition pos:line="223" pos:column="6">(<expr><name pos:line="223" pos:column="7">pp_kernel<pos:position pos:line="223" pos:column="16"/></name> <operator pos:line="223" pos:column="17">&lt;<pos:position pos:line="223" pos:column="21"/></operator> <name pos:line="223" pos:column="19">mem_lock<pos:position pos:line="223" pos:column="27"/></name></expr>)<pos:position pos:line="223" pos:column="28"/></condition><then pos:line="223" pos:column="28"> <block pos:line="223" pos:column="29">{
    <expr_stmt><expr><name pos:line="224" pos:column="5">mem_kern<pos:position pos:line="224" pos:column="13"/></name> <operator pos:line="224" pos:column="14">=<pos:position pos:line="224" pos:column="15"/></operator> <name pos:line="224" pos:column="16">pp_kernel<pos:position pos:line="224" pos:column="25"/></name></expr>;<pos:position pos:line="224" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="225" pos:column="5">mem_lock<pos:position pos:line="225" pos:column="13"/></name> <operator pos:line="225" pos:column="14">-=<pos:position pos:line="225" pos:column="16"/></operator> <name pos:line="225" pos:column="17">pp_kernel<pos:position pos:line="225" pos:column="26"/></name></expr>;<pos:position pos:line="225" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="226" pos:column="4"/></block></then> <else pos:line="226" pos:column="5">else <block pos:line="226" pos:column="10">{
    <expr_stmt><expr><name pos:line="227" pos:column="5">mem_kern<pos:position pos:line="227" pos:column="13"/></name> <operator pos:line="227" pos:column="14">=<pos:position pos:line="227" pos:column="15"/></operator> <name pos:line="227" pos:column="16">mem_lock<pos:position pos:line="227" pos:column="24"/></name></expr>;<pos:position pos:line="227" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="228" pos:column="5">mem_lock<pos:position pos:line="228" pos:column="13"/></name> <operator pos:line="228" pos:column="14">=<pos:position pos:line="228" pos:column="15"/></operator> <literal type="number" pos:line="228" pos:column="16">0<pos:position pos:line="228" pos:column="17"/></literal></expr>;<pos:position pos:line="228" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="229" pos:column="4"/></block></else></if>

  <expr_stmt><expr><name pos:line="231" pos:column="3">mem_used<pos:position pos:line="231" pos:column="11"/></name> <operator pos:line="231" pos:column="12">*=<pos:position pos:line="231" pos:column="14"/></operator> <name pos:line="231" pos:column="15">pagesize<pos:position pos:line="231" pos:column="23"/></name></expr>;<pos:position pos:line="231" pos:column="24"/></expr_stmt> <comment type="block" pos:line="231" pos:column="25">/* If this overflows you have some serious */</comment>
  <expr_stmt><expr><name pos:line="232" pos:column="3">mem_free<pos:position pos:line="232" pos:column="11"/></name> <operator pos:line="232" pos:column="12">*=<pos:position pos:line="232" pos:column="14"/></operator> <name pos:line="232" pos:column="15">pagesize<pos:position pos:line="232" pos:column="23"/></name></expr>;<pos:position pos:line="232" pos:column="24"/></expr_stmt> <comment type="block" pos:line="232" pos:column="25">/* memory.. Why not call me up and give me */</comment>
  <expr_stmt><expr><name pos:line="233" pos:column="3">mem_lock<pos:position pos:line="233" pos:column="11"/></name> <operator pos:line="233" pos:column="12">*=<pos:position pos:line="233" pos:column="14"/></operator> <name pos:line="233" pos:column="15">pagesize<pos:position pos:line="233" pos:column="23"/></name></expr>;<pos:position pos:line="233" pos:column="24"/></expr_stmt> <comment type="block" pos:line="233" pos:column="25">/* some? ;) */</comment>
  <expr_stmt><expr><name pos:line="234" pos:column="3">mem_kern<pos:position pos:line="234" pos:column="11"/></name> <operator pos:line="234" pos:column="12">*=<pos:position pos:line="234" pos:column="14"/></operator> <name pos:line="234" pos:column="15">pagesize<pos:position pos:line="234" pos:column="23"/></name></expr>;<pos:position pos:line="234" pos:column="24"/></expr_stmt> <comment type="block" pos:line="234" pos:column="25">/* it's 2011 RAM is cheap */</comment>
  <expr_stmt><expr><name pos:line="235" pos:column="3">mem_unus<pos:position pos:line="235" pos:column="11"/></name> <operator pos:line="235" pos:column="12">*=<pos:position pos:line="235" pos:column="14"/></operator> <name pos:line="235" pos:column="15">pagesize<pos:position pos:line="235" pos:column="23"/></name></expr>;<pos:position pos:line="235" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name pos:line="236" pos:column="3">mem_kern<pos:position pos:line="236" pos:column="11"/></name> <operator pos:line="236" pos:column="12">-=<pos:position pos:line="236" pos:column="14"/></operator> <name pos:line="236" pos:column="15">arcsize<pos:position pos:line="236" pos:column="22"/></name></expr>;<pos:position pos:line="236" pos:column="23"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="238" pos:column="3">MEMORY_SUBMIT<pos:position pos:line="238" pos:column="16"/></name><argument_list pos:line="238" pos:column="16">(<argument><expr><literal type="string" pos:line="238" pos:column="17">"used"<pos:position pos:line="238" pos:column="23"/></literal></expr></argument>, <argument><expr><operator pos:line="238" pos:column="25">(<pos:position pos:line="238" pos:column="26"/></operator><name pos:line="238" pos:column="26">gauge_t<pos:position pos:line="238" pos:column="33"/></name><operator pos:line="238" pos:column="33">)<pos:position pos:line="238" pos:column="34"/></operator><name pos:line="238" pos:column="34">mem_used<pos:position pos:line="238" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="238" pos:column="44">"free"<pos:position pos:line="238" pos:column="50"/></literal></expr></argument>, <argument><expr><operator pos:line="238" pos:column="52">(<pos:position pos:line="238" pos:column="53"/></operator><name pos:line="238" pos:column="53">gauge_t<pos:position pos:line="238" pos:column="60"/></name><operator pos:line="238" pos:column="60">)<pos:position pos:line="238" pos:column="61"/></operator><name pos:line="238" pos:column="61">mem_free<pos:position pos:line="238" pos:column="69"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="238" pos:column="71">"locked"<pos:position pos:line="238" pos:column="79"/></literal></expr></argument>,
                <argument><expr><operator pos:line="239" pos:column="17">(<pos:position pos:line="239" pos:column="18"/></operator><name pos:line="239" pos:column="18">gauge_t<pos:position pos:line="239" pos:column="25"/></name><operator pos:line="239" pos:column="25">)<pos:position pos:line="239" pos:column="26"/></operator><name pos:line="239" pos:column="26">mem_lock<pos:position pos:line="239" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="239" pos:column="36">"kernel"<pos:position pos:line="239" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="239" pos:column="46">(<pos:position pos:line="239" pos:column="47"/></operator><name pos:line="239" pos:column="47">gauge_t<pos:position pos:line="239" pos:column="54"/></name><operator pos:line="239" pos:column="54">)<pos:position pos:line="239" pos:column="55"/></operator><name pos:line="239" pos:column="55">mem_kern<pos:position pos:line="239" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="239" pos:column="65">"arc"<pos:position pos:line="239" pos:column="70"/></literal></expr></argument>,
                <argument><expr><operator pos:line="240" pos:column="17">(<pos:position pos:line="240" pos:column="18"/></operator><name pos:line="240" pos:column="18">gauge_t<pos:position pos:line="240" pos:column="25"/></name><operator pos:line="240" pos:column="25">)<pos:position pos:line="240" pos:column="26"/></operator><name pos:line="240" pos:column="26">arcsize<pos:position pos:line="240" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="240" pos:column="35">"unusable"<pos:position pos:line="240" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="240" pos:column="47">(<pos:position pos:line="240" pos:column="48"/></operator><name pos:line="240" pos:column="48">gauge_t<pos:position pos:line="240" pos:column="55"/></name><operator pos:line="240" pos:column="55">)<pos:position pos:line="240" pos:column="56"/></operator><name pos:line="240" pos:column="56">mem_unus<pos:position pos:line="240" pos:column="64"/></name></expr></argument>)<pos:position pos:line="240" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="240" pos:column="66"/></expr_stmt>
<comment type="block" pos:line="241" pos:column="1">/* #endif HAVE_LIBKSTAT */</comment>

<cpp:elif pos:line="243" pos:column="1">#<cpp:directive pos:line="243" pos:column="2">elif<pos:position pos:line="243" pos:column="6"/></cpp:directive> <expr><name pos:line="243" pos:column="7">HAVE_SYSCTL<pos:position pos:line="243" pos:column="18"/></name></expr></cpp:elif>
  <decl_stmt><decl><type><name pos:line="244" pos:column="3">int<pos:position pos:line="244" pos:column="6"/></name></type> <name><name pos:line="244" pos:column="7">mib<pos:position pos:line="244" pos:column="10"/></name><index pos:line="244" pos:column="10">[]<pos:position pos:line="244" pos:column="12"/></index></name> <init pos:line="244" pos:column="13">= <expr><block pos:line="244" pos:column="15">{<expr><name pos:line="244" pos:column="16">CTL_VM<pos:position pos:line="244" pos:column="22"/></name></expr>, <expr><name pos:line="244" pos:column="24">VM_METER<pos:position pos:line="244" pos:column="32"/></name></expr>}<pos:position pos:line="244" pos:column="33"/></block></expr></init></decl>;<pos:position pos:line="244" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="245" pos:column="3">struct<pos:position pos:line="245" pos:column="9"/></name> <name pos:line="245" pos:column="10">vmtotal<pos:position pos:line="245" pos:column="17"/></name></name></type> <name pos:line="245" pos:column="18">vmtotal<pos:position pos:line="245" pos:column="25"/></name> <init pos:line="245" pos:column="26">= <expr><block pos:line="245" pos:column="28">{<expr><literal type="number" pos:line="245" pos:column="29">0<pos:position pos:line="245" pos:column="30"/></literal></expr>}<pos:position pos:line="245" pos:column="31"/></block></expr></init></decl>;<pos:position pos:line="245" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="246" pos:column="3">gauge_t<pos:position pos:line="246" pos:column="10"/></name></type> <name pos:line="246" pos:column="11">mem_active<pos:position pos:line="246" pos:column="21"/></name></decl>;<pos:position pos:line="246" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="247" pos:column="3">gauge_t<pos:position pos:line="247" pos:column="10"/></name></type> <name pos:line="247" pos:column="11">mem_inactive<pos:position pos:line="247" pos:column="23"/></name></decl>;<pos:position pos:line="247" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="248" pos:column="3">gauge_t<pos:position pos:line="248" pos:column="10"/></name></type> <name pos:line="248" pos:column="11">mem_free<pos:position pos:line="248" pos:column="19"/></name></decl>;<pos:position pos:line="248" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="249" pos:column="3">size_t<pos:position pos:line="249" pos:column="9"/></name></type> <name pos:line="249" pos:column="10">size<pos:position pos:line="249" pos:column="14"/></name></decl>;<pos:position pos:line="249" pos:column="15"/></decl_stmt>

  <expr_stmt><expr><name pos:line="251" pos:column="3">size<pos:position pos:line="251" pos:column="7"/></name> <operator pos:line="251" pos:column="8">=<pos:position pos:line="251" pos:column="9"/></operator> <sizeof pos:line="251" pos:column="10">sizeof<argument_list pos:line="251" pos:column="16">(<argument><expr><name pos:line="251" pos:column="17">vmtotal<pos:position pos:line="251" pos:column="24"/></name></expr></argument>)<pos:position pos:line="251" pos:column="25"/></argument_list></sizeof></expr>;<pos:position pos:line="251" pos:column="26"/></expr_stmt>

  <if pos:line="253" pos:column="3">if <condition pos:line="253" pos:column="6">(<expr><call><name pos:line="253" pos:column="7">sysctl<pos:position pos:line="253" pos:column="13"/></name><argument_list pos:line="253" pos:column="13">(<argument><expr><name pos:line="253" pos:column="14">mib<pos:position pos:line="253" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="253" pos:column="19">2<pos:position pos:line="253" pos:column="20"/></literal></expr></argument>, <argument><expr><operator pos:line="253" pos:column="22">&amp;<pos:position pos:line="253" pos:column="27"/></operator><name pos:line="253" pos:column="23">vmtotal<pos:position pos:line="253" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="253" pos:column="32">&amp;<pos:position pos:line="253" pos:column="37"/></operator><name pos:line="253" pos:column="33">size<pos:position pos:line="253" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="253" pos:column="39">NULL<pos:position pos:line="253" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="253" pos:column="45">0<pos:position pos:line="253" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="253" pos:column="47"/></argument_list></call> <operator pos:line="253" pos:column="48">&lt;<pos:position pos:line="253" pos:column="52"/></operator> <literal type="number" pos:line="253" pos:column="50">0<pos:position pos:line="253" pos:column="51"/></literal></expr>)<pos:position pos:line="253" pos:column="52"/></condition><then pos:line="253" pos:column="52"> <block pos:line="253" pos:column="53">{
    <decl_stmt><decl><type><name pos:line="254" pos:column="5">char<pos:position pos:line="254" pos:column="9"/></name></type> <name><name pos:line="254" pos:column="10">errbuf<pos:position pos:line="254" pos:column="16"/></name><index pos:line="254" pos:column="16">[<expr><literal type="number" pos:line="254" pos:column="17">1024<pos:position pos:line="254" pos:column="21"/></literal></expr>]<pos:position pos:line="254" pos:column="22"/></index></name></decl>;<pos:position pos:line="254" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="255" pos:column="5">WARNING<pos:position pos:line="255" pos:column="12"/></name><argument_list pos:line="255" pos:column="12">(<argument><expr><literal type="string" pos:line="255" pos:column="13">"memory plugin: sysctl failed: %s"<pos:position pos:line="255" pos:column="47"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="256" pos:column="13">sstrerror<pos:position pos:line="256" pos:column="22"/></name><argument_list pos:line="256" pos:column="22">(<argument><expr><name pos:line="256" pos:column="23">errno<pos:position pos:line="256" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="256" pos:column="30">errbuf<pos:position pos:line="256" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="256" pos:column="38">sizeof<argument_list pos:line="256" pos:column="44">(<argument><expr><name pos:line="256" pos:column="45">errbuf<pos:position pos:line="256" pos:column="51"/></name></expr></argument>)<pos:position pos:line="256" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="256" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="256" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="256" pos:column="55"/></expr_stmt>
    <return pos:line="257" pos:column="5">return <expr><operator pos:line="257" pos:column="12">-<pos:position pos:line="257" pos:column="13"/></operator><literal type="number" pos:line="257" pos:column="13">1<pos:position pos:line="257" pos:column="14"/></literal></expr>;<pos:position pos:line="257" pos:column="15"/></return>
  }<pos:position pos:line="258" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="260" pos:column="3">assert<pos:position pos:line="260" pos:column="9"/></name><argument_list pos:line="260" pos:column="9">(<argument><expr><name pos:line="260" pos:column="10">pagesize<pos:position pos:line="260" pos:column="18"/></name> <operator pos:line="260" pos:column="19">&gt;<pos:position pos:line="260" pos:column="23"/></operator> <literal type="number" pos:line="260" pos:column="21">0<pos:position pos:line="260" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="260" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="260" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name pos:line="261" pos:column="3">mem_active<pos:position pos:line="261" pos:column="13"/></name> <operator pos:line="261" pos:column="14">=<pos:position pos:line="261" pos:column="15"/></operator> <call pos:line="261" pos:column="16">(<name pos:line="261" pos:column="17">gauge_t<pos:position pos:line="261" pos:column="24"/></name>)<argument_list pos:line="261" pos:column="25">(<argument><expr><name><name pos:line="261" pos:column="26">vmtotal<pos:position pos:line="261" pos:column="33"/></name><operator pos:line="261" pos:column="33">.<pos:position pos:line="261" pos:column="34"/></operator><name pos:line="261" pos:column="34">t_arm<pos:position pos:line="261" pos:column="39"/></name></name> <operator pos:line="261" pos:column="40">*<pos:position pos:line="261" pos:column="41"/></operator> <name pos:line="261" pos:column="42">pagesize<pos:position pos:line="261" pos:column="50"/></name></expr></argument>)<pos:position pos:line="261" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="261" pos:column="52"/></expr_stmt>
  <expr_stmt><expr><name pos:line="262" pos:column="3">mem_inactive<pos:position pos:line="262" pos:column="15"/></name> <operator pos:line="262" pos:column="16">=<pos:position pos:line="262" pos:column="17"/></operator> <call pos:line="262" pos:column="18">(<name pos:line="262" pos:column="19">gauge_t<pos:position pos:line="262" pos:column="26"/></name>)<argument_list pos:line="262" pos:column="27">(<argument><expr><operator pos:line="262" pos:column="28">(<pos:position pos:line="262" pos:column="29"/></operator><name><name pos:line="262" pos:column="29">vmtotal<pos:position pos:line="262" pos:column="36"/></name><operator pos:line="262" pos:column="36">.<pos:position pos:line="262" pos:column="37"/></operator><name pos:line="262" pos:column="37">t_rm<pos:position pos:line="262" pos:column="41"/></name></name> <operator pos:line="262" pos:column="42">-<pos:position pos:line="262" pos:column="43"/></operator> <name><name pos:line="262" pos:column="44">vmtotal<pos:position pos:line="262" pos:column="51"/></name><operator pos:line="262" pos:column="51">.<pos:position pos:line="262" pos:column="52"/></operator><name pos:line="262" pos:column="52">t_arm<pos:position pos:line="262" pos:column="57"/></name></name><operator pos:line="262" pos:column="57">)<pos:position pos:line="262" pos:column="58"/></operator> <operator pos:line="262" pos:column="59">*<pos:position pos:line="262" pos:column="60"/></operator> <name pos:line="262" pos:column="61">pagesize<pos:position pos:line="262" pos:column="69"/></name></expr></argument>)<pos:position pos:line="262" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="262" pos:column="71"/></expr_stmt>
  <expr_stmt><expr><name pos:line="263" pos:column="3">mem_free<pos:position pos:line="263" pos:column="11"/></name> <operator pos:line="263" pos:column="12">=<pos:position pos:line="263" pos:column="13"/></operator> <call pos:line="263" pos:column="14">(<name pos:line="263" pos:column="15">gauge_t<pos:position pos:line="263" pos:column="22"/></name>)<argument_list pos:line="263" pos:column="23">(<argument><expr><name><name pos:line="263" pos:column="24">vmtotal<pos:position pos:line="263" pos:column="31"/></name><operator pos:line="263" pos:column="31">.<pos:position pos:line="263" pos:column="32"/></operator><name pos:line="263" pos:column="32">t_free<pos:position pos:line="263" pos:column="38"/></name></name> <operator pos:line="263" pos:column="39">*<pos:position pos:line="263" pos:column="40"/></operator> <name pos:line="263" pos:column="41">pagesize<pos:position pos:line="263" pos:column="49"/></name></expr></argument>)<pos:position pos:line="263" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="263" pos:column="51"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="265" pos:column="3">MEMORY_SUBMIT<pos:position pos:line="265" pos:column="16"/></name><argument_list pos:line="265" pos:column="16">(<argument><expr><literal type="string" pos:line="265" pos:column="17">"active"<pos:position pos:line="265" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="265" pos:column="27">mem_active<pos:position pos:line="265" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="265" pos:column="39">"inactive"<pos:position pos:line="265" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="265" pos:column="51">mem_inactive<pos:position pos:line="265" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="265" pos:column="65">"free"<pos:position pos:line="265" pos:column="71"/></literal></expr></argument>,
                <argument><expr><name pos:line="266" pos:column="17">mem_free<pos:position pos:line="266" pos:column="25"/></name></expr></argument>)<pos:position pos:line="266" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="266" pos:column="27"/></expr_stmt>
<comment type="block" pos:line="267" pos:column="1">/* #endif HAVE_SYSCTL */</comment>

<cpp:elif pos:line="269" pos:column="1">#<cpp:directive pos:line="269" pos:column="2">elif<pos:position pos:line="269" pos:column="6"/></cpp:directive> <expr><name pos:line="269" pos:column="7">HAVE_LIBSTATGRAB<pos:position pos:line="269" pos:column="23"/></name></expr></cpp:elif>
  <decl_stmt><decl><type><name pos:line="270" pos:column="3">sg_mem_stats<pos:position pos:line="270" pos:column="15"/></name> <modifier pos:line="270" pos:column="16">*<pos:position pos:line="270" pos:column="17"/></modifier></type><name pos:line="270" pos:column="17">ios<pos:position pos:line="270" pos:column="20"/></name></decl>;<pos:position pos:line="270" pos:column="21"/></decl_stmt>

  <expr_stmt><expr><name pos:line="272" pos:column="3">ios<pos:position pos:line="272" pos:column="6"/></name> <operator pos:line="272" pos:column="7">=<pos:position pos:line="272" pos:column="8"/></operator> <call><name pos:line="272" pos:column="9">sg_get_mem_stats<pos:position pos:line="272" pos:column="25"/></name><argument_list pos:line="272" pos:column="25">()<pos:position pos:line="272" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="272" pos:column="28"/></expr_stmt>
  <if pos:line="273" pos:column="3">if <condition pos:line="273" pos:column="6">(<expr><name pos:line="273" pos:column="7">ios<pos:position pos:line="273" pos:column="10"/></name> <operator pos:line="273" pos:column="11">==<pos:position pos:line="273" pos:column="13"/></operator> <name pos:line="273" pos:column="14">NULL<pos:position pos:line="273" pos:column="18"/></name></expr>)<pos:position pos:line="273" pos:column="19"/></condition><then pos:line="273" pos:column="19">
    <block type="pseudo"><return pos:line="274" pos:column="5">return <expr><operator pos:line="274" pos:column="12">-<pos:position pos:line="274" pos:column="13"/></operator><literal type="number" pos:line="274" pos:column="13">1<pos:position pos:line="274" pos:column="14"/></literal></expr>;<pos:position pos:line="274" pos:column="15"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="276" pos:column="3">MEMORY_SUBMIT<pos:position pos:line="276" pos:column="16"/></name><argument_list pos:line="276" pos:column="16">(<argument><expr><literal type="string" pos:line="276" pos:column="17">"used"<pos:position pos:line="276" pos:column="23"/></literal></expr></argument>, <argument><expr><operator pos:line="276" pos:column="25">(<pos:position pos:line="276" pos:column="26"/></operator><name pos:line="276" pos:column="26">gauge_t<pos:position pos:line="276" pos:column="33"/></name><operator pos:line="276" pos:column="33">)<pos:position pos:line="276" pos:column="34"/></operator><name><name pos:line="276" pos:column="34">ios<pos:position pos:line="276" pos:column="37"/></name><operator pos:line="276" pos:column="37">-&gt;<pos:position pos:line="276" pos:column="42"/></operator><name pos:line="276" pos:column="39">used<pos:position pos:line="276" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="276" pos:column="45">"cached"<pos:position pos:line="276" pos:column="53"/></literal></expr></argument>, <argument><expr><operator pos:line="276" pos:column="55">(<pos:position pos:line="276" pos:column="56"/></operator><name pos:line="276" pos:column="56">gauge_t<pos:position pos:line="276" pos:column="63"/></name><operator pos:line="276" pos:column="63">)<pos:position pos:line="276" pos:column="64"/></operator><name><name pos:line="276" pos:column="64">ios<pos:position pos:line="276" pos:column="67"/></name><operator pos:line="276" pos:column="67">-&gt;<pos:position pos:line="276" pos:column="72"/></operator><name pos:line="276" pos:column="69">cache<pos:position pos:line="276" pos:column="74"/></name></name></expr></argument>,
                <argument><expr><literal type="string" pos:line="277" pos:column="17">"free"<pos:position pos:line="277" pos:column="23"/></literal></expr></argument>, <argument><expr><operator pos:line="277" pos:column="25">(<pos:position pos:line="277" pos:column="26"/></operator><name pos:line="277" pos:column="26">gauge_t<pos:position pos:line="277" pos:column="33"/></name><operator pos:line="277" pos:column="33">)<pos:position pos:line="277" pos:column="34"/></operator><name><name pos:line="277" pos:column="34">ios<pos:position pos:line="277" pos:column="37"/></name><operator pos:line="277" pos:column="37">-&gt;<pos:position pos:line="277" pos:column="42"/></operator><name pos:line="277" pos:column="39">free<pos:position pos:line="277" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="277" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="277" pos:column="45"/></expr_stmt>
<comment type="block" pos:line="278" pos:column="1">/* #endif HAVE_LIBSTATGRAB */</comment>

<cpp:elif pos:line="280" pos:column="1">#<cpp:directive pos:line="280" pos:column="2">elif<pos:position pos:line="280" pos:column="6"/></cpp:directive> <expr><name pos:line="280" pos:column="7">HAVE_PERFSTAT<pos:position pos:line="280" pos:column="20"/></name></expr></cpp:elif>
  <decl_stmt><decl><type><name pos:line="281" pos:column="3">perfstat_memory_total_t<pos:position pos:line="281" pos:column="26"/></name></type> <name pos:line="281" pos:column="27">pmemory<pos:position pos:line="281" pos:column="34"/></name> <init pos:line="281" pos:column="35">= <expr><block pos:line="281" pos:column="37">{<expr><literal type="number" pos:line="281" pos:column="38">0<pos:position pos:line="281" pos:column="39"/></literal></expr>}<pos:position pos:line="281" pos:column="40"/></block></expr></init></decl>;<pos:position pos:line="281" pos:column="41"/></decl_stmt>

  <if pos:line="283" pos:column="3">if <condition pos:line="283" pos:column="6">(<expr><call><name pos:line="283" pos:column="7">perfstat_memory_total<pos:position pos:line="283" pos:column="28"/></name><argument_list pos:line="283" pos:column="28">(<argument><expr><name pos:line="283" pos:column="29">NULL<pos:position pos:line="283" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="283" pos:column="35">&amp;<pos:position pos:line="283" pos:column="40"/></operator><name pos:line="283" pos:column="36">pmemory<pos:position pos:line="283" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="283" pos:column="45">sizeof<argument_list pos:line="283" pos:column="51">(<argument><expr><name pos:line="283" pos:column="52">pmemory<pos:position pos:line="283" pos:column="59"/></name></expr></argument>)<pos:position pos:line="283" pos:column="60"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="283" pos:column="62">1<pos:position pos:line="283" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="283" pos:column="64"/></argument_list></call> <operator pos:line="283" pos:column="65">&lt;<pos:position pos:line="283" pos:column="69"/></operator> <literal type="number" pos:line="283" pos:column="67">0<pos:position pos:line="283" pos:column="68"/></literal></expr>)<pos:position pos:line="283" pos:column="69"/></condition><then pos:line="283" pos:column="69"> <block pos:line="283" pos:column="70">{
    <decl_stmt><decl><type><name pos:line="284" pos:column="5">char<pos:position pos:line="284" pos:column="9"/></name></type> <name><name pos:line="284" pos:column="10">errbuf<pos:position pos:line="284" pos:column="16"/></name><index pos:line="284" pos:column="16">[<expr><literal type="number" pos:line="284" pos:column="17">1024<pos:position pos:line="284" pos:column="21"/></literal></expr>]<pos:position pos:line="284" pos:column="22"/></index></name></decl>;<pos:position pos:line="284" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="285" pos:column="5">WARNING<pos:position pos:line="285" pos:column="12"/></name><argument_list pos:line="285" pos:column="12">(<argument><expr><literal type="string" pos:line="285" pos:column="13">"memory plugin: perfstat_memory_total failed: %s"<pos:position pos:line="285" pos:column="62"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="286" pos:column="13">sstrerror<pos:position pos:line="286" pos:column="22"/></name><argument_list pos:line="286" pos:column="22">(<argument><expr><name pos:line="286" pos:column="23">errno<pos:position pos:line="286" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="286" pos:column="30">errbuf<pos:position pos:line="286" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="286" pos:column="38">sizeof<argument_list pos:line="286" pos:column="44">(<argument><expr><name pos:line="286" pos:column="45">errbuf<pos:position pos:line="286" pos:column="51"/></name></expr></argument>)<pos:position pos:line="286" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="286" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="286" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="286" pos:column="55"/></expr_stmt>
    <return pos:line="287" pos:column="5">return <expr><operator pos:line="287" pos:column="12">-<pos:position pos:line="287" pos:column="13"/></operator><literal type="number" pos:line="287" pos:column="13">1<pos:position pos:line="287" pos:column="14"/></literal></expr>;<pos:position pos:line="287" pos:column="15"/></return>
  }<pos:position pos:line="288" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="290" pos:column="3">/* Unfortunately, the AIX documentation is not very clear on how these
   * numbers relate to one another. The only thing is states explcitly
   * is:
   *   real_total = real_process + real_free + numperm + real_system
   *
   * Another segmentation, which would be closer to the numbers reported
   * by the "svmon" utility, would be:
   *   real_total = real_free + real_inuse
   *   real_inuse = "active" + real_pinned + numperm
   */</comment>
  <expr_stmt><expr><call><name pos:line="300" pos:column="3">MEMORY_SUBMIT<pos:position pos:line="300" pos:column="16"/></name><argument_list pos:line="300" pos:column="16">(<argument><expr><literal type="string" pos:line="300" pos:column="17">"free"<pos:position pos:line="300" pos:column="23"/></literal></expr></argument>, <argument><expr><call pos:line="300" pos:column="25">(<name pos:line="300" pos:column="26">gauge_t<pos:position pos:line="300" pos:column="33"/></name>)<argument_list pos:line="300" pos:column="34">(<argument><expr><name><name pos:line="300" pos:column="35">pmemory<pos:position pos:line="300" pos:column="42"/></name><operator pos:line="300" pos:column="42">.<pos:position pos:line="300" pos:column="43"/></operator><name pos:line="300" pos:column="43">real_free<pos:position pos:line="300" pos:column="52"/></name></name> <operator pos:line="300" pos:column="53">*<pos:position pos:line="300" pos:column="54"/></operator> <name pos:line="300" pos:column="55">pagesize<pos:position pos:line="300" pos:column="63"/></name></expr></argument>)<pos:position pos:line="300" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="300" pos:column="66">"cached"<pos:position pos:line="300" pos:column="74"/></literal></expr></argument>,
                <argument><expr><call pos:line="301" pos:column="17">(<name pos:line="301" pos:column="18">gauge_t<pos:position pos:line="301" pos:column="25"/></name>)<argument_list pos:line="301" pos:column="26">(<argument><expr><name><name pos:line="301" pos:column="27">pmemory<pos:position pos:line="301" pos:column="34"/></name><operator pos:line="301" pos:column="34">.<pos:position pos:line="301" pos:column="35"/></operator><name pos:line="301" pos:column="35">numperm<pos:position pos:line="301" pos:column="42"/></name></name> <operator pos:line="301" pos:column="43">*<pos:position pos:line="301" pos:column="44"/></operator> <name pos:line="301" pos:column="45">pagesize<pos:position pos:line="301" pos:column="53"/></name></expr></argument>)<pos:position pos:line="301" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="301" pos:column="56">"system"<pos:position pos:line="301" pos:column="64"/></literal></expr></argument>,
                <argument><expr><call pos:line="302" pos:column="17">(<name pos:line="302" pos:column="18">gauge_t<pos:position pos:line="302" pos:column="25"/></name>)<argument_list pos:line="302" pos:column="26">(<argument><expr><name><name pos:line="302" pos:column="27">pmemory<pos:position pos:line="302" pos:column="34"/></name><operator pos:line="302" pos:column="34">.<pos:position pos:line="302" pos:column="35"/></operator><name pos:line="302" pos:column="35">real_system<pos:position pos:line="302" pos:column="46"/></name></name> <operator pos:line="302" pos:column="47">*<pos:position pos:line="302" pos:column="48"/></operator> <name pos:line="302" pos:column="49">pagesize<pos:position pos:line="302" pos:column="57"/></name></expr></argument>)<pos:position pos:line="302" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="302" pos:column="60">"user"<pos:position pos:line="302" pos:column="66"/></literal></expr></argument>,
                <argument><expr><call pos:line="303" pos:column="17">(<name pos:line="303" pos:column="18">gauge_t<pos:position pos:line="303" pos:column="25"/></name>)<argument_list pos:line="303" pos:column="26">(<argument><expr><name><name pos:line="303" pos:column="27">pmemory<pos:position pos:line="303" pos:column="34"/></name><operator pos:line="303" pos:column="34">.<pos:position pos:line="303" pos:column="35"/></operator><name pos:line="303" pos:column="35">real_process<pos:position pos:line="303" pos:column="47"/></name></name> <operator pos:line="303" pos:column="48">*<pos:position pos:line="303" pos:column="49"/></operator> <name pos:line="303" pos:column="50">pagesize<pos:position pos:line="303" pos:column="58"/></name></expr></argument>)<pos:position pos:line="303" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="303" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="303" pos:column="61"/></expr_stmt>
<cpp:endif pos:line="304" pos:column="1">#<cpp:directive pos:line="304" pos:column="2">endif<pos:position pos:line="304" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="304" pos:column="8">/* HAVE_PERFSTAT */</comment>

  <return pos:line="306" pos:column="3">return <expr><literal type="number" pos:line="306" pos:column="10">0<pos:position pos:line="306" pos:column="11"/></literal></expr>;<pos:position pos:line="306" pos:column="12"/></return>
}<pos:position pos:line="307" pos:column="2"/></block></function></unit>

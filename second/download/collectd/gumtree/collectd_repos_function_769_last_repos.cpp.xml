<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_769_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">redis_db_stats<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">node<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">info_line<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list> <comment type="block" pos:line="1" pos:column="62">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <comment type="block" pos:line="3" pos:column="3">/* redis_db_stats parses and dispatches Redis database statistics,
   * currently the number of keys for each database.
   * info_line needs to have the following format:
   *   db0:keys=4,expires=0,avg_ttl=0
   */</comment>

  <for pos:line="9" pos:column="3">for <control pos:line="9" pos:column="7">(<init><decl><type><name pos:line="9" pos:column="8">int<pos:position pos:line="9" pos:column="11"/></name></type> <name pos:line="9" pos:column="12">db<pos:position pos:line="9" pos:column="14"/></name> <init pos:line="9" pos:column="15">= <expr><literal type="number" pos:line="9" pos:column="17">0<pos:position pos:line="9" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="19"/></init> <condition><expr><name pos:line="9" pos:column="20">db<pos:position pos:line="9" pos:column="22"/></name> <operator pos:line="9" pos:column="23">&lt;<pos:position pos:line="9" pos:column="27"/></operator> <name pos:line="9" pos:column="25">REDIS_DEF_DB_COUNT<pos:position pos:line="9" pos:column="43"/></name></expr>;<pos:position pos:line="9" pos:column="44"/></condition> <incr><expr><name pos:line="9" pos:column="45">db<pos:position pos:line="9" pos:column="47"/></name><operator pos:line="9" pos:column="47">++<pos:position pos:line="9" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="9" pos:column="50"/></control> <block pos:line="9" pos:column="51">{
    <decl_stmt><decl><specifier pos:line="10" pos:column="5">static<pos:position pos:line="10" pos:column="11"/></specifier> <type><name pos:line="10" pos:column="12">char<pos:position pos:line="10" pos:column="16"/></name></type> <name><name pos:line="10" pos:column="17">buf<pos:position pos:line="10" pos:column="20"/></name><index pos:line="10" pos:column="20">[<expr><name pos:line="10" pos:column="21">MAX_REDIS_VAL_SIZE<pos:position pos:line="10" pos:column="39"/></name></expr>]<pos:position pos:line="10" pos:column="40"/></index></name></decl>;<pos:position pos:line="10" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="11" pos:column="5">static<pos:position pos:line="11" pos:column="11"/></specifier> <type><name pos:line="11" pos:column="12">char<pos:position pos:line="11" pos:column="16"/></name></type> <name><name pos:line="11" pos:column="17">field_name<pos:position pos:line="11" pos:column="27"/></name><index pos:line="11" pos:column="27">[<expr><literal type="number" pos:line="11" pos:column="28">11<pos:position pos:line="11" pos:column="30"/></literal></expr>]<pos:position pos:line="11" pos:column="31"/></index></name></decl>;<pos:position pos:line="11" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="12" pos:column="5">static<pos:position pos:line="12" pos:column="11"/></specifier> <type><name pos:line="12" pos:column="12">char<pos:position pos:line="12" pos:column="16"/></name></type> <name><name pos:line="12" pos:column="17">db_id<pos:position pos:line="12" pos:column="22"/></name><index pos:line="12" pos:column="22">[<expr><literal type="number" pos:line="12" pos:column="23">3<pos:position pos:line="12" pos:column="24"/></literal></expr>]<pos:position pos:line="12" pos:column="25"/></index></name></decl>;<pos:position pos:line="12" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">value_t<pos:position pos:line="13" pos:column="12"/></name></type> <name pos:line="13" pos:column="13">val<pos:position pos:line="13" pos:column="16"/></name></decl>;<pos:position pos:line="13" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">char<pos:position pos:line="14" pos:column="9"/></name> <modifier pos:line="14" pos:column="10">*<pos:position pos:line="14" pos:column="11"/></modifier></type><name pos:line="14" pos:column="11">str<pos:position pos:line="14" pos:column="14"/></name></decl>;<pos:position pos:line="14" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">int<pos:position pos:line="15" pos:column="8"/></name></type> <name pos:line="15" pos:column="9">i<pos:position pos:line="15" pos:column="10"/></name></decl>;<pos:position pos:line="15" pos:column="11"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="17" pos:column="5">snprintf<pos:position pos:line="17" pos:column="13"/></name><argument_list pos:line="17" pos:column="13">(<argument><expr><name pos:line="17" pos:column="14">field_name<pos:position pos:line="17" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="26">sizeof<argument_list pos:line="17" pos:column="32">(<argument><expr><name pos:line="17" pos:column="33">field_name<pos:position pos:line="17" pos:column="43"/></name></expr></argument>)<pos:position pos:line="17" pos:column="44"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="46">"db%d:keys="<pos:position pos:line="17" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="60">db<pos:position pos:line="17" pos:column="62"/></name></expr></argument>)<pos:position pos:line="17" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="64"/></expr_stmt>

    <expr_stmt><expr><name pos:line="19" pos:column="5">str<pos:position pos:line="19" pos:column="8"/></name> <operator pos:line="19" pos:column="9">=<pos:position pos:line="19" pos:column="10"/></operator> <call><name pos:line="19" pos:column="11">strstr<pos:position pos:line="19" pos:column="17"/></name><argument_list pos:line="19" pos:column="17">(<argument><expr><name pos:line="19" pos:column="18">info_line<pos:position pos:line="19" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="29">field_name<pos:position pos:line="19" pos:column="39"/></name></expr></argument>)<pos:position pos:line="19" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="41"/></expr_stmt>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><operator pos:line="20" pos:column="9">!<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="10">str<pos:position pos:line="20" pos:column="13"/></name></expr>)<pos:position pos:line="20" pos:column="14"/></condition><then pos:line="20" pos:column="14">
      <block type="pseudo"><continue pos:line="21" pos:column="7">continue;<pos:position pos:line="21" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="23" pos:column="5">str<pos:position pos:line="23" pos:column="8"/></name> <operator pos:line="23" pos:column="9">+=<pos:position pos:line="23" pos:column="11"/></operator> <call><name pos:line="23" pos:column="12">strlen<pos:position pos:line="23" pos:column="18"/></name><argument_list pos:line="23" pos:column="18">(<argument><expr><name pos:line="23" pos:column="19">field_name<pos:position pos:line="23" pos:column="29"/></name></expr></argument>)<pos:position pos:line="23" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="31"/></expr_stmt>
    <for pos:line="24" pos:column="5">for <control pos:line="24" pos:column="9">(<init><expr><name pos:line="24" pos:column="10">i<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <literal type="number" pos:line="24" pos:column="14">0<pos:position pos:line="24" pos:column="15"/></literal></expr>;<pos:position pos:line="24" pos:column="16"/></init> <condition><expr><operator pos:line="24" pos:column="17">(<pos:position pos:line="24" pos:column="18"/></operator><operator pos:line="24" pos:column="18">*<pos:position pos:line="24" pos:column="19"/></operator><name pos:line="24" pos:column="19">str<pos:position pos:line="24" pos:column="22"/></name> <operator pos:line="24" pos:column="23">&amp;&amp;<pos:position pos:line="24" pos:column="33"/></operator> <call><name pos:line="24" pos:column="26">isdigit<pos:position pos:line="24" pos:column="33"/></name><argument_list pos:line="24" pos:column="33">(<argument><expr><operator pos:line="24" pos:column="34">(<pos:position pos:line="24" pos:column="35"/></operator><name pos:line="24" pos:column="35">int<pos:position pos:line="24" pos:column="38"/></name><operator pos:line="24" pos:column="38">)<pos:position pos:line="24" pos:column="39"/></operator><operator pos:line="24" pos:column="39">*<pos:position pos:line="24" pos:column="40"/></operator><name pos:line="24" pos:column="40">str<pos:position pos:line="24" pos:column="43"/></name></expr></argument>)<pos:position pos:line="24" pos:column="44"/></argument_list></call><operator pos:line="24" pos:column="44">)<pos:position pos:line="24" pos:column="45"/></operator></expr>;<pos:position pos:line="24" pos:column="46"/></condition> <incr><expr><name pos:line="24" pos:column="47">i<pos:position pos:line="24" pos:column="48"/></name><operator pos:line="24" pos:column="48">++<pos:position pos:line="24" pos:column="50"/></operator></expr><operator pos:line="24" pos:column="50">,<pos:position pos:line="24" pos:column="51"/></operator> <expr><name pos:line="24" pos:column="52">str<pos:position pos:line="24" pos:column="55"/></name><operator pos:line="24" pos:column="55">++<pos:position pos:line="24" pos:column="57"/></operator></expr></incr>)<pos:position pos:line="24" pos:column="58"/></control>
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="25" pos:column="7">buf<pos:position pos:line="25" pos:column="10"/></name><index pos:line="25" pos:column="10">[<expr><name pos:line="25" pos:column="11">i<pos:position pos:line="25" pos:column="12"/></name></expr>]<pos:position pos:line="25" pos:column="13"/></index></name> <operator pos:line="25" pos:column="14">=<pos:position pos:line="25" pos:column="15"/></operator> <operator pos:line="25" pos:column="16">*<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="17">str<pos:position pos:line="25" pos:column="20"/></name></expr>;<pos:position pos:line="25" pos:column="21"/></expr_stmt></block></for>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">buf<pos:position pos:line="26" pos:column="8"/></name><index pos:line="26" pos:column="8">[<expr><name pos:line="26" pos:column="9">i<pos:position pos:line="26" pos:column="10"/></name></expr>]<pos:position pos:line="26" pos:column="11"/></index></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <literal type="char" pos:line="26" pos:column="14">'\0'<pos:position pos:line="26" pos:column="18"/></literal></expr>;<pos:position pos:line="26" pos:column="19"/></expr_stmt>

    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><call><name pos:line="28" pos:column="9">parse_value<pos:position pos:line="28" pos:column="20"/></name><argument_list pos:line="28" pos:column="20">(<argument><expr><name pos:line="28" pos:column="21">buf<pos:position pos:line="28" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="26">&amp;<pos:position pos:line="28" pos:column="31"/></operator><name pos:line="28" pos:column="27">val<pos:position pos:line="28" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="32">DS_TYPE_GAUGE<pos:position pos:line="28" pos:column="45"/></name></expr></argument>)<pos:position pos:line="28" pos:column="46"/></argument_list></call> <operator pos:line="28" pos:column="47">!=<pos:position pos:line="28" pos:column="49"/></operator> <literal type="number" pos:line="28" pos:column="50">0<pos:position pos:line="28" pos:column="51"/></literal></expr>)<pos:position pos:line="28" pos:column="52"/></condition><then pos:line="28" pos:column="52"> <block pos:line="28" pos:column="53">{
      <expr_stmt><expr><call><name pos:line="29" pos:column="7">WARNING<pos:position pos:line="29" pos:column="14"/></name><argument_list pos:line="29" pos:column="14">(<argument><expr><literal type="string" pos:line="29" pos:column="15">"redis plugin: Unable to parse field `%s'."<pos:position pos:line="29" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="60">field_name<pos:position pos:line="29" pos:column="70"/></name></expr></argument>)<pos:position pos:line="29" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="72"/></expr_stmt>
      <return pos:line="30" pos:column="7">return <expr><operator pos:line="30" pos:column="14">-<pos:position pos:line="30" pos:column="15"/></operator><literal type="number" pos:line="30" pos:column="15">1<pos:position pos:line="30" pos:column="16"/></literal></expr>;<pos:position pos:line="30" pos:column="17"/></return>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="33" pos:column="5">snprintf<pos:position pos:line="33" pos:column="13"/></name><argument_list pos:line="33" pos:column="13">(<argument><expr><name pos:line="33" pos:column="14">db_id<pos:position pos:line="33" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="21">sizeof<argument_list pos:line="33" pos:column="27">(<argument><expr><name pos:line="33" pos:column="28">db_id<pos:position pos:line="33" pos:column="33"/></name></expr></argument>)<pos:position pos:line="33" pos:column="34"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="36">"%d"<pos:position pos:line="33" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="42">db<pos:position pos:line="33" pos:column="44"/></name></expr></argument>)<pos:position pos:line="33" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">redis_submit<pos:position pos:line="34" pos:column="17"/></name><argument_list pos:line="34" pos:column="17">(<argument><expr><name pos:line="34" pos:column="18">node<pos:position pos:line="34" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="24">"records"<pos:position pos:line="34" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="35">db_id<pos:position pos:line="34" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="42">val<pos:position pos:line="34" pos:column="45"/></name></expr></argument>)<pos:position pos:line="34" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="47"/></expr_stmt>
  }<pos:position pos:line="35" pos:column="4"/></block></for>
  <return pos:line="36" pos:column="3">return <expr><literal type="number" pos:line="36" pos:column="10">0<pos:position pos:line="36" pos:column="11"/></literal></expr>;<pos:position pos:line="36" pos:column="12"/></return>

}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

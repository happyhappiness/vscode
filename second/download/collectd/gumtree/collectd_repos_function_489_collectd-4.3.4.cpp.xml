<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_489_collectd-4.3.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">swap_init<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">void<pos:position pos:line="1" pos:column="27"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="28"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><name pos:line="3" pos:column="5">KERNEL_LINUX<pos:position pos:line="3" pos:column="17"/></name></expr></cpp:if>
	<comment type="block" pos:line="4" pos:column="9">/* No init stuff */</comment>
<comment type="block" pos:line="5" pos:column="1">/* #endif KERNEL_LINUX */</comment>

<cpp:elif pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">elif<pos:position pos:line="7" pos:column="6"/></cpp:directive> <expr><name pos:line="7" pos:column="7">HAVE_LIBKSTAT<pos:position pos:line="7" pos:column="20"/></name></expr></cpp:elif>
	<comment type="block" pos:line="8" pos:column="9">/* getpagesize(3C) tells me this does not fail.. */</comment>
	<expr_stmt><expr><name pos:line="9" pos:column="9">pagesize<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">=<pos:position pos:line="9" pos:column="19"/></operator> <operator pos:line="9" pos:column="20">(<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="21">unsigned<pos:position pos:line="9" pos:column="29"/></name> <name pos:line="9" pos:column="30">long<pos:position pos:line="9" pos:column="34"/></name> <name pos:line="9" pos:column="35">long<pos:position pos:line="9" pos:column="39"/></name><operator pos:line="9" pos:column="39">)<pos:position pos:line="9" pos:column="40"/></operator> <call><name pos:line="9" pos:column="41">getpagesize<pos:position pos:line="9" pos:column="52"/></name> <argument_list pos:line="9" pos:column="53">()<pos:position pos:line="9" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="56"/></expr_stmt>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><call><name pos:line="10" pos:column="13">get_kstat<pos:position pos:line="10" pos:column="22"/></name> <argument_list pos:line="10" pos:column="23">(<argument><expr><operator pos:line="10" pos:column="24">&amp;<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="25">ksp<pos:position pos:line="10" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="30">"unix"<pos:position pos:line="10" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="38">0<pos:position pos:line="10" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="41">"system_pages"<pos:position pos:line="10" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="57"/></condition><then pos:line="10" pos:column="57">
		<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="17">ksp<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">=<pos:position pos:line="11" pos:column="22"/></operator> <name pos:line="11" pos:column="23">NULL<pos:position pos:line="11" pos:column="27"/></name></expr>;<pos:position pos:line="11" pos:column="28"/></expr_stmt></block></then></if>
<comment type="block" pos:line="12" pos:column="1">/* #endif HAVE_LIBKSTAT */</comment>

<cpp:elif pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">elif<pos:position pos:line="14" pos:column="6"/></cpp:directive> <expr><call><name pos:line="14" pos:column="7">defined<pos:position pos:line="14" pos:column="14"/></name><argument_list pos:line="14" pos:column="14">(<argument><expr><name pos:line="14" pos:column="15">VM_SWAPUSAGE<pos:position pos:line="14" pos:column="27"/></name></expr></argument>)<pos:position pos:line="14" pos:column="28"/></argument_list></call></expr></cpp:elif>
	<comment type="block" pos:line="15" pos:column="9">/* No init stuff */</comment>
<comment type="block" pos:line="16" pos:column="1">/* #endif defined(VM_SWAPUSAGE) */</comment>

<cpp:elif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">elif<pos:position pos:line="18" pos:column="6"/></cpp:directive> <expr><name pos:line="18" pos:column="7">HAVE_LIBKVM_GETSWAPINFO<pos:position pos:line="18" pos:column="30"/></name></expr></cpp:elif>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">kvm_obj<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">!=<pos:position pos:line="19" pos:column="23"/></operator> <name pos:line="19" pos:column="24">NULL<pos:position pos:line="19" pos:column="28"/></name></expr>)<pos:position pos:line="19" pos:column="29"/></condition><then pos:line="19" pos:column="29">
	<block pos:line="20" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">kvm_close<pos:position pos:line="21" pos:column="26"/></name> <argument_list pos:line="21" pos:column="27">(<argument><expr><name pos:line="21" pos:column="28">kvm_obj<pos:position pos:line="21" pos:column="35"/></name></expr></argument>)<pos:position pos:line="21" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name pos:line="22" pos:column="17">kvm_obj<pos:position pos:line="22" pos:column="24"/></name> <operator pos:line="22" pos:column="25">=<pos:position pos:line="22" pos:column="26"/></operator> <name pos:line="22" pos:column="27">NULL<pos:position pos:line="22" pos:column="31"/></name></expr>;<pos:position pos:line="22" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="25" pos:column="9">kvm_pagesize<pos:position pos:line="25" pos:column="21"/></name> <operator pos:line="25" pos:column="22">=<pos:position pos:line="25" pos:column="23"/></operator> <call><name pos:line="25" pos:column="24">getpagesize<pos:position pos:line="25" pos:column="35"/></name> <argument_list pos:line="25" pos:column="36">()<pos:position pos:line="25" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="39"/></expr_stmt>

	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><operator pos:line="27" pos:column="13">(<pos:position pos:line="27" pos:column="14"/></operator><name pos:line="27" pos:column="14">kvm_obj<pos:position pos:line="27" pos:column="21"/></name> <operator pos:line="27" pos:column="22">=<pos:position pos:line="27" pos:column="23"/></operator> <call><name pos:line="27" pos:column="24">kvm_open<pos:position pos:line="27" pos:column="32"/></name> <argument_list pos:line="27" pos:column="33">(<argument><expr><name pos:line="27" pos:column="34">NULL<pos:position pos:line="27" pos:column="38"/></name></expr></argument>, <comment type="block" pos:line="27" pos:column="40">/* execfile */</comment>
					<argument><expr><name pos:line="28" pos:column="41">NULL<pos:position pos:line="28" pos:column="45"/></name></expr></argument>, <comment type="block" pos:line="28" pos:column="47">/* corefile */</comment>
					<argument><expr><name pos:line="29" pos:column="41">NULL<pos:position pos:line="29" pos:column="45"/></name></expr></argument>, <comment type="block" pos:line="29" pos:column="47">/* swapfile */</comment>
					<argument><expr><name pos:line="30" pos:column="41">O_RDONLY<pos:position pos:line="30" pos:column="49"/></name></expr></argument>, <comment type="block" pos:line="30" pos:column="51">/* flags */</comment>
					<argument><expr><name pos:line="31" pos:column="41">NULL<pos:position pos:line="31" pos:column="45"/></name></expr></argument>)<pos:position pos:line="31" pos:column="46"/></argument_list></call><operator pos:line="31" pos:column="46">)<pos:position pos:line="31" pos:column="47"/></operator> <comment type="block" pos:line="31" pos:column="48">/* errstr */</comment>
			<operator pos:line="32" pos:column="25">==<pos:position pos:line="32" pos:column="27"/></operator> <name pos:line="32" pos:column="28">NULL<pos:position pos:line="32" pos:column="32"/></name></expr>)<pos:position pos:line="32" pos:column="33"/></condition><then pos:line="32" pos:column="33">
	<block pos:line="33" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">ERROR<pos:position pos:line="34" pos:column="22"/></name> <argument_list pos:line="34" pos:column="23">(<argument><expr><literal type="string" pos:line="34" pos:column="24">"swap plugin: kvm_open failed."<pos:position pos:line="34" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="57"/></expr_stmt>
		<return pos:line="35" pos:column="17">return <expr><operator pos:line="35" pos:column="24">(<pos:position pos:line="35" pos:column="25"/></operator><operator pos:line="35" pos:column="25">-<pos:position pos:line="35" pos:column="26"/></operator><literal type="number" pos:line="35" pos:column="26">1<pos:position pos:line="35" pos:column="27"/></literal><operator pos:line="35" pos:column="27">)<pos:position pos:line="35" pos:column="28"/></operator></expr>;<pos:position pos:line="35" pos:column="29"/></return>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if>
<comment type="block" pos:line="37" pos:column="1">/* #endif HAVE_LIBKVM_GETSWAPINFO */</comment>

<cpp:elif pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">elif<pos:position pos:line="39" pos:column="6"/></cpp:directive> <expr><name pos:line="39" pos:column="7">HAVE_LIBSTATGRAB<pos:position pos:line="39" pos:column="23"/></name></expr></cpp:elif>
	<comment type="block" pos:line="40" pos:column="9">/* No init stuff */</comment>
<cpp:endif pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">endif<pos:position pos:line="41" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="41" pos:column="8">/* HAVE_LIBSTATGRAB */</comment>

	<return pos:line="43" pos:column="9">return <expr><operator pos:line="43" pos:column="16">(<pos:position pos:line="43" pos:column="17"/></operator><literal type="number" pos:line="43" pos:column="17">0<pos:position pos:line="43" pos:column="18"/></literal><operator pos:line="43" pos:column="18">)<pos:position pos:line="43" pos:column="19"/></operator></expr>;<pos:position pos:line="43" pos:column="20"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_600_collectd-4.5.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">counter_list_t<pos:position pos:line="1" pos:column="22"/></name> <modifier pos:line="1" pos:column="23">*<pos:position pos:line="1" pos:column="24"/></modifier></type><name pos:line="1" pos:column="24">counter_list_search<pos:position pos:line="1" pos:column="43"/></name> <parameter_list pos:line="1" pos:column="44">(<parameter><decl><type><name pos:line="1" pos:column="45">counter_list_t<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier><modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">list<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="68">unsigned<pos:position pos:line="1" pos:column="76"/></name> <name pos:line="1" pos:column="77">int<pos:position pos:line="1" pos:column="80"/></name></type> <name pos:line="1" pos:column="81">key<pos:position pos:line="1" pos:column="84"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="85"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">counter_list_t<pos:position pos:line="3" pos:column="23"/></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">entry<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="5" pos:column="9">DEBUG<pos:position pos:line="5" pos:column="14"/></name> <argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="string" pos:line="5" pos:column="16">"counter_list_search (list = %p, key = %u)"<pos:position pos:line="5" pos:column="59"/></literal></expr></argument>,
			<argument><expr><operator pos:line="6" pos:column="25">(<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="26">void<pos:position pos:line="6" pos:column="30"/></name> <operator pos:line="6" pos:column="31">*<pos:position pos:line="6" pos:column="32"/></operator><operator pos:line="6" pos:column="32">)<pos:position pos:line="6" pos:column="33"/></operator> <operator pos:line="6" pos:column="34">*<pos:position pos:line="6" pos:column="35"/></operator><name pos:line="6" pos:column="35">list<pos:position pos:line="6" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="41">key<pos:position pos:line="6" pos:column="44"/></name></expr></argument>)<pos:position pos:line="6" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="46"/></expr_stmt>

	<for pos:line="8" pos:column="9">for <control pos:line="8" pos:column="13">(<init><expr><name pos:line="8" pos:column="14">entry<pos:position pos:line="8" pos:column="19"/></name> <operator pos:line="8" pos:column="20">=<pos:position pos:line="8" pos:column="21"/></operator> <operator pos:line="8" pos:column="22">*<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="23">list<pos:position pos:line="8" pos:column="27"/></name></expr>;<pos:position pos:line="8" pos:column="28"/></init> <condition><expr><name pos:line="8" pos:column="29">entry<pos:position pos:line="8" pos:column="34"/></name> <operator pos:line="8" pos:column="35">!=<pos:position pos:line="8" pos:column="37"/></operator> <name pos:line="8" pos:column="38">NULL<pos:position pos:line="8" pos:column="42"/></name></expr>;<pos:position pos:line="8" pos:column="43"/></condition> <incr><expr><name pos:line="8" pos:column="44">entry<pos:position pos:line="8" pos:column="49"/></name> <operator pos:line="8" pos:column="50">=<pos:position pos:line="8" pos:column="51"/></operator> <name><name pos:line="8" pos:column="52">entry<pos:position pos:line="8" pos:column="57"/></name><operator pos:line="8" pos:column="57">-&gt;<pos:position pos:line="8" pos:column="62"/></operator><name pos:line="8" pos:column="59">next<pos:position pos:line="8" pos:column="63"/></name></name></expr></incr>)<pos:position pos:line="8" pos:column="64"/></control>
		<block type="pseudo"><if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><name><name pos:line="9" pos:column="21">entry<pos:position pos:line="9" pos:column="26"/></name><operator pos:line="9" pos:column="26">-&gt;<pos:position pos:line="9" pos:column="31"/></operator><name pos:line="9" pos:column="28">key<pos:position pos:line="9" pos:column="31"/></name></name> <operator pos:line="9" pos:column="32">==<pos:position pos:line="9" pos:column="34"/></operator> <name pos:line="9" pos:column="35">key<pos:position pos:line="9" pos:column="38"/></name></expr>)<pos:position pos:line="9" pos:column="39"/></condition><then pos:line="9" pos:column="39">
			<block type="pseudo"><break pos:line="10" pos:column="25">break;<pos:position pos:line="10" pos:column="31"/></break></block></then></if></block></for>

	<expr_stmt><expr><call><name pos:line="12" pos:column="9">DEBUG<pos:position pos:line="12" pos:column="14"/></name> <argument_list pos:line="12" pos:column="15">(<argument><expr><literal type="string" pos:line="12" pos:column="16">"return (%p)"<pos:position pos:line="12" pos:column="29"/></literal></expr></argument>, <argument><expr><operator pos:line="12" pos:column="31">(<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="32">void<pos:position pos:line="12" pos:column="36"/></name> <operator pos:line="12" pos:column="37">*<pos:position pos:line="12" pos:column="38"/></operator><operator pos:line="12" pos:column="38">)<pos:position pos:line="12" pos:column="39"/></operator> <name pos:line="12" pos:column="40">entry<pos:position pos:line="12" pos:column="45"/></name></expr></argument>)<pos:position pos:line="12" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="47"/></expr_stmt>
	<return pos:line="13" pos:column="9">return <expr><operator pos:line="13" pos:column="16">(<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="17">entry<pos:position pos:line="13" pos:column="22"/></name><operator pos:line="13" pos:column="22">)<pos:position pos:line="13" pos:column="23"/></operator></expr>;<pos:position pos:line="13" pos:column="24"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

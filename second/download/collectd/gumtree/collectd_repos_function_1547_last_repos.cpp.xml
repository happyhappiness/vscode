<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1547_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">Io__Prometheus__Client__MetricFamily<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type>
<name pos:line="2" pos:column="1">metric_family_get<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">data_set_t<pos:position pos:line="2" pos:column="29"/></name> <specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">ds<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="41">value_list_t<pos:position pos:line="2" pos:column="53"/></name> <specifier pos:line="2" pos:column="54">const<pos:position pos:line="2" pos:column="59"/></specifier> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="61">vl<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="65">size_t<pos:position pos:line="2" pos:column="71"/></name></type> <name pos:line="2" pos:column="72">ds_index<pos:position pos:line="2" pos:column="80"/></name></decl></parameter>,
                  <parameter><decl><type><name pos:line="3" pos:column="19">_Bool<pos:position pos:line="3" pos:column="24"/></name></type> <name pos:line="3" pos:column="25">allocate<pos:position pos:line="3" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="34"/></parameter_list> <block pos:line="3" pos:column="35">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">name<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><call><name pos:line="4" pos:column="16">metric_family_name<pos:position pos:line="4" pos:column="34"/></name><argument_list pos:line="4" pos:column="34">(<argument><expr><name pos:line="4" pos:column="35">ds<pos:position pos:line="4" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="39">vl<pos:position pos:line="4" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="43">ds_index<pos:position pos:line="4" pos:column="51"/></name></expr></argument>)<pos:position pos:line="4" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="53"/></decl_stmt>
  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">name<pos:position pos:line="5" pos:column="11"/></name> <operator pos:line="5" pos:column="12">==<pos:position pos:line="5" pos:column="14"/></operator> <name pos:line="5" pos:column="15">NULL<pos:position pos:line="5" pos:column="19"/></name></expr>)<pos:position pos:line="5" pos:column="20"/></condition><then pos:line="5" pos:column="20"> <block pos:line="5" pos:column="21">{
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">ERROR<pos:position pos:line="6" pos:column="10"/></name><argument_list pos:line="6" pos:column="10">(<argument><expr><literal type="string" pos:line="6" pos:column="11">"write_prometheus plugin: Allocating metric family name failed."<pos:position pos:line="6" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="77"/></expr_stmt>
    <return pos:line="7" pos:column="5">return <expr><name pos:line="7" pos:column="12">NULL<pos:position pos:line="7" pos:column="16"/></name></expr>;<pos:position pos:line="7" pos:column="17"/></return>
  }<pos:position pos:line="8" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name pos:line="10" pos:column="3">Io__Prometheus__Client__MetricFamily<pos:position pos:line="10" pos:column="39"/></name> <modifier pos:line="10" pos:column="40">*<pos:position pos:line="10" pos:column="41"/></modifier></type><name pos:line="10" pos:column="41">fam<pos:position pos:line="10" pos:column="44"/></name> <init pos:line="10" pos:column="45">= <expr><name pos:line="10" pos:column="47">NULL<pos:position pos:line="10" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="52"/></decl_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><call><name pos:line="11" pos:column="7">c_avl_get<pos:position pos:line="11" pos:column="16"/></name><argument_list pos:line="11" pos:column="16">(<argument><expr><name pos:line="11" pos:column="17">metrics<pos:position pos:line="11" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="26">name<pos:position pos:line="11" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="32">(<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="33">void<pos:position pos:line="11" pos:column="37"/></name> <operator pos:line="11" pos:column="38">*<pos:position pos:line="11" pos:column="39"/></operator><operator pos:line="11" pos:column="39">)<pos:position pos:line="11" pos:column="40"/></operator><operator pos:line="11" pos:column="40">&amp;<pos:position pos:line="11" pos:column="45"/></operator><name pos:line="11" pos:column="41">fam<pos:position pos:line="11" pos:column="44"/></name></expr></argument>)<pos:position pos:line="11" pos:column="45"/></argument_list></call> <operator pos:line="11" pos:column="46">==<pos:position pos:line="11" pos:column="48"/></operator> <literal type="number" pos:line="11" pos:column="49">0<pos:position pos:line="11" pos:column="50"/></literal></expr>)<pos:position pos:line="11" pos:column="51"/></condition><then pos:line="11" pos:column="51"> <block pos:line="11" pos:column="52">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">sfree<pos:position pos:line="12" pos:column="10"/></name><argument_list pos:line="12" pos:column="10">(<argument><expr><name pos:line="12" pos:column="11">name<pos:position pos:line="12" pos:column="15"/></name></expr></argument>)<pos:position pos:line="12" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">assert<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><name pos:line="13" pos:column="12">fam<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">!=<pos:position pos:line="13" pos:column="18"/></operator> <name pos:line="13" pos:column="19">NULL<pos:position pos:line="13" pos:column="23"/></name></expr></argument>)<pos:position pos:line="13" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="25"/></expr_stmt>
    <return pos:line="14" pos:column="5">return <expr><name pos:line="14" pos:column="12">fam<pos:position pos:line="14" pos:column="15"/></name></expr>;<pos:position pos:line="14" pos:column="16"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><operator pos:line="17" pos:column="7">!<pos:position pos:line="17" pos:column="8"/></operator><name pos:line="17" pos:column="8">allocate<pos:position pos:line="17" pos:column="16"/></name></expr>)<pos:position pos:line="17" pos:column="17"/></condition><then pos:line="17" pos:column="17"> <block pos:line="17" pos:column="18">{
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">sfree<pos:position pos:line="18" pos:column="10"/></name><argument_list pos:line="18" pos:column="10">(<argument><expr><name pos:line="18" pos:column="11">name<pos:position pos:line="18" pos:column="15"/></name></expr></argument>)<pos:position pos:line="18" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="17"/></expr_stmt>
    <return pos:line="19" pos:column="5">return <expr><name pos:line="19" pos:column="12">NULL<pos:position pos:line="19" pos:column="16"/></name></expr>;<pos:position pos:line="19" pos:column="17"/></return>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="22" pos:column="3">fam<pos:position pos:line="22" pos:column="6"/></name> <operator pos:line="22" pos:column="7">=<pos:position pos:line="22" pos:column="8"/></operator> <call><name pos:line="22" pos:column="9">metric_family_create<pos:position pos:line="22" pos:column="29"/></name><argument_list pos:line="22" pos:column="29">(<argument><expr><name pos:line="22" pos:column="30">name<pos:position pos:line="22" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="36">ds<pos:position pos:line="22" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="40">vl<pos:position pos:line="22" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="44">ds_index<pos:position pos:line="22" pos:column="52"/></name></expr></argument>)<pos:position pos:line="22" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="54"/></expr_stmt>
  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><name pos:line="23" pos:column="7">fam<pos:position pos:line="23" pos:column="10"/></name> <operator pos:line="23" pos:column="11">==<pos:position pos:line="23" pos:column="13"/></operator> <name pos:line="23" pos:column="14">NULL<pos:position pos:line="23" pos:column="18"/></name></expr>)<pos:position pos:line="23" pos:column="19"/></condition><then pos:line="23" pos:column="19"> <block pos:line="23" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">ERROR<pos:position pos:line="24" pos:column="10"/></name><argument_list pos:line="24" pos:column="10">(<argument><expr><literal type="string" pos:line="24" pos:column="11">"write_prometheus plugin: Allocating metric family failed."<pos:position pos:line="24" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">sfree<pos:position pos:line="25" pos:column="10"/></name><argument_list pos:line="25" pos:column="10">(<argument><expr><name pos:line="25" pos:column="11">name<pos:position pos:line="25" pos:column="15"/></name></expr></argument>)<pos:position pos:line="25" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="17"/></expr_stmt>
    <return pos:line="26" pos:column="5">return <expr><name pos:line="26" pos:column="12">NULL<pos:position pos:line="26" pos:column="16"/></name></expr>;<pos:position pos:line="26" pos:column="17"/></return>
  }<pos:position pos:line="27" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="29" pos:column="3">/* If successful, "name" is owned by "fam", i.e. don't free it here. */</comment>
  <expr_stmt><expr><call><name pos:line="30" pos:column="3">DEBUG<pos:position pos:line="30" pos:column="8"/></name><argument_list pos:line="30" pos:column="8">(<argument><expr><literal type="string" pos:line="30" pos:column="9">"write_prometheus plugin: metric family \"%s\" has been created."<pos:position pos:line="30" pos:column="74"/></literal></expr></argument>,
        <argument><expr><name pos:line="31" pos:column="9">name<pos:position pos:line="31" pos:column="13"/></name></expr></argument>)<pos:position pos:line="31" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><name pos:line="32" pos:column="3">name<pos:position pos:line="32" pos:column="7"/></name> <operator pos:line="32" pos:column="8">=<pos:position pos:line="32" pos:column="9"/></operator> <name pos:line="32" pos:column="10">NULL<pos:position pos:line="32" pos:column="14"/></name></expr>;<pos:position pos:line="32" pos:column="15"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="34" pos:column="3">int<pos:position pos:line="34" pos:column="6"/></name></type> <name pos:line="34" pos:column="7">status<pos:position pos:line="34" pos:column="13"/></name> <init pos:line="34" pos:column="14">= <expr><call><name pos:line="34" pos:column="16">c_avl_insert<pos:position pos:line="34" pos:column="28"/></name><argument_list pos:line="34" pos:column="28">(<argument><expr><name pos:line="34" pos:column="29">metrics<pos:position pos:line="34" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="38">fam<pos:position pos:line="34" pos:column="41"/></name><operator pos:line="34" pos:column="41">-&gt;<pos:position pos:line="34" pos:column="46"/></operator><name pos:line="34" pos:column="43">name<pos:position pos:line="34" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="49">fam<pos:position pos:line="34" pos:column="52"/></name></expr></argument>)<pos:position pos:line="34" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="34" pos:column="54"/></decl_stmt>
  <if pos:line="35" pos:column="3">if <condition pos:line="35" pos:column="6">(<expr><name pos:line="35" pos:column="7">status<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">!=<pos:position pos:line="35" pos:column="16"/></operator> <literal type="number" pos:line="35" pos:column="17">0<pos:position pos:line="35" pos:column="18"/></literal></expr>)<pos:position pos:line="35" pos:column="19"/></condition><then pos:line="35" pos:column="19"> <block pos:line="35" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">ERROR<pos:position pos:line="36" pos:column="10"/></name><argument_list pos:line="36" pos:column="10">(<argument><expr><literal type="string" pos:line="36" pos:column="11">"write_prometheus plugin: Adding \"%s\" failed."<pos:position pos:line="36" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="61">name<pos:position pos:line="36" pos:column="65"/></name></expr></argument>)<pos:position pos:line="36" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="67"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">metric_family_destroy<pos:position pos:line="37" pos:column="26"/></name><argument_list pos:line="37" pos:column="26">(<argument><expr><name pos:line="37" pos:column="27">fam<pos:position pos:line="37" pos:column="30"/></name></expr></argument>)<pos:position pos:line="37" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="32"/></expr_stmt>
    <return pos:line="38" pos:column="5">return <expr><name pos:line="38" pos:column="12">NULL<pos:position pos:line="38" pos:column="16"/></name></expr>;<pos:position pos:line="38" pos:column="17"/></return>
  }<pos:position pos:line="39" pos:column="4"/></block></then></if>

  <return pos:line="41" pos:column="3">return <expr><name pos:line="41" pos:column="10">fam<pos:position pos:line="41" pos:column="13"/></name></expr>;<pos:position pos:line="41" pos:column="14"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1607_collectd-4.10.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">destroy_read_heap<pos:position pos:line="1" pos:column="30"/></name> <parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">void<pos:position pos:line="1" pos:column="36"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="37"/></parameter_list> <comment type="block" pos:line="1" pos:column="38">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name pos:line="3" pos:column="13">read_heap<pos:position pos:line="3" pos:column="22"/></name> <operator pos:line="3" pos:column="23">==<pos:position pos:line="3" pos:column="25"/></operator> <name pos:line="3" pos:column="26">NULL<pos:position pos:line="3" pos:column="30"/></name></expr>)<pos:position pos:line="3" pos:column="31"/></condition><then pos:line="3" pos:column="31">
		<block type="pseudo"><return pos:line="4" pos:column="17">return;<pos:position pos:line="4" pos:column="24"/></return></block></then></if>

	<while pos:line="6" pos:column="9">while <condition pos:line="6" pos:column="15">(<expr><literal type="number" pos:line="6" pos:column="16">42<pos:position pos:line="6" pos:column="18"/></literal></expr>)<pos:position pos:line="6" pos:column="19"/></condition>
	<block pos:line="7" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="8" pos:column="17">callback_func_t<pos:position pos:line="8" pos:column="32"/></name> <modifier pos:line="8" pos:column="33">*<pos:position pos:line="8" pos:column="34"/></modifier></type><name pos:line="8" pos:column="34">cf<pos:position pos:line="8" pos:column="36"/></name></decl>;<pos:position pos:line="8" pos:column="37"/></decl_stmt>

		<expr_stmt><expr><name pos:line="10" pos:column="17">cf<pos:position pos:line="10" pos:column="19"/></name> <operator pos:line="10" pos:column="20">=<pos:position pos:line="10" pos:column="21"/></operator> <call><name pos:line="10" pos:column="22">c_heap_get_root<pos:position pos:line="10" pos:column="37"/></name> <argument_list pos:line="10" pos:column="38">(<argument><expr><name pos:line="10" pos:column="39">read_heap<pos:position pos:line="10" pos:column="48"/></name></expr></argument>)<pos:position pos:line="10" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="50"/></expr_stmt>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name pos:line="11" pos:column="21">cf<pos:position pos:line="11" pos:column="23"/></name> <operator pos:line="11" pos:column="24">==<pos:position pos:line="11" pos:column="26"/></operator> <name pos:line="11" pos:column="27">NULL<pos:position pos:line="11" pos:column="31"/></name></expr>)<pos:position pos:line="11" pos:column="32"/></condition><then pos:line="11" pos:column="32">
			<block type="pseudo"><break pos:line="12" pos:column="25">break;<pos:position pos:line="12" pos:column="31"/></break></block></then></if>

		<expr_stmt><expr><call><name pos:line="14" pos:column="17">destroy_callback<pos:position pos:line="14" pos:column="33"/></name> <argument_list pos:line="14" pos:column="34">(<argument><expr><name pos:line="14" pos:column="35">cf<pos:position pos:line="14" pos:column="37"/></name></expr></argument>)<pos:position pos:line="14" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="15" pos:column="10"/></block></while>

	<expr_stmt><expr><call><name pos:line="17" pos:column="9">c_heap_destroy<pos:position pos:line="17" pos:column="23"/></name> <argument_list pos:line="17" pos:column="24">(<argument><expr><name pos:line="17" pos:column="25">read_heap<pos:position pos:line="17" pos:column="34"/></name></expr></argument>)<pos:position pos:line="17" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name pos:line="18" pos:column="9">read_heap<pos:position pos:line="18" pos:column="18"/></name> <operator pos:line="18" pos:column="19">=<pos:position pos:line="18" pos:column="20"/></operator> <name pos:line="18" pos:column="21">NULL<pos:position pos:line="18" pos:column="25"/></name></expr>;<pos:position pos:line="18" pos:column="26"/></expr_stmt>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

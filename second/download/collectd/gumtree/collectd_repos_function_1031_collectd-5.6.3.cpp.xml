<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1031_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">match_range<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">range_t<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">range<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">double<pos:position pos:line="1" pos:column="46"/></name></type> <name pos:line="1" pos:column="47">value<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list> <block pos:line="1" pos:column="54">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">ret<pos:position pos:line="2" pos:column="10"/></name> <init pos:line="2" pos:column="11">= <expr><literal type="number" pos:line="2" pos:column="13">0<pos:position pos:line="2" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="2" pos:column="15"/></decl_stmt>

  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><operator pos:line="4" pos:column="7">!<pos:position pos:line="4" pos:column="8"/></operator><call><name pos:line="4" pos:column="8">isnan<pos:position pos:line="4" pos:column="13"/></name><argument_list pos:line="4" pos:column="13">(<argument><expr><name><name pos:line="4" pos:column="14">range<pos:position pos:line="4" pos:column="19"/></name><operator pos:line="4" pos:column="19">-&gt;<pos:position pos:line="4" pos:column="24"/></operator><name pos:line="4" pos:column="21">min<pos:position pos:line="4" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="25"/></argument_list></call> <operator pos:line="4" pos:column="26">&amp;&amp;<pos:position pos:line="4" pos:column="36"/></operator> <operator pos:line="4" pos:column="29">(<pos:position pos:line="4" pos:column="30"/></operator><name><name pos:line="4" pos:column="30">range<pos:position pos:line="4" pos:column="35"/></name><operator pos:line="4" pos:column="35">-&gt;<pos:position pos:line="4" pos:column="40"/></operator><name pos:line="4" pos:column="37">min<pos:position pos:line="4" pos:column="40"/></name></name> <operator pos:line="4" pos:column="41">&gt;<pos:position pos:line="4" pos:column="45"/></operator> <name pos:line="4" pos:column="43">value<pos:position pos:line="4" pos:column="48"/></name><operator pos:line="4" pos:column="48">)<pos:position pos:line="4" pos:column="49"/></operator></expr>)<pos:position pos:line="4" pos:column="50"/></condition><then pos:line="4" pos:column="50">
    <block type="pseudo"><expr_stmt><expr><name pos:line="5" pos:column="5">ret<pos:position pos:line="5" pos:column="8"/></name> <operator pos:line="5" pos:column="9">=<pos:position pos:line="5" pos:column="10"/></operator> <literal type="number" pos:line="5" pos:column="11">1<pos:position pos:line="5" pos:column="12"/></literal></expr>;<pos:position pos:line="5" pos:column="13"/></expr_stmt></block></then></if>
  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><operator pos:line="6" pos:column="7">!<pos:position pos:line="6" pos:column="8"/></operator><call><name pos:line="6" pos:column="8">isnan<pos:position pos:line="6" pos:column="13"/></name><argument_list pos:line="6" pos:column="13">(<argument><expr><name><name pos:line="6" pos:column="14">range<pos:position pos:line="6" pos:column="19"/></name><operator pos:line="6" pos:column="19">-&gt;<pos:position pos:line="6" pos:column="24"/></operator><name pos:line="6" pos:column="21">max<pos:position pos:line="6" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="25"/></argument_list></call> <operator pos:line="6" pos:column="26">&amp;&amp;<pos:position pos:line="6" pos:column="36"/></operator> <operator pos:line="6" pos:column="29">(<pos:position pos:line="6" pos:column="30"/></operator><name><name pos:line="6" pos:column="30">range<pos:position pos:line="6" pos:column="35"/></name><operator pos:line="6" pos:column="35">-&gt;<pos:position pos:line="6" pos:column="40"/></operator><name pos:line="6" pos:column="37">max<pos:position pos:line="6" pos:column="40"/></name></name> <operator pos:line="6" pos:column="41">&lt;<pos:position pos:line="6" pos:column="45"/></operator> <name pos:line="6" pos:column="43">value<pos:position pos:line="6" pos:column="48"/></name><operator pos:line="6" pos:column="48">)<pos:position pos:line="6" pos:column="49"/></operator></expr>)<pos:position pos:line="6" pos:column="50"/></condition><then pos:line="6" pos:column="50">
    <block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="5">ret<pos:position pos:line="7" pos:column="8"/></name> <operator pos:line="7" pos:column="9">=<pos:position pos:line="7" pos:column="10"/></operator> <literal type="number" pos:line="7" pos:column="11">1<pos:position pos:line="7" pos:column="12"/></literal></expr>;<pos:position pos:line="7" pos:column="13"/></expr_stmt></block></then></if>

  <return pos:line="9" pos:column="3">return <expr><operator pos:line="9" pos:column="10">(<pos:position pos:line="9" pos:column="11"/></operator><ternary><condition><expr><operator pos:line="9" pos:column="11">(<pos:position pos:line="9" pos:column="12"/></operator><operator pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></operator><name pos:line="9" pos:column="13">ret<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">-<pos:position pos:line="9" pos:column="18"/></operator> <name><name pos:line="9" pos:column="19">range<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">-&gt;<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="26">invert<pos:position pos:line="9" pos:column="32"/></name></name><operator pos:line="9" pos:column="32">)<pos:position pos:line="9" pos:column="33"/></operator> <operator pos:line="9" pos:column="34">==<pos:position pos:line="9" pos:column="36"/></operator> <literal type="number" pos:line="9" pos:column="37">0<pos:position pos:line="9" pos:column="38"/></literal><operator pos:line="9" pos:column="38">)<pos:position pos:line="9" pos:column="39"/></operator></expr> ?<pos:position pos:line="9" pos:column="41"/></condition><then pos:line="9" pos:column="41"> <expr><literal type="number" pos:line="9" pos:column="42">0<pos:position pos:line="9" pos:column="43"/></literal></expr> <pos:position pos:line="9" pos:column="44"/></then><else pos:line="9" pos:column="44">: <expr><literal type="number" pos:line="9" pos:column="46">1<pos:position pos:line="9" pos:column="47"/></literal></expr></else></ternary><operator pos:line="9" pos:column="47">)<pos:position pos:line="9" pos:column="48"/></operator></expr>;<pos:position pos:line="9" pos:column="49"/></return>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

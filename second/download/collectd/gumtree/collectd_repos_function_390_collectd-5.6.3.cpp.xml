<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_390_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">sysfs_file_to_buffer<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">dir<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="50">/* {{{ */</comment>
                                <parameter><decl><type><name pos:line="2" pos:column="33">char<pos:position pos:line="2" pos:column="37"/></name> <specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">power_supply<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="59">char<pos:position pos:line="2" pos:column="63"/></name> <specifier pos:line="2" pos:column="64">const<pos:position pos:line="2" pos:column="69"/></specifier> <modifier pos:line="2" pos:column="70">*<pos:position pos:line="2" pos:column="71"/></modifier></type><name pos:line="2" pos:column="71">basename<pos:position pos:line="2" pos:column="79"/></name></decl></parameter>,
                                <parameter><decl><type><name pos:line="3" pos:column="33">char<pos:position pos:line="3" pos:column="37"/></name> <modifier pos:line="3" pos:column="38">*<pos:position pos:line="3" pos:column="39"/></modifier></type><name pos:line="3" pos:column="39">buffer<pos:position pos:line="3" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="47">size_t<pos:position pos:line="3" pos:column="53"/></name></type> <name pos:line="3" pos:column="54">buffer_size<pos:position pos:line="3" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="66"/></parameter_list> <block pos:line="3" pos:column="67">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">FILE<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">fp<pos:position pos:line="5" pos:column="11"/></name></decl>;<pos:position pos:line="5" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">filename<pos:position pos:line="6" pos:column="16"/></name><index pos:line="6" pos:column="16">[<expr><name pos:line="6" pos:column="17">PATH_MAX<pos:position pos:line="6" pos:column="25"/></name></expr>]<pos:position pos:line="6" pos:column="26"/></index></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">ssnprintf<pos:position pos:line="8" pos:column="12"/></name><argument_list pos:line="8" pos:column="12">(<argument><expr><name pos:line="8" pos:column="13">filename<pos:position pos:line="8" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="23">sizeof<argument_list pos:line="8" pos:column="29">(<argument><expr><name pos:line="8" pos:column="30">filename<pos:position pos:line="8" pos:column="38"/></name></expr></argument>)<pos:position pos:line="8" pos:column="39"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="41">"%s/%s/%s"<pos:position pos:line="8" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="53">dir<pos:position pos:line="8" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="58">power_supply<pos:position pos:line="8" pos:column="70"/></name></expr></argument>,
            <argument><expr><name pos:line="9" pos:column="13">basename<pos:position pos:line="9" pos:column="21"/></name></expr></argument>)<pos:position pos:line="9" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="23"/></expr_stmt>

  <comment type="block" pos:line="11" pos:column="3">/* No file isn't the end of the world -- not every system will be
   * reporting the same set of statistics */</comment>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><call><name pos:line="13" pos:column="7">access<pos:position pos:line="13" pos:column="13"/></name><argument_list pos:line="13" pos:column="13">(<argument><expr><name pos:line="13" pos:column="14">filename<pos:position pos:line="13" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="24">R_OK<pos:position pos:line="13" pos:column="28"/></name></expr></argument>)<pos:position pos:line="13" pos:column="29"/></argument_list></call> <operator pos:line="13" pos:column="30">!=<pos:position pos:line="13" pos:column="32"/></operator> <literal type="number" pos:line="13" pos:column="33">0<pos:position pos:line="13" pos:column="34"/></literal></expr>)<pos:position pos:line="13" pos:column="35"/></condition><then pos:line="13" pos:column="35">
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><name pos:line="14" pos:column="12">ENOENT<pos:position pos:line="14" pos:column="18"/></name></expr>;<pos:position pos:line="14" pos:column="19"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="16" pos:column="3">fp<pos:position pos:line="16" pos:column="5"/></name> <operator pos:line="16" pos:column="6">=<pos:position pos:line="16" pos:column="7"/></operator> <call><name pos:line="16" pos:column="8">fopen<pos:position pos:line="16" pos:column="13"/></name><argument_list pos:line="16" pos:column="13">(<argument><expr><name pos:line="16" pos:column="14">filename<pos:position pos:line="16" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="24">"r"<pos:position pos:line="16" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="29"/></expr_stmt>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">fp<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">==<pos:position pos:line="17" pos:column="12"/></operator> <name pos:line="17" pos:column="13">NULL<pos:position pos:line="17" pos:column="17"/></name></expr>)<pos:position pos:line="17" pos:column="18"/></condition><then pos:line="17" pos:column="18"> <block pos:line="17" pos:column="19">{
    <expr_stmt><expr><name pos:line="18" pos:column="5">status<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <name pos:line="18" pos:column="14">errno<pos:position pos:line="18" pos:column="19"/></name></expr>;<pos:position pos:line="18" pos:column="20"/></expr_stmt>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">status<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">!=<pos:position pos:line="19" pos:column="18"/></operator> <name pos:line="19" pos:column="19">ENOENT<pos:position pos:line="19" pos:column="25"/></name></expr>)<pos:position pos:line="19" pos:column="26"/></condition><then pos:line="19" pos:column="26"> <block pos:line="19" pos:column="27">{
      <decl_stmt><decl><type><name pos:line="20" pos:column="7">char<pos:position pos:line="20" pos:column="11"/></name></type> <name><name pos:line="20" pos:column="12">errbuf<pos:position pos:line="20" pos:column="18"/></name><index pos:line="20" pos:column="18">[<expr><literal type="number" pos:line="20" pos:column="19">1024<pos:position pos:line="20" pos:column="23"/></literal></expr>]<pos:position pos:line="20" pos:column="24"/></index></name></decl>;<pos:position pos:line="20" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">WARNING<pos:position pos:line="21" pos:column="14"/></name><argument_list pos:line="21" pos:column="14">(<argument><expr><literal type="string" pos:line="21" pos:column="15">"battery plugin: fopen (%s) failed: %s"<pos:position pos:line="21" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="56">filename<pos:position pos:line="21" pos:column="64"/></name></expr></argument>,
              <argument><expr><call><name pos:line="22" pos:column="15">sstrerror<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">(<argument><expr><name pos:line="22" pos:column="25">status<pos:position pos:line="22" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="33">errbuf<pos:position pos:line="22" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="41">sizeof<argument_list pos:line="22" pos:column="47">(<argument><expr><name pos:line="22" pos:column="48">errbuf<pos:position pos:line="22" pos:column="54"/></name></expr></argument>)<pos:position pos:line="22" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>
    <return pos:line="24" pos:column="5">return <expr><name pos:line="24" pos:column="12">status<pos:position pos:line="24" pos:column="18"/></name></expr>;<pos:position pos:line="24" pos:column="19"/></return>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if>

  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><call><name pos:line="27" pos:column="7">fgets<pos:position pos:line="27" pos:column="12"/></name><argument_list pos:line="27" pos:column="12">(<argument><expr><name pos:line="27" pos:column="13">buffer<pos:position pos:line="27" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="21">buffer_size<pos:position pos:line="27" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="34">fp<pos:position pos:line="27" pos:column="36"/></name></expr></argument>)<pos:position pos:line="27" pos:column="37"/></argument_list></call> <operator pos:line="27" pos:column="38">==<pos:position pos:line="27" pos:column="40"/></operator> <name pos:line="27" pos:column="41">NULL<pos:position pos:line="27" pos:column="45"/></name></expr>)<pos:position pos:line="27" pos:column="46"/></condition><then pos:line="27" pos:column="46"> <block pos:line="27" pos:column="47">{
    <expr_stmt><expr><name pos:line="28" pos:column="5">status<pos:position pos:line="28" pos:column="11"/></name> <operator pos:line="28" pos:column="12">=<pos:position pos:line="28" pos:column="13"/></operator> <name pos:line="28" pos:column="14">errno<pos:position pos:line="28" pos:column="19"/></name></expr>;<pos:position pos:line="28" pos:column="20"/></expr_stmt>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">status<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">!=<pos:position pos:line="29" pos:column="18"/></operator> <name pos:line="29" pos:column="19">ENODEV<pos:position pos:line="29" pos:column="25"/></name></expr>)<pos:position pos:line="29" pos:column="26"/></condition><then pos:line="29" pos:column="26"> <block pos:line="29" pos:column="27">{
      <decl_stmt><decl><type><name pos:line="30" pos:column="7">char<pos:position pos:line="30" pos:column="11"/></name></type> <name><name pos:line="30" pos:column="12">errbuf<pos:position pos:line="30" pos:column="18"/></name><index pos:line="30" pos:column="18">[<expr><literal type="number" pos:line="30" pos:column="19">1024<pos:position pos:line="30" pos:column="23"/></literal></expr>]<pos:position pos:line="30" pos:column="24"/></index></name></decl>;<pos:position pos:line="30" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="31" pos:column="7">WARNING<pos:position pos:line="31" pos:column="14"/></name><argument_list pos:line="31" pos:column="14">(<argument><expr><literal type="string" pos:line="31" pos:column="15">"battery plugin: fgets (%s) failed: %s"<pos:position pos:line="31" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="56">filename<pos:position pos:line="31" pos:column="64"/></name></expr></argument>,
              <argument><expr><call><name pos:line="32" pos:column="15">sstrerror<pos:position pos:line="32" pos:column="24"/></name><argument_list pos:line="32" pos:column="24">(<argument><expr><name pos:line="32" pos:column="25">status<pos:position pos:line="32" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="33">errbuf<pos:position pos:line="32" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="32" pos:column="41">sizeof<argument_list pos:line="32" pos:column="47">(<argument><expr><name pos:line="32" pos:column="48">errbuf<pos:position pos:line="32" pos:column="54"/></name></expr></argument>)<pos:position pos:line="32" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="32" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">fclose<pos:position pos:line="34" pos:column="11"/></name><argument_list pos:line="34" pos:column="11">(<argument><expr><name pos:line="34" pos:column="12">fp<pos:position pos:line="34" pos:column="14"/></name></expr></argument>)<pos:position pos:line="34" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="16"/></expr_stmt>
    <return pos:line="35" pos:column="5">return <expr><name pos:line="35" pos:column="12">status<pos:position pos:line="35" pos:column="18"/></name></expr>;<pos:position pos:line="35" pos:column="19"/></return>
  }<pos:position pos:line="36" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="38" pos:column="3">strstripnewline<pos:position pos:line="38" pos:column="18"/></name><argument_list pos:line="38" pos:column="18">(<argument><expr><name pos:line="38" pos:column="19">buffer<pos:position pos:line="38" pos:column="25"/></name></expr></argument>)<pos:position pos:line="38" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="27"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="40" pos:column="3">fclose<pos:position pos:line="40" pos:column="9"/></name><argument_list pos:line="40" pos:column="9">(<argument><expr><name pos:line="40" pos:column="10">fp<pos:position pos:line="40" pos:column="12"/></name></expr></argument>)<pos:position pos:line="40" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="14"/></expr_stmt>
  <return pos:line="41" pos:column="3">return <expr><literal type="number" pos:line="41" pos:column="10">0<pos:position pos:line="41" pos:column="11"/></literal></expr>;<pos:position pos:line="41" pos:column="12"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1673_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">snmp_agent_validate_data<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">void<pos:position pos:line="1" pos:column="41"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list> <block pos:line="1" pos:column="43">{

  <expr_stmt><expr><call><name pos:line="3" pos:column="3">snmp_agent_dump_data<pos:position pos:line="3" pos:column="23"/></name><argument_list pos:line="3" pos:column="23">()<pos:position pos:line="3" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="26"/></expr_stmt>

  <for pos:line="5" pos:column="3">for <control pos:line="5" pos:column="7">(<init><decl><type><name pos:line="5" pos:column="8">llentry_t<pos:position pos:line="5" pos:column="17"/></name> <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type><name pos:line="5" pos:column="19">te<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><call><name pos:line="5" pos:column="24">llist_head<pos:position pos:line="5" pos:column="34"/></name><argument_list pos:line="5" pos:column="34">(<argument><expr><name><name pos:line="5" pos:column="35">g_agent<pos:position pos:line="5" pos:column="42"/></name><operator pos:line="5" pos:column="42">-&gt;<pos:position pos:line="5" pos:column="47"/></operator><name pos:line="5" pos:column="44">tables<pos:position pos:line="5" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="52"/></init> <condition><expr><name pos:line="5" pos:column="53">te<pos:position pos:line="5" pos:column="55"/></name> <operator pos:line="5" pos:column="56">!=<pos:position pos:line="5" pos:column="58"/></operator> <name pos:line="5" pos:column="59">NULL<pos:position pos:line="5" pos:column="63"/></name></expr>;<pos:position pos:line="5" pos:column="64"/></condition> <incr><expr><name pos:line="5" pos:column="65">te<pos:position pos:line="5" pos:column="67"/></name> <operator pos:line="5" pos:column="68">=<pos:position pos:line="5" pos:column="69"/></operator> <name><name pos:line="5" pos:column="70">te<pos:position pos:line="5" pos:column="72"/></name><operator pos:line="5" pos:column="72">-&gt;<pos:position pos:line="5" pos:column="77"/></operator><name pos:line="5" pos:column="74">next<pos:position pos:line="5" pos:column="78"/></name></name></expr></incr>)<pos:position pos:line="5" pos:column="79"/></control> <block pos:line="5" pos:column="80">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">table_definition_t<pos:position pos:line="6" pos:column="23"/></name> <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">td<pos:position pos:line="6" pos:column="27"/></name> <init pos:line="6" pos:column="28">= <expr><name><name pos:line="6" pos:column="30">te<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">-&gt;<pos:position pos:line="6" pos:column="37"/></operator><name pos:line="6" pos:column="34">value<pos:position pos:line="6" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="40"/></decl_stmt>

    <for pos:line="8" pos:column="5">for <control pos:line="8" pos:column="9">(<init><decl><type><name pos:line="8" pos:column="10">llentry_t<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">de<pos:position pos:line="8" pos:column="23"/></name> <init pos:line="8" pos:column="24">= <expr><call><name pos:line="8" pos:column="26">llist_head<pos:position pos:line="8" pos:column="36"/></name><argument_list pos:line="8" pos:column="36">(<argument><expr><name><name pos:line="8" pos:column="37">td<pos:position pos:line="8" pos:column="39"/></name><operator pos:line="8" pos:column="39">-&gt;<pos:position pos:line="8" pos:column="44"/></operator><name pos:line="8" pos:column="41">columns<pos:position pos:line="8" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="50"/></init> <condition><expr><name pos:line="8" pos:column="51">de<pos:position pos:line="8" pos:column="53"/></name> <operator pos:line="8" pos:column="54">!=<pos:position pos:line="8" pos:column="56"/></operator> <name pos:line="8" pos:column="57">NULL<pos:position pos:line="8" pos:column="61"/></name></expr>;<pos:position pos:line="8" pos:column="62"/></condition> <incr><expr><name pos:line="8" pos:column="63">de<pos:position pos:line="8" pos:column="65"/></name> <operator pos:line="8" pos:column="66">=<pos:position pos:line="8" pos:column="67"/></operator> <name><name pos:line="8" pos:column="68">de<pos:position pos:line="8" pos:column="70"/></name><operator pos:line="8" pos:column="70">-&gt;<pos:position pos:line="8" pos:column="75"/></operator><name pos:line="8" pos:column="72">next<pos:position pos:line="8" pos:column="76"/></name></name></expr></incr>)<pos:position pos:line="8" pos:column="77"/></control> <block pos:line="8" pos:column="78">{
      <decl_stmt><decl><type><name pos:line="9" pos:column="7">data_definition_t<pos:position pos:line="9" pos:column="24"/></name> <modifier pos:line="9" pos:column="25">*<pos:position pos:line="9" pos:column="26"/></modifier></type><name pos:line="9" pos:column="26">dd<pos:position pos:line="9" pos:column="28"/></name> <init pos:line="9" pos:column="29">= <expr><name><name pos:line="9" pos:column="31">de<pos:position pos:line="9" pos:column="33"/></name><operator pos:line="9" pos:column="33">-&gt;<pos:position pos:line="9" pos:column="38"/></operator><name pos:line="9" pos:column="35">value<pos:position pos:line="9" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="41"/></decl_stmt>

      <if pos:line="11" pos:column="7">if <condition pos:line="11" pos:column="10">(<expr><operator pos:line="11" pos:column="11">!<pos:position pos:line="11" pos:column="12"/></operator><name><name pos:line="11" pos:column="12">dd<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">-&gt;<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="16">plugin<pos:position pos:line="11" pos:column="22"/></name></name></expr>)<pos:position pos:line="11" pos:column="23"/></condition><then pos:line="11" pos:column="23"> <block pos:line="11" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">ERROR<pos:position pos:line="12" pos:column="14"/></name><argument_list pos:line="12" pos:column="14">(<argument><expr><name pos:line="12" pos:column="15">PLUGIN_NAME<pos:position pos:line="12" pos:column="26"/></name> <literal type="string" pos:line="12" pos:column="27">": Plugin not defined for '%s'.'%s'"<pos:position pos:line="12" pos:column="63"/></literal></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="65">td<pos:position pos:line="12" pos:column="67"/></name><operator pos:line="12" pos:column="67">-&gt;<pos:position pos:line="12" pos:column="72"/></operator><name pos:line="12" pos:column="69">name<pos:position pos:line="12" pos:column="73"/></name></name></expr></argument>,
              <argument><expr><name><name pos:line="13" pos:column="15">dd<pos:position pos:line="13" pos:column="17"/></name><operator pos:line="13" pos:column="17">-&gt;<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="19">name<pos:position pos:line="13" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="25"/></expr_stmt>
        <return pos:line="14" pos:column="9">return <expr><operator pos:line="14" pos:column="16">-<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="17">EINVAL<pos:position pos:line="14" pos:column="23"/></name></expr>;<pos:position pos:line="14" pos:column="24"/></return>
      }<pos:position pos:line="15" pos:column="8"/></block></then></if>

      <if pos:line="17" pos:column="7">if <condition pos:line="17" pos:column="10">(<expr><name><name pos:line="17" pos:column="11">dd<pos:position pos:line="17" pos:column="13"/></name><operator pos:line="17" pos:column="13">-&gt;<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="15">plugin_instance<pos:position pos:line="17" pos:column="30"/></name></name></expr>)<pos:position pos:line="17" pos:column="31"/></condition><then pos:line="17" pos:column="31"> <block pos:line="17" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">ERROR<pos:position pos:line="18" pos:column="14"/></name><argument_list pos:line="18" pos:column="14">(<argument><expr><name pos:line="18" pos:column="15">PLUGIN_NAME<pos:position pos:line="18" pos:column="26"/></name> <literal type="string" pos:line="18" pos:column="27">": PluginInstance should not be defined for table "<pos:position pos:line="18" pos:column="78"/></literal>
                          <literal type="string" pos:line="19" pos:column="27">"data type '%s'.'%s'"<pos:position pos:line="19" pos:column="48"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="20" pos:column="15">td<pos:position pos:line="20" pos:column="17"/></name><operator pos:line="20" pos:column="17">-&gt;<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="19">name<pos:position pos:line="20" pos:column="23"/></name></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="25">dd<pos:position pos:line="20" pos:column="27"/></name><operator pos:line="20" pos:column="27">-&gt;<pos:position pos:line="20" pos:column="32"/></operator><name pos:line="20" pos:column="29">name<pos:position pos:line="20" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="35"/></expr_stmt>
        <return pos:line="21" pos:column="9">return <expr><operator pos:line="21" pos:column="16">-<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="17">EINVAL<pos:position pos:line="21" pos:column="23"/></name></expr>;<pos:position pos:line="21" pos:column="24"/></return>
      }<pos:position pos:line="22" pos:column="8"/></block></then></if>

      <if pos:line="24" pos:column="7">if <condition pos:line="24" pos:column="10">(<expr><name><name pos:line="24" pos:column="11">dd<pos:position pos:line="24" pos:column="13"/></name><operator pos:line="24" pos:column="13">-&gt;<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="15">oids_len<pos:position pos:line="24" pos:column="23"/></name></name> <operator pos:line="24" pos:column="24">==<pos:position pos:line="24" pos:column="26"/></operator> <literal type="number" pos:line="24" pos:column="27">0<pos:position pos:line="24" pos:column="28"/></literal></expr>)<pos:position pos:line="24" pos:column="29"/></condition><then pos:line="24" pos:column="29"> <block pos:line="24" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">ERROR<pos:position pos:line="25" pos:column="14"/></name><argument_list pos:line="25" pos:column="14">(<argument><expr><name pos:line="25" pos:column="15">PLUGIN_NAME<pos:position pos:line="25" pos:column="26"/></name> <literal type="string" pos:line="25" pos:column="27">": No OIDs defined for '%s'.'%s'"<pos:position pos:line="25" pos:column="60"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="62">td<pos:position pos:line="25" pos:column="64"/></name><operator pos:line="25" pos:column="64">-&gt;<pos:position pos:line="25" pos:column="69"/></operator><name pos:line="25" pos:column="66">name<pos:position pos:line="25" pos:column="70"/></name></name></expr></argument>,
              <argument><expr><name><name pos:line="26" pos:column="15">dd<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">-&gt;<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="19">name<pos:position pos:line="26" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="25"/></expr_stmt>
        <return pos:line="27" pos:column="9">return <expr><operator pos:line="27" pos:column="16">-<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="17">EINVAL<pos:position pos:line="27" pos:column="23"/></name></expr>;<pos:position pos:line="27" pos:column="24"/></return>
      }<pos:position pos:line="28" pos:column="8"/></block></then></if>

      <if pos:line="30" pos:column="7">if <condition pos:line="30" pos:column="10">(<expr><name><name pos:line="30" pos:column="11">dd<pos:position pos:line="30" pos:column="13"/></name><operator pos:line="30" pos:column="13">-&gt;<pos:position pos:line="30" pos:column="18"/></operator><name pos:line="30" pos:column="15">is_instance<pos:position pos:line="30" pos:column="26"/></name></name></expr>)<pos:position pos:line="30" pos:column="27"/></condition><then pos:line="30" pos:column="27"> <block pos:line="30" pos:column="28">{

        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name><name pos:line="32" pos:column="13">dd<pos:position pos:line="32" pos:column="15"/></name><operator pos:line="32" pos:column="15">-&gt;<pos:position pos:line="32" pos:column="20"/></operator><name pos:line="32" pos:column="17">type<pos:position pos:line="32" pos:column="21"/></name></name> <operator pos:line="32" pos:column="22">||<pos:position pos:line="32" pos:column="24"/></operator> <name><name pos:line="32" pos:column="25">dd<pos:position pos:line="32" pos:column="27"/></name><operator pos:line="32" pos:column="27">-&gt;<pos:position pos:line="32" pos:column="32"/></operator><name pos:line="32" pos:column="29">type_instance<pos:position pos:line="32" pos:column="42"/></name></name></expr>)<pos:position pos:line="32" pos:column="43"/></condition><then pos:line="32" pos:column="43"> <block pos:line="32" pos:column="44">{
          <expr_stmt><expr><call><name pos:line="33" pos:column="11">ERROR<pos:position pos:line="33" pos:column="16"/></name><argument_list pos:line="33" pos:column="16">(<argument><expr><name pos:line="33" pos:column="17">PLUGIN_NAME<pos:position pos:line="33" pos:column="28"/></name> <literal type="string" pos:line="33" pos:column="29">": Type and TypeInstance are not valid for "<pos:position pos:line="33" pos:column="73"/></literal>
                            <literal type="string" pos:line="34" pos:column="29">"instance data '%s'.'%s'"<pos:position pos:line="34" pos:column="54"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="35" pos:column="17">td<pos:position pos:line="35" pos:column="19"/></name><operator pos:line="35" pos:column="19">-&gt;<pos:position pos:line="35" pos:column="24"/></operator><name pos:line="35" pos:column="21">name<pos:position pos:line="35" pos:column="25"/></name></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="27">dd<pos:position pos:line="35" pos:column="29"/></name><operator pos:line="35" pos:column="29">-&gt;<pos:position pos:line="35" pos:column="34"/></operator><name pos:line="35" pos:column="31">name<pos:position pos:line="35" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="37"/></expr_stmt>
          <return pos:line="36" pos:column="11">return <expr><operator pos:line="36" pos:column="18">-<pos:position pos:line="36" pos:column="19"/></operator><name pos:line="36" pos:column="19">EINVAL<pos:position pos:line="36" pos:column="25"/></name></expr>;<pos:position pos:line="36" pos:column="26"/></return>
        }<pos:position pos:line="37" pos:column="10"/></block></then></if>

        <if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name><name pos:line="39" pos:column="13">dd<pos:position pos:line="39" pos:column="15"/></name><operator pos:line="39" pos:column="15">-&gt;<pos:position pos:line="39" pos:column="20"/></operator><name pos:line="39" pos:column="17">oids_len<pos:position pos:line="39" pos:column="25"/></name></name> <operator pos:line="39" pos:column="26">&gt;<pos:position pos:line="39" pos:column="30"/></operator> <literal type="number" pos:line="39" pos:column="28">1<pos:position pos:line="39" pos:column="29"/></literal></expr>)<pos:position pos:line="39" pos:column="30"/></condition><then pos:line="39" pos:column="30"> <block pos:line="39" pos:column="31">{
          <expr_stmt><expr><call><name pos:line="40" pos:column="11">ERROR<pos:position pos:line="40" pos:column="16"/></name><argument_list pos:line="40" pos:column="16">(
              <argument><expr><name pos:line="41" pos:column="15">PLUGIN_NAME<pos:position pos:line="41" pos:column="26"/></name>
              <literal type="string" pos:line="42" pos:column="15">": Only one OID should be specified for instance data '%s'.'%s'"<pos:position pos:line="42" pos:column="79"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="43" pos:column="15">td<pos:position pos:line="43" pos:column="17"/></name><operator pos:line="43" pos:column="17">-&gt;<pos:position pos:line="43" pos:column="22"/></operator><name pos:line="43" pos:column="19">name<pos:position pos:line="43" pos:column="23"/></name></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="25">dd<pos:position pos:line="43" pos:column="27"/></name><operator pos:line="43" pos:column="27">-&gt;<pos:position pos:line="43" pos:column="32"/></operator><name pos:line="43" pos:column="29">name<pos:position pos:line="43" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="35"/></expr_stmt>
          <return pos:line="44" pos:column="11">return <expr><operator pos:line="44" pos:column="18">-<pos:position pos:line="44" pos:column="19"/></operator><name pos:line="44" pos:column="19">EINVAL<pos:position pos:line="44" pos:column="25"/></name></expr>;<pos:position pos:line="44" pos:column="26"/></return>
        }<pos:position pos:line="45" pos:column="10"/></block></then></if>
      }<pos:position pos:line="46" pos:column="8"/></block></then> <else pos:line="46" pos:column="9">else <block pos:line="46" pos:column="14">{

        <if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><operator pos:line="48" pos:column="13">!<pos:position pos:line="48" pos:column="14"/></operator><name><name pos:line="48" pos:column="14">dd<pos:position pos:line="48" pos:column="16"/></name><operator pos:line="48" pos:column="16">-&gt;<pos:position pos:line="48" pos:column="21"/></operator><name pos:line="48" pos:column="18">type<pos:position pos:line="48" pos:column="22"/></name></name></expr>)<pos:position pos:line="48" pos:column="23"/></condition><then pos:line="48" pos:column="23"> <block pos:line="48" pos:column="24">{
          <expr_stmt><expr><call><name pos:line="49" pos:column="11">ERROR<pos:position pos:line="49" pos:column="16"/></name><argument_list pos:line="49" pos:column="16">(<argument><expr><name pos:line="49" pos:column="17">PLUGIN_NAME<pos:position pos:line="49" pos:column="28"/></name> <literal type="string" pos:line="49" pos:column="29">": Type not defined for data '%s'.'%s'"<pos:position pos:line="49" pos:column="68"/></literal></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="70">td<pos:position pos:line="49" pos:column="72"/></name><operator pos:line="49" pos:column="72">-&gt;<pos:position pos:line="49" pos:column="77"/></operator><name pos:line="49" pos:column="74">name<pos:position pos:line="49" pos:column="78"/></name></name></expr></argument>,
                <argument><expr><name><name pos:line="50" pos:column="17">dd<pos:position pos:line="50" pos:column="19"/></name><operator pos:line="50" pos:column="19">-&gt;<pos:position pos:line="50" pos:column="24"/></operator><name pos:line="50" pos:column="21">name<pos:position pos:line="50" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="27"/></expr_stmt>
          <return pos:line="51" pos:column="11">return <expr><operator pos:line="51" pos:column="18">-<pos:position pos:line="51" pos:column="19"/></operator><name pos:line="51" pos:column="19">EINVAL<pos:position pos:line="51" pos:column="25"/></name></expr>;<pos:position pos:line="51" pos:column="26"/></return>
        }<pos:position pos:line="52" pos:column="10"/></block></then></if>
      }<pos:position pos:line="53" pos:column="8"/></block></else></if>
    }<pos:position pos:line="54" pos:column="6"/></block></for>
  }<pos:position pos:line="55" pos:column="4"/></block></for>

  <for pos:line="57" pos:column="3">for <control pos:line="57" pos:column="7">(<init><decl><type><name pos:line="57" pos:column="8">llentry_t<pos:position pos:line="57" pos:column="17"/></name> <modifier pos:line="57" pos:column="18">*<pos:position pos:line="57" pos:column="19"/></modifier></type><name pos:line="57" pos:column="19">e<pos:position pos:line="57" pos:column="20"/></name> <init pos:line="57" pos:column="21">= <expr><call><name pos:line="57" pos:column="23">llist_head<pos:position pos:line="57" pos:column="33"/></name><argument_list pos:line="57" pos:column="33">(<argument><expr><name><name pos:line="57" pos:column="34">g_agent<pos:position pos:line="57" pos:column="41"/></name><operator pos:line="57" pos:column="41">-&gt;<pos:position pos:line="57" pos:column="46"/></operator><name pos:line="57" pos:column="43">scalars<pos:position pos:line="57" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="57" pos:column="52"/></init> <condition><expr><name pos:line="57" pos:column="53">e<pos:position pos:line="57" pos:column="54"/></name> <operator pos:line="57" pos:column="55">!=<pos:position pos:line="57" pos:column="57"/></operator> <name pos:line="57" pos:column="58">NULL<pos:position pos:line="57" pos:column="62"/></name></expr>;<pos:position pos:line="57" pos:column="63"/></condition> <incr><expr><name pos:line="57" pos:column="64">e<pos:position pos:line="57" pos:column="65"/></name> <operator pos:line="57" pos:column="66">=<pos:position pos:line="57" pos:column="67"/></operator> <name><name pos:line="57" pos:column="68">e<pos:position pos:line="57" pos:column="69"/></name><operator pos:line="57" pos:column="69">-&gt;<pos:position pos:line="57" pos:column="74"/></operator><name pos:line="57" pos:column="71">next<pos:position pos:line="57" pos:column="75"/></name></name></expr></incr>)<pos:position pos:line="57" pos:column="76"/></control> <block pos:line="57" pos:column="77">{
    <decl_stmt><decl><type><name pos:line="58" pos:column="5">data_definition_t<pos:position pos:line="58" pos:column="22"/></name> <modifier pos:line="58" pos:column="23">*<pos:position pos:line="58" pos:column="24"/></modifier></type><name pos:line="58" pos:column="24">dd<pos:position pos:line="58" pos:column="26"/></name> <init pos:line="58" pos:column="27">= <expr><name><name pos:line="58" pos:column="29">e<pos:position pos:line="58" pos:column="30"/></name><operator pos:line="58" pos:column="30">-&gt;<pos:position pos:line="58" pos:column="35"/></operator><name pos:line="58" pos:column="32">value<pos:position pos:line="58" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="58" pos:column="38"/></decl_stmt>

    <if pos:line="60" pos:column="5">if <condition pos:line="60" pos:column="8">(<expr><operator pos:line="60" pos:column="9">!<pos:position pos:line="60" pos:column="10"/></operator><name><name pos:line="60" pos:column="10">dd<pos:position pos:line="60" pos:column="12"/></name><operator pos:line="60" pos:column="12">-&gt;<pos:position pos:line="60" pos:column="17"/></operator><name pos:line="60" pos:column="14">plugin<pos:position pos:line="60" pos:column="20"/></name></name></expr>)<pos:position pos:line="60" pos:column="21"/></condition><then pos:line="60" pos:column="21"> <block pos:line="60" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="61" pos:column="7">ERROR<pos:position pos:line="61" pos:column="12"/></name><argument_list pos:line="61" pos:column="12">(<argument><expr><name pos:line="61" pos:column="13">PLUGIN_NAME<pos:position pos:line="61" pos:column="24"/></name> <literal type="string" pos:line="61" pos:column="25">": Plugin not defined for '%s'"<pos:position pos:line="61" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="58">dd<pos:position pos:line="61" pos:column="60"/></name><operator pos:line="61" pos:column="60">-&gt;<pos:position pos:line="61" pos:column="65"/></operator><name pos:line="61" pos:column="62">name<pos:position pos:line="61" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="68"/></expr_stmt>
      <return pos:line="62" pos:column="7">return <expr><operator pos:line="62" pos:column="14">-<pos:position pos:line="62" pos:column="15"/></operator><name pos:line="62" pos:column="15">EINVAL<pos:position pos:line="62" pos:column="21"/></name></expr>;<pos:position pos:line="62" pos:column="22"/></return>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if>

    <if pos:line="65" pos:column="5">if <condition pos:line="65" pos:column="8">(<expr><name><name pos:line="65" pos:column="9">dd<pos:position pos:line="65" pos:column="11"/></name><operator pos:line="65" pos:column="11">-&gt;<pos:position pos:line="65" pos:column="16"/></operator><name pos:line="65" pos:column="13">oids_len<pos:position pos:line="65" pos:column="21"/></name></name> <operator pos:line="65" pos:column="22">==<pos:position pos:line="65" pos:column="24"/></operator> <literal type="number" pos:line="65" pos:column="25">0<pos:position pos:line="65" pos:column="26"/></literal></expr>)<pos:position pos:line="65" pos:column="27"/></condition><then pos:line="65" pos:column="27"> <block pos:line="65" pos:column="28">{
      <expr_stmt><expr><call><name pos:line="66" pos:column="7">ERROR<pos:position pos:line="66" pos:column="12"/></name><argument_list pos:line="66" pos:column="12">(<argument><expr><name pos:line="66" pos:column="13">PLUGIN_NAME<pos:position pos:line="66" pos:column="24"/></name> <literal type="string" pos:line="66" pos:column="25">": No OIDs defined for '%s'"<pos:position pos:line="66" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="55">dd<pos:position pos:line="66" pos:column="57"/></name><operator pos:line="66" pos:column="57">-&gt;<pos:position pos:line="66" pos:column="62"/></operator><name pos:line="66" pos:column="59">name<pos:position pos:line="66" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="65"/></expr_stmt>
      <return pos:line="67" pos:column="7">return <expr><operator pos:line="67" pos:column="14">-<pos:position pos:line="67" pos:column="15"/></operator><name pos:line="67" pos:column="15">EINVAL<pos:position pos:line="67" pos:column="21"/></name></expr>;<pos:position pos:line="67" pos:column="22"/></return>
    }<pos:position pos:line="68" pos:column="6"/></block></then></if>

    <if pos:line="70" pos:column="5">if <condition pos:line="70" pos:column="8">(<expr><name><name pos:line="70" pos:column="9">dd<pos:position pos:line="70" pos:column="11"/></name><operator pos:line="70" pos:column="11">-&gt;<pos:position pos:line="70" pos:column="16"/></operator><name pos:line="70" pos:column="13">is_instance<pos:position pos:line="70" pos:column="24"/></name></name></expr>)<pos:position pos:line="70" pos:column="25"/></condition><then pos:line="70" pos:column="25"> <block pos:line="70" pos:column="26">{
      <expr_stmt><expr><call><name pos:line="71" pos:column="7">ERROR<pos:position pos:line="71" pos:column="12"/></name><argument_list pos:line="71" pos:column="12">(<argument><expr><name pos:line="71" pos:column="13">PLUGIN_NAME<pos:position pos:line="71" pos:column="24"/></name>
            <literal type="string" pos:line="72" pos:column="13">": Instance flag can't be specified for scalar data '%s'"<pos:position pos:line="72" pos:column="70"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="73" pos:column="13">dd<pos:position pos:line="73" pos:column="15"/></name><operator pos:line="73" pos:column="15">-&gt;<pos:position pos:line="73" pos:column="20"/></operator><name pos:line="73" pos:column="17">name<pos:position pos:line="73" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="23"/></expr_stmt>
      <return pos:line="74" pos:column="7">return <expr><operator pos:line="74" pos:column="14">-<pos:position pos:line="74" pos:column="15"/></operator><name pos:line="74" pos:column="15">EINVAL<pos:position pos:line="74" pos:column="21"/></name></expr>;<pos:position pos:line="74" pos:column="22"/></return>
    }<pos:position pos:line="75" pos:column="6"/></block></then></if>

    <if pos:line="77" pos:column="5">if <condition pos:line="77" pos:column="8">(<expr><operator pos:line="77" pos:column="9">!<pos:position pos:line="77" pos:column="10"/></operator><name><name pos:line="77" pos:column="10">dd<pos:position pos:line="77" pos:column="12"/></name><operator pos:line="77" pos:column="12">-&gt;<pos:position pos:line="77" pos:column="17"/></operator><name pos:line="77" pos:column="14">type<pos:position pos:line="77" pos:column="18"/></name></name></expr>)<pos:position pos:line="77" pos:column="19"/></condition><then pos:line="77" pos:column="19"> <block pos:line="77" pos:column="20">{
      <expr_stmt><expr><call><name pos:line="78" pos:column="7">ERROR<pos:position pos:line="78" pos:column="12"/></name><argument_list pos:line="78" pos:column="12">(<argument><expr><name pos:line="78" pos:column="13">PLUGIN_NAME<pos:position pos:line="78" pos:column="24"/></name> <literal type="string" pos:line="78" pos:column="25">": Type not defined for data '%s'"<pos:position pos:line="78" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="61">dd<pos:position pos:line="78" pos:column="63"/></name><operator pos:line="78" pos:column="63">-&gt;<pos:position pos:line="78" pos:column="68"/></operator><name pos:line="78" pos:column="65">name<pos:position pos:line="78" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="71"/></expr_stmt>
      <return pos:line="79" pos:column="7">return <expr><operator pos:line="79" pos:column="14">-<pos:position pos:line="79" pos:column="15"/></operator><name pos:line="79" pos:column="15">EINVAL<pos:position pos:line="79" pos:column="21"/></name></expr>;<pos:position pos:line="79" pos:column="22"/></return>
    }<pos:position pos:line="80" pos:column="6"/></block></then></if>
  }<pos:position pos:line="81" pos:column="4"/></block></for>

  <return pos:line="83" pos:column="3">return <expr><literal type="number" pos:line="83" pos:column="10">0<pos:position pos:line="83" pos:column="11"/></literal></expr>;<pos:position pos:line="83" pos:column="12"/></return>
}<pos:position pos:line="84" pos:column="2"/></block></function></unit>

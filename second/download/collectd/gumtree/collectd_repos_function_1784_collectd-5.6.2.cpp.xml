<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1784_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ntpd_get_name_from_address<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">buffer<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">size_t<pos:position pos:line="1" pos:column="59"/></name></type> <name pos:line="1" pos:column="60">buffer_size<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>,
                                      <parameter><decl><type><name><name pos:line="2" pos:column="39">struct<pos:position pos:line="2" pos:column="45"/></name> <name pos:line="2" pos:column="46">info_peer_summary<pos:position pos:line="2" pos:column="63"/></name></name> <specifier pos:line="2" pos:column="64">const<pos:position pos:line="2" pos:column="69"/></specifier> <modifier pos:line="2" pos:column="70">*<pos:position pos:line="2" pos:column="71"/></modifier></type><name pos:line="2" pos:column="71">peer_info<pos:position pos:line="2" pos:column="80"/></name></decl></parameter>,
                                      <parameter><decl><type><name pos:line="3" pos:column="39">_Bool<pos:position pos:line="3" pos:column="44"/></name></type> <name pos:line="3" pos:column="45">do_reverse_lookup<pos:position pos:line="3" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="63"/></parameter_list> <block pos:line="3" pos:column="64">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">sockaddr_storage<pos:position pos:line="4" pos:column="26"/></name></name></type> <name pos:line="4" pos:column="27">sa<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><block pos:line="4" pos:column="32">{<expr><literal type="number" pos:line="4" pos:column="33">0<pos:position pos:line="4" pos:column="34"/></literal></expr>}<pos:position pos:line="4" pos:column="35"/></block></expr></init></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">socklen_t<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">sa_len<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">flags<pos:position pos:line="6" pos:column="12"/></name> <init pos:line="6" pos:column="13">= <expr><literal type="number" pos:line="6" pos:column="15">0<pos:position pos:line="6" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">status<pos:position pos:line="7" pos:column="13"/></name></decl>;<pos:position pos:line="7" pos:column="14"/></decl_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name><name pos:line="9" pos:column="7">peer_info<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">-&gt;<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="18">v6_flag<pos:position pos:line="9" pos:column="25"/></name></name></expr>)<pos:position pos:line="9" pos:column="26"/></condition><then pos:line="9" pos:column="26"> <block pos:line="9" pos:column="27">{
    <decl_stmt><decl><type><name><name pos:line="10" pos:column="5">struct<pos:position pos:line="10" pos:column="11"/></name> <name pos:line="10" pos:column="12">sockaddr_in6<pos:position pos:line="10" pos:column="24"/></name></name></type> <name pos:line="10" pos:column="25">sa6<pos:position pos:line="10" pos:column="28"/></name> <init pos:line="10" pos:column="29">= <expr><block pos:line="10" pos:column="31">{<expr><literal type="number" pos:line="10" pos:column="32">0<pos:position pos:line="10" pos:column="33"/></literal></expr>}<pos:position pos:line="10" pos:column="34"/></block></expr></init></decl>;<pos:position pos:line="10" pos:column="35"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="12" pos:column="5">assert<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><sizeof pos:line="12" pos:column="12">sizeof<argument_list pos:line="12" pos:column="18">(<argument><expr><name pos:line="12" pos:column="19">sa<pos:position pos:line="12" pos:column="21"/></name></expr></argument>)<pos:position pos:line="12" pos:column="22"/></argument_list></sizeof> <operator pos:line="12" pos:column="23">&gt;=<pos:position pos:line="12" pos:column="28"/></operator> <sizeof pos:line="12" pos:column="26">sizeof<argument_list pos:line="12" pos:column="32">(<argument><expr><name pos:line="12" pos:column="33">sa6<pos:position pos:line="12" pos:column="36"/></name></expr></argument>)<pos:position pos:line="12" pos:column="37"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="39"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="14" pos:column="5">sa6<pos:position pos:line="14" pos:column="8"/></name><operator pos:line="14" pos:column="8">.<pos:position pos:line="14" pos:column="9"/></operator><name pos:line="14" pos:column="9">sin6_family<pos:position pos:line="14" pos:column="20"/></name></name> <operator pos:line="14" pos:column="21">=<pos:position pos:line="14" pos:column="22"/></operator> <name pos:line="14" pos:column="23">AF_INET6<pos:position pos:line="14" pos:column="31"/></name></expr>;<pos:position pos:line="14" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">sa6<pos:position pos:line="15" pos:column="8"/></name><operator pos:line="15" pos:column="8">.<pos:position pos:line="15" pos:column="9"/></operator><name pos:line="15" pos:column="9">sin6_port<pos:position pos:line="15" pos:column="18"/></name></name> <operator pos:line="15" pos:column="19">=<pos:position pos:line="15" pos:column="20"/></operator> <call><name pos:line="15" pos:column="21">htons<pos:position pos:line="15" pos:column="26"/></name><argument_list pos:line="15" pos:column="26">(<argument><expr><literal type="number" pos:line="15" pos:column="27">123<pos:position pos:line="15" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">memcpy<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><operator pos:line="16" pos:column="12">&amp;<pos:position pos:line="16" pos:column="17"/></operator><name><name pos:line="16" pos:column="13">sa6<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">.<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="17">sin6_addr<pos:position pos:line="16" pos:column="26"/></name></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="28">&amp;<pos:position pos:line="16" pos:column="33"/></operator><name><name pos:line="16" pos:column="29">peer_info<pos:position pos:line="16" pos:column="38"/></name><operator pos:line="16" pos:column="38">-&gt;<pos:position pos:line="16" pos:column="43"/></operator><name pos:line="16" pos:column="40">srcadr6<pos:position pos:line="16" pos:column="47"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="49">sizeof<argument_list pos:line="16" pos:column="55">(<argument><expr pos:line="16" pos:column="56">struct <name pos:line="16" pos:column="63">in6_addr<pos:position pos:line="16" pos:column="71"/></name></expr></argument>)<pos:position pos:line="16" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="74"/></expr_stmt>
    <expr_stmt><expr><name pos:line="17" pos:column="5">sa_len<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <sizeof pos:line="17" pos:column="14">sizeof<argument_list pos:line="17" pos:column="20">(<argument><expr><name pos:line="17" pos:column="21">sa6<pos:position pos:line="17" pos:column="24"/></name></expr></argument>)<pos:position pos:line="17" pos:column="25"/></argument_list></sizeof></expr>;<pos:position pos:line="17" pos:column="26"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">memcpy<pos:position pos:line="19" pos:column="11"/></name><argument_list pos:line="19" pos:column="11">(<argument><expr><operator pos:line="19" pos:column="12">&amp;<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="13">sa<pos:position pos:line="19" pos:column="15"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="17">&amp;<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="18">sa6<pos:position pos:line="19" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="23">sizeof<argument_list pos:line="19" pos:column="29">(<argument><expr><name pos:line="19" pos:column="30">sa6<pos:position pos:line="19" pos:column="33"/></name></expr></argument>)<pos:position pos:line="19" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="36"/></expr_stmt>
  }<pos:position pos:line="20" pos:column="4"/></block></then> <else pos:line="20" pos:column="5">else <block pos:line="20" pos:column="10">{
    <decl_stmt><decl><type><name><name pos:line="21" pos:column="5">struct<pos:position pos:line="21" pos:column="11"/></name> <name pos:line="21" pos:column="12">sockaddr_in<pos:position pos:line="21" pos:column="23"/></name></name></type> <name pos:line="21" pos:column="24">sa4<pos:position pos:line="21" pos:column="27"/></name> <init pos:line="21" pos:column="28">= <expr><block pos:line="21" pos:column="30">{<expr><literal type="number" pos:line="21" pos:column="31">0<pos:position pos:line="21" pos:column="32"/></literal></expr>}<pos:position pos:line="21" pos:column="33"/></block></expr></init></decl>;<pos:position pos:line="21" pos:column="34"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="23" pos:column="5">assert<pos:position pos:line="23" pos:column="11"/></name><argument_list pos:line="23" pos:column="11">(<argument><expr><sizeof pos:line="23" pos:column="12">sizeof<argument_list pos:line="23" pos:column="18">(<argument><expr><name pos:line="23" pos:column="19">sa<pos:position pos:line="23" pos:column="21"/></name></expr></argument>)<pos:position pos:line="23" pos:column="22"/></argument_list></sizeof> <operator pos:line="23" pos:column="23">&gt;=<pos:position pos:line="23" pos:column="28"/></operator> <sizeof pos:line="23" pos:column="26">sizeof<argument_list pos:line="23" pos:column="32">(<argument><expr><name pos:line="23" pos:column="33">sa4<pos:position pos:line="23" pos:column="36"/></name></expr></argument>)<pos:position pos:line="23" pos:column="37"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="39"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="25" pos:column="5">sa4<pos:position pos:line="25" pos:column="8"/></name><operator pos:line="25" pos:column="8">.<pos:position pos:line="25" pos:column="9"/></operator><name pos:line="25" pos:column="9">sin_family<pos:position pos:line="25" pos:column="19"/></name></name> <operator pos:line="25" pos:column="20">=<pos:position pos:line="25" pos:column="21"/></operator> <name pos:line="25" pos:column="22">AF_INET<pos:position pos:line="25" pos:column="29"/></name></expr>;<pos:position pos:line="25" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">sa4<pos:position pos:line="26" pos:column="8"/></name><operator pos:line="26" pos:column="8">.<pos:position pos:line="26" pos:column="9"/></operator><name pos:line="26" pos:column="9">sin_port<pos:position pos:line="26" pos:column="17"/></name></name> <operator pos:line="26" pos:column="18">=<pos:position pos:line="26" pos:column="19"/></operator> <call><name pos:line="26" pos:column="20">htons<pos:position pos:line="26" pos:column="25"/></name><argument_list pos:line="26" pos:column="25">(<argument><expr><literal type="number" pos:line="26" pos:column="26">123<pos:position pos:line="26" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">memcpy<pos:position pos:line="27" pos:column="11"/></name><argument_list pos:line="27" pos:column="11">(<argument><expr><operator pos:line="27" pos:column="12">&amp;<pos:position pos:line="27" pos:column="17"/></operator><name><name pos:line="27" pos:column="13">sa4<pos:position pos:line="27" pos:column="16"/></name><operator pos:line="27" pos:column="16">.<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="17">sin_addr<pos:position pos:line="27" pos:column="25"/></name></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="27">&amp;<pos:position pos:line="27" pos:column="32"/></operator><name><name pos:line="27" pos:column="28">peer_info<pos:position pos:line="27" pos:column="37"/></name><operator pos:line="27" pos:column="37">-&gt;<pos:position pos:line="27" pos:column="42"/></operator><name pos:line="27" pos:column="39">srcadr<pos:position pos:line="27" pos:column="45"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="47">sizeof<argument_list pos:line="27" pos:column="53">(<argument><expr pos:line="27" pos:column="54">struct <name pos:line="27" pos:column="61">in_addr<pos:position pos:line="27" pos:column="68"/></name></expr></argument>)<pos:position pos:line="27" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="71"/></expr_stmt>
    <expr_stmt><expr><name pos:line="28" pos:column="5">sa_len<pos:position pos:line="28" pos:column="11"/></name> <operator pos:line="28" pos:column="12">=<pos:position pos:line="28" pos:column="13"/></operator> <sizeof pos:line="28" pos:column="14">sizeof<argument_list pos:line="28" pos:column="20">(<argument><expr><name pos:line="28" pos:column="21">sa4<pos:position pos:line="28" pos:column="24"/></name></expr></argument>)<pos:position pos:line="28" pos:column="25"/></argument_list></sizeof></expr>;<pos:position pos:line="28" pos:column="26"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="30" pos:column="5">memcpy<pos:position pos:line="30" pos:column="11"/></name><argument_list pos:line="30" pos:column="11">(<argument><expr><operator pos:line="30" pos:column="12">&amp;<pos:position pos:line="30" pos:column="17"/></operator><name pos:line="30" pos:column="13">sa<pos:position pos:line="30" pos:column="15"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="17">&amp;<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="18">sa4<pos:position pos:line="30" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="23">sizeof<argument_list pos:line="30" pos:column="29">(<argument><expr><name pos:line="30" pos:column="30">sa4<pos:position pos:line="30" pos:column="33"/></name></expr></argument>)<pos:position pos:line="30" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="30" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="36"/></expr_stmt>
  }<pos:position pos:line="31" pos:column="4"/></block></else></if>

  <if pos:line="33" pos:column="3">if <condition pos:line="33" pos:column="6">(<expr><operator pos:line="33" pos:column="7">!<pos:position pos:line="33" pos:column="8"/></operator><name pos:line="33" pos:column="8">do_reverse_lookup<pos:position pos:line="33" pos:column="25"/></name></expr>)<pos:position pos:line="33" pos:column="26"/></condition><then pos:line="33" pos:column="26">
    <block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="5">flags<pos:position pos:line="34" pos:column="10"/></name> <operator pos:line="34" pos:column="11">|=<pos:position pos:line="34" pos:column="13"/></operator> <name pos:line="34" pos:column="14">NI_NUMERICHOST<pos:position pos:line="34" pos:column="28"/></name></expr>;<pos:position pos:line="34" pos:column="29"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="36" pos:column="3">status<pos:position pos:line="36" pos:column="9"/></name> <operator pos:line="36" pos:column="10">=<pos:position pos:line="36" pos:column="11"/></operator> <call><name pos:line="36" pos:column="12">getnameinfo<pos:position pos:line="36" pos:column="23"/></name><argument_list pos:line="36" pos:column="23">(<argument><expr><operator pos:line="36" pos:column="24">(<pos:position pos:line="36" pos:column="25"/></operator>struct <name pos:line="36" pos:column="32">sockaddr<pos:position pos:line="36" pos:column="40"/></name> <specifier pos:line="36" pos:column="41">const<pos:position pos:line="36" pos:column="46"/></specifier> <operator pos:line="36" pos:column="47">*<pos:position pos:line="36" pos:column="48"/></operator><operator pos:line="36" pos:column="48">)<pos:position pos:line="36" pos:column="49"/></operator><operator pos:line="36" pos:column="49">&amp;<pos:position pos:line="36" pos:column="54"/></operator><name pos:line="36" pos:column="50">sa<pos:position pos:line="36" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="54">sa_len<pos:position pos:line="36" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="62">buffer<pos:position pos:line="36" pos:column="68"/></name></expr></argument>,
                       <argument><expr><name pos:line="37" pos:column="24">buffer_size<pos:position pos:line="37" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="37">NULL<pos:position pos:line="37" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="43">0<pos:position pos:line="37" pos:column="44"/></literal></expr></argument>, <comment type="block" pos:line="37" pos:column="46">/* No port name */</comment>
                       <argument><expr><name pos:line="38" pos:column="24">flags<pos:position pos:line="38" pos:column="29"/></name></expr></argument>)<pos:position pos:line="38" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="31"/></expr_stmt>
  <if pos:line="39" pos:column="3">if <condition pos:line="39" pos:column="6">(<expr><name pos:line="39" pos:column="7">status<pos:position pos:line="39" pos:column="13"/></name> <operator pos:line="39" pos:column="14">!=<pos:position pos:line="39" pos:column="16"/></operator> <literal type="number" pos:line="39" pos:column="17">0<pos:position pos:line="39" pos:column="18"/></literal></expr>)<pos:position pos:line="39" pos:column="19"/></condition><then pos:line="39" pos:column="19"> <block pos:line="39" pos:column="20">{
    <decl_stmt><decl><type><name pos:line="40" pos:column="5">char<pos:position pos:line="40" pos:column="9"/></name></type> <name><name pos:line="40" pos:column="10">errbuf<pos:position pos:line="40" pos:column="16"/></name><index pos:line="40" pos:column="16">[<expr><literal type="number" pos:line="40" pos:column="17">1024<pos:position pos:line="40" pos:column="21"/></literal></expr>]<pos:position pos:line="40" pos:column="22"/></index></name></decl>;<pos:position pos:line="40" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">ERROR<pos:position pos:line="41" pos:column="10"/></name><argument_list pos:line="41" pos:column="10">(<argument><expr><literal type="string" pos:line="41" pos:column="11">"ntpd plugin: getnameinfo failed: %s"<pos:position pos:line="41" pos:column="48"/></literal></expr></argument>,
          <argument><expr><ternary><condition><expr><operator pos:line="42" pos:column="11">(<pos:position pos:line="42" pos:column="12"/></operator><name pos:line="42" pos:column="12">status<pos:position pos:line="42" pos:column="18"/></name> <operator pos:line="42" pos:column="19">==<pos:position pos:line="42" pos:column="21"/></operator> <name pos:line="42" pos:column="22">EAI_SYSTEM<pos:position pos:line="42" pos:column="32"/></name><operator pos:line="42" pos:column="32">)<pos:position pos:line="42" pos:column="33"/></operator></expr> ?<pos:position pos:line="42" pos:column="35"/></condition><then pos:line="42" pos:column="35"> <expr><call><name pos:line="42" pos:column="36">sstrerror<pos:position pos:line="42" pos:column="45"/></name><argument_list pos:line="42" pos:column="45">(<argument><expr><name pos:line="42" pos:column="46">errno<pos:position pos:line="42" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="53">errbuf<pos:position pos:line="42" pos:column="59"/></name></expr></argument>, <argument><expr><sizeof pos:line="42" pos:column="61">sizeof<argument_list pos:line="42" pos:column="67">(<argument><expr><name pos:line="42" pos:column="68">errbuf<pos:position pos:line="42" pos:column="74"/></name></expr></argument>)<pos:position pos:line="42" pos:column="75"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="42" pos:column="76"/></argument_list></call></expr>
                                 <pos:position pos:line="43" pos:column="34"/></then><else pos:line="43" pos:column="34">: <expr><call><name pos:line="43" pos:column="36">gai_strerror<pos:position pos:line="43" pos:column="48"/></name><argument_list pos:line="43" pos:column="48">(<argument><expr><name pos:line="43" pos:column="49">status<pos:position pos:line="43" pos:column="55"/></name></expr></argument>)<pos:position pos:line="43" pos:column="56"/></argument_list></call></expr></else></ternary></expr></argument>)<pos:position pos:line="43" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="58"/></expr_stmt>
    <return pos:line="44" pos:column="5">return <expr><operator pos:line="44" pos:column="12">(<pos:position pos:line="44" pos:column="13"/></operator><operator pos:line="44" pos:column="13">-<pos:position pos:line="44" pos:column="14"/></operator><literal type="number" pos:line="44" pos:column="14">1<pos:position pos:line="44" pos:column="15"/></literal><operator pos:line="44" pos:column="15">)<pos:position pos:line="44" pos:column="16"/></operator></expr>;<pos:position pos:line="44" pos:column="17"/></return>
  }<pos:position pos:line="45" pos:column="4"/></block></then></if>

  <return pos:line="47" pos:column="3">return <expr><operator pos:line="47" pos:column="10">(<pos:position pos:line="47" pos:column="11"/></operator><literal type="number" pos:line="47" pos:column="11">0<pos:position pos:line="47" pos:column="12"/></literal><operator pos:line="47" pos:column="12">)<pos:position pos:line="47" pos:column="13"/></operator></expr>;<pos:position pos:line="47" pos:column="14"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

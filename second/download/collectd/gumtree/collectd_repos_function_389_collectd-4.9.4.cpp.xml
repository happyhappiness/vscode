<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_389_collectd-4.9.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">uc_send_notification<pos:position pos:line="1" pos:column="32"/></name> <parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">name<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">cache_entry_t<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">ce<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><name pos:line="3" pos:column="23">NULL<pos:position pos:line="3" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">name_copy<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">host<pos:position pos:line="7" pos:column="13"/></name></decl>;<pos:position pos:line="7" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">plugin<pos:position pos:line="8" pos:column="15"/></name></decl>;<pos:position pos:line="8" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">plugin_instance<pos:position pos:line="9" pos:column="24"/></name></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier></type><name pos:line="10" pos:column="9">type<pos:position pos:line="10" pos:column="13"/></name></decl>;<pos:position pos:line="10" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier></type><name pos:line="11" pos:column="9">type_instance<pos:position pos:line="11" pos:column="22"/></name></decl>;<pos:position pos:line="11" pos:column="23"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="13" pos:column="3">notification_t<pos:position pos:line="13" pos:column="17"/></name></type> <name pos:line="13" pos:column="18">n<pos:position pos:line="13" pos:column="19"/></name></decl>;<pos:position pos:line="13" pos:column="20"/></decl_stmt>

  <expr_stmt><expr><name pos:line="15" pos:column="3">name_copy<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <call><name pos:line="15" pos:column="15">strdup<pos:position pos:line="15" pos:column="21"/></name> <argument_list pos:line="15" pos:column="22">(<argument><expr><name pos:line="15" pos:column="23">name<pos:position pos:line="15" pos:column="27"/></name></expr></argument>)<pos:position pos:line="15" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="29"/></expr_stmt>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">name_copy<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">==<pos:position pos:line="16" pos:column="19"/></operator> <name pos:line="16" pos:column="20">NULL<pos:position pos:line="16" pos:column="24"/></name></expr>)<pos:position pos:line="16" pos:column="25"/></condition><then pos:line="16" pos:column="25">
  <block pos:line="17" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">ERROR<pos:position pos:line="18" pos:column="10"/></name> <argument_list pos:line="18" pos:column="11">(<argument><expr><literal type="string" pos:line="18" pos:column="12">"uc_send_notification: strdup failed."<pos:position pos:line="18" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="52"/></expr_stmt>
    <return pos:line="19" pos:column="5">return <expr><operator pos:line="19" pos:column="12">(<pos:position pos:line="19" pos:column="13"/></operator><operator pos:line="19" pos:column="13">-<pos:position pos:line="19" pos:column="14"/></operator><literal type="number" pos:line="19" pos:column="14">1<pos:position pos:line="19" pos:column="15"/></literal><operator pos:line="19" pos:column="15">)<pos:position pos:line="19" pos:column="16"/></operator></expr>;<pos:position pos:line="19" pos:column="17"/></return>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="22" pos:column="3">status<pos:position pos:line="22" pos:column="9"/></name> <operator pos:line="22" pos:column="10">=<pos:position pos:line="22" pos:column="11"/></operator> <call><name pos:line="22" pos:column="12">parse_identifier<pos:position pos:line="22" pos:column="28"/></name> <argument_list pos:line="22" pos:column="29">(<argument><expr><name pos:line="22" pos:column="30">name_copy<pos:position pos:line="22" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="41">&amp;<pos:position pos:line="22" pos:column="46"/></operator><name pos:line="22" pos:column="42">host<pos:position pos:line="22" pos:column="46"/></name></expr></argument>,
      <argument><expr><operator pos:line="23" pos:column="7">&amp;<pos:position pos:line="23" pos:column="12"/></operator><name pos:line="23" pos:column="8">plugin<pos:position pos:line="23" pos:column="14"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="16">&amp;<pos:position pos:line="23" pos:column="21"/></operator><name pos:line="23" pos:column="17">plugin_instance<pos:position pos:line="23" pos:column="32"/></name></expr></argument>,
      <argument><expr><operator pos:line="24" pos:column="7">&amp;<pos:position pos:line="24" pos:column="12"/></operator><name pos:line="24" pos:column="8">type<pos:position pos:line="24" pos:column="12"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="14">&amp;<pos:position pos:line="24" pos:column="19"/></operator><name pos:line="24" pos:column="15">type_instance<pos:position pos:line="24" pos:column="28"/></name></expr></argument>)<pos:position pos:line="24" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="30"/></expr_stmt>
  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><name pos:line="25" pos:column="7">status<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">!=<pos:position pos:line="25" pos:column="16"/></operator> <literal type="number" pos:line="25" pos:column="17">0<pos:position pos:line="25" pos:column="18"/></literal></expr>)<pos:position pos:line="25" pos:column="19"/></condition><then pos:line="25" pos:column="19">
  <block pos:line="26" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">ERROR<pos:position pos:line="27" pos:column="10"/></name> <argument_list pos:line="27" pos:column="11">(<argument><expr><literal type="string" pos:line="27" pos:column="12">"uc_send_notification: Cannot parse name `%s'"<pos:position pos:line="27" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="60">name<pos:position pos:line="27" pos:column="64"/></name></expr></argument>)<pos:position pos:line="27" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="66"/></expr_stmt>
    <return pos:line="28" pos:column="5">return <expr><operator pos:line="28" pos:column="12">(<pos:position pos:line="28" pos:column="13"/></operator><operator pos:line="28" pos:column="13">-<pos:position pos:line="28" pos:column="14"/></operator><literal type="number" pos:line="28" pos:column="14">1<pos:position pos:line="28" pos:column="15"/></literal><operator pos:line="28" pos:column="15">)<pos:position pos:line="28" pos:column="16"/></operator></expr>;<pos:position pos:line="28" pos:column="17"/></return>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="31" pos:column="3">/* Copy the associative members */</comment>
  <expr_stmt><expr><call><name pos:line="32" pos:column="3">notification_init<pos:position pos:line="32" pos:column="20"/></name> <argument_list pos:line="32" pos:column="21">(<argument><expr><operator pos:line="32" pos:column="22">&amp;<pos:position pos:line="32" pos:column="27"/></operator><name pos:line="32" pos:column="23">n<pos:position pos:line="32" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="26">NOTIF_FAILURE<pos:position pos:line="32" pos:column="39"/></name></expr></argument>, <comment type="block" pos:line="32" pos:column="41">/* host = */</comment> <argument><expr><name pos:line="32" pos:column="54">NULL<pos:position pos:line="32" pos:column="58"/></name></expr></argument>,
      <argument><expr><name pos:line="33" pos:column="7">host<pos:position pos:line="33" pos:column="11"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="13">plugin<pos:position pos:line="33" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="21">plugin_instance<pos:position pos:line="33" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="38">type<pos:position pos:line="33" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="44">type_instance<pos:position pos:line="33" pos:column="57"/></name></expr></argument>)<pos:position pos:line="33" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="59"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="35" pos:column="3">sfree<pos:position pos:line="35" pos:column="8"/></name> <argument_list pos:line="35" pos:column="9">(<argument><expr><name pos:line="35" pos:column="10">name_copy<pos:position pos:line="35" pos:column="19"/></name></expr></argument>)<pos:position pos:line="35" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name pos:line="36" pos:column="3">name_copy<pos:position pos:line="36" pos:column="12"/></name> <operator pos:line="36" pos:column="13">=<pos:position pos:line="36" pos:column="14"/></operator> <name pos:line="36" pos:column="15">host<pos:position pos:line="36" pos:column="19"/></name> <operator pos:line="36" pos:column="20">=<pos:position pos:line="36" pos:column="21"/></operator> <name pos:line="36" pos:column="22">plugin<pos:position pos:line="36" pos:column="28"/></name> <operator pos:line="36" pos:column="29">=<pos:position pos:line="36" pos:column="30"/></operator> <name pos:line="36" pos:column="31">plugin_instance<pos:position pos:line="36" pos:column="46"/></name> <operator pos:line="36" pos:column="47">=<pos:position pos:line="36" pos:column="48"/></operator> <name pos:line="36" pos:column="49">type<pos:position pos:line="36" pos:column="53"/></name> <operator pos:line="36" pos:column="54">=<pos:position pos:line="36" pos:column="55"/></operator> <name pos:line="36" pos:column="56">type_instance<pos:position pos:line="36" pos:column="69"/></name> <operator pos:line="36" pos:column="70">=<pos:position pos:line="36" pos:column="71"/></operator> <name pos:line="36" pos:column="72">NULL<pos:position pos:line="36" pos:column="76"/></name></expr>;<pos:position pos:line="36" pos:column="77"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="38" pos:column="3">pthread_mutex_lock<pos:position pos:line="38" pos:column="21"/></name> <argument_list pos:line="38" pos:column="22">(<argument><expr><operator pos:line="38" pos:column="23">&amp;<pos:position pos:line="38" pos:column="28"/></operator><name pos:line="38" pos:column="24">cache_lock<pos:position pos:line="38" pos:column="34"/></name></expr></argument>)<pos:position pos:line="38" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="36"/></expr_stmt>

  <comment type="block" pos:line="40" pos:column="3">/*
   * Set the time _after_ getting the lock because we don't know how long
   * acquiring the lock takes and we will use this time later to decide
   * whether or not the state is OKAY.
   */</comment>
  <expr_stmt><expr><name><name pos:line="45" pos:column="3">n<pos:position pos:line="45" pos:column="4"/></name><operator pos:line="45" pos:column="4">.<pos:position pos:line="45" pos:column="5"/></operator><name pos:line="45" pos:column="5">time<pos:position pos:line="45" pos:column="9"/></name></name> <operator pos:line="45" pos:column="10">=<pos:position pos:line="45" pos:column="11"/></operator> <call><name pos:line="45" pos:column="12">time<pos:position pos:line="45" pos:column="16"/></name> <argument_list pos:line="45" pos:column="17">(<argument><expr><name pos:line="45" pos:column="18">NULL<pos:position pos:line="45" pos:column="22"/></name></expr></argument>)<pos:position pos:line="45" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="24"/></expr_stmt>

  <expr_stmt><expr><name pos:line="47" pos:column="3">status<pos:position pos:line="47" pos:column="9"/></name> <operator pos:line="47" pos:column="10">=<pos:position pos:line="47" pos:column="11"/></operator> <call><name pos:line="47" pos:column="12">c_avl_get<pos:position pos:line="47" pos:column="21"/></name> <argument_list pos:line="47" pos:column="22">(<argument><expr><name pos:line="47" pos:column="23">cache_tree<pos:position pos:line="47" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="35">name<pos:position pos:line="47" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="41">(<pos:position pos:line="47" pos:column="42"/></operator><name pos:line="47" pos:column="42">void<pos:position pos:line="47" pos:column="46"/></name> <operator pos:line="47" pos:column="47">*<pos:position pos:line="47" pos:column="48"/></operator><operator pos:line="47" pos:column="48">)<pos:position pos:line="47" pos:column="49"/></operator> <operator pos:line="47" pos:column="50">&amp;<pos:position pos:line="47" pos:column="55"/></operator><name pos:line="47" pos:column="51">ce<pos:position pos:line="47" pos:column="53"/></name></expr></argument>)<pos:position pos:line="47" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="55"/></expr_stmt>
  <if pos:line="48" pos:column="3">if <condition pos:line="48" pos:column="6">(<expr><name pos:line="48" pos:column="7">status<pos:position pos:line="48" pos:column="13"/></name> <operator pos:line="48" pos:column="14">!=<pos:position pos:line="48" pos:column="16"/></operator> <literal type="number" pos:line="48" pos:column="17">0<pos:position pos:line="48" pos:column="18"/></literal></expr>)<pos:position pos:line="48" pos:column="19"/></condition><then pos:line="48" pos:column="19">
  <block pos:line="49" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">pthread_mutex_unlock<pos:position pos:line="50" pos:column="25"/></name> <argument_list pos:line="50" pos:column="26">(<argument><expr><operator pos:line="50" pos:column="27">&amp;<pos:position pos:line="50" pos:column="32"/></operator><name pos:line="50" pos:column="28">cache_lock<pos:position pos:line="50" pos:column="38"/></name></expr></argument>)<pos:position pos:line="50" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">sfree<pos:position pos:line="51" pos:column="10"/></name> <argument_list pos:line="51" pos:column="11">(<argument><expr><name pos:line="51" pos:column="12">name_copy<pos:position pos:line="51" pos:column="21"/></name></expr></argument>)<pos:position pos:line="51" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="23"/></expr_stmt>
    <return pos:line="52" pos:column="5">return <expr><operator pos:line="52" pos:column="12">(<pos:position pos:line="52" pos:column="13"/></operator><operator pos:line="52" pos:column="13">-<pos:position pos:line="52" pos:column="14"/></operator><literal type="number" pos:line="52" pos:column="14">1<pos:position pos:line="52" pos:column="15"/></literal><operator pos:line="52" pos:column="15">)<pos:position pos:line="52" pos:column="16"/></operator></expr>;<pos:position pos:line="52" pos:column="17"/></return>
  }<pos:position pos:line="53" pos:column="4"/></block></then></if>
    
  <comment type="block" pos:line="55" pos:column="3">/* Check if the entry has been updated in the meantime */</comment>
  <if pos:line="56" pos:column="3">if <condition pos:line="56" pos:column="6">(<expr><operator pos:line="56" pos:column="7">(<pos:position pos:line="56" pos:column="8"/></operator><name><name pos:line="56" pos:column="8">n<pos:position pos:line="56" pos:column="9"/></name><operator pos:line="56" pos:column="9">.<pos:position pos:line="56" pos:column="10"/></operator><name pos:line="56" pos:column="10">time<pos:position pos:line="56" pos:column="14"/></name></name> <operator pos:line="56" pos:column="15">-<pos:position pos:line="56" pos:column="16"/></operator> <name><name pos:line="56" pos:column="17">ce<pos:position pos:line="56" pos:column="19"/></name><operator pos:line="56" pos:column="19">-&gt;<pos:position pos:line="56" pos:column="24"/></operator><name pos:line="56" pos:column="21">last_update<pos:position pos:line="56" pos:column="32"/></name></name><operator pos:line="56" pos:column="32">)<pos:position pos:line="56" pos:column="33"/></operator> <operator pos:line="56" pos:column="34">&lt;<pos:position pos:line="56" pos:column="38"/></operator> <operator pos:line="56" pos:column="36">(<pos:position pos:line="56" pos:column="37"/></operator><literal type="number" pos:line="56" pos:column="37">2<pos:position pos:line="56" pos:column="38"/></literal> <operator pos:line="56" pos:column="39">*<pos:position pos:line="56" pos:column="40"/></operator> <name><name pos:line="56" pos:column="41">ce<pos:position pos:line="56" pos:column="43"/></name><operator pos:line="56" pos:column="43">-&gt;<pos:position pos:line="56" pos:column="48"/></operator><name pos:line="56" pos:column="45">interval<pos:position pos:line="56" pos:column="53"/></name></name><operator pos:line="56" pos:column="53">)<pos:position pos:line="56" pos:column="54"/></operator></expr>)<pos:position pos:line="56" pos:column="55"/></condition><then pos:line="56" pos:column="55">
  <block pos:line="57" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="58" pos:column="5">ce<pos:position pos:line="58" pos:column="7"/></name><operator pos:line="58" pos:column="7">-&gt;<pos:position pos:line="58" pos:column="12"/></operator><name pos:line="58" pos:column="9">state<pos:position pos:line="58" pos:column="14"/></name></name> <operator pos:line="58" pos:column="15">=<pos:position pos:line="58" pos:column="16"/></operator> <name pos:line="58" pos:column="17">STATE_OKAY<pos:position pos:line="58" pos:column="27"/></name></expr>;<pos:position pos:line="58" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="59" pos:column="5">pthread_mutex_unlock<pos:position pos:line="59" pos:column="25"/></name> <argument_list pos:line="59" pos:column="26">(<argument><expr><operator pos:line="59" pos:column="27">&amp;<pos:position pos:line="59" pos:column="32"/></operator><name pos:line="59" pos:column="28">cache_lock<pos:position pos:line="59" pos:column="38"/></name></expr></argument>)<pos:position pos:line="59" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="60" pos:column="5">sfree<pos:position pos:line="60" pos:column="10"/></name> <argument_list pos:line="60" pos:column="11">(<argument><expr><name pos:line="60" pos:column="12">name_copy<pos:position pos:line="60" pos:column="21"/></name></expr></argument>)<pos:position pos:line="60" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="23"/></expr_stmt>
    <return pos:line="61" pos:column="5">return <expr><operator pos:line="61" pos:column="12">(<pos:position pos:line="61" pos:column="13"/></operator><operator pos:line="61" pos:column="13">-<pos:position pos:line="61" pos:column="14"/></operator><literal type="number" pos:line="61" pos:column="14">1<pos:position pos:line="61" pos:column="15"/></literal><operator pos:line="61" pos:column="15">)<pos:position pos:line="61" pos:column="16"/></operator></expr>;<pos:position pos:line="61" pos:column="17"/></return>
  }<pos:position pos:line="62" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="64" pos:column="3">ssnprintf<pos:position pos:line="64" pos:column="12"/></name> <argument_list pos:line="64" pos:column="13">(<argument><expr><name><name pos:line="64" pos:column="14">n<pos:position pos:line="64" pos:column="15"/></name><operator pos:line="64" pos:column="15">.<pos:position pos:line="64" pos:column="16"/></operator><name pos:line="64" pos:column="16">message<pos:position pos:line="64" pos:column="23"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="64" pos:column="25">sizeof <argument_list pos:line="64" pos:column="32">(<argument><expr><name><name pos:line="64" pos:column="33">n<pos:position pos:line="64" pos:column="34"/></name><operator pos:line="64" pos:column="34">.<pos:position pos:line="64" pos:column="35"/></operator><name pos:line="64" pos:column="35">message<pos:position pos:line="64" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="43"/></argument_list></sizeof></expr></argument>,
      <argument><expr><literal type="string" pos:line="65" pos:column="7">"%s has not been updated for %i seconds."<pos:position pos:line="65" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="50">name<pos:position pos:line="65" pos:column="54"/></name></expr></argument>,
      <argument><expr><call pos:line="66" pos:column="7">(<name pos:line="66" pos:column="8">int<pos:position pos:line="66" pos:column="11"/></name>) <argument_list pos:line="66" pos:column="13">(<argument><expr><name><name pos:line="66" pos:column="14">n<pos:position pos:line="66" pos:column="15"/></name><operator pos:line="66" pos:column="15">.<pos:position pos:line="66" pos:column="16"/></operator><name pos:line="66" pos:column="16">time<pos:position pos:line="66" pos:column="20"/></name></name> <operator pos:line="66" pos:column="21">-<pos:position pos:line="66" pos:column="22"/></operator> <name><name pos:line="66" pos:column="23">ce<pos:position pos:line="66" pos:column="25"/></name><operator pos:line="66" pos:column="25">-&gt;<pos:position pos:line="66" pos:column="30"/></operator><name pos:line="66" pos:column="27">last_update<pos:position pos:line="66" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="39"/></argument_list></call></expr></argument>)<pos:position pos:line="66" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="41"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="68" pos:column="3">pthread_mutex_unlock<pos:position pos:line="68" pos:column="23"/></name> <argument_list pos:line="68" pos:column="24">(<argument><expr><operator pos:line="68" pos:column="25">&amp;<pos:position pos:line="68" pos:column="30"/></operator><name pos:line="68" pos:column="26">cache_lock<pos:position pos:line="68" pos:column="36"/></name></expr></argument>)<pos:position pos:line="68" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="38"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="70" pos:column="3">plugin_dispatch_notification<pos:position pos:line="70" pos:column="31"/></name> <argument_list pos:line="70" pos:column="32">(<argument><expr><operator pos:line="70" pos:column="33">&amp;<pos:position pos:line="70" pos:column="38"/></operator><name pos:line="70" pos:column="34">n<pos:position pos:line="70" pos:column="35"/></name></expr></argument>)<pos:position pos:line="70" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="37"/></expr_stmt>

  <return pos:line="72" pos:column="3">return <expr><operator pos:line="72" pos:column="10">(<pos:position pos:line="72" pos:column="11"/></operator><literal type="number" pos:line="72" pos:column="11">0<pos:position pos:line="72" pos:column="12"/></literal><operator pos:line="72" pos:column="12">)<pos:position pos:line="72" pos:column="13"/></operator></expr>;<pos:position pos:line="72" pos:column="14"/></return>
}<pos:position pos:line="73" pos:column="2"/></block></function></unit>

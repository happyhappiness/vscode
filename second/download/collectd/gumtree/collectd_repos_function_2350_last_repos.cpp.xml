<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2350_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">wt_config<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">oconfig_item_t<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">ci<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list> <block pos:line="1" pos:column="42">{
  <if pos:line="2" pos:column="3">if <condition pos:line="2" pos:column="6">(<expr><operator pos:line="2" pos:column="7">(<pos:position pos:line="2" pos:column="8"/></operator><name pos:line="2" pos:column="8">resolve_interval<pos:position pos:line="2" pos:column="24"/></name> <operator pos:line="2" pos:column="25">==<pos:position pos:line="2" pos:column="27"/></operator> <literal type="number" pos:line="2" pos:column="28">0<pos:position pos:line="2" pos:column="29"/></literal><operator pos:line="2" pos:column="29">)<pos:position pos:line="2" pos:column="30"/></operator> <operator pos:line="2" pos:column="31">&amp;&amp;<pos:position pos:line="2" pos:column="41"/></operator> <operator pos:line="2" pos:column="34">(<pos:position pos:line="2" pos:column="35"/></operator><name pos:line="2" pos:column="35">resolve_jitter<pos:position pos:line="2" pos:column="49"/></name> <operator pos:line="2" pos:column="50">==<pos:position pos:line="2" pos:column="52"/></operator> <literal type="number" pos:line="2" pos:column="53">0<pos:position pos:line="2" pos:column="54"/></literal><operator pos:line="2" pos:column="54">)<pos:position pos:line="2" pos:column="55"/></operator></expr>)<pos:position pos:line="2" pos:column="56"/></condition><then pos:line="2" pos:column="56">
    <block type="pseudo"><expr_stmt><expr><name pos:line="3" pos:column="5">resolve_interval<pos:position pos:line="3" pos:column="21"/></name> <operator pos:line="3" pos:column="22">=<pos:position pos:line="3" pos:column="23"/></operator> <name pos:line="3" pos:column="24">resolve_jitter<pos:position pos:line="3" pos:column="38"/></name> <operator pos:line="3" pos:column="39">=<pos:position pos:line="3" pos:column="40"/></operator> <call><name pos:line="3" pos:column="41">plugin_get_interval<pos:position pos:line="3" pos:column="60"/></name><argument_list pos:line="3" pos:column="60">()<pos:position pos:line="3" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="63"/></expr_stmt></block></then></if>

  <for pos:line="5" pos:column="3">for <control pos:line="5" pos:column="7">(<init><decl><type><name pos:line="5" pos:column="8">int<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">i<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><literal type="number" pos:line="5" pos:column="16">0<pos:position pos:line="5" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="18"/></init> <condition><expr><name pos:line="5" pos:column="19">i<pos:position pos:line="5" pos:column="20"/></name> <operator pos:line="5" pos:column="21">&lt;<pos:position pos:line="5" pos:column="25"/></operator> <name><name pos:line="5" pos:column="23">ci<pos:position pos:line="5" pos:column="25"/></name><operator pos:line="5" pos:column="25">-&gt;<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="27">children_num<pos:position pos:line="5" pos:column="39"/></name></name></expr>;<pos:position pos:line="5" pos:column="40"/></condition> <incr><expr><name pos:line="5" pos:column="41">i<pos:position pos:line="5" pos:column="42"/></name><operator pos:line="5" pos:column="42">++<pos:position pos:line="5" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="5" pos:column="45"/></control> <block pos:line="5" pos:column="46">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">oconfig_item_t<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">child<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><name><name pos:line="6" pos:column="29">ci<pos:position pos:line="6" pos:column="31"/></name><operator pos:line="6" pos:column="31">-&gt;<pos:position pos:line="6" pos:column="36"/></operator><name pos:line="6" pos:column="33">children<pos:position pos:line="6" pos:column="41"/></name></name> <operator pos:line="6" pos:column="42">+<pos:position pos:line="6" pos:column="43"/></operator> <name pos:line="6" pos:column="44">i<pos:position pos:line="6" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="46"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><call><name pos:line="8" pos:column="9">strcasecmp<pos:position pos:line="8" pos:column="19"/></name><argument_list pos:line="8" pos:column="19">(<argument><expr><literal type="string" pos:line="8" pos:column="20">"Node"<pos:position pos:line="8" pos:column="26"/></literal></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="28">child<pos:position pos:line="8" pos:column="33"/></name><operator pos:line="8" pos:column="33">-&gt;<pos:position pos:line="8" pos:column="38"/></operator><name pos:line="8" pos:column="35">key<pos:position pos:line="8" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="39"/></argument_list></call> <operator pos:line="8" pos:column="40">==<pos:position pos:line="8" pos:column="42"/></operator> <literal type="number" pos:line="8" pos:column="43">0<pos:position pos:line="8" pos:column="44"/></literal></expr>)<pos:position pos:line="8" pos:column="45"/></condition><then pos:line="8" pos:column="45">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="7">wt_config_tsd<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><name pos:line="9" pos:column="21">child<pos:position pos:line="9" pos:column="26"/></name></expr></argument>)<pos:position pos:line="9" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="28"/></expr_stmt></block></then>
    <elseif pos:line="10" pos:column="5">else <if pos:line="10" pos:column="10">if <condition pos:line="10" pos:column="13">(<expr><call><name pos:line="10" pos:column="14">strcasecmp<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">(<argument><expr><literal type="string" pos:line="10" pos:column="25">"ResolveInterval"<pos:position pos:line="10" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="44">child<pos:position pos:line="10" pos:column="49"/></name><operator pos:line="10" pos:column="49">-&gt;<pos:position pos:line="10" pos:column="54"/></operator><name pos:line="10" pos:column="51">key<pos:position pos:line="10" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="55"/></argument_list></call> <operator pos:line="10" pos:column="56">==<pos:position pos:line="10" pos:column="58"/></operator> <literal type="number" pos:line="10" pos:column="59">0<pos:position pos:line="10" pos:column="60"/></literal></expr>)<pos:position pos:line="10" pos:column="61"/></condition><then pos:line="10" pos:column="61">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="7">cf_util_get_cdtime<pos:position pos:line="11" pos:column="25"/></name><argument_list pos:line="11" pos:column="25">(<argument><expr><name pos:line="11" pos:column="26">child<pos:position pos:line="11" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="33">&amp;<pos:position pos:line="11" pos:column="38"/></operator><name pos:line="11" pos:column="34">resolve_interval<pos:position pos:line="11" pos:column="50"/></name></expr></argument>)<pos:position pos:line="11" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="52"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="12" pos:column="5">else <if pos:line="12" pos:column="10">if <condition pos:line="12" pos:column="13">(<expr><call><name pos:line="12" pos:column="14">strcasecmp<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><literal type="string" pos:line="12" pos:column="25">"ResolveJitter"<pos:position pos:line="12" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="42">child<pos:position pos:line="12" pos:column="47"/></name><operator pos:line="12" pos:column="47">-&gt;<pos:position pos:line="12" pos:column="52"/></operator><name pos:line="12" pos:column="49">key<pos:position pos:line="12" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="53"/></argument_list></call> <operator pos:line="12" pos:column="54">==<pos:position pos:line="12" pos:column="56"/></operator> <literal type="number" pos:line="12" pos:column="57">0<pos:position pos:line="12" pos:column="58"/></literal></expr>)<pos:position pos:line="12" pos:column="59"/></condition><then pos:line="12" pos:column="59">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="7">cf_util_get_cdtime<pos:position pos:line="13" pos:column="25"/></name><argument_list pos:line="13" pos:column="25">(<argument><expr><name pos:line="13" pos:column="26">child<pos:position pos:line="13" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="33">&amp;<pos:position pos:line="13" pos:column="38"/></operator><name pos:line="13" pos:column="34">resolve_jitter<pos:position pos:line="13" pos:column="48"/></name></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="50"/></expr_stmt></block></then></if></elseif>
    <else pos:line="14" pos:column="5">else <block pos:line="14" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="15" pos:column="7">ERROR<pos:position pos:line="15" pos:column="12"/></name><argument_list pos:line="15" pos:column="12">(<argument><expr><literal type="string" pos:line="15" pos:column="13">"write_tsdb plugin: Invalid configuration "<pos:position pos:line="15" pos:column="56"/></literal>
            <literal type="string" pos:line="16" pos:column="13">"option: %s."<pos:position pos:line="16" pos:column="26"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="17" pos:column="13">child<pos:position pos:line="17" pos:column="18"/></name><operator pos:line="17" pos:column="18">-&gt;<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="20">key<pos:position pos:line="17" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></else></if>
  }<pos:position pos:line="19" pos:column="4"/></block></for>

  <return pos:line="21" pos:column="3">return <expr><literal type="number" pos:line="21" pos:column="10">0<pos:position pos:line="21" pos:column="11"/></literal></expr>;<pos:position pos:line="21" pos:column="12"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

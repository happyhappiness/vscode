<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_975_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">conn_reset_port_entry<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">void<pos:position pos:line="1" pos:column="39"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list> <block pos:line="1" pos:column="41">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">port_entry_t<pos:position pos:line="2" pos:column="15"/></name> <modifier pos:line="2" pos:column="16">*<pos:position pos:line="2" pos:column="17"/></modifier></type><name pos:line="2" pos:column="17">prev<pos:position pos:line="2" pos:column="21"/></name> <init pos:line="2" pos:column="22">= <expr><name pos:line="2" pos:column="24">NULL<pos:position pos:line="2" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="2" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">port_entry_t<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">pe<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><name pos:line="3" pos:column="22">port_list_head<pos:position pos:line="3" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="37"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="5" pos:column="3">memset<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">(<argument><expr><operator pos:line="5" pos:column="10">&amp;<pos:position pos:line="5" pos:column="15"/></operator><name pos:line="5" pos:column="11">count_total<pos:position pos:line="5" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="5" pos:column="24">'\0'<pos:position pos:line="5" pos:column="28"/></literal></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="30">sizeof<argument_list pos:line="5" pos:column="36">(<argument><expr><name pos:line="5" pos:column="37">count_total<pos:position pos:line="5" pos:column="48"/></name></expr></argument>)<pos:position pos:line="5" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="51"/></expr_stmt>

  <while pos:line="7" pos:column="3">while <condition pos:line="7" pos:column="9">(<expr><name pos:line="7" pos:column="10">pe<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">!=<pos:position pos:line="7" pos:column="15"/></operator> <name pos:line="7" pos:column="16">NULL<pos:position pos:line="7" pos:column="20"/></name></expr>)<pos:position pos:line="7" pos:column="21"/></condition> <block pos:line="7" pos:column="22">{
    <comment type="block" pos:line="8" pos:column="5">/* If this entry was created while reading the files (ant not when handling
     * the configuration) remove it now. */</comment>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">(<pos:position pos:line="10" pos:column="10"/></operator><name><name pos:line="10" pos:column="10">pe<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">-&gt;<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="14">flags<pos:position pos:line="10" pos:column="19"/></name></name> <operator pos:line="10" pos:column="20">&amp;<pos:position pos:line="10" pos:column="25"/></operator>
         <operator pos:line="11" pos:column="10">(<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">PORT_COLLECT_LOCAL<pos:position pos:line="11" pos:column="29"/></name> <operator pos:line="11" pos:column="30">|<pos:position pos:line="11" pos:column="31"/></operator> <name pos:line="11" pos:column="32">PORT_COLLECT_REMOTE<pos:position pos:line="11" pos:column="51"/></name> <operator pos:line="11" pos:column="52">|<pos:position pos:line="11" pos:column="53"/></operator> <name pos:line="11" pos:column="54">PORT_IS_LISTENING<pos:position pos:line="11" pos:column="71"/></name><operator pos:line="11" pos:column="71">)<pos:position pos:line="11" pos:column="72"/></operator><operator pos:line="11" pos:column="72">)<pos:position pos:line="11" pos:column="73"/></operator> <operator pos:line="11" pos:column="74">==<pos:position pos:line="11" pos:column="76"/></operator> <literal type="number" pos:line="11" pos:column="77">0<pos:position pos:line="11" pos:column="78"/></literal></expr>)<pos:position pos:line="11" pos:column="79"/></condition><then pos:line="11" pos:column="79"> <block pos:line="11" pos:column="80">{
      <decl_stmt><decl><type><name pos:line="12" pos:column="7">port_entry_t<pos:position pos:line="12" pos:column="19"/></name> <modifier pos:line="12" pos:column="20">*<pos:position pos:line="12" pos:column="21"/></modifier></type><name pos:line="12" pos:column="21">next<pos:position pos:line="12" pos:column="25"/></name> <init pos:line="12" pos:column="26">= <expr><name><name pos:line="12" pos:column="28">pe<pos:position pos:line="12" pos:column="30"/></name><operator pos:line="12" pos:column="30">-&gt;<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="32">next<pos:position pos:line="12" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="12" pos:column="37"/></decl_stmt>

      <expr_stmt><expr><call><name pos:line="14" pos:column="7">DEBUG<pos:position pos:line="14" pos:column="12"/></name><argument_list pos:line="14" pos:column="12">(<argument><expr><literal type="string" pos:line="14" pos:column="13">"tcpconns plugin: Removing temporary entry "<pos:position pos:line="14" pos:column="57"/></literal>
            <literal type="string" pos:line="15" pos:column="13">"for listening port %"<pos:position pos:line="15" pos:column="35"/></literal> <name pos:line="15" pos:column="36">PRIu16<pos:position pos:line="15" pos:column="42"/></name></expr></argument>,
            <argument><expr><name><name pos:line="16" pos:column="13">pe<pos:position pos:line="16" pos:column="15"/></name><operator pos:line="16" pos:column="15">-&gt;<pos:position pos:line="16" pos:column="20"/></operator><name pos:line="16" pos:column="17">port<pos:position pos:line="16" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="23"/></expr_stmt>

      <if pos:line="18" pos:column="7">if <condition pos:line="18" pos:column="10">(<expr><name pos:line="18" pos:column="11">prev<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">==<pos:position pos:line="18" pos:column="18"/></operator> <name pos:line="18" pos:column="19">NULL<pos:position pos:line="18" pos:column="23"/></name></expr>)<pos:position pos:line="18" pos:column="24"/></condition><then pos:line="18" pos:column="24">
        <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="9">port_list_head<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">=<pos:position pos:line="19" pos:column="25"/></operator> <name pos:line="19" pos:column="26">next<pos:position pos:line="19" pos:column="30"/></name></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt></block></then>
      <else pos:line="20" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="21" pos:column="9">prev<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">-&gt;<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="15">next<pos:position pos:line="21" pos:column="19"/></name></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <name pos:line="21" pos:column="22">next<pos:position pos:line="21" pos:column="26"/></name></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt></block></else></if>

      <expr_stmt><expr><call><name pos:line="23" pos:column="7">sfree<pos:position pos:line="23" pos:column="12"/></name><argument_list pos:line="23" pos:column="12">(<argument><expr><name pos:line="23" pos:column="13">pe<pos:position pos:line="23" pos:column="15"/></name></expr></argument>)<pos:position pos:line="23" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><name pos:line="24" pos:column="7">pe<pos:position pos:line="24" pos:column="9"/></name> <operator pos:line="24" pos:column="10">=<pos:position pos:line="24" pos:column="11"/></operator> <name pos:line="24" pos:column="12">next<pos:position pos:line="24" pos:column="16"/></name></expr>;<pos:position pos:line="24" pos:column="17"/></expr_stmt>

      <continue pos:line="26" pos:column="7">continue;<pos:position pos:line="26" pos:column="16"/></continue>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="29" pos:column="5">memset<pos:position pos:line="29" pos:column="11"/></name><argument_list pos:line="29" pos:column="11">(<argument><expr><name><name pos:line="29" pos:column="12">pe<pos:position pos:line="29" pos:column="14"/></name><operator pos:line="29" pos:column="14">-&gt;<pos:position pos:line="29" pos:column="19"/></operator><name pos:line="29" pos:column="16">count_local<pos:position pos:line="29" pos:column="27"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="29" pos:column="29">'\0'<pos:position pos:line="29" pos:column="33"/></literal></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="35">sizeof<argument_list pos:line="29" pos:column="41">(<argument><expr><name><name pos:line="29" pos:column="42">pe<pos:position pos:line="29" pos:column="44"/></name><operator pos:line="29" pos:column="44">-&gt;<pos:position pos:line="29" pos:column="49"/></operator><name pos:line="29" pos:column="46">count_local<pos:position pos:line="29" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">memset<pos:position pos:line="30" pos:column="11"/></name><argument_list pos:line="30" pos:column="11">(<argument><expr><name><name pos:line="30" pos:column="12">pe<pos:position pos:line="30" pos:column="14"/></name><operator pos:line="30" pos:column="14">-&gt;<pos:position pos:line="30" pos:column="19"/></operator><name pos:line="30" pos:column="16">count_remote<pos:position pos:line="30" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="30" pos:column="30">'\0'<pos:position pos:line="30" pos:column="34"/></literal></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="36">sizeof<argument_list pos:line="30" pos:column="42">(<argument><expr><name><name pos:line="30" pos:column="43">pe<pos:position pos:line="30" pos:column="45"/></name><operator pos:line="30" pos:column="45">-&gt;<pos:position pos:line="30" pos:column="50"/></operator><name pos:line="30" pos:column="47">count_remote<pos:position pos:line="30" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="30" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">pe<pos:position pos:line="31" pos:column="7"/></name><operator pos:line="31" pos:column="7">-&gt;<pos:position pos:line="31" pos:column="12"/></operator><name pos:line="31" pos:column="9">flags<pos:position pos:line="31" pos:column="14"/></name></name> <operator pos:line="31" pos:column="15">&amp;=<pos:position pos:line="31" pos:column="21"/></operator> <operator pos:line="31" pos:column="18">~<pos:position pos:line="31" pos:column="19"/></operator><name pos:line="31" pos:column="19">PORT_IS_LISTENING<pos:position pos:line="31" pos:column="36"/></name></expr>;<pos:position pos:line="31" pos:column="37"/></expr_stmt>

    <expr_stmt><expr><name pos:line="33" pos:column="5">prev<pos:position pos:line="33" pos:column="9"/></name> <operator pos:line="33" pos:column="10">=<pos:position pos:line="33" pos:column="11"/></operator> <name pos:line="33" pos:column="12">pe<pos:position pos:line="33" pos:column="14"/></name></expr>;<pos:position pos:line="33" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name pos:line="34" pos:column="5">pe<pos:position pos:line="34" pos:column="7"/></name> <operator pos:line="34" pos:column="8">=<pos:position pos:line="34" pos:column="9"/></operator> <name><name pos:line="34" pos:column="10">pe<pos:position pos:line="34" pos:column="12"/></name><operator pos:line="34" pos:column="12">-&gt;<pos:position pos:line="34" pos:column="17"/></operator><name pos:line="34" pos:column="14">next<pos:position pos:line="34" pos:column="18"/></name></name></expr>;<pos:position pos:line="34" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="35" pos:column="4"/></block></while>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2479_collectd-5.7.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">uc_check_timeout<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">void<pos:position pos:line="1" pos:column="26"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="27"/></parameter_list> <block pos:line="1" pos:column="28">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">cdtime_t<pos:position pos:line="2" pos:column="11"/></name></type> <name pos:line="2" pos:column="12">now<pos:position pos:line="2" pos:column="15"/></name> <init pos:line="2" pos:column="16">= <expr><call><name pos:line="2" pos:column="18">cdtime<pos:position pos:line="2" pos:column="24"/></name><argument_list pos:line="2" pos:column="24">()<pos:position pos:line="2" pos:column="26"/></argument_list></call></expr></init></decl>;<pos:position pos:line="2" pos:column="27"/></decl_stmt>

  <struct pos:line="4" pos:column="3">struct <block pos:line="4" pos:column="10">{<public type="default" pos:line="4" pos:column="11">
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">key<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">cdtime_t<pos:position pos:line="6" pos:column="13"/></name></type> <name pos:line="6" pos:column="14">time<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">cdtime_t<pos:position pos:line="7" pos:column="13"/></name></type> <name pos:line="7" pos:column="14">interval<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
  <pos:position pos:line="8" pos:column="3"/></public>}<pos:position pos:line="8" pos:column="4"/></block> <decl><modifier pos:line="8" pos:column="5">*<pos:position pos:line="8" pos:column="6"/></modifier><name pos:line="8" pos:column="6">expired<pos:position pos:line="8" pos:column="13"/></name> <init pos:line="8" pos:column="14">= <expr><name pos:line="8" pos:column="16">NULL<pos:position pos:line="8" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="21"/></struct>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">size_t<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">expired_num<pos:position pos:line="9" pos:column="21"/></name> <init pos:line="9" pos:column="22">= <expr><literal type="number" pos:line="9" pos:column="24">0<pos:position pos:line="9" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="11" pos:column="3">pthread_mutex_lock<pos:position pos:line="11" pos:column="21"/></name><argument_list pos:line="11" pos:column="21">(<argument><expr><operator pos:line="11" pos:column="22">&amp;<pos:position pos:line="11" pos:column="27"/></operator><name pos:line="11" pos:column="23">cache_lock<pos:position pos:line="11" pos:column="33"/></name></expr></argument>)<pos:position pos:line="11" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="35"/></expr_stmt>

  <comment type="block" pos:line="13" pos:column="3">/* Build a list of entries to be flushed */</comment>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">c_avl_iterator_t<pos:position pos:line="14" pos:column="19"/></name> <modifier pos:line="14" pos:column="20">*<pos:position pos:line="14" pos:column="21"/></modifier></type><name pos:line="14" pos:column="21">iter<pos:position pos:line="14" pos:column="25"/></name> <init pos:line="14" pos:column="26">= <expr><call><name pos:line="14" pos:column="28">c_avl_get_iterator<pos:position pos:line="14" pos:column="46"/></name><argument_list pos:line="14" pos:column="46">(<argument><expr><name pos:line="14" pos:column="47">cache_tree<pos:position pos:line="14" pos:column="57"/></name></expr></argument>)<pos:position pos:line="14" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="59"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">char<pos:position pos:line="15" pos:column="7"/></name> <modifier pos:line="15" pos:column="8">*<pos:position pos:line="15" pos:column="9"/></modifier></type><name pos:line="15" pos:column="9">key<pos:position pos:line="15" pos:column="12"/></name> <init pos:line="15" pos:column="13">= <expr><name pos:line="15" pos:column="15">NULL<pos:position pos:line="15" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">cache_entry_t<pos:position pos:line="16" pos:column="16"/></name> <modifier pos:line="16" pos:column="17">*<pos:position pos:line="16" pos:column="18"/></modifier></type><name pos:line="16" pos:column="18">ce<pos:position pos:line="16" pos:column="20"/></name> <init pos:line="16" pos:column="21">= <expr><name pos:line="16" pos:column="23">NULL<pos:position pos:line="16" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="28"/></decl_stmt>
  <while pos:line="17" pos:column="3">while <condition pos:line="17" pos:column="9">(<expr><call><name pos:line="17" pos:column="10">c_avl_iterator_next<pos:position pos:line="17" pos:column="29"/></name><argument_list pos:line="17" pos:column="29">(<argument><expr><name pos:line="17" pos:column="30">iter<pos:position pos:line="17" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="36">(<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="37">void<pos:position pos:line="17" pos:column="41"/></name> <operator pos:line="17" pos:column="42">*<pos:position pos:line="17" pos:column="43"/></operator><operator pos:line="17" pos:column="43">)<pos:position pos:line="17" pos:column="44"/></operator><operator pos:line="17" pos:column="44">&amp;<pos:position pos:line="17" pos:column="49"/></operator><name pos:line="17" pos:column="45">key<pos:position pos:line="17" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="50">(<pos:position pos:line="17" pos:column="51"/></operator><name pos:line="17" pos:column="51">void<pos:position pos:line="17" pos:column="55"/></name> <operator pos:line="17" pos:column="56">*<pos:position pos:line="17" pos:column="57"/></operator><operator pos:line="17" pos:column="57">)<pos:position pos:line="17" pos:column="58"/></operator><operator pos:line="17" pos:column="58">&amp;<pos:position pos:line="17" pos:column="63"/></operator><name pos:line="17" pos:column="59">ce<pos:position pos:line="17" pos:column="61"/></name></expr></argument>)<pos:position pos:line="17" pos:column="62"/></argument_list></call> <operator pos:line="17" pos:column="63">==<pos:position pos:line="17" pos:column="65"/></operator> <literal type="number" pos:line="17" pos:column="66">0<pos:position pos:line="17" pos:column="67"/></literal></expr>)<pos:position pos:line="17" pos:column="68"/></condition> <block pos:line="17" pos:column="69">{
    <comment type="block" pos:line="18" pos:column="5">/* If the entry is fresh enough, continue. */</comment>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">(<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">now<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">-<pos:position pos:line="19" pos:column="15"/></operator> <name><name pos:line="19" pos:column="16">ce<pos:position pos:line="19" pos:column="18"/></name><operator pos:line="19" pos:column="18">-&gt;<pos:position pos:line="19" pos:column="23"/></operator><name pos:line="19" pos:column="20">last_update<pos:position pos:line="19" pos:column="31"/></name></name><operator pos:line="19" pos:column="31">)<pos:position pos:line="19" pos:column="32"/></operator> <operator pos:line="19" pos:column="33">&lt;<pos:position pos:line="19" pos:column="37"/></operator> <operator pos:line="19" pos:column="35">(<pos:position pos:line="19" pos:column="36"/></operator><name><name pos:line="19" pos:column="36">ce<pos:position pos:line="19" pos:column="38"/></name><operator pos:line="19" pos:column="38">-&gt;<pos:position pos:line="19" pos:column="43"/></operator><name pos:line="19" pos:column="40">interval<pos:position pos:line="19" pos:column="48"/></name></name> <operator pos:line="19" pos:column="49">*<pos:position pos:line="19" pos:column="50"/></operator> <name pos:line="19" pos:column="51">timeout_g<pos:position pos:line="19" pos:column="60"/></name><operator pos:line="19" pos:column="60">)<pos:position pos:line="19" pos:column="61"/></operator></expr>)<pos:position pos:line="19" pos:column="62"/></condition><then pos:line="19" pos:column="62">
      <block type="pseudo"><continue pos:line="20" pos:column="7">continue;<pos:position pos:line="20" pos:column="16"/></continue></block></then></if>

    <decl_stmt><decl><type><name pos:line="22" pos:column="5">void<pos:position pos:line="22" pos:column="9"/></name> <modifier pos:line="22" pos:column="10">*<pos:position pos:line="22" pos:column="11"/></modifier></type><name pos:line="22" pos:column="11">tmp<pos:position pos:line="22" pos:column="14"/></name> <init pos:line="22" pos:column="15">= <expr><call><name pos:line="22" pos:column="17">realloc<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">(<argument><expr><name pos:line="22" pos:column="25">expired<pos:position pos:line="22" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="34">(<pos:position pos:line="22" pos:column="35"/></operator><name pos:line="22" pos:column="35">expired_num<pos:position pos:line="22" pos:column="46"/></name> <operator pos:line="22" pos:column="47">+<pos:position pos:line="22" pos:column="48"/></operator> <literal type="number" pos:line="22" pos:column="49">1<pos:position pos:line="22" pos:column="50"/></literal><operator pos:line="22" pos:column="50">)<pos:position pos:line="22" pos:column="51"/></operator> <operator pos:line="22" pos:column="52">*<pos:position pos:line="22" pos:column="53"/></operator> <sizeof pos:line="22" pos:column="54">sizeof<argument_list pos:line="22" pos:column="60">(<argument><expr><operator pos:line="22" pos:column="61">*<pos:position pos:line="22" pos:column="62"/></operator><name pos:line="22" pos:column="62">expired<pos:position pos:line="22" pos:column="69"/></name></expr></argument>)<pos:position pos:line="22" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="22" pos:column="72"/></decl_stmt>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name pos:line="23" pos:column="9">tmp<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">==<pos:position pos:line="23" pos:column="15"/></operator> <name pos:line="23" pos:column="16">NULL<pos:position pos:line="23" pos:column="20"/></name></expr>)<pos:position pos:line="23" pos:column="21"/></condition><then pos:line="23" pos:column="21"> <block pos:line="23" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="24" pos:column="7">ERROR<pos:position pos:line="24" pos:column="12"/></name><argument_list pos:line="24" pos:column="12">(<argument><expr><literal type="string" pos:line="24" pos:column="13">"uc_check_timeout: realloc failed."<pos:position pos:line="24" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="50"/></expr_stmt>
      <continue pos:line="25" pos:column="7">continue;<pos:position pos:line="25" pos:column="16"/></continue>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="27" pos:column="5">expired<pos:position pos:line="27" pos:column="12"/></name> <operator pos:line="27" pos:column="13">=<pos:position pos:line="27" pos:column="14"/></operator> <name pos:line="27" pos:column="15">tmp<pos:position pos:line="27" pos:column="18"/></name></expr>;<pos:position pos:line="27" pos:column="19"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="29" pos:column="5">expired<pos:position pos:line="29" pos:column="12"/></name><index pos:line="29" pos:column="12">[<expr><name pos:line="29" pos:column="13">expired_num<pos:position pos:line="29" pos:column="24"/></name></expr>]<pos:position pos:line="29" pos:column="25"/></index></name><operator pos:line="29" pos:column="25">.<pos:position pos:line="29" pos:column="26"/></operator><name pos:line="29" pos:column="26">key<pos:position pos:line="29" pos:column="29"/></name> <operator pos:line="29" pos:column="30">=<pos:position pos:line="29" pos:column="31"/></operator> <call><name pos:line="29" pos:column="32">strdup<pos:position pos:line="29" pos:column="38"/></name><argument_list pos:line="29" pos:column="38">(<argument><expr><name pos:line="29" pos:column="39">key<pos:position pos:line="29" pos:column="42"/></name></expr></argument>)<pos:position pos:line="29" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="30" pos:column="5">expired<pos:position pos:line="30" pos:column="12"/></name><index pos:line="30" pos:column="12">[<expr><name pos:line="30" pos:column="13">expired_num<pos:position pos:line="30" pos:column="24"/></name></expr>]<pos:position pos:line="30" pos:column="25"/></index></name><operator pos:line="30" pos:column="25">.<pos:position pos:line="30" pos:column="26"/></operator><name pos:line="30" pos:column="26">time<pos:position pos:line="30" pos:column="30"/></name> <operator pos:line="30" pos:column="31">=<pos:position pos:line="30" pos:column="32"/></operator> <name><name pos:line="30" pos:column="33">ce<pos:position pos:line="30" pos:column="35"/></name><operator pos:line="30" pos:column="35">-&gt;<pos:position pos:line="30" pos:column="40"/></operator><name pos:line="30" pos:column="37">last_time<pos:position pos:line="30" pos:column="46"/></name></name></expr>;<pos:position pos:line="30" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">expired<pos:position pos:line="31" pos:column="12"/></name><index pos:line="31" pos:column="12">[<expr><name pos:line="31" pos:column="13">expired_num<pos:position pos:line="31" pos:column="24"/></name></expr>]<pos:position pos:line="31" pos:column="25"/></index></name><operator pos:line="31" pos:column="25">.<pos:position pos:line="31" pos:column="26"/></operator><name pos:line="31" pos:column="26">interval<pos:position pos:line="31" pos:column="34"/></name> <operator pos:line="31" pos:column="35">=<pos:position pos:line="31" pos:column="36"/></operator> <name><name pos:line="31" pos:column="37">ce<pos:position pos:line="31" pos:column="39"/></name><operator pos:line="31" pos:column="39">-&gt;<pos:position pos:line="31" pos:column="44"/></operator><name pos:line="31" pos:column="41">interval<pos:position pos:line="31" pos:column="49"/></name></name></expr>;<pos:position pos:line="31" pos:column="50"/></expr_stmt>

    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name><name pos:line="33" pos:column="9">expired<pos:position pos:line="33" pos:column="16"/></name><index pos:line="33" pos:column="16">[<expr><name pos:line="33" pos:column="17">expired_num<pos:position pos:line="33" pos:column="28"/></name></expr>]<pos:position pos:line="33" pos:column="29"/></index></name><operator pos:line="33" pos:column="29">.<pos:position pos:line="33" pos:column="30"/></operator><name pos:line="33" pos:column="30">key<pos:position pos:line="33" pos:column="33"/></name> <operator pos:line="33" pos:column="34">==<pos:position pos:line="33" pos:column="36"/></operator> <name pos:line="33" pos:column="37">NULL<pos:position pos:line="33" pos:column="41"/></name></expr>)<pos:position pos:line="33" pos:column="42"/></condition><then pos:line="33" pos:column="42"> <block pos:line="33" pos:column="43">{
      <expr_stmt><expr><call><name pos:line="34" pos:column="7">ERROR<pos:position pos:line="34" pos:column="12"/></name><argument_list pos:line="34" pos:column="12">(<argument><expr><literal type="string" pos:line="34" pos:column="13">"uc_check_timeout: strdup failed."<pos:position pos:line="34" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="49"/></expr_stmt>
      <continue pos:line="35" pos:column="7">continue;<pos:position pos:line="35" pos:column="16"/></continue>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="38" pos:column="5">expired_num<pos:position pos:line="38" pos:column="16"/></name><operator pos:line="38" pos:column="16">++<pos:position pos:line="38" pos:column="18"/></operator></expr>;<pos:position pos:line="38" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="39" pos:column="4"/></block></while> <comment type="block" pos:line="39" pos:column="5">/* while (c_avl_iterator_next) */</comment>

  <expr_stmt><expr><call><name pos:line="41" pos:column="3">c_avl_iterator_destroy<pos:position pos:line="41" pos:column="25"/></name><argument_list pos:line="41" pos:column="25">(<argument><expr><name pos:line="41" pos:column="26">iter<pos:position pos:line="41" pos:column="30"/></name></expr></argument>)<pos:position pos:line="41" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="42" pos:column="3">pthread_mutex_unlock<pos:position pos:line="42" pos:column="23"/></name><argument_list pos:line="42" pos:column="23">(<argument><expr><operator pos:line="42" pos:column="24">&amp;<pos:position pos:line="42" pos:column="29"/></operator><name pos:line="42" pos:column="25">cache_lock<pos:position pos:line="42" pos:column="35"/></name></expr></argument>)<pos:position pos:line="42" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="37"/></expr_stmt>

  <if pos:line="44" pos:column="3">if <condition pos:line="44" pos:column="6">(<expr><name pos:line="44" pos:column="7">expired_num<pos:position pos:line="44" pos:column="18"/></name> <operator pos:line="44" pos:column="19">==<pos:position pos:line="44" pos:column="21"/></operator> <literal type="number" pos:line="44" pos:column="22">0<pos:position pos:line="44" pos:column="23"/></literal></expr>)<pos:position pos:line="44" pos:column="24"/></condition><then pos:line="44" pos:column="24"> <block pos:line="44" pos:column="25">{
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">sfree<pos:position pos:line="45" pos:column="10"/></name><argument_list pos:line="45" pos:column="10">(<argument><expr><name pos:line="45" pos:column="11">expired<pos:position pos:line="45" pos:column="18"/></name></expr></argument>)<pos:position pos:line="45" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="20"/></expr_stmt>
    <return pos:line="46" pos:column="5">return <expr><operator pos:line="46" pos:column="12">(<pos:position pos:line="46" pos:column="13"/></operator><literal type="number" pos:line="46" pos:column="13">0<pos:position pos:line="46" pos:column="14"/></literal><operator pos:line="46" pos:column="14">)<pos:position pos:line="46" pos:column="15"/></operator></expr>;<pos:position pos:line="46" pos:column="16"/></return>
  }<pos:position pos:line="47" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="49" pos:column="3">/* Call the "missing" callback for each value. Do this before removing the
   * value from the cache, so that callbacks can still access the data stored,
   * including plugin specific meta data, rates, history, â¦. This must be done
   * without holding the lock, otherwise we will run into a deadlock if a
   * plugin calls the cache interface. */</comment>
  <for pos:line="54" pos:column="3">for <control pos:line="54" pos:column="7">(<init><decl><type><name pos:line="54" pos:column="8">size_t<pos:position pos:line="54" pos:column="14"/></name></type> <name pos:line="54" pos:column="15">i<pos:position pos:line="54" pos:column="16"/></name> <init pos:line="54" pos:column="17">= <expr><literal type="number" pos:line="54" pos:column="19">0<pos:position pos:line="54" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="54" pos:column="21"/></init> <condition><expr><name pos:line="54" pos:column="22">i<pos:position pos:line="54" pos:column="23"/></name> <operator pos:line="54" pos:column="24">&lt;<pos:position pos:line="54" pos:column="28"/></operator> <name pos:line="54" pos:column="26">expired_num<pos:position pos:line="54" pos:column="37"/></name></expr>;<pos:position pos:line="54" pos:column="38"/></condition> <incr><expr><name pos:line="54" pos:column="39">i<pos:position pos:line="54" pos:column="40"/></name><operator pos:line="54" pos:column="40">++<pos:position pos:line="54" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="54" pos:column="43"/></control> <block pos:line="54" pos:column="44">{
    <decl_stmt><decl><type><name pos:line="55" pos:column="5">value_list_t<pos:position pos:line="55" pos:column="17"/></name></type> <name pos:line="55" pos:column="18">vl<pos:position pos:line="55" pos:column="20"/></name> <init pos:line="55" pos:column="21">= <expr><block pos:line="55" pos:column="23">{
        <expr><operator pos:line="56" pos:column="9">.<pos:position pos:line="56" pos:column="10"/></operator><name pos:line="56" pos:column="10">time<pos:position pos:line="56" pos:column="14"/></name> <operator pos:line="56" pos:column="15">=<pos:position pos:line="56" pos:column="16"/></operator> <name><name pos:line="56" pos:column="17">expired<pos:position pos:line="56" pos:column="24"/></name><index pos:line="56" pos:column="24">[<expr><name pos:line="56" pos:column="25">i<pos:position pos:line="56" pos:column="26"/></name></expr>]<pos:position pos:line="56" pos:column="27"/></index></name><operator pos:line="56" pos:column="27">.<pos:position pos:line="56" pos:column="28"/></operator><name pos:line="56" pos:column="28">time<pos:position pos:line="56" pos:column="32"/></name></expr>, <expr><operator pos:line="56" pos:column="34">.<pos:position pos:line="56" pos:column="35"/></operator><name pos:line="56" pos:column="35">interval<pos:position pos:line="56" pos:column="43"/></name> <operator pos:line="56" pos:column="44">=<pos:position pos:line="56" pos:column="45"/></operator> <name><name pos:line="56" pos:column="46">expired<pos:position pos:line="56" pos:column="53"/></name><index pos:line="56" pos:column="53">[<expr><name pos:line="56" pos:column="54">i<pos:position pos:line="56" pos:column="55"/></name></expr>]<pos:position pos:line="56" pos:column="56"/></index></name><operator pos:line="56" pos:column="56">.<pos:position pos:line="56" pos:column="57"/></operator><name pos:line="56" pos:column="57">interval<pos:position pos:line="56" pos:column="65"/></name></expr>,
    }<pos:position pos:line="57" pos:column="6"/></block></expr></init></decl>;<pos:position pos:line="57" pos:column="7"/></decl_stmt>

    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><call><name pos:line="59" pos:column="9">parse_identifier_vl<pos:position pos:line="59" pos:column="28"/></name><argument_list pos:line="59" pos:column="28">(<argument><expr><name><name pos:line="59" pos:column="29">expired<pos:position pos:line="59" pos:column="36"/></name><index pos:line="59" pos:column="36">[<expr><name pos:line="59" pos:column="37">i<pos:position pos:line="59" pos:column="38"/></name></expr>]<pos:position pos:line="59" pos:column="39"/></index></name><operator pos:line="59" pos:column="39">.<pos:position pos:line="59" pos:column="40"/></operator><name pos:line="59" pos:column="40">key<pos:position pos:line="59" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="45">&amp;<pos:position pos:line="59" pos:column="50"/></operator><name pos:line="59" pos:column="46">vl<pos:position pos:line="59" pos:column="48"/></name></expr></argument>)<pos:position pos:line="59" pos:column="49"/></argument_list></call> <operator pos:line="59" pos:column="50">!=<pos:position pos:line="59" pos:column="52"/></operator> <literal type="number" pos:line="59" pos:column="53">0<pos:position pos:line="59" pos:column="54"/></literal></expr>)<pos:position pos:line="59" pos:column="55"/></condition><then pos:line="59" pos:column="55"> <block pos:line="59" pos:column="56">{
      <expr_stmt><expr><call><name pos:line="60" pos:column="7">ERROR<pos:position pos:line="60" pos:column="12"/></name><argument_list pos:line="60" pos:column="12">(<argument><expr><literal type="string" pos:line="60" pos:column="13">"uc_check_timeout: parse_identifier_vl (\"%s\") failed."<pos:position pos:line="60" pos:column="69"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="61" pos:column="13">expired<pos:position pos:line="61" pos:column="20"/></name><index pos:line="61" pos:column="20">[<expr><name pos:line="61" pos:column="21">i<pos:position pos:line="61" pos:column="22"/></name></expr>]<pos:position pos:line="61" pos:column="23"/></index></name><operator pos:line="61" pos:column="23">.<pos:position pos:line="61" pos:column="24"/></operator><name pos:line="61" pos:column="24">key<pos:position pos:line="61" pos:column="27"/></name></expr></argument>)<pos:position pos:line="61" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="29"/></expr_stmt>
      <continue pos:line="62" pos:column="7">continue;<pos:position pos:line="62" pos:column="16"/></continue>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="65" pos:column="5">plugin_dispatch_missing<pos:position pos:line="65" pos:column="28"/></name><argument_list pos:line="65" pos:column="28">(<argument><expr><operator pos:line="65" pos:column="29">&amp;<pos:position pos:line="65" pos:column="34"/></operator><name pos:line="65" pos:column="30">vl<pos:position pos:line="65" pos:column="32"/></name></expr></argument>)<pos:position pos:line="65" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="34"/></expr_stmt>
  }<pos:position pos:line="66" pos:column="4"/></block></for> <comment type="block" pos:line="66" pos:column="5">/* for (i = 0; i &lt; expired_num; i++) */</comment>

  <comment type="block" pos:line="68" pos:column="3">/* Now actually remove all the values from the cache. We don't re-evaluate
   * the timestamp again, so in theory it is possible we remove a value after
   * it is updated here. */</comment>
  <expr_stmt><expr><call><name pos:line="71" pos:column="3">pthread_mutex_lock<pos:position pos:line="71" pos:column="21"/></name><argument_list pos:line="71" pos:column="21">(<argument><expr><operator pos:line="71" pos:column="22">&amp;<pos:position pos:line="71" pos:column="27"/></operator><name pos:line="71" pos:column="23">cache_lock<pos:position pos:line="71" pos:column="33"/></name></expr></argument>)<pos:position pos:line="71" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="35"/></expr_stmt>
  <for pos:line="72" pos:column="3">for <control pos:line="72" pos:column="7">(<init><decl><type><name pos:line="72" pos:column="8">size_t<pos:position pos:line="72" pos:column="14"/></name></type> <name pos:line="72" pos:column="15">i<pos:position pos:line="72" pos:column="16"/></name> <init pos:line="72" pos:column="17">= <expr><literal type="number" pos:line="72" pos:column="19">0<pos:position pos:line="72" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="72" pos:column="21"/></init> <condition><expr><name pos:line="72" pos:column="22">i<pos:position pos:line="72" pos:column="23"/></name> <operator pos:line="72" pos:column="24">&lt;<pos:position pos:line="72" pos:column="28"/></operator> <name pos:line="72" pos:column="26">expired_num<pos:position pos:line="72" pos:column="37"/></name></expr>;<pos:position pos:line="72" pos:column="38"/></condition> <incr><expr><name pos:line="72" pos:column="39">i<pos:position pos:line="72" pos:column="40"/></name><operator pos:line="72" pos:column="40">++<pos:position pos:line="72" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="72" pos:column="43"/></control> <block pos:line="72" pos:column="44">{
    <decl_stmt><decl><type><name pos:line="73" pos:column="5">char<pos:position pos:line="73" pos:column="9"/></name> <modifier pos:line="73" pos:column="10">*<pos:position pos:line="73" pos:column="11"/></modifier></type><name pos:line="73" pos:column="11">key<pos:position pos:line="73" pos:column="14"/></name> <init pos:line="73" pos:column="15">= <expr><name pos:line="73" pos:column="17">NULL<pos:position pos:line="73" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="73" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="74" pos:column="5">cache_entry_t<pos:position pos:line="74" pos:column="18"/></name> <modifier pos:line="74" pos:column="19">*<pos:position pos:line="74" pos:column="20"/></modifier></type><name pos:line="74" pos:column="20">value<pos:position pos:line="74" pos:column="25"/></name> <init pos:line="74" pos:column="26">= <expr><name pos:line="74" pos:column="28">NULL<pos:position pos:line="74" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="74" pos:column="33"/></decl_stmt>

    <if pos:line="76" pos:column="5">if <condition pos:line="76" pos:column="8">(<expr><call><name pos:line="76" pos:column="9">c_avl_remove<pos:position pos:line="76" pos:column="21"/></name><argument_list pos:line="76" pos:column="21">(<argument><expr><name pos:line="76" pos:column="22">cache_tree<pos:position pos:line="76" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="76" pos:column="34">expired<pos:position pos:line="76" pos:column="41"/></name><index pos:line="76" pos:column="41">[<expr><name pos:line="76" pos:column="42">i<pos:position pos:line="76" pos:column="43"/></name></expr>]<pos:position pos:line="76" pos:column="44"/></index></name><operator pos:line="76" pos:column="44">.<pos:position pos:line="76" pos:column="45"/></operator><name pos:line="76" pos:column="45">key<pos:position pos:line="76" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="76" pos:column="50">(<pos:position pos:line="76" pos:column="51"/></operator><name pos:line="76" pos:column="51">void<pos:position pos:line="76" pos:column="55"/></name> <operator pos:line="76" pos:column="56">*<pos:position pos:line="76" pos:column="57"/></operator><operator pos:line="76" pos:column="57">)<pos:position pos:line="76" pos:column="58"/></operator><operator pos:line="76" pos:column="58">&amp;<pos:position pos:line="76" pos:column="63"/></operator><name pos:line="76" pos:column="59">key<pos:position pos:line="76" pos:column="62"/></name></expr></argument>,
                     <argument><expr><operator pos:line="77" pos:column="22">(<pos:position pos:line="77" pos:column="23"/></operator><name pos:line="77" pos:column="23">void<pos:position pos:line="77" pos:column="27"/></name> <operator pos:line="77" pos:column="28">*<pos:position pos:line="77" pos:column="29"/></operator><operator pos:line="77" pos:column="29">)<pos:position pos:line="77" pos:column="30"/></operator><operator pos:line="77" pos:column="30">&amp;<pos:position pos:line="77" pos:column="35"/></operator><name pos:line="77" pos:column="31">value<pos:position pos:line="77" pos:column="36"/></name></expr></argument>)<pos:position pos:line="77" pos:column="37"/></argument_list></call> <operator pos:line="77" pos:column="38">!=<pos:position pos:line="77" pos:column="40"/></operator> <literal type="number" pos:line="77" pos:column="41">0<pos:position pos:line="77" pos:column="42"/></literal></expr>)<pos:position pos:line="77" pos:column="43"/></condition><then pos:line="77" pos:column="43"> <block pos:line="77" pos:column="44">{
      <expr_stmt><expr><call><name pos:line="78" pos:column="7">ERROR<pos:position pos:line="78" pos:column="12"/></name><argument_list pos:line="78" pos:column="12">(<argument><expr><literal type="string" pos:line="78" pos:column="13">"uc_check_timeout: c_avl_remove (\"%s\") failed."<pos:position pos:line="78" pos:column="62"/></literal></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="64">expired<pos:position pos:line="78" pos:column="71"/></name><index pos:line="78" pos:column="71">[<expr><name pos:line="78" pos:column="72">i<pos:position pos:line="78" pos:column="73"/></name></expr>]<pos:position pos:line="78" pos:column="74"/></index></name><operator pos:line="78" pos:column="74">.<pos:position pos:line="78" pos:column="75"/></operator><name pos:line="78" pos:column="75">key<pos:position pos:line="78" pos:column="78"/></name></expr></argument>)<pos:position pos:line="78" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="80"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="79" pos:column="7">sfree<pos:position pos:line="79" pos:column="12"/></name><argument_list pos:line="79" pos:column="12">(<argument><expr><name><name pos:line="79" pos:column="13">expired<pos:position pos:line="79" pos:column="20"/></name><index pos:line="79" pos:column="20">[<expr><name pos:line="79" pos:column="21">i<pos:position pos:line="79" pos:column="22"/></name></expr>]<pos:position pos:line="79" pos:column="23"/></index></name><operator pos:line="79" pos:column="23">.<pos:position pos:line="79" pos:column="24"/></operator><name pos:line="79" pos:column="24">key<pos:position pos:line="79" pos:column="27"/></name></expr></argument>)<pos:position pos:line="79" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="29"/></expr_stmt>
      <continue pos:line="80" pos:column="7">continue;<pos:position pos:line="80" pos:column="16"/></continue>
    }<pos:position pos:line="81" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="82" pos:column="5">sfree<pos:position pos:line="82" pos:column="10"/></name><argument_list pos:line="82" pos:column="10">(<argument><expr><name pos:line="82" pos:column="11">key<pos:position pos:line="82" pos:column="14"/></name></expr></argument>)<pos:position pos:line="82" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="83" pos:column="5">cache_free<pos:position pos:line="83" pos:column="15"/></name><argument_list pos:line="83" pos:column="15">(<argument><expr><name pos:line="83" pos:column="16">value<pos:position pos:line="83" pos:column="21"/></name></expr></argument>)<pos:position pos:line="83" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="85" pos:column="5">sfree<pos:position pos:line="85" pos:column="10"/></name><argument_list pos:line="85" pos:column="10">(<argument><expr><name><name pos:line="85" pos:column="11">expired<pos:position pos:line="85" pos:column="18"/></name><index pos:line="85" pos:column="18">[<expr><name pos:line="85" pos:column="19">i<pos:position pos:line="85" pos:column="20"/></name></expr>]<pos:position pos:line="85" pos:column="21"/></index></name><operator pos:line="85" pos:column="21">.<pos:position pos:line="85" pos:column="22"/></operator><name pos:line="85" pos:column="22">key<pos:position pos:line="85" pos:column="25"/></name></expr></argument>)<pos:position pos:line="85" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="86" pos:column="4"/></block></for> <comment type="block" pos:line="86" pos:column="5">/* for (i = 0; i &lt; expired_num; i++) */</comment>
  <expr_stmt><expr><call><name pos:line="87" pos:column="3">pthread_mutex_unlock<pos:position pos:line="87" pos:column="23"/></name><argument_list pos:line="87" pos:column="23">(<argument><expr><operator pos:line="87" pos:column="24">&amp;<pos:position pos:line="87" pos:column="29"/></operator><name pos:line="87" pos:column="25">cache_lock<pos:position pos:line="87" pos:column="35"/></name></expr></argument>)<pos:position pos:line="87" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="37"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="89" pos:column="3">sfree<pos:position pos:line="89" pos:column="8"/></name><argument_list pos:line="89" pos:column="8">(<argument><expr><name pos:line="89" pos:column="9">expired<pos:position pos:line="89" pos:column="16"/></name></expr></argument>)<pos:position pos:line="89" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="18"/></expr_stmt>
  <return pos:line="90" pos:column="3">return <expr><operator pos:line="90" pos:column="10">(<pos:position pos:line="90" pos:column="11"/></operator><literal type="number" pos:line="90" pos:column="11">0<pos:position pos:line="90" pos:column="12"/></literal><operator pos:line="90" pos:column="12">)<pos:position pos:line="90" pos:column="13"/></operator></expr>;<pos:position pos:line="90" pos:column="14"/></return>
}<pos:position pos:line="91" pos:column="2"/></block></function></unit>

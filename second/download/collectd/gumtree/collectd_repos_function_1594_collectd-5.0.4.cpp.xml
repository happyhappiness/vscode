<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1594_collectd-5.0.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">cpy_log_exception<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">context<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list> <block pos:line="1" pos:column="45">{
	<decl_stmt><decl><type><name pos:line="2" pos:column="9">int<pos:position pos:line="2" pos:column="12"/></name></type> <name pos:line="2" pos:column="13">l<pos:position pos:line="2" pos:column="14"/></name> <init pos:line="2" pos:column="15">= <expr><literal type="number" pos:line="2" pos:column="17">0<pos:position pos:line="2" pos:column="18"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="2" pos:column="20">i<pos:position pos:line="2" pos:column="21"/></name></decl>;<pos:position pos:line="2" pos:column="22"/></decl_stmt>
	<expr_stmt><expr><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <operator pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></operator><name><typename pos:line="3" pos:column="21">typename<pos:position pos:line="3" pos:column="29"/></typename></name> <operator pos:line="3" pos:column="30">=<pos:position pos:line="3" pos:column="31"/></operator> <name pos:line="3" pos:column="32">NULL<pos:position pos:line="3" pos:column="36"/></name></expr><operator pos:line="3" pos:column="36">,<pos:position pos:line="3" pos:column="37"/></operator> <expr><operator pos:line="3" pos:column="38">*<pos:position pos:line="3" pos:column="39"/></operator><name pos:line="3" pos:column="39">message<pos:position pos:line="3" pos:column="46"/></name> <operator pos:line="3" pos:column="47">=<pos:position pos:line="3" pos:column="48"/></operator> <name pos:line="3" pos:column="49">NULL<pos:position pos:line="3" pos:column="53"/></name></expr>;<pos:position pos:line="3" pos:column="54"/></expr_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">PyObject<pos:position pos:line="4" pos:column="17"/></name> <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">type<pos:position pos:line="4" pos:column="23"/></name></decl>, <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="26">value<pos:position pos:line="4" pos:column="31"/></name></decl>, <modifier pos:line="4" pos:column="33">*<pos:position pos:line="4" pos:column="34"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="34">traceback<pos:position pos:line="4" pos:column="43"/></name></decl>, <modifier pos:line="4" pos:column="45">*<pos:position pos:line="4" pos:column="46"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="46">tn<pos:position pos:line="4" pos:column="48"/></name></decl>, <modifier pos:line="4" pos:column="50">*<pos:position pos:line="4" pos:column="51"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="51">m<pos:position pos:line="4" pos:column="52"/></name></decl>, <modifier pos:line="4" pos:column="54">*<pos:position pos:line="4" pos:column="55"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="55">list<pos:position pos:line="4" pos:column="59"/></name></decl>;<pos:position pos:line="4" pos:column="60"/></decl_stmt>
	
	<expr_stmt><expr><call><name pos:line="6" pos:column="9">PyErr_Fetch<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><operator pos:line="6" pos:column="21">&amp;<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="22">type<pos:position pos:line="6" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="28">&amp;<pos:position pos:line="6" pos:column="33"/></operator><name pos:line="6" pos:column="29">value<pos:position pos:line="6" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="36">&amp;<pos:position pos:line="6" pos:column="41"/></operator><name pos:line="6" pos:column="37">traceback<pos:position pos:line="6" pos:column="46"/></name></expr></argument>)<pos:position pos:line="6" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="7" pos:column="9">PyErr_NormalizeException<pos:position pos:line="7" pos:column="33"/></name><argument_list pos:line="7" pos:column="33">(<argument><expr><operator pos:line="7" pos:column="34">&amp;<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="35">type<pos:position pos:line="7" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="41">&amp;<pos:position pos:line="7" pos:column="46"/></operator><name pos:line="7" pos:column="42">value<pos:position pos:line="7" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="49">&amp;<pos:position pos:line="7" pos:column="54"/></operator><name pos:line="7" pos:column="50">traceback<pos:position pos:line="7" pos:column="59"/></name></expr></argument>)<pos:position pos:line="7" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="61"/></expr_stmt>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">type<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">==<pos:position pos:line="8" pos:column="20"/></operator> <name pos:line="8" pos:column="21">NULL<pos:position pos:line="8" pos:column="25"/></name></expr>)<pos:position pos:line="8" pos:column="26"/></condition><then pos:line="8" pos:column="26"> <block type="pseudo"><return pos:line="8" pos:column="27">return;<pos:position pos:line="8" pos:column="34"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="9" pos:column="9">tn<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <call><name pos:line="9" pos:column="14">PyObject_GetAttrString<pos:position pos:line="9" pos:column="36"/></name><argument_list pos:line="9" pos:column="36">(<argument><expr><name pos:line="9" pos:column="37">type<pos:position pos:line="9" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="43">"__name__"<pos:position pos:line="9" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="55"/></expr_stmt> <comment type="block" pos:line="9" pos:column="56">/* New reference. */</comment>
	<expr_stmt><expr><name pos:line="10" pos:column="9">m<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <call><name pos:line="10" pos:column="13">PyObject_Str<pos:position pos:line="10" pos:column="25"/></name><argument_list pos:line="10" pos:column="25">(<argument><expr><name pos:line="10" pos:column="26">value<pos:position pos:line="10" pos:column="31"/></name></expr></argument>)<pos:position pos:line="10" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="33"/></expr_stmt> <comment type="block" pos:line="10" pos:column="34">/* New reference. */</comment>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">tn<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">!=<pos:position pos:line="11" pos:column="18"/></operator> <name pos:line="11" pos:column="19">NULL<pos:position pos:line="11" pos:column="23"/></name></expr>)<pos:position pos:line="11" pos:column="24"/></condition><then pos:line="11" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><name><typename pos:line="12" pos:column="17">typename<pos:position pos:line="12" pos:column="25"/></typename></name> <operator pos:line="12" pos:column="26">=<pos:position pos:line="12" pos:column="27"/></operator> <call><name pos:line="12" pos:column="28">cpy_unicode_or_bytes_to_string<pos:position pos:line="12" pos:column="58"/></name><argument_list pos:line="12" pos:column="58">(<argument><expr><operator pos:line="12" pos:column="59">&amp;<pos:position pos:line="12" pos:column="64"/></operator><name pos:line="12" pos:column="60">tn<pos:position pos:line="12" pos:column="62"/></name></expr></argument>)<pos:position pos:line="12" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="64"/></expr_stmt></block></then></if>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">m<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">!=<pos:position pos:line="13" pos:column="17"/></operator> <name pos:line="13" pos:column="18">NULL<pos:position pos:line="13" pos:column="22"/></name></expr>)<pos:position pos:line="13" pos:column="23"/></condition><then pos:line="13" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="17">message<pos:position pos:line="14" pos:column="24"/></name> <operator pos:line="14" pos:column="25">=<pos:position pos:line="14" pos:column="26"/></operator> <call><name pos:line="14" pos:column="27">cpy_unicode_or_bytes_to_string<pos:position pos:line="14" pos:column="57"/></name><argument_list pos:line="14" pos:column="57">(<argument><expr><operator pos:line="14" pos:column="58">&amp;<pos:position pos:line="14" pos:column="63"/></operator><name pos:line="14" pos:column="59">m<pos:position pos:line="14" pos:column="60"/></name></expr></argument>)<pos:position pos:line="14" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="62"/></expr_stmt></block></then></if>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name><typename pos:line="15" pos:column="13">typename<pos:position pos:line="15" pos:column="21"/></typename></name> <operator pos:line="15" pos:column="22">==<pos:position pos:line="15" pos:column="24"/></operator> <name pos:line="15" pos:column="25">NULL<pos:position pos:line="15" pos:column="29"/></name></expr>)<pos:position pos:line="15" pos:column="30"/></condition><then pos:line="15" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><name><typename pos:line="16" pos:column="17">typename<pos:position pos:line="16" pos:column="25"/></typename></name> <operator pos:line="16" pos:column="26">=<pos:position pos:line="16" pos:column="27"/></operator> <literal type="string" pos:line="16" pos:column="28">"NamelessException"<pos:position pos:line="16" pos:column="47"/></literal></expr>;<pos:position pos:line="16" pos:column="48"/></expr_stmt></block></then></if>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">message<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">==<pos:position pos:line="17" pos:column="23"/></operator> <name pos:line="17" pos:column="24">NULL<pos:position pos:line="17" pos:column="28"/></name></expr>)<pos:position pos:line="17" pos:column="29"/></condition><then pos:line="17" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="17">message<pos:position pos:line="18" pos:column="24"/></name> <operator pos:line="18" pos:column="25">=<pos:position pos:line="18" pos:column="26"/></operator> <literal type="string" pos:line="18" pos:column="27">"N/A"<pos:position pos:line="18" pos:column="32"/></literal></expr>;<pos:position pos:line="18" pos:column="33"/></expr_stmt></block></then></if>
	<decl_stmt><decl><type><name pos:line="19" pos:column="9">Py_BEGIN_ALLOW_THREADS<pos:position pos:line="19" pos:column="31"/></name></type>
	<name pos:line="20" pos:column="9">ERROR<pos:position pos:line="20" pos:column="14"/></name><argument_list pos:line="20" pos:column="14">(<argument><expr><literal type="string" pos:line="20" pos:column="15">"Unhandled python exception in %s: %s: %s"<pos:position pos:line="20" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="59">context<pos:position pos:line="20" pos:column="66"/></name></expr></argument>, <argument><expr><name><typename pos:line="20" pos:column="68">typename<pos:position pos:line="20" pos:column="76"/></typename></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="78">message<pos:position pos:line="20" pos:column="85"/></name></expr></argument>)<pos:position pos:line="20" pos:column="86"/></argument_list></decl>;<pos:position pos:line="20" pos:column="87"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="21" pos:column="9">Py_END_ALLOW_THREADS<pos:position pos:line="21" pos:column="29"/></name></type>
	<name pos:line="22" pos:column="9">Py_XDECREF<pos:position pos:line="22" pos:column="19"/></name><argument_list pos:line="22" pos:column="19">(<argument><expr><name pos:line="22" pos:column="20">tn<pos:position pos:line="22" pos:column="22"/></name></expr></argument>)<pos:position pos:line="22" pos:column="23"/></argument_list></decl>;<pos:position pos:line="22" pos:column="24"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">Py_XDECREF<pos:position pos:line="23" pos:column="19"/></name><argument_list pos:line="23" pos:column="19">(<argument><expr><name pos:line="23" pos:column="20">m<pos:position pos:line="23" pos:column="21"/></name></expr></argument>)<pos:position pos:line="23" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="23"/></expr_stmt>
	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><operator pos:line="24" pos:column="13">!<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="14">cpy_format_exception<pos:position pos:line="24" pos:column="34"/></name></expr>)<pos:position pos:line="24" pos:column="35"/></condition><then pos:line="24" pos:column="35"> <block pos:line="24" pos:column="36">{
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">PyErr_Clear<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">()<pos:position pos:line="25" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">Py_XDECREF<pos:position pos:line="26" pos:column="27"/></name><argument_list pos:line="26" pos:column="27">(<argument><expr><name pos:line="26" pos:column="28">type<pos:position pos:line="26" pos:column="32"/></name></expr></argument>)<pos:position pos:line="26" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">Py_XDECREF<pos:position pos:line="27" pos:column="27"/></name><argument_list pos:line="27" pos:column="27">(<argument><expr><name pos:line="27" pos:column="28">value<pos:position pos:line="27" pos:column="33"/></name></expr></argument>)<pos:position pos:line="27" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">Py_XDECREF<pos:position pos:line="28" pos:column="27"/></name><argument_list pos:line="28" pos:column="27">(<argument><expr><name pos:line="28" pos:column="28">traceback<pos:position pos:line="28" pos:column="37"/></name></expr></argument>)<pos:position pos:line="28" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="39"/></expr_stmt>
		<return pos:line="29" pos:column="17">return;<pos:position pos:line="29" pos:column="24"/></return>
	}<pos:position pos:line="30" pos:column="10"/></block></then></if>
	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><operator pos:line="31" pos:column="13">!<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="14">traceback<pos:position pos:line="31" pos:column="23"/></name></expr>)<pos:position pos:line="31" pos:column="24"/></condition><then pos:line="31" pos:column="24"> <block pos:line="31" pos:column="25">{
		<expr_stmt><expr><call><name pos:line="32" pos:column="17">PyErr_Clear<pos:position pos:line="32" pos:column="28"/></name><argument_list pos:line="32" pos:column="28">()<pos:position pos:line="32" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="31"/></expr_stmt>
		<return pos:line="33" pos:column="17">return;<pos:position pos:line="33" pos:column="24"/></return>
	}<pos:position pos:line="34" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="35" pos:column="9">list<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">=<pos:position pos:line="35" pos:column="15"/></operator> <call><name pos:line="35" pos:column="16">PyObject_CallFunction<pos:position pos:line="35" pos:column="37"/></name><argument_list pos:line="35" pos:column="37">(<argument><expr><name pos:line="35" pos:column="38">cpy_format_exception<pos:position pos:line="35" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="60">"NNN"<pos:position pos:line="35" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="67">type<pos:position pos:line="35" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="73">value<pos:position pos:line="35" pos:column="78"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="80">traceback<pos:position pos:line="35" pos:column="89"/></name></expr></argument>)<pos:position pos:line="35" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="91"/></expr_stmt> <comment type="block" pos:line="35" pos:column="92">/* New reference. */</comment>
	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">list<pos:position pos:line="36" pos:column="17"/></name></expr>)<pos:position pos:line="36" pos:column="18"/></condition><then pos:line="36" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="17">l<pos:position pos:line="37" pos:column="18"/></name> <operator pos:line="37" pos:column="19">=<pos:position pos:line="37" pos:column="20"/></operator> <call><name pos:line="37" pos:column="21">PyObject_Length<pos:position pos:line="37" pos:column="36"/></name><argument_list pos:line="37" pos:column="36">(<argument><expr><name pos:line="37" pos:column="37">list<pos:position pos:line="37" pos:column="41"/></name></expr></argument>)<pos:position pos:line="37" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="43"/></expr_stmt></block></then></if>
	<for pos:line="38" pos:column="9">for <control pos:line="38" pos:column="13">(<init><expr><name pos:line="38" pos:column="14">i<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">=<pos:position pos:line="38" pos:column="17"/></operator> <literal type="number" pos:line="38" pos:column="18">0<pos:position pos:line="38" pos:column="19"/></literal></expr>;<pos:position pos:line="38" pos:column="20"/></init> <condition><expr><name pos:line="38" pos:column="21">i<pos:position pos:line="38" pos:column="22"/></name> <operator pos:line="38" pos:column="23">&lt;<pos:position pos:line="38" pos:column="27"/></operator> <name pos:line="38" pos:column="25">l<pos:position pos:line="38" pos:column="26"/></name></expr>;<pos:position pos:line="38" pos:column="27"/></condition> <incr><expr><operator pos:line="38" pos:column="28">++<pos:position pos:line="38" pos:column="30"/></operator><name pos:line="38" pos:column="30">i<pos:position pos:line="38" pos:column="31"/></name></expr></incr>)<pos:position pos:line="38" pos:column="32"/></control> <block pos:line="38" pos:column="33">{
		<decl_stmt><decl><type><name pos:line="39" pos:column="17">char<pos:position pos:line="39" pos:column="21"/></name> <modifier pos:line="39" pos:column="22">*<pos:position pos:line="39" pos:column="23"/></modifier></type><name pos:line="39" pos:column="23">s<pos:position pos:line="39" pos:column="24"/></name></decl>;<pos:position pos:line="39" pos:column="25"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="40" pos:column="17">PyObject<pos:position pos:line="40" pos:column="25"/></name> <modifier pos:line="40" pos:column="26">*<pos:position pos:line="40" pos:column="27"/></modifier></type><name pos:line="40" pos:column="27">line<pos:position pos:line="40" pos:column="31"/></name></decl>;<pos:position pos:line="40" pos:column="32"/></decl_stmt>
		
		<expr_stmt><expr><name pos:line="42" pos:column="17">line<pos:position pos:line="42" pos:column="21"/></name> <operator pos:line="42" pos:column="22">=<pos:position pos:line="42" pos:column="23"/></operator> <call><name pos:line="42" pos:column="24">PyList_GET_ITEM<pos:position pos:line="42" pos:column="39"/></name><argument_list pos:line="42" pos:column="39">(<argument><expr><name pos:line="42" pos:column="40">list<pos:position pos:line="42" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="46">i<pos:position pos:line="42" pos:column="47"/></name></expr></argument>)<pos:position pos:line="42" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="49"/></expr_stmt> <comment type="block" pos:line="42" pos:column="50">/* Borrowed reference. */</comment>
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">Py_INCREF<pos:position pos:line="43" pos:column="26"/></name><argument_list pos:line="43" pos:column="26">(<argument><expr><name pos:line="43" pos:column="27">line<pos:position pos:line="43" pos:column="31"/></name></expr></argument>)<pos:position pos:line="43" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name pos:line="44" pos:column="17">s<pos:position pos:line="44" pos:column="18"/></name> <operator pos:line="44" pos:column="19">=<pos:position pos:line="44" pos:column="20"/></operator> <call><name pos:line="44" pos:column="21">strdup<pos:position pos:line="44" pos:column="27"/></name><argument_list pos:line="44" pos:column="27">(<argument><expr><call><name pos:line="44" pos:column="28">cpy_unicode_or_bytes_to_string<pos:position pos:line="44" pos:column="58"/></name><argument_list pos:line="44" pos:column="58">(<argument><expr><operator pos:line="44" pos:column="59">&amp;<pos:position pos:line="44" pos:column="64"/></operator><name pos:line="44" pos:column="60">line<pos:position pos:line="44" pos:column="64"/></name></expr></argument>)<pos:position pos:line="44" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="67"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="45" pos:column="17">Py_DECREF<pos:position pos:line="45" pos:column="26"/></name><argument_list pos:line="45" pos:column="26">(<argument><expr><name pos:line="45" pos:column="27">line<pos:position pos:line="45" pos:column="31"/></name></expr></argument>)<pos:position pos:line="45" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="33"/></expr_stmt>
		<if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><name><name pos:line="46" pos:column="21">s<pos:position pos:line="46" pos:column="22"/></name><index pos:line="46" pos:column="22">[<expr><call><name pos:line="46" pos:column="23">strlen<pos:position pos:line="46" pos:column="29"/></name><argument_list pos:line="46" pos:column="29">(<argument><expr><name pos:line="46" pos:column="30">s<pos:position pos:line="46" pos:column="31"/></name></expr></argument>)<pos:position pos:line="46" pos:column="32"/></argument_list></call> <operator pos:line="46" pos:column="33">-<pos:position pos:line="46" pos:column="34"/></operator> <literal type="number" pos:line="46" pos:column="35">1<pos:position pos:line="46" pos:column="36"/></literal></expr>]<pos:position pos:line="46" pos:column="37"/></index></name> <operator pos:line="46" pos:column="38">==<pos:position pos:line="46" pos:column="40"/></operator> <literal type="char" pos:line="46" pos:column="41">'\n'<pos:position pos:line="46" pos:column="45"/></literal></expr>)<pos:position pos:line="46" pos:column="46"/></condition><then pos:line="46" pos:column="46">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="47" pos:column="25">s<pos:position pos:line="47" pos:column="26"/></name><index pos:line="47" pos:column="26">[<expr><call><name pos:line="47" pos:column="27">strlen<pos:position pos:line="47" pos:column="33"/></name><argument_list pos:line="47" pos:column="33">(<argument><expr><name pos:line="47" pos:column="34">s<pos:position pos:line="47" pos:column="35"/></name></expr></argument>)<pos:position pos:line="47" pos:column="36"/></argument_list></call> <operator pos:line="47" pos:column="37">-<pos:position pos:line="47" pos:column="38"/></operator> <literal type="number" pos:line="47" pos:column="39">1<pos:position pos:line="47" pos:column="40"/></literal></expr>]<pos:position pos:line="47" pos:column="41"/></index></name> <operator pos:line="47" pos:column="42">=<pos:position pos:line="47" pos:column="43"/></operator> <literal type="number" pos:line="47" pos:column="44">0<pos:position pos:line="47" pos:column="45"/></literal></expr>;<pos:position pos:line="47" pos:column="46"/></expr_stmt></block></then></if>
		<decl_stmt><decl><type><name pos:line="48" pos:column="17">Py_BEGIN_ALLOW_THREADS<pos:position pos:line="48" pos:column="39"/></name></type>
		<name pos:line="49" pos:column="17">ERROR<pos:position pos:line="49" pos:column="22"/></name><argument_list pos:line="49" pos:column="22">(<argument><expr><literal type="string" pos:line="49" pos:column="23">"%s"<pos:position pos:line="49" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="29">s<pos:position pos:line="49" pos:column="30"/></name></expr></argument>)<pos:position pos:line="49" pos:column="31"/></argument_list></decl>;<pos:position pos:line="49" pos:column="32"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="50" pos:column="17">Py_END_ALLOW_THREADS<pos:position pos:line="50" pos:column="37"/></name></type>
		<name pos:line="51" pos:column="17">free<pos:position pos:line="51" pos:column="21"/></name><argument_list pos:line="51" pos:column="21">(<argument><expr><name pos:line="51" pos:column="22">s<pos:position pos:line="51" pos:column="23"/></name></expr></argument>)<pos:position pos:line="51" pos:column="24"/></argument_list></decl>;<pos:position pos:line="51" pos:column="25"/></decl_stmt>
	}<pos:position pos:line="52" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="53" pos:column="9">Py_XDECREF<pos:position pos:line="53" pos:column="19"/></name><argument_list pos:line="53" pos:column="19">(<argument><expr><name pos:line="53" pos:column="20">list<pos:position pos:line="53" pos:column="24"/></name></expr></argument>)<pos:position pos:line="53" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="54" pos:column="9">PyErr_Clear<pos:position pos:line="54" pos:column="20"/></name><argument_list pos:line="54" pos:column="20">()<pos:position pos:line="54" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="23"/></expr_stmt>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

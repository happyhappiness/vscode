<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_887_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">bind_config_add_view<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">oconfig_item_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">ci<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list> <comment type="block" pos:line="1" pos:column="53">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">cb_view_t<pos:position pos:line="3" pos:column="12"/></name> <modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier></type><name pos:line="3" pos:column="14">tmp<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><operator pos:line="5" pos:column="7">(<pos:position pos:line="5" pos:column="8"/></operator><name><name pos:line="5" pos:column="8">ci<pos:position pos:line="5" pos:column="10"/></name><operator pos:line="5" pos:column="10">-&gt;<pos:position pos:line="5" pos:column="15"/></operator><name pos:line="5" pos:column="12">values_num<pos:position pos:line="5" pos:column="22"/></name></name> <operator pos:line="5" pos:column="23">!=<pos:position pos:line="5" pos:column="25"/></operator> <literal type="number" pos:line="5" pos:column="26">1<pos:position pos:line="5" pos:column="27"/></literal><operator pos:line="5" pos:column="27">)<pos:position pos:line="5" pos:column="28"/></operator> <operator pos:line="5" pos:column="29">||<pos:position pos:line="5" pos:column="31"/></operator> <operator pos:line="5" pos:column="32">(<pos:position pos:line="5" pos:column="33"/></operator><name><name pos:line="5" pos:column="33">ci<pos:position pos:line="5" pos:column="35"/></name><operator pos:line="5" pos:column="35">-&gt;<pos:position pos:line="5" pos:column="40"/></operator><name pos:line="5" pos:column="37">values<pos:position pos:line="5" pos:column="43"/></name><index pos:line="5" pos:column="43">[<expr><literal type="number" pos:line="5" pos:column="44">0<pos:position pos:line="5" pos:column="45"/></literal></expr>]<pos:position pos:line="5" pos:column="46"/></index></name><operator pos:line="5" pos:column="46">.<pos:position pos:line="5" pos:column="47"/></operator><name pos:line="5" pos:column="47">type<pos:position pos:line="5" pos:column="51"/></name> <operator pos:line="5" pos:column="52">!=<pos:position pos:line="5" pos:column="54"/></operator> <name pos:line="5" pos:column="55">OCONFIG_TYPE_STRING<pos:position pos:line="5" pos:column="74"/></name><operator pos:line="5" pos:column="74">)<pos:position pos:line="5" pos:column="75"/></operator></expr>)<pos:position pos:line="5" pos:column="76"/></condition><then pos:line="5" pos:column="76"> <block pos:line="5" pos:column="77">{
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">WARNING<pos:position pos:line="6" pos:column="12"/></name><argument_list pos:line="6" pos:column="12">(<argument><expr><literal type="string" pos:line="6" pos:column="13">"bind plugin: `View' blocks need exactly one string argument."<pos:position pos:line="6" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="77"/></expr_stmt>
    <return pos:line="7" pos:column="5">return <expr><operator pos:line="7" pos:column="12">(<pos:position pos:line="7" pos:column="13"/></operator><operator pos:line="7" pos:column="13">-<pos:position pos:line="7" pos:column="14"/></operator><literal type="number" pos:line="7" pos:column="14">1<pos:position pos:line="7" pos:column="15"/></literal><operator pos:line="7" pos:column="15">)<pos:position pos:line="7" pos:column="16"/></operator></expr>;<pos:position pos:line="7" pos:column="17"/></return>
  }<pos:position pos:line="8" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="10" pos:column="3">tmp<pos:position pos:line="10" pos:column="6"/></name> <operator pos:line="10" pos:column="7">=<pos:position pos:line="10" pos:column="8"/></operator> <call><name pos:line="10" pos:column="9">realloc<pos:position pos:line="10" pos:column="16"/></name><argument_list pos:line="10" pos:column="16">(<argument><expr><name pos:line="10" pos:column="17">views<pos:position pos:line="10" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="24">sizeof<argument_list pos:line="10" pos:column="30">(<argument><expr><operator pos:line="10" pos:column="31">*<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="32">views<pos:position pos:line="10" pos:column="37"/></name></expr></argument>)<pos:position pos:line="10" pos:column="38"/></argument_list></sizeof> <operator pos:line="10" pos:column="39">*<pos:position pos:line="10" pos:column="40"/></operator> <operator pos:line="10" pos:column="41">(<pos:position pos:line="10" pos:column="42"/></operator><name pos:line="10" pos:column="42">views_num<pos:position pos:line="10" pos:column="51"/></name> <operator pos:line="10" pos:column="52">+<pos:position pos:line="10" pos:column="53"/></operator> <literal type="number" pos:line="10" pos:column="54">1<pos:position pos:line="10" pos:column="55"/></literal><operator pos:line="10" pos:column="55">)<pos:position pos:line="10" pos:column="56"/></operator></expr></argument>)<pos:position pos:line="10" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="58"/></expr_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">tmp<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">==<pos:position pos:line="11" pos:column="13"/></operator> <name pos:line="11" pos:column="14">NULL<pos:position pos:line="11" pos:column="18"/></name></expr>)<pos:position pos:line="11" pos:column="19"/></condition><then pos:line="11" pos:column="19"> <block pos:line="11" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">ERROR<pos:position pos:line="12" pos:column="10"/></name><argument_list pos:line="12" pos:column="10">(<argument><expr><literal type="string" pos:line="12" pos:column="11">"bind plugin: realloc failed."<pos:position pos:line="12" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="43"/></expr_stmt>
    <return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">(<pos:position pos:line="13" pos:column="13"/></operator><operator pos:line="13" pos:column="13">-<pos:position pos:line="13" pos:column="14"/></operator><literal type="number" pos:line="13" pos:column="14">1<pos:position pos:line="13" pos:column="15"/></literal><operator pos:line="13" pos:column="15">)<pos:position pos:line="13" pos:column="16"/></operator></expr>;<pos:position pos:line="13" pos:column="17"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="15" pos:column="3">views<pos:position pos:line="15" pos:column="8"/></name> <operator pos:line="15" pos:column="9">=<pos:position pos:line="15" pos:column="10"/></operator> <name pos:line="15" pos:column="11">tmp<pos:position pos:line="15" pos:column="14"/></name></expr>;<pos:position pos:line="15" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><name pos:line="16" pos:column="3">tmp<pos:position pos:line="16" pos:column="6"/></name> <operator pos:line="16" pos:column="7">=<pos:position pos:line="16" pos:column="8"/></operator> <name pos:line="16" pos:column="9">views<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">+<pos:position pos:line="16" pos:column="16"/></operator> <name pos:line="16" pos:column="17">views_num<pos:position pos:line="16" pos:column="26"/></name></expr>;<pos:position pos:line="16" pos:column="27"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="18" pos:column="3">memset<pos:position pos:line="18" pos:column="9"/></name><argument_list pos:line="18" pos:column="9">(<argument><expr><name pos:line="18" pos:column="10">tmp<pos:position pos:line="18" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="15">0<pos:position pos:line="18" pos:column="16"/></literal></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="18">sizeof<argument_list pos:line="18" pos:column="24">(<argument><expr><operator pos:line="18" pos:column="25">*<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="26">tmp<pos:position pos:line="18" pos:column="29"/></name></expr></argument>)<pos:position pos:line="18" pos:column="30"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="19" pos:column="3">tmp<pos:position pos:line="19" pos:column="6"/></name><operator pos:line="19" pos:column="6">-&gt;<pos:position pos:line="19" pos:column="11"/></operator><name pos:line="19" pos:column="8">qtypes<pos:position pos:line="19" pos:column="14"/></name></name> <operator pos:line="19" pos:column="15">=<pos:position pos:line="19" pos:column="16"/></operator> <literal type="number" pos:line="19" pos:column="17">1<pos:position pos:line="19" pos:column="18"/></literal></expr>;<pos:position pos:line="19" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="20" pos:column="3">tmp<pos:position pos:line="20" pos:column="6"/></name><operator pos:line="20" pos:column="6">-&gt;<pos:position pos:line="20" pos:column="11"/></operator><name pos:line="20" pos:column="8">resolver_stats<pos:position pos:line="20" pos:column="22"/></name></name> <operator pos:line="20" pos:column="23">=<pos:position pos:line="20" pos:column="24"/></operator> <literal type="number" pos:line="20" pos:column="25">1<pos:position pos:line="20" pos:column="26"/></literal></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="21" pos:column="3">tmp<pos:position pos:line="21" pos:column="6"/></name><operator pos:line="21" pos:column="6">-&gt;<pos:position pos:line="21" pos:column="11"/></operator><name pos:line="21" pos:column="8">cacherrsets<pos:position pos:line="21" pos:column="19"/></name></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <literal type="number" pos:line="21" pos:column="22">1<pos:position pos:line="21" pos:column="23"/></literal></expr>;<pos:position pos:line="21" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="22" pos:column="3">tmp<pos:position pos:line="22" pos:column="6"/></name><operator pos:line="22" pos:column="6">-&gt;<pos:position pos:line="22" pos:column="11"/></operator><name pos:line="22" pos:column="8">zones<pos:position pos:line="22" pos:column="13"/></name></name> <operator pos:line="22" pos:column="14">=<pos:position pos:line="22" pos:column="15"/></operator> <name pos:line="22" pos:column="16">NULL<pos:position pos:line="22" pos:column="20"/></name></expr>;<pos:position pos:line="22" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="23" pos:column="3">tmp<pos:position pos:line="23" pos:column="6"/></name><operator pos:line="23" pos:column="6">-&gt;<pos:position pos:line="23" pos:column="11"/></operator><name pos:line="23" pos:column="8">zones_num<pos:position pos:line="23" pos:column="17"/></name></name> <operator pos:line="23" pos:column="18">=<pos:position pos:line="23" pos:column="19"/></operator> <literal type="number" pos:line="23" pos:column="20">0<pos:position pos:line="23" pos:column="21"/></literal></expr>;<pos:position pos:line="23" pos:column="22"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="25" pos:column="3">tmp<pos:position pos:line="25" pos:column="6"/></name><operator pos:line="25" pos:column="6">-&gt;<pos:position pos:line="25" pos:column="11"/></operator><name pos:line="25" pos:column="8">name<pos:position pos:line="25" pos:column="12"/></name></name> <operator pos:line="25" pos:column="13">=<pos:position pos:line="25" pos:column="14"/></operator> <call><name pos:line="25" pos:column="15">strdup<pos:position pos:line="25" pos:column="21"/></name><argument_list pos:line="25" pos:column="21">(<argument><expr><name><name pos:line="25" pos:column="22">ci<pos:position pos:line="25" pos:column="24"/></name><operator pos:line="25" pos:column="24">-&gt;<pos:position pos:line="25" pos:column="29"/></operator><name pos:line="25" pos:column="26">values<pos:position pos:line="25" pos:column="32"/></name><index pos:line="25" pos:column="32">[<expr><literal type="number" pos:line="25" pos:column="33">0<pos:position pos:line="25" pos:column="34"/></literal></expr>]<pos:position pos:line="25" pos:column="35"/></index></name><operator pos:line="25" pos:column="35">.<pos:position pos:line="25" pos:column="36"/></operator><name><name pos:line="25" pos:column="36">value<pos:position pos:line="25" pos:column="41"/></name><operator pos:line="25" pos:column="41">.<pos:position pos:line="25" pos:column="42"/></operator><name pos:line="25" pos:column="42">string<pos:position pos:line="25" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="50"/></expr_stmt>
  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><name><name pos:line="26" pos:column="7">tmp<pos:position pos:line="26" pos:column="10"/></name><operator pos:line="26" pos:column="10">-&gt;<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="12">name<pos:position pos:line="26" pos:column="16"/></name></name> <operator pos:line="26" pos:column="17">==<pos:position pos:line="26" pos:column="19"/></operator> <name pos:line="26" pos:column="20">NULL<pos:position pos:line="26" pos:column="24"/></name></expr>)<pos:position pos:line="26" pos:column="25"/></condition><then pos:line="26" pos:column="25"> <block pos:line="26" pos:column="26">{
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">ERROR<pos:position pos:line="27" pos:column="10"/></name><argument_list pos:line="27" pos:column="10">(<argument><expr><literal type="string" pos:line="27" pos:column="11">"bind plugin: strdup failed."<pos:position pos:line="27" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">sfree<pos:position pos:line="28" pos:column="10"/></name><argument_list pos:line="28" pos:column="10">(<argument><expr><name pos:line="28" pos:column="11">views<pos:position pos:line="28" pos:column="16"/></name></expr></argument>)<pos:position pos:line="28" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="18"/></expr_stmt>
    <return pos:line="29" pos:column="5">return <expr><operator pos:line="29" pos:column="12">(<pos:position pos:line="29" pos:column="13"/></operator><operator pos:line="29" pos:column="13">-<pos:position pos:line="29" pos:column="14"/></operator><literal type="number" pos:line="29" pos:column="14">1<pos:position pos:line="29" pos:column="15"/></literal><operator pos:line="29" pos:column="15">)<pos:position pos:line="29" pos:column="16"/></operator></expr>;<pos:position pos:line="29" pos:column="17"/></return>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>

  <for pos:line="32" pos:column="3">for <control pos:line="32" pos:column="7">(<init><decl><type><name pos:line="32" pos:column="8">int<pos:position pos:line="32" pos:column="11"/></name></type> <name pos:line="32" pos:column="12">i<pos:position pos:line="32" pos:column="13"/></name> <init pos:line="32" pos:column="14">= <expr><literal type="number" pos:line="32" pos:column="16">0<pos:position pos:line="32" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="32" pos:column="18"/></init> <condition><expr><name pos:line="32" pos:column="19">i<pos:position pos:line="32" pos:column="20"/></name> <operator pos:line="32" pos:column="21">&lt;<pos:position pos:line="32" pos:column="25"/></operator> <name><name pos:line="32" pos:column="23">ci<pos:position pos:line="32" pos:column="25"/></name><operator pos:line="32" pos:column="25">-&gt;<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="27">children_num<pos:position pos:line="32" pos:column="39"/></name></name></expr>;<pos:position pos:line="32" pos:column="40"/></condition> <incr><expr><name pos:line="32" pos:column="41">i<pos:position pos:line="32" pos:column="42"/></name><operator pos:line="32" pos:column="42">++<pos:position pos:line="32" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="32" pos:column="45"/></control> <block pos:line="32" pos:column="46">{
    <decl_stmt><decl><type><name pos:line="33" pos:column="5">oconfig_item_t<pos:position pos:line="33" pos:column="19"/></name> <modifier pos:line="33" pos:column="20">*<pos:position pos:line="33" pos:column="21"/></modifier></type><name pos:line="33" pos:column="21">child<pos:position pos:line="33" pos:column="26"/></name> <init pos:line="33" pos:column="27">= <expr><name><name pos:line="33" pos:column="29">ci<pos:position pos:line="33" pos:column="31"/></name><operator pos:line="33" pos:column="31">-&gt;<pos:position pos:line="33" pos:column="36"/></operator><name pos:line="33" pos:column="33">children<pos:position pos:line="33" pos:column="41"/></name></name> <operator pos:line="33" pos:column="42">+<pos:position pos:line="33" pos:column="43"/></operator> <name pos:line="33" pos:column="44">i<pos:position pos:line="33" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="33" pos:column="46"/></decl_stmt>

    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><call><name pos:line="35" pos:column="9">strcasecmp<pos:position pos:line="35" pos:column="19"/></name><argument_list pos:line="35" pos:column="19">(<argument><expr><literal type="string" pos:line="35" pos:column="20">"QTypes"<pos:position pos:line="35" pos:column="28"/></literal></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="30">child<pos:position pos:line="35" pos:column="35"/></name><operator pos:line="35" pos:column="35">-&gt;<pos:position pos:line="35" pos:column="40"/></operator><name pos:line="35" pos:column="37">key<pos:position pos:line="35" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="41"/></argument_list></call> <operator pos:line="35" pos:column="42">==<pos:position pos:line="35" pos:column="44"/></operator> <literal type="number" pos:line="35" pos:column="45">0<pos:position pos:line="35" pos:column="46"/></literal></expr>)<pos:position pos:line="35" pos:column="47"/></condition><then pos:line="35" pos:column="47">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="7">bind_config_set_bool<pos:position pos:line="36" pos:column="27"/></name><argument_list pos:line="36" pos:column="27">(<argument><expr><literal type="string" pos:line="36" pos:column="28">"QTypes"<pos:position pos:line="36" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="36" pos:column="38">&amp;<pos:position pos:line="36" pos:column="43"/></operator><name><name pos:line="36" pos:column="39">tmp<pos:position pos:line="36" pos:column="42"/></name><operator pos:line="36" pos:column="42">-&gt;<pos:position pos:line="36" pos:column="47"/></operator><name pos:line="36" pos:column="44">qtypes<pos:position pos:line="36" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="52">child<pos:position pos:line="36" pos:column="57"/></name></expr></argument>)<pos:position pos:line="36" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="59"/></expr_stmt></block></then>
    <elseif pos:line="37" pos:column="5">else <if pos:line="37" pos:column="10">if <condition pos:line="37" pos:column="13">(<expr><call><name pos:line="37" pos:column="14">strcasecmp<pos:position pos:line="37" pos:column="24"/></name><argument_list pos:line="37" pos:column="24">(<argument><expr><literal type="string" pos:line="37" pos:column="25">"ResolverStats"<pos:position pos:line="37" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="42">child<pos:position pos:line="37" pos:column="47"/></name><operator pos:line="37" pos:column="47">-&gt;<pos:position pos:line="37" pos:column="52"/></operator><name pos:line="37" pos:column="49">key<pos:position pos:line="37" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="53"/></argument_list></call> <operator pos:line="37" pos:column="54">==<pos:position pos:line="37" pos:column="56"/></operator> <literal type="number" pos:line="37" pos:column="57">0<pos:position pos:line="37" pos:column="58"/></literal></expr>)<pos:position pos:line="37" pos:column="59"/></condition><then pos:line="37" pos:column="59">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="7">bind_config_set_bool<pos:position pos:line="38" pos:column="27"/></name><argument_list pos:line="38" pos:column="27">(<argument><expr><literal type="string" pos:line="38" pos:column="28">"ResolverStats"<pos:position pos:line="38" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="38" pos:column="45">&amp;<pos:position pos:line="38" pos:column="50"/></operator><name><name pos:line="38" pos:column="46">tmp<pos:position pos:line="38" pos:column="49"/></name><operator pos:line="38" pos:column="49">-&gt;<pos:position pos:line="38" pos:column="54"/></operator><name pos:line="38" pos:column="51">resolver_stats<pos:position pos:line="38" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="67">child<pos:position pos:line="38" pos:column="72"/></name></expr></argument>)<pos:position pos:line="38" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="74"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="39" pos:column="5">else <if pos:line="39" pos:column="10">if <condition pos:line="39" pos:column="13">(<expr><call><name pos:line="39" pos:column="14">strcasecmp<pos:position pos:line="39" pos:column="24"/></name><argument_list pos:line="39" pos:column="24">(<argument><expr><literal type="string" pos:line="39" pos:column="25">"CacheRRSets"<pos:position pos:line="39" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="40">child<pos:position pos:line="39" pos:column="45"/></name><operator pos:line="39" pos:column="45">-&gt;<pos:position pos:line="39" pos:column="50"/></operator><name pos:line="39" pos:column="47">key<pos:position pos:line="39" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="51"/></argument_list></call> <operator pos:line="39" pos:column="52">==<pos:position pos:line="39" pos:column="54"/></operator> <literal type="number" pos:line="39" pos:column="55">0<pos:position pos:line="39" pos:column="56"/></literal></expr>)<pos:position pos:line="39" pos:column="57"/></condition><then pos:line="39" pos:column="57">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="7">bind_config_set_bool<pos:position pos:line="40" pos:column="27"/></name><argument_list pos:line="40" pos:column="27">(<argument><expr><literal type="string" pos:line="40" pos:column="28">"CacheRRSets"<pos:position pos:line="40" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="40" pos:column="43">&amp;<pos:position pos:line="40" pos:column="48"/></operator><name><name pos:line="40" pos:column="44">tmp<pos:position pos:line="40" pos:column="47"/></name><operator pos:line="40" pos:column="47">-&gt;<pos:position pos:line="40" pos:column="52"/></operator><name pos:line="40" pos:column="49">cacherrsets<pos:position pos:line="40" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="62">child<pos:position pos:line="40" pos:column="67"/></name></expr></argument>)<pos:position pos:line="40" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="69"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="41" pos:column="5">else <if pos:line="41" pos:column="10">if <condition pos:line="41" pos:column="13">(<expr><call><name pos:line="41" pos:column="14">strcasecmp<pos:position pos:line="41" pos:column="24"/></name><argument_list pos:line="41" pos:column="24">(<argument><expr><literal type="string" pos:line="41" pos:column="25">"Zone"<pos:position pos:line="41" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="33">child<pos:position pos:line="41" pos:column="38"/></name><operator pos:line="41" pos:column="38">-&gt;<pos:position pos:line="41" pos:column="43"/></operator><name pos:line="41" pos:column="40">key<pos:position pos:line="41" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="44"/></argument_list></call> <operator pos:line="41" pos:column="45">==<pos:position pos:line="41" pos:column="47"/></operator> <literal type="number" pos:line="41" pos:column="48">0<pos:position pos:line="41" pos:column="49"/></literal></expr>)<pos:position pos:line="41" pos:column="50"/></condition><then pos:line="41" pos:column="50">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="7">bind_config_add_view_zone<pos:position pos:line="42" pos:column="32"/></name><argument_list pos:line="42" pos:column="32">(<argument><expr><name pos:line="42" pos:column="33">tmp<pos:position pos:line="42" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="38">child<pos:position pos:line="42" pos:column="43"/></name></expr></argument>)<pos:position pos:line="42" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="45"/></expr_stmt></block></then></if></elseif>
    <else pos:line="43" pos:column="5">else <block pos:line="43" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="44" pos:column="7">WARNING<pos:position pos:line="44" pos:column="14"/></name><argument_list pos:line="44" pos:column="14">(<argument><expr><literal type="string" pos:line="44" pos:column="15">"bind plugin: Unknown configuration option "<pos:position pos:line="44" pos:column="59"/></literal>
              <literal type="string" pos:line="45" pos:column="15">"`%s' in view `%s' will be ignored."<pos:position pos:line="45" pos:column="51"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="46" pos:column="15">child<pos:position pos:line="46" pos:column="20"/></name><operator pos:line="46" pos:column="20">-&gt;<pos:position pos:line="46" pos:column="25"/></operator><name pos:line="46" pos:column="22">key<pos:position pos:line="46" pos:column="25"/></name></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="27">tmp<pos:position pos:line="46" pos:column="30"/></name><operator pos:line="46" pos:column="30">-&gt;<pos:position pos:line="46" pos:column="35"/></operator><name pos:line="46" pos:column="32">name<pos:position pos:line="46" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="47" pos:column="6"/></block></else></if>
  }<pos:position pos:line="48" pos:column="4"/></block></for> <comment type="block" pos:line="48" pos:column="5">/* for (i = 0; i &lt; ci-&gt;children_num; i++) */</comment>

  <expr_stmt><expr><name pos:line="50" pos:column="3">views_num<pos:position pos:line="50" pos:column="12"/></name><operator pos:line="50" pos:column="12">++<pos:position pos:line="50" pos:column="14"/></operator></expr>;<pos:position pos:line="50" pos:column="15"/></expr_stmt>
  <return pos:line="51" pos:column="3">return <expr><operator pos:line="51" pos:column="10">(<pos:position pos:line="51" pos:column="11"/></operator><literal type="number" pos:line="51" pos:column="11">0<pos:position pos:line="51" pos:column="12"/></literal><operator pos:line="51" pos:column="12">)<pos:position pos:line="51" pos:column="13"/></operator></expr>;<pos:position pos:line="51" pos:column="14"/></return>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_205_collectd-5.6.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">format_graphite<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">char<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">buffer<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="35">size_t<pos:position pos:line="1" pos:column="41"/></name></type> <name pos:line="1" pos:column="42">buffer_size<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">data_set_t<pos:position pos:line="1" pos:column="65"/></name> <specifier pos:line="1" pos:column="66">const<pos:position pos:line="1" pos:column="71"/></specifier> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">ds<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>,
                    <parameter><decl><type><name pos:line="2" pos:column="21">value_list_t<pos:position pos:line="2" pos:column="33"/></name> <specifier pos:line="2" pos:column="34">const<pos:position pos:line="2" pos:column="39"/></specifier> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">vl<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">char<pos:position pos:line="2" pos:column="49"/></name> <specifier pos:line="2" pos:column="50">const<pos:position pos:line="2" pos:column="55"/></specifier> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">prefix<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>,
                    <parameter><decl><type><name pos:line="3" pos:column="21">char<pos:position pos:line="3" pos:column="25"/></name> <specifier pos:line="3" pos:column="26">const<pos:position pos:line="3" pos:column="31"/></specifier> <modifier pos:line="3" pos:column="32">*<pos:position pos:line="3" pos:column="33"/></modifier></type><name pos:line="3" pos:column="33">postfix<pos:position pos:line="3" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="42">char<pos:position pos:line="3" pos:column="46"/></name> <specifier pos:line="3" pos:column="47">const<pos:position pos:line="3" pos:column="52"/></specifier></type> <name pos:line="3" pos:column="53">escape_char<pos:position pos:line="3" pos:column="64"/></name></decl></parameter>,
                    <parameter><decl><type><name pos:line="4" pos:column="21">unsigned<pos:position pos:line="4" pos:column="29"/></name> <name pos:line="4" pos:column="30">int<pos:position pos:line="4" pos:column="33"/></name></type> <name pos:line="4" pos:column="34">flags<pos:position pos:line="4" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="40"/></parameter_list> <block pos:line="4" pos:column="41">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">status<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><literal type="number" pos:line="5" pos:column="16">0<pos:position pos:line="5" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">buffer_pos<pos:position pos:line="6" pos:column="17"/></name> <init pos:line="6" pos:column="18">= <expr><literal type="number" pos:line="6" pos:column="20">0<pos:position pos:line="6" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="8" pos:column="3">gauge_t<pos:position pos:line="8" pos:column="10"/></name> <modifier pos:line="8" pos:column="11">*<pos:position pos:line="8" pos:column="12"/></modifier></type><name pos:line="8" pos:column="12">rates<pos:position pos:line="8" pos:column="17"/></name> <init pos:line="8" pos:column="18">= <expr><name pos:line="8" pos:column="20">NULL<pos:position pos:line="8" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">flags<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">&amp;<pos:position pos:line="9" pos:column="18"/></operator> <name pos:line="9" pos:column="15">GRAPHITE_STORE_RATES<pos:position pos:line="9" pos:column="35"/></name></expr>)<pos:position pos:line="9" pos:column="36"/></condition><then pos:line="9" pos:column="36"> <block pos:line="9" pos:column="37">{
    <expr_stmt><expr><name pos:line="10" pos:column="5">rates<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <call><name pos:line="10" pos:column="13">uc_get_rate<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">(<argument><expr><name pos:line="10" pos:column="25">ds<pos:position pos:line="10" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="29">vl<pos:position pos:line="10" pos:column="31"/></name></expr></argument>)<pos:position pos:line="10" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="33"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">rates<pos:position pos:line="11" pos:column="14"/></name> <operator pos:line="11" pos:column="15">==<pos:position pos:line="11" pos:column="17"/></operator> <name pos:line="11" pos:column="18">NULL<pos:position pos:line="11" pos:column="22"/></name></expr>)<pos:position pos:line="11" pos:column="23"/></condition><then pos:line="11" pos:column="23"> <block pos:line="11" pos:column="24">{
      <expr_stmt><expr><call><name pos:line="12" pos:column="7">ERROR<pos:position pos:line="12" pos:column="12"/></name><argument_list pos:line="12" pos:column="12">(<argument><expr><literal type="string" pos:line="12" pos:column="13">"format_graphite: error with uc_get_rate"<pos:position pos:line="12" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="56"/></expr_stmt>
      <return pos:line="13" pos:column="7">return <expr><operator pos:line="13" pos:column="14">-<pos:position pos:line="13" pos:column="15"/></operator><literal type="number" pos:line="13" pos:column="15">1<pos:position pos:line="13" pos:column="16"/></literal></expr>;<pos:position pos:line="13" pos:column="17"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <for pos:line="17" pos:column="3">for <control pos:line="17" pos:column="7">(<init><decl><type><name pos:line="17" pos:column="8">size_t<pos:position pos:line="17" pos:column="14"/></name></type> <name pos:line="17" pos:column="15">i<pos:position pos:line="17" pos:column="16"/></name> <init pos:line="17" pos:column="17">= <expr><literal type="number" pos:line="17" pos:column="19">0<pos:position pos:line="17" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="21"/></init> <condition><expr><name pos:line="17" pos:column="22">i<pos:position pos:line="17" pos:column="23"/></name> <operator pos:line="17" pos:column="24">&lt;<pos:position pos:line="17" pos:column="28"/></operator> <name><name pos:line="17" pos:column="26">ds<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">-&gt;<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="30">ds_num<pos:position pos:line="17" pos:column="36"/></name></name></expr>;<pos:position pos:line="17" pos:column="37"/></condition> <incr><expr><name pos:line="17" pos:column="38">i<pos:position pos:line="17" pos:column="39"/></name><operator pos:line="17" pos:column="39">++<pos:position pos:line="17" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="17" pos:column="42"/></control> <block pos:line="17" pos:column="43">{
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">char<pos:position pos:line="18" pos:column="9"/></name> <specifier pos:line="18" pos:column="10">const<pos:position pos:line="18" pos:column="15"/></specifier> <modifier pos:line="18" pos:column="16">*<pos:position pos:line="18" pos:column="17"/></modifier></type><name pos:line="18" pos:column="17">ds_name<pos:position pos:line="18" pos:column="24"/></name> <init pos:line="18" pos:column="25">= <expr><name pos:line="18" pos:column="27">NULL<pos:position pos:line="18" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="18" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">char<pos:position pos:line="19" pos:column="9"/></name></type> <name><name pos:line="19" pos:column="10">key<pos:position pos:line="19" pos:column="13"/></name><index pos:line="19" pos:column="13">[<expr><literal type="number" pos:line="19" pos:column="14">10<pos:position pos:line="19" pos:column="16"/></literal> <operator pos:line="19" pos:column="17">*<pos:position pos:line="19" pos:column="18"/></operator> <name pos:line="19" pos:column="19">DATA_MAX_NAME_LEN<pos:position pos:line="19" pos:column="36"/></name></expr>]<pos:position pos:line="19" pos:column="37"/></index></name></decl>;<pos:position pos:line="19" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">char<pos:position pos:line="20" pos:column="9"/></name></type> <name><name pos:line="20" pos:column="10">values<pos:position pos:line="20" pos:column="16"/></name><index pos:line="20" pos:column="16">[<expr><literal type="number" pos:line="20" pos:column="17">512<pos:position pos:line="20" pos:column="20"/></literal></expr>]<pos:position pos:line="20" pos:column="21"/></index></name></decl>;<pos:position pos:line="20" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">size_t<pos:position pos:line="21" pos:column="11"/></name></type> <name pos:line="21" pos:column="12">message_len<pos:position pos:line="21" pos:column="23"/></name></decl>;<pos:position pos:line="21" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">char<pos:position pos:line="22" pos:column="9"/></name></type> <name><name pos:line="22" pos:column="10">message<pos:position pos:line="22" pos:column="17"/></name><index pos:line="22" pos:column="17">[<expr><literal type="number" pos:line="22" pos:column="18">1024<pos:position pos:line="22" pos:column="22"/></literal></expr>]<pos:position pos:line="22" pos:column="23"/></index></name></decl>;<pos:position pos:line="22" pos:column="24"/></decl_stmt>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><operator pos:line="24" pos:column="9">(<pos:position pos:line="24" pos:column="10"/></operator><name pos:line="24" pos:column="10">flags<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">&amp;<pos:position pos:line="24" pos:column="21"/></operator> <name pos:line="24" pos:column="18">GRAPHITE_ALWAYS_APPEND_DS<pos:position pos:line="24" pos:column="43"/></name><operator pos:line="24" pos:column="43">)<pos:position pos:line="24" pos:column="44"/></operator> <operator pos:line="24" pos:column="45">||<pos:position pos:line="24" pos:column="47"/></operator> <operator pos:line="24" pos:column="48">(<pos:position pos:line="24" pos:column="49"/></operator><name><name pos:line="24" pos:column="49">ds<pos:position pos:line="24" pos:column="51"/></name><operator pos:line="24" pos:column="51">-&gt;<pos:position pos:line="24" pos:column="56"/></operator><name pos:line="24" pos:column="53">ds_num<pos:position pos:line="24" pos:column="59"/></name></name> <operator pos:line="24" pos:column="60">&gt;<pos:position pos:line="24" pos:column="64"/></operator> <literal type="number" pos:line="24" pos:column="62">1<pos:position pos:line="24" pos:column="63"/></literal><operator pos:line="24" pos:column="63">)<pos:position pos:line="24" pos:column="64"/></operator></expr>)<pos:position pos:line="24" pos:column="65"/></condition><then pos:line="24" pos:column="65">
      <block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="7">ds_name<pos:position pos:line="25" pos:column="14"/></name> <operator pos:line="25" pos:column="15">=<pos:position pos:line="25" pos:column="16"/></operator> <name><name pos:line="25" pos:column="17">ds<pos:position pos:line="25" pos:column="19"/></name><operator pos:line="25" pos:column="19">-&gt;<pos:position pos:line="25" pos:column="24"/></operator><name pos:line="25" pos:column="21">ds<pos:position pos:line="25" pos:column="23"/></name><index pos:line="25" pos:column="23">[<expr><name pos:line="25" pos:column="24">i<pos:position pos:line="25" pos:column="25"/></name></expr>]<pos:position pos:line="25" pos:column="26"/></index></name><operator pos:line="25" pos:column="26">.<pos:position pos:line="25" pos:column="27"/></operator><name pos:line="25" pos:column="27">name<pos:position pos:line="25" pos:column="31"/></name></expr>;<pos:position pos:line="25" pos:column="32"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="27" pos:column="5">/* Copy the identifier to `key' and escape it. */</comment>
    <expr_stmt><expr><name pos:line="28" pos:column="5">status<pos:position pos:line="28" pos:column="11"/></name> <operator pos:line="28" pos:column="12">=<pos:position pos:line="28" pos:column="13"/></operator> <call><name pos:line="28" pos:column="14">gr_format_name<pos:position pos:line="28" pos:column="28"/></name><argument_list pos:line="28" pos:column="28">(<argument><expr><name pos:line="28" pos:column="29">key<pos:position pos:line="28" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="34">sizeof<argument_list pos:line="28" pos:column="40">(<argument><expr><name pos:line="28" pos:column="41">key<pos:position pos:line="28" pos:column="44"/></name></expr></argument>)<pos:position pos:line="28" pos:column="45"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="28" pos:column="47">vl<pos:position pos:line="28" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="51">ds_name<pos:position pos:line="28" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="60">prefix<pos:position pos:line="28" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="68">postfix<pos:position pos:line="28" pos:column="75"/></name></expr></argument>,
                            <argument><expr><name pos:line="29" pos:column="29">escape_char<pos:position pos:line="29" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="42">flags<pos:position pos:line="29" pos:column="47"/></name></expr></argument>)<pos:position pos:line="29" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="49"/></expr_stmt>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name pos:line="30" pos:column="9">status<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">!=<pos:position pos:line="30" pos:column="18"/></operator> <literal type="number" pos:line="30" pos:column="19">0<pos:position pos:line="30" pos:column="20"/></literal></expr>)<pos:position pos:line="30" pos:column="21"/></condition><then pos:line="30" pos:column="21"> <block pos:line="30" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="31" pos:column="7">ERROR<pos:position pos:line="31" pos:column="12"/></name><argument_list pos:line="31" pos:column="12">(<argument><expr><literal type="string" pos:line="31" pos:column="13">"format_graphite: error with gr_format_name"<pos:position pos:line="31" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="59"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="32" pos:column="7">sfree<pos:position pos:line="32" pos:column="12"/></name><argument_list pos:line="32" pos:column="12">(<argument><expr><name pos:line="32" pos:column="13">rates<pos:position pos:line="32" pos:column="18"/></name></expr></argument>)<pos:position pos:line="32" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="20"/></expr_stmt>
      <return pos:line="33" pos:column="7">return <expr><operator pos:line="33" pos:column="14">(<pos:position pos:line="33" pos:column="15"/></operator><name pos:line="33" pos:column="15">status<pos:position pos:line="33" pos:column="21"/></name><operator pos:line="33" pos:column="21">)<pos:position pos:line="33" pos:column="22"/></operator></expr>;<pos:position pos:line="33" pos:column="23"/></return>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="36" pos:column="5">escape_graphite_string<pos:position pos:line="36" pos:column="27"/></name><argument_list pos:line="36" pos:column="27">(<argument><expr><name pos:line="36" pos:column="28">key<pos:position pos:line="36" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="33">escape_char<pos:position pos:line="36" pos:column="44"/></name></expr></argument>)<pos:position pos:line="36" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="46"/></expr_stmt>
    <comment type="block" pos:line="37" pos:column="5">/* Convert the values to an ASCII representation and put that into
     * `values'. */</comment>
    <expr_stmt><expr><name pos:line="39" pos:column="5">status<pos:position pos:line="39" pos:column="11"/></name> <operator pos:line="39" pos:column="12">=<pos:position pos:line="39" pos:column="13"/></operator> <call><name pos:line="39" pos:column="14">gr_format_values<pos:position pos:line="39" pos:column="30"/></name><argument_list pos:line="39" pos:column="30">(<argument><expr><name pos:line="39" pos:column="31">values<pos:position pos:line="39" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="39" pos:column="39">sizeof<argument_list pos:line="39" pos:column="45">(<argument><expr><name pos:line="39" pos:column="46">values<pos:position pos:line="39" pos:column="52"/></name></expr></argument>)<pos:position pos:line="39" pos:column="53"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="39" pos:column="55">i<pos:position pos:line="39" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="58">ds<pos:position pos:line="39" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="62">vl<pos:position pos:line="39" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="66">rates<pos:position pos:line="39" pos:column="71"/></name></expr></argument>)<pos:position pos:line="39" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="73"/></expr_stmt>
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name pos:line="40" pos:column="9">status<pos:position pos:line="40" pos:column="15"/></name> <operator pos:line="40" pos:column="16">!=<pos:position pos:line="40" pos:column="18"/></operator> <literal type="number" pos:line="40" pos:column="19">0<pos:position pos:line="40" pos:column="20"/></literal></expr>)<pos:position pos:line="40" pos:column="21"/></condition><then pos:line="40" pos:column="21"> <block pos:line="40" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="41" pos:column="7">ERROR<pos:position pos:line="41" pos:column="12"/></name><argument_list pos:line="41" pos:column="12">(<argument><expr><literal type="string" pos:line="41" pos:column="13">"format_graphite: error with gr_format_values"<pos:position pos:line="41" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="61"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="42" pos:column="7">sfree<pos:position pos:line="42" pos:column="12"/></name><argument_list pos:line="42" pos:column="12">(<argument><expr><name pos:line="42" pos:column="13">rates<pos:position pos:line="42" pos:column="18"/></name></expr></argument>)<pos:position pos:line="42" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="20"/></expr_stmt>
      <return pos:line="43" pos:column="7">return <expr><operator pos:line="43" pos:column="14">(<pos:position pos:line="43" pos:column="15"/></operator><name pos:line="43" pos:column="15">status<pos:position pos:line="43" pos:column="21"/></name><operator pos:line="43" pos:column="21">)<pos:position pos:line="43" pos:column="22"/></operator></expr>;<pos:position pos:line="43" pos:column="23"/></return>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="46" pos:column="5">/* Compute the graphite command */</comment>
    <expr_stmt><expr><name pos:line="47" pos:column="5">message_len<pos:position pos:line="47" pos:column="16"/></name> <operator pos:line="47" pos:column="17">=<pos:position pos:line="47" pos:column="18"/></operator>
        <operator pos:line="48" pos:column="9">(<pos:position pos:line="48" pos:column="10"/></operator><name pos:line="48" pos:column="10">size_t<pos:position pos:line="48" pos:column="16"/></name><operator pos:line="48" pos:column="16">)<pos:position pos:line="48" pos:column="17"/></operator><call><name pos:line="48" pos:column="17">ssnprintf<pos:position pos:line="48" pos:column="26"/></name><argument_list pos:line="48" pos:column="26">(<argument><expr><name pos:line="48" pos:column="27">message<pos:position pos:line="48" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="48" pos:column="36">sizeof<argument_list pos:line="48" pos:column="42">(<argument><expr><name pos:line="48" pos:column="43">message<pos:position pos:line="48" pos:column="50"/></name></expr></argument>)<pos:position pos:line="48" pos:column="51"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="53">"%s %s %u\r\n"<pos:position pos:line="48" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="69">key<pos:position pos:line="48" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="74">values<pos:position pos:line="48" pos:column="80"/></name></expr></argument>,
                          <argument><expr><operator pos:line="49" pos:column="27">(<pos:position pos:line="49" pos:column="28"/></operator><name pos:line="49" pos:column="28">unsigned<pos:position pos:line="49" pos:column="36"/></name> <name pos:line="49" pos:column="37">int<pos:position pos:line="49" pos:column="40"/></name><operator pos:line="49" pos:column="40">)<pos:position pos:line="49" pos:column="41"/></operator><call><name pos:line="49" pos:column="41">CDTIME_T_TO_TIME_T<pos:position pos:line="49" pos:column="59"/></name><argument_list pos:line="49" pos:column="59">(<argument><expr><name><name pos:line="49" pos:column="60">vl<pos:position pos:line="49" pos:column="62"/></name><operator pos:line="49" pos:column="62">-&gt;<pos:position pos:line="49" pos:column="67"/></operator><name pos:line="49" pos:column="64">time<pos:position pos:line="49" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="49" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="71"/></expr_stmt>
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><name pos:line="50" pos:column="9">message_len<pos:position pos:line="50" pos:column="20"/></name> <operator pos:line="50" pos:column="21">&gt;=<pos:position pos:line="50" pos:column="26"/></operator> <sizeof pos:line="50" pos:column="24">sizeof<argument_list pos:line="50" pos:column="30">(<argument><expr><name pos:line="50" pos:column="31">message<pos:position pos:line="50" pos:column="38"/></name></expr></argument>)<pos:position pos:line="50" pos:column="39"/></argument_list></sizeof></expr>)<pos:position pos:line="50" pos:column="40"/></condition><then pos:line="50" pos:column="40"> <block pos:line="50" pos:column="41">{
      <expr_stmt><expr><call><name pos:line="51" pos:column="7">ERROR<pos:position pos:line="51" pos:column="12"/></name><argument_list pos:line="51" pos:column="12">(<argument><expr><literal type="string" pos:line="51" pos:column="13">"format_graphite: message buffer too small: "<pos:position pos:line="51" pos:column="58"/></literal>
            <literal type="string" pos:line="52" pos:column="13">"Need %zu bytes."<pos:position pos:line="52" pos:column="30"/></literal></expr></argument>,
            <argument><expr><name pos:line="53" pos:column="13">message_len<pos:position pos:line="53" pos:column="24"/></name> <operator pos:line="53" pos:column="25">+<pos:position pos:line="53" pos:column="26"/></operator> <literal type="number" pos:line="53" pos:column="27">1<pos:position pos:line="53" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="54" pos:column="7">sfree<pos:position pos:line="54" pos:column="12"/></name><argument_list pos:line="54" pos:column="12">(<argument><expr><name pos:line="54" pos:column="13">rates<pos:position pos:line="54" pos:column="18"/></name></expr></argument>)<pos:position pos:line="54" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="20"/></expr_stmt>
      <return pos:line="55" pos:column="7">return <expr><operator pos:line="55" pos:column="14">(<pos:position pos:line="55" pos:column="15"/></operator><operator pos:line="55" pos:column="15">-<pos:position pos:line="55" pos:column="16"/></operator><name pos:line="55" pos:column="16">ENOMEM<pos:position pos:line="55" pos:column="22"/></name><operator pos:line="55" pos:column="22">)<pos:position pos:line="55" pos:column="23"/></operator></expr>;<pos:position pos:line="55" pos:column="24"/></return>
    }<pos:position pos:line="56" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="58" pos:column="5">/* Append it in case we got multiple data set */</comment>
    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><operator pos:line="59" pos:column="9">(<pos:position pos:line="59" pos:column="10"/></operator><name pos:line="59" pos:column="10">buffer_pos<pos:position pos:line="59" pos:column="20"/></name> <operator pos:line="59" pos:column="21">+<pos:position pos:line="59" pos:column="22"/></operator> <name pos:line="59" pos:column="23">message_len<pos:position pos:line="59" pos:column="34"/></name><operator pos:line="59" pos:column="34">)<pos:position pos:line="59" pos:column="35"/></operator> <operator pos:line="59" pos:column="36">&gt;=<pos:position pos:line="59" pos:column="41"/></operator> <name pos:line="59" pos:column="39">buffer_size<pos:position pos:line="59" pos:column="50"/></name></expr>)<pos:position pos:line="59" pos:column="51"/></condition><then pos:line="59" pos:column="51"> <block pos:line="59" pos:column="52">{
      <expr_stmt><expr><call><name pos:line="60" pos:column="7">ERROR<pos:position pos:line="60" pos:column="12"/></name><argument_list pos:line="60" pos:column="12">(<argument><expr><literal type="string" pos:line="60" pos:column="13">"format_graphite: target buffer too small"<pos:position pos:line="60" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="57"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="61" pos:column="7">sfree<pos:position pos:line="61" pos:column="12"/></name><argument_list pos:line="61" pos:column="12">(<argument><expr><name pos:line="61" pos:column="13">rates<pos:position pos:line="61" pos:column="18"/></name></expr></argument>)<pos:position pos:line="61" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="20"/></expr_stmt>
      <return pos:line="62" pos:column="7">return <expr><operator pos:line="62" pos:column="14">(<pos:position pos:line="62" pos:column="15"/></operator><operator pos:line="62" pos:column="15">-<pos:position pos:line="62" pos:column="16"/></operator><name pos:line="62" pos:column="16">ENOMEM<pos:position pos:line="62" pos:column="22"/></name><operator pos:line="62" pos:column="22">)<pos:position pos:line="62" pos:column="23"/></operator></expr>;<pos:position pos:line="62" pos:column="24"/></return>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="64" pos:column="5">memcpy<pos:position pos:line="64" pos:column="11"/></name><argument_list pos:line="64" pos:column="11">(<argument><expr><operator pos:line="64" pos:column="12">(<pos:position pos:line="64" pos:column="13"/></operator><name pos:line="64" pos:column="13">void<pos:position pos:line="64" pos:column="17"/></name> <operator pos:line="64" pos:column="18">*<pos:position pos:line="64" pos:column="19"/></operator><operator pos:line="64" pos:column="19">)<pos:position pos:line="64" pos:column="20"/></operator><operator pos:line="64" pos:column="20">(<pos:position pos:line="64" pos:column="21"/></operator><name pos:line="64" pos:column="21">buffer<pos:position pos:line="64" pos:column="27"/></name> <operator pos:line="64" pos:column="28">+<pos:position pos:line="64" pos:column="29"/></operator> <name pos:line="64" pos:column="30">buffer_pos<pos:position pos:line="64" pos:column="40"/></name><operator pos:line="64" pos:column="40">)<pos:position pos:line="64" pos:column="41"/></operator></expr></argument>, <argument><expr><name pos:line="64" pos:column="43">message<pos:position pos:line="64" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="52">message_len<pos:position pos:line="64" pos:column="63"/></name></expr></argument>)<pos:position pos:line="64" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><name pos:line="65" pos:column="5">buffer_pos<pos:position pos:line="65" pos:column="15"/></name> <operator pos:line="65" pos:column="16">+=<pos:position pos:line="65" pos:column="18"/></operator> <name pos:line="65" pos:column="19">message_len<pos:position pos:line="65" pos:column="30"/></name></expr>;<pos:position pos:line="65" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="66" pos:column="5">buffer<pos:position pos:line="66" pos:column="11"/></name><index pos:line="66" pos:column="11">[<expr><name pos:line="66" pos:column="12">buffer_pos<pos:position pos:line="66" pos:column="22"/></name></expr>]<pos:position pos:line="66" pos:column="23"/></index></name> <operator pos:line="66" pos:column="24">=<pos:position pos:line="66" pos:column="25"/></operator> <literal type="char" pos:line="66" pos:column="26">'\0'<pos:position pos:line="66" pos:column="30"/></literal></expr>;<pos:position pos:line="66" pos:column="31"/></expr_stmt>
  }<pos:position pos:line="67" pos:column="4"/></block></for>
  <expr_stmt><expr><call><name pos:line="68" pos:column="3">sfree<pos:position pos:line="68" pos:column="8"/></name><argument_list pos:line="68" pos:column="8">(<argument><expr><name pos:line="68" pos:column="9">rates<pos:position pos:line="68" pos:column="14"/></name></expr></argument>)<pos:position pos:line="68" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="16"/></expr_stmt>
  <return pos:line="69" pos:column="3">return <expr><operator pos:line="69" pos:column="10">(<pos:position pos:line="69" pos:column="11"/></operator><name pos:line="69" pos:column="11">status<pos:position pos:line="69" pos:column="17"/></name><operator pos:line="69" pos:column="17">)<pos:position pos:line="69" pos:column="18"/></operator></expr>;<pos:position pos:line="69" pos:column="19"/></return>
}<pos:position pos:line="70" pos:column="2"/></block></function></unit>

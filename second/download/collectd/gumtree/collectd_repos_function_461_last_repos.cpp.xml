<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_461_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">ovs_stats_port_table_change_cb<pos:position pos:line="1" pos:column="43"/></name><parameter_list pos:line="1" pos:column="43">(<parameter><decl><type><name pos:line="1" pos:column="44">yajl_val<pos:position pos:line="1" pos:column="52"/></name></type> <name pos:line="1" pos:column="53">jupdates<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list> <block pos:line="1" pos:column="63">{
  <comment type="block" pos:line="2" pos:column="3">/* Port Table update example JSON data
    {
      "Port": {
        "ab107d6f-28a1-4257-b1cc-5b742821db8a": {
          "new": {
            "name": "br1",
            "interfaces": [
              "uuid",
              "33a289a0-1d34-4e46-a3c2-3e4066fbecc6"
            ]
          }
        }
      }
    }
   */</comment>
  <decl_stmt><decl><type><specifier pos:line="17" pos:column="3">const<pos:position pos:line="17" pos:column="8"/></specifier> <name pos:line="17" pos:column="9">char<pos:position pos:line="17" pos:column="13"/></name> <modifier pos:line="17" pos:column="14">*<pos:position pos:line="17" pos:column="15"/></modifier></type><name><name pos:line="17" pos:column="15">path<pos:position pos:line="17" pos:column="19"/></name><index pos:line="17" pos:column="19">[]<pos:position pos:line="17" pos:column="21"/></index></name> <init pos:line="17" pos:column="22">= <expr><block pos:line="17" pos:column="24">{<expr><literal type="string" pos:line="17" pos:column="25">"Port"<pos:position pos:line="17" pos:column="31"/></literal></expr>, <expr><name pos:line="17" pos:column="33">NULL<pos:position pos:line="17" pos:column="37"/></name></expr>}<pos:position pos:line="17" pos:column="38"/></block></expr></init></decl>;<pos:position pos:line="17" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">yajl_val<pos:position pos:line="18" pos:column="11"/></name></type> <name pos:line="18" pos:column="12">ports<pos:position pos:line="18" pos:column="17"/></name> <init pos:line="18" pos:column="18">= <expr><call><name pos:line="18" pos:column="20">yajl_tree_get<pos:position pos:line="18" pos:column="33"/></name><argument_list pos:line="18" pos:column="33">(<argument><expr><name pos:line="18" pos:column="34">jupdates<pos:position pos:line="18" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="44">path<pos:position pos:line="18" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="50">yajl_t_object<pos:position pos:line="18" pos:column="63"/></name></expr></argument>)<pos:position pos:line="18" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="65"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="19" pos:column="3">yajl_val<pos:position pos:line="19" pos:column="11"/></name></type> <name pos:line="19" pos:column="12">port<pos:position pos:line="19" pos:column="16"/></name></decl>;<pos:position pos:line="19" pos:column="17"/></decl_stmt>
  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><name pos:line="20" pos:column="7">ports<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">&amp;&amp;<pos:position pos:line="20" pos:column="23"/></operator> <call><name pos:line="20" pos:column="16">YAJL_IS_OBJECT<pos:position pos:line="20" pos:column="30"/></name><argument_list pos:line="20" pos:column="30">(<argument><expr><name pos:line="20" pos:column="31">ports<pos:position pos:line="20" pos:column="36"/></name></expr></argument>)<pos:position pos:line="20" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="38"/></condition><then pos:line="20" pos:column="38"> <block pos:line="20" pos:column="39">{
    <for pos:line="21" pos:column="5">for <control pos:line="21" pos:column="9">(<init><decl><type><name pos:line="21" pos:column="10">size_t<pos:position pos:line="21" pos:column="16"/></name></type> <name pos:line="21" pos:column="17">i<pos:position pos:line="21" pos:column="18"/></name> <init pos:line="21" pos:column="19">= <expr><literal type="number" pos:line="21" pos:column="21">0<pos:position pos:line="21" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="21" pos:column="23"/></init> <condition><expr><name pos:line="21" pos:column="24">i<pos:position pos:line="21" pos:column="25"/></name> <operator pos:line="21" pos:column="26">&lt;<pos:position pos:line="21" pos:column="30"/></operator> <call><name pos:line="21" pos:column="28">YAJL_GET_OBJECT<pos:position pos:line="21" pos:column="43"/></name><argument_list pos:line="21" pos:column="43">(<argument><expr><name pos:line="21" pos:column="44">ports<pos:position pos:line="21" pos:column="49"/></name></expr></argument>)<pos:position pos:line="21" pos:column="50"/></argument_list></call><operator pos:line="21" pos:column="50">-&gt;<pos:position pos:line="21" pos:column="55"/></operator><name pos:line="21" pos:column="52">len<pos:position pos:line="21" pos:column="55"/></name></expr>;<pos:position pos:line="21" pos:column="56"/></condition> <incr><expr><name pos:line="21" pos:column="57">i<pos:position pos:line="21" pos:column="58"/></name><operator pos:line="21" pos:column="58">++<pos:position pos:line="21" pos:column="60"/></operator></expr></incr>)<pos:position pos:line="21" pos:column="61"/></control> <block pos:line="21" pos:column="62">{
      <expr_stmt><expr><name pos:line="22" pos:column="7">port<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <call><name pos:line="22" pos:column="14">YAJL_GET_OBJECT<pos:position pos:line="22" pos:column="29"/></name><argument_list pos:line="22" pos:column="29">(<argument><expr><name pos:line="22" pos:column="30">ports<pos:position pos:line="22" pos:column="35"/></name></expr></argument>)<pos:position pos:line="22" pos:column="36"/></argument_list></call><operator pos:line="22" pos:column="36">-&gt;<pos:position pos:line="22" pos:column="41"/></operator><name><name pos:line="22" pos:column="38">values<pos:position pos:line="22" pos:column="44"/></name><index pos:line="22" pos:column="44">[<expr><name pos:line="22" pos:column="45">i<pos:position pos:line="22" pos:column="46"/></name></expr>]<pos:position pos:line="22" pos:column="47"/></index></name></expr>;<pos:position pos:line="22" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="23" pos:column="7">ovs_stats_update_port<pos:position pos:line="23" pos:column="28"/></name><argument_list pos:line="23" pos:column="28">(<argument><expr><call><name pos:line="23" pos:column="29">YAJL_GET_OBJECT<pos:position pos:line="23" pos:column="44"/></name><argument_list pos:line="23" pos:column="44">(<argument><expr><name pos:line="23" pos:column="45">ports<pos:position pos:line="23" pos:column="50"/></name></expr></argument>)<pos:position pos:line="23" pos:column="51"/></argument_list></call><operator pos:line="23" pos:column="51">-&gt;<pos:position pos:line="23" pos:column="56"/></operator><name><name pos:line="23" pos:column="53">keys<pos:position pos:line="23" pos:column="57"/></name><index pos:line="23" pos:column="57">[<expr><name pos:line="23" pos:column="58">i<pos:position pos:line="23" pos:column="59"/></name></expr>]<pos:position pos:line="23" pos:column="60"/></index></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="62">port<pos:position pos:line="23" pos:column="66"/></name></expr></argument>)<pos:position pos:line="23" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="68"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></for>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if>
  <return pos:line="26" pos:column="3">return;<pos:position pos:line="26" pos:column="10"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

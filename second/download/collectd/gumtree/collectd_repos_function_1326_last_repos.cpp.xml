<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1326_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">grpc<pos:position pos:line="1" pos:column="12"/></name><operator pos:line="1" pos:column="12">::<pos:position pos:line="1" pos:column="14"/></operator><name pos:line="1" pos:column="14">Status<pos:position pos:line="1" pos:column="20"/></name></name></type> <name pos:line="1" pos:column="21">marshal_meta_data<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">meta_data_t<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">meta<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>,
                                      <parameter><decl><type><name pos:line="2" pos:column="39">grpcMetadata<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">mutable_meta_data<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="71"/></parameter_list> <block pos:line="2" pos:column="72">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier><modifier pos:line="3" pos:column="9">*<pos:position pos:line="3" pos:column="10"/></modifier></type><name pos:line="3" pos:column="10">meta_data_keys<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><literal type="null" pos:line="3" pos:column="27">nullptr<pos:position pos:line="3" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">meta_data_keys_len<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><call><name pos:line="4" pos:column="28">meta_data_toc<pos:position pos:line="4" pos:column="41"/></name><argument_list pos:line="4" pos:column="41">(<argument><expr><name pos:line="4" pos:column="42">meta<pos:position pos:line="4" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="4" pos:column="48">&amp;<pos:position pos:line="4" pos:column="53"/></operator><name pos:line="4" pos:column="49">meta_data_keys<pos:position pos:line="4" pos:column="63"/></name></expr></argument>)<pos:position pos:line="4" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="65"/></decl_stmt>
  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">meta_data_keys_len<pos:position pos:line="5" pos:column="25"/></name> <operator pos:line="5" pos:column="26">&lt;<pos:position pos:line="5" pos:column="30"/></operator> <literal type="number" pos:line="5" pos:column="28">0<pos:position pos:line="5" pos:column="29"/></literal></expr>)<pos:position pos:line="5" pos:column="30"/></condition><then pos:line="5" pos:column="30"> <block pos:line="5" pos:column="31">{
    <return pos:line="6" pos:column="5">return <expr><call><name><name pos:line="6" pos:column="12">grpc<pos:position pos:line="6" pos:column="16"/></name><operator pos:line="6" pos:column="16">::<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="18">Status<pos:position pos:line="6" pos:column="24"/></name></name><argument_list pos:line="6" pos:column="24">(<argument><expr><name><name pos:line="6" pos:column="25">grpc<pos:position pos:line="6" pos:column="29"/></name><operator pos:line="6" pos:column="29">::<pos:position pos:line="6" pos:column="31"/></operator><name pos:line="6" pos:column="31">StatusCode<pos:position pos:line="6" pos:column="41"/></name><operator pos:line="6" pos:column="41">::<pos:position pos:line="6" pos:column="43"/></operator><name pos:line="6" pos:column="43">INTERNAL<pos:position pos:line="6" pos:column="51"/></name></name></expr></argument>,
                        <argument><expr><call><name><name pos:line="7" pos:column="25">grpc<pos:position pos:line="7" pos:column="29"/></name><operator pos:line="7" pos:column="29">::<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="31">string<pos:position pos:line="7" pos:column="37"/></name></name><argument_list pos:line="7" pos:column="37">(<argument><expr><literal type="string" pos:line="7" pos:column="38">"error getting metadata keys"<pos:position pos:line="7" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="70"/></return>
  }<pos:position pos:line="8" pos:column="4"/></block></then></if>

  <for pos:line="10" pos:column="3">for <control pos:line="10" pos:column="7">(<init><decl><type><name pos:line="10" pos:column="8">int<pos:position pos:line="10" pos:column="11"/></name></type> <name pos:line="10" pos:column="12">i<pos:position pos:line="10" pos:column="13"/></name> <init pos:line="10" pos:column="14">= <expr><literal type="number" pos:line="10" pos:column="16">0<pos:position pos:line="10" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="18"/></init> <condition><expr><name pos:line="10" pos:column="19">i<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">&lt;<pos:position pos:line="10" pos:column="25"/></operator> <name pos:line="10" pos:column="23">meta_data_keys_len<pos:position pos:line="10" pos:column="41"/></name></expr>;<pos:position pos:line="10" pos:column="42"/></condition> <incr><expr><name pos:line="10" pos:column="43">i<pos:position pos:line="10" pos:column="44"/></name><operator pos:line="10" pos:column="44">++<pos:position pos:line="10" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="10" pos:column="47"/></control> <block pos:line="10" pos:column="48">{
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name> <modifier pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></modifier></type><name pos:line="11" pos:column="11">key<pos:position pos:line="11" pos:column="14"/></name> <init pos:line="11" pos:column="15">= <expr><name><name pos:line="11" pos:column="17">meta_data_keys<pos:position pos:line="11" pos:column="31"/></name><index pos:line="11" pos:column="31">[<expr><name pos:line="11" pos:column="32">i<pos:position pos:line="11" pos:column="33"/></name></expr>]<pos:position pos:line="11" pos:column="34"/></index></name></expr></init></decl>;<pos:position pos:line="11" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">md_type<pos:position pos:line="12" pos:column="16"/></name> <init pos:line="12" pos:column="17">= <expr><call><name pos:line="12" pos:column="19">meta_data_type<pos:position pos:line="12" pos:column="33"/></name><argument_list pos:line="12" pos:column="33">(<argument><expr><name pos:line="12" pos:column="34">meta<pos:position pos:line="12" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="40">key<pos:position pos:line="12" pos:column="43"/></name></expr></argument>)<pos:position pos:line="12" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="45"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="14" pos:column="5">collectd<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">::<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="15">types<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">::<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">MetadataValue<pos:position pos:line="14" pos:column="35"/></name></name></type> <name pos:line="14" pos:column="36">md_value<pos:position pos:line="14" pos:column="44"/></name></decl>;<pos:position pos:line="14" pos:column="45"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="15" pos:column="5">md_value<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">.<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">Clear<pos:position pos:line="15" pos:column="19"/></name></name><argument_list pos:line="15" pos:column="19">()<pos:position pos:line="15" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="22"/></expr_stmt>

    <switch pos:line="17" pos:column="5">switch <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">md_type<pos:position pos:line="17" pos:column="20"/></name></expr>)<pos:position pos:line="17" pos:column="21"/></condition> <block pos:line="17" pos:column="22">{
    <case pos:line="18" pos:column="5">case <expr><name pos:line="18" pos:column="10">MD_TYPE_STRING<pos:position pos:line="18" pos:column="24"/></name></expr>:<pos:position pos:line="18" pos:column="25"/></case>
      <decl_stmt><decl><type><name pos:line="19" pos:column="7">char<pos:position pos:line="19" pos:column="11"/></name> <modifier pos:line="19" pos:column="12">*<pos:position pos:line="19" pos:column="13"/></modifier></type><name pos:line="19" pos:column="13">md_string<pos:position pos:line="19" pos:column="22"/></name></decl>;<pos:position pos:line="19" pos:column="23"/></decl_stmt>
      <if pos:line="20" pos:column="7">if <condition pos:line="20" pos:column="10">(<expr><call><name pos:line="20" pos:column="11">meta_data_get_string<pos:position pos:line="20" pos:column="31"/></name><argument_list pos:line="20" pos:column="31">(<argument><expr><name pos:line="20" pos:column="32">meta<pos:position pos:line="20" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="38">key<pos:position pos:line="20" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="43">&amp;<pos:position pos:line="20" pos:column="48"/></operator><name pos:line="20" pos:column="44">md_string<pos:position pos:line="20" pos:column="53"/></name></expr></argument>)<pos:position pos:line="20" pos:column="54"/></argument_list></call> <operator pos:line="20" pos:column="55">!=<pos:position pos:line="20" pos:column="57"/></operator> <literal type="number" pos:line="20" pos:column="58">0<pos:position pos:line="20" pos:column="59"/></literal> <operator pos:line="20" pos:column="60">||<pos:position pos:line="20" pos:column="62"/></operator> <name pos:line="20" pos:column="63">md_string<pos:position pos:line="20" pos:column="72"/></name> <operator pos:line="20" pos:column="73">==<pos:position pos:line="20" pos:column="75"/></operator> <literal type="null" pos:line="20" pos:column="76">nullptr<pos:position pos:line="20" pos:column="83"/></literal></expr>)<pos:position pos:line="20" pos:column="84"/></condition><then pos:line="20" pos:column="84"> <block pos:line="20" pos:column="85">{
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">strarray_free<pos:position pos:line="21" pos:column="22"/></name><argument_list pos:line="21" pos:column="22">(<argument><expr><name pos:line="21" pos:column="23">meta_data_keys<pos:position pos:line="21" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="39">meta_data_keys_len<pos:position pos:line="21" pos:column="57"/></name></expr></argument>)<pos:position pos:line="21" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="59"/></expr_stmt>
        <return pos:line="22" pos:column="9">return <expr><call><name><name pos:line="22" pos:column="16">grpc<pos:position pos:line="22" pos:column="20"/></name><operator pos:line="22" pos:column="20">::<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="22">Status<pos:position pos:line="22" pos:column="28"/></name></name><argument_list pos:line="22" pos:column="28">(<argument><expr><name><name pos:line="22" pos:column="29">grpc<pos:position pos:line="22" pos:column="33"/></name><operator pos:line="22" pos:column="33">::<pos:position pos:line="22" pos:column="35"/></operator><name pos:line="22" pos:column="35">StatusCode<pos:position pos:line="22" pos:column="45"/></name><operator pos:line="22" pos:column="45">::<pos:position pos:line="22" pos:column="47"/></operator><name pos:line="22" pos:column="47">INTERNAL<pos:position pos:line="22" pos:column="55"/></name></name></expr></argument>,
                          <argument><expr><call><name><name pos:line="23" pos:column="27">grpc<pos:position pos:line="23" pos:column="31"/></name><operator pos:line="23" pos:column="31">::<pos:position pos:line="23" pos:column="33"/></operator><name pos:line="23" pos:column="33">string<pos:position pos:line="23" pos:column="39"/></name></name><argument_list pos:line="23" pos:column="39">(<argument><expr><literal type="string" pos:line="23" pos:column="40">"missing metadata"<pos:position pos:line="23" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="61"/></return>
      }<pos:position pos:line="24" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name><name pos:line="25" pos:column="7">md_value<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">.<pos:position pos:line="25" pos:column="16"/></operator><name pos:line="25" pos:column="16">set_string_value<pos:position pos:line="25" pos:column="32"/></name></name><argument_list pos:line="25" pos:column="32">(<argument><expr><name pos:line="25" pos:column="33">md_string<pos:position pos:line="25" pos:column="42"/></name></expr></argument>)<pos:position pos:line="25" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="44"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="26" pos:column="7">free<pos:position pos:line="26" pos:column="11"/></name><argument_list pos:line="26" pos:column="11">(<argument><expr><name pos:line="26" pos:column="12">md_string<pos:position pos:line="26" pos:column="21"/></name></expr></argument>)<pos:position pos:line="26" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="23"/></expr_stmt>
      <break pos:line="27" pos:column="7">break;<pos:position pos:line="27" pos:column="13"/></break>
    <case pos:line="28" pos:column="5">case <expr><name pos:line="28" pos:column="10">MD_TYPE_SIGNED_INT<pos:position pos:line="28" pos:column="28"/></name></expr>:<pos:position pos:line="28" pos:column="29"/></case>
      <decl_stmt><decl><type><name pos:line="29" pos:column="7">int64_t<pos:position pos:line="29" pos:column="14"/></name></type> <name pos:line="29" pos:column="15">int64_value<pos:position pos:line="29" pos:column="26"/></name></decl>;<pos:position pos:line="29" pos:column="27"/></decl_stmt>
      <if pos:line="30" pos:column="7">if <condition pos:line="30" pos:column="10">(<expr><call><name pos:line="30" pos:column="11">meta_data_get_signed_int<pos:position pos:line="30" pos:column="35"/></name><argument_list pos:line="30" pos:column="35">(<argument><expr><name pos:line="30" pos:column="36">meta<pos:position pos:line="30" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="42">key<pos:position pos:line="30" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="47">&amp;<pos:position pos:line="30" pos:column="52"/></operator><name pos:line="30" pos:column="48">int64_value<pos:position pos:line="30" pos:column="59"/></name></expr></argument>)<pos:position pos:line="30" pos:column="60"/></argument_list></call> <operator pos:line="30" pos:column="61">!=<pos:position pos:line="30" pos:column="63"/></operator> <literal type="number" pos:line="30" pos:column="64">0<pos:position pos:line="30" pos:column="65"/></literal></expr>)<pos:position pos:line="30" pos:column="66"/></condition><then pos:line="30" pos:column="66"> <block pos:line="30" pos:column="67">{
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">strarray_free<pos:position pos:line="31" pos:column="22"/></name><argument_list pos:line="31" pos:column="22">(<argument><expr><name pos:line="31" pos:column="23">meta_data_keys<pos:position pos:line="31" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="39">meta_data_keys_len<pos:position pos:line="31" pos:column="57"/></name></expr></argument>)<pos:position pos:line="31" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="59"/></expr_stmt>
        <return pos:line="32" pos:column="9">return <expr><call><name><name pos:line="32" pos:column="16">grpc<pos:position pos:line="32" pos:column="20"/></name><operator pos:line="32" pos:column="20">::<pos:position pos:line="32" pos:column="22"/></operator><name pos:line="32" pos:column="22">Status<pos:position pos:line="32" pos:column="28"/></name></name><argument_list pos:line="32" pos:column="28">(<argument><expr><name><name pos:line="32" pos:column="29">grpc<pos:position pos:line="32" pos:column="33"/></name><operator pos:line="32" pos:column="33">::<pos:position pos:line="32" pos:column="35"/></operator><name pos:line="32" pos:column="35">StatusCode<pos:position pos:line="32" pos:column="45"/></name><operator pos:line="32" pos:column="45">::<pos:position pos:line="32" pos:column="47"/></operator><name pos:line="32" pos:column="47">INTERNAL<pos:position pos:line="32" pos:column="55"/></name></name></expr></argument>,
                          <argument><expr><call><name><name pos:line="33" pos:column="27">grpc<pos:position pos:line="33" pos:column="31"/></name><operator pos:line="33" pos:column="31">::<pos:position pos:line="33" pos:column="33"/></operator><name pos:line="33" pos:column="33">string<pos:position pos:line="33" pos:column="39"/></name></name><argument_list pos:line="33" pos:column="39">(<argument><expr><literal type="string" pos:line="33" pos:column="40">"missing metadata"<pos:position pos:line="33" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="61"/></return>
      }<pos:position pos:line="34" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name><name pos:line="35" pos:column="7">md_value<pos:position pos:line="35" pos:column="15"/></name><operator pos:line="35" pos:column="15">.<pos:position pos:line="35" pos:column="16"/></operator><name pos:line="35" pos:column="16">set_int64_value<pos:position pos:line="35" pos:column="31"/></name></name><argument_list pos:line="35" pos:column="31">(<argument><expr><name pos:line="35" pos:column="32">int64_value<pos:position pos:line="35" pos:column="43"/></name></expr></argument>)<pos:position pos:line="35" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="45"/></expr_stmt>
      <break pos:line="36" pos:column="7">break;<pos:position pos:line="36" pos:column="13"/></break>
    <case pos:line="37" pos:column="5">case <expr><name pos:line="37" pos:column="10">MD_TYPE_UNSIGNED_INT<pos:position pos:line="37" pos:column="30"/></name></expr>:<pos:position pos:line="37" pos:column="31"/></case>
      <decl_stmt><decl><type><name pos:line="38" pos:column="7">uint64_t<pos:position pos:line="38" pos:column="15"/></name></type> <name pos:line="38" pos:column="16">uint64_value<pos:position pos:line="38" pos:column="28"/></name></decl>;<pos:position pos:line="38" pos:column="29"/></decl_stmt>
      <if pos:line="39" pos:column="7">if <condition pos:line="39" pos:column="10">(<expr><call><name pos:line="39" pos:column="11">meta_data_get_unsigned_int<pos:position pos:line="39" pos:column="37"/></name><argument_list pos:line="39" pos:column="37">(<argument><expr><name pos:line="39" pos:column="38">meta<pos:position pos:line="39" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="44">key<pos:position pos:line="39" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="49">&amp;<pos:position pos:line="39" pos:column="54"/></operator><name pos:line="39" pos:column="50">uint64_value<pos:position pos:line="39" pos:column="62"/></name></expr></argument>)<pos:position pos:line="39" pos:column="63"/></argument_list></call> <operator pos:line="39" pos:column="64">!=<pos:position pos:line="39" pos:column="66"/></operator> <literal type="number" pos:line="39" pos:column="67">0<pos:position pos:line="39" pos:column="68"/></literal></expr>)<pos:position pos:line="39" pos:column="69"/></condition><then pos:line="39" pos:column="69"> <block pos:line="39" pos:column="70">{
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">strarray_free<pos:position pos:line="40" pos:column="22"/></name><argument_list pos:line="40" pos:column="22">(<argument><expr><name pos:line="40" pos:column="23">meta_data_keys<pos:position pos:line="40" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="39">meta_data_keys_len<pos:position pos:line="40" pos:column="57"/></name></expr></argument>)<pos:position pos:line="40" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="59"/></expr_stmt>
        <return pos:line="41" pos:column="9">return <expr><call><name><name pos:line="41" pos:column="16">grpc<pos:position pos:line="41" pos:column="20"/></name><operator pos:line="41" pos:column="20">::<pos:position pos:line="41" pos:column="22"/></operator><name pos:line="41" pos:column="22">Status<pos:position pos:line="41" pos:column="28"/></name></name><argument_list pos:line="41" pos:column="28">(<argument><expr><name><name pos:line="41" pos:column="29">grpc<pos:position pos:line="41" pos:column="33"/></name><operator pos:line="41" pos:column="33">::<pos:position pos:line="41" pos:column="35"/></operator><name pos:line="41" pos:column="35">StatusCode<pos:position pos:line="41" pos:column="45"/></name><operator pos:line="41" pos:column="45">::<pos:position pos:line="41" pos:column="47"/></operator><name pos:line="41" pos:column="47">INTERNAL<pos:position pos:line="41" pos:column="55"/></name></name></expr></argument>,
                          <argument><expr><call><name><name pos:line="42" pos:column="27">grpc<pos:position pos:line="42" pos:column="31"/></name><operator pos:line="42" pos:column="31">::<pos:position pos:line="42" pos:column="33"/></operator><name pos:line="42" pos:column="33">string<pos:position pos:line="42" pos:column="39"/></name></name><argument_list pos:line="42" pos:column="39">(<argument><expr><literal type="string" pos:line="42" pos:column="40">"missing metadata"<pos:position pos:line="42" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="42" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="61"/></return>
      }<pos:position pos:line="43" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name><name pos:line="44" pos:column="7">md_value<pos:position pos:line="44" pos:column="15"/></name><operator pos:line="44" pos:column="15">.<pos:position pos:line="44" pos:column="16"/></operator><name pos:line="44" pos:column="16">set_uint64_value<pos:position pos:line="44" pos:column="32"/></name></name><argument_list pos:line="44" pos:column="32">(<argument><expr><name pos:line="44" pos:column="33">uint64_value<pos:position pos:line="44" pos:column="45"/></name></expr></argument>)<pos:position pos:line="44" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="47"/></expr_stmt>
      <break pos:line="45" pos:column="7">break;<pos:position pos:line="45" pos:column="13"/></break>
    <case pos:line="46" pos:column="5">case <expr><name pos:line="46" pos:column="10">MD_TYPE_DOUBLE<pos:position pos:line="46" pos:column="24"/></name></expr>:<pos:position pos:line="46" pos:column="25"/></case>
      <decl_stmt><decl><type><name pos:line="47" pos:column="7">double<pos:position pos:line="47" pos:column="13"/></name></type> <name pos:line="47" pos:column="14">double_value<pos:position pos:line="47" pos:column="26"/></name></decl>;<pos:position pos:line="47" pos:column="27"/></decl_stmt>
      <if pos:line="48" pos:column="7">if <condition pos:line="48" pos:column="10">(<expr><call><name pos:line="48" pos:column="11">meta_data_get_double<pos:position pos:line="48" pos:column="31"/></name><argument_list pos:line="48" pos:column="31">(<argument><expr><name pos:line="48" pos:column="32">meta<pos:position pos:line="48" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="38">key<pos:position pos:line="48" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="43">&amp;<pos:position pos:line="48" pos:column="48"/></operator><name pos:line="48" pos:column="44">double_value<pos:position pos:line="48" pos:column="56"/></name></expr></argument>)<pos:position pos:line="48" pos:column="57"/></argument_list></call> <operator pos:line="48" pos:column="58">!=<pos:position pos:line="48" pos:column="60"/></operator> <literal type="number" pos:line="48" pos:column="61">0<pos:position pos:line="48" pos:column="62"/></literal></expr>)<pos:position pos:line="48" pos:column="63"/></condition><then pos:line="48" pos:column="63"> <block pos:line="48" pos:column="64">{
        <expr_stmt><expr><call><name pos:line="49" pos:column="9">strarray_free<pos:position pos:line="49" pos:column="22"/></name><argument_list pos:line="49" pos:column="22">(<argument><expr><name pos:line="49" pos:column="23">meta_data_keys<pos:position pos:line="49" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="39">meta_data_keys_len<pos:position pos:line="49" pos:column="57"/></name></expr></argument>)<pos:position pos:line="49" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="59"/></expr_stmt>
        <return pos:line="50" pos:column="9">return <expr><call><name><name pos:line="50" pos:column="16">grpc<pos:position pos:line="50" pos:column="20"/></name><operator pos:line="50" pos:column="20">::<pos:position pos:line="50" pos:column="22"/></operator><name pos:line="50" pos:column="22">Status<pos:position pos:line="50" pos:column="28"/></name></name><argument_list pos:line="50" pos:column="28">(<argument><expr><name><name pos:line="50" pos:column="29">grpc<pos:position pos:line="50" pos:column="33"/></name><operator pos:line="50" pos:column="33">::<pos:position pos:line="50" pos:column="35"/></operator><name pos:line="50" pos:column="35">StatusCode<pos:position pos:line="50" pos:column="45"/></name><operator pos:line="50" pos:column="45">::<pos:position pos:line="50" pos:column="47"/></operator><name pos:line="50" pos:column="47">INTERNAL<pos:position pos:line="50" pos:column="55"/></name></name></expr></argument>,
                          <argument><expr><call><name><name pos:line="51" pos:column="27">grpc<pos:position pos:line="51" pos:column="31"/></name><operator pos:line="51" pos:column="31">::<pos:position pos:line="51" pos:column="33"/></operator><name pos:line="51" pos:column="33">string<pos:position pos:line="51" pos:column="39"/></name></name><argument_list pos:line="51" pos:column="39">(<argument><expr><literal type="string" pos:line="51" pos:column="40">"missing metadata"<pos:position pos:line="51" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="51" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="61"/></return>
      }<pos:position pos:line="52" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name><name pos:line="53" pos:column="7">md_value<pos:position pos:line="53" pos:column="15"/></name><operator pos:line="53" pos:column="15">.<pos:position pos:line="53" pos:column="16"/></operator><name pos:line="53" pos:column="16">set_double_value<pos:position pos:line="53" pos:column="32"/></name></name><argument_list pos:line="53" pos:column="32">(<argument><expr><name pos:line="53" pos:column="33">double_value<pos:position pos:line="53" pos:column="45"/></name></expr></argument>)<pos:position pos:line="53" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="47"/></expr_stmt>
      <break pos:line="54" pos:column="7">break;<pos:position pos:line="54" pos:column="13"/></break>
    <case pos:line="55" pos:column="5">case <expr><name pos:line="55" pos:column="10">MD_TYPE_BOOLEAN<pos:position pos:line="55" pos:column="25"/></name></expr>:<pos:position pos:line="55" pos:column="26"/></case>
      <decl_stmt><decl><type><name pos:line="56" pos:column="7">bool<pos:position pos:line="56" pos:column="11"/></name></type> <name pos:line="56" pos:column="12">bool_value<pos:position pos:line="56" pos:column="22"/></name></decl>;<pos:position pos:line="56" pos:column="23"/></decl_stmt>
      <if pos:line="57" pos:column="7">if <condition pos:line="57" pos:column="10">(<expr><call><name pos:line="57" pos:column="11">meta_data_get_boolean<pos:position pos:line="57" pos:column="32"/></name><argument_list pos:line="57" pos:column="32">(<argument><expr><name pos:line="57" pos:column="33">meta<pos:position pos:line="57" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="39">key<pos:position pos:line="57" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="44">&amp;<pos:position pos:line="57" pos:column="49"/></operator><name pos:line="57" pos:column="45">bool_value<pos:position pos:line="57" pos:column="55"/></name></expr></argument>)<pos:position pos:line="57" pos:column="56"/></argument_list></call> <operator pos:line="57" pos:column="57">!=<pos:position pos:line="57" pos:column="59"/></operator> <literal type="number" pos:line="57" pos:column="60">0<pos:position pos:line="57" pos:column="61"/></literal></expr>)<pos:position pos:line="57" pos:column="62"/></condition><then pos:line="57" pos:column="62"> <block pos:line="57" pos:column="63">{
        <expr_stmt><expr><call><name pos:line="58" pos:column="9">strarray_free<pos:position pos:line="58" pos:column="22"/></name><argument_list pos:line="58" pos:column="22">(<argument><expr><name pos:line="58" pos:column="23">meta_data_keys<pos:position pos:line="58" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="39">meta_data_keys_len<pos:position pos:line="58" pos:column="57"/></name></expr></argument>)<pos:position pos:line="58" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="59"/></expr_stmt>
        <return pos:line="59" pos:column="9">return <expr><call><name><name pos:line="59" pos:column="16">grpc<pos:position pos:line="59" pos:column="20"/></name><operator pos:line="59" pos:column="20">::<pos:position pos:line="59" pos:column="22"/></operator><name pos:line="59" pos:column="22">Status<pos:position pos:line="59" pos:column="28"/></name></name><argument_list pos:line="59" pos:column="28">(<argument><expr><name><name pos:line="59" pos:column="29">grpc<pos:position pos:line="59" pos:column="33"/></name><operator pos:line="59" pos:column="33">::<pos:position pos:line="59" pos:column="35"/></operator><name pos:line="59" pos:column="35">StatusCode<pos:position pos:line="59" pos:column="45"/></name><operator pos:line="59" pos:column="45">::<pos:position pos:line="59" pos:column="47"/></operator><name pos:line="59" pos:column="47">INTERNAL<pos:position pos:line="59" pos:column="55"/></name></name></expr></argument>,
                          <argument><expr><call><name><name pos:line="60" pos:column="27">grpc<pos:position pos:line="60" pos:column="31"/></name><operator pos:line="60" pos:column="31">::<pos:position pos:line="60" pos:column="33"/></operator><name pos:line="60" pos:column="33">string<pos:position pos:line="60" pos:column="39"/></name></name><argument_list pos:line="60" pos:column="39">(<argument><expr><literal type="string" pos:line="60" pos:column="40">"missing metadata"<pos:position pos:line="60" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="60" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="61"/></return>
      }<pos:position pos:line="61" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name><name pos:line="62" pos:column="7">md_value<pos:position pos:line="62" pos:column="15"/></name><operator pos:line="62" pos:column="15">.<pos:position pos:line="62" pos:column="16"/></operator><name pos:line="62" pos:column="16">set_bool_value<pos:position pos:line="62" pos:column="30"/></name></name><argument_list pos:line="62" pos:column="30">(<argument><expr><name pos:line="62" pos:column="31">bool_value<pos:position pos:line="62" pos:column="41"/></name></expr></argument>)<pos:position pos:line="62" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="43"/></expr_stmt>
      <break pos:line="63" pos:column="7">break;<pos:position pos:line="63" pos:column="13"/></break>
    <default pos:line="64" pos:column="5">default:<pos:position pos:line="64" pos:column="13"/></default>
      <expr_stmt><expr><call><name pos:line="65" pos:column="7">strarray_free<pos:position pos:line="65" pos:column="20"/></name><argument_list pos:line="65" pos:column="20">(<argument><expr><name pos:line="65" pos:column="21">meta_data_keys<pos:position pos:line="65" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="37">meta_data_keys_len<pos:position pos:line="65" pos:column="55"/></name></expr></argument>)<pos:position pos:line="65" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="57"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="66" pos:column="7">ERROR<pos:position pos:line="66" pos:column="12"/></name><argument_list pos:line="66" pos:column="12">(<argument><expr><literal type="string" pos:line="66" pos:column="13">"grpc: invalid metadata type (%d)"<pos:position pos:line="66" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="49">md_type<pos:position pos:line="66" pos:column="56"/></name></expr></argument>)<pos:position pos:line="66" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="58"/></expr_stmt>
      <return pos:line="67" pos:column="7">return <expr><call><name><name pos:line="67" pos:column="14">grpc<pos:position pos:line="67" pos:column="18"/></name><operator pos:line="67" pos:column="18">::<pos:position pos:line="67" pos:column="20"/></operator><name pos:line="67" pos:column="20">Status<pos:position pos:line="67" pos:column="26"/></name></name><argument_list pos:line="67" pos:column="26">(<argument><expr><name><name pos:line="67" pos:column="27">grpc<pos:position pos:line="67" pos:column="31"/></name><operator pos:line="67" pos:column="31">::<pos:position pos:line="67" pos:column="33"/></operator><name pos:line="67" pos:column="33">StatusCode<pos:position pos:line="67" pos:column="43"/></name><operator pos:line="67" pos:column="43">::<pos:position pos:line="67" pos:column="45"/></operator><name pos:line="67" pos:column="45">INTERNAL<pos:position pos:line="67" pos:column="53"/></name></name></expr></argument>,
                          <argument><expr><call><name><name pos:line="68" pos:column="27">grpc<pos:position pos:line="68" pos:column="31"/></name><operator pos:line="68" pos:column="31">::<pos:position pos:line="68" pos:column="33"/></operator><name pos:line="68" pos:column="33">string<pos:position pos:line="68" pos:column="39"/></name></name><argument_list pos:line="68" pos:column="39">(<argument><expr><literal type="string" pos:line="68" pos:column="40">"unknown metadata type"<pos:position pos:line="68" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="68" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="66"/></return>
    }<pos:position pos:line="69" pos:column="6"/></block></switch>

    <expr_stmt><expr><operator pos:line="71" pos:column="5">(<pos:position pos:line="71" pos:column="6"/></operator><operator pos:line="71" pos:column="6">*<pos:position pos:line="71" pos:column="7"/></operator><name pos:line="71" pos:column="7">mutable_meta_data<pos:position pos:line="71" pos:column="24"/></name><operator pos:line="71" pos:column="24">)<pos:position pos:line="71" pos:column="25"/></operator><index pos:line="71" pos:column="25">[<expr><call><name><name pos:line="71" pos:column="26">grpc<pos:position pos:line="71" pos:column="30"/></name><operator pos:line="71" pos:column="30">::<pos:position pos:line="71" pos:column="32"/></operator><name pos:line="71" pos:column="32">string<pos:position pos:line="71" pos:column="38"/></name></name><argument_list pos:line="71" pos:column="38">(<argument><expr><name pos:line="71" pos:column="39">key<pos:position pos:line="71" pos:column="42"/></name></expr></argument>)<pos:position pos:line="71" pos:column="43"/></argument_list></call></expr>]<pos:position pos:line="71" pos:column="44"/></index> <operator pos:line="71" pos:column="45">=<pos:position pos:line="71" pos:column="46"/></operator> <name pos:line="71" pos:column="47">md_value<pos:position pos:line="71" pos:column="55"/></name></expr>;<pos:position pos:line="71" pos:column="56"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="73" pos:column="5">strarray_free<pos:position pos:line="73" pos:column="18"/></name><argument_list pos:line="73" pos:column="18">(<argument><expr><name pos:line="73" pos:column="19">meta_data_keys<pos:position pos:line="73" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="35">meta_data_keys_len<pos:position pos:line="73" pos:column="53"/></name></expr></argument>)<pos:position pos:line="73" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="55"/></expr_stmt>
  }<pos:position pos:line="74" pos:column="4"/></block></for>

  <return pos:line="76" pos:column="3">return <expr><name><name pos:line="76" pos:column="10">grpc<pos:position pos:line="76" pos:column="14"/></name><operator pos:line="76" pos:column="14">::<pos:position pos:line="76" pos:column="16"/></operator><name pos:line="76" pos:column="16">Status<pos:position pos:line="76" pos:column="22"/></name><operator pos:line="76" pos:column="22">::<pos:position pos:line="76" pos:column="24"/></operator><name pos:line="76" pos:column="24">OK<pos:position pos:line="76" pos:column="26"/></name></name></expr>;<pos:position pos:line="76" pos:column="27"/></return>
}<pos:position pos:line="77" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1461_collectd-4.7.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">do_check<pos:position pos:line="2" pos:column="9"/></name><parameter_list pos:line="2" pos:column="9">(<parameter><decl><type><name pos:line="2" pos:column="10">TC_HANDLE_T<pos:position pos:line="2" pos:column="21"/></name></type> <name pos:line="2" pos:column="22">h<pos:position pos:line="2" pos:column="23"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="25">unsigned<pos:position pos:line="2" pos:column="33"/></name> <name pos:line="2" pos:column="34">int<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">line<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="43"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">int<pos:position pos:line="4" pos:column="21"/></name></type> <name pos:line="4" pos:column="22">i<pos:position pos:line="4" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="25">n<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">unsigned<pos:position pos:line="5" pos:column="17"/></name> <name pos:line="5" pos:column="18">int<pos:position pos:line="5" pos:column="21"/></name></type> <name pos:line="5" pos:column="22">user_offset<pos:position pos:line="5" pos:column="33"/></name></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt> <comment type="block" pos:line="5" pos:column="35">/* Offset of first user chain */</comment>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">was_return<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">assert<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><name><name pos:line="8" pos:column="16">h<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">-&gt;<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="19">changed<pos:position pos:line="8" pos:column="26"/></name></name> <operator pos:line="8" pos:column="27">==<pos:position pos:line="8" pos:column="29"/></operator> <literal type="number" pos:line="8" pos:column="30">0<pos:position pos:line="8" pos:column="31"/></literal> <operator pos:line="8" pos:column="32">||<pos:position pos:line="8" pos:column="34"/></operator> <name><name pos:line="8" pos:column="35">h<pos:position pos:line="8" pos:column="36"/></name><operator pos:line="8" pos:column="36">-&gt;<pos:position pos:line="8" pos:column="41"/></operator><name pos:line="8" pos:column="38">changed<pos:position pos:line="8" pos:column="45"/></name></name> <operator pos:line="8" pos:column="46">==<pos:position pos:line="8" pos:column="48"/></operator> <literal type="number" pos:line="8" pos:column="49">1<pos:position pos:line="8" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="52"/></expr_stmt>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><call><name pos:line="9" pos:column="13">strcmp<pos:position pos:line="9" pos:column="19"/></name><argument_list pos:line="9" pos:column="19">(<argument><expr><name><name pos:line="9" pos:column="20">h<pos:position pos:line="9" pos:column="21"/></name><operator pos:line="9" pos:column="21">-&gt;<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="23">info<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">.<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="28">name<pos:position pos:line="9" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="34">"filter"<pos:position pos:line="9" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="43"/></argument_list></call> <operator pos:line="9" pos:column="44">==<pos:position pos:line="9" pos:column="46"/></operator> <literal type="number" pos:line="9" pos:column="47">0<pos:position pos:line="9" pos:column="48"/></literal></expr>)<pos:position pos:line="9" pos:column="49"/></condition><then pos:line="9" pos:column="49"> <block pos:line="9" pos:column="50">{
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">assert<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><name><name pos:line="10" pos:column="24">h<pos:position pos:line="10" pos:column="25"/></name><operator pos:line="10" pos:column="25">-&gt;<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="27">info<pos:position pos:line="10" pos:column="31"/></name><operator pos:line="10" pos:column="31">.<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="32">valid_hooks<pos:position pos:line="10" pos:column="43"/></name></name>
		       <operator pos:line="11" pos:column="24">==<pos:position pos:line="11" pos:column="26"/></operator> <operator pos:line="11" pos:column="27">(<pos:position pos:line="11" pos:column="28"/></operator><literal type="number" pos:line="11" pos:column="28">1<pos:position pos:line="11" pos:column="29"/></literal> <operator pos:line="11" pos:column="30">&lt;&lt;<pos:position pos:line="11" pos:column="38"/></operator> <name pos:line="11" pos:column="33">NF_IP6_LOCAL_IN<pos:position pos:line="11" pos:column="48"/></name>
			   <operator pos:line="12" pos:column="28">|<pos:position pos:line="12" pos:column="29"/></operator> <literal type="number" pos:line="12" pos:column="30">1<pos:position pos:line="12" pos:column="31"/></literal> <operator pos:line="12" pos:column="32">&lt;&lt;<pos:position pos:line="12" pos:column="40"/></operator> <name pos:line="12" pos:column="35">NF_IP6_FORWARD<pos:position pos:line="12" pos:column="49"/></name>
			   <operator pos:line="13" pos:column="28">|<pos:position pos:line="13" pos:column="29"/></operator> <literal type="number" pos:line="13" pos:column="30">1<pos:position pos:line="13" pos:column="31"/></literal> <operator pos:line="13" pos:column="32">&lt;&lt;<pos:position pos:line="13" pos:column="40"/></operator> <name pos:line="13" pos:column="35">NF_IP6_LOCAL_OUT<pos:position pos:line="13" pos:column="51"/></name><operator pos:line="13" pos:column="51">)<pos:position pos:line="13" pos:column="52"/></operator></expr></argument>)<pos:position pos:line="13" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="54"/></expr_stmt>

		<comment type="block" pos:line="15" pos:column="17">/* Hooks should be first three */</comment>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">assert<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><name><name pos:line="16" pos:column="24">h<pos:position pos:line="16" pos:column="25"/></name><operator pos:line="16" pos:column="25">-&gt;<pos:position pos:line="16" pos:column="30"/></operator><name pos:line="16" pos:column="27">info<pos:position pos:line="16" pos:column="31"/></name><operator pos:line="16" pos:column="31">.<pos:position pos:line="16" pos:column="32"/></operator><name pos:line="16" pos:column="32">hook_entry<pos:position pos:line="16" pos:column="42"/></name><index pos:line="16" pos:column="42">[<expr><name pos:line="16" pos:column="43">NF_IP6_LOCAL_IN<pos:position pos:line="16" pos:column="58"/></name></expr>]<pos:position pos:line="16" pos:column="59"/></index></name> <operator pos:line="16" pos:column="60">==<pos:position pos:line="16" pos:column="62"/></operator> <literal type="number" pos:line="16" pos:column="63">0<pos:position pos:line="16" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="66"/></expr_stmt>

		<expr_stmt><expr><name pos:line="18" pos:column="17">n<pos:position pos:line="18" pos:column="18"/></name> <operator pos:line="18" pos:column="19">=<pos:position pos:line="18" pos:column="20"/></operator> <call><name pos:line="18" pos:column="21">get_chain_end<pos:position pos:line="18" pos:column="34"/></name><argument_list pos:line="18" pos:column="34">(<argument><expr><name pos:line="18" pos:column="35">h<pos:position pos:line="18" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="38">0<pos:position pos:line="18" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name pos:line="19" pos:column="17">n<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">+=<pos:position pos:line="19" pos:column="21"/></operator> <call><name pos:line="19" pos:column="22">get_entry<pos:position pos:line="19" pos:column="31"/></name><argument_list pos:line="19" pos:column="31">(<argument><expr><name pos:line="19" pos:column="32">h<pos:position pos:line="19" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="35">n<pos:position pos:line="19" pos:column="36"/></name></expr></argument>)<pos:position pos:line="19" pos:column="37"/></argument_list></call><operator pos:line="19" pos:column="37">-&gt;<pos:position pos:line="19" pos:column="42"/></operator><name pos:line="19" pos:column="39">next_offset<pos:position pos:line="19" pos:column="50"/></name></expr>;<pos:position pos:line="19" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">assert<pos:position pos:line="20" pos:column="23"/></name><argument_list pos:line="20" pos:column="23">(<argument><expr><name><name pos:line="20" pos:column="24">h<pos:position pos:line="20" pos:column="25"/></name><operator pos:line="20" pos:column="25">-&gt;<pos:position pos:line="20" pos:column="30"/></operator><name pos:line="20" pos:column="27">info<pos:position pos:line="20" pos:column="31"/></name><operator pos:line="20" pos:column="31">.<pos:position pos:line="20" pos:column="32"/></operator><name pos:line="20" pos:column="32">hook_entry<pos:position pos:line="20" pos:column="42"/></name><index pos:line="20" pos:column="42">[<expr><name pos:line="20" pos:column="43">NF_IP6_FORWARD<pos:position pos:line="20" pos:column="57"/></name></expr>]<pos:position pos:line="20" pos:column="58"/></index></name> <operator pos:line="20" pos:column="59">==<pos:position pos:line="20" pos:column="61"/></operator> <name pos:line="20" pos:column="62">n<pos:position pos:line="20" pos:column="63"/></name></expr></argument>)<pos:position pos:line="20" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="65"/></expr_stmt>

		<expr_stmt><expr><name pos:line="22" pos:column="17">n<pos:position pos:line="22" pos:column="18"/></name> <operator pos:line="22" pos:column="19">=<pos:position pos:line="22" pos:column="20"/></operator> <call><name pos:line="22" pos:column="21">get_chain_end<pos:position pos:line="22" pos:column="34"/></name><argument_list pos:line="22" pos:column="34">(<argument><expr><name pos:line="22" pos:column="35">h<pos:position pos:line="22" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="38">n<pos:position pos:line="22" pos:column="39"/></name></expr></argument>)<pos:position pos:line="22" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name pos:line="23" pos:column="17">n<pos:position pos:line="23" pos:column="18"/></name> <operator pos:line="23" pos:column="19">+=<pos:position pos:line="23" pos:column="21"/></operator> <call><name pos:line="23" pos:column="22">get_entry<pos:position pos:line="23" pos:column="31"/></name><argument_list pos:line="23" pos:column="31">(<argument><expr><name pos:line="23" pos:column="32">h<pos:position pos:line="23" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="35">n<pos:position pos:line="23" pos:column="36"/></name></expr></argument>)<pos:position pos:line="23" pos:column="37"/></argument_list></call><operator pos:line="23" pos:column="37">-&gt;<pos:position pos:line="23" pos:column="42"/></operator><name pos:line="23" pos:column="39">next_offset<pos:position pos:line="23" pos:column="50"/></name></expr>;<pos:position pos:line="23" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">assert<pos:position pos:line="24" pos:column="23"/></name><argument_list pos:line="24" pos:column="23">(<argument><expr><name><name pos:line="24" pos:column="24">h<pos:position pos:line="24" pos:column="25"/></name><operator pos:line="24" pos:column="25">-&gt;<pos:position pos:line="24" pos:column="30"/></operator><name pos:line="24" pos:column="27">info<pos:position pos:line="24" pos:column="31"/></name><operator pos:line="24" pos:column="31">.<pos:position pos:line="24" pos:column="32"/></operator><name pos:line="24" pos:column="32">hook_entry<pos:position pos:line="24" pos:column="42"/></name><index pos:line="24" pos:column="42">[<expr><name pos:line="24" pos:column="43">NF_IP6_LOCAL_OUT<pos:position pos:line="24" pos:column="59"/></name></expr>]<pos:position pos:line="24" pos:column="60"/></index></name> <operator pos:line="24" pos:column="61">==<pos:position pos:line="24" pos:column="63"/></operator> <name pos:line="24" pos:column="64">n<pos:position pos:line="24" pos:column="65"/></name></expr></argument>)<pos:position pos:line="24" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="67"/></expr_stmt>

		<expr_stmt><expr><name pos:line="26" pos:column="17">user_offset<pos:position pos:line="26" pos:column="28"/></name> <operator pos:line="26" pos:column="29">=<pos:position pos:line="26" pos:column="30"/></operator> <name><name pos:line="26" pos:column="31">h<pos:position pos:line="26" pos:column="32"/></name><operator pos:line="26" pos:column="32">-&gt;<pos:position pos:line="26" pos:column="37"/></operator><name pos:line="26" pos:column="34">info<pos:position pos:line="26" pos:column="38"/></name><operator pos:line="26" pos:column="38">.<pos:position pos:line="26" pos:column="39"/></operator><name pos:line="26" pos:column="39">hook_entry<pos:position pos:line="26" pos:column="49"/></name><index pos:line="26" pos:column="49">[<expr><name pos:line="26" pos:column="50">NF_IP6_LOCAL_OUT<pos:position pos:line="26" pos:column="66"/></name></expr>]<pos:position pos:line="26" pos:column="67"/></index></name></expr>;<pos:position pos:line="26" pos:column="68"/></expr_stmt>
	}<pos:position pos:line="27" pos:column="10"/></block></then> <elseif pos:line="27" pos:column="11">else <if pos:line="27" pos:column="16">if <condition pos:line="27" pos:column="19">(<expr><call><name pos:line="27" pos:column="20">strcmp<pos:position pos:line="27" pos:column="26"/></name><argument_list pos:line="27" pos:column="26">(<argument><expr><name><name pos:line="27" pos:column="27">h<pos:position pos:line="27" pos:column="28"/></name><operator pos:line="27" pos:column="28">-&gt;<pos:position pos:line="27" pos:column="33"/></operator><name pos:line="27" pos:column="30">info<pos:position pos:line="27" pos:column="34"/></name><operator pos:line="27" pos:column="34">.<pos:position pos:line="27" pos:column="35"/></operator><name pos:line="27" pos:column="35">name<pos:position pos:line="27" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="41">"nat"<pos:position pos:line="27" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="47"/></argument_list></call> <operator pos:line="27" pos:column="48">==<pos:position pos:line="27" pos:column="50"/></operator> <literal type="number" pos:line="27" pos:column="51">0<pos:position pos:line="27" pos:column="52"/></literal></expr>)<pos:position pos:line="27" pos:column="53"/></condition><then pos:line="27" pos:column="53"> <block pos:line="27" pos:column="54">{
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">assert<pos:position pos:line="28" pos:column="23"/></name><argument_list pos:line="28" pos:column="23">(<argument><expr><operator pos:line="28" pos:column="24">(<pos:position pos:line="28" pos:column="25"/></operator><name><name pos:line="28" pos:column="25">h<pos:position pos:line="28" pos:column="26"/></name><operator pos:line="28" pos:column="26">-&gt;<pos:position pos:line="28" pos:column="31"/></operator><name pos:line="28" pos:column="28">info<pos:position pos:line="28" pos:column="32"/></name><operator pos:line="28" pos:column="32">.<pos:position pos:line="28" pos:column="33"/></operator><name pos:line="28" pos:column="33">valid_hooks<pos:position pos:line="28" pos:column="44"/></name></name>
			<operator pos:line="29" pos:column="25">==<pos:position pos:line="29" pos:column="27"/></operator> <operator pos:line="29" pos:column="28">(<pos:position pos:line="29" pos:column="29"/></operator><literal type="number" pos:line="29" pos:column="29">1<pos:position pos:line="29" pos:column="30"/></literal> <operator pos:line="29" pos:column="31">&lt;&lt;<pos:position pos:line="29" pos:column="39"/></operator> <name pos:line="29" pos:column="34">NF_IP6_PRE_ROUTING<pos:position pos:line="29" pos:column="52"/></name>
			    <operator pos:line="30" pos:column="29">|<pos:position pos:line="30" pos:column="30"/></operator> <literal type="number" pos:line="30" pos:column="31">1<pos:position pos:line="30" pos:column="32"/></literal> <operator pos:line="30" pos:column="33">&lt;&lt;<pos:position pos:line="30" pos:column="41"/></operator> <name pos:line="30" pos:column="36">NF_IP6_LOCAL_OUT<pos:position pos:line="30" pos:column="52"/></name>
			    <operator pos:line="31" pos:column="29">|<pos:position pos:line="31" pos:column="30"/></operator> <literal type="number" pos:line="31" pos:column="31">1<pos:position pos:line="31" pos:column="32"/></literal> <operator pos:line="31" pos:column="33">&lt;&lt;<pos:position pos:line="31" pos:column="41"/></operator> <name pos:line="31" pos:column="36">NF_IP6_POST_ROUTING<pos:position pos:line="31" pos:column="55"/></name><operator pos:line="31" pos:column="55">)<pos:position pos:line="31" pos:column="56"/></operator><operator pos:line="31" pos:column="56">)<pos:position pos:line="31" pos:column="57"/></operator> <operator pos:line="31" pos:column="58">||<pos:position pos:line="31" pos:column="60"/></operator>
		       <operator pos:line="32" pos:column="24">(<pos:position pos:line="32" pos:column="25"/></operator><name><name pos:line="32" pos:column="25">h<pos:position pos:line="32" pos:column="26"/></name><operator pos:line="32" pos:column="26">-&gt;<pos:position pos:line="32" pos:column="31"/></operator><name pos:line="32" pos:column="28">info<pos:position pos:line="32" pos:column="32"/></name><operator pos:line="32" pos:column="32">.<pos:position pos:line="32" pos:column="33"/></operator><name pos:line="32" pos:column="33">valid_hooks<pos:position pos:line="32" pos:column="44"/></name></name>
			<operator pos:line="33" pos:column="25">==<pos:position pos:line="33" pos:column="27"/></operator> <operator pos:line="33" pos:column="28">(<pos:position pos:line="33" pos:column="29"/></operator><literal type="number" pos:line="33" pos:column="29">1<pos:position pos:line="33" pos:column="30"/></literal> <operator pos:line="33" pos:column="31">&lt;&lt;<pos:position pos:line="33" pos:column="39"/></operator> <name pos:line="33" pos:column="34">NF_IP6_PRE_ROUTING<pos:position pos:line="33" pos:column="52"/></name>
			    <operator pos:line="34" pos:column="29">|<pos:position pos:line="34" pos:column="30"/></operator> <literal type="number" pos:line="34" pos:column="31">1<pos:position pos:line="34" pos:column="32"/></literal> <operator pos:line="34" pos:column="33">&lt;&lt;<pos:position pos:line="34" pos:column="41"/></operator> <name pos:line="34" pos:column="36">NF_IP6_LOCAL_IN<pos:position pos:line="34" pos:column="51"/></name>
			    <operator pos:line="35" pos:column="29">|<pos:position pos:line="35" pos:column="30"/></operator> <literal type="number" pos:line="35" pos:column="31">1<pos:position pos:line="35" pos:column="32"/></literal> <operator pos:line="35" pos:column="33">&lt;&lt;<pos:position pos:line="35" pos:column="41"/></operator> <name pos:line="35" pos:column="36">NF_IP6_LOCAL_OUT<pos:position pos:line="35" pos:column="52"/></name>
			    <operator pos:line="36" pos:column="29">|<pos:position pos:line="36" pos:column="30"/></operator> <literal type="number" pos:line="36" pos:column="31">1<pos:position pos:line="36" pos:column="32"/></literal> <operator pos:line="36" pos:column="33">&lt;&lt;<pos:position pos:line="36" pos:column="41"/></operator> <name pos:line="36" pos:column="36">NF_IP6_POST_ROUTING<pos:position pos:line="36" pos:column="55"/></name><operator pos:line="36" pos:column="55">)<pos:position pos:line="36" pos:column="56"/></operator><operator pos:line="36" pos:column="56">)<pos:position pos:line="36" pos:column="57"/></operator></expr></argument>)<pos:position pos:line="36" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="59"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="38" pos:column="17">assert<pos:position pos:line="38" pos:column="23"/></name><argument_list pos:line="38" pos:column="23">(<argument><expr><name><name pos:line="38" pos:column="24">h<pos:position pos:line="38" pos:column="25"/></name><operator pos:line="38" pos:column="25">-&gt;<pos:position pos:line="38" pos:column="30"/></operator><name pos:line="38" pos:column="27">info<pos:position pos:line="38" pos:column="31"/></name><operator pos:line="38" pos:column="31">.<pos:position pos:line="38" pos:column="32"/></operator><name pos:line="38" pos:column="32">hook_entry<pos:position pos:line="38" pos:column="42"/></name><index pos:line="38" pos:column="42">[<expr><name pos:line="38" pos:column="43">NF_IP6_PRE_ROUTING<pos:position pos:line="38" pos:column="61"/></name></expr>]<pos:position pos:line="38" pos:column="62"/></index></name> <operator pos:line="38" pos:column="63">==<pos:position pos:line="38" pos:column="65"/></operator> <literal type="number" pos:line="38" pos:column="66">0<pos:position pos:line="38" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="69"/></expr_stmt>

		<expr_stmt><expr><name pos:line="40" pos:column="17">n<pos:position pos:line="40" pos:column="18"/></name> <operator pos:line="40" pos:column="19">=<pos:position pos:line="40" pos:column="20"/></operator> <call><name pos:line="40" pos:column="21">get_chain_end<pos:position pos:line="40" pos:column="34"/></name><argument_list pos:line="40" pos:column="34">(<argument><expr><name pos:line="40" pos:column="35">h<pos:position pos:line="40" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="38">0<pos:position pos:line="40" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="41"/></expr_stmt>

		<expr_stmt><expr><name pos:line="42" pos:column="17">n<pos:position pos:line="42" pos:column="18"/></name> <operator pos:line="42" pos:column="19">+=<pos:position pos:line="42" pos:column="21"/></operator> <call><name pos:line="42" pos:column="22">get_entry<pos:position pos:line="42" pos:column="31"/></name><argument_list pos:line="42" pos:column="31">(<argument><expr><name pos:line="42" pos:column="32">h<pos:position pos:line="42" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="35">n<pos:position pos:line="42" pos:column="36"/></name></expr></argument>)<pos:position pos:line="42" pos:column="37"/></argument_list></call><operator pos:line="42" pos:column="37">-&gt;<pos:position pos:line="42" pos:column="42"/></operator><name pos:line="42" pos:column="39">next_offset<pos:position pos:line="42" pos:column="50"/></name></expr>;<pos:position pos:line="42" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">assert<pos:position pos:line="43" pos:column="23"/></name><argument_list pos:line="43" pos:column="23">(<argument><expr><name><name pos:line="43" pos:column="24">h<pos:position pos:line="43" pos:column="25"/></name><operator pos:line="43" pos:column="25">-&gt;<pos:position pos:line="43" pos:column="30"/></operator><name pos:line="43" pos:column="27">info<pos:position pos:line="43" pos:column="31"/></name><operator pos:line="43" pos:column="31">.<pos:position pos:line="43" pos:column="32"/></operator><name pos:line="43" pos:column="32">hook_entry<pos:position pos:line="43" pos:column="42"/></name><index pos:line="43" pos:column="42">[<expr><name pos:line="43" pos:column="43">NF_IP6_POST_ROUTING<pos:position pos:line="43" pos:column="62"/></name></expr>]<pos:position pos:line="43" pos:column="63"/></index></name> <operator pos:line="43" pos:column="64">==<pos:position pos:line="43" pos:column="66"/></operator> <name pos:line="43" pos:column="67">n<pos:position pos:line="43" pos:column="68"/></name></expr></argument>)<pos:position pos:line="43" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="70"/></expr_stmt>
		<expr_stmt><expr><name pos:line="44" pos:column="17">n<pos:position pos:line="44" pos:column="18"/></name> <operator pos:line="44" pos:column="19">=<pos:position pos:line="44" pos:column="20"/></operator> <call><name pos:line="44" pos:column="21">get_chain_end<pos:position pos:line="44" pos:column="34"/></name><argument_list pos:line="44" pos:column="34">(<argument><expr><name pos:line="44" pos:column="35">h<pos:position pos:line="44" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="38">n<pos:position pos:line="44" pos:column="39"/></name></expr></argument>)<pos:position pos:line="44" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="41"/></expr_stmt>

		<expr_stmt><expr><name pos:line="46" pos:column="17">n<pos:position pos:line="46" pos:column="18"/></name> <operator pos:line="46" pos:column="19">+=<pos:position pos:line="46" pos:column="21"/></operator> <call><name pos:line="46" pos:column="22">get_entry<pos:position pos:line="46" pos:column="31"/></name><argument_list pos:line="46" pos:column="31">(<argument><expr><name pos:line="46" pos:column="32">h<pos:position pos:line="46" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="35">n<pos:position pos:line="46" pos:column="36"/></name></expr></argument>)<pos:position pos:line="46" pos:column="37"/></argument_list></call><operator pos:line="46" pos:column="37">-&gt;<pos:position pos:line="46" pos:column="42"/></operator><name pos:line="46" pos:column="39">next_offset<pos:position pos:line="46" pos:column="50"/></name></expr>;<pos:position pos:line="46" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="47" pos:column="17">assert<pos:position pos:line="47" pos:column="23"/></name><argument_list pos:line="47" pos:column="23">(<argument><expr><name><name pos:line="47" pos:column="24">h<pos:position pos:line="47" pos:column="25"/></name><operator pos:line="47" pos:column="25">-&gt;<pos:position pos:line="47" pos:column="30"/></operator><name pos:line="47" pos:column="27">info<pos:position pos:line="47" pos:column="31"/></name><operator pos:line="47" pos:column="31">.<pos:position pos:line="47" pos:column="32"/></operator><name pos:line="47" pos:column="32">hook_entry<pos:position pos:line="47" pos:column="42"/></name><index pos:line="47" pos:column="42">[<expr><name pos:line="47" pos:column="43">NF_IP6_LOCAL_OUT<pos:position pos:line="47" pos:column="59"/></name></expr>]<pos:position pos:line="47" pos:column="60"/></index></name> <operator pos:line="47" pos:column="61">==<pos:position pos:line="47" pos:column="63"/></operator> <name pos:line="47" pos:column="64">n<pos:position pos:line="47" pos:column="65"/></name></expr></argument>)<pos:position pos:line="47" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="67"/></expr_stmt>
		<expr_stmt><expr><name pos:line="48" pos:column="17">user_offset<pos:position pos:line="48" pos:column="28"/></name> <operator pos:line="48" pos:column="29">=<pos:position pos:line="48" pos:column="30"/></operator> <name><name pos:line="48" pos:column="31">h<pos:position pos:line="48" pos:column="32"/></name><operator pos:line="48" pos:column="32">-&gt;<pos:position pos:line="48" pos:column="37"/></operator><name pos:line="48" pos:column="34">info<pos:position pos:line="48" pos:column="38"/></name><operator pos:line="48" pos:column="38">.<pos:position pos:line="48" pos:column="39"/></operator><name pos:line="48" pos:column="39">hook_entry<pos:position pos:line="48" pos:column="49"/></name><index pos:line="48" pos:column="49">[<expr><name pos:line="48" pos:column="50">NF_IP6_LOCAL_OUT<pos:position pos:line="48" pos:column="66"/></name></expr>]<pos:position pos:line="48" pos:column="67"/></index></name></expr>;<pos:position pos:line="48" pos:column="68"/></expr_stmt>

		<if pos:line="50" pos:column="17">if <condition pos:line="50" pos:column="20">(<expr><name><name pos:line="50" pos:column="21">h<pos:position pos:line="50" pos:column="22"/></name><operator pos:line="50" pos:column="22">-&gt;<pos:position pos:line="50" pos:column="27"/></operator><name pos:line="50" pos:column="24">info<pos:position pos:line="50" pos:column="28"/></name><operator pos:line="50" pos:column="28">.<pos:position pos:line="50" pos:column="29"/></operator><name pos:line="50" pos:column="29">valid_hooks<pos:position pos:line="50" pos:column="40"/></name></name> <operator pos:line="50" pos:column="41">&amp;<pos:position pos:line="50" pos:column="46"/></operator> <operator pos:line="50" pos:column="43">(<pos:position pos:line="50" pos:column="44"/></operator><literal type="number" pos:line="50" pos:column="44">1<pos:position pos:line="50" pos:column="45"/></literal> <operator pos:line="50" pos:column="46">&lt;&lt;<pos:position pos:line="50" pos:column="54"/></operator> <name pos:line="50" pos:column="49">NF_IP6_LOCAL_IN<pos:position pos:line="50" pos:column="64"/></name><operator pos:line="50" pos:column="64">)<pos:position pos:line="50" pos:column="65"/></operator></expr>)<pos:position pos:line="50" pos:column="66"/></condition><then pos:line="50" pos:column="66"> <block pos:line="50" pos:column="67">{
			<expr_stmt><expr><name pos:line="51" pos:column="25">n<pos:position pos:line="51" pos:column="26"/></name> <operator pos:line="51" pos:column="27">=<pos:position pos:line="51" pos:column="28"/></operator> <call><name pos:line="51" pos:column="29">get_chain_end<pos:position pos:line="51" pos:column="42"/></name><argument_list pos:line="51" pos:column="42">(<argument><expr><name pos:line="51" pos:column="43">h<pos:position pos:line="51" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="46">n<pos:position pos:line="51" pos:column="47"/></name></expr></argument>)<pos:position pos:line="51" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="49"/></expr_stmt>
			<expr_stmt><expr><name pos:line="52" pos:column="25">n<pos:position pos:line="52" pos:column="26"/></name> <operator pos:line="52" pos:column="27">+=<pos:position pos:line="52" pos:column="29"/></operator> <call><name pos:line="52" pos:column="30">get_entry<pos:position pos:line="52" pos:column="39"/></name><argument_list pos:line="52" pos:column="39">(<argument><expr><name pos:line="52" pos:column="40">h<pos:position pos:line="52" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="43">n<pos:position pos:line="52" pos:column="44"/></name></expr></argument>)<pos:position pos:line="52" pos:column="45"/></argument_list></call><operator pos:line="52" pos:column="45">-&gt;<pos:position pos:line="52" pos:column="50"/></operator><name pos:line="52" pos:column="47">next_offset<pos:position pos:line="52" pos:column="58"/></name></expr>;<pos:position pos:line="52" pos:column="59"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="53" pos:column="25">assert<pos:position pos:line="53" pos:column="31"/></name><argument_list pos:line="53" pos:column="31">(<argument><expr><name><name pos:line="53" pos:column="32">h<pos:position pos:line="53" pos:column="33"/></name><operator pos:line="53" pos:column="33">-&gt;<pos:position pos:line="53" pos:column="38"/></operator><name pos:line="53" pos:column="35">info<pos:position pos:line="53" pos:column="39"/></name><operator pos:line="53" pos:column="39">.<pos:position pos:line="53" pos:column="40"/></operator><name pos:line="53" pos:column="40">hook_entry<pos:position pos:line="53" pos:column="50"/></name><index pos:line="53" pos:column="50">[<expr><name pos:line="53" pos:column="51">NF_IP6_LOCAL_IN<pos:position pos:line="53" pos:column="66"/></name></expr>]<pos:position pos:line="53" pos:column="67"/></index></name> <operator pos:line="53" pos:column="68">==<pos:position pos:line="53" pos:column="70"/></operator> <name pos:line="53" pos:column="71">n<pos:position pos:line="53" pos:column="72"/></name></expr></argument>)<pos:position pos:line="53" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="74"/></expr_stmt>
			<expr_stmt><expr><name pos:line="54" pos:column="25">user_offset<pos:position pos:line="54" pos:column="36"/></name> <operator pos:line="54" pos:column="37">=<pos:position pos:line="54" pos:column="38"/></operator> <name><name pos:line="54" pos:column="39">h<pos:position pos:line="54" pos:column="40"/></name><operator pos:line="54" pos:column="40">-&gt;<pos:position pos:line="54" pos:column="45"/></operator><name pos:line="54" pos:column="42">info<pos:position pos:line="54" pos:column="46"/></name><operator pos:line="54" pos:column="46">.<pos:position pos:line="54" pos:column="47"/></operator><name pos:line="54" pos:column="47">hook_entry<pos:position pos:line="54" pos:column="57"/></name><index pos:line="54" pos:column="57">[<expr><name pos:line="54" pos:column="58">NF_IP6_LOCAL_IN<pos:position pos:line="54" pos:column="73"/></name></expr>]<pos:position pos:line="54" pos:column="74"/></index></name></expr>;<pos:position pos:line="54" pos:column="75"/></expr_stmt>
		}<pos:position pos:line="55" pos:column="18"/></block></then></if>

	}<pos:position pos:line="57" pos:column="10"/></block></then></if></elseif> <elseif pos:line="57" pos:column="11">else <if pos:line="57" pos:column="16">if <condition pos:line="57" pos:column="19">(<expr><call><name pos:line="57" pos:column="20">strcmp<pos:position pos:line="57" pos:column="26"/></name><argument_list pos:line="57" pos:column="26">(<argument><expr><name><name pos:line="57" pos:column="27">h<pos:position pos:line="57" pos:column="28"/></name><operator pos:line="57" pos:column="28">-&gt;<pos:position pos:line="57" pos:column="33"/></operator><name pos:line="57" pos:column="30">info<pos:position pos:line="57" pos:column="34"/></name><operator pos:line="57" pos:column="34">.<pos:position pos:line="57" pos:column="35"/></operator><name pos:line="57" pos:column="35">name<pos:position pos:line="57" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="41">"mangle"<pos:position pos:line="57" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="50"/></argument_list></call> <operator pos:line="57" pos:column="51">==<pos:position pos:line="57" pos:column="53"/></operator> <literal type="number" pos:line="57" pos:column="54">0<pos:position pos:line="57" pos:column="55"/></literal></expr>)<pos:position pos:line="57" pos:column="56"/></condition><then pos:line="57" pos:column="56"> <block pos:line="57" pos:column="57">{
		<comment type="block" pos:line="58" pos:column="17">/* This code is getting ugly because linux &lt; 2.4.18-pre6 had
		 * two mangle hooks, linux &gt;= 2.4.18-pre6 has five mangle hooks
		 * */</comment>
		<expr_stmt><expr><call><name pos:line="61" pos:column="17">assert<pos:position pos:line="61" pos:column="23"/></name><argument_list pos:line="61" pos:column="23">(<argument><expr><operator pos:line="61" pos:column="24">(<pos:position pos:line="61" pos:column="25"/></operator><name><name pos:line="61" pos:column="25">h<pos:position pos:line="61" pos:column="26"/></name><operator pos:line="61" pos:column="26">-&gt;<pos:position pos:line="61" pos:column="31"/></operator><name pos:line="61" pos:column="28">info<pos:position pos:line="61" pos:column="32"/></name><operator pos:line="61" pos:column="32">.<pos:position pos:line="61" pos:column="33"/></operator><name pos:line="61" pos:column="33">valid_hooks<pos:position pos:line="61" pos:column="44"/></name></name>
			<operator pos:line="62" pos:column="25">==<pos:position pos:line="62" pos:column="27"/></operator> <operator pos:line="62" pos:column="28">(<pos:position pos:line="62" pos:column="29"/></operator><literal type="number" pos:line="62" pos:column="29">1<pos:position pos:line="62" pos:column="30"/></literal> <operator pos:line="62" pos:column="31">&lt;&lt;<pos:position pos:line="62" pos:column="39"/></operator> <name pos:line="62" pos:column="34">NF_IP6_PRE_ROUTING<pos:position pos:line="62" pos:column="52"/></name>
			    <operator pos:line="63" pos:column="29">|<pos:position pos:line="63" pos:column="30"/></operator> <literal type="number" pos:line="63" pos:column="31">1<pos:position pos:line="63" pos:column="32"/></literal> <operator pos:line="63" pos:column="33">&lt;&lt;<pos:position pos:line="63" pos:column="41"/></operator> <name pos:line="63" pos:column="36">NF_IP6_LOCAL_OUT<pos:position pos:line="63" pos:column="52"/></name><operator pos:line="63" pos:column="52">)<pos:position pos:line="63" pos:column="53"/></operator><operator pos:line="63" pos:column="53">)<pos:position pos:line="63" pos:column="54"/></operator> <operator pos:line="63" pos:column="55">||<pos:position pos:line="63" pos:column="57"/></operator>
		       <operator pos:line="64" pos:column="24">(<pos:position pos:line="64" pos:column="25"/></operator><name><name pos:line="64" pos:column="25">h<pos:position pos:line="64" pos:column="26"/></name><operator pos:line="64" pos:column="26">-&gt;<pos:position pos:line="64" pos:column="31"/></operator><name pos:line="64" pos:column="28">info<pos:position pos:line="64" pos:column="32"/></name><operator pos:line="64" pos:column="32">.<pos:position pos:line="64" pos:column="33"/></operator><name pos:line="64" pos:column="33">valid_hooks<pos:position pos:line="64" pos:column="44"/></name></name>
			<operator pos:line="65" pos:column="25">==<pos:position pos:line="65" pos:column="27"/></operator> <operator pos:line="65" pos:column="28">(<pos:position pos:line="65" pos:column="29"/></operator><literal type="number" pos:line="65" pos:column="29">1<pos:position pos:line="65" pos:column="30"/></literal> <operator pos:line="65" pos:column="31">&lt;&lt;<pos:position pos:line="65" pos:column="39"/></operator> <name pos:line="65" pos:column="34">NF_IP6_PRE_ROUTING<pos:position pos:line="65" pos:column="52"/></name>
			    <operator pos:line="66" pos:column="29">|<pos:position pos:line="66" pos:column="30"/></operator> <literal type="number" pos:line="66" pos:column="31">1<pos:position pos:line="66" pos:column="32"/></literal> <operator pos:line="66" pos:column="33">&lt;&lt;<pos:position pos:line="66" pos:column="41"/></operator> <name pos:line="66" pos:column="36">NF_IP6_LOCAL_IN<pos:position pos:line="66" pos:column="51"/></name>
			    <operator pos:line="67" pos:column="29">|<pos:position pos:line="67" pos:column="30"/></operator> <literal type="number" pos:line="67" pos:column="31">1<pos:position pos:line="67" pos:column="32"/></literal> <operator pos:line="67" pos:column="33">&lt;&lt;<pos:position pos:line="67" pos:column="41"/></operator> <name pos:line="67" pos:column="36">NF_IP6_FORWARD<pos:position pos:line="67" pos:column="50"/></name>
			    <operator pos:line="68" pos:column="29">|<pos:position pos:line="68" pos:column="30"/></operator> <literal type="number" pos:line="68" pos:column="31">1<pos:position pos:line="68" pos:column="32"/></literal> <operator pos:line="68" pos:column="33">&lt;&lt;<pos:position pos:line="68" pos:column="41"/></operator> <name pos:line="68" pos:column="36">NF_IP6_LOCAL_OUT<pos:position pos:line="68" pos:column="52"/></name>
			    <operator pos:line="69" pos:column="29">|<pos:position pos:line="69" pos:column="30"/></operator> <literal type="number" pos:line="69" pos:column="31">1<pos:position pos:line="69" pos:column="32"/></literal> <operator pos:line="69" pos:column="33">&lt;&lt;<pos:position pos:line="69" pos:column="41"/></operator> <name pos:line="69" pos:column="36">NF_IP6_POST_ROUTING<pos:position pos:line="69" pos:column="55"/></name><operator pos:line="69" pos:column="55">)<pos:position pos:line="69" pos:column="56"/></operator><operator pos:line="69" pos:column="56">)<pos:position pos:line="69" pos:column="57"/></operator></expr></argument>)<pos:position pos:line="69" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="59"/></expr_stmt>

		<comment type="block" pos:line="71" pos:column="17">/* Hooks should be first five */</comment>
		<expr_stmt><expr><call><name pos:line="72" pos:column="17">assert<pos:position pos:line="72" pos:column="23"/></name><argument_list pos:line="72" pos:column="23">(<argument><expr><name><name pos:line="72" pos:column="24">h<pos:position pos:line="72" pos:column="25"/></name><operator pos:line="72" pos:column="25">-&gt;<pos:position pos:line="72" pos:column="30"/></operator><name pos:line="72" pos:column="27">info<pos:position pos:line="72" pos:column="31"/></name><operator pos:line="72" pos:column="31">.<pos:position pos:line="72" pos:column="32"/></operator><name pos:line="72" pos:column="32">hook_entry<pos:position pos:line="72" pos:column="42"/></name><index pos:line="72" pos:column="42">[<expr><name pos:line="72" pos:column="43">NF_IP6_PRE_ROUTING<pos:position pos:line="72" pos:column="61"/></name></expr>]<pos:position pos:line="72" pos:column="62"/></index></name> <operator pos:line="72" pos:column="63">==<pos:position pos:line="72" pos:column="65"/></operator> <literal type="number" pos:line="72" pos:column="66">0<pos:position pos:line="72" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="69"/></expr_stmt>

		<expr_stmt><expr><name pos:line="74" pos:column="17">n<pos:position pos:line="74" pos:column="18"/></name> <operator pos:line="74" pos:column="19">=<pos:position pos:line="74" pos:column="20"/></operator> <call><name pos:line="74" pos:column="21">get_chain_end<pos:position pos:line="74" pos:column="34"/></name><argument_list pos:line="74" pos:column="34">(<argument><expr><name pos:line="74" pos:column="35">h<pos:position pos:line="74" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="74" pos:column="38">0<pos:position pos:line="74" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="41"/></expr_stmt>

		<if pos:line="76" pos:column="17">if <condition pos:line="76" pos:column="20">(<expr><name><name pos:line="76" pos:column="21">h<pos:position pos:line="76" pos:column="22"/></name><operator pos:line="76" pos:column="22">-&gt;<pos:position pos:line="76" pos:column="27"/></operator><name pos:line="76" pos:column="24">info<pos:position pos:line="76" pos:column="28"/></name><operator pos:line="76" pos:column="28">.<pos:position pos:line="76" pos:column="29"/></operator><name pos:line="76" pos:column="29">valid_hooks<pos:position pos:line="76" pos:column="40"/></name></name> <operator pos:line="76" pos:column="41">&amp;<pos:position pos:line="76" pos:column="46"/></operator> <operator pos:line="76" pos:column="43">(<pos:position pos:line="76" pos:column="44"/></operator><literal type="number" pos:line="76" pos:column="44">1<pos:position pos:line="76" pos:column="45"/></literal> <operator pos:line="76" pos:column="46">&lt;&lt;<pos:position pos:line="76" pos:column="54"/></operator> <name pos:line="76" pos:column="49">NF_IP6_LOCAL_IN<pos:position pos:line="76" pos:column="64"/></name><operator pos:line="76" pos:column="64">)<pos:position pos:line="76" pos:column="65"/></operator></expr>)<pos:position pos:line="76" pos:column="66"/></condition><then pos:line="76" pos:column="66"> <block pos:line="76" pos:column="67">{
			<expr_stmt><expr><name pos:line="77" pos:column="25">n<pos:position pos:line="77" pos:column="26"/></name> <operator pos:line="77" pos:column="27">+=<pos:position pos:line="77" pos:column="29"/></operator> <call><name pos:line="77" pos:column="30">get_entry<pos:position pos:line="77" pos:column="39"/></name><argument_list pos:line="77" pos:column="39">(<argument><expr><name pos:line="77" pos:column="40">h<pos:position pos:line="77" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="43">n<pos:position pos:line="77" pos:column="44"/></name></expr></argument>)<pos:position pos:line="77" pos:column="45"/></argument_list></call><operator pos:line="77" pos:column="45">-&gt;<pos:position pos:line="77" pos:column="50"/></operator><name pos:line="77" pos:column="47">next_offset<pos:position pos:line="77" pos:column="58"/></name></expr>;<pos:position pos:line="77" pos:column="59"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="78" pos:column="25">assert<pos:position pos:line="78" pos:column="31"/></name><argument_list pos:line="78" pos:column="31">(<argument><expr><name><name pos:line="78" pos:column="32">h<pos:position pos:line="78" pos:column="33"/></name><operator pos:line="78" pos:column="33">-&gt;<pos:position pos:line="78" pos:column="38"/></operator><name pos:line="78" pos:column="35">info<pos:position pos:line="78" pos:column="39"/></name><operator pos:line="78" pos:column="39">.<pos:position pos:line="78" pos:column="40"/></operator><name pos:line="78" pos:column="40">hook_entry<pos:position pos:line="78" pos:column="50"/></name><index pos:line="78" pos:column="50">[<expr><name pos:line="78" pos:column="51">NF_IP6_LOCAL_IN<pos:position pos:line="78" pos:column="66"/></name></expr>]<pos:position pos:line="78" pos:column="67"/></index></name> <operator pos:line="78" pos:column="68">==<pos:position pos:line="78" pos:column="70"/></operator> <name pos:line="78" pos:column="71">n<pos:position pos:line="78" pos:column="72"/></name></expr></argument>)<pos:position pos:line="78" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="74"/></expr_stmt>
			<expr_stmt><expr><name pos:line="79" pos:column="25">n<pos:position pos:line="79" pos:column="26"/></name> <operator pos:line="79" pos:column="27">=<pos:position pos:line="79" pos:column="28"/></operator> <call><name pos:line="79" pos:column="29">get_chain_end<pos:position pos:line="79" pos:column="42"/></name><argument_list pos:line="79" pos:column="42">(<argument><expr><name pos:line="79" pos:column="43">h<pos:position pos:line="79" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="46">n<pos:position pos:line="79" pos:column="47"/></name></expr></argument>)<pos:position pos:line="79" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="49"/></expr_stmt>
		}<pos:position pos:line="80" pos:column="18"/></block></then></if>

		<if pos:line="82" pos:column="17">if <condition pos:line="82" pos:column="20">(<expr><name><name pos:line="82" pos:column="21">h<pos:position pos:line="82" pos:column="22"/></name><operator pos:line="82" pos:column="22">-&gt;<pos:position pos:line="82" pos:column="27"/></operator><name pos:line="82" pos:column="24">info<pos:position pos:line="82" pos:column="28"/></name><operator pos:line="82" pos:column="28">.<pos:position pos:line="82" pos:column="29"/></operator><name pos:line="82" pos:column="29">valid_hooks<pos:position pos:line="82" pos:column="40"/></name></name> <operator pos:line="82" pos:column="41">&amp;<pos:position pos:line="82" pos:column="46"/></operator> <operator pos:line="82" pos:column="43">(<pos:position pos:line="82" pos:column="44"/></operator><literal type="number" pos:line="82" pos:column="44">1<pos:position pos:line="82" pos:column="45"/></literal> <operator pos:line="82" pos:column="46">&lt;&lt;<pos:position pos:line="82" pos:column="54"/></operator> <name pos:line="82" pos:column="49">NF_IP6_FORWARD<pos:position pos:line="82" pos:column="63"/></name><operator pos:line="82" pos:column="63">)<pos:position pos:line="82" pos:column="64"/></operator></expr>)<pos:position pos:line="82" pos:column="65"/></condition><then pos:line="82" pos:column="65"> <block pos:line="82" pos:column="66">{
			<expr_stmt><expr><name pos:line="83" pos:column="25">n<pos:position pos:line="83" pos:column="26"/></name> <operator pos:line="83" pos:column="27">+=<pos:position pos:line="83" pos:column="29"/></operator> <call><name pos:line="83" pos:column="30">get_entry<pos:position pos:line="83" pos:column="39"/></name><argument_list pos:line="83" pos:column="39">(<argument><expr><name pos:line="83" pos:column="40">h<pos:position pos:line="83" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="43">n<pos:position pos:line="83" pos:column="44"/></name></expr></argument>)<pos:position pos:line="83" pos:column="45"/></argument_list></call><operator pos:line="83" pos:column="45">-&gt;<pos:position pos:line="83" pos:column="50"/></operator><name pos:line="83" pos:column="47">next_offset<pos:position pos:line="83" pos:column="58"/></name></expr>;<pos:position pos:line="83" pos:column="59"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="84" pos:column="25">assert<pos:position pos:line="84" pos:column="31"/></name><argument_list pos:line="84" pos:column="31">(<argument><expr><name><name pos:line="84" pos:column="32">h<pos:position pos:line="84" pos:column="33"/></name><operator pos:line="84" pos:column="33">-&gt;<pos:position pos:line="84" pos:column="38"/></operator><name pos:line="84" pos:column="35">info<pos:position pos:line="84" pos:column="39"/></name><operator pos:line="84" pos:column="39">.<pos:position pos:line="84" pos:column="40"/></operator><name pos:line="84" pos:column="40">hook_entry<pos:position pos:line="84" pos:column="50"/></name><index pos:line="84" pos:column="50">[<expr><name pos:line="84" pos:column="51">NF_IP6_FORWARD<pos:position pos:line="84" pos:column="65"/></name></expr>]<pos:position pos:line="84" pos:column="66"/></index></name> <operator pos:line="84" pos:column="67">==<pos:position pos:line="84" pos:column="69"/></operator> <name pos:line="84" pos:column="70">n<pos:position pos:line="84" pos:column="71"/></name></expr></argument>)<pos:position pos:line="84" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="73"/></expr_stmt>
			<expr_stmt><expr><name pos:line="85" pos:column="25">n<pos:position pos:line="85" pos:column="26"/></name> <operator pos:line="85" pos:column="27">=<pos:position pos:line="85" pos:column="28"/></operator> <call><name pos:line="85" pos:column="29">get_chain_end<pos:position pos:line="85" pos:column="42"/></name><argument_list pos:line="85" pos:column="42">(<argument><expr><name pos:line="85" pos:column="43">h<pos:position pos:line="85" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="46">n<pos:position pos:line="85" pos:column="47"/></name></expr></argument>)<pos:position pos:line="85" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="49"/></expr_stmt>
		}<pos:position pos:line="86" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="88" pos:column="17">n<pos:position pos:line="88" pos:column="18"/></name> <operator pos:line="88" pos:column="19">+=<pos:position pos:line="88" pos:column="21"/></operator> <call><name pos:line="88" pos:column="22">get_entry<pos:position pos:line="88" pos:column="31"/></name><argument_list pos:line="88" pos:column="31">(<argument><expr><name pos:line="88" pos:column="32">h<pos:position pos:line="88" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="35">n<pos:position pos:line="88" pos:column="36"/></name></expr></argument>)<pos:position pos:line="88" pos:column="37"/></argument_list></call><operator pos:line="88" pos:column="37">-&gt;<pos:position pos:line="88" pos:column="42"/></operator><name pos:line="88" pos:column="39">next_offset<pos:position pos:line="88" pos:column="50"/></name></expr>;<pos:position pos:line="88" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="89" pos:column="17">assert<pos:position pos:line="89" pos:column="23"/></name><argument_list pos:line="89" pos:column="23">(<argument><expr><name><name pos:line="89" pos:column="24">h<pos:position pos:line="89" pos:column="25"/></name><operator pos:line="89" pos:column="25">-&gt;<pos:position pos:line="89" pos:column="30"/></operator><name pos:line="89" pos:column="27">info<pos:position pos:line="89" pos:column="31"/></name><operator pos:line="89" pos:column="31">.<pos:position pos:line="89" pos:column="32"/></operator><name pos:line="89" pos:column="32">hook_entry<pos:position pos:line="89" pos:column="42"/></name><index pos:line="89" pos:column="42">[<expr><name pos:line="89" pos:column="43">NF_IP6_LOCAL_OUT<pos:position pos:line="89" pos:column="59"/></name></expr>]<pos:position pos:line="89" pos:column="60"/></index></name> <operator pos:line="89" pos:column="61">==<pos:position pos:line="89" pos:column="63"/></operator> <name pos:line="89" pos:column="64">n<pos:position pos:line="89" pos:column="65"/></name></expr></argument>)<pos:position pos:line="89" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="67"/></expr_stmt>
		<expr_stmt><expr><name pos:line="90" pos:column="17">user_offset<pos:position pos:line="90" pos:column="28"/></name> <operator pos:line="90" pos:column="29">=<pos:position pos:line="90" pos:column="30"/></operator> <name><name pos:line="90" pos:column="31">h<pos:position pos:line="90" pos:column="32"/></name><operator pos:line="90" pos:column="32">-&gt;<pos:position pos:line="90" pos:column="37"/></operator><name pos:line="90" pos:column="34">info<pos:position pos:line="90" pos:column="38"/></name><operator pos:line="90" pos:column="38">.<pos:position pos:line="90" pos:column="39"/></operator><name pos:line="90" pos:column="39">hook_entry<pos:position pos:line="90" pos:column="49"/></name><index pos:line="90" pos:column="49">[<expr><name pos:line="90" pos:column="50">NF_IP6_LOCAL_OUT<pos:position pos:line="90" pos:column="66"/></name></expr>]<pos:position pos:line="90" pos:column="67"/></index></name></expr>;<pos:position pos:line="90" pos:column="68"/></expr_stmt>

		<if pos:line="92" pos:column="17">if <condition pos:line="92" pos:column="20">(<expr><name><name pos:line="92" pos:column="21">h<pos:position pos:line="92" pos:column="22"/></name><operator pos:line="92" pos:column="22">-&gt;<pos:position pos:line="92" pos:column="27"/></operator><name pos:line="92" pos:column="24">info<pos:position pos:line="92" pos:column="28"/></name><operator pos:line="92" pos:column="28">.<pos:position pos:line="92" pos:column="29"/></operator><name pos:line="92" pos:column="29">valid_hooks<pos:position pos:line="92" pos:column="40"/></name></name> <operator pos:line="92" pos:column="41">&amp;<pos:position pos:line="92" pos:column="46"/></operator> <operator pos:line="92" pos:column="43">(<pos:position pos:line="92" pos:column="44"/></operator><literal type="number" pos:line="92" pos:column="44">1<pos:position pos:line="92" pos:column="45"/></literal> <operator pos:line="92" pos:column="46">&lt;&lt;<pos:position pos:line="92" pos:column="54"/></operator> <name pos:line="92" pos:column="49">NF_IP6_POST_ROUTING<pos:position pos:line="92" pos:column="68"/></name><operator pos:line="92" pos:column="68">)<pos:position pos:line="92" pos:column="69"/></operator></expr>)<pos:position pos:line="92" pos:column="70"/></condition><then pos:line="92" pos:column="70"> <block pos:line="92" pos:column="71">{
			<expr_stmt><expr><name pos:line="93" pos:column="25">n<pos:position pos:line="93" pos:column="26"/></name> <operator pos:line="93" pos:column="27">=<pos:position pos:line="93" pos:column="28"/></operator> <call><name pos:line="93" pos:column="29">get_chain_end<pos:position pos:line="93" pos:column="42"/></name><argument_list pos:line="93" pos:column="42">(<argument><expr><name pos:line="93" pos:column="43">h<pos:position pos:line="93" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="46">n<pos:position pos:line="93" pos:column="47"/></name></expr></argument>)<pos:position pos:line="93" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="49"/></expr_stmt>
			<expr_stmt><expr><name pos:line="94" pos:column="25">n<pos:position pos:line="94" pos:column="26"/></name> <operator pos:line="94" pos:column="27">+=<pos:position pos:line="94" pos:column="29"/></operator> <call><name pos:line="94" pos:column="30">get_entry<pos:position pos:line="94" pos:column="39"/></name><argument_list pos:line="94" pos:column="39">(<argument><expr><name pos:line="94" pos:column="40">h<pos:position pos:line="94" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="43">n<pos:position pos:line="94" pos:column="44"/></name></expr></argument>)<pos:position pos:line="94" pos:column="45"/></argument_list></call><operator pos:line="94" pos:column="45">-&gt;<pos:position pos:line="94" pos:column="50"/></operator><name pos:line="94" pos:column="47">next_offset<pos:position pos:line="94" pos:column="58"/></name></expr>;<pos:position pos:line="94" pos:column="59"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="95" pos:column="25">assert<pos:position pos:line="95" pos:column="31"/></name><argument_list pos:line="95" pos:column="31">(<argument><expr><name><name pos:line="95" pos:column="32">h<pos:position pos:line="95" pos:column="33"/></name><operator pos:line="95" pos:column="33">-&gt;<pos:position pos:line="95" pos:column="38"/></operator><name pos:line="95" pos:column="35">info<pos:position pos:line="95" pos:column="39"/></name><operator pos:line="95" pos:column="39">.<pos:position pos:line="95" pos:column="40"/></operator><name pos:line="95" pos:column="40">hook_entry<pos:position pos:line="95" pos:column="50"/></name><index pos:line="95" pos:column="50">[<expr><name pos:line="95" pos:column="51">NF_IP6_POST_ROUTING<pos:position pos:line="95" pos:column="70"/></name></expr>]<pos:position pos:line="95" pos:column="71"/></index></name> <operator pos:line="95" pos:column="72">==<pos:position pos:line="95" pos:column="74"/></operator> <name pos:line="95" pos:column="75">n<pos:position pos:line="95" pos:column="76"/></name></expr></argument>)<pos:position pos:line="95" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="78"/></expr_stmt>
			<expr_stmt><expr><name pos:line="96" pos:column="25">user_offset<pos:position pos:line="96" pos:column="36"/></name> <operator pos:line="96" pos:column="37">=<pos:position pos:line="96" pos:column="38"/></operator> <name><name pos:line="96" pos:column="39">h<pos:position pos:line="96" pos:column="40"/></name><operator pos:line="96" pos:column="40">-&gt;<pos:position pos:line="96" pos:column="45"/></operator><name pos:line="96" pos:column="42">info<pos:position pos:line="96" pos:column="46"/></name><operator pos:line="96" pos:column="46">.<pos:position pos:line="96" pos:column="47"/></operator><name pos:line="96" pos:column="47">hook_entry<pos:position pos:line="96" pos:column="57"/></name><index pos:line="96" pos:column="57">[<expr><name pos:line="96" pos:column="58">NF_IP6_POST_ROUTING<pos:position pos:line="96" pos:column="77"/></name></expr>]<pos:position pos:line="96" pos:column="78"/></index></name></expr>;<pos:position pos:line="96" pos:column="79"/></expr_stmt>
		}<pos:position pos:line="97" pos:column="18"/></block></then></if>
	}<pos:position pos:line="98" pos:column="10"/></block></then></if></elseif> <elseif pos:line="98" pos:column="11">else <if pos:line="98" pos:column="16">if <condition pos:line="98" pos:column="19">(<expr><call><name pos:line="98" pos:column="20">strcmp<pos:position pos:line="98" pos:column="26"/></name><argument_list pos:line="98" pos:column="26">(<argument><expr><name><name pos:line="98" pos:column="27">h<pos:position pos:line="98" pos:column="28"/></name><operator pos:line="98" pos:column="28">-&gt;<pos:position pos:line="98" pos:column="33"/></operator><name pos:line="98" pos:column="30">info<pos:position pos:line="98" pos:column="34"/></name><operator pos:line="98" pos:column="34">.<pos:position pos:line="98" pos:column="35"/></operator><name pos:line="98" pos:column="35">name<pos:position pos:line="98" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="41">"raw"<pos:position pos:line="98" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="47"/></argument_list></call> <operator pos:line="98" pos:column="48">==<pos:position pos:line="98" pos:column="50"/></operator> <literal type="number" pos:line="98" pos:column="51">0<pos:position pos:line="98" pos:column="52"/></literal></expr>)<pos:position pos:line="98" pos:column="53"/></condition><then pos:line="98" pos:column="53"> <block pos:line="98" pos:column="54">{
		<expr_stmt><expr><call><name pos:line="99" pos:column="17">assert<pos:position pos:line="99" pos:column="23"/></name><argument_list pos:line="99" pos:column="23">(<argument><expr><name><name pos:line="99" pos:column="24">h<pos:position pos:line="99" pos:column="25"/></name><operator pos:line="99" pos:column="25">-&gt;<pos:position pos:line="99" pos:column="30"/></operator><name pos:line="99" pos:column="27">info<pos:position pos:line="99" pos:column="31"/></name><operator pos:line="99" pos:column="31">.<pos:position pos:line="99" pos:column="32"/></operator><name pos:line="99" pos:column="32">valid_hooks<pos:position pos:line="99" pos:column="43"/></name></name>
		       <operator pos:line="100" pos:column="24">==<pos:position pos:line="100" pos:column="26"/></operator> <operator pos:line="100" pos:column="27">(<pos:position pos:line="100" pos:column="28"/></operator><literal type="number" pos:line="100" pos:column="28">1<pos:position pos:line="100" pos:column="29"/></literal> <operator pos:line="100" pos:column="30">&lt;&lt;<pos:position pos:line="100" pos:column="38"/></operator> <name pos:line="100" pos:column="33">NF_IP6_PRE_ROUTING<pos:position pos:line="100" pos:column="51"/></name>
			   <operator pos:line="101" pos:column="28">|<pos:position pos:line="101" pos:column="29"/></operator> <literal type="number" pos:line="101" pos:column="30">1<pos:position pos:line="101" pos:column="31"/></literal> <operator pos:line="101" pos:column="32">&lt;&lt;<pos:position pos:line="101" pos:column="40"/></operator> <name pos:line="101" pos:column="35">NF_IP6_LOCAL_OUT<pos:position pos:line="101" pos:column="51"/></name><operator pos:line="101" pos:column="51">)<pos:position pos:line="101" pos:column="52"/></operator></expr></argument>)<pos:position pos:line="101" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="54"/></expr_stmt>

		<comment type="block" pos:line="103" pos:column="17">/* Hooks should be first three */</comment>
		<expr_stmt><expr><call><name pos:line="104" pos:column="17">assert<pos:position pos:line="104" pos:column="23"/></name><argument_list pos:line="104" pos:column="23">(<argument><expr><name><name pos:line="104" pos:column="24">h<pos:position pos:line="104" pos:column="25"/></name><operator pos:line="104" pos:column="25">-&gt;<pos:position pos:line="104" pos:column="30"/></operator><name pos:line="104" pos:column="27">info<pos:position pos:line="104" pos:column="31"/></name><operator pos:line="104" pos:column="31">.<pos:position pos:line="104" pos:column="32"/></operator><name pos:line="104" pos:column="32">hook_entry<pos:position pos:line="104" pos:column="42"/></name><index pos:line="104" pos:column="42">[<expr><name pos:line="104" pos:column="43">NF_IP6_PRE_ROUTING<pos:position pos:line="104" pos:column="61"/></name></expr>]<pos:position pos:line="104" pos:column="62"/></index></name> <operator pos:line="104" pos:column="63">==<pos:position pos:line="104" pos:column="65"/></operator> <literal type="number" pos:line="104" pos:column="66">0<pos:position pos:line="104" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="69"/></expr_stmt>

		<expr_stmt><expr><name pos:line="106" pos:column="17">n<pos:position pos:line="106" pos:column="18"/></name> <operator pos:line="106" pos:column="19">=<pos:position pos:line="106" pos:column="20"/></operator> <call><name pos:line="106" pos:column="21">get_chain_end<pos:position pos:line="106" pos:column="34"/></name><argument_list pos:line="106" pos:column="34">(<argument><expr><name pos:line="106" pos:column="35">h<pos:position pos:line="106" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="38">n<pos:position pos:line="106" pos:column="39"/></name></expr></argument>)<pos:position pos:line="106" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name pos:line="107" pos:column="17">n<pos:position pos:line="107" pos:column="18"/></name> <operator pos:line="107" pos:column="19">+=<pos:position pos:line="107" pos:column="21"/></operator> <call><name pos:line="107" pos:column="22">get_entry<pos:position pos:line="107" pos:column="31"/></name><argument_list pos:line="107" pos:column="31">(<argument><expr><name pos:line="107" pos:column="32">h<pos:position pos:line="107" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="35">n<pos:position pos:line="107" pos:column="36"/></name></expr></argument>)<pos:position pos:line="107" pos:column="37"/></argument_list></call><operator pos:line="107" pos:column="37">-&gt;<pos:position pos:line="107" pos:column="42"/></operator><name pos:line="107" pos:column="39">next_offset<pos:position pos:line="107" pos:column="50"/></name></expr>;<pos:position pos:line="107" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="108" pos:column="17">assert<pos:position pos:line="108" pos:column="23"/></name><argument_list pos:line="108" pos:column="23">(<argument><expr><name><name pos:line="108" pos:column="24">h<pos:position pos:line="108" pos:column="25"/></name><operator pos:line="108" pos:column="25">-&gt;<pos:position pos:line="108" pos:column="30"/></operator><name pos:line="108" pos:column="27">info<pos:position pos:line="108" pos:column="31"/></name><operator pos:line="108" pos:column="31">.<pos:position pos:line="108" pos:column="32"/></operator><name pos:line="108" pos:column="32">hook_entry<pos:position pos:line="108" pos:column="42"/></name><index pos:line="108" pos:column="42">[<expr><name pos:line="108" pos:column="43">NF_IP6_LOCAL_OUT<pos:position pos:line="108" pos:column="59"/></name></expr>]<pos:position pos:line="108" pos:column="60"/></index></name> <operator pos:line="108" pos:column="61">==<pos:position pos:line="108" pos:column="63"/></operator> <name pos:line="108" pos:column="64">n<pos:position pos:line="108" pos:column="65"/></name></expr></argument>)<pos:position pos:line="108" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="67"/></expr_stmt>

		<expr_stmt><expr><name pos:line="110" pos:column="17">user_offset<pos:position pos:line="110" pos:column="28"/></name> <operator pos:line="110" pos:column="29">=<pos:position pos:line="110" pos:column="30"/></operator> <name><name pos:line="110" pos:column="31">h<pos:position pos:line="110" pos:column="32"/></name><operator pos:line="110" pos:column="32">-&gt;<pos:position pos:line="110" pos:column="37"/></operator><name pos:line="110" pos:column="34">info<pos:position pos:line="110" pos:column="38"/></name><operator pos:line="110" pos:column="38">.<pos:position pos:line="110" pos:column="39"/></operator><name pos:line="110" pos:column="39">hook_entry<pos:position pos:line="110" pos:column="49"/></name><index pos:line="110" pos:column="49">[<expr><name pos:line="110" pos:column="50">NF_IP6_LOCAL_OUT<pos:position pos:line="110" pos:column="66"/></name></expr>]<pos:position pos:line="110" pos:column="67"/></index></name></expr>;<pos:position pos:line="110" pos:column="68"/></expr_stmt>
	}<pos:position pos:line="111" pos:column="10"/></block></then></if></elseif> <else pos:line="111" pos:column="11">else <block pos:line="111" pos:column="16">{
                <expr_stmt><expr><call><name pos:line="112" pos:column="17">fprintf<pos:position pos:line="112" pos:column="24"/></name><argument_list pos:line="112" pos:column="24">(<argument><expr><name pos:line="112" pos:column="25">stderr<pos:position pos:line="112" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="112" pos:column="33">"Unknown table `%s'\n"<pos:position pos:line="112" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="112" pos:column="57">h<pos:position pos:line="112" pos:column="58"/></name><operator pos:line="112" pos:column="58">-&gt;<pos:position pos:line="112" pos:column="63"/></operator><name pos:line="112" pos:column="60">info<pos:position pos:line="112" pos:column="64"/></name><operator pos:line="112" pos:column="64">.<pos:position pos:line="112" pos:column="65"/></operator><name pos:line="112" pos:column="65">name<pos:position pos:line="112" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="112" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="71"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="113" pos:column="17">abort<pos:position pos:line="113" pos:column="22"/></name><argument_list pos:line="113" pos:column="22">()<pos:position pos:line="113" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="25"/></expr_stmt>
	}<pos:position pos:line="114" pos:column="10"/></block></else></if>

	<comment type="block" pos:line="116" pos:column="9">/* User chain == end of last builtin + policy entry */</comment>
	<expr_stmt><expr><name pos:line="117" pos:column="9">user_offset<pos:position pos:line="117" pos:column="20"/></name> <operator pos:line="117" pos:column="21">=<pos:position pos:line="117" pos:column="22"/></operator> <call><name pos:line="117" pos:column="23">get_chain_end<pos:position pos:line="117" pos:column="36"/></name><argument_list pos:line="117" pos:column="36">(<argument><expr><name pos:line="117" pos:column="37">h<pos:position pos:line="117" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="40">user_offset<pos:position pos:line="117" pos:column="51"/></name></expr></argument>)<pos:position pos:line="117" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><name pos:line="118" pos:column="9">user_offset<pos:position pos:line="118" pos:column="20"/></name> <operator pos:line="118" pos:column="21">+=<pos:position pos:line="118" pos:column="23"/></operator> <call><name pos:line="118" pos:column="24">get_entry<pos:position pos:line="118" pos:column="33"/></name><argument_list pos:line="118" pos:column="33">(<argument><expr><name pos:line="118" pos:column="34">h<pos:position pos:line="118" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="37">user_offset<pos:position pos:line="118" pos:column="48"/></name></expr></argument>)<pos:position pos:line="118" pos:column="49"/></argument_list></call><operator pos:line="118" pos:column="49">-&gt;<pos:position pos:line="118" pos:column="54"/></operator><name pos:line="118" pos:column="51">next_offset<pos:position pos:line="118" pos:column="62"/></name></expr>;<pos:position pos:line="118" pos:column="63"/></expr_stmt>

	<comment type="block" pos:line="120" pos:column="9">/* Overflows should be end of entry chains, and unconditional
           policy nodes. */</comment>
	<for pos:line="122" pos:column="9">for <control pos:line="122" pos:column="13">(<init><expr><name pos:line="122" pos:column="14">i<pos:position pos:line="122" pos:column="15"/></name> <operator pos:line="122" pos:column="16">=<pos:position pos:line="122" pos:column="17"/></operator> <literal type="number" pos:line="122" pos:column="18">0<pos:position pos:line="122" pos:column="19"/></literal></expr>;<pos:position pos:line="122" pos:column="20"/></init> <condition><expr><name pos:line="122" pos:column="21">i<pos:position pos:line="122" pos:column="22"/></name> <operator pos:line="122" pos:column="23">&lt;<pos:position pos:line="122" pos:column="27"/></operator> <name pos:line="122" pos:column="25">NUMHOOKS<pos:position pos:line="122" pos:column="33"/></name></expr>;<pos:position pos:line="122" pos:column="34"/></condition> <incr><expr><name pos:line="122" pos:column="35">i<pos:position pos:line="122" pos:column="36"/></name><operator pos:line="122" pos:column="36">++<pos:position pos:line="122" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="122" pos:column="39"/></control> <block pos:line="122" pos:column="40">{
		<decl_stmt><decl><type><name pos:line="123" pos:column="17">STRUCT_ENTRY<pos:position pos:line="123" pos:column="29"/></name> <modifier pos:line="123" pos:column="30">*<pos:position pos:line="123" pos:column="31"/></modifier></type><name pos:line="123" pos:column="31">e<pos:position pos:line="123" pos:column="32"/></name></decl>;<pos:position pos:line="123" pos:column="33"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="124" pos:column="17">STRUCT_STANDARD_TARGET<pos:position pos:line="124" pos:column="39"/></name> <modifier pos:line="124" pos:column="40">*<pos:position pos:line="124" pos:column="41"/></modifier></type><name pos:line="124" pos:column="41">t<pos:position pos:line="124" pos:column="42"/></name></decl>;<pos:position pos:line="124" pos:column="43"/></decl_stmt>

		<if pos:line="126" pos:column="17">if <condition pos:line="126" pos:column="20">(<expr><operator pos:line="126" pos:column="21">!<pos:position pos:line="126" pos:column="22"/></operator><operator pos:line="126" pos:column="22">(<pos:position pos:line="126" pos:column="23"/></operator><name><name pos:line="126" pos:column="23">h<pos:position pos:line="126" pos:column="24"/></name><operator pos:line="126" pos:column="24">-&gt;<pos:position pos:line="126" pos:column="29"/></operator><name pos:line="126" pos:column="26">info<pos:position pos:line="126" pos:column="30"/></name><operator pos:line="126" pos:column="30">.<pos:position pos:line="126" pos:column="31"/></operator><name pos:line="126" pos:column="31">valid_hooks<pos:position pos:line="126" pos:column="42"/></name></name> <operator pos:line="126" pos:column="43">&amp;<pos:position pos:line="126" pos:column="48"/></operator> <operator pos:line="126" pos:column="45">(<pos:position pos:line="126" pos:column="46"/></operator><literal type="number" pos:line="126" pos:column="46">1<pos:position pos:line="126" pos:column="47"/></literal> <operator pos:line="126" pos:column="48">&lt;&lt;<pos:position pos:line="126" pos:column="56"/></operator> <name pos:line="126" pos:column="51">i<pos:position pos:line="126" pos:column="52"/></name><operator pos:line="126" pos:column="52">)<pos:position pos:line="126" pos:column="53"/></operator><operator pos:line="126" pos:column="53">)<pos:position pos:line="126" pos:column="54"/></operator></expr>)<pos:position pos:line="126" pos:column="55"/></condition><then pos:line="126" pos:column="55">
			<block type="pseudo"><continue pos:line="127" pos:column="25">continue;<pos:position pos:line="127" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><call><name pos:line="128" pos:column="17">assert<pos:position pos:line="128" pos:column="23"/></name><argument_list pos:line="128" pos:column="23">(<argument><expr><name><name pos:line="128" pos:column="24">h<pos:position pos:line="128" pos:column="25"/></name><operator pos:line="128" pos:column="25">-&gt;<pos:position pos:line="128" pos:column="30"/></operator><name pos:line="128" pos:column="27">info<pos:position pos:line="128" pos:column="31"/></name><operator pos:line="128" pos:column="31">.<pos:position pos:line="128" pos:column="32"/></operator><name pos:line="128" pos:column="32">underflow<pos:position pos:line="128" pos:column="41"/></name><index pos:line="128" pos:column="41">[<expr><name pos:line="128" pos:column="42">i<pos:position pos:line="128" pos:column="43"/></name></expr>]<pos:position pos:line="128" pos:column="44"/></index></name>
		       <operator pos:line="129" pos:column="24">==<pos:position pos:line="129" pos:column="26"/></operator> <call><name pos:line="129" pos:column="27">get_chain_end<pos:position pos:line="129" pos:column="40"/></name><argument_list pos:line="129" pos:column="40">(<argument><expr><name pos:line="129" pos:column="41">h<pos:position pos:line="129" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="129" pos:column="44">h<pos:position pos:line="129" pos:column="45"/></name><operator pos:line="129" pos:column="45">-&gt;<pos:position pos:line="129" pos:column="50"/></operator><name pos:line="129" pos:column="47">info<pos:position pos:line="129" pos:column="51"/></name><operator pos:line="129" pos:column="51">.<pos:position pos:line="129" pos:column="52"/></operator><name pos:line="129" pos:column="52">hook_entry<pos:position pos:line="129" pos:column="62"/></name><index pos:line="129" pos:column="62">[<expr><name pos:line="129" pos:column="63">i<pos:position pos:line="129" pos:column="64"/></name></expr>]<pos:position pos:line="129" pos:column="65"/></index></name></expr></argument>)<pos:position pos:line="129" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="129" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="68"/></expr_stmt>

		<expr_stmt><expr><name pos:line="131" pos:column="17">e<pos:position pos:line="131" pos:column="18"/></name> <operator pos:line="131" pos:column="19">=<pos:position pos:line="131" pos:column="20"/></operator> <call><name pos:line="131" pos:column="21">get_entry<pos:position pos:line="131" pos:column="30"/></name><argument_list pos:line="131" pos:column="30">(<argument><expr><name pos:line="131" pos:column="31">h<pos:position pos:line="131" pos:column="32"/></name></expr></argument>, <argument><expr><call><name pos:line="131" pos:column="34">get_chain_end<pos:position pos:line="131" pos:column="47"/></name><argument_list pos:line="131" pos:column="47">(<argument><expr><name pos:line="131" pos:column="48">h<pos:position pos:line="131" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="131" pos:column="51">h<pos:position pos:line="131" pos:column="52"/></name><operator pos:line="131" pos:column="52">-&gt;<pos:position pos:line="131" pos:column="57"/></operator><name pos:line="131" pos:column="54">info<pos:position pos:line="131" pos:column="58"/></name><operator pos:line="131" pos:column="58">.<pos:position pos:line="131" pos:column="59"/></operator><name pos:line="131" pos:column="59">hook_entry<pos:position pos:line="131" pos:column="69"/></name><index pos:line="131" pos:column="69">[<expr><name pos:line="131" pos:column="70">i<pos:position pos:line="131" pos:column="71"/></name></expr>]<pos:position pos:line="131" pos:column="72"/></index></name></expr></argument>)<pos:position pos:line="131" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="131" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="75"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="132" pos:column="17">assert<pos:position pos:line="132" pos:column="23"/></name><argument_list pos:line="132" pos:column="23">(<argument><expr><call><name pos:line="132" pos:column="24">unconditional<pos:position pos:line="132" pos:column="37"/></name><argument_list pos:line="132" pos:column="37">(<argument><expr><operator pos:line="132" pos:column="38">&amp;<pos:position pos:line="132" pos:column="43"/></operator><name><name pos:line="132" pos:column="39">e<pos:position pos:line="132" pos:column="40"/></name><operator pos:line="132" pos:column="40">-&gt;<pos:position pos:line="132" pos:column="45"/></operator><name pos:line="132" pos:column="42">ipv6<pos:position pos:line="132" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="132" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="132" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="133" pos:column="17">assert<pos:position pos:line="133" pos:column="23"/></name><argument_list pos:line="133" pos:column="23">(<argument><expr><name><name pos:line="133" pos:column="24">e<pos:position pos:line="133" pos:column="25"/></name><operator pos:line="133" pos:column="25">-&gt;<pos:position pos:line="133" pos:column="30"/></operator><name pos:line="133" pos:column="27">target_offset<pos:position pos:line="133" pos:column="40"/></name></name> <operator pos:line="133" pos:column="41">==<pos:position pos:line="133" pos:column="43"/></operator> <sizeof pos:line="133" pos:column="44">sizeof<argument_list pos:line="133" pos:column="50">(<argument><expr><operator pos:line="133" pos:column="51">*<pos:position pos:line="133" pos:column="52"/></operator><name pos:line="133" pos:column="52">e<pos:position pos:line="133" pos:column="53"/></name></expr></argument>)<pos:position pos:line="133" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="133" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="56"/></expr_stmt>
		<expr_stmt><expr><name pos:line="134" pos:column="17">t<pos:position pos:line="134" pos:column="18"/></name> <operator pos:line="134" pos:column="19">=<pos:position pos:line="134" pos:column="20"/></operator> <operator pos:line="134" pos:column="21">(<pos:position pos:line="134" pos:column="22"/></operator><name pos:line="134" pos:column="22">STRUCT_STANDARD_TARGET<pos:position pos:line="134" pos:column="44"/></name> <operator pos:line="134" pos:column="45">*<pos:position pos:line="134" pos:column="46"/></operator><operator pos:line="134" pos:column="46">)<pos:position pos:line="134" pos:column="47"/></operator><call><name pos:line="134" pos:column="47">GET_TARGET<pos:position pos:line="134" pos:column="57"/></name><argument_list pos:line="134" pos:column="57">(<argument><expr><name pos:line="134" pos:column="58">e<pos:position pos:line="134" pos:column="59"/></name></expr></argument>)<pos:position pos:line="134" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="61"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="135" pos:column="17">printf<pos:position pos:line="135" pos:column="23"/></name><argument_list pos:line="135" pos:column="23">(<argument><expr><literal type="string" pos:line="135" pos:column="24">"target_size=%u, align=%u\n"<pos:position pos:line="135" pos:column="52"/></literal></expr></argument>,
			<argument><expr><name><name pos:line="136" pos:column="25">t<pos:position pos:line="136" pos:column="26"/></name><operator pos:line="136" pos:column="26">-&gt;<pos:position pos:line="136" pos:column="31"/></operator><name pos:line="136" pos:column="28">target<pos:position pos:line="136" pos:column="34"/></name><operator pos:line="136" pos:column="34">.<pos:position pos:line="136" pos:column="35"/></operator><name pos:line="136" pos:column="35">u<pos:position pos:line="136" pos:column="36"/></name><operator pos:line="136" pos:column="36">.<pos:position pos:line="136" pos:column="37"/></operator><name pos:line="136" pos:column="37">target_size<pos:position pos:line="136" pos:column="48"/></name></name></expr></argument>, <argument><expr><call><name pos:line="136" pos:column="50">ALIGN<pos:position pos:line="136" pos:column="55"/></name><argument_list pos:line="136" pos:column="55">(<argument><expr><sizeof pos:line="136" pos:column="56">sizeof<argument_list pos:line="136" pos:column="62">(<argument><expr><operator pos:line="136" pos:column="63">*<pos:position pos:line="136" pos:column="64"/></operator><name pos:line="136" pos:column="64">t<pos:position pos:line="136" pos:column="65"/></name></expr></argument>)<pos:position pos:line="136" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="136" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="136" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="69"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="137" pos:column="17">assert<pos:position pos:line="137" pos:column="23"/></name><argument_list pos:line="137" pos:column="23">(<argument><expr><name><name pos:line="137" pos:column="24">t<pos:position pos:line="137" pos:column="25"/></name><operator pos:line="137" pos:column="25">-&gt;<pos:position pos:line="137" pos:column="30"/></operator><name pos:line="137" pos:column="27">target<pos:position pos:line="137" pos:column="33"/></name><operator pos:line="137" pos:column="33">.<pos:position pos:line="137" pos:column="34"/></operator><name pos:line="137" pos:column="34">u<pos:position pos:line="137" pos:column="35"/></name><operator pos:line="137" pos:column="35">.<pos:position pos:line="137" pos:column="36"/></operator><name pos:line="137" pos:column="36">target_size<pos:position pos:line="137" pos:column="47"/></name></name> <operator pos:line="137" pos:column="48">==<pos:position pos:line="137" pos:column="50"/></operator> <call><name pos:line="137" pos:column="51">ALIGN<pos:position pos:line="137" pos:column="56"/></name><argument_list pos:line="137" pos:column="56">(<argument><expr><sizeof pos:line="137" pos:column="57">sizeof<argument_list pos:line="137" pos:column="63">(<argument><expr><operator pos:line="137" pos:column="64">*<pos:position pos:line="137" pos:column="65"/></operator><name pos:line="137" pos:column="65">t<pos:position pos:line="137" pos:column="66"/></name></expr></argument>)<pos:position pos:line="137" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="137" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="137" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="70"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="138" pos:column="17">assert<pos:position pos:line="138" pos:column="23"/></name><argument_list pos:line="138" pos:column="23">(<argument><expr><name><name pos:line="138" pos:column="24">e<pos:position pos:line="138" pos:column="25"/></name><operator pos:line="138" pos:column="25">-&gt;<pos:position pos:line="138" pos:column="30"/></operator><name pos:line="138" pos:column="27">next_offset<pos:position pos:line="138" pos:column="38"/></name></name> <operator pos:line="138" pos:column="39">==<pos:position pos:line="138" pos:column="41"/></operator> <sizeof pos:line="138" pos:column="42">sizeof<argument_list pos:line="138" pos:column="48">(<argument><expr><operator pos:line="138" pos:column="49">*<pos:position pos:line="138" pos:column="50"/></operator><name pos:line="138" pos:column="50">e<pos:position pos:line="138" pos:column="51"/></name></expr></argument>)<pos:position pos:line="138" pos:column="52"/></argument_list></sizeof> <operator pos:line="138" pos:column="53">+<pos:position pos:line="138" pos:column="54"/></operator> <call><name pos:line="138" pos:column="55">ALIGN<pos:position pos:line="138" pos:column="60"/></name><argument_list pos:line="138" pos:column="60">(<argument><expr><sizeof pos:line="138" pos:column="61">sizeof<argument_list pos:line="138" pos:column="67">(<argument><expr><operator pos:line="138" pos:column="68">*<pos:position pos:line="138" pos:column="69"/></operator><name pos:line="138" pos:column="69">t<pos:position pos:line="138" pos:column="70"/></name></expr></argument>)<pos:position pos:line="138" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="138" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="138" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="74"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="140" pos:column="17">assert<pos:position pos:line="140" pos:column="23"/></name><argument_list pos:line="140" pos:column="23">(<argument><expr><call><name pos:line="140" pos:column="24">strcmp<pos:position pos:line="140" pos:column="30"/></name><argument_list pos:line="140" pos:column="30">(<argument><expr><name><name pos:line="140" pos:column="31">t<pos:position pos:line="140" pos:column="32"/></name><operator pos:line="140" pos:column="32">-&gt;<pos:position pos:line="140" pos:column="37"/></operator><name pos:line="140" pos:column="34">target<pos:position pos:line="140" pos:column="40"/></name><operator pos:line="140" pos:column="40">.<pos:position pos:line="140" pos:column="41"/></operator><name pos:line="140" pos:column="41">u<pos:position pos:line="140" pos:column="42"/></name><operator pos:line="140" pos:column="42">.<pos:position pos:line="140" pos:column="43"/></operator><name pos:line="140" pos:column="43">user<pos:position pos:line="140" pos:column="47"/></name><operator pos:line="140" pos:column="47">.<pos:position pos:line="140" pos:column="48"/></operator><name pos:line="140" pos:column="48">name<pos:position pos:line="140" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="140" pos:column="54">STANDARD_TARGET<pos:position pos:line="140" pos:column="69"/></name></expr></argument>)<pos:position pos:line="140" pos:column="70"/></argument_list></call><operator pos:line="140" pos:column="70">==<pos:position pos:line="140" pos:column="72"/></operator><literal type="number" pos:line="140" pos:column="72">0<pos:position pos:line="140" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="140" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="75"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="141" pos:column="17">assert<pos:position pos:line="141" pos:column="23"/></name><argument_list pos:line="141" pos:column="23">(<argument><expr><name><name pos:line="141" pos:column="24">t<pos:position pos:line="141" pos:column="25"/></name><operator pos:line="141" pos:column="25">-&gt;<pos:position pos:line="141" pos:column="30"/></operator><name pos:line="141" pos:column="27">verdict<pos:position pos:line="141" pos:column="34"/></name></name> <operator pos:line="141" pos:column="35">==<pos:position pos:line="141" pos:column="37"/></operator> <operator pos:line="141" pos:column="38">-<pos:position pos:line="141" pos:column="39"/></operator><name pos:line="141" pos:column="39">NF_DROP<pos:position pos:line="141" pos:column="46"/></name><operator pos:line="141" pos:column="46">-<pos:position pos:line="141" pos:column="47"/></operator><literal type="number" pos:line="141" pos:column="47">1<pos:position pos:line="141" pos:column="48"/></literal> <operator pos:line="141" pos:column="49">||<pos:position pos:line="141" pos:column="51"/></operator> <name><name pos:line="141" pos:column="52">t<pos:position pos:line="141" pos:column="53"/></name><operator pos:line="141" pos:column="53">-&gt;<pos:position pos:line="141" pos:column="58"/></operator><name pos:line="141" pos:column="55">verdict<pos:position pos:line="141" pos:column="62"/></name></name> <operator pos:line="141" pos:column="63">==<pos:position pos:line="141" pos:column="65"/></operator> <operator pos:line="141" pos:column="66">-<pos:position pos:line="141" pos:column="67"/></operator><name pos:line="141" pos:column="67">NF_ACCEPT<pos:position pos:line="141" pos:column="76"/></name><operator pos:line="141" pos:column="76">-<pos:position pos:line="141" pos:column="77"/></operator><literal type="number" pos:line="141" pos:column="77">1<pos:position pos:line="141" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="141" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="80"/></expr_stmt>

		<comment type="block" pos:line="143" pos:column="17">/* Hooks and underflows must be valid entries */</comment>
		<expr_stmt><expr><call><name pos:line="144" pos:column="17">iptcb_entry2index<pos:position pos:line="144" pos:column="34"/></name><argument_list pos:line="144" pos:column="34">(<argument><expr><name pos:line="144" pos:column="35">h<pos:position pos:line="144" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="144" pos:column="38">get_entry<pos:position pos:line="144" pos:column="47"/></name><argument_list pos:line="144" pos:column="47">(<argument><expr><name pos:line="144" pos:column="48">h<pos:position pos:line="144" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="144" pos:column="51">h<pos:position pos:line="144" pos:column="52"/></name><operator pos:line="144" pos:column="52">-&gt;<pos:position pos:line="144" pos:column="57"/></operator><name pos:line="144" pos:column="54">info<pos:position pos:line="144" pos:column="58"/></name><operator pos:line="144" pos:column="58">.<pos:position pos:line="144" pos:column="59"/></operator><name pos:line="144" pos:column="59">hook_entry<pos:position pos:line="144" pos:column="69"/></name><index pos:line="144" pos:column="69">[<expr><name pos:line="144" pos:column="70">i<pos:position pos:line="144" pos:column="71"/></name></expr>]<pos:position pos:line="144" pos:column="72"/></index></name></expr></argument>)<pos:position pos:line="144" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="144" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="75"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="145" pos:column="17">iptcb_entry2index<pos:position pos:line="145" pos:column="34"/></name><argument_list pos:line="145" pos:column="34">(<argument><expr><name pos:line="145" pos:column="35">h<pos:position pos:line="145" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="145" pos:column="38">get_entry<pos:position pos:line="145" pos:column="47"/></name><argument_list pos:line="145" pos:column="47">(<argument><expr><name pos:line="145" pos:column="48">h<pos:position pos:line="145" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="145" pos:column="51">h<pos:position pos:line="145" pos:column="52"/></name><operator pos:line="145" pos:column="52">-&gt;<pos:position pos:line="145" pos:column="57"/></operator><name pos:line="145" pos:column="54">info<pos:position pos:line="145" pos:column="58"/></name><operator pos:line="145" pos:column="58">.<pos:position pos:line="145" pos:column="59"/></operator><name pos:line="145" pos:column="59">underflow<pos:position pos:line="145" pos:column="68"/></name><index pos:line="145" pos:column="68">[<expr><name pos:line="145" pos:column="69">i<pos:position pos:line="145" pos:column="70"/></name></expr>]<pos:position pos:line="145" pos:column="71"/></index></name></expr></argument>)<pos:position pos:line="145" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="145" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="74"/></expr_stmt>
	}<pos:position pos:line="146" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="148" pos:column="9">assert<pos:position pos:line="148" pos:column="15"/></name><argument_list pos:line="148" pos:column="15">(<argument><expr><name><name pos:line="148" pos:column="16">h<pos:position pos:line="148" pos:column="17"/></name><operator pos:line="148" pos:column="17">-&gt;<pos:position pos:line="148" pos:column="22"/></operator><name pos:line="148" pos:column="19">info<pos:position pos:line="148" pos:column="23"/></name><operator pos:line="148" pos:column="23">.<pos:position pos:line="148" pos:column="24"/></operator><name pos:line="148" pos:column="24">size<pos:position pos:line="148" pos:column="28"/></name></name>
	       <operator pos:line="149" pos:column="16">&gt;=<pos:position pos:line="149" pos:column="21"/></operator> <name><name pos:line="149" pos:column="19">h<pos:position pos:line="149" pos:column="20"/></name><operator pos:line="149" pos:column="20">-&gt;<pos:position pos:line="149" pos:column="25"/></operator><name pos:line="149" pos:column="22">info<pos:position pos:line="149" pos:column="26"/></name><operator pos:line="149" pos:column="26">.<pos:position pos:line="149" pos:column="27"/></operator><name pos:line="149" pos:column="27">num_entries<pos:position pos:line="149" pos:column="38"/></name></name> <operator pos:line="149" pos:column="39">*<pos:position pos:line="149" pos:column="40"/></operator> <operator pos:line="149" pos:column="41">(<pos:position pos:line="149" pos:column="42"/></operator><sizeof pos:line="149" pos:column="42">sizeof<argument_list pos:line="149" pos:column="48">(<argument><expr><name pos:line="149" pos:column="49">STRUCT_ENTRY<pos:position pos:line="149" pos:column="61"/></name></expr></argument>)<pos:position pos:line="149" pos:column="62"/></argument_list></sizeof>
					 <operator pos:line="150" pos:column="42">+<pos:position pos:line="150" pos:column="43"/></operator><sizeof pos:line="150" pos:column="43">sizeof<argument_list pos:line="150" pos:column="49">(<argument><expr><name pos:line="150" pos:column="50">STRUCT_STANDARD_TARGET<pos:position pos:line="150" pos:column="72"/></name></expr></argument>)<pos:position pos:line="150" pos:column="73"/></argument_list></sizeof><operator pos:line="150" pos:column="73">)<pos:position pos:line="150" pos:column="74"/></operator></expr></argument>)<pos:position pos:line="150" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="76"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="152" pos:column="9">assert<pos:position pos:line="152" pos:column="15"/></name><argument_list pos:line="152" pos:column="15">(<argument><expr><name><name pos:line="152" pos:column="16">h<pos:position pos:line="152" pos:column="17"/></name><operator pos:line="152" pos:column="17">-&gt;<pos:position pos:line="152" pos:column="22"/></operator><name pos:line="152" pos:column="19">entries<pos:position pos:line="152" pos:column="26"/></name><operator pos:line="152" pos:column="26">.<pos:position pos:line="152" pos:column="27"/></operator><name pos:line="152" pos:column="27">size<pos:position pos:line="152" pos:column="31"/></name></name>
	       <operator pos:line="153" pos:column="16">&gt;=<pos:position pos:line="153" pos:column="21"/></operator> <operator pos:line="153" pos:column="19">(<pos:position pos:line="153" pos:column="20"/></operator><name><name pos:line="153" pos:column="20">h<pos:position pos:line="153" pos:column="21"/></name><operator pos:line="153" pos:column="21">-&gt;<pos:position pos:line="153" pos:column="26"/></operator><name pos:line="153" pos:column="23">new_number<pos:position pos:line="153" pos:column="33"/></name></name>
		   <operator pos:line="154" pos:column="20">*<pos:position pos:line="154" pos:column="21"/></operator> <operator pos:line="154" pos:column="22">(<pos:position pos:line="154" pos:column="23"/></operator><sizeof pos:line="154" pos:column="23">sizeof<argument_list pos:line="154" pos:column="29">(<argument><expr><name pos:line="154" pos:column="30">STRUCT_ENTRY<pos:position pos:line="154" pos:column="42"/></name></expr></argument>)<pos:position pos:line="154" pos:column="43"/></argument_list></sizeof>
		      <operator pos:line="155" pos:column="23">+<pos:position pos:line="155" pos:column="24"/></operator> <sizeof pos:line="155" pos:column="25">sizeof<argument_list pos:line="155" pos:column="31">(<argument><expr><name pos:line="155" pos:column="32">STRUCT_STANDARD_TARGET<pos:position pos:line="155" pos:column="54"/></name></expr></argument>)<pos:position pos:line="155" pos:column="55"/></argument_list></sizeof><operator pos:line="155" pos:column="55">)<pos:position pos:line="155" pos:column="56"/></operator><operator pos:line="155" pos:column="56">)<pos:position pos:line="155" pos:column="57"/></operator></expr></argument>)<pos:position pos:line="155" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="59"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="156" pos:column="9">assert<pos:position pos:line="156" pos:column="15"/></name><argument_list pos:line="156" pos:column="15">(<argument><expr><call><name pos:line="156" pos:column="16">strcmp<pos:position pos:line="156" pos:column="22"/></name><argument_list pos:line="156" pos:column="22">(<argument><expr><name><name pos:line="156" pos:column="23">h<pos:position pos:line="156" pos:column="24"/></name><operator pos:line="156" pos:column="24">-&gt;<pos:position pos:line="156" pos:column="29"/></operator><name pos:line="156" pos:column="26">info<pos:position pos:line="156" pos:column="30"/></name><operator pos:line="156" pos:column="30">.<pos:position pos:line="156" pos:column="31"/></operator><name pos:line="156" pos:column="31">name<pos:position pos:line="156" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="156" pos:column="37">h<pos:position pos:line="156" pos:column="38"/></name><operator pos:line="156" pos:column="38">-&gt;<pos:position pos:line="156" pos:column="43"/></operator><name pos:line="156" pos:column="40">entries<pos:position pos:line="156" pos:column="47"/></name><operator pos:line="156" pos:column="47">.<pos:position pos:line="156" pos:column="48"/></operator><name pos:line="156" pos:column="48">name<pos:position pos:line="156" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="156" pos:column="53"/></argument_list></call> <operator pos:line="156" pos:column="54">==<pos:position pos:line="156" pos:column="56"/></operator> <literal type="number" pos:line="156" pos:column="57">0<pos:position pos:line="156" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="156" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="60"/></expr_stmt>

	<expr_stmt><expr><name pos:line="158" pos:column="9">i<pos:position pos:line="158" pos:column="10"/></name> <operator pos:line="158" pos:column="11">=<pos:position pos:line="158" pos:column="12"/></operator> <literal type="number" pos:line="158" pos:column="13">0<pos:position pos:line="158" pos:column="14"/></literal></expr>;<pos:position pos:line="158" pos:column="15"/></expr_stmt> <expr_stmt><expr><name pos:line="158" pos:column="16">n<pos:position pos:line="158" pos:column="17"/></name> <operator pos:line="158" pos:column="18">=<pos:position pos:line="158" pos:column="19"/></operator> <literal type="number" pos:line="158" pos:column="20">0<pos:position pos:line="158" pos:column="21"/></literal></expr>;<pos:position pos:line="158" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><name pos:line="159" pos:column="9">was_return<pos:position pos:line="159" pos:column="19"/></name> <operator pos:line="159" pos:column="20">=<pos:position pos:line="159" pos:column="21"/></operator> <literal type="number" pos:line="159" pos:column="22">0<pos:position pos:line="159" pos:column="23"/></literal></expr>;<pos:position pos:line="159" pos:column="24"/></expr_stmt>

<cpp:if pos:line="161" pos:column="1">#<cpp:directive pos:line="161" pos:column="2">if<pos:position pos:line="161" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="161" pos:column="5">0<pos:position pos:line="161" pos:column="6"/></literal></expr></cpp:if>
	<comment type="block" pos:line="162" pos:column="9">/* Check all the entries. */</comment>
	ENTRY_ITERATE(h-&gt;entries.entrytable, h-&gt;entries.size,
		      check_entry, &amp;i, &amp;n, user_offset, &amp;was_return, h);

	assert(i == h-&gt;new_number);
	assert(n == h-&gt;entries.size);

	<comment type="block" pos:line="169" pos:column="9">/* Final entry must be error node */</comment>
	assert(strcmp(GET_TARGET(index2entry(h, h-&gt;new_number-1))
		      -&gt;u.user.name,
		      ERROR_TARGET) == 0);
<cpp:endif pos:line="173" pos:column="1">#<cpp:directive pos:line="173" pos:column="2">endif<pos:position pos:line="173" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="174" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_526_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ascent_xml<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">data<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list> <comment type="block" pos:line="1" pos:column="41">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">xmlDoc<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">doc<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">xmlNode<pos:position pos:line="4" pos:column="10"/></name> <modifier pos:line="4" pos:column="11">*<pos:position pos:line="4" pos:column="12"/></modifier></type><name pos:line="4" pos:column="12">cur<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>

<cpp:if pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">if<pos:position pos:line="6" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="6" pos:column="5">0<pos:position pos:line="6" pos:column="6"/></literal></expr></cpp:if>
  doc = xmlParseMemory (data, strlen (data),
      <comment type="block" pos:line="8" pos:column="7">/* URL = */</comment> "ascent.xml",
      <comment type="block" pos:line="9" pos:column="7">/* encoding = */</comment> NULL,
      <comment type="block" pos:line="10" pos:column="7">/* options = */</comment> 0);
<cpp:else pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">else<pos:position pos:line="11" pos:column="6"/></cpp:directive></cpp:else>
  <expr_stmt><expr><name pos:line="12" pos:column="3">doc<pos:position pos:line="12" pos:column="6"/></name> <operator pos:line="12" pos:column="7">=<pos:position pos:line="12" pos:column="8"/></operator> <call><name pos:line="12" pos:column="9">xmlParseMemory<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">(<argument><expr><name pos:line="12" pos:column="24">data<pos:position pos:line="12" pos:column="28"/></name></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="30">strlen<pos:position pos:line="12" pos:column="36"/></name><argument_list pos:line="12" pos:column="36">(<argument><expr><name pos:line="12" pos:column="37">data<pos:position pos:line="12" pos:column="41"/></name></expr></argument>)<pos:position pos:line="12" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="44"/></expr_stmt>
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif<pos:position pos:line="13" pos:column="7"/></cpp:directive></cpp:endif>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">doc<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">==<pos:position pos:line="14" pos:column="13"/></operator> <name pos:line="14" pos:column="14">NULL<pos:position pos:line="14" pos:column="18"/></name></expr>)<pos:position pos:line="14" pos:column="19"/></condition><then pos:line="14" pos:column="19"> <block pos:line="14" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">ERROR<pos:position pos:line="15" pos:column="10"/></name><argument_list pos:line="15" pos:column="10">(<argument><expr><literal type="string" pos:line="15" pos:column="11">"ascent plugin: xmlParseMemory failed."<pos:position pos:line="15" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="52"/></expr_stmt>
    <return pos:line="16" pos:column="5">return <expr><operator pos:line="16" pos:column="12">(<pos:position pos:line="16" pos:column="13"/></operator><operator pos:line="16" pos:column="13">-<pos:position pos:line="16" pos:column="14"/></operator><literal type="number" pos:line="16" pos:column="14">1<pos:position pos:line="16" pos:column="15"/></literal><operator pos:line="16" pos:column="15">)<pos:position pos:line="16" pos:column="16"/></operator></expr>;<pos:position pos:line="16" pos:column="17"/></return>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="19" pos:column="3">cur<pos:position pos:line="19" pos:column="6"/></name> <operator pos:line="19" pos:column="7">=<pos:position pos:line="19" pos:column="8"/></operator> <call><name pos:line="19" pos:column="9">xmlDocGetRootElement<pos:position pos:line="19" pos:column="29"/></name><argument_list pos:line="19" pos:column="29">(<argument><expr><name pos:line="19" pos:column="30">doc<pos:position pos:line="19" pos:column="33"/></name></expr></argument>)<pos:position pos:line="19" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="35"/></expr_stmt>
  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><name pos:line="20" pos:column="7">cur<pos:position pos:line="20" pos:column="10"/></name> <operator pos:line="20" pos:column="11">==<pos:position pos:line="20" pos:column="13"/></operator> <name pos:line="20" pos:column="14">NULL<pos:position pos:line="20" pos:column="18"/></name></expr>)<pos:position pos:line="20" pos:column="19"/></condition><then pos:line="20" pos:column="19"> <block pos:line="20" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">ERROR<pos:position pos:line="21" pos:column="10"/></name><argument_list pos:line="21" pos:column="10">(<argument><expr><literal type="string" pos:line="21" pos:column="11">"ascent plugin: XML document is empty."<pos:position pos:line="21" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">xmlFreeDoc<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><name pos:line="22" pos:column="16">doc<pos:position pos:line="22" pos:column="19"/></name></expr></argument>)<pos:position pos:line="22" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="21"/></expr_stmt>
    <return pos:line="23" pos:column="5">return <expr><operator pos:line="23" pos:column="12">(<pos:position pos:line="23" pos:column="13"/></operator><operator pos:line="23" pos:column="13">-<pos:position pos:line="23" pos:column="14"/></operator><literal type="number" pos:line="23" pos:column="14">1<pos:position pos:line="23" pos:column="15"/></literal><operator pos:line="23" pos:column="15">)<pos:position pos:line="23" pos:column="16"/></operator></expr>;<pos:position pos:line="23" pos:column="17"/></return>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>

  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><call><name pos:line="26" pos:column="7">xmlStrcmp<pos:position pos:line="26" pos:column="16"/></name><argument_list pos:line="26" pos:column="16">(<argument><expr><operator pos:line="26" pos:column="17">(<pos:position pos:line="26" pos:column="18"/></operator><specifier pos:line="26" pos:column="18">const<pos:position pos:line="26" pos:column="23"/></specifier> <name pos:line="26" pos:column="24">xmlChar<pos:position pos:line="26" pos:column="31"/></name> <operator pos:line="26" pos:column="32">*<pos:position pos:line="26" pos:column="33"/></operator><operator pos:line="26" pos:column="33">)<pos:position pos:line="26" pos:column="34"/></operator><literal type="string" pos:line="26" pos:column="34">"serverpage"<pos:position pos:line="26" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="48">cur<pos:position pos:line="26" pos:column="51"/></name><operator pos:line="26" pos:column="51">-&gt;<pos:position pos:line="26" pos:column="56"/></operator><name pos:line="26" pos:column="53">name<pos:position pos:line="26" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="58"/></argument_list></call> <operator pos:line="26" pos:column="59">!=<pos:position pos:line="26" pos:column="61"/></operator> <literal type="number" pos:line="26" pos:column="62">0<pos:position pos:line="26" pos:column="63"/></literal></expr>)<pos:position pos:line="26" pos:column="64"/></condition><then pos:line="26" pos:column="64"> <block pos:line="26" pos:column="65">{
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">ERROR<pos:position pos:line="27" pos:column="10"/></name><argument_list pos:line="27" pos:column="10">(<argument><expr><literal type="string" pos:line="27" pos:column="11">"ascent plugin: XML root element is not \"serverpage\"."<pos:position pos:line="27" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">xmlFreeDoc<pos:position pos:line="28" pos:column="15"/></name><argument_list pos:line="28" pos:column="15">(<argument><expr><name pos:line="28" pos:column="16">doc<pos:position pos:line="28" pos:column="19"/></name></expr></argument>)<pos:position pos:line="28" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="21"/></expr_stmt>
    <return pos:line="29" pos:column="5">return <expr><operator pos:line="29" pos:column="12">(<pos:position pos:line="29" pos:column="13"/></operator><operator pos:line="29" pos:column="13">-<pos:position pos:line="29" pos:column="14"/></operator><literal type="number" pos:line="29" pos:column="14">1<pos:position pos:line="29" pos:column="15"/></literal><operator pos:line="29" pos:column="15">)<pos:position pos:line="29" pos:column="16"/></operator></expr>;<pos:position pos:line="29" pos:column="17"/></return>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>

  <for pos:line="32" pos:column="3">for <control pos:line="32" pos:column="7">(<init><decl><type><name pos:line="32" pos:column="8">xmlNode<pos:position pos:line="32" pos:column="15"/></name> <modifier pos:line="32" pos:column="16">*<pos:position pos:line="32" pos:column="17"/></modifier></type><name pos:line="32" pos:column="17">child<pos:position pos:line="32" pos:column="22"/></name> <init pos:line="32" pos:column="23">= <expr><name><name pos:line="32" pos:column="25">cur<pos:position pos:line="32" pos:column="28"/></name><operator pos:line="32" pos:column="28">-&gt;<pos:position pos:line="32" pos:column="33"/></operator><name pos:line="32" pos:column="30">xmlChildrenNode<pos:position pos:line="32" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="32" pos:column="46"/></init> <condition><expr><name pos:line="32" pos:column="47">child<pos:position pos:line="32" pos:column="52"/></name> <operator pos:line="32" pos:column="53">!=<pos:position pos:line="32" pos:column="55"/></operator> <name pos:line="32" pos:column="56">NULL<pos:position pos:line="32" pos:column="60"/></name></expr>;<pos:position pos:line="32" pos:column="61"/></condition>
       <incr><expr><name pos:line="33" pos:column="8">child<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">=<pos:position pos:line="33" pos:column="15"/></operator> <name><name pos:line="33" pos:column="16">child<pos:position pos:line="33" pos:column="21"/></name><operator pos:line="33" pos:column="21">-&gt;<pos:position pos:line="33" pos:column="26"/></operator><name pos:line="33" pos:column="23">next<pos:position pos:line="33" pos:column="27"/></name></name></expr></incr>)<pos:position pos:line="33" pos:column="28"/></control> <block pos:line="33" pos:column="29">{
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><operator pos:line="34" pos:column="9">(<pos:position pos:line="34" pos:column="10"/></operator><call><name pos:line="34" pos:column="10">xmlStrcmp<pos:position pos:line="34" pos:column="19"/></name><argument_list pos:line="34" pos:column="19">(<argument><expr><operator pos:line="34" pos:column="20">(<pos:position pos:line="34" pos:column="21"/></operator><specifier pos:line="34" pos:column="21">const<pos:position pos:line="34" pos:column="26"/></specifier> <name pos:line="34" pos:column="27">xmlChar<pos:position pos:line="34" pos:column="34"/></name> <operator pos:line="34" pos:column="35">*<pos:position pos:line="34" pos:column="36"/></operator><operator pos:line="34" pos:column="36">)<pos:position pos:line="34" pos:column="37"/></operator><literal type="string" pos:line="34" pos:column="37">"comment"<pos:position pos:line="34" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="48">child<pos:position pos:line="34" pos:column="53"/></name><operator pos:line="34" pos:column="53">-&gt;<pos:position pos:line="34" pos:column="58"/></operator><name pos:line="34" pos:column="55">name<pos:position pos:line="34" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="60"/></argument_list></call> <operator pos:line="34" pos:column="61">==<pos:position pos:line="34" pos:column="63"/></operator> <literal type="number" pos:line="34" pos:column="64">0<pos:position pos:line="34" pos:column="65"/></literal><operator pos:line="34" pos:column="65">)<pos:position pos:line="34" pos:column="66"/></operator> <operator pos:line="34" pos:column="67">||<pos:position pos:line="34" pos:column="69"/></operator>
        <operator pos:line="35" pos:column="9">(<pos:position pos:line="35" pos:column="10"/></operator><call><name pos:line="35" pos:column="10">xmlStrcmp<pos:position pos:line="35" pos:column="19"/></name><argument_list pos:line="35" pos:column="19">(<argument><expr><operator pos:line="35" pos:column="20">(<pos:position pos:line="35" pos:column="21"/></operator><specifier pos:line="35" pos:column="21">const<pos:position pos:line="35" pos:column="26"/></specifier> <name pos:line="35" pos:column="27">xmlChar<pos:position pos:line="35" pos:column="34"/></name> <operator pos:line="35" pos:column="35">*<pos:position pos:line="35" pos:column="36"/></operator><operator pos:line="35" pos:column="36">)<pos:position pos:line="35" pos:column="37"/></operator><literal type="string" pos:line="35" pos:column="37">"text"<pos:position pos:line="35" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="45">child<pos:position pos:line="35" pos:column="50"/></name><operator pos:line="35" pos:column="50">-&gt;<pos:position pos:line="35" pos:column="55"/></operator><name pos:line="35" pos:column="52">name<pos:position pos:line="35" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="57"/></argument_list></call> <operator pos:line="35" pos:column="58">==<pos:position pos:line="35" pos:column="60"/></operator> <literal type="number" pos:line="35" pos:column="61">0<pos:position pos:line="35" pos:column="62"/></literal><operator pos:line="35" pos:column="62">)<pos:position pos:line="35" pos:column="63"/></operator></expr>)<pos:position pos:line="35" pos:column="64"/></condition><then pos:line="35" pos:column="64">
      <comment type="block" pos:line="36" pos:column="7">/* ignore */</comment><block type="pseudo"><empty_stmt pos:line="36" pos:column="19">;<pos:position pos:line="36" pos:column="20"/></empty_stmt></block></then>
    <elseif pos:line="37" pos:column="5">else <if pos:line="37" pos:column="10">if <condition pos:line="37" pos:column="13">(<expr><call><name pos:line="37" pos:column="14">xmlStrcmp<pos:position pos:line="37" pos:column="23"/></name><argument_list pos:line="37" pos:column="23">(<argument><expr><operator pos:line="37" pos:column="24">(<pos:position pos:line="37" pos:column="25"/></operator><specifier pos:line="37" pos:column="25">const<pos:position pos:line="37" pos:column="30"/></specifier> <name pos:line="37" pos:column="31">xmlChar<pos:position pos:line="37" pos:column="38"/></name> <operator pos:line="37" pos:column="39">*<pos:position pos:line="37" pos:column="40"/></operator><operator pos:line="37" pos:column="40">)<pos:position pos:line="37" pos:column="41"/></operator><literal type="string" pos:line="37" pos:column="41">"status"<pos:position pos:line="37" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="51">child<pos:position pos:line="37" pos:column="56"/></name><operator pos:line="37" pos:column="56">-&gt;<pos:position pos:line="37" pos:column="61"/></operator><name pos:line="37" pos:column="58">name<pos:position pos:line="37" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="63"/></argument_list></call> <operator pos:line="37" pos:column="64">==<pos:position pos:line="37" pos:column="66"/></operator> <literal type="number" pos:line="37" pos:column="67">0<pos:position pos:line="37" pos:column="68"/></literal></expr>)<pos:position pos:line="37" pos:column="69"/></condition><then pos:line="37" pos:column="69">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="7">ascent_xml_status<pos:position pos:line="38" pos:column="24"/></name><argument_list pos:line="38" pos:column="24">(<argument><expr><name pos:line="38" pos:column="25">doc<pos:position pos:line="38" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="30">child<pos:position pos:line="38" pos:column="35"/></name></expr></argument>)<pos:position pos:line="38" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="37"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="39" pos:column="5">else <if pos:line="39" pos:column="10">if <condition pos:line="39" pos:column="13">(<expr><call><name pos:line="39" pos:column="14">xmlStrcmp<pos:position pos:line="39" pos:column="23"/></name><argument_list pos:line="39" pos:column="23">(<argument><expr><operator pos:line="39" pos:column="24">(<pos:position pos:line="39" pos:column="25"/></operator><specifier pos:line="39" pos:column="25">const<pos:position pos:line="39" pos:column="30"/></specifier> <name pos:line="39" pos:column="31">xmlChar<pos:position pos:line="39" pos:column="38"/></name> <operator pos:line="39" pos:column="39">*<pos:position pos:line="39" pos:column="40"/></operator><operator pos:line="39" pos:column="40">)<pos:position pos:line="39" pos:column="41"/></operator><literal type="string" pos:line="39" pos:column="41">"instances"<pos:position pos:line="39" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="54">child<pos:position pos:line="39" pos:column="59"/></name><operator pos:line="39" pos:column="59">-&gt;<pos:position pos:line="39" pos:column="64"/></operator><name pos:line="39" pos:column="61">name<pos:position pos:line="39" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="66"/></argument_list></call> <operator pos:line="39" pos:column="67">==<pos:position pos:line="39" pos:column="69"/></operator> <literal type="number" pos:line="39" pos:column="70">0<pos:position pos:line="39" pos:column="71"/></literal></expr>)<pos:position pos:line="39" pos:column="72"/></condition><then pos:line="39" pos:column="72">
      <comment type="block" pos:line="40" pos:column="7">/* ignore for now */</comment><block type="pseudo"><empty_stmt pos:line="40" pos:column="27">;<pos:position pos:line="40" pos:column="28"/></empty_stmt></block></then></if></elseif>
    <elseif pos:line="41" pos:column="5">else <if pos:line="41" pos:column="10">if <condition pos:line="41" pos:column="13">(<expr><call><name pos:line="41" pos:column="14">xmlStrcmp<pos:position pos:line="41" pos:column="23"/></name><argument_list pos:line="41" pos:column="23">(<argument><expr><operator pos:line="41" pos:column="24">(<pos:position pos:line="41" pos:column="25"/></operator><specifier pos:line="41" pos:column="25">const<pos:position pos:line="41" pos:column="30"/></specifier> <name pos:line="41" pos:column="31">xmlChar<pos:position pos:line="41" pos:column="38"/></name> <operator pos:line="41" pos:column="39">*<pos:position pos:line="41" pos:column="40"/></operator><operator pos:line="41" pos:column="40">)<pos:position pos:line="41" pos:column="41"/></operator><literal type="string" pos:line="41" pos:column="41">"gms"<pos:position pos:line="41" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="48">child<pos:position pos:line="41" pos:column="53"/></name><operator pos:line="41" pos:column="53">-&gt;<pos:position pos:line="41" pos:column="58"/></operator><name pos:line="41" pos:column="55">name<pos:position pos:line="41" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="60"/></argument_list></call> <operator pos:line="41" pos:column="61">==<pos:position pos:line="41" pos:column="63"/></operator> <literal type="number" pos:line="41" pos:column="64">0<pos:position pos:line="41" pos:column="65"/></literal></expr>)<pos:position pos:line="41" pos:column="66"/></condition><then pos:line="41" pos:column="66">
      <comment type="block" pos:line="42" pos:column="7">/* ignore for now */</comment><block type="pseudo"><empty_stmt pos:line="42" pos:column="27">;<pos:position pos:line="42" pos:column="28"/></empty_stmt></block></then></if></elseif>
    <elseif pos:line="43" pos:column="5">else <if pos:line="43" pos:column="10">if <condition pos:line="43" pos:column="13">(<expr><call><name pos:line="43" pos:column="14">xmlStrcmp<pos:position pos:line="43" pos:column="23"/></name><argument_list pos:line="43" pos:column="23">(<argument><expr><operator pos:line="43" pos:column="24">(<pos:position pos:line="43" pos:column="25"/></operator><specifier pos:line="43" pos:column="25">const<pos:position pos:line="43" pos:column="30"/></specifier> <name pos:line="43" pos:column="31">xmlChar<pos:position pos:line="43" pos:column="38"/></name> <operator pos:line="43" pos:column="39">*<pos:position pos:line="43" pos:column="40"/></operator><operator pos:line="43" pos:column="40">)<pos:position pos:line="43" pos:column="41"/></operator><literal type="string" pos:line="43" pos:column="41">"sessions"<pos:position pos:line="43" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="53">child<pos:position pos:line="43" pos:column="58"/></name><operator pos:line="43" pos:column="58">-&gt;<pos:position pos:line="43" pos:column="63"/></operator><name pos:line="43" pos:column="60">name<pos:position pos:line="43" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="65"/></argument_list></call> <operator pos:line="43" pos:column="66">==<pos:position pos:line="43" pos:column="68"/></operator> <literal type="number" pos:line="43" pos:column="69">0<pos:position pos:line="43" pos:column="70"/></literal></expr>)<pos:position pos:line="43" pos:column="71"/></condition><then pos:line="43" pos:column="71">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="7">ascent_xml_sessions<pos:position pos:line="44" pos:column="26"/></name><argument_list pos:line="44" pos:column="26">(<argument><expr><name pos:line="44" pos:column="27">doc<pos:position pos:line="44" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="32">child<pos:position pos:line="44" pos:column="37"/></name></expr></argument>)<pos:position pos:line="44" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="39"/></expr_stmt></block></then></if></elseif>
    <else pos:line="45" pos:column="5">else <block pos:line="45" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="46" pos:column="7">WARNING<pos:position pos:line="46" pos:column="14"/></name><argument_list pos:line="46" pos:column="14">(<argument><expr><literal type="string" pos:line="46" pos:column="15">"ascent plugin: ascent_xml: Unknown tag: %s"<pos:position pos:line="46" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="61">child<pos:position pos:line="46" pos:column="66"/></name><operator pos:line="46" pos:column="66">-&gt;<pos:position pos:line="46" pos:column="71"/></operator><name pos:line="46" pos:column="68">name<pos:position pos:line="46" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="74"/></expr_stmt>
    }<pos:position pos:line="47" pos:column="6"/></block></else></if>
  }<pos:position pos:line="48" pos:column="4"/></block></for> <comment type="block" pos:line="48" pos:column="5">/* for (child) */</comment>

  <expr_stmt><expr><call><name pos:line="50" pos:column="3">xmlFreeDoc<pos:position pos:line="50" pos:column="13"/></name><argument_list pos:line="50" pos:column="13">(<argument><expr><name pos:line="50" pos:column="14">doc<pos:position pos:line="50" pos:column="17"/></name></expr></argument>)<pos:position pos:line="50" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="19"/></expr_stmt>
  <return pos:line="51" pos:column="3">return <expr><operator pos:line="51" pos:column="10">(<pos:position pos:line="51" pos:column="11"/></operator><literal type="number" pos:line="51" pos:column="11">0<pos:position pos:line="51" pos:column="12"/></literal><operator pos:line="51" pos:column="12">)<pos:position pos:line="51" pos:column="13"/></operator></expr>;<pos:position pos:line="51" pos:column="14"/></return>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

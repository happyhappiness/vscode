<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_395_collectd-5.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">csnmp_read_table<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">host_definition_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">host<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">data_definition_t<pos:position pos:line="1" pos:column="72"/></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">data<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">snmp_pdu<pos:position pos:line="3" pos:column="18"/></name></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">req<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">snmp_pdu<pos:position pos:line="4" pos:column="18"/></name></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">res<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">variable_list<pos:position pos:line="5" pos:column="23"/></name></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">vb<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>

  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">const<pos:position pos:line="7" pos:column="8"/></specifier> <name pos:line="7" pos:column="9">data_set_t<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">ds<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">oid_t<pos:position pos:line="8" pos:column="8"/></name> <modifier pos:line="8" pos:column="9">*<pos:position pos:line="8" pos:column="10"/></modifier></type><name pos:line="8" pos:column="10">oid_list<pos:position pos:line="8" pos:column="18"/></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">uint32_t<pos:position pos:line="9" pos:column="11"/></name></type> <name pos:line="9" pos:column="12">oid_list_len<pos:position pos:line="9" pos:column="24"/></name></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">status<pos:position pos:line="11" pos:column="13"/></name></decl>;<pos:position pos:line="11" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type> <name pos:line="12" pos:column="7">i<pos:position pos:line="12" pos:column="8"/></name></decl>;<pos:position pos:line="12" pos:column="9"/></decl_stmt>

  <comment type="block" pos:line="14" pos:column="3">/* `value_list_head' and `value_list_tail' implement a linked list for each
   * value. `instance_list_head' and `instance_list_tail' implement a linked list of
   * instance names. This is used to jump gaps in the table. */</comment>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">csnmp_list_instances_t<pos:position pos:line="17" pos:column="25"/></name> <modifier pos:line="17" pos:column="26">*<pos:position pos:line="17" pos:column="27"/></modifier></type><name pos:line="17" pos:column="27">instance_list_head<pos:position pos:line="17" pos:column="45"/></name></decl>;<pos:position pos:line="17" pos:column="46"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">csnmp_list_instances_t<pos:position pos:line="18" pos:column="25"/></name> <modifier pos:line="18" pos:column="26">*<pos:position pos:line="18" pos:column="27"/></modifier></type><name pos:line="18" pos:column="27">instance_list_tail<pos:position pos:line="18" pos:column="45"/></name></decl>;<pos:position pos:line="18" pos:column="46"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="19" pos:column="3">csnmp_table_values_t<pos:position pos:line="19" pos:column="23"/></name> <modifier pos:line="19" pos:column="24">*<pos:position pos:line="19" pos:column="25"/></modifier><modifier pos:line="19" pos:column="25">*<pos:position pos:line="19" pos:column="26"/></modifier></type><name pos:line="19" pos:column="26">value_list_head<pos:position pos:line="19" pos:column="41"/></name></decl>;<pos:position pos:line="19" pos:column="42"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="20" pos:column="3">csnmp_table_values_t<pos:position pos:line="20" pos:column="23"/></name> <modifier pos:line="20" pos:column="24">*<pos:position pos:line="20" pos:column="25"/></modifier><modifier pos:line="20" pos:column="25">*<pos:position pos:line="20" pos:column="26"/></modifier></type><name pos:line="20" pos:column="26">value_list_tail<pos:position pos:line="20" pos:column="41"/></name></decl>;<pos:position pos:line="20" pos:column="42"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="22" pos:column="3">DEBUG<pos:position pos:line="22" pos:column="8"/></name> <argument_list pos:line="22" pos:column="9">(<argument><expr><literal type="string" pos:line="22" pos:column="10">"snmp plugin: csnmp_read_table (host = %s, data = %s)"<pos:position pos:line="22" pos:column="64"/></literal></expr></argument>,
      <argument><expr><name><name pos:line="23" pos:column="7">host<pos:position pos:line="23" pos:column="11"/></name><operator pos:line="23" pos:column="11">-&gt;<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="13">name<pos:position pos:line="23" pos:column="17"/></name></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="19">data<pos:position pos:line="23" pos:column="23"/></name><operator pos:line="23" pos:column="23">-&gt;<pos:position pos:line="23" pos:column="28"/></operator><name pos:line="23" pos:column="25">name<pos:position pos:line="23" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="31"/></expr_stmt>

  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><name><name pos:line="25" pos:column="7">host<pos:position pos:line="25" pos:column="11"/></name><operator pos:line="25" pos:column="11">-&gt;<pos:position pos:line="25" pos:column="16"/></operator><name pos:line="25" pos:column="13">sess_handle<pos:position pos:line="25" pos:column="24"/></name></name> <operator pos:line="25" pos:column="25">==<pos:position pos:line="25" pos:column="27"/></operator> <name pos:line="25" pos:column="28">NULL<pos:position pos:line="25" pos:column="32"/></name></expr>)<pos:position pos:line="25" pos:column="33"/></condition><then pos:line="25" pos:column="33">
  <block pos:line="26" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">DEBUG<pos:position pos:line="27" pos:column="10"/></name> <argument_list pos:line="27" pos:column="11">(<argument><expr><literal type="string" pos:line="27" pos:column="12">"snmp plugin: csnmp_read_table: host-&gt;sess_handle == NULL"<pos:position pos:line="27" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="72"/></expr_stmt>
    <return pos:line="28" pos:column="5">return <expr><operator pos:line="28" pos:column="12">(<pos:position pos:line="28" pos:column="13"/></operator><operator pos:line="28" pos:column="13">-<pos:position pos:line="28" pos:column="14"/></operator><literal type="number" pos:line="28" pos:column="14">1<pos:position pos:line="28" pos:column="15"/></literal><operator pos:line="28" pos:column="15">)<pos:position pos:line="28" pos:column="16"/></operator></expr>;<pos:position pos:line="28" pos:column="17"/></return>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="31" pos:column="3">ds<pos:position pos:line="31" pos:column="5"/></name> <operator pos:line="31" pos:column="6">=<pos:position pos:line="31" pos:column="7"/></operator> <call><name pos:line="31" pos:column="8">plugin_get_ds<pos:position pos:line="31" pos:column="21"/></name> <argument_list pos:line="31" pos:column="22">(<argument><expr><name><name pos:line="31" pos:column="23">data<pos:position pos:line="31" pos:column="27"/></name><operator pos:line="31" pos:column="27">-&gt;<pos:position pos:line="31" pos:column="32"/></operator><name pos:line="31" pos:column="29">type<pos:position pos:line="31" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="35"/></expr_stmt>
  <if pos:line="32" pos:column="3">if <condition pos:line="32" pos:column="6">(<expr><operator pos:line="32" pos:column="7">!<pos:position pos:line="32" pos:column="8"/></operator><name pos:line="32" pos:column="8">ds<pos:position pos:line="32" pos:column="10"/></name></expr>)<pos:position pos:line="32" pos:column="11"/></condition><then pos:line="32" pos:column="11">
  <block pos:line="33" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">ERROR<pos:position pos:line="34" pos:column="10"/></name> <argument_list pos:line="34" pos:column="11">(<argument><expr><literal type="string" pos:line="34" pos:column="12">"snmp plugin: DataSet `%s' not defined."<pos:position pos:line="34" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="54">data<pos:position pos:line="34" pos:column="58"/></name><operator pos:line="34" pos:column="58">-&gt;<pos:position pos:line="34" pos:column="63"/></operator><name pos:line="34" pos:column="60">type<pos:position pos:line="34" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="66"/></expr_stmt>
    <return pos:line="35" pos:column="5">return <expr><operator pos:line="35" pos:column="12">(<pos:position pos:line="35" pos:column="13"/></operator><operator pos:line="35" pos:column="13">-<pos:position pos:line="35" pos:column="14"/></operator><literal type="number" pos:line="35" pos:column="14">1<pos:position pos:line="35" pos:column="15"/></literal><operator pos:line="35" pos:column="15">)<pos:position pos:line="35" pos:column="16"/></operator></expr>;<pos:position pos:line="35" pos:column="17"/></return>
  }<pos:position pos:line="36" pos:column="4"/></block></then></if>

  <if pos:line="38" pos:column="3">if <condition pos:line="38" pos:column="6">(<expr><name><name pos:line="38" pos:column="7">ds<pos:position pos:line="38" pos:column="9"/></name><operator pos:line="38" pos:column="9">-&gt;<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="11">ds_num<pos:position pos:line="38" pos:column="17"/></name></name> <operator pos:line="38" pos:column="18">!=<pos:position pos:line="38" pos:column="20"/></operator> <name><name pos:line="38" pos:column="21">data<pos:position pos:line="38" pos:column="25"/></name><operator pos:line="38" pos:column="25">-&gt;<pos:position pos:line="38" pos:column="30"/></operator><name pos:line="38" pos:column="27">values_len<pos:position pos:line="38" pos:column="37"/></name></name></expr>)<pos:position pos:line="38" pos:column="38"/></condition><then pos:line="38" pos:column="38">
  <block pos:line="39" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">ERROR<pos:position pos:line="40" pos:column="10"/></name> <argument_list pos:line="40" pos:column="11">(<argument><expr><literal type="string" pos:line="40" pos:column="12">"snmp plugin: DataSet `%s' requires %i values, but config talks about %i"<pos:position pos:line="40" pos:column="85"/></literal></expr></argument>,
        <argument><expr><name><name pos:line="41" pos:column="9">data<pos:position pos:line="41" pos:column="13"/></name><operator pos:line="41" pos:column="13">-&gt;<pos:position pos:line="41" pos:column="18"/></operator><name pos:line="41" pos:column="15">type<pos:position pos:line="41" pos:column="19"/></name></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="21">ds<pos:position pos:line="41" pos:column="23"/></name><operator pos:line="41" pos:column="23">-&gt;<pos:position pos:line="41" pos:column="28"/></operator><name pos:line="41" pos:column="25">ds_num<pos:position pos:line="41" pos:column="31"/></name></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="33">data<pos:position pos:line="41" pos:column="37"/></name><operator pos:line="41" pos:column="37">-&gt;<pos:position pos:line="41" pos:column="42"/></operator><name pos:line="41" pos:column="39">values_len<pos:position pos:line="41" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="51"/></expr_stmt>
    <return pos:line="42" pos:column="5">return <expr><operator pos:line="42" pos:column="12">(<pos:position pos:line="42" pos:column="13"/></operator><operator pos:line="42" pos:column="13">-<pos:position pos:line="42" pos:column="14"/></operator><literal type="number" pos:line="42" pos:column="14">1<pos:position pos:line="42" pos:column="15"/></literal><operator pos:line="42" pos:column="15">)<pos:position pos:line="42" pos:column="16"/></operator></expr>;<pos:position pos:line="42" pos:column="17"/></return>
  }<pos:position pos:line="43" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="45" pos:column="3">/* We need a copy of all the OIDs, because GETNEXT will destroy them. */</comment>
  <expr_stmt><expr><name pos:line="46" pos:column="3">oid_list_len<pos:position pos:line="46" pos:column="15"/></name> <operator pos:line="46" pos:column="16">=<pos:position pos:line="46" pos:column="17"/></operator> <name><name pos:line="46" pos:column="18">data<pos:position pos:line="46" pos:column="22"/></name><operator pos:line="46" pos:column="22">-&gt;<pos:position pos:line="46" pos:column="27"/></operator><name pos:line="46" pos:column="24">values_len<pos:position pos:line="46" pos:column="34"/></name></name> <operator pos:line="46" pos:column="35">+<pos:position pos:line="46" pos:column="36"/></operator> <literal type="number" pos:line="46" pos:column="37">1<pos:position pos:line="46" pos:column="38"/></literal></expr>;<pos:position pos:line="46" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><name pos:line="47" pos:column="3">oid_list<pos:position pos:line="47" pos:column="11"/></name> <operator pos:line="47" pos:column="12">=<pos:position pos:line="47" pos:column="13"/></operator> <operator pos:line="47" pos:column="14">(<pos:position pos:line="47" pos:column="15"/></operator><name pos:line="47" pos:column="15">oid_t<pos:position pos:line="47" pos:column="20"/></name> <operator pos:line="47" pos:column="21">*<pos:position pos:line="47" pos:column="22"/></operator><operator pos:line="47" pos:column="22">)<pos:position pos:line="47" pos:column="23"/></operator> <call><name pos:line="47" pos:column="24">malloc<pos:position pos:line="47" pos:column="30"/></name> <argument_list pos:line="47" pos:column="31">(<argument><expr><sizeof pos:line="47" pos:column="32">sizeof <argument_list pos:line="47" pos:column="39">(<argument><expr><name pos:line="47" pos:column="40">oid_t<pos:position pos:line="47" pos:column="45"/></name></expr></argument>)<pos:position pos:line="47" pos:column="46"/></argument_list></sizeof> <operator pos:line="47" pos:column="47">*<pos:position pos:line="47" pos:column="48"/></operator> <operator pos:line="47" pos:column="49">(<pos:position pos:line="47" pos:column="50"/></operator><name pos:line="47" pos:column="50">oid_list_len<pos:position pos:line="47" pos:column="62"/></name><operator pos:line="47" pos:column="62">)<pos:position pos:line="47" pos:column="63"/></operator></expr></argument>)<pos:position pos:line="47" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="65"/></expr_stmt>
  <if pos:line="48" pos:column="3">if <condition pos:line="48" pos:column="6">(<expr><name pos:line="48" pos:column="7">oid_list<pos:position pos:line="48" pos:column="15"/></name> <operator pos:line="48" pos:column="16">==<pos:position pos:line="48" pos:column="18"/></operator> <name pos:line="48" pos:column="19">NULL<pos:position pos:line="48" pos:column="23"/></name></expr>)<pos:position pos:line="48" pos:column="24"/></condition><then pos:line="48" pos:column="24">
  <block pos:line="49" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">ERROR<pos:position pos:line="50" pos:column="10"/></name> <argument_list pos:line="50" pos:column="11">(<argument><expr><literal type="string" pos:line="50" pos:column="12">"snmp plugin: csnmp_read_table: malloc failed."<pos:position pos:line="50" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="61"/></expr_stmt>
    <return pos:line="51" pos:column="5">return <expr><operator pos:line="51" pos:column="12">(<pos:position pos:line="51" pos:column="13"/></operator><operator pos:line="51" pos:column="13">-<pos:position pos:line="51" pos:column="14"/></operator><literal type="number" pos:line="51" pos:column="14">1<pos:position pos:line="51" pos:column="15"/></literal><operator pos:line="51" pos:column="15">)<pos:position pos:line="51" pos:column="16"/></operator></expr>;<pos:position pos:line="51" pos:column="17"/></return>
  }<pos:position pos:line="52" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="53" pos:column="3">memcpy<pos:position pos:line="53" pos:column="9"/></name> <argument_list pos:line="53" pos:column="10">(<argument><expr><name pos:line="53" pos:column="11">oid_list<pos:position pos:line="53" pos:column="19"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="21">data<pos:position pos:line="53" pos:column="25"/></name><operator pos:line="53" pos:column="25">-&gt;<pos:position pos:line="53" pos:column="30"/></operator><name pos:line="53" pos:column="27">values<pos:position pos:line="53" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="35">data<pos:position pos:line="53" pos:column="39"/></name><operator pos:line="53" pos:column="39">-&gt;<pos:position pos:line="53" pos:column="44"/></operator><name pos:line="53" pos:column="41">values_len<pos:position pos:line="53" pos:column="51"/></name></name> <operator pos:line="53" pos:column="52">*<pos:position pos:line="53" pos:column="53"/></operator> <sizeof pos:line="53" pos:column="54">sizeof <argument_list pos:line="53" pos:column="61">(<argument><expr><name pos:line="53" pos:column="62">oid_t<pos:position pos:line="53" pos:column="67"/></name></expr></argument>)<pos:position pos:line="53" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="53" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="70"/></expr_stmt>
  <if pos:line="54" pos:column="3">if <condition pos:line="54" pos:column="6">(<expr><name><name pos:line="54" pos:column="7">data<pos:position pos:line="54" pos:column="11"/></name><operator pos:line="54" pos:column="11">-&gt;<pos:position pos:line="54" pos:column="16"/></operator><name pos:line="54" pos:column="13">instance<pos:position pos:line="54" pos:column="21"/></name><operator pos:line="54" pos:column="21">.<pos:position pos:line="54" pos:column="22"/></operator><name pos:line="54" pos:column="22">oid<pos:position pos:line="54" pos:column="25"/></name><operator pos:line="54" pos:column="25">.<pos:position pos:line="54" pos:column="26"/></operator><name pos:line="54" pos:column="26">oid_len<pos:position pos:line="54" pos:column="33"/></name></name> <operator pos:line="54" pos:column="34">&gt;<pos:position pos:line="54" pos:column="38"/></operator> <literal type="number" pos:line="54" pos:column="36">0<pos:position pos:line="54" pos:column="37"/></literal></expr>)<pos:position pos:line="54" pos:column="38"/></condition><then pos:line="54" pos:column="38">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="55" pos:column="5">memcpy<pos:position pos:line="55" pos:column="11"/></name> <argument_list pos:line="55" pos:column="12">(<argument><expr><name pos:line="55" pos:column="13">oid_list<pos:position pos:line="55" pos:column="21"/></name> <operator pos:line="55" pos:column="22">+<pos:position pos:line="55" pos:column="23"/></operator> <name><name pos:line="55" pos:column="24">data<pos:position pos:line="55" pos:column="28"/></name><operator pos:line="55" pos:column="28">-&gt;<pos:position pos:line="55" pos:column="33"/></operator><name pos:line="55" pos:column="30">values_len<pos:position pos:line="55" pos:column="40"/></name></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="42">&amp;<pos:position pos:line="55" pos:column="47"/></operator><name><name pos:line="55" pos:column="43">data<pos:position pos:line="55" pos:column="47"/></name><operator pos:line="55" pos:column="47">-&gt;<pos:position pos:line="55" pos:column="52"/></operator><name pos:line="55" pos:column="49">instance<pos:position pos:line="55" pos:column="57"/></name><operator pos:line="55" pos:column="57">.<pos:position pos:line="55" pos:column="58"/></operator><name pos:line="55" pos:column="58">oid<pos:position pos:line="55" pos:column="61"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="55" pos:column="63">sizeof <argument_list pos:line="55" pos:column="70">(<argument><expr><name pos:line="55" pos:column="71">oid_t<pos:position pos:line="55" pos:column="76"/></name></expr></argument>)<pos:position pos:line="55" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="55" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="79"/></expr_stmt></block></then>
  <else pos:line="56" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="57" pos:column="5">oid_list_len<pos:position pos:line="57" pos:column="17"/></name><operator pos:line="57" pos:column="17">--<pos:position pos:line="57" pos:column="19"/></operator></expr>;<pos:position pos:line="57" pos:column="20"/></expr_stmt></block></else></if>

  <comment type="block" pos:line="59" pos:column="3">/* We're going to construct n linked lists, one for each "value".
   * value_list_head will contain pointers to the heads of these linked lists,
   * value_list_tail will contain pointers to the tail of the lists. */</comment>
  <expr_stmt><expr><name pos:line="62" pos:column="3">value_list_head<pos:position pos:line="62" pos:column="18"/></name> <operator pos:line="62" pos:column="19">=<pos:position pos:line="62" pos:column="20"/></operator> <call><name pos:line="62" pos:column="21">calloc<pos:position pos:line="62" pos:column="27"/></name> <argument_list pos:line="62" pos:column="28">(<argument><expr><name><name pos:line="62" pos:column="29">data<pos:position pos:line="62" pos:column="33"/></name><operator pos:line="62" pos:column="33">-&gt;<pos:position pos:line="62" pos:column="38"/></operator><name pos:line="62" pos:column="35">values_len<pos:position pos:line="62" pos:column="45"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="62" pos:column="47">sizeof <argument_list pos:line="62" pos:column="54">(<argument><expr><operator pos:line="62" pos:column="55">*<pos:position pos:line="62" pos:column="56"/></operator><name pos:line="62" pos:column="56">value_list_head<pos:position pos:line="62" pos:column="71"/></name></expr></argument>)<pos:position pos:line="62" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="62" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="74"/></expr_stmt>
  <expr_stmt><expr><name pos:line="63" pos:column="3">value_list_tail<pos:position pos:line="63" pos:column="18"/></name> <operator pos:line="63" pos:column="19">=<pos:position pos:line="63" pos:column="20"/></operator> <call><name pos:line="63" pos:column="21">calloc<pos:position pos:line="63" pos:column="27"/></name> <argument_list pos:line="63" pos:column="28">(<argument><expr><name><name pos:line="63" pos:column="29">data<pos:position pos:line="63" pos:column="33"/></name><operator pos:line="63" pos:column="33">-&gt;<pos:position pos:line="63" pos:column="38"/></operator><name pos:line="63" pos:column="35">values_len<pos:position pos:line="63" pos:column="45"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="63" pos:column="47">sizeof <argument_list pos:line="63" pos:column="54">(<argument><expr><operator pos:line="63" pos:column="55">*<pos:position pos:line="63" pos:column="56"/></operator><name pos:line="63" pos:column="56">value_list_tail<pos:position pos:line="63" pos:column="71"/></name></expr></argument>)<pos:position pos:line="63" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="63" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="74"/></expr_stmt>
  <if pos:line="64" pos:column="3">if <condition pos:line="64" pos:column="6">(<expr><operator pos:line="64" pos:column="7">(<pos:position pos:line="64" pos:column="8"/></operator><name pos:line="64" pos:column="8">value_list_head<pos:position pos:line="64" pos:column="23"/></name> <operator pos:line="64" pos:column="24">==<pos:position pos:line="64" pos:column="26"/></operator> <name pos:line="64" pos:column="27">NULL<pos:position pos:line="64" pos:column="31"/></name><operator pos:line="64" pos:column="31">)<pos:position pos:line="64" pos:column="32"/></operator> <operator pos:line="64" pos:column="33">||<pos:position pos:line="64" pos:column="35"/></operator> <operator pos:line="64" pos:column="36">(<pos:position pos:line="64" pos:column="37"/></operator><name pos:line="64" pos:column="37">value_list_tail<pos:position pos:line="64" pos:column="52"/></name> <operator pos:line="64" pos:column="53">==<pos:position pos:line="64" pos:column="55"/></operator> <name pos:line="64" pos:column="56">NULL<pos:position pos:line="64" pos:column="60"/></name><operator pos:line="64" pos:column="60">)<pos:position pos:line="64" pos:column="61"/></operator></expr>)<pos:position pos:line="64" pos:column="62"/></condition><then pos:line="64" pos:column="62">
  <block pos:line="65" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">ERROR<pos:position pos:line="66" pos:column="10"/></name> <argument_list pos:line="66" pos:column="11">(<argument><expr><literal type="string" pos:line="66" pos:column="12">"snmp plugin: csnmp_read_table: calloc failed."<pos:position pos:line="66" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">sfree<pos:position pos:line="67" pos:column="10"/></name> <argument_list pos:line="67" pos:column="11">(<argument><expr><name pos:line="67" pos:column="12">oid_list<pos:position pos:line="67" pos:column="20"/></name></expr></argument>)<pos:position pos:line="67" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="68" pos:column="5">sfree<pos:position pos:line="68" pos:column="10"/></name> <argument_list pos:line="68" pos:column="11">(<argument><expr><name pos:line="68" pos:column="12">value_list_head<pos:position pos:line="68" pos:column="27"/></name></expr></argument>)<pos:position pos:line="68" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="69" pos:column="5">sfree<pos:position pos:line="69" pos:column="10"/></name> <argument_list pos:line="69" pos:column="11">(<argument><expr><name pos:line="69" pos:column="12">value_list_tail<pos:position pos:line="69" pos:column="27"/></name></expr></argument>)<pos:position pos:line="69" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="29"/></expr_stmt>
    <return pos:line="70" pos:column="5">return <expr><operator pos:line="70" pos:column="12">(<pos:position pos:line="70" pos:column="13"/></operator><operator pos:line="70" pos:column="13">-<pos:position pos:line="70" pos:column="14"/></operator><literal type="number" pos:line="70" pos:column="14">1<pos:position pos:line="70" pos:column="15"/></literal><operator pos:line="70" pos:column="15">)<pos:position pos:line="70" pos:column="16"/></operator></expr>;<pos:position pos:line="70" pos:column="17"/></return>
  }<pos:position pos:line="71" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="73" pos:column="3">instance_list_head<pos:position pos:line="73" pos:column="21"/></name> <operator pos:line="73" pos:column="22">=<pos:position pos:line="73" pos:column="23"/></operator> <name pos:line="73" pos:column="24">NULL<pos:position pos:line="73" pos:column="28"/></name></expr>;<pos:position pos:line="73" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name pos:line="74" pos:column="3">instance_list_tail<pos:position pos:line="74" pos:column="21"/></name> <operator pos:line="74" pos:column="22">=<pos:position pos:line="74" pos:column="23"/></operator> <name pos:line="74" pos:column="24">NULL<pos:position pos:line="74" pos:column="28"/></name></expr>;<pos:position pos:line="74" pos:column="29"/></expr_stmt>

  <expr_stmt><expr><name pos:line="76" pos:column="3">status<pos:position pos:line="76" pos:column="9"/></name> <operator pos:line="76" pos:column="10">=<pos:position pos:line="76" pos:column="11"/></operator> <literal type="number" pos:line="76" pos:column="12">0<pos:position pos:line="76" pos:column="13"/></literal></expr>;<pos:position pos:line="76" pos:column="14"/></expr_stmt>
  <while pos:line="77" pos:column="3">while <condition pos:line="77" pos:column="9">(<expr><name pos:line="77" pos:column="10">status<pos:position pos:line="77" pos:column="16"/></name> <operator pos:line="77" pos:column="17">==<pos:position pos:line="77" pos:column="19"/></operator> <literal type="number" pos:line="77" pos:column="20">0<pos:position pos:line="77" pos:column="21"/></literal></expr>)<pos:position pos:line="77" pos:column="22"/></condition>
  <block pos:line="78" pos:column="3">{
    <expr_stmt><expr><name pos:line="79" pos:column="5">req<pos:position pos:line="79" pos:column="8"/></name> <operator pos:line="79" pos:column="9">=<pos:position pos:line="79" pos:column="10"/></operator> <call><name pos:line="79" pos:column="11">snmp_pdu_create<pos:position pos:line="79" pos:column="26"/></name> <argument_list pos:line="79" pos:column="27">(<argument><expr><name pos:line="79" pos:column="28">SNMP_MSG_GETNEXT<pos:position pos:line="79" pos:column="44"/></name></expr></argument>)<pos:position pos:line="79" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="46"/></expr_stmt>
    <if pos:line="80" pos:column="5">if <condition pos:line="80" pos:column="8">(<expr><name pos:line="80" pos:column="9">req<pos:position pos:line="80" pos:column="12"/></name> <operator pos:line="80" pos:column="13">==<pos:position pos:line="80" pos:column="15"/></operator> <name pos:line="80" pos:column="16">NULL<pos:position pos:line="80" pos:column="20"/></name></expr>)<pos:position pos:line="80" pos:column="21"/></condition><then pos:line="80" pos:column="21">
    <block pos:line="81" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="82" pos:column="7">ERROR<pos:position pos:line="82" pos:column="12"/></name> <argument_list pos:line="82" pos:column="13">(<argument><expr><literal type="string" pos:line="82" pos:column="14">"snmp plugin: snmp_pdu_create failed."<pos:position pos:line="82" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="54"/></expr_stmt>
      <expr_stmt><expr><name pos:line="83" pos:column="7">status<pos:position pos:line="83" pos:column="13"/></name> <operator pos:line="83" pos:column="14">=<pos:position pos:line="83" pos:column="15"/></operator> <operator pos:line="83" pos:column="16">-<pos:position pos:line="83" pos:column="17"/></operator><literal type="number" pos:line="83" pos:column="17">1<pos:position pos:line="83" pos:column="18"/></literal></expr>;<pos:position pos:line="83" pos:column="19"/></expr_stmt>
      <break pos:line="84" pos:column="7">break;<pos:position pos:line="84" pos:column="13"/></break>
    }<pos:position pos:line="85" pos:column="6"/></block></then></if>

    <for pos:line="87" pos:column="5">for <control pos:line="87" pos:column="9">(<init><expr><name pos:line="87" pos:column="10">i<pos:position pos:line="87" pos:column="11"/></name> <operator pos:line="87" pos:column="12">=<pos:position pos:line="87" pos:column="13"/></operator> <literal type="number" pos:line="87" pos:column="14">0<pos:position pos:line="87" pos:column="15"/></literal></expr>;<pos:position pos:line="87" pos:column="16"/></init> <condition><expr><operator pos:line="87" pos:column="17">(<pos:position pos:line="87" pos:column="18"/></operator><name pos:line="87" pos:column="18">uint32_t<pos:position pos:line="87" pos:column="26"/></name><operator pos:line="87" pos:column="26">)<pos:position pos:line="87" pos:column="27"/></operator> <name pos:line="87" pos:column="28">i<pos:position pos:line="87" pos:column="29"/></name> <operator pos:line="87" pos:column="30">&lt;<pos:position pos:line="87" pos:column="34"/></operator> <name pos:line="87" pos:column="32">oid_list_len<pos:position pos:line="87" pos:column="44"/></name></expr>;<pos:position pos:line="87" pos:column="45"/></condition> <incr><expr><name pos:line="87" pos:column="46">i<pos:position pos:line="87" pos:column="47"/></name><operator pos:line="87" pos:column="47">++<pos:position pos:line="87" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="87" pos:column="50"/></control>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="88" pos:column="7">snmp_add_null_var<pos:position pos:line="88" pos:column="24"/></name> <argument_list pos:line="88" pos:column="25">(<argument><expr><name pos:line="88" pos:column="26">req<pos:position pos:line="88" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="88" pos:column="31">oid_list<pos:position pos:line="88" pos:column="39"/></name><index pos:line="88" pos:column="39">[<expr><name pos:line="88" pos:column="40">i<pos:position pos:line="88" pos:column="41"/></name></expr>]<pos:position pos:line="88" pos:column="42"/></index></name><operator pos:line="88" pos:column="42">.<pos:position pos:line="88" pos:column="43"/></operator><name pos:line="88" pos:column="43">oid<pos:position pos:line="88" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="88" pos:column="48">oid_list<pos:position pos:line="88" pos:column="56"/></name><index pos:line="88" pos:column="56">[<expr><name pos:line="88" pos:column="57">i<pos:position pos:line="88" pos:column="58"/></name></expr>]<pos:position pos:line="88" pos:column="59"/></index></name><operator pos:line="88" pos:column="59">.<pos:position pos:line="88" pos:column="60"/></operator><name pos:line="88" pos:column="60">oid_len<pos:position pos:line="88" pos:column="67"/></name></expr></argument>)<pos:position pos:line="88" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="69"/></expr_stmt></block></for>

    <expr_stmt><expr><name pos:line="90" pos:column="5">res<pos:position pos:line="90" pos:column="8"/></name> <operator pos:line="90" pos:column="9">=<pos:position pos:line="90" pos:column="10"/></operator> <name pos:line="90" pos:column="11">NULL<pos:position pos:line="90" pos:column="15"/></name></expr>;<pos:position pos:line="90" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name pos:line="91" pos:column="5">status<pos:position pos:line="91" pos:column="11"/></name> <operator pos:line="91" pos:column="12">=<pos:position pos:line="91" pos:column="13"/></operator> <call><name pos:line="91" pos:column="14">snmp_sess_synch_response<pos:position pos:line="91" pos:column="38"/></name> <argument_list pos:line="91" pos:column="39">(<argument><expr><name><name pos:line="91" pos:column="40">host<pos:position pos:line="91" pos:column="44"/></name><operator pos:line="91" pos:column="44">-&gt;<pos:position pos:line="91" pos:column="49"/></operator><name pos:line="91" pos:column="46">sess_handle<pos:position pos:line="91" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="59">req<pos:position pos:line="91" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="91" pos:column="64">&amp;<pos:position pos:line="91" pos:column="69"/></operator><name pos:line="91" pos:column="65">res<pos:position pos:line="91" pos:column="68"/></name></expr></argument>)<pos:position pos:line="91" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="70"/></expr_stmt>

    <if pos:line="93" pos:column="5">if <condition pos:line="93" pos:column="8">(<expr><operator pos:line="93" pos:column="9">(<pos:position pos:line="93" pos:column="10"/></operator><name pos:line="93" pos:column="10">status<pos:position pos:line="93" pos:column="16"/></name> <operator pos:line="93" pos:column="17">!=<pos:position pos:line="93" pos:column="19"/></operator> <name pos:line="93" pos:column="20">STAT_SUCCESS<pos:position pos:line="93" pos:column="32"/></name><operator pos:line="93" pos:column="32">)<pos:position pos:line="93" pos:column="33"/></operator> <operator pos:line="93" pos:column="34">||<pos:position pos:line="93" pos:column="36"/></operator> <operator pos:line="93" pos:column="37">(<pos:position pos:line="93" pos:column="38"/></operator><name pos:line="93" pos:column="38">res<pos:position pos:line="93" pos:column="41"/></name> <operator pos:line="93" pos:column="42">==<pos:position pos:line="93" pos:column="44"/></operator> <name pos:line="93" pos:column="45">NULL<pos:position pos:line="93" pos:column="49"/></name><operator pos:line="93" pos:column="49">)<pos:position pos:line="93" pos:column="50"/></operator></expr>)<pos:position pos:line="93" pos:column="51"/></condition><then pos:line="93" pos:column="51">
    <block pos:line="94" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="95" pos:column="7">char<pos:position pos:line="95" pos:column="11"/></name> <modifier pos:line="95" pos:column="12">*<pos:position pos:line="95" pos:column="13"/></modifier></type><name pos:line="95" pos:column="13">errstr<pos:position pos:line="95" pos:column="19"/></name> <init pos:line="95" pos:column="20">= <expr><name pos:line="95" pos:column="22">NULL<pos:position pos:line="95" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="95" pos:column="27"/></decl_stmt>

      <expr_stmt><expr><call><name pos:line="97" pos:column="7">snmp_sess_error<pos:position pos:line="97" pos:column="22"/></name> <argument_list pos:line="97" pos:column="23">(<argument><expr><name><name pos:line="97" pos:column="24">host<pos:position pos:line="97" pos:column="28"/></name><operator pos:line="97" pos:column="28">-&gt;<pos:position pos:line="97" pos:column="33"/></operator><name pos:line="97" pos:column="30">sess_handle<pos:position pos:line="97" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="43">NULL<pos:position pos:line="97" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="49">NULL<pos:position pos:line="97" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="97" pos:column="55">&amp;<pos:position pos:line="97" pos:column="60"/></operator><name pos:line="97" pos:column="56">errstr<pos:position pos:line="97" pos:column="62"/></name></expr></argument>)<pos:position pos:line="97" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="64"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="99" pos:column="7">c_complain<pos:position pos:line="99" pos:column="17"/></name> <argument_list pos:line="99" pos:column="18">(<argument><expr><name pos:line="99" pos:column="19">LOG_ERR<pos:position pos:line="99" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="99" pos:column="28">&amp;<pos:position pos:line="99" pos:column="33"/></operator><name><name pos:line="99" pos:column="29">host<pos:position pos:line="99" pos:column="33"/></name><operator pos:line="99" pos:column="33">-&gt;<pos:position pos:line="99" pos:column="38"/></operator><name pos:line="99" pos:column="35">complaint<pos:position pos:line="99" pos:column="44"/></name></name></expr></argument>,
          <argument><expr><literal type="string" pos:line="100" pos:column="11">"snmp plugin: host %s: snmp_sess_synch_response failed: %s"<pos:position pos:line="100" pos:column="70"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="101" pos:column="11">host<pos:position pos:line="101" pos:column="15"/></name><operator pos:line="101" pos:column="15">-&gt;<pos:position pos:line="101" pos:column="20"/></operator><name pos:line="101" pos:column="17">name<pos:position pos:line="101" pos:column="21"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="101" pos:column="23">(<pos:position pos:line="101" pos:column="24"/></operator><name pos:line="101" pos:column="24">errstr<pos:position pos:line="101" pos:column="30"/></name> <operator pos:line="101" pos:column="31">==<pos:position pos:line="101" pos:column="33"/></operator> <name pos:line="101" pos:column="34">NULL<pos:position pos:line="101" pos:column="38"/></name><operator pos:line="101" pos:column="38">)<pos:position pos:line="101" pos:column="39"/></operator></expr> ?<pos:position pos:line="101" pos:column="41"/></condition><then pos:line="101" pos:column="41"> <expr><literal type="string" pos:line="101" pos:column="42">"Unknown problem"<pos:position pos:line="101" pos:column="59"/></literal></expr> <pos:position pos:line="101" pos:column="60"/></then><else pos:line="101" pos:column="60">: <expr><name pos:line="101" pos:column="62">errstr<pos:position pos:line="101" pos:column="68"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="101" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="70"/></expr_stmt>

      <if pos:line="103" pos:column="7">if <condition pos:line="103" pos:column="10">(<expr><name pos:line="103" pos:column="11">res<pos:position pos:line="103" pos:column="14"/></name> <operator pos:line="103" pos:column="15">!=<pos:position pos:line="103" pos:column="17"/></operator> <name pos:line="103" pos:column="18">NULL<pos:position pos:line="103" pos:column="22"/></name></expr>)<pos:position pos:line="103" pos:column="23"/></condition><then pos:line="103" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="104" pos:column="9">snmp_free_pdu<pos:position pos:line="104" pos:column="22"/></name> <argument_list pos:line="104" pos:column="23">(<argument><expr><name pos:line="104" pos:column="24">res<pos:position pos:line="104" pos:column="27"/></name></expr></argument>)<pos:position pos:line="104" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="29"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name pos:line="105" pos:column="7">res<pos:position pos:line="105" pos:column="10"/></name> <operator pos:line="105" pos:column="11">=<pos:position pos:line="105" pos:column="12"/></operator> <name pos:line="105" pos:column="13">NULL<pos:position pos:line="105" pos:column="17"/></name></expr>;<pos:position pos:line="105" pos:column="18"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="107" pos:column="7">sfree<pos:position pos:line="107" pos:column="12"/></name> <argument_list pos:line="107" pos:column="13">(<argument><expr><name pos:line="107" pos:column="14">errstr<pos:position pos:line="107" pos:column="20"/></name></expr></argument>)<pos:position pos:line="107" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="108" pos:column="7">csnmp_host_close_session<pos:position pos:line="108" pos:column="31"/></name> <argument_list pos:line="108" pos:column="32">(<argument><expr><name pos:line="108" pos:column="33">host<pos:position pos:line="108" pos:column="37"/></name></expr></argument>)<pos:position pos:line="108" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="39"/></expr_stmt>

      <expr_stmt><expr><name pos:line="110" pos:column="7">status<pos:position pos:line="110" pos:column="13"/></name> <operator pos:line="110" pos:column="14">=<pos:position pos:line="110" pos:column="15"/></operator> <operator pos:line="110" pos:column="16">-<pos:position pos:line="110" pos:column="17"/></operator><literal type="number" pos:line="110" pos:column="17">1<pos:position pos:line="110" pos:column="18"/></literal></expr>;<pos:position pos:line="110" pos:column="19"/></expr_stmt>
      <break pos:line="111" pos:column="7">break;<pos:position pos:line="111" pos:column="13"/></break>
    }<pos:position pos:line="112" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="113" pos:column="5">status<pos:position pos:line="113" pos:column="11"/></name> <operator pos:line="113" pos:column="12">=<pos:position pos:line="113" pos:column="13"/></operator> <literal type="number" pos:line="113" pos:column="14">0<pos:position pos:line="113" pos:column="15"/></literal></expr>;<pos:position pos:line="113" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="114" pos:column="5">assert<pos:position pos:line="114" pos:column="11"/></name> <argument_list pos:line="114" pos:column="12">(<argument><expr><name pos:line="114" pos:column="13">res<pos:position pos:line="114" pos:column="16"/></name> <operator pos:line="114" pos:column="17">!=<pos:position pos:line="114" pos:column="19"/></operator> <name pos:line="114" pos:column="20">NULL<pos:position pos:line="114" pos:column="24"/></name></expr></argument>)<pos:position pos:line="114" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="115" pos:column="5">c_release<pos:position pos:line="115" pos:column="14"/></name> <argument_list pos:line="115" pos:column="15">(<argument><expr><name pos:line="115" pos:column="16">LOG_INFO<pos:position pos:line="115" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="115" pos:column="26">&amp;<pos:position pos:line="115" pos:column="31"/></operator><name><name pos:line="115" pos:column="27">host<pos:position pos:line="115" pos:column="31"/></name><operator pos:line="115" pos:column="31">-&gt;<pos:position pos:line="115" pos:column="36"/></operator><name pos:line="115" pos:column="33">complaint<pos:position pos:line="115" pos:column="42"/></name></name></expr></argument>,
        <argument><expr><literal type="string" pos:line="116" pos:column="9">"snmp plugin: host %s: snmp_sess_synch_response successful."<pos:position pos:line="116" pos:column="69"/></literal></expr></argument>,
        <argument><expr><name><name pos:line="117" pos:column="9">host<pos:position pos:line="117" pos:column="13"/></name><operator pos:line="117" pos:column="13">-&gt;<pos:position pos:line="117" pos:column="18"/></operator><name pos:line="117" pos:column="15">name<pos:position pos:line="117" pos:column="19"/></name></name></expr></argument>)<pos:position pos:line="117" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="21"/></expr_stmt>

    <expr_stmt><expr><name pos:line="119" pos:column="5">vb<pos:position pos:line="119" pos:column="7"/></name> <operator pos:line="119" pos:column="8">=<pos:position pos:line="119" pos:column="9"/></operator> <name><name pos:line="119" pos:column="10">res<pos:position pos:line="119" pos:column="13"/></name><operator pos:line="119" pos:column="13">-&gt;<pos:position pos:line="119" pos:column="18"/></operator><name pos:line="119" pos:column="15">variables<pos:position pos:line="119" pos:column="24"/></name></name></expr>;<pos:position pos:line="119" pos:column="25"/></expr_stmt>
    <if pos:line="120" pos:column="5">if <condition pos:line="120" pos:column="8">(<expr><name pos:line="120" pos:column="9">vb<pos:position pos:line="120" pos:column="11"/></name> <operator pos:line="120" pos:column="12">==<pos:position pos:line="120" pos:column="14"/></operator> <name pos:line="120" pos:column="15">NULL<pos:position pos:line="120" pos:column="19"/></name></expr>)<pos:position pos:line="120" pos:column="20"/></condition><then pos:line="120" pos:column="20">
    <block pos:line="121" pos:column="5">{
      <expr_stmt><expr><name pos:line="122" pos:column="7">status<pos:position pos:line="122" pos:column="13"/></name> <operator pos:line="122" pos:column="14">=<pos:position pos:line="122" pos:column="15"/></operator> <operator pos:line="122" pos:column="16">-<pos:position pos:line="122" pos:column="17"/></operator><literal type="number" pos:line="122" pos:column="17">1<pos:position pos:line="122" pos:column="18"/></literal></expr>;<pos:position pos:line="122" pos:column="19"/></expr_stmt>
      <break pos:line="123" pos:column="7">break;<pos:position pos:line="123" pos:column="13"/></break>
    }<pos:position pos:line="124" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="126" pos:column="5">/* Check if all values (and possibly the instance) have left their
     * subtree */</comment>
    <if pos:line="128" pos:column="5">if <condition pos:line="128" pos:column="8">(<expr><call><name pos:line="128" pos:column="9">csnmp_check_res_left_subtree<pos:position pos:line="128" pos:column="37"/></name> <argument_list pos:line="128" pos:column="38">(<argument><expr><name pos:line="128" pos:column="39">host<pos:position pos:line="128" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="45">data<pos:position pos:line="128" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="51">res<pos:position pos:line="128" pos:column="54"/></name></expr></argument>)<pos:position pos:line="128" pos:column="55"/></argument_list></call> <operator pos:line="128" pos:column="56">!=<pos:position pos:line="128" pos:column="58"/></operator> <literal type="number" pos:line="128" pos:column="59">0<pos:position pos:line="128" pos:column="60"/></literal></expr>)<pos:position pos:line="128" pos:column="61"/></condition><then pos:line="128" pos:column="61">
    <block pos:line="129" pos:column="5">{
      <expr_stmt><expr><name pos:line="130" pos:column="7">status<pos:position pos:line="130" pos:column="13"/></name> <operator pos:line="130" pos:column="14">=<pos:position pos:line="130" pos:column="15"/></operator> <literal type="number" pos:line="130" pos:column="16">0<pos:position pos:line="130" pos:column="17"/></literal></expr>;<pos:position pos:line="130" pos:column="18"/></expr_stmt>
      <break pos:line="131" pos:column="7">break;<pos:position pos:line="131" pos:column="13"/></break>
    }<pos:position pos:line="132" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="134" pos:column="5">/* Copy the OID of the value used as instance to oid_list, if an instance
     * is configured. */</comment>
    <if pos:line="136" pos:column="5">if <condition pos:line="136" pos:column="8">(<expr><name><name pos:line="136" pos:column="9">data<pos:position pos:line="136" pos:column="13"/></name><operator pos:line="136" pos:column="13">-&gt;<pos:position pos:line="136" pos:column="18"/></operator><name pos:line="136" pos:column="15">instance<pos:position pos:line="136" pos:column="23"/></name><operator pos:line="136" pos:column="23">.<pos:position pos:line="136" pos:column="24"/></operator><name pos:line="136" pos:column="24">oid<pos:position pos:line="136" pos:column="27"/></name><operator pos:line="136" pos:column="27">.<pos:position pos:line="136" pos:column="28"/></operator><name pos:line="136" pos:column="28">oid_len<pos:position pos:line="136" pos:column="35"/></name></name> <operator pos:line="136" pos:column="36">&gt;<pos:position pos:line="136" pos:column="40"/></operator> <literal type="number" pos:line="136" pos:column="38">0<pos:position pos:line="136" pos:column="39"/></literal></expr>)<pos:position pos:line="136" pos:column="40"/></condition><then pos:line="136" pos:column="40">
    <block pos:line="137" pos:column="5">{
      <comment type="block" pos:line="138" pos:column="7">/* Allocate a new `csnmp_list_instances_t', insert the instance name and
       * add it to the list */</comment>
      <if pos:line="140" pos:column="7">if <condition pos:line="140" pos:column="10">(<expr><call><name pos:line="140" pos:column="11">csnmp_instance_list_add<pos:position pos:line="140" pos:column="34"/></name> <argument_list pos:line="140" pos:column="35">(<argument><expr><operator pos:line="140" pos:column="36">&amp;<pos:position pos:line="140" pos:column="41"/></operator><name pos:line="140" pos:column="37">instance_list_head<pos:position pos:line="140" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="140" pos:column="57">&amp;<pos:position pos:line="140" pos:column="62"/></operator><name pos:line="140" pos:column="58">instance_list_tail<pos:position pos:line="140" pos:column="76"/></name></expr></argument>,
            <argument><expr><name pos:line="141" pos:column="13">res<pos:position pos:line="141" pos:column="16"/></name></expr></argument>, <argument><expr><operator pos:line="141" pos:column="18">&amp;<pos:position pos:line="141" pos:column="23"/></operator><name><name pos:line="141" pos:column="19">data<pos:position pos:line="141" pos:column="23"/></name><operator pos:line="141" pos:column="23">-&gt;<pos:position pos:line="141" pos:column="28"/></operator><name pos:line="141" pos:column="25">instance<pos:position pos:line="141" pos:column="33"/></name><operator pos:line="141" pos:column="33">.<pos:position pos:line="141" pos:column="34"/></operator><name pos:line="141" pos:column="34">oid<pos:position pos:line="141" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="141" pos:column="38"/></argument_list></call> <operator pos:line="141" pos:column="39">!=<pos:position pos:line="141" pos:column="41"/></operator> <literal type="number" pos:line="141" pos:column="42">0<pos:position pos:line="141" pos:column="43"/></literal></expr>)<pos:position pos:line="141" pos:column="44"/></condition><then pos:line="141" pos:column="44">
      <block pos:line="142" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="143" pos:column="9">ERROR<pos:position pos:line="143" pos:column="14"/></name> <argument_list pos:line="143" pos:column="15">(<argument><expr><literal type="string" pos:line="143" pos:column="16">"snmp plugin: csnmp_instance_list_add failed."<pos:position pos:line="143" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="143" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="64"/></expr_stmt>
        <expr_stmt><expr><name pos:line="144" pos:column="9">status<pos:position pos:line="144" pos:column="15"/></name> <operator pos:line="144" pos:column="16">=<pos:position pos:line="144" pos:column="17"/></operator> <operator pos:line="144" pos:column="18">-<pos:position pos:line="144" pos:column="19"/></operator><literal type="number" pos:line="144" pos:column="19">1<pos:position pos:line="144" pos:column="20"/></literal></expr>;<pos:position pos:line="144" pos:column="21"/></expr_stmt>
        <break pos:line="145" pos:column="9">break;<pos:position pos:line="145" pos:column="15"/></break>
      }<pos:position pos:line="146" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="148" pos:column="7">/* The instance OID is added to the list of OIDs to GET from the
       * snmp agent last, so set vb on the last variable returned and copy
       * that OID. */</comment>
      <for pos:line="151" pos:column="7">for <control pos:line="151" pos:column="11">(<init><expr><name pos:line="151" pos:column="12">vb<pos:position pos:line="151" pos:column="14"/></name> <operator pos:line="151" pos:column="15">=<pos:position pos:line="151" pos:column="16"/></operator> <name><name pos:line="151" pos:column="17">res<pos:position pos:line="151" pos:column="20"/></name><operator pos:line="151" pos:column="20">-&gt;<pos:position pos:line="151" pos:column="25"/></operator><name pos:line="151" pos:column="22">variables<pos:position pos:line="151" pos:column="31"/></name></name></expr>;<pos:position pos:line="151" pos:column="32"/></init>
          <condition><expr><operator pos:line="152" pos:column="11">(<pos:position pos:line="152" pos:column="12"/></operator><name pos:line="152" pos:column="12">vb<pos:position pos:line="152" pos:column="14"/></name> <operator pos:line="152" pos:column="15">!=<pos:position pos:line="152" pos:column="17"/></operator> <name pos:line="152" pos:column="18">NULL<pos:position pos:line="152" pos:column="22"/></name><operator pos:line="152" pos:column="22">)<pos:position pos:line="152" pos:column="23"/></operator> <operator pos:line="152" pos:column="24">&amp;&amp;<pos:position pos:line="152" pos:column="34"/></operator> <operator pos:line="152" pos:column="27">(<pos:position pos:line="152" pos:column="28"/></operator><name><name pos:line="152" pos:column="28">vb<pos:position pos:line="152" pos:column="30"/></name><operator pos:line="152" pos:column="30">-&gt;<pos:position pos:line="152" pos:column="35"/></operator><name pos:line="152" pos:column="32">next_variable<pos:position pos:line="152" pos:column="45"/></name></name> <operator pos:line="152" pos:column="46">!=<pos:position pos:line="152" pos:column="48"/></operator> <name pos:line="152" pos:column="49">NULL<pos:position pos:line="152" pos:column="53"/></name><operator pos:line="152" pos:column="53">)<pos:position pos:line="152" pos:column="54"/></operator></expr>;<pos:position pos:line="152" pos:column="55"/></condition>
          <incr><expr><name pos:line="153" pos:column="11">vb<pos:position pos:line="153" pos:column="13"/></name> <operator pos:line="153" pos:column="14">=<pos:position pos:line="153" pos:column="15"/></operator> <name><name pos:line="153" pos:column="16">vb<pos:position pos:line="153" pos:column="18"/></name><operator pos:line="153" pos:column="18">-&gt;<pos:position pos:line="153" pos:column="23"/></operator><name pos:line="153" pos:column="20">next_variable<pos:position pos:line="153" pos:column="33"/></name></name></expr></incr>)<pos:position pos:line="153" pos:column="34"/></control>
        <comment type="block" pos:line="154" pos:column="9">/* do nothing */</comment><block type="pseudo"><empty_stmt pos:line="154" pos:column="25">;<pos:position pos:line="154" pos:column="26"/></empty_stmt></block></for>
      <expr_stmt><expr><call><name pos:line="155" pos:column="7">assert<pos:position pos:line="155" pos:column="13"/></name> <argument_list pos:line="155" pos:column="14">(<argument><expr><name pos:line="155" pos:column="15">vb<pos:position pos:line="155" pos:column="17"/></name> <operator pos:line="155" pos:column="18">!=<pos:position pos:line="155" pos:column="20"/></operator> <name pos:line="155" pos:column="21">NULL<pos:position pos:line="155" pos:column="25"/></name></expr></argument>)<pos:position pos:line="155" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="27"/></expr_stmt>

      <comment type="block" pos:line="157" pos:column="7">/* Copy the OID of the instance value to oid_list[data-&gt;values_len].
       * "oid_list" is used for the next GETNEXT request. */</comment>
      <expr_stmt><expr><call><name pos:line="159" pos:column="7">memcpy<pos:position pos:line="159" pos:column="13"/></name> <argument_list pos:line="159" pos:column="14">(<argument><expr><name><name pos:line="159" pos:column="15">oid_list<pos:position pos:line="159" pos:column="23"/></name><index pos:line="159" pos:column="23">[<expr><name><name pos:line="159" pos:column="24">data<pos:position pos:line="159" pos:column="28"/></name><operator pos:line="159" pos:column="28">-&gt;<pos:position pos:line="159" pos:column="33"/></operator><name pos:line="159" pos:column="30">values_len<pos:position pos:line="159" pos:column="40"/></name></name></expr>]<pos:position pos:line="159" pos:column="41"/></index></name><operator pos:line="159" pos:column="41">.<pos:position pos:line="159" pos:column="42"/></operator><name pos:line="159" pos:column="42">oid<pos:position pos:line="159" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="159" pos:column="47">vb<pos:position pos:line="159" pos:column="49"/></name><operator pos:line="159" pos:column="49">-&gt;<pos:position pos:line="159" pos:column="54"/></operator><name pos:line="159" pos:column="51">name<pos:position pos:line="159" pos:column="55"/></name></name></expr></argument>,
          <argument><expr><sizeof pos:line="160" pos:column="11">sizeof <argument_list pos:line="160" pos:column="18">(<argument><expr><name pos:line="160" pos:column="19">oid<pos:position pos:line="160" pos:column="22"/></name></expr></argument>)<pos:position pos:line="160" pos:column="23"/></argument_list></sizeof> <operator pos:line="160" pos:column="24">*<pos:position pos:line="160" pos:column="25"/></operator> <name><name pos:line="160" pos:column="26">vb<pos:position pos:line="160" pos:column="28"/></name><operator pos:line="160" pos:column="28">-&gt;<pos:position pos:line="160" pos:column="33"/></operator><name pos:line="160" pos:column="30">name_length<pos:position pos:line="160" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="160" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="43"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="161" pos:column="7">oid_list<pos:position pos:line="161" pos:column="15"/></name><index pos:line="161" pos:column="15">[<expr><name><name pos:line="161" pos:column="16">data<pos:position pos:line="161" pos:column="20"/></name><operator pos:line="161" pos:column="20">-&gt;<pos:position pos:line="161" pos:column="25"/></operator><name pos:line="161" pos:column="22">values_len<pos:position pos:line="161" pos:column="32"/></name></name></expr>]<pos:position pos:line="161" pos:column="33"/></index></name><operator pos:line="161" pos:column="33">.<pos:position pos:line="161" pos:column="34"/></operator><name pos:line="161" pos:column="34">oid_len<pos:position pos:line="161" pos:column="41"/></name> <operator pos:line="161" pos:column="42">=<pos:position pos:line="161" pos:column="43"/></operator> <name><name pos:line="161" pos:column="44">vb<pos:position pos:line="161" pos:column="46"/></name><operator pos:line="161" pos:column="46">-&gt;<pos:position pos:line="161" pos:column="51"/></operator><name pos:line="161" pos:column="48">name_length<pos:position pos:line="161" pos:column="59"/></name></name></expr>;<pos:position pos:line="161" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="162" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="164" pos:column="5">/* Iterate over all the (non-instance) values returned by the agent. The
     * (i &lt; value_len) check will make sure we're not handling the instance OID
     * twice. */</comment>
    <for pos:line="167" pos:column="5">for <control pos:line="167" pos:column="9">(<init><expr><name pos:line="167" pos:column="10">vb<pos:position pos:line="167" pos:column="12"/></name> <operator pos:line="167" pos:column="13">=<pos:position pos:line="167" pos:column="14"/></operator> <name><name pos:line="167" pos:column="15">res<pos:position pos:line="167" pos:column="18"/></name><operator pos:line="167" pos:column="18">-&gt;<pos:position pos:line="167" pos:column="23"/></operator><name pos:line="167" pos:column="20">variables<pos:position pos:line="167" pos:column="29"/></name></name></expr><operator pos:line="167" pos:column="29">,<pos:position pos:line="167" pos:column="30"/></operator> <expr><name pos:line="167" pos:column="31">i<pos:position pos:line="167" pos:column="32"/></name> <operator pos:line="167" pos:column="33">=<pos:position pos:line="167" pos:column="34"/></operator> <literal type="number" pos:line="167" pos:column="35">0<pos:position pos:line="167" pos:column="36"/></literal></expr>;<pos:position pos:line="167" pos:column="37"/></init>
        <condition><expr><operator pos:line="168" pos:column="9">(<pos:position pos:line="168" pos:column="10"/></operator><name pos:line="168" pos:column="10">vb<pos:position pos:line="168" pos:column="12"/></name> <operator pos:line="168" pos:column="13">!=<pos:position pos:line="168" pos:column="15"/></operator> <name pos:line="168" pos:column="16">NULL<pos:position pos:line="168" pos:column="20"/></name><operator pos:line="168" pos:column="20">)<pos:position pos:line="168" pos:column="21"/></operator> <operator pos:line="168" pos:column="22">&amp;&amp;<pos:position pos:line="168" pos:column="32"/></operator> <operator pos:line="168" pos:column="25">(<pos:position pos:line="168" pos:column="26"/></operator><name pos:line="168" pos:column="26">i<pos:position pos:line="168" pos:column="27"/></name> <operator pos:line="168" pos:column="28">&lt;<pos:position pos:line="168" pos:column="32"/></operator> <name><name pos:line="168" pos:column="30">data<pos:position pos:line="168" pos:column="34"/></name><operator pos:line="168" pos:column="34">-&gt;<pos:position pos:line="168" pos:column="39"/></operator><name pos:line="168" pos:column="36">values_len<pos:position pos:line="168" pos:column="46"/></name></name><operator pos:line="168" pos:column="46">)<pos:position pos:line="168" pos:column="47"/></operator></expr>;<pos:position pos:line="168" pos:column="48"/></condition>
        <incr><expr><name pos:line="169" pos:column="9">vb<pos:position pos:line="169" pos:column="11"/></name> <operator pos:line="169" pos:column="12">=<pos:position pos:line="169" pos:column="13"/></operator> <name><name pos:line="169" pos:column="14">vb<pos:position pos:line="169" pos:column="16"/></name><operator pos:line="169" pos:column="16">-&gt;<pos:position pos:line="169" pos:column="21"/></operator><name pos:line="169" pos:column="18">next_variable<pos:position pos:line="169" pos:column="31"/></name></name></expr><operator pos:line="169" pos:column="31">,<pos:position pos:line="169" pos:column="32"/></operator> <expr><name pos:line="169" pos:column="33">i<pos:position pos:line="169" pos:column="34"/></name><operator pos:line="169" pos:column="34">++<pos:position pos:line="169" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="169" pos:column="37"/></control>
    <block pos:line="170" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="171" pos:column="7">csnmp_table_values_t<pos:position pos:line="171" pos:column="27"/></name> <modifier pos:line="171" pos:column="28">*<pos:position pos:line="171" pos:column="29"/></modifier></type><name pos:line="171" pos:column="29">vt<pos:position pos:line="171" pos:column="31"/></name></decl>;<pos:position pos:line="171" pos:column="32"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="172" pos:column="7">oid_t<pos:position pos:line="172" pos:column="12"/></name></type> <name pos:line="172" pos:column="13">vb_name<pos:position pos:line="172" pos:column="20"/></name></decl>;<pos:position pos:line="172" pos:column="21"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="173" pos:column="7">oid_t<pos:position pos:line="173" pos:column="12"/></name></type> <name pos:line="173" pos:column="13">suffix<pos:position pos:line="173" pos:column="19"/></name></decl>;<pos:position pos:line="173" pos:column="20"/></decl_stmt>

      <expr_stmt><expr><call><name pos:line="175" pos:column="7">csnmp_oid_init<pos:position pos:line="175" pos:column="21"/></name> <argument_list pos:line="175" pos:column="22">(<argument><expr><operator pos:line="175" pos:column="23">&amp;<pos:position pos:line="175" pos:column="28"/></operator><name pos:line="175" pos:column="24">vb_name<pos:position pos:line="175" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="175" pos:column="33">vb<pos:position pos:line="175" pos:column="35"/></name><operator pos:line="175" pos:column="35">-&gt;<pos:position pos:line="175" pos:column="40"/></operator><name pos:line="175" pos:column="37">name<pos:position pos:line="175" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="175" pos:column="43">vb<pos:position pos:line="175" pos:column="45"/></name><operator pos:line="175" pos:column="45">-&gt;<pos:position pos:line="175" pos:column="50"/></operator><name pos:line="175" pos:column="47">name_length<pos:position pos:line="175" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="175" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="60"/></expr_stmt>

      <comment type="block" pos:line="177" pos:column="7">/* Calculate the current suffix. This is later used to check that the
       * suffix is increasing. This also checks if we left the subtree */</comment>
      <expr_stmt><expr><name pos:line="179" pos:column="7">status<pos:position pos:line="179" pos:column="13"/></name> <operator pos:line="179" pos:column="14">=<pos:position pos:line="179" pos:column="15"/></operator> <call><name pos:line="179" pos:column="16">csnmp_oid_suffix<pos:position pos:line="179" pos:column="32"/></name> <argument_list pos:line="179" pos:column="33">(<argument><expr><operator pos:line="179" pos:column="34">&amp;<pos:position pos:line="179" pos:column="39"/></operator><name pos:line="179" pos:column="35">suffix<pos:position pos:line="179" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="179" pos:column="43">&amp;<pos:position pos:line="179" pos:column="48"/></operator><name pos:line="179" pos:column="44">vb_name<pos:position pos:line="179" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="179" pos:column="53">data<pos:position pos:line="179" pos:column="57"/></name><operator pos:line="179" pos:column="57">-&gt;<pos:position pos:line="179" pos:column="62"/></operator><name pos:line="179" pos:column="59">values<pos:position pos:line="179" pos:column="65"/></name></name> <operator pos:line="179" pos:column="66">+<pos:position pos:line="179" pos:column="67"/></operator> <name pos:line="179" pos:column="68">i<pos:position pos:line="179" pos:column="69"/></name></expr></argument>)<pos:position pos:line="179" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="71"/></expr_stmt>
      <if pos:line="180" pos:column="7">if <condition pos:line="180" pos:column="10">(<expr><name pos:line="180" pos:column="11">status<pos:position pos:line="180" pos:column="17"/></name> <operator pos:line="180" pos:column="18">!=<pos:position pos:line="180" pos:column="20"/></operator> <literal type="number" pos:line="180" pos:column="21">0<pos:position pos:line="180" pos:column="22"/></literal></expr>)<pos:position pos:line="180" pos:column="23"/></condition><then pos:line="180" pos:column="23">
      <block pos:line="181" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="182" pos:column="9">DEBUG<pos:position pos:line="182" pos:column="14"/></name> <argument_list pos:line="182" pos:column="15">(<argument><expr><literal type="string" pos:line="182" pos:column="16">"snmp plugin: host = %s; data = %s; Value %i failed. "<pos:position pos:line="182" pos:column="70"/></literal>
            <literal type="string" pos:line="183" pos:column="13">"It probably left its subtree."<pos:position pos:line="183" pos:column="44"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="184" pos:column="13">host<pos:position pos:line="184" pos:column="17"/></name><operator pos:line="184" pos:column="17">-&gt;<pos:position pos:line="184" pos:column="22"/></operator><name pos:line="184" pos:column="19">name<pos:position pos:line="184" pos:column="23"/></name></name></expr></argument>, <argument><expr><name><name pos:line="184" pos:column="25">data<pos:position pos:line="184" pos:column="29"/></name><operator pos:line="184" pos:column="29">-&gt;<pos:position pos:line="184" pos:column="34"/></operator><name pos:line="184" pos:column="31">name<pos:position pos:line="184" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="184" pos:column="37">i<pos:position pos:line="184" pos:column="38"/></name></expr></argument>)<pos:position pos:line="184" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="40"/></expr_stmt>
        <continue pos:line="185" pos:column="9">continue;<pos:position pos:line="185" pos:column="18"/></continue>
      }<pos:position pos:line="186" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="188" pos:column="7">/* Make sure the OIDs returned by the agent are increasing. Otherwise our
       * table matching algorithm will get confused. */</comment>
      <if pos:line="190" pos:column="7">if <condition pos:line="190" pos:column="10">(<expr><operator pos:line="190" pos:column="11">(<pos:position pos:line="190" pos:column="12"/></operator><name><name pos:line="190" pos:column="12">value_list_tail<pos:position pos:line="190" pos:column="27"/></name><index pos:line="190" pos:column="27">[<expr><name pos:line="190" pos:column="28">i<pos:position pos:line="190" pos:column="29"/></name></expr>]<pos:position pos:line="190" pos:column="30"/></index></name> <operator pos:line="190" pos:column="31">!=<pos:position pos:line="190" pos:column="33"/></operator> <name pos:line="190" pos:column="34">NULL<pos:position pos:line="190" pos:column="38"/></name><operator pos:line="190" pos:column="38">)<pos:position pos:line="190" pos:column="39"/></operator>
          <operator pos:line="191" pos:column="11">&amp;&amp;<pos:position pos:line="191" pos:column="21"/></operator> <operator pos:line="191" pos:column="14">(<pos:position pos:line="191" pos:column="15"/></operator><call><name pos:line="191" pos:column="15">csnmp_oid_compare<pos:position pos:line="191" pos:column="32"/></name> <argument_list pos:line="191" pos:column="33">(<argument><expr><operator pos:line="191" pos:column="34">&amp;<pos:position pos:line="191" pos:column="39"/></operator><name pos:line="191" pos:column="35">suffix<pos:position pos:line="191" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="191" pos:column="43">&amp;<pos:position pos:line="191" pos:column="48"/></operator><name><name pos:line="191" pos:column="44">value_list_tail<pos:position pos:line="191" pos:column="59"/></name><index pos:line="191" pos:column="59">[<expr><name pos:line="191" pos:column="60">i<pos:position pos:line="191" pos:column="61"/></name></expr>]<pos:position pos:line="191" pos:column="62"/></index></name><operator pos:line="191" pos:column="62">-&gt;<pos:position pos:line="191" pos:column="67"/></operator><name pos:line="191" pos:column="64">suffix<pos:position pos:line="191" pos:column="70"/></name></expr></argument>)<pos:position pos:line="191" pos:column="71"/></argument_list></call> <operator pos:line="191" pos:column="72">&lt;=<pos:position pos:line="191" pos:column="77"/></operator> <literal type="number" pos:line="191" pos:column="75">0<pos:position pos:line="191" pos:column="76"/></literal><operator pos:line="191" pos:column="76">)<pos:position pos:line="191" pos:column="77"/></operator></expr>)<pos:position pos:line="191" pos:column="78"/></condition><then pos:line="191" pos:column="78">
      <block pos:line="192" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="193" pos:column="9">DEBUG<pos:position pos:line="193" pos:column="14"/></name> <argument_list pos:line="193" pos:column="15">(<argument><expr><literal type="string" pos:line="193" pos:column="16">"snmp plugin: host = %s; data = %s; i = %i; "<pos:position pos:line="193" pos:column="61"/></literal>
            <literal type="string" pos:line="194" pos:column="13">"Suffix is not increasing."<pos:position pos:line="194" pos:column="40"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="195" pos:column="13">host<pos:position pos:line="195" pos:column="17"/></name><operator pos:line="195" pos:column="17">-&gt;<pos:position pos:line="195" pos:column="22"/></operator><name pos:line="195" pos:column="19">name<pos:position pos:line="195" pos:column="23"/></name></name></expr></argument>, <argument><expr><name><name pos:line="195" pos:column="25">data<pos:position pos:line="195" pos:column="29"/></name><operator pos:line="195" pos:column="29">-&gt;<pos:position pos:line="195" pos:column="34"/></operator><name pos:line="195" pos:column="31">name<pos:position pos:line="195" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="195" pos:column="37">i<pos:position pos:line="195" pos:column="38"/></name></expr></argument>)<pos:position pos:line="195" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="40"/></expr_stmt>
        <continue pos:line="196" pos:column="9">continue;<pos:position pos:line="196" pos:column="18"/></continue>
      }<pos:position pos:line="197" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name pos:line="199" pos:column="7">vt<pos:position pos:line="199" pos:column="9"/></name> <operator pos:line="199" pos:column="10">=<pos:position pos:line="199" pos:column="11"/></operator> <call><name pos:line="199" pos:column="12">malloc<pos:position pos:line="199" pos:column="18"/></name> <argument_list pos:line="199" pos:column="19">(<argument><expr><sizeof pos:line="199" pos:column="20">sizeof <argument_list pos:line="199" pos:column="27">(<argument><expr><operator pos:line="199" pos:column="28">*<pos:position pos:line="199" pos:column="29"/></operator><name pos:line="199" pos:column="29">vt<pos:position pos:line="199" pos:column="31"/></name></expr></argument>)<pos:position pos:line="199" pos:column="32"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="199" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="34"/></expr_stmt>
      <if pos:line="200" pos:column="7">if <condition pos:line="200" pos:column="10">(<expr><name pos:line="200" pos:column="11">vt<pos:position pos:line="200" pos:column="13"/></name> <operator pos:line="200" pos:column="14">==<pos:position pos:line="200" pos:column="16"/></operator> <name pos:line="200" pos:column="17">NULL<pos:position pos:line="200" pos:column="21"/></name></expr>)<pos:position pos:line="200" pos:column="22"/></condition><then pos:line="200" pos:column="22">
      <block pos:line="201" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="202" pos:column="9">ERROR<pos:position pos:line="202" pos:column="14"/></name> <argument_list pos:line="202" pos:column="15">(<argument><expr><literal type="string" pos:line="202" pos:column="16">"snmp plugin: malloc failed."<pos:position pos:line="202" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="202" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><name pos:line="203" pos:column="9">status<pos:position pos:line="203" pos:column="15"/></name> <operator pos:line="203" pos:column="16">=<pos:position pos:line="203" pos:column="17"/></operator> <operator pos:line="203" pos:column="18">-<pos:position pos:line="203" pos:column="19"/></operator><literal type="number" pos:line="203" pos:column="19">1<pos:position pos:line="203" pos:column="20"/></literal></expr>;<pos:position pos:line="203" pos:column="21"/></expr_stmt>
        <break pos:line="204" pos:column="9">break;<pos:position pos:line="204" pos:column="15"/></break>
      }<pos:position pos:line="205" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="206" pos:column="7">memset<pos:position pos:line="206" pos:column="13"/></name> <argument_list pos:line="206" pos:column="14">(<argument><expr><name pos:line="206" pos:column="15">vt<pos:position pos:line="206" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="206" pos:column="19">0<pos:position pos:line="206" pos:column="20"/></literal></expr></argument>, <argument><expr><sizeof pos:line="206" pos:column="22">sizeof <argument_list pos:line="206" pos:column="29">(<argument><expr><operator pos:line="206" pos:column="30">*<pos:position pos:line="206" pos:column="31"/></operator><name pos:line="206" pos:column="31">vt<pos:position pos:line="206" pos:column="33"/></name></expr></argument>)<pos:position pos:line="206" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="206" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="36"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="208" pos:column="7">vt<pos:position pos:line="208" pos:column="9"/></name><operator pos:line="208" pos:column="9">-&gt;<pos:position pos:line="208" pos:column="14"/></operator><name pos:line="208" pos:column="11">value<pos:position pos:line="208" pos:column="16"/></name></name> <operator pos:line="208" pos:column="17">=<pos:position pos:line="208" pos:column="18"/></operator> <call><name pos:line="208" pos:column="19">csnmp_value_list_to_value<pos:position pos:line="208" pos:column="44"/></name> <argument_list pos:line="208" pos:column="45">(<argument><expr><name pos:line="208" pos:column="46">vb<pos:position pos:line="208" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="208" pos:column="50">ds<pos:position pos:line="208" pos:column="52"/></name><operator pos:line="208" pos:column="52">-&gt;<pos:position pos:line="208" pos:column="57"/></operator><name pos:line="208" pos:column="54">ds<pos:position pos:line="208" pos:column="56"/></name><index pos:line="208" pos:column="56">[<expr><name pos:line="208" pos:column="57">i<pos:position pos:line="208" pos:column="58"/></name></expr>]<pos:position pos:line="208" pos:column="59"/></index></name><operator pos:line="208" pos:column="59">.<pos:position pos:line="208" pos:column="60"/></operator><name pos:line="208" pos:column="60">type<pos:position pos:line="208" pos:column="64"/></name></expr></argument>,
          <argument><expr><name><name pos:line="209" pos:column="11">data<pos:position pos:line="209" pos:column="15"/></name><operator pos:line="209" pos:column="15">-&gt;<pos:position pos:line="209" pos:column="20"/></operator><name pos:line="209" pos:column="17">scale<pos:position pos:line="209" pos:column="22"/></name></name></expr></argument>, <argument><expr><name><name pos:line="209" pos:column="24">data<pos:position pos:line="209" pos:column="28"/></name><operator pos:line="209" pos:column="28">-&gt;<pos:position pos:line="209" pos:column="33"/></operator><name pos:line="209" pos:column="30">shift<pos:position pos:line="209" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="209" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="209" pos:column="37"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="210" pos:column="7">memcpy<pos:position pos:line="210" pos:column="13"/></name> <argument_list pos:line="210" pos:column="14">(<argument><expr><operator pos:line="210" pos:column="15">&amp;<pos:position pos:line="210" pos:column="20"/></operator><name><name pos:line="210" pos:column="16">vt<pos:position pos:line="210" pos:column="18"/></name><operator pos:line="210" pos:column="18">-&gt;<pos:position pos:line="210" pos:column="23"/></operator><name pos:line="210" pos:column="20">suffix<pos:position pos:line="210" pos:column="26"/></name></name></expr></argument>, <argument><expr><operator pos:line="210" pos:column="28">&amp;<pos:position pos:line="210" pos:column="33"/></operator><name pos:line="210" pos:column="29">suffix<pos:position pos:line="210" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="210" pos:column="37">sizeof <argument_list pos:line="210" pos:column="44">(<argument><expr><name><name pos:line="210" pos:column="45">vt<pos:position pos:line="210" pos:column="47"/></name><operator pos:line="210" pos:column="47">-&gt;<pos:position pos:line="210" pos:column="52"/></operator><name pos:line="210" pos:column="49">suffix<pos:position pos:line="210" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="210" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="210" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="58"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="211" pos:column="7">vt<pos:position pos:line="211" pos:column="9"/></name><operator pos:line="211" pos:column="9">-&gt;<pos:position pos:line="211" pos:column="14"/></operator><name pos:line="211" pos:column="11">next<pos:position pos:line="211" pos:column="15"/></name></name> <operator pos:line="211" pos:column="16">=<pos:position pos:line="211" pos:column="17"/></operator> <name pos:line="211" pos:column="18">NULL<pos:position pos:line="211" pos:column="22"/></name></expr>;<pos:position pos:line="211" pos:column="23"/></expr_stmt>

      <if pos:line="213" pos:column="7">if <condition pos:line="213" pos:column="10">(<expr><name><name pos:line="213" pos:column="11">value_list_tail<pos:position pos:line="213" pos:column="26"/></name><index pos:line="213" pos:column="26">[<expr><name pos:line="213" pos:column="27">i<pos:position pos:line="213" pos:column="28"/></name></expr>]<pos:position pos:line="213" pos:column="29"/></index></name> <operator pos:line="213" pos:column="30">==<pos:position pos:line="213" pos:column="32"/></operator> <name pos:line="213" pos:column="33">NULL<pos:position pos:line="213" pos:column="37"/></name></expr>)<pos:position pos:line="213" pos:column="38"/></condition><then pos:line="213" pos:column="38">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="214" pos:column="9">value_list_head<pos:position pos:line="214" pos:column="24"/></name><index pos:line="214" pos:column="24">[<expr><name pos:line="214" pos:column="25">i<pos:position pos:line="214" pos:column="26"/></name></expr>]<pos:position pos:line="214" pos:column="27"/></index></name> <operator pos:line="214" pos:column="28">=<pos:position pos:line="214" pos:column="29"/></operator> <name pos:line="214" pos:column="30">vt<pos:position pos:line="214" pos:column="32"/></name></expr>;<pos:position pos:line="214" pos:column="33"/></expr_stmt></block></then>
      <else pos:line="215" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="216" pos:column="9">value_list_tail<pos:position pos:line="216" pos:column="24"/></name><index pos:line="216" pos:column="24">[<expr><name pos:line="216" pos:column="25">i<pos:position pos:line="216" pos:column="26"/></name></expr>]<pos:position pos:line="216" pos:column="27"/></index></name><operator pos:line="216" pos:column="27">-&gt;<pos:position pos:line="216" pos:column="32"/></operator><name pos:line="216" pos:column="29">next<pos:position pos:line="216" pos:column="33"/></name> <operator pos:line="216" pos:column="34">=<pos:position pos:line="216" pos:column="35"/></operator> <name pos:line="216" pos:column="36">vt<pos:position pos:line="216" pos:column="38"/></name></expr>;<pos:position pos:line="216" pos:column="39"/></expr_stmt></block></else></if>
      <expr_stmt><expr><name><name pos:line="217" pos:column="7">value_list_tail<pos:position pos:line="217" pos:column="22"/></name><index pos:line="217" pos:column="22">[<expr><name pos:line="217" pos:column="23">i<pos:position pos:line="217" pos:column="24"/></name></expr>]<pos:position pos:line="217" pos:column="25"/></index></name> <operator pos:line="217" pos:column="26">=<pos:position pos:line="217" pos:column="27"/></operator> <name pos:line="217" pos:column="28">vt<pos:position pos:line="217" pos:column="30"/></name></expr>;<pos:position pos:line="217" pos:column="31"/></expr_stmt>

      <comment type="block" pos:line="219" pos:column="7">/* Copy OID to oid_list[i + 1] */</comment>
      <expr_stmt><expr><call><name pos:line="220" pos:column="7">memcpy<pos:position pos:line="220" pos:column="13"/></name> <argument_list pos:line="220" pos:column="14">(<argument><expr><name><name pos:line="220" pos:column="15">oid_list<pos:position pos:line="220" pos:column="23"/></name><index pos:line="220" pos:column="23">[<expr><name pos:line="220" pos:column="24">i<pos:position pos:line="220" pos:column="25"/></name></expr>]<pos:position pos:line="220" pos:column="26"/></index></name><operator pos:line="220" pos:column="26">.<pos:position pos:line="220" pos:column="27"/></operator><name pos:line="220" pos:column="27">oid<pos:position pos:line="220" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="220" pos:column="32">vb<pos:position pos:line="220" pos:column="34"/></name><operator pos:line="220" pos:column="34">-&gt;<pos:position pos:line="220" pos:column="39"/></operator><name pos:line="220" pos:column="36">name<pos:position pos:line="220" pos:column="40"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="220" pos:column="42">sizeof <argument_list pos:line="220" pos:column="49">(<argument><expr><name pos:line="220" pos:column="50">oid<pos:position pos:line="220" pos:column="53"/></name></expr></argument>)<pos:position pos:line="220" pos:column="54"/></argument_list></sizeof> <operator pos:line="220" pos:column="55">*<pos:position pos:line="220" pos:column="56"/></operator> <name><name pos:line="220" pos:column="57">vb<pos:position pos:line="220" pos:column="59"/></name><operator pos:line="220" pos:column="59">-&gt;<pos:position pos:line="220" pos:column="64"/></operator><name pos:line="220" pos:column="61">name_length<pos:position pos:line="220" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="220" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="74"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="221" pos:column="7">oid_list<pos:position pos:line="221" pos:column="15"/></name><index pos:line="221" pos:column="15">[<expr><name pos:line="221" pos:column="16">i<pos:position pos:line="221" pos:column="17"/></name></expr>]<pos:position pos:line="221" pos:column="18"/></index></name><operator pos:line="221" pos:column="18">.<pos:position pos:line="221" pos:column="19"/></operator><name pos:line="221" pos:column="19">oid_len<pos:position pos:line="221" pos:column="26"/></name> <operator pos:line="221" pos:column="27">=<pos:position pos:line="221" pos:column="28"/></operator> <name><name pos:line="221" pos:column="29">vb<pos:position pos:line="221" pos:column="31"/></name><operator pos:line="221" pos:column="31">-&gt;<pos:position pos:line="221" pos:column="36"/></operator><name pos:line="221" pos:column="33">name_length<pos:position pos:line="221" pos:column="44"/></name></name></expr>;<pos:position pos:line="221" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="222" pos:column="6"/></block></for> <comment type="block" pos:line="222" pos:column="7">/* for (i = data-&gt;values_len) */</comment>

    <if pos:line="224" pos:column="5">if <condition pos:line="224" pos:column="8">(<expr><name pos:line="224" pos:column="9">res<pos:position pos:line="224" pos:column="12"/></name> <operator pos:line="224" pos:column="13">!=<pos:position pos:line="224" pos:column="15"/></operator> <name pos:line="224" pos:column="16">NULL<pos:position pos:line="224" pos:column="20"/></name></expr>)<pos:position pos:line="224" pos:column="21"/></condition><then pos:line="224" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="225" pos:column="7">snmp_free_pdu<pos:position pos:line="225" pos:column="20"/></name> <argument_list pos:line="225" pos:column="21">(<argument><expr><name pos:line="225" pos:column="22">res<pos:position pos:line="225" pos:column="25"/></name></expr></argument>)<pos:position pos:line="225" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="225" pos:column="27"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name pos:line="226" pos:column="5">res<pos:position pos:line="226" pos:column="8"/></name> <operator pos:line="226" pos:column="9">=<pos:position pos:line="226" pos:column="10"/></operator> <name pos:line="226" pos:column="11">NULL<pos:position pos:line="226" pos:column="15"/></name></expr>;<pos:position pos:line="226" pos:column="16"/></expr_stmt>
  }<pos:position pos:line="227" pos:column="4"/></block></while> <comment type="block" pos:line="227" pos:column="5">/* while (status == 0) */</comment>

  <if pos:line="229" pos:column="3">if <condition pos:line="229" pos:column="6">(<expr><name pos:line="229" pos:column="7">res<pos:position pos:line="229" pos:column="10"/></name> <operator pos:line="229" pos:column="11">!=<pos:position pos:line="229" pos:column="13"/></operator> <name pos:line="229" pos:column="14">NULL<pos:position pos:line="229" pos:column="18"/></name></expr>)<pos:position pos:line="229" pos:column="19"/></condition><then pos:line="229" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="230" pos:column="5">snmp_free_pdu<pos:position pos:line="230" pos:column="18"/></name> <argument_list pos:line="230" pos:column="19">(<argument><expr><name pos:line="230" pos:column="20">res<pos:position pos:line="230" pos:column="23"/></name></expr></argument>)<pos:position pos:line="230" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="25"/></expr_stmt></block></then></if>
  <expr_stmt><expr><name pos:line="231" pos:column="3">res<pos:position pos:line="231" pos:column="6"/></name> <operator pos:line="231" pos:column="7">=<pos:position pos:line="231" pos:column="8"/></operator> <name pos:line="231" pos:column="9">NULL<pos:position pos:line="231" pos:column="13"/></name></expr>;<pos:position pos:line="231" pos:column="14"/></expr_stmt>

  <if pos:line="233" pos:column="3">if <condition pos:line="233" pos:column="6">(<expr><name pos:line="233" pos:column="7">status<pos:position pos:line="233" pos:column="13"/></name> <operator pos:line="233" pos:column="14">==<pos:position pos:line="233" pos:column="16"/></operator> <literal type="number" pos:line="233" pos:column="17">0<pos:position pos:line="233" pos:column="18"/></literal></expr>)<pos:position pos:line="233" pos:column="19"/></condition><then pos:line="233" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="234" pos:column="5">csnmp_dispatch_table<pos:position pos:line="234" pos:column="25"/></name> <argument_list pos:line="234" pos:column="26">(<argument><expr><name pos:line="234" pos:column="27">host<pos:position pos:line="234" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="234" pos:column="33">data<pos:position pos:line="234" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="234" pos:column="39">instance_list_head<pos:position pos:line="234" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="234" pos:column="59">value_list_head<pos:position pos:line="234" pos:column="74"/></name></expr></argument>)<pos:position pos:line="234" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="234" pos:column="76"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="236" pos:column="3">/* Free all allocated variables here */</comment>
  <while pos:line="237" pos:column="3">while <condition pos:line="237" pos:column="9">(<expr><name pos:line="237" pos:column="10">instance_list_head<pos:position pos:line="237" pos:column="28"/></name> <operator pos:line="237" pos:column="29">!=<pos:position pos:line="237" pos:column="31"/></operator> <name pos:line="237" pos:column="32">NULL<pos:position pos:line="237" pos:column="36"/></name></expr>)<pos:position pos:line="237" pos:column="37"/></condition>
  <block pos:line="238" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="239" pos:column="5">csnmp_list_instances_t<pos:position pos:line="239" pos:column="27"/></name> <modifier pos:line="239" pos:column="28">*<pos:position pos:line="239" pos:column="29"/></modifier></type><name pos:line="239" pos:column="29">next<pos:position pos:line="239" pos:column="33"/></name> <init pos:line="239" pos:column="34">= <expr><name><name pos:line="239" pos:column="36">instance_list_head<pos:position pos:line="239" pos:column="54"/></name><operator pos:line="239" pos:column="54">-&gt;<pos:position pos:line="239" pos:column="59"/></operator><name pos:line="239" pos:column="56">next<pos:position pos:line="239" pos:column="60"/></name></name></expr></init></decl>;<pos:position pos:line="239" pos:column="61"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="240" pos:column="5">sfree<pos:position pos:line="240" pos:column="10"/></name> <argument_list pos:line="240" pos:column="11">(<argument><expr><name pos:line="240" pos:column="12">instance_list_head<pos:position pos:line="240" pos:column="30"/></name></expr></argument>)<pos:position pos:line="240" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="240" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="241" pos:column="5">instance_list_head<pos:position pos:line="241" pos:column="23"/></name> <operator pos:line="241" pos:column="24">=<pos:position pos:line="241" pos:column="25"/></operator> <name pos:line="241" pos:column="26">next<pos:position pos:line="241" pos:column="30"/></name></expr>;<pos:position pos:line="241" pos:column="31"/></expr_stmt>
  }<pos:position pos:line="242" pos:column="4"/></block></while>

  <for pos:line="244" pos:column="3">for <control pos:line="244" pos:column="7">(<init><expr><name pos:line="244" pos:column="8">i<pos:position pos:line="244" pos:column="9"/></name> <operator pos:line="244" pos:column="10">=<pos:position pos:line="244" pos:column="11"/></operator> <literal type="number" pos:line="244" pos:column="12">0<pos:position pos:line="244" pos:column="13"/></literal></expr>;<pos:position pos:line="244" pos:column="14"/></init> <condition><expr><name pos:line="244" pos:column="15">i<pos:position pos:line="244" pos:column="16"/></name> <operator pos:line="244" pos:column="17">&lt;<pos:position pos:line="244" pos:column="21"/></operator> <name><name pos:line="244" pos:column="19">data<pos:position pos:line="244" pos:column="23"/></name><operator pos:line="244" pos:column="23">-&gt;<pos:position pos:line="244" pos:column="28"/></operator><name pos:line="244" pos:column="25">values_len<pos:position pos:line="244" pos:column="35"/></name></name></expr>;<pos:position pos:line="244" pos:column="36"/></condition> <incr><expr><name pos:line="244" pos:column="37">i<pos:position pos:line="244" pos:column="38"/></name><operator pos:line="244" pos:column="38">++<pos:position pos:line="244" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="244" pos:column="41"/></control>
  <block pos:line="245" pos:column="3">{
    <while pos:line="246" pos:column="5">while <condition pos:line="246" pos:column="11">(<expr><name><name pos:line="246" pos:column="12">value_list_head<pos:position pos:line="246" pos:column="27"/></name><index pos:line="246" pos:column="27">[<expr><name pos:line="246" pos:column="28">i<pos:position pos:line="246" pos:column="29"/></name></expr>]<pos:position pos:line="246" pos:column="30"/></index></name> <operator pos:line="246" pos:column="31">!=<pos:position pos:line="246" pos:column="33"/></operator> <name pos:line="246" pos:column="34">NULL<pos:position pos:line="246" pos:column="38"/></name></expr>)<pos:position pos:line="246" pos:column="39"/></condition>
    <block pos:line="247" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="248" pos:column="7">csnmp_table_values_t<pos:position pos:line="248" pos:column="27"/></name> <modifier pos:line="248" pos:column="28">*<pos:position pos:line="248" pos:column="29"/></modifier></type><name pos:line="248" pos:column="29">next<pos:position pos:line="248" pos:column="33"/></name> <init pos:line="248" pos:column="34">= <expr><name><name pos:line="248" pos:column="36">value_list_head<pos:position pos:line="248" pos:column="51"/></name><index pos:line="248" pos:column="51">[<expr><name pos:line="248" pos:column="52">i<pos:position pos:line="248" pos:column="53"/></name></expr>]<pos:position pos:line="248" pos:column="54"/></index></name><operator pos:line="248" pos:column="54">-&gt;<pos:position pos:line="248" pos:column="59"/></operator><name pos:line="248" pos:column="56">next<pos:position pos:line="248" pos:column="60"/></name></expr></init></decl>;<pos:position pos:line="248" pos:column="61"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="249" pos:column="7">sfree<pos:position pos:line="249" pos:column="12"/></name> <argument_list pos:line="249" pos:column="13">(<argument><expr><name><name pos:line="249" pos:column="14">value_list_head<pos:position pos:line="249" pos:column="29"/></name><index pos:line="249" pos:column="29">[<expr><name pos:line="249" pos:column="30">i<pos:position pos:line="249" pos:column="31"/></name></expr>]<pos:position pos:line="249" pos:column="32"/></index></name></expr></argument>)<pos:position pos:line="249" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="249" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="250" pos:column="7">value_list_head<pos:position pos:line="250" pos:column="22"/></name><index pos:line="250" pos:column="22">[<expr><name pos:line="250" pos:column="23">i<pos:position pos:line="250" pos:column="24"/></name></expr>]<pos:position pos:line="250" pos:column="25"/></index></name> <operator pos:line="250" pos:column="26">=<pos:position pos:line="250" pos:column="27"/></operator> <name pos:line="250" pos:column="28">next<pos:position pos:line="250" pos:column="32"/></name></expr>;<pos:position pos:line="250" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="251" pos:column="6"/></block></while>
  }<pos:position pos:line="252" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="254" pos:column="3">sfree<pos:position pos:line="254" pos:column="8"/></name> <argument_list pos:line="254" pos:column="9">(<argument><expr><name pos:line="254" pos:column="10">value_list_head<pos:position pos:line="254" pos:column="25"/></name></expr></argument>)<pos:position pos:line="254" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="254" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="255" pos:column="3">sfree<pos:position pos:line="255" pos:column="8"/></name> <argument_list pos:line="255" pos:column="9">(<argument><expr><name pos:line="255" pos:column="10">value_list_tail<pos:position pos:line="255" pos:column="25"/></name></expr></argument>)<pos:position pos:line="255" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="255" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="256" pos:column="3">sfree<pos:position pos:line="256" pos:column="8"/></name> <argument_list pos:line="256" pos:column="9">(<argument><expr><name pos:line="256" pos:column="10">oid_list<pos:position pos:line="256" pos:column="18"/></name></expr></argument>)<pos:position pos:line="256" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="256" pos:column="20"/></expr_stmt>

  <return pos:line="258" pos:column="3">return <expr><operator pos:line="258" pos:column="10">(<pos:position pos:line="258" pos:column="11"/></operator><literal type="number" pos:line="258" pos:column="11">0<pos:position pos:line="258" pos:column="12"/></literal><operator pos:line="258" pos:column="12">)<pos:position pos:line="258" pos:column="13"/></operator></expr>;<pos:position pos:line="258" pos:column="14"/></return>
}<pos:position pos:line="259" pos:column="2"/></block></function></unit>

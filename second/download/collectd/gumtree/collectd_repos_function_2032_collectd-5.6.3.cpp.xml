<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2032_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">sensors_submit<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">plugin_instance<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="57">const<pos:position pos:line="1" pos:column="62"/></specifier> <name pos:line="1" pos:column="63">char<pos:position pos:line="1" pos:column="67"/></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">type<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>,
                           <parameter><decl><type><specifier pos:line="2" pos:column="28">const<pos:position pos:line="2" pos:column="33"/></specifier> <name pos:line="2" pos:column="34">char<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">type_instance<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="55">double<pos:position pos:line="2" pos:column="61"/></name></type> <name pos:line="2" pos:column="62">val<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="66"/></parameter_list> <block pos:line="2" pos:column="67">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">match_key<pos:position pos:line="3" pos:column="17"/></name><index pos:line="3" pos:column="17">[<expr><literal type="number" pos:line="3" pos:column="18">1024<pos:position pos:line="3" pos:column="22"/></literal></expr>]<pos:position pos:line="3" pos:column="23"/></index></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">value_t<pos:position pos:line="6" pos:column="10"/></name></type> <name><name pos:line="6" pos:column="11">values<pos:position pos:line="6" pos:column="17"/></name><index pos:line="6" pos:column="17">[<expr><literal type="number" pos:line="6" pos:column="18">1<pos:position pos:line="6" pos:column="19"/></literal></expr>]<pos:position pos:line="6" pos:column="20"/></index></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">value_list_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">vl<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><name pos:line="7" pos:column="21">VALUE_LIST_INIT<pos:position pos:line="7" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="37"/></decl_stmt>

  <expr_stmt><expr><name pos:line="9" pos:column="3">status<pos:position pos:line="9" pos:column="9"/></name> <operator pos:line="9" pos:column="10">=<pos:position pos:line="9" pos:column="11"/></operator> <call><name pos:line="9" pos:column="12">ssnprintf<pos:position pos:line="9" pos:column="21"/></name><argument_list pos:line="9" pos:column="21">(<argument><expr><name pos:line="9" pos:column="22">match_key<pos:position pos:line="9" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="33">sizeof<argument_list pos:line="9" pos:column="39">(<argument><expr><name pos:line="9" pos:column="40">match_key<pos:position pos:line="9" pos:column="49"/></name></expr></argument>)<pos:position pos:line="9" pos:column="50"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="52">"%s/%s-%s"<pos:position pos:line="9" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="64">plugin_instance<pos:position pos:line="9" pos:column="79"/></name></expr></argument>,
                     <argument><expr><name pos:line="10" pos:column="22">type<pos:position pos:line="10" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="28">type_instance<pos:position pos:line="10" pos:column="41"/></name></expr></argument>)<pos:position pos:line="10" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="43"/></expr_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">status<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">&lt;<pos:position pos:line="11" pos:column="18"/></operator> <literal type="number" pos:line="11" pos:column="16">1<pos:position pos:line="11" pos:column="17"/></literal></expr>)<pos:position pos:line="11" pos:column="18"/></condition><then pos:line="11" pos:column="18">
    <block type="pseudo"><return pos:line="12" pos:column="5">return;<pos:position pos:line="12" pos:column="12"/></return></block></then></if>

  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">sensor_list<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">!=<pos:position pos:line="14" pos:column="21"/></operator> <name pos:line="14" pos:column="22">NULL<pos:position pos:line="14" pos:column="26"/></name></expr>)<pos:position pos:line="14" pos:column="27"/></condition><then pos:line="14" pos:column="27"> <block pos:line="14" pos:column="28">{
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">DEBUG<pos:position pos:line="15" pos:column="10"/></name><argument_list pos:line="15" pos:column="10">(<argument><expr><literal type="string" pos:line="15" pos:column="11">"sensors plugin: Checking ignorelist for `%s'"<pos:position pos:line="15" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="59">match_key<pos:position pos:line="15" pos:column="68"/></name></expr></argument>)<pos:position pos:line="15" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="70"/></expr_stmt>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><call><name pos:line="16" pos:column="9">ignorelist_match<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">(<argument><expr><name pos:line="16" pos:column="26">sensor_list<pos:position pos:line="16" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="39">match_key<pos:position pos:line="16" pos:column="48"/></name></expr></argument>)<pos:position pos:line="16" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="50"/></condition><then pos:line="16" pos:column="50">
      <block type="pseudo"><return pos:line="17" pos:column="7">return;<pos:position pos:line="17" pos:column="14"/></return></block></then></if>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="20" pos:column="3">values<pos:position pos:line="20" pos:column="9"/></name><index pos:line="20" pos:column="9">[<expr><literal type="number" pos:line="20" pos:column="10">0<pos:position pos:line="20" pos:column="11"/></literal></expr>]<pos:position pos:line="20" pos:column="12"/></index></name><operator pos:line="20" pos:column="12">.<pos:position pos:line="20" pos:column="13"/></operator><name pos:line="20" pos:column="13">gauge<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">=<pos:position pos:line="20" pos:column="20"/></operator> <name pos:line="20" pos:column="21">val<pos:position pos:line="20" pos:column="24"/></name></expr>;<pos:position pos:line="20" pos:column="25"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="22" pos:column="3">vl<pos:position pos:line="22" pos:column="5"/></name><operator pos:line="22" pos:column="5">.<pos:position pos:line="22" pos:column="6"/></operator><name pos:line="22" pos:column="6">values<pos:position pos:line="22" pos:column="12"/></name></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <name pos:line="22" pos:column="15">values<pos:position pos:line="22" pos:column="21"/></name></expr>;<pos:position pos:line="22" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="23" pos:column="3">vl<pos:position pos:line="23" pos:column="5"/></name><operator pos:line="23" pos:column="5">.<pos:position pos:line="23" pos:column="6"/></operator><name pos:line="23" pos:column="6">values_len<pos:position pos:line="23" pos:column="16"/></name></name> <operator pos:line="23" pos:column="17">=<pos:position pos:line="23" pos:column="18"/></operator> <literal type="number" pos:line="23" pos:column="19">1<pos:position pos:line="23" pos:column="20"/></literal></expr>;<pos:position pos:line="23" pos:column="21"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="25" pos:column="3">sstrncpy<pos:position pos:line="25" pos:column="11"/></name><argument_list pos:line="25" pos:column="11">(<argument><expr><name><name pos:line="25" pos:column="12">vl<pos:position pos:line="25" pos:column="14"/></name><operator pos:line="25" pos:column="14">.<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="15">host<pos:position pos:line="25" pos:column="19"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="21">hostname_g<pos:position pos:line="25" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="33">sizeof<argument_list pos:line="25" pos:column="39">(<argument><expr><name><name pos:line="25" pos:column="40">vl<pos:position pos:line="25" pos:column="42"/></name><operator pos:line="25" pos:column="42">.<pos:position pos:line="25" pos:column="43"/></operator><name pos:line="25" pos:column="43">host<pos:position pos:line="25" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="26" pos:column="3">sstrncpy<pos:position pos:line="26" pos:column="11"/></name><argument_list pos:line="26" pos:column="11">(<argument><expr><name><name pos:line="26" pos:column="12">vl<pos:position pos:line="26" pos:column="14"/></name><operator pos:line="26" pos:column="14">.<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="15">plugin<pos:position pos:line="26" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="23">"sensors"<pos:position pos:line="26" pos:column="32"/></literal></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="34">sizeof<argument_list pos:line="26" pos:column="40">(<argument><expr><name><name pos:line="26" pos:column="41">vl<pos:position pos:line="26" pos:column="43"/></name><operator pos:line="26" pos:column="43">.<pos:position pos:line="26" pos:column="44"/></operator><name pos:line="26" pos:column="44">plugin<pos:position pos:line="26" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="53"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="27" pos:column="3">sstrncpy<pos:position pos:line="27" pos:column="11"/></name><argument_list pos:line="27" pos:column="11">(<argument><expr><name><name pos:line="27" pos:column="12">vl<pos:position pos:line="27" pos:column="14"/></name><operator pos:line="27" pos:column="14">.<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="15">plugin_instance<pos:position pos:line="27" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="32">plugin_instance<pos:position pos:line="27" pos:column="47"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="49">sizeof<argument_list pos:line="27" pos:column="55">(<argument><expr><name><name pos:line="27" pos:column="56">vl<pos:position pos:line="27" pos:column="58"/></name><operator pos:line="27" pos:column="58">.<pos:position pos:line="27" pos:column="59"/></operator><name pos:line="27" pos:column="59">plugin_instance<pos:position pos:line="27" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="75"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="77"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="28" pos:column="3">sstrncpy<pos:position pos:line="28" pos:column="11"/></name><argument_list pos:line="28" pos:column="11">(<argument><expr><name><name pos:line="28" pos:column="12">vl<pos:position pos:line="28" pos:column="14"/></name><operator pos:line="28" pos:column="14">.<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="15">type<pos:position pos:line="28" pos:column="19"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="21">type<pos:position pos:line="28" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="27">sizeof<argument_list pos:line="28" pos:column="33">(<argument><expr><name><name pos:line="28" pos:column="34">vl<pos:position pos:line="28" pos:column="36"/></name><operator pos:line="28" pos:column="36">.<pos:position pos:line="28" pos:column="37"/></operator><name pos:line="28" pos:column="37">type<pos:position pos:line="28" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="29" pos:column="3">sstrncpy<pos:position pos:line="29" pos:column="11"/></name><argument_list pos:line="29" pos:column="11">(<argument><expr><name><name pos:line="29" pos:column="12">vl<pos:position pos:line="29" pos:column="14"/></name><operator pos:line="29" pos:column="14">.<pos:position pos:line="29" pos:column="15"/></operator><name pos:line="29" pos:column="15">type_instance<pos:position pos:line="29" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="30">type_instance<pos:position pos:line="29" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="45">sizeof<argument_list pos:line="29" pos:column="51">(<argument><expr><name><name pos:line="29" pos:column="52">vl<pos:position pos:line="29" pos:column="54"/></name><operator pos:line="29" pos:column="54">.<pos:position pos:line="29" pos:column="55"/></operator><name pos:line="29" pos:column="55">type_instance<pos:position pos:line="29" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="71"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="31" pos:column="3">plugin_dispatch_values<pos:position pos:line="31" pos:column="25"/></name><argument_list pos:line="31" pos:column="25">(<argument><expr><operator pos:line="31" pos:column="26">&amp;<pos:position pos:line="31" pos:column="31"/></operator><name pos:line="31" pos:column="27">vl<pos:position pos:line="31" pos:column="29"/></name></expr></argument>)<pos:position pos:line="31" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="31"/></expr_stmt>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

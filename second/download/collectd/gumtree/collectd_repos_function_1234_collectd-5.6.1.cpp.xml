<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1234_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">chrony_config<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><specifier pos:line="2" pos:column="15">const<pos:position pos:line="2" pos:column="20"/></specifier> <name pos:line="2" pos:column="21">char<pos:position pos:line="2" pos:column="25"/></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type><name pos:line="2" pos:column="27">p_key<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="34">const<pos:position pos:line="2" pos:column="39"/></specifier> <name pos:line="2" pos:column="40">char<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">p_value<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <expr_stmt><expr><call><name pos:line="4" pos:column="3">assert<pos:position pos:line="4" pos:column="9"/></name><argument_list pos:line="4" pos:column="9">(<argument><expr><name pos:line="4" pos:column="10">p_key<pos:position pos:line="4" pos:column="15"/></name></expr></argument>)<pos:position pos:line="4" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="5" pos:column="3">assert<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">(<argument><expr><name pos:line="5" pos:column="10">p_value<pos:position pos:line="5" pos:column="17"/></name></expr></argument>)<pos:position pos:line="5" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="19"/></expr_stmt>

  <comment type="block" pos:line="7" pos:column="3">/* Parse config variables */</comment>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><call><name pos:line="8" pos:column="7">strcasecmp<pos:position pos:line="8" pos:column="17"/></name><argument_list pos:line="8" pos:column="17">(<argument><expr><name pos:line="8" pos:column="18">p_key<pos:position pos:line="8" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="25">CONFIG_KEY_HOST<pos:position pos:line="8" pos:column="40"/></name></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call> <operator pos:line="8" pos:column="42">==<pos:position pos:line="8" pos:column="44"/></operator> <literal type="number" pos:line="8" pos:column="45">0<pos:position pos:line="8" pos:column="46"/></literal></expr>)<pos:position pos:line="8" pos:column="47"/></condition><then pos:line="8" pos:column="47">
  <block pos:line="9" pos:column="3">{
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">g_chrony_host<pos:position pos:line="10" pos:column="22"/></name> <operator pos:line="10" pos:column="23">!=<pos:position pos:line="10" pos:column="25"/></operator> <name pos:line="10" pos:column="26">NULL<pos:position pos:line="10" pos:column="30"/></name></expr>)<pos:position pos:line="10" pos:column="31"/></condition><then pos:line="10" pos:column="31">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="7">free<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><name pos:line="11" pos:column="12">g_chrony_host<pos:position pos:line="11" pos:column="25"/></name></expr></argument>)<pos:position pos:line="11" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="27"/></expr_stmt></block></then></if>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">(<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">g_chrony_host<pos:position pos:line="13" pos:column="23"/></name> <operator pos:line="13" pos:column="24">=<pos:position pos:line="13" pos:column="25"/></operator> <call><name pos:line="13" pos:column="26">strdup<pos:position pos:line="13" pos:column="32"/></name><argument_list pos:line="13" pos:column="32">(<argument><expr><name pos:line="13" pos:column="33">p_value<pos:position pos:line="13" pos:column="40"/></name></expr></argument>)<pos:position pos:line="13" pos:column="41"/></argument_list></call><operator pos:line="13" pos:column="41">)<pos:position pos:line="13" pos:column="42"/></operator> <operator pos:line="13" pos:column="43">==<pos:position pos:line="13" pos:column="45"/></operator> <name pos:line="13" pos:column="46">NULL<pos:position pos:line="13" pos:column="50"/></name></expr>)<pos:position pos:line="13" pos:column="51"/></condition><then pos:line="13" pos:column="51">
    <block pos:line="14" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="15" pos:column="7">ERROR<pos:position pos:line="15" pos:column="12"/></name><argument_list pos:line="15" pos:column="12">(<argument><expr><name pos:line="15" pos:column="13">PLUGIN_NAME<pos:position pos:line="15" pos:column="24"/></name> <literal type="string" pos:line="15" pos:column="25">": Error duplicating host name"<pos:position pos:line="15" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="58"/></expr_stmt>
      <return pos:line="16" pos:column="7">return <expr><name pos:line="16" pos:column="14">CHRONY_RC_FAIL<pos:position pos:line="16" pos:column="28"/></name></expr>;<pos:position pos:line="16" pos:column="29"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
  }<pos:position pos:line="18" pos:column="4"/></block></then>
  <else pos:line="19" pos:column="3">else
  <block pos:line="20" pos:column="3">{
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><call><name pos:line="21" pos:column="9">strcasecmp<pos:position pos:line="21" pos:column="19"/></name><argument_list pos:line="21" pos:column="19">(<argument><expr><name pos:line="21" pos:column="20">p_key<pos:position pos:line="21" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="27">CONFIG_KEY_PORT<pos:position pos:line="21" pos:column="42"/></name></expr></argument>)<pos:position pos:line="21" pos:column="43"/></argument_list></call> <operator pos:line="21" pos:column="44">==<pos:position pos:line="21" pos:column="46"/></operator> <literal type="number" pos:line="21" pos:column="47">0<pos:position pos:line="21" pos:column="48"/></literal></expr>)<pos:position pos:line="21" pos:column="49"/></condition><then pos:line="21" pos:column="49">
    <block pos:line="22" pos:column="5">{
      <if pos:line="23" pos:column="7">if <condition pos:line="23" pos:column="10">(<expr><name pos:line="23" pos:column="11">g_chrony_port<pos:position pos:line="23" pos:column="24"/></name> <operator pos:line="23" pos:column="25">!=<pos:position pos:line="23" pos:column="27"/></operator> <name pos:line="23" pos:column="28">NULL<pos:position pos:line="23" pos:column="32"/></name></expr>)<pos:position pos:line="23" pos:column="33"/></condition><then pos:line="23" pos:column="33">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="9">free<pos:position pos:line="24" pos:column="13"/></name><argument_list pos:line="24" pos:column="13">(<argument><expr><name pos:line="24" pos:column="14">g_chrony_port<pos:position pos:line="24" pos:column="27"/></name></expr></argument>)<pos:position pos:line="24" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="29"/></expr_stmt></block></then></if>

      <if pos:line="26" pos:column="7">if <condition pos:line="26" pos:column="10">(<expr><operator pos:line="26" pos:column="11">(<pos:position pos:line="26" pos:column="12"/></operator><name pos:line="26" pos:column="12">g_chrony_port<pos:position pos:line="26" pos:column="25"/></name> <operator pos:line="26" pos:column="26">=<pos:position pos:line="26" pos:column="27"/></operator> <call><name pos:line="26" pos:column="28">strdup<pos:position pos:line="26" pos:column="34"/></name><argument_list pos:line="26" pos:column="34">(<argument><expr><name pos:line="26" pos:column="35">p_value<pos:position pos:line="26" pos:column="42"/></name></expr></argument>)<pos:position pos:line="26" pos:column="43"/></argument_list></call><operator pos:line="26" pos:column="43">)<pos:position pos:line="26" pos:column="44"/></operator> <operator pos:line="26" pos:column="45">==<pos:position pos:line="26" pos:column="47"/></operator> <name pos:line="26" pos:column="48">NULL<pos:position pos:line="26" pos:column="52"/></name></expr>)<pos:position pos:line="26" pos:column="53"/></condition><then pos:line="26" pos:column="53">
      <block pos:line="27" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">ERROR<pos:position pos:line="28" pos:column="14"/></name><argument_list pos:line="28" pos:column="14">(<argument><expr><name pos:line="28" pos:column="15">PLUGIN_NAME<pos:position pos:line="28" pos:column="26"/></name> <literal type="string" pos:line="28" pos:column="27">": Error duplicating port name"<pos:position pos:line="28" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="60"/></expr_stmt>
        <return pos:line="29" pos:column="9">return <expr><name pos:line="29" pos:column="16">CHRONY_RC_FAIL<pos:position pos:line="29" pos:column="30"/></name></expr>;<pos:position pos:line="29" pos:column="31"/></return>
      }<pos:position pos:line="30" pos:column="8"/></block></then></if>
    }<pos:position pos:line="31" pos:column="6"/></block></then>
    <else pos:line="32" pos:column="5">else
    <block pos:line="33" pos:column="5">{
      <if pos:line="34" pos:column="7">if <condition pos:line="34" pos:column="10">(<expr><call><name pos:line="34" pos:column="11">strcasecmp<pos:position pos:line="34" pos:column="21"/></name><argument_list pos:line="34" pos:column="21">(<argument><expr><name pos:line="34" pos:column="22">p_key<pos:position pos:line="34" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="29">CONFIG_KEY_TIMEOUT<pos:position pos:line="34" pos:column="47"/></name></expr></argument>)<pos:position pos:line="34" pos:column="48"/></argument_list></call> <operator pos:line="34" pos:column="49">==<pos:position pos:line="34" pos:column="51"/></operator> <literal type="number" pos:line="34" pos:column="52">0<pos:position pos:line="34" pos:column="53"/></literal></expr>)<pos:position pos:line="34" pos:column="54"/></condition><then pos:line="34" pos:column="54">
      <block pos:line="35" pos:column="7">{
        <decl_stmt><decl><type><name pos:line="36" pos:column="9">time_t<pos:position pos:line="36" pos:column="15"/></name></type> <name pos:line="36" pos:column="16">tosec<pos:position pos:line="36" pos:column="21"/></name> <init pos:line="36" pos:column="22">= <expr><call><name pos:line="36" pos:column="24">strtol<pos:position pos:line="36" pos:column="30"/></name><argument_list pos:line="36" pos:column="30">(<argument><expr><name pos:line="36" pos:column="31">p_value<pos:position pos:line="36" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="40">NULL<pos:position pos:line="36" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="46">0<pos:position pos:line="36" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="36" pos:column="49"/></decl_stmt>
        <expr_stmt><expr><name pos:line="37" pos:column="9">g_chrony_timeout<pos:position pos:line="37" pos:column="25"/></name> <operator pos:line="37" pos:column="26">=<pos:position pos:line="37" pos:column="27"/></operator> <name pos:line="37" pos:column="28">tosec<pos:position pos:line="37" pos:column="33"/></name></expr>;<pos:position pos:line="37" pos:column="34"/></expr_stmt>
      }<pos:position pos:line="38" pos:column="8"/></block></then>
      <else pos:line="39" pos:column="7">else
      <block pos:line="40" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">WARNING<pos:position pos:line="41" pos:column="16"/></name><argument_list pos:line="41" pos:column="16">(<argument><expr><name pos:line="41" pos:column="17">PLUGIN_NAME<pos:position pos:line="41" pos:column="28"/></name> <literal type="string" pos:line="41" pos:column="29">": Unknown configuration variable: %s %s"<pos:position pos:line="41" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="72">p_key<pos:position pos:line="41" pos:column="77"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="79">p_value<pos:position pos:line="41" pos:column="86"/></name></expr></argument>)<pos:position pos:line="41" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="88"/></expr_stmt>
        <return pos:line="42" pos:column="9">return <expr><name pos:line="42" pos:column="16">CHRONY_RC_FAIL<pos:position pos:line="42" pos:column="30"/></name></expr>;<pos:position pos:line="42" pos:column="31"/></return>
      }<pos:position pos:line="43" pos:column="8"/></block></else></if>
    }<pos:position pos:line="44" pos:column="6"/></block></else></if>
  }<pos:position pos:line="45" pos:column="4"/></block></else></if>
  <comment type="block" pos:line="46" pos:column="3">/* XXX: We could set g_chrony_plugin_instance here to "g_chrony_host-g_chrony_port", but as multiple instances aren't yet supported, we skip this for now */</comment>

  <return pos:line="48" pos:column="3">return <expr><name pos:line="48" pos:column="10">CHRONY_RC_OK<pos:position pos:line="48" pos:column="22"/></name></expr>;<pos:position pos:line="48" pos:column="23"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

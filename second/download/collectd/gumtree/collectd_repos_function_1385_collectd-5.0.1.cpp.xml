<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1385_collectd-5.0.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">handle_flush<pos:position pos:line="1" pos:column="17"/></name> <parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">FILE<pos:position pos:line="1" pos:column="23"/></name> <modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type><name pos:line="1" pos:column="25">fh<pos:position pos:line="1" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">buffer<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">success<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><literal type="number" pos:line="3" pos:column="23">0<pos:position pos:line="3" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">error<pos:position pos:line="4" pos:column="18"/></name>   <init pos:line="4" pos:column="21">= <expr><literal type="number" pos:line="4" pos:column="23">0<pos:position pos:line="4" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="6" pos:column="9">double<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">timeout<pos:position pos:line="6" pos:column="23"/></name> <init pos:line="6" pos:column="24">= <expr><literal type="number" pos:line="6" pos:column="26">0.0<pos:position pos:line="6" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier><modifier pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></modifier></type><name pos:line="7" pos:column="16">plugins<pos:position pos:line="7" pos:column="23"/></name> <init pos:line="7" pos:column="24">= <expr><name pos:line="7" pos:column="26">NULL<pos:position pos:line="7" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">plugins_num<pos:position pos:line="8" pos:column="24"/></name> <init pos:line="8" pos:column="25">= <expr><literal type="number" pos:line="8" pos:column="27">0<pos:position pos:line="8" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier><modifier pos:line="9" pos:column="15">*<pos:position pos:line="9" pos:column="16"/></modifier></type><name pos:line="9" pos:column="16">identifiers<pos:position pos:line="9" pos:column="27"/></name> <init pos:line="9" pos:column="28">= <expr><name pos:line="9" pos:column="30">NULL<pos:position pos:line="9" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">identifiers_num<pos:position pos:line="10" pos:column="28"/></name> <init pos:line="10" pos:column="29">= <expr><literal type="number" pos:line="10" pos:column="31">0<pos:position pos:line="10" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="33"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="12" pos:column="9">int<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">i<pos:position pos:line="12" pos:column="14"/></name></decl>;<pos:position pos:line="12" pos:column="15"/></decl_stmt>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">(<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">fh<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">==<pos:position pos:line="14" pos:column="19"/></operator> <name pos:line="14" pos:column="20">NULL<pos:position pos:line="14" pos:column="24"/></name><operator pos:line="14" pos:column="24">)<pos:position pos:line="14" pos:column="25"/></operator> <operator pos:line="14" pos:column="26">||<pos:position pos:line="14" pos:column="28"/></operator> <operator pos:line="14" pos:column="29">(<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="30">buffer<pos:position pos:line="14" pos:column="36"/></name> <operator pos:line="14" pos:column="37">==<pos:position pos:line="14" pos:column="39"/></operator> <name pos:line="14" pos:column="40">NULL<pos:position pos:line="14" pos:column="44"/></name><operator pos:line="14" pos:column="44">)<pos:position pos:line="14" pos:column="45"/></operator></expr>)<pos:position pos:line="14" pos:column="46"/></condition><then pos:line="14" pos:column="46">
		<block type="pseudo"><return pos:line="15" pos:column="17">return <expr><operator pos:line="15" pos:column="24">(<pos:position pos:line="15" pos:column="25"/></operator><operator pos:line="15" pos:column="25">-<pos:position pos:line="15" pos:column="26"/></operator><literal type="number" pos:line="15" pos:column="26">1<pos:position pos:line="15" pos:column="27"/></literal><operator pos:line="15" pos:column="27">)<pos:position pos:line="15" pos:column="28"/></operator></expr>;<pos:position pos:line="15" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="17" pos:column="9">DEBUG<pos:position pos:line="17" pos:column="14"/></name> <argument_list pos:line="17" pos:column="15">(<argument><expr><literal type="string" pos:line="17" pos:column="16">"utils_cmd_flush: handle_flush (fh = %p, buffer = %s);"<pos:position pos:line="17" pos:column="71"/></literal></expr></argument>,
			<argument><expr><operator pos:line="18" pos:column="25">(<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="26">void<pos:position pos:line="18" pos:column="30"/></name> <operator pos:line="18" pos:column="31">*<pos:position pos:line="18" pos:column="32"/></operator><operator pos:line="18" pos:column="32">)<pos:position pos:line="18" pos:column="33"/></operator> <name pos:line="18" pos:column="34">fh<pos:position pos:line="18" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="38">buffer<pos:position pos:line="18" pos:column="44"/></name></expr></argument>)<pos:position pos:line="18" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="46"/></expr_stmt>

	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><call><name pos:line="20" pos:column="13">strncasecmp<pos:position pos:line="20" pos:column="24"/></name> <argument_list pos:line="20" pos:column="25">(<argument><expr><literal type="string" pos:line="20" pos:column="26">"FLUSH"<pos:position pos:line="20" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="35">buffer<pos:position pos:line="20" pos:column="41"/></name></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="43">strlen<pos:position pos:line="20" pos:column="49"/></name> <argument_list pos:line="20" pos:column="50">(<argument><expr><literal type="string" pos:line="20" pos:column="51">"FLUSH"<pos:position pos:line="20" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="60"/></argument_list></call> <operator pos:line="20" pos:column="61">!=<pos:position pos:line="20" pos:column="63"/></operator> <literal type="number" pos:line="20" pos:column="64">0<pos:position pos:line="20" pos:column="65"/></literal></expr>)<pos:position pos:line="20" pos:column="66"/></condition><then pos:line="20" pos:column="66">
	<block pos:line="21" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">print_to_socket<pos:position pos:line="22" pos:column="32"/></name> <argument_list pos:line="22" pos:column="33">(<argument><expr><name pos:line="22" pos:column="34">fh<pos:position pos:line="22" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="38">"-1 Cannot parse command.\n"<pos:position pos:line="22" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="68"/></expr_stmt>
		<return pos:line="23" pos:column="17">return <expr><operator pos:line="23" pos:column="24">(<pos:position pos:line="23" pos:column="25"/></operator><operator pos:line="23" pos:column="25">-<pos:position pos:line="23" pos:column="26"/></operator><literal type="number" pos:line="23" pos:column="26">1<pos:position pos:line="23" pos:column="27"/></literal><operator pos:line="23" pos:column="27">)<pos:position pos:line="23" pos:column="28"/></operator></expr>;<pos:position pos:line="23" pos:column="29"/></return>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="25" pos:column="9">buffer<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">+=<pos:position pos:line="25" pos:column="18"/></operator> <call><name pos:line="25" pos:column="19">strlen<pos:position pos:line="25" pos:column="25"/></name> <argument_list pos:line="25" pos:column="26">(<argument><expr><literal type="string" pos:line="25" pos:column="27">"FLUSH"<pos:position pos:line="25" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="36"/></expr_stmt>

	<while pos:line="27" pos:column="9">while <condition pos:line="27" pos:column="15">(<expr><operator pos:line="27" pos:column="16">*<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="17">buffer<pos:position pos:line="27" pos:column="23"/></name> <operator pos:line="27" pos:column="24">!=<pos:position pos:line="27" pos:column="26"/></operator> <literal type="number" pos:line="27" pos:column="27">0<pos:position pos:line="27" pos:column="28"/></literal></expr>)<pos:position pos:line="27" pos:column="29"/></condition>
	<block pos:line="28" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="29" pos:column="17">char<pos:position pos:line="29" pos:column="21"/></name> <modifier pos:line="29" pos:column="22">*<pos:position pos:line="29" pos:column="23"/></modifier></type><name pos:line="29" pos:column="23">opt_key<pos:position pos:line="29" pos:column="30"/></name></decl>;<pos:position pos:line="29" pos:column="31"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="30" pos:column="17">char<pos:position pos:line="30" pos:column="21"/></name> <modifier pos:line="30" pos:column="22">*<pos:position pos:line="30" pos:column="23"/></modifier></type><name pos:line="30" pos:column="23">opt_value<pos:position pos:line="30" pos:column="32"/></name></decl>;<pos:position pos:line="30" pos:column="33"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="31" pos:column="17">int<pos:position pos:line="31" pos:column="20"/></name></type> <name pos:line="31" pos:column="21">status<pos:position pos:line="31" pos:column="27"/></name></decl>;<pos:position pos:line="31" pos:column="28"/></decl_stmt>

		<expr_stmt><expr><name pos:line="33" pos:column="17">opt_key<pos:position pos:line="33" pos:column="24"/></name> <operator pos:line="33" pos:column="25">=<pos:position pos:line="33" pos:column="26"/></operator> <name pos:line="33" pos:column="27">NULL<pos:position pos:line="33" pos:column="31"/></name></expr>;<pos:position pos:line="33" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name pos:line="34" pos:column="17">opt_value<pos:position pos:line="34" pos:column="26"/></name> <operator pos:line="34" pos:column="27">=<pos:position pos:line="34" pos:column="28"/></operator> <name pos:line="34" pos:column="29">NULL<pos:position pos:line="34" pos:column="33"/></name></expr>;<pos:position pos:line="34" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name pos:line="35" pos:column="17">status<pos:position pos:line="35" pos:column="23"/></name> <operator pos:line="35" pos:column="24">=<pos:position pos:line="35" pos:column="25"/></operator> <call><name pos:line="35" pos:column="26">parse_option<pos:position pos:line="35" pos:column="38"/></name> <argument_list pos:line="35" pos:column="39">(<argument><expr><operator pos:line="35" pos:column="40">&amp;<pos:position pos:line="35" pos:column="45"/></operator><name pos:line="35" pos:column="41">buffer<pos:position pos:line="35" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="49">&amp;<pos:position pos:line="35" pos:column="54"/></operator><name pos:line="35" pos:column="50">opt_key<pos:position pos:line="35" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="59">&amp;<pos:position pos:line="35" pos:column="64"/></operator><name pos:line="35" pos:column="60">opt_value<pos:position pos:line="35" pos:column="69"/></name></expr></argument>)<pos:position pos:line="35" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="71"/></expr_stmt>
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><name pos:line="36" pos:column="21">status<pos:position pos:line="36" pos:column="27"/></name> <operator pos:line="36" pos:column="28">!=<pos:position pos:line="36" pos:column="30"/></operator> <literal type="number" pos:line="36" pos:column="31">0<pos:position pos:line="36" pos:column="32"/></literal></expr>)<pos:position pos:line="36" pos:column="33"/></condition><then pos:line="36" pos:column="33">
		<block pos:line="37" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="38" pos:column="25">print_to_socket<pos:position pos:line="38" pos:column="40"/></name> <argument_list pos:line="38" pos:column="41">(<argument><expr><name pos:line="38" pos:column="42">fh<pos:position pos:line="38" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="46">"-1 Parsing options failed.\n"<pos:position pos:line="38" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="78"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="39" pos:column="25">sfree<pos:position pos:line="39" pos:column="30"/></name> <argument_list pos:line="39" pos:column="31">(<argument><expr><name pos:line="39" pos:column="32">plugins<pos:position pos:line="39" pos:column="39"/></name></expr></argument>)<pos:position pos:line="39" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="40" pos:column="25">sfree<pos:position pos:line="40" pos:column="30"/></name> <argument_list pos:line="40" pos:column="31">(<argument><expr><name pos:line="40" pos:column="32">identifiers<pos:position pos:line="40" pos:column="43"/></name></expr></argument>)<pos:position pos:line="40" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="45"/></expr_stmt>
			<return pos:line="41" pos:column="25">return <expr><operator pos:line="41" pos:column="32">(<pos:position pos:line="41" pos:column="33"/></operator><operator pos:line="41" pos:column="33">-<pos:position pos:line="41" pos:column="34"/></operator><literal type="number" pos:line="41" pos:column="34">1<pos:position pos:line="41" pos:column="35"/></literal><operator pos:line="41" pos:column="35">)<pos:position pos:line="41" pos:column="36"/></operator></expr>;<pos:position pos:line="41" pos:column="37"/></return>
		}<pos:position pos:line="42" pos:column="18"/></block></then></if>

		<if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><call><name pos:line="44" pos:column="21">strcasecmp<pos:position pos:line="44" pos:column="31"/></name> <argument_list pos:line="44" pos:column="32">(<argument><expr><literal type="string" pos:line="44" pos:column="33">"plugin"<pos:position pos:line="44" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="43">opt_key<pos:position pos:line="44" pos:column="50"/></name></expr></argument>)<pos:position pos:line="44" pos:column="51"/></argument_list></call> <operator pos:line="44" pos:column="52">==<pos:position pos:line="44" pos:column="54"/></operator> <literal type="number" pos:line="44" pos:column="55">0<pos:position pos:line="44" pos:column="56"/></literal></expr>)<pos:position pos:line="44" pos:column="57"/></condition><then pos:line="44" pos:column="57">
		<block pos:line="45" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="46" pos:column="25">add_to_array<pos:position pos:line="46" pos:column="37"/></name> <argument_list pos:line="46" pos:column="38">(<argument><expr><operator pos:line="46" pos:column="39">&amp;<pos:position pos:line="46" pos:column="44"/></operator><name pos:line="46" pos:column="40">plugins<pos:position pos:line="46" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="49">&amp;<pos:position pos:line="46" pos:column="54"/></operator><name pos:line="46" pos:column="50">plugins_num<pos:position pos:line="46" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="63">opt_value<pos:position pos:line="46" pos:column="72"/></name></expr></argument>)<pos:position pos:line="46" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="74"/></expr_stmt>
		}<pos:position pos:line="47" pos:column="18"/></block></then>
		<elseif pos:line="48" pos:column="17">else <if pos:line="48" pos:column="22">if <condition pos:line="48" pos:column="25">(<expr><call><name pos:line="48" pos:column="26">strcasecmp<pos:position pos:line="48" pos:column="36"/></name> <argument_list pos:line="48" pos:column="37">(<argument><expr><literal type="string" pos:line="48" pos:column="38">"identifier"<pos:position pos:line="48" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="52">opt_key<pos:position pos:line="48" pos:column="59"/></name></expr></argument>)<pos:position pos:line="48" pos:column="60"/></argument_list></call> <operator pos:line="48" pos:column="61">==<pos:position pos:line="48" pos:column="63"/></operator> <literal type="number" pos:line="48" pos:column="64">0<pos:position pos:line="48" pos:column="65"/></literal></expr>)<pos:position pos:line="48" pos:column="66"/></condition><then pos:line="48" pos:column="66">
		<block pos:line="49" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="50" pos:column="25">add_to_array<pos:position pos:line="50" pos:column="37"/></name> <argument_list pos:line="50" pos:column="38">(<argument><expr><operator pos:line="50" pos:column="39">&amp;<pos:position pos:line="50" pos:column="44"/></operator><name pos:line="50" pos:column="40">identifiers<pos:position pos:line="50" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="53">&amp;<pos:position pos:line="50" pos:column="58"/></operator><name pos:line="50" pos:column="54">identifiers_num<pos:position pos:line="50" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="71">opt_value<pos:position pos:line="50" pos:column="80"/></name></expr></argument>)<pos:position pos:line="50" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="82"/></expr_stmt>
		}<pos:position pos:line="51" pos:column="18"/></block></then></if></elseif>
		<elseif pos:line="52" pos:column="17">else <if pos:line="52" pos:column="22">if <condition pos:line="52" pos:column="25">(<expr><call><name pos:line="52" pos:column="26">strcasecmp<pos:position pos:line="52" pos:column="36"/></name> <argument_list pos:line="52" pos:column="37">(<argument><expr><literal type="string" pos:line="52" pos:column="38">"timeout"<pos:position pos:line="52" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="52" pos:column="49">opt_key<pos:position pos:line="52" pos:column="56"/></name></expr></argument>)<pos:position pos:line="52" pos:column="57"/></argument_list></call> <operator pos:line="52" pos:column="58">==<pos:position pos:line="52" pos:column="60"/></operator> <literal type="number" pos:line="52" pos:column="61">0<pos:position pos:line="52" pos:column="62"/></literal></expr>)<pos:position pos:line="52" pos:column="63"/></condition><then pos:line="52" pos:column="63">
		<block pos:line="53" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="54" pos:column="25">char<pos:position pos:line="54" pos:column="29"/></name> <modifier pos:line="54" pos:column="30">*<pos:position pos:line="54" pos:column="31"/></modifier></type><name pos:line="54" pos:column="31">endptr<pos:position pos:line="54" pos:column="37"/></name></decl>;<pos:position pos:line="54" pos:column="38"/></decl_stmt>
			
			<expr_stmt><expr><name pos:line="56" pos:column="25">errno<pos:position pos:line="56" pos:column="30"/></name> <operator pos:line="56" pos:column="31">=<pos:position pos:line="56" pos:column="32"/></operator> <literal type="number" pos:line="56" pos:column="33">0<pos:position pos:line="56" pos:column="34"/></literal></expr>;<pos:position pos:line="56" pos:column="35"/></expr_stmt>
			<expr_stmt><expr><name pos:line="57" pos:column="25">endptr<pos:position pos:line="57" pos:column="31"/></name> <operator pos:line="57" pos:column="32">=<pos:position pos:line="57" pos:column="33"/></operator> <name pos:line="57" pos:column="34">NULL<pos:position pos:line="57" pos:column="38"/></name></expr>;<pos:position pos:line="57" pos:column="39"/></expr_stmt>
			<expr_stmt><expr><name pos:line="58" pos:column="25">timeout<pos:position pos:line="58" pos:column="32"/></name> <operator pos:line="58" pos:column="33">=<pos:position pos:line="58" pos:column="34"/></operator> <call><name pos:line="58" pos:column="35">strtod<pos:position pos:line="58" pos:column="41"/></name> <argument_list pos:line="58" pos:column="42">(<argument><expr><name pos:line="58" pos:column="43">opt_value<pos:position pos:line="58" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="58" pos:column="54">&amp;<pos:position pos:line="58" pos:column="59"/></operator><name pos:line="58" pos:column="55">endptr<pos:position pos:line="58" pos:column="61"/></name></expr></argument>)<pos:position pos:line="58" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="63"/></expr_stmt>

			<if pos:line="60" pos:column="25">if <condition pos:line="60" pos:column="28">(<expr><operator pos:line="60" pos:column="29">(<pos:position pos:line="60" pos:column="30"/></operator><name pos:line="60" pos:column="30">endptr<pos:position pos:line="60" pos:column="36"/></name> <operator pos:line="60" pos:column="37">==<pos:position pos:line="60" pos:column="39"/></operator> <name pos:line="60" pos:column="40">opt_value<pos:position pos:line="60" pos:column="49"/></name><operator pos:line="60" pos:column="49">)<pos:position pos:line="60" pos:column="50"/></operator> <operator pos:line="60" pos:column="51">||<pos:position pos:line="60" pos:column="53"/></operator> <operator pos:line="60" pos:column="54">(<pos:position pos:line="60" pos:column="55"/></operator><name pos:line="60" pos:column="55">errno<pos:position pos:line="60" pos:column="60"/></name> <operator pos:line="60" pos:column="61">!=<pos:position pos:line="60" pos:column="63"/></operator> <literal type="number" pos:line="60" pos:column="64">0<pos:position pos:line="60" pos:column="65"/></literal><operator pos:line="60" pos:column="65">)<pos:position pos:line="60" pos:column="66"/></operator> <operator pos:line="60" pos:column="67">||<pos:position pos:line="60" pos:column="69"/></operator> <operator pos:line="60" pos:column="70">(<pos:position pos:line="60" pos:column="71"/></operator><operator pos:line="60" pos:column="71">!<pos:position pos:line="60" pos:column="72"/></operator><call><name pos:line="60" pos:column="72">isfinite<pos:position pos:line="60" pos:column="80"/></name> <argument_list pos:line="60" pos:column="81">(<argument><expr><name pos:line="60" pos:column="82">timeout<pos:position pos:line="60" pos:column="89"/></name></expr></argument>)<pos:position pos:line="60" pos:column="90"/></argument_list></call><operator pos:line="60" pos:column="90">)<pos:position pos:line="60" pos:column="91"/></operator></expr>)<pos:position pos:line="60" pos:column="92"/></condition><then pos:line="60" pos:column="92">
			<block pos:line="61" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="62" pos:column="33">print_to_socket<pos:position pos:line="62" pos:column="48"/></name> <argument_list pos:line="62" pos:column="49">(<argument><expr><name pos:line="62" pos:column="50">fh<pos:position pos:line="62" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="54">"-1 Invalid value for option `timeout': "<pos:position pos:line="62" pos:column="95"/></literal>
						<literal type="string" pos:line="63" pos:column="49">"%s\n"<pos:position pos:line="63" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="57">opt_value<pos:position pos:line="63" pos:column="66"/></name></expr></argument>)<pos:position pos:line="63" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="68"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="64" pos:column="33">sfree<pos:position pos:line="64" pos:column="38"/></name> <argument_list pos:line="64" pos:column="39">(<argument><expr><name pos:line="64" pos:column="40">plugins<pos:position pos:line="64" pos:column="47"/></name></expr></argument>)<pos:position pos:line="64" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="49"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="65" pos:column="33">sfree<pos:position pos:line="65" pos:column="38"/></name> <argument_list pos:line="65" pos:column="39">(<argument><expr><name pos:line="65" pos:column="40">identifiers<pos:position pos:line="65" pos:column="51"/></name></expr></argument>)<pos:position pos:line="65" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="53"/></expr_stmt>
				<return pos:line="66" pos:column="33">return <expr><operator pos:line="66" pos:column="40">(<pos:position pos:line="66" pos:column="41"/></operator><operator pos:line="66" pos:column="41">-<pos:position pos:line="66" pos:column="42"/></operator><literal type="number" pos:line="66" pos:column="42">1<pos:position pos:line="66" pos:column="43"/></literal><operator pos:line="66" pos:column="43">)<pos:position pos:line="66" pos:column="44"/></operator></expr>;<pos:position pos:line="66" pos:column="45"/></return>
			}<pos:position pos:line="67" pos:column="26"/></block></then>
			<elseif pos:line="68" pos:column="25">else <if pos:line="68" pos:column="30">if <condition pos:line="68" pos:column="33">(<expr><name pos:line="68" pos:column="34">timeout<pos:position pos:line="68" pos:column="41"/></name> <operator pos:line="68" pos:column="42">&lt;<pos:position pos:line="68" pos:column="46"/></operator> <literal type="number" pos:line="68" pos:column="44">0.0<pos:position pos:line="68" pos:column="47"/></literal></expr>)<pos:position pos:line="68" pos:column="48"/></condition><then pos:line="68" pos:column="48">
			<block pos:line="69" pos:column="25">{
				<expr_stmt><expr><name pos:line="70" pos:column="33">timeout<pos:position pos:line="70" pos:column="40"/></name> <operator pos:line="70" pos:column="41">=<pos:position pos:line="70" pos:column="42"/></operator> <literal type="number" pos:line="70" pos:column="43">0.0<pos:position pos:line="70" pos:column="46"/></literal></expr>;<pos:position pos:line="70" pos:column="47"/></expr_stmt>
			}<pos:position pos:line="71" pos:column="26"/></block></then></if></elseif></if>
		}<pos:position pos:line="72" pos:column="18"/></block></then></if></elseif>
		<else pos:line="73" pos:column="17">else
		<block pos:line="74" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="75" pos:column="25">print_to_socket<pos:position pos:line="75" pos:column="40"/></name> <argument_list pos:line="75" pos:column="41">(<argument><expr><name pos:line="75" pos:column="42">fh<pos:position pos:line="75" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="46">"-1 Cannot parse option %s\n"<pos:position pos:line="75" pos:column="75"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="77">opt_key<pos:position pos:line="75" pos:column="84"/></name></expr></argument>)<pos:position pos:line="75" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="86"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="76" pos:column="25">sfree<pos:position pos:line="76" pos:column="30"/></name> <argument_list pos:line="76" pos:column="31">(<argument><expr><name pos:line="76" pos:column="32">plugins<pos:position pos:line="76" pos:column="39"/></name></expr></argument>)<pos:position pos:line="76" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="77" pos:column="25">sfree<pos:position pos:line="77" pos:column="30"/></name> <argument_list pos:line="77" pos:column="31">(<argument><expr><name pos:line="77" pos:column="32">identifiers<pos:position pos:line="77" pos:column="43"/></name></expr></argument>)<pos:position pos:line="77" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="45"/></expr_stmt>
			<return pos:line="78" pos:column="25">return <expr><operator pos:line="78" pos:column="32">(<pos:position pos:line="78" pos:column="33"/></operator><operator pos:line="78" pos:column="33">-<pos:position pos:line="78" pos:column="34"/></operator><literal type="number" pos:line="78" pos:column="34">1<pos:position pos:line="78" pos:column="35"/></literal><operator pos:line="78" pos:column="35">)<pos:position pos:line="78" pos:column="36"/></operator></expr>;<pos:position pos:line="78" pos:column="37"/></return>
		}<pos:position pos:line="79" pos:column="18"/></block></else></if>
	}<pos:position pos:line="80" pos:column="10"/></block></while> <comment type="block" pos:line="80" pos:column="11">/* while (*buffer != 0) */</comment>

	<comment type="block" pos:line="82" pos:column="9">/* Add NULL entries for `any plugin' and/or `any value' if nothing was
	 * specified. */</comment>
	<if pos:line="84" pos:column="9">if <condition pos:line="84" pos:column="12">(<expr><name pos:line="84" pos:column="13">plugins_num<pos:position pos:line="84" pos:column="24"/></name> <operator pos:line="84" pos:column="25">==<pos:position pos:line="84" pos:column="27"/></operator> <literal type="number" pos:line="84" pos:column="28">0<pos:position pos:line="84" pos:column="29"/></literal></expr>)<pos:position pos:line="84" pos:column="30"/></condition><then pos:line="84" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="85" pos:column="17">add_to_array<pos:position pos:line="85" pos:column="29"/></name> <argument_list pos:line="85" pos:column="30">(<argument><expr><operator pos:line="85" pos:column="31">&amp;<pos:position pos:line="85" pos:column="36"/></operator><name pos:line="85" pos:column="32">plugins<pos:position pos:line="85" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="85" pos:column="41">&amp;<pos:position pos:line="85" pos:column="46"/></operator><name pos:line="85" pos:column="42">plugins_num<pos:position pos:line="85" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="55">NULL<pos:position pos:line="85" pos:column="59"/></name></expr></argument>)<pos:position pos:line="85" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="61"/></expr_stmt></block></then></if>

	<if pos:line="87" pos:column="9">if <condition pos:line="87" pos:column="12">(<expr><name pos:line="87" pos:column="13">identifiers_num<pos:position pos:line="87" pos:column="28"/></name> <operator pos:line="87" pos:column="29">==<pos:position pos:line="87" pos:column="31"/></operator> <literal type="number" pos:line="87" pos:column="32">0<pos:position pos:line="87" pos:column="33"/></literal></expr>)<pos:position pos:line="87" pos:column="34"/></condition><then pos:line="87" pos:column="34">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="88" pos:column="17">add_to_array<pos:position pos:line="88" pos:column="29"/></name> <argument_list pos:line="88" pos:column="30">(<argument><expr><operator pos:line="88" pos:column="31">&amp;<pos:position pos:line="88" pos:column="36"/></operator><name pos:line="88" pos:column="32">identifiers<pos:position pos:line="88" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="88" pos:column="45">&amp;<pos:position pos:line="88" pos:column="50"/></operator><name pos:line="88" pos:column="46">identifiers_num<pos:position pos:line="88" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="63">NULL<pos:position pos:line="88" pos:column="67"/></name></expr></argument>)<pos:position pos:line="88" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="69"/></expr_stmt></block></then></if>

	<for pos:line="90" pos:column="9">for <control pos:line="90" pos:column="13">(<init><expr><name pos:line="90" pos:column="14">i<pos:position pos:line="90" pos:column="15"/></name> <operator pos:line="90" pos:column="16">=<pos:position pos:line="90" pos:column="17"/></operator> <literal type="number" pos:line="90" pos:column="18">0<pos:position pos:line="90" pos:column="19"/></literal></expr>;<pos:position pos:line="90" pos:column="20"/></init> <condition><expr><name pos:line="90" pos:column="21">i<pos:position pos:line="90" pos:column="22"/></name> <operator pos:line="90" pos:column="23">&lt;<pos:position pos:line="90" pos:column="27"/></operator> <name pos:line="90" pos:column="25">plugins_num<pos:position pos:line="90" pos:column="36"/></name></expr>;<pos:position pos:line="90" pos:column="37"/></condition> <incr><expr><name pos:line="90" pos:column="38">i<pos:position pos:line="90" pos:column="39"/></name><operator pos:line="90" pos:column="39">++<pos:position pos:line="90" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="90" pos:column="42"/></control>
	<block pos:line="91" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="92" pos:column="17">char<pos:position pos:line="92" pos:column="21"/></name> <modifier pos:line="92" pos:column="22">*<pos:position pos:line="92" pos:column="23"/></modifier></type><name pos:line="92" pos:column="23">plugin<pos:position pos:line="92" pos:column="29"/></name></decl>;<pos:position pos:line="92" pos:column="30"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="93" pos:column="17">int<pos:position pos:line="93" pos:column="20"/></name></type> <name pos:line="93" pos:column="21">j<pos:position pos:line="93" pos:column="22"/></name></decl>;<pos:position pos:line="93" pos:column="23"/></decl_stmt>

		<expr_stmt><expr><name pos:line="95" pos:column="17">plugin<pos:position pos:line="95" pos:column="23"/></name> <operator pos:line="95" pos:column="24">=<pos:position pos:line="95" pos:column="25"/></operator> <name><name pos:line="95" pos:column="26">plugins<pos:position pos:line="95" pos:column="33"/></name><index pos:line="95" pos:column="33">[<expr><name pos:line="95" pos:column="34">i<pos:position pos:line="95" pos:column="35"/></name></expr>]<pos:position pos:line="95" pos:column="36"/></index></name></expr>;<pos:position pos:line="95" pos:column="37"/></expr_stmt>

		<for pos:line="97" pos:column="17">for <control pos:line="97" pos:column="21">(<init><expr><name pos:line="97" pos:column="22">j<pos:position pos:line="97" pos:column="23"/></name> <operator pos:line="97" pos:column="24">=<pos:position pos:line="97" pos:column="25"/></operator> <literal type="number" pos:line="97" pos:column="26">0<pos:position pos:line="97" pos:column="27"/></literal></expr>;<pos:position pos:line="97" pos:column="28"/></init> <condition><expr><name pos:line="97" pos:column="29">j<pos:position pos:line="97" pos:column="30"/></name> <operator pos:line="97" pos:column="31">&lt;<pos:position pos:line="97" pos:column="35"/></operator> <name pos:line="97" pos:column="33">identifiers_num<pos:position pos:line="97" pos:column="48"/></name></expr>;<pos:position pos:line="97" pos:column="49"/></condition> <incr><expr><name pos:line="97" pos:column="50">j<pos:position pos:line="97" pos:column="51"/></name><operator pos:line="97" pos:column="51">++<pos:position pos:line="97" pos:column="53"/></operator></expr></incr>)<pos:position pos:line="97" pos:column="54"/></control>
		<block pos:line="98" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="99" pos:column="25">char<pos:position pos:line="99" pos:column="29"/></name> <modifier pos:line="99" pos:column="30">*<pos:position pos:line="99" pos:column="31"/></modifier></type><name pos:line="99" pos:column="31">identifier<pos:position pos:line="99" pos:column="41"/></name></decl>;<pos:position pos:line="99" pos:column="42"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="100" pos:column="25">int<pos:position pos:line="100" pos:column="28"/></name></type> <name pos:line="100" pos:column="29">status<pos:position pos:line="100" pos:column="35"/></name></decl>;<pos:position pos:line="100" pos:column="36"/></decl_stmt>

			<expr_stmt><expr><name pos:line="102" pos:column="25">identifier<pos:position pos:line="102" pos:column="35"/></name> <operator pos:line="102" pos:column="36">=<pos:position pos:line="102" pos:column="37"/></operator> <name><name pos:line="102" pos:column="38">identifiers<pos:position pos:line="102" pos:column="49"/></name><index pos:line="102" pos:column="49">[<expr><name pos:line="102" pos:column="50">j<pos:position pos:line="102" pos:column="51"/></name></expr>]<pos:position pos:line="102" pos:column="52"/></index></name></expr>;<pos:position pos:line="102" pos:column="53"/></expr_stmt>
			<expr_stmt><expr><name pos:line="103" pos:column="25">status<pos:position pos:line="103" pos:column="31"/></name> <operator pos:line="103" pos:column="32">=<pos:position pos:line="103" pos:column="33"/></operator> <call><name pos:line="103" pos:column="34">plugin_flush<pos:position pos:line="103" pos:column="46"/></name> <argument_list pos:line="103" pos:column="47">(<argument><expr><name pos:line="103" pos:column="48">plugin<pos:position pos:line="103" pos:column="54"/></name></expr></argument>,
					<argument><expr><call><name pos:line="104" pos:column="41">DOUBLE_TO_CDTIME_T<pos:position pos:line="104" pos:column="59"/></name> <argument_list pos:line="104" pos:column="60">(<argument><expr><name pos:line="104" pos:column="61">timeout<pos:position pos:line="104" pos:column="68"/></name></expr></argument>)<pos:position pos:line="104" pos:column="69"/></argument_list></call></expr></argument>,
					<argument><expr><name pos:line="105" pos:column="41">identifier<pos:position pos:line="105" pos:column="51"/></name></expr></argument>)<pos:position pos:line="105" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="53"/></expr_stmt>
			<if pos:line="106" pos:column="25">if <condition pos:line="106" pos:column="28">(<expr><name pos:line="106" pos:column="29">status<pos:position pos:line="106" pos:column="35"/></name> <operator pos:line="106" pos:column="36">==<pos:position pos:line="106" pos:column="38"/></operator> <literal type="number" pos:line="106" pos:column="39">0<pos:position pos:line="106" pos:column="40"/></literal></expr>)<pos:position pos:line="106" pos:column="41"/></condition><then pos:line="106" pos:column="41">
				<block type="pseudo"><expr_stmt><expr><name pos:line="107" pos:column="33">success<pos:position pos:line="107" pos:column="40"/></name><operator pos:line="107" pos:column="40">++<pos:position pos:line="107" pos:column="42"/></operator></expr>;<pos:position pos:line="107" pos:column="43"/></expr_stmt></block></then>
			<else pos:line="108" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="109" pos:column="33">error<pos:position pos:line="109" pos:column="38"/></name><operator pos:line="109" pos:column="38">++<pos:position pos:line="109" pos:column="40"/></operator></expr>;<pos:position pos:line="109" pos:column="41"/></expr_stmt></block></else></if>
		}<pos:position pos:line="110" pos:column="18"/></block></for>
	}<pos:position pos:line="111" pos:column="10"/></block></for>

	<if pos:line="113" pos:column="9">if <condition pos:line="113" pos:column="12">(<expr><operator pos:line="113" pos:column="13">(<pos:position pos:line="113" pos:column="14"/></operator><name pos:line="113" pos:column="14">success<pos:position pos:line="113" pos:column="21"/></name> <operator pos:line="113" pos:column="22">+<pos:position pos:line="113" pos:column="23"/></operator> <name pos:line="113" pos:column="24">error<pos:position pos:line="113" pos:column="29"/></name><operator pos:line="113" pos:column="29">)<pos:position pos:line="113" pos:column="30"/></operator> <operator pos:line="113" pos:column="31">&gt;<pos:position pos:line="113" pos:column="35"/></operator> <literal type="number" pos:line="113" pos:column="33">0<pos:position pos:line="113" pos:column="34"/></literal></expr>)<pos:position pos:line="113" pos:column="35"/></condition><then pos:line="113" pos:column="35">
	<block pos:line="114" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="115" pos:column="17">print_to_socket<pos:position pos:line="115" pos:column="32"/></name> <argument_list pos:line="115" pos:column="33">(<argument><expr><name pos:line="115" pos:column="34">fh<pos:position pos:line="115" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="115" pos:column="38">"0 Done: %i successful, %i errors\n"<pos:position pos:line="115" pos:column="74"/></literal></expr></argument>,
				<argument><expr><name pos:line="116" pos:column="33">success<pos:position pos:line="116" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="42">error<pos:position pos:line="116" pos:column="47"/></name></expr></argument>)<pos:position pos:line="116" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="117" pos:column="10"/></block></then>
	<else pos:line="118" pos:column="9">else
	<block pos:line="119" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="120" pos:column="17">plugin_flush<pos:position pos:line="120" pos:column="29"/></name> <argument_list pos:line="120" pos:column="30">(<argument><expr><name pos:line="120" pos:column="31">NULL<pos:position pos:line="120" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="120" pos:column="37">timeout<pos:position pos:line="120" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="120" pos:column="46">NULL<pos:position pos:line="120" pos:column="50"/></name></expr></argument>)<pos:position pos:line="120" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="121" pos:column="17">print_to_socket<pos:position pos:line="121" pos:column="32"/></name> <argument_list pos:line="121" pos:column="33">(<argument><expr><name pos:line="121" pos:column="34">fh<pos:position pos:line="121" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="121" pos:column="38">"0 Done\n"<pos:position pos:line="121" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="121" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="50"/></expr_stmt>
	}<pos:position pos:line="122" pos:column="10"/></block></else></if>

	<expr_stmt><expr><call><name pos:line="124" pos:column="9">sfree<pos:position pos:line="124" pos:column="14"/></name> <argument_list pos:line="124" pos:column="15">(<argument><expr><name pos:line="124" pos:column="16">plugins<pos:position pos:line="124" pos:column="23"/></name></expr></argument>)<pos:position pos:line="124" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="125" pos:column="9">sfree<pos:position pos:line="125" pos:column="14"/></name> <argument_list pos:line="125" pos:column="15">(<argument><expr><name pos:line="125" pos:column="16">identifiers<pos:position pos:line="125" pos:column="27"/></name></expr></argument>)<pos:position pos:line="125" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="29"/></expr_stmt>
	<return pos:line="126" pos:column="9">return <expr><operator pos:line="126" pos:column="16">(<pos:position pos:line="126" pos:column="17"/></operator><literal type="number" pos:line="126" pos:column="17">0<pos:position pos:line="126" pos:column="18"/></literal><operator pos:line="126" pos:column="18">)<pos:position pos:line="126" pos:column="19"/></operator></expr>;<pos:position pos:line="126" pos:column="20"/></return>
}<pos:position pos:line="127" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1643_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">srrd_update<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">char<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">filename<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier><specifier pos:line="1" pos:column="46">template<pos:position pos:line="1" pos:column="54"/></specifier></type></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">int<pos:position pos:line="1" pos:column="59"/></name></type> <name pos:line="1" pos:column="60">argc<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
                       <parameter><decl><type><specifier pos:line="2" pos:column="24">const<pos:position pos:line="2" pos:column="29"/></specifier> <name pos:line="2" pos:column="30">char<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier><modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">argv<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="42"/></parameter_list> <block pos:line="2" pos:column="43">{
  <expr_stmt><expr><name pos:line="3" pos:column="3">optind<pos:position pos:line="3" pos:column="9"/></name> <operator pos:line="3" pos:column="10">=<pos:position pos:line="3" pos:column="11"/></operator> <literal type="number" pos:line="3" pos:column="12">0<pos:position pos:line="3" pos:column="13"/></literal></expr>;<pos:position pos:line="3" pos:column="14"/></expr_stmt> <comment type="block" pos:line="3" pos:column="15">/* bug in librrd? */</comment>
  <expr_stmt><expr><call><name pos:line="4" pos:column="3">rrd_clear_error<pos:position pos:line="4" pos:column="18"/></name><argument_list pos:line="4" pos:column="18">()<pos:position pos:line="4" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="21"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">status<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <macro><name pos:line="6" pos:column="16">rrd_update_r<pos:position pos:line="6" pos:column="28"/></name><argument_list pos:line="6" pos:column="28">(<argument pos:line="6" pos:column="29">filename<pos:position pos:line="6" pos:column="37"/></argument>, <argument pos:line="6" pos:column="39">template<pos:position pos:line="6" pos:column="47"/></argument>, <argument pos:line="6" pos:column="49">argc<pos:position pos:line="6" pos:column="53"/></argument>, <argument pos:line="6" pos:column="55">(void *)argv<pos:position pos:line="6" pos:column="67"/></argument>)<pos:position pos:line="6" pos:column="68"/></argument_list></macro></init></decl>;<pos:position pos:line="6" pos:column="69"/></decl_stmt>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">status<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">!=<pos:position pos:line="7" pos:column="16"/></operator> <literal type="number" pos:line="7" pos:column="17">0<pos:position pos:line="7" pos:column="18"/></literal></expr>)<pos:position pos:line="7" pos:column="19"/></condition><then pos:line="7" pos:column="19"> <block pos:line="7" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">WARNING<pos:position pos:line="8" pos:column="12"/></name><argument_list pos:line="8" pos:column="12">(<argument><expr><literal type="string" pos:line="8" pos:column="13">"rrdtool plugin: rrd_update_r (%s) failed: %s"<pos:position pos:line="8" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="61">filename<pos:position pos:line="8" pos:column="69"/></name></expr></argument>,
            <argument><expr><call><name pos:line="9" pos:column="13">rrd_get_error<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">()<pos:position pos:line="9" pos:column="28"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="30"/></expr_stmt>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>

  <return pos:line="12" pos:column="3">return <expr><name pos:line="12" pos:column="10">status<pos:position pos:line="12" pos:column="16"/></name></expr>;<pos:position pos:line="12" pos:column="17"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

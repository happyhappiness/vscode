<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1315_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">tcsv_read<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">user_data_t<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">ud<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list> <block pos:line="1" pos:column="39">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">instance_definition_t<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type><name pos:line="2" pos:column="26">id<pos:position pos:line="2" pos:column="28"/></name></decl>;<pos:position pos:line="2" pos:column="29"/></decl_stmt>
  <expr_stmt><expr><name pos:line="3" pos:column="3">id<pos:position pos:line="3" pos:column="5"/></name> <operator pos:line="3" pos:column="6">=<pos:position pos:line="3" pos:column="7"/></operator> <name><name pos:line="3" pos:column="8">ud<pos:position pos:line="3" pos:column="10"/></name><operator pos:line="3" pos:column="10">-&gt;<pos:position pos:line="3" pos:column="15"/></operator><name pos:line="3" pos:column="12">data<pos:position pos:line="3" pos:column="16"/></name></name></expr>;<pos:position pos:line="3" pos:column="17"/></expr_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name><name pos:line="5" pos:column="7">id<pos:position pos:line="5" pos:column="9"/></name><operator pos:line="5" pos:column="9">-&gt;<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="11">tail<pos:position pos:line="5" pos:column="15"/></name></name> <operator pos:line="5" pos:column="16">==<pos:position pos:line="5" pos:column="18"/></operator> <name pos:line="5" pos:column="19">NULL<pos:position pos:line="5" pos:column="23"/></name></expr>)<pos:position pos:line="5" pos:column="24"/></condition><then pos:line="5" pos:column="24"> <block pos:line="5" pos:column="25">{
    <expr_stmt><expr><name><name pos:line="6" pos:column="5">id<pos:position pos:line="6" pos:column="7"/></name><operator pos:line="6" pos:column="7">-&gt;<pos:position pos:line="6" pos:column="12"/></operator><name pos:line="6" pos:column="9">tail<pos:position pos:line="6" pos:column="13"/></name></name> <operator pos:line="6" pos:column="14">=<pos:position pos:line="6" pos:column="15"/></operator> <call><name pos:line="6" pos:column="16">cu_tail_create<pos:position pos:line="6" pos:column="30"/></name><argument_list pos:line="6" pos:column="30">(<argument><expr><name><name pos:line="6" pos:column="31">id<pos:position pos:line="6" pos:column="33"/></name><operator pos:line="6" pos:column="33">-&gt;<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="35">path<pos:position pos:line="6" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="41"/></expr_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name><name pos:line="7" pos:column="9">id<pos:position pos:line="7" pos:column="11"/></name><operator pos:line="7" pos:column="11">-&gt;<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="13">tail<pos:position pos:line="7" pos:column="17"/></name></name> <operator pos:line="7" pos:column="18">==<pos:position pos:line="7" pos:column="20"/></operator> <name pos:line="7" pos:column="21">NULL<pos:position pos:line="7" pos:column="25"/></name></expr>)<pos:position pos:line="7" pos:column="26"/></condition><then pos:line="7" pos:column="26"> <block pos:line="7" pos:column="27">{
      <expr_stmt><expr><call><name pos:line="8" pos:column="7">ERROR<pos:position pos:line="8" pos:column="12"/></name><argument_list pos:line="8" pos:column="12">(<argument><expr><literal type="string" pos:line="8" pos:column="13">"tail_csv plugin: cu_tail_create (\"%s\") failed."<pos:position pos:line="8" pos:column="63"/></literal></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="65">id<pos:position pos:line="8" pos:column="67"/></name><operator pos:line="8" pos:column="67">-&gt;<pos:position pos:line="8" pos:column="72"/></operator><name pos:line="8" pos:column="69">path<pos:position pos:line="8" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="75"/></expr_stmt>
      <return pos:line="9" pos:column="7">return <expr><operator pos:line="9" pos:column="14">(<pos:position pos:line="9" pos:column="15"/></operator><operator pos:line="9" pos:column="15">-<pos:position pos:line="9" pos:column="16"/></operator><literal type="number" pos:line="9" pos:column="16">1<pos:position pos:line="9" pos:column="17"/></literal><operator pos:line="9" pos:column="17">)<pos:position pos:line="9" pos:column="18"/></operator></expr>;<pos:position pos:line="9" pos:column="19"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>

  <while pos:line="13" pos:column="3">while <condition pos:line="13" pos:column="9">(<expr><literal type="number" pos:line="13" pos:column="10">42<pos:position pos:line="13" pos:column="12"/></literal></expr>)<pos:position pos:line="13" pos:column="13"/></condition> <block pos:line="13" pos:column="14">{
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">char<pos:position pos:line="14" pos:column="9"/></name></type> <name><name pos:line="14" pos:column="10">buffer<pos:position pos:line="14" pos:column="16"/></name><index pos:line="14" pos:column="16">[<expr><literal type="number" pos:line="14" pos:column="17">1024<pos:position pos:line="14" pos:column="21"/></literal></expr>]<pos:position pos:line="14" pos:column="22"/></index></name></decl>;<pos:position pos:line="14" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">size_t<pos:position pos:line="15" pos:column="11"/></name></type> <name pos:line="15" pos:column="12">buffer_len<pos:position pos:line="15" pos:column="22"/></name></decl>;<pos:position pos:line="15" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">int<pos:position pos:line="16" pos:column="8"/></name></type> <name pos:line="16" pos:column="9">status<pos:position pos:line="16" pos:column="15"/></name></decl>;<pos:position pos:line="16" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><name pos:line="18" pos:column="5">status<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <call><name pos:line="18" pos:column="14">cu_tail_readline<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">(<argument><expr><name><name pos:line="18" pos:column="31">id<pos:position pos:line="18" pos:column="33"/></name><operator pos:line="18" pos:column="33">-&gt;<pos:position pos:line="18" pos:column="38"/></operator><name pos:line="18" pos:column="35">tail<pos:position pos:line="18" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="41">buffer<pos:position pos:line="18" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="49">(<pos:position pos:line="18" pos:column="50"/></operator><name pos:line="18" pos:column="50">int<pos:position pos:line="18" pos:column="53"/></name><operator pos:line="18" pos:column="53">)<pos:position pos:line="18" pos:column="54"/></operator><sizeof pos:line="18" pos:column="54">sizeof<argument_list pos:line="18" pos:column="60">(<argument><expr><name pos:line="18" pos:column="61">buffer<pos:position pos:line="18" pos:column="67"/></name></expr></argument>)<pos:position pos:line="18" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="70"/></expr_stmt>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">status<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">!=<pos:position pos:line="19" pos:column="18"/></operator> <literal type="number" pos:line="19" pos:column="19">0<pos:position pos:line="19" pos:column="20"/></literal></expr>)<pos:position pos:line="19" pos:column="21"/></condition><then pos:line="19" pos:column="21"> <block pos:line="19" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="20" pos:column="7">ERROR<pos:position pos:line="20" pos:column="12"/></name><argument_list pos:line="20" pos:column="12">(<argument><expr><literal type="string" pos:line="20" pos:column="13">"tail_csv plugin: File \"%s\": cu_tail_readline failed "<pos:position pos:line="20" pos:column="69"/></literal>
            <literal type="string" pos:line="21" pos:column="13">"with status %i."<pos:position pos:line="21" pos:column="30"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="22" pos:column="13">id<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">-&gt;<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="17">path<pos:position pos:line="22" pos:column="21"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="23">status<pos:position pos:line="22" pos:column="29"/></name></expr></argument>)<pos:position pos:line="22" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="31"/></expr_stmt>
      <return pos:line="23" pos:column="7">return <expr><operator pos:line="23" pos:column="14">(<pos:position pos:line="23" pos:column="15"/></operator><operator pos:line="23" pos:column="15">-<pos:position pos:line="23" pos:column="16"/></operator><literal type="number" pos:line="23" pos:column="16">1<pos:position pos:line="23" pos:column="17"/></literal><operator pos:line="23" pos:column="17">)<pos:position pos:line="23" pos:column="18"/></operator></expr>;<pos:position pos:line="23" pos:column="19"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="26" pos:column="5">buffer_len<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">=<pos:position pos:line="26" pos:column="17"/></operator> <call><name pos:line="26" pos:column="18">strlen<pos:position pos:line="26" pos:column="24"/></name><argument_list pos:line="26" pos:column="24">(<argument><expr><name pos:line="26" pos:column="25">buffer<pos:position pos:line="26" pos:column="31"/></name></expr></argument>)<pos:position pos:line="26" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="33"/></expr_stmt>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">buffer_len<pos:position pos:line="27" pos:column="19"/></name> <operator pos:line="27" pos:column="20">==<pos:position pos:line="27" pos:column="22"/></operator> <literal type="number" pos:line="27" pos:column="23">0<pos:position pos:line="27" pos:column="24"/></literal></expr>)<pos:position pos:line="27" pos:column="25"/></condition><then pos:line="27" pos:column="25">
      <block type="pseudo"><break pos:line="28" pos:column="7">break;<pos:position pos:line="28" pos:column="13"/></break></block></then></if>

    <expr_stmt><expr><call><name pos:line="30" pos:column="5">tcsv_read_buffer<pos:position pos:line="30" pos:column="21"/></name><argument_list pos:line="30" pos:column="21">(<argument><expr><name pos:line="30" pos:column="22">id<pos:position pos:line="30" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="26">buffer<pos:position pos:line="30" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="34">buffer_len<pos:position pos:line="30" pos:column="44"/></name></expr></argument>)<pos:position pos:line="30" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="46"/></expr_stmt>
  }<pos:position pos:line="31" pos:column="4"/></block></while>

  <return pos:line="33" pos:column="3">return <expr><operator pos:line="33" pos:column="10">(<pos:position pos:line="33" pos:column="11"/></operator><literal type="number" pos:line="33" pos:column="11">0<pos:position pos:line="33" pos:column="12"/></literal><operator pos:line="33" pos:column="12">)<pos:position pos:line="33" pos:column="13"/></operator></expr>;<pos:position pos:line="33" pos:column="14"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

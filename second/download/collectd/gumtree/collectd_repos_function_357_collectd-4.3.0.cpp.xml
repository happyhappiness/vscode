<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_357_collectd-4.3.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">memcached_read<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">void<pos:position pos:line="1" pos:column="32"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list> <comment type="block" pos:line="1" pos:column="34">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name></type> <name><name pos:line="3" pos:column="14">buf<pos:position pos:line="3" pos:column="17"/></name><index pos:line="3" pos:column="17">[<expr><literal type="number" pos:line="3" pos:column="18">1024<pos:position pos:line="3" pos:column="22"/></literal></expr>]<pos:position pos:line="3" pos:column="23"/></index></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name><name pos:line="4" pos:column="15">fields<pos:position pos:line="4" pos:column="21"/></name><index pos:line="4" pos:column="21">[<expr><literal type="number" pos:line="4" pos:column="22">3<pos:position pos:line="4" pos:column="23"/></literal></expr>]<pos:position pos:line="4" pos:column="24"/></index></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">ptr<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">line<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">saveptr<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">fields_num<pos:position pos:line="8" pos:column="23"/></name></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="10" pos:column="9">gauge_t<pos:position pos:line="10" pos:column="16"/></name></type> <name pos:line="10" pos:column="17">bytes_used<pos:position pos:line="10" pos:column="27"/></name> <init pos:line="10" pos:column="28">= <expr><name pos:line="10" pos:column="30">NAN<pos:position pos:line="10" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">gauge_t<pos:position pos:line="11" pos:column="16"/></name></type> <name pos:line="11" pos:column="17">bytes_total<pos:position pos:line="11" pos:column="28"/></name> <init pos:line="11" pos:column="29">= <expr><name pos:line="11" pos:column="31">NAN<pos:position pos:line="11" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">counter_t<pos:position pos:line="12" pos:column="18"/></name></type> <name pos:line="12" pos:column="19">rusage_user<pos:position pos:line="12" pos:column="30"/></name> <init pos:line="12" pos:column="31">= <expr><literal type="number" pos:line="12" pos:column="33">0<pos:position pos:line="12" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">counter_t<pos:position pos:line="13" pos:column="18"/></name></type> <name pos:line="13" pos:column="19">rusage_syst<pos:position pos:line="13" pos:column="30"/></name> <init pos:line="13" pos:column="31">= <expr><literal type="number" pos:line="13" pos:column="33">0<pos:position pos:line="13" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">counter_t<pos:position pos:line="14" pos:column="18"/></name></type> <name pos:line="14" pos:column="19">octets_rx<pos:position pos:line="14" pos:column="28"/></name> <init pos:line="14" pos:column="29">= <expr><literal type="number" pos:line="14" pos:column="31">0<pos:position pos:line="14" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">counter_t<pos:position pos:line="15" pos:column="18"/></name></type> <name pos:line="15" pos:column="19">octets_tx<pos:position pos:line="15" pos:column="28"/></name> <init pos:line="15" pos:column="29">= <expr><literal type="number" pos:line="15" pos:column="31">0<pos:position pos:line="15" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="33"/></decl_stmt>

	<comment type="block" pos:line="17" pos:column="9">/* get data from daemon */</comment>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><call><name pos:line="18" pos:column="13">memcached_query_daemon<pos:position pos:line="18" pos:column="35"/></name> <argument_list pos:line="18" pos:column="36">(<argument><expr><name pos:line="18" pos:column="37">buf<pos:position pos:line="18" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="42">sizeof <argument_list pos:line="18" pos:column="49">(<argument><expr><name pos:line="18" pos:column="50">buf<pos:position pos:line="18" pos:column="53"/></name></expr></argument>)<pos:position pos:line="18" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="55"/></argument_list></call> <operator pos:line="18" pos:column="56">&lt;<pos:position pos:line="18" pos:column="60"/></operator> <literal type="number" pos:line="18" pos:column="58">0<pos:position pos:line="18" pos:column="59"/></literal></expr>)<pos:position pos:line="18" pos:column="60"/></condition><then pos:line="18" pos:column="60"> <block pos:line="18" pos:column="61">{
		<return pos:line="19" pos:column="17">return <expr><operator pos:line="19" pos:column="24">-<pos:position pos:line="19" pos:column="25"/></operator><literal type="number" pos:line="19" pos:column="25">1<pos:position pos:line="19" pos:column="26"/></literal></expr>;<pos:position pos:line="19" pos:column="27"/></return>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if>

<cpp:define pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">define<pos:position pos:line="22" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="22" pos:column="9">FIELD_IS<pos:position pos:line="22" pos:column="17"/></name><parameter_list pos:line="22" pos:column="17">(<parameter><type><name pos:line="22" pos:column="18">cnst<pos:position pos:line="22" pos:column="22"/></name></type></parameter>)<pos:position pos:line="22" pos:column="23"/></parameter_list></cpp:macro> \
	<cpp:value pos:line="23" pos:column="9">(((sizeof(cnst) - 1) == name_len) &amp;&amp; (strcmp (cnst, fields[1]) == 0))<pos:position pos:line="23" pos:column="78"/></cpp:value></cpp:define>

    <expr_stmt><expr><name pos:line="25" pos:column="5">ptr<pos:position pos:line="25" pos:column="8"/></name> <operator pos:line="25" pos:column="9">=<pos:position pos:line="25" pos:column="10"/></operator> <name pos:line="25" pos:column="11">buf<pos:position pos:line="25" pos:column="14"/></name></expr>;<pos:position pos:line="25" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name pos:line="26" pos:column="5">saveptr<pos:position pos:line="26" pos:column="12"/></name> <operator pos:line="26" pos:column="13">=<pos:position pos:line="26" pos:column="14"/></operator> <name pos:line="26" pos:column="15">NULL<pos:position pos:line="26" pos:column="19"/></name></expr>;<pos:position pos:line="26" pos:column="20"/></expr_stmt>
    <while pos:line="27" pos:column="5">while <condition pos:line="27" pos:column="11">(<expr><operator pos:line="27" pos:column="12">(<pos:position pos:line="27" pos:column="13"/></operator><name pos:line="27" pos:column="13">line<pos:position pos:line="27" pos:column="17"/></name> <operator pos:line="27" pos:column="18">=<pos:position pos:line="27" pos:column="19"/></operator> <call><name pos:line="27" pos:column="20">strtok_r<pos:position pos:line="27" pos:column="28"/></name> <argument_list pos:line="27" pos:column="29">(<argument><expr><name pos:line="27" pos:column="30">ptr<pos:position pos:line="27" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="35">"\n\r"<pos:position pos:line="27" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="27" pos:column="43">&amp;<pos:position pos:line="27" pos:column="48"/></operator><name pos:line="27" pos:column="44">saveptr<pos:position pos:line="27" pos:column="51"/></name></expr></argument>)<pos:position pos:line="27" pos:column="52"/></argument_list></call><operator pos:line="27" pos:column="52">)<pos:position pos:line="27" pos:column="53"/></operator> <operator pos:line="27" pos:column="54">!=<pos:position pos:line="27" pos:column="56"/></operator> <name pos:line="27" pos:column="57">NULL<pos:position pos:line="27" pos:column="61"/></name></expr>)<pos:position pos:line="27" pos:column="62"/></condition>
	<block pos:line="28" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="29" pos:column="17">int<pos:position pos:line="29" pos:column="20"/></name></type> <name pos:line="29" pos:column="21">name_len<pos:position pos:line="29" pos:column="29"/></name></decl>;<pos:position pos:line="29" pos:column="30"/></decl_stmt>

        <expr_stmt><expr><name pos:line="31" pos:column="9">ptr<pos:position pos:line="31" pos:column="12"/></name> <operator pos:line="31" pos:column="13">=<pos:position pos:line="31" pos:column="14"/></operator> <name pos:line="31" pos:column="15">NULL<pos:position pos:line="31" pos:column="19"/></name></expr>;<pos:position pos:line="31" pos:column="20"/></expr_stmt>

		<expr_stmt><expr><name pos:line="33" pos:column="17">fields_num<pos:position pos:line="33" pos:column="27"/></name> <operator pos:line="33" pos:column="28">=<pos:position pos:line="33" pos:column="29"/></operator> <call><name pos:line="33" pos:column="30">strsplit<pos:position pos:line="33" pos:column="38"/></name><argument_list pos:line="33" pos:column="38">(<argument><expr><name pos:line="33" pos:column="39">line<pos:position pos:line="33" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="45">fields<pos:position pos:line="33" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="53">3<pos:position pos:line="33" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="56"/></expr_stmt>
		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><name pos:line="34" pos:column="21">fields_num<pos:position pos:line="34" pos:column="31"/></name> <operator pos:line="34" pos:column="32">!=<pos:position pos:line="34" pos:column="34"/></operator> <literal type="number" pos:line="34" pos:column="35">3<pos:position pos:line="34" pos:column="36"/></literal></expr>)<pos:position pos:line="34" pos:column="37"/></condition><then pos:line="34" pos:column="37">
			<block type="pseudo"><continue pos:line="35" pos:column="25">continue;<pos:position pos:line="35" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="37" pos:column="17">name_len<pos:position pos:line="37" pos:column="25"/></name> <operator pos:line="37" pos:column="26">=<pos:position pos:line="37" pos:column="27"/></operator> <call><name pos:line="37" pos:column="28">strlen<pos:position pos:line="37" pos:column="34"/></name><argument_list pos:line="37" pos:column="34">(<argument><expr><name><name pos:line="37" pos:column="35">fields<pos:position pos:line="37" pos:column="41"/></name><index pos:line="37" pos:column="41">[<expr><literal type="number" pos:line="37" pos:column="42">1<pos:position pos:line="37" pos:column="43"/></literal></expr>]<pos:position pos:line="37" pos:column="44"/></index></name></expr></argument>)<pos:position pos:line="37" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="46"/></expr_stmt>
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><name pos:line="38" pos:column="21">name_len<pos:position pos:line="38" pos:column="29"/></name> <operator pos:line="38" pos:column="30">==<pos:position pos:line="38" pos:column="32"/></operator> <literal type="number" pos:line="38" pos:column="33">0<pos:position pos:line="38" pos:column="34"/></literal></expr>)<pos:position pos:line="38" pos:column="35"/></condition><then pos:line="38" pos:column="35">
			<block type="pseudo"><continue pos:line="39" pos:column="25">continue;<pos:position pos:line="39" pos:column="34"/></continue></block></then></if>

		<comment type="block" pos:line="41" pos:column="17">/*
		 * For an explanation on these fields please refer to
		 * &lt;http://code.sixapart.com/svn/memcached/trunk/server/doc/protocol.txt&gt;
		 */</comment>

		<comment type="block" pos:line="46" pos:column="17">/*
		 * CPU time consumed by the memcached process
		 */</comment>
		<if pos:line="49" pos:column="17">if <condition pos:line="49" pos:column="20">(<expr><call><name pos:line="49" pos:column="21">FIELD_IS<pos:position pos:line="49" pos:column="29"/></name> <argument_list pos:line="49" pos:column="30">(<argument><expr><literal type="string" pos:line="49" pos:column="31">"rusage_user"<pos:position pos:line="49" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="46"/></condition><then pos:line="49" pos:column="46">
		<block pos:line="50" pos:column="17">{
			<expr_stmt><expr><name pos:line="51" pos:column="25">rusage_user<pos:position pos:line="51" pos:column="36"/></name> <operator pos:line="51" pos:column="37">=<pos:position pos:line="51" pos:column="38"/></operator> <call><name pos:line="51" pos:column="39">atoll<pos:position pos:line="51" pos:column="44"/></name> <argument_list pos:line="51" pos:column="45">(<argument><expr><name><name pos:line="51" pos:column="46">fields<pos:position pos:line="51" pos:column="52"/></name><index pos:line="51" pos:column="52">[<expr><literal type="number" pos:line="51" pos:column="53">2<pos:position pos:line="51" pos:column="54"/></literal></expr>]<pos:position pos:line="51" pos:column="55"/></index></name></expr></argument>)<pos:position pos:line="51" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="57"/></expr_stmt>
		}<pos:position pos:line="52" pos:column="18"/></block></then>
		<elseif pos:line="53" pos:column="17">else <if pos:line="53" pos:column="22">if <condition pos:line="53" pos:column="25">(<expr><call><name pos:line="53" pos:column="26">FIELD_IS<pos:position pos:line="53" pos:column="34"/></name> <argument_list pos:line="53" pos:column="35">(<argument><expr><literal type="string" pos:line="53" pos:column="36">"rusage_system"<pos:position pos:line="53" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="53"/></condition><then pos:line="53" pos:column="53">
		<block pos:line="54" pos:column="17">{
			<expr_stmt><expr><name pos:line="55" pos:column="25">rusage_syst<pos:position pos:line="55" pos:column="36"/></name> <operator pos:line="55" pos:column="37">=<pos:position pos:line="55" pos:column="38"/></operator> <call><name pos:line="55" pos:column="39">atoll<pos:position pos:line="55" pos:column="44"/></name><argument_list pos:line="55" pos:column="44">(<argument><expr><name><name pos:line="55" pos:column="45">fields<pos:position pos:line="55" pos:column="51"/></name><index pos:line="55" pos:column="51">[<expr><literal type="number" pos:line="55" pos:column="52">2<pos:position pos:line="55" pos:column="53"/></literal></expr>]<pos:position pos:line="55" pos:column="54"/></index></name></expr></argument>)<pos:position pos:line="55" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="56"/></expr_stmt>
		}<pos:position pos:line="56" pos:column="18"/></block></then></if></elseif>
	
		<comment type="block" pos:line="58" pos:column="17">/*
		 * Number of threads of this instance
		 */</comment>
		<elseif pos:line="61" pos:column="17">else <if pos:line="61" pos:column="22">if <condition pos:line="61" pos:column="25">(<expr><call><name pos:line="61" pos:column="26">FIELD_IS<pos:position pos:line="61" pos:column="34"/></name> <argument_list pos:line="61" pos:column="35">(<argument><expr><literal type="string" pos:line="61" pos:column="36">"threads"<pos:position pos:line="61" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="47"/></condition><then pos:line="61" pos:column="47">
		<block pos:line="62" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="63" pos:column="25">submit_gauge2<pos:position pos:line="63" pos:column="38"/></name> <argument_list pos:line="63" pos:column="39">(<argument><expr><literal type="string" pos:line="63" pos:column="40">"ps_count"<pos:position pos:line="63" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="52">NULL<pos:position pos:line="63" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="58">NAN<pos:position pos:line="63" pos:column="61"/></name></expr></argument>, <argument><expr><call><name pos:line="63" pos:column="63">atof<pos:position pos:line="63" pos:column="67"/></name> <argument_list pos:line="63" pos:column="68">(<argument><expr><name><name pos:line="63" pos:column="69">fields<pos:position pos:line="63" pos:column="75"/></name><index pos:line="63" pos:column="75">[<expr><literal type="number" pos:line="63" pos:column="76">2<pos:position pos:line="63" pos:column="77"/></literal></expr>]<pos:position pos:line="63" pos:column="78"/></index></name></expr></argument>)<pos:position pos:line="63" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="63" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="81"/></expr_stmt>
		}<pos:position pos:line="64" pos:column="18"/></block></then></if></elseif>

		<comment type="block" pos:line="66" pos:column="17">/*
		 * Number of items stored
		 */</comment>
		<elseif pos:line="69" pos:column="17">else <if pos:line="69" pos:column="22">if <condition pos:line="69" pos:column="25">(<expr><call><name pos:line="69" pos:column="26">FIELD_IS<pos:position pos:line="69" pos:column="34"/></name> <argument_list pos:line="69" pos:column="35">(<argument><expr><literal type="string" pos:line="69" pos:column="36">"curr_items"<pos:position pos:line="69" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="69" pos:column="50"/></condition><then pos:line="69" pos:column="50">
		<block pos:line="70" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="71" pos:column="25">submit_gauge<pos:position pos:line="71" pos:column="37"/></name> <argument_list pos:line="71" pos:column="38">(<argument><expr><literal type="string" pos:line="71" pos:column="39">"memcached_items"<pos:position pos:line="71" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="58">"current"<pos:position pos:line="71" pos:column="67"/></literal></expr></argument>, <argument><expr><call><name pos:line="71" pos:column="69">atof<pos:position pos:line="71" pos:column="73"/></name> <argument_list pos:line="71" pos:column="74">(<argument><expr><name><name pos:line="71" pos:column="75">fields<pos:position pos:line="71" pos:column="81"/></name><index pos:line="71" pos:column="81">[<expr><literal type="number" pos:line="71" pos:column="82">2<pos:position pos:line="71" pos:column="83"/></literal></expr>]<pos:position pos:line="71" pos:column="84"/></index></name></expr></argument>)<pos:position pos:line="71" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="71" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="87"/></expr_stmt>
		}<pos:position pos:line="72" pos:column="18"/></block></then></if></elseif>
<comment type="block" pos:line="73" pos:column="1">/*		
		else if (FIELD_IS ("total_items"))
		{
			total_items = atoll(fields[2]);
		}
 */</comment>

		<comment type="block" pos:line="80" pos:column="17">/*
		 * Number of bytes used and available (total - used)
		 */</comment>
		<elseif pos:line="83" pos:column="17">else <if pos:line="83" pos:column="22">if <condition pos:line="83" pos:column="25">(<expr><call><name pos:line="83" pos:column="26">FIELD_IS<pos:position pos:line="83" pos:column="34"/></name> <argument_list pos:line="83" pos:column="35">(<argument><expr><literal type="string" pos:line="83" pos:column="36">"bytes"<pos:position pos:line="83" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="83" pos:column="45"/></condition><then pos:line="83" pos:column="45">
		<block pos:line="84" pos:column="17">{
			<expr_stmt><expr><name pos:line="85" pos:column="25">bytes_used<pos:position pos:line="85" pos:column="35"/></name> <operator pos:line="85" pos:column="36">=<pos:position pos:line="85" pos:column="37"/></operator> <call><name pos:line="85" pos:column="38">atof<pos:position pos:line="85" pos:column="42"/></name> <argument_list pos:line="85" pos:column="43">(<argument><expr><name><name pos:line="85" pos:column="44">fields<pos:position pos:line="85" pos:column="50"/></name><index pos:line="85" pos:column="50">[<expr><literal type="number" pos:line="85" pos:column="51">2<pos:position pos:line="85" pos:column="52"/></literal></expr>]<pos:position pos:line="85" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="85" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="55"/></expr_stmt>
		}<pos:position pos:line="86" pos:column="18"/></block></then></if></elseif>
		<elseif pos:line="87" pos:column="17">else <if pos:line="87" pos:column="22">if <condition pos:line="87" pos:column="25">(<expr><call><name pos:line="87" pos:column="26">FIELD_IS<pos:position pos:line="87" pos:column="34"/></name> <argument_list pos:line="87" pos:column="35">(<argument><expr><literal type="string" pos:line="87" pos:column="36">"limit_maxbytes"<pos:position pos:line="87" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="87" pos:column="54"/></condition><then pos:line="87" pos:column="54">
		<block pos:line="88" pos:column="17">{
			<expr_stmt><expr><name pos:line="89" pos:column="25">bytes_total<pos:position pos:line="89" pos:column="36"/></name> <operator pos:line="89" pos:column="37">=<pos:position pos:line="89" pos:column="38"/></operator> <call><name pos:line="89" pos:column="39">atof<pos:position pos:line="89" pos:column="43"/></name><argument_list pos:line="89" pos:column="43">(<argument><expr><name><name pos:line="89" pos:column="44">fields<pos:position pos:line="89" pos:column="50"/></name><index pos:line="89" pos:column="50">[<expr><literal type="number" pos:line="89" pos:column="51">2<pos:position pos:line="89" pos:column="52"/></literal></expr>]<pos:position pos:line="89" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="89" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="55"/></expr_stmt>
		}<pos:position pos:line="90" pos:column="18"/></block></then></if></elseif>

		<comment type="block" pos:line="92" pos:column="17">/*
		 * Connections
		 */</comment>
		<elseif pos:line="95" pos:column="17">else <if pos:line="95" pos:column="22">if <condition pos:line="95" pos:column="25">(<expr><call><name pos:line="95" pos:column="26">FIELD_IS<pos:position pos:line="95" pos:column="34"/></name> <argument_list pos:line="95" pos:column="35">(<argument><expr><literal type="string" pos:line="95" pos:column="36">"curr_connections"<pos:position pos:line="95" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="95" pos:column="56"/></condition><then pos:line="95" pos:column="56">
		<block pos:line="96" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="97" pos:column="25">submit_gauge<pos:position pos:line="97" pos:column="37"/></name> <argument_list pos:line="97" pos:column="38">(<argument><expr><literal type="string" pos:line="97" pos:column="39">"memcached_connections"<pos:position pos:line="97" pos:column="62"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="64">"current"<pos:position pos:line="97" pos:column="73"/></literal></expr></argument>, <argument><expr><call><name pos:line="97" pos:column="75">atof<pos:position pos:line="97" pos:column="79"/></name> <argument_list pos:line="97" pos:column="80">(<argument><expr><name><name pos:line="97" pos:column="81">fields<pos:position pos:line="97" pos:column="87"/></name><index pos:line="97" pos:column="87">[<expr><literal type="number" pos:line="97" pos:column="88">2<pos:position pos:line="97" pos:column="89"/></literal></expr>]<pos:position pos:line="97" pos:column="90"/></index></name></expr></argument>)<pos:position pos:line="97" pos:column="91"/></argument_list></call></expr></argument>)<pos:position pos:line="97" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="93"/></expr_stmt>
		}<pos:position pos:line="98" pos:column="18"/></block></then></if></elseif>
<comment type="block" pos:line="99" pos:column="1">/*
		else if (FIELD_IS("total_connections"))
		{
			total_connections = atoll(fields[2]);
		}
*/</comment>

<comment type="block" pos:line="106" pos:column="1">/*
 * ``Number of connection structures allocated by the server''
		else if (FIELD_IS ("connection_structures"))
		{
			connection_structures = atof(fields[2]);
		}
 */</comment>

		<comment type="block" pos:line="114" pos:column="17">/*
		 * Commands
		 */</comment>
		<elseif pos:line="117" pos:column="17">else <if pos:line="117" pos:column="22">if <condition pos:line="117" pos:column="25">(<expr><operator pos:line="117" pos:column="26">(<pos:position pos:line="117" pos:column="27"/></operator><name pos:line="117" pos:column="27">name_len<pos:position pos:line="117" pos:column="35"/></name> <operator pos:line="117" pos:column="36">&gt;<pos:position pos:line="117" pos:column="40"/></operator> <literal type="number" pos:line="117" pos:column="38">4<pos:position pos:line="117" pos:column="39"/></literal><operator pos:line="117" pos:column="39">)<pos:position pos:line="117" pos:column="40"/></operator> <operator pos:line="117" pos:column="41">&amp;&amp;<pos:position pos:line="117" pos:column="51"/></operator> <operator pos:line="117" pos:column="44">(<pos:position pos:line="117" pos:column="45"/></operator><call><name pos:line="117" pos:column="45">strncmp<pos:position pos:line="117" pos:column="52"/></name> <argument_list pos:line="117" pos:column="53">(<argument><expr><name><name pos:line="117" pos:column="54">fields<pos:position pos:line="117" pos:column="60"/></name><index pos:line="117" pos:column="60">[<expr><literal type="number" pos:line="117" pos:column="61">1<pos:position pos:line="117" pos:column="62"/></literal></expr>]<pos:position pos:line="117" pos:column="63"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="117" pos:column="65">"cmd_"<pos:position pos:line="117" pos:column="71"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="117" pos:column="73">4<pos:position pos:line="117" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="117" pos:column="75"/></argument_list></call> <operator pos:line="117" pos:column="76">==<pos:position pos:line="117" pos:column="78"/></operator> <literal type="number" pos:line="117" pos:column="79">0<pos:position pos:line="117" pos:column="80"/></literal><operator pos:line="117" pos:column="80">)<pos:position pos:line="117" pos:column="81"/></operator></expr>)<pos:position pos:line="117" pos:column="82"/></condition><then pos:line="117" pos:column="82">
		<block pos:line="118" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="119" pos:column="25">const<pos:position pos:line="119" pos:column="30"/></specifier> <name pos:line="119" pos:column="31">char<pos:position pos:line="119" pos:column="35"/></name> <modifier pos:line="119" pos:column="36">*<pos:position pos:line="119" pos:column="37"/></modifier></type><name pos:line="119" pos:column="37">name<pos:position pos:line="119" pos:column="41"/></name> <init pos:line="119" pos:column="42">= <expr><name><name pos:line="119" pos:column="44">fields<pos:position pos:line="119" pos:column="50"/></name><index pos:line="119" pos:column="50">[<expr><literal type="number" pos:line="119" pos:column="51">1<pos:position pos:line="119" pos:column="52"/></literal></expr>]<pos:position pos:line="119" pos:column="53"/></index></name> <operator pos:line="119" pos:column="54">+<pos:position pos:line="119" pos:column="55"/></operator> <literal type="number" pos:line="119" pos:column="56">4<pos:position pos:line="119" pos:column="57"/></literal></expr></init></decl>;<pos:position pos:line="119" pos:column="58"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="120" pos:column="25">submit_counter<pos:position pos:line="120" pos:column="39"/></name> <argument_list pos:line="120" pos:column="40">(<argument><expr><literal type="string" pos:line="120" pos:column="41">"memcached_command"<pos:position pos:line="120" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="120" pos:column="62">name<pos:position pos:line="120" pos:column="66"/></name></expr></argument>, <argument><expr><call><name pos:line="120" pos:column="68">atoll<pos:position pos:line="120" pos:column="73"/></name> <argument_list pos:line="120" pos:column="74">(<argument><expr><name><name pos:line="120" pos:column="75">fields<pos:position pos:line="120" pos:column="81"/></name><index pos:line="120" pos:column="81">[<expr><literal type="number" pos:line="120" pos:column="82">2<pos:position pos:line="120" pos:column="83"/></literal></expr>]<pos:position pos:line="120" pos:column="84"/></index></name></expr></argument>)<pos:position pos:line="120" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="120" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="87"/></expr_stmt>
		}<pos:position pos:line="121" pos:column="18"/></block></then></if></elseif>

		<comment type="block" pos:line="123" pos:column="17">/*
		 * Operations on the cache, i. e. cache hits, cache misses and evictions of items
		 */</comment>
		<elseif pos:line="126" pos:column="17">else <if pos:line="126" pos:column="22">if <condition pos:line="126" pos:column="25">(<expr><call><name pos:line="126" pos:column="26">FIELD_IS<pos:position pos:line="126" pos:column="34"/></name> <argument_list pos:line="126" pos:column="35">(<argument><expr><literal type="string" pos:line="126" pos:column="36">"get_hits"<pos:position pos:line="126" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="126" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="126" pos:column="48"/></condition><then pos:line="126" pos:column="48">
		<block pos:line="127" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="128" pos:column="25">submit_counter<pos:position pos:line="128" pos:column="39"/></name> <argument_list pos:line="128" pos:column="40">(<argument><expr><literal type="string" pos:line="128" pos:column="41">"memcached_ops"<pos:position pos:line="128" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="128" pos:column="58">"hits"<pos:position pos:line="128" pos:column="64"/></literal></expr></argument>, <argument><expr><call><name pos:line="128" pos:column="66">atoll<pos:position pos:line="128" pos:column="71"/></name> <argument_list pos:line="128" pos:column="72">(<argument><expr><name><name pos:line="128" pos:column="73">fields<pos:position pos:line="128" pos:column="79"/></name><index pos:line="128" pos:column="79">[<expr><literal type="number" pos:line="128" pos:column="80">2<pos:position pos:line="128" pos:column="81"/></literal></expr>]<pos:position pos:line="128" pos:column="82"/></index></name></expr></argument>)<pos:position pos:line="128" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="128" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="85"/></expr_stmt>
		}<pos:position pos:line="129" pos:column="18"/></block></then></if></elseif>
		<elseif pos:line="130" pos:column="17">else <if pos:line="130" pos:column="22">if <condition pos:line="130" pos:column="25">(<expr><call><name pos:line="130" pos:column="26">FIELD_IS<pos:position pos:line="130" pos:column="34"/></name> <argument_list pos:line="130" pos:column="35">(<argument><expr><literal type="string" pos:line="130" pos:column="36">"get_misses"<pos:position pos:line="130" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="130" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="130" pos:column="50"/></condition><then pos:line="130" pos:column="50">
		<block pos:line="131" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="132" pos:column="25">submit_counter<pos:position pos:line="132" pos:column="39"/></name> <argument_list pos:line="132" pos:column="40">(<argument><expr><literal type="string" pos:line="132" pos:column="41">"memcached_ops"<pos:position pos:line="132" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="132" pos:column="58">"misses"<pos:position pos:line="132" pos:column="66"/></literal></expr></argument>, <argument><expr><call><name pos:line="132" pos:column="68">atoll<pos:position pos:line="132" pos:column="73"/></name> <argument_list pos:line="132" pos:column="74">(<argument><expr><name><name pos:line="132" pos:column="75">fields<pos:position pos:line="132" pos:column="81"/></name><index pos:line="132" pos:column="81">[<expr><literal type="number" pos:line="132" pos:column="82">2<pos:position pos:line="132" pos:column="83"/></literal></expr>]<pos:position pos:line="132" pos:column="84"/></index></name></expr></argument>)<pos:position pos:line="132" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="132" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="87"/></expr_stmt>
		}<pos:position pos:line="133" pos:column="18"/></block></then></if></elseif>
		<elseif pos:line="134" pos:column="17">else <if pos:line="134" pos:column="22">if <condition pos:line="134" pos:column="25">(<expr><call><name pos:line="134" pos:column="26">FIELD_IS<pos:position pos:line="134" pos:column="34"/></name> <argument_list pos:line="134" pos:column="35">(<argument><expr><literal type="string" pos:line="134" pos:column="36">"evictions"<pos:position pos:line="134" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="134" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="134" pos:column="49"/></condition><then pos:line="134" pos:column="49">
		<block pos:line="135" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="136" pos:column="25">submit_counter<pos:position pos:line="136" pos:column="39"/></name> <argument_list pos:line="136" pos:column="40">(<argument><expr><literal type="string" pos:line="136" pos:column="41">"memcached_ops"<pos:position pos:line="136" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="136" pos:column="58">"evictions"<pos:position pos:line="136" pos:column="69"/></literal></expr></argument>, <argument><expr><call><name pos:line="136" pos:column="71">atoll<pos:position pos:line="136" pos:column="76"/></name> <argument_list pos:line="136" pos:column="77">(<argument><expr><name><name pos:line="136" pos:column="78">fields<pos:position pos:line="136" pos:column="84"/></name><index pos:line="136" pos:column="84">[<expr><literal type="number" pos:line="136" pos:column="85">2<pos:position pos:line="136" pos:column="86"/></literal></expr>]<pos:position pos:line="136" pos:column="87"/></index></name></expr></argument>)<pos:position pos:line="136" pos:column="88"/></argument_list></call></expr></argument>)<pos:position pos:line="136" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="90"/></expr_stmt>
		}<pos:position pos:line="137" pos:column="18"/></block></then></if></elseif>

		<comment type="block" pos:line="139" pos:column="17">/*
		 * Network traffic
		 */</comment>
		<elseif pos:line="142" pos:column="17">else <if pos:line="142" pos:column="22">if <condition pos:line="142" pos:column="25">(<expr><call><name pos:line="142" pos:column="26">FIELD_IS<pos:position pos:line="142" pos:column="34"/></name> <argument_list pos:line="142" pos:column="35">(<argument><expr><literal type="string" pos:line="142" pos:column="36">"bytes_read"<pos:position pos:line="142" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="142" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="142" pos:column="50"/></condition><then pos:line="142" pos:column="50">
		<block pos:line="143" pos:column="17">{
			<expr_stmt><expr><name pos:line="144" pos:column="25">octets_rx<pos:position pos:line="144" pos:column="34"/></name> <operator pos:line="144" pos:column="35">=<pos:position pos:line="144" pos:column="36"/></operator> <call><name pos:line="144" pos:column="37">atoll<pos:position pos:line="144" pos:column="42"/></name> <argument_list pos:line="144" pos:column="43">(<argument><expr><name><name pos:line="144" pos:column="44">fields<pos:position pos:line="144" pos:column="50"/></name><index pos:line="144" pos:column="50">[<expr><literal type="number" pos:line="144" pos:column="51">2<pos:position pos:line="144" pos:column="52"/></literal></expr>]<pos:position pos:line="144" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="144" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="55"/></expr_stmt>
		}<pos:position pos:line="145" pos:column="18"/></block></then></if></elseif>
		<elseif pos:line="146" pos:column="17">else <if pos:line="146" pos:column="22">if <condition pos:line="146" pos:column="25">(<expr><call><name pos:line="146" pos:column="26">FIELD_IS<pos:position pos:line="146" pos:column="34"/></name> <argument_list pos:line="146" pos:column="35">(<argument><expr><literal type="string" pos:line="146" pos:column="36">"bytes_written"<pos:position pos:line="146" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="146" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="146" pos:column="53"/></condition><then pos:line="146" pos:column="53">
		<block pos:line="147" pos:column="17">{
			<expr_stmt><expr><name pos:line="148" pos:column="25">octets_tx<pos:position pos:line="148" pos:column="34"/></name> <operator pos:line="148" pos:column="35">=<pos:position pos:line="148" pos:column="36"/></operator> <call><name pos:line="148" pos:column="37">atoll<pos:position pos:line="148" pos:column="42"/></name> <argument_list pos:line="148" pos:column="43">(<argument><expr><name><name pos:line="148" pos:column="44">fields<pos:position pos:line="148" pos:column="50"/></name><index pos:line="148" pos:column="50">[<expr><literal type="number" pos:line="148" pos:column="51">2<pos:position pos:line="148" pos:column="52"/></literal></expr>]<pos:position pos:line="148" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="148" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="55"/></expr_stmt>
		}<pos:position pos:line="149" pos:column="18"/></block></then></if></elseif></if>
	}<pos:position pos:line="150" pos:column="10"/></block></while> <comment type="block" pos:line="150" pos:column="11">/* while ((line = strtok_r (ptr, "\n\r", &amp;saveptr)) != NULL) */</comment>

	<if pos:line="152" pos:column="9">if <condition pos:line="152" pos:column="12">(<expr><operator pos:line="152" pos:column="13">!<pos:position pos:line="152" pos:column="14"/></operator><call><name pos:line="152" pos:column="14">isnan<pos:position pos:line="152" pos:column="19"/></name> <argument_list pos:line="152" pos:column="20">(<argument><expr><name pos:line="152" pos:column="21">bytes_used<pos:position pos:line="152" pos:column="31"/></name></expr></argument>)<pos:position pos:line="152" pos:column="32"/></argument_list></call> <operator pos:line="152" pos:column="33">&amp;&amp;<pos:position pos:line="152" pos:column="43"/></operator> <operator pos:line="152" pos:column="36">!<pos:position pos:line="152" pos:column="37"/></operator><call><name pos:line="152" pos:column="37">isnan<pos:position pos:line="152" pos:column="42"/></name> <argument_list pos:line="152" pos:column="43">(<argument><expr><name pos:line="152" pos:column="44">bytes_total<pos:position pos:line="152" pos:column="55"/></name></expr></argument>)<pos:position pos:line="152" pos:column="56"/></argument_list></call> <operator pos:line="152" pos:column="57">&amp;&amp;<pos:position pos:line="152" pos:column="67"/></operator> <operator pos:line="152" pos:column="60">(<pos:position pos:line="152" pos:column="61"/></operator><name pos:line="152" pos:column="61">bytes_used<pos:position pos:line="152" pos:column="71"/></name> <operator pos:line="152" pos:column="72">&lt;=<pos:position pos:line="152" pos:column="77"/></operator> <name pos:line="152" pos:column="75">bytes_total<pos:position pos:line="152" pos:column="86"/></name><operator pos:line="152" pos:column="86">)<pos:position pos:line="152" pos:column="87"/></operator></expr>)<pos:position pos:line="152" pos:column="88"/></condition><then pos:line="152" pos:column="88">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="153" pos:column="17">submit_gauge2<pos:position pos:line="153" pos:column="30"/></name> <argument_list pos:line="153" pos:column="31">(<argument><expr><literal type="string" pos:line="153" pos:column="32">"df"<pos:position pos:line="153" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="153" pos:column="38">"cache"<pos:position pos:line="153" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="153" pos:column="47">bytes_used<pos:position pos:line="153" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="59">bytes_total<pos:position pos:line="153" pos:column="70"/></name> <operator pos:line="153" pos:column="71">-<pos:position pos:line="153" pos:column="72"/></operator> <name pos:line="153" pos:column="73">bytes_used<pos:position pos:line="153" pos:column="83"/></name></expr></argument>)<pos:position pos:line="153" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="85"/></expr_stmt></block></then></if>
	
	<if pos:line="155" pos:column="9">if <condition pos:line="155" pos:column="12">(<expr><operator pos:line="155" pos:column="13">(<pos:position pos:line="155" pos:column="14"/></operator><name pos:line="155" pos:column="14">rusage_user<pos:position pos:line="155" pos:column="25"/></name> <operator pos:line="155" pos:column="26">!=<pos:position pos:line="155" pos:column="28"/></operator> <literal type="number" pos:line="155" pos:column="29">0<pos:position pos:line="155" pos:column="30"/></literal><operator pos:line="155" pos:column="30">)<pos:position pos:line="155" pos:column="31"/></operator> <operator pos:line="155" pos:column="32">||<pos:position pos:line="155" pos:column="34"/></operator> <operator pos:line="155" pos:column="35">(<pos:position pos:line="155" pos:column="36"/></operator><name pos:line="155" pos:column="36">rusage_syst<pos:position pos:line="155" pos:column="47"/></name> <operator pos:line="155" pos:column="48">!=<pos:position pos:line="155" pos:column="50"/></operator> <literal type="number" pos:line="155" pos:column="51">0<pos:position pos:line="155" pos:column="52"/></literal><operator pos:line="155" pos:column="52">)<pos:position pos:line="155" pos:column="53"/></operator></expr>)<pos:position pos:line="155" pos:column="54"/></condition><then pos:line="155" pos:column="54">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="156" pos:column="17">submit_counter2<pos:position pos:line="156" pos:column="32"/></name> <argument_list pos:line="156" pos:column="33">(<argument><expr><literal type="string" pos:line="156" pos:column="34">"ps_cputime"<pos:position pos:line="156" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="156" pos:column="48">NULL<pos:position pos:line="156" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="156" pos:column="54">rusage_user<pos:position pos:line="156" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="156" pos:column="67">rusage_syst<pos:position pos:line="156" pos:column="78"/></name></expr></argument>)<pos:position pos:line="156" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="80"/></expr_stmt></block></then></if>

	<if pos:line="158" pos:column="9">if <condition pos:line="158" pos:column="12">(<expr><operator pos:line="158" pos:column="13">(<pos:position pos:line="158" pos:column="14"/></operator><name pos:line="158" pos:column="14">octets_rx<pos:position pos:line="158" pos:column="23"/></name> <operator pos:line="158" pos:column="24">!=<pos:position pos:line="158" pos:column="26"/></operator> <literal type="number" pos:line="158" pos:column="27">0<pos:position pos:line="158" pos:column="28"/></literal><operator pos:line="158" pos:column="28">)<pos:position pos:line="158" pos:column="29"/></operator> <operator pos:line="158" pos:column="30">||<pos:position pos:line="158" pos:column="32"/></operator> <operator pos:line="158" pos:column="33">(<pos:position pos:line="158" pos:column="34"/></operator><name pos:line="158" pos:column="34">octets_tx<pos:position pos:line="158" pos:column="43"/></name> <operator pos:line="158" pos:column="44">!=<pos:position pos:line="158" pos:column="46"/></operator> <literal type="number" pos:line="158" pos:column="47">0<pos:position pos:line="158" pos:column="48"/></literal><operator pos:line="158" pos:column="48">)<pos:position pos:line="158" pos:column="49"/></operator></expr>)<pos:position pos:line="158" pos:column="50"/></condition><then pos:line="158" pos:column="50">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="159" pos:column="17">submit_counter2<pos:position pos:line="159" pos:column="32"/></name> <argument_list pos:line="159" pos:column="33">(<argument><expr><literal type="string" pos:line="159" pos:column="34">"memcached_octets"<pos:position pos:line="159" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="159" pos:column="54">NULL<pos:position pos:line="159" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="159" pos:column="60">octets_rx<pos:position pos:line="159" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="159" pos:column="71">octets_tx<pos:position pos:line="159" pos:column="80"/></name></expr></argument>)<pos:position pos:line="159" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="82"/></expr_stmt></block></then></if>
	
	<return pos:line="161" pos:column="9">return <expr><literal type="number" pos:line="161" pos:column="16">0<pos:position pos:line="161" pos:column="17"/></literal></expr>;<pos:position pos:line="161" pos:column="18"/></return>
}<pos:position pos:line="162" pos:column="2"/></block></function></unit>

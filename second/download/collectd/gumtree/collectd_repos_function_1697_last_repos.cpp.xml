<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1697_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">snmp_agent_set_vardata<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">void<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">data<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">size_t<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">data_len<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="65">u_char<pos:position pos:line="1" pos:column="71"/></name></type> <name pos:line="1" pos:column="72">asn_type<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="2" pos:column="35">double<pos:position pos:line="2" pos:column="41"/></name></type> <name pos:line="2" pos:column="42">scale<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">double<pos:position pos:line="2" pos:column="55"/></name></type> <name pos:line="2" pos:column="56">shift<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="63">const<pos:position pos:line="2" pos:column="68"/></specifier> <name pos:line="2" pos:column="69">void<pos:position pos:line="2" pos:column="73"/></name> <modifier pos:line="2" pos:column="74">*<pos:position pos:line="2" pos:column="75"/></modifier></type><name pos:line="2" pos:column="75">value<pos:position pos:line="2" pos:column="80"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="3" pos:column="35">size_t<pos:position pos:line="3" pos:column="41"/></name></type> <name pos:line="3" pos:column="42">len<pos:position pos:line="3" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="47">int<pos:position pos:line="3" pos:column="50"/></name></type> <name pos:line="3" pos:column="51">type<pos:position pos:line="3" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="56"/></parameter_list> <block pos:line="3" pos:column="57">{

  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">ret<pos:position pos:line="5" pos:column="10"/></name></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">netsnmp_vardata<pos:position pos:line="6" pos:column="18"/></name></type> <name pos:line="6" pos:column="19">var<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">const<pos:position pos:line="7" pos:column="8"/></specifier> <name pos:line="7" pos:column="9">value_t<pos:position pos:line="7" pos:column="16"/></name> <modifier pos:line="7" pos:column="17">*<pos:position pos:line="7" pos:column="18"/></modifier></type><name pos:line="7" pos:column="18">val<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">long<pos:position pos:line="8" pos:column="7"/></name></type> <name pos:line="8" pos:column="8">new_value<pos:position pos:line="8" pos:column="17"/></name> <init pos:line="8" pos:column="18">= <expr><literal type="number" pos:line="8" pos:column="20">0<pos:position pos:line="8" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>

  <expr_stmt><expr><name pos:line="10" pos:column="3">val<pos:position pos:line="10" pos:column="6"/></name> <operator pos:line="10" pos:column="7">=<pos:position pos:line="10" pos:column="8"/></operator> <name pos:line="10" pos:column="9">value<pos:position pos:line="10" pos:column="14"/></name></expr>;<pos:position pos:line="10" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="11" pos:column="3">var<pos:position pos:line="11" pos:column="6"/></name><operator pos:line="11" pos:column="6">.<pos:position pos:line="11" pos:column="7"/></operator><name pos:line="11" pos:column="7">string<pos:position pos:line="11" pos:column="13"/></name></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <operator pos:line="11" pos:column="16">(<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="17">u_char<pos:position pos:line="11" pos:column="23"/></name> <operator pos:line="11" pos:column="24">*<pos:position pos:line="11" pos:column="25"/></operator><operator pos:line="11" pos:column="25">)<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="26">data<pos:position pos:line="11" pos:column="30"/></name></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt>

  <expr_stmt><expr><name pos:line="13" pos:column="3">ret<pos:position pos:line="13" pos:column="6"/></name> <operator pos:line="13" pos:column="7">=<pos:position pos:line="13" pos:column="8"/></operator> <call><name pos:line="13" pos:column="9">snmp_agent_get_value_from_ds_type<pos:position pos:line="13" pos:column="42"/></name><argument_list pos:line="13" pos:column="42">(<argument><expr><name pos:line="13" pos:column="43">val<pos:position pos:line="13" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="48">type<pos:position pos:line="13" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="54">scale<pos:position pos:line="13" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="61">shift<pos:position pos:line="13" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="68">&amp;<pos:position pos:line="13" pos:column="73"/></operator><name pos:line="13" pos:column="69">new_value<pos:position pos:line="13" pos:column="78"/></name></expr></argument>)<pos:position pos:line="13" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="80"/></expr_stmt>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">ret<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">!=<pos:position pos:line="14" pos:column="13"/></operator> <literal type="number" pos:line="14" pos:column="14">0<pos:position pos:line="14" pos:column="15"/></literal></expr>)<pos:position pos:line="14" pos:column="16"/></condition><then pos:line="14" pos:column="16">
    <block type="pseudo"><return pos:line="15" pos:column="5">return <expr><name pos:line="15" pos:column="12">ret<pos:position pos:line="15" pos:column="15"/></name></expr>;<pos:position pos:line="15" pos:column="16"/></return></block></then></if>

  <switch pos:line="17" pos:column="3">switch <condition pos:line="17" pos:column="10">(<expr><name pos:line="17" pos:column="11">asn_type<pos:position pos:line="17" pos:column="19"/></name></expr>)<pos:position pos:line="17" pos:column="20"/></condition> <block pos:line="17" pos:column="21">{
  <case pos:line="18" pos:column="3">case <expr><name pos:line="18" pos:column="8">ASN_INTEGER<pos:position pos:line="18" pos:column="19"/></name></expr>:<pos:position pos:line="18" pos:column="20"/></case>
  <case pos:line="19" pos:column="3">case <expr><name pos:line="19" pos:column="8">ASN_UINTEGER<pos:position pos:line="19" pos:column="20"/></name></expr>:<pos:position pos:line="19" pos:column="21"/></case>
  <case pos:line="20" pos:column="3">case <expr><name pos:line="20" pos:column="8">ASN_COUNTER<pos:position pos:line="20" pos:column="19"/></name></expr>:<pos:position pos:line="20" pos:column="20"/></case>
  <case pos:line="21" pos:column="3">case <expr><name pos:line="21" pos:column="8">ASN_TIMETICKS<pos:position pos:line="21" pos:column="21"/></name></expr>:<pos:position pos:line="21" pos:column="22"/></case>
  <case pos:line="22" pos:column="3">case <expr><name pos:line="22" pos:column="8">ASN_GAUGE<pos:position pos:line="22" pos:column="17"/></name></expr>:<pos:position pos:line="22" pos:column="18"/></case>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><operator pos:line="23" pos:column="9">*<pos:position pos:line="23" pos:column="10"/></operator><name pos:line="23" pos:column="10">data_len<pos:position pos:line="23" pos:column="18"/></name> <operator pos:line="23" pos:column="19">&lt;<pos:position pos:line="23" pos:column="23"/></operator> <sizeof pos:line="23" pos:column="21">sizeof<argument_list pos:line="23" pos:column="27">(<argument><expr><operator pos:line="23" pos:column="28">*<pos:position pos:line="23" pos:column="29"/></operator><name><name pos:line="23" pos:column="29">var<pos:position pos:line="23" pos:column="32"/></name><operator pos:line="23" pos:column="32">.<pos:position pos:line="23" pos:column="33"/></operator><name pos:line="23" pos:column="33">integer<pos:position pos:line="23" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="41"/></argument_list></sizeof></expr>)<pos:position pos:line="23" pos:column="42"/></condition><then pos:line="23" pos:column="42">
      <block type="pseudo"><return pos:line="24" pos:column="7">return <expr><operator pos:line="24" pos:column="14">-<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="15">EINVAL<pos:position pos:line="24" pos:column="21"/></name></expr>;<pos:position pos:line="24" pos:column="22"/></return></block></then></if>
    <expr_stmt><expr><operator pos:line="25" pos:column="5">*<pos:position pos:line="25" pos:column="6"/></operator><name><name pos:line="25" pos:column="6">var<pos:position pos:line="25" pos:column="9"/></name><operator pos:line="25" pos:column="9">.<pos:position pos:line="25" pos:column="10"/></operator><name pos:line="25" pos:column="10">integer<pos:position pos:line="25" pos:column="17"/></name></name> <operator pos:line="25" pos:column="18">=<pos:position pos:line="25" pos:column="19"/></operator> <name pos:line="25" pos:column="20">new_value<pos:position pos:line="25" pos:column="29"/></name></expr>;<pos:position pos:line="25" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="26" pos:column="5">*<pos:position pos:line="26" pos:column="6"/></operator><name pos:line="26" pos:column="6">data_len<pos:position pos:line="26" pos:column="14"/></name> <operator pos:line="26" pos:column="15">=<pos:position pos:line="26" pos:column="16"/></operator> <sizeof pos:line="26" pos:column="17">sizeof<argument_list pos:line="26" pos:column="23">(<argument><expr><operator pos:line="26" pos:column="24">*<pos:position pos:line="26" pos:column="25"/></operator><name><name pos:line="26" pos:column="25">var<pos:position pos:line="26" pos:column="28"/></name><operator pos:line="26" pos:column="28">.<pos:position pos:line="26" pos:column="29"/></operator><name pos:line="26" pos:column="29">integer<pos:position pos:line="26" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="37"/></argument_list></sizeof></expr>;<pos:position pos:line="26" pos:column="38"/></expr_stmt>
    <break pos:line="27" pos:column="5">break;<pos:position pos:line="27" pos:column="11"/></break>
  <case pos:line="28" pos:column="3">case <expr><name pos:line="28" pos:column="8">ASN_COUNTER64<pos:position pos:line="28" pos:column="21"/></name></expr>:<pos:position pos:line="28" pos:column="22"/></case>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><operator pos:line="29" pos:column="9">*<pos:position pos:line="29" pos:column="10"/></operator><name pos:line="29" pos:column="10">data_len<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">&lt;<pos:position pos:line="29" pos:column="23"/></operator> <sizeof pos:line="29" pos:column="21">sizeof<argument_list pos:line="29" pos:column="27">(<argument><expr><operator pos:line="29" pos:column="28">*<pos:position pos:line="29" pos:column="29"/></operator><name><name pos:line="29" pos:column="29">var<pos:position pos:line="29" pos:column="32"/></name><operator pos:line="29" pos:column="32">.<pos:position pos:line="29" pos:column="33"/></operator><name pos:line="29" pos:column="33">counter64<pos:position pos:line="29" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="43"/></argument_list></sizeof></expr>)<pos:position pos:line="29" pos:column="44"/></condition><then pos:line="29" pos:column="44">
      <block type="pseudo"><return pos:line="30" pos:column="7">return <expr><operator pos:line="30" pos:column="14">-<pos:position pos:line="30" pos:column="15"/></operator><name pos:line="30" pos:column="15">EINVAL<pos:position pos:line="30" pos:column="21"/></name></expr>;<pos:position pos:line="30" pos:column="22"/></return></block></then></if>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">var<pos:position pos:line="31" pos:column="8"/></name><operator pos:line="31" pos:column="8">.<pos:position pos:line="31" pos:column="9"/></operator><name pos:line="31" pos:column="9">counter64<pos:position pos:line="31" pos:column="18"/></name><operator pos:line="31" pos:column="18">-&gt;<pos:position pos:line="31" pos:column="23"/></operator><name pos:line="31" pos:column="20">high<pos:position pos:line="31" pos:column="24"/></name></name> <operator pos:line="31" pos:column="25">=<pos:position pos:line="31" pos:column="26"/></operator> <call pos:line="31" pos:column="27">(<name pos:line="31" pos:column="28">u_long<pos:position pos:line="31" pos:column="34"/></name>)<argument_list pos:line="31" pos:column="35">(<argument><expr><operator pos:line="31" pos:column="36">(<pos:position pos:line="31" pos:column="37"/></operator><name pos:line="31" pos:column="37">int64_t<pos:position pos:line="31" pos:column="44"/></name><operator pos:line="31" pos:column="44">)<pos:position pos:line="31" pos:column="45"/></operator><name pos:line="31" pos:column="45">new_value<pos:position pos:line="31" pos:column="54"/></name> <operator pos:line="31" pos:column="55">&gt;&gt;<pos:position pos:line="31" pos:column="60"/></operator> <literal type="number" pos:line="31" pos:column="58">32<pos:position pos:line="31" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">var<pos:position pos:line="32" pos:column="8"/></name><operator pos:line="32" pos:column="8">.<pos:position pos:line="32" pos:column="9"/></operator><name pos:line="32" pos:column="9">counter64<pos:position pos:line="32" pos:column="18"/></name><operator pos:line="32" pos:column="18">-&gt;<pos:position pos:line="32" pos:column="23"/></operator><name pos:line="32" pos:column="20">low<pos:position pos:line="32" pos:column="23"/></name></name> <operator pos:line="32" pos:column="24">=<pos:position pos:line="32" pos:column="25"/></operator> <call pos:line="32" pos:column="26">(<name pos:line="32" pos:column="27">u_long<pos:position pos:line="32" pos:column="33"/></name>)<argument_list pos:line="32" pos:column="34">(<argument><expr><operator pos:line="32" pos:column="35">(<pos:position pos:line="32" pos:column="36"/></operator><name pos:line="32" pos:column="36">int64_t<pos:position pos:line="32" pos:column="43"/></name><operator pos:line="32" pos:column="43">)<pos:position pos:line="32" pos:column="44"/></operator><name pos:line="32" pos:column="44">new_value<pos:position pos:line="32" pos:column="53"/></name> <operator pos:line="32" pos:column="54">&amp;<pos:position pos:line="32" pos:column="59"/></operator> <literal type="number" pos:line="32" pos:column="56">0xFFFFFFFF<pos:position pos:line="32" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="68"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="33" pos:column="5">*<pos:position pos:line="33" pos:column="6"/></operator><name pos:line="33" pos:column="6">data_len<pos:position pos:line="33" pos:column="14"/></name> <operator pos:line="33" pos:column="15">=<pos:position pos:line="33" pos:column="16"/></operator> <sizeof pos:line="33" pos:column="17">sizeof<argument_list pos:line="33" pos:column="23">(<argument><expr><operator pos:line="33" pos:column="24">*<pos:position pos:line="33" pos:column="25"/></operator><name><name pos:line="33" pos:column="25">var<pos:position pos:line="33" pos:column="28"/></name><operator pos:line="33" pos:column="28">.<pos:position pos:line="33" pos:column="29"/></operator><name pos:line="33" pos:column="29">counter64<pos:position pos:line="33" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="39"/></argument_list></sizeof></expr>;<pos:position pos:line="33" pos:column="40"/></expr_stmt>
    <break pos:line="34" pos:column="5">break;<pos:position pos:line="34" pos:column="11"/></break>
  <case pos:line="35" pos:column="3">case <expr><name pos:line="35" pos:column="8">ASN_OCTET_STR<pos:position pos:line="35" pos:column="21"/></name></expr>:<pos:position pos:line="35" pos:column="22"/></case>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name pos:line="36" pos:column="9">type<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">==<pos:position pos:line="36" pos:column="16"/></operator> <name pos:line="36" pos:column="17">DS_TYPE_GAUGE<pos:position pos:line="36" pos:column="30"/></name></expr>)<pos:position pos:line="36" pos:column="31"/></condition><then pos:line="36" pos:column="31"> <block pos:line="36" pos:column="32">{
      <decl_stmt><decl><type><name pos:line="37" pos:column="7">char<pos:position pos:line="37" pos:column="11"/></name></type> <name><name pos:line="37" pos:column="12">buf<pos:position pos:line="37" pos:column="15"/></name><index pos:line="37" pos:column="15">[<expr><name pos:line="37" pos:column="16">DATA_MAX_NAME_LEN<pos:position pos:line="37" pos:column="33"/></name></expr>]<pos:position pos:line="37" pos:column="34"/></index></name></decl>;<pos:position pos:line="37" pos:column="35"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="38" pos:column="7">snprintf<pos:position pos:line="38" pos:column="15"/></name><argument_list pos:line="38" pos:column="15">(<argument><expr><name pos:line="38" pos:column="16">buf<pos:position pos:line="38" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="21">sizeof<argument_list pos:line="38" pos:column="27">(<argument><expr><name pos:line="38" pos:column="28">buf<pos:position pos:line="38" pos:column="31"/></name></expr></argument>)<pos:position pos:line="38" pos:column="32"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="34">"%.2f"<pos:position pos:line="38" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="42">val<pos:position pos:line="38" pos:column="45"/></name><operator pos:line="38" pos:column="45">-&gt;<pos:position pos:line="38" pos:column="50"/></operator><name pos:line="38" pos:column="47">gauge<pos:position pos:line="38" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="54"/></expr_stmt>
      <if pos:line="39" pos:column="7">if <condition pos:line="39" pos:column="10">(<expr><operator pos:line="39" pos:column="11">*<pos:position pos:line="39" pos:column="12"/></operator><name pos:line="39" pos:column="12">data_len<pos:position pos:line="39" pos:column="20"/></name> <operator pos:line="39" pos:column="21">&lt;<pos:position pos:line="39" pos:column="25"/></operator> <call><name pos:line="39" pos:column="23">strlen<pos:position pos:line="39" pos:column="29"/></name><argument_list pos:line="39" pos:column="29">(<argument><expr><name pos:line="39" pos:column="30">buf<pos:position pos:line="39" pos:column="33"/></name></expr></argument>)<pos:position pos:line="39" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="35"/></condition><then pos:line="39" pos:column="35">
        <block type="pseudo"><return pos:line="40" pos:column="9">return <expr><operator pos:line="40" pos:column="16">-<pos:position pos:line="40" pos:column="17"/></operator><name pos:line="40" pos:column="17">EINVAL<pos:position pos:line="40" pos:column="23"/></name></expr>;<pos:position pos:line="40" pos:column="24"/></return></block></then></if>
      <expr_stmt><expr><operator pos:line="41" pos:column="7">*<pos:position pos:line="41" pos:column="8"/></operator><name pos:line="41" pos:column="8">data_len<pos:position pos:line="41" pos:column="16"/></name> <operator pos:line="41" pos:column="17">=<pos:position pos:line="41" pos:column="18"/></operator> <call><name pos:line="41" pos:column="19">strlen<pos:position pos:line="41" pos:column="25"/></name><argument_list pos:line="41" pos:column="25">(<argument><expr><name pos:line="41" pos:column="26">buf<pos:position pos:line="41" pos:column="29"/></name></expr></argument>)<pos:position pos:line="41" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="42" pos:column="7">memcpy<pos:position pos:line="42" pos:column="13"/></name><argument_list pos:line="42" pos:column="13">(<argument><expr><name><name pos:line="42" pos:column="14">var<pos:position pos:line="42" pos:column="17"/></name><operator pos:line="42" pos:column="17">.<pos:position pos:line="42" pos:column="18"/></operator><name pos:line="42" pos:column="18">string<pos:position pos:line="42" pos:column="24"/></name></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="26">buf<pos:position pos:line="42" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="31">*<pos:position pos:line="42" pos:column="32"/></operator><name pos:line="42" pos:column="32">data_len<pos:position pos:line="42" pos:column="40"/></name></expr></argument>)<pos:position pos:line="42" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block></then> <else pos:line="43" pos:column="7">else <block pos:line="43" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="44" pos:column="7">ERROR<pos:position pos:line="44" pos:column="12"/></name><argument_list pos:line="44" pos:column="12">(<argument><expr><name pos:line="44" pos:column="13">PLUGIN_NAME<pos:position pos:line="44" pos:column="24"/></name> <literal type="string" pos:line="44" pos:column="25">": Failed to convert %d ds type to %d asn type"<pos:position pos:line="44" pos:column="72"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="74">type<pos:position pos:line="44" pos:column="78"/></name></expr></argument>,
            <argument><expr><name pos:line="45" pos:column="13">asn_type<pos:position pos:line="45" pos:column="21"/></name></expr></argument>)<pos:position pos:line="45" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="23"/></expr_stmt>
      <return pos:line="46" pos:column="7">return <expr><operator pos:line="46" pos:column="14">-<pos:position pos:line="46" pos:column="15"/></operator><name pos:line="46" pos:column="15">EINVAL<pos:position pos:line="46" pos:column="21"/></name></expr>;<pos:position pos:line="46" pos:column="22"/></return>
    }<pos:position pos:line="47" pos:column="6"/></block></else></if>
    <break pos:line="48" pos:column="5">break;<pos:position pos:line="48" pos:column="11"/></break>
  <default pos:line="49" pos:column="3">default:<pos:position pos:line="49" pos:column="11"/></default>
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">ERROR<pos:position pos:line="50" pos:column="10"/></name><argument_list pos:line="50" pos:column="10">(<argument><expr><name pos:line="50" pos:column="11">PLUGIN_NAME<pos:position pos:line="50" pos:column="22"/></name> <literal type="string" pos:line="50" pos:column="23">": Failed to convert %d ds type to %d asn type"<pos:position pos:line="50" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="72">type<pos:position pos:line="50" pos:column="76"/></name></expr></argument>,
          <argument><expr><name pos:line="51" pos:column="11">asn_type<pos:position pos:line="51" pos:column="19"/></name></expr></argument>)<pos:position pos:line="51" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="21"/></expr_stmt>
    <return pos:line="52" pos:column="5">return <expr><operator pos:line="52" pos:column="12">-<pos:position pos:line="52" pos:column="13"/></operator><name pos:line="52" pos:column="13">EINVAL<pos:position pos:line="52" pos:column="19"/></name></expr>;<pos:position pos:line="52" pos:column="20"/></return>
  }<pos:position pos:line="53" pos:column="4"/></block></switch>

  <return pos:line="55" pos:column="3">return <expr><literal type="number" pos:line="55" pos:column="10">0<pos:position pos:line="55" pos:column="11"/></literal></expr>;<pos:position pos:line="55" pos:column="12"/></return>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

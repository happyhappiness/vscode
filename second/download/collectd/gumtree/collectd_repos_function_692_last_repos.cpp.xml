<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_692_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">ps_fill_details<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">procstat_t<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">ps<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">process_entry_t<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">entry<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list> <block pos:line="1" pos:column="75">{
  <if pos:line="2" pos:column="3">if <condition pos:line="2" pos:column="6">(<expr><name><name pos:line="2" pos:column="7">entry<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">-&gt;<pos:position pos:line="2" pos:column="17"/></operator><name pos:line="2" pos:column="14">has_io<pos:position pos:line="2" pos:column="20"/></name></name> <operator pos:line="2" pos:column="21">==<pos:position pos:line="2" pos:column="23"/></operator> <literal type="number" pos:line="2" pos:column="24">0<pos:position pos:line="2" pos:column="25"/></literal></expr>)<pos:position pos:line="2" pos:column="26"/></condition><then pos:line="2" pos:column="26"> <block pos:line="2" pos:column="27">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">ps_read_io<pos:position pos:line="3" pos:column="15"/></name><argument_list pos:line="3" pos:column="15">(<argument><expr><name pos:line="3" pos:column="16">entry<pos:position pos:line="3" pos:column="21"/></name></expr></argument>)<pos:position pos:line="3" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="4" pos:column="5">entry<pos:position pos:line="4" pos:column="10"/></name><operator pos:line="4" pos:column="10">-&gt;<pos:position pos:line="4" pos:column="15"/></operator><name pos:line="4" pos:column="12">has_io<pos:position pos:line="4" pos:column="18"/></name></name> <operator pos:line="4" pos:column="19">=<pos:position pos:line="4" pos:column="20"/></operator> <literal type="number" pos:line="4" pos:column="21">1<pos:position pos:line="4" pos:column="22"/></literal></expr>;<pos:position pos:line="4" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="5" pos:column="4"/></block></then></if>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name><name pos:line="7" pos:column="7">ps<pos:position pos:line="7" pos:column="9"/></name><operator pos:line="7" pos:column="9">-&gt;<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="11">report_ctx_switch<pos:position pos:line="7" pos:column="28"/></name></name></expr>)<pos:position pos:line="7" pos:column="29"/></condition><then pos:line="7" pos:column="29"> <block pos:line="7" pos:column="30">{
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">entry<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">-&gt;<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="16">has_cswitch<pos:position pos:line="8" pos:column="27"/></name></name> <operator pos:line="8" pos:column="28">==<pos:position pos:line="8" pos:column="30"/></operator> <literal type="number" pos:line="8" pos:column="31">0<pos:position pos:line="8" pos:column="32"/></literal></expr>)<pos:position pos:line="8" pos:column="33"/></condition><then pos:line="8" pos:column="33"> <block pos:line="8" pos:column="34">{
      <expr_stmt><expr><call><name pos:line="9" pos:column="7">ps_read_tasks_status<pos:position pos:line="9" pos:column="27"/></name><argument_list pos:line="9" pos:column="27">(<argument><expr><name pos:line="9" pos:column="28">entry<pos:position pos:line="9" pos:column="33"/></name></expr></argument>)<pos:position pos:line="9" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="10" pos:column="7">entry<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">-&gt;<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="14">has_cswitch<pos:position pos:line="10" pos:column="25"/></name></name> <operator pos:line="10" pos:column="26">=<pos:position pos:line="10" pos:column="27"/></operator> <literal type="number" pos:line="10" pos:column="28">1<pos:position pos:line="10" pos:column="29"/></literal></expr>;<pos:position pos:line="10" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>

  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name><name pos:line="14" pos:column="7">ps<pos:position pos:line="14" pos:column="9"/></name><operator pos:line="14" pos:column="9">-&gt;<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="11">report_maps_num<pos:position pos:line="14" pos:column="26"/></name></name></expr>)<pos:position pos:line="14" pos:column="27"/></condition><then pos:line="14" pos:column="27"> <block pos:line="14" pos:column="28">{
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">int<pos:position pos:line="15" pos:column="8"/></name></type> <name pos:line="15" pos:column="9">num_maps<pos:position pos:line="15" pos:column="17"/></name></decl>;<pos:position pos:line="15" pos:column="18"/></decl_stmt>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name><name pos:line="16" pos:column="9">entry<pos:position pos:line="16" pos:column="14"/></name><operator pos:line="16" pos:column="14">-&gt;<pos:position pos:line="16" pos:column="19"/></operator><name pos:line="16" pos:column="16">has_maps<pos:position pos:line="16" pos:column="24"/></name></name> <operator pos:line="16" pos:column="25">==<pos:position pos:line="16" pos:column="27"/></operator> <literal type="number" pos:line="16" pos:column="28">0<pos:position pos:line="16" pos:column="29"/></literal> <operator pos:line="16" pos:column="30">&amp;&amp;<pos:position pos:line="16" pos:column="40"/></operator> <operator pos:line="16" pos:column="33">(<pos:position pos:line="16" pos:column="34"/></operator><name pos:line="16" pos:column="34">num_maps<pos:position pos:line="16" pos:column="42"/></name> <operator pos:line="16" pos:column="43">=<pos:position pos:line="16" pos:column="44"/></operator> <call><name pos:line="16" pos:column="45">ps_count_maps<pos:position pos:line="16" pos:column="58"/></name><argument_list pos:line="16" pos:column="58">(<argument><expr><name><name pos:line="16" pos:column="59">entry<pos:position pos:line="16" pos:column="64"/></name><operator pos:line="16" pos:column="64">-&gt;<pos:position pos:line="16" pos:column="69"/></operator><name pos:line="16" pos:column="66">id<pos:position pos:line="16" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="69"/></argument_list></call><operator pos:line="16" pos:column="69">)<pos:position pos:line="16" pos:column="70"/></operator> <operator pos:line="16" pos:column="71">&gt;<pos:position pos:line="16" pos:column="75"/></operator> <literal type="number" pos:line="16" pos:column="73">0<pos:position pos:line="16" pos:column="74"/></literal></expr>)<pos:position pos:line="16" pos:column="75"/></condition><then pos:line="16" pos:column="75"> <block pos:line="16" pos:column="76">{
      <expr_stmt><expr><name><name pos:line="17" pos:column="7">entry<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">-&gt;<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="14">num_maps<pos:position pos:line="17" pos:column="22"/></name></name> <operator pos:line="17" pos:column="23">=<pos:position pos:line="17" pos:column="24"/></operator> <name pos:line="17" pos:column="25">num_maps<pos:position pos:line="17" pos:column="33"/></name></expr>;<pos:position pos:line="17" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">entry<pos:position pos:line="19" pos:column="10"/></name><operator pos:line="19" pos:column="10">-&gt;<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="12">has_maps<pos:position pos:line="19" pos:column="20"/></name></name> <operator pos:line="19" pos:column="21">=<pos:position pos:line="19" pos:column="22"/></operator> <literal type="number" pos:line="19" pos:column="23">1<pos:position pos:line="19" pos:column="24"/></literal></expr>;<pos:position pos:line="19" pos:column="25"/></expr_stmt>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><name><name pos:line="22" pos:column="7">ps<pos:position pos:line="22" pos:column="9"/></name><operator pos:line="22" pos:column="9">-&gt;<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="11">report_fd_num<pos:position pos:line="22" pos:column="24"/></name></name></expr>)<pos:position pos:line="22" pos:column="25"/></condition><then pos:line="22" pos:column="25"> <block pos:line="22" pos:column="26">{
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">int<pos:position pos:line="23" pos:column="8"/></name></type> <name pos:line="23" pos:column="9">num_fd<pos:position pos:line="23" pos:column="15"/></name></decl>;<pos:position pos:line="23" pos:column="16"/></decl_stmt>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name><name pos:line="24" pos:column="9">entry<pos:position pos:line="24" pos:column="14"/></name><operator pos:line="24" pos:column="14">-&gt;<pos:position pos:line="24" pos:column="19"/></operator><name pos:line="24" pos:column="16">has_fd<pos:position pos:line="24" pos:column="22"/></name></name> <operator pos:line="24" pos:column="23">==<pos:position pos:line="24" pos:column="25"/></operator> <literal type="number" pos:line="24" pos:column="26">0<pos:position pos:line="24" pos:column="27"/></literal> <operator pos:line="24" pos:column="28">&amp;&amp;<pos:position pos:line="24" pos:column="38"/></operator> <operator pos:line="24" pos:column="31">(<pos:position pos:line="24" pos:column="32"/></operator><name pos:line="24" pos:column="32">num_fd<pos:position pos:line="24" pos:column="38"/></name> <operator pos:line="24" pos:column="39">=<pos:position pos:line="24" pos:column="40"/></operator> <call><name pos:line="24" pos:column="41">ps_count_fd<pos:position pos:line="24" pos:column="52"/></name><argument_list pos:line="24" pos:column="52">(<argument><expr><name><name pos:line="24" pos:column="53">entry<pos:position pos:line="24" pos:column="58"/></name><operator pos:line="24" pos:column="58">-&gt;<pos:position pos:line="24" pos:column="63"/></operator><name pos:line="24" pos:column="60">id<pos:position pos:line="24" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="63"/></argument_list></call><operator pos:line="24" pos:column="63">)<pos:position pos:line="24" pos:column="64"/></operator> <operator pos:line="24" pos:column="65">&gt;<pos:position pos:line="24" pos:column="69"/></operator> <literal type="number" pos:line="24" pos:column="67">0<pos:position pos:line="24" pos:column="68"/></literal></expr>)<pos:position pos:line="24" pos:column="69"/></condition><then pos:line="24" pos:column="69"> <block pos:line="24" pos:column="70">{
      <expr_stmt><expr><name><name pos:line="25" pos:column="7">entry<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">-&gt;<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="14">num_fd<pos:position pos:line="25" pos:column="20"/></name></name> <operator pos:line="25" pos:column="21">=<pos:position pos:line="25" pos:column="22"/></operator> <name pos:line="25" pos:column="23">num_fd<pos:position pos:line="25" pos:column="29"/></name></expr>;<pos:position pos:line="25" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">entry<pos:position pos:line="27" pos:column="10"/></name><operator pos:line="27" pos:column="10">-&gt;<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="12">has_fd<pos:position pos:line="27" pos:column="18"/></name></name> <operator pos:line="27" pos:column="19">=<pos:position pos:line="27" pos:column="20"/></operator> <literal type="number" pos:line="27" pos:column="21">1<pos:position pos:line="27" pos:column="22"/></literal></expr>;<pos:position pos:line="27" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

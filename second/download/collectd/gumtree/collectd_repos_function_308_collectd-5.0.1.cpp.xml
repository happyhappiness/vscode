<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_308_collectd-5.0.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">camqp_subscribe_init<pos:position pos:line="1" pos:column="32"/></name> <parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">camqp_config_t<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">conf<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list> <comment type="block" pos:line="1" pos:column="56">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">status<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">pthread_t<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">tmp<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>

    <expr_stmt><expr><name pos:line="6" pos:column="5">tmp<pos:position pos:line="6" pos:column="8"/></name> <operator pos:line="6" pos:column="9">=<pos:position pos:line="6" pos:column="10"/></operator> <call><name pos:line="6" pos:column="11">realloc<pos:position pos:line="6" pos:column="18"/></name> <argument_list pos:line="6" pos:column="19">(<argument><expr><name pos:line="6" pos:column="20">subscriber_threads<pos:position pos:line="6" pos:column="38"/></name></expr></argument>,
            <argument><expr><sizeof pos:line="7" pos:column="13">sizeof <argument_list pos:line="7" pos:column="20">(<argument><expr><operator pos:line="7" pos:column="21">*<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="22">subscriber_threads<pos:position pos:line="7" pos:column="40"/></name></expr></argument>)<pos:position pos:line="7" pos:column="41"/></argument_list></sizeof> <operator pos:line="7" pos:column="42">*<pos:position pos:line="7" pos:column="43"/></operator> <operator pos:line="7" pos:column="44">(<pos:position pos:line="7" pos:column="45"/></operator><name pos:line="7" pos:column="45">subscriber_threads_num<pos:position pos:line="7" pos:column="67"/></name> <operator pos:line="7" pos:column="68">+<pos:position pos:line="7" pos:column="69"/></operator> <literal type="number" pos:line="7" pos:column="70">1<pos:position pos:line="7" pos:column="71"/></literal><operator pos:line="7" pos:column="71">)<pos:position pos:line="7" pos:column="72"/></operator></expr></argument>)<pos:position pos:line="7" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="74"/></expr_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">tmp<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">==<pos:position pos:line="8" pos:column="15"/></operator> <name pos:line="8" pos:column="16">NULL<pos:position pos:line="8" pos:column="20"/></name></expr>)<pos:position pos:line="8" pos:column="21"/></condition><then pos:line="8" pos:column="21">
    <block pos:line="9" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">ERROR<pos:position pos:line="10" pos:column="14"/></name> <argument_list pos:line="10" pos:column="15">(<argument><expr><literal type="string" pos:line="10" pos:column="16">"amqp plugin: realloc failed."<pos:position pos:line="10" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">camqp_config_free<pos:position pos:line="11" pos:column="26"/></name> <argument_list pos:line="11" pos:column="27">(<argument><expr><name pos:line="11" pos:column="28">conf<pos:position pos:line="11" pos:column="32"/></name></expr></argument>)<pos:position pos:line="11" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="34"/></expr_stmt>
        <return pos:line="12" pos:column="9">return <expr><operator pos:line="12" pos:column="16">(<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="17">ENOMEM<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">)<pos:position pos:line="12" pos:column="24"/></operator></expr>;<pos:position pos:line="12" pos:column="25"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="14" pos:column="5">subscriber_threads<pos:position pos:line="14" pos:column="23"/></name> <operator pos:line="14" pos:column="24">=<pos:position pos:line="14" pos:column="25"/></operator> <name pos:line="14" pos:column="26">tmp<pos:position pos:line="14" pos:column="29"/></name></expr>;<pos:position pos:line="14" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="15" pos:column="5">tmp<pos:position pos:line="15" pos:column="8"/></name> <operator pos:line="15" pos:column="9">=<pos:position pos:line="15" pos:column="10"/></operator> <name pos:line="15" pos:column="11">subscriber_threads<pos:position pos:line="15" pos:column="29"/></name> <operator pos:line="15" pos:column="30">+<pos:position pos:line="15" pos:column="31"/></operator> <name pos:line="15" pos:column="32">subscriber_threads_num<pos:position pos:line="15" pos:column="54"/></name></expr>;<pos:position pos:line="15" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">memset<pos:position pos:line="16" pos:column="11"/></name> <argument_list pos:line="16" pos:column="12">(<argument><expr><name pos:line="16" pos:column="13">tmp<pos:position pos:line="16" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="18">0<pos:position pos:line="16" pos:column="19"/></literal></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="21">sizeof <argument_list pos:line="16" pos:column="28">(<argument><expr><operator pos:line="16" pos:column="29">*<pos:position pos:line="16" pos:column="30"/></operator><name pos:line="16" pos:column="30">tmp<pos:position pos:line="16" pos:column="33"/></name></expr></argument>)<pos:position pos:line="16" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><name pos:line="18" pos:column="5">status<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <call><name pos:line="18" pos:column="14">pthread_create<pos:position pos:line="18" pos:column="28"/></name> <argument_list pos:line="18" pos:column="29">(<argument><expr><name pos:line="18" pos:column="30">tmp<pos:position pos:line="18" pos:column="33"/></name></expr></argument>, <comment type="block" pos:line="18" pos:column="35">/* attr = */</comment> <argument><expr><name pos:line="18" pos:column="48">NULL<pos:position pos:line="18" pos:column="52"/></name></expr></argument>,
            <argument><expr><name pos:line="19" pos:column="13">camqp_subscribe_thread<pos:position pos:line="19" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="37">conf<pos:position pos:line="19" pos:column="41"/></name></expr></argument>)<pos:position pos:line="19" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="43"/></expr_stmt>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">status<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">!=<pos:position pos:line="20" pos:column="18"/></operator> <literal type="number" pos:line="20" pos:column="19">0<pos:position pos:line="20" pos:column="20"/></literal></expr>)<pos:position pos:line="20" pos:column="21"/></condition><then pos:line="20" pos:column="21">
    <block pos:line="21" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="22" pos:column="9">char<pos:position pos:line="22" pos:column="13"/></name></type> <name><name pos:line="22" pos:column="14">errbuf<pos:position pos:line="22" pos:column="20"/></name><index pos:line="22" pos:column="20">[<expr><literal type="number" pos:line="22" pos:column="21">1024<pos:position pos:line="22" pos:column="25"/></literal></expr>]<pos:position pos:line="22" pos:column="26"/></index></name></decl>;<pos:position pos:line="22" pos:column="27"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">ERROR<pos:position pos:line="23" pos:column="14"/></name> <argument_list pos:line="23" pos:column="15">(<argument><expr><literal type="string" pos:line="23" pos:column="16">"amqp plugin: pthread_create failed: %s"<pos:position pos:line="23" pos:column="56"/></literal></expr></argument>,
                <argument><expr><call><name pos:line="24" pos:column="17">sstrerror<pos:position pos:line="24" pos:column="26"/></name> <argument_list pos:line="24" pos:column="27">(<argument><expr><name pos:line="24" pos:column="28">status<pos:position pos:line="24" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="36">errbuf<pos:position pos:line="24" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="44">sizeof <argument_list pos:line="24" pos:column="51">(<argument><expr><name pos:line="24" pos:column="52">errbuf<pos:position pos:line="24" pos:column="58"/></name></expr></argument>)<pos:position pos:line="24" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">camqp_config_free<pos:position pos:line="25" pos:column="26"/></name> <argument_list pos:line="25" pos:column="27">(<argument><expr><name pos:line="25" pos:column="28">conf<pos:position pos:line="25" pos:column="32"/></name></expr></argument>)<pos:position pos:line="25" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="34"/></expr_stmt>
        <return pos:line="26" pos:column="9">return <expr><operator pos:line="26" pos:column="16">(<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="17">status<pos:position pos:line="26" pos:column="23"/></name><operator pos:line="26" pos:column="23">)<pos:position pos:line="26" pos:column="24"/></operator></expr>;<pos:position pos:line="26" pos:column="25"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="29" pos:column="5">subscriber_threads_num<pos:position pos:line="29" pos:column="27"/></name><operator pos:line="29" pos:column="27">++<pos:position pos:line="29" pos:column="29"/></operator></expr>;<pos:position pos:line="29" pos:column="30"/></expr_stmt>

    <return pos:line="31" pos:column="5">return <expr><operator pos:line="31" pos:column="12">(<pos:position pos:line="31" pos:column="13"/></operator><literal type="number" pos:line="31" pos:column="13">0<pos:position pos:line="31" pos:column="14"/></literal><operator pos:line="31" pos:column="14">)<pos:position pos:line="31" pos:column="15"/></operator></expr>;<pos:position pos:line="31" pos:column="16"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

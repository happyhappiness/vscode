<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2382_collectd-5.6.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">size_t<pos:position pos:line="1" pos:column="7"/></name></type> <name pos:line="1" pos:column="8">strstripnewline<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">char<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">buffer<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">size_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">buffer_len<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><call><name pos:line="3" pos:column="29">strlen<pos:position pos:line="3" pos:column="35"/></name> <argument_list pos:line="3" pos:column="36">(<argument><expr><name pos:line="3" pos:column="37">buffer<pos:position pos:line="3" pos:column="43"/></name></expr></argument>)<pos:position pos:line="3" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="45"/></decl_stmt>

	<while pos:line="5" pos:column="9">while <condition pos:line="5" pos:column="15">(<expr><name pos:line="5" pos:column="16">buffer_len<pos:position pos:line="5" pos:column="26"/></name> <operator pos:line="5" pos:column="27">&gt;<pos:position pos:line="5" pos:column="31"/></operator> <literal type="number" pos:line="5" pos:column="29">0<pos:position pos:line="5" pos:column="30"/></literal></expr>)<pos:position pos:line="5" pos:column="31"/></condition>
	<block pos:line="6" pos:column="9">{
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><operator pos:line="7" pos:column="21">(<pos:position pos:line="7" pos:column="22"/></operator><name><name pos:line="7" pos:column="22">buffer<pos:position pos:line="7" pos:column="28"/></name><index pos:line="7" pos:column="28">[<expr><name pos:line="7" pos:column="29">buffer_len<pos:position pos:line="7" pos:column="39"/></name> <operator pos:line="7" pos:column="40">-<pos:position pos:line="7" pos:column="41"/></operator> <literal type="number" pos:line="7" pos:column="42">1<pos:position pos:line="7" pos:column="43"/></literal></expr>]<pos:position pos:line="7" pos:column="44"/></index></name> <operator pos:line="7" pos:column="45">!=<pos:position pos:line="7" pos:column="47"/></operator> <literal type="char" pos:line="7" pos:column="48">'\n'<pos:position pos:line="7" pos:column="52"/></literal><operator pos:line="7" pos:column="52">)<pos:position pos:line="7" pos:column="53"/></operator>
				<operator pos:line="8" pos:column="33">&amp;&amp;<pos:position pos:line="8" pos:column="43"/></operator> <operator pos:line="8" pos:column="36">(<pos:position pos:line="8" pos:column="37"/></operator><name><name pos:line="8" pos:column="37">buffer<pos:position pos:line="8" pos:column="43"/></name><index pos:line="8" pos:column="43">[<expr><name pos:line="8" pos:column="44">buffer_len<pos:position pos:line="8" pos:column="54"/></name> <operator pos:line="8" pos:column="55">-<pos:position pos:line="8" pos:column="56"/></operator> <literal type="number" pos:line="8" pos:column="57">1<pos:position pos:line="8" pos:column="58"/></literal></expr>]<pos:position pos:line="8" pos:column="59"/></index></name> <operator pos:line="8" pos:column="60">!=<pos:position pos:line="8" pos:column="62"/></operator> <literal type="char" pos:line="8" pos:column="63">'\r'<pos:position pos:line="8" pos:column="67"/></literal><operator pos:line="8" pos:column="67">)<pos:position pos:line="8" pos:column="68"/></operator></expr>)<pos:position pos:line="8" pos:column="69"/></condition><then pos:line="8" pos:column="69">
			<block type="pseudo"><break pos:line="9" pos:column="25">break;<pos:position pos:line="9" pos:column="31"/></break></block></then></if>
		<expr_stmt><expr><name pos:line="10" pos:column="17">buffer_len<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">--<pos:position pos:line="10" pos:column="29"/></operator></expr>;<pos:position pos:line="10" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="11" pos:column="17">buffer<pos:position pos:line="11" pos:column="23"/></name><index pos:line="11" pos:column="23">[<expr><name pos:line="11" pos:column="24">buffer_len<pos:position pos:line="11" pos:column="34"/></name></expr>]<pos:position pos:line="11" pos:column="35"/></index></name> <operator pos:line="11" pos:column="36">=<pos:position pos:line="11" pos:column="37"/></operator> <literal type="number" pos:line="11" pos:column="38">0<pos:position pos:line="11" pos:column="39"/></literal></expr>;<pos:position pos:line="11" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="12" pos:column="10"/></block></while>

	<return pos:line="14" pos:column="9">return <expr><operator pos:line="14" pos:column="16">(<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="17">buffer_len<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">)<pos:position pos:line="14" pos:column="28"/></operator></expr>;<pos:position pos:line="14" pos:column="29"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_860_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">email_read<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">void<pos:position pos:line="1" pos:column="27"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="28"/></parameter_list> <block pos:line="1" pos:column="29">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">double<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">score_old<pos:position pos:line="2" pos:column="19"/></name></decl>;<pos:position pos:line="2" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">score_count_old<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">disabled<pos:position pos:line="5" pos:column="15"/></name></expr>)<pos:position pos:line="5" pos:column="16"/></condition><then pos:line="5" pos:column="16">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><operator pos:line="6" pos:column="12">(<pos:position pos:line="6" pos:column="13"/></operator><operator pos:line="6" pos:column="13">-<pos:position pos:line="6" pos:column="14"/></operator><literal type="number" pos:line="6" pos:column="14">1<pos:position pos:line="6" pos:column="15"/></literal><operator pos:line="6" pos:column="15">)<pos:position pos:line="6" pos:column="16"/></operator></expr>;<pos:position pos:line="6" pos:column="17"/></return></block></then></if>

  <comment type="block" pos:line="8" pos:column="3">/* email count */</comment>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">pthread_mutex_lock<pos:position pos:line="9" pos:column="21"/></name><argument_list pos:line="9" pos:column="21">(<argument><expr><operator pos:line="9" pos:column="22">&amp;<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="23">count_mutex<pos:position pos:line="9" pos:column="34"/></name></expr></argument>)<pos:position pos:line="9" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="11" pos:column="3">copy_type_list<pos:position pos:line="11" pos:column="17"/></name><argument_list pos:line="11" pos:column="17">(<argument><expr><operator pos:line="11" pos:column="18">&amp;<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="19">list_count<pos:position pos:line="11" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="31">&amp;<pos:position pos:line="11" pos:column="36"/></operator><name pos:line="11" pos:column="32">list_count_copy<pos:position pos:line="11" pos:column="47"/></name></expr></argument>)<pos:position pos:line="11" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="49"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="13" pos:column="3">pthread_mutex_unlock<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><operator pos:line="13" pos:column="24">&amp;<pos:position pos:line="13" pos:column="29"/></operator><name pos:line="13" pos:column="25">count_mutex<pos:position pos:line="13" pos:column="36"/></name></expr></argument>)<pos:position pos:line="13" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="38"/></expr_stmt>

  <for pos:line="15" pos:column="3">for <control pos:line="15" pos:column="7">(<init><decl><type><name pos:line="15" pos:column="8">type_t<pos:position pos:line="15" pos:column="14"/></name> <modifier pos:line="15" pos:column="15">*<pos:position pos:line="15" pos:column="16"/></modifier></type><name pos:line="15" pos:column="16">ptr<pos:position pos:line="15" pos:column="19"/></name> <init pos:line="15" pos:column="20">= <expr><name><name pos:line="15" pos:column="22">list_count_copy<pos:position pos:line="15" pos:column="37"/></name><operator pos:line="15" pos:column="37">.<pos:position pos:line="15" pos:column="38"/></operator><name pos:line="15" pos:column="38">head<pos:position pos:line="15" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="15" pos:column="43"/></init> <condition><expr><name pos:line="15" pos:column="44">NULL<pos:position pos:line="15" pos:column="48"/></name> <operator pos:line="15" pos:column="49">!=<pos:position pos:line="15" pos:column="51"/></operator> <name pos:line="15" pos:column="52">ptr<pos:position pos:line="15" pos:column="55"/></name></expr>;<pos:position pos:line="15" pos:column="56"/></condition> <incr><expr><name pos:line="15" pos:column="57">ptr<pos:position pos:line="15" pos:column="60"/></name> <operator pos:line="15" pos:column="61">=<pos:position pos:line="15" pos:column="62"/></operator> <name><name pos:line="15" pos:column="63">ptr<pos:position pos:line="15" pos:column="66"/></name><operator pos:line="15" pos:column="66">-&gt;<pos:position pos:line="15" pos:column="71"/></operator><name pos:line="15" pos:column="68">next<pos:position pos:line="15" pos:column="72"/></name></name></expr></incr>)<pos:position pos:line="15" pos:column="73"/></control> <block pos:line="15" pos:column="74">{
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">email_submit<pos:position pos:line="16" pos:column="17"/></name><argument_list pos:line="16" pos:column="17">(<argument><expr><literal type="string" pos:line="16" pos:column="18">"email_count"<pos:position pos:line="16" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="33">ptr<pos:position pos:line="16" pos:column="36"/></name><operator pos:line="16" pos:column="36">-&gt;<pos:position pos:line="16" pos:column="41"/></operator><name pos:line="16" pos:column="38">name<pos:position pos:line="16" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="44">ptr<pos:position pos:line="16" pos:column="47"/></name><operator pos:line="16" pos:column="47">-&gt;<pos:position pos:line="16" pos:column="52"/></operator><name pos:line="16" pos:column="49">value<pos:position pos:line="16" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="56"/></expr_stmt>
  }<pos:position pos:line="17" pos:column="4"/></block></for>

  <comment type="block" pos:line="19" pos:column="3">/* email size */</comment>
  <expr_stmt><expr><call><name pos:line="20" pos:column="3">pthread_mutex_lock<pos:position pos:line="20" pos:column="21"/></name><argument_list pos:line="20" pos:column="21">(<argument><expr><operator pos:line="20" pos:column="22">&amp;<pos:position pos:line="20" pos:column="27"/></operator><name pos:line="20" pos:column="23">size_mutex<pos:position pos:line="20" pos:column="33"/></name></expr></argument>)<pos:position pos:line="20" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="35"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="22" pos:column="3">copy_type_list<pos:position pos:line="22" pos:column="17"/></name><argument_list pos:line="22" pos:column="17">(<argument><expr><operator pos:line="22" pos:column="18">&amp;<pos:position pos:line="22" pos:column="23"/></operator><name pos:line="22" pos:column="19">list_size<pos:position pos:line="22" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="30">&amp;<pos:position pos:line="22" pos:column="35"/></operator><name pos:line="22" pos:column="31">list_size_copy<pos:position pos:line="22" pos:column="45"/></name></expr></argument>)<pos:position pos:line="22" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="47"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="24" pos:column="3">pthread_mutex_unlock<pos:position pos:line="24" pos:column="23"/></name><argument_list pos:line="24" pos:column="23">(<argument><expr><operator pos:line="24" pos:column="24">&amp;<pos:position pos:line="24" pos:column="29"/></operator><name pos:line="24" pos:column="25">size_mutex<pos:position pos:line="24" pos:column="35"/></name></expr></argument>)<pos:position pos:line="24" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="37"/></expr_stmt>

  <for pos:line="26" pos:column="3">for <control pos:line="26" pos:column="7">(<init><decl><type><name pos:line="26" pos:column="8">type_t<pos:position pos:line="26" pos:column="14"/></name> <modifier pos:line="26" pos:column="15">*<pos:position pos:line="26" pos:column="16"/></modifier></type><name pos:line="26" pos:column="16">ptr<pos:position pos:line="26" pos:column="19"/></name> <init pos:line="26" pos:column="20">= <expr><name><name pos:line="26" pos:column="22">list_size_copy<pos:position pos:line="26" pos:column="36"/></name><operator pos:line="26" pos:column="36">.<pos:position pos:line="26" pos:column="37"/></operator><name pos:line="26" pos:column="37">head<pos:position pos:line="26" pos:column="41"/></name></name></expr></init></decl>;<pos:position pos:line="26" pos:column="42"/></init> <condition><expr><name pos:line="26" pos:column="43">NULL<pos:position pos:line="26" pos:column="47"/></name> <operator pos:line="26" pos:column="48">!=<pos:position pos:line="26" pos:column="50"/></operator> <name pos:line="26" pos:column="51">ptr<pos:position pos:line="26" pos:column="54"/></name></expr>;<pos:position pos:line="26" pos:column="55"/></condition> <incr><expr><name pos:line="26" pos:column="56">ptr<pos:position pos:line="26" pos:column="59"/></name> <operator pos:line="26" pos:column="60">=<pos:position pos:line="26" pos:column="61"/></operator> <name><name pos:line="26" pos:column="62">ptr<pos:position pos:line="26" pos:column="65"/></name><operator pos:line="26" pos:column="65">-&gt;<pos:position pos:line="26" pos:column="70"/></operator><name pos:line="26" pos:column="67">next<pos:position pos:line="26" pos:column="71"/></name></name></expr></incr>)<pos:position pos:line="26" pos:column="72"/></control> <block pos:line="26" pos:column="73">{
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">email_submit<pos:position pos:line="27" pos:column="17"/></name><argument_list pos:line="27" pos:column="17">(<argument><expr><literal type="string" pos:line="27" pos:column="18">"email_size"<pos:position pos:line="27" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="32">ptr<pos:position pos:line="27" pos:column="35"/></name><operator pos:line="27" pos:column="35">-&gt;<pos:position pos:line="27" pos:column="40"/></operator><name pos:line="27" pos:column="37">name<pos:position pos:line="27" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="43">ptr<pos:position pos:line="27" pos:column="46"/></name><operator pos:line="27" pos:column="46">-&gt;<pos:position pos:line="27" pos:column="51"/></operator><name pos:line="27" pos:column="48">value<pos:position pos:line="27" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="55"/></expr_stmt>
  }<pos:position pos:line="28" pos:column="4"/></block></for>

  <comment type="block" pos:line="30" pos:column="3">/* spam score */</comment>
  <expr_stmt><expr><call><name pos:line="31" pos:column="3">pthread_mutex_lock<pos:position pos:line="31" pos:column="21"/></name><argument_list pos:line="31" pos:column="21">(<argument><expr><operator pos:line="31" pos:column="22">&amp;<pos:position pos:line="31" pos:column="27"/></operator><name pos:line="31" pos:column="23">score_mutex<pos:position pos:line="31" pos:column="34"/></name></expr></argument>)<pos:position pos:line="31" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><name pos:line="33" pos:column="3">score_old<pos:position pos:line="33" pos:column="12"/></name> <operator pos:line="33" pos:column="13">=<pos:position pos:line="33" pos:column="14"/></operator> <name pos:line="33" pos:column="15">score<pos:position pos:line="33" pos:column="20"/></name></expr>;<pos:position pos:line="33" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name pos:line="34" pos:column="3">score_count_old<pos:position pos:line="34" pos:column="18"/></name> <operator pos:line="34" pos:column="19">=<pos:position pos:line="34" pos:column="20"/></operator> <name pos:line="34" pos:column="21">score_count<pos:position pos:line="34" pos:column="32"/></name></expr>;<pos:position pos:line="34" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><name pos:line="35" pos:column="3">score<pos:position pos:line="35" pos:column="8"/></name> <operator pos:line="35" pos:column="9">=<pos:position pos:line="35" pos:column="10"/></operator> <literal type="number" pos:line="35" pos:column="11">0.0<pos:position pos:line="35" pos:column="14"/></literal></expr>;<pos:position pos:line="35" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><name pos:line="36" pos:column="3">score_count<pos:position pos:line="36" pos:column="14"/></name> <operator pos:line="36" pos:column="15">=<pos:position pos:line="36" pos:column="16"/></operator> <literal type="number" pos:line="36" pos:column="17">0<pos:position pos:line="36" pos:column="18"/></literal></expr>;<pos:position pos:line="36" pos:column="19"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="38" pos:column="3">pthread_mutex_unlock<pos:position pos:line="38" pos:column="23"/></name><argument_list pos:line="38" pos:column="23">(<argument><expr><operator pos:line="38" pos:column="24">&amp;<pos:position pos:line="38" pos:column="29"/></operator><name pos:line="38" pos:column="25">score_mutex<pos:position pos:line="38" pos:column="36"/></name></expr></argument>)<pos:position pos:line="38" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="38"/></expr_stmt>

  <if pos:line="40" pos:column="3">if <condition pos:line="40" pos:column="6">(<expr><name pos:line="40" pos:column="7">score_count_old<pos:position pos:line="40" pos:column="22"/></name> <operator pos:line="40" pos:column="23">&gt;<pos:position pos:line="40" pos:column="27"/></operator> <literal type="number" pos:line="40" pos:column="25">0<pos:position pos:line="40" pos:column="26"/></literal></expr>)<pos:position pos:line="40" pos:column="27"/></condition><then pos:line="40" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="5">email_submit<pos:position pos:line="41" pos:column="17"/></name><argument_list pos:line="41" pos:column="17">(<argument><expr><literal type="string" pos:line="41" pos:column="18">"spam_score"<pos:position pos:line="41" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="32">""<pos:position pos:line="41" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="36">score_old<pos:position pos:line="41" pos:column="45"/></name></expr></argument>)<pos:position pos:line="41" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="47"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="43" pos:column="3">/* spam checks */</comment>
  <expr_stmt><expr><call><name pos:line="44" pos:column="3">pthread_mutex_lock<pos:position pos:line="44" pos:column="21"/></name><argument_list pos:line="44" pos:column="21">(<argument><expr><operator pos:line="44" pos:column="22">&amp;<pos:position pos:line="44" pos:column="27"/></operator><name pos:line="44" pos:column="23">check_mutex<pos:position pos:line="44" pos:column="34"/></name></expr></argument>)<pos:position pos:line="44" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="46" pos:column="3">copy_type_list<pos:position pos:line="46" pos:column="17"/></name><argument_list pos:line="46" pos:column="17">(<argument><expr><operator pos:line="46" pos:column="18">&amp;<pos:position pos:line="46" pos:column="23"/></operator><name pos:line="46" pos:column="19">list_check<pos:position pos:line="46" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="31">&amp;<pos:position pos:line="46" pos:column="36"/></operator><name pos:line="46" pos:column="32">list_check_copy<pos:position pos:line="46" pos:column="47"/></name></expr></argument>)<pos:position pos:line="46" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="49"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="48" pos:column="3">pthread_mutex_unlock<pos:position pos:line="48" pos:column="23"/></name><argument_list pos:line="48" pos:column="23">(<argument><expr><operator pos:line="48" pos:column="24">&amp;<pos:position pos:line="48" pos:column="29"/></operator><name pos:line="48" pos:column="25">check_mutex<pos:position pos:line="48" pos:column="36"/></name></expr></argument>)<pos:position pos:line="48" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="38"/></expr_stmt>

  <for pos:line="50" pos:column="3">for <control pos:line="50" pos:column="7">(<init><decl><type><name pos:line="50" pos:column="8">type_t<pos:position pos:line="50" pos:column="14"/></name> <modifier pos:line="50" pos:column="15">*<pos:position pos:line="50" pos:column="16"/></modifier></type><name pos:line="50" pos:column="16">ptr<pos:position pos:line="50" pos:column="19"/></name> <init pos:line="50" pos:column="20">= <expr><name><name pos:line="50" pos:column="22">list_check_copy<pos:position pos:line="50" pos:column="37"/></name><operator pos:line="50" pos:column="37">.<pos:position pos:line="50" pos:column="38"/></operator><name pos:line="50" pos:column="38">head<pos:position pos:line="50" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="50" pos:column="43"/></init> <condition><expr><name pos:line="50" pos:column="44">NULL<pos:position pos:line="50" pos:column="48"/></name> <operator pos:line="50" pos:column="49">!=<pos:position pos:line="50" pos:column="51"/></operator> <name pos:line="50" pos:column="52">ptr<pos:position pos:line="50" pos:column="55"/></name></expr>;<pos:position pos:line="50" pos:column="56"/></condition> <incr><expr><name pos:line="50" pos:column="57">ptr<pos:position pos:line="50" pos:column="60"/></name> <operator pos:line="50" pos:column="61">=<pos:position pos:line="50" pos:column="62"/></operator> <name><name pos:line="50" pos:column="63">ptr<pos:position pos:line="50" pos:column="66"/></name><operator pos:line="50" pos:column="66">-&gt;<pos:position pos:line="50" pos:column="71"/></operator><name pos:line="50" pos:column="68">next<pos:position pos:line="50" pos:column="72"/></name></name></expr></incr>)<pos:position pos:line="50" pos:column="73"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="5">email_submit<pos:position pos:line="51" pos:column="17"/></name><argument_list pos:line="51" pos:column="17">(<argument><expr><literal type="string" pos:line="51" pos:column="18">"spam_check"<pos:position pos:line="51" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="32">ptr<pos:position pos:line="51" pos:column="35"/></name><operator pos:line="51" pos:column="35">-&gt;<pos:position pos:line="51" pos:column="40"/></operator><name pos:line="51" pos:column="37">name<pos:position pos:line="51" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="43">ptr<pos:position pos:line="51" pos:column="46"/></name><operator pos:line="51" pos:column="46">-&gt;<pos:position pos:line="51" pos:column="51"/></operator><name pos:line="51" pos:column="48">value<pos:position pos:line="51" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="55"/></expr_stmt></block></for>

  <return pos:line="53" pos:column="3">return <expr><operator pos:line="53" pos:column="10">(<pos:position pos:line="53" pos:column="11"/></operator><literal type="number" pos:line="53" pos:column="11">0<pos:position pos:line="53" pos:column="12"/></literal><operator pos:line="53" pos:column="12">)<pos:position pos:line="53" pos:column="13"/></operator></expr>;<pos:position pos:line="53" pos:column="14"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

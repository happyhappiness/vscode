<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2013_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ts_invoke_counter<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">data_set_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">ds<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">value_list_t<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">vl<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="71">/* {{{ */</comment>
		<parameter><decl><type><name pos:line="2" pos:column="17">ts_data_t<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type><name pos:line="2" pos:column="28">data<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="34">int<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">dsrc_index<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="49"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">uint64_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">curr_counter<pos:position pos:line="4" pos:column="30"/></name></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">status<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">failure<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>

	<comment type="block" pos:line="8" pos:column="9">/* Required meta data */</comment>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">uint64_t<pos:position pos:line="9" pos:column="17"/></name></type> <name pos:line="9" pos:column="18">prev_counter<pos:position pos:line="9" pos:column="30"/></name></decl>;<pos:position pos:line="9" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name></type> <name><name pos:line="10" pos:column="14">key_prev_counter<pos:position pos:line="10" pos:column="30"/></name><index pos:line="10" pos:column="30">[<expr><literal type="number" pos:line="10" pos:column="31">128<pos:position pos:line="10" pos:column="34"/></literal></expr>]<pos:position pos:line="10" pos:column="35"/></index></name></decl>;<pos:position pos:line="10" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">uint64_t<pos:position pos:line="11" pos:column="17"/></name></type> <name pos:line="11" pos:column="18">int_counter<pos:position pos:line="11" pos:column="29"/></name></decl>;<pos:position pos:line="11" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">char<pos:position pos:line="12" pos:column="13"/></name></type> <name><name pos:line="12" pos:column="14">key_int_counter<pos:position pos:line="12" pos:column="29"/></name><index pos:line="12" pos:column="29">[<expr><literal type="number" pos:line="12" pos:column="30">128<pos:position pos:line="12" pos:column="33"/></literal></expr>]<pos:position pos:line="12" pos:column="34"/></index></name></decl>;<pos:position pos:line="12" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">double<pos:position pos:line="13" pos:column="15"/></name></type> <name pos:line="13" pos:column="16">int_fraction<pos:position pos:line="13" pos:column="28"/></name></decl>;<pos:position pos:line="13" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">char<pos:position pos:line="14" pos:column="13"/></name></type> <name><name pos:line="14" pos:column="14">key_int_fraction<pos:position pos:line="14" pos:column="30"/></name><index pos:line="14" pos:column="30">[<expr><literal type="number" pos:line="14" pos:column="31">128<pos:position pos:line="14" pos:column="34"/></literal></expr>]<pos:position pos:line="14" pos:column="35"/></index></name></decl>;<pos:position pos:line="14" pos:column="36"/></decl_stmt>

	<expr_stmt><expr><name pos:line="16" pos:column="9">curr_counter<pos:position pos:line="16" pos:column="21"/></name> <operator pos:line="16" pos:column="22">=<pos:position pos:line="16" pos:column="23"/></operator> <operator pos:line="16" pos:column="24">(<pos:position pos:line="16" pos:column="25"/></operator><name pos:line="16" pos:column="25">uint64_t<pos:position pos:line="16" pos:column="33"/></name><operator pos:line="16" pos:column="33">)<pos:position pos:line="16" pos:column="34"/></operator> <name><name pos:line="16" pos:column="35">vl<pos:position pos:line="16" pos:column="37"/></name><operator pos:line="16" pos:column="37">-&gt;<pos:position pos:line="16" pos:column="42"/></operator><name pos:line="16" pos:column="39">values<pos:position pos:line="16" pos:column="45"/></name><index pos:line="16" pos:column="45">[<expr><name pos:line="16" pos:column="46">dsrc_index<pos:position pos:line="16" pos:column="56"/></name></expr>]<pos:position pos:line="16" pos:column="57"/></index></name><operator pos:line="16" pos:column="57">.<pos:position pos:line="16" pos:column="58"/></operator><name pos:line="16" pos:column="58">counter<pos:position pos:line="16" pos:column="65"/></name></expr>;<pos:position pos:line="16" pos:column="66"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="18" pos:column="9">ssnprintf<pos:position pos:line="18" pos:column="18"/></name> <argument_list pos:line="18" pos:column="19">(<argument><expr><name pos:line="18" pos:column="20">key_prev_counter<pos:position pos:line="18" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="38">sizeof <argument_list pos:line="18" pos:column="45">(<argument><expr><name pos:line="18" pos:column="46">key_prev_counter<pos:position pos:line="18" pos:column="62"/></name></expr></argument>)<pos:position pos:line="18" pos:column="63"/></argument_list></sizeof></expr></argument>,
			<argument><expr><literal type="string" pos:line="19" pos:column="25">"target_scale[%p,%i]:prev_counter"<pos:position pos:line="19" pos:column="59"/></literal></expr></argument>,
			<argument><expr><operator pos:line="20" pos:column="25">(<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="26">void<pos:position pos:line="20" pos:column="30"/></name> <operator pos:line="20" pos:column="31">*<pos:position pos:line="20" pos:column="32"/></operator><operator pos:line="20" pos:column="32">)<pos:position pos:line="20" pos:column="33"/></operator> <name pos:line="20" pos:column="34">data<pos:position pos:line="20" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="40">dsrc_index<pos:position pos:line="20" pos:column="50"/></name></expr></argument>)<pos:position pos:line="20" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="21" pos:column="9">ssnprintf<pos:position pos:line="21" pos:column="18"/></name> <argument_list pos:line="21" pos:column="19">(<argument><expr><name pos:line="21" pos:column="20">key_int_counter<pos:position pos:line="21" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="37">sizeof <argument_list pos:line="21" pos:column="44">(<argument><expr><name pos:line="21" pos:column="45">key_int_counter<pos:position pos:line="21" pos:column="60"/></name></expr></argument>)<pos:position pos:line="21" pos:column="61"/></argument_list></sizeof></expr></argument>,
			<argument><expr><literal type="string" pos:line="22" pos:column="25">"target_scale[%p,%i]:int_counter"<pos:position pos:line="22" pos:column="58"/></literal></expr></argument>,
			<argument><expr><operator pos:line="23" pos:column="25">(<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="26">void<pos:position pos:line="23" pos:column="30"/></name> <operator pos:line="23" pos:column="31">*<pos:position pos:line="23" pos:column="32"/></operator><operator pos:line="23" pos:column="32">)<pos:position pos:line="23" pos:column="33"/></operator> <name pos:line="23" pos:column="34">data<pos:position pos:line="23" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="40">dsrc_index<pos:position pos:line="23" pos:column="50"/></name></expr></argument>)<pos:position pos:line="23" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">ssnprintf<pos:position pos:line="24" pos:column="18"/></name> <argument_list pos:line="24" pos:column="19">(<argument><expr><name pos:line="24" pos:column="20">key_int_fraction<pos:position pos:line="24" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="38">sizeof <argument_list pos:line="24" pos:column="45">(<argument><expr><name pos:line="24" pos:column="46">key_int_fraction<pos:position pos:line="24" pos:column="62"/></name></expr></argument>)<pos:position pos:line="24" pos:column="63"/></argument_list></sizeof></expr></argument>,
			<argument><expr><literal type="string" pos:line="25" pos:column="25">"target_scale[%p,%i]:int_fraction"<pos:position pos:line="25" pos:column="59"/></literal></expr></argument>,
			<argument><expr><operator pos:line="26" pos:column="25">(<pos:position pos:line="26" pos:column="26"/></operator><name pos:line="26" pos:column="26">void<pos:position pos:line="26" pos:column="30"/></name> <operator pos:line="26" pos:column="31">*<pos:position pos:line="26" pos:column="32"/></operator><operator pos:line="26" pos:column="32">)<pos:position pos:line="26" pos:column="33"/></operator> <name pos:line="26" pos:column="34">data<pos:position pos:line="26" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="40">dsrc_index<pos:position pos:line="26" pos:column="50"/></name></expr></argument>)<pos:position pos:line="26" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="52"/></expr_stmt>

	<expr_stmt><expr><name pos:line="28" pos:column="9">prev_counter<pos:position pos:line="28" pos:column="21"/></name> <operator pos:line="28" pos:column="22">=<pos:position pos:line="28" pos:column="23"/></operator> <name pos:line="28" pos:column="24">curr_counter<pos:position pos:line="28" pos:column="36"/></name></expr>;<pos:position pos:line="28" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name pos:line="29" pos:column="9">int_counter<pos:position pos:line="29" pos:column="20"/></name> <operator pos:line="29" pos:column="21">=<pos:position pos:line="29" pos:column="22"/></operator> <literal type="number" pos:line="29" pos:column="23">0<pos:position pos:line="29" pos:column="24"/></literal></expr>;<pos:position pos:line="29" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name pos:line="30" pos:column="9">int_fraction<pos:position pos:line="30" pos:column="21"/></name> <operator pos:line="30" pos:column="22">=<pos:position pos:line="30" pos:column="23"/></operator> <literal type="number" pos:line="30" pos:column="24">0.0<pos:position pos:line="30" pos:column="27"/></literal></expr>;<pos:position pos:line="30" pos:column="28"/></expr_stmt>

	<comment type="block" pos:line="32" pos:column="9">/* Query the meta data */</comment>
	<expr_stmt><expr><name pos:line="33" pos:column="9">failure<pos:position pos:line="33" pos:column="16"/></name> <operator pos:line="33" pos:column="17">=<pos:position pos:line="33" pos:column="18"/></operator> <literal type="number" pos:line="33" pos:column="19">0<pos:position pos:line="33" pos:column="20"/></literal></expr>;<pos:position pos:line="33" pos:column="21"/></expr_stmt>

	<expr_stmt><expr><name pos:line="35" pos:column="9">status<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">=<pos:position pos:line="35" pos:column="17"/></operator> <call><name pos:line="35" pos:column="18">uc_meta_data_get_unsigned_int<pos:position pos:line="35" pos:column="47"/></name> <argument_list pos:line="35" pos:column="48">(<argument><expr><name pos:line="35" pos:column="49">vl<pos:position pos:line="35" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="53">key_prev_counter<pos:position pos:line="35" pos:column="69"/></name></expr></argument>,
			<argument><expr><operator pos:line="36" pos:column="25">&amp;<pos:position pos:line="36" pos:column="30"/></operator><name pos:line="36" pos:column="26">prev_counter<pos:position pos:line="36" pos:column="38"/></name></expr></argument>)<pos:position pos:line="36" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="40"/></expr_stmt>
	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name pos:line="37" pos:column="13">status<pos:position pos:line="37" pos:column="19"/></name> <operator pos:line="37" pos:column="20">!=<pos:position pos:line="37" pos:column="22"/></operator> <literal type="number" pos:line="37" pos:column="23">0<pos:position pos:line="37" pos:column="24"/></literal></expr>)<pos:position pos:line="37" pos:column="25"/></condition><then pos:line="37" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="17">failure<pos:position pos:line="38" pos:column="24"/></name><operator pos:line="38" pos:column="24">++<pos:position pos:line="38" pos:column="26"/></operator></expr>;<pos:position pos:line="38" pos:column="27"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="40" pos:column="9">status<pos:position pos:line="40" pos:column="15"/></name> <operator pos:line="40" pos:column="16">=<pos:position pos:line="40" pos:column="17"/></operator> <call><name pos:line="40" pos:column="18">uc_meta_data_get_unsigned_int<pos:position pos:line="40" pos:column="47"/></name> <argument_list pos:line="40" pos:column="48">(<argument><expr><name pos:line="40" pos:column="49">vl<pos:position pos:line="40" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="53">key_int_counter<pos:position pos:line="40" pos:column="68"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="70">&amp;<pos:position pos:line="40" pos:column="75"/></operator><name pos:line="40" pos:column="71">int_counter<pos:position pos:line="40" pos:column="82"/></name></expr></argument>)<pos:position pos:line="40" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="84"/></expr_stmt>
	<if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><name pos:line="41" pos:column="13">status<pos:position pos:line="41" pos:column="19"/></name> <operator pos:line="41" pos:column="20">!=<pos:position pos:line="41" pos:column="22"/></operator> <literal type="number" pos:line="41" pos:column="23">0<pos:position pos:line="41" pos:column="24"/></literal></expr>)<pos:position pos:line="41" pos:column="25"/></condition><then pos:line="41" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="17">failure<pos:position pos:line="42" pos:column="24"/></name><operator pos:line="42" pos:column="24">++<pos:position pos:line="42" pos:column="26"/></operator></expr>;<pos:position pos:line="42" pos:column="27"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="44" pos:column="9">status<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">=<pos:position pos:line="44" pos:column="17"/></operator> <call><name pos:line="44" pos:column="18">uc_meta_data_get_double<pos:position pos:line="44" pos:column="41"/></name> <argument_list pos:line="44" pos:column="42">(<argument><expr><name pos:line="44" pos:column="43">vl<pos:position pos:line="44" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="47">key_int_fraction<pos:position pos:line="44" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="65">&amp;<pos:position pos:line="44" pos:column="70"/></operator><name pos:line="44" pos:column="66">int_fraction<pos:position pos:line="44" pos:column="78"/></name></expr></argument>)<pos:position pos:line="44" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="80"/></expr_stmt>
	<if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><name pos:line="45" pos:column="13">status<pos:position pos:line="45" pos:column="19"/></name> <operator pos:line="45" pos:column="20">!=<pos:position pos:line="45" pos:column="22"/></operator> <literal type="number" pos:line="45" pos:column="23">0<pos:position pos:line="45" pos:column="24"/></literal></expr>)<pos:position pos:line="45" pos:column="25"/></condition><then pos:line="45" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><name pos:line="46" pos:column="17">failure<pos:position pos:line="46" pos:column="24"/></name><operator pos:line="46" pos:column="24">++<pos:position pos:line="46" pos:column="26"/></operator></expr>;<pos:position pos:line="46" pos:column="27"/></expr_stmt></block></then></if>

	<if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name pos:line="48" pos:column="13">failure<pos:position pos:line="48" pos:column="20"/></name> <operator pos:line="48" pos:column="21">==<pos:position pos:line="48" pos:column="23"/></operator> <literal type="number" pos:line="48" pos:column="24">0<pos:position pos:line="48" pos:column="25"/></literal></expr>)<pos:position pos:line="48" pos:column="26"/></condition><then pos:line="48" pos:column="26">
	<block pos:line="49" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="50" pos:column="17">uint64_t<pos:position pos:line="50" pos:column="25"/></name></type> <name pos:line="50" pos:column="26">difference<pos:position pos:line="50" pos:column="36"/></name></decl>;<pos:position pos:line="50" pos:column="37"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="51" pos:column="17">double<pos:position pos:line="51" pos:column="23"/></name></type> <name pos:line="51" pos:column="24">rate<pos:position pos:line="51" pos:column="28"/></name></decl>;<pos:position pos:line="51" pos:column="29"/></decl_stmt>

		<comment type="block" pos:line="53" pos:column="17">/* Calcualte the rate */</comment>
		<if pos:line="54" pos:column="17">if <condition pos:line="54" pos:column="20">(<expr><name pos:line="54" pos:column="21">prev_counter<pos:position pos:line="54" pos:column="33"/></name> <operator pos:line="54" pos:column="34">&gt;<pos:position pos:line="54" pos:column="38"/></operator> <name pos:line="54" pos:column="36">curr_counter<pos:position pos:line="54" pos:column="48"/></name></expr>)<pos:position pos:line="54" pos:column="49"/></condition><then pos:line="54" pos:column="49"> <comment type="block" pos:line="54" pos:column="50">/* =&gt; counter overflow */</comment>
		<block pos:line="55" pos:column="17">{
			<if pos:line="56" pos:column="25">if <condition pos:line="56" pos:column="28">(<expr><name pos:line="56" pos:column="29">prev_counter<pos:position pos:line="56" pos:column="41"/></name> <operator pos:line="56" pos:column="42">&lt;=<pos:position pos:line="56" pos:column="47"/></operator> <literal type="number" pos:line="56" pos:column="45">4294967295UL<pos:position pos:line="56" pos:column="57"/></literal></expr>)<pos:position pos:line="56" pos:column="58"/></condition><then pos:line="56" pos:column="58"> <comment type="block" pos:line="56" pos:column="59">/* 32 bit overflow */</comment>
				<block type="pseudo"><expr_stmt><expr><name pos:line="57" pos:column="33">difference<pos:position pos:line="57" pos:column="43"/></name> <operator pos:line="57" pos:column="44">=<pos:position pos:line="57" pos:column="45"/></operator> <operator pos:line="57" pos:column="46">(<pos:position pos:line="57" pos:column="47"/></operator><literal type="number" pos:line="57" pos:column="47">4294967295UL<pos:position pos:line="57" pos:column="59"/></literal> <operator pos:line="57" pos:column="60">-<pos:position pos:line="57" pos:column="61"/></operator> <name pos:line="57" pos:column="62">prev_counter<pos:position pos:line="57" pos:column="74"/></name><operator pos:line="57" pos:column="74">)<pos:position pos:line="57" pos:column="75"/></operator> <operator pos:line="57" pos:column="76">+<pos:position pos:line="57" pos:column="77"/></operator> <name pos:line="57" pos:column="78">curr_counter<pos:position pos:line="57" pos:column="90"/></name></expr>;<pos:position pos:line="57" pos:column="91"/></expr_stmt></block></then>
			<else pos:line="58" pos:column="25">else <comment type="block" pos:line="58" pos:column="30">/* 64 bit overflow */</comment>
				<block type="pseudo"><expr_stmt><expr><name pos:line="59" pos:column="33">difference<pos:position pos:line="59" pos:column="43"/></name> <operator pos:line="59" pos:column="44">=<pos:position pos:line="59" pos:column="45"/></operator> <operator pos:line="59" pos:column="46">(<pos:position pos:line="59" pos:column="47"/></operator><literal type="number" pos:line="59" pos:column="47">18446744073709551615ULL<pos:position pos:line="59" pos:column="70"/></literal> <operator pos:line="59" pos:column="71">-<pos:position pos:line="59" pos:column="72"/></operator> <name pos:line="59" pos:column="73">prev_counter<pos:position pos:line="59" pos:column="85"/></name><operator pos:line="59" pos:column="85">)<pos:position pos:line="59" pos:column="86"/></operator> <operator pos:line="59" pos:column="87">+<pos:position pos:line="59" pos:column="88"/></operator> <name pos:line="59" pos:column="89">curr_counter<pos:position pos:line="59" pos:column="101"/></name></expr>;<pos:position pos:line="59" pos:column="102"/></expr_stmt></block></else></if>
		}<pos:position pos:line="60" pos:column="18"/></block></then>
		<else pos:line="61" pos:column="17">else <comment type="block" pos:line="61" pos:column="22">/* no overflow */</comment>
		<block pos:line="62" pos:column="17">{
			<expr_stmt><expr><name pos:line="63" pos:column="25">difference<pos:position pos:line="63" pos:column="35"/></name> <operator pos:line="63" pos:column="36">=<pos:position pos:line="63" pos:column="37"/></operator> <name pos:line="63" pos:column="38">curr_counter<pos:position pos:line="63" pos:column="50"/></name> <operator pos:line="63" pos:column="51">-<pos:position pos:line="63" pos:column="52"/></operator> <name pos:line="63" pos:column="53">prev_counter<pos:position pos:line="63" pos:column="65"/></name></expr>;<pos:position pos:line="63" pos:column="66"/></expr_stmt>
		}<pos:position pos:line="64" pos:column="18"/></block></else></if>
		<expr_stmt><expr><name pos:line="65" pos:column="17">rate<pos:position pos:line="65" pos:column="21"/></name> <operator pos:line="65" pos:column="22">=<pos:position pos:line="65" pos:column="23"/></operator> <operator pos:line="65" pos:column="24">(<pos:position pos:line="65" pos:column="25"/></operator><operator pos:line="65" pos:column="25">(<pos:position pos:line="65" pos:column="26"/></operator><name pos:line="65" pos:column="26">double<pos:position pos:line="65" pos:column="32"/></name><operator pos:line="65" pos:column="32">)<pos:position pos:line="65" pos:column="33"/></operator> <name pos:line="65" pos:column="34">difference<pos:position pos:line="65" pos:column="44"/></name><operator pos:line="65" pos:column="44">)<pos:position pos:line="65" pos:column="45"/></operator> <operator pos:line="65" pos:column="46">/<pos:position pos:line="65" pos:column="47"/></operator> <call><name pos:line="65" pos:column="48">CDTIME_T_TO_DOUBLE<pos:position pos:line="65" pos:column="66"/></name> <argument_list pos:line="65" pos:column="67">(<argument><expr><name><name pos:line="65" pos:column="68">vl<pos:position pos:line="65" pos:column="70"/></name><operator pos:line="65" pos:column="70">-&gt;<pos:position pos:line="65" pos:column="75"/></operator><name pos:line="65" pos:column="72">interval<pos:position pos:line="65" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="82"/></expr_stmt>

		<comment type="block" pos:line="67" pos:column="17">/* Modify the rate. */</comment>
		<if pos:line="68" pos:column="17">if <condition pos:line="68" pos:column="20">(<expr><operator pos:line="68" pos:column="21">!<pos:position pos:line="68" pos:column="22"/></operator><call><name pos:line="68" pos:column="22">isnan<pos:position pos:line="68" pos:column="27"/></name> <argument_list pos:line="68" pos:column="28">(<argument><expr><name><name pos:line="68" pos:column="29">data<pos:position pos:line="68" pos:column="33"/></name><operator pos:line="68" pos:column="33">-&gt;<pos:position pos:line="68" pos:column="38"/></operator><name pos:line="68" pos:column="35">factor<pos:position pos:line="68" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="68" pos:column="43"/></condition><then pos:line="68" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><name pos:line="69" pos:column="25">rate<pos:position pos:line="69" pos:column="29"/></name> <operator pos:line="69" pos:column="30">*=<pos:position pos:line="69" pos:column="32"/></operator> <name><name pos:line="69" pos:column="33">data<pos:position pos:line="69" pos:column="37"/></name><operator pos:line="69" pos:column="37">-&gt;<pos:position pos:line="69" pos:column="42"/></operator><name pos:line="69" pos:column="39">factor<pos:position pos:line="69" pos:column="45"/></name></name></expr>;<pos:position pos:line="69" pos:column="46"/></expr_stmt></block></then></if>
		<if pos:line="70" pos:column="17">if <condition pos:line="70" pos:column="20">(<expr><operator pos:line="70" pos:column="21">!<pos:position pos:line="70" pos:column="22"/></operator><call><name pos:line="70" pos:column="22">isnan<pos:position pos:line="70" pos:column="27"/></name> <argument_list pos:line="70" pos:column="28">(<argument><expr><name><name pos:line="70" pos:column="29">data<pos:position pos:line="70" pos:column="33"/></name><operator pos:line="70" pos:column="33">-&gt;<pos:position pos:line="70" pos:column="38"/></operator><name pos:line="70" pos:column="35">offset<pos:position pos:line="70" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="70" pos:column="43"/></condition><then pos:line="70" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><name pos:line="71" pos:column="25">rate<pos:position pos:line="71" pos:column="29"/></name> <operator pos:line="71" pos:column="30">+=<pos:position pos:line="71" pos:column="32"/></operator> <name><name pos:line="71" pos:column="33">data<pos:position pos:line="71" pos:column="37"/></name><operator pos:line="71" pos:column="37">-&gt;<pos:position pos:line="71" pos:column="42"/></operator><name pos:line="71" pos:column="39">offset<pos:position pos:line="71" pos:column="45"/></name></name></expr>;<pos:position pos:line="71" pos:column="46"/></expr_stmt></block></then></if>

		<comment type="block" pos:line="73" pos:column="17">/* Calculate the internal counter. */</comment>
		<expr_stmt><expr><name pos:line="74" pos:column="17">int_fraction<pos:position pos:line="74" pos:column="29"/></name> <operator pos:line="74" pos:column="30">+=<pos:position pos:line="74" pos:column="32"/></operator> <operator pos:line="74" pos:column="33">(<pos:position pos:line="74" pos:column="34"/></operator><name pos:line="74" pos:column="34">rate<pos:position pos:line="74" pos:column="38"/></name> <operator pos:line="74" pos:column="39">*<pos:position pos:line="74" pos:column="40"/></operator> <call><name pos:line="74" pos:column="41">CDTIME_T_TO_DOUBLE<pos:position pos:line="74" pos:column="59"/></name> <argument_list pos:line="74" pos:column="60">(<argument><expr><name><name pos:line="74" pos:column="61">vl<pos:position pos:line="74" pos:column="63"/></name><operator pos:line="74" pos:column="63">-&gt;<pos:position pos:line="74" pos:column="68"/></operator><name pos:line="74" pos:column="65">interval<pos:position pos:line="74" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="74"/></argument_list></call><operator pos:line="74" pos:column="74">)<pos:position pos:line="74" pos:column="75"/></operator></expr>;<pos:position pos:line="74" pos:column="76"/></expr_stmt>
		<expr_stmt><expr><name pos:line="75" pos:column="17">difference<pos:position pos:line="75" pos:column="27"/></name> <operator pos:line="75" pos:column="28">=<pos:position pos:line="75" pos:column="29"/></operator> <operator pos:line="75" pos:column="30">(<pos:position pos:line="75" pos:column="31"/></operator><name pos:line="75" pos:column="31">uint64_t<pos:position pos:line="75" pos:column="39"/></name><operator pos:line="75" pos:column="39">)<pos:position pos:line="75" pos:column="40"/></operator> <name pos:line="75" pos:column="41">int_fraction<pos:position pos:line="75" pos:column="53"/></name></expr>;<pos:position pos:line="75" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><name pos:line="76" pos:column="17">int_fraction<pos:position pos:line="76" pos:column="29"/></name> <operator pos:line="76" pos:column="30">-=<pos:position pos:line="76" pos:column="32"/></operator> <operator pos:line="76" pos:column="33">(<pos:position pos:line="76" pos:column="34"/></operator><operator pos:line="76" pos:column="34">(<pos:position pos:line="76" pos:column="35"/></operator><name pos:line="76" pos:column="35">double<pos:position pos:line="76" pos:column="41"/></name><operator pos:line="76" pos:column="41">)<pos:position pos:line="76" pos:column="42"/></operator> <name pos:line="76" pos:column="43">difference<pos:position pos:line="76" pos:column="53"/></name><operator pos:line="76" pos:column="53">)<pos:position pos:line="76" pos:column="54"/></operator></expr>;<pos:position pos:line="76" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><name pos:line="77" pos:column="17">int_counter<pos:position pos:line="77" pos:column="28"/></name>  <operator pos:line="77" pos:column="30">+=<pos:position pos:line="77" pos:column="32"/></operator> <name pos:line="77" pos:column="33">difference<pos:position pos:line="77" pos:column="43"/></name></expr>;<pos:position pos:line="77" pos:column="44"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="79" pos:column="17">assert<pos:position pos:line="79" pos:column="23"/></name> <argument_list pos:line="79" pos:column="24">(<argument><expr><name pos:line="79" pos:column="25">int_fraction<pos:position pos:line="79" pos:column="37"/></name> <operator pos:line="79" pos:column="38">&gt;=<pos:position pos:line="79" pos:column="43"/></operator> <literal type="number" pos:line="79" pos:column="41">0.0<pos:position pos:line="79" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="80" pos:column="17">assert<pos:position pos:line="80" pos:column="23"/></name> <argument_list pos:line="80" pos:column="24">(<argument><expr><name pos:line="80" pos:column="25">int_fraction<pos:position pos:line="80" pos:column="37"/></name> <operator pos:line="80" pos:column="38">&lt;<pos:position pos:line="80" pos:column="42"/></operator>  <literal type="number" pos:line="80" pos:column="41">1.0<pos:position pos:line="80" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="46"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="82" pos:column="17">DEBUG<pos:position pos:line="82" pos:column="22"/></name> <argument_list pos:line="82" pos:column="23">(<argument><expr><literal type="string" pos:line="82" pos:column="24">"Target `scale': ts_invoke_counter: %"<pos:position pos:line="82" pos:column="62"/></literal><name pos:line="82" pos:column="62">PRIu64<pos:position pos:line="82" pos:column="68"/></name><literal type="string" pos:line="82" pos:column="68">" -&gt; %g -&gt; %"<pos:position pos:line="82" pos:column="87"/></literal><name pos:line="82" pos:column="81">PRIu64<pos:position pos:line="82" pos:column="87"/></name>
				<literal type="string" pos:line="83" pos:column="33">"(+%g)"<pos:position pos:line="83" pos:column="40"/></literal></expr></argument>,
				<argument><expr><name pos:line="84" pos:column="33">curr_counter<pos:position pos:line="84" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="47">rate<pos:position pos:line="84" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="53">int_counter<pos:position pos:line="84" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="66">int_fraction<pos:position pos:line="84" pos:column="78"/></name></expr></argument>)<pos:position pos:line="84" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="80"/></expr_stmt>
	}<pos:position pos:line="85" pos:column="10"/></block></then>
	<else pos:line="86" pos:column="9">else <comment type="block" pos:line="86" pos:column="14">/* (failure != 0) */</comment>
	<block pos:line="87" pos:column="9">{
		<expr_stmt><expr><name pos:line="88" pos:column="17">int_counter<pos:position pos:line="88" pos:column="28"/></name> <operator pos:line="88" pos:column="29">=<pos:position pos:line="88" pos:column="30"/></operator> <literal type="number" pos:line="88" pos:column="31">0<pos:position pos:line="88" pos:column="32"/></literal></expr>;<pos:position pos:line="88" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name pos:line="89" pos:column="17">int_fraction<pos:position pos:line="89" pos:column="29"/></name> <operator pos:line="89" pos:column="30">=<pos:position pos:line="89" pos:column="31"/></operator> <literal type="number" pos:line="89" pos:column="32">0.0<pos:position pos:line="89" pos:column="35"/></literal></expr>;<pos:position pos:line="89" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="90" pos:column="10"/></block></else></if>

	<expr_stmt><expr><name><name pos:line="92" pos:column="9">vl<pos:position pos:line="92" pos:column="11"/></name><operator pos:line="92" pos:column="11">-&gt;<pos:position pos:line="92" pos:column="16"/></operator><name pos:line="92" pos:column="13">values<pos:position pos:line="92" pos:column="19"/></name><index pos:line="92" pos:column="19">[<expr><name pos:line="92" pos:column="20">dsrc_index<pos:position pos:line="92" pos:column="30"/></name></expr>]<pos:position pos:line="92" pos:column="31"/></index></name><operator pos:line="92" pos:column="31">.<pos:position pos:line="92" pos:column="32"/></operator><name pos:line="92" pos:column="32">counter<pos:position pos:line="92" pos:column="39"/></name> <operator pos:line="92" pos:column="40">=<pos:position pos:line="92" pos:column="41"/></operator> <operator pos:line="92" pos:column="42">(<pos:position pos:line="92" pos:column="43"/></operator><name pos:line="92" pos:column="43">counter_t<pos:position pos:line="92" pos:column="52"/></name><operator pos:line="92" pos:column="52">)<pos:position pos:line="92" pos:column="53"/></operator> <name pos:line="92" pos:column="54">int_counter<pos:position pos:line="92" pos:column="65"/></name></expr>;<pos:position pos:line="92" pos:column="66"/></expr_stmt>

	<comment type="block" pos:line="94" pos:column="9">/* Update to the new counter value */</comment>
	<expr_stmt><expr><call><name pos:line="95" pos:column="9">uc_meta_data_add_unsigned_int<pos:position pos:line="95" pos:column="38"/></name> <argument_list pos:line="95" pos:column="39">(<argument><expr><name pos:line="95" pos:column="40">vl<pos:position pos:line="95" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="44">key_prev_counter<pos:position pos:line="95" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="62">curr_counter<pos:position pos:line="95" pos:column="74"/></name></expr></argument>)<pos:position pos:line="95" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="76"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="96" pos:column="9">uc_meta_data_add_unsigned_int<pos:position pos:line="96" pos:column="38"/></name> <argument_list pos:line="96" pos:column="39">(<argument><expr><name pos:line="96" pos:column="40">vl<pos:position pos:line="96" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="44">key_int_counter<pos:position pos:line="96" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="61">int_counter<pos:position pos:line="96" pos:column="72"/></name></expr></argument>)<pos:position pos:line="96" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="74"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="97" pos:column="9">uc_meta_data_add_double<pos:position pos:line="97" pos:column="32"/></name> <argument_list pos:line="97" pos:column="33">(<argument><expr><name pos:line="97" pos:column="34">vl<pos:position pos:line="97" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="38">key_int_fraction<pos:position pos:line="97" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="56">int_fraction<pos:position pos:line="97" pos:column="68"/></name></expr></argument>)<pos:position pos:line="97" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="70"/></expr_stmt>


	<return pos:line="100" pos:column="9">return <expr><operator pos:line="100" pos:column="16">(<pos:position pos:line="100" pos:column="17"/></operator><literal type="number" pos:line="100" pos:column="17">0<pos:position pos:line="100" pos:column="18"/></literal><operator pos:line="100" pos:column="18">)<pos:position pos:line="100" pos:column="19"/></operator></expr>;<pos:position pos:line="100" pos:column="20"/></return>
}<pos:position pos:line="101" pos:column="2"/></block></function></unit>

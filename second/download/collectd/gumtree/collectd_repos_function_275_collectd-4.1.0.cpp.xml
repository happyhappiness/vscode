<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_275_collectd-4.1.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">escape_slashes<pos:position pos:line="1" pos:column="19"/></name> <parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">char<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">buf<pos:position pos:line="1" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="32">int<pos:position pos:line="1" pos:column="35"/></name></type> <name pos:line="1" pos:column="36">buf_len<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><call><name pos:line="5" pos:column="13">strcmp<pos:position pos:line="5" pos:column="19"/></name> <argument_list pos:line="5" pos:column="20">(<argument><expr><name pos:line="5" pos:column="21">buf<pos:position pos:line="5" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="26">"/"<pos:position pos:line="5" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="30"/></argument_list></call> <operator pos:line="5" pos:column="31">==<pos:position pos:line="5" pos:column="33"/></operator> <literal type="number" pos:line="5" pos:column="34">0<pos:position pos:line="5" pos:column="35"/></literal></expr>)<pos:position pos:line="5" pos:column="36"/></condition><then pos:line="5" pos:column="36">
	<block pos:line="6" pos:column="9">{
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><name pos:line="7" pos:column="21">buf_len<pos:position pos:line="7" pos:column="28"/></name> <operator pos:line="7" pos:column="29">&lt;<pos:position pos:line="7" pos:column="33"/></operator> <literal type="number" pos:line="7" pos:column="31">5<pos:position pos:line="7" pos:column="32"/></literal></expr>)<pos:position pos:line="7" pos:column="33"/></condition><then pos:line="7" pos:column="33">
			<block type="pseudo"><return pos:line="8" pos:column="25">return <expr><operator pos:line="8" pos:column="32">(<pos:position pos:line="8" pos:column="33"/></operator><operator pos:line="8" pos:column="33">-<pos:position pos:line="8" pos:column="34"/></operator><literal type="number" pos:line="8" pos:column="34">1<pos:position pos:line="8" pos:column="35"/></literal><operator pos:line="8" pos:column="35">)<pos:position pos:line="8" pos:column="36"/></operator></expr>;<pos:position pos:line="8" pos:column="37"/></return></block></then></if>

		<expr_stmt><expr><call><name pos:line="10" pos:column="17">strncpy<pos:position pos:line="10" pos:column="24"/></name> <argument_list pos:line="10" pos:column="25">(<argument><expr><name pos:line="10" pos:column="26">buf<pos:position pos:line="10" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="31">"root"<pos:position pos:line="10" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="39">buf_len<pos:position pos:line="10" pos:column="46"/></name></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="48"/></expr_stmt>
		<return pos:line="11" pos:column="17">return <expr><operator pos:line="11" pos:column="24">(<pos:position pos:line="11" pos:column="25"/></operator><literal type="number" pos:line="11" pos:column="25">0<pos:position pos:line="11" pos:column="26"/></literal><operator pos:line="11" pos:column="26">)<pos:position pos:line="11" pos:column="27"/></operator></expr>;<pos:position pos:line="11" pos:column="28"/></return>
	}<pos:position pos:line="12" pos:column="10"/></block></then></if>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">buf_len<pos:position pos:line="14" pos:column="20"/></name> <operator pos:line="14" pos:column="21">&lt;=<pos:position pos:line="14" pos:column="26"/></operator> <literal type="number" pos:line="14" pos:column="24">1<pos:position pos:line="14" pos:column="25"/></literal></expr>)<pos:position pos:line="14" pos:column="26"/></condition><then pos:line="14" pos:column="26">
		<block type="pseudo"><return pos:line="15" pos:column="17">return <expr><operator pos:line="15" pos:column="24">(<pos:position pos:line="15" pos:column="25"/></operator><literal type="number" pos:line="15" pos:column="25">0<pos:position pos:line="15" pos:column="26"/></literal><operator pos:line="15" pos:column="26">)<pos:position pos:line="15" pos:column="27"/></operator></expr>;<pos:position pos:line="15" pos:column="28"/></return></block></then></if>

	<comment type="block" pos:line="17" pos:column="9">/* Move one to the left */</comment>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name><name pos:line="18" pos:column="13">buf<pos:position pos:line="18" pos:column="16"/></name><index pos:line="18" pos:column="16">[<expr><literal type="number" pos:line="18" pos:column="17">0<pos:position pos:line="18" pos:column="18"/></literal></expr>]<pos:position pos:line="18" pos:column="19"/></index></name> <operator pos:line="18" pos:column="20">==<pos:position pos:line="18" pos:column="22"/></operator> <literal type="char" pos:line="18" pos:column="23">'/'<pos:position pos:line="18" pos:column="26"/></literal></expr>)<pos:position pos:line="18" pos:column="27"/></condition><then pos:line="18" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="17">memmove<pos:position pos:line="19" pos:column="24"/></name> <argument_list pos:line="19" pos:column="25">(<argument><expr><name pos:line="19" pos:column="26">buf<pos:position pos:line="19" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="31">buf<pos:position pos:line="19" pos:column="34"/></name> <operator pos:line="19" pos:column="35">+<pos:position pos:line="19" pos:column="36"/></operator> <literal type="number" pos:line="19" pos:column="37">1<pos:position pos:line="19" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="40">buf_len<pos:position pos:line="19" pos:column="47"/></name> <operator pos:line="19" pos:column="48">-<pos:position pos:line="19" pos:column="49"/></operator> <literal type="number" pos:line="19" pos:column="50">1<pos:position pos:line="19" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="53"/></expr_stmt></block></then></if>

	<for pos:line="21" pos:column="9">for <control pos:line="21" pos:column="13">(<init><expr><name pos:line="21" pos:column="14">i<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <literal type="number" pos:line="21" pos:column="18">0<pos:position pos:line="21" pos:column="19"/></literal></expr>;<pos:position pos:line="21" pos:column="20"/></init> <condition><expr><name pos:line="21" pos:column="21">i<pos:position pos:line="21" pos:column="22"/></name> <operator pos:line="21" pos:column="23">&lt;<pos:position pos:line="21" pos:column="27"/></operator> <name pos:line="21" pos:column="25">buf_len<pos:position pos:line="21" pos:column="32"/></name> <operator pos:line="21" pos:column="33">-<pos:position pos:line="21" pos:column="34"/></operator> <literal type="number" pos:line="21" pos:column="35">1<pos:position pos:line="21" pos:column="36"/></literal></expr>;<pos:position pos:line="21" pos:column="37"/></condition> <incr><expr><name pos:line="21" pos:column="38">i<pos:position pos:line="21" pos:column="39"/></name><operator pos:line="21" pos:column="39">++<pos:position pos:line="21" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="21" pos:column="42"/></control>
	<block pos:line="22" pos:column="9">{
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><name><name pos:line="23" pos:column="21">buf<pos:position pos:line="23" pos:column="24"/></name><index pos:line="23" pos:column="24">[<expr><name pos:line="23" pos:column="25">i<pos:position pos:line="23" pos:column="26"/></name></expr>]<pos:position pos:line="23" pos:column="27"/></index></name> <operator pos:line="23" pos:column="28">==<pos:position pos:line="23" pos:column="30"/></operator> <literal type="char" pos:line="23" pos:column="31">'\0'<pos:position pos:line="23" pos:column="35"/></literal></expr>)<pos:position pos:line="23" pos:column="36"/></condition><then pos:line="23" pos:column="36">
			<block type="pseudo"><break pos:line="24" pos:column="25">break;<pos:position pos:line="24" pos:column="31"/></break></block></then>
		<elseif pos:line="25" pos:column="17">else <if pos:line="25" pos:column="22">if <condition pos:line="25" pos:column="25">(<expr><name><name pos:line="25" pos:column="26">buf<pos:position pos:line="25" pos:column="29"/></name><index pos:line="25" pos:column="29">[<expr><name pos:line="25" pos:column="30">i<pos:position pos:line="25" pos:column="31"/></name></expr>]<pos:position pos:line="25" pos:column="32"/></index></name> <operator pos:line="25" pos:column="33">==<pos:position pos:line="25" pos:column="35"/></operator> <literal type="char" pos:line="25" pos:column="36">'/'<pos:position pos:line="25" pos:column="39"/></literal></expr>)<pos:position pos:line="25" pos:column="40"/></condition><then pos:line="25" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="26" pos:column="25">buf<pos:position pos:line="26" pos:column="28"/></name><index pos:line="26" pos:column="28">[<expr><name pos:line="26" pos:column="29">i<pos:position pos:line="26" pos:column="30"/></name></expr>]<pos:position pos:line="26" pos:column="31"/></index></name> <operator pos:line="26" pos:column="32">=<pos:position pos:line="26" pos:column="33"/></operator> <literal type="char" pos:line="26" pos:column="34">'_'<pos:position pos:line="26" pos:column="37"/></literal></expr>;<pos:position pos:line="26" pos:column="38"/></expr_stmt></block></then></if></elseif></if>
	}<pos:position pos:line="27" pos:column="10"/></block></for>
	<expr_stmt><expr><name><name pos:line="28" pos:column="9">buf<pos:position pos:line="28" pos:column="12"/></name><index pos:line="28" pos:column="12">[<expr><name pos:line="28" pos:column="13">i<pos:position pos:line="28" pos:column="14"/></name></expr>]<pos:position pos:line="28" pos:column="15"/></index></name> <operator pos:line="28" pos:column="16">=<pos:position pos:line="28" pos:column="17"/></operator> <literal type="char" pos:line="28" pos:column="18">'\0'<pos:position pos:line="28" pos:column="22"/></literal></expr>;<pos:position pos:line="28" pos:column="23"/></expr_stmt>

	<return pos:line="30" pos:column="9">return <expr><operator pos:line="30" pos:column="16">(<pos:position pos:line="30" pos:column="17"/></operator><literal type="number" pos:line="30" pos:column="17">0<pos:position pos:line="30" pos:column="18"/></literal><operator pos:line="30" pos:column="18">)<pos:position pos:line="30" pos:column="19"/></operator></expr>;<pos:position pos:line="30" pos:column="20"/></return>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

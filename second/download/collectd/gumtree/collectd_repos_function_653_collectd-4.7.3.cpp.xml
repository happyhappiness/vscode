<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_653_collectd-4.7.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">pplugin_call_all<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">pTHX_<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">int<pos:position pos:line="1" pos:column="39"/></name></type> <name pos:line="1" pos:column="40">type<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><modifier pos:line="1" pos:column="46">...<pos:position pos:line="1" pos:column="49"/></modifier></type></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">retvals<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><literal type="number" pos:line="3" pos:column="23">0<pos:position pos:line="3" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="5" pos:column="9">va_list<pos:position pos:line="5" pos:column="16"/></name></type> <name pos:line="5" pos:column="17">ap<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">ret<pos:position pos:line="6" pos:column="16"/></name> <init pos:line="6" pos:column="17">= <expr><literal type="number" pos:line="6" pos:column="19">0<pos:position pos:line="6" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>

	<expr_stmt><expr><name pos:line="8" pos:column="9">dSP<pos:position pos:line="8" pos:column="12"/></name></expr>;<pos:position pos:line="8" pos:column="13"/></expr_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">(<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">type<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">&lt;<pos:position pos:line="10" pos:column="23"/></operator> <literal type="number" pos:line="10" pos:column="21">0<pos:position pos:line="10" pos:column="22"/></literal><operator pos:line="10" pos:column="22">)<pos:position pos:line="10" pos:column="23"/></operator> <operator pos:line="10" pos:column="24">||<pos:position pos:line="10" pos:column="26"/></operator> <operator pos:line="10" pos:column="27">(<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="28">type<pos:position pos:line="10" pos:column="32"/></name> <operator pos:line="10" pos:column="33">&gt;=<pos:position pos:line="10" pos:column="38"/></operator> <name pos:line="10" pos:column="36">PLUGIN_TYPES<pos:position pos:line="10" pos:column="48"/></name><operator pos:line="10" pos:column="48">)<pos:position pos:line="10" pos:column="49"/></operator></expr>)<pos:position pos:line="10" pos:column="50"/></condition><then pos:line="10" pos:column="50">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><operator pos:line="11" pos:column="24">-<pos:position pos:line="11" pos:column="25"/></operator><literal type="number" pos:line="11" pos:column="25">1<pos:position pos:line="11" pos:column="26"/></literal></expr>;<pos:position pos:line="11" pos:column="27"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="13" pos:column="9">va_start<pos:position pos:line="13" pos:column="17"/></name> <argument_list pos:line="13" pos:column="18">(<argument><expr><name pos:line="13" pos:column="19">ap<pos:position pos:line="13" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="23">type<pos:position pos:line="13" pos:column="27"/></name></expr></argument>)<pos:position pos:line="13" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="29"/></expr_stmt>

	<expr_stmt><expr><name pos:line="15" pos:column="9">ENTER<pos:position pos:line="15" pos:column="14"/></name></expr>;<pos:position pos:line="15" pos:column="15"/></expr_stmt>
	<expr_stmt><expr><name pos:line="16" pos:column="9">SAVETMPS<pos:position pos:line="16" pos:column="17"/></name></expr>;<pos:position pos:line="16" pos:column="18"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="18" pos:column="9">PUSHMARK<pos:position pos:line="18" pos:column="17"/></name> <argument_list pos:line="18" pos:column="18">(<argument><expr><name pos:line="18" pos:column="19">SP<pos:position pos:line="18" pos:column="21"/></name></expr></argument>)<pos:position pos:line="18" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="23"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="20" pos:column="9">XPUSHs<pos:position pos:line="20" pos:column="15"/></name> <argument_list pos:line="20" pos:column="16">(<argument><expr><call><name pos:line="20" pos:column="17">sv_2mortal<pos:position pos:line="20" pos:column="27"/></name> <argument_list pos:line="20" pos:column="28">(<argument><expr><call><name pos:line="20" pos:column="29">newSViv<pos:position pos:line="20" pos:column="36"/></name> <argument_list pos:line="20" pos:column="37">(<argument><expr><operator pos:line="20" pos:column="38">(<pos:position pos:line="20" pos:column="39"/></operator><name pos:line="20" pos:column="39">IV<pos:position pos:line="20" pos:column="41"/></name><operator pos:line="20" pos:column="41">)<pos:position pos:line="20" pos:column="42"/></operator><name pos:line="20" pos:column="42">type<pos:position pos:line="20" pos:column="46"/></name></expr></argument>)<pos:position pos:line="20" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="50"/></expr_stmt>

	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">PLUGIN_WRITE<pos:position pos:line="22" pos:column="25"/></name> <operator pos:line="22" pos:column="26">==<pos:position pos:line="22" pos:column="28"/></operator> <name pos:line="22" pos:column="29">type<pos:position pos:line="22" pos:column="33"/></name></expr>)<pos:position pos:line="22" pos:column="34"/></condition><then pos:line="22" pos:column="34"> <block pos:line="22" pos:column="35">{
		<comment type="block" pos:line="23" pos:column="17">/*
		 * $_[0] = $plugin_type;
		 *
		 * $_[1] =
		 * [
		 *   {
		 *     name =&gt; $ds_name,
		 *     type =&gt; $ds_type,
		 *     min  =&gt; $ds_min,
		 *     max  =&gt; $ds_max
		 *   },
		 *   ...
		 * ];
		 *
		 * $_[2] =
		 * {
		 *   values =&gt; [ $v1, ... ],
		 *   time   =&gt; $time,
		 *   host   =&gt; $hostname,
		 *   plugin =&gt; $plugin,
		 *   type   =&gt; $type,
		 *   plugin_instance =&gt; $instance,
		 *   type_instance   =&gt; $type_instance
		 * };
		 */</comment>
		<decl_stmt><decl><type><name pos:line="48" pos:column="17">data_set_t<pos:position pos:line="48" pos:column="27"/></name>   <modifier pos:line="48" pos:column="30">*<pos:position pos:line="48" pos:column="31"/></modifier></type><name pos:line="48" pos:column="31">ds<pos:position pos:line="48" pos:column="33"/></name></decl>;<pos:position pos:line="48" pos:column="34"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="49" pos:column="17">value_list_t<pos:position pos:line="49" pos:column="29"/></name> <modifier pos:line="49" pos:column="30">*<pos:position pos:line="49" pos:column="31"/></modifier></type><name pos:line="49" pos:column="31">vl<pos:position pos:line="49" pos:column="33"/></name></decl>;<pos:position pos:line="49" pos:column="34"/></decl_stmt>

		<decl_stmt><decl><type><name pos:line="51" pos:column="17">AV<pos:position pos:line="51" pos:column="19"/></name> <modifier pos:line="51" pos:column="20">*<pos:position pos:line="51" pos:column="21"/></modifier></type><name pos:line="51" pos:column="21">pds<pos:position pos:line="51" pos:column="24"/></name> <init pos:line="51" pos:column="25">= <expr><call><name pos:line="51" pos:column="27">newAV<pos:position pos:line="51" pos:column="32"/></name> <argument_list pos:line="51" pos:column="33">()<pos:position pos:line="51" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="51" pos:column="36"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="52" pos:column="17">HV<pos:position pos:line="52" pos:column="19"/></name> <modifier pos:line="52" pos:column="20">*<pos:position pos:line="52" pos:column="21"/></modifier></type><name pos:line="52" pos:column="21">pvl<pos:position pos:line="52" pos:column="24"/></name> <init pos:line="52" pos:column="25">= <expr><call><name pos:line="52" pos:column="27">newHV<pos:position pos:line="52" pos:column="32"/></name> <argument_list pos:line="52" pos:column="33">()<pos:position pos:line="52" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="52" pos:column="36"/></decl_stmt>

		<expr_stmt><expr><name pos:line="54" pos:column="17">ds<pos:position pos:line="54" pos:column="19"/></name> <operator pos:line="54" pos:column="20">=<pos:position pos:line="54" pos:column="21"/></operator> <call><name pos:line="54" pos:column="22">va_arg<pos:position pos:line="54" pos:column="28"/></name> <argument_list pos:line="54" pos:column="29">(<argument><expr><name pos:line="54" pos:column="30">ap<pos:position pos:line="54" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="34">data_set_t<pos:position pos:line="54" pos:column="44"/></name> <operator pos:line="54" pos:column="45">*<pos:position pos:line="54" pos:column="46"/></operator></expr></argument>)<pos:position pos:line="54" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><name pos:line="55" pos:column="17">vl<pos:position pos:line="55" pos:column="19"/></name> <operator pos:line="55" pos:column="20">=<pos:position pos:line="55" pos:column="21"/></operator> <call><name pos:line="55" pos:column="22">va_arg<pos:position pos:line="55" pos:column="28"/></name> <argument_list pos:line="55" pos:column="29">(<argument><expr><name pos:line="55" pos:column="30">ap<pos:position pos:line="55" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="34">value_list_t<pos:position pos:line="55" pos:column="46"/></name> <operator pos:line="55" pos:column="47">*<pos:position pos:line="55" pos:column="48"/></operator></expr></argument>)<pos:position pos:line="55" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="50"/></expr_stmt>

		<if pos:line="57" pos:column="17">if <condition pos:line="57" pos:column="20">(<expr><operator pos:line="57" pos:column="21">-<pos:position pos:line="57" pos:column="22"/></operator><literal type="number" pos:line="57" pos:column="22">1<pos:position pos:line="57" pos:column="23"/></literal> <operator pos:line="57" pos:column="24">==<pos:position pos:line="57" pos:column="26"/></operator> <macro><name pos:line="57" pos:column="27">data_set2av<pos:position pos:line="57" pos:column="38"/></name> <argument_list pos:line="57" pos:column="39">(<argument pos:line="57" pos:column="40">aTHX_ ds<pos:position pos:line="57" pos:column="48"/></argument>, <argument pos:line="57" pos:column="50">pds<pos:position pos:line="57" pos:column="53"/></argument>)<pos:position pos:line="57" pos:column="54"/></argument_list></macro></expr>)<pos:position pos:line="57" pos:column="55"/></condition><then pos:line="57" pos:column="55"> <block pos:line="57" pos:column="56">{
			<expr_stmt><expr><call><name pos:line="58" pos:column="25">av_clear<pos:position pos:line="58" pos:column="33"/></name> <argument_list pos:line="58" pos:column="34">(<argument><expr><name pos:line="58" pos:column="35">pds<pos:position pos:line="58" pos:column="38"/></name></expr></argument>)<pos:position pos:line="58" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="59" pos:column="25">av_undef<pos:position pos:line="59" pos:column="33"/></name> <argument_list pos:line="59" pos:column="34">(<argument><expr><name pos:line="59" pos:column="35">pds<pos:position pos:line="59" pos:column="38"/></name></expr></argument>)<pos:position pos:line="59" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><name pos:line="60" pos:column="25">pds<pos:position pos:line="60" pos:column="28"/></name> <operator pos:line="60" pos:column="29">=<pos:position pos:line="60" pos:column="30"/></operator> <operator pos:line="60" pos:column="31">(<pos:position pos:line="60" pos:column="32"/></operator><name pos:line="60" pos:column="32">AV<pos:position pos:line="60" pos:column="34"/></name> <operator pos:line="60" pos:column="35">*<pos:position pos:line="60" pos:column="36"/></operator><operator pos:line="60" pos:column="36">)<pos:position pos:line="60" pos:column="37"/></operator><operator pos:line="60" pos:column="37">&amp;<pos:position pos:line="60" pos:column="42"/></operator><name pos:line="60" pos:column="38">PL_sv_undef<pos:position pos:line="60" pos:column="49"/></name></expr>;<pos:position pos:line="60" pos:column="50"/></expr_stmt>
			<expr_stmt><expr><name pos:line="61" pos:column="25">ret<pos:position pos:line="61" pos:column="28"/></name> <operator pos:line="61" pos:column="29">=<pos:position pos:line="61" pos:column="30"/></operator> <operator pos:line="61" pos:column="31">-<pos:position pos:line="61" pos:column="32"/></operator><literal type="number" pos:line="61" pos:column="32">1<pos:position pos:line="61" pos:column="33"/></literal></expr>;<pos:position pos:line="61" pos:column="34"/></expr_stmt>
		}<pos:position pos:line="62" pos:column="18"/></block></then></if>

		<if pos:line="64" pos:column="17">if <condition pos:line="64" pos:column="20">(<expr><operator pos:line="64" pos:column="21">-<pos:position pos:line="64" pos:column="22"/></operator><literal type="number" pos:line="64" pos:column="22">1<pos:position pos:line="64" pos:column="23"/></literal> <operator pos:line="64" pos:column="24">==<pos:position pos:line="64" pos:column="26"/></operator> <macro><name pos:line="64" pos:column="27">value_list2hv<pos:position pos:line="64" pos:column="40"/></name> <argument_list pos:line="64" pos:column="41">(<argument pos:line="64" pos:column="42">aTHX_ vl<pos:position pos:line="64" pos:column="50"/></argument>, <argument pos:line="64" pos:column="52">ds<pos:position pos:line="64" pos:column="54"/></argument>, <argument pos:line="64" pos:column="56">pvl<pos:position pos:line="64" pos:column="59"/></argument>)<pos:position pos:line="64" pos:column="60"/></argument_list></macro></expr>)<pos:position pos:line="64" pos:column="61"/></condition><then pos:line="64" pos:column="61"> <block pos:line="64" pos:column="62">{
			<expr_stmt><expr><call><name pos:line="65" pos:column="25">hv_clear<pos:position pos:line="65" pos:column="33"/></name> <argument_list pos:line="65" pos:column="34">(<argument><expr><name pos:line="65" pos:column="35">pvl<pos:position pos:line="65" pos:column="38"/></name></expr></argument>)<pos:position pos:line="65" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="66" pos:column="25">hv_undef<pos:position pos:line="66" pos:column="33"/></name> <argument_list pos:line="66" pos:column="34">(<argument><expr><name pos:line="66" pos:column="35">pvl<pos:position pos:line="66" pos:column="38"/></name></expr></argument>)<pos:position pos:line="66" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><name pos:line="67" pos:column="25">pvl<pos:position pos:line="67" pos:column="28"/></name> <operator pos:line="67" pos:column="29">=<pos:position pos:line="67" pos:column="30"/></operator> <operator pos:line="67" pos:column="31">(<pos:position pos:line="67" pos:column="32"/></operator><name pos:line="67" pos:column="32">HV<pos:position pos:line="67" pos:column="34"/></name> <operator pos:line="67" pos:column="35">*<pos:position pos:line="67" pos:column="36"/></operator><operator pos:line="67" pos:column="36">)<pos:position pos:line="67" pos:column="37"/></operator><operator pos:line="67" pos:column="37">&amp;<pos:position pos:line="67" pos:column="42"/></operator><name pos:line="67" pos:column="38">PL_sv_undef<pos:position pos:line="67" pos:column="49"/></name></expr>;<pos:position pos:line="67" pos:column="50"/></expr_stmt>
			<expr_stmt><expr><name pos:line="68" pos:column="25">ret<pos:position pos:line="68" pos:column="28"/></name> <operator pos:line="68" pos:column="29">=<pos:position pos:line="68" pos:column="30"/></operator> <operator pos:line="68" pos:column="31">-<pos:position pos:line="68" pos:column="32"/></operator><literal type="number" pos:line="68" pos:column="32">1<pos:position pos:line="68" pos:column="33"/></literal></expr>;<pos:position pos:line="68" pos:column="34"/></expr_stmt>
		}<pos:position pos:line="69" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="71" pos:column="17">XPUSHs<pos:position pos:line="71" pos:column="23"/></name> <argument_list pos:line="71" pos:column="24">(<argument><expr><call><name pos:line="71" pos:column="25">sv_2mortal<pos:position pos:line="71" pos:column="35"/></name> <argument_list pos:line="71" pos:column="36">(<argument><expr><call><name pos:line="71" pos:column="37">newSVpv<pos:position pos:line="71" pos:column="44"/></name> <argument_list pos:line="71" pos:column="45">(<argument><expr><name><name pos:line="71" pos:column="46">ds<pos:position pos:line="71" pos:column="48"/></name><operator pos:line="71" pos:column="48">-&gt;<pos:position pos:line="71" pos:column="53"/></operator><name pos:line="71" pos:column="50">type<pos:position pos:line="71" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="71" pos:column="56">0<pos:position pos:line="71" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="71" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="71" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="61"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="72" pos:column="17">XPUSHs<pos:position pos:line="72" pos:column="23"/></name> <argument_list pos:line="72" pos:column="24">(<argument><expr><call><name pos:line="72" pos:column="25">sv_2mortal<pos:position pos:line="72" pos:column="35"/></name> <argument_list pos:line="72" pos:column="36">(<argument><expr><call><name pos:line="72" pos:column="37">newRV_noinc<pos:position pos:line="72" pos:column="48"/></name> <argument_list pos:line="72" pos:column="49">(<argument><expr><operator pos:line="72" pos:column="50">(<pos:position pos:line="72" pos:column="51"/></operator><name pos:line="72" pos:column="51">SV<pos:position pos:line="72" pos:column="53"/></name> <operator pos:line="72" pos:column="54">*<pos:position pos:line="72" pos:column="55"/></operator><operator pos:line="72" pos:column="55">)<pos:position pos:line="72" pos:column="56"/></operator><name pos:line="72" pos:column="56">pds<pos:position pos:line="72" pos:column="59"/></name></expr></argument>)<pos:position pos:line="72" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="72" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="72" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="63"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="73" pos:column="17">XPUSHs<pos:position pos:line="73" pos:column="23"/></name> <argument_list pos:line="73" pos:column="24">(<argument><expr><call><name pos:line="73" pos:column="25">sv_2mortal<pos:position pos:line="73" pos:column="35"/></name> <argument_list pos:line="73" pos:column="36">(<argument><expr><call><name pos:line="73" pos:column="37">newRV_noinc<pos:position pos:line="73" pos:column="48"/></name> <argument_list pos:line="73" pos:column="49">(<argument><expr><operator pos:line="73" pos:column="50">(<pos:position pos:line="73" pos:column="51"/></operator><name pos:line="73" pos:column="51">SV<pos:position pos:line="73" pos:column="53"/></name> <operator pos:line="73" pos:column="54">*<pos:position pos:line="73" pos:column="55"/></operator><operator pos:line="73" pos:column="55">)<pos:position pos:line="73" pos:column="56"/></operator><name pos:line="73" pos:column="56">pvl<pos:position pos:line="73" pos:column="59"/></name></expr></argument>)<pos:position pos:line="73" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="73" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="73" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="63"/></expr_stmt>
	}<pos:position pos:line="74" pos:column="10"/></block></then>
	<elseif pos:line="75" pos:column="9">else <if pos:line="75" pos:column="14">if <condition pos:line="75" pos:column="17">(<expr><name pos:line="75" pos:column="18">PLUGIN_LOG<pos:position pos:line="75" pos:column="28"/></name> <operator pos:line="75" pos:column="29">==<pos:position pos:line="75" pos:column="31"/></operator> <name pos:line="75" pos:column="32">type<pos:position pos:line="75" pos:column="36"/></name></expr>)<pos:position pos:line="75" pos:column="37"/></condition><then pos:line="75" pos:column="37"> <block pos:line="75" pos:column="38">{
		<comment type="block" pos:line="76" pos:column="17">/*
		 * $_[0] = $level;
		 *
		 * $_[1] = $message;
		 */</comment>
		<expr_stmt><expr><call><name pos:line="81" pos:column="17">XPUSHs<pos:position pos:line="81" pos:column="23"/></name> <argument_list pos:line="81" pos:column="24">(<argument><expr><call><name pos:line="81" pos:column="25">sv_2mortal<pos:position pos:line="81" pos:column="35"/></name> <argument_list pos:line="81" pos:column="36">(<argument><expr><call><name pos:line="81" pos:column="37">newSViv<pos:position pos:line="81" pos:column="44"/></name> <argument_list pos:line="81" pos:column="45">(<argument><expr><call><name pos:line="81" pos:column="46">va_arg<pos:position pos:line="81" pos:column="52"/></name> <argument_list pos:line="81" pos:column="53">(<argument><expr><name pos:line="81" pos:column="54">ap<pos:position pos:line="81" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="58">int<pos:position pos:line="81" pos:column="61"/></name></expr></argument>)<pos:position pos:line="81" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="81" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="81" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="81" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="66"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="82" pos:column="17">XPUSHs<pos:position pos:line="82" pos:column="23"/></name> <argument_list pos:line="82" pos:column="24">(<argument><expr><call><name pos:line="82" pos:column="25">sv_2mortal<pos:position pos:line="82" pos:column="35"/></name> <argument_list pos:line="82" pos:column="36">(<argument><expr><call><name pos:line="82" pos:column="37">newSVpv<pos:position pos:line="82" pos:column="44"/></name> <argument_list pos:line="82" pos:column="45">(<argument><expr><call><name pos:line="82" pos:column="46">va_arg<pos:position pos:line="82" pos:column="52"/></name> <argument_list pos:line="82" pos:column="53">(<argument><expr><name pos:line="82" pos:column="54">ap<pos:position pos:line="82" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="58">char<pos:position pos:line="82" pos:column="62"/></name> <operator pos:line="82" pos:column="63">*<pos:position pos:line="82" pos:column="64"/></operator></expr></argument>)<pos:position pos:line="82" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="82" pos:column="67">0<pos:position pos:line="82" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="82" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="82" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="72"/></expr_stmt>
	}<pos:position pos:line="83" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="84" pos:column="9">else <if pos:line="84" pos:column="14">if <condition pos:line="84" pos:column="17">(<expr><name pos:line="84" pos:column="18">PLUGIN_NOTIF<pos:position pos:line="84" pos:column="30"/></name> <operator pos:line="84" pos:column="31">==<pos:position pos:line="84" pos:column="33"/></operator> <name pos:line="84" pos:column="34">type<pos:position pos:line="84" pos:column="38"/></name></expr>)<pos:position pos:line="84" pos:column="39"/></condition><then pos:line="84" pos:column="39"> <block pos:line="84" pos:column="40">{
		<comment type="block" pos:line="85" pos:column="17">/*
		 * $_[0] =
		 * {
		 *   severity =&gt; $severity,
		 *   time     =&gt; $time,
		 *   message  =&gt; $msg,
		 *   host     =&gt; $host,
		 *   plugin   =&gt; $plugin,
		 *   type     =&gt; $type,
		 *   plugin_instance =&gt; $instance,
		 *   type_instance   =&gt; $type_instance
		 * };
		 */</comment>
		<decl_stmt><decl><type><name pos:line="98" pos:column="17">notification_t<pos:position pos:line="98" pos:column="31"/></name> <modifier pos:line="98" pos:column="32">*<pos:position pos:line="98" pos:column="33"/></modifier></type><name pos:line="98" pos:column="33">n<pos:position pos:line="98" pos:column="34"/></name></decl>;<pos:position pos:line="98" pos:column="35"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="99" pos:column="17">HV<pos:position pos:line="99" pos:column="19"/></name> <modifier pos:line="99" pos:column="20">*<pos:position pos:line="99" pos:column="21"/></modifier></type><name pos:line="99" pos:column="21">notif<pos:position pos:line="99" pos:column="26"/></name> <init pos:line="99" pos:column="27">= <expr><call><name pos:line="99" pos:column="29">newHV<pos:position pos:line="99" pos:column="34"/></name> <argument_list pos:line="99" pos:column="35">()<pos:position pos:line="99" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="99" pos:column="38"/></decl_stmt>

		<expr_stmt><expr><name pos:line="101" pos:column="17">n<pos:position pos:line="101" pos:column="18"/></name> <operator pos:line="101" pos:column="19">=<pos:position pos:line="101" pos:column="20"/></operator> <call><name pos:line="101" pos:column="21">va_arg<pos:position pos:line="101" pos:column="27"/></name> <argument_list pos:line="101" pos:column="28">(<argument><expr><name pos:line="101" pos:column="29">ap<pos:position pos:line="101" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="33">notification_t<pos:position pos:line="101" pos:column="47"/></name> <operator pos:line="101" pos:column="48">*<pos:position pos:line="101" pos:column="49"/></operator></expr></argument>)<pos:position pos:line="101" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="51"/></expr_stmt>

		<if pos:line="103" pos:column="17">if <condition pos:line="103" pos:column="20">(<expr><operator pos:line="103" pos:column="21">-<pos:position pos:line="103" pos:column="22"/></operator><literal type="number" pos:line="103" pos:column="22">1<pos:position pos:line="103" pos:column="23"/></literal> <operator pos:line="103" pos:column="24">==<pos:position pos:line="103" pos:column="26"/></operator> <macro><name pos:line="103" pos:column="27">notification2hv<pos:position pos:line="103" pos:column="42"/></name> <argument_list pos:line="103" pos:column="43">(<argument pos:line="103" pos:column="44">aTHX_ n<pos:position pos:line="103" pos:column="51"/></argument>, <argument pos:line="103" pos:column="53">notif<pos:position pos:line="103" pos:column="58"/></argument>)<pos:position pos:line="103" pos:column="59"/></argument_list></macro></expr>)<pos:position pos:line="103" pos:column="60"/></condition><then pos:line="103" pos:column="60"> <block pos:line="103" pos:column="61">{
			<expr_stmt><expr><call><name pos:line="104" pos:column="25">hv_clear<pos:position pos:line="104" pos:column="33"/></name> <argument_list pos:line="104" pos:column="34">(<argument><expr><name pos:line="104" pos:column="35">notif<pos:position pos:line="104" pos:column="40"/></name></expr></argument>)<pos:position pos:line="104" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="42"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="105" pos:column="25">hv_undef<pos:position pos:line="105" pos:column="33"/></name> <argument_list pos:line="105" pos:column="34">(<argument><expr><name pos:line="105" pos:column="35">notif<pos:position pos:line="105" pos:column="40"/></name></expr></argument>)<pos:position pos:line="105" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="42"/></expr_stmt>
			<expr_stmt><expr><name pos:line="106" pos:column="25">notif<pos:position pos:line="106" pos:column="30"/></name> <operator pos:line="106" pos:column="31">=<pos:position pos:line="106" pos:column="32"/></operator> <operator pos:line="106" pos:column="33">(<pos:position pos:line="106" pos:column="34"/></operator><name pos:line="106" pos:column="34">HV<pos:position pos:line="106" pos:column="36"/></name> <operator pos:line="106" pos:column="37">*<pos:position pos:line="106" pos:column="38"/></operator><operator pos:line="106" pos:column="38">)<pos:position pos:line="106" pos:column="39"/></operator><operator pos:line="106" pos:column="39">&amp;<pos:position pos:line="106" pos:column="44"/></operator><name pos:line="106" pos:column="40">PL_sv_undef<pos:position pos:line="106" pos:column="51"/></name></expr>;<pos:position pos:line="106" pos:column="52"/></expr_stmt>
			<expr_stmt><expr><name pos:line="107" pos:column="25">ret<pos:position pos:line="107" pos:column="28"/></name> <operator pos:line="107" pos:column="29">=<pos:position pos:line="107" pos:column="30"/></operator> <operator pos:line="107" pos:column="31">-<pos:position pos:line="107" pos:column="32"/></operator><literal type="number" pos:line="107" pos:column="32">1<pos:position pos:line="107" pos:column="33"/></literal></expr>;<pos:position pos:line="107" pos:column="34"/></expr_stmt>
		}<pos:position pos:line="108" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="110" pos:column="17">XPUSHs<pos:position pos:line="110" pos:column="23"/></name> <argument_list pos:line="110" pos:column="24">(<argument><expr><call><name pos:line="110" pos:column="25">sv_2mortal<pos:position pos:line="110" pos:column="35"/></name> <argument_list pos:line="110" pos:column="36">(<argument><expr><call><name pos:line="110" pos:column="37">newRV_noinc<pos:position pos:line="110" pos:column="48"/></name> <argument_list pos:line="110" pos:column="49">(<argument><expr><operator pos:line="110" pos:column="50">(<pos:position pos:line="110" pos:column="51"/></operator><name pos:line="110" pos:column="51">SV<pos:position pos:line="110" pos:column="53"/></name> <operator pos:line="110" pos:column="54">*<pos:position pos:line="110" pos:column="55"/></operator><operator pos:line="110" pos:column="55">)<pos:position pos:line="110" pos:column="56"/></operator><name pos:line="110" pos:column="56">notif<pos:position pos:line="110" pos:column="61"/></name></expr></argument>)<pos:position pos:line="110" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="110" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="110" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="65"/></expr_stmt>
	}<pos:position pos:line="111" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="112" pos:column="9">else <if pos:line="112" pos:column="14">if <condition pos:line="112" pos:column="17">(<expr><name pos:line="112" pos:column="18">PLUGIN_FLUSH<pos:position pos:line="112" pos:column="30"/></name> <operator pos:line="112" pos:column="31">==<pos:position pos:line="112" pos:column="33"/></operator> <name pos:line="112" pos:column="34">type<pos:position pos:line="112" pos:column="38"/></name></expr>)<pos:position pos:line="112" pos:column="39"/></condition><then pos:line="112" pos:column="39"> <block pos:line="112" pos:column="40">{
		<comment type="block" pos:line="113" pos:column="17">/*
		 * $_[0] = $timeout;
		 * $_[1] = $identifier;
		 */</comment>
		<expr_stmt><expr><call><name pos:line="117" pos:column="17">XPUSHs<pos:position pos:line="117" pos:column="23"/></name> <argument_list pos:line="117" pos:column="24">(<argument><expr><call><name pos:line="117" pos:column="25">sv_2mortal<pos:position pos:line="117" pos:column="35"/></name> <argument_list pos:line="117" pos:column="36">(<argument><expr><call><name pos:line="117" pos:column="37">newSViv<pos:position pos:line="117" pos:column="44"/></name> <argument_list pos:line="117" pos:column="45">(<argument><expr><call><name pos:line="117" pos:column="46">va_arg<pos:position pos:line="117" pos:column="52"/></name> <argument_list pos:line="117" pos:column="53">(<argument><expr><name pos:line="117" pos:column="54">ap<pos:position pos:line="117" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="58">int<pos:position pos:line="117" pos:column="61"/></name></expr></argument>)<pos:position pos:line="117" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="117" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="117" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="117" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="66"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="118" pos:column="17">XPUSHs<pos:position pos:line="118" pos:column="23"/></name> <argument_list pos:line="118" pos:column="24">(<argument><expr><call><name pos:line="118" pos:column="25">sv_2mortal<pos:position pos:line="118" pos:column="35"/></name> <argument_list pos:line="118" pos:column="36">(<argument><expr><call><name pos:line="118" pos:column="37">newSVpv<pos:position pos:line="118" pos:column="44"/></name> <argument_list pos:line="118" pos:column="45">(<argument><expr><call><name pos:line="118" pos:column="46">va_arg<pos:position pos:line="118" pos:column="52"/></name> <argument_list pos:line="118" pos:column="53">(<argument><expr><name pos:line="118" pos:column="54">ap<pos:position pos:line="118" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="58">char<pos:position pos:line="118" pos:column="62"/></name> <operator pos:line="118" pos:column="63">*<pos:position pos:line="118" pos:column="64"/></operator></expr></argument>)<pos:position pos:line="118" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="118" pos:column="67">0<pos:position pos:line="118" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="118" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="118" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="118" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="72"/></expr_stmt>
	}<pos:position pos:line="119" pos:column="10"/></block></then></if></elseif></if>

	<expr_stmt><expr><name pos:line="121" pos:column="9">PUTBACK<pos:position pos:line="121" pos:column="16"/></name></expr>;<pos:position pos:line="121" pos:column="17"/></expr_stmt>

	<expr_stmt><expr><name pos:line="123" pos:column="9">retvals<pos:position pos:line="123" pos:column="16"/></name> <operator pos:line="123" pos:column="17">=<pos:position pos:line="123" pos:column="18"/></operator> <call><name pos:line="123" pos:column="19">call_pv<pos:position pos:line="123" pos:column="26"/></name> <argument_list pos:line="123" pos:column="27">(<argument><expr><literal type="string" pos:line="123" pos:column="28">"Collectd::plugin_call_all"<pos:position pos:line="123" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="123" pos:column="57">G_SCALAR<pos:position pos:line="123" pos:column="65"/></name></expr></argument>)<pos:position pos:line="123" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="67"/></expr_stmt>

	<expr_stmt><expr><name pos:line="125" pos:column="9">SPAGAIN<pos:position pos:line="125" pos:column="16"/></name></expr>;<pos:position pos:line="125" pos:column="17"/></expr_stmt>
	<if pos:line="126" pos:column="9">if <condition pos:line="126" pos:column="12">(<expr><literal type="number" pos:line="126" pos:column="13">0<pos:position pos:line="126" pos:column="14"/></literal> <operator pos:line="126" pos:column="15">&lt;<pos:position pos:line="126" pos:column="19"/></operator> <name pos:line="126" pos:column="17">retvals<pos:position pos:line="126" pos:column="24"/></name></expr>)<pos:position pos:line="126" pos:column="25"/></condition><then pos:line="126" pos:column="25"> <block pos:line="126" pos:column="26">{
		<decl_stmt><decl><type><name pos:line="127" pos:column="17">SV<pos:position pos:line="127" pos:column="19"/></name> <modifier pos:line="127" pos:column="20">*<pos:position pos:line="127" pos:column="21"/></modifier></type><name pos:line="127" pos:column="21">tmp<pos:position pos:line="127" pos:column="24"/></name> <init pos:line="127" pos:column="25">= <expr><name pos:line="127" pos:column="27">POPs<pos:position pos:line="127" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="127" pos:column="32"/></decl_stmt>
		<if pos:line="128" pos:column="17">if <condition pos:line="128" pos:column="20">(<expr><operator pos:line="128" pos:column="21">!<pos:position pos:line="128" pos:column="22"/></operator> <call><name pos:line="128" pos:column="23">SvTRUE<pos:position pos:line="128" pos:column="29"/></name> <argument_list pos:line="128" pos:column="30">(<argument><expr><name pos:line="128" pos:column="31">tmp<pos:position pos:line="128" pos:column="34"/></name></expr></argument>)<pos:position pos:line="128" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="128" pos:column="36"/></condition><then pos:line="128" pos:column="36">
			<block type="pseudo"><expr_stmt><expr><name pos:line="129" pos:column="25">ret<pos:position pos:line="129" pos:column="28"/></name> <operator pos:line="129" pos:column="29">=<pos:position pos:line="129" pos:column="30"/></operator> <operator pos:line="129" pos:column="31">-<pos:position pos:line="129" pos:column="32"/></operator><literal type="number" pos:line="129" pos:column="32">1<pos:position pos:line="129" pos:column="33"/></literal></expr>;<pos:position pos:line="129" pos:column="34"/></expr_stmt></block></then></if>
	}<pos:position pos:line="130" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="132" pos:column="9">PUTBACK<pos:position pos:line="132" pos:column="16"/></name></expr>;<pos:position pos:line="132" pos:column="17"/></expr_stmt>
	<expr_stmt><expr><name pos:line="133" pos:column="9">FREETMPS<pos:position pos:line="133" pos:column="17"/></name></expr>;<pos:position pos:line="133" pos:column="18"/></expr_stmt>
	<expr_stmt><expr><name pos:line="134" pos:column="9">LEAVE<pos:position pos:line="134" pos:column="14"/></name></expr>;<pos:position pos:line="134" pos:column="15"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="136" pos:column="9">va_end<pos:position pos:line="136" pos:column="15"/></name> <argument_list pos:line="136" pos:column="16">(<argument><expr><name pos:line="136" pos:column="17">ap<pos:position pos:line="136" pos:column="19"/></name></expr></argument>)<pos:position pos:line="136" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="21"/></expr_stmt>
	<return pos:line="137" pos:column="9">return <expr><name pos:line="137" pos:column="16">ret<pos:position pos:line="137" pos:column="19"/></name></expr>;<pos:position pos:line="137" pos:column="20"/></return>
}<pos:position pos:line="138" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2061_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">add_to_buffer<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">buffer<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">size_t<pos:position pos:line="1" pos:column="46"/></name></type> <name pos:line="1" pos:column="47">buffer_size<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="60">/* {{{ */</comment>
                         <parameter><decl><type><name pos:line="2" pos:column="26">value_list_t<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">vl_def<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="48">const<pos:position pos:line="2" pos:column="53"/></specifier> <name pos:line="2" pos:column="54">data_set_t<pos:position pos:line="2" pos:column="64"/></name> <modifier pos:line="2" pos:column="65">*<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="66">ds<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>,
                         <parameter><decl><type><specifier pos:line="3" pos:column="26">const<pos:position pos:line="3" pos:column="31"/></specifier> <name pos:line="3" pos:column="32">value_list_t<pos:position pos:line="3" pos:column="44"/></name> <modifier pos:line="3" pos:column="45">*<pos:position pos:line="3" pos:column="46"/></modifier></type><name pos:line="3" pos:column="46">vl<pos:position pos:line="3" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="49"/></parameter_list> <block pos:line="3" pos:column="50">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">buffer_orig<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><name pos:line="4" pos:column="23">buffer<pos:position pos:line="4" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><call><name pos:line="6" pos:column="7">strcmp<pos:position pos:line="6" pos:column="13"/></name><argument_list pos:line="6" pos:column="13">(<argument><expr><name><name pos:line="6" pos:column="14">vl_def<pos:position pos:line="6" pos:column="20"/></name><operator pos:line="6" pos:column="20">-&gt;<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="22">host<pos:position pos:line="6" pos:column="26"/></name></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="28">vl<pos:position pos:line="6" pos:column="30"/></name><operator pos:line="6" pos:column="30">-&gt;<pos:position pos:line="6" pos:column="35"/></operator><name pos:line="6" pos:column="32">host<pos:position pos:line="6" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="37"/></argument_list></call> <operator pos:line="6" pos:column="38">!=<pos:position pos:line="6" pos:column="40"/></operator> <literal type="number" pos:line="6" pos:column="41">0<pos:position pos:line="6" pos:column="42"/></literal></expr>)<pos:position pos:line="6" pos:column="43"/></condition><then pos:line="6" pos:column="43"> <block pos:line="6" pos:column="44">{
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call><name pos:line="7" pos:column="9">write_part_string<pos:position pos:line="7" pos:column="26"/></name><argument_list pos:line="7" pos:column="26">(<argument><expr><operator pos:line="7" pos:column="27">&amp;<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="28">buffer<pos:position pos:line="7" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="36">&amp;<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="37">buffer_size<pos:position pos:line="7" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="50">TYPE_HOST<pos:position pos:line="7" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="61">vl<pos:position pos:line="7" pos:column="63"/></name><operator pos:line="7" pos:column="63">-&gt;<pos:position pos:line="7" pos:column="68"/></operator><name pos:line="7" pos:column="65">host<pos:position pos:line="7" pos:column="69"/></name></name></expr></argument>,
                          <argument><expr><call><name pos:line="8" pos:column="27">strlen<pos:position pos:line="8" pos:column="33"/></name><argument_list pos:line="8" pos:column="33">(<argument><expr><name><name pos:line="8" pos:column="34">vl<pos:position pos:line="8" pos:column="36"/></name><operator pos:line="8" pos:column="36">-&gt;<pos:position pos:line="8" pos:column="41"/></operator><name pos:line="8" pos:column="38">host<pos:position pos:line="8" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="44"/></argument_list></call> <operator pos:line="8" pos:column="45">!=<pos:position pos:line="8" pos:column="47"/></operator> <literal type="number" pos:line="8" pos:column="48">0<pos:position pos:line="8" pos:column="49"/></literal></expr>)<pos:position pos:line="8" pos:column="50"/></condition><then pos:line="8" pos:column="50">
      <block type="pseudo"><return pos:line="9" pos:column="7">return <expr><operator pos:line="9" pos:column="14">(<pos:position pos:line="9" pos:column="15"/></operator><operator pos:line="9" pos:column="15">-<pos:position pos:line="9" pos:column="16"/></operator><literal type="number" pos:line="9" pos:column="16">1<pos:position pos:line="9" pos:column="17"/></literal><operator pos:line="9" pos:column="17">)<pos:position pos:line="9" pos:column="18"/></operator></expr>;<pos:position pos:line="9" pos:column="19"/></return></block></then></if>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">sstrncpy<pos:position pos:line="10" pos:column="13"/></name><argument_list pos:line="10" pos:column="13">(<argument><expr><name><name pos:line="10" pos:column="14">vl_def<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">-&gt;<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="22">host<pos:position pos:line="10" pos:column="26"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="28">vl<pos:position pos:line="10" pos:column="30"/></name><operator pos:line="10" pos:column="30">-&gt;<pos:position pos:line="10" pos:column="35"/></operator><name pos:line="10" pos:column="32">host<pos:position pos:line="10" pos:column="36"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="38">sizeof<argument_list pos:line="10" pos:column="44">(<argument><expr><name><name pos:line="10" pos:column="45">vl_def<pos:position pos:line="10" pos:column="51"/></name><operator pos:line="10" pos:column="51">-&gt;<pos:position pos:line="10" pos:column="56"/></operator><name pos:line="10" pos:column="53">host<pos:position pos:line="10" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="60"/></expr_stmt>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>

  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name><name pos:line="13" pos:column="7">vl_def<pos:position pos:line="13" pos:column="13"/></name><operator pos:line="13" pos:column="13">-&gt;<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="15">time<pos:position pos:line="13" pos:column="19"/></name></name> <operator pos:line="13" pos:column="20">!=<pos:position pos:line="13" pos:column="22"/></operator> <name><name pos:line="13" pos:column="23">vl<pos:position pos:line="13" pos:column="25"/></name><operator pos:line="13" pos:column="25">-&gt;<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="27">time<pos:position pos:line="13" pos:column="31"/></name></name></expr>)<pos:position pos:line="13" pos:column="32"/></condition><then pos:line="13" pos:column="32"> <block pos:line="13" pos:column="33">{
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><call><name pos:line="14" pos:column="9">write_part_number<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><operator pos:line="14" pos:column="27">&amp;<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="28">buffer<pos:position pos:line="14" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="36">&amp;<pos:position pos:line="14" pos:column="41"/></operator><name pos:line="14" pos:column="37">buffer_size<pos:position pos:line="14" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="50">TYPE_TIME_HR<pos:position pos:line="14" pos:column="62"/></name></expr></argument>,
                          <argument><expr><operator pos:line="15" pos:column="27">(<pos:position pos:line="15" pos:column="28"/></operator><name pos:line="15" pos:column="28">uint64_t<pos:position pos:line="15" pos:column="36"/></name><operator pos:line="15" pos:column="36">)<pos:position pos:line="15" pos:column="37"/></operator><name><name pos:line="15" pos:column="37">vl<pos:position pos:line="15" pos:column="39"/></name><operator pos:line="15" pos:column="39">-&gt;<pos:position pos:line="15" pos:column="44"/></operator><name pos:line="15" pos:column="41">time<pos:position pos:line="15" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="47"/></condition><then pos:line="15" pos:column="47">
      <block type="pseudo"><return pos:line="16" pos:column="7">return <expr><operator pos:line="16" pos:column="14">(<pos:position pos:line="16" pos:column="15"/></operator><operator pos:line="16" pos:column="15">-<pos:position pos:line="16" pos:column="16"/></operator><literal type="number" pos:line="16" pos:column="16">1<pos:position pos:line="16" pos:column="17"/></literal><operator pos:line="16" pos:column="17">)<pos:position pos:line="16" pos:column="18"/></operator></expr>;<pos:position pos:line="16" pos:column="19"/></return></block></then></if>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">vl_def<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">-&gt;<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="13">time<pos:position pos:line="17" pos:column="17"/></name></name> <operator pos:line="17" pos:column="18">=<pos:position pos:line="17" pos:column="19"/></operator> <name><name pos:line="17" pos:column="20">vl<pos:position pos:line="17" pos:column="22"/></name><operator pos:line="17" pos:column="22">-&gt;<pos:position pos:line="17" pos:column="27"/></operator><name pos:line="17" pos:column="24">time<pos:position pos:line="17" pos:column="28"/></name></name></expr>;<pos:position pos:line="17" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>

  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><name><name pos:line="20" pos:column="7">vl_def<pos:position pos:line="20" pos:column="13"/></name><operator pos:line="20" pos:column="13">-&gt;<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="15">interval<pos:position pos:line="20" pos:column="23"/></name></name> <operator pos:line="20" pos:column="24">!=<pos:position pos:line="20" pos:column="26"/></operator> <name><name pos:line="20" pos:column="27">vl<pos:position pos:line="20" pos:column="29"/></name><operator pos:line="20" pos:column="29">-&gt;<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="31">interval<pos:position pos:line="20" pos:column="39"/></name></name></expr>)<pos:position pos:line="20" pos:column="40"/></condition><then pos:line="20" pos:column="40"> <block pos:line="20" pos:column="41">{
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><call><name pos:line="21" pos:column="9">write_part_number<pos:position pos:line="21" pos:column="26"/></name><argument_list pos:line="21" pos:column="26">(<argument><expr><operator pos:line="21" pos:column="27">&amp;<pos:position pos:line="21" pos:column="32"/></operator><name pos:line="21" pos:column="28">buffer<pos:position pos:line="21" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="36">&amp;<pos:position pos:line="21" pos:column="41"/></operator><name pos:line="21" pos:column="37">buffer_size<pos:position pos:line="21" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="50">TYPE_INTERVAL_HR<pos:position pos:line="21" pos:column="66"/></name></expr></argument>,
                          <argument><expr><operator pos:line="22" pos:column="27">(<pos:position pos:line="22" pos:column="28"/></operator><name pos:line="22" pos:column="28">uint64_t<pos:position pos:line="22" pos:column="36"/></name><operator pos:line="22" pos:column="36">)<pos:position pos:line="22" pos:column="37"/></operator><name><name pos:line="22" pos:column="37">vl<pos:position pos:line="22" pos:column="39"/></name><operator pos:line="22" pos:column="39">-&gt;<pos:position pos:line="22" pos:column="44"/></operator><name pos:line="22" pos:column="41">interval<pos:position pos:line="22" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="51"/></condition><then pos:line="22" pos:column="51">
      <block type="pseudo"><return pos:line="23" pos:column="7">return <expr><operator pos:line="23" pos:column="14">(<pos:position pos:line="23" pos:column="15"/></operator><operator pos:line="23" pos:column="15">-<pos:position pos:line="23" pos:column="16"/></operator><literal type="number" pos:line="23" pos:column="16">1<pos:position pos:line="23" pos:column="17"/></literal><operator pos:line="23" pos:column="17">)<pos:position pos:line="23" pos:column="18"/></operator></expr>;<pos:position pos:line="23" pos:column="19"/></return></block></then></if>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">vl_def<pos:position pos:line="24" pos:column="11"/></name><operator pos:line="24" pos:column="11">-&gt;<pos:position pos:line="24" pos:column="16"/></operator><name pos:line="24" pos:column="13">interval<pos:position pos:line="24" pos:column="21"/></name></name> <operator pos:line="24" pos:column="22">=<pos:position pos:line="24" pos:column="23"/></operator> <name><name pos:line="24" pos:column="24">vl<pos:position pos:line="24" pos:column="26"/></name><operator pos:line="24" pos:column="26">-&gt;<pos:position pos:line="24" pos:column="31"/></operator><name pos:line="24" pos:column="28">interval<pos:position pos:line="24" pos:column="36"/></name></name></expr>;<pos:position pos:line="24" pos:column="37"/></expr_stmt>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if>

  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><call><name pos:line="27" pos:column="7">strcmp<pos:position pos:line="27" pos:column="13"/></name><argument_list pos:line="27" pos:column="13">(<argument><expr><name><name pos:line="27" pos:column="14">vl_def<pos:position pos:line="27" pos:column="20"/></name><operator pos:line="27" pos:column="20">-&gt;<pos:position pos:line="27" pos:column="25"/></operator><name pos:line="27" pos:column="22">plugin<pos:position pos:line="27" pos:column="28"/></name></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="30">vl<pos:position pos:line="27" pos:column="32"/></name><operator pos:line="27" pos:column="32">-&gt;<pos:position pos:line="27" pos:column="37"/></operator><name pos:line="27" pos:column="34">plugin<pos:position pos:line="27" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="41"/></argument_list></call> <operator pos:line="27" pos:column="42">!=<pos:position pos:line="27" pos:column="44"/></operator> <literal type="number" pos:line="27" pos:column="45">0<pos:position pos:line="27" pos:column="46"/></literal></expr>)<pos:position pos:line="27" pos:column="47"/></condition><then pos:line="27" pos:column="47"> <block pos:line="27" pos:column="48">{
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><call><name pos:line="28" pos:column="9">write_part_string<pos:position pos:line="28" pos:column="26"/></name><argument_list pos:line="28" pos:column="26">(<argument><expr><operator pos:line="28" pos:column="27">&amp;<pos:position pos:line="28" pos:column="32"/></operator><name pos:line="28" pos:column="28">buffer<pos:position pos:line="28" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="36">&amp;<pos:position pos:line="28" pos:column="41"/></operator><name pos:line="28" pos:column="37">buffer_size<pos:position pos:line="28" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="50">TYPE_PLUGIN<pos:position pos:line="28" pos:column="61"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="63">vl<pos:position pos:line="28" pos:column="65"/></name><operator pos:line="28" pos:column="65">-&gt;<pos:position pos:line="28" pos:column="70"/></operator><name pos:line="28" pos:column="67">plugin<pos:position pos:line="28" pos:column="73"/></name></name></expr></argument>,
                          <argument><expr><call><name pos:line="29" pos:column="27">strlen<pos:position pos:line="29" pos:column="33"/></name><argument_list pos:line="29" pos:column="33">(<argument><expr><name><name pos:line="29" pos:column="34">vl<pos:position pos:line="29" pos:column="36"/></name><operator pos:line="29" pos:column="36">-&gt;<pos:position pos:line="29" pos:column="41"/></operator><name pos:line="29" pos:column="38">plugin<pos:position pos:line="29" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="46"/></argument_list></call> <operator pos:line="29" pos:column="47">!=<pos:position pos:line="29" pos:column="49"/></operator> <literal type="number" pos:line="29" pos:column="50">0<pos:position pos:line="29" pos:column="51"/></literal></expr>)<pos:position pos:line="29" pos:column="52"/></condition><then pos:line="29" pos:column="52">
      <block type="pseudo"><return pos:line="30" pos:column="7">return <expr><operator pos:line="30" pos:column="14">(<pos:position pos:line="30" pos:column="15"/></operator><operator pos:line="30" pos:column="15">-<pos:position pos:line="30" pos:column="16"/></operator><literal type="number" pos:line="30" pos:column="16">1<pos:position pos:line="30" pos:column="17"/></literal><operator pos:line="30" pos:column="17">)<pos:position pos:line="30" pos:column="18"/></operator></expr>;<pos:position pos:line="30" pos:column="19"/></return></block></then></if>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">sstrncpy<pos:position pos:line="31" pos:column="13"/></name><argument_list pos:line="31" pos:column="13">(<argument><expr><name><name pos:line="31" pos:column="14">vl_def<pos:position pos:line="31" pos:column="20"/></name><operator pos:line="31" pos:column="20">-&gt;<pos:position pos:line="31" pos:column="25"/></operator><name pos:line="31" pos:column="22">plugin<pos:position pos:line="31" pos:column="28"/></name></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="30">vl<pos:position pos:line="31" pos:column="32"/></name><operator pos:line="31" pos:column="32">-&gt;<pos:position pos:line="31" pos:column="37"/></operator><name pos:line="31" pos:column="34">plugin<pos:position pos:line="31" pos:column="40"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="42">sizeof<argument_list pos:line="31" pos:column="48">(<argument><expr><name><name pos:line="31" pos:column="49">vl_def<pos:position pos:line="31" pos:column="55"/></name><operator pos:line="31" pos:column="55">-&gt;<pos:position pos:line="31" pos:column="60"/></operator><name pos:line="31" pos:column="57">plugin<pos:position pos:line="31" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="31" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="66"/></expr_stmt>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if>

  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><call><name pos:line="34" pos:column="7">strcmp<pos:position pos:line="34" pos:column="13"/></name><argument_list pos:line="34" pos:column="13">(<argument><expr><name><name pos:line="34" pos:column="14">vl_def<pos:position pos:line="34" pos:column="20"/></name><operator pos:line="34" pos:column="20">-&gt;<pos:position pos:line="34" pos:column="25"/></operator><name pos:line="34" pos:column="22">plugin_instance<pos:position pos:line="34" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="39">vl<pos:position pos:line="34" pos:column="41"/></name><operator pos:line="34" pos:column="41">-&gt;<pos:position pos:line="34" pos:column="46"/></operator><name pos:line="34" pos:column="43">plugin_instance<pos:position pos:line="34" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="59"/></argument_list></call> <operator pos:line="34" pos:column="60">!=<pos:position pos:line="34" pos:column="62"/></operator> <literal type="number" pos:line="34" pos:column="63">0<pos:position pos:line="34" pos:column="64"/></literal></expr>)<pos:position pos:line="34" pos:column="65"/></condition><then pos:line="34" pos:column="65"> <block pos:line="34" pos:column="66">{
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><call><name pos:line="35" pos:column="9">write_part_string<pos:position pos:line="35" pos:column="26"/></name><argument_list pos:line="35" pos:column="26">(<argument><expr><operator pos:line="35" pos:column="27">&amp;<pos:position pos:line="35" pos:column="32"/></operator><name pos:line="35" pos:column="28">buffer<pos:position pos:line="35" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="36">&amp;<pos:position pos:line="35" pos:column="41"/></operator><name pos:line="35" pos:column="37">buffer_size<pos:position pos:line="35" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="50">TYPE_PLUGIN_INSTANCE<pos:position pos:line="35" pos:column="70"/></name></expr></argument>,
                          <argument><expr><name><name pos:line="36" pos:column="27">vl<pos:position pos:line="36" pos:column="29"/></name><operator pos:line="36" pos:column="29">-&gt;<pos:position pos:line="36" pos:column="34"/></operator><name pos:line="36" pos:column="31">plugin_instance<pos:position pos:line="36" pos:column="46"/></name></name></expr></argument>,
                          <argument><expr><call><name pos:line="37" pos:column="27">strlen<pos:position pos:line="37" pos:column="33"/></name><argument_list pos:line="37" pos:column="33">(<argument><expr><name><name pos:line="37" pos:column="34">vl<pos:position pos:line="37" pos:column="36"/></name><operator pos:line="37" pos:column="36">-&gt;<pos:position pos:line="37" pos:column="41"/></operator><name pos:line="37" pos:column="38">plugin_instance<pos:position pos:line="37" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="55"/></argument_list></call> <operator pos:line="37" pos:column="56">!=<pos:position pos:line="37" pos:column="58"/></operator> <literal type="number" pos:line="37" pos:column="59">0<pos:position pos:line="37" pos:column="60"/></literal></expr>)<pos:position pos:line="37" pos:column="61"/></condition><then pos:line="37" pos:column="61">
      <block type="pseudo"><return pos:line="38" pos:column="7">return <expr><operator pos:line="38" pos:column="14">(<pos:position pos:line="38" pos:column="15"/></operator><operator pos:line="38" pos:column="15">-<pos:position pos:line="38" pos:column="16"/></operator><literal type="number" pos:line="38" pos:column="16">1<pos:position pos:line="38" pos:column="17"/></literal><operator pos:line="38" pos:column="17">)<pos:position pos:line="38" pos:column="18"/></operator></expr>;<pos:position pos:line="38" pos:column="19"/></return></block></then></if>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">sstrncpy<pos:position pos:line="39" pos:column="13"/></name><argument_list pos:line="39" pos:column="13">(<argument><expr><name><name pos:line="39" pos:column="14">vl_def<pos:position pos:line="39" pos:column="20"/></name><operator pos:line="39" pos:column="20">-&gt;<pos:position pos:line="39" pos:column="25"/></operator><name pos:line="39" pos:column="22">plugin_instance<pos:position pos:line="39" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="39">vl<pos:position pos:line="39" pos:column="41"/></name><operator pos:line="39" pos:column="41">-&gt;<pos:position pos:line="39" pos:column="46"/></operator><name pos:line="39" pos:column="43">plugin_instance<pos:position pos:line="39" pos:column="58"/></name></name></expr></argument>,
             <argument><expr><sizeof pos:line="40" pos:column="14">sizeof<argument_list pos:line="40" pos:column="20">(<argument><expr><name><name pos:line="40" pos:column="21">vl_def<pos:position pos:line="40" pos:column="27"/></name><operator pos:line="40" pos:column="27">-&gt;<pos:position pos:line="40" pos:column="32"/></operator><name pos:line="40" pos:column="29">plugin_instance<pos:position pos:line="40" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="40" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="47"/></expr_stmt>
  }<pos:position pos:line="41" pos:column="4"/></block></then></if>

  <if pos:line="43" pos:column="3">if <condition pos:line="43" pos:column="6">(<expr><call><name pos:line="43" pos:column="7">strcmp<pos:position pos:line="43" pos:column="13"/></name><argument_list pos:line="43" pos:column="13">(<argument><expr><name><name pos:line="43" pos:column="14">vl_def<pos:position pos:line="43" pos:column="20"/></name><operator pos:line="43" pos:column="20">-&gt;<pos:position pos:line="43" pos:column="25"/></operator><name pos:line="43" pos:column="22">type<pos:position pos:line="43" pos:column="26"/></name></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="28">vl<pos:position pos:line="43" pos:column="30"/></name><operator pos:line="43" pos:column="30">-&gt;<pos:position pos:line="43" pos:column="35"/></operator><name pos:line="43" pos:column="32">type<pos:position pos:line="43" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="37"/></argument_list></call> <operator pos:line="43" pos:column="38">!=<pos:position pos:line="43" pos:column="40"/></operator> <literal type="number" pos:line="43" pos:column="41">0<pos:position pos:line="43" pos:column="42"/></literal></expr>)<pos:position pos:line="43" pos:column="43"/></condition><then pos:line="43" pos:column="43"> <block pos:line="43" pos:column="44">{
    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><call><name pos:line="44" pos:column="9">write_part_string<pos:position pos:line="44" pos:column="26"/></name><argument_list pos:line="44" pos:column="26">(<argument><expr><operator pos:line="44" pos:column="27">&amp;<pos:position pos:line="44" pos:column="32"/></operator><name pos:line="44" pos:column="28">buffer<pos:position pos:line="44" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="36">&amp;<pos:position pos:line="44" pos:column="41"/></operator><name pos:line="44" pos:column="37">buffer_size<pos:position pos:line="44" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="50">TYPE_TYPE<pos:position pos:line="44" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="61">vl<pos:position pos:line="44" pos:column="63"/></name><operator pos:line="44" pos:column="63">-&gt;<pos:position pos:line="44" pos:column="68"/></operator><name pos:line="44" pos:column="65">type<pos:position pos:line="44" pos:column="69"/></name></name></expr></argument>,
                          <argument><expr><call><name pos:line="45" pos:column="27">strlen<pos:position pos:line="45" pos:column="33"/></name><argument_list pos:line="45" pos:column="33">(<argument><expr><name><name pos:line="45" pos:column="34">vl<pos:position pos:line="45" pos:column="36"/></name><operator pos:line="45" pos:column="36">-&gt;<pos:position pos:line="45" pos:column="41"/></operator><name pos:line="45" pos:column="38">type<pos:position pos:line="45" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="45" pos:column="44"/></argument_list></call> <operator pos:line="45" pos:column="45">!=<pos:position pos:line="45" pos:column="47"/></operator> <literal type="number" pos:line="45" pos:column="48">0<pos:position pos:line="45" pos:column="49"/></literal></expr>)<pos:position pos:line="45" pos:column="50"/></condition><then pos:line="45" pos:column="50">
      <block type="pseudo"><return pos:line="46" pos:column="7">return <expr><operator pos:line="46" pos:column="14">(<pos:position pos:line="46" pos:column="15"/></operator><operator pos:line="46" pos:column="15">-<pos:position pos:line="46" pos:column="16"/></operator><literal type="number" pos:line="46" pos:column="16">1<pos:position pos:line="46" pos:column="17"/></literal><operator pos:line="46" pos:column="17">)<pos:position pos:line="46" pos:column="18"/></operator></expr>;<pos:position pos:line="46" pos:column="19"/></return></block></then></if>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">sstrncpy<pos:position pos:line="47" pos:column="13"/></name><argument_list pos:line="47" pos:column="13">(<argument><expr><name><name pos:line="47" pos:column="14">vl_def<pos:position pos:line="47" pos:column="20"/></name><operator pos:line="47" pos:column="20">-&gt;<pos:position pos:line="47" pos:column="25"/></operator><name pos:line="47" pos:column="22">type<pos:position pos:line="47" pos:column="26"/></name></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="28">ds<pos:position pos:line="47" pos:column="30"/></name><operator pos:line="47" pos:column="30">-&gt;<pos:position pos:line="47" pos:column="35"/></operator><name pos:line="47" pos:column="32">type<pos:position pos:line="47" pos:column="36"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="47" pos:column="38">sizeof<argument_list pos:line="47" pos:column="44">(<argument><expr><name><name pos:line="47" pos:column="45">vl_def<pos:position pos:line="47" pos:column="51"/></name><operator pos:line="47" pos:column="51">-&gt;<pos:position pos:line="47" pos:column="56"/></operator><name pos:line="47" pos:column="53">type<pos:position pos:line="47" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="47" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="60"/></expr_stmt>
  }<pos:position pos:line="48" pos:column="4"/></block></then></if>

  <if pos:line="50" pos:column="3">if <condition pos:line="50" pos:column="6">(<expr><call><name pos:line="50" pos:column="7">strcmp<pos:position pos:line="50" pos:column="13"/></name><argument_list pos:line="50" pos:column="13">(<argument><expr><name><name pos:line="50" pos:column="14">vl_def<pos:position pos:line="50" pos:column="20"/></name><operator pos:line="50" pos:column="20">-&gt;<pos:position pos:line="50" pos:column="25"/></operator><name pos:line="50" pos:column="22">type_instance<pos:position pos:line="50" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="37">vl<pos:position pos:line="50" pos:column="39"/></name><operator pos:line="50" pos:column="39">-&gt;<pos:position pos:line="50" pos:column="44"/></operator><name pos:line="50" pos:column="41">type_instance<pos:position pos:line="50" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="55"/></argument_list></call> <operator pos:line="50" pos:column="56">!=<pos:position pos:line="50" pos:column="58"/></operator> <literal type="number" pos:line="50" pos:column="59">0<pos:position pos:line="50" pos:column="60"/></literal></expr>)<pos:position pos:line="50" pos:column="61"/></condition><then pos:line="50" pos:column="61"> <block pos:line="50" pos:column="62">{
    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><call><name pos:line="51" pos:column="9">write_part_string<pos:position pos:line="51" pos:column="26"/></name><argument_list pos:line="51" pos:column="26">(<argument><expr><operator pos:line="51" pos:column="27">&amp;<pos:position pos:line="51" pos:column="32"/></operator><name pos:line="51" pos:column="28">buffer<pos:position pos:line="51" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="36">&amp;<pos:position pos:line="51" pos:column="41"/></operator><name pos:line="51" pos:column="37">buffer_size<pos:position pos:line="51" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="50">TYPE_TYPE_INSTANCE<pos:position pos:line="51" pos:column="68"/></name></expr></argument>,
                          <argument><expr><name><name pos:line="52" pos:column="27">vl<pos:position pos:line="52" pos:column="29"/></name><operator pos:line="52" pos:column="29">-&gt;<pos:position pos:line="52" pos:column="34"/></operator><name pos:line="52" pos:column="31">type_instance<pos:position pos:line="52" pos:column="44"/></name></name></expr></argument>, <argument><expr><call><name pos:line="52" pos:column="46">strlen<pos:position pos:line="52" pos:column="52"/></name><argument_list pos:line="52" pos:column="52">(<argument><expr><name><name pos:line="52" pos:column="53">vl<pos:position pos:line="52" pos:column="55"/></name><operator pos:line="52" pos:column="55">-&gt;<pos:position pos:line="52" pos:column="60"/></operator><name pos:line="52" pos:column="57">type_instance<pos:position pos:line="52" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="52" pos:column="72"/></argument_list></call> <operator pos:line="52" pos:column="73">!=<pos:position pos:line="52" pos:column="75"/></operator> <literal type="number" pos:line="52" pos:column="76">0<pos:position pos:line="52" pos:column="77"/></literal></expr>)<pos:position pos:line="52" pos:column="78"/></condition><then pos:line="52" pos:column="78">
      <block type="pseudo"><return pos:line="53" pos:column="7">return <expr><operator pos:line="53" pos:column="14">(<pos:position pos:line="53" pos:column="15"/></operator><operator pos:line="53" pos:column="15">-<pos:position pos:line="53" pos:column="16"/></operator><literal type="number" pos:line="53" pos:column="16">1<pos:position pos:line="53" pos:column="17"/></literal><operator pos:line="53" pos:column="17">)<pos:position pos:line="53" pos:column="18"/></operator></expr>;<pos:position pos:line="53" pos:column="19"/></return></block></then></if>
    <expr_stmt><expr><call><name pos:line="54" pos:column="5">sstrncpy<pos:position pos:line="54" pos:column="13"/></name><argument_list pos:line="54" pos:column="13">(<argument><expr><name><name pos:line="54" pos:column="14">vl_def<pos:position pos:line="54" pos:column="20"/></name><operator pos:line="54" pos:column="20">-&gt;<pos:position pos:line="54" pos:column="25"/></operator><name pos:line="54" pos:column="22">type_instance<pos:position pos:line="54" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="37">vl<pos:position pos:line="54" pos:column="39"/></name><operator pos:line="54" pos:column="39">-&gt;<pos:position pos:line="54" pos:column="44"/></operator><name pos:line="54" pos:column="41">type_instance<pos:position pos:line="54" pos:column="54"/></name></name></expr></argument>,
             <argument><expr><sizeof pos:line="55" pos:column="14">sizeof<argument_list pos:line="55" pos:column="20">(<argument><expr><name><name pos:line="55" pos:column="21">vl_def<pos:position pos:line="55" pos:column="27"/></name><operator pos:line="55" pos:column="27">-&gt;<pos:position pos:line="55" pos:column="32"/></operator><name pos:line="55" pos:column="29">type_instance<pos:position pos:line="55" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="55" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="45"/></expr_stmt>
  }<pos:position pos:line="56" pos:column="4"/></block></then></if>

  <if pos:line="58" pos:column="3">if <condition pos:line="58" pos:column="6">(<expr><call><name pos:line="58" pos:column="7">write_part_values<pos:position pos:line="58" pos:column="24"/></name><argument_list pos:line="58" pos:column="24">(<argument><expr><operator pos:line="58" pos:column="25">&amp;<pos:position pos:line="58" pos:column="30"/></operator><name pos:line="58" pos:column="26">buffer<pos:position pos:line="58" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="58" pos:column="34">&amp;<pos:position pos:line="58" pos:column="39"/></operator><name pos:line="58" pos:column="35">buffer_size<pos:position pos:line="58" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="48">ds<pos:position pos:line="58" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="52">vl<pos:position pos:line="58" pos:column="54"/></name></expr></argument>)<pos:position pos:line="58" pos:column="55"/></argument_list></call> <operator pos:line="58" pos:column="56">!=<pos:position pos:line="58" pos:column="58"/></operator> <literal type="number" pos:line="58" pos:column="59">0<pos:position pos:line="58" pos:column="60"/></literal></expr>)<pos:position pos:line="58" pos:column="61"/></condition><then pos:line="58" pos:column="61">
    <block type="pseudo"><return pos:line="59" pos:column="5">return <expr><operator pos:line="59" pos:column="12">(<pos:position pos:line="59" pos:column="13"/></operator><operator pos:line="59" pos:column="13">-<pos:position pos:line="59" pos:column="14"/></operator><literal type="number" pos:line="59" pos:column="14">1<pos:position pos:line="59" pos:column="15"/></literal><operator pos:line="59" pos:column="15">)<pos:position pos:line="59" pos:column="16"/></operator></expr>;<pos:position pos:line="59" pos:column="17"/></return></block></then></if>

  <return pos:line="61" pos:column="3">return <expr><operator pos:line="61" pos:column="10">(<pos:position pos:line="61" pos:column="11"/></operator><name pos:line="61" pos:column="11">buffer<pos:position pos:line="61" pos:column="17"/></name> <operator pos:line="61" pos:column="18">-<pos:position pos:line="61" pos:column="19"/></operator> <name pos:line="61" pos:column="20">buffer_orig<pos:position pos:line="61" pos:column="31"/></name><operator pos:line="61" pos:column="31">)<pos:position pos:line="61" pos:column="32"/></operator></expr>;<pos:position pos:line="61" pos:column="33"/></return>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

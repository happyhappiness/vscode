<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_680_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">read_fork_rate<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">void<pos:position pos:line="1" pos:column="32"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">FILE<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">proc_stat<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">buffer<pos:position pos:line="4" pos:column="20"/></name><index pos:line="4" pos:column="20">[<expr><literal type="number" pos:line="4" pos:column="21">1024<pos:position pos:line="4" pos:column="25"/></literal></expr>]<pos:position pos:line="4" pos:column="26"/></index></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">value_t<pos:position pos:line="5" pos:column="16"/></name></type> <name pos:line="5" pos:column="17">value<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">_Bool<pos:position pos:line="6" pos:column="14"/></name></type> <name pos:line="6" pos:column="15">value_valid<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><literal type="number" pos:line="6" pos:column="29">0<pos:position pos:line="6" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>

	<expr_stmt><expr><name pos:line="8" pos:column="9">proc_stat<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">=<pos:position pos:line="8" pos:column="20"/></operator> <call><name pos:line="8" pos:column="21">fopen<pos:position pos:line="8" pos:column="26"/></name> <argument_list pos:line="8" pos:column="27">(<argument><expr><literal type="string" pos:line="8" pos:column="28">"/proc/stat"<pos:position pos:line="8" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="42">"r"<pos:position pos:line="8" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="47"/></expr_stmt>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">proc_stat<pos:position pos:line="9" pos:column="22"/></name> <operator pos:line="9" pos:column="23">==<pos:position pos:line="9" pos:column="25"/></operator> <name pos:line="9" pos:column="26">NULL<pos:position pos:line="9" pos:column="30"/></name></expr>)<pos:position pos:line="9" pos:column="31"/></condition><then pos:line="9" pos:column="31">
	<block pos:line="10" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">char<pos:position pos:line="11" pos:column="21"/></name></type> <name><name pos:line="11" pos:column="22">errbuf<pos:position pos:line="11" pos:column="28"/></name><index pos:line="11" pos:column="28">[<expr><literal type="number" pos:line="11" pos:column="29">1024<pos:position pos:line="11" pos:column="33"/></literal></expr>]<pos:position pos:line="11" pos:column="34"/></index></name></decl>;<pos:position pos:line="11" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">ERROR<pos:position pos:line="12" pos:column="22"/></name> <argument_list pos:line="12" pos:column="23">(<argument><expr><literal type="string" pos:line="12" pos:column="24">"processes plugin: fopen (/proc/stat) failed: %s"<pos:position pos:line="12" pos:column="73"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="13" pos:column="33">sstrerror<pos:position pos:line="13" pos:column="42"/></name> <argument_list pos:line="13" pos:column="43">(<argument><expr><name pos:line="13" pos:column="44">errno<pos:position pos:line="13" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="51">errbuf<pos:position pos:line="13" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="59">sizeof <argument_list pos:line="13" pos:column="66">(<argument><expr><name pos:line="13" pos:column="67">errbuf<pos:position pos:line="13" pos:column="73"/></name></expr></argument>)<pos:position pos:line="13" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="77"/></expr_stmt>
		<return pos:line="14" pos:column="17">return <expr><operator pos:line="14" pos:column="24">(<pos:position pos:line="14" pos:column="25"/></operator><operator pos:line="14" pos:column="25">-<pos:position pos:line="14" pos:column="26"/></operator><literal type="number" pos:line="14" pos:column="26">1<pos:position pos:line="14" pos:column="27"/></literal><operator pos:line="14" pos:column="27">)<pos:position pos:line="14" pos:column="28"/></operator></expr>;<pos:position pos:line="14" pos:column="29"/></return>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>

	<while pos:line="17" pos:column="9">while <condition pos:line="17" pos:column="15">(<expr><call><name pos:line="17" pos:column="16">fgets<pos:position pos:line="17" pos:column="21"/></name> <argument_list pos:line="17" pos:column="22">(<argument><expr><name pos:line="17" pos:column="23">buffer<pos:position pos:line="17" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="31">sizeof <argument_list pos:line="17" pos:column="38">(<argument><expr><name pos:line="17" pos:column="39">buffer<pos:position pos:line="17" pos:column="45"/></name></expr></argument>)<pos:position pos:line="17" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="17" pos:column="48">proc_stat<pos:position pos:line="17" pos:column="57"/></name></expr></argument>)<pos:position pos:line="17" pos:column="58"/></argument_list></call> <operator pos:line="17" pos:column="59">!=<pos:position pos:line="17" pos:column="61"/></operator> <name pos:line="17" pos:column="62">NULL<pos:position pos:line="17" pos:column="66"/></name></expr>)<pos:position pos:line="17" pos:column="67"/></condition>
	<block pos:line="18" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="19" pos:column="17">int<pos:position pos:line="19" pos:column="20"/></name></type> <name pos:line="19" pos:column="21">status<pos:position pos:line="19" pos:column="27"/></name></decl>;<pos:position pos:line="19" pos:column="28"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="20" pos:column="17">char<pos:position pos:line="20" pos:column="21"/></name> <modifier pos:line="20" pos:column="22">*<pos:position pos:line="20" pos:column="23"/></modifier></type><name><name pos:line="20" pos:column="23">fields<pos:position pos:line="20" pos:column="29"/></name><index pos:line="20" pos:column="29">[<expr><literal type="number" pos:line="20" pos:column="30">3<pos:position pos:line="20" pos:column="31"/></literal></expr>]<pos:position pos:line="20" pos:column="32"/></index></name></decl>;<pos:position pos:line="20" pos:column="33"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="21" pos:column="17">int<pos:position pos:line="21" pos:column="20"/></name></type> <name pos:line="21" pos:column="21">fields_num<pos:position pos:line="21" pos:column="31"/></name></decl>;<pos:position pos:line="21" pos:column="32"/></decl_stmt>

		<expr_stmt><expr><name pos:line="23" pos:column="17">fields_num<pos:position pos:line="23" pos:column="27"/></name> <operator pos:line="23" pos:column="28">=<pos:position pos:line="23" pos:column="29"/></operator> <call><name pos:line="23" pos:column="30">strsplit<pos:position pos:line="23" pos:column="38"/></name> <argument_list pos:line="23" pos:column="39">(<argument><expr><name pos:line="23" pos:column="40">buffer<pos:position pos:line="23" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="48">fields<pos:position pos:line="23" pos:column="54"/></name></expr></argument>,
				<argument><expr><call><name pos:line="24" pos:column="33">STATIC_ARRAY_SIZE<pos:position pos:line="24" pos:column="50"/></name> <argument_list pos:line="24" pos:column="51">(<argument><expr><name pos:line="24" pos:column="52">fields<pos:position pos:line="24" pos:column="58"/></name></expr></argument>)<pos:position pos:line="24" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="61"/></expr_stmt>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name pos:line="25" pos:column="21">fields_num<pos:position pos:line="25" pos:column="31"/></name> <operator pos:line="25" pos:column="32">!=<pos:position pos:line="25" pos:column="34"/></operator> <literal type="number" pos:line="25" pos:column="35">2<pos:position pos:line="25" pos:column="36"/></literal></expr>)<pos:position pos:line="25" pos:column="37"/></condition><then pos:line="25" pos:column="37">
			<block type="pseudo"><continue pos:line="26" pos:column="25">continue;<pos:position pos:line="26" pos:column="34"/></continue></block></then></if>

		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><call><name pos:line="28" pos:column="21">strcmp<pos:position pos:line="28" pos:column="27"/></name> <argument_list pos:line="28" pos:column="28">(<argument><expr><literal type="string" pos:line="28" pos:column="29">"processes"<pos:position pos:line="28" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="42">fields<pos:position pos:line="28" pos:column="48"/></name><index pos:line="28" pos:column="48">[<expr><literal type="number" pos:line="28" pos:column="49">0<pos:position pos:line="28" pos:column="50"/></literal></expr>]<pos:position pos:line="28" pos:column="51"/></index></name></expr></argument>)<pos:position pos:line="28" pos:column="52"/></argument_list></call> <operator pos:line="28" pos:column="53">!=<pos:position pos:line="28" pos:column="55"/></operator> <literal type="number" pos:line="28" pos:column="56">0<pos:position pos:line="28" pos:column="57"/></literal></expr>)<pos:position pos:line="28" pos:column="58"/></condition><then pos:line="28" pos:column="58">
			<block type="pseudo"><continue pos:line="29" pos:column="25">continue;<pos:position pos:line="29" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="31" pos:column="17">status<pos:position pos:line="31" pos:column="23"/></name> <operator pos:line="31" pos:column="24">=<pos:position pos:line="31" pos:column="25"/></operator> <call><name pos:line="31" pos:column="26">parse_value<pos:position pos:line="31" pos:column="37"/></name> <argument_list pos:line="31" pos:column="38">(<argument><expr><name><name pos:line="31" pos:column="39">fields<pos:position pos:line="31" pos:column="45"/></name><index pos:line="31" pos:column="45">[<expr><literal type="number" pos:line="31" pos:column="46">1<pos:position pos:line="31" pos:column="47"/></literal></expr>]<pos:position pos:line="31" pos:column="48"/></index></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="50">&amp;<pos:position pos:line="31" pos:column="55"/></operator><name pos:line="31" pos:column="51">value<pos:position pos:line="31" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="58">DS_TYPE_DERIVE<pos:position pos:line="31" pos:column="72"/></name></expr></argument>)<pos:position pos:line="31" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="74"/></expr_stmt>
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><name pos:line="32" pos:column="21">status<pos:position pos:line="32" pos:column="27"/></name> <operator pos:line="32" pos:column="28">==<pos:position pos:line="32" pos:column="30"/></operator> <literal type="number" pos:line="32" pos:column="31">0<pos:position pos:line="32" pos:column="32"/></literal></expr>)<pos:position pos:line="32" pos:column="33"/></condition><then pos:line="32" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="25">value_valid<pos:position pos:line="33" pos:column="36"/></name> <operator pos:line="33" pos:column="37">=<pos:position pos:line="33" pos:column="38"/></operator> <literal type="number" pos:line="33" pos:column="39">1<pos:position pos:line="33" pos:column="40"/></literal></expr>;<pos:position pos:line="33" pos:column="41"/></expr_stmt></block></then></if>

		<break pos:line="35" pos:column="17">break;<pos:position pos:line="35" pos:column="23"/></break>
	}<pos:position pos:line="36" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="37" pos:column="9">fclose<pos:position pos:line="37" pos:column="15"/></name><argument_list pos:line="37" pos:column="15">(<argument><expr><name pos:line="37" pos:column="16">proc_stat<pos:position pos:line="37" pos:column="25"/></name></expr></argument>)<pos:position pos:line="37" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="27"/></expr_stmt>

	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><operator pos:line="39" pos:column="13">!<pos:position pos:line="39" pos:column="14"/></operator><name pos:line="39" pos:column="14">value_valid<pos:position pos:line="39" pos:column="25"/></name></expr>)<pos:position pos:line="39" pos:column="26"/></condition><then pos:line="39" pos:column="26">
		<block type="pseudo"><return pos:line="40" pos:column="17">return <expr><operator pos:line="40" pos:column="24">(<pos:position pos:line="40" pos:column="25"/></operator><operator pos:line="40" pos:column="25">-<pos:position pos:line="40" pos:column="26"/></operator><literal type="number" pos:line="40" pos:column="26">1<pos:position pos:line="40" pos:column="27"/></literal><operator pos:line="40" pos:column="27">)<pos:position pos:line="40" pos:column="28"/></operator></expr>;<pos:position pos:line="40" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="42" pos:column="9">ps_submit_fork_rate<pos:position pos:line="42" pos:column="28"/></name> <argument_list pos:line="42" pos:column="29">(<argument><expr><name><name pos:line="42" pos:column="30">value<pos:position pos:line="42" pos:column="35"/></name><operator pos:line="42" pos:column="35">.<pos:position pos:line="42" pos:column="36"/></operator><name pos:line="42" pos:column="36">derive<pos:position pos:line="42" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="44"/></expr_stmt>
	<return pos:line="43" pos:column="9">return <expr><operator pos:line="43" pos:column="16">(<pos:position pos:line="43" pos:column="17"/></operator><literal type="number" pos:line="43" pos:column="17">0<pos:position pos:line="43" pos:column="18"/></literal><operator pos:line="43" pos:column="18">)<pos:position pos:line="43" pos:column="19"/></operator></expr>;<pos:position pos:line="43" pos:column="20"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

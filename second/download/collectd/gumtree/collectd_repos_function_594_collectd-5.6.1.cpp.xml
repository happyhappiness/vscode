<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_594_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">load_submit<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">gauge_t<pos:position pos:line="1" pos:column="33"/></name></type> <name pos:line="1" pos:column="34">snum<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">gauge_t<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">mnum<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">gauge_t<pos:position pos:line="1" pos:column="61"/></name></type> <name pos:line="1" pos:column="62">lnum<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">value_t<pos:position pos:line="3" pos:column="16"/></name></type> <name><name pos:line="3" pos:column="17">values<pos:position pos:line="3" pos:column="23"/></name><index pos:line="3" pos:column="23">[<expr><literal type="number" pos:line="3" pos:column="24">3<pos:position pos:line="3" pos:column="25"/></literal></expr>]<pos:position pos:line="3" pos:column="26"/></index></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">value_list_t<pos:position pos:line="4" pos:column="21"/></name></type> <name pos:line="4" pos:column="22">vl<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><name pos:line="4" pos:column="27">VALUE_LIST_INIT<pos:position pos:line="4" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">cores<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><literal type="number" pos:line="5" pos:column="21">0<pos:position pos:line="5" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name></type> <name><name pos:line="6" pos:column="14">errbuf<pos:position pos:line="6" pos:column="20"/></name><index pos:line="6" pos:column="20">[<expr><literal type="number" pos:line="6" pos:column="21">1024<pos:position pos:line="6" pos:column="25"/></literal></expr>]<pos:position pos:line="6" pos:column="26"/></index></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>

<cpp:ifdef pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">ifdef<pos:position pos:line="8" pos:column="7"/></cpp:directive>  <name pos:line="8" pos:column="9">_SC_NPROCESSORS_ONLN<pos:position pos:line="8" pos:column="29"/></name></cpp:ifdef>
        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">report_relative_load<pos:position pos:line="9" pos:column="33"/></name></expr>)<pos:position pos:line="9" pos:column="34"/></condition><then pos:line="9" pos:column="34"> <block pos:line="9" pos:column="35">{
                <if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><operator pos:line="10" pos:column="21">(<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">cores<pos:position pos:line="10" pos:column="27"/></name> <operator pos:line="10" pos:column="28">=<pos:position pos:line="10" pos:column="29"/></operator> <call><name pos:line="10" pos:column="30">sysconf<pos:position pos:line="10" pos:column="37"/></name><argument_list pos:line="10" pos:column="37">(<argument><expr><name pos:line="10" pos:column="38">_SC_NPROCESSORS_ONLN<pos:position pos:line="10" pos:column="58"/></name></expr></argument>)<pos:position pos:line="10" pos:column="59"/></argument_list></call><operator pos:line="10" pos:column="59">)<pos:position pos:line="10" pos:column="60"/></operator> <operator pos:line="10" pos:column="61">&lt;<pos:position pos:line="10" pos:column="65"/></operator> <literal type="number" pos:line="10" pos:column="63">1<pos:position pos:line="10" pos:column="64"/></literal></expr>)<pos:position pos:line="10" pos:column="65"/></condition><then pos:line="10" pos:column="65"> <block pos:line="10" pos:column="66">{
			<expr_stmt><expr><call><name pos:line="11" pos:column="25">WARNING<pos:position pos:line="11" pos:column="32"/></name> <argument_list pos:line="11" pos:column="33">(<argument><expr><literal type="string" pos:line="11" pos:column="34">"load: sysconf failed : %s"<pos:position pos:line="11" pos:column="61"/></literal></expr></argument>,
				 <argument><expr><call><name pos:line="12" pos:column="34">sstrerror<pos:position pos:line="12" pos:column="43"/></name> <argument_list pos:line="12" pos:column="44">(<argument><expr><name pos:line="12" pos:column="45">errno<pos:position pos:line="12" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="52">errbuf<pos:position pos:line="12" pos:column="58"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="60">sizeof <argument_list pos:line="12" pos:column="67">(<argument><expr><name pos:line="12" pos:column="68">errbuf<pos:position pos:line="12" pos:column="74"/></name></expr></argument>)<pos:position pos:line="12" pos:column="75"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="78"/></expr_stmt>
		}<pos:position pos:line="13" pos:column="18"/></block></then></if>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">cores<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">&gt;<pos:position pos:line="16" pos:column="23"/></operator> <literal type="number" pos:line="16" pos:column="21">0<pos:position pos:line="16" pos:column="22"/></literal></expr>)<pos:position pos:line="16" pos:column="23"/></condition><then pos:line="16" pos:column="23"> <block pos:line="16" pos:column="24">{
		<expr_stmt><expr><name pos:line="17" pos:column="17">snum<pos:position pos:line="17" pos:column="21"/></name> <operator pos:line="17" pos:column="22">/=<pos:position pos:line="17" pos:column="24"/></operator> <name pos:line="17" pos:column="25">cores<pos:position pos:line="17" pos:column="30"/></name></expr>;<pos:position pos:line="17" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><name pos:line="18" pos:column="17">mnum<pos:position pos:line="18" pos:column="21"/></name> <operator pos:line="18" pos:column="22">/=<pos:position pos:line="18" pos:column="24"/></operator> <name pos:line="18" pos:column="25">cores<pos:position pos:line="18" pos:column="30"/></name></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><name pos:line="19" pos:column="17">lnum<pos:position pos:line="19" pos:column="21"/></name> <operator pos:line="19" pos:column="22">/=<pos:position pos:line="19" pos:column="24"/></operator> <name pos:line="19" pos:column="25">cores<pos:position pos:line="19" pos:column="30"/></name></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="22" pos:column="9">values<pos:position pos:line="22" pos:column="15"/></name><index pos:line="22" pos:column="15">[<expr><literal type="number" pos:line="22" pos:column="16">0<pos:position pos:line="22" pos:column="17"/></literal></expr>]<pos:position pos:line="22" pos:column="18"/></index></name><operator pos:line="22" pos:column="18">.<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="19">gauge<pos:position pos:line="22" pos:column="24"/></name> <operator pos:line="22" pos:column="25">=<pos:position pos:line="22" pos:column="26"/></operator> <name pos:line="22" pos:column="27">snum<pos:position pos:line="22" pos:column="31"/></name></expr>;<pos:position pos:line="22" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="23" pos:column="9">values<pos:position pos:line="23" pos:column="15"/></name><index pos:line="23" pos:column="15">[<expr><literal type="number" pos:line="23" pos:column="16">1<pos:position pos:line="23" pos:column="17"/></literal></expr>]<pos:position pos:line="23" pos:column="18"/></index></name><operator pos:line="23" pos:column="18">.<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="19">gauge<pos:position pos:line="23" pos:column="24"/></name> <operator pos:line="23" pos:column="25">=<pos:position pos:line="23" pos:column="26"/></operator> <name pos:line="23" pos:column="27">mnum<pos:position pos:line="23" pos:column="31"/></name></expr>;<pos:position pos:line="23" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="24" pos:column="9">values<pos:position pos:line="24" pos:column="15"/></name><index pos:line="24" pos:column="15">[<expr><literal type="number" pos:line="24" pos:column="16">2<pos:position pos:line="24" pos:column="17"/></literal></expr>]<pos:position pos:line="24" pos:column="18"/></index></name><operator pos:line="24" pos:column="18">.<pos:position pos:line="24" pos:column="19"/></operator><name pos:line="24" pos:column="19">gauge<pos:position pos:line="24" pos:column="24"/></name> <operator pos:line="24" pos:column="25">=<pos:position pos:line="24" pos:column="26"/></operator> <name pos:line="24" pos:column="27">lnum<pos:position pos:line="24" pos:column="31"/></name></expr>;<pos:position pos:line="24" pos:column="32"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="26" pos:column="9">vl<pos:position pos:line="26" pos:column="11"/></name><operator pos:line="26" pos:column="11">.<pos:position pos:line="26" pos:column="12"/></operator><name pos:line="26" pos:column="12">values<pos:position pos:line="26" pos:column="18"/></name></name> <operator pos:line="26" pos:column="19">=<pos:position pos:line="26" pos:column="20"/></operator> <name pos:line="26" pos:column="21">values<pos:position pos:line="26" pos:column="27"/></name></expr>;<pos:position pos:line="26" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="27" pos:column="9">vl<pos:position pos:line="27" pos:column="11"/></name><operator pos:line="27" pos:column="11">.<pos:position pos:line="27" pos:column="12"/></operator><name pos:line="27" pos:column="12">values_len<pos:position pos:line="27" pos:column="22"/></name></name> <operator pos:line="27" pos:column="23">=<pos:position pos:line="27" pos:column="24"/></operator> <call><name pos:line="27" pos:column="25">STATIC_ARRAY_SIZE<pos:position pos:line="27" pos:column="42"/></name> <argument_list pos:line="27" pos:column="43">(<argument><expr><name pos:line="27" pos:column="44">values<pos:position pos:line="27" pos:column="50"/></name></expr></argument>)<pos:position pos:line="27" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="52"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="29" pos:column="9">sstrncpy<pos:position pos:line="29" pos:column="17"/></name> <argument_list pos:line="29" pos:column="18">(<argument><expr><name><name pos:line="29" pos:column="19">vl<pos:position pos:line="29" pos:column="21"/></name><operator pos:line="29" pos:column="21">.<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="22">host<pos:position pos:line="29" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="28">hostname_g<pos:position pos:line="29" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="40">sizeof <argument_list pos:line="29" pos:column="47">(<argument><expr><name><name pos:line="29" pos:column="48">vl<pos:position pos:line="29" pos:column="50"/></name><operator pos:line="29" pos:column="50">.<pos:position pos:line="29" pos:column="51"/></operator><name pos:line="29" pos:column="51">host<pos:position pos:line="29" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="58"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="30" pos:column="9">sstrncpy<pos:position pos:line="30" pos:column="17"/></name> <argument_list pos:line="30" pos:column="18">(<argument><expr><name><name pos:line="30" pos:column="19">vl<pos:position pos:line="30" pos:column="21"/></name><operator pos:line="30" pos:column="21">.<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="22">plugin<pos:position pos:line="30" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="30">"load"<pos:position pos:line="30" pos:column="36"/></literal></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="38">sizeof <argument_list pos:line="30" pos:column="45">(<argument><expr><name><name pos:line="30" pos:column="46">vl<pos:position pos:line="30" pos:column="48"/></name><operator pos:line="30" pos:column="48">.<pos:position pos:line="30" pos:column="49"/></operator><name pos:line="30" pos:column="49">plugin<pos:position pos:line="30" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="30" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="58"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="31" pos:column="9">sstrncpy<pos:position pos:line="31" pos:column="17"/></name> <argument_list pos:line="31" pos:column="18">(<argument><expr><name><name pos:line="31" pos:column="19">vl<pos:position pos:line="31" pos:column="21"/></name><operator pos:line="31" pos:column="21">.<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="22">type<pos:position pos:line="31" pos:column="26"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="28">"load"<pos:position pos:line="31" pos:column="34"/></literal></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="36">sizeof <argument_list pos:line="31" pos:column="43">(<argument><expr><name><name pos:line="31" pos:column="44">vl<pos:position pos:line="31" pos:column="46"/></name><operator pos:line="31" pos:column="46">.<pos:position pos:line="31" pos:column="47"/></operator><name pos:line="31" pos:column="47">type<pos:position pos:line="31" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="31" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="54"/></expr_stmt>

	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">cores<pos:position pos:line="33" pos:column="18"/></name> <operator pos:line="33" pos:column="19">&gt;<pos:position pos:line="33" pos:column="23"/></operator> <literal type="number" pos:line="33" pos:column="21">0<pos:position pos:line="33" pos:column="22"/></literal></expr>)<pos:position pos:line="33" pos:column="23"/></condition><then pos:line="33" pos:column="23"> <block pos:line="33" pos:column="24">{
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">sstrncpy<pos:position pos:line="34" pos:column="25"/></name><argument_list pos:line="34" pos:column="25">(<argument><expr><name><name pos:line="34" pos:column="26">vl<pos:position pos:line="34" pos:column="28"/></name><operator pos:line="34" pos:column="28">.<pos:position pos:line="34" pos:column="29"/></operator><name pos:line="34" pos:column="29">type_instance<pos:position pos:line="34" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="44">"relative"<pos:position pos:line="34" pos:column="54"/></literal></expr></argument>,
			 <argument><expr><sizeof pos:line="35" pos:column="26">sizeof <argument_list pos:line="35" pos:column="33">(<argument><expr><name><name pos:line="35" pos:column="34">vl<pos:position pos:line="35" pos:column="36"/></name><operator pos:line="35" pos:column="36">.<pos:position pos:line="35" pos:column="37"/></operator><name pos:line="35" pos:column="37">type_instance<pos:position pos:line="35" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="35" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="53"/></expr_stmt>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="38" pos:column="9">plugin_dispatch_values<pos:position pos:line="38" pos:column="31"/></name> <argument_list pos:line="38" pos:column="32">(<argument><expr><operator pos:line="38" pos:column="33">&amp;<pos:position pos:line="38" pos:column="38"/></operator><name pos:line="38" pos:column="34">vl<pos:position pos:line="38" pos:column="36"/></name></expr></argument>)<pos:position pos:line="38" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="38"/></expr_stmt>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

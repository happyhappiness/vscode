<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2641_collectd-5.6.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">parse_log_severity<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">severity<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list> <block pos:line="1" pos:column="46">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">log_level<pos:position pos:line="2" pos:column="16"/></name> <init pos:line="2" pos:column="17">= <expr><operator pos:line="2" pos:column="19">-<pos:position pos:line="2" pos:column="20"/></operator><literal type="number" pos:line="2" pos:column="20">1<pos:position pos:line="2" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="2" pos:column="22"/></decl_stmt>

  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><operator pos:line="4" pos:column="7">(<pos:position pos:line="4" pos:column="8"/></operator><literal type="number" pos:line="4" pos:column="8">0<pos:position pos:line="4" pos:column="9"/></literal> <operator pos:line="4" pos:column="10">==<pos:position pos:line="4" pos:column="12"/></operator> <call><name pos:line="4" pos:column="13">strcasecmp<pos:position pos:line="4" pos:column="23"/></name><argument_list pos:line="4" pos:column="23">(<argument><expr><name pos:line="4" pos:column="24">severity<pos:position pos:line="4" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="34">"emerg"<pos:position pos:line="4" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="42"/></argument_list></call><operator pos:line="4" pos:column="42">)<pos:position pos:line="4" pos:column="43"/></operator> <operator pos:line="4" pos:column="44">||<pos:position pos:line="4" pos:column="46"/></operator>
      <operator pos:line="5" pos:column="7">(<pos:position pos:line="5" pos:column="8"/></operator><literal type="number" pos:line="5" pos:column="8">0<pos:position pos:line="5" pos:column="9"/></literal> <operator pos:line="5" pos:column="10">==<pos:position pos:line="5" pos:column="12"/></operator> <call><name pos:line="5" pos:column="13">strcasecmp<pos:position pos:line="5" pos:column="23"/></name><argument_list pos:line="5" pos:column="23">(<argument><expr><name pos:line="5" pos:column="24">severity<pos:position pos:line="5" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="34">"alert"<pos:position pos:line="5" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="42"/></argument_list></call><operator pos:line="5" pos:column="42">)<pos:position pos:line="5" pos:column="43"/></operator> <operator pos:line="5" pos:column="44">||<pos:position pos:line="5" pos:column="46"/></operator>
      <operator pos:line="6" pos:column="7">(<pos:position pos:line="6" pos:column="8"/></operator><literal type="number" pos:line="6" pos:column="8">0<pos:position pos:line="6" pos:column="9"/></literal> <operator pos:line="6" pos:column="10">==<pos:position pos:line="6" pos:column="12"/></operator> <call><name pos:line="6" pos:column="13">strcasecmp<pos:position pos:line="6" pos:column="23"/></name><argument_list pos:line="6" pos:column="23">(<argument><expr><name pos:line="6" pos:column="24">severity<pos:position pos:line="6" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="34">"crit"<pos:position pos:line="6" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="41"/></argument_list></call><operator pos:line="6" pos:column="41">)<pos:position pos:line="6" pos:column="42"/></operator> <operator pos:line="6" pos:column="43">||<pos:position pos:line="6" pos:column="45"/></operator> <operator pos:line="6" pos:column="46">(<pos:position pos:line="6" pos:column="47"/></operator><literal type="number" pos:line="6" pos:column="47">0<pos:position pos:line="6" pos:column="48"/></literal> <operator pos:line="6" pos:column="49">==<pos:position pos:line="6" pos:column="51"/></operator> <call><name pos:line="6" pos:column="52">strcasecmp<pos:position pos:line="6" pos:column="62"/></name><argument_list pos:line="6" pos:column="62">(<argument><expr><name pos:line="6" pos:column="63">severity<pos:position pos:line="6" pos:column="71"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="73">"err"<pos:position pos:line="6" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="79"/></argument_list></call><operator pos:line="6" pos:column="79">)<pos:position pos:line="6" pos:column="80"/></operator></expr>)<pos:position pos:line="6" pos:column="81"/></condition><then pos:line="6" pos:column="81">
    <block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="5">log_level<pos:position pos:line="7" pos:column="14"/></name> <operator pos:line="7" pos:column="15">=<pos:position pos:line="7" pos:column="16"/></operator> <name pos:line="7" pos:column="17">LOG_ERR<pos:position pos:line="7" pos:column="24"/></name></expr>;<pos:position pos:line="7" pos:column="25"/></expr_stmt></block></then>
  <elseif pos:line="8" pos:column="3">else <if pos:line="8" pos:column="8">if <condition pos:line="8" pos:column="11">(<expr><literal type="number" pos:line="8" pos:column="12">0<pos:position pos:line="8" pos:column="13"/></literal> <operator pos:line="8" pos:column="14">==<pos:position pos:line="8" pos:column="16"/></operator> <call><name pos:line="8" pos:column="17">strcasecmp<pos:position pos:line="8" pos:column="27"/></name><argument_list pos:line="8" pos:column="27">(<argument><expr><name pos:line="8" pos:column="28">severity<pos:position pos:line="8" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="38">"warning"<pos:position pos:line="8" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="49"/></condition><then pos:line="8" pos:column="49">
    <block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="5">log_level<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">=<pos:position pos:line="9" pos:column="16"/></operator> <name pos:line="9" pos:column="17">LOG_WARNING<pos:position pos:line="9" pos:column="28"/></name></expr>;<pos:position pos:line="9" pos:column="29"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="10" pos:column="3">else <if pos:line="10" pos:column="8">if <condition pos:line="10" pos:column="11">(<expr><literal type="number" pos:line="10" pos:column="12">0<pos:position pos:line="10" pos:column="13"/></literal> <operator pos:line="10" pos:column="14">==<pos:position pos:line="10" pos:column="16"/></operator> <call><name pos:line="10" pos:column="17">strcasecmp<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">(<argument><expr><name pos:line="10" pos:column="28">severity<pos:position pos:line="10" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="38">"notice"<pos:position pos:line="10" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="48"/></condition><then pos:line="10" pos:column="48">
    <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="5">log_level<pos:position pos:line="11" pos:column="14"/></name> <operator pos:line="11" pos:column="15">=<pos:position pos:line="11" pos:column="16"/></operator> <name pos:line="11" pos:column="17">LOG_NOTICE<pos:position pos:line="11" pos:column="27"/></name></expr>;<pos:position pos:line="11" pos:column="28"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="12" pos:column="3">else <if pos:line="12" pos:column="8">if <condition pos:line="12" pos:column="11">(<expr><literal type="number" pos:line="12" pos:column="12">0<pos:position pos:line="12" pos:column="13"/></literal> <operator pos:line="12" pos:column="14">==<pos:position pos:line="12" pos:column="16"/></operator> <call><name pos:line="12" pos:column="17">strcasecmp<pos:position pos:line="12" pos:column="27"/></name><argument_list pos:line="12" pos:column="27">(<argument><expr><name pos:line="12" pos:column="28">severity<pos:position pos:line="12" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="38">"info"<pos:position pos:line="12" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="46"/></condition><then pos:line="12" pos:column="46">
    <block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="5">log_level<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">=<pos:position pos:line="13" pos:column="16"/></operator> <name pos:line="13" pos:column="17">LOG_INFO<pos:position pos:line="13" pos:column="25"/></name></expr>;<pos:position pos:line="13" pos:column="26"/></expr_stmt></block></then></if></elseif>
<cpp:if pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">if<pos:position pos:line="14" pos:column="4"/></cpp:directive> <expr><name pos:line="14" pos:column="5">COLLECT_DEBUG<pos:position pos:line="14" pos:column="18"/></name></expr></cpp:if>
  <elseif pos:line="15" pos:column="3">else <if pos:line="15" pos:column="8">if <condition pos:line="15" pos:column="11">(<expr><literal type="number" pos:line="15" pos:column="12">0<pos:position pos:line="15" pos:column="13"/></literal> <operator pos:line="15" pos:column="14">==<pos:position pos:line="15" pos:column="16"/></operator> <call><name pos:line="15" pos:column="17">strcasecmp<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">(<argument><expr><name pos:line="15" pos:column="28">severity<pos:position pos:line="15" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="38">"debug"<pos:position pos:line="15" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="47"/></condition><then pos:line="15" pos:column="47">
    <block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="5">log_level<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <name pos:line="16" pos:column="17">LOG_DEBUG<pos:position pos:line="16" pos:column="26"/></name></expr>;<pos:position pos:line="16" pos:column="27"/></expr_stmt></block></then></if></elseif></if>
<cpp:endif pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">endif<pos:position pos:line="17" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="17" pos:column="8">/* COLLECT_DEBUG */</comment>

  <return pos:line="19" pos:column="3">return <expr><operator pos:line="19" pos:column="10">(<pos:position pos:line="19" pos:column="11"/></operator><name pos:line="19" pos:column="11">log_level<pos:position pos:line="19" pos:column="20"/></name><operator pos:line="19" pos:column="20">)<pos:position pos:line="19" pos:column="21"/></operator></expr>;<pos:position pos:line="19" pos:column="22"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

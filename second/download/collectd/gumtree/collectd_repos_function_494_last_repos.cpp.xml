<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_494_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ascent_xml_submit_gauge<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">xmlDoc<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">doc<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">xmlNode<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">node<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="64">/* {{{ */</comment>
                                   <parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">char<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">plugin_instance<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>,
                                   <parameter><decl><type><specifier pos:line="3" pos:column="36">const<pos:position pos:line="3" pos:column="41"/></specifier> <name pos:line="3" pos:column="42">char<pos:position pos:line="3" pos:column="46"/></name> <modifier pos:line="3" pos:column="47">*<pos:position pos:line="3" pos:column="48"/></modifier></type><name pos:line="3" pos:column="48">type<pos:position pos:line="3" pos:column="52"/></name></decl></parameter>,
                                   <parameter><decl><type><specifier pos:line="4" pos:column="36">const<pos:position pos:line="4" pos:column="41"/></specifier> <name pos:line="4" pos:column="42">char<pos:position pos:line="4" pos:column="46"/></name> <modifier pos:line="4" pos:column="47">*<pos:position pos:line="4" pos:column="48"/></modifier></type><name pos:line="4" pos:column="48">type_instance<pos:position pos:line="4" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="62"/></parameter_list> <block pos:line="4" pos:column="63">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">str_ptr<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">gauge_t<pos:position pos:line="6" pos:column="10"/></name></type> <name pos:line="6" pos:column="11">value<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>

  <expr_stmt><expr><name pos:line="8" pos:column="3">str_ptr<pos:position pos:line="8" pos:column="10"/></name> <operator pos:line="8" pos:column="11">=<pos:position pos:line="8" pos:column="12"/></operator> <operator pos:line="8" pos:column="13">(<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">char<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">*<pos:position pos:line="8" pos:column="20"/></operator><operator pos:line="8" pos:column="20">)<pos:position pos:line="8" pos:column="21"/></operator><call><name pos:line="8" pos:column="21">xmlNodeListGetString<pos:position pos:line="8" pos:column="41"/></name><argument_list pos:line="8" pos:column="41">(<argument><expr><name pos:line="8" pos:column="42">doc<pos:position pos:line="8" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="47">node<pos:position pos:line="8" pos:column="51"/></name><operator pos:line="8" pos:column="51">-&gt;<pos:position pos:line="8" pos:column="56"/></operator><name pos:line="8" pos:column="53">xmlChildrenNode<pos:position pos:line="8" pos:column="68"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="70">1<pos:position pos:line="8" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="73"/></expr_stmt>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">str_ptr<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">==<pos:position pos:line="9" pos:column="17"/></operator> <name pos:line="9" pos:column="18">NULL<pos:position pos:line="9" pos:column="22"/></name></expr>)<pos:position pos:line="9" pos:column="23"/></condition><then pos:line="9" pos:column="23"> <block pos:line="9" pos:column="24">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">ERROR<pos:position pos:line="10" pos:column="10"/></name><argument_list pos:line="10" pos:column="10">(
        <argument><expr><literal type="string" pos:line="11" pos:column="9">"ascent plugin: ascent_xml_submit_gauge: xmlNodeListGetString failed."<pos:position pos:line="11" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="81"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">-<pos:position pos:line="12" pos:column="13"/></operator><literal type="number" pos:line="12" pos:column="13">1<pos:position pos:line="12" pos:column="14"/></literal></expr>;<pos:position pos:line="12" pos:column="15"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>

  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><call><name pos:line="15" pos:column="7">strcasecmp<pos:position pos:line="15" pos:column="17"/></name><argument_list pos:line="15" pos:column="17">(<argument><expr><literal type="string" pos:line="15" pos:column="18">"N/A"<pos:position pos:line="15" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="25">str_ptr<pos:position pos:line="15" pos:column="32"/></name></expr></argument>)<pos:position pos:line="15" pos:column="33"/></argument_list></call> <operator pos:line="15" pos:column="34">==<pos:position pos:line="15" pos:column="36"/></operator> <literal type="number" pos:line="15" pos:column="37">0<pos:position pos:line="15" pos:column="38"/></literal></expr>)<pos:position pos:line="15" pos:column="39"/></condition><then pos:line="15" pos:column="39">
    <block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="5">value<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <name pos:line="16" pos:column="13">NAN<pos:position pos:line="16" pos:column="16"/></name></expr>;<pos:position pos:line="16" pos:column="17"/></expr_stmt></block></then>
  <else pos:line="17" pos:column="3">else <block pos:line="17" pos:column="8">{
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">char<pos:position pos:line="18" pos:column="9"/></name> <modifier pos:line="18" pos:column="10">*<pos:position pos:line="18" pos:column="11"/></modifier></type><name pos:line="18" pos:column="11">end_ptr<pos:position pos:line="18" pos:column="18"/></name> <init pos:line="18" pos:column="19">= <expr><name pos:line="18" pos:column="21">NULL<pos:position pos:line="18" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="18" pos:column="26"/></decl_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">value<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">=<pos:position pos:line="19" pos:column="12"/></operator> <call><name pos:line="19" pos:column="13">strtod<pos:position pos:line="19" pos:column="19"/></name><argument_list pos:line="19" pos:column="19">(<argument><expr><name pos:line="19" pos:column="20">str_ptr<pos:position pos:line="19" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="29">&amp;<pos:position pos:line="19" pos:column="34"/></operator><name pos:line="19" pos:column="30">end_ptr<pos:position pos:line="19" pos:column="37"/></name></expr></argument>)<pos:position pos:line="19" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="39"/></expr_stmt>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">str_ptr<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">==<pos:position pos:line="20" pos:column="19"/></operator> <name pos:line="20" pos:column="20">end_ptr<pos:position pos:line="20" pos:column="27"/></name></expr>)<pos:position pos:line="20" pos:column="28"/></condition><then pos:line="20" pos:column="28"> <block pos:line="20" pos:column="29">{
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">xmlFree<pos:position pos:line="21" pos:column="14"/></name><argument_list pos:line="21" pos:column="14">(<argument><expr><name pos:line="21" pos:column="15">str_ptr<pos:position pos:line="21" pos:column="22"/></name></expr></argument>)<pos:position pos:line="21" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="22" pos:column="7">ERROR<pos:position pos:line="22" pos:column="12"/></name><argument_list pos:line="22" pos:column="12">(<argument><expr><literal type="string" pos:line="22" pos:column="13">"ascent plugin: ascent_xml_submit_gauge: strtod failed."<pos:position pos:line="22" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="71"/></expr_stmt>
      <return pos:line="23" pos:column="7">return <expr><operator pos:line="23" pos:column="14">-<pos:position pos:line="23" pos:column="15"/></operator><literal type="number" pos:line="23" pos:column="15">1<pos:position pos:line="23" pos:column="16"/></literal></expr>;<pos:position pos:line="23" pos:column="17"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>
  }<pos:position pos:line="25" pos:column="4"/></block></else></if>
  <expr_stmt><expr><call><name pos:line="26" pos:column="3">xmlFree<pos:position pos:line="26" pos:column="10"/></name><argument_list pos:line="26" pos:column="10">(<argument><expr><name pos:line="26" pos:column="11">str_ptr<pos:position pos:line="26" pos:column="18"/></name></expr></argument>)<pos:position pos:line="26" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="20"/></expr_stmt>

  <return pos:line="28" pos:column="3">return <expr><call><name pos:line="28" pos:column="10">ascent_submit_gauge<pos:position pos:line="28" pos:column="29"/></name><argument_list pos:line="28" pos:column="29">(<argument><expr><name pos:line="28" pos:column="30">plugin_instance<pos:position pos:line="28" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="47">type<pos:position pos:line="28" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="53">type_instance<pos:position pos:line="28" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="68">value<pos:position pos:line="28" pos:column="73"/></name></expr></argument>)<pos:position pos:line="28" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="75"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_260_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">fbh_read_file<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">fbhash_t<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">h<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="39"/></parameter_list> <comment type="block" pos:line="1" pos:column="40">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">FILE<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">fh<pos:position pos:line="3" pos:column="11"/></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">buffer<pos:position pos:line="4" pos:column="14"/></name><index pos:line="4" pos:column="14">[<expr><literal type="number" pos:line="4" pos:column="15">4096<pos:position pos:line="4" pos:column="19"/></literal></expr>]<pos:position pos:line="4" pos:column="20"/></index></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">flock<pos:position pos:line="5" pos:column="15"/></name></name></type> <name pos:line="5" pos:column="16">fl<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><block pos:line="5" pos:column="21">{ <expr><literal type="number" pos:line="5" pos:column="23">0<pos:position pos:line="5" pos:column="24"/></literal></expr> }<pos:position pos:line="5" pos:column="26"/></block></expr></init></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">c_avl_tree_t<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">tree<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">status<pos:position pos:line="7" pos:column="13"/></name></decl>;<pos:position pos:line="7" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><name pos:line="9" pos:column="3">fh<pos:position pos:line="9" pos:column="5"/></name> <operator pos:line="9" pos:column="6">=<pos:position pos:line="9" pos:column="7"/></operator> <call><name pos:line="9" pos:column="8">fopen<pos:position pos:line="9" pos:column="13"/></name> <argument_list pos:line="9" pos:column="14">(<argument><expr><name><name pos:line="9" pos:column="15">h<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">-&gt;<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="18">filename<pos:position pos:line="9" pos:column="26"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="28">"r"<pos:position pos:line="9" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="33"/></expr_stmt>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">fh<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">==<pos:position pos:line="10" pos:column="12"/></operator> <name pos:line="10" pos:column="13">NULL<pos:position pos:line="10" pos:column="17"/></name></expr>)<pos:position pos:line="10" pos:column="18"/></condition><then pos:line="10" pos:column="18">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><operator pos:line="11" pos:column="13">-<pos:position pos:line="11" pos:column="14"/></operator><literal type="number" pos:line="11" pos:column="14">1<pos:position pos:line="11" pos:column="15"/></literal><operator pos:line="11" pos:column="15">)<pos:position pos:line="11" pos:column="16"/></operator></expr>;<pos:position pos:line="11" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="13" pos:column="3">fl<pos:position pos:line="13" pos:column="5"/></name><operator pos:line="13" pos:column="5">.<pos:position pos:line="13" pos:column="6"/></operator><name pos:line="13" pos:column="6">l_type<pos:position pos:line="13" pos:column="12"/></name></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <name pos:line="13" pos:column="15">F_RDLCK<pos:position pos:line="13" pos:column="22"/></name></expr>;<pos:position pos:line="13" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="14" pos:column="3">fl<pos:position pos:line="14" pos:column="5"/></name><operator pos:line="14" pos:column="5">.<pos:position pos:line="14" pos:column="6"/></operator><name pos:line="14" pos:column="6">l_whence<pos:position pos:line="14" pos:column="14"/></name></name> <operator pos:line="14" pos:column="15">=<pos:position pos:line="14" pos:column="16"/></operator> <name pos:line="14" pos:column="17">SEEK_SET<pos:position pos:line="14" pos:column="25"/></name></expr>;<pos:position pos:line="14" pos:column="26"/></expr_stmt>
  <comment type="block" pos:line="15" pos:column="3">/* TODO: Lock file? -&gt; fcntl */</comment>

  <expr_stmt><expr><name pos:line="17" pos:column="3">status<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">=<pos:position pos:line="17" pos:column="11"/></operator> <call><name pos:line="17" pos:column="12">fcntl<pos:position pos:line="17" pos:column="17"/></name> <argument_list pos:line="17" pos:column="18">(<argument><expr><call><name pos:line="17" pos:column="19">fileno<pos:position pos:line="17" pos:column="25"/></name> <argument_list pos:line="17" pos:column="26">(<argument><expr><name pos:line="17" pos:column="27">fh<pos:position pos:line="17" pos:column="29"/></name></expr></argument>)<pos:position pos:line="17" pos:column="30"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="17" pos:column="32">F_SETLK<pos:position pos:line="17" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="41">&amp;<pos:position pos:line="17" pos:column="46"/></operator><name pos:line="17" pos:column="42">fl<pos:position pos:line="17" pos:column="44"/></name></expr></argument>)<pos:position pos:line="17" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="46"/></expr_stmt>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name pos:line="18" pos:column="7">status<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">!=<pos:position pos:line="18" pos:column="16"/></operator> <literal type="number" pos:line="18" pos:column="17">0<pos:position pos:line="18" pos:column="18"/></literal></expr>)<pos:position pos:line="18" pos:column="19"/></condition><then pos:line="18" pos:column="19">
  <block pos:line="19" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">fclose<pos:position pos:line="20" pos:column="11"/></name> <argument_list pos:line="20" pos:column="12">(<argument><expr><name pos:line="20" pos:column="13">fh<pos:position pos:line="20" pos:column="15"/></name></expr></argument>)<pos:position pos:line="20" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="17"/></expr_stmt>
    <return pos:line="21" pos:column="5">return <expr><operator pos:line="21" pos:column="12">(<pos:position pos:line="21" pos:column="13"/></operator><operator pos:line="21" pos:column="13">-<pos:position pos:line="21" pos:column="14"/></operator><literal type="number" pos:line="21" pos:column="14">1<pos:position pos:line="21" pos:column="15"/></literal><operator pos:line="21" pos:column="15">)<pos:position pos:line="21" pos:column="16"/></operator></expr>;<pos:position pos:line="21" pos:column="17"/></return>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="24" pos:column="3">tree<pos:position pos:line="24" pos:column="7"/></name> <operator pos:line="24" pos:column="8">=<pos:position pos:line="24" pos:column="9"/></operator> <call><name pos:line="24" pos:column="10">c_avl_create<pos:position pos:line="24" pos:column="22"/></name> <argument_list pos:line="24" pos:column="23">(<argument><expr><operator pos:line="24" pos:column="24">(<pos:position pos:line="24" pos:column="25"/></operator><call><call><name pos:line="24" pos:column="25">int<pos:position pos:line="24" pos:column="28"/></name> <argument_list pos:line="24" pos:column="29">(<argument><expr><operator pos:line="24" pos:column="30">*<pos:position pos:line="24" pos:column="31"/></operator></expr></argument>)<pos:position pos:line="24" pos:column="32"/></argument_list></call> <argument_list pos:line="24" pos:column="33">(<argument><expr><specifier pos:line="24" pos:column="34">const<pos:position pos:line="24" pos:column="39"/></specifier> <name pos:line="24" pos:column="40">void<pos:position pos:line="24" pos:column="44"/></name> <operator pos:line="24" pos:column="45">*<pos:position pos:line="24" pos:column="46"/></operator></expr></argument>, <argument><expr><specifier pos:line="24" pos:column="48">const<pos:position pos:line="24" pos:column="53"/></specifier> <name pos:line="24" pos:column="54">void<pos:position pos:line="24" pos:column="58"/></name> <operator pos:line="24" pos:column="59">*<pos:position pos:line="24" pos:column="60"/></operator></expr></argument>)<pos:position pos:line="24" pos:column="61"/></argument_list></call><operator pos:line="24" pos:column="61">)<pos:position pos:line="24" pos:column="62"/></operator> <name pos:line="24" pos:column="63">strcmp<pos:position pos:line="24" pos:column="69"/></name></expr></argument>)<pos:position pos:line="24" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="71"/></expr_stmt>
  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><name pos:line="25" pos:column="7">tree<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">==<pos:position pos:line="25" pos:column="14"/></operator> <name pos:line="25" pos:column="15">NULL<pos:position pos:line="25" pos:column="19"/></name></expr>)<pos:position pos:line="25" pos:column="20"/></condition><then pos:line="25" pos:column="20">
  <block pos:line="26" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">fclose<pos:position pos:line="27" pos:column="11"/></name> <argument_list pos:line="27" pos:column="12">(<argument><expr><name pos:line="27" pos:column="13">fh<pos:position pos:line="27" pos:column="15"/></name></expr></argument>)<pos:position pos:line="27" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="17"/></expr_stmt>
    <return pos:line="28" pos:column="5">return <expr><operator pos:line="28" pos:column="12">(<pos:position pos:line="28" pos:column="13"/></operator><operator pos:line="28" pos:column="13">-<pos:position pos:line="28" pos:column="14"/></operator><literal type="number" pos:line="28" pos:column="14">1<pos:position pos:line="28" pos:column="15"/></literal><operator pos:line="28" pos:column="15">)<pos:position pos:line="28" pos:column="16"/></operator></expr>;<pos:position pos:line="28" pos:column="17"/></return>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="31" pos:column="3">/* Read `fh' into `tree' */</comment>
  <while pos:line="32" pos:column="3">while <condition pos:line="32" pos:column="9">(<expr><call><name pos:line="32" pos:column="10">fgets<pos:position pos:line="32" pos:column="15"/></name> <argument_list pos:line="32" pos:column="16">(<argument><expr><name pos:line="32" pos:column="17">buffer<pos:position pos:line="32" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="32" pos:column="25">sizeof <argument_list pos:line="32" pos:column="32">(<argument><expr><name pos:line="32" pos:column="33">buffer<pos:position pos:line="32" pos:column="39"/></name></expr></argument>)<pos:position pos:line="32" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="32" pos:column="42">fh<pos:position pos:line="32" pos:column="44"/></name></expr></argument>)<pos:position pos:line="32" pos:column="45"/></argument_list></call> <operator pos:line="32" pos:column="46">!=<pos:position pos:line="32" pos:column="48"/></operator> <name pos:line="32" pos:column="49">NULL<pos:position pos:line="32" pos:column="53"/></name></expr>)<pos:position pos:line="32" pos:column="54"/></condition> <comment type="block" pos:line="32" pos:column="55">/* {{{ */</comment>
  <block pos:line="33" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="34" pos:column="5">size_t<pos:position pos:line="34" pos:column="11"/></name></type> <name pos:line="34" pos:column="12">len<pos:position pos:line="34" pos:column="15"/></name></decl>;<pos:position pos:line="34" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="35" pos:column="5">char<pos:position pos:line="35" pos:column="9"/></name> <modifier pos:line="35" pos:column="10">*<pos:position pos:line="35" pos:column="11"/></modifier></type><name pos:line="35" pos:column="11">key<pos:position pos:line="35" pos:column="14"/></name></decl>;<pos:position pos:line="35" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="36" pos:column="5">char<pos:position pos:line="36" pos:column="9"/></name> <modifier pos:line="36" pos:column="10">*<pos:position pos:line="36" pos:column="11"/></modifier></type><name pos:line="36" pos:column="11">value<pos:position pos:line="36" pos:column="16"/></name></decl>;<pos:position pos:line="36" pos:column="17"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="38" pos:column="5">char<pos:position pos:line="38" pos:column="9"/></name> <modifier pos:line="38" pos:column="10">*<pos:position pos:line="38" pos:column="11"/></modifier></type><name pos:line="38" pos:column="11">key_copy<pos:position pos:line="38" pos:column="19"/></name></decl>;<pos:position pos:line="38" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="39" pos:column="5">char<pos:position pos:line="39" pos:column="9"/></name> <modifier pos:line="39" pos:column="10">*<pos:position pos:line="39" pos:column="11"/></modifier></type><name pos:line="39" pos:column="11">value_copy<pos:position pos:line="39" pos:column="21"/></name></decl>;<pos:position pos:line="39" pos:column="22"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="41" pos:column="5">buffer<pos:position pos:line="41" pos:column="11"/></name><index pos:line="41" pos:column="11">[<expr><sizeof pos:line="41" pos:column="12">sizeof <argument_list pos:line="41" pos:column="19">(<argument><expr><name pos:line="41" pos:column="20">buffer<pos:position pos:line="41" pos:column="26"/></name></expr></argument>)<pos:position pos:line="41" pos:column="27"/></argument_list></sizeof> <operator pos:line="41" pos:column="28">-<pos:position pos:line="41" pos:column="29"/></operator> <literal type="number" pos:line="41" pos:column="30">1<pos:position pos:line="41" pos:column="31"/></literal></expr>]<pos:position pos:line="41" pos:column="32"/></index></name> <operator pos:line="41" pos:column="33">=<pos:position pos:line="41" pos:column="34"/></operator> <literal type="number" pos:line="41" pos:column="35">0<pos:position pos:line="41" pos:column="36"/></literal></expr>;<pos:position pos:line="41" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name pos:line="42" pos:column="5">len<pos:position pos:line="42" pos:column="8"/></name> <operator pos:line="42" pos:column="9">=<pos:position pos:line="42" pos:column="10"/></operator> <call><name pos:line="42" pos:column="11">strlen<pos:position pos:line="42" pos:column="17"/></name> <argument_list pos:line="42" pos:column="18">(<argument><expr><name pos:line="42" pos:column="19">buffer<pos:position pos:line="42" pos:column="25"/></name></expr></argument>)<pos:position pos:line="42" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="27"/></expr_stmt>

    <comment type="block" pos:line="44" pos:column="5">/* Remove trailing newline characters. */</comment>
    <while pos:line="45" pos:column="5">while <condition pos:line="45" pos:column="11">(<expr><operator pos:line="45" pos:column="12">(<pos:position pos:line="45" pos:column="13"/></operator><name pos:line="45" pos:column="13">len<pos:position pos:line="45" pos:column="16"/></name> <operator pos:line="45" pos:column="17">&gt;<pos:position pos:line="45" pos:column="21"/></operator> <literal type="number" pos:line="45" pos:column="19">0<pos:position pos:line="45" pos:column="20"/></literal><operator pos:line="45" pos:column="20">)<pos:position pos:line="45" pos:column="21"/></operator>
        <operator pos:line="46" pos:column="9">&amp;&amp;<pos:position pos:line="46" pos:column="19"/></operator> <operator pos:line="46" pos:column="12">(<pos:position pos:line="46" pos:column="13"/></operator><operator pos:line="46" pos:column="13">(<pos:position pos:line="46" pos:column="14"/></operator><name><name pos:line="46" pos:column="14">buffer<pos:position pos:line="46" pos:column="20"/></name><index pos:line="46" pos:column="20">[<expr><name pos:line="46" pos:column="21">len<pos:position pos:line="46" pos:column="24"/></name> <operator pos:line="46" pos:column="25">-<pos:position pos:line="46" pos:column="26"/></operator> <literal type="number" pos:line="46" pos:column="27">1<pos:position pos:line="46" pos:column="28"/></literal></expr>]<pos:position pos:line="46" pos:column="29"/></index></name> <operator pos:line="46" pos:column="30">==<pos:position pos:line="46" pos:column="32"/></operator> <literal type="char" pos:line="46" pos:column="33">'\n'<pos:position pos:line="46" pos:column="37"/></literal><operator pos:line="46" pos:column="37">)<pos:position pos:line="46" pos:column="38"/></operator> <operator pos:line="46" pos:column="39">||<pos:position pos:line="46" pos:column="41"/></operator> <operator pos:line="46" pos:column="42">(<pos:position pos:line="46" pos:column="43"/></operator><name><name pos:line="46" pos:column="43">buffer<pos:position pos:line="46" pos:column="49"/></name><index pos:line="46" pos:column="49">[<expr><name pos:line="46" pos:column="50">len<pos:position pos:line="46" pos:column="53"/></name> <operator pos:line="46" pos:column="54">-<pos:position pos:line="46" pos:column="55"/></operator> <literal type="number" pos:line="46" pos:column="56">1<pos:position pos:line="46" pos:column="57"/></literal></expr>]<pos:position pos:line="46" pos:column="58"/></index></name> <operator pos:line="46" pos:column="59">==<pos:position pos:line="46" pos:column="61"/></operator> <literal type="char" pos:line="46" pos:column="62">'\r'<pos:position pos:line="46" pos:column="66"/></literal><operator pos:line="46" pos:column="66">)<pos:position pos:line="46" pos:column="67"/></operator><operator pos:line="46" pos:column="67">)<pos:position pos:line="46" pos:column="68"/></operator></expr>)<pos:position pos:line="46" pos:column="69"/></condition>
    <block pos:line="47" pos:column="5">{
      <expr_stmt><expr><name pos:line="48" pos:column="7">len<pos:position pos:line="48" pos:column="10"/></name><operator pos:line="48" pos:column="10">--<pos:position pos:line="48" pos:column="12"/></operator></expr>;<pos:position pos:line="48" pos:column="13"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="49" pos:column="7">buffer<pos:position pos:line="49" pos:column="13"/></name><index pos:line="49" pos:column="13">[<expr><name pos:line="49" pos:column="14">len<pos:position pos:line="49" pos:column="17"/></name></expr>]<pos:position pos:line="49" pos:column="18"/></index></name> <operator pos:line="49" pos:column="19">=<pos:position pos:line="49" pos:column="20"/></operator> <literal type="number" pos:line="49" pos:column="21">0<pos:position pos:line="49" pos:column="22"/></literal></expr>;<pos:position pos:line="49" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="50" pos:column="6"/></block></while>

    <comment type="block" pos:line="52" pos:column="5">/* Seek first non-space character */</comment>
    <expr_stmt><expr><name pos:line="53" pos:column="5">key<pos:position pos:line="53" pos:column="8"/></name> <operator pos:line="53" pos:column="9">=<pos:position pos:line="53" pos:column="10"/></operator> <name pos:line="53" pos:column="11">buffer<pos:position pos:line="53" pos:column="17"/></name></expr>;<pos:position pos:line="53" pos:column="18"/></expr_stmt>
    <while pos:line="54" pos:column="5">while <condition pos:line="54" pos:column="11">(<expr><operator pos:line="54" pos:column="12">(<pos:position pos:line="54" pos:column="13"/></operator><operator pos:line="54" pos:column="13">*<pos:position pos:line="54" pos:column="14"/></operator><name pos:line="54" pos:column="14">key<pos:position pos:line="54" pos:column="17"/></name> <operator pos:line="54" pos:column="18">!=<pos:position pos:line="54" pos:column="20"/></operator> <literal type="number" pos:line="54" pos:column="21">0<pos:position pos:line="54" pos:column="22"/></literal><operator pos:line="54" pos:column="22">)<pos:position pos:line="54" pos:column="23"/></operator> <operator pos:line="54" pos:column="24">&amp;&amp;<pos:position pos:line="54" pos:column="34"/></operator> <call><name pos:line="54" pos:column="27">isspace<pos:position pos:line="54" pos:column="34"/></name> <argument_list pos:line="54" pos:column="35">(<argument><expr><operator pos:line="54" pos:column="36">(<pos:position pos:line="54" pos:column="37"/></operator><name pos:line="54" pos:column="37">int<pos:position pos:line="54" pos:column="40"/></name><operator pos:line="54" pos:column="40">)<pos:position pos:line="54" pos:column="41"/></operator> <operator pos:line="54" pos:column="42">*<pos:position pos:line="54" pos:column="43"/></operator><name pos:line="54" pos:column="43">key<pos:position pos:line="54" pos:column="46"/></name></expr></argument>)<pos:position pos:line="54" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="54" pos:column="48"/></condition>
      <block type="pseudo"><expr_stmt><expr><name pos:line="55" pos:column="7">key<pos:position pos:line="55" pos:column="10"/></name><operator pos:line="55" pos:column="10">++<pos:position pos:line="55" pos:column="12"/></operator></expr>;<pos:position pos:line="55" pos:column="13"/></expr_stmt></block></while>

    <comment type="block" pos:line="57" pos:column="5">/* Skip empty lines and comments */</comment>
    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><operator pos:line="58" pos:column="9">(<pos:position pos:line="58" pos:column="10"/></operator><name><name pos:line="58" pos:column="10">key<pos:position pos:line="58" pos:column="13"/></name><index pos:line="58" pos:column="13">[<expr><literal type="number" pos:line="58" pos:column="14">0<pos:position pos:line="58" pos:column="15"/></literal></expr>]<pos:position pos:line="58" pos:column="16"/></index></name> <operator pos:line="58" pos:column="17">==<pos:position pos:line="58" pos:column="19"/></operator> <literal type="number" pos:line="58" pos:column="20">0<pos:position pos:line="58" pos:column="21"/></literal><operator pos:line="58" pos:column="21">)<pos:position pos:line="58" pos:column="22"/></operator> <operator pos:line="58" pos:column="23">||<pos:position pos:line="58" pos:column="25"/></operator> <operator pos:line="58" pos:column="26">(<pos:position pos:line="58" pos:column="27"/></operator><name><name pos:line="58" pos:column="27">key<pos:position pos:line="58" pos:column="30"/></name><index pos:line="58" pos:column="30">[<expr><literal type="number" pos:line="58" pos:column="31">0<pos:position pos:line="58" pos:column="32"/></literal></expr>]<pos:position pos:line="58" pos:column="33"/></index></name> <operator pos:line="58" pos:column="34">==<pos:position pos:line="58" pos:column="36"/></operator> <literal type="char" pos:line="58" pos:column="37">'#'<pos:position pos:line="58" pos:column="40"/></literal><operator pos:line="58" pos:column="40">)<pos:position pos:line="58" pos:column="41"/></operator></expr>)<pos:position pos:line="58" pos:column="42"/></condition><then pos:line="58" pos:column="42">
      <block type="pseudo"><continue pos:line="59" pos:column="7">continue;<pos:position pos:line="59" pos:column="16"/></continue></block></then></if>

    <comment type="block" pos:line="61" pos:column="5">/* Seek first colon */</comment>
    <expr_stmt><expr><name pos:line="62" pos:column="5">value<pos:position pos:line="62" pos:column="10"/></name> <operator pos:line="62" pos:column="11">=<pos:position pos:line="62" pos:column="12"/></operator> <call><name pos:line="62" pos:column="13">strchr<pos:position pos:line="62" pos:column="19"/></name> <argument_list pos:line="62" pos:column="20">(<argument><expr><name pos:line="62" pos:column="21">key<pos:position pos:line="62" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="62" pos:column="26">':'<pos:position pos:line="62" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="31"/></expr_stmt>
    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><name pos:line="63" pos:column="9">value<pos:position pos:line="63" pos:column="14"/></name> <operator pos:line="63" pos:column="15">==<pos:position pos:line="63" pos:column="17"/></operator> <name pos:line="63" pos:column="18">NULL<pos:position pos:line="63" pos:column="22"/></name></expr>)<pos:position pos:line="63" pos:column="23"/></condition><then pos:line="63" pos:column="23">
      <block type="pseudo"><continue pos:line="64" pos:column="7">continue;<pos:position pos:line="64" pos:column="16"/></continue></block></then></if>

    <comment type="block" pos:line="66" pos:column="5">/* Null-terminate `key'. */</comment>
    <expr_stmt><expr><operator pos:line="67" pos:column="5">*<pos:position pos:line="67" pos:column="6"/></operator><name pos:line="67" pos:column="6">value<pos:position pos:line="67" pos:column="11"/></name> <operator pos:line="67" pos:column="12">=<pos:position pos:line="67" pos:column="13"/></operator> <literal type="number" pos:line="67" pos:column="14">0<pos:position pos:line="67" pos:column="15"/></literal></expr>;<pos:position pos:line="67" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name pos:line="68" pos:column="5">value<pos:position pos:line="68" pos:column="10"/></name><operator pos:line="68" pos:column="10">++<pos:position pos:line="68" pos:column="12"/></operator></expr>;<pos:position pos:line="68" pos:column="13"/></expr_stmt>

    <comment type="block" pos:line="70" pos:column="5">/* Skip leading whitespace */</comment>
    <while pos:line="71" pos:column="5">while <condition pos:line="71" pos:column="11">(<expr><operator pos:line="71" pos:column="12">(<pos:position pos:line="71" pos:column="13"/></operator><operator pos:line="71" pos:column="13">*<pos:position pos:line="71" pos:column="14"/></operator><name pos:line="71" pos:column="14">value<pos:position pos:line="71" pos:column="19"/></name> <operator pos:line="71" pos:column="20">!=<pos:position pos:line="71" pos:column="22"/></operator> <literal type="number" pos:line="71" pos:column="23">0<pos:position pos:line="71" pos:column="24"/></literal><operator pos:line="71" pos:column="24">)<pos:position pos:line="71" pos:column="25"/></operator> <operator pos:line="71" pos:column="26">&amp;&amp;<pos:position pos:line="71" pos:column="36"/></operator> <call><name pos:line="71" pos:column="29">isspace<pos:position pos:line="71" pos:column="36"/></name> <argument_list pos:line="71" pos:column="37">(<argument><expr><operator pos:line="71" pos:column="38">(<pos:position pos:line="71" pos:column="39"/></operator><name pos:line="71" pos:column="39">int<pos:position pos:line="71" pos:column="42"/></name><operator pos:line="71" pos:column="42">)<pos:position pos:line="71" pos:column="43"/></operator> <operator pos:line="71" pos:column="44">*<pos:position pos:line="71" pos:column="45"/></operator><name pos:line="71" pos:column="45">value<pos:position pos:line="71" pos:column="50"/></name></expr></argument>)<pos:position pos:line="71" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="71" pos:column="52"/></condition>
      <block type="pseudo"><expr_stmt><expr><name pos:line="72" pos:column="7">value<pos:position pos:line="72" pos:column="12"/></name><operator pos:line="72" pos:column="12">++<pos:position pos:line="72" pos:column="14"/></operator></expr>;<pos:position pos:line="72" pos:column="15"/></expr_stmt></block></while>

    <comment type="block" pos:line="74" pos:column="5">/* Skip lines without value */</comment>
    <if pos:line="75" pos:column="5">if <condition pos:line="75" pos:column="8">(<expr><name><name pos:line="75" pos:column="9">value<pos:position pos:line="75" pos:column="14"/></name><index pos:line="75" pos:column="14">[<expr><literal type="number" pos:line="75" pos:column="15">0<pos:position pos:line="75" pos:column="16"/></literal></expr>]<pos:position pos:line="75" pos:column="17"/></index></name> <operator pos:line="75" pos:column="18">==<pos:position pos:line="75" pos:column="20"/></operator> <literal type="number" pos:line="75" pos:column="21">0<pos:position pos:line="75" pos:column="22"/></literal></expr>)<pos:position pos:line="75" pos:column="23"/></condition><then pos:line="75" pos:column="23">
      <block type="pseudo"><continue pos:line="76" pos:column="7">continue;<pos:position pos:line="76" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="78" pos:column="5">key_copy<pos:position pos:line="78" pos:column="13"/></name> <operator pos:line="78" pos:column="14">=<pos:position pos:line="78" pos:column="15"/></operator> <call><name pos:line="78" pos:column="16">strdup<pos:position pos:line="78" pos:column="22"/></name> <argument_list pos:line="78" pos:column="23">(<argument><expr><name pos:line="78" pos:column="24">key<pos:position pos:line="78" pos:column="27"/></name></expr></argument>)<pos:position pos:line="78" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="79" pos:column="5">value_copy<pos:position pos:line="79" pos:column="15"/></name> <operator pos:line="79" pos:column="16">=<pos:position pos:line="79" pos:column="17"/></operator> <call><name pos:line="79" pos:column="18">strdup<pos:position pos:line="79" pos:column="24"/></name> <argument_list pos:line="79" pos:column="25">(<argument><expr><name pos:line="79" pos:column="26">value<pos:position pos:line="79" pos:column="31"/></name></expr></argument>)<pos:position pos:line="79" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="33"/></expr_stmt>

    <if pos:line="81" pos:column="5">if <condition pos:line="81" pos:column="8">(<expr><operator pos:line="81" pos:column="9">(<pos:position pos:line="81" pos:column="10"/></operator><name pos:line="81" pos:column="10">key_copy<pos:position pos:line="81" pos:column="18"/></name> <operator pos:line="81" pos:column="19">==<pos:position pos:line="81" pos:column="21"/></operator> <name pos:line="81" pos:column="22">NULL<pos:position pos:line="81" pos:column="26"/></name><operator pos:line="81" pos:column="26">)<pos:position pos:line="81" pos:column="27"/></operator> <operator pos:line="81" pos:column="28">||<pos:position pos:line="81" pos:column="30"/></operator> <operator pos:line="81" pos:column="31">(<pos:position pos:line="81" pos:column="32"/></operator><name pos:line="81" pos:column="32">value_copy<pos:position pos:line="81" pos:column="42"/></name> <operator pos:line="81" pos:column="43">==<pos:position pos:line="81" pos:column="45"/></operator> <name pos:line="81" pos:column="46">NULL<pos:position pos:line="81" pos:column="50"/></name><operator pos:line="81" pos:column="50">)<pos:position pos:line="81" pos:column="51"/></operator></expr>)<pos:position pos:line="81" pos:column="52"/></condition><then pos:line="81" pos:column="52">
    <block pos:line="82" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="83" pos:column="7">free<pos:position pos:line="83" pos:column="11"/></name> <argument_list pos:line="83" pos:column="12">(<argument><expr><name pos:line="83" pos:column="13">key_copy<pos:position pos:line="83" pos:column="21"/></name></expr></argument>)<pos:position pos:line="83" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="84" pos:column="7">free<pos:position pos:line="84" pos:column="11"/></name> <argument_list pos:line="84" pos:column="12">(<argument><expr><name pos:line="84" pos:column="13">value_copy<pos:position pos:line="84" pos:column="23"/></name></expr></argument>)<pos:position pos:line="84" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="25"/></expr_stmt>
      <continue pos:line="85" pos:column="7">continue;<pos:position pos:line="85" pos:column="16"/></continue>
    }<pos:position pos:line="86" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="88" pos:column="5">status<pos:position pos:line="88" pos:column="11"/></name> <operator pos:line="88" pos:column="12">=<pos:position pos:line="88" pos:column="13"/></operator> <call><name pos:line="88" pos:column="14">c_avl_insert<pos:position pos:line="88" pos:column="26"/></name> <argument_list pos:line="88" pos:column="27">(<argument><expr><name pos:line="88" pos:column="28">tree<pos:position pos:line="88" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="34">key_copy<pos:position pos:line="88" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="44">value_copy<pos:position pos:line="88" pos:column="54"/></name></expr></argument>)<pos:position pos:line="88" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="56"/></expr_stmt>
    <if pos:line="89" pos:column="5">if <condition pos:line="89" pos:column="8">(<expr><name pos:line="89" pos:column="9">status<pos:position pos:line="89" pos:column="15"/></name> <operator pos:line="89" pos:column="16">!=<pos:position pos:line="89" pos:column="18"/></operator> <literal type="number" pos:line="89" pos:column="19">0<pos:position pos:line="89" pos:column="20"/></literal></expr>)<pos:position pos:line="89" pos:column="21"/></condition><then pos:line="89" pos:column="21">
    <block pos:line="90" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="91" pos:column="7">free<pos:position pos:line="91" pos:column="11"/></name> <argument_list pos:line="91" pos:column="12">(<argument><expr><name pos:line="91" pos:column="13">key_copy<pos:position pos:line="91" pos:column="21"/></name></expr></argument>)<pos:position pos:line="91" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="92" pos:column="7">free<pos:position pos:line="92" pos:column="11"/></name> <argument_list pos:line="92" pos:column="12">(<argument><expr><name pos:line="92" pos:column="13">value_copy<pos:position pos:line="92" pos:column="23"/></name></expr></argument>)<pos:position pos:line="92" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="25"/></expr_stmt>
      <continue pos:line="93" pos:column="7">continue;<pos:position pos:line="93" pos:column="16"/></continue>
    }<pos:position pos:line="94" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="96" pos:column="5">DEBUG<pos:position pos:line="96" pos:column="10"/></name> <argument_list pos:line="96" pos:column="11">(<argument><expr><literal type="string" pos:line="96" pos:column="12">"utils_fbhash: fbh_read_file: key = %s; value = %s;"<pos:position pos:line="96" pos:column="64"/></literal></expr></argument>,
        <argument><expr><name pos:line="97" pos:column="9">key<pos:position pos:line="97" pos:column="12"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="14">value<pos:position pos:line="97" pos:column="19"/></name></expr></argument>)<pos:position pos:line="97" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="21"/></expr_stmt>
  }<pos:position pos:line="98" pos:column="4"/></block></while> <comment type="block" pos:line="98" pos:column="5">/* }}} while (fgets) */</comment>

  <expr_stmt><expr><call><name pos:line="100" pos:column="3">fclose<pos:position pos:line="100" pos:column="9"/></name> <argument_list pos:line="100" pos:column="10">(<argument><expr><name pos:line="100" pos:column="11">fh<pos:position pos:line="100" pos:column="13"/></name></expr></argument>)<pos:position pos:line="100" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="15"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="102" pos:column="3">fbh_free_tree<pos:position pos:line="102" pos:column="16"/></name> <argument_list pos:line="102" pos:column="17">(<argument><expr><name><name pos:line="102" pos:column="18">h<pos:position pos:line="102" pos:column="19"/></name><operator pos:line="102" pos:column="19">-&gt;<pos:position pos:line="102" pos:column="24"/></operator><name pos:line="102" pos:column="21">tree<pos:position pos:line="102" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="102" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="103" pos:column="3">h<pos:position pos:line="103" pos:column="4"/></name><operator pos:line="103" pos:column="4">-&gt;<pos:position pos:line="103" pos:column="9"/></operator><name pos:line="103" pos:column="6">tree<pos:position pos:line="103" pos:column="10"/></name></name> <operator pos:line="103" pos:column="11">=<pos:position pos:line="103" pos:column="12"/></operator> <name pos:line="103" pos:column="13">tree<pos:position pos:line="103" pos:column="17"/></name></expr>;<pos:position pos:line="103" pos:column="18"/></expr_stmt>

  <return pos:line="105" pos:column="3">return <expr><operator pos:line="105" pos:column="10">(<pos:position pos:line="105" pos:column="11"/></operator><literal type="number" pos:line="105" pos:column="11">0<pos:position pos:line="105" pos:column="12"/></literal><operator pos:line="105" pos:column="12">)<pos:position pos:line="105" pos:column="13"/></operator></expr>;<pos:position pos:line="105" pos:column="14"/></return>
}<pos:position pos:line="106" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1696_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">process_station<pos:position pos:line="2" pos:column="16"/></name> <parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name pos:line="2" pos:column="18">int<pos:position pos:line="2" pos:column="21"/></name></type> <name pos:line="2" pos:column="22">sk<pos:position pos:line="2" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name pos:line="2" pos:column="32">char<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">dev<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="43">struct<pos:position pos:line="2" pos:column="49"/></name> <name pos:line="2" pos:column="50">ieee80211req_sta_info<pos:position pos:line="2" pos:column="71"/></name></name> <modifier pos:line="2" pos:column="72">*<pos:position pos:line="2" pos:column="73"/></modifier></type><name pos:line="2" pos:column="73">si<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="76"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">iwreq<pos:position pos:line="4" pos:column="21"/></name></name></type> <name pos:line="4" pos:column="22">iwr<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="5" pos:column="9">static<pos:position pos:line="5" pos:column="15"/></specifier> <type><name pos:line="5" pos:column="16">char<pos:position pos:line="5" pos:column="20"/></name></type> <name><name pos:line="5" pos:column="21">mac<pos:position pos:line="5" pos:column="24"/></name><index pos:line="5" pos:column="24">[<expr><name pos:line="5" pos:column="25">DATA_MAX_NAME_LEN<pos:position pos:line="5" pos:column="42"/></name></expr>]<pos:position pos:line="5" pos:column="43"/></index></name></decl>;<pos:position pos:line="5" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">ieee80211req_sta_stats<pos:position pos:line="6" pos:column="38"/></name></name></type> <name pos:line="6" pos:column="39">stats<pos:position pos:line="6" pos:column="44"/></name></decl>;<pos:position pos:line="6" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name><name pos:line="7" pos:column="15">struct<pos:position pos:line="7" pos:column="21"/></name> <name pos:line="7" pos:column="22">ieee80211_nodestats<pos:position pos:line="7" pos:column="41"/></name></name> <modifier pos:line="7" pos:column="42">*<pos:position pos:line="7" pos:column="43"/></modifier></type><name pos:line="7" pos:column="43">ns<pos:position pos:line="7" pos:column="45"/></name> <init pos:line="7" pos:column="46">= <expr><operator pos:line="7" pos:column="48">&amp;<pos:position pos:line="7" pos:column="53"/></operator><name><name pos:line="7" pos:column="49">stats<pos:position pos:line="7" pos:column="54"/></name><operator pos:line="7" pos:column="54">.<pos:position pos:line="7" pos:column="55"/></operator><name pos:line="7" pos:column="55">is_stats<pos:position pos:line="7" pos:column="63"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="64"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">status<pos:position pos:line="8" pos:column="19"/></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="10" pos:column="9">macaddr_to_str<pos:position pos:line="10" pos:column="23"/></name> <argument_list pos:line="10" pos:column="24">(<argument><expr><name pos:line="10" pos:column="25">mac<pos:position pos:line="10" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="30">sizeof <argument_list pos:line="10" pos:column="37">(<argument><expr><name pos:line="10" pos:column="38">mac<pos:position pos:line="10" pos:column="41"/></name></expr></argument>)<pos:position pos:line="10" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="44">si<pos:position pos:line="10" pos:column="46"/></name><operator pos:line="10" pos:column="46">-&gt;<pos:position pos:line="10" pos:column="51"/></operator><name pos:line="10" pos:column="48">isi_macaddr<pos:position pos:line="10" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="61"/></expr_stmt>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><call><name pos:line="12" pos:column="13">item_watched<pos:position pos:line="12" pos:column="25"/></name> <argument_list pos:line="12" pos:column="26">(<argument><expr><name pos:line="12" pos:column="27">STAT_NODE_TX_RATE<pos:position pos:line="12" pos:column="44"/></name></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="46"/></condition><then pos:line="12" pos:column="46">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="17">submit_gauge<pos:position pos:line="13" pos:column="29"/></name> <argument_list pos:line="13" pos:column="30">(<argument><expr><name pos:line="13" pos:column="31">dev<pos:position pos:line="13" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="36">"node_tx_rate"<pos:position pos:line="13" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="52">mac<pos:position pos:line="13" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="57">NULL<pos:position pos:line="13" pos:column="61"/></name></expr></argument>,
			<argument><expr><operator pos:line="14" pos:column="25">(<pos:position pos:line="14" pos:column="26"/></operator><name><name pos:line="14" pos:column="26">si<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">-&gt;<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="30">isi_rates<pos:position pos:line="14" pos:column="39"/></name><index pos:line="14" pos:column="39">[<expr><name><name pos:line="14" pos:column="40">si<pos:position pos:line="14" pos:column="42"/></name><operator pos:line="14" pos:column="42">-&gt;<pos:position pos:line="14" pos:column="47"/></operator><name pos:line="14" pos:column="44">isi_txrate<pos:position pos:line="14" pos:column="54"/></name></name></expr>]<pos:position pos:line="14" pos:column="55"/></index></name> <operator pos:line="14" pos:column="56">&amp;<pos:position pos:line="14" pos:column="61"/></operator> <name pos:line="14" pos:column="58">IEEE80211_RATE_VAL<pos:position pos:line="14" pos:column="76"/></name><operator pos:line="14" pos:column="76">)<pos:position pos:line="14" pos:column="77"/></operator> <operator pos:line="14" pos:column="78">/<pos:position pos:line="14" pos:column="79"/></operator> <literal type="number" pos:line="14" pos:column="80">2<pos:position pos:line="14" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="83"/></expr_stmt></block></then></if>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name pos:line="16" pos:column="13">item_watched<pos:position pos:line="16" pos:column="25"/></name> <argument_list pos:line="16" pos:column="26">(<argument><expr><name pos:line="16" pos:column="27">STAT_NODE_RSSI<pos:position pos:line="16" pos:column="41"/></name></expr></argument>)<pos:position pos:line="16" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="43"/></condition><then pos:line="16" pos:column="43">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="17">submit_gauge<pos:position pos:line="17" pos:column="29"/></name> <argument_list pos:line="17" pos:column="30">(<argument><expr><name pos:line="17" pos:column="31">dev<pos:position pos:line="17" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="36">"node_rssi"<pos:position pos:line="17" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="49">mac<pos:position pos:line="17" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="54">NULL<pos:position pos:line="17" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="60">si<pos:position pos:line="17" pos:column="62"/></name><operator pos:line="17" pos:column="62">-&gt;<pos:position pos:line="17" pos:column="67"/></operator><name pos:line="17" pos:column="64">isi_rssi<pos:position pos:line="17" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="74"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="19" pos:column="9">memset<pos:position pos:line="19" pos:column="15"/></name> <argument_list pos:line="19" pos:column="16">(<argument><expr><operator pos:line="19" pos:column="17">&amp;<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="18">iwr<pos:position pos:line="19" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="23">0<pos:position pos:line="19" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="26">sizeof <argument_list pos:line="19" pos:column="33">(<argument><expr><name pos:line="19" pos:column="34">iwr<pos:position pos:line="19" pos:column="37"/></name></expr></argument>)<pos:position pos:line="19" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="20" pos:column="9">sstrncpy<pos:position pos:line="20" pos:column="17"/></name><argument_list pos:line="20" pos:column="17">(<argument><expr><name><name pos:line="20" pos:column="18">iwr<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">.<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="22">ifr_name<pos:position pos:line="20" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="32">dev<pos:position pos:line="20" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="37">sizeof <argument_list pos:line="20" pos:column="44">(<argument><expr><name><name pos:line="20" pos:column="45">iwr<pos:position pos:line="20" pos:column="48"/></name><operator pos:line="20" pos:column="48">.<pos:position pos:line="20" pos:column="49"/></operator><name pos:line="20" pos:column="49">ifr_name<pos:position pos:line="20" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="60"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="21" pos:column="9">iwr<pos:position pos:line="21" pos:column="12"/></name><operator pos:line="21" pos:column="12">.<pos:position pos:line="21" pos:column="13"/></operator><name pos:line="21" pos:column="13">u<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">.<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="15">data<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">.<pos:position pos:line="21" pos:column="20"/></operator><name pos:line="21" pos:column="20">pointer<pos:position pos:line="21" pos:column="27"/></name></name> <operator pos:line="21" pos:column="28">=<pos:position pos:line="21" pos:column="29"/></operator> <operator pos:line="21" pos:column="30">(<pos:position pos:line="21" pos:column="31"/></operator><name pos:line="21" pos:column="31">void<pos:position pos:line="21" pos:column="35"/></name> <operator pos:line="21" pos:column="36">*<pos:position pos:line="21" pos:column="37"/></operator><operator pos:line="21" pos:column="37">)<pos:position pos:line="21" pos:column="38"/></operator> <operator pos:line="21" pos:column="39">&amp;<pos:position pos:line="21" pos:column="44"/></operator><name pos:line="21" pos:column="40">stats<pos:position pos:line="21" pos:column="45"/></name></expr>;<pos:position pos:line="21" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="22" pos:column="9">iwr<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">.<pos:position pos:line="22" pos:column="13"/></operator><name pos:line="22" pos:column="13">u<pos:position pos:line="22" pos:column="14"/></name><operator pos:line="22" pos:column="14">.<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="15">data<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">.<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="20">length<pos:position pos:line="22" pos:column="26"/></name></name> <operator pos:line="22" pos:column="27">=<pos:position pos:line="22" pos:column="28"/></operator> <sizeof pos:line="22" pos:column="29">sizeof <argument_list pos:line="22" pos:column="36">(<argument><expr><name pos:line="22" pos:column="37">stats<pos:position pos:line="22" pos:column="42"/></name></expr></argument>)<pos:position pos:line="22" pos:column="43"/></argument_list></sizeof></expr>;<pos:position pos:line="22" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">memcpy<pos:position pos:line="23" pos:column="15"/></name><argument_list pos:line="23" pos:column="15">(<argument><expr><name><name pos:line="23" pos:column="16">stats<pos:position pos:line="23" pos:column="21"/></name><operator pos:line="23" pos:column="21">.<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="22">is_u<pos:position pos:line="23" pos:column="26"/></name><operator pos:line="23" pos:column="26">.<pos:position pos:line="23" pos:column="27"/></operator><name pos:line="23" pos:column="27">macaddr<pos:position pos:line="23" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="36">si<pos:position pos:line="23" pos:column="38"/></name><operator pos:line="23" pos:column="38">-&gt;<pos:position pos:line="23" pos:column="43"/></operator><name pos:line="23" pos:column="40">isi_macaddr<pos:position pos:line="23" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="53">IEEE80211_ADDR_LEN<pos:position pos:line="23" pos:column="71"/></name></expr></argument>)<pos:position pos:line="23" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="73"/></expr_stmt>
	<expr_stmt><expr><name pos:line="24" pos:column="9">status<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <call><name pos:line="24" pos:column="18">ioctl<pos:position pos:line="24" pos:column="23"/></name><argument_list pos:line="24" pos:column="23">(<argument><expr><name pos:line="24" pos:column="24">sk<pos:position pos:line="24" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="28">IEEE80211_IOCTL_STA_STATS<pos:position pos:line="24" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="55">&amp;<pos:position pos:line="24" pos:column="60"/></operator><name pos:line="24" pos:column="56">iwr<pos:position pos:line="24" pos:column="59"/></name></expr></argument>)<pos:position pos:line="24" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="61"/></expr_stmt>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">status<pos:position pos:line="25" pos:column="19"/></name> <operator pos:line="25" pos:column="20">&lt;<pos:position pos:line="25" pos:column="24"/></operator> <literal type="number" pos:line="25" pos:column="22">0<pos:position pos:line="25" pos:column="23"/></literal></expr>)<pos:position pos:line="25" pos:column="24"/></condition><then pos:line="25" pos:column="24">
	<block pos:line="26" pos:column="9">{
		<comment type="block" pos:line="27" pos:column="17">/* Silent, because not all interfaces support all ioctls. */</comment>
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">DEBUG<pos:position pos:line="28" pos:column="22"/></name> <argument_list pos:line="28" pos:column="23">(<argument><expr><literal type="string" pos:line="28" pos:column="24">"madwifi plugin: Sending IO-control "<pos:position pos:line="28" pos:column="61"/></literal>
				<literal type="string" pos:line="29" pos:column="33">"IEEE80211_IOCTL_STA_STATS to device %s "<pos:position pos:line="29" pos:column="74"/></literal>
				<literal type="string" pos:line="30" pos:column="33">"failed with status %i."<pos:position pos:line="30" pos:column="57"/></literal></expr></argument>,
				<argument><expr><name pos:line="31" pos:column="33">dev<pos:position pos:line="31" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="38">status<pos:position pos:line="31" pos:column="44"/></name></expr></argument>)<pos:position pos:line="31" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="46"/></expr_stmt>
		<return pos:line="32" pos:column="17">return <expr><operator pos:line="32" pos:column="24">(<pos:position pos:line="32" pos:column="25"/></operator><name pos:line="32" pos:column="25">status<pos:position pos:line="32" pos:column="31"/></name><operator pos:line="32" pos:column="31">)<pos:position pos:line="32" pos:column="32"/></operator></expr>;<pos:position pos:line="32" pos:column="33"/></return>
	}<pos:position pos:line="33" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="35" pos:column="9">/* These two stats are handled as a special case as they are
	   a pair of 64bit values */</comment>
	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><call><name pos:line="37" pos:column="13">item_watched<pos:position pos:line="37" pos:column="25"/></name> <argument_list pos:line="37" pos:column="26">(<argument><expr><name pos:line="37" pos:column="27">STAT_NODE_OCTETS<pos:position pos:line="37" pos:column="43"/></name></expr></argument>)<pos:position pos:line="37" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="45"/></condition><then pos:line="37" pos:column="45">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="17">submit_derive2<pos:position pos:line="38" pos:column="31"/></name> <argument_list pos:line="38" pos:column="32">(<argument><expr><name pos:line="38" pos:column="33">dev<pos:position pos:line="38" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="38">"node_octets"<pos:position pos:line="38" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="53">mac<pos:position pos:line="38" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="58">NULL<pos:position pos:line="38" pos:column="62"/></name></expr></argument>,
			<argument><expr><name><name pos:line="39" pos:column="25">ns<pos:position pos:line="39" pos:column="27"/></name><operator pos:line="39" pos:column="27">-&gt;<pos:position pos:line="39" pos:column="32"/></operator><name pos:line="39" pos:column="29">ns_rx_bytes<pos:position pos:line="39" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="42">ns<pos:position pos:line="39" pos:column="44"/></name><operator pos:line="39" pos:column="44">-&gt;<pos:position pos:line="39" pos:column="49"/></operator><name pos:line="39" pos:column="46">ns_tx_bytes<pos:position pos:line="39" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="59"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="41" pos:column="9">/* This stat is handled as a special case, because it is stored
	   as uin64_t, but we will ignore upper half */</comment>
	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><call><name pos:line="43" pos:column="13">item_watched<pos:position pos:line="43" pos:column="25"/></name> <argument_list pos:line="43" pos:column="26">(<argument><expr><name pos:line="43" pos:column="27">STAT_NS_RX_BEACONS<pos:position pos:line="43" pos:column="45"/></name></expr></argument>)<pos:position pos:line="43" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="47"/></condition><then pos:line="43" pos:column="47">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="17">submit_derive<pos:position pos:line="44" pos:column="30"/></name> <argument_list pos:line="44" pos:column="31">(<argument><expr><name pos:line="44" pos:column="32">dev<pos:position pos:line="44" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="37">"node_stat"<pos:position pos:line="44" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="50">"ns_rx_beacons"<pos:position pos:line="44" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="67">mac<pos:position pos:line="44" pos:column="70"/></name></expr></argument>,
			<argument><expr><operator pos:line="45" pos:column="25">(<pos:position pos:line="45" pos:column="26"/></operator><name><name pos:line="45" pos:column="26">ns<pos:position pos:line="45" pos:column="28"/></name><operator pos:line="45" pos:column="28">-&gt;<pos:position pos:line="45" pos:column="33"/></operator><name pos:line="45" pos:column="30">ns_rx_beacons<pos:position pos:line="45" pos:column="43"/></name></name> <operator pos:line="45" pos:column="44">&amp;<pos:position pos:line="45" pos:column="49"/></operator> <literal type="number" pos:line="45" pos:column="46">0xFFFFFFFF<pos:position pos:line="45" pos:column="56"/></literal><operator pos:line="45" pos:column="56">)<pos:position pos:line="45" pos:column="57"/></operator></expr></argument>)<pos:position pos:line="45" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="59"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="47" pos:column="9">/* All other node statistics */</comment>
	<expr_stmt><expr><call><name pos:line="48" pos:column="9">process_stat_struct<pos:position pos:line="48" pos:column="28"/></name> <argument_list pos:line="48" pos:column="29">(<argument><expr><name pos:line="48" pos:column="30">NOD_STAT<pos:position pos:line="48" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="40">ns<pos:position pos:line="48" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="44">dev<pos:position pos:line="48" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="49">mac<pos:position pos:line="48" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="54">"node_stat"<pos:position pos:line="48" pos:column="65"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="67">"ns_misc"<pos:position pos:line="48" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="78"/></expr_stmt>
	<return pos:line="49" pos:column="9">return <expr><operator pos:line="49" pos:column="16">(<pos:position pos:line="49" pos:column="17"/></operator><literal type="number" pos:line="49" pos:column="17">0<pos:position pos:line="49" pos:column="18"/></literal><operator pos:line="49" pos:column="18">)<pos:position pos:line="49" pos:column="19"/></operator></expr>;<pos:position pos:line="49" pos:column="20"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

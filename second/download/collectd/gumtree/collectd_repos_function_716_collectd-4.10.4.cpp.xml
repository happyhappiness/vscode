<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_716_collectd-4.10.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">lv_config<pos:position pos:line="2" pos:column="10"/></name> <parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><specifier pos:line="2" pos:column="12">const<pos:position pos:line="2" pos:column="17"/></specifier> <name pos:line="2" pos:column="18">char<pos:position pos:line="2" pos:column="22"/></name> <modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier></type><name pos:line="2" pos:column="24">key<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="29">const<pos:position pos:line="2" pos:column="34"/></specifier> <name pos:line="2" pos:column="35">char<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">value<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name pos:line="4" pos:column="9">virInitialize<pos:position pos:line="4" pos:column="22"/></name> <argument_list pos:line="4" pos:column="23">()<pos:position pos:line="4" pos:column="25"/></argument_list></call> <operator pos:line="4" pos:column="26">!=<pos:position pos:line="4" pos:column="28"/></operator> <literal type="number" pos:line="4" pos:column="29">0<pos:position pos:line="4" pos:column="30"/></literal></expr>)<pos:position pos:line="4" pos:column="31"/></condition><then pos:line="4" pos:column="31">
        <block type="pseudo"><return pos:line="5" pos:column="9">return <expr><literal type="number" pos:line="5" pos:column="16">1<pos:position pos:line="5" pos:column="17"/></literal></expr>;<pos:position pos:line="5" pos:column="18"/></return></block></then></if>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">il_domains<pos:position pos:line="7" pos:column="19"/></name> <operator pos:line="7" pos:column="20">==<pos:position pos:line="7" pos:column="22"/></operator> <name pos:line="7" pos:column="23">NULL<pos:position pos:line="7" pos:column="27"/></name></expr>)<pos:position pos:line="7" pos:column="28"/></condition><then pos:line="7" pos:column="28">
        <block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="9">il_domains<pos:position pos:line="8" pos:column="19"/></name> <operator pos:line="8" pos:column="20">=<pos:position pos:line="8" pos:column="21"/></operator> <call><name pos:line="8" pos:column="22">ignorelist_create<pos:position pos:line="8" pos:column="39"/></name> <argument_list pos:line="8" pos:column="40">(<argument><expr><literal type="number" pos:line="8" pos:column="41">1<pos:position pos:line="8" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="44"/></expr_stmt></block></then></if>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">il_block_devices<pos:position pos:line="9" pos:column="25"/></name> <operator pos:line="9" pos:column="26">==<pos:position pos:line="9" pos:column="28"/></operator> <name pos:line="9" pos:column="29">NULL<pos:position pos:line="9" pos:column="33"/></name></expr>)<pos:position pos:line="9" pos:column="34"/></condition><then pos:line="9" pos:column="34">
        <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="9">il_block_devices<pos:position pos:line="10" pos:column="25"/></name> <operator pos:line="10" pos:column="26">=<pos:position pos:line="10" pos:column="27"/></operator> <call><name pos:line="10" pos:column="28">ignorelist_create<pos:position pos:line="10" pos:column="45"/></name> <argument_list pos:line="10" pos:column="46">(<argument><expr><literal type="number" pos:line="10" pos:column="47">1<pos:position pos:line="10" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="50"/></expr_stmt></block></then></if>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">il_interface_devices<pos:position pos:line="11" pos:column="29"/></name> <operator pos:line="11" pos:column="30">==<pos:position pos:line="11" pos:column="32"/></operator> <name pos:line="11" pos:column="33">NULL<pos:position pos:line="11" pos:column="37"/></name></expr>)<pos:position pos:line="11" pos:column="38"/></condition><then pos:line="11" pos:column="38">
        <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="9">il_interface_devices<pos:position pos:line="12" pos:column="29"/></name> <operator pos:line="12" pos:column="30">=<pos:position pos:line="12" pos:column="31"/></operator> <call><name pos:line="12" pos:column="32">ignorelist_create<pos:position pos:line="12" pos:column="49"/></name> <argument_list pos:line="12" pos:column="50">(<argument><expr><literal type="number" pos:line="12" pos:column="51">1<pos:position pos:line="12" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="54"/></expr_stmt></block></then></if>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><call><name pos:line="14" pos:column="9">strcasecmp<pos:position pos:line="14" pos:column="19"/></name> <argument_list pos:line="14" pos:column="20">(<argument><expr><name pos:line="14" pos:column="21">key<pos:position pos:line="14" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="26">"Connection"<pos:position pos:line="14" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="39"/></argument_list></call> <operator pos:line="14" pos:column="40">==<pos:position pos:line="14" pos:column="42"/></operator> <literal type="number" pos:line="14" pos:column="43">0<pos:position pos:line="14" pos:column="44"/></literal></expr>)<pos:position pos:line="14" pos:column="45"/></condition><then pos:line="14" pos:column="45"> <block pos:line="14" pos:column="46">{
        <decl_stmt><decl><type><name pos:line="15" pos:column="9">char<pos:position pos:line="15" pos:column="13"/></name> <modifier pos:line="15" pos:column="14">*<pos:position pos:line="15" pos:column="15"/></modifier></type><name pos:line="15" pos:column="15">tmp<pos:position pos:line="15" pos:column="18"/></name> <init pos:line="15" pos:column="19">= <expr><call><name pos:line="15" pos:column="21">strdup<pos:position pos:line="15" pos:column="27"/></name> <argument_list pos:line="15" pos:column="28">(<argument><expr><name pos:line="15" pos:column="29">value<pos:position pos:line="15" pos:column="34"/></name></expr></argument>)<pos:position pos:line="15" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="36"/></decl_stmt>
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">tmp<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">==<pos:position pos:line="16" pos:column="19"/></operator> <name pos:line="16" pos:column="20">NULL<pos:position pos:line="16" pos:column="24"/></name></expr>)<pos:position pos:line="16" pos:column="25"/></condition><then pos:line="16" pos:column="25"> <block pos:line="16" pos:column="26">{
            <expr_stmt><expr><call><name pos:line="17" pos:column="13">ERROR<pos:position pos:line="17" pos:column="18"/></name> <argument_list pos:line="17" pos:column="19">(<argument><expr><literal type="string" pos:line="17" pos:column="20">"libvirt plugin: Connection strdup failed."<pos:position pos:line="17" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="65"/></expr_stmt>
            <return pos:line="18" pos:column="13">return <expr><literal type="number" pos:line="18" pos:column="20">1<pos:position pos:line="18" pos:column="21"/></literal></expr>;<pos:position pos:line="18" pos:column="22"/></return>
        }<pos:position pos:line="19" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">sfree<pos:position pos:line="20" pos:column="14"/></name> <argument_list pos:line="20" pos:column="15">(<argument><expr><name pos:line="20" pos:column="16">conn_string<pos:position pos:line="20" pos:column="27"/></name></expr></argument>)<pos:position pos:line="20" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="21" pos:column="9">conn_string<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">=<pos:position pos:line="21" pos:column="22"/></operator> <name pos:line="21" pos:column="23">tmp<pos:position pos:line="21" pos:column="26"/></name></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt>
        <return pos:line="22" pos:column="9">return <expr><literal type="number" pos:line="22" pos:column="16">0<pos:position pos:line="22" pos:column="17"/></literal></expr>;<pos:position pos:line="22" pos:column="18"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><call><name pos:line="25" pos:column="9">strcasecmp<pos:position pos:line="25" pos:column="19"/></name> <argument_list pos:line="25" pos:column="20">(<argument><expr><name pos:line="25" pos:column="21">key<pos:position pos:line="25" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="26">"RefreshInterval"<pos:position pos:line="25" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="44"/></argument_list></call> <operator pos:line="25" pos:column="45">==<pos:position pos:line="25" pos:column="47"/></operator> <literal type="number" pos:line="25" pos:column="48">0<pos:position pos:line="25" pos:column="49"/></literal></expr>)<pos:position pos:line="25" pos:column="50"/></condition><then pos:line="25" pos:column="50"> <block pos:line="25" pos:column="51">{
        <decl_stmt><decl><type><name pos:line="26" pos:column="9">char<pos:position pos:line="26" pos:column="13"/></name> <modifier pos:line="26" pos:column="14">*<pos:position pos:line="26" pos:column="15"/></modifier></type><name pos:line="26" pos:column="15">eptr<pos:position pos:line="26" pos:column="19"/></name> <init pos:line="26" pos:column="20">= <expr><name pos:line="26" pos:column="22">NULL<pos:position pos:line="26" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="26" pos:column="27"/></decl_stmt>
        <expr_stmt><expr><name pos:line="27" pos:column="9">interval<pos:position pos:line="27" pos:column="17"/></name> <operator pos:line="27" pos:column="18">=<pos:position pos:line="27" pos:column="19"/></operator> <call><name pos:line="27" pos:column="20">strtol<pos:position pos:line="27" pos:column="26"/></name> <argument_list pos:line="27" pos:column="27">(<argument><expr><name pos:line="27" pos:column="28">value<pos:position pos:line="27" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="35">&amp;<pos:position pos:line="27" pos:column="40"/></operator><name pos:line="27" pos:column="36">eptr<pos:position pos:line="27" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="42">10<pos:position pos:line="27" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="46"/></expr_stmt>
        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">eptr<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">==<pos:position pos:line="28" pos:column="20"/></operator> <name pos:line="28" pos:column="21">NULL<pos:position pos:line="28" pos:column="25"/></name> <operator pos:line="28" pos:column="26">||<pos:position pos:line="28" pos:column="28"/></operator> <operator pos:line="28" pos:column="29">*<pos:position pos:line="28" pos:column="30"/></operator><name pos:line="28" pos:column="30">eptr<pos:position pos:line="28" pos:column="34"/></name> <operator pos:line="28" pos:column="35">!=<pos:position pos:line="28" pos:column="37"/></operator> <literal type="char" pos:line="28" pos:column="38">'\0'<pos:position pos:line="28" pos:column="42"/></literal></expr>)<pos:position pos:line="28" pos:column="43"/></condition><then pos:line="28" pos:column="43"> <block type="pseudo"><return pos:line="28" pos:column="44">return <expr><literal type="number" pos:line="28" pos:column="51">1<pos:position pos:line="28" pos:column="52"/></literal></expr>;<pos:position pos:line="28" pos:column="53"/></return></block></then></if>
        <return pos:line="29" pos:column="9">return <expr><literal type="number" pos:line="29" pos:column="16">0<pos:position pos:line="29" pos:column="17"/></literal></expr>;<pos:position pos:line="29" pos:column="18"/></return>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><call><name pos:line="32" pos:column="9">strcasecmp<pos:position pos:line="32" pos:column="19"/></name> <argument_list pos:line="32" pos:column="20">(<argument><expr><name pos:line="32" pos:column="21">key<pos:position pos:line="32" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="26">"Domain"<pos:position pos:line="32" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="35"/></argument_list></call> <operator pos:line="32" pos:column="36">==<pos:position pos:line="32" pos:column="38"/></operator> <literal type="number" pos:line="32" pos:column="39">0<pos:position pos:line="32" pos:column="40"/></literal></expr>)<pos:position pos:line="32" pos:column="41"/></condition><then pos:line="32" pos:column="41"> <block pos:line="32" pos:column="42">{
        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><call><name pos:line="33" pos:column="13">ignorelist_add<pos:position pos:line="33" pos:column="27"/></name> <argument_list pos:line="33" pos:column="28">(<argument><expr><name pos:line="33" pos:column="29">il_domains<pos:position pos:line="33" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="41">value<pos:position pos:line="33" pos:column="46"/></name></expr></argument>)<pos:position pos:line="33" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="48"/></condition><then pos:line="33" pos:column="48"> <block type="pseudo"><return pos:line="33" pos:column="49">return <expr><literal type="number" pos:line="33" pos:column="56">1<pos:position pos:line="33" pos:column="57"/></literal></expr>;<pos:position pos:line="33" pos:column="58"/></return></block></then></if>
        <return pos:line="34" pos:column="9">return <expr><literal type="number" pos:line="34" pos:column="16">0<pos:position pos:line="34" pos:column="17"/></literal></expr>;<pos:position pos:line="34" pos:column="18"/></return>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><call><name pos:line="36" pos:column="9">strcasecmp<pos:position pos:line="36" pos:column="19"/></name> <argument_list pos:line="36" pos:column="20">(<argument><expr><name pos:line="36" pos:column="21">key<pos:position pos:line="36" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="26">"BlockDevice"<pos:position pos:line="36" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="40"/></argument_list></call> <operator pos:line="36" pos:column="41">==<pos:position pos:line="36" pos:column="43"/></operator> <literal type="number" pos:line="36" pos:column="44">0<pos:position pos:line="36" pos:column="45"/></literal></expr>)<pos:position pos:line="36" pos:column="46"/></condition><then pos:line="36" pos:column="46"> <block pos:line="36" pos:column="47">{
        <if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><call><name pos:line="37" pos:column="13">ignorelist_add<pos:position pos:line="37" pos:column="27"/></name> <argument_list pos:line="37" pos:column="28">(<argument><expr><name pos:line="37" pos:column="29">il_block_devices<pos:position pos:line="37" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="47">value<pos:position pos:line="37" pos:column="52"/></name></expr></argument>)<pos:position pos:line="37" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="54"/></condition><then pos:line="37" pos:column="54"> <block type="pseudo"><return pos:line="37" pos:column="55">return <expr><literal type="number" pos:line="37" pos:column="62">1<pos:position pos:line="37" pos:column="63"/></literal></expr>;<pos:position pos:line="37" pos:column="64"/></return></block></then></if>
        <return pos:line="38" pos:column="9">return <expr><literal type="number" pos:line="38" pos:column="16">0<pos:position pos:line="38" pos:column="17"/></literal></expr>;<pos:position pos:line="38" pos:column="18"/></return>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><call><name pos:line="40" pos:column="9">strcasecmp<pos:position pos:line="40" pos:column="19"/></name> <argument_list pos:line="40" pos:column="20">(<argument><expr><name pos:line="40" pos:column="21">key<pos:position pos:line="40" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="26">"InterfaceDevice"<pos:position pos:line="40" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="44"/></argument_list></call> <operator pos:line="40" pos:column="45">==<pos:position pos:line="40" pos:column="47"/></operator> <literal type="number" pos:line="40" pos:column="48">0<pos:position pos:line="40" pos:column="49"/></literal></expr>)<pos:position pos:line="40" pos:column="50"/></condition><then pos:line="40" pos:column="50"> <block pos:line="40" pos:column="51">{
        <if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><call><name pos:line="41" pos:column="13">ignorelist_add<pos:position pos:line="41" pos:column="27"/></name> <argument_list pos:line="41" pos:column="28">(<argument><expr><name pos:line="41" pos:column="29">il_interface_devices<pos:position pos:line="41" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="51">value<pos:position pos:line="41" pos:column="56"/></name></expr></argument>)<pos:position pos:line="41" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="58"/></condition><then pos:line="41" pos:column="58"> <block type="pseudo"><return pos:line="41" pos:column="59">return <expr><literal type="number" pos:line="41" pos:column="66">1<pos:position pos:line="41" pos:column="67"/></literal></expr>;<pos:position pos:line="41" pos:column="68"/></return></block></then></if>
        <return pos:line="42" pos:column="9">return <expr><literal type="number" pos:line="42" pos:column="16">0<pos:position pos:line="42" pos:column="17"/></literal></expr>;<pos:position pos:line="42" pos:column="18"/></return>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>

    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><call><name pos:line="45" pos:column="9">strcasecmp<pos:position pos:line="45" pos:column="19"/></name> <argument_list pos:line="45" pos:column="20">(<argument><expr><name pos:line="45" pos:column="21">key<pos:position pos:line="45" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="26">"IgnoreSelected"<pos:position pos:line="45" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="43"/></argument_list></call> <operator pos:line="45" pos:column="44">==<pos:position pos:line="45" pos:column="46"/></operator> <literal type="number" pos:line="45" pos:column="47">0<pos:position pos:line="45" pos:column="48"/></literal></expr>)<pos:position pos:line="45" pos:column="49"/></condition><then pos:line="45" pos:column="49"> <block pos:line="45" pos:column="50">{
        <if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><call><name pos:line="46" pos:column="13">IS_TRUE<pos:position pos:line="46" pos:column="20"/></name> <argument_list pos:line="46" pos:column="21">(<argument><expr><name pos:line="46" pos:column="22">value<pos:position pos:line="46" pos:column="27"/></name></expr></argument>)<pos:position pos:line="46" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="29"/></condition><then pos:line="46" pos:column="29">
        <block pos:line="47" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="48" pos:column="13">ignorelist_set_invert<pos:position pos:line="48" pos:column="34"/></name> <argument_list pos:line="48" pos:column="35">(<argument><expr><name pos:line="48" pos:column="36">il_domains<pos:position pos:line="48" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="48">0<pos:position pos:line="48" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="49" pos:column="13">ignorelist_set_invert<pos:position pos:line="49" pos:column="34"/></name> <argument_list pos:line="49" pos:column="35">(<argument><expr><name pos:line="49" pos:column="36">il_block_devices<pos:position pos:line="49" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="54">0<pos:position pos:line="49" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="57"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="50" pos:column="13">ignorelist_set_invert<pos:position pos:line="50" pos:column="34"/></name> <argument_list pos:line="50" pos:column="35">(<argument><expr><name pos:line="50" pos:column="36">il_interface_devices<pos:position pos:line="50" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="58">0<pos:position pos:line="50" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="61"/></expr_stmt>
        }<pos:position pos:line="51" pos:column="10"/></block></then>
        <else pos:line="52" pos:column="9">else
        <block pos:line="53" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="54" pos:column="13">ignorelist_set_invert<pos:position pos:line="54" pos:column="34"/></name> <argument_list pos:line="54" pos:column="35">(<argument><expr><name pos:line="54" pos:column="36">il_domains<pos:position pos:line="54" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="48">1<pos:position pos:line="54" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="55" pos:column="13">ignorelist_set_invert<pos:position pos:line="55" pos:column="34"/></name> <argument_list pos:line="55" pos:column="35">(<argument><expr><name pos:line="55" pos:column="36">il_block_devices<pos:position pos:line="55" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="54">1<pos:position pos:line="55" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="57"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="56" pos:column="13">ignorelist_set_invert<pos:position pos:line="56" pos:column="34"/></name> <argument_list pos:line="56" pos:column="35">(<argument><expr><name pos:line="56" pos:column="36">il_interface_devices<pos:position pos:line="56" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="58">1<pos:position pos:line="56" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="61"/></expr_stmt>
        }<pos:position pos:line="57" pos:column="10"/></block></else></if>
        <return pos:line="58" pos:column="9">return <expr><literal type="number" pos:line="58" pos:column="16">0<pos:position pos:line="58" pos:column="17"/></literal></expr>;<pos:position pos:line="58" pos:column="18"/></return>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if>

    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><call><name pos:line="61" pos:column="9">strcasecmp<pos:position pos:line="61" pos:column="19"/></name> <argument_list pos:line="61" pos:column="20">(<argument><expr><name pos:line="61" pos:column="21">key<pos:position pos:line="61" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="26">"HostnameFormat"<pos:position pos:line="61" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="43"/></argument_list></call> <operator pos:line="61" pos:column="44">==<pos:position pos:line="61" pos:column="46"/></operator> <literal type="number" pos:line="61" pos:column="47">0<pos:position pos:line="61" pos:column="48"/></literal></expr>)<pos:position pos:line="61" pos:column="49"/></condition><then pos:line="61" pos:column="49"> <block pos:line="61" pos:column="50">{
        <decl_stmt><decl><type><name pos:line="62" pos:column="9">char<pos:position pos:line="62" pos:column="13"/></name> <modifier pos:line="62" pos:column="14">*<pos:position pos:line="62" pos:column="15"/></modifier></type><name pos:line="62" pos:column="15">value_copy<pos:position pos:line="62" pos:column="25"/></name></decl>;<pos:position pos:line="62" pos:column="26"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="63" pos:column="9">char<pos:position pos:line="63" pos:column="13"/></name> <modifier pos:line="63" pos:column="14">*<pos:position pos:line="63" pos:column="15"/></modifier></type><name><name pos:line="63" pos:column="15">fields<pos:position pos:line="63" pos:column="21"/></name><index pos:line="63" pos:column="21">[<expr><name pos:line="63" pos:column="22">HF_MAX_FIELDS<pos:position pos:line="63" pos:column="35"/></name></expr>]<pos:position pos:line="63" pos:column="36"/></index></name></decl>;<pos:position pos:line="63" pos:column="37"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="64" pos:column="9">int<pos:position pos:line="64" pos:column="12"/></name></type> <name pos:line="64" pos:column="13">i<pos:position pos:line="64" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="64" pos:column="16">n<pos:position pos:line="64" pos:column="17"/></name></decl>;<pos:position pos:line="64" pos:column="18"/></decl_stmt>

        <expr_stmt><expr><name pos:line="66" pos:column="9">value_copy<pos:position pos:line="66" pos:column="19"/></name> <operator pos:line="66" pos:column="20">=<pos:position pos:line="66" pos:column="21"/></operator> <call><name pos:line="66" pos:column="22">strdup<pos:position pos:line="66" pos:column="28"/></name> <argument_list pos:line="66" pos:column="29">(<argument><expr><name pos:line="66" pos:column="30">value<pos:position pos:line="66" pos:column="35"/></name></expr></argument>)<pos:position pos:line="66" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="37"/></expr_stmt>
        <if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><name pos:line="67" pos:column="13">value_copy<pos:position pos:line="67" pos:column="23"/></name> <operator pos:line="67" pos:column="24">==<pos:position pos:line="67" pos:column="26"/></operator> <name pos:line="67" pos:column="27">NULL<pos:position pos:line="67" pos:column="31"/></name></expr>)<pos:position pos:line="67" pos:column="32"/></condition><then pos:line="67" pos:column="32"> <block pos:line="67" pos:column="33">{
            <expr_stmt><expr><call><name pos:line="68" pos:column="13">ERROR<pos:position pos:line="68" pos:column="18"/></name> <argument_list pos:line="68" pos:column="19">(<argument><expr><literal type="string" pos:line="68" pos:column="20">"libvirt plugin: strdup failed."<pos:position pos:line="68" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="54"/></expr_stmt>
            <return pos:line="69" pos:column="13">return <expr><operator pos:line="69" pos:column="20">-<pos:position pos:line="69" pos:column="21"/></operator><literal type="number" pos:line="69" pos:column="21">1<pos:position pos:line="69" pos:column="22"/></literal></expr>;<pos:position pos:line="69" pos:column="23"/></return>
        }<pos:position pos:line="70" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="72" pos:column="9">n<pos:position pos:line="72" pos:column="10"/></name> <operator pos:line="72" pos:column="11">=<pos:position pos:line="72" pos:column="12"/></operator> <call><name pos:line="72" pos:column="13">strsplit<pos:position pos:line="72" pos:column="21"/></name> <argument_list pos:line="72" pos:column="22">(<argument><expr><name pos:line="72" pos:column="23">value_copy<pos:position pos:line="72" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="35">fields<pos:position pos:line="72" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="43">HF_MAX_FIELDS<pos:position pos:line="72" pos:column="56"/></name></expr></argument>)<pos:position pos:line="72" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="58"/></expr_stmt>
        <if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><name pos:line="73" pos:column="13">n<pos:position pos:line="73" pos:column="14"/></name> <operator pos:line="73" pos:column="15">&lt;<pos:position pos:line="73" pos:column="19"/></operator> <literal type="number" pos:line="73" pos:column="17">1<pos:position pos:line="73" pos:column="18"/></literal></expr>)<pos:position pos:line="73" pos:column="19"/></condition><then pos:line="73" pos:column="19"> <block pos:line="73" pos:column="20">{
            <expr_stmt><expr><call><name pos:line="74" pos:column="13">free<pos:position pos:line="74" pos:column="17"/></name> <argument_list pos:line="74" pos:column="18">(<argument><expr><name pos:line="74" pos:column="19">value_copy<pos:position pos:line="74" pos:column="29"/></name></expr></argument>)<pos:position pos:line="74" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="75" pos:column="13">ERROR<pos:position pos:line="75" pos:column="18"/></name> <argument_list pos:line="75" pos:column="19">(<argument><expr><literal type="string" pos:line="75" pos:column="20">"HostnameFormat: no fields"<pos:position pos:line="75" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="49"/></expr_stmt>
            <return pos:line="76" pos:column="13">return <expr><operator pos:line="76" pos:column="20">-<pos:position pos:line="76" pos:column="21"/></operator><literal type="number" pos:line="76" pos:column="21">1<pos:position pos:line="76" pos:column="22"/></literal></expr>;<pos:position pos:line="76" pos:column="23"/></return>
        }<pos:position pos:line="77" pos:column="10"/></block></then></if>

        <for pos:line="79" pos:column="9">for <control pos:line="79" pos:column="13">(<init><expr><name pos:line="79" pos:column="14">i<pos:position pos:line="79" pos:column="15"/></name> <operator pos:line="79" pos:column="16">=<pos:position pos:line="79" pos:column="17"/></operator> <literal type="number" pos:line="79" pos:column="18">0<pos:position pos:line="79" pos:column="19"/></literal></expr>;<pos:position pos:line="79" pos:column="20"/></init> <condition><expr><name pos:line="79" pos:column="21">i<pos:position pos:line="79" pos:column="22"/></name> <operator pos:line="79" pos:column="23">&lt;<pos:position pos:line="79" pos:column="27"/></operator> <name pos:line="79" pos:column="25">n<pos:position pos:line="79" pos:column="26"/></name></expr>;<pos:position pos:line="79" pos:column="27"/></condition> <incr><expr><operator pos:line="79" pos:column="28">++<pos:position pos:line="79" pos:column="30"/></operator><name pos:line="79" pos:column="30">i<pos:position pos:line="79" pos:column="31"/></name></expr></incr>)<pos:position pos:line="79" pos:column="32"/></control> <block pos:line="79" pos:column="33">{
            <if pos:line="80" pos:column="13">if <condition pos:line="80" pos:column="16">(<expr><call><name pos:line="80" pos:column="17">strcasecmp<pos:position pos:line="80" pos:column="27"/></name> <argument_list pos:line="80" pos:column="28">(<argument><expr><name><name pos:line="80" pos:column="29">fields<pos:position pos:line="80" pos:column="35"/></name><index pos:line="80" pos:column="35">[<expr><name pos:line="80" pos:column="36">i<pos:position pos:line="80" pos:column="37"/></name></expr>]<pos:position pos:line="80" pos:column="38"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="40">"hostname"<pos:position pos:line="80" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="51"/></argument_list></call> <operator pos:line="80" pos:column="52">==<pos:position pos:line="80" pos:column="54"/></operator> <literal type="number" pos:line="80" pos:column="55">0<pos:position pos:line="80" pos:column="56"/></literal></expr>)<pos:position pos:line="80" pos:column="57"/></condition><then pos:line="80" pos:column="57">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="81" pos:column="17">hostname_format<pos:position pos:line="81" pos:column="32"/></name><index pos:line="81" pos:column="32">[<expr><name pos:line="81" pos:column="33">i<pos:position pos:line="81" pos:column="34"/></name></expr>]<pos:position pos:line="81" pos:column="35"/></index></name> <operator pos:line="81" pos:column="36">=<pos:position pos:line="81" pos:column="37"/></operator> <name pos:line="81" pos:column="38">hf_hostname<pos:position pos:line="81" pos:column="49"/></name></expr>;<pos:position pos:line="81" pos:column="50"/></expr_stmt></block></then>
            <elseif pos:line="82" pos:column="13">else <if pos:line="82" pos:column="18">if <condition pos:line="82" pos:column="21">(<expr><call><name pos:line="82" pos:column="22">strcasecmp<pos:position pos:line="82" pos:column="32"/></name> <argument_list pos:line="82" pos:column="33">(<argument><expr><name><name pos:line="82" pos:column="34">fields<pos:position pos:line="82" pos:column="40"/></name><index pos:line="82" pos:column="40">[<expr><name pos:line="82" pos:column="41">i<pos:position pos:line="82" pos:column="42"/></name></expr>]<pos:position pos:line="82" pos:column="43"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="45">"name"<pos:position pos:line="82" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="52"/></argument_list></call> <operator pos:line="82" pos:column="53">==<pos:position pos:line="82" pos:column="55"/></operator> <literal type="number" pos:line="82" pos:column="56">0<pos:position pos:line="82" pos:column="57"/></literal></expr>)<pos:position pos:line="82" pos:column="58"/></condition><then pos:line="82" pos:column="58">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="83" pos:column="17">hostname_format<pos:position pos:line="83" pos:column="32"/></name><index pos:line="83" pos:column="32">[<expr><name pos:line="83" pos:column="33">i<pos:position pos:line="83" pos:column="34"/></name></expr>]<pos:position pos:line="83" pos:column="35"/></index></name> <operator pos:line="83" pos:column="36">=<pos:position pos:line="83" pos:column="37"/></operator> <name pos:line="83" pos:column="38">hf_name<pos:position pos:line="83" pos:column="45"/></name></expr>;<pos:position pos:line="83" pos:column="46"/></expr_stmt></block></then></if></elseif>
            <elseif pos:line="84" pos:column="13">else <if pos:line="84" pos:column="18">if <condition pos:line="84" pos:column="21">(<expr><call><name pos:line="84" pos:column="22">strcasecmp<pos:position pos:line="84" pos:column="32"/></name> <argument_list pos:line="84" pos:column="33">(<argument><expr><name><name pos:line="84" pos:column="34">fields<pos:position pos:line="84" pos:column="40"/></name><index pos:line="84" pos:column="40">[<expr><name pos:line="84" pos:column="41">i<pos:position pos:line="84" pos:column="42"/></name></expr>]<pos:position pos:line="84" pos:column="43"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="84" pos:column="45">"uuid"<pos:position pos:line="84" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="52"/></argument_list></call> <operator pos:line="84" pos:column="53">==<pos:position pos:line="84" pos:column="55"/></operator> <literal type="number" pos:line="84" pos:column="56">0<pos:position pos:line="84" pos:column="57"/></literal></expr>)<pos:position pos:line="84" pos:column="58"/></condition><then pos:line="84" pos:column="58">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="85" pos:column="17">hostname_format<pos:position pos:line="85" pos:column="32"/></name><index pos:line="85" pos:column="32">[<expr><name pos:line="85" pos:column="33">i<pos:position pos:line="85" pos:column="34"/></name></expr>]<pos:position pos:line="85" pos:column="35"/></index></name> <operator pos:line="85" pos:column="36">=<pos:position pos:line="85" pos:column="37"/></operator> <name pos:line="85" pos:column="38">hf_uuid<pos:position pos:line="85" pos:column="45"/></name></expr>;<pos:position pos:line="85" pos:column="46"/></expr_stmt></block></then></if></elseif>
            <else pos:line="86" pos:column="13">else <block pos:line="86" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="87" pos:column="17">free<pos:position pos:line="87" pos:column="21"/></name> <argument_list pos:line="87" pos:column="22">(<argument><expr><name pos:line="87" pos:column="23">value_copy<pos:position pos:line="87" pos:column="33"/></name></expr></argument>)<pos:position pos:line="87" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="35"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="88" pos:column="17">ERROR<pos:position pos:line="88" pos:column="22"/></name> <argument_list pos:line="88" pos:column="23">(<argument><expr><literal type="string" pos:line="88" pos:column="24">"unknown HostnameFormat field: %s"<pos:position pos:line="88" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="88" pos:column="60">fields<pos:position pos:line="88" pos:column="66"/></name><index pos:line="88" pos:column="66">[<expr><name pos:line="88" pos:column="67">i<pos:position pos:line="88" pos:column="68"/></name></expr>]<pos:position pos:line="88" pos:column="69"/></index></name></expr></argument>)<pos:position pos:line="88" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="71"/></expr_stmt>
                <return pos:line="89" pos:column="17">return <expr><operator pos:line="89" pos:column="24">-<pos:position pos:line="89" pos:column="25"/></operator><literal type="number" pos:line="89" pos:column="25">1<pos:position pos:line="89" pos:column="26"/></literal></expr>;<pos:position pos:line="89" pos:column="27"/></return>
            }<pos:position pos:line="90" pos:column="14"/></block></else></if>
        }<pos:position pos:line="91" pos:column="10"/></block></for>
        <expr_stmt><expr><call><name pos:line="92" pos:column="9">free<pos:position pos:line="92" pos:column="13"/></name> <argument_list pos:line="92" pos:column="14">(<argument><expr><name pos:line="92" pos:column="15">value_copy<pos:position pos:line="92" pos:column="25"/></name></expr></argument>)<pos:position pos:line="92" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="27"/></expr_stmt>

        <for pos:line="94" pos:column="9">for <control pos:line="94" pos:column="13">(<init><expr><name pos:line="94" pos:column="14">i<pos:position pos:line="94" pos:column="15"/></name> <operator pos:line="94" pos:column="16">=<pos:position pos:line="94" pos:column="17"/></operator> <name pos:line="94" pos:column="18">n<pos:position pos:line="94" pos:column="19"/></name></expr>;<pos:position pos:line="94" pos:column="20"/></init> <condition><expr><name pos:line="94" pos:column="21">i<pos:position pos:line="94" pos:column="22"/></name> <operator pos:line="94" pos:column="23">&lt;<pos:position pos:line="94" pos:column="27"/></operator> <name pos:line="94" pos:column="25">HF_MAX_FIELDS<pos:position pos:line="94" pos:column="38"/></name></expr>;<pos:position pos:line="94" pos:column="39"/></condition> <incr><expr><operator pos:line="94" pos:column="40">++<pos:position pos:line="94" pos:column="42"/></operator><name pos:line="94" pos:column="42">i<pos:position pos:line="94" pos:column="43"/></name></expr></incr>)<pos:position pos:line="94" pos:column="44"/></control>
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="95" pos:column="13">hostname_format<pos:position pos:line="95" pos:column="28"/></name><index pos:line="95" pos:column="28">[<expr><name pos:line="95" pos:column="29">i<pos:position pos:line="95" pos:column="30"/></name></expr>]<pos:position pos:line="95" pos:column="31"/></index></name> <operator pos:line="95" pos:column="32">=<pos:position pos:line="95" pos:column="33"/></operator> <name pos:line="95" pos:column="34">hf_none<pos:position pos:line="95" pos:column="41"/></name></expr>;<pos:position pos:line="95" pos:column="42"/></expr_stmt></block></for>

        <return pos:line="97" pos:column="9">return <expr><literal type="number" pos:line="97" pos:column="16">0<pos:position pos:line="97" pos:column="17"/></literal></expr>;<pos:position pos:line="97" pos:column="18"/></return>
    }<pos:position pos:line="98" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="100" pos:column="5">/* Unrecognised option. */</comment>
    <return pos:line="101" pos:column="5">return <expr><operator pos:line="101" pos:column="12">-<pos:position pos:line="101" pos:column="13"/></operator><literal type="number" pos:line="101" pos:column="13">1<pos:position pos:line="101" pos:column="14"/></literal></expr>;<pos:position pos:line="101" pos:column="15"/></return>
}<pos:position pos:line="102" pos:column="2"/></block></function></unit>

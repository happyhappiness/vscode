<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1634_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cs_read<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">void<pos:position pos:line="1" pos:column="24"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="25"/></parameter_list> <block pos:line="1" pos:column="26">{
<cpp:if pos:line="2" pos:column="1">#<cpp:directive pos:line="2" pos:column="2">if<pos:position pos:line="2" pos:column="4"/></cpp:directive> <expr><name pos:line="2" pos:column="5">HAVE_SYSCTLBYNAME<pos:position pos:line="2" pos:column="22"/></name></expr></cpp:if>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">value<pos:position pos:line="3" pos:column="12"/></name> <init pos:line="3" pos:column="13">= <expr><literal type="number" pos:line="3" pos:column="15">0<pos:position pos:line="3" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">value_len<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><sizeof pos:line="4" pos:column="22">sizeof<argument_list pos:line="4" pos:column="28">(<argument><expr><name pos:line="4" pos:column="29">value<pos:position pos:line="4" pos:column="34"/></name></expr></argument>)<pos:position pos:line="4" pos:column="35"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">status<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">status<pos:position pos:line="7" pos:column="9"/></name> <operator pos:line="7" pos:column="10">=<pos:position pos:line="7" pos:column="11"/></operator> <call><name pos:line="7" pos:column="12">sysctlbyname<pos:position pos:line="7" pos:column="24"/></name><argument_list pos:line="7" pos:column="24">(<argument><expr><literal type="string" pos:line="7" pos:column="25">"vm.stats.sys.v_swtch"<pos:position pos:line="7" pos:column="47"/></literal></expr></argument>, <argument><expr><operator pos:line="7" pos:column="49">&amp;<pos:position pos:line="7" pos:column="54"/></operator><name pos:line="7" pos:column="50">value<pos:position pos:line="7" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="57">&amp;<pos:position pos:line="7" pos:column="62"/></operator><name pos:line="7" pos:column="58">value_len<pos:position pos:line="7" pos:column="67"/></name></expr></argument>,
                        <comment type="block" pos:line="8" pos:column="25">/* new pointer = */</comment> <argument><expr><name pos:line="8" pos:column="45">NULL<pos:position pos:line="8" pos:column="49"/></name></expr></argument>, <comment type="block" pos:line="8" pos:column="51">/* new length = */</comment> <argument><expr><literal type="number" pos:line="8" pos:column="70">0<pos:position pos:line="8" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="73"/></expr_stmt>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">status<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">!=<pos:position pos:line="9" pos:column="16"/></operator> <literal type="number" pos:line="9" pos:column="17">0<pos:position pos:line="9" pos:column="18"/></literal></expr>)<pos:position pos:line="9" pos:column="19"/></condition><then pos:line="9" pos:column="19"> <block pos:line="9" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">ERROR<pos:position pos:line="10" pos:column="10"/></name><argument_list pos:line="10" pos:column="10">(<argument><expr><literal type="string" pos:line="10" pos:column="11">"contextswitch plugin: sysctlbyname "<pos:position pos:line="10" pos:column="48"/></literal>
          <literal type="string" pos:line="11" pos:column="11">"(vm.stats.sys.v_swtch) failed"<pos:position pos:line="11" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="44"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">(<pos:position pos:line="12" pos:column="13"/></operator><operator pos:line="12" pos:column="13">-<pos:position pos:line="12" pos:column="14"/></operator><literal type="number" pos:line="12" pos:column="14">1<pos:position pos:line="12" pos:column="15"/></literal><operator pos:line="12" pos:column="15">)<pos:position pos:line="12" pos:column="16"/></operator></expr>;<pos:position pos:line="12" pos:column="17"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">cs_submit<pos:position pos:line="15" pos:column="12"/></name><argument_list pos:line="15" pos:column="12">(<argument><expr><name pos:line="15" pos:column="13">value<pos:position pos:line="15" pos:column="18"/></name></expr></argument>)<pos:position pos:line="15" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="20"/></expr_stmt>
<comment type="block" pos:line="16" pos:column="1">/* #endif HAVE_SYSCTLBYNAME */</comment>

<cpp:elif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">elif<pos:position pos:line="18" pos:column="6"/></cpp:directive> <expr><name pos:line="18" pos:column="7">KERNEL_LINUX<pos:position pos:line="18" pos:column="19"/></name></expr></cpp:elif>
  <decl_stmt><decl><type><name pos:line="19" pos:column="3">FILE<pos:position pos:line="19" pos:column="7"/></name> <modifier pos:line="19" pos:column="8">*<pos:position pos:line="19" pos:column="9"/></modifier></type><name pos:line="19" pos:column="9">fh<pos:position pos:line="19" pos:column="11"/></name></decl>;<pos:position pos:line="19" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="20" pos:column="3">char<pos:position pos:line="20" pos:column="7"/></name></type> <name><name pos:line="20" pos:column="8">buffer<pos:position pos:line="20" pos:column="14"/></name><index pos:line="20" pos:column="14">[<expr><literal type="number" pos:line="20" pos:column="15">64<pos:position pos:line="20" pos:column="17"/></literal></expr>]<pos:position pos:line="20" pos:column="18"/></index></name></decl>;<pos:position pos:line="20" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="21" pos:column="3">int<pos:position pos:line="21" pos:column="6"/></name></type> <name pos:line="21" pos:column="7">numfields<pos:position pos:line="21" pos:column="16"/></name></decl>;<pos:position pos:line="21" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="22" pos:column="3">char<pos:position pos:line="22" pos:column="7"/></name> <modifier pos:line="22" pos:column="8">*<pos:position pos:line="22" pos:column="9"/></modifier></type><name><name pos:line="22" pos:column="9">fields<pos:position pos:line="22" pos:column="15"/></name><index pos:line="22" pos:column="15">[<expr><literal type="number" pos:line="22" pos:column="16">3<pos:position pos:line="22" pos:column="17"/></literal></expr>]<pos:position pos:line="22" pos:column="18"/></index></name></decl>;<pos:position pos:line="22" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="23" pos:column="3">derive_t<pos:position pos:line="23" pos:column="11"/></name></type> <name pos:line="23" pos:column="12">result<pos:position pos:line="23" pos:column="18"/></name> <init pos:line="23" pos:column="19">= <expr><literal type="number" pos:line="23" pos:column="21">0<pos:position pos:line="23" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="23" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="24" pos:column="3">int<pos:position pos:line="24" pos:column="6"/></name></type> <name pos:line="24" pos:column="7">status<pos:position pos:line="24" pos:column="13"/></name> <init pos:line="24" pos:column="14">= <expr><operator pos:line="24" pos:column="16">-<pos:position pos:line="24" pos:column="17"/></operator><literal type="number" pos:line="24" pos:column="17">2<pos:position pos:line="24" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="24" pos:column="19"/></decl_stmt>

  <expr_stmt><expr><name pos:line="26" pos:column="3">fh<pos:position pos:line="26" pos:column="5"/></name> <operator pos:line="26" pos:column="6">=<pos:position pos:line="26" pos:column="7"/></operator> <call><name pos:line="26" pos:column="8">fopen<pos:position pos:line="26" pos:column="13"/></name><argument_list pos:line="26" pos:column="13">(<argument><expr><literal type="string" pos:line="26" pos:column="14">"/proc/stat"<pos:position pos:line="26" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="28">"r"<pos:position pos:line="26" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="33"/></expr_stmt>
  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><name pos:line="27" pos:column="7">fh<pos:position pos:line="27" pos:column="9"/></name> <operator pos:line="27" pos:column="10">==<pos:position pos:line="27" pos:column="12"/></operator> <name pos:line="27" pos:column="13">NULL<pos:position pos:line="27" pos:column="17"/></name></expr>)<pos:position pos:line="27" pos:column="18"/></condition><then pos:line="27" pos:column="18"> <block pos:line="27" pos:column="19">{
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">ERROR<pos:position pos:line="28" pos:column="10"/></name><argument_list pos:line="28" pos:column="10">(<argument><expr><literal type="string" pos:line="28" pos:column="11">"contextswitch plugin: unable to open /proc/stat: %s"<pos:position pos:line="28" pos:column="64"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="29" pos:column="11">sstrerror<pos:position pos:line="29" pos:column="20"/></name><argument_list pos:line="29" pos:column="20">(<argument><expr><name pos:line="29" pos:column="21">errno<pos:position pos:line="29" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="28">buffer<pos:position pos:line="29" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="36">sizeof<argument_list pos:line="29" pos:column="42">(<argument><expr><name pos:line="29" pos:column="43">buffer<pos:position pos:line="29" pos:column="49"/></name></expr></argument>)<pos:position pos:line="29" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="53"/></expr_stmt>
    <return pos:line="30" pos:column="5">return <expr><operator pos:line="30" pos:column="12">(<pos:position pos:line="30" pos:column="13"/></operator><operator pos:line="30" pos:column="13">-<pos:position pos:line="30" pos:column="14"/></operator><literal type="number" pos:line="30" pos:column="14">1<pos:position pos:line="30" pos:column="15"/></literal><operator pos:line="30" pos:column="15">)<pos:position pos:line="30" pos:column="16"/></operator></expr>;<pos:position pos:line="30" pos:column="17"/></return>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>

  <while pos:line="33" pos:column="3">while <condition pos:line="33" pos:column="9">(<expr><call><name pos:line="33" pos:column="10">fgets<pos:position pos:line="33" pos:column="15"/></name><argument_list pos:line="33" pos:column="15">(<argument><expr><name pos:line="33" pos:column="16">buffer<pos:position pos:line="33" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="24">sizeof<argument_list pos:line="33" pos:column="30">(<argument><expr><name pos:line="33" pos:column="31">buffer<pos:position pos:line="33" pos:column="37"/></name></expr></argument>)<pos:position pos:line="33" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="33" pos:column="40">fh<pos:position pos:line="33" pos:column="42"/></name></expr></argument>)<pos:position pos:line="33" pos:column="43"/></argument_list></call> <operator pos:line="33" pos:column="44">!=<pos:position pos:line="33" pos:column="46"/></operator> <name pos:line="33" pos:column="47">NULL<pos:position pos:line="33" pos:column="51"/></name></expr>)<pos:position pos:line="33" pos:column="52"/></condition> <block pos:line="33" pos:column="53">{
    <decl_stmt><decl><type><name pos:line="34" pos:column="5">char<pos:position pos:line="34" pos:column="9"/></name> <modifier pos:line="34" pos:column="10">*<pos:position pos:line="34" pos:column="11"/></modifier></type><name pos:line="34" pos:column="11">endptr<pos:position pos:line="34" pos:column="17"/></name></decl>;<pos:position pos:line="34" pos:column="18"/></decl_stmt>

    <expr_stmt><expr><name pos:line="36" pos:column="5">numfields<pos:position pos:line="36" pos:column="14"/></name> <operator pos:line="36" pos:column="15">=<pos:position pos:line="36" pos:column="16"/></operator> <call><name pos:line="36" pos:column="17">strsplit<pos:position pos:line="36" pos:column="25"/></name><argument_list pos:line="36" pos:column="25">(<argument><expr><name pos:line="36" pos:column="26">buffer<pos:position pos:line="36" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="34">fields<pos:position pos:line="36" pos:column="40"/></name></expr></argument>, <argument><expr><call><name pos:line="36" pos:column="42">STATIC_ARRAY_SIZE<pos:position pos:line="36" pos:column="59"/></name><argument_list pos:line="36" pos:column="59">(<argument><expr><name pos:line="36" pos:column="60">fields<pos:position pos:line="36" pos:column="66"/></name></expr></argument>)<pos:position pos:line="36" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="69"/></expr_stmt>
    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name pos:line="37" pos:column="9">numfields<pos:position pos:line="37" pos:column="18"/></name> <operator pos:line="37" pos:column="19">!=<pos:position pos:line="37" pos:column="21"/></operator> <literal type="number" pos:line="37" pos:column="22">2<pos:position pos:line="37" pos:column="23"/></literal></expr>)<pos:position pos:line="37" pos:column="24"/></condition><then pos:line="37" pos:column="24">
      <block type="pseudo"><continue pos:line="38" pos:column="7">continue;<pos:position pos:line="38" pos:column="16"/></continue></block></then></if>

    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><call><name pos:line="40" pos:column="9">strcmp<pos:position pos:line="40" pos:column="15"/></name><argument_list pos:line="40" pos:column="15">(<argument><expr><literal type="string" pos:line="40" pos:column="16">"ctxt"<pos:position pos:line="40" pos:column="22"/></literal></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="24">fields<pos:position pos:line="40" pos:column="30"/></name><index pos:line="40" pos:column="30">[<expr><literal type="number" pos:line="40" pos:column="31">0<pos:position pos:line="40" pos:column="32"/></literal></expr>]<pos:position pos:line="40" pos:column="33"/></index></name></expr></argument>)<pos:position pos:line="40" pos:column="34"/></argument_list></call> <operator pos:line="40" pos:column="35">!=<pos:position pos:line="40" pos:column="37"/></operator> <literal type="number" pos:line="40" pos:column="38">0<pos:position pos:line="40" pos:column="39"/></literal></expr>)<pos:position pos:line="40" pos:column="40"/></condition><then pos:line="40" pos:column="40">
      <block type="pseudo"><continue pos:line="41" pos:column="7">continue;<pos:position pos:line="41" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="43" pos:column="5">errno<pos:position pos:line="43" pos:column="10"/></name> <operator pos:line="43" pos:column="11">=<pos:position pos:line="43" pos:column="12"/></operator> <literal type="number" pos:line="43" pos:column="13">0<pos:position pos:line="43" pos:column="14"/></literal></expr>;<pos:position pos:line="43" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name pos:line="44" pos:column="5">endptr<pos:position pos:line="44" pos:column="11"/></name> <operator pos:line="44" pos:column="12">=<pos:position pos:line="44" pos:column="13"/></operator> <name pos:line="44" pos:column="14">NULL<pos:position pos:line="44" pos:column="18"/></name></expr>;<pos:position pos:line="44" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="45" pos:column="5">result<pos:position pos:line="45" pos:column="11"/></name> <operator pos:line="45" pos:column="12">=<pos:position pos:line="45" pos:column="13"/></operator> <operator pos:line="45" pos:column="14">(<pos:position pos:line="45" pos:column="15"/></operator><name pos:line="45" pos:column="15">derive_t<pos:position pos:line="45" pos:column="23"/></name><operator pos:line="45" pos:column="23">)<pos:position pos:line="45" pos:column="24"/></operator><call><name pos:line="45" pos:column="24">strtoll<pos:position pos:line="45" pos:column="31"/></name><argument_list pos:line="45" pos:column="31">(<argument><expr><name><name pos:line="45" pos:column="32">fields<pos:position pos:line="45" pos:column="38"/></name><index pos:line="45" pos:column="38">[<expr><literal type="number" pos:line="45" pos:column="39">1<pos:position pos:line="45" pos:column="40"/></literal></expr>]<pos:position pos:line="45" pos:column="41"/></index></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="43">&amp;<pos:position pos:line="45" pos:column="48"/></operator><name pos:line="45" pos:column="44">endptr<pos:position pos:line="45" pos:column="50"/></name></expr></argument>, <comment type="block" pos:line="45" pos:column="52">/* base = */</comment> <argument><expr><literal type="number" pos:line="45" pos:column="65">10<pos:position pos:line="45" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="69"/></expr_stmt>
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><operator pos:line="46" pos:column="9">(<pos:position pos:line="46" pos:column="10"/></operator><name pos:line="46" pos:column="10">endptr<pos:position pos:line="46" pos:column="16"/></name> <operator pos:line="46" pos:column="17">==<pos:position pos:line="46" pos:column="19"/></operator> <name><name pos:line="46" pos:column="20">fields<pos:position pos:line="46" pos:column="26"/></name><index pos:line="46" pos:column="26">[<expr><literal type="number" pos:line="46" pos:column="27">1<pos:position pos:line="46" pos:column="28"/></literal></expr>]<pos:position pos:line="46" pos:column="29"/></index></name><operator pos:line="46" pos:column="29">)<pos:position pos:line="46" pos:column="30"/></operator> <operator pos:line="46" pos:column="31">||<pos:position pos:line="46" pos:column="33"/></operator> <operator pos:line="46" pos:column="34">(<pos:position pos:line="46" pos:column="35"/></operator><name pos:line="46" pos:column="35">errno<pos:position pos:line="46" pos:column="40"/></name> <operator pos:line="46" pos:column="41">!=<pos:position pos:line="46" pos:column="43"/></operator> <literal type="number" pos:line="46" pos:column="44">0<pos:position pos:line="46" pos:column="45"/></literal><operator pos:line="46" pos:column="45">)<pos:position pos:line="46" pos:column="46"/></operator></expr>)<pos:position pos:line="46" pos:column="47"/></condition><then pos:line="46" pos:column="47"> <block pos:line="46" pos:column="48">{
      <expr_stmt><expr><call><name pos:line="47" pos:column="7">ERROR<pos:position pos:line="47" pos:column="12"/></name><argument_list pos:line="47" pos:column="12">(<argument><expr><literal type="string" pos:line="47" pos:column="13">"contextswitch plugin: Cannot parse ctxt value: %s"<pos:position pos:line="47" pos:column="64"/></literal></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="66">fields<pos:position pos:line="47" pos:column="72"/></name><index pos:line="47" pos:column="72">[<expr><literal type="number" pos:line="47" pos:column="73">1<pos:position pos:line="47" pos:column="74"/></literal></expr>]<pos:position pos:line="47" pos:column="75"/></index></name></expr></argument>)<pos:position pos:line="47" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="77"/></expr_stmt>
      <expr_stmt><expr><name pos:line="48" pos:column="7">status<pos:position pos:line="48" pos:column="13"/></name> <operator pos:line="48" pos:column="14">=<pos:position pos:line="48" pos:column="15"/></operator> <operator pos:line="48" pos:column="16">-<pos:position pos:line="48" pos:column="17"/></operator><literal type="number" pos:line="48" pos:column="17">1<pos:position pos:line="48" pos:column="18"/></literal></expr>;<pos:position pos:line="48" pos:column="19"/></expr_stmt>
      <break pos:line="49" pos:column="7">break;<pos:position pos:line="49" pos:column="13"/></break>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="52" pos:column="5">cs_submit<pos:position pos:line="52" pos:column="14"/></name><argument_list pos:line="52" pos:column="14">(<argument><expr><name pos:line="52" pos:column="15">result<pos:position pos:line="52" pos:column="21"/></name></expr></argument>)<pos:position pos:line="52" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="53" pos:column="5">status<pos:position pos:line="53" pos:column="11"/></name> <operator pos:line="53" pos:column="12">=<pos:position pos:line="53" pos:column="13"/></operator> <literal type="number" pos:line="53" pos:column="14">0<pos:position pos:line="53" pos:column="15"/></literal></expr>;<pos:position pos:line="53" pos:column="16"/></expr_stmt>
    <break pos:line="54" pos:column="5">break;<pos:position pos:line="54" pos:column="11"/></break>
  }<pos:position pos:line="55" pos:column="4"/></block></while>
  <expr_stmt><expr><call><name pos:line="56" pos:column="3">fclose<pos:position pos:line="56" pos:column="9"/></name><argument_list pos:line="56" pos:column="9">(<argument><expr><name pos:line="56" pos:column="10">fh<pos:position pos:line="56" pos:column="12"/></name></expr></argument>)<pos:position pos:line="56" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="14"/></expr_stmt>

  <if pos:line="58" pos:column="3">if <condition pos:line="58" pos:column="6">(<expr><name pos:line="58" pos:column="7">status<pos:position pos:line="58" pos:column="13"/></name> <operator pos:line="58" pos:column="14">==<pos:position pos:line="58" pos:column="16"/></operator> <operator pos:line="58" pos:column="17">-<pos:position pos:line="58" pos:column="18"/></operator><literal type="number" pos:line="58" pos:column="18">2<pos:position pos:line="58" pos:column="19"/></literal></expr>)<pos:position pos:line="58" pos:column="20"/></condition><then pos:line="58" pos:column="20">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="59" pos:column="5">ERROR<pos:position pos:line="59" pos:column="10"/></name><argument_list pos:line="59" pos:column="10">(<argument><expr><literal type="string" pos:line="59" pos:column="11">"contextswitch plugin: Unable to find context switch value."<pos:position pos:line="59" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="73"/></expr_stmt></block></then></if>
<comment type="block" pos:line="60" pos:column="1">/* #endif  KERNEL_LINUX */</comment>

<cpp:elif pos:line="62" pos:column="1">#<cpp:directive pos:line="62" pos:column="2">elif<pos:position pos:line="62" pos:column="6"/></cpp:directive> <expr><name pos:line="62" pos:column="7">HAVE_PERFSTAT<pos:position pos:line="62" pos:column="20"/></name></expr></cpp:elif>
  <decl_stmt><decl><type><name pos:line="63" pos:column="3">int<pos:position pos:line="63" pos:column="6"/></name></type> <name pos:line="63" pos:column="7">status<pos:position pos:line="63" pos:column="13"/></name> <init pos:line="63" pos:column="14">= <expr><literal type="number" pos:line="63" pos:column="16">0<pos:position pos:line="63" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="63" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="64" pos:column="3">perfstat_cpu_total_t<pos:position pos:line="64" pos:column="23"/></name></type> <name pos:line="64" pos:column="24">perfcputotal<pos:position pos:line="64" pos:column="36"/></name></decl>;<pos:position pos:line="64" pos:column="37"/></decl_stmt>

  <expr_stmt><expr><name pos:line="66" pos:column="3">status<pos:position pos:line="66" pos:column="9"/></name> <operator pos:line="66" pos:column="10">=<pos:position pos:line="66" pos:column="11"/></operator>
      <call><name pos:line="67" pos:column="7">perfstat_cpu_total<pos:position pos:line="67" pos:column="25"/></name><argument_list pos:line="67" pos:column="25">(<argument><expr><name pos:line="67" pos:column="26">NULL<pos:position pos:line="67" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="67" pos:column="32">&amp;<pos:position pos:line="67" pos:column="37"/></operator><name pos:line="67" pos:column="33">perfcputotal<pos:position pos:line="67" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="67" pos:column="47">sizeof<argument_list pos:line="67" pos:column="53">(<argument><expr><name pos:line="67" pos:column="54">perfstat_cpu_total_t<pos:position pos:line="67" pos:column="74"/></name></expr></argument>)<pos:position pos:line="67" pos:column="75"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="67" pos:column="77">1<pos:position pos:line="67" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="80"/></expr_stmt>
  <if pos:line="68" pos:column="3">if <condition pos:line="68" pos:column="6">(<expr><name pos:line="68" pos:column="7">status<pos:position pos:line="68" pos:column="13"/></name> <operator pos:line="68" pos:column="14">&lt;<pos:position pos:line="68" pos:column="18"/></operator> <literal type="number" pos:line="68" pos:column="16">0<pos:position pos:line="68" pos:column="17"/></literal></expr>)<pos:position pos:line="68" pos:column="18"/></condition><then pos:line="68" pos:column="18"> <block pos:line="68" pos:column="19">{
    <decl_stmt><decl><type><name pos:line="69" pos:column="5">char<pos:position pos:line="69" pos:column="9"/></name></type> <name><name pos:line="69" pos:column="10">errbuf<pos:position pos:line="69" pos:column="16"/></name><index pos:line="69" pos:column="16">[<expr><literal type="number" pos:line="69" pos:column="17">1024<pos:position pos:line="69" pos:column="21"/></literal></expr>]<pos:position pos:line="69" pos:column="22"/></index></name></decl>;<pos:position pos:line="69" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="70" pos:column="5">ERROR<pos:position pos:line="70" pos:column="10"/></name><argument_list pos:line="70" pos:column="10">(<argument><expr><literal type="string" pos:line="70" pos:column="11">"contextswitch plugin: perfstat_cpu_total: %s"<pos:position pos:line="70" pos:column="57"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="71" pos:column="11">sstrerror<pos:position pos:line="71" pos:column="20"/></name><argument_list pos:line="71" pos:column="20">(<argument><expr><name pos:line="71" pos:column="21">errno<pos:position pos:line="71" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="28">errbuf<pos:position pos:line="71" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="71" pos:column="36">sizeof<argument_list pos:line="71" pos:column="42">(<argument><expr><name pos:line="71" pos:column="43">errbuf<pos:position pos:line="71" pos:column="49"/></name></expr></argument>)<pos:position pos:line="71" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="71" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="71" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="53"/></expr_stmt>
    <return pos:line="72" pos:column="5">return <expr><operator pos:line="72" pos:column="12">(<pos:position pos:line="72" pos:column="13"/></operator><operator pos:line="72" pos:column="13">-<pos:position pos:line="72" pos:column="14"/></operator><literal type="number" pos:line="72" pos:column="14">1<pos:position pos:line="72" pos:column="15"/></literal><operator pos:line="72" pos:column="15">)<pos:position pos:line="72" pos:column="16"/></operator></expr>;<pos:position pos:line="72" pos:column="17"/></return>
  }<pos:position pos:line="73" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="75" pos:column="3">cs_submit<pos:position pos:line="75" pos:column="12"/></name><argument_list pos:line="75" pos:column="12">(<argument><expr><name><name pos:line="75" pos:column="13">perfcputotal<pos:position pos:line="75" pos:column="25"/></name><operator pos:line="75" pos:column="25">.<pos:position pos:line="75" pos:column="26"/></operator><name pos:line="75" pos:column="26">pswitch<pos:position pos:line="75" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name pos:line="76" pos:column="3">status<pos:position pos:line="76" pos:column="9"/></name> <operator pos:line="76" pos:column="10">=<pos:position pos:line="76" pos:column="11"/></operator> <literal type="number" pos:line="76" pos:column="12">0<pos:position pos:line="76" pos:column="13"/></literal></expr>;<pos:position pos:line="76" pos:column="14"/></expr_stmt>
<cpp:endif pos:line="77" pos:column="1">#<cpp:directive pos:line="77" pos:column="2">endif<pos:position pos:line="77" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="77" pos:column="8">/* defined(HAVE_PERFSTAT) */</comment>

  <return pos:line="79" pos:column="3">return <expr><name pos:line="79" pos:column="10">status<pos:position pos:line="79" pos:column="16"/></name></expr>;<pos:position pos:line="79" pos:column="17"/></return>
}<pos:position pos:line="80" pos:column="2"/></block></function></unit>

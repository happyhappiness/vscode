<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2487_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dispatch_block<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">oconfig_item_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">ci<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list> <block pos:line="1" pos:column="47">{
  <if pos:line="2" pos:column="3">if <condition pos:line="2" pos:column="6">(<expr><call><name pos:line="2" pos:column="7">strcasecmp<pos:position pos:line="2" pos:column="17"/></name><argument_list pos:line="2" pos:column="17">(<argument><expr><name><name pos:line="2" pos:column="18">ci<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">-&gt;<pos:position pos:line="2" pos:column="25"/></operator><name pos:line="2" pos:column="22">key<pos:position pos:line="2" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="2" pos:column="27">"LoadPlugin"<pos:position pos:line="2" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="2" pos:column="40"/></argument_list></call> <operator pos:line="2" pos:column="41">==<pos:position pos:line="2" pos:column="43"/></operator> <literal type="number" pos:line="2" pos:column="44">0<pos:position pos:line="2" pos:column="45"/></literal></expr>)<pos:position pos:line="2" pos:column="46"/></condition><then pos:line="2" pos:column="46">
    <block type="pseudo"><return pos:line="3" pos:column="5">return <expr><operator pos:line="3" pos:column="12">(<pos:position pos:line="3" pos:column="13"/></operator><call><name pos:line="3" pos:column="13">dispatch_loadplugin<pos:position pos:line="3" pos:column="32"/></name><argument_list pos:line="3" pos:column="32">(<argument><expr><name pos:line="3" pos:column="33">ci<pos:position pos:line="3" pos:column="35"/></name></expr></argument>)<pos:position pos:line="3" pos:column="36"/></argument_list></call><operator pos:line="3" pos:column="36">)<pos:position pos:line="3" pos:column="37"/></operator></expr>;<pos:position pos:line="3" pos:column="38"/></return></block></then>
  <elseif pos:line="4" pos:column="3">else <if pos:line="4" pos:column="8">if <condition pos:line="4" pos:column="11">(<expr><call><name pos:line="4" pos:column="12">strcasecmp<pos:position pos:line="4" pos:column="22"/></name><argument_list pos:line="4" pos:column="22">(<argument><expr><name><name pos:line="4" pos:column="23">ci<pos:position pos:line="4" pos:column="25"/></name><operator pos:line="4" pos:column="25">-&gt;<pos:position pos:line="4" pos:column="30"/></operator><name pos:line="4" pos:column="27">key<pos:position pos:line="4" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="32">"Plugin"<pos:position pos:line="4" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="41"/></argument_list></call> <operator pos:line="4" pos:column="42">==<pos:position pos:line="4" pos:column="44"/></operator> <literal type="number" pos:line="4" pos:column="45">0<pos:position pos:line="4" pos:column="46"/></literal></expr>)<pos:position pos:line="4" pos:column="47"/></condition><then pos:line="4" pos:column="47">
    <block type="pseudo"><return pos:line="5" pos:column="5">return <expr><operator pos:line="5" pos:column="12">(<pos:position pos:line="5" pos:column="13"/></operator><call><name pos:line="5" pos:column="13">dispatch_block_plugin<pos:position pos:line="5" pos:column="34"/></name><argument_list pos:line="5" pos:column="34">(<argument><expr><name pos:line="5" pos:column="35">ci<pos:position pos:line="5" pos:column="37"/></name></expr></argument>)<pos:position pos:line="5" pos:column="38"/></argument_list></call><operator pos:line="5" pos:column="38">)<pos:position pos:line="5" pos:column="39"/></operator></expr>;<pos:position pos:line="5" pos:column="40"/></return></block></then></if></elseif>
  <elseif pos:line="6" pos:column="3">else <if pos:line="6" pos:column="8">if <condition pos:line="6" pos:column="11">(<expr><call><name pos:line="6" pos:column="12">strcasecmp<pos:position pos:line="6" pos:column="22"/></name><argument_list pos:line="6" pos:column="22">(<argument><expr><name><name pos:line="6" pos:column="23">ci<pos:position pos:line="6" pos:column="25"/></name><operator pos:line="6" pos:column="25">-&gt;<pos:position pos:line="6" pos:column="30"/></operator><name pos:line="6" pos:column="27">key<pos:position pos:line="6" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="32">"Chain"<pos:position pos:line="6" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="40"/></argument_list></call> <operator pos:line="6" pos:column="41">==<pos:position pos:line="6" pos:column="43"/></operator> <literal type="number" pos:line="6" pos:column="44">0<pos:position pos:line="6" pos:column="45"/></literal></expr>)<pos:position pos:line="6" pos:column="46"/></condition><then pos:line="6" pos:column="46">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><operator pos:line="7" pos:column="12">(<pos:position pos:line="7" pos:column="13"/></operator><call><name pos:line="7" pos:column="13">fc_configure<pos:position pos:line="7" pos:column="25"/></name><argument_list pos:line="7" pos:column="25">(<argument><expr><name pos:line="7" pos:column="26">ci<pos:position pos:line="7" pos:column="28"/></name></expr></argument>)<pos:position pos:line="7" pos:column="29"/></argument_list></call><operator pos:line="7" pos:column="29">)<pos:position pos:line="7" pos:column="30"/></operator></expr>;<pos:position pos:line="7" pos:column="31"/></return></block></then></if></elseif></if>

  <return pos:line="9" pos:column="3">return <expr><operator pos:line="9" pos:column="10">(<pos:position pos:line="9" pos:column="11"/></operator><literal type="number" pos:line="9" pos:column="11">0<pos:position pos:line="9" pos:column="12"/></literal><operator pos:line="9" pos:column="12">)<pos:position pos:line="9" pos:column="13"/></operator></expr>;<pos:position pos:line="9" pos:column="14"/></return>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

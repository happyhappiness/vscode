<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_336_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">c_avl_tree_t<pos:position pos:line="1" pos:column="20"/></name> <modifier pos:line="1" pos:column="21">*<pos:position pos:line="1" pos:column="22"/></modifier></type>
<name pos:line="2" pos:column="1">zone_scandir<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">DIR<pos:position pos:line="2" pos:column="17"/></name> <modifier pos:line="2" pos:column="18">*<pos:position pos:line="2" pos:column="19"/></modifier></type><name pos:line="2" pos:column="19">procdir<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="27"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">pid_t<pos:position pos:line="4" pos:column="14"/></name></type>         <name pos:line="4" pos:column="23">pid<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">dirent_t<pos:position pos:line="5" pos:column="17"/></name>     <modifier pos:line="5" pos:column="22">*<pos:position pos:line="5" pos:column="23"/></modifier></type><name pos:line="5" pos:column="23">direntp<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">psinfo_t<pos:position pos:line="6" pos:column="17"/></name></type>      <name pos:line="6" pos:column="23">psinfo<pos:position pos:line="6" pos:column="29"/></name></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">c_avl_tree_t<pos:position pos:line="7" pos:column="21"/></name> <modifier pos:line="7" pos:column="22">*<pos:position pos:line="7" pos:column="23"/></modifier></type><name pos:line="7" pos:column="23">tree<pos:position pos:line="7" pos:column="27"/></name></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">zone_stats_t<pos:position pos:line="8" pos:column="21"/></name> <modifier pos:line="8" pos:column="22">*<pos:position pos:line="8" pos:column="23"/></modifier></type><name pos:line="8" pos:column="23">stats<pos:position pos:line="8" pos:column="28"/></name></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><operator pos:line="10" pos:column="14">(<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">tree<pos:position pos:line="10" pos:column="19"/></name><operator pos:line="10" pos:column="19">=<pos:position pos:line="10" pos:column="20"/></operator><call><name pos:line="10" pos:column="20">c_avl_create<pos:position pos:line="10" pos:column="32"/></name><argument_list pos:line="10" pos:column="32">(<argument><expr><name pos:line="10" pos:column="33">zone_compare<pos:position pos:line="10" pos:column="45"/></name></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></call><operator pos:line="10" pos:column="46">)<pos:position pos:line="10" pos:column="47"/></operator></expr>)<pos:position pos:line="10" pos:column="48"/></condition><then pos:line="10" pos:column="48"> <block pos:line="10" pos:column="49">{
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">WARNING<pos:position pos:line="11" pos:column="24"/></name><argument_list pos:line="11" pos:column="24">(<argument><expr><literal type="string" pos:line="11" pos:column="25">"zone plugin: Failed to create tree"<pos:position pos:line="11" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="63"/></expr_stmt>
		<return pos:line="12" pos:column="17">return<expr><operator pos:line="12" pos:column="23">(<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="24">NULL<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">)<pos:position pos:line="12" pos:column="29"/></operator></expr>;<pos:position pos:line="12" pos:column="30"/></return>
	}<pos:position pos:line="13" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="15" pos:column="9">rewinddir<pos:position pos:line="15" pos:column="18"/></name><argument_list pos:line="15" pos:column="18">(<argument><expr><name pos:line="15" pos:column="19">procdir<pos:position pos:line="15" pos:column="26"/></name></expr></argument>)<pos:position pos:line="15" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="28"/></expr_stmt>
	<while pos:line="16" pos:column="9">while <condition pos:line="16" pos:column="15">(<expr><operator pos:line="16" pos:column="16">(<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="17">direntp<pos:position pos:line="16" pos:column="24"/></name> <operator pos:line="16" pos:column="25">=<pos:position pos:line="16" pos:column="26"/></operator> <call><name pos:line="16" pos:column="27">readdir<pos:position pos:line="16" pos:column="34"/></name><argument_list pos:line="16" pos:column="34">(<argument><expr><name pos:line="16" pos:column="35">procdir<pos:position pos:line="16" pos:column="42"/></name></expr></argument>)<pos:position pos:line="16" pos:column="43"/></argument_list></call><operator pos:line="16" pos:column="43">)<pos:position pos:line="16" pos:column="44"/></operator></expr>)<pos:position pos:line="16" pos:column="45"/></condition> <block pos:line="16" pos:column="46">{
		<decl_stmt><decl><type><name pos:line="17" pos:column="17">char<pos:position pos:line="17" pos:column="21"/></name> <specifier pos:line="17" pos:column="22">const<pos:position pos:line="17" pos:column="27"/></specifier> <modifier pos:line="17" pos:column="28">*<pos:position pos:line="17" pos:column="29"/></modifier></type><name pos:line="17" pos:column="29">pidstr<pos:position pos:line="17" pos:column="35"/></name> <init pos:line="17" pos:column="36">= <expr><name><name pos:line="17" pos:column="38">direntp<pos:position pos:line="17" pos:column="45"/></name><operator pos:line="17" pos:column="45">-&gt;<pos:position pos:line="17" pos:column="50"/></operator><name pos:line="17" pos:column="47">d_name<pos:position pos:line="17" pos:column="53"/></name></name></expr></init></decl>;<pos:position pos:line="17" pos:column="54"/></decl_stmt>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name><name pos:line="18" pos:column="21">pidstr<pos:position pos:line="18" pos:column="27"/></name><index pos:line="18" pos:column="27">[<expr><literal type="number" pos:line="18" pos:column="28">0<pos:position pos:line="18" pos:column="29"/></literal></expr>]<pos:position pos:line="18" pos:column="30"/></index></name> <operator pos:line="18" pos:column="31">==<pos:position pos:line="18" pos:column="33"/></operator> <literal type="char" pos:line="18" pos:column="34">'.'<pos:position pos:line="18" pos:column="37"/></literal></expr>)<pos:position pos:line="18" pos:column="38"/></condition><then pos:line="18" pos:column="38">	<comment type="block" pos:line="18" pos:column="41">/* skip "." and ".."  */</comment>
			<block type="pseudo"><continue pos:line="19" pos:column="25">continue;<pos:position pos:line="19" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="21" pos:column="17">pid<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">=<pos:position pos:line="21" pos:column="22"/></operator> <call><name pos:line="21" pos:column="23">atoi<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><name pos:line="21" pos:column="28">pidstr<pos:position pos:line="21" pos:column="34"/></name></expr></argument>)<pos:position pos:line="21" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="36"/></expr_stmt>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name pos:line="22" pos:column="21">pid<pos:position pos:line="22" pos:column="24"/></name> <operator pos:line="22" pos:column="25">==<pos:position pos:line="22" pos:column="27"/></operator> <literal type="number" pos:line="22" pos:column="28">0<pos:position pos:line="22" pos:column="29"/></literal> <operator pos:line="22" pos:column="30">||<pos:position pos:line="22" pos:column="32"/></operator> <name pos:line="22" pos:column="33">pid<pos:position pos:line="22" pos:column="36"/></name> <operator pos:line="22" pos:column="37">==<pos:position pos:line="22" pos:column="39"/></operator> <literal type="number" pos:line="22" pos:column="40">2<pos:position pos:line="22" pos:column="41"/></literal> <operator pos:line="22" pos:column="42">||<pos:position pos:line="22" pos:column="44"/></operator> <name pos:line="22" pos:column="45">pid<pos:position pos:line="22" pos:column="48"/></name> <operator pos:line="22" pos:column="49">==<pos:position pos:line="22" pos:column="51"/></operator> <literal type="number" pos:line="22" pos:column="52">3<pos:position pos:line="22" pos:column="53"/></literal></expr>)<pos:position pos:line="22" pos:column="54"/></condition><then pos:line="22" pos:column="54">
			<block type="pseudo"><continue pos:line="23" pos:column="25">continue;<pos:position pos:line="23" pos:column="34"/></continue></block></then></if>	<comment type="block" pos:line="23" pos:column="41">/* skip sched, pageout and fsflush */</comment>

		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><call><name pos:line="25" pos:column="21">zone_read_procfile<pos:position pos:line="25" pos:column="39"/></name><argument_list pos:line="25" pos:column="39">(<argument><expr><name pos:line="25" pos:column="40">pidstr<pos:position pos:line="25" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="48">"psinfo"<pos:position pos:line="25" pos:column="56"/></literal></expr></argument>, <argument><expr><operator pos:line="25" pos:column="58">&amp;<pos:position pos:line="25" pos:column="63"/></operator><name pos:line="25" pos:column="59">psinfo<pos:position pos:line="25" pos:column="65"/></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="67">sizeof<argument_list pos:line="25" pos:column="73">(<argument><expr><name pos:line="25" pos:column="74">psinfo_t<pos:position pos:line="25" pos:column="82"/></name></expr></argument>)<pos:position pos:line="25" pos:column="83"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="84"/></argument_list></call> <operator pos:line="25" pos:column="85">!=<pos:position pos:line="25" pos:column="87"/></operator> <literal type="number" pos:line="25" pos:column="88">0<pos:position pos:line="25" pos:column="89"/></literal></expr>)<pos:position pos:line="25" pos:column="90"/></condition><then pos:line="25" pos:column="90">
			<block type="pseudo"><continue pos:line="26" pos:column="25">continue;<pos:position pos:line="26" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="28" pos:column="17">stats<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">=<pos:position pos:line="28" pos:column="24"/></operator> <call><name pos:line="28" pos:column="25">zone_find_stats<pos:position pos:line="28" pos:column="40"/></name><argument_list pos:line="28" pos:column="40">(<argument><expr><name pos:line="28" pos:column="41">tree<pos:position pos:line="28" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="47">psinfo<pos:position pos:line="28" pos:column="53"/></name><operator pos:line="28" pos:column="53">.<pos:position pos:line="28" pos:column="54"/></operator><name pos:line="28" pos:column="54">pr_zoneid<pos:position pos:line="28" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="65"/></expr_stmt>
		<if pos:line="29" pos:column="17">if<condition pos:line="29" pos:column="19">( <expr><name pos:line="29" pos:column="21">stats<pos:position pos:line="29" pos:column="26"/></name></expr> )<pos:position pos:line="29" pos:column="28"/></condition><then pos:line="29" pos:column="28"> <block pos:line="29" pos:column="29">{
			<expr_stmt><expr><name><name pos:line="30" pos:column="25">stats<pos:position pos:line="30" pos:column="30"/></name><operator pos:line="30" pos:column="30">-&gt;<pos:position pos:line="30" pos:column="35"/></operator><name pos:line="30" pos:column="32">pctcpu<pos:position pos:line="30" pos:column="38"/></name></name> <operator pos:line="30" pos:column="39">+=<pos:position pos:line="30" pos:column="41"/></operator> <name><name pos:line="30" pos:column="42">psinfo<pos:position pos:line="30" pos:column="48"/></name><operator pos:line="30" pos:column="48">.<pos:position pos:line="30" pos:column="49"/></operator><name pos:line="30" pos:column="49">pr_pctcpu<pos:position pos:line="30" pos:column="58"/></name></name></expr>;<pos:position pos:line="30" pos:column="59"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="31" pos:column="25">stats<pos:position pos:line="31" pos:column="30"/></name><operator pos:line="31" pos:column="30">-&gt;<pos:position pos:line="31" pos:column="35"/></operator><name pos:line="31" pos:column="32">pctmem<pos:position pos:line="31" pos:column="38"/></name></name> <operator pos:line="31" pos:column="39">+=<pos:position pos:line="31" pos:column="41"/></operator> <name><name pos:line="31" pos:column="42">psinfo<pos:position pos:line="31" pos:column="48"/></name><operator pos:line="31" pos:column="48">.<pos:position pos:line="31" pos:column="49"/></operator><name pos:line="31" pos:column="49">pr_pctmem<pos:position pos:line="31" pos:column="58"/></name></name></expr>;<pos:position pos:line="31" pos:column="59"/></expr_stmt>
		}<pos:position pos:line="32" pos:column="18"/></block></then></if>
	}<pos:position pos:line="33" pos:column="10"/></block></while>
	<return pos:line="34" pos:column="9">return<expr><operator pos:line="34" pos:column="15">(<pos:position pos:line="34" pos:column="16"/></operator><name pos:line="34" pos:column="16">tree<pos:position pos:line="34" pos:column="20"/></name><operator pos:line="34" pos:column="20">)<pos:position pos:line="34" pos:column="21"/></operator></expr>;<pos:position pos:line="34" pos:column="22"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

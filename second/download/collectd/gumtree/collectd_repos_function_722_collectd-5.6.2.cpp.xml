<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_722_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cow_simple_read<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">void<pos:position pos:line="1" pos:column="32"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list> <block pos:line="1" pos:column="34">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">value_t<pos:position pos:line="2" pos:column="10"/></name></type> <name><name pos:line="2" pos:column="11">values<pos:position pos:line="2" pos:column="17"/></name><index pos:line="2" pos:column="17">[<expr><literal type="number" pos:line="2" pos:column="18">1<pos:position pos:line="2" pos:column="19"/></literal></expr>]<pos:position pos:line="2" pos:column="20"/></index></name></decl>;<pos:position pos:line="2" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">value_list_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">vl<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">VALUE_LIST_INIT<pos:position pos:line="3" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">buffer<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">buffer_size<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">status<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">endptr<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">direct_access_element_t<pos:position pos:line="8" pos:column="26"/></name> <modifier pos:line="8" pos:column="27">*<pos:position pos:line="8" pos:column="28"/></modifier></type><name pos:line="8" pos:column="28">traverse<pos:position pos:line="8" pos:column="36"/></name></decl>;<pos:position pos:line="8" pos:column="37"/></decl_stmt>

  <comment type="block" pos:line="10" pos:column="3">/* traverse list and check entries */</comment>
  <for pos:line="11" pos:column="3">for <control pos:line="11" pos:column="7">(<init><expr><name pos:line="11" pos:column="8">traverse<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">=<pos:position pos:line="11" pos:column="18"/></operator> <name pos:line="11" pos:column="19">direct_list<pos:position pos:line="11" pos:column="30"/></name></expr>;<pos:position pos:line="11" pos:column="31"/></init> <condition><expr><name pos:line="11" pos:column="32">traverse<pos:position pos:line="11" pos:column="40"/></name> <operator pos:line="11" pos:column="41">!=<pos:position pos:line="11" pos:column="43"/></operator> <name pos:line="11" pos:column="44">NULL<pos:position pos:line="11" pos:column="48"/></name></expr>;<pos:position pos:line="11" pos:column="49"/></condition> <incr><expr><name pos:line="11" pos:column="50">traverse<pos:position pos:line="11" pos:column="58"/></name> <operator pos:line="11" pos:column="59">=<pos:position pos:line="11" pos:column="60"/></operator> <name><name pos:line="11" pos:column="61">traverse<pos:position pos:line="11" pos:column="69"/></name><operator pos:line="11" pos:column="69">-&gt;<pos:position pos:line="11" pos:column="74"/></operator><name pos:line="11" pos:column="71">next<pos:position pos:line="11" pos:column="75"/></name></name></expr></incr>)<pos:position pos:line="11" pos:column="76"/></control> <block pos:line="11" pos:column="77">{
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">vl<pos:position pos:line="12" pos:column="7"/></name><operator pos:line="12" pos:column="7">.<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">values<pos:position pos:line="12" pos:column="14"/></name></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <name pos:line="12" pos:column="17">values<pos:position pos:line="12" pos:column="23"/></name></expr>;<pos:position pos:line="12" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">vl<pos:position pos:line="13" pos:column="7"/></name><operator pos:line="13" pos:column="7">.<pos:position pos:line="13" pos:column="8"/></operator><name pos:line="13" pos:column="8">values_len<pos:position pos:line="13" pos:column="18"/></name></name> <operator pos:line="13" pos:column="19">=<pos:position pos:line="13" pos:column="20"/></operator> <literal type="number" pos:line="13" pos:column="21">1<pos:position pos:line="13" pos:column="22"/></literal></expr>;<pos:position pos:line="13" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">sstrncpy<pos:position pos:line="15" pos:column="13"/></name><argument_list pos:line="15" pos:column="13">(<argument><expr><name><name pos:line="15" pos:column="14">vl<pos:position pos:line="15" pos:column="16"/></name><operator pos:line="15" pos:column="16">.<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="17">host<pos:position pos:line="15" pos:column="21"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="23">hostname_g<pos:position pos:line="15" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="35">sizeof<argument_list pos:line="15" pos:column="41">(<argument><expr><name><name pos:line="15" pos:column="42">vl<pos:position pos:line="15" pos:column="44"/></name><operator pos:line="15" pos:column="44">.<pos:position pos:line="15" pos:column="45"/></operator><name pos:line="15" pos:column="45">host<pos:position pos:line="15" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">sstrncpy<pos:position pos:line="16" pos:column="13"/></name><argument_list pos:line="16" pos:column="13">(<argument><expr><name><name pos:line="16" pos:column="14">vl<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">.<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="17">plugin<pos:position pos:line="16" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="25">"onewire"<pos:position pos:line="16" pos:column="34"/></literal></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="36">sizeof<argument_list pos:line="16" pos:column="42">(<argument><expr><name><name pos:line="16" pos:column="43">vl<pos:position pos:line="16" pos:column="45"/></name><operator pos:line="16" pos:column="45">.<pos:position pos:line="16" pos:column="46"/></operator><name pos:line="16" pos:column="46">plugin<pos:position pos:line="16" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">sstrncpy<pos:position pos:line="17" pos:column="13"/></name><argument_list pos:line="17" pos:column="13">(<argument><expr><name><name pos:line="17" pos:column="14">vl<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">.<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="17">plugin_instance<pos:position pos:line="17" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="34">traverse<pos:position pos:line="17" pos:column="42"/></name><operator pos:line="17" pos:column="42">-&gt;<pos:position pos:line="17" pos:column="47"/></operator><name pos:line="17" pos:column="44">address<pos:position pos:line="17" pos:column="51"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="53">sizeof<argument_list pos:line="17" pos:column="59">(<argument><expr><name><name pos:line="17" pos:column="60">vl<pos:position pos:line="17" pos:column="62"/></name><operator pos:line="17" pos:column="62">.<pos:position pos:line="17" pos:column="63"/></operator><name pos:line="17" pos:column="63">plugin_instance<pos:position pos:line="17" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="79"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="81"/></expr_stmt>

    <expr_stmt><expr><name pos:line="19" pos:column="5">status<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <call><name pos:line="19" pos:column="14">OW_get<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><name><name pos:line="19" pos:column="21">traverse<pos:position pos:line="19" pos:column="29"/></name><operator pos:line="19" pos:column="29">-&gt;<pos:position pos:line="19" pos:column="34"/></operator><name pos:line="19" pos:column="31">path<pos:position pos:line="19" pos:column="35"/></name></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="37">&amp;<pos:position pos:line="19" pos:column="42"/></operator><name pos:line="19" pos:column="38">buffer<pos:position pos:line="19" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="46">&amp;<pos:position pos:line="19" pos:column="51"/></operator><name pos:line="19" pos:column="47">buffer_size<pos:position pos:line="19" pos:column="58"/></name></expr></argument>)<pos:position pos:line="19" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="60"/></expr_stmt>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">status<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">&lt;<pos:position pos:line="20" pos:column="20"/></operator> <literal type="number" pos:line="20" pos:column="18">0<pos:position pos:line="20" pos:column="19"/></literal></expr>)<pos:position pos:line="20" pos:column="20"/></condition><then pos:line="20" pos:column="20"> <block pos:line="20" pos:column="21">{
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">ERROR<pos:position pos:line="21" pos:column="12"/></name><argument_list pos:line="21" pos:column="12">(<argument><expr><literal type="string" pos:line="21" pos:column="13">"onewire plugin: OW_get (%s) failed. status = %#x;"<pos:position pos:line="21" pos:column="64"/></literal></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="66">traverse<pos:position pos:line="21" pos:column="74"/></name><operator pos:line="21" pos:column="74">-&gt;<pos:position pos:line="21" pos:column="79"/></operator><name pos:line="21" pos:column="76">path<pos:position pos:line="21" pos:column="80"/></name></name></expr></argument>,
            <argument><expr><name pos:line="22" pos:column="13">status<pos:position pos:line="22" pos:column="19"/></name></expr></argument>)<pos:position pos:line="22" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="21"/></expr_stmt>
      <return pos:line="23" pos:column="7">return <expr><operator pos:line="23" pos:column="14">(<pos:position pos:line="23" pos:column="15"/></operator><operator pos:line="23" pos:column="15">-<pos:position pos:line="23" pos:column="16"/></operator><literal type="number" pos:line="23" pos:column="16">1<pos:position pos:line="23" pos:column="17"/></literal><operator pos:line="23" pos:column="17">)<pos:position pos:line="23" pos:column="18"/></operator></expr>;<pos:position pos:line="23" pos:column="19"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">DEBUG<pos:position pos:line="25" pos:column="10"/></name><argument_list pos:line="25" pos:column="10">(<argument><expr><literal type="string" pos:line="25" pos:column="11">"onewire plugin: Read onewire device %s as %s"<pos:position pos:line="25" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="59">traverse<pos:position pos:line="25" pos:column="67"/></name><operator pos:line="25" pos:column="67">-&gt;<pos:position pos:line="25" pos:column="72"/></operator><name pos:line="25" pos:column="69">path<pos:position pos:line="25" pos:column="73"/></name></name></expr></argument>,
          <argument><expr><name pos:line="26" pos:column="11">buffer<pos:position pos:line="26" pos:column="17"/></name></expr></argument>)<pos:position pos:line="26" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="19"/></expr_stmt>

    <expr_stmt><expr><name pos:line="28" pos:column="5">endptr<pos:position pos:line="28" pos:column="11"/></name> <operator pos:line="28" pos:column="12">=<pos:position pos:line="28" pos:column="13"/></operator> <name pos:line="28" pos:column="14">NULL<pos:position pos:line="28" pos:column="18"/></name></expr>;<pos:position pos:line="28" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">values<pos:position pos:line="29" pos:column="11"/></name><index pos:line="29" pos:column="11">[<expr><literal type="number" pos:line="29" pos:column="12">0<pos:position pos:line="29" pos:column="13"/></literal></expr>]<pos:position pos:line="29" pos:column="14"/></index></name><operator pos:line="29" pos:column="14">.<pos:position pos:line="29" pos:column="15"/></operator><name pos:line="29" pos:column="15">gauge<pos:position pos:line="29" pos:column="20"/></name> <operator pos:line="29" pos:column="21">=<pos:position pos:line="29" pos:column="22"/></operator> <call><name pos:line="29" pos:column="23">strtod<pos:position pos:line="29" pos:column="29"/></name><argument_list pos:line="29" pos:column="29">(<argument><expr><name pos:line="29" pos:column="30">buffer<pos:position pos:line="29" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="38">&amp;<pos:position pos:line="29" pos:column="43"/></operator><name pos:line="29" pos:column="39">endptr<pos:position pos:line="29" pos:column="45"/></name></expr></argument>)<pos:position pos:line="29" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="47"/></expr_stmt>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name pos:line="30" pos:column="9">endptr<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">==<pos:position pos:line="30" pos:column="18"/></operator> <name pos:line="30" pos:column="19">NULL<pos:position pos:line="30" pos:column="23"/></name></expr>)<pos:position pos:line="30" pos:column="24"/></condition><then pos:line="30" pos:column="24"> <block pos:line="30" pos:column="25">{
      <expr_stmt><expr><call><name pos:line="31" pos:column="7">ERROR<pos:position pos:line="31" pos:column="12"/></name><argument_list pos:line="31" pos:column="12">(<argument><expr><literal type="string" pos:line="31" pos:column="13">"onewire plugin: Buffer is not a number: %s"<pos:position pos:line="31" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="59">buffer<pos:position pos:line="31" pos:column="65"/></name></expr></argument>)<pos:position pos:line="31" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="67"/></expr_stmt>
      <continue pos:line="32" pos:column="7">continue;<pos:position pos:line="32" pos:column="16"/></continue>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="35" pos:column="5">sstrncpy<pos:position pos:line="35" pos:column="13"/></name><argument_list pos:line="35" pos:column="13">(<argument><expr><name><name pos:line="35" pos:column="14">vl<pos:position pos:line="35" pos:column="16"/></name><operator pos:line="35" pos:column="16">.<pos:position pos:line="35" pos:column="17"/></operator><name pos:line="35" pos:column="17">type<pos:position pos:line="35" pos:column="21"/></name></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="23">traverse<pos:position pos:line="35" pos:column="31"/></name><operator pos:line="35" pos:column="31">-&gt;<pos:position pos:line="35" pos:column="36"/></operator><name pos:line="35" pos:column="33">file<pos:position pos:line="35" pos:column="37"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="39">sizeof<argument_list pos:line="35" pos:column="45">(<argument><expr><name><name pos:line="35" pos:column="46">vl<pos:position pos:line="35" pos:column="48"/></name><operator pos:line="35" pos:column="48">.<pos:position pos:line="35" pos:column="49"/></operator><name pos:line="35" pos:column="49">type<pos:position pos:line="35" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="35" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">sstrncpy<pos:position pos:line="36" pos:column="13"/></name><argument_list pos:line="36" pos:column="13">(<argument><expr><name><name pos:line="36" pos:column="14">vl<pos:position pos:line="36" pos:column="16"/></name><operator pos:line="36" pos:column="16">.<pos:position pos:line="36" pos:column="17"/></operator><name pos:line="36" pos:column="17">type_instance<pos:position pos:line="36" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="32">""<pos:position pos:line="36" pos:column="34"/></literal></expr></argument>, <argument><expr><sizeof pos:line="36" pos:column="36">sizeof<argument_list pos:line="36" pos:column="42">(<argument><expr><literal type="string" pos:line="36" pos:column="43">""<pos:position pos:line="36" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="36" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="48"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="38" pos:column="5">plugin_dispatch_values<pos:position pos:line="38" pos:column="27"/></name><argument_list pos:line="38" pos:column="27">(<argument><expr><operator pos:line="38" pos:column="28">&amp;<pos:position pos:line="38" pos:column="33"/></operator><name pos:line="38" pos:column="29">vl<pos:position pos:line="38" pos:column="31"/></name></expr></argument>)<pos:position pos:line="38" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">free<pos:position pos:line="39" pos:column="9"/></name><argument_list pos:line="39" pos:column="9">(<argument><expr><name pos:line="39" pos:column="10">buffer<pos:position pos:line="39" pos:column="16"/></name></expr></argument>)<pos:position pos:line="39" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="40" pos:column="4"/></block></for> <comment type="block" pos:line="40" pos:column="5">/* for (traverse) */</comment>

  <return pos:line="42" pos:column="3">return <expr><literal type="number" pos:line="42" pos:column="10">0<pos:position pos:line="42" pos:column="11"/></literal></expr>;<pos:position pos:line="42" pos:column="12"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

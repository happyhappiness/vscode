<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_884_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">bind_xml<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><specifier pos:line="1" pos:column="21">const<pos:position pos:line="1" pos:column="26"/></specifier> <name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">data<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list> <comment type="block" pos:line="1" pos:column="39">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">xmlDoc<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">doc<pos:position pos:line="3" pos:column="14"/></name> <init pos:line="3" pos:column="15">= <expr><name pos:line="3" pos:column="17">NULL<pos:position pos:line="3" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">xmlXPathContext<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">xpathCtx<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><name pos:line="4" pos:column="31">NULL<pos:position pos:line="4" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">xmlXPathObject<pos:position pos:line="5" pos:column="17"/></name> <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type><name pos:line="5" pos:column="19">xpathObj<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><name pos:line="5" pos:column="30">NULL<pos:position pos:line="5" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">ret<pos:position pos:line="6" pos:column="10"/></name> <init pos:line="6" pos:column="11">= <expr><operator pos:line="6" pos:column="13">-<pos:position pos:line="6" pos:column="14"/></operator><literal type="number" pos:line="6" pos:column="14">1<pos:position pos:line="6" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>

  <expr_stmt><expr><name pos:line="8" pos:column="3">doc<pos:position pos:line="8" pos:column="6"/></name> <operator pos:line="8" pos:column="7">=<pos:position pos:line="8" pos:column="8"/></operator> <call><name pos:line="8" pos:column="9">xmlParseMemory<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">(<argument><expr><name pos:line="8" pos:column="24">data<pos:position pos:line="8" pos:column="28"/></name></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="30">strlen<pos:position pos:line="8" pos:column="36"/></name><argument_list pos:line="8" pos:column="36">(<argument><expr><name pos:line="8" pos:column="37">data<pos:position pos:line="8" pos:column="41"/></name></expr></argument>)<pos:position pos:line="8" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="44"/></expr_stmt>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">doc<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">==<pos:position pos:line="9" pos:column="13"/></operator> <name pos:line="9" pos:column="14">NULL<pos:position pos:line="9" pos:column="18"/></name></expr>)<pos:position pos:line="9" pos:column="19"/></condition><then pos:line="9" pos:column="19"> <block pos:line="9" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">ERROR<pos:position pos:line="10" pos:column="10"/></name><argument_list pos:line="10" pos:column="10">(<argument><expr><literal type="string" pos:line="10" pos:column="11">"bind plugin: xmlParseMemory failed."<pos:position pos:line="10" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="50"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><operator pos:line="11" pos:column="13">-<pos:position pos:line="11" pos:column="14"/></operator><literal type="number" pos:line="11" pos:column="14">1<pos:position pos:line="11" pos:column="15"/></literal><operator pos:line="11" pos:column="15">)<pos:position pos:line="11" pos:column="16"/></operator></expr>;<pos:position pos:line="11" pos:column="17"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="14" pos:column="3">xpathCtx<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <call><name pos:line="14" pos:column="14">xmlXPathNewContext<pos:position pos:line="14" pos:column="32"/></name><argument_list pos:line="14" pos:column="32">(<argument><expr><name pos:line="14" pos:column="33">doc<pos:position pos:line="14" pos:column="36"/></name></expr></argument>)<pos:position pos:line="14" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="38"/></expr_stmt>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name pos:line="15" pos:column="7">xpathCtx<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">==<pos:position pos:line="15" pos:column="18"/></operator> <name pos:line="15" pos:column="19">NULL<pos:position pos:line="15" pos:column="23"/></name></expr>)<pos:position pos:line="15" pos:column="24"/></condition><then pos:line="15" pos:column="24"> <block pos:line="15" pos:column="25">{
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">ERROR<pos:position pos:line="16" pos:column="10"/></name><argument_list pos:line="16" pos:column="10">(<argument><expr><literal type="string" pos:line="16" pos:column="11">"bind plugin: xmlXPathNewContext failed."<pos:position pos:line="16" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">xmlFreeDoc<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><name pos:line="17" pos:column="16">doc<pos:position pos:line="17" pos:column="19"/></name></expr></argument>)<pos:position pos:line="17" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="21"/></expr_stmt>
    <return pos:line="18" pos:column="5">return <expr><operator pos:line="18" pos:column="12">(<pos:position pos:line="18" pos:column="13"/></operator><operator pos:line="18" pos:column="13">-<pos:position pos:line="18" pos:column="14"/></operator><literal type="number" pos:line="18" pos:column="14">1<pos:position pos:line="18" pos:column="15"/></literal><operator pos:line="18" pos:column="15">)<pos:position pos:line="18" pos:column="16"/></operator></expr>;<pos:position pos:line="18" pos:column="17"/></return>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>

  <comment type="line" pos:line="21" pos:column="3">//</comment>
  <comment type="line" pos:line="22" pos:column="3">// version 3.* of statistics XML (since BIND9.9)</comment>
  <comment type="line" pos:line="23" pos:column="3">//</comment>

  <expr_stmt><expr><name pos:line="25" pos:column="3">xpathObj<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <call><name pos:line="25" pos:column="14">xmlXPathEvalExpression<pos:position pos:line="25" pos:column="36"/></name><argument_list pos:line="25" pos:column="36">(<argument><expr><name pos:line="25" pos:column="37">BAD_CAST<pos:position pos:line="25" pos:column="45"/></name> <literal type="string" pos:line="25" pos:column="46">"/statistics"<pos:position pos:line="25" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="61">xpathCtx<pos:position pos:line="25" pos:column="69"/></name></expr></argument>)<pos:position pos:line="25" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="71"/></expr_stmt>
  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><name pos:line="26" pos:column="7">xpathObj<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">==<pos:position pos:line="26" pos:column="18"/></operator> <name pos:line="26" pos:column="19">NULL<pos:position pos:line="26" pos:column="23"/></name> <operator pos:line="26" pos:column="24">||<pos:position pos:line="26" pos:column="26"/></operator> <name><name pos:line="26" pos:column="27">xpathObj<pos:position pos:line="26" pos:column="35"/></name><operator pos:line="26" pos:column="35">-&gt;<pos:position pos:line="26" pos:column="40"/></operator><name pos:line="26" pos:column="37">nodesetval<pos:position pos:line="26" pos:column="47"/></name></name> <operator pos:line="26" pos:column="48">==<pos:position pos:line="26" pos:column="50"/></operator> <name pos:line="26" pos:column="51">NULL<pos:position pos:line="26" pos:column="55"/></name> <operator pos:line="26" pos:column="56">||<pos:position pos:line="26" pos:column="58"/></operator>
      <name><name pos:line="27" pos:column="7">xpathObj<pos:position pos:line="27" pos:column="15"/></name><operator pos:line="27" pos:column="15">-&gt;<pos:position pos:line="27" pos:column="20"/></operator><name pos:line="27" pos:column="17">nodesetval<pos:position pos:line="27" pos:column="27"/></name><operator pos:line="27" pos:column="27">-&gt;<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="29">nodeNr<pos:position pos:line="27" pos:column="35"/></name></name> <operator pos:line="27" pos:column="36">==<pos:position pos:line="27" pos:column="38"/></operator> <literal type="number" pos:line="27" pos:column="39">0<pos:position pos:line="27" pos:column="40"/></literal></expr>)<pos:position pos:line="27" pos:column="41"/></condition><then pos:line="27" pos:column="41"> <block pos:line="27" pos:column="42">{
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">DEBUG<pos:position pos:line="28" pos:column="10"/></name><argument_list pos:line="28" pos:column="10">(<argument><expr><literal type="string" pos:line="28" pos:column="11">"bind plugin: Statistics appears not to be v3"<pos:position pos:line="28" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="59"/></expr_stmt>
    <comment type="line" pos:line="29" pos:column="5">// we will fallback to v1 or v2 detection</comment>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name pos:line="30" pos:column="9">xpathObj<pos:position pos:line="30" pos:column="17"/></name> <operator pos:line="30" pos:column="18">!=<pos:position pos:line="30" pos:column="20"/></operator> <name pos:line="30" pos:column="21">NULL<pos:position pos:line="30" pos:column="25"/></name></expr>)<pos:position pos:line="30" pos:column="26"/></condition><then pos:line="30" pos:column="26"> <block pos:line="30" pos:column="27">{
      <expr_stmt><expr><call><name pos:line="31" pos:column="7">xmlXPathFreeObject<pos:position pos:line="31" pos:column="25"/></name><argument_list pos:line="31" pos:column="25">(<argument><expr><name pos:line="31" pos:column="26">xpathObj<pos:position pos:line="31" pos:column="34"/></name></expr></argument>)<pos:position pos:line="31" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>
  }<pos:position pos:line="33" pos:column="4"/></block></then> <else pos:line="33" pos:column="5">else <block pos:line="33" pos:column="10">{
    <for pos:line="34" pos:column="5">for <control pos:line="34" pos:column="9">(<init><decl><type><name pos:line="34" pos:column="10">int<pos:position pos:line="34" pos:column="13"/></name></type> <name pos:line="34" pos:column="14">i<pos:position pos:line="34" pos:column="15"/></name> <init pos:line="34" pos:column="16">= <expr><literal type="number" pos:line="34" pos:column="18">0<pos:position pos:line="34" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="34" pos:column="20"/></init> <condition><expr><name pos:line="34" pos:column="21">i<pos:position pos:line="34" pos:column="22"/></name> <operator pos:line="34" pos:column="23">&lt;<pos:position pos:line="34" pos:column="27"/></operator> <name><name pos:line="34" pos:column="25">xpathObj<pos:position pos:line="34" pos:column="33"/></name><operator pos:line="34" pos:column="33">-&gt;<pos:position pos:line="34" pos:column="38"/></operator><name pos:line="34" pos:column="35">nodesetval<pos:position pos:line="34" pos:column="45"/></name><operator pos:line="34" pos:column="45">-&gt;<pos:position pos:line="34" pos:column="50"/></operator><name pos:line="34" pos:column="47">nodeNr<pos:position pos:line="34" pos:column="53"/></name></name></expr>;<pos:position pos:line="34" pos:column="54"/></condition> <incr><expr><name pos:line="34" pos:column="55">i<pos:position pos:line="34" pos:column="56"/></name><operator pos:line="34" pos:column="56">++<pos:position pos:line="34" pos:column="58"/></operator></expr></incr>)<pos:position pos:line="34" pos:column="59"/></control> <block pos:line="34" pos:column="60">{
      <decl_stmt><decl><type><name pos:line="35" pos:column="7">xmlNode<pos:position pos:line="35" pos:column="14"/></name> <modifier pos:line="35" pos:column="15">*<pos:position pos:line="35" pos:column="16"/></modifier></type><name pos:line="35" pos:column="16">node<pos:position pos:line="35" pos:column="20"/></name></decl>;<pos:position pos:line="35" pos:column="21"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="36" pos:column="7">char<pos:position pos:line="36" pos:column="11"/></name> <modifier pos:line="36" pos:column="12">*<pos:position pos:line="36" pos:column="13"/></modifier></type><name pos:line="36" pos:column="13">attr_version<pos:position pos:line="36" pos:column="25"/></name></decl>;<pos:position pos:line="36" pos:column="26"/></decl_stmt>

      <expr_stmt><expr><name pos:line="38" pos:column="7">node<pos:position pos:line="38" pos:column="11"/></name> <operator pos:line="38" pos:column="12">=<pos:position pos:line="38" pos:column="13"/></operator> <name><name pos:line="38" pos:column="14">xpathObj<pos:position pos:line="38" pos:column="22"/></name><operator pos:line="38" pos:column="22">-&gt;<pos:position pos:line="38" pos:column="27"/></operator><name pos:line="38" pos:column="24">nodesetval<pos:position pos:line="38" pos:column="34"/></name><operator pos:line="38" pos:column="34">-&gt;<pos:position pos:line="38" pos:column="39"/></operator><name pos:line="38" pos:column="36">nodeTab<pos:position pos:line="38" pos:column="43"/></name><index pos:line="38" pos:column="43">[<expr><name pos:line="38" pos:column="44">i<pos:position pos:line="38" pos:column="45"/></name></expr>]<pos:position pos:line="38" pos:column="46"/></index></name></expr>;<pos:position pos:line="38" pos:column="47"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="39" pos:column="7">assert<pos:position pos:line="39" pos:column="13"/></name><argument_list pos:line="39" pos:column="13">(<argument><expr><name pos:line="39" pos:column="14">node<pos:position pos:line="39" pos:column="18"/></name> <operator pos:line="39" pos:column="19">!=<pos:position pos:line="39" pos:column="21"/></operator> <name pos:line="39" pos:column="22">NULL<pos:position pos:line="39" pos:column="26"/></name></expr></argument>)<pos:position pos:line="39" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="28"/></expr_stmt>

      <expr_stmt><expr><name pos:line="41" pos:column="7">attr_version<pos:position pos:line="41" pos:column="19"/></name> <operator pos:line="41" pos:column="20">=<pos:position pos:line="41" pos:column="21"/></operator> <operator pos:line="41" pos:column="22">(<pos:position pos:line="41" pos:column="23"/></operator><name pos:line="41" pos:column="23">char<pos:position pos:line="41" pos:column="27"/></name> <operator pos:line="41" pos:column="28">*<pos:position pos:line="41" pos:column="29"/></operator><operator pos:line="41" pos:column="29">)<pos:position pos:line="41" pos:column="30"/></operator><call><name pos:line="41" pos:column="30">xmlGetProp<pos:position pos:line="41" pos:column="40"/></name><argument_list pos:line="41" pos:column="40">(<argument><expr><name pos:line="41" pos:column="41">node<pos:position pos:line="41" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="47">BAD_CAST<pos:position pos:line="41" pos:column="55"/></name> <literal type="string" pos:line="41" pos:column="56">"version"<pos:position pos:line="41" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="67"/></expr_stmt>
      <if pos:line="42" pos:column="7">if <condition pos:line="42" pos:column="10">(<expr><name pos:line="42" pos:column="11">attr_version<pos:position pos:line="42" pos:column="23"/></name> <operator pos:line="42" pos:column="24">==<pos:position pos:line="42" pos:column="26"/></operator> <name pos:line="42" pos:column="27">NULL<pos:position pos:line="42" pos:column="31"/></name></expr>)<pos:position pos:line="42" pos:column="32"/></condition><then pos:line="42" pos:column="32"> <block pos:line="42" pos:column="33">{
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">NOTICE<pos:position pos:line="43" pos:column="15"/></name><argument_list pos:line="43" pos:column="15">(<argument><expr><literal type="string" pos:line="43" pos:column="16">"bind plugin: Found &lt;statistics&gt; tag doesn't have a "<pos:position pos:line="43" pos:column="75"/></literal>
               <literal type="string" pos:line="44" pos:column="16">"`version' attribute."<pos:position pos:line="44" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="40"/></expr_stmt>
        <continue pos:line="45" pos:column="9">continue;<pos:position pos:line="45" pos:column="18"/></continue>
      }<pos:position pos:line="46" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="47" pos:column="7">DEBUG<pos:position pos:line="47" pos:column="12"/></name><argument_list pos:line="47" pos:column="12">(<argument><expr><literal type="string" pos:line="47" pos:column="13">"bind plugin: Found: &lt;statistics version=\"%s\"&gt;"<pos:position pos:line="47" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="64">attr_version<pos:position pos:line="47" pos:column="76"/></name></expr></argument>)<pos:position pos:line="47" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="78"/></expr_stmt>

      <if pos:line="49" pos:column="7">if <condition pos:line="49" pos:column="10">(<expr><call><name pos:line="49" pos:column="11">strncmp<pos:position pos:line="49" pos:column="18"/></name><argument_list pos:line="49" pos:column="18">(<argument><expr><literal type="string" pos:line="49" pos:column="19">"3."<pos:position pos:line="49" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="25">attr_version<pos:position pos:line="49" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="49" pos:column="39">strlen<pos:position pos:line="49" pos:column="45"/></name><argument_list pos:line="49" pos:column="45">(<argument><expr><literal type="string" pos:line="49" pos:column="46">"3."<pos:position pos:line="49" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="49" pos:column="52"/></argument_list></call> <operator pos:line="49" pos:column="53">!=<pos:position pos:line="49" pos:column="55"/></operator> <literal type="number" pos:line="49" pos:column="56">0<pos:position pos:line="49" pos:column="57"/></literal></expr>)<pos:position pos:line="49" pos:column="58"/></condition><then pos:line="49" pos:column="58"> <block pos:line="49" pos:column="59">{
        <comment type="block" pos:line="50" pos:column="9">/* TODO: Use the complaint mechanism here. */</comment>
        <expr_stmt><expr><call><name pos:line="51" pos:column="9">NOTICE<pos:position pos:line="51" pos:column="15"/></name><argument_list pos:line="51" pos:column="15">(<argument><expr><literal type="string" pos:line="51" pos:column="16">"bind plugin: Found &lt;statistics&gt; tag with version `%s'. "<pos:position pos:line="51" pos:column="79"/></literal>
               <literal type="string" pos:line="52" pos:column="16">"Unfortunately I have no clue how to parse that. "<pos:position pos:line="52" pos:column="66"/></literal>
               <literal type="string" pos:line="53" pos:column="16">"Please open a bug report for this."<pos:position pos:line="53" pos:column="52"/></literal></expr></argument>,
               <argument><expr><name pos:line="54" pos:column="16">attr_version<pos:position pos:line="54" pos:column="28"/></name></expr></argument>)<pos:position pos:line="54" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="55" pos:column="9">xmlFree<pos:position pos:line="55" pos:column="16"/></name><argument_list pos:line="55" pos:column="16">(<argument><expr><name pos:line="55" pos:column="17">attr_version<pos:position pos:line="55" pos:column="29"/></name></expr></argument>)<pos:position pos:line="55" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="31"/></expr_stmt>
        <continue pos:line="56" pos:column="9">continue;<pos:position pos:line="56" pos:column="18"/></continue>
      }<pos:position pos:line="57" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="58" pos:column="7">ret<pos:position pos:line="58" pos:column="10"/></name> <operator pos:line="58" pos:column="11">=<pos:position pos:line="58" pos:column="12"/></operator> <call><name pos:line="58" pos:column="13">bind_xml_stats<pos:position pos:line="58" pos:column="27"/></name><argument_list pos:line="58" pos:column="27">(<argument><expr><literal type="number" pos:line="58" pos:column="28">3<pos:position pos:line="58" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="31">doc<pos:position pos:line="58" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="36">xpathCtx<pos:position pos:line="58" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="46">node<pos:position pos:line="58" pos:column="50"/></name></expr></argument>)<pos:position pos:line="58" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="52"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="60" pos:column="7">xmlFree<pos:position pos:line="60" pos:column="14"/></name><argument_list pos:line="60" pos:column="14">(<argument><expr><name pos:line="60" pos:column="15">attr_version<pos:position pos:line="60" pos:column="27"/></name></expr></argument>)<pos:position pos:line="60" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="29"/></expr_stmt>
      <comment type="block" pos:line="61" pos:column="7">/* One &lt;statistics&gt; node ought to be enough. */</comment>
      <break pos:line="62" pos:column="7">break;<pos:position pos:line="62" pos:column="13"/></break>
    }<pos:position pos:line="63" pos:column="6"/></block></for>

    <comment type="line" pos:line="65" pos:column="5">// we are finished, early-return</comment>
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">xmlXPathFreeObject<pos:position pos:line="66" pos:column="23"/></name><argument_list pos:line="66" pos:column="23">(<argument><expr><name pos:line="66" pos:column="24">xpathObj<pos:position pos:line="66" pos:column="32"/></name></expr></argument>)<pos:position pos:line="66" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">xmlXPathFreeContext<pos:position pos:line="67" pos:column="24"/></name><argument_list pos:line="67" pos:column="24">(<argument><expr><name pos:line="67" pos:column="25">xpathCtx<pos:position pos:line="67" pos:column="33"/></name></expr></argument>)<pos:position pos:line="67" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="68" pos:column="5">xmlFreeDoc<pos:position pos:line="68" pos:column="15"/></name><argument_list pos:line="68" pos:column="15">(<argument><expr><name pos:line="68" pos:column="16">doc<pos:position pos:line="68" pos:column="19"/></name></expr></argument>)<pos:position pos:line="68" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="21"/></expr_stmt>

    <return pos:line="70" pos:column="5">return <expr><operator pos:line="70" pos:column="12">(<pos:position pos:line="70" pos:column="13"/></operator><name pos:line="70" pos:column="13">ret<pos:position pos:line="70" pos:column="16"/></name><operator pos:line="70" pos:column="16">)<pos:position pos:line="70" pos:column="17"/></operator></expr>;<pos:position pos:line="70" pos:column="18"/></return>
  }<pos:position pos:line="71" pos:column="4"/></block></else></if>

  <comment type="line" pos:line="73" pos:column="3">//</comment>
  <comment type="line" pos:line="74" pos:column="3">// versions 1.* or 2.* of statistics XML</comment>
  <comment type="line" pos:line="75" pos:column="3">//</comment>

  <expr_stmt><expr><name pos:line="77" pos:column="3">xpathObj<pos:position pos:line="77" pos:column="11"/></name> <operator pos:line="77" pos:column="12">=<pos:position pos:line="77" pos:column="13"/></operator> <call><name pos:line="77" pos:column="14">xmlXPathEvalExpression<pos:position pos:line="77" pos:column="36"/></name><argument_list pos:line="77" pos:column="36">(<argument><expr><name pos:line="77" pos:column="37">BAD_CAST<pos:position pos:line="77" pos:column="45"/></name> <literal type="string" pos:line="77" pos:column="46">"/isc/bind/statistics"<pos:position pos:line="77" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="77" pos:column="70">xpathCtx<pos:position pos:line="77" pos:column="78"/></name></expr></argument>)<pos:position pos:line="77" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="80"/></expr_stmt>
  <if pos:line="78" pos:column="3">if <condition pos:line="78" pos:column="6">(<expr><name pos:line="78" pos:column="7">xpathObj<pos:position pos:line="78" pos:column="15"/></name> <operator pos:line="78" pos:column="16">==<pos:position pos:line="78" pos:column="18"/></operator> <name pos:line="78" pos:column="19">NULL<pos:position pos:line="78" pos:column="23"/></name></expr>)<pos:position pos:line="78" pos:column="24"/></condition><then pos:line="78" pos:column="24"> <block pos:line="78" pos:column="25">{
    <expr_stmt><expr><call><name pos:line="79" pos:column="5">ERROR<pos:position pos:line="79" pos:column="10"/></name><argument_list pos:line="79" pos:column="10">(<argument><expr><literal type="string" pos:line="79" pos:column="11">"bind plugin: Cannot find the &lt;statistics&gt; tag."<pos:position pos:line="79" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="80" pos:column="5">xmlXPathFreeContext<pos:position pos:line="80" pos:column="24"/></name><argument_list pos:line="80" pos:column="24">(<argument><expr><name pos:line="80" pos:column="25">xpathCtx<pos:position pos:line="80" pos:column="33"/></name></expr></argument>)<pos:position pos:line="80" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="81" pos:column="5">xmlFreeDoc<pos:position pos:line="81" pos:column="15"/></name><argument_list pos:line="81" pos:column="15">(<argument><expr><name pos:line="81" pos:column="16">doc<pos:position pos:line="81" pos:column="19"/></name></expr></argument>)<pos:position pos:line="81" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="21"/></expr_stmt>
    <return pos:line="82" pos:column="5">return <expr><operator pos:line="82" pos:column="12">(<pos:position pos:line="82" pos:column="13"/></operator><operator pos:line="82" pos:column="13">-<pos:position pos:line="82" pos:column="14"/></operator><literal type="number" pos:line="82" pos:column="14">1<pos:position pos:line="82" pos:column="15"/></literal><operator pos:line="82" pos:column="15">)<pos:position pos:line="82" pos:column="16"/></operator></expr>;<pos:position pos:line="82" pos:column="17"/></return>
  }<pos:position pos:line="83" pos:column="4"/></block></then> <elseif pos:line="83" pos:column="5">else <if pos:line="83" pos:column="10">if <condition pos:line="83" pos:column="13">(<expr><name><name pos:line="83" pos:column="14">xpathObj<pos:position pos:line="83" pos:column="22"/></name><operator pos:line="83" pos:column="22">-&gt;<pos:position pos:line="83" pos:column="27"/></operator><name pos:line="83" pos:column="24">nodesetval<pos:position pos:line="83" pos:column="34"/></name></name> <operator pos:line="83" pos:column="35">==<pos:position pos:line="83" pos:column="37"/></operator> <name pos:line="83" pos:column="38">NULL<pos:position pos:line="83" pos:column="42"/></name></expr>)<pos:position pos:line="83" pos:column="43"/></condition><then pos:line="83" pos:column="43"> <block pos:line="83" pos:column="44">{
    <expr_stmt><expr><call><name pos:line="84" pos:column="5">ERROR<pos:position pos:line="84" pos:column="10"/></name><argument_list pos:line="84" pos:column="10">(<argument><expr><literal type="string" pos:line="84" pos:column="11">"bind plugin: xmlXPathEvalExpression failed."<pos:position pos:line="84" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="85" pos:column="5">xmlXPathFreeObject<pos:position pos:line="85" pos:column="23"/></name><argument_list pos:line="85" pos:column="23">(<argument><expr><name pos:line="85" pos:column="24">xpathObj<pos:position pos:line="85" pos:column="32"/></name></expr></argument>)<pos:position pos:line="85" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="86" pos:column="5">xmlXPathFreeContext<pos:position pos:line="86" pos:column="24"/></name><argument_list pos:line="86" pos:column="24">(<argument><expr><name pos:line="86" pos:column="25">xpathCtx<pos:position pos:line="86" pos:column="33"/></name></expr></argument>)<pos:position pos:line="86" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="87" pos:column="5">xmlFreeDoc<pos:position pos:line="87" pos:column="15"/></name><argument_list pos:line="87" pos:column="15">(<argument><expr><name pos:line="87" pos:column="16">doc<pos:position pos:line="87" pos:column="19"/></name></expr></argument>)<pos:position pos:line="87" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="21"/></expr_stmt>
    <return pos:line="88" pos:column="5">return <expr><operator pos:line="88" pos:column="12">(<pos:position pos:line="88" pos:column="13"/></operator><operator pos:line="88" pos:column="13">-<pos:position pos:line="88" pos:column="14"/></operator><literal type="number" pos:line="88" pos:column="14">1<pos:position pos:line="88" pos:column="15"/></literal><operator pos:line="88" pos:column="15">)<pos:position pos:line="88" pos:column="16"/></operator></expr>;<pos:position pos:line="88" pos:column="17"/></return>
  }<pos:position pos:line="89" pos:column="4"/></block></then></if></elseif></if>

  <for pos:line="91" pos:column="3">for <control pos:line="91" pos:column="7">(<init><decl><type><name pos:line="91" pos:column="8">int<pos:position pos:line="91" pos:column="11"/></name></type> <name pos:line="91" pos:column="12">i<pos:position pos:line="91" pos:column="13"/></name> <init pos:line="91" pos:column="14">= <expr><literal type="number" pos:line="91" pos:column="16">0<pos:position pos:line="91" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="91" pos:column="18"/></init> <condition><expr><name pos:line="91" pos:column="19">i<pos:position pos:line="91" pos:column="20"/></name> <operator pos:line="91" pos:column="21">&lt;<pos:position pos:line="91" pos:column="25"/></operator> <name><name pos:line="91" pos:column="23">xpathObj<pos:position pos:line="91" pos:column="31"/></name><operator pos:line="91" pos:column="31">-&gt;<pos:position pos:line="91" pos:column="36"/></operator><name pos:line="91" pos:column="33">nodesetval<pos:position pos:line="91" pos:column="43"/></name><operator pos:line="91" pos:column="43">-&gt;<pos:position pos:line="91" pos:column="48"/></operator><name pos:line="91" pos:column="45">nodeNr<pos:position pos:line="91" pos:column="51"/></name></name></expr>;<pos:position pos:line="91" pos:column="52"/></condition> <incr><expr><name pos:line="91" pos:column="53">i<pos:position pos:line="91" pos:column="54"/></name><operator pos:line="91" pos:column="54">++<pos:position pos:line="91" pos:column="56"/></operator></expr></incr>)<pos:position pos:line="91" pos:column="57"/></control> <block pos:line="91" pos:column="58">{
    <decl_stmt><decl><type><name pos:line="92" pos:column="5">xmlNode<pos:position pos:line="92" pos:column="12"/></name> <modifier pos:line="92" pos:column="13">*<pos:position pos:line="92" pos:column="14"/></modifier></type><name pos:line="92" pos:column="14">node<pos:position pos:line="92" pos:column="18"/></name></decl>;<pos:position pos:line="92" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="93" pos:column="5">char<pos:position pos:line="93" pos:column="9"/></name> <modifier pos:line="93" pos:column="10">*<pos:position pos:line="93" pos:column="11"/></modifier></type><name pos:line="93" pos:column="11">attr_version<pos:position pos:line="93" pos:column="23"/></name></decl>;<pos:position pos:line="93" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="94" pos:column="5">int<pos:position pos:line="94" pos:column="8"/></name></type> <name pos:line="94" pos:column="9">parsed_version<pos:position pos:line="94" pos:column="23"/></name> <init pos:line="94" pos:column="24">= <expr><literal type="number" pos:line="94" pos:column="26">0<pos:position pos:line="94" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="94" pos:column="28"/></decl_stmt>

    <expr_stmt><expr><name pos:line="96" pos:column="5">node<pos:position pos:line="96" pos:column="9"/></name> <operator pos:line="96" pos:column="10">=<pos:position pos:line="96" pos:column="11"/></operator> <name><name pos:line="96" pos:column="12">xpathObj<pos:position pos:line="96" pos:column="20"/></name><operator pos:line="96" pos:column="20">-&gt;<pos:position pos:line="96" pos:column="25"/></operator><name pos:line="96" pos:column="22">nodesetval<pos:position pos:line="96" pos:column="32"/></name><operator pos:line="96" pos:column="32">-&gt;<pos:position pos:line="96" pos:column="37"/></operator><name pos:line="96" pos:column="34">nodeTab<pos:position pos:line="96" pos:column="41"/></name><index pos:line="96" pos:column="41">[<expr><name pos:line="96" pos:column="42">i<pos:position pos:line="96" pos:column="43"/></name></expr>]<pos:position pos:line="96" pos:column="44"/></index></name></expr>;<pos:position pos:line="96" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="97" pos:column="5">assert<pos:position pos:line="97" pos:column="11"/></name><argument_list pos:line="97" pos:column="11">(<argument><expr><name pos:line="97" pos:column="12">node<pos:position pos:line="97" pos:column="16"/></name> <operator pos:line="97" pos:column="17">!=<pos:position pos:line="97" pos:column="19"/></operator> <name pos:line="97" pos:column="20">NULL<pos:position pos:line="97" pos:column="24"/></name></expr></argument>)<pos:position pos:line="97" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="26"/></expr_stmt>

    <expr_stmt><expr><name pos:line="99" pos:column="5">attr_version<pos:position pos:line="99" pos:column="17"/></name> <operator pos:line="99" pos:column="18">=<pos:position pos:line="99" pos:column="19"/></operator> <operator pos:line="99" pos:column="20">(<pos:position pos:line="99" pos:column="21"/></operator><name pos:line="99" pos:column="21">char<pos:position pos:line="99" pos:column="25"/></name> <operator pos:line="99" pos:column="26">*<pos:position pos:line="99" pos:column="27"/></operator><operator pos:line="99" pos:column="27">)<pos:position pos:line="99" pos:column="28"/></operator><call><name pos:line="99" pos:column="28">xmlGetProp<pos:position pos:line="99" pos:column="38"/></name><argument_list pos:line="99" pos:column="38">(<argument><expr><name pos:line="99" pos:column="39">node<pos:position pos:line="99" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="45">BAD_CAST<pos:position pos:line="99" pos:column="53"/></name> <literal type="string" pos:line="99" pos:column="54">"version"<pos:position pos:line="99" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="65"/></expr_stmt>
    <if pos:line="100" pos:column="5">if <condition pos:line="100" pos:column="8">(<expr><name pos:line="100" pos:column="9">attr_version<pos:position pos:line="100" pos:column="21"/></name> <operator pos:line="100" pos:column="22">==<pos:position pos:line="100" pos:column="24"/></operator> <name pos:line="100" pos:column="25">NULL<pos:position pos:line="100" pos:column="29"/></name></expr>)<pos:position pos:line="100" pos:column="30"/></condition><then pos:line="100" pos:column="30"> <block pos:line="100" pos:column="31">{
      <expr_stmt><expr><call><name pos:line="101" pos:column="7">NOTICE<pos:position pos:line="101" pos:column="13"/></name><argument_list pos:line="101" pos:column="13">(<argument><expr><literal type="string" pos:line="101" pos:column="14">"bind plugin: Found &lt;statistics&gt; tag doesn't have a "<pos:position pos:line="101" pos:column="73"/></literal>
             <literal type="string" pos:line="102" pos:column="14">"`version' attribute."<pos:position pos:line="102" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="38"/></expr_stmt>
      <continue pos:line="103" pos:column="7">continue;<pos:position pos:line="103" pos:column="16"/></continue>
    }<pos:position pos:line="104" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="105" pos:column="5">DEBUG<pos:position pos:line="105" pos:column="10"/></name><argument_list pos:line="105" pos:column="10">(<argument><expr><literal type="string" pos:line="105" pos:column="11">"bind plugin: Found: &lt;statistics version=\"%s\"&gt;"<pos:position pos:line="105" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="105" pos:column="62">attr_version<pos:position pos:line="105" pos:column="74"/></name></expr></argument>)<pos:position pos:line="105" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="76"/></expr_stmt>

    <comment type="block" pos:line="107" pos:column="5">/* At the time this plugin was written, version "1.0" was used by
     * BIND 9.5.0, version "2.0" was used by BIND 9.5.1 and 9.6.0. We assume
     * that "1.*" and "2.*" don't introduce structural changes, so we just
     * check for the first two characters here. */</comment>
    <if pos:line="111" pos:column="5">if <condition pos:line="111" pos:column="8">(<expr><call><name pos:line="111" pos:column="9">strncmp<pos:position pos:line="111" pos:column="16"/></name><argument_list pos:line="111" pos:column="16">(<argument><expr><literal type="string" pos:line="111" pos:column="17">"1."<pos:position pos:line="111" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="111" pos:column="23">attr_version<pos:position pos:line="111" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="111" pos:column="37">strlen<pos:position pos:line="111" pos:column="43"/></name><argument_list pos:line="111" pos:column="43">(<argument><expr><literal type="string" pos:line="111" pos:column="44">"1."<pos:position pos:line="111" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="111" pos:column="50"/></argument_list></call> <operator pos:line="111" pos:column="51">==<pos:position pos:line="111" pos:column="53"/></operator> <literal type="number" pos:line="111" pos:column="54">0<pos:position pos:line="111" pos:column="55"/></literal></expr>)<pos:position pos:line="111" pos:column="56"/></condition><then pos:line="111" pos:column="56">
      <block type="pseudo"><expr_stmt><expr><name pos:line="112" pos:column="7">parsed_version<pos:position pos:line="112" pos:column="21"/></name> <operator pos:line="112" pos:column="22">=<pos:position pos:line="112" pos:column="23"/></operator> <literal type="number" pos:line="112" pos:column="24">1<pos:position pos:line="112" pos:column="25"/></literal></expr>;<pos:position pos:line="112" pos:column="26"/></expr_stmt></block></then>
    <elseif pos:line="113" pos:column="5">else <if pos:line="113" pos:column="10">if <condition pos:line="113" pos:column="13">(<expr><call><name pos:line="113" pos:column="14">strncmp<pos:position pos:line="113" pos:column="21"/></name><argument_list pos:line="113" pos:column="21">(<argument><expr><literal type="string" pos:line="113" pos:column="22">"2."<pos:position pos:line="113" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="113" pos:column="28">attr_version<pos:position pos:line="113" pos:column="40"/></name></expr></argument>, <argument><expr><call><name pos:line="113" pos:column="42">strlen<pos:position pos:line="113" pos:column="48"/></name><argument_list pos:line="113" pos:column="48">(<argument><expr><literal type="string" pos:line="113" pos:column="49">"2."<pos:position pos:line="113" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="113" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="113" pos:column="55"/></argument_list></call> <operator pos:line="113" pos:column="56">==<pos:position pos:line="113" pos:column="58"/></operator> <literal type="number" pos:line="113" pos:column="59">0<pos:position pos:line="113" pos:column="60"/></literal></expr>)<pos:position pos:line="113" pos:column="61"/></condition><then pos:line="113" pos:column="61">
      <block type="pseudo"><expr_stmt><expr><name pos:line="114" pos:column="7">parsed_version<pos:position pos:line="114" pos:column="21"/></name> <operator pos:line="114" pos:column="22">=<pos:position pos:line="114" pos:column="23"/></operator> <literal type="number" pos:line="114" pos:column="24">2<pos:position pos:line="114" pos:column="25"/></literal></expr>;<pos:position pos:line="114" pos:column="26"/></expr_stmt></block></then></if></elseif>
    <else pos:line="115" pos:column="5">else <block pos:line="115" pos:column="10">{
      <comment type="block" pos:line="116" pos:column="7">/* TODO: Use the complaint mechanism here. */</comment>
      <expr_stmt><expr><call><name pos:line="117" pos:column="7">NOTICE<pos:position pos:line="117" pos:column="13"/></name><argument_list pos:line="117" pos:column="13">(<argument><expr><literal type="string" pos:line="117" pos:column="14">"bind plugin: Found &lt;statistics&gt; tag with version `%s'. "<pos:position pos:line="117" pos:column="77"/></literal>
             <literal type="string" pos:line="118" pos:column="14">"Unfortunately I have no clue how to parse that. "<pos:position pos:line="118" pos:column="64"/></literal>
             <literal type="string" pos:line="119" pos:column="14">"Please open a bug report for this."<pos:position pos:line="119" pos:column="50"/></literal></expr></argument>,
             <argument><expr><name pos:line="120" pos:column="14">attr_version<pos:position pos:line="120" pos:column="26"/></name></expr></argument>)<pos:position pos:line="120" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="121" pos:column="7">xmlFree<pos:position pos:line="121" pos:column="14"/></name><argument_list pos:line="121" pos:column="14">(<argument><expr><name pos:line="121" pos:column="15">attr_version<pos:position pos:line="121" pos:column="27"/></name></expr></argument>)<pos:position pos:line="121" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="29"/></expr_stmt>
      <continue pos:line="122" pos:column="7">continue;<pos:position pos:line="122" pos:column="16"/></continue>
    }<pos:position pos:line="123" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name pos:line="125" pos:column="5">ret<pos:position pos:line="125" pos:column="8"/></name> <operator pos:line="125" pos:column="9">=<pos:position pos:line="125" pos:column="10"/></operator> <call><name pos:line="125" pos:column="11">bind_xml_stats<pos:position pos:line="125" pos:column="25"/></name><argument_list pos:line="125" pos:column="25">(<argument><expr><name pos:line="125" pos:column="26">parsed_version<pos:position pos:line="125" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="42">doc<pos:position pos:line="125" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="47">xpathCtx<pos:position pos:line="125" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="57">node<pos:position pos:line="125" pos:column="61"/></name></expr></argument>)<pos:position pos:line="125" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="63"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="127" pos:column="5">xmlFree<pos:position pos:line="127" pos:column="12"/></name><argument_list pos:line="127" pos:column="12">(<argument><expr><name pos:line="127" pos:column="13">attr_version<pos:position pos:line="127" pos:column="25"/></name></expr></argument>)<pos:position pos:line="127" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="27"/></expr_stmt>
    <comment type="block" pos:line="128" pos:column="5">/* One &lt;statistics&gt; node ought to be enough. */</comment>
    <break pos:line="129" pos:column="5">break;<pos:position pos:line="129" pos:column="11"/></break>
  }<pos:position pos:line="130" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="132" pos:column="3">xmlXPathFreeObject<pos:position pos:line="132" pos:column="21"/></name><argument_list pos:line="132" pos:column="21">(<argument><expr><name pos:line="132" pos:column="22">xpathObj<pos:position pos:line="132" pos:column="30"/></name></expr></argument>)<pos:position pos:line="132" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="133" pos:column="3">xmlXPathFreeContext<pos:position pos:line="133" pos:column="22"/></name><argument_list pos:line="133" pos:column="22">(<argument><expr><name pos:line="133" pos:column="23">xpathCtx<pos:position pos:line="133" pos:column="31"/></name></expr></argument>)<pos:position pos:line="133" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="134" pos:column="3">xmlFreeDoc<pos:position pos:line="134" pos:column="13"/></name><argument_list pos:line="134" pos:column="13">(<argument><expr><name pos:line="134" pos:column="14">doc<pos:position pos:line="134" pos:column="17"/></name></expr></argument>)<pos:position pos:line="134" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="19"/></expr_stmt>

  <return pos:line="136" pos:column="3">return <expr><operator pos:line="136" pos:column="10">(<pos:position pos:line="136" pos:column="11"/></operator><name pos:line="136" pos:column="11">ret<pos:position pos:line="136" pos:column="14"/></name><operator pos:line="136" pos:column="14">)<pos:position pos:line="136" pos:column="15"/></operator></expr>;<pos:position pos:line="136" pos:column="16"/></return>
}<pos:position pos:line="137" pos:column="2"/></block></function></unit>

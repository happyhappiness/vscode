<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1838_collectd-4.10.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">iptcc_compile_table_prep<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">TC_HANDLE_T<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">h<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">unsigned<pos:position pos:line="1" pos:column="60"/></name> <name pos:line="1" pos:column="61">int<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">size<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">chain_head<pos:position pos:line="3" pos:column="26"/></name></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type><name pos:line="3" pos:column="28">c<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">int<pos:position pos:line="4" pos:column="21"/></name></type> <name pos:line="4" pos:column="22">offset<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><literal type="number" pos:line="4" pos:column="31">0<pos:position pos:line="4" pos:column="32"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="34">num<pos:position pos:line="4" pos:column="37"/></name> <init pos:line="4" pos:column="38">= <expr><literal type="number" pos:line="4" pos:column="40">0<pos:position pos:line="4" pos:column="41"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">ret<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><literal type="number" pos:line="5" pos:column="19">0<pos:position pos:line="5" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>

	<comment type="block" pos:line="7" pos:column="9">/* First pass: calculate offset for every rule */</comment>
	<macro><name pos:line="8" pos:column="9">list_for_each_entry<pos:position pos:line="8" pos:column="28"/></name><argument_list pos:line="8" pos:column="28">(<argument pos:line="8" pos:column="29">c<pos:position pos:line="8" pos:column="30"/></argument>, <argument pos:line="8" pos:column="32">&amp;h-&gt;chains<pos:position pos:line="8" pos:column="42"/></argument>, <argument pos:line="8" pos:column="44">list<pos:position pos:line="8" pos:column="48"/></argument>)<pos:position pos:line="8" pos:column="49"/></argument_list></macro> <block pos:line="8" pos:column="50">{
		<expr_stmt><expr><name pos:line="9" pos:column="17">ret<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">=<pos:position pos:line="9" pos:column="22"/></operator> <call><name pos:line="9" pos:column="23">iptcc_compile_chain_offsets<pos:position pos:line="9" pos:column="50"/></name><argument_list pos:line="9" pos:column="50">(<argument><expr><name pos:line="9" pos:column="51">h<pos:position pos:line="9" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="54">c<pos:position pos:line="9" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="57">&amp;<pos:position pos:line="9" pos:column="62"/></operator><name pos:line="9" pos:column="58">offset<pos:position pos:line="9" pos:column="64"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="66">&amp;<pos:position pos:line="9" pos:column="71"/></operator><name pos:line="9" pos:column="67">num<pos:position pos:line="9" pos:column="70"/></name></expr></argument>)<pos:position pos:line="9" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="72"/></expr_stmt>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><name pos:line="10" pos:column="21">ret<pos:position pos:line="10" pos:column="24"/></name> <operator pos:line="10" pos:column="25">&lt;<pos:position pos:line="10" pos:column="29"/></operator> <literal type="number" pos:line="10" pos:column="27">0<pos:position pos:line="10" pos:column="28"/></literal></expr>)<pos:position pos:line="10" pos:column="29"/></condition><then pos:line="10" pos:column="29">
			<block type="pseudo"><return pos:line="11" pos:column="25">return <expr><name pos:line="11" pos:column="32">ret<pos:position pos:line="11" pos:column="35"/></name></expr>;<pos:position pos:line="11" pos:column="36"/></return></block></then></if>
	}<pos:position pos:line="12" pos:column="10"/></block>

	<comment type="block" pos:line="14" pos:column="9">/* Append one error rule at end of chain */</comment>
	<expr_stmt><expr><name pos:line="15" pos:column="9">num<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">++<pos:position pos:line="15" pos:column="14"/></operator></expr>;<pos:position pos:line="15" pos:column="15"/></expr_stmt>
	<expr_stmt><expr><name pos:line="16" pos:column="9">offset<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">+=<pos:position pos:line="16" pos:column="18"/></operator> <sizeof pos:line="16" pos:column="19">sizeof<argument_list pos:line="16" pos:column="25">(<argument><expr><name pos:line="16" pos:column="26">STRUCT_ENTRY<pos:position pos:line="16" pos:column="38"/></name></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></sizeof>
		  <operator pos:line="17" pos:column="19">+<pos:position pos:line="17" pos:column="20"/></operator> <call><name pos:line="17" pos:column="21">ALIGN<pos:position pos:line="17" pos:column="26"/></name><argument_list pos:line="17" pos:column="26">(<argument><expr><sizeof pos:line="17" pos:column="27">sizeof<argument_list pos:line="17" pos:column="33">(<argument><expr pos:line="17" pos:column="34">struct <name pos:line="17" pos:column="41">ipt_error_target<pos:position pos:line="17" pos:column="57"/></name></expr></argument>)<pos:position pos:line="17" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="60"/></expr_stmt>

	<comment type="block" pos:line="19" pos:column="9">/* ruleset size is now in offset */</comment>
	<expr_stmt><expr><operator pos:line="20" pos:column="9">*<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="10">size<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <name pos:line="20" pos:column="17">offset<pos:position pos:line="20" pos:column="23"/></name></expr>;<pos:position pos:line="20" pos:column="24"/></expr_stmt>
	<return pos:line="21" pos:column="9">return <expr><name pos:line="21" pos:column="16">num<pos:position pos:line="21" pos:column="19"/></name></expr>;<pos:position pos:line="21" pos:column="20"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

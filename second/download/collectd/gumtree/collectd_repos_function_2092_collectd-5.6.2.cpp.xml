<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2092_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">wt_callback_init<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">wt_callback<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">cb<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list> <block pos:line="1" pos:column="53">{
  <decl_stmt><decl><type><name><name pos:line="2" pos:column="3">struct<pos:position pos:line="2" pos:column="9"/></name> <name pos:line="2" pos:column="10">addrinfo<pos:position pos:line="2" pos:column="18"/></name></name> <modifier pos:line="2" pos:column="19">*<pos:position pos:line="2" pos:column="20"/></modifier></type><name pos:line="2" pos:column="20">ai_list<pos:position pos:line="2" pos:column="27"/></name></decl>;<pos:position pos:line="2" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">status<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>

  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">node<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><ternary><condition><expr><name><name pos:line="5" pos:column="22">cb<pos:position pos:line="5" pos:column="24"/></name><operator pos:line="5" pos:column="24">-&gt;<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="26">node<pos:position pos:line="5" pos:column="30"/></name></name></expr> ?<pos:position pos:line="5" pos:column="32"/></condition><then pos:line="5" pos:column="32"> <expr><name><name pos:line="5" pos:column="33">cb<pos:position pos:line="5" pos:column="35"/></name><operator pos:line="5" pos:column="35">-&gt;<pos:position pos:line="5" pos:column="40"/></operator><name pos:line="5" pos:column="37">node<pos:position pos:line="5" pos:column="41"/></name></name></expr> <pos:position pos:line="5" pos:column="42"/></then><else pos:line="5" pos:column="42">: <expr><name pos:line="5" pos:column="44">WT_DEFAULT_NODE<pos:position pos:line="5" pos:column="59"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="5" pos:column="60"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">service<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><ternary><condition><expr><name><name pos:line="6" pos:column="25">cb<pos:position pos:line="6" pos:column="27"/></name><operator pos:line="6" pos:column="27">-&gt;<pos:position pos:line="6" pos:column="32"/></operator><name pos:line="6" pos:column="29">service<pos:position pos:line="6" pos:column="36"/></name></name></expr> ?<pos:position pos:line="6" pos:column="38"/></condition><then pos:line="6" pos:column="38"> <expr><name><name pos:line="6" pos:column="39">cb<pos:position pos:line="6" pos:column="41"/></name><operator pos:line="6" pos:column="41">-&gt;<pos:position pos:line="6" pos:column="46"/></operator><name pos:line="6" pos:column="43">service<pos:position pos:line="6" pos:column="50"/></name></name></expr> <pos:position pos:line="6" pos:column="51"/></then><else pos:line="6" pos:column="51">: <expr><name pos:line="6" pos:column="53">WT_DEFAULT_SERVICE<pos:position pos:line="6" pos:column="71"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="6" pos:column="72"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name><name pos:line="8" pos:column="7">cb<pos:position pos:line="8" pos:column="9"/></name><operator pos:line="8" pos:column="9">-&gt;<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="11">sock_fd<pos:position pos:line="8" pos:column="18"/></name></name> <operator pos:line="8" pos:column="19">&gt;<pos:position pos:line="8" pos:column="23"/></operator> <literal type="number" pos:line="8" pos:column="21">0<pos:position pos:line="8" pos:column="22"/></literal></expr>)<pos:position pos:line="8" pos:column="23"/></condition><then pos:line="8" pos:column="23">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><literal type="number" pos:line="9" pos:column="12">0<pos:position pos:line="9" pos:column="13"/></literal></expr>;<pos:position pos:line="9" pos:column="14"/></return></block></then></if>

  <decl_stmt><decl><type><name><name pos:line="11" pos:column="3">struct<pos:position pos:line="11" pos:column="9"/></name> <name pos:line="11" pos:column="10">addrinfo<pos:position pos:line="11" pos:column="18"/></name></name></type> <name pos:line="11" pos:column="19">ai_hints<pos:position pos:line="11" pos:column="27"/></name> <init pos:line="11" pos:column="28">= <expr><block pos:line="11" pos:column="30">{<expr><operator pos:line="11" pos:column="31">.<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="32">ai_family<pos:position pos:line="11" pos:column="41"/></name> <operator pos:line="11" pos:column="42">=<pos:position pos:line="11" pos:column="43"/></operator> <name pos:line="11" pos:column="44">AF_UNSPEC<pos:position pos:line="11" pos:column="53"/></name></expr>,
                              <expr><operator pos:line="12" pos:column="31">.<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="32">ai_flags<pos:position pos:line="12" pos:column="40"/></name> <operator pos:line="12" pos:column="41">=<pos:position pos:line="12" pos:column="42"/></operator> <name pos:line="12" pos:column="43">AI_ADDRCONFIG<pos:position pos:line="12" pos:column="56"/></name></expr>,
                              <expr><operator pos:line="13" pos:column="31">.<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="32">ai_socktype<pos:position pos:line="13" pos:column="43"/></name> <operator pos:line="13" pos:column="44">=<pos:position pos:line="13" pos:column="45"/></operator> <name pos:line="13" pos:column="46">SOCK_STREAM<pos:position pos:line="13" pos:column="57"/></name></expr>}<pos:position pos:line="13" pos:column="58"/></block></expr></init></decl>;<pos:position pos:line="13" pos:column="59"/></decl_stmt>

  <expr_stmt><expr><name pos:line="15" pos:column="3">status<pos:position pos:line="15" pos:column="9"/></name> <operator pos:line="15" pos:column="10">=<pos:position pos:line="15" pos:column="11"/></operator> <call><name pos:line="15" pos:column="12">getaddrinfo<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">(<argument><expr><name pos:line="15" pos:column="24">node<pos:position pos:line="15" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="30">service<pos:position pos:line="15" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="39">&amp;<pos:position pos:line="15" pos:column="44"/></operator><name pos:line="15" pos:column="40">ai_hints<pos:position pos:line="15" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="50">&amp;<pos:position pos:line="15" pos:column="55"/></operator><name pos:line="15" pos:column="51">ai_list<pos:position pos:line="15" pos:column="58"/></name></expr></argument>)<pos:position pos:line="15" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="60"/></expr_stmt>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">status<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">!=<pos:position pos:line="16" pos:column="16"/></operator> <literal type="number" pos:line="16" pos:column="17">0<pos:position pos:line="16" pos:column="18"/></literal></expr>)<pos:position pos:line="16" pos:column="19"/></condition><then pos:line="16" pos:column="19"> <block pos:line="16" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">ERROR<pos:position pos:line="17" pos:column="10"/></name><argument_list pos:line="17" pos:column="10">(<argument><expr><literal type="string" pos:line="17" pos:column="11">"write_tsdb plugin: getaddrinfo (%s, %s) failed: %s"<pos:position pos:line="17" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="65">node<pos:position pos:line="17" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="71">service<pos:position pos:line="17" pos:column="78"/></name></expr></argument>,
          <argument><expr><call><name pos:line="18" pos:column="11">gai_strerror<pos:position pos:line="18" pos:column="23"/></name><argument_list pos:line="18" pos:column="23">(<argument><expr><name pos:line="18" pos:column="24">status<pos:position pos:line="18" pos:column="30"/></name></expr></argument>)<pos:position pos:line="18" pos:column="31"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="33"/></expr_stmt>
    <return pos:line="19" pos:column="5">return <expr><operator pos:line="19" pos:column="12">-<pos:position pos:line="19" pos:column="13"/></operator><literal type="number" pos:line="19" pos:column="13">1<pos:position pos:line="19" pos:column="14"/></literal></expr>;<pos:position pos:line="19" pos:column="15"/></return>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="22" pos:column="3">assert<pos:position pos:line="22" pos:column="9"/></name><argument_list pos:line="22" pos:column="9">(<argument><expr><name pos:line="22" pos:column="10">ai_list<pos:position pos:line="22" pos:column="17"/></name> <operator pos:line="22" pos:column="18">!=<pos:position pos:line="22" pos:column="20"/></operator> <name pos:line="22" pos:column="21">NULL<pos:position pos:line="22" pos:column="25"/></name></expr></argument>)<pos:position pos:line="22" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="27"/></expr_stmt>
  <for pos:line="23" pos:column="3">for <control pos:line="23" pos:column="7">(<init><decl><type><name><name pos:line="23" pos:column="8">struct<pos:position pos:line="23" pos:column="14"/></name> <name pos:line="23" pos:column="15">addrinfo<pos:position pos:line="23" pos:column="23"/></name></name> <modifier pos:line="23" pos:column="24">*<pos:position pos:line="23" pos:column="25"/></modifier><name pos:line="23" pos:column="25">ai_ptr<pos:position pos:line="23" pos:column="31"/></name></type> <init pos:line="23" pos:column="32">= <expr><name pos:line="23" pos:column="34">ai_list<pos:position pos:line="23" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="23" pos:column="42"/></init> <condition><expr><name pos:line="23" pos:column="43">ai_ptr<pos:position pos:line="23" pos:column="49"/></name> <operator pos:line="23" pos:column="50">!=<pos:position pos:line="23" pos:column="52"/></operator> <name pos:line="23" pos:column="53">NULL<pos:position pos:line="23" pos:column="57"/></name></expr>;<pos:position pos:line="23" pos:column="58"/></condition>
       <incr><expr><name pos:line="24" pos:column="8">ai_ptr<pos:position pos:line="24" pos:column="14"/></name> <operator pos:line="24" pos:column="15">=<pos:position pos:line="24" pos:column="16"/></operator> <name><name pos:line="24" pos:column="17">ai_ptr<pos:position pos:line="24" pos:column="23"/></name><operator pos:line="24" pos:column="23">-&gt;<pos:position pos:line="24" pos:column="28"/></operator><name pos:line="24" pos:column="25">ai_next<pos:position pos:line="24" pos:column="32"/></name></name></expr></incr>)<pos:position pos:line="24" pos:column="33"/></control> <block pos:line="24" pos:column="34">{
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">cb<pos:position pos:line="25" pos:column="7"/></name><operator pos:line="25" pos:column="7">-&gt;<pos:position pos:line="25" pos:column="12"/></operator><name pos:line="25" pos:column="9">sock_fd<pos:position pos:line="25" pos:column="16"/></name></name> <operator pos:line="25" pos:column="17">=<pos:position pos:line="25" pos:column="18"/></operator>
        <call><name pos:line="26" pos:column="9">socket<pos:position pos:line="26" pos:column="15"/></name><argument_list pos:line="26" pos:column="15">(<argument><expr><name><name pos:line="26" pos:column="16">ai_ptr<pos:position pos:line="26" pos:column="22"/></name><operator pos:line="26" pos:column="22">-&gt;<pos:position pos:line="26" pos:column="27"/></operator><name pos:line="26" pos:column="24">ai_family<pos:position pos:line="26" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="35">ai_ptr<pos:position pos:line="26" pos:column="41"/></name><operator pos:line="26" pos:column="41">-&gt;<pos:position pos:line="26" pos:column="46"/></operator><name pos:line="26" pos:column="43">ai_socktype<pos:position pos:line="26" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="56">ai_ptr<pos:position pos:line="26" pos:column="62"/></name><operator pos:line="26" pos:column="62">-&gt;<pos:position pos:line="26" pos:column="67"/></operator><name pos:line="26" pos:column="64">ai_protocol<pos:position pos:line="26" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="77"/></expr_stmt>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name><name pos:line="27" pos:column="9">cb<pos:position pos:line="27" pos:column="11"/></name><operator pos:line="27" pos:column="11">-&gt;<pos:position pos:line="27" pos:column="16"/></operator><name pos:line="27" pos:column="13">sock_fd<pos:position pos:line="27" pos:column="20"/></name></name> <operator pos:line="27" pos:column="21">&lt;<pos:position pos:line="27" pos:column="25"/></operator> <literal type="number" pos:line="27" pos:column="23">0<pos:position pos:line="27" pos:column="24"/></literal></expr>)<pos:position pos:line="27" pos:column="25"/></condition><then pos:line="27" pos:column="25">
      <block type="pseudo"><continue pos:line="28" pos:column="7">continue;<pos:position pos:line="28" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><call><name pos:line="30" pos:column="5">set_sock_opts<pos:position pos:line="30" pos:column="18"/></name><argument_list pos:line="30" pos:column="18">(<argument><expr><name><name pos:line="30" pos:column="19">cb<pos:position pos:line="30" pos:column="21"/></name><operator pos:line="30" pos:column="21">-&gt;<pos:position pos:line="30" pos:column="26"/></operator><name pos:line="30" pos:column="23">sock_fd<pos:position pos:line="30" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="32"/></expr_stmt>

    <expr_stmt><expr><name pos:line="32" pos:column="5">status<pos:position pos:line="32" pos:column="11"/></name> <operator pos:line="32" pos:column="12">=<pos:position pos:line="32" pos:column="13"/></operator> <call><name pos:line="32" pos:column="14">connect<pos:position pos:line="32" pos:column="21"/></name><argument_list pos:line="32" pos:column="21">(<argument><expr><name><name pos:line="32" pos:column="22">cb<pos:position pos:line="32" pos:column="24"/></name><operator pos:line="32" pos:column="24">-&gt;<pos:position pos:line="32" pos:column="29"/></operator><name pos:line="32" pos:column="26">sock_fd<pos:position pos:line="32" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="35">ai_ptr<pos:position pos:line="32" pos:column="41"/></name><operator pos:line="32" pos:column="41">-&gt;<pos:position pos:line="32" pos:column="46"/></operator><name pos:line="32" pos:column="43">ai_addr<pos:position pos:line="32" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="52">ai_ptr<pos:position pos:line="32" pos:column="58"/></name><operator pos:line="32" pos:column="58">-&gt;<pos:position pos:line="32" pos:column="63"/></operator><name pos:line="32" pos:column="60">ai_addrlen<pos:position pos:line="32" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="72"/></expr_stmt>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name pos:line="33" pos:column="9">status<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">!=<pos:position pos:line="33" pos:column="18"/></operator> <literal type="number" pos:line="33" pos:column="19">0<pos:position pos:line="33" pos:column="20"/></literal></expr>)<pos:position pos:line="33" pos:column="21"/></condition><then pos:line="33" pos:column="21"> <block pos:line="33" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="34" pos:column="7">close<pos:position pos:line="34" pos:column="12"/></name><argument_list pos:line="34" pos:column="12">(<argument><expr><name><name pos:line="34" pos:column="13">cb<pos:position pos:line="34" pos:column="15"/></name><operator pos:line="34" pos:column="15">-&gt;<pos:position pos:line="34" pos:column="20"/></operator><name pos:line="34" pos:column="17">sock_fd<pos:position pos:line="34" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="35" pos:column="7">cb<pos:position pos:line="35" pos:column="9"/></name><operator pos:line="35" pos:column="9">-&gt;<pos:position pos:line="35" pos:column="14"/></operator><name pos:line="35" pos:column="11">sock_fd<pos:position pos:line="35" pos:column="18"/></name></name> <operator pos:line="35" pos:column="19">=<pos:position pos:line="35" pos:column="20"/></operator> <operator pos:line="35" pos:column="21">-<pos:position pos:line="35" pos:column="22"/></operator><literal type="number" pos:line="35" pos:column="22">1<pos:position pos:line="35" pos:column="23"/></literal></expr>;<pos:position pos:line="35" pos:column="24"/></expr_stmt>
      <continue pos:line="36" pos:column="7">continue;<pos:position pos:line="36" pos:column="16"/></continue>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>

    <break pos:line="39" pos:column="5">break;<pos:position pos:line="39" pos:column="11"/></break>
  }<pos:position pos:line="40" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="42" pos:column="3">freeaddrinfo<pos:position pos:line="42" pos:column="15"/></name><argument_list pos:line="42" pos:column="15">(<argument><expr><name pos:line="42" pos:column="16">ai_list<pos:position pos:line="42" pos:column="23"/></name></expr></argument>)<pos:position pos:line="42" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="25"/></expr_stmt>

  <if pos:line="44" pos:column="3">if <condition pos:line="44" pos:column="6">(<expr><name><name pos:line="44" pos:column="7">cb<pos:position pos:line="44" pos:column="9"/></name><operator pos:line="44" pos:column="9">-&gt;<pos:position pos:line="44" pos:column="14"/></operator><name pos:line="44" pos:column="11">sock_fd<pos:position pos:line="44" pos:column="18"/></name></name> <operator pos:line="44" pos:column="19">&lt;<pos:position pos:line="44" pos:column="23"/></operator> <literal type="number" pos:line="44" pos:column="21">0<pos:position pos:line="44" pos:column="22"/></literal></expr>)<pos:position pos:line="44" pos:column="23"/></condition><then pos:line="44" pos:column="23"> <block pos:line="44" pos:column="24">{
    <decl_stmt><decl><type><name pos:line="45" pos:column="5">char<pos:position pos:line="45" pos:column="9"/></name></type> <name><name pos:line="45" pos:column="10">errbuf<pos:position pos:line="45" pos:column="16"/></name><index pos:line="45" pos:column="16">[<expr><literal type="number" pos:line="45" pos:column="17">1024<pos:position pos:line="45" pos:column="21"/></literal></expr>]<pos:position pos:line="45" pos:column="22"/></index></name></decl>;<pos:position pos:line="45" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">ERROR<pos:position pos:line="46" pos:column="10"/></name><argument_list pos:line="46" pos:column="10">(<argument><expr><literal type="string" pos:line="46" pos:column="11">"write_tsdb plugin: Connecting to %s:%s failed. "<pos:position pos:line="46" pos:column="60"/></literal>
          <literal type="string" pos:line="47" pos:column="11">"The last error was: %s"<pos:position pos:line="47" pos:column="35"/></literal></expr></argument>,
          <argument><expr><name pos:line="48" pos:column="11">node<pos:position pos:line="48" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="17">service<pos:position pos:line="48" pos:column="24"/></name></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="26">sstrerror<pos:position pos:line="48" pos:column="35"/></name><argument_list pos:line="48" pos:column="35">(<argument><expr><name pos:line="48" pos:column="36">errno<pos:position pos:line="48" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="43">errbuf<pos:position pos:line="48" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="48" pos:column="51">sizeof<argument_list pos:line="48" pos:column="57">(<argument><expr><name pos:line="48" pos:column="58">errbuf<pos:position pos:line="48" pos:column="64"/></name></expr></argument>)<pos:position pos:line="48" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="48" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="48" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="68"/></expr_stmt>
    <return pos:line="49" pos:column="5">return <expr><operator pos:line="49" pos:column="12">-<pos:position pos:line="49" pos:column="13"/></operator><literal type="number" pos:line="49" pos:column="13">1<pos:position pos:line="49" pos:column="14"/></literal></expr>;<pos:position pos:line="49" pos:column="15"/></return>
  }<pos:position pos:line="50" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="52" pos:column="3">wt_reset_buffer<pos:position pos:line="52" pos:column="18"/></name><argument_list pos:line="52" pos:column="18">(<argument><expr><name pos:line="52" pos:column="19">cb<pos:position pos:line="52" pos:column="21"/></name></expr></argument>)<pos:position pos:line="52" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="23"/></expr_stmt>

  <return pos:line="54" pos:column="3">return <expr><literal type="number" pos:line="54" pos:column="10">0<pos:position pos:line="54" pos:column="11"/></literal></expr>;<pos:position pos:line="54" pos:column="12"/></return>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

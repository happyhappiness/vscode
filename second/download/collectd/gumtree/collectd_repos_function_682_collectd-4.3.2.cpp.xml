<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_682_collectd-4.3.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">network_notification<pos:position pos:line="1" pos:column="32"/></name> <parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">notification_t<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">n<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type>  <name><name pos:line="3" pos:column="9">buffer<pos:position pos:line="3" pos:column="15"/></name><index pos:line="3" pos:column="15">[<expr><name pos:line="3" pos:column="16">BUFF_SIZE<pos:position pos:line="3" pos:column="25"/></name></expr>]<pos:position pos:line="3" pos:column="26"/></index></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">buffer_ptr<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><name pos:line="4" pos:column="22">buffer<pos:position pos:line="4" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type>   <name pos:line="5" pos:column="9">buffer_free<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><sizeof pos:line="5" pos:column="23">sizeof <argument_list pos:line="5" pos:column="30">(<argument><expr><name pos:line="5" pos:column="31">buffer<pos:position pos:line="5" pos:column="37"/></name></expr></argument>)<pos:position pos:line="5" pos:column="38"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type>   <name pos:line="6" pos:column="9">status<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">memset<pos:position pos:line="8" pos:column="9"/></name> <argument_list pos:line="8" pos:column="10">(<argument><expr><name pos:line="8" pos:column="11">buffer<pos:position pos:line="8" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="8" pos:column="19">'\0'<pos:position pos:line="8" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="25">sizeof <argument_list pos:line="8" pos:column="32">(<argument><expr><name pos:line="8" pos:column="33">buffer<pos:position pos:line="8" pos:column="39"/></name></expr></argument>)<pos:position pos:line="8" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="42"/></expr_stmt>


  <expr_stmt><expr><name pos:line="11" pos:column="3">status<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">=<pos:position pos:line="11" pos:column="11"/></operator> <call><name pos:line="11" pos:column="12">write_part_number<pos:position pos:line="11" pos:column="29"/></name> <argument_list pos:line="11" pos:column="30">(<argument><expr><operator pos:line="11" pos:column="31">&amp;<pos:position pos:line="11" pos:column="36"/></operator><name pos:line="11" pos:column="32">buffer_ptr<pos:position pos:line="11" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="44">&amp;<pos:position pos:line="11" pos:column="49"/></operator><name pos:line="11" pos:column="45">buffer_free<pos:position pos:line="11" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="58">TYPE_TIME<pos:position pos:line="11" pos:column="67"/></name></expr></argument>,
      <argument><expr><operator pos:line="12" pos:column="7">(<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">uint64_t<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">)<pos:position pos:line="12" pos:column="17"/></operator> <name><name pos:line="12" pos:column="18">n<pos:position pos:line="12" pos:column="19"/></name><operator pos:line="12" pos:column="19">-&gt;<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="21">time<pos:position pos:line="12" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="27"/></expr_stmt>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">status<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">!=<pos:position pos:line="13" pos:column="16"/></operator> <literal type="number" pos:line="13" pos:column="17">0<pos:position pos:line="13" pos:column="18"/></literal></expr>)<pos:position pos:line="13" pos:column="19"/></condition><then pos:line="13" pos:column="19">
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">(<pos:position pos:line="14" pos:column="13"/></operator><operator pos:line="14" pos:column="13">-<pos:position pos:line="14" pos:column="14"/></operator><literal type="number" pos:line="14" pos:column="14">1<pos:position pos:line="14" pos:column="15"/></literal><operator pos:line="14" pos:column="15">)<pos:position pos:line="14" pos:column="16"/></operator></expr>;<pos:position pos:line="14" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="16" pos:column="3">status<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">=<pos:position pos:line="16" pos:column="11"/></operator> <call><name pos:line="16" pos:column="12">write_part_number<pos:position pos:line="16" pos:column="29"/></name> <argument_list pos:line="16" pos:column="30">(<argument><expr><operator pos:line="16" pos:column="31">&amp;<pos:position pos:line="16" pos:column="36"/></operator><name pos:line="16" pos:column="32">buffer_ptr<pos:position pos:line="16" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="44">&amp;<pos:position pos:line="16" pos:column="49"/></operator><name pos:line="16" pos:column="45">buffer_free<pos:position pos:line="16" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="58">TYPE_SEVERITY<pos:position pos:line="16" pos:column="71"/></name></expr></argument>,
      <argument><expr><operator pos:line="17" pos:column="7">(<pos:position pos:line="17" pos:column="8"/></operator><name pos:line="17" pos:column="8">uint64_t<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">)<pos:position pos:line="17" pos:column="17"/></operator> <name><name pos:line="17" pos:column="18">n<pos:position pos:line="17" pos:column="19"/></name><operator pos:line="17" pos:column="19">-&gt;<pos:position pos:line="17" pos:column="24"/></operator><name pos:line="17" pos:column="21">severity<pos:position pos:line="17" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="31"/></expr_stmt>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name pos:line="18" pos:column="7">status<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">!=<pos:position pos:line="18" pos:column="16"/></operator> <literal type="number" pos:line="18" pos:column="17">0<pos:position pos:line="18" pos:column="18"/></literal></expr>)<pos:position pos:line="18" pos:column="19"/></condition><then pos:line="18" pos:column="19">
    <block type="pseudo"><return pos:line="19" pos:column="5">return <expr><operator pos:line="19" pos:column="12">(<pos:position pos:line="19" pos:column="13"/></operator><operator pos:line="19" pos:column="13">-<pos:position pos:line="19" pos:column="14"/></operator><literal type="number" pos:line="19" pos:column="14">1<pos:position pos:line="19" pos:column="15"/></literal><operator pos:line="19" pos:column="15">)<pos:position pos:line="19" pos:column="16"/></operator></expr>;<pos:position pos:line="19" pos:column="17"/></return></block></then></if>

  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><call><name pos:line="21" pos:column="7">strlen<pos:position pos:line="21" pos:column="13"/></name> <argument_list pos:line="21" pos:column="14">(<argument><expr><name><name pos:line="21" pos:column="15">n<pos:position pos:line="21" pos:column="16"/></name><operator pos:line="21" pos:column="16">-&gt;<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="18">host<pos:position pos:line="21" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="23"/></argument_list></call> <operator pos:line="21" pos:column="24">&gt;<pos:position pos:line="21" pos:column="28"/></operator> <literal type="number" pos:line="21" pos:column="26">0<pos:position pos:line="21" pos:column="27"/></literal></expr>)<pos:position pos:line="21" pos:column="28"/></condition><then pos:line="21" pos:column="28">
  <block pos:line="22" pos:column="3">{
    <expr_stmt><expr><name pos:line="23" pos:column="5">status<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <call><name pos:line="23" pos:column="14">write_part_string<pos:position pos:line="23" pos:column="31"/></name> <argument_list pos:line="23" pos:column="32">(<argument><expr><operator pos:line="23" pos:column="33">&amp;<pos:position pos:line="23" pos:column="38"/></operator><name pos:line="23" pos:column="34">buffer_ptr<pos:position pos:line="23" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="46">&amp;<pos:position pos:line="23" pos:column="51"/></operator><name pos:line="23" pos:column="47">buffer_free<pos:position pos:line="23" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="60">TYPE_HOST<pos:position pos:line="23" pos:column="69"/></name></expr></argument>,
	<argument><expr><name><name pos:line="24" pos:column="9">n<pos:position pos:line="24" pos:column="10"/></name><operator pos:line="24" pos:column="10">-&gt;<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="12">host<pos:position pos:line="24" pos:column="16"/></name></name></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="18">strlen<pos:position pos:line="24" pos:column="24"/></name> <argument_list pos:line="24" pos:column="25">(<argument><expr><name><name pos:line="24" pos:column="26">n<pos:position pos:line="24" pos:column="27"/></name><operator pos:line="24" pos:column="27">-&gt;<pos:position pos:line="24" pos:column="32"/></operator><name pos:line="24" pos:column="29">host<pos:position pos:line="24" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="34"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="36"/></expr_stmt>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">status<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">!=<pos:position pos:line="25" pos:column="18"/></operator> <literal type="number" pos:line="25" pos:column="19">0<pos:position pos:line="25" pos:column="20"/></literal></expr>)<pos:position pos:line="25" pos:column="21"/></condition><then pos:line="25" pos:column="21">
      <block type="pseudo"><return pos:line="26" pos:column="7">return <expr><operator pos:line="26" pos:column="14">(<pos:position pos:line="26" pos:column="15"/></operator><operator pos:line="26" pos:column="15">-<pos:position pos:line="26" pos:column="16"/></operator><literal type="number" pos:line="26" pos:column="16">1<pos:position pos:line="26" pos:column="17"/></literal><operator pos:line="26" pos:column="17">)<pos:position pos:line="26" pos:column="18"/></operator></expr>;<pos:position pos:line="26" pos:column="19"/></return></block></then></if>
  }<pos:position pos:line="27" pos:column="4"/></block></then></if>

  <if pos:line="29" pos:column="3">if <condition pos:line="29" pos:column="6">(<expr><call><name pos:line="29" pos:column="7">strlen<pos:position pos:line="29" pos:column="13"/></name> <argument_list pos:line="29" pos:column="14">(<argument><expr><name><name pos:line="29" pos:column="15">n<pos:position pos:line="29" pos:column="16"/></name><operator pos:line="29" pos:column="16">-&gt;<pos:position pos:line="29" pos:column="21"/></operator><name pos:line="29" pos:column="18">plugin<pos:position pos:line="29" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="25"/></argument_list></call> <operator pos:line="29" pos:column="26">&gt;<pos:position pos:line="29" pos:column="30"/></operator> <literal type="number" pos:line="29" pos:column="28">0<pos:position pos:line="29" pos:column="29"/></literal></expr>)<pos:position pos:line="29" pos:column="30"/></condition><then pos:line="29" pos:column="30">
  <block pos:line="30" pos:column="3">{
    <expr_stmt><expr><name pos:line="31" pos:column="5">status<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">=<pos:position pos:line="31" pos:column="13"/></operator> <call><name pos:line="31" pos:column="14">write_part_string<pos:position pos:line="31" pos:column="31"/></name> <argument_list pos:line="31" pos:column="32">(<argument><expr><operator pos:line="31" pos:column="33">&amp;<pos:position pos:line="31" pos:column="38"/></operator><name pos:line="31" pos:column="34">buffer_ptr<pos:position pos:line="31" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="46">&amp;<pos:position pos:line="31" pos:column="51"/></operator><name pos:line="31" pos:column="47">buffer_free<pos:position pos:line="31" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="60">TYPE_PLUGIN<pos:position pos:line="31" pos:column="71"/></name></expr></argument>,
	<argument><expr><name><name pos:line="32" pos:column="9">n<pos:position pos:line="32" pos:column="10"/></name><operator pos:line="32" pos:column="10">-&gt;<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="12">plugin<pos:position pos:line="32" pos:column="18"/></name></name></expr></argument>, <argument><expr><call><name pos:line="32" pos:column="20">strlen<pos:position pos:line="32" pos:column="26"/></name> <argument_list pos:line="32" pos:column="27">(<argument><expr><name><name pos:line="32" pos:column="28">n<pos:position pos:line="32" pos:column="29"/></name><operator pos:line="32" pos:column="29">-&gt;<pos:position pos:line="32" pos:column="34"/></operator><name pos:line="32" pos:column="31">plugin<pos:position pos:line="32" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="40"/></expr_stmt>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name pos:line="33" pos:column="9">status<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">!=<pos:position pos:line="33" pos:column="18"/></operator> <literal type="number" pos:line="33" pos:column="19">0<pos:position pos:line="33" pos:column="20"/></literal></expr>)<pos:position pos:line="33" pos:column="21"/></condition><then pos:line="33" pos:column="21">
      <block type="pseudo"><return pos:line="34" pos:column="7">return <expr><operator pos:line="34" pos:column="14">(<pos:position pos:line="34" pos:column="15"/></operator><operator pos:line="34" pos:column="15">-<pos:position pos:line="34" pos:column="16"/></operator><literal type="number" pos:line="34" pos:column="16">1<pos:position pos:line="34" pos:column="17"/></literal><operator pos:line="34" pos:column="17">)<pos:position pos:line="34" pos:column="18"/></operator></expr>;<pos:position pos:line="34" pos:column="19"/></return></block></then></if>
  }<pos:position pos:line="35" pos:column="4"/></block></then></if>

  <if pos:line="37" pos:column="3">if <condition pos:line="37" pos:column="6">(<expr><call><name pos:line="37" pos:column="7">strlen<pos:position pos:line="37" pos:column="13"/></name> <argument_list pos:line="37" pos:column="14">(<argument><expr><name><name pos:line="37" pos:column="15">n<pos:position pos:line="37" pos:column="16"/></name><operator pos:line="37" pos:column="16">-&gt;<pos:position pos:line="37" pos:column="21"/></operator><name pos:line="37" pos:column="18">plugin_instance<pos:position pos:line="37" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="34"/></argument_list></call> <operator pos:line="37" pos:column="35">&gt;<pos:position pos:line="37" pos:column="39"/></operator> <literal type="number" pos:line="37" pos:column="37">0<pos:position pos:line="37" pos:column="38"/></literal></expr>)<pos:position pos:line="37" pos:column="39"/></condition><then pos:line="37" pos:column="39">
  <block pos:line="38" pos:column="3">{
    <expr_stmt><expr><name pos:line="39" pos:column="5">status<pos:position pos:line="39" pos:column="11"/></name> <operator pos:line="39" pos:column="12">=<pos:position pos:line="39" pos:column="13"/></operator> <call><name pos:line="39" pos:column="14">write_part_string<pos:position pos:line="39" pos:column="31"/></name> <argument_list pos:line="39" pos:column="32">(<argument><expr><operator pos:line="39" pos:column="33">&amp;<pos:position pos:line="39" pos:column="38"/></operator><name pos:line="39" pos:column="34">buffer_ptr<pos:position pos:line="39" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="46">&amp;<pos:position pos:line="39" pos:column="51"/></operator><name pos:line="39" pos:column="47">buffer_free<pos:position pos:line="39" pos:column="58"/></name></expr></argument>,
	<argument><expr><name pos:line="40" pos:column="9">TYPE_PLUGIN_INSTANCE<pos:position pos:line="40" pos:column="29"/></name></expr></argument>,
	<argument><expr><name><name pos:line="41" pos:column="9">n<pos:position pos:line="41" pos:column="10"/></name><operator pos:line="41" pos:column="10">-&gt;<pos:position pos:line="41" pos:column="15"/></operator><name pos:line="41" pos:column="12">plugin_instance<pos:position pos:line="41" pos:column="27"/></name></name></expr></argument>, <argument><expr><call><name pos:line="41" pos:column="29">strlen<pos:position pos:line="41" pos:column="35"/></name> <argument_list pos:line="41" pos:column="36">(<argument><expr><name><name pos:line="41" pos:column="37">n<pos:position pos:line="41" pos:column="38"/></name><operator pos:line="41" pos:column="38">-&gt;<pos:position pos:line="41" pos:column="43"/></operator><name pos:line="41" pos:column="40">plugin_instance<pos:position pos:line="41" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="58"/></expr_stmt>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name pos:line="42" pos:column="9">status<pos:position pos:line="42" pos:column="15"/></name> <operator pos:line="42" pos:column="16">!=<pos:position pos:line="42" pos:column="18"/></operator> <literal type="number" pos:line="42" pos:column="19">0<pos:position pos:line="42" pos:column="20"/></literal></expr>)<pos:position pos:line="42" pos:column="21"/></condition><then pos:line="42" pos:column="21">
      <block type="pseudo"><return pos:line="43" pos:column="7">return <expr><operator pos:line="43" pos:column="14">(<pos:position pos:line="43" pos:column="15"/></operator><operator pos:line="43" pos:column="15">-<pos:position pos:line="43" pos:column="16"/></operator><literal type="number" pos:line="43" pos:column="16">1<pos:position pos:line="43" pos:column="17"/></literal><operator pos:line="43" pos:column="17">)<pos:position pos:line="43" pos:column="18"/></operator></expr>;<pos:position pos:line="43" pos:column="19"/></return></block></then></if>
  }<pos:position pos:line="44" pos:column="4"/></block></then></if>

  <if pos:line="46" pos:column="3">if <condition pos:line="46" pos:column="6">(<expr><call><name pos:line="46" pos:column="7">strlen<pos:position pos:line="46" pos:column="13"/></name> <argument_list pos:line="46" pos:column="14">(<argument><expr><name><name pos:line="46" pos:column="15">n<pos:position pos:line="46" pos:column="16"/></name><operator pos:line="46" pos:column="16">-&gt;<pos:position pos:line="46" pos:column="21"/></operator><name pos:line="46" pos:column="18">type<pos:position pos:line="46" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="23"/></argument_list></call> <operator pos:line="46" pos:column="24">&gt;<pos:position pos:line="46" pos:column="28"/></operator> <literal type="number" pos:line="46" pos:column="26">0<pos:position pos:line="46" pos:column="27"/></literal></expr>)<pos:position pos:line="46" pos:column="28"/></condition><then pos:line="46" pos:column="28">
  <block pos:line="47" pos:column="3">{
    <expr_stmt><expr><name pos:line="48" pos:column="5">status<pos:position pos:line="48" pos:column="11"/></name> <operator pos:line="48" pos:column="12">=<pos:position pos:line="48" pos:column="13"/></operator> <call><name pos:line="48" pos:column="14">write_part_string<pos:position pos:line="48" pos:column="31"/></name> <argument_list pos:line="48" pos:column="32">(<argument><expr><operator pos:line="48" pos:column="33">&amp;<pos:position pos:line="48" pos:column="38"/></operator><name pos:line="48" pos:column="34">buffer_ptr<pos:position pos:line="48" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="46">&amp;<pos:position pos:line="48" pos:column="51"/></operator><name pos:line="48" pos:column="47">buffer_free<pos:position pos:line="48" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="60">TYPE_TYPE<pos:position pos:line="48" pos:column="69"/></name></expr></argument>,
	<argument><expr><name><name pos:line="49" pos:column="9">n<pos:position pos:line="49" pos:column="10"/></name><operator pos:line="49" pos:column="10">-&gt;<pos:position pos:line="49" pos:column="15"/></operator><name pos:line="49" pos:column="12">type<pos:position pos:line="49" pos:column="16"/></name></name></expr></argument>, <argument><expr><call><name pos:line="49" pos:column="18">strlen<pos:position pos:line="49" pos:column="24"/></name> <argument_list pos:line="49" pos:column="25">(<argument><expr><name><name pos:line="49" pos:column="26">n<pos:position pos:line="49" pos:column="27"/></name><operator pos:line="49" pos:column="27">-&gt;<pos:position pos:line="49" pos:column="32"/></operator><name pos:line="49" pos:column="29">type<pos:position pos:line="49" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="34"/></argument_list></call></expr></argument>)<pos:position pos:line="49" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="36"/></expr_stmt>
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><name pos:line="50" pos:column="9">status<pos:position pos:line="50" pos:column="15"/></name> <operator pos:line="50" pos:column="16">!=<pos:position pos:line="50" pos:column="18"/></operator> <literal type="number" pos:line="50" pos:column="19">0<pos:position pos:line="50" pos:column="20"/></literal></expr>)<pos:position pos:line="50" pos:column="21"/></condition><then pos:line="50" pos:column="21">
      <block type="pseudo"><return pos:line="51" pos:column="7">return <expr><operator pos:line="51" pos:column="14">(<pos:position pos:line="51" pos:column="15"/></operator><operator pos:line="51" pos:column="15">-<pos:position pos:line="51" pos:column="16"/></operator><literal type="number" pos:line="51" pos:column="16">1<pos:position pos:line="51" pos:column="17"/></literal><operator pos:line="51" pos:column="17">)<pos:position pos:line="51" pos:column="18"/></operator></expr>;<pos:position pos:line="51" pos:column="19"/></return></block></then></if>
  }<pos:position pos:line="52" pos:column="4"/></block></then></if>

  <if pos:line="54" pos:column="3">if <condition pos:line="54" pos:column="6">(<expr><call><name pos:line="54" pos:column="7">strlen<pos:position pos:line="54" pos:column="13"/></name> <argument_list pos:line="54" pos:column="14">(<argument><expr><name><name pos:line="54" pos:column="15">n<pos:position pos:line="54" pos:column="16"/></name><operator pos:line="54" pos:column="16">-&gt;<pos:position pos:line="54" pos:column="21"/></operator><name pos:line="54" pos:column="18">type_instance<pos:position pos:line="54" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="32"/></argument_list></call> <operator pos:line="54" pos:column="33">&gt;<pos:position pos:line="54" pos:column="37"/></operator> <literal type="number" pos:line="54" pos:column="35">0<pos:position pos:line="54" pos:column="36"/></literal></expr>)<pos:position pos:line="54" pos:column="37"/></condition><then pos:line="54" pos:column="37">
  <block pos:line="55" pos:column="3">{
    <expr_stmt><expr><name pos:line="56" pos:column="5">status<pos:position pos:line="56" pos:column="11"/></name> <operator pos:line="56" pos:column="12">=<pos:position pos:line="56" pos:column="13"/></operator> <call><name pos:line="56" pos:column="14">write_part_string<pos:position pos:line="56" pos:column="31"/></name> <argument_list pos:line="56" pos:column="32">(<argument><expr><operator pos:line="56" pos:column="33">&amp;<pos:position pos:line="56" pos:column="38"/></operator><name pos:line="56" pos:column="34">buffer_ptr<pos:position pos:line="56" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="46">&amp;<pos:position pos:line="56" pos:column="51"/></operator><name pos:line="56" pos:column="47">buffer_free<pos:position pos:line="56" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="60">TYPE_TYPE_INSTANCE<pos:position pos:line="56" pos:column="78"/></name></expr></argument>,
	<argument><expr><name><name pos:line="57" pos:column="9">n<pos:position pos:line="57" pos:column="10"/></name><operator pos:line="57" pos:column="10">-&gt;<pos:position pos:line="57" pos:column="15"/></operator><name pos:line="57" pos:column="12">type_instance<pos:position pos:line="57" pos:column="25"/></name></name></expr></argument>, <argument><expr><call><name pos:line="57" pos:column="27">strlen<pos:position pos:line="57" pos:column="33"/></name> <argument_list pos:line="57" pos:column="34">(<argument><expr><name><name pos:line="57" pos:column="35">n<pos:position pos:line="57" pos:column="36"/></name><operator pos:line="57" pos:column="36">-&gt;<pos:position pos:line="57" pos:column="41"/></operator><name pos:line="57" pos:column="38">type_instance<pos:position pos:line="57" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="57" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="54"/></expr_stmt>
    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><name pos:line="58" pos:column="9">status<pos:position pos:line="58" pos:column="15"/></name> <operator pos:line="58" pos:column="16">!=<pos:position pos:line="58" pos:column="18"/></operator> <literal type="number" pos:line="58" pos:column="19">0<pos:position pos:line="58" pos:column="20"/></literal></expr>)<pos:position pos:line="58" pos:column="21"/></condition><then pos:line="58" pos:column="21">
      <block type="pseudo"><return pos:line="59" pos:column="7">return <expr><operator pos:line="59" pos:column="14">(<pos:position pos:line="59" pos:column="15"/></operator><operator pos:line="59" pos:column="15">-<pos:position pos:line="59" pos:column="16"/></operator><literal type="number" pos:line="59" pos:column="16">1<pos:position pos:line="59" pos:column="17"/></literal><operator pos:line="59" pos:column="17">)<pos:position pos:line="59" pos:column="18"/></operator></expr>;<pos:position pos:line="59" pos:column="19"/></return></block></then></if>
  }<pos:position pos:line="60" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="62" pos:column="3">status<pos:position pos:line="62" pos:column="9"/></name> <operator pos:line="62" pos:column="10">=<pos:position pos:line="62" pos:column="11"/></operator> <call><name pos:line="62" pos:column="12">write_part_string<pos:position pos:line="62" pos:column="29"/></name> <argument_list pos:line="62" pos:column="30">(<argument><expr><operator pos:line="62" pos:column="31">&amp;<pos:position pos:line="62" pos:column="36"/></operator><name pos:line="62" pos:column="32">buffer_ptr<pos:position pos:line="62" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="44">&amp;<pos:position pos:line="62" pos:column="49"/></operator><name pos:line="62" pos:column="45">buffer_free<pos:position pos:line="62" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="58">TYPE_MESSAGE<pos:position pos:line="62" pos:column="70"/></name></expr></argument>,
      <argument><expr><name><name pos:line="63" pos:column="7">n<pos:position pos:line="63" pos:column="8"/></name><operator pos:line="63" pos:column="8">-&gt;<pos:position pos:line="63" pos:column="13"/></operator><name pos:line="63" pos:column="10">message<pos:position pos:line="63" pos:column="17"/></name></name></expr></argument>, <argument><expr><call><name pos:line="63" pos:column="19">strlen<pos:position pos:line="63" pos:column="25"/></name> <argument_list pos:line="63" pos:column="26">(<argument><expr><name><name pos:line="63" pos:column="27">n<pos:position pos:line="63" pos:column="28"/></name><operator pos:line="63" pos:column="28">-&gt;<pos:position pos:line="63" pos:column="33"/></operator><name pos:line="63" pos:column="30">message<pos:position pos:line="63" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="63" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="40"/></expr_stmt>
  <if pos:line="64" pos:column="3">if <condition pos:line="64" pos:column="6">(<expr><name pos:line="64" pos:column="7">status<pos:position pos:line="64" pos:column="13"/></name> <operator pos:line="64" pos:column="14">!=<pos:position pos:line="64" pos:column="16"/></operator> <literal type="number" pos:line="64" pos:column="17">0<pos:position pos:line="64" pos:column="18"/></literal></expr>)<pos:position pos:line="64" pos:column="19"/></condition><then pos:line="64" pos:column="19">
    <block type="pseudo"><return pos:line="65" pos:column="5">return <expr><operator pos:line="65" pos:column="12">(<pos:position pos:line="65" pos:column="13"/></operator><operator pos:line="65" pos:column="13">-<pos:position pos:line="65" pos:column="14"/></operator><literal type="number" pos:line="65" pos:column="14">1<pos:position pos:line="65" pos:column="15"/></literal><operator pos:line="65" pos:column="15">)<pos:position pos:line="65" pos:column="16"/></operator></expr>;<pos:position pos:line="65" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="67" pos:column="3">network_send_buffer<pos:position pos:line="67" pos:column="22"/></name> <argument_list pos:line="67" pos:column="23">(<argument><expr><name pos:line="67" pos:column="24">buffer<pos:position pos:line="67" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="67" pos:column="32">sizeof <argument_list pos:line="67" pos:column="39">(<argument><expr><name pos:line="67" pos:column="40">buffer<pos:position pos:line="67" pos:column="46"/></name></expr></argument>)<pos:position pos:line="67" pos:column="47"/></argument_list></sizeof> <operator pos:line="67" pos:column="48">-<pos:position pos:line="67" pos:column="49"/></operator> <name pos:line="67" pos:column="50">buffer_free<pos:position pos:line="67" pos:column="61"/></name></expr></argument>)<pos:position pos:line="67" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="63"/></expr_stmt>

  <return pos:line="69" pos:column="3">return <expr><operator pos:line="69" pos:column="10">(<pos:position pos:line="69" pos:column="11"/></operator><literal type="number" pos:line="69" pos:column="11">0<pos:position pos:line="69" pos:column="12"/></literal><operator pos:line="69" pos:column="12">)<pos:position pos:line="69" pos:column="13"/></operator></expr>;<pos:position pos:line="69" pos:column="14"/></return>
}<pos:position pos:line="70" pos:column="2"/></block></function></unit>

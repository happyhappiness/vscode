<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_401_collectd-4.3.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">get_module_name<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">buf<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">size_t<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">buf_len<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="58">const<pos:position pos:line="1" pos:column="63"/></specifier> <name pos:line="1" pos:column="64">char<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">module<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list> <block pos:line="1" pos:column="78">{
	<decl_stmt><decl><type><name pos:line="2" pos:column="9">int<pos:position pos:line="2" pos:column="12"/></name></type> <name pos:line="2" pos:column="13">status<pos:position pos:line="2" pos:column="19"/></name> <init pos:line="2" pos:column="20">= <expr><literal type="number" pos:line="2" pos:column="22">0<pos:position pos:line="2" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="2" pos:column="24"/></decl_stmt>
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name><name pos:line="3" pos:column="13">base_name<pos:position pos:line="3" pos:column="22"/></name><index pos:line="3" pos:column="22">[<expr><literal type="number" pos:line="3" pos:column="23">0<pos:position pos:line="3" pos:column="24"/></literal></expr>]<pos:position pos:line="3" pos:column="25"/></index></name> <operator pos:line="3" pos:column="26">==<pos:position pos:line="3" pos:column="28"/></operator> <literal type="char" pos:line="3" pos:column="29">'\0'<pos:position pos:line="3" pos:column="33"/></literal></expr>)<pos:position pos:line="3" pos:column="34"/></condition><then pos:line="3" pos:column="34">
		<block type="pseudo"><expr_stmt><expr><name pos:line="4" pos:column="17">status<pos:position pos:line="4" pos:column="23"/></name> <operator pos:line="4" pos:column="24">=<pos:position pos:line="4" pos:column="25"/></operator> <call><name pos:line="4" pos:column="26">snprintf<pos:position pos:line="4" pos:column="34"/></name> <argument_list pos:line="4" pos:column="35">(<argument><expr><name pos:line="4" pos:column="36">buf<pos:position pos:line="4" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="41">buf_len<pos:position pos:line="4" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="50">"%s"<pos:position pos:line="4" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="56">module<pos:position pos:line="4" pos:column="62"/></name></expr></argument>)<pos:position pos:line="4" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="64"/></expr_stmt></block></then>
	<else pos:line="5" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="17">status<pos:position pos:line="6" pos:column="23"/></name> <operator pos:line="6" pos:column="24">=<pos:position pos:line="6" pos:column="25"/></operator> <call><name pos:line="6" pos:column="26">snprintf<pos:position pos:line="6" pos:column="34"/></name> <argument_list pos:line="6" pos:column="35">(<argument><expr><name pos:line="6" pos:column="36">buf<pos:position pos:line="6" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="41">buf_len<pos:position pos:line="6" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="50">"%s::%s"<pos:position pos:line="6" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="60">base_name<pos:position pos:line="6" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="71">module<pos:position pos:line="6" pos:column="77"/></name></expr></argument>)<pos:position pos:line="6" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="79"/></expr_stmt></block></else></if>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">(<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">status<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">&lt;<pos:position pos:line="7" pos:column="25"/></operator> <literal type="number" pos:line="7" pos:column="23">0<pos:position pos:line="7" pos:column="24"/></literal><operator pos:line="7" pos:column="24">)<pos:position pos:line="7" pos:column="25"/></operator> <operator pos:line="7" pos:column="26">||<pos:position pos:line="7" pos:column="28"/></operator> <operator pos:line="7" pos:column="29">(<pos:position pos:line="7" pos:column="30"/></operator><operator pos:line="7" pos:column="30">(<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="31">unsigned<pos:position pos:line="7" pos:column="39"/></name> <name pos:line="7" pos:column="40">int<pos:position pos:line="7" pos:column="43"/></name><operator pos:line="7" pos:column="43">)<pos:position pos:line="7" pos:column="44"/></operator><name pos:line="7" pos:column="44">status<pos:position pos:line="7" pos:column="50"/></name> <operator pos:line="7" pos:column="51">&gt;=<pos:position pos:line="7" pos:column="56"/></operator> <name pos:line="7" pos:column="54">buf_len<pos:position pos:line="7" pos:column="61"/></name><operator pos:line="7" pos:column="61">)<pos:position pos:line="7" pos:column="62"/></operator></expr>)<pos:position pos:line="7" pos:column="63"/></condition><then pos:line="7" pos:column="63">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><operator pos:line="8" pos:column="24">(<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="25">NULL<pos:position pos:line="8" pos:column="29"/></name><operator pos:line="8" pos:column="29">)<pos:position pos:line="8" pos:column="30"/></operator></expr>;<pos:position pos:line="8" pos:column="31"/></return></block></then></if>
	<expr_stmt><expr><name><name pos:line="9" pos:column="9">buf<pos:position pos:line="9" pos:column="12"/></name><index pos:line="9" pos:column="12">[<expr><name pos:line="9" pos:column="13">buf_len<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">-<pos:position pos:line="9" pos:column="22"/></operator> <literal type="number" pos:line="9" pos:column="23">1<pos:position pos:line="9" pos:column="24"/></literal></expr>]<pos:position pos:line="9" pos:column="25"/></index></name> <operator pos:line="9" pos:column="26">=<pos:position pos:line="9" pos:column="27"/></operator> <literal type="char" pos:line="9" pos:column="28">'\0'<pos:position pos:line="9" pos:column="32"/></literal></expr>;<pos:position pos:line="9" pos:column="33"/></expr_stmt>
	<return pos:line="10" pos:column="9">return <expr><operator pos:line="10" pos:column="16">(<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="17">buf<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">)<pos:position pos:line="10" pos:column="21"/></operator></expr>;<pos:position pos:line="10" pos:column="22"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

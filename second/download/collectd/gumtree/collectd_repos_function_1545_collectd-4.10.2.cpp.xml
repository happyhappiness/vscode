<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1545_collectd-4.10.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">sensors_snprintf_chip_name<pos:position pos:line="1" pos:column="38"/></name> <parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">buf<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">size_t<pos:position pos:line="1" pos:column="57"/></name></type> <name pos:line="1" pos:column="58">buf_size<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">sensors_chip_name<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">chip<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">status<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><operator pos:line="4" pos:column="22">-<pos:position pos:line="4" pos:column="23"/></operator><literal type="number" pos:line="4" pos:column="23">1<pos:position pos:line="4" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name><name pos:line="6" pos:column="13">chip<pos:position pos:line="6" pos:column="17"/></name><operator pos:line="6" pos:column="17">-&gt;<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="19">bus<pos:position pos:line="6" pos:column="22"/></name></name> <operator pos:line="6" pos:column="23">==<pos:position pos:line="6" pos:column="25"/></operator> <name pos:line="6" pos:column="26">SENSORS_CHIP_NAME_BUS_ISA<pos:position pos:line="6" pos:column="51"/></name></expr>)<pos:position pos:line="6" pos:column="52"/></condition><then pos:line="6" pos:column="52">
	<block pos:line="7" pos:column="9">{
		<expr_stmt><expr><name pos:line="8" pos:column="17">status<pos:position pos:line="8" pos:column="23"/></name> <operator pos:line="8" pos:column="24">=<pos:position pos:line="8" pos:column="25"/></operator> <call><name pos:line="8" pos:column="26">ssnprintf<pos:position pos:line="8" pos:column="35"/></name> <argument_list pos:line="8" pos:column="36">(<argument><expr><name pos:line="8" pos:column="37">buf<pos:position pos:line="8" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="42">buf_size<pos:position pos:line="8" pos:column="50"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="9" pos:column="33">"%s-isa-%04x"<pos:position pos:line="9" pos:column="46"/></literal></expr></argument>,
				<argument><expr><name><name pos:line="10" pos:column="33">chip<pos:position pos:line="10" pos:column="37"/></name><operator pos:line="10" pos:column="37">-&gt;<pos:position pos:line="10" pos:column="42"/></operator><name pos:line="10" pos:column="39">prefix<pos:position pos:line="10" pos:column="45"/></name></name></expr></argument>,
				<argument><expr><name><name pos:line="11" pos:column="33">chip<pos:position pos:line="11" pos:column="37"/></name><operator pos:line="11" pos:column="37">-&gt;<pos:position pos:line="11" pos:column="42"/></operator><name pos:line="11" pos:column="39">addr<pos:position pos:line="11" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="12" pos:column="10"/></block></then>
	<elseif pos:line="13" pos:column="9">else <if pos:line="13" pos:column="14">if <condition pos:line="13" pos:column="17">(<expr><name><name pos:line="13" pos:column="18">chip<pos:position pos:line="13" pos:column="22"/></name><operator pos:line="13" pos:column="22">-&gt;<pos:position pos:line="13" pos:column="27"/></operator><name pos:line="13" pos:column="24">bus<pos:position pos:line="13" pos:column="27"/></name></name> <operator pos:line="13" pos:column="28">==<pos:position pos:line="13" pos:column="30"/></operator> <name pos:line="13" pos:column="31">SENSORS_CHIP_NAME_BUS_DUMMY<pos:position pos:line="13" pos:column="58"/></name></expr>)<pos:position pos:line="13" pos:column="59"/></condition><then pos:line="13" pos:column="59">
	<block pos:line="14" pos:column="9">{
		<expr_stmt><expr><name pos:line="15" pos:column="17">status<pos:position pos:line="15" pos:column="23"/></name> <operator pos:line="15" pos:column="24">=<pos:position pos:line="15" pos:column="25"/></operator> <call><name pos:line="15" pos:column="26">snprintf<pos:position pos:line="15" pos:column="34"/></name> <argument_list pos:line="15" pos:column="35">(<argument><expr><name pos:line="15" pos:column="36">buf<pos:position pos:line="15" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="41">buf_size<pos:position pos:line="15" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="51">"%s-%s-%04x"<pos:position pos:line="15" pos:column="63"/></literal></expr></argument>,
				<argument><expr><name><name pos:line="16" pos:column="33">chip<pos:position pos:line="16" pos:column="37"/></name><operator pos:line="16" pos:column="37">-&gt;<pos:position pos:line="16" pos:column="42"/></operator><name pos:line="16" pos:column="39">prefix<pos:position pos:line="16" pos:column="45"/></name></name></expr></argument>,
				<argument><expr><name><name pos:line="17" pos:column="33">chip<pos:position pos:line="17" pos:column="37"/></name><operator pos:line="17" pos:column="37">-&gt;<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="39">busname<pos:position pos:line="17" pos:column="46"/></name></name></expr></argument>,
				<argument><expr><name><name pos:line="18" pos:column="33">chip<pos:position pos:line="18" pos:column="37"/></name><operator pos:line="18" pos:column="37">-&gt;<pos:position pos:line="18" pos:column="42"/></operator><name pos:line="18" pos:column="39">addr<pos:position pos:line="18" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if></elseif>
	<else pos:line="20" pos:column="9">else
	<block pos:line="21" pos:column="9">{
		<expr_stmt><expr><name pos:line="22" pos:column="17">status<pos:position pos:line="22" pos:column="23"/></name> <operator pos:line="22" pos:column="24">=<pos:position pos:line="22" pos:column="25"/></operator> <call><name pos:line="22" pos:column="26">snprintf<pos:position pos:line="22" pos:column="34"/></name> <argument_list pos:line="22" pos:column="35">(<argument><expr><name pos:line="22" pos:column="36">buf<pos:position pos:line="22" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="41">buf_size<pos:position pos:line="22" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="51">"%s-i2c-%d-%02x"<pos:position pos:line="22" pos:column="67"/></literal></expr></argument>,
				<argument><expr><name><name pos:line="23" pos:column="33">chip<pos:position pos:line="23" pos:column="37"/></name><operator pos:line="23" pos:column="37">-&gt;<pos:position pos:line="23" pos:column="42"/></operator><name pos:line="23" pos:column="39">prefix<pos:position pos:line="23" pos:column="45"/></name></name></expr></argument>,
				<argument><expr><name><name pos:line="24" pos:column="33">chip<pos:position pos:line="24" pos:column="37"/></name><operator pos:line="24" pos:column="37">-&gt;<pos:position pos:line="24" pos:column="42"/></operator><name pos:line="24" pos:column="39">bus<pos:position pos:line="24" pos:column="42"/></name></name></expr></argument>,
				<argument><expr><name><name pos:line="25" pos:column="33">chip<pos:position pos:line="25" pos:column="37"/></name><operator pos:line="25" pos:column="37">-&gt;<pos:position pos:line="25" pos:column="42"/></operator><name pos:line="25" pos:column="39">addr<pos:position pos:line="25" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="26" pos:column="10"/></block></else></if>

	<return pos:line="28" pos:column="9">return <expr><operator pos:line="28" pos:column="16">(<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="17">status<pos:position pos:line="28" pos:column="23"/></name><operator pos:line="28" pos:column="23">)<pos:position pos:line="28" pos:column="24"/></operator></expr>;<pos:position pos:line="28" pos:column="25"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

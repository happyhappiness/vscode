<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_872_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">turbostat_config<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><specifier pos:line="2" pos:column="18">const<pos:position pos:line="2" pos:column="23"/></specifier> <name pos:line="2" pos:column="24">char<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="30">key<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="35">const<pos:position pos:line="2" pos:column="40"/></specifier> <name pos:line="2" pos:column="41">char<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">value<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">long<pos:position pos:line="4" pos:column="13"/></name> <name pos:line="4" pos:column="14">unsigned<pos:position pos:line="4" pos:column="22"/></name> <name pos:line="4" pos:column="23">int<pos:position pos:line="4" pos:column="26"/></name></type> <name pos:line="4" pos:column="27">tmp_val<pos:position pos:line="4" pos:column="34"/></name></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">end<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><call><name pos:line="7" pos:column="13">strcasecmp<pos:position pos:line="7" pos:column="23"/></name><argument_list pos:line="7" pos:column="23">(<argument><expr><literal type="string" pos:line="7" pos:column="24">"CoreCstates"<pos:position pos:line="7" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="39">key<pos:position pos:line="7" pos:column="42"/></name></expr></argument>)<pos:position pos:line="7" pos:column="43"/></argument_list></call> <operator pos:line="7" pos:column="44">==<pos:position pos:line="7" pos:column="46"/></operator> <literal type="number" pos:line="7" pos:column="47">0<pos:position pos:line="7" pos:column="48"/></literal></expr>)<pos:position pos:line="7" pos:column="49"/></condition><then pos:line="7" pos:column="49"> <block pos:line="7" pos:column="50">{
		<expr_stmt><expr><name pos:line="8" pos:column="17">tmp_val<pos:position pos:line="8" pos:column="24"/></name> <operator pos:line="8" pos:column="25">=<pos:position pos:line="8" pos:column="26"/></operator> <call><name pos:line="8" pos:column="27">strtoul<pos:position pos:line="8" pos:column="34"/></name><argument_list pos:line="8" pos:column="34">(<argument><expr><name pos:line="8" pos:column="35">value<pos:position pos:line="8" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="42">&amp;<pos:position pos:line="8" pos:column="47"/></operator><name pos:line="8" pos:column="43">end<pos:position pos:line="8" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="48">0<pos:position pos:line="8" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="51"/></expr_stmt>
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><operator pos:line="9" pos:column="21">*<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="22">end<pos:position pos:line="9" pos:column="25"/></name> <operator pos:line="9" pos:column="26">!=<pos:position pos:line="9" pos:column="28"/></operator> <literal type="char" pos:line="9" pos:column="29">'\0'<pos:position pos:line="9" pos:column="33"/></literal> <operator pos:line="9" pos:column="34">||<pos:position pos:line="9" pos:column="36"/></operator> <name pos:line="9" pos:column="37">tmp_val<pos:position pos:line="9" pos:column="44"/></name> <operator pos:line="9" pos:column="45">&gt;<pos:position pos:line="9" pos:column="49"/></operator> <name pos:line="9" pos:column="47">UINT_MAX<pos:position pos:line="9" pos:column="55"/></name></expr>)<pos:position pos:line="9" pos:column="56"/></condition><then pos:line="9" pos:column="56"> <block pos:line="9" pos:column="57">{
			<expr_stmt><expr><call><name pos:line="10" pos:column="25">ERROR<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">(<argument><expr><literal type="string" pos:line="10" pos:column="31">"turbostat plugin: Invalid CoreCstates '%s'"<pos:position pos:line="10" pos:column="75"/></literal></expr></argument>,
			      <argument><expr><name pos:line="11" pos:column="31">value<pos:position pos:line="11" pos:column="36"/></name></expr></argument>)<pos:position pos:line="11" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="38"/></expr_stmt>
			<return pos:line="12" pos:column="25">return <expr><operator pos:line="12" pos:column="32">-<pos:position pos:line="12" pos:column="33"/></operator><literal type="number" pos:line="12" pos:column="33">1<pos:position pos:line="12" pos:column="34"/></literal></expr>;<pos:position pos:line="12" pos:column="35"/></return>
		}<pos:position pos:line="13" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="14" pos:column="17">config_core_cstate<pos:position pos:line="14" pos:column="35"/></name> <operator pos:line="14" pos:column="36">=<pos:position pos:line="14" pos:column="37"/></operator> <operator pos:line="14" pos:column="38">(<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="39">unsigned<pos:position pos:line="14" pos:column="47"/></name> <name pos:line="14" pos:column="48">int<pos:position pos:line="14" pos:column="51"/></name><operator pos:line="14" pos:column="51">)<pos:position pos:line="14" pos:column="52"/></operator> <name pos:line="14" pos:column="53">tmp_val<pos:position pos:line="14" pos:column="60"/></name></expr>;<pos:position pos:line="14" pos:column="61"/></expr_stmt>
		<expr_stmt><expr><name pos:line="15" pos:column="17">apply_config_core_cstate<pos:position pos:line="15" pos:column="41"/></name> <operator pos:line="15" pos:column="42">=<pos:position pos:line="15" pos:column="43"/></operator> <literal type="number" pos:line="15" pos:column="44">1<pos:position pos:line="15" pos:column="45"/></literal></expr>;<pos:position pos:line="15" pos:column="46"/></expr_stmt>
	}<pos:position pos:line="16" pos:column="10"/></block></then> <elseif pos:line="16" pos:column="11">else <if pos:line="16" pos:column="16">if <condition pos:line="16" pos:column="19">(<expr><call><name pos:line="16" pos:column="20">strcasecmp<pos:position pos:line="16" pos:column="30"/></name><argument_list pos:line="16" pos:column="30">(<argument><expr><literal type="string" pos:line="16" pos:column="31">"PackageCstates"<pos:position pos:line="16" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="49">key<pos:position pos:line="16" pos:column="52"/></name></expr></argument>)<pos:position pos:line="16" pos:column="53"/></argument_list></call> <operator pos:line="16" pos:column="54">==<pos:position pos:line="16" pos:column="56"/></operator> <literal type="number" pos:line="16" pos:column="57">0<pos:position pos:line="16" pos:column="58"/></literal></expr>)<pos:position pos:line="16" pos:column="59"/></condition><then pos:line="16" pos:column="59"> <block pos:line="16" pos:column="60">{
		<expr_stmt><expr><name pos:line="17" pos:column="17">tmp_val<pos:position pos:line="17" pos:column="24"/></name> <operator pos:line="17" pos:column="25">=<pos:position pos:line="17" pos:column="26"/></operator> <call><name pos:line="17" pos:column="27">strtoul<pos:position pos:line="17" pos:column="34"/></name><argument_list pos:line="17" pos:column="34">(<argument><expr><name pos:line="17" pos:column="35">value<pos:position pos:line="17" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="42">&amp;<pos:position pos:line="17" pos:column="47"/></operator><name pos:line="17" pos:column="43">end<pos:position pos:line="17" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="48">0<pos:position pos:line="17" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="51"/></expr_stmt>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><operator pos:line="18" pos:column="21">*<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="22">end<pos:position pos:line="18" pos:column="25"/></name> <operator pos:line="18" pos:column="26">!=<pos:position pos:line="18" pos:column="28"/></operator> <literal type="char" pos:line="18" pos:column="29">'\0'<pos:position pos:line="18" pos:column="33"/></literal> <operator pos:line="18" pos:column="34">||<pos:position pos:line="18" pos:column="36"/></operator> <name pos:line="18" pos:column="37">tmp_val<pos:position pos:line="18" pos:column="44"/></name> <operator pos:line="18" pos:column="45">&gt;<pos:position pos:line="18" pos:column="49"/></operator> <name pos:line="18" pos:column="47">UINT_MAX<pos:position pos:line="18" pos:column="55"/></name></expr>)<pos:position pos:line="18" pos:column="56"/></condition><then pos:line="18" pos:column="56"> <block pos:line="18" pos:column="57">{
			<expr_stmt><expr><call><name pos:line="19" pos:column="25">ERROR<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><literal type="string" pos:line="19" pos:column="31">"turbostat plugin: Invalid PackageCstates '%s'"<pos:position pos:line="19" pos:column="78"/></literal></expr></argument>,
			      <argument><expr><name pos:line="20" pos:column="31">value<pos:position pos:line="20" pos:column="36"/></name></expr></argument>)<pos:position pos:line="20" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="38"/></expr_stmt>
			<return pos:line="21" pos:column="25">return <expr><operator pos:line="21" pos:column="32">-<pos:position pos:line="21" pos:column="33"/></operator><literal type="number" pos:line="21" pos:column="33">1<pos:position pos:line="21" pos:column="34"/></literal></expr>;<pos:position pos:line="21" pos:column="35"/></return>
		}<pos:position pos:line="22" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="23" pos:column="17">config_pkg_cstate<pos:position pos:line="23" pos:column="34"/></name> <operator pos:line="23" pos:column="35">=<pos:position pos:line="23" pos:column="36"/></operator> <operator pos:line="23" pos:column="37">(<pos:position pos:line="23" pos:column="38"/></operator><name pos:line="23" pos:column="38">unsigned<pos:position pos:line="23" pos:column="46"/></name> <name pos:line="23" pos:column="47">int<pos:position pos:line="23" pos:column="50"/></name><operator pos:line="23" pos:column="50">)<pos:position pos:line="23" pos:column="51"/></operator> <name pos:line="23" pos:column="52">tmp_val<pos:position pos:line="23" pos:column="59"/></name></expr>;<pos:position pos:line="23" pos:column="60"/></expr_stmt>
		<expr_stmt><expr><name pos:line="24" pos:column="17">apply_config_pkg_cstate<pos:position pos:line="24" pos:column="40"/></name> <operator pos:line="24" pos:column="41">=<pos:position pos:line="24" pos:column="42"/></operator> <literal type="number" pos:line="24" pos:column="43">1<pos:position pos:line="24" pos:column="44"/></literal></expr>;<pos:position pos:line="24" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if></elseif> <elseif pos:line="25" pos:column="11">else <if pos:line="25" pos:column="16">if <condition pos:line="25" pos:column="19">(<expr><call><name pos:line="25" pos:column="20">strcasecmp<pos:position pos:line="25" pos:column="30"/></name><argument_list pos:line="25" pos:column="30">(<argument><expr><literal type="string" pos:line="25" pos:column="31">"SystemManagementInterrupt"<pos:position pos:line="25" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="60">key<pos:position pos:line="25" pos:column="63"/></name></expr></argument>)<pos:position pos:line="25" pos:column="64"/></argument_list></call> <operator pos:line="25" pos:column="65">==<pos:position pos:line="25" pos:column="67"/></operator> <literal type="number" pos:line="25" pos:column="68">0<pos:position pos:line="25" pos:column="69"/></literal></expr>)<pos:position pos:line="25" pos:column="70"/></condition><then pos:line="25" pos:column="70"> <block pos:line="25" pos:column="71">{
		<expr_stmt><expr><name pos:line="26" pos:column="17">config_smi<pos:position pos:line="26" pos:column="27"/></name> <operator pos:line="26" pos:column="28">=<pos:position pos:line="26" pos:column="29"/></operator> <call><name pos:line="26" pos:column="30">IS_TRUE<pos:position pos:line="26" pos:column="37"/></name><argument_list pos:line="26" pos:column="37">(<argument><expr><name pos:line="26" pos:column="38">value<pos:position pos:line="26" pos:column="43"/></name></expr></argument>)<pos:position pos:line="26" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name pos:line="27" pos:column="17">apply_config_smi<pos:position pos:line="27" pos:column="33"/></name> <operator pos:line="27" pos:column="34">=<pos:position pos:line="27" pos:column="35"/></operator> <literal type="number" pos:line="27" pos:column="36">1<pos:position pos:line="27" pos:column="37"/></literal></expr>;<pos:position pos:line="27" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="28" pos:column="10"/></block></then></if></elseif> <elseif pos:line="28" pos:column="11">else <if pos:line="28" pos:column="16">if <condition pos:line="28" pos:column="19">(<expr><call><name pos:line="28" pos:column="20">strcasecmp<pos:position pos:line="28" pos:column="30"/></name><argument_list pos:line="28" pos:column="30">(<argument><expr><literal type="string" pos:line="28" pos:column="31">"DigitalTemperatureSensor"<pos:position pos:line="28" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="59">key<pos:position pos:line="28" pos:column="62"/></name></expr></argument>)<pos:position pos:line="28" pos:column="63"/></argument_list></call> <operator pos:line="28" pos:column="64">==<pos:position pos:line="28" pos:column="66"/></operator> <literal type="number" pos:line="28" pos:column="67">0<pos:position pos:line="28" pos:column="68"/></literal></expr>)<pos:position pos:line="28" pos:column="69"/></condition><then pos:line="28" pos:column="69"> <block pos:line="28" pos:column="70">{
		<expr_stmt><expr><name pos:line="29" pos:column="17">config_dts<pos:position pos:line="29" pos:column="27"/></name> <operator pos:line="29" pos:column="28">=<pos:position pos:line="29" pos:column="29"/></operator> <call><name pos:line="29" pos:column="30">IS_TRUE<pos:position pos:line="29" pos:column="37"/></name><argument_list pos:line="29" pos:column="37">(<argument><expr><name pos:line="29" pos:column="38">value<pos:position pos:line="29" pos:column="43"/></name></expr></argument>)<pos:position pos:line="29" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name pos:line="30" pos:column="17">apply_config_dts<pos:position pos:line="30" pos:column="33"/></name> <operator pos:line="30" pos:column="34">=<pos:position pos:line="30" pos:column="35"/></operator> <literal type="number" pos:line="30" pos:column="36">1<pos:position pos:line="30" pos:column="37"/></literal></expr>;<pos:position pos:line="30" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="31" pos:column="10"/></block></then></if></elseif> <elseif pos:line="31" pos:column="11">else <if pos:line="31" pos:column="16">if <condition pos:line="31" pos:column="19">(<expr><call><name pos:line="31" pos:column="20">strcasecmp<pos:position pos:line="31" pos:column="30"/></name><argument_list pos:line="31" pos:column="30">(<argument><expr><literal type="string" pos:line="31" pos:column="31">"PackageThermalManagement"<pos:position pos:line="31" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="59">key<pos:position pos:line="31" pos:column="62"/></name></expr></argument>)<pos:position pos:line="31" pos:column="63"/></argument_list></call> <operator pos:line="31" pos:column="64">==<pos:position pos:line="31" pos:column="66"/></operator> <literal type="number" pos:line="31" pos:column="67">0<pos:position pos:line="31" pos:column="68"/></literal></expr>)<pos:position pos:line="31" pos:column="69"/></condition><then pos:line="31" pos:column="69"> <block pos:line="31" pos:column="70">{
		<expr_stmt><expr><name pos:line="32" pos:column="17">config_ptm<pos:position pos:line="32" pos:column="27"/></name> <operator pos:line="32" pos:column="28">=<pos:position pos:line="32" pos:column="29"/></operator> <call><name pos:line="32" pos:column="30">IS_TRUE<pos:position pos:line="32" pos:column="37"/></name><argument_list pos:line="32" pos:column="37">(<argument><expr><name pos:line="32" pos:column="38">value<pos:position pos:line="32" pos:column="43"/></name></expr></argument>)<pos:position pos:line="32" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name pos:line="33" pos:column="17">apply_config_ptm<pos:position pos:line="33" pos:column="33"/></name> <operator pos:line="33" pos:column="34">=<pos:position pos:line="33" pos:column="35"/></operator> <literal type="number" pos:line="33" pos:column="36">1<pos:position pos:line="33" pos:column="37"/></literal></expr>;<pos:position pos:line="33" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="34" pos:column="10"/></block></then></if></elseif> <elseif pos:line="34" pos:column="11">else <if pos:line="34" pos:column="16">if <condition pos:line="34" pos:column="19">(<expr><call><name pos:line="34" pos:column="20">strcasecmp<pos:position pos:line="34" pos:column="30"/></name><argument_list pos:line="34" pos:column="30">(<argument><expr><literal type="string" pos:line="34" pos:column="31">"RunningAveragePowerLimit"<pos:position pos:line="34" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="59">key<pos:position pos:line="34" pos:column="62"/></name></expr></argument>)<pos:position pos:line="34" pos:column="63"/></argument_list></call> <operator pos:line="34" pos:column="64">==<pos:position pos:line="34" pos:column="66"/></operator> <literal type="number" pos:line="34" pos:column="67">0<pos:position pos:line="34" pos:column="68"/></literal></expr>)<pos:position pos:line="34" pos:column="69"/></condition><then pos:line="34" pos:column="69"> <block pos:line="34" pos:column="70">{
		<expr_stmt><expr><name pos:line="35" pos:column="17">tmp_val<pos:position pos:line="35" pos:column="24"/></name> <operator pos:line="35" pos:column="25">=<pos:position pos:line="35" pos:column="26"/></operator> <call><name pos:line="35" pos:column="27">strtoul<pos:position pos:line="35" pos:column="34"/></name><argument_list pos:line="35" pos:column="34">(<argument><expr><name pos:line="35" pos:column="35">value<pos:position pos:line="35" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="42">&amp;<pos:position pos:line="35" pos:column="47"/></operator><name pos:line="35" pos:column="43">end<pos:position pos:line="35" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="48">0<pos:position pos:line="35" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="51"/></expr_stmt>
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><operator pos:line="36" pos:column="21">*<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="22">end<pos:position pos:line="36" pos:column="25"/></name> <operator pos:line="36" pos:column="26">!=<pos:position pos:line="36" pos:column="28"/></operator> <literal type="char" pos:line="36" pos:column="29">'\0'<pos:position pos:line="36" pos:column="33"/></literal> <operator pos:line="36" pos:column="34">||<pos:position pos:line="36" pos:column="36"/></operator> <name pos:line="36" pos:column="37">tmp_val<pos:position pos:line="36" pos:column="44"/></name> <operator pos:line="36" pos:column="45">&gt;<pos:position pos:line="36" pos:column="49"/></operator> <name pos:line="36" pos:column="47">UINT_MAX<pos:position pos:line="36" pos:column="55"/></name></expr>)<pos:position pos:line="36" pos:column="56"/></condition><then pos:line="36" pos:column="56"> <block pos:line="36" pos:column="57">{
			<expr_stmt><expr><call><name pos:line="37" pos:column="25">ERROR<pos:position pos:line="37" pos:column="30"/></name><argument_list pos:line="37" pos:column="30">(<argument><expr><literal type="string" pos:line="37" pos:column="31">"turbostat plugin: Invalid RunningAveragePowerLimit '%s'"<pos:position pos:line="37" pos:column="88"/></literal></expr></argument>,
			      <argument><expr><name pos:line="38" pos:column="31">value<pos:position pos:line="38" pos:column="36"/></name></expr></argument>)<pos:position pos:line="38" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="38"/></expr_stmt>
			<return pos:line="39" pos:column="25">return <expr><operator pos:line="39" pos:column="32">-<pos:position pos:line="39" pos:column="33"/></operator><literal type="number" pos:line="39" pos:column="33">1<pos:position pos:line="39" pos:column="34"/></literal></expr>;<pos:position pos:line="39" pos:column="35"/></return>
		}<pos:position pos:line="40" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="41" pos:column="17">config_rapl<pos:position pos:line="41" pos:column="28"/></name> <operator pos:line="41" pos:column="29">=<pos:position pos:line="41" pos:column="30"/></operator> <operator pos:line="41" pos:column="31">(<pos:position pos:line="41" pos:column="32"/></operator><name pos:line="41" pos:column="32">unsigned<pos:position pos:line="41" pos:column="40"/></name> <name pos:line="41" pos:column="41">int<pos:position pos:line="41" pos:column="44"/></name><operator pos:line="41" pos:column="44">)<pos:position pos:line="41" pos:column="45"/></operator> <name pos:line="41" pos:column="46">tmp_val<pos:position pos:line="41" pos:column="53"/></name></expr>;<pos:position pos:line="41" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><name pos:line="42" pos:column="17">apply_config_rapl<pos:position pos:line="42" pos:column="34"/></name> <operator pos:line="42" pos:column="35">=<pos:position pos:line="42" pos:column="36"/></operator> <literal type="number" pos:line="42" pos:column="37">1<pos:position pos:line="42" pos:column="38"/></literal></expr>;<pos:position pos:line="42" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="43" pos:column="10"/></block></then></if></elseif> <elseif pos:line="43" pos:column="11">else <if pos:line="43" pos:column="16">if <condition pos:line="43" pos:column="19">(<expr><call><name pos:line="43" pos:column="20">strcasecmp<pos:position pos:line="43" pos:column="30"/></name><argument_list pos:line="43" pos:column="30">(<argument><expr><literal type="string" pos:line="43" pos:column="31">"TCCActivationTemp"<pos:position pos:line="43" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="52">key<pos:position pos:line="43" pos:column="55"/></name></expr></argument>)<pos:position pos:line="43" pos:column="56"/></argument_list></call> <operator pos:line="43" pos:column="57">==<pos:position pos:line="43" pos:column="59"/></operator> <literal type="number" pos:line="43" pos:column="60">0<pos:position pos:line="43" pos:column="61"/></literal></expr>)<pos:position pos:line="43" pos:column="62"/></condition><then pos:line="43" pos:column="62"> <block pos:line="43" pos:column="63">{
		<expr_stmt><expr><name pos:line="44" pos:column="17">tmp_val<pos:position pos:line="44" pos:column="24"/></name> <operator pos:line="44" pos:column="25">=<pos:position pos:line="44" pos:column="26"/></operator> <call><name pos:line="44" pos:column="27">strtoul<pos:position pos:line="44" pos:column="34"/></name><argument_list pos:line="44" pos:column="34">(<argument><expr><name pos:line="44" pos:column="35">value<pos:position pos:line="44" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="42">&amp;<pos:position pos:line="44" pos:column="47"/></operator><name pos:line="44" pos:column="43">end<pos:position pos:line="44" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="48">0<pos:position pos:line="44" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="51"/></expr_stmt>
		<if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><operator pos:line="45" pos:column="21">*<pos:position pos:line="45" pos:column="22"/></operator><name pos:line="45" pos:column="22">end<pos:position pos:line="45" pos:column="25"/></name> <operator pos:line="45" pos:column="26">!=<pos:position pos:line="45" pos:column="28"/></operator> <literal type="char" pos:line="45" pos:column="29">'\0'<pos:position pos:line="45" pos:column="33"/></literal> <operator pos:line="45" pos:column="34">||<pos:position pos:line="45" pos:column="36"/></operator> <name pos:line="45" pos:column="37">tmp_val<pos:position pos:line="45" pos:column="44"/></name> <operator pos:line="45" pos:column="45">&gt;<pos:position pos:line="45" pos:column="49"/></operator> <name pos:line="45" pos:column="47">UINT_MAX<pos:position pos:line="45" pos:column="55"/></name></expr>)<pos:position pos:line="45" pos:column="56"/></condition><then pos:line="45" pos:column="56"> <block pos:line="45" pos:column="57">{
			<expr_stmt><expr><call><name pos:line="46" pos:column="25">ERROR<pos:position pos:line="46" pos:column="30"/></name><argument_list pos:line="46" pos:column="30">(<argument><expr><literal type="string" pos:line="46" pos:column="31">"turbostat plugin: Invalid TCCActivationTemp '%s'"<pos:position pos:line="46" pos:column="81"/></literal></expr></argument>,
			      <argument><expr><name pos:line="47" pos:column="31">value<pos:position pos:line="47" pos:column="36"/></name></expr></argument>)<pos:position pos:line="47" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="38"/></expr_stmt>
			<return pos:line="48" pos:column="25">return <expr><operator pos:line="48" pos:column="32">-<pos:position pos:line="48" pos:column="33"/></operator><literal type="number" pos:line="48" pos:column="33">1<pos:position pos:line="48" pos:column="34"/></literal></expr>;<pos:position pos:line="48" pos:column="35"/></return>
		}<pos:position pos:line="49" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="50" pos:column="17">tcc_activation_temp<pos:position pos:line="50" pos:column="36"/></name> <operator pos:line="50" pos:column="37">=<pos:position pos:line="50" pos:column="38"/></operator> <operator pos:line="50" pos:column="39">(<pos:position pos:line="50" pos:column="40"/></operator><name pos:line="50" pos:column="40">unsigned<pos:position pos:line="50" pos:column="48"/></name> <name pos:line="50" pos:column="49">int<pos:position pos:line="50" pos:column="52"/></name><operator pos:line="50" pos:column="52">)<pos:position pos:line="50" pos:column="53"/></operator> <name pos:line="50" pos:column="54">tmp_val<pos:position pos:line="50" pos:column="61"/></name></expr>;<pos:position pos:line="50" pos:column="62"/></expr_stmt>
	}<pos:position pos:line="51" pos:column="10"/></block></then></if></elseif> <else pos:line="51" pos:column="11">else <block pos:line="51" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="52" pos:column="17">ERROR<pos:position pos:line="52" pos:column="22"/></name><argument_list pos:line="52" pos:column="22">(<argument><expr><literal type="string" pos:line="52" pos:column="23">"turbostat plugin: Invalid configuration option '%s'"<pos:position pos:line="52" pos:column="76"/></literal></expr></argument>,
		      <argument><expr><name pos:line="53" pos:column="23">key<pos:position pos:line="53" pos:column="26"/></name></expr></argument>)<pos:position pos:line="53" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="28"/></expr_stmt>
		<return pos:line="54" pos:column="17">return <expr><operator pos:line="54" pos:column="24">-<pos:position pos:line="54" pos:column="25"/></operator><literal type="number" pos:line="54" pos:column="25">1<pos:position pos:line="54" pos:column="26"/></literal></expr>;<pos:position pos:line="54" pos:column="27"/></return>
	}<pos:position pos:line="55" pos:column="10"/></block></else></if>
	<return pos:line="56" pos:column="9">return <expr><literal type="number" pos:line="56" pos:column="16">0<pos:position pos:line="56" pos:column="17"/></literal></expr>;<pos:position pos:line="56" pos:column="18"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1000_collectd-4.10.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">mc_receive_thread<pos:position pos:line="1" pos:column="31"/></name> <parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">void<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">arg<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list> <comment type="block" pos:line="1" pos:column="44">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">socket_entry_t<pos:position pos:line="3" pos:column="17"/></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">mc_receive_socket_entries<pos:position pos:line="3" pos:column="44"/></name></decl>;<pos:position pos:line="3" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">i<pos:position pos:line="5" pos:column="11"/></name></decl>;<pos:position pos:line="5" pos:column="12"/></decl_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">mc_receive_socket_entries<pos:position pos:line="7" pos:column="28"/></name> <operator pos:line="7" pos:column="29">=<pos:position pos:line="7" pos:column="30"/></operator> <name pos:line="7" pos:column="31">NULL<pos:position pos:line="7" pos:column="35"/></name></expr>;<pos:position pos:line="7" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><name pos:line="8" pos:column="3">status<pos:position pos:line="8" pos:column="9"/></name> <operator pos:line="8" pos:column="10">=<pos:position pos:line="8" pos:column="11"/></operator> <call><name pos:line="8" pos:column="12">create_sockets<pos:position pos:line="8" pos:column="26"/></name> <argument_list pos:line="8" pos:column="27">(<argument><expr><operator pos:line="8" pos:column="28">&amp;<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="29">mc_receive_socket_entries<pos:position pos:line="8" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="56">&amp;<pos:position pos:line="8" pos:column="61"/></operator><name pos:line="8" pos:column="57">mc_receive_sockets_num<pos:position pos:line="8" pos:column="79"/></name></expr></argument>,
      <argument><expr><ternary><condition><expr><operator pos:line="9" pos:column="7">(<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">mc_receive_group<pos:position pos:line="9" pos:column="24"/></name> <operator pos:line="9" pos:column="25">!=<pos:position pos:line="9" pos:column="27"/></operator> <name pos:line="9" pos:column="28">NULL<pos:position pos:line="9" pos:column="32"/></name><operator pos:line="9" pos:column="32">)<pos:position pos:line="9" pos:column="33"/></operator></expr> ?<pos:position pos:line="9" pos:column="35"/></condition><then pos:line="9" pos:column="35"> <expr><name pos:line="9" pos:column="36">mc_receive_group<pos:position pos:line="9" pos:column="52"/></name></expr> <pos:position pos:line="9" pos:column="53"/></then><else pos:line="9" pos:column="53">: <expr><name pos:line="9" pos:column="55">MC_RECEIVE_GROUP_DEFAULT<pos:position pos:line="9" pos:column="79"/></name></expr></else></ternary></expr></argument>,
      <argument><expr><ternary><condition><expr><operator pos:line="10" pos:column="7">(<pos:position pos:line="10" pos:column="8"/></operator><name pos:line="10" pos:column="8">mc_receive_port<pos:position pos:line="10" pos:column="23"/></name> <operator pos:line="10" pos:column="24">!=<pos:position pos:line="10" pos:column="26"/></operator> <name pos:line="10" pos:column="27">NULL<pos:position pos:line="10" pos:column="31"/></name><operator pos:line="10" pos:column="31">)<pos:position pos:line="10" pos:column="32"/></operator></expr> ?<pos:position pos:line="10" pos:column="34"/></condition><then pos:line="10" pos:column="34"> <expr><name pos:line="10" pos:column="35">mc_receive_port<pos:position pos:line="10" pos:column="50"/></name></expr> <pos:position pos:line="10" pos:column="51"/></then><else pos:line="10" pos:column="51">: <expr><name pos:line="10" pos:column="53">MC_RECEIVE_PORT_DEFAULT<pos:position pos:line="10" pos:column="76"/></name></expr></else></ternary></expr></argument>,
      <comment type="block" pos:line="11" pos:column="7">/* listen = */</comment> <argument><expr><literal type="number" pos:line="11" pos:column="22">1<pos:position pos:line="11" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="25"/></expr_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">status<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">!=<pos:position pos:line="12" pos:column="16"/></operator> <literal type="number" pos:line="12" pos:column="17">0<pos:position pos:line="12" pos:column="18"/></literal></expr>)<pos:position pos:line="12" pos:column="19"/></condition><then pos:line="12" pos:column="19">
  <block pos:line="13" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">ERROR<pos:position pos:line="14" pos:column="10"/></name> <argument_list pos:line="14" pos:column="11">(<argument><expr><literal type="string" pos:line="14" pos:column="12">"gmond plugin: create_sockets failed."<pos:position pos:line="14" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="52"/></expr_stmt>
    <return pos:line="15" pos:column="5">return <expr><operator pos:line="15" pos:column="12">(<pos:position pos:line="15" pos:column="13"/></operator><operator pos:line="15" pos:column="13">(<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">void<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">*<pos:position pos:line="15" pos:column="20"/></operator><operator pos:line="15" pos:column="20">)<pos:position pos:line="15" pos:column="21"/></operator> <operator pos:line="15" pos:column="22">-<pos:position pos:line="15" pos:column="23"/></operator><literal type="number" pos:line="15" pos:column="23">1<pos:position pos:line="15" pos:column="24"/></literal><operator pos:line="15" pos:column="24">)<pos:position pos:line="15" pos:column="25"/></operator></expr>;<pos:position pos:line="15" pos:column="26"/></return>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="18" pos:column="3">mc_receive_sockets<pos:position pos:line="18" pos:column="21"/></name> <operator pos:line="18" pos:column="22">=<pos:position pos:line="18" pos:column="23"/></operator> <operator pos:line="18" pos:column="24">(<pos:position pos:line="18" pos:column="25"/></operator>struct <name pos:line="18" pos:column="32">pollfd<pos:position pos:line="18" pos:column="38"/></name> <operator pos:line="18" pos:column="39">*<pos:position pos:line="18" pos:column="40"/></operator><operator pos:line="18" pos:column="40">)<pos:position pos:line="18" pos:column="41"/></operator> <call><name pos:line="18" pos:column="42">calloc<pos:position pos:line="18" pos:column="48"/></name> <argument_list pos:line="18" pos:column="49">(<argument><expr><name pos:line="18" pos:column="50">mc_receive_sockets_num<pos:position pos:line="18" pos:column="72"/></name></expr></argument>,
      <argument><expr><sizeof pos:line="19" pos:column="7">sizeof <argument_list pos:line="19" pos:column="14">(<argument><expr><operator pos:line="19" pos:column="15">*<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="16">mc_receive_sockets<pos:position pos:line="19" pos:column="34"/></name></expr></argument>)<pos:position pos:line="19" pos:column="35"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="37"/></expr_stmt>
  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><name pos:line="20" pos:column="7">mc_receive_sockets<pos:position pos:line="20" pos:column="25"/></name> <operator pos:line="20" pos:column="26">==<pos:position pos:line="20" pos:column="28"/></operator> <name pos:line="20" pos:column="29">NULL<pos:position pos:line="20" pos:column="33"/></name></expr>)<pos:position pos:line="20" pos:column="34"/></condition><then pos:line="20" pos:column="34">
  <block pos:line="21" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">ERROR<pos:position pos:line="22" pos:column="10"/></name> <argument_list pos:line="22" pos:column="11">(<argument><expr><literal type="string" pos:line="22" pos:column="12">"gmond plugin: calloc failed."<pos:position pos:line="22" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="44"/></expr_stmt>
    <for pos:line="23" pos:column="5">for <control pos:line="23" pos:column="9">(<init><expr><name pos:line="23" pos:column="10">i<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <literal type="number" pos:line="23" pos:column="14">0<pos:position pos:line="23" pos:column="15"/></literal></expr>;<pos:position pos:line="23" pos:column="16"/></init> <condition><expr><name pos:line="23" pos:column="17">i<pos:position pos:line="23" pos:column="18"/></name> <operator pos:line="23" pos:column="19">&lt;<pos:position pos:line="23" pos:column="23"/></operator> <name pos:line="23" pos:column="21">mc_receive_sockets_num<pos:position pos:line="23" pos:column="43"/></name></expr>;<pos:position pos:line="23" pos:column="44"/></condition> <incr><expr><name pos:line="23" pos:column="45">i<pos:position pos:line="23" pos:column="46"/></name><operator pos:line="23" pos:column="46">++<pos:position pos:line="23" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="23" pos:column="49"/></control>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="7">close<pos:position pos:line="24" pos:column="12"/></name> <argument_list pos:line="24" pos:column="13">(<argument><expr><name><name pos:line="24" pos:column="14">mc_receive_socket_entries<pos:position pos:line="24" pos:column="39"/></name><index pos:line="24" pos:column="39">[<expr><name pos:line="24" pos:column="40">i<pos:position pos:line="24" pos:column="41"/></name></expr>]<pos:position pos:line="24" pos:column="42"/></index></name><operator pos:line="24" pos:column="42">.<pos:position pos:line="24" pos:column="43"/></operator><name pos:line="24" pos:column="43">fd<pos:position pos:line="24" pos:column="45"/></name></expr></argument>)<pos:position pos:line="24" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="47"/></expr_stmt></block></for>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">free<pos:position pos:line="25" pos:column="9"/></name> <argument_list pos:line="25" pos:column="10">(<argument><expr><name pos:line="25" pos:column="11">mc_receive_socket_entries<pos:position pos:line="25" pos:column="36"/></name></expr></argument>)<pos:position pos:line="25" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="26" pos:column="5">mc_receive_socket_entries<pos:position pos:line="26" pos:column="30"/></name> <operator pos:line="26" pos:column="31">=<pos:position pos:line="26" pos:column="32"/></operator> <name pos:line="26" pos:column="33">NULL<pos:position pos:line="26" pos:column="37"/></name></expr>;<pos:position pos:line="26" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="27" pos:column="5">mc_receive_sockets_num<pos:position pos:line="27" pos:column="27"/></name> <operator pos:line="27" pos:column="28">=<pos:position pos:line="27" pos:column="29"/></operator> <literal type="number" pos:line="27" pos:column="30">0<pos:position pos:line="27" pos:column="31"/></literal></expr>;<pos:position pos:line="27" pos:column="32"/></expr_stmt>
    <return pos:line="28" pos:column="5">return <expr><operator pos:line="28" pos:column="12">(<pos:position pos:line="28" pos:column="13"/></operator><operator pos:line="28" pos:column="13">(<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">void<pos:position pos:line="28" pos:column="18"/></name> <operator pos:line="28" pos:column="19">*<pos:position pos:line="28" pos:column="20"/></operator><operator pos:line="28" pos:column="20">)<pos:position pos:line="28" pos:column="21"/></operator> <operator pos:line="28" pos:column="22">-<pos:position pos:line="28" pos:column="23"/></operator><literal type="number" pos:line="28" pos:column="23">1<pos:position pos:line="28" pos:column="24"/></literal><operator pos:line="28" pos:column="24">)<pos:position pos:line="28" pos:column="25"/></operator></expr>;<pos:position pos:line="28" pos:column="26"/></return>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>

  <for pos:line="31" pos:column="3">for <control pos:line="31" pos:column="7">(<init><expr><name pos:line="31" pos:column="8">i<pos:position pos:line="31" pos:column="9"/></name> <operator pos:line="31" pos:column="10">=<pos:position pos:line="31" pos:column="11"/></operator> <literal type="number" pos:line="31" pos:column="12">0<pos:position pos:line="31" pos:column="13"/></literal></expr>;<pos:position pos:line="31" pos:column="14"/></init> <condition><expr><name pos:line="31" pos:column="15">i<pos:position pos:line="31" pos:column="16"/></name> <operator pos:line="31" pos:column="17">&lt;<pos:position pos:line="31" pos:column="21"/></operator> <name pos:line="31" pos:column="19">mc_receive_sockets_num<pos:position pos:line="31" pos:column="41"/></name></expr>;<pos:position pos:line="31" pos:column="42"/></condition> <incr><expr><name pos:line="31" pos:column="43">i<pos:position pos:line="31" pos:column="44"/></name><operator pos:line="31" pos:column="44">++<pos:position pos:line="31" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="31" pos:column="47"/></control>
  <block pos:line="32" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="33" pos:column="5">mc_receive_sockets<pos:position pos:line="33" pos:column="23"/></name><index pos:line="33" pos:column="23">[<expr><name pos:line="33" pos:column="24">i<pos:position pos:line="33" pos:column="25"/></name></expr>]<pos:position pos:line="33" pos:column="26"/></index></name><operator pos:line="33" pos:column="26">.<pos:position pos:line="33" pos:column="27"/></operator><name pos:line="33" pos:column="27">fd<pos:position pos:line="33" pos:column="29"/></name> <operator pos:line="33" pos:column="30">=<pos:position pos:line="33" pos:column="31"/></operator> <name><name pos:line="33" pos:column="32">mc_receive_socket_entries<pos:position pos:line="33" pos:column="57"/></name><index pos:line="33" pos:column="57">[<expr><name pos:line="33" pos:column="58">i<pos:position pos:line="33" pos:column="59"/></name></expr>]<pos:position pos:line="33" pos:column="60"/></index></name><operator pos:line="33" pos:column="60">.<pos:position pos:line="33" pos:column="61"/></operator><name pos:line="33" pos:column="61">fd<pos:position pos:line="33" pos:column="63"/></name></expr>;<pos:position pos:line="33" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">mc_receive_sockets<pos:position pos:line="34" pos:column="23"/></name><index pos:line="34" pos:column="23">[<expr><name pos:line="34" pos:column="24">i<pos:position pos:line="34" pos:column="25"/></name></expr>]<pos:position pos:line="34" pos:column="26"/></index></name><operator pos:line="34" pos:column="26">.<pos:position pos:line="34" pos:column="27"/></operator><name pos:line="34" pos:column="27">events<pos:position pos:line="34" pos:column="33"/></name> <operator pos:line="34" pos:column="34">=<pos:position pos:line="34" pos:column="35"/></operator> <name pos:line="34" pos:column="36">POLLIN<pos:position pos:line="34" pos:column="42"/></name> <operator pos:line="34" pos:column="43">|<pos:position pos:line="34" pos:column="44"/></operator> <name pos:line="34" pos:column="45">POLLPRI<pos:position pos:line="34" pos:column="52"/></name></expr>;<pos:position pos:line="34" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="35" pos:column="5">mc_receive_sockets<pos:position pos:line="35" pos:column="23"/></name><index pos:line="35" pos:column="23">[<expr><name pos:line="35" pos:column="24">i<pos:position pos:line="35" pos:column="25"/></name></expr>]<pos:position pos:line="35" pos:column="26"/></index></name><operator pos:line="35" pos:column="26">.<pos:position pos:line="35" pos:column="27"/></operator><name pos:line="35" pos:column="27">revents<pos:position pos:line="35" pos:column="34"/></name> <operator pos:line="35" pos:column="35">=<pos:position pos:line="35" pos:column="36"/></operator> <literal type="number" pos:line="35" pos:column="37">0<pos:position pos:line="35" pos:column="38"/></literal></expr>;<pos:position pos:line="35" pos:column="39"/></expr_stmt>
  }<pos:position pos:line="36" pos:column="4"/></block></for>

  <while pos:line="38" pos:column="3">while <condition pos:line="38" pos:column="9">(<expr><name pos:line="38" pos:column="10">mc_receive_thread_loop<pos:position pos:line="38" pos:column="32"/></name> <operator pos:line="38" pos:column="33">!=<pos:position pos:line="38" pos:column="35"/></operator> <literal type="number" pos:line="38" pos:column="36">0<pos:position pos:line="38" pos:column="37"/></literal></expr>)<pos:position pos:line="38" pos:column="38"/></condition>
  <block pos:line="39" pos:column="3">{
    <expr_stmt><expr><name pos:line="40" pos:column="5">status<pos:position pos:line="40" pos:column="11"/></name> <operator pos:line="40" pos:column="12">=<pos:position pos:line="40" pos:column="13"/></operator> <call><name pos:line="40" pos:column="14">poll<pos:position pos:line="40" pos:column="18"/></name> <argument_list pos:line="40" pos:column="19">(<argument><expr><name pos:line="40" pos:column="20">mc_receive_sockets<pos:position pos:line="40" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="40">mc_receive_sockets_num<pos:position pos:line="40" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="64">-<pos:position pos:line="40" pos:column="65"/></operator><literal type="number" pos:line="40" pos:column="65">1<pos:position pos:line="40" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="68"/></expr_stmt>
    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><name pos:line="41" pos:column="9">status<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">&lt;=<pos:position pos:line="41" pos:column="21"/></operator> <literal type="number" pos:line="41" pos:column="19">0<pos:position pos:line="41" pos:column="20"/></literal></expr>)<pos:position pos:line="41" pos:column="21"/></condition><then pos:line="41" pos:column="21">
    <block pos:line="42" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="43" pos:column="7">char<pos:position pos:line="43" pos:column="11"/></name></type> <name><name pos:line="43" pos:column="12">errbuf<pos:position pos:line="43" pos:column="18"/></name><index pos:line="43" pos:column="18">[<expr><literal type="number" pos:line="43" pos:column="19">1024<pos:position pos:line="43" pos:column="23"/></literal></expr>]<pos:position pos:line="43" pos:column="24"/></index></name></decl>;<pos:position pos:line="43" pos:column="25"/></decl_stmt>
      <if pos:line="44" pos:column="7">if <condition pos:line="44" pos:column="10">(<expr><name pos:line="44" pos:column="11">errno<pos:position pos:line="44" pos:column="16"/></name> <operator pos:line="44" pos:column="17">==<pos:position pos:line="44" pos:column="19"/></operator> <name pos:line="44" pos:column="20">EINTR<pos:position pos:line="44" pos:column="25"/></name></expr>)<pos:position pos:line="44" pos:column="26"/></condition><then pos:line="44" pos:column="26">
        <block type="pseudo"><continue pos:line="45" pos:column="9">continue;<pos:position pos:line="45" pos:column="18"/></continue></block></then></if>
      <expr_stmt><expr><call><name pos:line="46" pos:column="7">ERROR<pos:position pos:line="46" pos:column="12"/></name> <argument_list pos:line="46" pos:column="13">(<argument><expr><literal type="string" pos:line="46" pos:column="14">"gmond plugin: poll failed: %s"<pos:position pos:line="46" pos:column="45"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="47" pos:column="11">sstrerror<pos:position pos:line="47" pos:column="20"/></name> <argument_list pos:line="47" pos:column="21">(<argument><expr><name pos:line="47" pos:column="22">errno<pos:position pos:line="47" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="29">errbuf<pos:position pos:line="47" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="47" pos:column="37">sizeof <argument_list pos:line="47" pos:column="44">(<argument><expr><name pos:line="47" pos:column="45">errbuf<pos:position pos:line="47" pos:column="51"/></name></expr></argument>)<pos:position pos:line="47" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="47" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="55"/></expr_stmt>
      <break pos:line="48" pos:column="7">break;<pos:position pos:line="48" pos:column="13"/></break>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>

    <for pos:line="51" pos:column="5">for <control pos:line="51" pos:column="9">(<init><expr><name pos:line="51" pos:column="10">i<pos:position pos:line="51" pos:column="11"/></name> <operator pos:line="51" pos:column="12">=<pos:position pos:line="51" pos:column="13"/></operator> <literal type="number" pos:line="51" pos:column="14">0<pos:position pos:line="51" pos:column="15"/></literal></expr>;<pos:position pos:line="51" pos:column="16"/></init> <condition><expr><name pos:line="51" pos:column="17">i<pos:position pos:line="51" pos:column="18"/></name> <operator pos:line="51" pos:column="19">&lt;<pos:position pos:line="51" pos:column="23"/></operator> <name pos:line="51" pos:column="21">mc_receive_sockets_num<pos:position pos:line="51" pos:column="43"/></name></expr>;<pos:position pos:line="51" pos:column="44"/></condition> <incr><expr><name pos:line="51" pos:column="45">i<pos:position pos:line="51" pos:column="46"/></name><operator pos:line="51" pos:column="46">++<pos:position pos:line="51" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="51" pos:column="49"/></control>
    <block pos:line="52" pos:column="5">{
      <if pos:line="53" pos:column="7">if <condition pos:line="53" pos:column="10">(<expr><name><name pos:line="53" pos:column="11">mc_receive_sockets<pos:position pos:line="53" pos:column="29"/></name><index pos:line="53" pos:column="29">[<expr><name pos:line="53" pos:column="30">i<pos:position pos:line="53" pos:column="31"/></name></expr>]<pos:position pos:line="53" pos:column="32"/></index></name><operator pos:line="53" pos:column="32">.<pos:position pos:line="53" pos:column="33"/></operator><name pos:line="53" pos:column="33">revents<pos:position pos:line="53" pos:column="40"/></name> <operator pos:line="53" pos:column="41">!=<pos:position pos:line="53" pos:column="43"/></operator> <literal type="number" pos:line="53" pos:column="44">0<pos:position pos:line="53" pos:column="45"/></literal></expr>)<pos:position pos:line="53" pos:column="46"/></condition><then pos:line="53" pos:column="46">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="9">mc_handle_socket<pos:position pos:line="54" pos:column="25"/></name> <argument_list pos:line="54" pos:column="26">(<argument><expr><name pos:line="54" pos:column="27">mc_receive_sockets<pos:position pos:line="54" pos:column="45"/></name> <operator pos:line="54" pos:column="46">+<pos:position pos:line="54" pos:column="47"/></operator> <name pos:line="54" pos:column="48">i<pos:position pos:line="54" pos:column="49"/></name></expr></argument>)<pos:position pos:line="54" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="51"/></expr_stmt></block></then></if>
    }<pos:position pos:line="55" pos:column="6"/></block></for>
  }<pos:position pos:line="56" pos:column="4"/></block></while> <comment type="block" pos:line="56" pos:column="5">/* while (mc_receive_thread_loop != 0) */</comment>

  <return pos:line="58" pos:column="3">return <expr><operator pos:line="58" pos:column="10">(<pos:position pos:line="58" pos:column="11"/></operator><operator pos:line="58" pos:column="11">(<pos:position pos:line="58" pos:column="12"/></operator><name pos:line="58" pos:column="12">void<pos:position pos:line="58" pos:column="16"/></name> <operator pos:line="58" pos:column="17">*<pos:position pos:line="58" pos:column="18"/></operator><operator pos:line="58" pos:column="18">)<pos:position pos:line="58" pos:column="19"/></operator> <literal type="number" pos:line="58" pos:column="20">0<pos:position pos:line="58" pos:column="21"/></literal><operator pos:line="58" pos:column="21">)<pos:position pos:line="58" pos:column="22"/></operator></expr>;<pos:position pos:line="58" pos:column="23"/></return>
}<pos:position pos:line="59" pos:column="2"/></block></function></unit>

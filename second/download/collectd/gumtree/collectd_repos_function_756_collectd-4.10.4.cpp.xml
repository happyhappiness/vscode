<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_756_collectd-4.10.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">fc_exec<pos:position pos:line="1" pos:column="19"/></name> <parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">int<pos:position pos:line="1" pos:column="24"/></name></type> <name pos:line="1" pos:column="25">type<pos:position pos:line="1" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">data_set_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">ds<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="53">const<pos:position pos:line="1" pos:column="58"/></specifier> <name pos:line="1" pos:column="59">value_list_t<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">vl<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="2" pos:column="17">notification_meta_t<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier><modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">meta<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">void<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier><modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">user_data<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">pfc_user_data_t<pos:position pos:line="4" pos:column="24"/></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="26">data<pos:position pos:line="4" pos:column="30"/></name> <init pos:line="4" pos:column="31">= <expr><operator pos:line="4" pos:column="33">*<pos:position pos:line="4" pos:column="34"/></operator><operator pos:line="4" pos:column="34">(<pos:position pos:line="4" pos:column="35"/></operator><name pos:line="4" pos:column="35">pfc_user_data_t<pos:position pos:line="4" pos:column="50"/></name> <operator pos:line="4" pos:column="51">*<pos:position pos:line="4" pos:column="52"/></operator><operator pos:line="4" pos:column="52">*<pos:position pos:line="4" pos:column="53"/></operator><operator pos:line="4" pos:column="53">)<pos:position pos:line="4" pos:column="54"/></operator><name pos:line="4" pos:column="54">user_data<pos:position pos:line="4" pos:column="63"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="64"/></decl_stmt>

	<expr_stmt><expr><name pos:line="6" pos:column="9">dTHX<pos:position pos:line="6" pos:column="13"/></name></expr>;<pos:position pos:line="6" pos:column="14"/></expr_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">NULL<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">==<pos:position pos:line="8" pos:column="20"/></operator> <name pos:line="8" pos:column="21">perl_threads<pos:position pos:line="8" pos:column="33"/></name></expr>)<pos:position pos:line="8" pos:column="34"/></condition><then pos:line="8" pos:column="34">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><literal type="number" pos:line="9" pos:column="24">0<pos:position pos:line="9" pos:column="25"/></literal></expr>;<pos:position pos:line="9" pos:column="26"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="11" pos:column="9">assert<pos:position pos:line="11" pos:column="15"/></name> <argument_list pos:line="11" pos:column="16">(<argument><expr><name pos:line="11" pos:column="17">NULL<pos:position pos:line="11" pos:column="21"/></name> <operator pos:line="11" pos:column="22">!=<pos:position pos:line="11" pos:column="24"/></operator> <name pos:line="11" pos:column="25">data<pos:position pos:line="11" pos:column="29"/></name></expr></argument>)<pos:position pos:line="11" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">NULL<pos:position pos:line="13" pos:column="17"/></name> <operator pos:line="13" pos:column="18">==<pos:position pos:line="13" pos:column="20"/></operator> <name pos:line="13" pos:column="21">aTHX<pos:position pos:line="13" pos:column="25"/></name></expr>)<pos:position pos:line="13" pos:column="26"/></condition><then pos:line="13" pos:column="26"> <block pos:line="13" pos:column="27">{
		<decl_stmt><decl><type><name pos:line="14" pos:column="17">c_ithread_t<pos:position pos:line="14" pos:column="28"/></name> <modifier pos:line="14" pos:column="29">*<pos:position pos:line="14" pos:column="30"/></modifier></type><name pos:line="14" pos:column="30">t<pos:position pos:line="14" pos:column="31"/></name> <init pos:line="14" pos:column="32">= <expr><name pos:line="14" pos:column="34">NULL<pos:position pos:line="14" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="39"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="16" pos:column="17">pthread_mutex_lock<pos:position pos:line="16" pos:column="35"/></name> <argument_list pos:line="16" pos:column="36">(<argument><expr><operator pos:line="16" pos:column="37">&amp;<pos:position pos:line="16" pos:column="42"/></operator><name><name pos:line="16" pos:column="38">perl_threads<pos:position pos:line="16" pos:column="50"/></name><operator pos:line="16" pos:column="50">-&gt;<pos:position pos:line="16" pos:column="55"/></operator><name pos:line="16" pos:column="52">mutex<pos:position pos:line="16" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><name pos:line="17" pos:column="17">t<pos:position pos:line="17" pos:column="18"/></name> <operator pos:line="17" pos:column="19">=<pos:position pos:line="17" pos:column="20"/></operator> <call><name pos:line="17" pos:column="21">c_ithread_create<pos:position pos:line="17" pos:column="37"/></name> <argument_list pos:line="17" pos:column="38">(<argument><expr><name><name pos:line="17" pos:column="39">perl_threads<pos:position pos:line="17" pos:column="51"/></name><operator pos:line="17" pos:column="51">-&gt;<pos:position pos:line="17" pos:column="56"/></operator><name pos:line="17" pos:column="53">head<pos:position pos:line="17" pos:column="57"/></name><operator pos:line="17" pos:column="57">-&gt;<pos:position pos:line="17" pos:column="62"/></operator><name pos:line="17" pos:column="59">interp<pos:position pos:line="17" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="67"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">pthread_mutex_unlock<pos:position pos:line="18" pos:column="37"/></name> <argument_list pos:line="18" pos:column="38">(<argument><expr><operator pos:line="18" pos:column="39">&amp;<pos:position pos:line="18" pos:column="44"/></operator><name><name pos:line="18" pos:column="40">perl_threads<pos:position pos:line="18" pos:column="52"/></name><operator pos:line="18" pos:column="52">-&gt;<pos:position pos:line="18" pos:column="57"/></operator><name pos:line="18" pos:column="54">mutex<pos:position pos:line="18" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="61"/></expr_stmt>

		<expr_stmt><expr><name pos:line="20" pos:column="17">aTHX<pos:position pos:line="20" pos:column="21"/></name> <operator pos:line="20" pos:column="22">=<pos:position pos:line="20" pos:column="23"/></operator> <name><name pos:line="20" pos:column="24">t<pos:position pos:line="20" pos:column="25"/></name><operator pos:line="20" pos:column="25">-&gt;<pos:position pos:line="20" pos:column="30"/></operator><name pos:line="20" pos:column="27">interp<pos:position pos:line="20" pos:column="33"/></name></name></expr>;<pos:position pos:line="20" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="23" pos:column="9">log_debug<pos:position pos:line="23" pos:column="18"/></name> <argument_list pos:line="23" pos:column="19">(<argument><expr><literal type="string" pos:line="23" pos:column="20">"fc_exec: c_ithread: interp = %p (active threads: %i)"<pos:position pos:line="23" pos:column="74"/></literal></expr></argument>,
			<argument><expr><name pos:line="24" pos:column="25">aTHX<pos:position pos:line="24" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="31">perl_threads<pos:position pos:line="24" pos:column="43"/></name><operator pos:line="24" pos:column="43">-&gt;<pos:position pos:line="24" pos:column="48"/></operator><name pos:line="24" pos:column="45">number_of_threads<pos:position pos:line="24" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="64"/></expr_stmt>

	<return pos:line="26" pos:column="9">return <macro><name pos:line="26" pos:column="16">fc_call<pos:position pos:line="26" pos:column="23"/></name> <argument_list pos:line="26" pos:column="24">(<argument pos:line="26" pos:column="25">aTHX_ type<pos:position pos:line="26" pos:column="35"/></argument>, <argument pos:line="26" pos:column="37">FC_CB_EXEC<pos:position pos:line="26" pos:column="47"/></argument>, <argument pos:line="26" pos:column="49">data<pos:position pos:line="26" pos:column="53"/></argument>, <argument pos:line="26" pos:column="55">ds<pos:position pos:line="26" pos:column="57"/></argument>, <argument pos:line="26" pos:column="59">vl<pos:position pos:line="26" pos:column="61"/></argument>, <argument pos:line="26" pos:column="63">meta<pos:position pos:line="26" pos:column="67"/></argument>)<pos:position pos:line="26" pos:column="68"/></argument_list></macro>;<pos:position pos:line="26" pos:column="69"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

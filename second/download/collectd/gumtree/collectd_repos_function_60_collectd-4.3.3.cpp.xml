<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_60_collectd-4.3.3.cpp" pos:tabs="8"><decl_stmt><decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">foreach_dirinpath<pos:position pos:line="2" pos:column="18"/></name> <argument_list pos:line="2" pos:column="19">(<argument><expr><name pos:line="2" pos:column="20">search_path<pos:position pos:line="2" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="33">base_name<pos:position pos:line="2" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="44">func<pos:position pos:line="2" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="50">data1<pos:position pos:line="2" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="57">data2<pos:position pos:line="2" pos:column="62"/></name></expr></argument>)<pos:position pos:line="2" pos:column="63"/></argument_list>
     const <name pos:line="3" pos:column="12">char<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier><name pos:line="3" pos:column="18">search_path<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
     <decl_stmt><decl><type><specifier pos:line="4" pos:column="6">const<pos:position pos:line="4" pos:column="11"/></specifier> <name pos:line="4" pos:column="12">char<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">base_name<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
     <decl_stmt><decl><type><name pos:line="5" pos:column="6">foreach_callback_func<pos:position pos:line="5" pos:column="27"/></name> <modifier pos:line="5" pos:column="28">*<pos:position pos:line="5" pos:column="29"/></modifier></type><name pos:line="5" pos:column="29">func<pos:position pos:line="5" pos:column="33"/></name></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
     <decl_stmt><decl><type><name pos:line="6" pos:column="6">lt_ptr<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">data1<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
     <decl_stmt><decl><type><name pos:line="7" pos:column="6">lt_ptr<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">data2<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
<block pos:line="8" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type>	 <name pos:line="9" pos:column="10">result<pos:position pos:line="9" pos:column="16"/></name>		<init pos:line="9" pos:column="25">= <expr><literal type="number" pos:line="9" pos:column="27">0<pos:position pos:line="9" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type>	 <name pos:line="10" pos:column="10">filenamesize<pos:position pos:line="10" pos:column="22"/></name>	<init pos:line="10" pos:column="25">= <expr><literal type="number" pos:line="10" pos:column="27">0<pos:position pos:line="10" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">size_t<pos:position pos:line="11" pos:column="9"/></name></type> <name pos:line="11" pos:column="10">lenbase<pos:position pos:line="11" pos:column="17"/></name>	<init pos:line="11" pos:column="25">= <expr><call><name pos:line="11" pos:column="27">LT_STRLEN<pos:position pos:line="11" pos:column="36"/></name> <argument_list pos:line="11" pos:column="37">(<argument><expr><name pos:line="11" pos:column="38">base_name<pos:position pos:line="11" pos:column="47"/></name></expr></argument>)<pos:position pos:line="11" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="49"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">size_t<pos:position pos:line="12" pos:column="9"/></name></type> <name pos:line="12" pos:column="10">argz_len<pos:position pos:line="12" pos:column="18"/></name>	<init pos:line="12" pos:column="25">= <expr><literal type="number" pos:line="12" pos:column="27">0<pos:position pos:line="12" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">char<pos:position pos:line="13" pos:column="7"/></name> <modifier pos:line="13" pos:column="8">*<pos:position pos:line="13" pos:column="9"/></modifier></type><name pos:line="13" pos:column="9">argz<pos:position pos:line="13" pos:column="13"/></name>		<init pos:line="13" pos:column="25">= <expr><literal type="number" pos:line="13" pos:column="27">0<pos:position pos:line="13" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">char<pos:position pos:line="14" pos:column="7"/></name> <modifier pos:line="14" pos:column="8">*<pos:position pos:line="14" pos:column="9"/></modifier></type><name pos:line="14" pos:column="9">filename<pos:position pos:line="14" pos:column="17"/></name>	<init pos:line="14" pos:column="25">= <expr><literal type="number" pos:line="14" pos:column="27">0<pos:position pos:line="14" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">char<pos:position pos:line="15" pos:column="7"/></name> <modifier pos:line="15" pos:column="8">*<pos:position pos:line="15" pos:column="9"/></modifier></type><name pos:line="15" pos:column="9">canonical<pos:position pos:line="15" pos:column="18"/></name>	<init pos:line="15" pos:column="25">= <expr><literal type="number" pos:line="15" pos:column="27">0<pos:position pos:line="15" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="29"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">LT_DLMUTEX_LOCK<pos:position pos:line="17" pos:column="18"/></name> <argument_list pos:line="17" pos:column="19">()<pos:position pos:line="17" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="22"/></expr_stmt>

  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><operator pos:line="19" pos:column="7">!<pos:position pos:line="19" pos:column="8"/></operator><name pos:line="19" pos:column="8">search_path<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">||<pos:position pos:line="19" pos:column="22"/></operator> <operator pos:line="19" pos:column="23">!<pos:position pos:line="19" pos:column="24"/></operator><operator pos:line="19" pos:column="24">*<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="25">search_path<pos:position pos:line="19" pos:column="36"/></name></expr>)<pos:position pos:line="19" pos:column="37"/></condition><then pos:line="19" pos:column="37">
    <block pos:line="20" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">LT_DLMUTEX_SETERROR<pos:position pos:line="21" pos:column="26"/></name> <argument_list pos:line="21" pos:column="27">(<argument><expr><call><name pos:line="21" pos:column="28">LT_DLSTRERROR<pos:position pos:line="21" pos:column="41"/></name> <argument_list pos:line="21" pos:column="42">(<argument><expr><name pos:line="21" pos:column="43">FILE_NOT_FOUND<pos:position pos:line="21" pos:column="57"/></name></expr></argument>)<pos:position pos:line="21" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="60"/></expr_stmt>
      <goto pos:line="22" pos:column="7">goto <name pos:line="22" pos:column="12">cleanup<pos:position pos:line="22" pos:column="19"/></name>;<pos:position pos:line="22" pos:column="20"/></goto>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><call><name pos:line="25" pos:column="7">canonicalize_path<pos:position pos:line="25" pos:column="24"/></name> <argument_list pos:line="25" pos:column="25">(<argument><expr><name pos:line="25" pos:column="26">search_path<pos:position pos:line="25" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="39">&amp;<pos:position pos:line="25" pos:column="44"/></operator><name pos:line="25" pos:column="40">canonical<pos:position pos:line="25" pos:column="49"/></name></expr></argument>)<pos:position pos:line="25" pos:column="50"/></argument_list></call> <operator pos:line="25" pos:column="51">!=<pos:position pos:line="25" pos:column="53"/></operator> <literal type="number" pos:line="25" pos:column="54">0<pos:position pos:line="25" pos:column="55"/></literal></expr>)<pos:position pos:line="25" pos:column="56"/></condition><then pos:line="25" pos:column="56">
    <block type="pseudo"><goto pos:line="26" pos:column="5">goto <name pos:line="26" pos:column="10">cleanup<pos:position pos:line="26" pos:column="17"/></name>;<pos:position pos:line="26" pos:column="18"/></goto></block></then></if>

  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><call><name pos:line="28" pos:column="7">argzize_path<pos:position pos:line="28" pos:column="19"/></name> <argument_list pos:line="28" pos:column="20">(<argument><expr><name pos:line="28" pos:column="21">canonical<pos:position pos:line="28" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="32">&amp;<pos:position pos:line="28" pos:column="37"/></operator><name pos:line="28" pos:column="33">argz<pos:position pos:line="28" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="39">&amp;<pos:position pos:line="28" pos:column="44"/></operator><name pos:line="28" pos:column="40">argz_len<pos:position pos:line="28" pos:column="48"/></name></expr></argument>)<pos:position pos:line="28" pos:column="49"/></argument_list></call> <operator pos:line="28" pos:column="50">!=<pos:position pos:line="28" pos:column="52"/></operator> <literal type="number" pos:line="28" pos:column="53">0<pos:position pos:line="28" pos:column="54"/></literal></expr>)<pos:position pos:line="28" pos:column="55"/></condition><then pos:line="28" pos:column="55">
    <block type="pseudo"><goto pos:line="29" pos:column="5">goto <name pos:line="29" pos:column="10">cleanup<pos:position pos:line="29" pos:column="17"/></name>;<pos:position pos:line="29" pos:column="18"/></goto></block></then></if>

  <block pos:line="31" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="32" pos:column="5">char<pos:position pos:line="32" pos:column="9"/></name> <modifier pos:line="32" pos:column="10">*<pos:position pos:line="32" pos:column="11"/></modifier></type><name pos:line="32" pos:column="11">dir_name<pos:position pos:line="32" pos:column="19"/></name> <init pos:line="32" pos:column="20">= <expr><literal type="number" pos:line="32" pos:column="22">0<pos:position pos:line="32" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="32" pos:column="24"/></decl_stmt>
    <while pos:line="33" pos:column="5">while <condition pos:line="33" pos:column="11">(<expr><operator pos:line="33" pos:column="12">(<pos:position pos:line="33" pos:column="13"/></operator><name pos:line="33" pos:column="13">dir_name<pos:position pos:line="33" pos:column="21"/></name> <operator pos:line="33" pos:column="22">=<pos:position pos:line="33" pos:column="23"/></operator> <call><name pos:line="33" pos:column="24">argz_next<pos:position pos:line="33" pos:column="33"/></name> <argument_list pos:line="33" pos:column="34">(<argument><expr><name pos:line="33" pos:column="35">argz<pos:position pos:line="33" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="41">argz_len<pos:position pos:line="33" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="51">dir_name<pos:position pos:line="33" pos:column="59"/></name></expr></argument>)<pos:position pos:line="33" pos:column="60"/></argument_list></call><operator pos:line="33" pos:column="60">)<pos:position pos:line="33" pos:column="61"/></operator></expr>)<pos:position pos:line="33" pos:column="62"/></condition>
      <block pos:line="34" pos:column="7">{
	<decl_stmt><decl><type><name pos:line="35" pos:column="9">size_t<pos:position pos:line="35" pos:column="15"/></name></type> <name pos:line="35" pos:column="16">lendir<pos:position pos:line="35" pos:column="22"/></name> <init pos:line="35" pos:column="23">= <expr><call><name pos:line="35" pos:column="25">LT_STRLEN<pos:position pos:line="35" pos:column="34"/></name> <argument_list pos:line="35" pos:column="35">(<argument><expr><name pos:line="35" pos:column="36">dir_name<pos:position pos:line="35" pos:column="44"/></name></expr></argument>)<pos:position pos:line="35" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="35" pos:column="46"/></decl_stmt>

	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name pos:line="37" pos:column="13">lendir<pos:position pos:line="37" pos:column="19"/></name> <operator pos:line="37" pos:column="20">+<pos:position pos:line="37" pos:column="21"/></operator><literal type="number" pos:line="37" pos:column="21">1<pos:position pos:line="37" pos:column="22"/></literal> <operator pos:line="37" pos:column="23">+<pos:position pos:line="37" pos:column="24"/></operator><name pos:line="37" pos:column="24">lenbase<pos:position pos:line="37" pos:column="31"/></name> <operator pos:line="37" pos:column="32">&gt;=<pos:position pos:line="37" pos:column="37"/></operator> <name pos:line="37" pos:column="35">filenamesize<pos:position pos:line="37" pos:column="47"/></name></expr>)<pos:position pos:line="37" pos:column="48"/></condition><then pos:line="37" pos:column="48">
	<block pos:line="38" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="39" pos:column="11">LT_DLFREE<pos:position pos:line="39" pos:column="20"/></name> <argument_list pos:line="39" pos:column="21">(<argument><expr><name pos:line="39" pos:column="22">filename<pos:position pos:line="39" pos:column="30"/></name></expr></argument>)<pos:position pos:line="39" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="32"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="40" pos:column="11">filenamesize<pos:position pos:line="40" pos:column="23"/></name>	<operator pos:line="40" pos:column="25">=<pos:position pos:line="40" pos:column="26"/></operator> <name pos:line="40" pos:column="27">lendir<pos:position pos:line="40" pos:column="33"/></name> <operator pos:line="40" pos:column="34">+<pos:position pos:line="40" pos:column="35"/></operator><literal type="number" pos:line="40" pos:column="35">1<pos:position pos:line="40" pos:column="36"/></literal> <operator pos:line="40" pos:column="37">+<pos:position pos:line="40" pos:column="38"/></operator><name pos:line="40" pos:column="38">lenbase<pos:position pos:line="40" pos:column="45"/></name> <operator pos:line="40" pos:column="46">+<pos:position pos:line="40" pos:column="47"/></operator><literal type="number" pos:line="40" pos:column="47">1<pos:position pos:line="40" pos:column="48"/></literal></expr>;<pos:position pos:line="40" pos:column="49"/></expr_stmt> <comment type="block" pos:line="40" pos:column="50">/* "/d" + '/' + "f" + '\0' */</comment>
	  <expr_stmt><expr><name pos:line="41" pos:column="11">filename<pos:position pos:line="41" pos:column="19"/></name>	<operator pos:line="41" pos:column="25">=<pos:position pos:line="41" pos:column="26"/></operator> <call><name pos:line="41" pos:column="27">LT_EMALLOC<pos:position pos:line="41" pos:column="37"/></name> <argument_list pos:line="41" pos:column="38">(<argument><expr><name pos:line="41" pos:column="39">char<pos:position pos:line="41" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="45">filenamesize<pos:position pos:line="41" pos:column="57"/></name></expr></argument>)<pos:position pos:line="41" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="59"/></expr_stmt>
	  <if pos:line="42" pos:column="11">if <condition pos:line="42" pos:column="14">(<expr><operator pos:line="42" pos:column="15">!<pos:position pos:line="42" pos:column="16"/></operator><name pos:line="42" pos:column="16">filename<pos:position pos:line="42" pos:column="24"/></name></expr>)<pos:position pos:line="42" pos:column="25"/></condition><then pos:line="42" pos:column="25">
	    <block type="pseudo"><goto pos:line="43" pos:column="13">goto <name pos:line="43" pos:column="18">cleanup<pos:position pos:line="43" pos:column="25"/></name>;<pos:position pos:line="43" pos:column="26"/></goto></block></then></if>
	}<pos:position pos:line="44" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="46" pos:column="9">assert<pos:position pos:line="46" pos:column="15"/></name> <argument_list pos:line="46" pos:column="16">(<argument><expr><name pos:line="46" pos:column="17">filenamesize<pos:position pos:line="46" pos:column="29"/></name> <operator pos:line="46" pos:column="30">&gt;<pos:position pos:line="46" pos:column="34"/></operator> <name pos:line="46" pos:column="32">lendir<pos:position pos:line="46" pos:column="38"/></name></expr></argument>)<pos:position pos:line="46" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="47" pos:column="9">strcpy<pos:position pos:line="47" pos:column="15"/></name> <argument_list pos:line="47" pos:column="16">(<argument><expr><name pos:line="47" pos:column="17">filename<pos:position pos:line="47" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="27">dir_name<pos:position pos:line="47" pos:column="35"/></name></expr></argument>)<pos:position pos:line="47" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="37"/></expr_stmt>

	<if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><name pos:line="49" pos:column="13">base_name<pos:position pos:line="49" pos:column="22"/></name> <operator pos:line="49" pos:column="23">&amp;&amp;<pos:position pos:line="49" pos:column="33"/></operator> <operator pos:line="49" pos:column="26">*<pos:position pos:line="49" pos:column="27"/></operator><name pos:line="49" pos:column="27">base_name<pos:position pos:line="49" pos:column="36"/></name></expr>)<pos:position pos:line="49" pos:column="37"/></condition><then pos:line="49" pos:column="37">
	  <block pos:line="50" pos:column="11">{
	    <if pos:line="51" pos:column="13">if <condition pos:line="51" pos:column="16">(<expr><name><name pos:line="51" pos:column="17">filename<pos:position pos:line="51" pos:column="25"/></name><index pos:line="51" pos:column="25">[<expr><name pos:line="51" pos:column="26">lendir<pos:position pos:line="51" pos:column="32"/></name> <operator pos:line="51" pos:column="33">-<pos:position pos:line="51" pos:column="34"/></operator><literal type="number" pos:line="51" pos:column="34">1<pos:position pos:line="51" pos:column="35"/></literal></expr>]<pos:position pos:line="51" pos:column="36"/></index></name> <operator pos:line="51" pos:column="37">!=<pos:position pos:line="51" pos:column="39"/></operator> <literal type="char" pos:line="51" pos:column="40">'/'<pos:position pos:line="51" pos:column="43"/></literal></expr>)<pos:position pos:line="51" pos:column="44"/></condition><then pos:line="51" pos:column="44">
	      <block type="pseudo"><expr_stmt><expr><name><name pos:line="52" pos:column="15">filename<pos:position pos:line="52" pos:column="23"/></name><index pos:line="52" pos:column="23">[<expr><name pos:line="52" pos:column="24">lendir<pos:position pos:line="52" pos:column="30"/></name><operator pos:line="52" pos:column="30">++<pos:position pos:line="52" pos:column="32"/></operator></expr>]<pos:position pos:line="52" pos:column="33"/></index></name> <operator pos:line="52" pos:column="34">=<pos:position pos:line="52" pos:column="35"/></operator> <literal type="char" pos:line="52" pos:column="36">'/'<pos:position pos:line="52" pos:column="39"/></literal></expr>;<pos:position pos:line="52" pos:column="40"/></expr_stmt></block></then></if>
	    <expr_stmt><expr><call><name pos:line="53" pos:column="13">strcpy<pos:position pos:line="53" pos:column="19"/></name> <argument_list pos:line="53" pos:column="20">(<argument><expr><name pos:line="53" pos:column="21">filename<pos:position pos:line="53" pos:column="29"/></name> <operator pos:line="53" pos:column="30">+<pos:position pos:line="53" pos:column="31"/></operator><name pos:line="53" pos:column="31">lendir<pos:position pos:line="53" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="39">base_name<pos:position pos:line="53" pos:column="48"/></name></expr></argument>)<pos:position pos:line="53" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="50"/></expr_stmt>
	  }<pos:position pos:line="54" pos:column="12"/></block></then></if>

	<if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><operator pos:line="56" pos:column="13">(<pos:position pos:line="56" pos:column="14"/></operator><name pos:line="56" pos:column="14">result<pos:position pos:line="56" pos:column="20"/></name> <operator pos:line="56" pos:column="21">=<pos:position pos:line="56" pos:column="22"/></operator> <call pos:line="56" pos:column="23">(<modifier pos:line="56" pos:column="24">*<pos:position pos:line="56" pos:column="25"/></modifier><name pos:line="56" pos:column="25">func<pos:position pos:line="56" pos:column="29"/></name>) <argument_list pos:line="56" pos:column="31">(<argument><expr><name pos:line="56" pos:column="32">filename<pos:position pos:line="56" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="42">data1<pos:position pos:line="56" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="49">data2<pos:position pos:line="56" pos:column="54"/></name></expr></argument>)<pos:position pos:line="56" pos:column="55"/></argument_list></call><operator pos:line="56" pos:column="55">)<pos:position pos:line="56" pos:column="56"/></operator></expr>)<pos:position pos:line="56" pos:column="57"/></condition><then pos:line="56" pos:column="57">
	  <block pos:line="57" pos:column="11">{
	    <break pos:line="58" pos:column="13">break;<pos:position pos:line="58" pos:column="19"/></break>
	  }<pos:position pos:line="59" pos:column="12"/></block></then></if>
      }<pos:position pos:line="60" pos:column="8"/></block></while>
  }<pos:position pos:line="61" pos:column="4"/></block>

 <label><name pos:line="63" pos:column="2">cleanup<pos:position pos:line="63" pos:column="9"/></name>:<pos:position pos:line="63" pos:column="10"/></label>
  <expr_stmt><expr><call><name pos:line="64" pos:column="3">LT_DLFREE<pos:position pos:line="64" pos:column="12"/></name> <argument_list pos:line="64" pos:column="13">(<argument><expr><name pos:line="64" pos:column="14">argz<pos:position pos:line="64" pos:column="18"/></name></expr></argument>)<pos:position pos:line="64" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="65" pos:column="3">LT_DLFREE<pos:position pos:line="65" pos:column="12"/></name> <argument_list pos:line="65" pos:column="13">(<argument><expr><name pos:line="65" pos:column="14">canonical<pos:position pos:line="65" pos:column="23"/></name></expr></argument>)<pos:position pos:line="65" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="66" pos:column="3">LT_DLFREE<pos:position pos:line="66" pos:column="12"/></name> <argument_list pos:line="66" pos:column="13">(<argument><expr><name pos:line="66" pos:column="14">filename<pos:position pos:line="66" pos:column="22"/></name></expr></argument>)<pos:position pos:line="66" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="24"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="68" pos:column="3">LT_DLMUTEX_UNLOCK<pos:position pos:line="68" pos:column="20"/></name> <argument_list pos:line="68" pos:column="21">()<pos:position pos:line="68" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="24"/></expr_stmt>

  <return pos:line="70" pos:column="3">return <expr><name pos:line="70" pos:column="10">result<pos:position pos:line="70" pos:column="16"/></name></expr>;<pos:position pos:line="70" pos:column="17"/></return>
}<pos:position pos:line="71" pos:column="2"/></block></unit>

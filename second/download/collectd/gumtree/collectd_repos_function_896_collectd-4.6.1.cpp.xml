<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_896_collectd-4.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ntpd_connect<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">void<pos:position pos:line="1" pos:column="30"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="31"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">host<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">port<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">addrinfo<pos:position pos:line="6" pos:column="24"/></name></name></type>  <name pos:line="6" pos:column="26">ai_hints<pos:position pos:line="6" pos:column="34"/></name></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">addrinfo<pos:position pos:line="7" pos:column="24"/></name></name> <modifier pos:line="7" pos:column="25">*<pos:position pos:line="7" pos:column="26"/></modifier></type><name pos:line="7" pos:column="26">ai_list<pos:position pos:line="7" pos:column="33"/></name></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">addrinfo<pos:position pos:line="8" pos:column="24"/></name></name> <modifier pos:line="8" pos:column="25">*<pos:position pos:line="8" pos:column="26"/></modifier></type><name pos:line="8" pos:column="26">ai_ptr<pos:position pos:line="8" pos:column="32"/></name></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type>              <name pos:line="9" pos:column="26">status<pos:position pos:line="9" pos:column="32"/></name></decl>;<pos:position pos:line="9" pos:column="33"/></decl_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">sock_descr<pos:position pos:line="11" pos:column="23"/></name> <operator pos:line="11" pos:column="24">&gt;=<pos:position pos:line="11" pos:column="29"/></operator> <literal type="number" pos:line="11" pos:column="27">0<pos:position pos:line="11" pos:column="28"/></literal></expr>)<pos:position pos:line="11" pos:column="29"/></condition><then pos:line="11" pos:column="29">
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><operator pos:line="12" pos:column="24">(<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="25">sock_descr<pos:position pos:line="12" pos:column="35"/></name><operator pos:line="12" pos:column="35">)<pos:position pos:line="12" pos:column="36"/></operator></expr>;<pos:position pos:line="12" pos:column="37"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="14" pos:column="9">DEBUG<pos:position pos:line="14" pos:column="14"/></name> <argument_list pos:line="14" pos:column="15">(<argument><expr><literal type="string" pos:line="14" pos:column="16">"Opening a new socket"<pos:position pos:line="14" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="40"/></expr_stmt>

	<expr_stmt><expr><name pos:line="16" pos:column="9">host<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <name pos:line="16" pos:column="16">ntpd_host<pos:position pos:line="16" pos:column="25"/></name></expr>;<pos:position pos:line="16" pos:column="26"/></expr_stmt>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">host<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">==<pos:position pos:line="17" pos:column="20"/></operator> <name pos:line="17" pos:column="21">NULL<pos:position pos:line="17" pos:column="25"/></name></expr>)<pos:position pos:line="17" pos:column="26"/></condition><then pos:line="17" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="17">host<pos:position pos:line="18" pos:column="21"/></name> <operator pos:line="18" pos:column="22">=<pos:position pos:line="18" pos:column="23"/></operator> <name pos:line="18" pos:column="24">NTPD_DEFAULT_HOST<pos:position pos:line="18" pos:column="41"/></name></expr>;<pos:position pos:line="18" pos:column="42"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="20" pos:column="9">port<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">=<pos:position pos:line="20" pos:column="15"/></operator> <name pos:line="20" pos:column="16">ntpd_port<pos:position pos:line="20" pos:column="25"/></name></expr>;<pos:position pos:line="20" pos:column="26"/></expr_stmt>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><call><name pos:line="21" pos:column="13">strlen<pos:position pos:line="21" pos:column="19"/></name> <argument_list pos:line="21" pos:column="20">(<argument><expr><name pos:line="21" pos:column="21">port<pos:position pos:line="21" pos:column="25"/></name></expr></argument>)<pos:position pos:line="21" pos:column="26"/></argument_list></call> <operator pos:line="21" pos:column="27">==<pos:position pos:line="21" pos:column="29"/></operator> <literal type="number" pos:line="21" pos:column="30">0<pos:position pos:line="21" pos:column="31"/></literal></expr>)<pos:position pos:line="21" pos:column="32"/></condition><then pos:line="21" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="17">port<pos:position pos:line="22" pos:column="21"/></name> <operator pos:line="22" pos:column="22">=<pos:position pos:line="22" pos:column="23"/></operator> <name pos:line="22" pos:column="24">NTPD_DEFAULT_PORT<pos:position pos:line="22" pos:column="41"/></name></expr>;<pos:position pos:line="22" pos:column="42"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="24" pos:column="9">memset<pos:position pos:line="24" pos:column="15"/></name> <argument_list pos:line="24" pos:column="16">(<argument><expr><operator pos:line="24" pos:column="17">&amp;<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="18">ai_hints<pos:position pos:line="24" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="24" pos:column="28">'\0'<pos:position pos:line="24" pos:column="32"/></literal></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="34">sizeof <argument_list pos:line="24" pos:column="41">(<argument><expr><name pos:line="24" pos:column="42">ai_hints<pos:position pos:line="24" pos:column="50"/></name></expr></argument>)<pos:position pos:line="24" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="25" pos:column="9">ai_hints<pos:position pos:line="25" pos:column="17"/></name><operator pos:line="25" pos:column="17">.<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="18">ai_flags<pos:position pos:line="25" pos:column="26"/></name></name>    <operator pos:line="25" pos:column="30">=<pos:position pos:line="25" pos:column="31"/></operator> <literal type="number" pos:line="25" pos:column="32">0<pos:position pos:line="25" pos:column="33"/></literal></expr>;<pos:position pos:line="25" pos:column="34"/></expr_stmt>
<cpp:ifdef pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">ifdef<pos:position pos:line="26" pos:column="7"/></cpp:directive> <name pos:line="26" pos:column="8">AI_ADDRCONFIG<pos:position pos:line="26" pos:column="21"/></name></cpp:ifdef>
	<expr_stmt><expr><name><name pos:line="27" pos:column="9">ai_hints<pos:position pos:line="27" pos:column="17"/></name><operator pos:line="27" pos:column="17">.<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="18">ai_flags<pos:position pos:line="27" pos:column="26"/></name></name>   <operator pos:line="27" pos:column="29">|=<pos:position pos:line="27" pos:column="31"/></operator> <name pos:line="27" pos:column="32">AI_ADDRCONFIG<pos:position pos:line="27" pos:column="45"/></name></expr>;<pos:position pos:line="27" pos:column="46"/></expr_stmt>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif<pos:position pos:line="28" pos:column="7"/></cpp:directive></cpp:endif>
	<expr_stmt><expr><name><name pos:line="29" pos:column="9">ai_hints<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">.<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="18">ai_family<pos:position pos:line="29" pos:column="27"/></name></name>   <operator pos:line="29" pos:column="30">=<pos:position pos:line="29" pos:column="31"/></operator> <name pos:line="29" pos:column="32">PF_UNSPEC<pos:position pos:line="29" pos:column="41"/></name></expr>;<pos:position pos:line="29" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="30" pos:column="9">ai_hints<pos:position pos:line="30" pos:column="17"/></name><operator pos:line="30" pos:column="17">.<pos:position pos:line="30" pos:column="18"/></operator><name pos:line="30" pos:column="18">ai_socktype<pos:position pos:line="30" pos:column="29"/></name></name> <operator pos:line="30" pos:column="30">=<pos:position pos:line="30" pos:column="31"/></operator> <name pos:line="30" pos:column="32">SOCK_DGRAM<pos:position pos:line="30" pos:column="42"/></name></expr>;<pos:position pos:line="30" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="31" pos:column="9">ai_hints<pos:position pos:line="31" pos:column="17"/></name><operator pos:line="31" pos:column="17">.<pos:position pos:line="31" pos:column="18"/></operator><name pos:line="31" pos:column="18">ai_protocol<pos:position pos:line="31" pos:column="29"/></name></name> <operator pos:line="31" pos:column="30">=<pos:position pos:line="31" pos:column="31"/></operator> <name pos:line="31" pos:column="32">IPPROTO_UDP<pos:position pos:line="31" pos:column="43"/></name></expr>;<pos:position pos:line="31" pos:column="44"/></expr_stmt>

	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><operator pos:line="33" pos:column="13">(<pos:position pos:line="33" pos:column="14"/></operator><name pos:line="33" pos:column="14">status<pos:position pos:line="33" pos:column="20"/></name> <operator pos:line="33" pos:column="21">=<pos:position pos:line="33" pos:column="22"/></operator> <call><name pos:line="33" pos:column="23">getaddrinfo<pos:position pos:line="33" pos:column="34"/></name> <argument_list pos:line="33" pos:column="35">(<argument><expr><name pos:line="33" pos:column="36">host<pos:position pos:line="33" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="42">port<pos:position pos:line="33" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="48">&amp;<pos:position pos:line="33" pos:column="53"/></operator><name pos:line="33" pos:column="49">ai_hints<pos:position pos:line="33" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="59">&amp;<pos:position pos:line="33" pos:column="64"/></operator><name pos:line="33" pos:column="60">ai_list<pos:position pos:line="33" pos:column="67"/></name></expr></argument>)<pos:position pos:line="33" pos:column="68"/></argument_list></call><operator pos:line="33" pos:column="68">)<pos:position pos:line="33" pos:column="69"/></operator> <operator pos:line="33" pos:column="70">!=<pos:position pos:line="33" pos:column="72"/></operator> <literal type="number" pos:line="33" pos:column="73">0<pos:position pos:line="33" pos:column="74"/></literal></expr>)<pos:position pos:line="33" pos:column="75"/></condition><then pos:line="33" pos:column="75">
	<block pos:line="34" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="35" pos:column="17">char<pos:position pos:line="35" pos:column="21"/></name></type> <name><name pos:line="35" pos:column="22">errbuf<pos:position pos:line="35" pos:column="28"/></name><index pos:line="35" pos:column="28">[<expr><literal type="number" pos:line="35" pos:column="29">1024<pos:position pos:line="35" pos:column="33"/></literal></expr>]<pos:position pos:line="35" pos:column="34"/></index></name></decl>;<pos:position pos:line="35" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">ERROR<pos:position pos:line="36" pos:column="22"/></name> <argument_list pos:line="36" pos:column="23">(<argument><expr><literal type="string" pos:line="36" pos:column="24">"ntpd plugin: getaddrinfo (%s, %s): %s"<pos:position pos:line="36" pos:column="63"/></literal></expr></argument>,
				<argument><expr><name pos:line="37" pos:column="33">host<pos:position pos:line="37" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="39">port<pos:position pos:line="37" pos:column="43"/></name></expr></argument>,
				<argument><expr><ternary><condition><expr><operator pos:line="38" pos:column="33">(<pos:position pos:line="38" pos:column="34"/></operator><name pos:line="38" pos:column="34">status<pos:position pos:line="38" pos:column="40"/></name> <operator pos:line="38" pos:column="41">==<pos:position pos:line="38" pos:column="43"/></operator> <name pos:line="38" pos:column="44">EAI_SYSTEM<pos:position pos:line="38" pos:column="54"/></name><operator pos:line="38" pos:column="54">)<pos:position pos:line="38" pos:column="55"/></operator></expr>
				?<pos:position pos:line="39" pos:column="34"/></condition><then pos:line="39" pos:column="34"> <expr><call><name pos:line="39" pos:column="35">sstrerror<pos:position pos:line="39" pos:column="44"/></name> <argument_list pos:line="39" pos:column="45">(<argument><expr><name pos:line="39" pos:column="46">errno<pos:position pos:line="39" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="53">errbuf<pos:position pos:line="39" pos:column="59"/></name></expr></argument>, <argument><expr><sizeof pos:line="39" pos:column="61">sizeof <argument_list pos:line="39" pos:column="68">(<argument><expr><name pos:line="39" pos:column="69">errbuf<pos:position pos:line="39" pos:column="75"/></name></expr></argument>)<pos:position pos:line="39" pos:column="76"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="39" pos:column="77"/></argument_list></call></expr>
				<pos:position pos:line="40" pos:column="5"/></then><else pos:line="40" pos:column="33">: <expr><call><name pos:line="40" pos:column="35">gai_strerror<pos:position pos:line="40" pos:column="47"/></name> <argument_list pos:line="40" pos:column="48">(<argument><expr><name pos:line="40" pos:column="49">status<pos:position pos:line="40" pos:column="55"/></name></expr></argument>)<pos:position pos:line="40" pos:column="56"/></argument_list></call></expr></else></ternary></expr></argument>)<pos:position pos:line="40" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="58"/></expr_stmt>
		<return pos:line="41" pos:column="17">return <expr><operator pos:line="41" pos:column="24">(<pos:position pos:line="41" pos:column="25"/></operator><operator pos:line="41" pos:column="25">-<pos:position pos:line="41" pos:column="26"/></operator><literal type="number" pos:line="41" pos:column="26">1<pos:position pos:line="41" pos:column="27"/></literal><operator pos:line="41" pos:column="27">)<pos:position pos:line="41" pos:column="28"/></operator></expr>;<pos:position pos:line="41" pos:column="29"/></return>
	}<pos:position pos:line="42" pos:column="10"/></block></then></if>

	<for pos:line="44" pos:column="9">for <control pos:line="44" pos:column="13">(<init><expr><name pos:line="44" pos:column="14">ai_ptr<pos:position pos:line="44" pos:column="20"/></name> <operator pos:line="44" pos:column="21">=<pos:position pos:line="44" pos:column="22"/></operator> <name pos:line="44" pos:column="23">ai_list<pos:position pos:line="44" pos:column="30"/></name></expr>;<pos:position pos:line="44" pos:column="31"/></init> <condition><expr><name pos:line="44" pos:column="32">ai_ptr<pos:position pos:line="44" pos:column="38"/></name> <operator pos:line="44" pos:column="39">!=<pos:position pos:line="44" pos:column="41"/></operator> <name pos:line="44" pos:column="42">NULL<pos:position pos:line="44" pos:column="46"/></name></expr>;<pos:position pos:line="44" pos:column="47"/></condition> <incr><expr><name pos:line="44" pos:column="48">ai_ptr<pos:position pos:line="44" pos:column="54"/></name> <operator pos:line="44" pos:column="55">=<pos:position pos:line="44" pos:column="56"/></operator> <name><name pos:line="44" pos:column="57">ai_ptr<pos:position pos:line="44" pos:column="63"/></name><operator pos:line="44" pos:column="63">-&gt;<pos:position pos:line="44" pos:column="68"/></operator><name pos:line="44" pos:column="65">ai_next<pos:position pos:line="44" pos:column="72"/></name></name></expr></incr>)<pos:position pos:line="44" pos:column="73"/></control>
	<block pos:line="45" pos:column="9">{
		<comment type="block" pos:line="46" pos:column="17">/* create our socket descriptor */</comment>
		<if pos:line="47" pos:column="17">if <condition pos:line="47" pos:column="20">(<expr><operator pos:line="47" pos:column="21">(<pos:position pos:line="47" pos:column="22"/></operator><name pos:line="47" pos:column="22">sock_descr<pos:position pos:line="47" pos:column="32"/></name> <operator pos:line="47" pos:column="33">=<pos:position pos:line="47" pos:column="34"/></operator> <call><name pos:line="47" pos:column="35">socket<pos:position pos:line="47" pos:column="41"/></name> <argument_list pos:line="47" pos:column="42">(<argument><expr><name><name pos:line="47" pos:column="43">ai_ptr<pos:position pos:line="47" pos:column="49"/></name><operator pos:line="47" pos:column="49">-&gt;<pos:position pos:line="47" pos:column="54"/></operator><name pos:line="47" pos:column="51">ai_family<pos:position pos:line="47" pos:column="60"/></name></name></expr></argument>,
						<argument><expr><name><name pos:line="48" pos:column="49">ai_ptr<pos:position pos:line="48" pos:column="55"/></name><operator pos:line="48" pos:column="55">-&gt;<pos:position pos:line="48" pos:column="60"/></operator><name pos:line="48" pos:column="57">ai_socktype<pos:position pos:line="48" pos:column="68"/></name></name></expr></argument>,
						<argument><expr><name><name pos:line="49" pos:column="49">ai_ptr<pos:position pos:line="49" pos:column="55"/></name><operator pos:line="49" pos:column="55">-&gt;<pos:position pos:line="49" pos:column="60"/></operator><name pos:line="49" pos:column="57">ai_protocol<pos:position pos:line="49" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="69"/></argument_list></call><operator pos:line="49" pos:column="69">)<pos:position pos:line="49" pos:column="70"/></operator> <operator pos:line="49" pos:column="71">&lt;<pos:position pos:line="49" pos:column="75"/></operator> <literal type="number" pos:line="49" pos:column="73">0<pos:position pos:line="49" pos:column="74"/></literal></expr>)<pos:position pos:line="49" pos:column="75"/></condition><then pos:line="49" pos:column="75">
			<block type="pseudo"><continue pos:line="50" pos:column="25">continue;<pos:position pos:line="50" pos:column="34"/></continue></block></then></if>

		<comment type="block" pos:line="52" pos:column="17">/* connect to the ntpd */</comment>
		<if pos:line="53" pos:column="17">if <condition pos:line="53" pos:column="20">(<expr><call><name pos:line="53" pos:column="21">connect<pos:position pos:line="53" pos:column="28"/></name> <argument_list pos:line="53" pos:column="29">(<argument><expr><name pos:line="53" pos:column="30">sock_descr<pos:position pos:line="53" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="42">ai_ptr<pos:position pos:line="53" pos:column="48"/></name><operator pos:line="53" pos:column="48">-&gt;<pos:position pos:line="53" pos:column="53"/></operator><name pos:line="53" pos:column="50">ai_addr<pos:position pos:line="53" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="59">ai_ptr<pos:position pos:line="53" pos:column="65"/></name><operator pos:line="53" pos:column="65">-&gt;<pos:position pos:line="53" pos:column="70"/></operator><name pos:line="53" pos:column="67">ai_addrlen<pos:position pos:line="53" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="79"/></condition><then pos:line="53" pos:column="79">
		<block pos:line="54" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="55" pos:column="25">close<pos:position pos:line="55" pos:column="30"/></name> <argument_list pos:line="55" pos:column="31">(<argument><expr><name pos:line="55" pos:column="32">sock_descr<pos:position pos:line="55" pos:column="42"/></name></expr></argument>)<pos:position pos:line="55" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><name pos:line="56" pos:column="25">sock_descr<pos:position pos:line="56" pos:column="35"/></name> <operator pos:line="56" pos:column="36">=<pos:position pos:line="56" pos:column="37"/></operator> <operator pos:line="56" pos:column="38">-<pos:position pos:line="56" pos:column="39"/></operator><literal type="number" pos:line="56" pos:column="39">1<pos:position pos:line="56" pos:column="40"/></literal></expr>;<pos:position pos:line="56" pos:column="41"/></expr_stmt>
			<continue pos:line="57" pos:column="25">continue;<pos:position pos:line="57" pos:column="34"/></continue>
		}<pos:position pos:line="58" pos:column="18"/></block></then></if>

		<break pos:line="60" pos:column="17">break;<pos:position pos:line="60" pos:column="23"/></break>
	}<pos:position pos:line="61" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="63" pos:column="9">freeaddrinfo<pos:position pos:line="63" pos:column="21"/></name> <argument_list pos:line="63" pos:column="22">(<argument><expr><name pos:line="63" pos:column="23">ai_list<pos:position pos:line="63" pos:column="30"/></name></expr></argument>)<pos:position pos:line="63" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="32"/></expr_stmt>

	<if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><name pos:line="65" pos:column="13">sock_descr<pos:position pos:line="65" pos:column="23"/></name> <operator pos:line="65" pos:column="24">&lt;<pos:position pos:line="65" pos:column="28"/></operator> <literal type="number" pos:line="65" pos:column="26">0<pos:position pos:line="65" pos:column="27"/></literal></expr>)<pos:position pos:line="65" pos:column="28"/></condition><then pos:line="65" pos:column="28">
	<block pos:line="66" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="67" pos:column="17">ERROR<pos:position pos:line="67" pos:column="22"/></name> <argument_list pos:line="67" pos:column="23">(<argument><expr><literal type="string" pos:line="67" pos:column="24">"ntpd plugin: Unable to connect to server."<pos:position pos:line="67" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="69"/></expr_stmt>
	}<pos:position pos:line="68" pos:column="10"/></block></then></if>

	<return pos:line="70" pos:column="9">return <expr><operator pos:line="70" pos:column="16">(<pos:position pos:line="70" pos:column="17"/></operator><name pos:line="70" pos:column="17">sock_descr<pos:position pos:line="70" pos:column="27"/></name><operator pos:line="70" pos:column="27">)<pos:position pos:line="70" pos:column="28"/></operator></expr>;<pos:position pos:line="70" pos:column="29"/></return>
}<pos:position pos:line="71" pos:column="2"/></block></function></unit>

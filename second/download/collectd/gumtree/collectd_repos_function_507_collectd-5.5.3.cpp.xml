<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_507_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ascent_submit_players<pos:position pos:line="1" pos:column="33"/></name> <parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">player_stats_t<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">ps<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list> <comment type="block" pos:line="1" pos:column="55">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">i<pos:position pos:line="3" pos:column="11"/></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">gauge_t<pos:position pos:line="4" pos:column="10"/></name></type> <name pos:line="4" pos:column="11">value<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>

  <for pos:line="6" pos:column="3">for <control pos:line="6" pos:column="7">(<init><expr><name pos:line="6" pos:column="8">i<pos:position pos:line="6" pos:column="9"/></name> <operator pos:line="6" pos:column="10">=<pos:position pos:line="6" pos:column="11"/></operator> <literal type="number" pos:line="6" pos:column="12">0<pos:position pos:line="6" pos:column="13"/></literal></expr>;<pos:position pos:line="6" pos:column="14"/></init> <condition><expr><name pos:line="6" pos:column="15">i<pos:position pos:line="6" pos:column="16"/></name> <operator pos:line="6" pos:column="17">&lt;<pos:position pos:line="6" pos:column="21"/></operator> <name pos:line="6" pos:column="19">RACES_LIST_LENGTH<pos:position pos:line="6" pos:column="36"/></name></expr>;<pos:position pos:line="6" pos:column="37"/></condition> <incr><expr><name pos:line="6" pos:column="38">i<pos:position pos:line="6" pos:column="39"/></name><operator pos:line="6" pos:column="39">++<pos:position pos:line="6" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="42"/></control>
    <block type="pseudo"><if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name><name pos:line="7" pos:column="9">races_list<pos:position pos:line="7" pos:column="19"/></name><index pos:line="7" pos:column="19">[<expr><name pos:line="7" pos:column="20">i<pos:position pos:line="7" pos:column="21"/></name></expr>]<pos:position pos:line="7" pos:column="22"/></index></name> <operator pos:line="7" pos:column="23">!=<pos:position pos:line="7" pos:column="25"/></operator> <name pos:line="7" pos:column="26">NULL<pos:position pos:line="7" pos:column="30"/></name></expr>)<pos:position pos:line="7" pos:column="31"/></condition><then pos:line="7" pos:column="31">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="7">ascent_submit_gauge<pos:position pos:line="8" pos:column="26"/></name> <argument_list pos:line="8" pos:column="27">(<argument><expr><literal type="string" pos:line="8" pos:column="28">"by-race"<pos:position pos:line="8" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="39">"players"<pos:position pos:line="8" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="50">races_list<pos:position pos:line="8" pos:column="60"/></name><index pos:line="8" pos:column="60">[<expr><name pos:line="8" pos:column="61">i<pos:position pos:line="8" pos:column="62"/></name></expr>]<pos:position pos:line="8" pos:column="63"/></index></name></expr></argument>,
          <argument><expr><operator pos:line="9" pos:column="11">(<pos:position pos:line="9" pos:column="12"/></operator><name pos:line="9" pos:column="12">gauge_t<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">)<pos:position pos:line="9" pos:column="20"/></operator> <name><name pos:line="9" pos:column="21">ps<pos:position pos:line="9" pos:column="23"/></name><operator pos:line="9" pos:column="23">-&gt;<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="25">races<pos:position pos:line="9" pos:column="30"/></name><index pos:line="9" pos:column="30">[<expr><name pos:line="9" pos:column="31">i<pos:position pos:line="9" pos:column="32"/></name></expr>]<pos:position pos:line="9" pos:column="33"/></index></name></expr></argument>)<pos:position pos:line="9" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="35"/></expr_stmt></block></then></if></block></for>

  <for pos:line="11" pos:column="3">for <control pos:line="11" pos:column="7">(<init><expr><name pos:line="11" pos:column="8">i<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">=<pos:position pos:line="11" pos:column="11"/></operator> <literal type="number" pos:line="11" pos:column="12">0<pos:position pos:line="11" pos:column="13"/></literal></expr>;<pos:position pos:line="11" pos:column="14"/></init> <condition><expr><name pos:line="11" pos:column="15">i<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">&lt;<pos:position pos:line="11" pos:column="21"/></operator> <name pos:line="11" pos:column="19">CLASSES_LIST_LENGTH<pos:position pos:line="11" pos:column="38"/></name></expr>;<pos:position pos:line="11" pos:column="39"/></condition> <incr><expr><name pos:line="11" pos:column="40">i<pos:position pos:line="11" pos:column="41"/></name><operator pos:line="11" pos:column="41">++<pos:position pos:line="11" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="44"/></control>
    <block type="pseudo"><if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name><name pos:line="12" pos:column="9">classes_list<pos:position pos:line="12" pos:column="21"/></name><index pos:line="12" pos:column="21">[<expr><name pos:line="12" pos:column="22">i<pos:position pos:line="12" pos:column="23"/></name></expr>]<pos:position pos:line="12" pos:column="24"/></index></name> <operator pos:line="12" pos:column="25">!=<pos:position pos:line="12" pos:column="27"/></operator> <name pos:line="12" pos:column="28">NULL<pos:position pos:line="12" pos:column="32"/></name></expr>)<pos:position pos:line="12" pos:column="33"/></condition><then pos:line="12" pos:column="33">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="7">ascent_submit_gauge<pos:position pos:line="13" pos:column="26"/></name> <argument_list pos:line="13" pos:column="27">(<argument><expr><literal type="string" pos:line="13" pos:column="28">"by-class"<pos:position pos:line="13" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="40">"players"<pos:position pos:line="13" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="51">classes_list<pos:position pos:line="13" pos:column="63"/></name><index pos:line="13" pos:column="63">[<expr><name pos:line="13" pos:column="64">i<pos:position pos:line="13" pos:column="65"/></name></expr>]<pos:position pos:line="13" pos:column="66"/></index></name></expr></argument>,
          <argument><expr><operator pos:line="14" pos:column="11">(<pos:position pos:line="14" pos:column="12"/></operator><name pos:line="14" pos:column="12">gauge_t<pos:position pos:line="14" pos:column="19"/></name><operator pos:line="14" pos:column="19">)<pos:position pos:line="14" pos:column="20"/></operator> <name><name pos:line="14" pos:column="21">ps<pos:position pos:line="14" pos:column="23"/></name><operator pos:line="14" pos:column="23">-&gt;<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="25">classes<pos:position pos:line="14" pos:column="32"/></name><index pos:line="14" pos:column="32">[<expr><name pos:line="14" pos:column="33">i<pos:position pos:line="14" pos:column="34"/></name></expr>]<pos:position pos:line="14" pos:column="35"/></index></name></expr></argument>)<pos:position pos:line="14" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="37"/></expr_stmt></block></then></if></block></for>

  <for pos:line="16" pos:column="3">for <control pos:line="16" pos:column="7">(<init><expr><name pos:line="16" pos:column="8">i<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">=<pos:position pos:line="16" pos:column="11"/></operator> <literal type="number" pos:line="16" pos:column="12">0<pos:position pos:line="16" pos:column="13"/></literal></expr>;<pos:position pos:line="16" pos:column="14"/></init> <condition><expr><name pos:line="16" pos:column="15">i<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">&lt;<pos:position pos:line="16" pos:column="21"/></operator> <name pos:line="16" pos:column="19">GENDERS_LIST_LENGTH<pos:position pos:line="16" pos:column="38"/></name></expr>;<pos:position pos:line="16" pos:column="39"/></condition> <incr><expr><name pos:line="16" pos:column="40">i<pos:position pos:line="16" pos:column="41"/></name><operator pos:line="16" pos:column="41">++<pos:position pos:line="16" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="16" pos:column="44"/></control>
    <block type="pseudo"><if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name><name pos:line="17" pos:column="9">genders_list<pos:position pos:line="17" pos:column="21"/></name><index pos:line="17" pos:column="21">[<expr><name pos:line="17" pos:column="22">i<pos:position pos:line="17" pos:column="23"/></name></expr>]<pos:position pos:line="17" pos:column="24"/></index></name> <operator pos:line="17" pos:column="25">!=<pos:position pos:line="17" pos:column="27"/></operator> <name pos:line="17" pos:column="28">NULL<pos:position pos:line="17" pos:column="32"/></name></expr>)<pos:position pos:line="17" pos:column="33"/></condition><then pos:line="17" pos:column="33">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="7">ascent_submit_gauge<pos:position pos:line="18" pos:column="26"/></name> <argument_list pos:line="18" pos:column="27">(<argument><expr><literal type="string" pos:line="18" pos:column="28">"by-gender"<pos:position pos:line="18" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="41">"players"<pos:position pos:line="18" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="52">genders_list<pos:position pos:line="18" pos:column="64"/></name><index pos:line="18" pos:column="64">[<expr><name pos:line="18" pos:column="65">i<pos:position pos:line="18" pos:column="66"/></name></expr>]<pos:position pos:line="18" pos:column="67"/></index></name></expr></argument>,
          <argument><expr><operator pos:line="19" pos:column="11">(<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="12">gauge_t<pos:position pos:line="19" pos:column="19"/></name><operator pos:line="19" pos:column="19">)<pos:position pos:line="19" pos:column="20"/></operator> <name><name pos:line="19" pos:column="21">ps<pos:position pos:line="19" pos:column="23"/></name><operator pos:line="19" pos:column="23">-&gt;<pos:position pos:line="19" pos:column="28"/></operator><name pos:line="19" pos:column="25">genders<pos:position pos:line="19" pos:column="32"/></name><index pos:line="19" pos:column="32">[<expr><name pos:line="19" pos:column="33">i<pos:position pos:line="19" pos:column="34"/></name></expr>]<pos:position pos:line="19" pos:column="35"/></index></name></expr></argument>)<pos:position pos:line="19" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="37"/></expr_stmt></block></then></if></block></for>

  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><name><name pos:line="21" pos:column="7">ps<pos:position pos:line="21" pos:column="9"/></name><operator pos:line="21" pos:column="9">-&gt;<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="11">level_num<pos:position pos:line="21" pos:column="20"/></name></name> <operator pos:line="21" pos:column="21">&lt;=<pos:position pos:line="21" pos:column="26"/></operator> <literal type="number" pos:line="21" pos:column="24">0<pos:position pos:line="21" pos:column="25"/></literal></expr>)<pos:position pos:line="21" pos:column="26"/></condition><then pos:line="21" pos:column="26">
    <block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="5">value<pos:position pos:line="22" pos:column="10"/></name> <operator pos:line="22" pos:column="11">=<pos:position pos:line="22" pos:column="12"/></operator> <name pos:line="22" pos:column="13">NAN<pos:position pos:line="22" pos:column="16"/></name></expr>;<pos:position pos:line="22" pos:column="17"/></expr_stmt></block></then>
  <else pos:line="23" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="5">value<pos:position pos:line="24" pos:column="10"/></name> <operator pos:line="24" pos:column="11">=<pos:position pos:line="24" pos:column="12"/></operator> <operator pos:line="24" pos:column="13">(<pos:position pos:line="24" pos:column="14"/></operator><operator pos:line="24" pos:column="14">(<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="15">double<pos:position pos:line="24" pos:column="21"/></name><operator pos:line="24" pos:column="21">)<pos:position pos:line="24" pos:column="22"/></operator> <name><name pos:line="24" pos:column="23">ps<pos:position pos:line="24" pos:column="25"/></name><operator pos:line="24" pos:column="25">-&gt;<pos:position pos:line="24" pos:column="30"/></operator><name pos:line="24" pos:column="27">level_sum<pos:position pos:line="24" pos:column="36"/></name></name><operator pos:line="24" pos:column="36">)<pos:position pos:line="24" pos:column="37"/></operator> <operator pos:line="24" pos:column="38">/<pos:position pos:line="24" pos:column="39"/></operator> <operator pos:line="24" pos:column="40">(<pos:position pos:line="24" pos:column="41"/></operator><operator pos:line="24" pos:column="41">(<pos:position pos:line="24" pos:column="42"/></operator><name pos:line="24" pos:column="42">double<pos:position pos:line="24" pos:column="48"/></name><operator pos:line="24" pos:column="48">)<pos:position pos:line="24" pos:column="49"/></operator> <name><name pos:line="24" pos:column="50">ps<pos:position pos:line="24" pos:column="52"/></name><operator pos:line="24" pos:column="52">-&gt;<pos:position pos:line="24" pos:column="57"/></operator><name pos:line="24" pos:column="54">level_num<pos:position pos:line="24" pos:column="63"/></name></name><operator pos:line="24" pos:column="63">)<pos:position pos:line="24" pos:column="64"/></operator></expr>;<pos:position pos:line="24" pos:column="65"/></expr_stmt></block></else></if>
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">ascent_submit_gauge<pos:position pos:line="25" pos:column="22"/></name> <argument_list pos:line="25" pos:column="23">(<argument><expr><name pos:line="25" pos:column="24">NULL<pos:position pos:line="25" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="30">"gauge"<pos:position pos:line="25" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="39">"avg-level"<pos:position pos:line="25" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="52">value<pos:position pos:line="25" pos:column="57"/></name></expr></argument>)<pos:position pos:line="25" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="59"/></expr_stmt>

  <comment type="block" pos:line="27" pos:column="3">/* Latency is in ms, but we store seconds. */</comment>
  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name><name pos:line="28" pos:column="7">ps<pos:position pos:line="28" pos:column="9"/></name><operator pos:line="28" pos:column="9">-&gt;<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="11">latency_num<pos:position pos:line="28" pos:column="22"/></name></name> <operator pos:line="28" pos:column="23">&lt;=<pos:position pos:line="28" pos:column="28"/></operator> <literal type="number" pos:line="28" pos:column="26">0<pos:position pos:line="28" pos:column="27"/></literal></expr>)<pos:position pos:line="28" pos:column="28"/></condition><then pos:line="28" pos:column="28">
    <block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="5">value<pos:position pos:line="29" pos:column="10"/></name> <operator pos:line="29" pos:column="11">=<pos:position pos:line="29" pos:column="12"/></operator> <name pos:line="29" pos:column="13">NAN<pos:position pos:line="29" pos:column="16"/></name></expr>;<pos:position pos:line="29" pos:column="17"/></expr_stmt></block></then>
  <else pos:line="30" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="5">value<pos:position pos:line="31" pos:column="10"/></name> <operator pos:line="31" pos:column="11">=<pos:position pos:line="31" pos:column="12"/></operator> <operator pos:line="31" pos:column="13">(<pos:position pos:line="31" pos:column="14"/></operator><operator pos:line="31" pos:column="14">(<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="15">double<pos:position pos:line="31" pos:column="21"/></name><operator pos:line="31" pos:column="21">)<pos:position pos:line="31" pos:column="22"/></operator> <name><name pos:line="31" pos:column="23">ps<pos:position pos:line="31" pos:column="25"/></name><operator pos:line="31" pos:column="25">-&gt;<pos:position pos:line="31" pos:column="30"/></operator><name pos:line="31" pos:column="27">latency_sum<pos:position pos:line="31" pos:column="38"/></name></name><operator pos:line="31" pos:column="38">)<pos:position pos:line="31" pos:column="39"/></operator> <operator pos:line="31" pos:column="40">/<pos:position pos:line="31" pos:column="41"/></operator> <operator pos:line="31" pos:column="42">(<pos:position pos:line="31" pos:column="43"/></operator><literal type="number" pos:line="31" pos:column="43">1000.0<pos:position pos:line="31" pos:column="49"/></literal> <operator pos:line="31" pos:column="50">*<pos:position pos:line="31" pos:column="51"/></operator> <operator pos:line="31" pos:column="52">(<pos:position pos:line="31" pos:column="53"/></operator><operator pos:line="31" pos:column="53">(<pos:position pos:line="31" pos:column="54"/></operator><name pos:line="31" pos:column="54">double<pos:position pos:line="31" pos:column="60"/></name><operator pos:line="31" pos:column="60">)<pos:position pos:line="31" pos:column="61"/></operator> <name><name pos:line="31" pos:column="62">ps<pos:position pos:line="31" pos:column="64"/></name><operator pos:line="31" pos:column="64">-&gt;<pos:position pos:line="31" pos:column="69"/></operator><name pos:line="31" pos:column="66">latency_num<pos:position pos:line="31" pos:column="77"/></name></name><operator pos:line="31" pos:column="77">)<pos:position pos:line="31" pos:column="78"/></operator><operator pos:line="31" pos:column="78">)<pos:position pos:line="31" pos:column="79"/></operator></expr>;<pos:position pos:line="31" pos:column="80"/></expr_stmt></block></else></if>
  <expr_stmt><expr><call><name pos:line="32" pos:column="3">ascent_submit_gauge<pos:position pos:line="32" pos:column="22"/></name> <argument_list pos:line="32" pos:column="23">(<argument><expr><name pos:line="32" pos:column="24">NULL<pos:position pos:line="32" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="30">"latency"<pos:position pos:line="32" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="41">"average"<pos:position pos:line="32" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="52">value<pos:position pos:line="32" pos:column="57"/></name></expr></argument>)<pos:position pos:line="32" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="59"/></expr_stmt>

  <return pos:line="34" pos:column="3">return <expr><operator pos:line="34" pos:column="10">(<pos:position pos:line="34" pos:column="11"/></operator><literal type="number" pos:line="34" pos:column="11">0<pos:position pos:line="34" pos:column="12"/></literal><operator pos:line="34" pos:column="12">)<pos:position pos:line="34" pos:column="13"/></operator></expr>;<pos:position pos:line="34" pos:column="14"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

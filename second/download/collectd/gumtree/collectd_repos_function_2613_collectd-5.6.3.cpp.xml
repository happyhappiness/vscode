<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2613_collectd-5.6.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">plugin_register_data_set<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">data_set_t<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">ds<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list> <block pos:line="1" pos:column="52">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">data_set_t<pos:position pos:line="2" pos:column="13"/></name> <modifier pos:line="2" pos:column="14">*<pos:position pos:line="2" pos:column="15"/></modifier></type><name pos:line="2" pos:column="15">ds_copy<pos:position pos:line="2" pos:column="22"/></name></decl>;<pos:position pos:line="2" pos:column="23"/></decl_stmt>

  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><operator pos:line="4" pos:column="7">(<pos:position pos:line="4" pos:column="8"/></operator><name pos:line="4" pos:column="8">data_sets<pos:position pos:line="4" pos:column="17"/></name> <operator pos:line="4" pos:column="18">!=<pos:position pos:line="4" pos:column="20"/></operator> <name pos:line="4" pos:column="21">NULL<pos:position pos:line="4" pos:column="25"/></name><operator pos:line="4" pos:column="25">)<pos:position pos:line="4" pos:column="26"/></operator> <operator pos:line="4" pos:column="27">&amp;&amp;<pos:position pos:line="4" pos:column="37"/></operator> <operator pos:line="4" pos:column="30">(<pos:position pos:line="4" pos:column="31"/></operator><call><name pos:line="4" pos:column="31">c_avl_get<pos:position pos:line="4" pos:column="40"/></name><argument_list pos:line="4" pos:column="40">(<argument><expr><name pos:line="4" pos:column="41">data_sets<pos:position pos:line="4" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="52">ds<pos:position pos:line="4" pos:column="54"/></name><operator pos:line="4" pos:column="54">-&gt;<pos:position pos:line="4" pos:column="59"/></operator><name pos:line="4" pos:column="56">type<pos:position pos:line="4" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="62">NULL<pos:position pos:line="4" pos:column="66"/></name></expr></argument>)<pos:position pos:line="4" pos:column="67"/></argument_list></call> <operator pos:line="4" pos:column="68">==<pos:position pos:line="4" pos:column="70"/></operator> <literal type="number" pos:line="4" pos:column="71">0<pos:position pos:line="4" pos:column="72"/></literal><operator pos:line="4" pos:column="72">)<pos:position pos:line="4" pos:column="73"/></operator></expr>)<pos:position pos:line="4" pos:column="74"/></condition><then pos:line="4" pos:column="74"> <block pos:line="4" pos:column="75">{
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">NOTICE<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><literal type="string" pos:line="5" pos:column="12">"Replacing DS `%s' with another version."<pos:position pos:line="5" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="55">ds<pos:position pos:line="5" pos:column="57"/></name><operator pos:line="5" pos:column="57">-&gt;<pos:position pos:line="5" pos:column="62"/></operator><name pos:line="5" pos:column="59">type<pos:position pos:line="5" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">plugin_unregister_data_set<pos:position pos:line="6" pos:column="31"/></name><argument_list pos:line="6" pos:column="31">(<argument><expr><name><name pos:line="6" pos:column="32">ds<pos:position pos:line="6" pos:column="34"/></name><operator pos:line="6" pos:column="34">-&gt;<pos:position pos:line="6" pos:column="39"/></operator><name pos:line="6" pos:column="36">type<pos:position pos:line="6" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="42"/></expr_stmt>
  }<pos:position pos:line="7" pos:column="4"/></block></then> <elseif pos:line="7" pos:column="5">else <if pos:line="7" pos:column="10">if <condition pos:line="7" pos:column="13">(<expr><name pos:line="7" pos:column="14">data_sets<pos:position pos:line="7" pos:column="23"/></name> <operator pos:line="7" pos:column="24">==<pos:position pos:line="7" pos:column="26"/></operator> <name pos:line="7" pos:column="27">NULL<pos:position pos:line="7" pos:column="31"/></name></expr>)<pos:position pos:line="7" pos:column="32"/></condition><then pos:line="7" pos:column="32"> <block pos:line="7" pos:column="33">{
    <expr_stmt><expr><name pos:line="8" pos:column="5">data_sets<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">=<pos:position pos:line="8" pos:column="16"/></operator> <call><name pos:line="8" pos:column="17">c_avl_create<pos:position pos:line="8" pos:column="29"/></name><argument_list pos:line="8" pos:column="29">(<argument><expr><operator pos:line="8" pos:column="30">(<pos:position pos:line="8" pos:column="31"/></operator><call><call><name pos:line="8" pos:column="31">int<pos:position pos:line="8" pos:column="34"/></name> <argument_list pos:line="8" pos:column="35">(<argument><expr><operator pos:line="8" pos:column="36">*<pos:position pos:line="8" pos:column="37"/></operator></expr></argument>)<pos:position pos:line="8" pos:column="38"/></argument_list></call><argument_list pos:line="8" pos:column="38">(<argument><expr><specifier pos:line="8" pos:column="39">const<pos:position pos:line="8" pos:column="44"/></specifier> <name pos:line="8" pos:column="45">void<pos:position pos:line="8" pos:column="49"/></name> <operator pos:line="8" pos:column="50">*<pos:position pos:line="8" pos:column="51"/></operator></expr></argument>, <argument><expr><specifier pos:line="8" pos:column="53">const<pos:position pos:line="8" pos:column="58"/></specifier> <name pos:line="8" pos:column="59">void<pos:position pos:line="8" pos:column="63"/></name> <operator pos:line="8" pos:column="64">*<pos:position pos:line="8" pos:column="65"/></operator></expr></argument>)<pos:position pos:line="8" pos:column="66"/></argument_list></call><operator pos:line="8" pos:column="66">)<pos:position pos:line="8" pos:column="67"/></operator><name pos:line="8" pos:column="67">strcmp<pos:position pos:line="8" pos:column="73"/></name></expr></argument>)<pos:position pos:line="8" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="75"/></expr_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">data_sets<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">==<pos:position pos:line="9" pos:column="21"/></operator> <name pos:line="9" pos:column="22">NULL<pos:position pos:line="9" pos:column="26"/></name></expr>)<pos:position pos:line="9" pos:column="27"/></condition><then pos:line="9" pos:column="27">
      <block type="pseudo"><return pos:line="10" pos:column="7">return <expr><operator pos:line="10" pos:column="14">(<pos:position pos:line="10" pos:column="15"/></operator><operator pos:line="10" pos:column="15">-<pos:position pos:line="10" pos:column="16"/></operator><literal type="number" pos:line="10" pos:column="16">1<pos:position pos:line="10" pos:column="17"/></literal><operator pos:line="10" pos:column="17">)<pos:position pos:line="10" pos:column="18"/></operator></expr>;<pos:position pos:line="10" pos:column="19"/></return></block></then></if>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if></elseif></if>

  <expr_stmt><expr><name pos:line="13" pos:column="3">ds_copy<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <call><name pos:line="13" pos:column="13">malloc<pos:position pos:line="13" pos:column="19"/></name><argument_list pos:line="13" pos:column="19">(<argument><expr><sizeof pos:line="13" pos:column="20">sizeof<argument_list pos:line="13" pos:column="26">(<argument><expr><operator pos:line="13" pos:column="27">*<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="28">ds_copy<pos:position pos:line="13" pos:column="35"/></name></expr></argument>)<pos:position pos:line="13" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="38"/></expr_stmt>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">ds_copy<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">==<pos:position pos:line="14" pos:column="17"/></operator> <name pos:line="14" pos:column="18">NULL<pos:position pos:line="14" pos:column="22"/></name></expr>)<pos:position pos:line="14" pos:column="23"/></condition><then pos:line="14" pos:column="23">
    <block type="pseudo"><return pos:line="15" pos:column="5">return <expr><operator pos:line="15" pos:column="12">(<pos:position pos:line="15" pos:column="13"/></operator><operator pos:line="15" pos:column="13">-<pos:position pos:line="15" pos:column="14"/></operator><literal type="number" pos:line="15" pos:column="14">1<pos:position pos:line="15" pos:column="15"/></literal><operator pos:line="15" pos:column="15">)<pos:position pos:line="15" pos:column="16"/></operator></expr>;<pos:position pos:line="15" pos:column="17"/></return></block></then></if>
  <expr_stmt><expr><call><name pos:line="16" pos:column="3">memcpy<pos:position pos:line="16" pos:column="9"/></name><argument_list pos:line="16" pos:column="9">(<argument><expr><name pos:line="16" pos:column="10">ds_copy<pos:position pos:line="16" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="19">ds<pos:position pos:line="16" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="23">sizeof<argument_list pos:line="16" pos:column="29">(<argument><expr><name pos:line="16" pos:column="30">data_set_t<pos:position pos:line="16" pos:column="40"/></name></expr></argument>)<pos:position pos:line="16" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="43"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="18" pos:column="3">ds_copy<pos:position pos:line="18" pos:column="10"/></name><operator pos:line="18" pos:column="10">-&gt;<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="12">ds<pos:position pos:line="18" pos:column="14"/></name></name> <operator pos:line="18" pos:column="15">=<pos:position pos:line="18" pos:column="16"/></operator> <call><name pos:line="18" pos:column="17">malloc<pos:position pos:line="18" pos:column="23"/></name><argument_list pos:line="18" pos:column="23">(<argument><expr><sizeof pos:line="18" pos:column="24">sizeof<argument_list pos:line="18" pos:column="30">(<argument><expr><operator pos:line="18" pos:column="31">*<pos:position pos:line="18" pos:column="32"/></operator><name><name pos:line="18" pos:column="32">ds_copy<pos:position pos:line="18" pos:column="39"/></name><operator pos:line="18" pos:column="39">-&gt;<pos:position pos:line="18" pos:column="44"/></operator><name pos:line="18" pos:column="41">ds<pos:position pos:line="18" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="44"/></argument_list></sizeof> <operator pos:line="18" pos:column="45">*<pos:position pos:line="18" pos:column="46"/></operator> <name><name pos:line="18" pos:column="47">ds<pos:position pos:line="18" pos:column="49"/></name><operator pos:line="18" pos:column="49">-&gt;<pos:position pos:line="18" pos:column="54"/></operator><name pos:line="18" pos:column="51">ds_num<pos:position pos:line="18" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="59"/></expr_stmt>
  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><name><name pos:line="19" pos:column="7">ds_copy<pos:position pos:line="19" pos:column="14"/></name><operator pos:line="19" pos:column="14">-&gt;<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="16">ds<pos:position pos:line="19" pos:column="18"/></name></name> <operator pos:line="19" pos:column="19">==<pos:position pos:line="19" pos:column="21"/></operator> <name pos:line="19" pos:column="22">NULL<pos:position pos:line="19" pos:column="26"/></name></expr>)<pos:position pos:line="19" pos:column="27"/></condition><then pos:line="19" pos:column="27"> <block pos:line="19" pos:column="28">{
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">sfree<pos:position pos:line="20" pos:column="10"/></name><argument_list pos:line="20" pos:column="10">(<argument><expr><name pos:line="20" pos:column="11">ds_copy<pos:position pos:line="20" pos:column="18"/></name></expr></argument>)<pos:position pos:line="20" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="20"/></expr_stmt>
    <return pos:line="21" pos:column="5">return <expr><operator pos:line="21" pos:column="12">(<pos:position pos:line="21" pos:column="13"/></operator><operator pos:line="21" pos:column="13">-<pos:position pos:line="21" pos:column="14"/></operator><literal type="number" pos:line="21" pos:column="14">1<pos:position pos:line="21" pos:column="15"/></literal><operator pos:line="21" pos:column="15">)<pos:position pos:line="21" pos:column="16"/></operator></expr>;<pos:position pos:line="21" pos:column="17"/></return>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>

  <for pos:line="24" pos:column="3">for <control pos:line="24" pos:column="7">(<init><decl><type><name pos:line="24" pos:column="8">size_t<pos:position pos:line="24" pos:column="14"/></name></type> <name pos:line="24" pos:column="15">i<pos:position pos:line="24" pos:column="16"/></name> <init pos:line="24" pos:column="17">= <expr><literal type="number" pos:line="24" pos:column="19">0<pos:position pos:line="24" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="24" pos:column="21"/></init> <condition><expr><name pos:line="24" pos:column="22">i<pos:position pos:line="24" pos:column="23"/></name> <operator pos:line="24" pos:column="24">&lt;<pos:position pos:line="24" pos:column="28"/></operator> <name><name pos:line="24" pos:column="26">ds<pos:position pos:line="24" pos:column="28"/></name><operator pos:line="24" pos:column="28">-&gt;<pos:position pos:line="24" pos:column="33"/></operator><name pos:line="24" pos:column="30">ds_num<pos:position pos:line="24" pos:column="36"/></name></name></expr>;<pos:position pos:line="24" pos:column="37"/></condition> <incr><expr><name pos:line="24" pos:column="38">i<pos:position pos:line="24" pos:column="39"/></name><operator pos:line="24" pos:column="39">++<pos:position pos:line="24" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="24" pos:column="42"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="5">memcpy<pos:position pos:line="25" pos:column="11"/></name><argument_list pos:line="25" pos:column="11">(<argument><expr><name><name pos:line="25" pos:column="12">ds_copy<pos:position pos:line="25" pos:column="19"/></name><operator pos:line="25" pos:column="19">-&gt;<pos:position pos:line="25" pos:column="24"/></operator><name pos:line="25" pos:column="21">ds<pos:position pos:line="25" pos:column="23"/></name></name> <operator pos:line="25" pos:column="24">+<pos:position pos:line="25" pos:column="25"/></operator> <name pos:line="25" pos:column="26">i<pos:position pos:line="25" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="29">ds<pos:position pos:line="25" pos:column="31"/></name><operator pos:line="25" pos:column="31">-&gt;<pos:position pos:line="25" pos:column="36"/></operator><name pos:line="25" pos:column="33">ds<pos:position pos:line="25" pos:column="35"/></name></name> <operator pos:line="25" pos:column="36">+<pos:position pos:line="25" pos:column="37"/></operator> <name pos:line="25" pos:column="38">i<pos:position pos:line="25" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="41">sizeof<argument_list pos:line="25" pos:column="47">(<argument><expr><name pos:line="25" pos:column="48">data_source_t<pos:position pos:line="25" pos:column="61"/></name></expr></argument>)<pos:position pos:line="25" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="64"/></expr_stmt></block></for>

  <return pos:line="27" pos:column="3">return <expr><operator pos:line="27" pos:column="10">(<pos:position pos:line="27" pos:column="11"/></operator><call><name pos:line="27" pos:column="11">c_avl_insert<pos:position pos:line="27" pos:column="23"/></name><argument_list pos:line="27" pos:column="23">(<argument><expr><name pos:line="27" pos:column="24">data_sets<pos:position pos:line="27" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="35">(<pos:position pos:line="27" pos:column="36"/></operator><name pos:line="27" pos:column="36">void<pos:position pos:line="27" pos:column="40"/></name> <operator pos:line="27" pos:column="41">*<pos:position pos:line="27" pos:column="42"/></operator><operator pos:line="27" pos:column="42">)<pos:position pos:line="27" pos:column="43"/></operator><name><name pos:line="27" pos:column="43">ds_copy<pos:position pos:line="27" pos:column="50"/></name><operator pos:line="27" pos:column="50">-&gt;<pos:position pos:line="27" pos:column="55"/></operator><name pos:line="27" pos:column="52">type<pos:position pos:line="27" pos:column="56"/></name></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="58">(<pos:position pos:line="27" pos:column="59"/></operator><name pos:line="27" pos:column="59">void<pos:position pos:line="27" pos:column="63"/></name> <operator pos:line="27" pos:column="64">*<pos:position pos:line="27" pos:column="65"/></operator><operator pos:line="27" pos:column="65">)<pos:position pos:line="27" pos:column="66"/></operator><name pos:line="27" pos:column="66">ds_copy<pos:position pos:line="27" pos:column="73"/></name></expr></argument>)<pos:position pos:line="27" pos:column="74"/></argument_list></call><operator pos:line="27" pos:column="74">)<pos:position pos:line="27" pos:column="75"/></operator></expr>;<pos:position pos:line="27" pos:column="76"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

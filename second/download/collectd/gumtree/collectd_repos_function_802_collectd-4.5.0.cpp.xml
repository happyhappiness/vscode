<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_802_collectd-4.5.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ntpd_read<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">void<pos:position pos:line="1" pos:column="27"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="28"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">info_kernel<pos:position pos:line="3" pos:column="27"/></name></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">ik<pos:position pos:line="3" pos:column="31"/></name></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type>                 <name pos:line="4" pos:column="29">ik_num<pos:position pos:line="4" pos:column="35"/></name></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type>                 <name pos:line="5" pos:column="29">ik_size<pos:position pos:line="5" pos:column="36"/></name></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">info_peer_summary<pos:position pos:line="7" pos:column="33"/></name></name> <modifier pos:line="7" pos:column="34">*<pos:position pos:line="7" pos:column="35"/></modifier></type><name pos:line="7" pos:column="35">ps<pos:position pos:line="7" pos:column="37"/></name></decl>;<pos:position pos:line="7" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type>                       <name pos:line="8" pos:column="35">ps_num<pos:position pos:line="8" pos:column="41"/></name></decl>;<pos:position pos:line="8" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type>                       <name pos:line="9" pos:column="35">ps_size<pos:position pos:line="9" pos:column="42"/></name></decl>;<pos:position pos:line="9" pos:column="43"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">status<pos:position pos:line="11" pos:column="19"/></name></decl>;<pos:position pos:line="11" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">int<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">i<pos:position pos:line="12" pos:column="14"/></name></decl>;<pos:position pos:line="12" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><name pos:line="14" pos:column="9">ik<pos:position pos:line="14" pos:column="11"/></name>      <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator> <name pos:line="14" pos:column="19">NULL<pos:position pos:line="14" pos:column="23"/></name></expr>;<pos:position pos:line="14" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name pos:line="15" pos:column="9">ik_num<pos:position pos:line="15" pos:column="15"/></name>  <operator pos:line="15" pos:column="17">=<pos:position pos:line="15" pos:column="18"/></operator> <literal type="number" pos:line="15" pos:column="19">0<pos:position pos:line="15" pos:column="20"/></literal></expr>;<pos:position pos:line="15" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name pos:line="16" pos:column="9">ik_size<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <literal type="number" pos:line="16" pos:column="19">0<pos:position pos:line="16" pos:column="20"/></literal></expr>;<pos:position pos:line="16" pos:column="21"/></expr_stmt>

	<expr_stmt><expr><name pos:line="18" pos:column="9">status<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <call><name pos:line="18" pos:column="18">ntpd_do_query<pos:position pos:line="18" pos:column="31"/></name> <argument_list pos:line="18" pos:column="32">(<argument><expr><name pos:line="18" pos:column="33">REQ_GET_KERNEL<pos:position pos:line="18" pos:column="47"/></name></expr></argument>,
			<argument><expr><literal type="number" pos:line="19" pos:column="25">0<pos:position pos:line="19" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="28">0<pos:position pos:line="19" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="31">NULL<pos:position pos:line="19" pos:column="35"/></name></expr></argument>, <comment type="block" pos:line="19" pos:column="37">/* request data */</comment>
			<argument><expr><operator pos:line="20" pos:column="25">&amp;<pos:position pos:line="20" pos:column="30"/></operator><name pos:line="20" pos:column="26">ik_num<pos:position pos:line="20" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="34">&amp;<pos:position pos:line="20" pos:column="39"/></operator><name pos:line="20" pos:column="35">ik_size<pos:position pos:line="20" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="44">(<pos:position pos:line="20" pos:column="45"/></operator><name pos:line="20" pos:column="45">char<pos:position pos:line="20" pos:column="49"/></name> <operator pos:line="20" pos:column="50">*<pos:position pos:line="20" pos:column="51"/></operator><operator pos:line="20" pos:column="51">*<pos:position pos:line="20" pos:column="52"/></operator><operator pos:line="20" pos:column="52">)<pos:position pos:line="20" pos:column="53"/></operator> <operator pos:line="20" pos:column="54">(<pos:position pos:line="20" pos:column="55"/></operator><operator pos:line="20" pos:column="55">(<pos:position pos:line="20" pos:column="56"/></operator><name pos:line="20" pos:column="56">void<pos:position pos:line="20" pos:column="60"/></name> <operator pos:line="20" pos:column="61">*<pos:position pos:line="20" pos:column="62"/></operator><operator pos:line="20" pos:column="62">)<pos:position pos:line="20" pos:column="63"/></operator> <operator pos:line="20" pos:column="64">&amp;<pos:position pos:line="20" pos:column="69"/></operator><name pos:line="20" pos:column="65">ik<pos:position pos:line="20" pos:column="67"/></name><operator pos:line="20" pos:column="67">)<pos:position pos:line="20" pos:column="68"/></operator></expr></argument>, <comment type="block" pos:line="20" pos:column="70">/* response data */</comment>
			<argument><expr><sizeof pos:line="21" pos:column="25">sizeof <argument_list pos:line="21" pos:column="32">(<argument><expr pos:line="21" pos:column="33">struct <name pos:line="21" pos:column="40">info_kernel<pos:position pos:line="21" pos:column="51"/></name></expr></argument>)<pos:position pos:line="21" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="54"/></expr_stmt>

	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">status<pos:position pos:line="23" pos:column="19"/></name> <operator pos:line="23" pos:column="20">!=<pos:position pos:line="23" pos:column="22"/></operator> <literal type="number" pos:line="23" pos:column="23">0<pos:position pos:line="23" pos:column="24"/></literal></expr>)<pos:position pos:line="23" pos:column="25"/></condition><then pos:line="23" pos:column="25">
	<block pos:line="24" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">DEBUG<pos:position pos:line="25" pos:column="22"/></name> <argument_list pos:line="25" pos:column="23">(<argument><expr><literal type="string" pos:line="25" pos:column="24">"ntpd_do_query failed with status %i"<pos:position pos:line="25" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="63">status<pos:position pos:line="25" pos:column="69"/></name></expr></argument>)<pos:position pos:line="25" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="71"/></expr_stmt>
		<return pos:line="26" pos:column="17">return <expr><operator pos:line="26" pos:column="24">(<pos:position pos:line="26" pos:column="25"/></operator><operator pos:line="26" pos:column="25">-<pos:position pos:line="26" pos:column="26"/></operator><literal type="number" pos:line="26" pos:column="26">1<pos:position pos:line="26" pos:column="27"/></literal><operator pos:line="26" pos:column="27">)<pos:position pos:line="26" pos:column="28"/></operator></expr>;<pos:position pos:line="26" pos:column="29"/></return>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if>
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">(<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">ik<pos:position pos:line="28" pos:column="16"/></name> <operator pos:line="28" pos:column="17">==<pos:position pos:line="28" pos:column="19"/></operator> <name pos:line="28" pos:column="20">NULL<pos:position pos:line="28" pos:column="24"/></name><operator pos:line="28" pos:column="24">)<pos:position pos:line="28" pos:column="25"/></operator> <operator pos:line="28" pos:column="26">||<pos:position pos:line="28" pos:column="28"/></operator> <operator pos:line="28" pos:column="29">(<pos:position pos:line="28" pos:column="30"/></operator><name pos:line="28" pos:column="30">ik_num<pos:position pos:line="28" pos:column="36"/></name> <operator pos:line="28" pos:column="37">==<pos:position pos:line="28" pos:column="39"/></operator> <literal type="number" pos:line="28" pos:column="40">0<pos:position pos:line="28" pos:column="41"/></literal><operator pos:line="28" pos:column="41">)<pos:position pos:line="28" pos:column="42"/></operator> <operator pos:line="28" pos:column="43">||<pos:position pos:line="28" pos:column="45"/></operator> <operator pos:line="28" pos:column="46">(<pos:position pos:line="28" pos:column="47"/></operator><name pos:line="28" pos:column="47">ik_size<pos:position pos:line="28" pos:column="54"/></name> <operator pos:line="28" pos:column="55">==<pos:position pos:line="28" pos:column="57"/></operator> <literal type="number" pos:line="28" pos:column="58">0<pos:position pos:line="28" pos:column="59"/></literal><operator pos:line="28" pos:column="59">)<pos:position pos:line="28" pos:column="60"/></operator></expr>)<pos:position pos:line="28" pos:column="61"/></condition><then pos:line="28" pos:column="61">
	<block pos:line="29" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">DEBUG<pos:position pos:line="30" pos:column="22"/></name> <argument_list pos:line="30" pos:column="23">(<argument><expr><literal type="string" pos:line="30" pos:column="24">"ntpd_do_query returned: ik = %p; ik_num = %i; ik_size = %i;"<pos:position pos:line="30" pos:column="85"/></literal></expr></argument>,
				<argument><expr><operator pos:line="31" pos:column="33">(<pos:position pos:line="31" pos:column="34"/></operator><name pos:line="31" pos:column="34">void<pos:position pos:line="31" pos:column="38"/></name> <operator pos:line="31" pos:column="39">*<pos:position pos:line="31" pos:column="40"/></operator><operator pos:line="31" pos:column="40">)<pos:position pos:line="31" pos:column="41"/></operator> <name pos:line="31" pos:column="42">ik<pos:position pos:line="31" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="46">ik_num<pos:position pos:line="31" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="54">ik_size<pos:position pos:line="31" pos:column="61"/></name></expr></argument>)<pos:position pos:line="31" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="63"/></expr_stmt>
		<return pos:line="32" pos:column="17">return <expr><operator pos:line="32" pos:column="24">(<pos:position pos:line="32" pos:column="25"/></operator><operator pos:line="32" pos:column="25">-<pos:position pos:line="32" pos:column="26"/></operator><literal type="number" pos:line="32" pos:column="26">1<pos:position pos:line="32" pos:column="27"/></literal><operator pos:line="32" pos:column="27">)<pos:position pos:line="32" pos:column="28"/></operator></expr>;<pos:position pos:line="32" pos:column="29"/></return>
	}<pos:position pos:line="33" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="35" pos:column="9">/* kerninfo -&gt; estimated error */</comment>

	<expr_stmt><expr><call><name pos:line="37" pos:column="9">DEBUG<pos:position pos:line="37" pos:column="14"/></name> <argument_list pos:line="37" pos:column="15">(<argument><expr><literal type="string" pos:line="37" pos:column="16">"info_kernel:\n"<pos:position pos:line="37" pos:column="32"/></literal>
			<literal type="string" pos:line="38" pos:column="25">"  pll offset    = %.8f\n"<pos:position pos:line="38" pos:column="51"/></literal>
			<literal type="string" pos:line="39" pos:column="25">"  pll frequency = %.8f\n"<pos:position pos:line="39" pos:column="51"/></literal> <comment type="block" pos:line="39" pos:column="52">/* drift compensation */</comment>
			<literal type="string" pos:line="40" pos:column="25">"  est error     = %.8f\n"<pos:position pos:line="40" pos:column="51"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="41" pos:column="25">ntpd_read_fp<pos:position pos:line="41" pos:column="37"/></name> <argument_list pos:line="41" pos:column="38">(<argument><expr><name><name pos:line="41" pos:column="39">ik<pos:position pos:line="41" pos:column="41"/></name><operator pos:line="41" pos:column="41">-&gt;<pos:position pos:line="41" pos:column="46"/></operator><name pos:line="41" pos:column="43">offset<pos:position pos:line="41" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="50"/></argument_list></call></expr></argument>,
			<argument><expr><call><name pos:line="42" pos:column="25">ntpd_read_fp<pos:position pos:line="42" pos:column="37"/></name> <argument_list pos:line="42" pos:column="38">(<argument><expr><name><name pos:line="42" pos:column="39">ik<pos:position pos:line="42" pos:column="41"/></name><operator pos:line="42" pos:column="41">-&gt;<pos:position pos:line="42" pos:column="46"/></operator><name pos:line="42" pos:column="43">freq<pos:position pos:line="42" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="48"/></argument_list></call></expr></argument>,
			<argument><expr><call><name pos:line="43" pos:column="25">ntpd_read_fp<pos:position pos:line="43" pos:column="37"/></name> <argument_list pos:line="43" pos:column="38">(<argument><expr><name><name pos:line="43" pos:column="39">ik<pos:position pos:line="43" pos:column="41"/></name><operator pos:line="43" pos:column="41">-&gt;<pos:position pos:line="43" pos:column="46"/></operator><name pos:line="43" pos:column="43">esterror<pos:position pos:line="43" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="54"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="45" pos:column="9">ntpd_submit<pos:position pos:line="45" pos:column="20"/></name> <argument_list pos:line="45" pos:column="21">(<argument><expr><literal type="string" pos:line="45" pos:column="22">"frequency_offset"<pos:position pos:line="45" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="42">"loop"<pos:position pos:line="45" pos:column="48"/></literal></expr></argument>,  <argument><expr><call><name pos:line="45" pos:column="51">ntpd_read_fp<pos:position pos:line="45" pos:column="63"/></name> <argument_list pos:line="45" pos:column="64">(<argument><expr><name><name pos:line="45" pos:column="65">ik<pos:position pos:line="45" pos:column="67"/></name><operator pos:line="45" pos:column="67">-&gt;<pos:position pos:line="45" pos:column="72"/></operator><name pos:line="45" pos:column="69">freq<pos:position pos:line="45" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="45" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="76"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="46" pos:column="9">ntpd_submit<pos:position pos:line="46" pos:column="20"/></name> <argument_list pos:line="46" pos:column="21">(<argument><expr><literal type="string" pos:line="46" pos:column="22">"time_offset"<pos:position pos:line="46" pos:column="35"/></literal></expr></argument>,      <argument><expr><literal type="string" pos:line="46" pos:column="42">"loop"<pos:position pos:line="46" pos:column="48"/></literal></expr></argument>,  <argument><expr><call><name pos:line="46" pos:column="51">ntpd_read_fp<pos:position pos:line="46" pos:column="63"/></name> <argument_list pos:line="46" pos:column="64">(<argument><expr><name><name pos:line="46" pos:column="65">ik<pos:position pos:line="46" pos:column="67"/></name><operator pos:line="46" pos:column="67">-&gt;<pos:position pos:line="46" pos:column="72"/></operator><name pos:line="46" pos:column="69">offset<pos:position pos:line="46" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="78"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="47" pos:column="9">ntpd_submit<pos:position pos:line="47" pos:column="20"/></name> <argument_list pos:line="47" pos:column="21">(<argument><expr><literal type="string" pos:line="47" pos:column="22">"time_offset"<pos:position pos:line="47" pos:column="35"/></literal></expr></argument>,      <argument><expr><literal type="string" pos:line="47" pos:column="42">"error"<pos:position pos:line="47" pos:column="49"/></literal></expr></argument>, <argument><expr><call><name pos:line="47" pos:column="51">ntpd_read_fp<pos:position pos:line="47" pos:column="63"/></name> <argument_list pos:line="47" pos:column="64">(<argument><expr><name><name pos:line="47" pos:column="65">ik<pos:position pos:line="47" pos:column="67"/></name><operator pos:line="47" pos:column="67">-&gt;<pos:position pos:line="47" pos:column="72"/></operator><name pos:line="47" pos:column="69">esterror<pos:position pos:line="47" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="80"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="49" pos:column="9">free<pos:position pos:line="49" pos:column="13"/></name> <argument_list pos:line="49" pos:column="14">(<argument><expr><name pos:line="49" pos:column="15">ik<pos:position pos:line="49" pos:column="17"/></name></expr></argument>)<pos:position pos:line="49" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="19"/></expr_stmt>
	<expr_stmt><expr><name pos:line="50" pos:column="9">ik<pos:position pos:line="50" pos:column="11"/></name> <operator pos:line="50" pos:column="12">=<pos:position pos:line="50" pos:column="13"/></operator> <name pos:line="50" pos:column="14">NULL<pos:position pos:line="50" pos:column="18"/></name></expr>;<pos:position pos:line="50" pos:column="19"/></expr_stmt>

	<expr_stmt><expr><name pos:line="52" pos:column="9">status<pos:position pos:line="52" pos:column="15"/></name> <operator pos:line="52" pos:column="16">=<pos:position pos:line="52" pos:column="17"/></operator> <call><name pos:line="52" pos:column="18">ntpd_do_query<pos:position pos:line="52" pos:column="31"/></name> <argument_list pos:line="52" pos:column="32">(<argument><expr><name pos:line="52" pos:column="33">REQ_PEER_LIST_SUM<pos:position pos:line="52" pos:column="50"/></name></expr></argument>,
			<argument><expr><literal type="number" pos:line="53" pos:column="25">0<pos:position pos:line="53" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="28">0<pos:position pos:line="53" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="31">NULL<pos:position pos:line="53" pos:column="35"/></name></expr></argument>, <comment type="block" pos:line="53" pos:column="37">/* request data */</comment>
			<argument><expr><operator pos:line="54" pos:column="25">&amp;<pos:position pos:line="54" pos:column="30"/></operator><name pos:line="54" pos:column="26">ps_num<pos:position pos:line="54" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="34">&amp;<pos:position pos:line="54" pos:column="39"/></operator><name pos:line="54" pos:column="35">ps_size<pos:position pos:line="54" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="44">(<pos:position pos:line="54" pos:column="45"/></operator><name pos:line="54" pos:column="45">char<pos:position pos:line="54" pos:column="49"/></name> <operator pos:line="54" pos:column="50">*<pos:position pos:line="54" pos:column="51"/></operator><operator pos:line="54" pos:column="51">*<pos:position pos:line="54" pos:column="52"/></operator><operator pos:line="54" pos:column="52">)<pos:position pos:line="54" pos:column="53"/></operator> <operator pos:line="54" pos:column="54">(<pos:position pos:line="54" pos:column="55"/></operator><operator pos:line="54" pos:column="55">(<pos:position pos:line="54" pos:column="56"/></operator><name pos:line="54" pos:column="56">void<pos:position pos:line="54" pos:column="60"/></name> <operator pos:line="54" pos:column="61">*<pos:position pos:line="54" pos:column="62"/></operator><operator pos:line="54" pos:column="62">)<pos:position pos:line="54" pos:column="63"/></operator> <operator pos:line="54" pos:column="64">&amp;<pos:position pos:line="54" pos:column="69"/></operator><name pos:line="54" pos:column="65">ps<pos:position pos:line="54" pos:column="67"/></name><operator pos:line="54" pos:column="67">)<pos:position pos:line="54" pos:column="68"/></operator></expr></argument>, <comment type="block" pos:line="54" pos:column="70">/* response data */</comment>
			<argument><expr><sizeof pos:line="55" pos:column="25">sizeof <argument_list pos:line="55" pos:column="32">(<argument><expr pos:line="55" pos:column="33">struct <name pos:line="55" pos:column="40">info_peer_summary<pos:position pos:line="55" pos:column="57"/></name></expr></argument>)<pos:position pos:line="55" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="55" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="60"/></expr_stmt>
	<if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name pos:line="56" pos:column="13">status<pos:position pos:line="56" pos:column="19"/></name> <operator pos:line="56" pos:column="20">!=<pos:position pos:line="56" pos:column="22"/></operator> <literal type="number" pos:line="56" pos:column="23">0<pos:position pos:line="56" pos:column="24"/></literal></expr>)<pos:position pos:line="56" pos:column="25"/></condition><then pos:line="56" pos:column="25">
	<block pos:line="57" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="58" pos:column="17">DEBUG<pos:position pos:line="58" pos:column="22"/></name> <argument_list pos:line="58" pos:column="23">(<argument><expr><literal type="string" pos:line="58" pos:column="24">"ntpd_do_query failed with status %i"<pos:position pos:line="58" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="63">status<pos:position pos:line="58" pos:column="69"/></name></expr></argument>)<pos:position pos:line="58" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="71"/></expr_stmt>
		<return pos:line="59" pos:column="17">return <expr><operator pos:line="59" pos:column="24">(<pos:position pos:line="59" pos:column="25"/></operator><operator pos:line="59" pos:column="25">-<pos:position pos:line="59" pos:column="26"/></operator><literal type="number" pos:line="59" pos:column="26">1<pos:position pos:line="59" pos:column="27"/></literal><operator pos:line="59" pos:column="27">)<pos:position pos:line="59" pos:column="28"/></operator></expr>;<pos:position pos:line="59" pos:column="29"/></return>
	}<pos:position pos:line="60" pos:column="10"/></block></then></if>
	<if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><operator pos:line="61" pos:column="13">(<pos:position pos:line="61" pos:column="14"/></operator><name pos:line="61" pos:column="14">ps<pos:position pos:line="61" pos:column="16"/></name> <operator pos:line="61" pos:column="17">==<pos:position pos:line="61" pos:column="19"/></operator> <name pos:line="61" pos:column="20">NULL<pos:position pos:line="61" pos:column="24"/></name><operator pos:line="61" pos:column="24">)<pos:position pos:line="61" pos:column="25"/></operator> <operator pos:line="61" pos:column="26">||<pos:position pos:line="61" pos:column="28"/></operator> <operator pos:line="61" pos:column="29">(<pos:position pos:line="61" pos:column="30"/></operator><name pos:line="61" pos:column="30">ps_num<pos:position pos:line="61" pos:column="36"/></name> <operator pos:line="61" pos:column="37">==<pos:position pos:line="61" pos:column="39"/></operator> <literal type="number" pos:line="61" pos:column="40">0<pos:position pos:line="61" pos:column="41"/></literal><operator pos:line="61" pos:column="41">)<pos:position pos:line="61" pos:column="42"/></operator> <operator pos:line="61" pos:column="43">||<pos:position pos:line="61" pos:column="45"/></operator> <operator pos:line="61" pos:column="46">(<pos:position pos:line="61" pos:column="47"/></operator><name pos:line="61" pos:column="47">ps_size<pos:position pos:line="61" pos:column="54"/></name> <operator pos:line="61" pos:column="55">==<pos:position pos:line="61" pos:column="57"/></operator> <literal type="number" pos:line="61" pos:column="58">0<pos:position pos:line="61" pos:column="59"/></literal><operator pos:line="61" pos:column="59">)<pos:position pos:line="61" pos:column="60"/></operator></expr>)<pos:position pos:line="61" pos:column="61"/></condition><then pos:line="61" pos:column="61">
	<block pos:line="62" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="63" pos:column="17">DEBUG<pos:position pos:line="63" pos:column="22"/></name> <argument_list pos:line="63" pos:column="23">(<argument><expr><literal type="string" pos:line="63" pos:column="24">"ntpd_do_query returned: ps = %p; ps_num = %i; ps_size = %i;"<pos:position pos:line="63" pos:column="85"/></literal></expr></argument>,
				<argument><expr><operator pos:line="64" pos:column="33">(<pos:position pos:line="64" pos:column="34"/></operator><name pos:line="64" pos:column="34">void<pos:position pos:line="64" pos:column="38"/></name> <operator pos:line="64" pos:column="39">*<pos:position pos:line="64" pos:column="40"/></operator><operator pos:line="64" pos:column="40">)<pos:position pos:line="64" pos:column="41"/></operator> <name pos:line="64" pos:column="42">ps<pos:position pos:line="64" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="46">ps_num<pos:position pos:line="64" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="54">ps_size<pos:position pos:line="64" pos:column="61"/></name></expr></argument>)<pos:position pos:line="64" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="63"/></expr_stmt>
		<return pos:line="65" pos:column="17">return <expr><operator pos:line="65" pos:column="24">(<pos:position pos:line="65" pos:column="25"/></operator><operator pos:line="65" pos:column="25">-<pos:position pos:line="65" pos:column="26"/></operator><literal type="number" pos:line="65" pos:column="26">1<pos:position pos:line="65" pos:column="27"/></literal><operator pos:line="65" pos:column="27">)<pos:position pos:line="65" pos:column="28"/></operator></expr>;<pos:position pos:line="65" pos:column="29"/></return>
	}<pos:position pos:line="66" pos:column="10"/></block></then></if>

	<for pos:line="68" pos:column="9">for <control pos:line="68" pos:column="13">(<init><expr><name pos:line="68" pos:column="14">i<pos:position pos:line="68" pos:column="15"/></name> <operator pos:line="68" pos:column="16">=<pos:position pos:line="68" pos:column="17"/></operator> <literal type="number" pos:line="68" pos:column="18">0<pos:position pos:line="68" pos:column="19"/></literal></expr>;<pos:position pos:line="68" pos:column="20"/></init> <condition><expr><name pos:line="68" pos:column="21">i<pos:position pos:line="68" pos:column="22"/></name> <operator pos:line="68" pos:column="23">&lt;<pos:position pos:line="68" pos:column="27"/></operator> <name pos:line="68" pos:column="25">ps_num<pos:position pos:line="68" pos:column="31"/></name></expr>;<pos:position pos:line="68" pos:column="32"/></condition> <incr><expr><name pos:line="68" pos:column="33">i<pos:position pos:line="68" pos:column="34"/></name><operator pos:line="68" pos:column="34">++<pos:position pos:line="68" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="68" pos:column="37"/></control>
	<block pos:line="69" pos:column="9">{
		<decl_stmt><decl><type><name><name pos:line="70" pos:column="17">struct<pos:position pos:line="70" pos:column="23"/></name> <name pos:line="70" pos:column="24">info_peer_summary<pos:position pos:line="70" pos:column="41"/></name></name> <modifier pos:line="70" pos:column="42">*<pos:position pos:line="70" pos:column="43"/></modifier></type><name pos:line="70" pos:column="43">ptr<pos:position pos:line="70" pos:column="46"/></name></decl>;<pos:position pos:line="70" pos:column="47"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="71" pos:column="17">double<pos:position pos:line="71" pos:column="23"/></name></type> <name pos:line="71" pos:column="24">offset<pos:position pos:line="71" pos:column="30"/></name></decl>;<pos:position pos:line="71" pos:column="31"/></decl_stmt>

		<decl_stmt><decl><type><name pos:line="73" pos:column="17">char<pos:position pos:line="73" pos:column="21"/></name></type> <name><name pos:line="73" pos:column="22">peername<pos:position pos:line="73" pos:column="30"/></name><index pos:line="73" pos:column="30">[<expr><name pos:line="73" pos:column="31">NI_MAXHOST<pos:position pos:line="73" pos:column="41"/></name></expr>]<pos:position pos:line="73" pos:column="42"/></index></name></decl>;<pos:position pos:line="73" pos:column="43"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="74" pos:column="17">int<pos:position pos:line="74" pos:column="20"/></name></type> <name pos:line="74" pos:column="21">refclock_id<pos:position pos:line="74" pos:column="32"/></name></decl>;<pos:position pos:line="74" pos:column="33"/></decl_stmt>
		
		<expr_stmt><expr><name pos:line="76" pos:column="17">ptr<pos:position pos:line="76" pos:column="20"/></name> <operator pos:line="76" pos:column="21">=<pos:position pos:line="76" pos:column="22"/></operator> <name pos:line="76" pos:column="23">ps<pos:position pos:line="76" pos:column="25"/></name> <operator pos:line="76" pos:column="26">+<pos:position pos:line="76" pos:column="27"/></operator> <name pos:line="76" pos:column="28">i<pos:position pos:line="76" pos:column="29"/></name></expr>;<pos:position pos:line="76" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><name pos:line="77" pos:column="17">refclock_id<pos:position pos:line="77" pos:column="28"/></name> <operator pos:line="77" pos:column="29">=<pos:position pos:line="77" pos:column="30"/></operator> <literal type="number" pos:line="77" pos:column="31">0<pos:position pos:line="77" pos:column="32"/></literal></expr>;<pos:position pos:line="77" pos:column="33"/></expr_stmt>

		<comment type="block" pos:line="79" pos:column="17">/* Convert the `long floating point' offset value to double */</comment>
		<expr_stmt><expr><call><name pos:line="80" pos:column="17">M_LFPTOD<pos:position pos:line="80" pos:column="25"/></name> <argument_list pos:line="80" pos:column="26">(<argument><expr><call><name pos:line="80" pos:column="27">ntohl<pos:position pos:line="80" pos:column="32"/></name> <argument_list pos:line="80" pos:column="33">(<argument><expr><name><name pos:line="80" pos:column="34">ptr<pos:position pos:line="80" pos:column="37"/></name><operator pos:line="80" pos:column="37">-&gt;<pos:position pos:line="80" pos:column="42"/></operator><name pos:line="80" pos:column="39">offset_int<pos:position pos:line="80" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="80" pos:column="52">ntohl<pos:position pos:line="80" pos:column="57"/></name> <argument_list pos:line="80" pos:column="58">(<argument><expr><name><name pos:line="80" pos:column="59">ptr<pos:position pos:line="80" pos:column="62"/></name><operator pos:line="80" pos:column="62">-&gt;<pos:position pos:line="80" pos:column="67"/></operator><name pos:line="80" pos:column="64">offset_frc<pos:position pos:line="80" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="75"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="80" pos:column="77">offset<pos:position pos:line="80" pos:column="83"/></name></expr></argument>)<pos:position pos:line="80" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="85"/></expr_stmt>

		<comment type="block" pos:line="82" pos:column="17">/* Special IP addresses for hardware clocks and stuff.. */</comment>
		<if pos:line="83" pos:column="17">if <condition pos:line="83" pos:column="20">(<expr><operator pos:line="83" pos:column="21">!<pos:position pos:line="83" pos:column="22"/></operator><name><name pos:line="83" pos:column="22">ptr<pos:position pos:line="83" pos:column="25"/></name><operator pos:line="83" pos:column="25">-&gt;<pos:position pos:line="83" pos:column="30"/></operator><name pos:line="83" pos:column="27">v6_flag<pos:position pos:line="83" pos:column="34"/></name></name>
				<operator pos:line="84" pos:column="33">&amp;&amp;<pos:position pos:line="84" pos:column="43"/></operator> <operator pos:line="84" pos:column="36">(<pos:position pos:line="84" pos:column="37"/></operator><operator pos:line="84" pos:column="37">(<pos:position pos:line="84" pos:column="38"/></operator><call><name pos:line="84" pos:column="38">ntohl<pos:position pos:line="84" pos:column="43"/></name> <argument_list pos:line="84" pos:column="44">(<argument><expr><name><name pos:line="84" pos:column="45">ptr<pos:position pos:line="84" pos:column="48"/></name><operator pos:line="84" pos:column="48">-&gt;<pos:position pos:line="84" pos:column="53"/></operator><name pos:line="84" pos:column="50">srcadr<pos:position pos:line="84" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="57"/></argument_list></call> <operator pos:line="84" pos:column="58">&amp;<pos:position pos:line="84" pos:column="63"/></operator> <name pos:line="84" pos:column="60">REFCLOCK_MASK<pos:position pos:line="84" pos:column="73"/></name><operator pos:line="84" pos:column="73">)<pos:position pos:line="84" pos:column="74"/></operator>
					<operator pos:line="85" pos:column="41">==<pos:position pos:line="85" pos:column="43"/></operator> <name pos:line="85" pos:column="44">REFCLOCK_ADDR<pos:position pos:line="85" pos:column="57"/></name><operator pos:line="85" pos:column="57">)<pos:position pos:line="85" pos:column="58"/></operator></expr>)<pos:position pos:line="85" pos:column="59"/></condition><then pos:line="85" pos:column="59">
		<block pos:line="86" pos:column="17">{
			<decl_stmt><decl><type><name><name pos:line="87" pos:column="25">struct<pos:position pos:line="87" pos:column="31"/></name> <name pos:line="87" pos:column="32">in_addr<pos:position pos:line="87" pos:column="39"/></name></name></type>  <name pos:line="87" pos:column="41">addr_obj<pos:position pos:line="87" pos:column="49"/></name></decl>;<pos:position pos:line="87" pos:column="50"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="88" pos:column="25">char<pos:position pos:line="88" pos:column="29"/></name> <modifier pos:line="88" pos:column="30">*<pos:position pos:line="88" pos:column="31"/></modifier></type><name pos:line="88" pos:column="31">addr_str<pos:position pos:line="88" pos:column="39"/></name></decl>;<pos:position pos:line="88" pos:column="40"/></decl_stmt>

			<expr_stmt><expr><name pos:line="90" pos:column="25">refclock_id<pos:position pos:line="90" pos:column="36"/></name> <operator pos:line="90" pos:column="37">=<pos:position pos:line="90" pos:column="38"/></operator> <operator pos:line="90" pos:column="39">(<pos:position pos:line="90" pos:column="40"/></operator><call><name pos:line="90" pos:column="40">ntohl<pos:position pos:line="90" pos:column="45"/></name> <argument_list pos:line="90" pos:column="46">(<argument><expr><name><name pos:line="90" pos:column="47">ptr<pos:position pos:line="90" pos:column="50"/></name><operator pos:line="90" pos:column="50">-&gt;<pos:position pos:line="90" pos:column="55"/></operator><name pos:line="90" pos:column="52">srcadr<pos:position pos:line="90" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="59"/></argument_list></call> <operator pos:line="90" pos:column="60">&gt;&gt;<pos:position pos:line="90" pos:column="65"/></operator> <literal type="number" pos:line="90" pos:column="63">8<pos:position pos:line="90" pos:column="64"/></literal><operator pos:line="90" pos:column="64">)<pos:position pos:line="90" pos:column="65"/></operator> <operator pos:line="90" pos:column="66">&amp;<pos:position pos:line="90" pos:column="71"/></operator> <literal type="number" pos:line="90" pos:column="68">0x000000FF<pos:position pos:line="90" pos:column="78"/></literal></expr>;<pos:position pos:line="90" pos:column="79"/></expr_stmt>

			<if pos:line="92" pos:column="25">if <condition pos:line="92" pos:column="28">(<expr><name pos:line="92" pos:column="29">refclock_id<pos:position pos:line="92" pos:column="40"/></name> <operator pos:line="92" pos:column="41">&lt;<pos:position pos:line="92" pos:column="45"/></operator> <name pos:line="92" pos:column="43">refclock_names_num<pos:position pos:line="92" pos:column="61"/></name></expr>)<pos:position pos:line="92" pos:column="62"/></condition><then pos:line="92" pos:column="62">
			<block pos:line="93" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="94" pos:column="33">sstrncpy<pos:position pos:line="94" pos:column="41"/></name> <argument_list pos:line="94" pos:column="42">(<argument><expr><name pos:line="94" pos:column="43">peername<pos:position pos:line="94" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="94" pos:column="53">refclock_names<pos:position pos:line="94" pos:column="67"/></name><index pos:line="94" pos:column="67">[<expr><name pos:line="94" pos:column="68">refclock_id<pos:position pos:line="94" pos:column="79"/></name></expr>]<pos:position pos:line="94" pos:column="80"/></index></name></expr></argument>,
						<argument><expr><sizeof pos:line="95" pos:column="49">sizeof <argument_list pos:line="95" pos:column="56">(<argument><expr><name pos:line="95" pos:column="57">peername<pos:position pos:line="95" pos:column="65"/></name></expr></argument>)<pos:position pos:line="95" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="95" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="68"/></expr_stmt>
			}<pos:position pos:line="96" pos:column="26"/></block></then>
			<else pos:line="97" pos:column="25">else
			<block pos:line="98" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="99" pos:column="33">memset<pos:position pos:line="99" pos:column="39"/></name> <argument_list pos:line="99" pos:column="40">(<argument><expr><operator pos:line="99" pos:column="41">(<pos:position pos:line="99" pos:column="42"/></operator><name pos:line="99" pos:column="42">void<pos:position pos:line="99" pos:column="46"/></name> <operator pos:line="99" pos:column="47">*<pos:position pos:line="99" pos:column="48"/></operator><operator pos:line="99" pos:column="48">)<pos:position pos:line="99" pos:column="49"/></operator> <operator pos:line="99" pos:column="50">&amp;<pos:position pos:line="99" pos:column="55"/></operator><name pos:line="99" pos:column="51">addr_obj<pos:position pos:line="99" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="99" pos:column="61">'\0'<pos:position pos:line="99" pos:column="65"/></literal></expr></argument>, <argument><expr><sizeof pos:line="99" pos:column="67">sizeof <argument_list pos:line="99" pos:column="74">(<argument><expr><name pos:line="99" pos:column="75">addr_obj<pos:position pos:line="99" pos:column="83"/></name></expr></argument>)<pos:position pos:line="99" pos:column="84"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="99" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="86"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="100" pos:column="33">addr_obj<pos:position pos:line="100" pos:column="41"/></name><operator pos:line="100" pos:column="41">.<pos:position pos:line="100" pos:column="42"/></operator><name pos:line="100" pos:column="42">s_addr<pos:position pos:line="100" pos:column="48"/></name></name> <operator pos:line="100" pos:column="49">=<pos:position pos:line="100" pos:column="50"/></operator> <name><name pos:line="100" pos:column="51">ptr<pos:position pos:line="100" pos:column="54"/></name><operator pos:line="100" pos:column="54">-&gt;<pos:position pos:line="100" pos:column="59"/></operator><name pos:line="100" pos:column="56">srcadr<pos:position pos:line="100" pos:column="62"/></name></name></expr>;<pos:position pos:line="100" pos:column="63"/></expr_stmt>
				<expr_stmt><expr><name pos:line="101" pos:column="33">addr_str<pos:position pos:line="101" pos:column="41"/></name> <operator pos:line="101" pos:column="42">=<pos:position pos:line="101" pos:column="43"/></operator> <call><name pos:line="101" pos:column="44">inet_ntoa<pos:position pos:line="101" pos:column="53"/></name> <argument_list pos:line="101" pos:column="54">(<argument><expr><name pos:line="101" pos:column="55">addr_obj<pos:position pos:line="101" pos:column="63"/></name></expr></argument>)<pos:position pos:line="101" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="65"/></expr_stmt>

				<expr_stmt><expr><call><name pos:line="103" pos:column="33">sstrncpy<pos:position pos:line="103" pos:column="41"/></name> <argument_list pos:line="103" pos:column="42">(<argument><expr><name pos:line="103" pos:column="43">peername<pos:position pos:line="103" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="53">addr_str<pos:position pos:line="103" pos:column="61"/></name></expr></argument>, <argument><expr><sizeof pos:line="103" pos:column="63">sizeof <argument_list pos:line="103" pos:column="70">(<argument><expr><name pos:line="103" pos:column="71">peername<pos:position pos:line="103" pos:column="79"/></name></expr></argument>)<pos:position pos:line="103" pos:column="80"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="103" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="82"/></expr_stmt>
			}<pos:position pos:line="104" pos:column="26"/></block></else></if>
		}<pos:position pos:line="105" pos:column="18"/></block></then>
		<else pos:line="106" pos:column="17">else <comment type="block" pos:line="106" pos:column="22">/* Normal network host. */</comment>
		<block pos:line="107" pos:column="17">{
			<decl_stmt><decl><type><name><name pos:line="108" pos:column="25">struct<pos:position pos:line="108" pos:column="31"/></name> <name pos:line="108" pos:column="32">sockaddr_storage<pos:position pos:line="108" pos:column="48"/></name></name></type> <name pos:line="108" pos:column="49">sa<pos:position pos:line="108" pos:column="51"/></name></decl>;<pos:position pos:line="108" pos:column="52"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="109" pos:column="25">socklen_t<pos:position pos:line="109" pos:column="34"/></name></type> <name pos:line="109" pos:column="35">sa_len<pos:position pos:line="109" pos:column="41"/></name></decl>;<pos:position pos:line="109" pos:column="42"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="110" pos:column="25">int<pos:position pos:line="110" pos:column="28"/></name></type> <name pos:line="110" pos:column="29">flags<pos:position pos:line="110" pos:column="34"/></name> <init pos:line="110" pos:column="35">= <expr><literal type="number" pos:line="110" pos:column="37">0<pos:position pos:line="110" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="110" pos:column="39"/></decl_stmt>

			<expr_stmt><expr><call><name pos:line="112" pos:column="25">memset<pos:position pos:line="112" pos:column="31"/></name> <argument_list pos:line="112" pos:column="32">(<argument><expr><operator pos:line="112" pos:column="33">&amp;<pos:position pos:line="112" pos:column="38"/></operator><name pos:line="112" pos:column="34">sa<pos:position pos:line="112" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="112" pos:column="38">'\0'<pos:position pos:line="112" pos:column="42"/></literal></expr></argument>, <argument><expr><sizeof pos:line="112" pos:column="44">sizeof <argument_list pos:line="112" pos:column="51">(<argument><expr><name pos:line="112" pos:column="52">sa<pos:position pos:line="112" pos:column="54"/></name></expr></argument>)<pos:position pos:line="112" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="112" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="57"/></expr_stmt>

			<if pos:line="114" pos:column="25">if <condition pos:line="114" pos:column="28">(<expr><name><name pos:line="114" pos:column="29">ptr<pos:position pos:line="114" pos:column="32"/></name><operator pos:line="114" pos:column="32">-&gt;<pos:position pos:line="114" pos:column="37"/></operator><name pos:line="114" pos:column="34">v6_flag<pos:position pos:line="114" pos:column="41"/></name></name></expr>)<pos:position pos:line="114" pos:column="42"/></condition><then pos:line="114" pos:column="42">
			<block pos:line="115" pos:column="25">{
				<decl_stmt><decl><type><name><name pos:line="116" pos:column="33">struct<pos:position pos:line="116" pos:column="39"/></name> <name pos:line="116" pos:column="40">sockaddr_in6<pos:position pos:line="116" pos:column="52"/></name></name> <modifier pos:line="116" pos:column="53">*<pos:position pos:line="116" pos:column="54"/></modifier></type><name pos:line="116" pos:column="54">sa_ptr<pos:position pos:line="116" pos:column="60"/></name></decl>;<pos:position pos:line="116" pos:column="61"/></decl_stmt>
				<expr_stmt><expr><name pos:line="117" pos:column="33">sa_ptr<pos:position pos:line="117" pos:column="39"/></name> <operator pos:line="117" pos:column="40">=<pos:position pos:line="117" pos:column="41"/></operator> <operator pos:line="117" pos:column="42">(<pos:position pos:line="117" pos:column="43"/></operator>struct <name pos:line="117" pos:column="50">sockaddr_in6<pos:position pos:line="117" pos:column="62"/></name> <operator pos:line="117" pos:column="63">*<pos:position pos:line="117" pos:column="64"/></operator><operator pos:line="117" pos:column="64">)<pos:position pos:line="117" pos:column="65"/></operator> <operator pos:line="117" pos:column="66">&amp;<pos:position pos:line="117" pos:column="71"/></operator><name pos:line="117" pos:column="67">sa<pos:position pos:line="117" pos:column="69"/></name></expr>;<pos:position pos:line="117" pos:column="70"/></expr_stmt>

				<expr_stmt><expr><name><name pos:line="119" pos:column="33">sa_ptr<pos:position pos:line="119" pos:column="39"/></name><operator pos:line="119" pos:column="39">-&gt;<pos:position pos:line="119" pos:column="44"/></operator><name pos:line="119" pos:column="41">sin6_family<pos:position pos:line="119" pos:column="52"/></name></name> <operator pos:line="119" pos:column="53">=<pos:position pos:line="119" pos:column="54"/></operator> <name pos:line="119" pos:column="55">AF_INET6<pos:position pos:line="119" pos:column="63"/></name></expr>;<pos:position pos:line="119" pos:column="64"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="120" pos:column="33">sa_ptr<pos:position pos:line="120" pos:column="39"/></name><operator pos:line="120" pos:column="39">-&gt;<pos:position pos:line="120" pos:column="44"/></operator><name pos:line="120" pos:column="41">sin6_port<pos:position pos:line="120" pos:column="50"/></name></name> <operator pos:line="120" pos:column="51">=<pos:position pos:line="120" pos:column="52"/></operator> <call><name pos:line="120" pos:column="53">htons<pos:position pos:line="120" pos:column="58"/></name> <argument_list pos:line="120" pos:column="59">(<argument><expr><literal type="number" pos:line="120" pos:column="60">123<pos:position pos:line="120" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="120" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="65"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="121" pos:column="33">memcpy<pos:position pos:line="121" pos:column="39"/></name> <argument_list pos:line="121" pos:column="40">(<argument><expr><operator pos:line="121" pos:column="41">&amp;<pos:position pos:line="121" pos:column="46"/></operator><name><name pos:line="121" pos:column="42">sa_ptr<pos:position pos:line="121" pos:column="48"/></name><operator pos:line="121" pos:column="48">-&gt;<pos:position pos:line="121" pos:column="53"/></operator><name pos:line="121" pos:column="50">sin6_addr<pos:position pos:line="121" pos:column="59"/></name></name></expr></argument>, <argument><expr><operator pos:line="121" pos:column="61">&amp;<pos:position pos:line="121" pos:column="66"/></operator><name><name pos:line="121" pos:column="62">ptr<pos:position pos:line="121" pos:column="65"/></name><operator pos:line="121" pos:column="65">-&gt;<pos:position pos:line="121" pos:column="70"/></operator><name pos:line="121" pos:column="67">srcadr6<pos:position pos:line="121" pos:column="74"/></name></name></expr></argument>,
						<argument><expr><sizeof pos:line="122" pos:column="49">sizeof <argument_list pos:line="122" pos:column="56">(<argument><expr pos:line="122" pos:column="57">struct <name pos:line="122" pos:column="64">in6_addr<pos:position pos:line="122" pos:column="72"/></name></expr></argument>)<pos:position pos:line="122" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="122" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="75"/></expr_stmt>
				<expr_stmt><expr><name pos:line="123" pos:column="33">sa_len<pos:position pos:line="123" pos:column="39"/></name> <operator pos:line="123" pos:column="40">=<pos:position pos:line="123" pos:column="41"/></operator> <sizeof pos:line="123" pos:column="42">sizeof <argument_list pos:line="123" pos:column="49">(<argument><expr pos:line="123" pos:column="50">struct <name pos:line="123" pos:column="57">sockaddr_in6<pos:position pos:line="123" pos:column="69"/></name></expr></argument>)<pos:position pos:line="123" pos:column="70"/></argument_list></sizeof></expr>;<pos:position pos:line="123" pos:column="71"/></expr_stmt>
			}<pos:position pos:line="124" pos:column="26"/></block></then>
			<else pos:line="125" pos:column="25">else
			<block pos:line="126" pos:column="25">{
				<decl_stmt><decl><type><name><name pos:line="127" pos:column="33">struct<pos:position pos:line="127" pos:column="39"/></name> <name pos:line="127" pos:column="40">sockaddr_in<pos:position pos:line="127" pos:column="51"/></name></name> <modifier pos:line="127" pos:column="52">*<pos:position pos:line="127" pos:column="53"/></modifier></type><name pos:line="127" pos:column="53">sa_ptr<pos:position pos:line="127" pos:column="59"/></name></decl>;<pos:position pos:line="127" pos:column="60"/></decl_stmt>
				<expr_stmt><expr><name pos:line="128" pos:column="33">sa_ptr<pos:position pos:line="128" pos:column="39"/></name> <operator pos:line="128" pos:column="40">=<pos:position pos:line="128" pos:column="41"/></operator> <operator pos:line="128" pos:column="42">(<pos:position pos:line="128" pos:column="43"/></operator>struct <name pos:line="128" pos:column="50">sockaddr_in<pos:position pos:line="128" pos:column="61"/></name> <operator pos:line="128" pos:column="62">*<pos:position pos:line="128" pos:column="63"/></operator><operator pos:line="128" pos:column="63">)<pos:position pos:line="128" pos:column="64"/></operator> <operator pos:line="128" pos:column="65">&amp;<pos:position pos:line="128" pos:column="70"/></operator><name pos:line="128" pos:column="66">sa<pos:position pos:line="128" pos:column="68"/></name></expr>;<pos:position pos:line="128" pos:column="69"/></expr_stmt>

				<expr_stmt><expr><name><name pos:line="130" pos:column="33">sa_ptr<pos:position pos:line="130" pos:column="39"/></name><operator pos:line="130" pos:column="39">-&gt;<pos:position pos:line="130" pos:column="44"/></operator><name pos:line="130" pos:column="41">sin_family<pos:position pos:line="130" pos:column="51"/></name></name> <operator pos:line="130" pos:column="52">=<pos:position pos:line="130" pos:column="53"/></operator> <name pos:line="130" pos:column="54">AF_INET<pos:position pos:line="130" pos:column="61"/></name></expr>;<pos:position pos:line="130" pos:column="62"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="131" pos:column="33">sa_ptr<pos:position pos:line="131" pos:column="39"/></name><operator pos:line="131" pos:column="39">-&gt;<pos:position pos:line="131" pos:column="44"/></operator><name pos:line="131" pos:column="41">sin_port<pos:position pos:line="131" pos:column="49"/></name></name> <operator pos:line="131" pos:column="50">=<pos:position pos:line="131" pos:column="51"/></operator> <call><name pos:line="131" pos:column="52">htons<pos:position pos:line="131" pos:column="57"/></name> <argument_list pos:line="131" pos:column="58">(<argument><expr><literal type="number" pos:line="131" pos:column="59">123<pos:position pos:line="131" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="131" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="64"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="132" pos:column="33">memcpy<pos:position pos:line="132" pos:column="39"/></name> <argument_list pos:line="132" pos:column="40">(<argument><expr><operator pos:line="132" pos:column="41">&amp;<pos:position pos:line="132" pos:column="46"/></operator><name><name pos:line="132" pos:column="42">sa_ptr<pos:position pos:line="132" pos:column="48"/></name><operator pos:line="132" pos:column="48">-&gt;<pos:position pos:line="132" pos:column="53"/></operator><name pos:line="132" pos:column="50">sin_addr<pos:position pos:line="132" pos:column="58"/></name></name></expr></argument>, <argument><expr><operator pos:line="132" pos:column="60">&amp;<pos:position pos:line="132" pos:column="65"/></operator><name><name pos:line="132" pos:column="61">ptr<pos:position pos:line="132" pos:column="64"/></name><operator pos:line="132" pos:column="64">-&gt;<pos:position pos:line="132" pos:column="69"/></operator><name pos:line="132" pos:column="66">srcadr<pos:position pos:line="132" pos:column="72"/></name></name></expr></argument>,
						<argument><expr><sizeof pos:line="133" pos:column="49">sizeof <argument_list pos:line="133" pos:column="56">(<argument><expr pos:line="133" pos:column="57">struct <name pos:line="133" pos:column="64">in_addr<pos:position pos:line="133" pos:column="71"/></name></expr></argument>)<pos:position pos:line="133" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="133" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="74"/></expr_stmt>
				<expr_stmt><expr><name pos:line="134" pos:column="33">sa_len<pos:position pos:line="134" pos:column="39"/></name> <operator pos:line="134" pos:column="40">=<pos:position pos:line="134" pos:column="41"/></operator> <sizeof pos:line="134" pos:column="42">sizeof <argument_list pos:line="134" pos:column="49">(<argument><expr pos:line="134" pos:column="50">struct <name pos:line="134" pos:column="57">sockaddr_in<pos:position pos:line="134" pos:column="68"/></name></expr></argument>)<pos:position pos:line="134" pos:column="69"/></argument_list></sizeof></expr>;<pos:position pos:line="134" pos:column="70"/></expr_stmt>
			}<pos:position pos:line="135" pos:column="26"/></block></else></if>

			<if pos:line="137" pos:column="25">if <condition pos:line="137" pos:column="28">(<expr><name pos:line="137" pos:column="29">do_reverse_lookups<pos:position pos:line="137" pos:column="47"/></name> <operator pos:line="137" pos:column="48">==<pos:position pos:line="137" pos:column="50"/></operator> <literal type="number" pos:line="137" pos:column="51">0<pos:position pos:line="137" pos:column="52"/></literal></expr>)<pos:position pos:line="137" pos:column="53"/></condition><then pos:line="137" pos:column="53">
				<block type="pseudo"><expr_stmt><expr><name pos:line="138" pos:column="33">flags<pos:position pos:line="138" pos:column="38"/></name> <operator pos:line="138" pos:column="39">|=<pos:position pos:line="138" pos:column="41"/></operator> <name pos:line="138" pos:column="42">NI_NUMERICHOST<pos:position pos:line="138" pos:column="56"/></name></expr>;<pos:position pos:line="138" pos:column="57"/></expr_stmt></block></then></if>

			<expr_stmt><expr><name pos:line="140" pos:column="25">status<pos:position pos:line="140" pos:column="31"/></name> <operator pos:line="140" pos:column="32">=<pos:position pos:line="140" pos:column="33"/></operator> <call><name pos:line="140" pos:column="34">getnameinfo<pos:position pos:line="140" pos:column="45"/></name> <argument_list pos:line="140" pos:column="46">(<argument><expr><operator pos:line="140" pos:column="47">(<pos:position pos:line="140" pos:column="48"/></operator><specifier pos:line="140" pos:column="48">const<pos:position pos:line="140" pos:column="53"/></specifier> struct <name pos:line="140" pos:column="61">sockaddr<pos:position pos:line="140" pos:column="69"/></name> <operator pos:line="140" pos:column="70">*<pos:position pos:line="140" pos:column="71"/></operator><operator pos:line="140" pos:column="71">)<pos:position pos:line="140" pos:column="72"/></operator> <operator pos:line="140" pos:column="73">&amp;<pos:position pos:line="140" pos:column="78"/></operator><name pos:line="140" pos:column="74">sa<pos:position pos:line="140" pos:column="76"/></name></expr></argument>,
					<argument><expr><name pos:line="141" pos:column="41">sa_len<pos:position pos:line="141" pos:column="47"/></name></expr></argument>,
					<argument><expr><name pos:line="142" pos:column="41">peername<pos:position pos:line="142" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="142" pos:column="51">sizeof <argument_list pos:line="142" pos:column="58">(<argument><expr><name pos:line="142" pos:column="59">peername<pos:position pos:line="142" pos:column="67"/></name></expr></argument>)<pos:position pos:line="142" pos:column="68"/></argument_list></sizeof></expr></argument>,
					<argument><expr><name pos:line="143" pos:column="41">NULL<pos:position pos:line="143" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="143" pos:column="47">0<pos:position pos:line="143" pos:column="48"/></literal></expr></argument>, <comment type="block" pos:line="143" pos:column="50">/* No port name */</comment>
					<argument><expr><name pos:line="144" pos:column="41">flags<pos:position pos:line="144" pos:column="46"/></name></expr></argument>)<pos:position pos:line="144" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="48"/></expr_stmt>
			<if pos:line="145" pos:column="25">if <condition pos:line="145" pos:column="28">(<expr><name pos:line="145" pos:column="29">status<pos:position pos:line="145" pos:column="35"/></name> <operator pos:line="145" pos:column="36">!=<pos:position pos:line="145" pos:column="38"/></operator> <literal type="number" pos:line="145" pos:column="39">0<pos:position pos:line="145" pos:column="40"/></literal></expr>)<pos:position pos:line="145" pos:column="41"/></condition><then pos:line="145" pos:column="41">
			<block pos:line="146" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="147" pos:column="33">char<pos:position pos:line="147" pos:column="37"/></name></type> <name><name pos:line="147" pos:column="38">errbuf<pos:position pos:line="147" pos:column="44"/></name><index pos:line="147" pos:column="44">[<expr><literal type="number" pos:line="147" pos:column="45">1024<pos:position pos:line="147" pos:column="49"/></literal></expr>]<pos:position pos:line="147" pos:column="50"/></index></name></decl>;<pos:position pos:line="147" pos:column="51"/></decl_stmt>
				<expr_stmt><expr><call><name pos:line="148" pos:column="33">ERROR<pos:position pos:line="148" pos:column="38"/></name> <argument_list pos:line="148" pos:column="39">(<argument><expr><literal type="string" pos:line="148" pos:column="40">"ntpd plugin: getnameinfo failed: %s"<pos:position pos:line="148" pos:column="77"/></literal></expr></argument>,
						<argument><expr><ternary><condition><expr><operator pos:line="149" pos:column="49">(<pos:position pos:line="149" pos:column="50"/></operator><name pos:line="149" pos:column="50">status<pos:position pos:line="149" pos:column="56"/></name> <operator pos:line="149" pos:column="57">==<pos:position pos:line="149" pos:column="59"/></operator> <name pos:line="149" pos:column="60">EAI_SYSTEM<pos:position pos:line="149" pos:column="70"/></name><operator pos:line="149" pos:column="70">)<pos:position pos:line="149" pos:column="71"/></operator></expr>
						?<pos:position pos:line="150" pos:column="50"/></condition><then pos:line="150" pos:column="50"> <expr><call><name pos:line="150" pos:column="51">sstrerror<pos:position pos:line="150" pos:column="60"/></name> <argument_list pos:line="150" pos:column="61">(<argument><expr><name pos:line="150" pos:column="62">errno<pos:position pos:line="150" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="69">errbuf<pos:position pos:line="150" pos:column="75"/></name></expr></argument>, <argument><expr><sizeof pos:line="150" pos:column="77">sizeof <argument_list pos:line="150" pos:column="84">(<argument><expr><name pos:line="150" pos:column="85">errbuf<pos:position pos:line="150" pos:column="91"/></name></expr></argument>)<pos:position pos:line="150" pos:column="92"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="150" pos:column="93"/></argument_list></call></expr>
						<pos:position pos:line="151" pos:column="7"/></then><else pos:line="151" pos:column="49">: <expr><call><name pos:line="151" pos:column="51">gai_strerror<pos:position pos:line="151" pos:column="63"/></name> <argument_list pos:line="151" pos:column="64">(<argument><expr><name pos:line="151" pos:column="65">status<pos:position pos:line="151" pos:column="71"/></name></expr></argument>)<pos:position pos:line="151" pos:column="72"/></argument_list></call></expr></else></ternary></expr></argument>)<pos:position pos:line="151" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="74"/></expr_stmt>
				<continue pos:line="152" pos:column="33">continue;<pos:position pos:line="152" pos:column="42"/></continue>
			}<pos:position pos:line="153" pos:column="26"/></block></then></if>
		}<pos:position pos:line="154" pos:column="18"/></block></else></if>

		<expr_stmt><expr><call><name pos:line="156" pos:column="17">DEBUG<pos:position pos:line="156" pos:column="22"/></name> <argument_list pos:line="156" pos:column="23">(<argument><expr><literal type="string" pos:line="156" pos:column="24">"peer %i:\n"<pos:position pos:line="156" pos:column="36"/></literal>
				<literal type="string" pos:line="157" pos:column="33">"  peername   = %s\n"<pos:position pos:line="157" pos:column="54"/></literal>
				<literal type="string" pos:line="158" pos:column="33">"  srcadr     = 0x%08x\n"<pos:position pos:line="158" pos:column="58"/></literal>
				<literal type="string" pos:line="159" pos:column="33">"  delay      = %f\n"<pos:position pos:line="159" pos:column="54"/></literal>
				<literal type="string" pos:line="160" pos:column="33">"  offset_int = %i\n"<pos:position pos:line="160" pos:column="54"/></literal>
				<literal type="string" pos:line="161" pos:column="33">"  offset_frc = %i\n"<pos:position pos:line="161" pos:column="54"/></literal>
				<literal type="string" pos:line="162" pos:column="33">"  offset     = %f\n"<pos:position pos:line="162" pos:column="54"/></literal>
				<literal type="string" pos:line="163" pos:column="33">"  dispersion = %f\n"<pos:position pos:line="163" pos:column="54"/></literal></expr></argument>,
				<argument><expr><name pos:line="164" pos:column="33">i<pos:position pos:line="164" pos:column="34"/></name></expr></argument>,
				<argument><expr><name pos:line="165" pos:column="33">peername<pos:position pos:line="165" pos:column="41"/></name></expr></argument>,
				<argument><expr><call><name pos:line="166" pos:column="33">ntohl<pos:position pos:line="166" pos:column="38"/></name> <argument_list pos:line="166" pos:column="39">(<argument><expr><name><name pos:line="166" pos:column="40">ptr<pos:position pos:line="166" pos:column="43"/></name><operator pos:line="166" pos:column="43">-&gt;<pos:position pos:line="166" pos:column="48"/></operator><name pos:line="166" pos:column="45">srcadr<pos:position pos:line="166" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="166" pos:column="52"/></argument_list></call></expr></argument>,
				<argument><expr><call><name pos:line="167" pos:column="33">ntpd_read_fp<pos:position pos:line="167" pos:column="45"/></name> <argument_list pos:line="167" pos:column="46">(<argument><expr><name><name pos:line="167" pos:column="47">ptr<pos:position pos:line="167" pos:column="50"/></name><operator pos:line="167" pos:column="50">-&gt;<pos:position pos:line="167" pos:column="55"/></operator><name pos:line="167" pos:column="52">delay<pos:position pos:line="167" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="167" pos:column="58"/></argument_list></call></expr></argument>,
				<argument><expr><call><name pos:line="168" pos:column="33">ntohl<pos:position pos:line="168" pos:column="38"/></name> <argument_list pos:line="168" pos:column="39">(<argument><expr><name><name pos:line="168" pos:column="40">ptr<pos:position pos:line="168" pos:column="43"/></name><operator pos:line="168" pos:column="43">-&gt;<pos:position pos:line="168" pos:column="48"/></operator><name pos:line="168" pos:column="45">offset_int<pos:position pos:line="168" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="168" pos:column="56"/></argument_list></call></expr></argument>,
				<argument><expr><call><name pos:line="169" pos:column="33">ntohl<pos:position pos:line="169" pos:column="38"/></name> <argument_list pos:line="169" pos:column="39">(<argument><expr><name><name pos:line="169" pos:column="40">ptr<pos:position pos:line="169" pos:column="43"/></name><operator pos:line="169" pos:column="43">-&gt;<pos:position pos:line="169" pos:column="48"/></operator><name pos:line="169" pos:column="45">offset_frc<pos:position pos:line="169" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="169" pos:column="56"/></argument_list></call></expr></argument>,
				<argument><expr><name pos:line="170" pos:column="33">offset<pos:position pos:line="170" pos:column="39"/></name></expr></argument>,
				<argument><expr><call><name pos:line="171" pos:column="33">ntpd_read_fp<pos:position pos:line="171" pos:column="45"/></name> <argument_list pos:line="171" pos:column="46">(<argument><expr><name><name pos:line="171" pos:column="47">ptr<pos:position pos:line="171" pos:column="50"/></name><operator pos:line="171" pos:column="50">-&gt;<pos:position pos:line="171" pos:column="55"/></operator><name pos:line="171" pos:column="52">dispersion<pos:position pos:line="171" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="171" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="171" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="65"/></expr_stmt>

		<if pos:line="173" pos:column="17">if <condition pos:line="173" pos:column="20">(<expr><name pos:line="173" pos:column="21">refclock_id<pos:position pos:line="173" pos:column="32"/></name> <operator pos:line="173" pos:column="33">!=<pos:position pos:line="173" pos:column="35"/></operator> <literal type="number" pos:line="173" pos:column="36">1<pos:position pos:line="173" pos:column="37"/></literal></expr>)<pos:position pos:line="173" pos:column="38"/></condition><then pos:line="173" pos:column="38"> <comment type="block" pos:line="173" pos:column="39">/* not the system clock (offset will always be zero.. */</comment>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="174" pos:column="25">ntpd_submit<pos:position pos:line="174" pos:column="36"/></name> <argument_list pos:line="174" pos:column="37">(<argument><expr><literal type="string" pos:line="174" pos:column="38">"time_offset"<pos:position pos:line="174" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="174" pos:column="53">peername<pos:position pos:line="174" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="174" pos:column="63">offset<pos:position pos:line="174" pos:column="69"/></name></expr></argument>)<pos:position pos:line="174" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="71"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="175" pos:column="17">ntpd_submit<pos:position pos:line="175" pos:column="28"/></name> <argument_list pos:line="175" pos:column="29">(<argument><expr><literal type="string" pos:line="175" pos:column="30">"time_dispersion"<pos:position pos:line="175" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="175" pos:column="49">peername<pos:position pos:line="175" pos:column="57"/></name></expr></argument>, <argument><expr><call><name pos:line="175" pos:column="59">ntpd_read_fp<pos:position pos:line="175" pos:column="71"/></name> <argument_list pos:line="175" pos:column="72">(<argument><expr><name><name pos:line="175" pos:column="73">ptr<pos:position pos:line="175" pos:column="76"/></name><operator pos:line="175" pos:column="76">-&gt;<pos:position pos:line="175" pos:column="81"/></operator><name pos:line="175" pos:column="78">dispersion<pos:position pos:line="175" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="175" pos:column="89"/></argument_list></call></expr></argument>)<pos:position pos:line="175" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="91"/></expr_stmt>
		<if pos:line="176" pos:column="17">if <condition pos:line="176" pos:column="20">(<expr><name pos:line="176" pos:column="21">refclock_id<pos:position pos:line="176" pos:column="32"/></name> <operator pos:line="176" pos:column="33">==<pos:position pos:line="176" pos:column="35"/></operator> <literal type="number" pos:line="176" pos:column="36">0<pos:position pos:line="176" pos:column="37"/></literal></expr>)<pos:position pos:line="176" pos:column="38"/></condition><then pos:line="176" pos:column="38"> <comment type="block" pos:line="176" pos:column="39">/* not a reference clock */</comment>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="177" pos:column="25">ntpd_submit<pos:position pos:line="177" pos:column="36"/></name> <argument_list pos:line="177" pos:column="37">(<argument><expr><literal type="string" pos:line="177" pos:column="38">"delay"<pos:position pos:line="177" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="177" pos:column="47">peername<pos:position pos:line="177" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="177" pos:column="57">ntpd_read_fp<pos:position pos:line="177" pos:column="69"/></name> <argument_list pos:line="177" pos:column="70">(<argument><expr><name><name pos:line="177" pos:column="71">ptr<pos:position pos:line="177" pos:column="74"/></name><operator pos:line="177" pos:column="74">-&gt;<pos:position pos:line="177" pos:column="79"/></operator><name pos:line="177" pos:column="76">delay<pos:position pos:line="177" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="177" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="177" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="84"/></expr_stmt></block></then></if>
	}<pos:position pos:line="178" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="180" pos:column="9">free<pos:position pos:line="180" pos:column="13"/></name> <argument_list pos:line="180" pos:column="14">(<argument><expr><name pos:line="180" pos:column="15">ps<pos:position pos:line="180" pos:column="17"/></name></expr></argument>)<pos:position pos:line="180" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="19"/></expr_stmt>
	<expr_stmt><expr><name pos:line="181" pos:column="9">ps<pos:position pos:line="181" pos:column="11"/></name> <operator pos:line="181" pos:column="12">=<pos:position pos:line="181" pos:column="13"/></operator> <name pos:line="181" pos:column="14">NULL<pos:position pos:line="181" pos:column="18"/></name></expr>;<pos:position pos:line="181" pos:column="19"/></expr_stmt>

	<return pos:line="183" pos:column="9">return <expr><operator pos:line="183" pos:column="16">(<pos:position pos:line="183" pos:column="17"/></operator><literal type="number" pos:line="183" pos:column="17">0<pos:position pos:line="183" pos:column="18"/></literal><operator pos:line="183" pos:column="18">)<pos:position pos:line="183" pos:column="19"/></operator></expr>;<pos:position pos:line="183" pos:column="20"/></return>
}<pos:position pos:line="184" pos:column="2"/></block></function></unit>

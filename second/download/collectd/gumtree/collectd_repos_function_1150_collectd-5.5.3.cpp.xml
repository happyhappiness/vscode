<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1150_collectd-5.5.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">latency_counter_reset<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">latency_counter_t<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">lc<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list> <comment type="block" pos:line="1" pos:column="52">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><name pos:line="3" pos:column="7">lc<pos:position pos:line="3" pos:column="9"/></name> <operator pos:line="3" pos:column="10">==<pos:position pos:line="3" pos:column="12"/></operator> <name pos:line="3" pos:column="13">NULL<pos:position pos:line="3" pos:column="17"/></name></expr>)<pos:position pos:line="3" pos:column="18"/></condition><then pos:line="3" pos:column="18">
    <block type="pseudo"><return pos:line="4" pos:column="5">return;<pos:position pos:line="4" pos:column="12"/></return></block></then></if>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">cdtime_t<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">bin_width<pos:position pos:line="6" pos:column="21"/></name> <init pos:line="6" pos:column="22">= <expr><name><name pos:line="6" pos:column="24">lc<pos:position pos:line="6" pos:column="26"/></name><operator pos:line="6" pos:column="26">-&gt;<pos:position pos:line="6" pos:column="31"/></operator><name pos:line="6" pos:column="28">bin_width<pos:position pos:line="6" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="38"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">memset<pos:position pos:line="7" pos:column="9"/></name> <argument_list pos:line="7" pos:column="10">(<argument><expr><name pos:line="7" pos:column="11">lc<pos:position pos:line="7" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="15">0<pos:position pos:line="7" pos:column="16"/></literal></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="18">sizeof <argument_list pos:line="7" pos:column="25">(<argument><expr><operator pos:line="7" pos:column="26">*<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="27">lc<pos:position pos:line="7" pos:column="29"/></name></expr></argument>)<pos:position pos:line="7" pos:column="30"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="32"/></expr_stmt>

  <comment type="block" pos:line="9" pos:column="3">/* preserve bin width */</comment>
  <expr_stmt><expr><name><name pos:line="10" pos:column="3">lc<pos:position pos:line="10" pos:column="5"/></name><operator pos:line="10" pos:column="5">-&gt;<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="7">bin_width<pos:position pos:line="10" pos:column="16"/></name></name> <operator pos:line="10" pos:column="17">=<pos:position pos:line="10" pos:column="18"/></operator> <name pos:line="10" pos:column="19">bin_width<pos:position pos:line="10" pos:column="28"/></name></expr>;<pos:position pos:line="10" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="11" pos:column="3">lc<pos:position pos:line="11" pos:column="5"/></name><operator pos:line="11" pos:column="5">-&gt;<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="7">start_time<pos:position pos:line="11" pos:column="17"/></name></name> <operator pos:line="11" pos:column="18">=<pos:position pos:line="11" pos:column="19"/></operator> <call><name pos:line="11" pos:column="20">cdtime<pos:position pos:line="11" pos:column="26"/></name> <argument_list pos:line="11" pos:column="27">()<pos:position pos:line="11" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="30"/></expr_stmt>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

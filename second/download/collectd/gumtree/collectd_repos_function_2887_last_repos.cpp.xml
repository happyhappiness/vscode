<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2887_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">plugin_register_shutdown<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">name<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><function_decl><type><name pos:line="1" pos:column="48">int<pos:position pos:line="1" pos:column="51"/></name></type> (<modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier><name pos:line="1" pos:column="54">callback<pos:position pos:line="1" pos:column="62"/></name>)<parameter_list pos:line="1" pos:column="63">(<parameter><decl><type><name pos:line="1" pos:column="64">void<pos:position pos:line="1" pos:column="68"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list></function_decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list> <block pos:line="1" pos:column="71">{
  <return pos:line="2" pos:column="3">return <expr><call><name pos:line="2" pos:column="10">create_register_callback<pos:position pos:line="2" pos:column="34"/></name><argument_list pos:line="2" pos:column="34">(<argument><expr><operator pos:line="2" pos:column="35">&amp;<pos:position pos:line="2" pos:column="40"/></operator><name pos:line="2" pos:column="36">list_shutdown<pos:position pos:line="2" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="51">name<pos:position pos:line="2" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="2" pos:column="57">(<pos:position pos:line="2" pos:column="58"/></operator><name pos:line="2" pos:column="58">void<pos:position pos:line="2" pos:column="62"/></name> <operator pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></operator><operator pos:line="2" pos:column="64">)<pos:position pos:line="2" pos:column="65"/></operator><name pos:line="2" pos:column="65">callback<pos:position pos:line="2" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="75">NULL<pos:position pos:line="2" pos:column="79"/></name></expr></argument>)<pos:position pos:line="2" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="2" pos:column="81"/></return>
}<pos:position pos:line="3" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1142_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cna_register_host<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">host_config_t<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">host<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list> <comment type="block" pos:line="1" pos:column="51">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">cb_name<pos:position pos:line="3" pos:column="15"/></name><index pos:line="3" pos:column="15">[<expr><literal type="number" pos:line="3" pos:column="16">256<pos:position pos:line="3" pos:column="19"/></literal></expr>]<pos:position pos:line="3" pos:column="20"/></index></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name><name pos:line="5" pos:column="7">host<pos:position pos:line="5" pos:column="11"/></name><operator pos:line="5" pos:column="11">-&gt;<pos:position pos:line="5" pos:column="16"/></operator><name pos:line="5" pos:column="13">vfiler<pos:position pos:line="5" pos:column="19"/></name></name></expr>)<pos:position pos:line="5" pos:column="20"/></condition><then pos:line="5" pos:column="20">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="5">ssnprintf<pos:position pos:line="6" pos:column="14"/></name><argument_list pos:line="6" pos:column="14">(<argument><expr><name pos:line="6" pos:column="15">cb_name<pos:position pos:line="6" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="24">sizeof<argument_list pos:line="6" pos:column="30">(<argument><expr><name pos:line="6" pos:column="31">cb_name<pos:position pos:line="6" pos:column="38"/></name></expr></argument>)<pos:position pos:line="6" pos:column="39"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="41">"netapp-%s-%s"<pos:position pos:line="6" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="57">host<pos:position pos:line="6" pos:column="61"/></name><operator pos:line="6" pos:column="61">-&gt;<pos:position pos:line="6" pos:column="66"/></operator><name pos:line="6" pos:column="63">name<pos:position pos:line="6" pos:column="67"/></name></name></expr></argument>,
              <argument><expr><name><name pos:line="7" pos:column="15">host<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">-&gt;<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="21">vfiler<pos:position pos:line="7" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="29"/></expr_stmt></block></then>
  <else pos:line="8" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="5">ssnprintf<pos:position pos:line="9" pos:column="14"/></name><argument_list pos:line="9" pos:column="14">(<argument><expr><name pos:line="9" pos:column="15">cb_name<pos:position pos:line="9" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="24">sizeof<argument_list pos:line="9" pos:column="30">(<argument><expr><name pos:line="9" pos:column="31">cb_name<pos:position pos:line="9" pos:column="38"/></name></expr></argument>)<pos:position pos:line="9" pos:column="39"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="41">"netapp-%s"<pos:position pos:line="9" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="54">host<pos:position pos:line="9" pos:column="58"/></name><operator pos:line="9" pos:column="58">-&gt;<pos:position pos:line="9" pos:column="63"/></operator><name pos:line="9" pos:column="60">name<pos:position pos:line="9" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="66"/></expr_stmt></block></else></if>

  <decl_stmt><decl><type><name pos:line="11" pos:column="3">user_data_t<pos:position pos:line="11" pos:column="14"/></name></type> <name pos:line="11" pos:column="15">ud<pos:position pos:line="11" pos:column="17"/></name> <init pos:line="11" pos:column="18">= <expr><block pos:line="11" pos:column="20">{<expr><operator pos:line="11" pos:column="21">.<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="22">data<pos:position pos:line="11" pos:column="26"/></name> <operator pos:line="11" pos:column="27">=<pos:position pos:line="11" pos:column="28"/></operator> <name pos:line="11" pos:column="29">host<pos:position pos:line="11" pos:column="33"/></name></expr>,
                    <expr><operator pos:line="12" pos:column="21">.<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="22">free_func<pos:position pos:line="12" pos:column="31"/></name> <operator pos:line="12" pos:column="32">=<pos:position pos:line="12" pos:column="33"/></operator> <operator pos:line="12" pos:column="34">(<pos:position pos:line="12" pos:column="35"/></operator><call><call><name pos:line="12" pos:column="35">void<pos:position pos:line="12" pos:column="39"/></name> <argument_list pos:line="12" pos:column="40">(<argument><expr><operator pos:line="12" pos:column="41">*<pos:position pos:line="12" pos:column="42"/></operator></expr></argument>)<pos:position pos:line="12" pos:column="43"/></argument_list></call><argument_list pos:line="12" pos:column="43">(<argument><expr><name pos:line="12" pos:column="44">void<pos:position pos:line="12" pos:column="48"/></name> <operator pos:line="12" pos:column="49">*<pos:position pos:line="12" pos:column="50"/></operator></expr></argument>)<pos:position pos:line="12" pos:column="51"/></argument_list></call><operator pos:line="12" pos:column="51">)<pos:position pos:line="12" pos:column="52"/></operator><name pos:line="12" pos:column="52">free_host_config<pos:position pos:line="12" pos:column="68"/></name></expr>}<pos:position pos:line="12" pos:column="69"/></block></expr></init></decl>;<pos:position pos:line="12" pos:column="70"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="14" pos:column="3">plugin_register_complex_read<pos:position pos:line="14" pos:column="31"/></name><argument_list pos:line="14" pos:column="31">(<comment type="block" pos:line="14" pos:column="32">/* group = */</comment> <argument><expr><name pos:line="14" pos:column="46">NULL<pos:position pos:line="14" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="52">cb_name<pos:position pos:line="14" pos:column="59"/></name></expr></argument>,
                               <comment type="block" pos:line="15" pos:column="32">/* callback  = */</comment> <argument><expr><name pos:line="15" pos:column="50">cna_read<pos:position pos:line="15" pos:column="58"/></name></expr></argument>,
                               <comment type="block" pos:line="16" pos:column="32">/* interval  = */</comment> <argument><expr><name><name pos:line="16" pos:column="50">host<pos:position pos:line="16" pos:column="54"/></name><operator pos:line="16" pos:column="54">-&gt;<pos:position pos:line="16" pos:column="59"/></operator><name pos:line="16" pos:column="56">interval<pos:position pos:line="16" pos:column="64"/></name></name></expr></argument>,
                               <comment type="block" pos:line="17" pos:column="32">/* user data = */</comment> <argument><expr><operator pos:line="17" pos:column="50">&amp;<pos:position pos:line="17" pos:column="55"/></operator><name pos:line="17" pos:column="51">ud<pos:position pos:line="17" pos:column="53"/></name></expr></argument>)<pos:position pos:line="17" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="55"/></expr_stmt>

  <return pos:line="19" pos:column="3">return <expr><operator pos:line="19" pos:column="10">(<pos:position pos:line="19" pos:column="11"/></operator><literal type="number" pos:line="19" pos:column="11">0<pos:position pos:line="19" pos:column="12"/></literal><operator pos:line="19" pos:column="12">)<pos:position pos:line="19" pos:column="13"/></operator></expr>;<pos:position pos:line="19" pos:column="14"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2495_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">oconfig_item_t<pos:position pos:line="1" pos:column="22"/></name> <modifier pos:line="1" pos:column="23">*<pos:position pos:line="1" pos:column="24"/></modifier></type><name pos:line="1" pos:column="24">cf_read_generic<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><specifier pos:line="1" pos:column="40">const<pos:position pos:line="1" pos:column="45"/></specifier> <name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">path<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="58">const<pos:position pos:line="1" pos:column="63"/></specifier> <name pos:line="1" pos:column="64">char<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">pattern<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>,
                                       <parameter><decl><type><name pos:line="2" pos:column="40">int<pos:position pos:line="2" pos:column="43"/></name></type> <name pos:line="2" pos:column="44">depth<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list> <block pos:line="2" pos:column="51">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">stat<pos:position pos:line="3" pos:column="14"/></name></name></type> <name pos:line="3" pos:column="15">statbuf<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">depth<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">&gt;=<pos:position pos:line="6" pos:column="18"/></operator> <name pos:line="6" pos:column="16">CF_MAX_DEPTH<pos:position pos:line="6" pos:column="28"/></name></expr>)<pos:position pos:line="6" pos:column="29"/></condition><then pos:line="6" pos:column="29"> <block pos:line="6" pos:column="30">{
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">ERROR<pos:position pos:line="7" pos:column="10"/></name><argument_list pos:line="7" pos:column="10">(<argument><expr><literal type="string" pos:line="7" pos:column="11">"configfile: Not including `%s' because the maximum "<pos:position pos:line="7" pos:column="64"/></literal>
          <literal type="string" pos:line="8" pos:column="11">"nesting depth has been reached."<pos:position pos:line="8" pos:column="44"/></literal></expr></argument>,
          <argument><expr><name pos:line="9" pos:column="11">path<pos:position pos:line="9" pos:column="15"/></name></expr></argument>)<pos:position pos:line="9" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="17"/></expr_stmt>
    <return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">(<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="13">NULL<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">)<pos:position pos:line="10" pos:column="18"/></operator></expr>;<pos:position pos:line="10" pos:column="19"/></return>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="13" pos:column="3">status<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">=<pos:position pos:line="13" pos:column="11"/></operator> <call><name pos:line="13" pos:column="12">stat<pos:position pos:line="13" pos:column="16"/></name><argument_list pos:line="13" pos:column="16">(<argument><expr><name pos:line="13" pos:column="17">path<pos:position pos:line="13" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="23">&amp;<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="24">statbuf<pos:position pos:line="13" pos:column="31"/></name></expr></argument>)<pos:position pos:line="13" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="33"/></expr_stmt>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">status<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">!=<pos:position pos:line="14" pos:column="16"/></operator> <literal type="number" pos:line="14" pos:column="17">0<pos:position pos:line="14" pos:column="18"/></literal></expr>)<pos:position pos:line="14" pos:column="19"/></condition><then pos:line="14" pos:column="19"> <block pos:line="14" pos:column="20">{
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">char<pos:position pos:line="15" pos:column="9"/></name></type> <name><name pos:line="15" pos:column="10">errbuf<pos:position pos:line="15" pos:column="16"/></name><index pos:line="15" pos:column="16">[<expr><literal type="number" pos:line="15" pos:column="17">1024<pos:position pos:line="15" pos:column="21"/></literal></expr>]<pos:position pos:line="15" pos:column="22"/></index></name></decl>;<pos:position pos:line="15" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">ERROR<pos:position pos:line="16" pos:column="10"/></name><argument_list pos:line="16" pos:column="10">(<argument><expr><literal type="string" pos:line="16" pos:column="11">"configfile: stat (%s) failed: %s"<pos:position pos:line="16" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="47">path<pos:position pos:line="16" pos:column="51"/></name></expr></argument>,
          <argument><expr><call><name pos:line="17" pos:column="11">sstrerror<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><name pos:line="17" pos:column="21">errno<pos:position pos:line="17" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="28">errbuf<pos:position pos:line="17" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="36">sizeof<argument_list pos:line="17" pos:column="42">(<argument><expr><name pos:line="17" pos:column="43">errbuf<pos:position pos:line="17" pos:column="49"/></name></expr></argument>)<pos:position pos:line="17" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="53"/></expr_stmt>
    <return pos:line="18" pos:column="5">return <expr><operator pos:line="18" pos:column="12">(<pos:position pos:line="18" pos:column="13"/></operator><name pos:line="18" pos:column="13">NULL<pos:position pos:line="18" pos:column="17"/></name><operator pos:line="18" pos:column="17">)<pos:position pos:line="18" pos:column="18"/></operator></expr>;<pos:position pos:line="18" pos:column="19"/></return>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>

  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><call><name pos:line="21" pos:column="7">S_ISREG<pos:position pos:line="21" pos:column="14"/></name><argument_list pos:line="21" pos:column="14">(<argument><expr><name><name pos:line="21" pos:column="15">statbuf<pos:position pos:line="21" pos:column="22"/></name><operator pos:line="21" pos:column="22">.<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="23">st_mode<pos:position pos:line="21" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="32"/></condition><then pos:line="21" pos:column="32">
    <block type="pseudo"><return pos:line="22" pos:column="5">return <expr><operator pos:line="22" pos:column="12">(<pos:position pos:line="22" pos:column="13"/></operator><call><name pos:line="22" pos:column="13">cf_read_file<pos:position pos:line="22" pos:column="25"/></name><argument_list pos:line="22" pos:column="25">(<argument><expr><name pos:line="22" pos:column="26">path<pos:position pos:line="22" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="32">pattern<pos:position pos:line="22" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="41">depth<pos:position pos:line="22" pos:column="46"/></name></expr></argument>)<pos:position pos:line="22" pos:column="47"/></argument_list></call><operator pos:line="22" pos:column="47">)<pos:position pos:line="22" pos:column="48"/></operator></expr>;<pos:position pos:line="22" pos:column="49"/></return></block></then>
  <elseif pos:line="23" pos:column="3">else <if pos:line="23" pos:column="8">if <condition pos:line="23" pos:column="11">(<expr><call><name pos:line="23" pos:column="12">S_ISDIR<pos:position pos:line="23" pos:column="19"/></name><argument_list pos:line="23" pos:column="19">(<argument><expr><name><name pos:line="23" pos:column="20">statbuf<pos:position pos:line="23" pos:column="27"/></name><operator pos:line="23" pos:column="27">.<pos:position pos:line="23" pos:column="28"/></operator><name pos:line="23" pos:column="28">st_mode<pos:position pos:line="23" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="37"/></condition><then pos:line="23" pos:column="37">
    <block type="pseudo"><return pos:line="24" pos:column="5">return <expr><operator pos:line="24" pos:column="12">(<pos:position pos:line="24" pos:column="13"/></operator><call><name pos:line="24" pos:column="13">cf_read_dir<pos:position pos:line="24" pos:column="24"/></name><argument_list pos:line="24" pos:column="24">(<argument><expr><name pos:line="24" pos:column="25">path<pos:position pos:line="24" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="31">pattern<pos:position pos:line="24" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="40">depth<pos:position pos:line="24" pos:column="45"/></name></expr></argument>)<pos:position pos:line="24" pos:column="46"/></argument_list></call><operator pos:line="24" pos:column="46">)<pos:position pos:line="24" pos:column="47"/></operator></expr>;<pos:position pos:line="24" pos:column="48"/></return></block></then></if></elseif></if>

  <expr_stmt><expr><call><name pos:line="26" pos:column="3">ERROR<pos:position pos:line="26" pos:column="8"/></name><argument_list pos:line="26" pos:column="8">(<argument><expr><literal type="string" pos:line="26" pos:column="9">"configfile: %s is neither a file nor a directory."<pos:position pos:line="26" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="62">path<pos:position pos:line="26" pos:column="66"/></name></expr></argument>)<pos:position pos:line="26" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="68"/></expr_stmt>
  <return pos:line="27" pos:column="3">return <expr><operator pos:line="27" pos:column="10">(<pos:position pos:line="27" pos:column="11"/></operator><name pos:line="27" pos:column="11">NULL<pos:position pos:line="27" pos:column="15"/></name><operator pos:line="27" pos:column="15">)<pos:position pos:line="27" pos:column="16"/></operator></expr>;<pos:position pos:line="27" pos:column="17"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

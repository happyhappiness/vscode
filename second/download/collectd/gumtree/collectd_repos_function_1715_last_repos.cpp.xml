<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1715_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">tr_meta_data_action_invoke<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<comment type="block" pos:line="1" pos:column="39">/* {{{ */</comment>
                                      <parameter><decl><type><name pos:line="2" pos:column="39">tr_meta_data_action_t<pos:position pos:line="2" pos:column="60"/></name> <modifier pos:line="2" pos:column="61">*<pos:position pos:line="2" pos:column="62"/></modifier></type><name pos:line="2" pos:column="62">act_head<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>,
                                      <parameter><decl><type><name pos:line="3" pos:column="39">meta_data_t<pos:position pos:line="3" pos:column="50"/></name> <modifier pos:line="3" pos:column="51">*<pos:position pos:line="3" pos:column="52"/></modifier><modifier pos:line="3" pos:column="52">*<pos:position pos:line="3" pos:column="53"/></modifier></type><name pos:line="3" pos:column="53">dest<pos:position pos:line="3" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="58"/></parameter_list> <block pos:line="3" pos:column="59">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">regmatch_t<pos:position pos:line="5" pos:column="13"/></name></type> <name><name pos:line="5" pos:column="14">matches<pos:position pos:line="5" pos:column="21"/></name><index pos:line="5" pos:column="21">[<expr><literal type="number" pos:line="5" pos:column="22">8<pos:position pos:line="5" pos:column="23"/></literal></expr>]<pos:position pos:line="5" pos:column="24"/></index></name> <init pos:line="5" pos:column="25">= <expr><block pos:line="5" pos:column="27">{<expr><index pos:line="5" pos:column="28">[<expr><literal type="number" pos:line="5" pos:column="29">0<pos:position pos:line="5" pos:column="30"/></literal></expr>]<pos:position pos:line="5" pos:column="31"/></index> <operator pos:line="5" pos:column="32">=<pos:position pos:line="5" pos:column="33"/></operator> <block pos:line="5" pos:column="34">{<expr><literal type="number" pos:line="5" pos:column="35">0<pos:position pos:line="5" pos:column="36"/></literal></expr>}<pos:position pos:line="5" pos:column="37"/></block></expr>}<pos:position pos:line="5" pos:column="38"/></block></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">act_head<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">==<pos:position pos:line="7" pos:column="18"/></operator> <name pos:line="7" pos:column="19">NULL<pos:position pos:line="7" pos:column="23"/></name></expr>)<pos:position pos:line="7" pos:column="24"/></condition><then pos:line="7" pos:column="24">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">-<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="13">EINVAL<pos:position pos:line="8" pos:column="19"/></name></expr>;<pos:position pos:line="8" pos:column="20"/></return></block></then></if>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><operator pos:line="10" pos:column="7">(<pos:position pos:line="10" pos:column="8"/></operator><operator pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></operator><name pos:line="10" pos:column="9">dest<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">)<pos:position pos:line="10" pos:column="14"/></operator> <operator pos:line="10" pos:column="15">==<pos:position pos:line="10" pos:column="17"/></operator> <name pos:line="10" pos:column="18">NULL<pos:position pos:line="10" pos:column="22"/></name></expr>)<pos:position pos:line="10" pos:column="23"/></condition><then pos:line="10" pos:column="23"> <comment type="block" pos:line="10" pos:column="24">/* nothing to do */</comment>
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><literal type="number" pos:line="11" pos:column="12">0<pos:position pos:line="11" pos:column="13"/></literal></expr>;<pos:position pos:line="11" pos:column="14"/></return></block></then></if>

  <for pos:line="13" pos:column="3">for <control pos:line="13" pos:column="7">(<init><decl><type><name pos:line="13" pos:column="8">tr_meta_data_action_t<pos:position pos:line="13" pos:column="29"/></name> <modifier pos:line="13" pos:column="30">*<pos:position pos:line="13" pos:column="31"/></modifier></type><name pos:line="13" pos:column="31">act<pos:position pos:line="13" pos:column="34"/></name> <init pos:line="13" pos:column="35">= <expr><name pos:line="13" pos:column="37">act_head<pos:position pos:line="13" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="46"/></init> <condition><expr><name pos:line="13" pos:column="47">act<pos:position pos:line="13" pos:column="50"/></name> <operator pos:line="13" pos:column="51">!=<pos:position pos:line="13" pos:column="53"/></operator> <name pos:line="13" pos:column="54">NULL<pos:position pos:line="13" pos:column="58"/></name></expr>;<pos:position pos:line="13" pos:column="59"/></condition> <incr><expr><name pos:line="13" pos:column="60">act<pos:position pos:line="13" pos:column="63"/></name> <operator pos:line="13" pos:column="64">=<pos:position pos:line="13" pos:column="65"/></operator> <name><name pos:line="13" pos:column="66">act<pos:position pos:line="13" pos:column="69"/></name><operator pos:line="13" pos:column="69">-&gt;<pos:position pos:line="13" pos:column="74"/></operator><name pos:line="13" pos:column="71">next<pos:position pos:line="13" pos:column="75"/></name></name></expr></incr>)<pos:position pos:line="13" pos:column="76"/></control> <block pos:line="13" pos:column="77">{
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">char<pos:position pos:line="14" pos:column="9"/></name></type> <name><name pos:line="14" pos:column="10">temp<pos:position pos:line="14" pos:column="14"/></name><index pos:line="14" pos:column="14">[<expr><name pos:line="14" pos:column="15">DATA_MAX_NAME_LEN<pos:position pos:line="14" pos:column="32"/></name></expr>]<pos:position pos:line="14" pos:column="33"/></index></name></decl>;<pos:position pos:line="14" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">char<pos:position pos:line="15" pos:column="9"/></name> <modifier pos:line="15" pos:column="10">*<pos:position pos:line="15" pos:column="11"/></modifier></type><name pos:line="15" pos:column="11">subst_status<pos:position pos:line="15" pos:column="23"/></name></decl>;<pos:position pos:line="15" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">int<pos:position pos:line="16" pos:column="8"/></name></type> <name pos:line="16" pos:column="9">value_type<pos:position pos:line="16" pos:column="19"/></name></decl>;<pos:position pos:line="16" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">int<pos:position pos:line="17" pos:column="8"/></name></type> <name pos:line="17" pos:column="9">meta_data_status<pos:position pos:line="17" pos:column="25"/></name></decl>;<pos:position pos:line="17" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">char<pos:position pos:line="18" pos:column="9"/></name> <modifier pos:line="18" pos:column="10">*<pos:position pos:line="18" pos:column="11"/></modifier></type><name pos:line="18" pos:column="11">value<pos:position pos:line="18" pos:column="16"/></name></decl>;<pos:position pos:line="18" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">meta_data_t<pos:position pos:line="19" pos:column="16"/></name> <modifier pos:line="19" pos:column="17">*<pos:position pos:line="19" pos:column="18"/></modifier></type><name pos:line="19" pos:column="18">result<pos:position pos:line="19" pos:column="24"/></name></decl>;<pos:position pos:line="19" pos:column="25"/></decl_stmt>

    <expr_stmt><expr><name pos:line="21" pos:column="5">value_type<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <call><name pos:line="21" pos:column="18">meta_data_type<pos:position pos:line="21" pos:column="32"/></name><argument_list pos:line="21" pos:column="32">(<argument><expr><operator pos:line="21" pos:column="33">*<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="34">dest<pos:position pos:line="21" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="40">act<pos:position pos:line="21" pos:column="43"/></name><operator pos:line="21" pos:column="43">-&gt;<pos:position pos:line="21" pos:column="48"/></operator><name pos:line="21" pos:column="45">key<pos:position pos:line="21" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="50"/></expr_stmt>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">value_type<pos:position pos:line="22" pos:column="19"/></name> <operator pos:line="22" pos:column="20">==<pos:position pos:line="22" pos:column="22"/></operator> <literal type="number" pos:line="22" pos:column="23">0<pos:position pos:line="22" pos:column="24"/></literal></expr>)<pos:position pos:line="22" pos:column="25"/></condition><then pos:line="22" pos:column="25"> <comment type="block" pos:line="22" pos:column="26">/* not found */</comment>
      <block type="pseudo"><continue pos:line="23" pos:column="7">continue;<pos:position pos:line="23" pos:column="16"/></continue></block></then></if>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">value_type<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">!=<pos:position pos:line="24" pos:column="22"/></operator> <name pos:line="24" pos:column="23">MD_TYPE_STRING<pos:position pos:line="24" pos:column="37"/></name></expr>)<pos:position pos:line="24" pos:column="38"/></condition><then pos:line="24" pos:column="38"> <block pos:line="24" pos:column="39">{
      <expr_stmt><expr><call><name pos:line="25" pos:column="7">WARNING<pos:position pos:line="25" pos:column="14"/></name><argument_list pos:line="25" pos:column="14">(<argument><expr><literal type="string" pos:line="25" pos:column="15">"Target `replace': Attempting replace on metadata key `%s', "<pos:position pos:line="25" pos:column="76"/></literal>
              <literal type="string" pos:line="26" pos:column="15">"which isn't a string."<pos:position pos:line="26" pos:column="38"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="27" pos:column="15">act<pos:position pos:line="27" pos:column="18"/></name><operator pos:line="27" pos:column="18">-&gt;<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="20">key<pos:position pos:line="27" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="25"/></expr_stmt>
      <continue pos:line="28" pos:column="7">continue;<pos:position pos:line="28" pos:column="16"/></continue>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="31" pos:column="5">meta_data_status<pos:position pos:line="31" pos:column="21"/></name> <operator pos:line="31" pos:column="22">=<pos:position pos:line="31" pos:column="23"/></operator> <call><name pos:line="31" pos:column="24">meta_data_get_string<pos:position pos:line="31" pos:column="44"/></name><argument_list pos:line="31" pos:column="44">(<argument><expr><operator pos:line="31" pos:column="45">*<pos:position pos:line="31" pos:column="46"/></operator><name pos:line="31" pos:column="46">dest<pos:position pos:line="31" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="52">act<pos:position pos:line="31" pos:column="55"/></name><operator pos:line="31" pos:column="55">-&gt;<pos:position pos:line="31" pos:column="60"/></operator><name pos:line="31" pos:column="57">key<pos:position pos:line="31" pos:column="60"/></name></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="62">&amp;<pos:position pos:line="31" pos:column="67"/></operator><name pos:line="31" pos:column="63">value<pos:position pos:line="31" pos:column="68"/></name></expr></argument>)<pos:position pos:line="31" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="70"/></expr_stmt>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name pos:line="32" pos:column="9">meta_data_status<pos:position pos:line="32" pos:column="25"/></name> <operator pos:line="32" pos:column="26">!=<pos:position pos:line="32" pos:column="28"/></operator> <literal type="number" pos:line="32" pos:column="29">0<pos:position pos:line="32" pos:column="30"/></literal></expr>)<pos:position pos:line="32" pos:column="31"/></condition><then pos:line="32" pos:column="31"> <block pos:line="32" pos:column="32">{
      <expr_stmt><expr><call><name pos:line="33" pos:column="7">ERROR<pos:position pos:line="33" pos:column="12"/></name><argument_list pos:line="33" pos:column="12">(<argument><expr><literal type="string" pos:line="33" pos:column="13">"Target `replace': Unable to retrieve metadata value for `%s'."<pos:position pos:line="33" pos:column="76"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="34" pos:column="13">act<pos:position pos:line="34" pos:column="16"/></name><operator pos:line="34" pos:column="16">-&gt;<pos:position pos:line="34" pos:column="21"/></operator><name pos:line="34" pos:column="18">key<pos:position pos:line="34" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="23"/></expr_stmt>
      <return pos:line="35" pos:column="7">return <expr><name pos:line="35" pos:column="14">meta_data_status<pos:position pos:line="35" pos:column="30"/></name></expr>;<pos:position pos:line="35" pos:column="31"/></return>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="38" pos:column="5">DEBUG<pos:position pos:line="38" pos:column="10"/></name><argument_list pos:line="38" pos:column="10">(<argument><expr><literal type="string" pos:line="38" pos:column="11">"target_replace plugin: tr_meta_data_action_invoke: `%s' "<pos:position pos:line="38" pos:column="69"/></literal>
          <literal type="string" pos:line="39" pos:column="11">"old value = `%s'"<pos:position pos:line="39" pos:column="29"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="40" pos:column="11">act<pos:position pos:line="40" pos:column="14"/></name><operator pos:line="40" pos:column="14">-&gt;<pos:position pos:line="40" pos:column="19"/></operator><name pos:line="40" pos:column="16">key<pos:position pos:line="40" pos:column="19"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="21">value<pos:position pos:line="40" pos:column="26"/></name></expr></argument>)<pos:position pos:line="40" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="28"/></expr_stmt>

    <expr_stmt><expr><name pos:line="42" pos:column="5">status<pos:position pos:line="42" pos:column="11"/></name> <operator pos:line="42" pos:column="12">=<pos:position pos:line="42" pos:column="13"/></operator> <call><name pos:line="42" pos:column="14">regexec<pos:position pos:line="42" pos:column="21"/></name><argument_list pos:line="42" pos:column="21">(<argument><expr><operator pos:line="42" pos:column="22">&amp;<pos:position pos:line="42" pos:column="27"/></operator><name><name pos:line="42" pos:column="23">act<pos:position pos:line="42" pos:column="26"/></name><operator pos:line="42" pos:column="26">-&gt;<pos:position pos:line="42" pos:column="31"/></operator><name pos:line="42" pos:column="28">re<pos:position pos:line="42" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="32">value<pos:position pos:line="42" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="42" pos:column="39">STATIC_ARRAY_SIZE<pos:position pos:line="42" pos:column="56"/></name><argument_list pos:line="42" pos:column="56">(<argument><expr><name pos:line="42" pos:column="57">matches<pos:position pos:line="42" pos:column="64"/></name></expr></argument>)<pos:position pos:line="42" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="42" pos:column="67">matches<pos:position pos:line="42" pos:column="74"/></name></expr></argument>,
                     <comment type="block" pos:line="43" pos:column="22">/* flags = */</comment> <argument><expr><literal type="number" pos:line="43" pos:column="36">0<pos:position pos:line="43" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="39"/></expr_stmt>
    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><name pos:line="44" pos:column="9">status<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">==<pos:position pos:line="44" pos:column="18"/></operator> <name pos:line="44" pos:column="19">REG_NOMATCH<pos:position pos:line="44" pos:column="30"/></name></expr>)<pos:position pos:line="44" pos:column="31"/></condition><then pos:line="44" pos:column="31"> <block pos:line="44" pos:column="32">{
      <expr_stmt><expr><call><name pos:line="45" pos:column="7">sfree<pos:position pos:line="45" pos:column="12"/></name><argument_list pos:line="45" pos:column="12">(<argument><expr><name pos:line="45" pos:column="13">value<pos:position pos:line="45" pos:column="18"/></name></expr></argument>)<pos:position pos:line="45" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="20"/></expr_stmt>
      <continue pos:line="46" pos:column="7">continue;<pos:position pos:line="46" pos:column="16"/></continue>
    }<pos:position pos:line="47" pos:column="6"/></block></then> <elseif pos:line="47" pos:column="7">else <if pos:line="47" pos:column="12">if <condition pos:line="47" pos:column="15">(<expr><name pos:line="47" pos:column="16">status<pos:position pos:line="47" pos:column="22"/></name> <operator pos:line="47" pos:column="23">!=<pos:position pos:line="47" pos:column="25"/></operator> <literal type="number" pos:line="47" pos:column="26">0<pos:position pos:line="47" pos:column="27"/></literal></expr>)<pos:position pos:line="47" pos:column="28"/></condition><then pos:line="47" pos:column="28"> <block pos:line="47" pos:column="29">{
      <decl_stmt><decl><type><name pos:line="48" pos:column="7">char<pos:position pos:line="48" pos:column="11"/></name></type> <name><name pos:line="48" pos:column="12">errbuf<pos:position pos:line="48" pos:column="18"/></name><index pos:line="48" pos:column="18">[<expr><literal type="number" pos:line="48" pos:column="19">1024<pos:position pos:line="48" pos:column="23"/></literal></expr>]<pos:position pos:line="48" pos:column="24"/></index></name> <init pos:line="48" pos:column="25">= <expr><literal type="string" pos:line="48" pos:column="27">""<pos:position pos:line="48" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="48" pos:column="30"/></decl_stmt>

      <expr_stmt><expr><call><name pos:line="50" pos:column="7">regerror<pos:position pos:line="50" pos:column="15"/></name><argument_list pos:line="50" pos:column="15">(<argument><expr><name pos:line="50" pos:column="16">status<pos:position pos:line="50" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="24">&amp;<pos:position pos:line="50" pos:column="29"/></operator><name><name pos:line="50" pos:column="25">act<pos:position pos:line="50" pos:column="28"/></name><operator pos:line="50" pos:column="28">-&gt;<pos:position pos:line="50" pos:column="33"/></operator><name pos:line="50" pos:column="30">re<pos:position pos:line="50" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="34">errbuf<pos:position pos:line="50" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="50" pos:column="42">sizeof<argument_list pos:line="50" pos:column="48">(<argument><expr><name pos:line="50" pos:column="49">errbuf<pos:position pos:line="50" pos:column="55"/></name></expr></argument>)<pos:position pos:line="50" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="50" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="58"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="51" pos:column="7">ERROR<pos:position pos:line="51" pos:column="12"/></name><argument_list pos:line="51" pos:column="12">(<argument><expr><literal type="string" pos:line="51" pos:column="13">"Target `replace': Executing a regular expression failed: %s."<pos:position pos:line="51" pos:column="75"/></literal></expr></argument>,
            <argument><expr><name pos:line="52" pos:column="13">errbuf<pos:position pos:line="52" pos:column="19"/></name></expr></argument>)<pos:position pos:line="52" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="53" pos:column="7">sfree<pos:position pos:line="53" pos:column="12"/></name><argument_list pos:line="53" pos:column="12">(<argument><expr><name pos:line="53" pos:column="13">value<pos:position pos:line="53" pos:column="18"/></name></expr></argument>)<pos:position pos:line="53" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="20"/></expr_stmt>
      <continue pos:line="54" pos:column="7">continue;<pos:position pos:line="54" pos:column="16"/></continue>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if></elseif></if>

    <if pos:line="57" pos:column="5">if <condition pos:line="57" pos:column="8">(<expr><name><name pos:line="57" pos:column="9">act<pos:position pos:line="57" pos:column="12"/></name><operator pos:line="57" pos:column="12">-&gt;<pos:position pos:line="57" pos:column="17"/></operator><name pos:line="57" pos:column="14">replacement<pos:position pos:line="57" pos:column="25"/></name></name> <operator pos:line="57" pos:column="26">==<pos:position pos:line="57" pos:column="28"/></operator> <name pos:line="57" pos:column="29">NULL<pos:position pos:line="57" pos:column="33"/></name></expr>)<pos:position pos:line="57" pos:column="34"/></condition><then pos:line="57" pos:column="34"> <block pos:line="57" pos:column="35">{
      <comment type="block" pos:line="58" pos:column="7">/* no replacement; delete the key */</comment>
      <expr_stmt><expr><call><name pos:line="59" pos:column="7">DEBUG<pos:position pos:line="59" pos:column="12"/></name><argument_list pos:line="59" pos:column="12">(<argument><expr><literal type="string" pos:line="59" pos:column="13">"target_replace plugin: tr_meta_data_action_invoke: "<pos:position pos:line="59" pos:column="66"/></literal>
            <literal type="string" pos:line="60" pos:column="13">"deleting `%s'"<pos:position pos:line="60" pos:column="28"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="61" pos:column="13">act<pos:position pos:line="61" pos:column="16"/></name><operator pos:line="61" pos:column="16">-&gt;<pos:position pos:line="61" pos:column="21"/></operator><name pos:line="61" pos:column="18">key<pos:position pos:line="61" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="62" pos:column="7">meta_data_delete<pos:position pos:line="62" pos:column="23"/></name><argument_list pos:line="62" pos:column="23">(<argument><expr><operator pos:line="62" pos:column="24">*<pos:position pos:line="62" pos:column="25"/></operator><name pos:line="62" pos:column="25">dest<pos:position pos:line="62" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="31">act<pos:position pos:line="62" pos:column="34"/></name><operator pos:line="62" pos:column="34">-&gt;<pos:position pos:line="62" pos:column="39"/></operator><name pos:line="62" pos:column="36">key<pos:position pos:line="62" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="63" pos:column="7">sfree<pos:position pos:line="63" pos:column="12"/></name><argument_list pos:line="63" pos:column="12">(<argument><expr><name pos:line="63" pos:column="13">value<pos:position pos:line="63" pos:column="18"/></name></expr></argument>)<pos:position pos:line="63" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="20"/></expr_stmt>
      <continue pos:line="64" pos:column="7">continue;<pos:position pos:line="64" pos:column="16"/></continue>
    }<pos:position pos:line="65" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="67" pos:column="5">subst_status<pos:position pos:line="67" pos:column="17"/></name> <operator pos:line="67" pos:column="18">=<pos:position pos:line="67" pos:column="19"/></operator> <call><name pos:line="67" pos:column="20">subst<pos:position pos:line="67" pos:column="25"/></name><argument_list pos:line="67" pos:column="25">(<argument><expr><name pos:line="67" pos:column="26">temp<pos:position pos:line="67" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="67" pos:column="32">sizeof<argument_list pos:line="67" pos:column="38">(<argument><expr><name pos:line="67" pos:column="39">temp<pos:position pos:line="67" pos:column="43"/></name></expr></argument>)<pos:position pos:line="67" pos:column="44"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="67" pos:column="46">value<pos:position pos:line="67" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="67" pos:column="53">(<pos:position pos:line="67" pos:column="54"/></operator><name pos:line="67" pos:column="54">size_t<pos:position pos:line="67" pos:column="60"/></name><operator pos:line="67" pos:column="60">)<pos:position pos:line="67" pos:column="61"/></operator><name><name pos:line="67" pos:column="61">matches<pos:position pos:line="67" pos:column="68"/></name><index pos:line="67" pos:column="68">[<expr><literal type="number" pos:line="67" pos:column="69">0<pos:position pos:line="67" pos:column="70"/></literal></expr>]<pos:position pos:line="67" pos:column="71"/></index></name><operator pos:line="67" pos:column="71">.<pos:position pos:line="67" pos:column="72"/></operator><name pos:line="67" pos:column="72">rm_so<pos:position pos:line="67" pos:column="77"/></name></expr></argument>,
                         <argument><expr><operator pos:line="68" pos:column="26">(<pos:position pos:line="68" pos:column="27"/></operator><name pos:line="68" pos:column="27">size_t<pos:position pos:line="68" pos:column="33"/></name><operator pos:line="68" pos:column="33">)<pos:position pos:line="68" pos:column="34"/></operator><name><name pos:line="68" pos:column="34">matches<pos:position pos:line="68" pos:column="41"/></name><index pos:line="68" pos:column="41">[<expr><literal type="number" pos:line="68" pos:column="42">0<pos:position pos:line="68" pos:column="43"/></literal></expr>]<pos:position pos:line="68" pos:column="44"/></index></name><operator pos:line="68" pos:column="44">.<pos:position pos:line="68" pos:column="45"/></operator><name pos:line="68" pos:column="45">rm_eo<pos:position pos:line="68" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="52">act<pos:position pos:line="68" pos:column="55"/></name><operator pos:line="68" pos:column="55">-&gt;<pos:position pos:line="68" pos:column="60"/></operator><name pos:line="68" pos:column="57">replacement<pos:position pos:line="68" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="70"/></expr_stmt>
    <if pos:line="69" pos:column="5">if <condition pos:line="69" pos:column="8">(<expr><name pos:line="69" pos:column="9">subst_status<pos:position pos:line="69" pos:column="21"/></name> <operator pos:line="69" pos:column="22">==<pos:position pos:line="69" pos:column="24"/></operator> <name pos:line="69" pos:column="25">NULL<pos:position pos:line="69" pos:column="29"/></name></expr>)<pos:position pos:line="69" pos:column="30"/></condition><then pos:line="69" pos:column="30"> <block pos:line="69" pos:column="31">{
      <expr_stmt><expr><call><name pos:line="70" pos:column="7">ERROR<pos:position pos:line="70" pos:column="12"/></name><argument_list pos:line="70" pos:column="12">(<argument><expr><literal type="string" pos:line="70" pos:column="13">"Target `replace': subst (value = %s, start = %zu, end = %zu, "<pos:position pos:line="70" pos:column="76"/></literal>
            <literal type="string" pos:line="71" pos:column="13">"replacement = %s) failed."<pos:position pos:line="71" pos:column="40"/></literal></expr></argument>,
            <argument><expr><name pos:line="72" pos:column="13">value<pos:position pos:line="72" pos:column="18"/></name></expr></argument>, <argument><expr><operator pos:line="72" pos:column="20">(<pos:position pos:line="72" pos:column="21"/></operator><name pos:line="72" pos:column="21">size_t<pos:position pos:line="72" pos:column="27"/></name><operator pos:line="72" pos:column="27">)<pos:position pos:line="72" pos:column="28"/></operator><name><name pos:line="72" pos:column="28">matches<pos:position pos:line="72" pos:column="35"/></name><index pos:line="72" pos:column="35">[<expr><literal type="number" pos:line="72" pos:column="36">0<pos:position pos:line="72" pos:column="37"/></literal></expr>]<pos:position pos:line="72" pos:column="38"/></index></name><operator pos:line="72" pos:column="38">.<pos:position pos:line="72" pos:column="39"/></operator><name pos:line="72" pos:column="39">rm_so<pos:position pos:line="72" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="72" pos:column="46">(<pos:position pos:line="72" pos:column="47"/></operator><name pos:line="72" pos:column="47">size_t<pos:position pos:line="72" pos:column="53"/></name><operator pos:line="72" pos:column="53">)<pos:position pos:line="72" pos:column="54"/></operator><name><name pos:line="72" pos:column="54">matches<pos:position pos:line="72" pos:column="61"/></name><index pos:line="72" pos:column="61">[<expr><literal type="number" pos:line="72" pos:column="62">0<pos:position pos:line="72" pos:column="63"/></literal></expr>]<pos:position pos:line="72" pos:column="64"/></index></name><operator pos:line="72" pos:column="64">.<pos:position pos:line="72" pos:column="65"/></operator><name pos:line="72" pos:column="65">rm_eo<pos:position pos:line="72" pos:column="70"/></name></expr></argument>,
            <argument><expr><name><name pos:line="73" pos:column="13">act<pos:position pos:line="73" pos:column="16"/></name><operator pos:line="73" pos:column="16">-&gt;<pos:position pos:line="73" pos:column="21"/></operator><name pos:line="73" pos:column="18">replacement<pos:position pos:line="73" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="74" pos:column="7">sfree<pos:position pos:line="74" pos:column="12"/></name><argument_list pos:line="74" pos:column="12">(<argument><expr><name pos:line="74" pos:column="13">value<pos:position pos:line="74" pos:column="18"/></name></expr></argument>)<pos:position pos:line="74" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="20"/></expr_stmt>
      <continue pos:line="75" pos:column="7">continue;<pos:position pos:line="75" pos:column="16"/></continue>
    }<pos:position pos:line="76" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="78" pos:column="5">DEBUG<pos:position pos:line="78" pos:column="10"/></name><argument_list pos:line="78" pos:column="10">(<argument><expr><literal type="string" pos:line="78" pos:column="11">"target_replace plugin: tr_meta_data_action_invoke: `%s' "<pos:position pos:line="78" pos:column="69"/></literal>
          <literal type="string" pos:line="79" pos:column="11">"value `%s' -&gt; `%s'"<pos:position pos:line="79" pos:column="34"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="80" pos:column="11">act<pos:position pos:line="80" pos:column="14"/></name><operator pos:line="80" pos:column="14">-&gt;<pos:position pos:line="80" pos:column="19"/></operator><name pos:line="80" pos:column="16">key<pos:position pos:line="80" pos:column="19"/></name></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="21">value<pos:position pos:line="80" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="28">temp<pos:position pos:line="80" pos:column="32"/></name></expr></argument>)<pos:position pos:line="80" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="34"/></expr_stmt>

    <if pos:line="82" pos:column="5">if <condition pos:line="82" pos:column="8">(<expr><operator pos:line="82" pos:column="9">(<pos:position pos:line="82" pos:column="10"/></operator><name pos:line="82" pos:column="10">result<pos:position pos:line="82" pos:column="16"/></name> <operator pos:line="82" pos:column="17">=<pos:position pos:line="82" pos:column="18"/></operator> <call><name pos:line="82" pos:column="19">meta_data_create<pos:position pos:line="82" pos:column="35"/></name><argument_list pos:line="82" pos:column="35">()<pos:position pos:line="82" pos:column="37"/></argument_list></call><operator pos:line="82" pos:column="37">)<pos:position pos:line="82" pos:column="38"/></operator> <operator pos:line="82" pos:column="39">==<pos:position pos:line="82" pos:column="41"/></operator> <name pos:line="82" pos:column="42">NULL<pos:position pos:line="82" pos:column="46"/></name></expr>)<pos:position pos:line="82" pos:column="47"/></condition><then pos:line="82" pos:column="47"> <block pos:line="82" pos:column="48">{
      <expr_stmt><expr><call><name pos:line="83" pos:column="7">ERROR<pos:position pos:line="83" pos:column="12"/></name><argument_list pos:line="83" pos:column="12">(<argument><expr><literal type="string" pos:line="83" pos:column="13">"Target `replace': failed to create metadata for `%s'."<pos:position pos:line="83" pos:column="68"/></literal></expr></argument>, <argument><expr><name><name pos:line="83" pos:column="70">act<pos:position pos:line="83" pos:column="73"/></name><operator pos:line="83" pos:column="73">-&gt;<pos:position pos:line="83" pos:column="78"/></operator><name pos:line="83" pos:column="75">key<pos:position pos:line="83" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="80"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="84" pos:column="7">sfree<pos:position pos:line="84" pos:column="12"/></name><argument_list pos:line="84" pos:column="12">(<argument><expr><name pos:line="84" pos:column="13">value<pos:position pos:line="84" pos:column="18"/></name></expr></argument>)<pos:position pos:line="84" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="20"/></expr_stmt>
      <return pos:line="85" pos:column="7">return <expr><operator pos:line="85" pos:column="14">-<pos:position pos:line="85" pos:column="15"/></operator><name pos:line="85" pos:column="15">ENOMEM<pos:position pos:line="85" pos:column="21"/></name></expr>;<pos:position pos:line="85" pos:column="22"/></return>
    }<pos:position pos:line="86" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="88" pos:column="5">meta_data_status<pos:position pos:line="88" pos:column="21"/></name> <operator pos:line="88" pos:column="22">=<pos:position pos:line="88" pos:column="23"/></operator> <call><name pos:line="88" pos:column="24">meta_data_add_string<pos:position pos:line="88" pos:column="44"/></name><argument_list pos:line="88" pos:column="44">(<argument><expr><name pos:line="88" pos:column="45">result<pos:position pos:line="88" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="88" pos:column="53">act<pos:position pos:line="88" pos:column="56"/></name><operator pos:line="88" pos:column="56">-&gt;<pos:position pos:line="88" pos:column="61"/></operator><name pos:line="88" pos:column="58">key<pos:position pos:line="88" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="63">temp<pos:position pos:line="88" pos:column="67"/></name></expr></argument>)<pos:position pos:line="88" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="69"/></expr_stmt>
    <if pos:line="89" pos:column="5">if <condition pos:line="89" pos:column="8">(<expr><name pos:line="89" pos:column="9">meta_data_status<pos:position pos:line="89" pos:column="25"/></name> <operator pos:line="89" pos:column="26">!=<pos:position pos:line="89" pos:column="28"/></operator> <literal type="number" pos:line="89" pos:column="29">0<pos:position pos:line="89" pos:column="30"/></literal></expr>)<pos:position pos:line="89" pos:column="31"/></condition><then pos:line="89" pos:column="31"> <block pos:line="89" pos:column="32">{
      <expr_stmt><expr><call><name pos:line="90" pos:column="7">ERROR<pos:position pos:line="90" pos:column="12"/></name><argument_list pos:line="90" pos:column="12">(<argument><expr><literal type="string" pos:line="90" pos:column="13">"Target `replace': Unable to set metadata value for `%s'."<pos:position pos:line="90" pos:column="71"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="91" pos:column="13">act<pos:position pos:line="91" pos:column="16"/></name><operator pos:line="91" pos:column="16">-&gt;<pos:position pos:line="91" pos:column="21"/></operator><name pos:line="91" pos:column="18">key<pos:position pos:line="91" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="92" pos:column="7">meta_data_destroy<pos:position pos:line="92" pos:column="24"/></name><argument_list pos:line="92" pos:column="24">(<argument><expr><name pos:line="92" pos:column="25">result<pos:position pos:line="92" pos:column="31"/></name></expr></argument>)<pos:position pos:line="92" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="93" pos:column="7">sfree<pos:position pos:line="93" pos:column="12"/></name><argument_list pos:line="93" pos:column="12">(<argument><expr><name pos:line="93" pos:column="13">value<pos:position pos:line="93" pos:column="18"/></name></expr></argument>)<pos:position pos:line="93" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="20"/></expr_stmt>
      <return pos:line="94" pos:column="7">return <expr><name pos:line="94" pos:column="14">meta_data_status<pos:position pos:line="94" pos:column="30"/></name></expr>;<pos:position pos:line="94" pos:column="31"/></return>
    }<pos:position pos:line="95" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="97" pos:column="5">meta_data_clone_merge<pos:position pos:line="97" pos:column="26"/></name><argument_list pos:line="97" pos:column="26">(<argument><expr><name pos:line="97" pos:column="27">dest<pos:position pos:line="97" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="33">result<pos:position pos:line="97" pos:column="39"/></name></expr></argument>)<pos:position pos:line="97" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="98" pos:column="5">meta_data_destroy<pos:position pos:line="98" pos:column="22"/></name><argument_list pos:line="98" pos:column="22">(<argument><expr><name pos:line="98" pos:column="23">result<pos:position pos:line="98" pos:column="29"/></name></expr></argument>)<pos:position pos:line="98" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="99" pos:column="5">sfree<pos:position pos:line="99" pos:column="10"/></name><argument_list pos:line="99" pos:column="10">(<argument><expr><name pos:line="99" pos:column="11">value<pos:position pos:line="99" pos:column="16"/></name></expr></argument>)<pos:position pos:line="99" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="100" pos:column="4"/></block></for> <comment type="block" pos:line="100" pos:column="5">/* for (act = act_head; act != NULL; act = act-&gt;next) */</comment>

  <return pos:line="102" pos:column="3">return <expr><literal type="number" pos:line="102" pos:column="10">0<pos:position pos:line="102" pos:column="11"/></literal></expr>;<pos:position pos:line="102" pos:column="12"/></return>
}<pos:position pos:line="103" pos:column="2"/></block></function></unit>

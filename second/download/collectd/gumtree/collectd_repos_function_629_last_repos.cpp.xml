<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_629_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">jtoc_double<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">JNIEnv<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">jvm_env<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="41">/* {{{ */</comment>
                       <parameter><decl><type><name pos:line="2" pos:column="24">jdouble<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">ret_value<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="44">jclass<pos:position pos:line="2" pos:column="50"/></name></type> <name pos:line="2" pos:column="51">class_ptr<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="62">jobject<pos:position pos:line="2" pos:column="69"/></name></type> <name pos:line="2" pos:column="70">object_ptr<pos:position pos:line="2" pos:column="80"/></name></decl></parameter>,
                       <parameter><decl><type><specifier pos:line="3" pos:column="24">const<pos:position pos:line="3" pos:column="29"/></specifier> <name pos:line="3" pos:column="30">char<pos:position pos:line="3" pos:column="34"/></name> <modifier pos:line="3" pos:column="35">*<pos:position pos:line="3" pos:column="36"/></modifier></type><name pos:line="3" pos:column="36">method_name<pos:position pos:line="3" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="48"/></parameter_list> <block pos:line="3" pos:column="49">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">jmethodID<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">method_id<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">method_id<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">=<pos:position pos:line="6" pos:column="14"/></operator> <call><name><operator pos:line="6" pos:column="15">(<pos:position pos:line="6" pos:column="16"/></operator><operator pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="17">jvm_env<pos:position pos:line="6" pos:column="24"/></name><operator pos:line="6" pos:column="24">)<pos:position pos:line="6" pos:column="25"/></operator><operator pos:line="6" pos:column="25">-&gt;<pos:position pos:line="6" pos:column="30"/></operator><name pos:line="6" pos:column="27">GetMethodID<pos:position pos:line="6" pos:column="38"/></name></name><argument_list pos:line="6" pos:column="38">(<argument><expr><name pos:line="6" pos:column="39">jvm_env<pos:position pos:line="6" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="48">class_ptr<pos:position pos:line="6" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="59">method_name<pos:position pos:line="6" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="72">"()D"<pos:position pos:line="6" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="79"/></expr_stmt>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">method_id<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">==<pos:position pos:line="7" pos:column="19"/></operator> <name pos:line="7" pos:column="20">NULL<pos:position pos:line="7" pos:column="24"/></name></expr>)<pos:position pos:line="7" pos:column="25"/></condition><then pos:line="7" pos:column="25"> <block pos:line="7" pos:column="26">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">ERROR<pos:position pos:line="8" pos:column="10"/></name><argument_list pos:line="8" pos:column="10">(<argument><expr><literal type="string" pos:line="8" pos:column="11">"java plugin: jtoc_double: Cannot find method `double %s ()'."<pos:position pos:line="8" pos:column="73"/></literal></expr></argument>,
          <argument><expr><name pos:line="9" pos:column="11">method_name<pos:position pos:line="9" pos:column="22"/></name></expr></argument>)<pos:position pos:line="9" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="24"/></expr_stmt>
    <return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">-<pos:position pos:line="10" pos:column="13"/></operator><literal type="number" pos:line="10" pos:column="13">1<pos:position pos:line="10" pos:column="14"/></literal></expr>;<pos:position pos:line="10" pos:column="15"/></return>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>

  <expr_stmt><expr><operator pos:line="13" pos:column="3">*<pos:position pos:line="13" pos:column="4"/></operator><name pos:line="13" pos:column="4">ret_value<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <call><name><operator pos:line="13" pos:column="16">(<pos:position pos:line="13" pos:column="17"/></operator><operator pos:line="13" pos:column="17">*<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">jvm_env<pos:position pos:line="13" pos:column="25"/></name><operator pos:line="13" pos:column="25">)<pos:position pos:line="13" pos:column="26"/></operator><operator pos:line="13" pos:column="26">-&gt;<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="28">CallDoubleMethod<pos:position pos:line="13" pos:column="44"/></name></name><argument_list pos:line="13" pos:column="44">(<argument><expr><name pos:line="13" pos:column="45">jvm_env<pos:position pos:line="13" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="54">object_ptr<pos:position pos:line="13" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="66">method_id<pos:position pos:line="13" pos:column="75"/></name></expr></argument>)<pos:position pos:line="13" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="77"/></expr_stmt>

  <return pos:line="15" pos:column="3">return <expr><literal type="number" pos:line="15" pos:column="10">0<pos:position pos:line="15" pos:column="11"/></literal></expr>;<pos:position pos:line="15" pos:column="12"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_338_collectd-4.4.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">handle_udp<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><specifier pos:line="2" pos:column="12">const<pos:position pos:line="2" pos:column="17"/></specifier> <name><name pos:line="2" pos:column="18">struct<pos:position pos:line="2" pos:column="24"/></name> <name pos:line="2" pos:column="25">udphdr<pos:position pos:line="2" pos:column="31"/></name></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">udp<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="38">int<pos:position pos:line="2" pos:column="41"/></name></type> <name pos:line="2" pos:column="42">len<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>,
	<parameter><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name><name pos:line="3" pos:column="15">struct<pos:position pos:line="3" pos:column="21"/></name> <name pos:line="3" pos:column="22">in6_addr<pos:position pos:line="3" pos:column="30"/></name></name> <modifier pos:line="3" pos:column="31">*<pos:position pos:line="3" pos:column="32"/></modifier></type><name pos:line="3" pos:column="32">s_addr<pos:position pos:line="3" pos:column="38"/></name></decl></parameter>,
	<parameter><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name><name pos:line="4" pos:column="15">struct<pos:position pos:line="4" pos:column="21"/></name> <name pos:line="4" pos:column="22">in6_addr<pos:position pos:line="4" pos:column="30"/></name></name> <modifier pos:line="4" pos:column="31">*<pos:position pos:line="4" pos:column="32"/></modifier></type><name pos:line="4" pos:column="32">d_addr<pos:position pos:line="4" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="39"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name></type> <name><name pos:line="6" pos:column="10">buf<pos:position pos:line="6" pos:column="13"/></name><index pos:line="6" pos:column="13">[<expr><name pos:line="6" pos:column="14">PCAP_SNAPLEN<pos:position pos:line="6" pos:column="26"/></name></expr>]<pos:position pos:line="6" pos:column="27"/></index></name></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">(<pos:position pos:line="7" pos:column="10"/></operator><call><name pos:line="7" pos:column="10">ntohs<pos:position pos:line="7" pos:column="15"/></name> <argument_list pos:line="7" pos:column="16">(<argument><expr><name><name pos:line="7" pos:column="17">udp<pos:position pos:line="7" pos:column="20"/></name><operator pos:line="7" pos:column="20">-&gt;<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="22">UDP_DEST<pos:position pos:line="7" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="31"/></argument_list></call> <operator pos:line="7" pos:column="32">!=<pos:position pos:line="7" pos:column="34"/></operator> <literal type="number" pos:line="7" pos:column="35">53<pos:position pos:line="7" pos:column="37"/></literal><operator pos:line="7" pos:column="37">)<pos:position pos:line="7" pos:column="38"/></operator>
		    <operator pos:line="8" pos:column="21">&amp;&amp;<pos:position pos:line="8" pos:column="31"/></operator> <operator pos:line="8" pos:column="24">(<pos:position pos:line="8" pos:column="25"/></operator><call><name pos:line="8" pos:column="25">ntohs<pos:position pos:line="8" pos:column="30"/></name> <argument_list pos:line="8" pos:column="31">(<argument><expr><name><name pos:line="8" pos:column="32">udp<pos:position pos:line="8" pos:column="35"/></name><operator pos:line="8" pos:column="35">-&gt;<pos:position pos:line="8" pos:column="40"/></operator><name pos:line="8" pos:column="37">UDP_SRC<pos:position pos:line="8" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="45"/></argument_list></call> <operator pos:line="8" pos:column="46">!=<pos:position pos:line="8" pos:column="48"/></operator> <literal type="number" pos:line="8" pos:column="49">53<pos:position pos:line="8" pos:column="51"/></literal><operator pos:line="8" pos:column="51">)<pos:position pos:line="8" pos:column="52"/></operator></expr>)<pos:position pos:line="8" pos:column="53"/></condition><then pos:line="8" pos:column="53">
	<block type="pseudo"><return pos:line="9" pos:column="9">return <expr><literal type="number" pos:line="9" pos:column="16">0<pos:position pos:line="9" pos:column="17"/></literal></expr>;<pos:position pos:line="9" pos:column="18"/></return></block></then></if>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">memcpy<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><name pos:line="10" pos:column="12">buf<pos:position pos:line="10" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="17">udp<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">+<pos:position pos:line="10" pos:column="22"/></operator> <literal type="number" pos:line="10" pos:column="23">1<pos:position pos:line="10" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="26">len<pos:position pos:line="10" pos:column="29"/></name> <operator pos:line="10" pos:column="30">-<pos:position pos:line="10" pos:column="31"/></operator> <sizeof pos:line="10" pos:column="32">sizeof<argument_list pos:line="10" pos:column="38">(<argument><expr><operator pos:line="10" pos:column="39">*<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="40">udp<pos:position pos:line="10" pos:column="43"/></name></expr></argument>)<pos:position pos:line="10" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="46"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><literal type="number" pos:line="11" pos:column="9">0<pos:position pos:line="11" pos:column="10"/></literal> <operator pos:line="11" pos:column="11">==<pos:position pos:line="11" pos:column="13"/></operator> <call><name pos:line="11" pos:column="14">handle_dns<pos:position pos:line="11" pos:column="24"/></name><argument_list pos:line="11" pos:column="24">(<argument><expr><name pos:line="11" pos:column="25">buf<pos:position pos:line="11" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="30">len<pos:position pos:line="11" pos:column="33"/></name> <operator pos:line="11" pos:column="34">-<pos:position pos:line="11" pos:column="35"/></operator> <sizeof pos:line="11" pos:column="36">sizeof<argument_list pos:line="11" pos:column="42">(<argument><expr><operator pos:line="11" pos:column="43">*<pos:position pos:line="11" pos:column="44"/></operator><name pos:line="11" pos:column="44">udp<pos:position pos:line="11" pos:column="47"/></name></expr></argument>)<pos:position pos:line="11" pos:column="48"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="11" pos:column="50">s_addr<pos:position pos:line="11" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="58">d_addr<pos:position pos:line="11" pos:column="64"/></name></expr></argument>)<pos:position pos:line="11" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="66"/></condition><then pos:line="11" pos:column="66">
	<block type="pseudo"><return pos:line="12" pos:column="9">return <expr><literal type="number" pos:line="12" pos:column="16">0<pos:position pos:line="12" pos:column="17"/></literal></expr>;<pos:position pos:line="12" pos:column="18"/></return></block></then></if>
    <return pos:line="13" pos:column="5">return <expr><literal type="number" pos:line="13" pos:column="12">1<pos:position pos:line="13" pos:column="13"/></literal></expr>;<pos:position pos:line="13" pos:column="14"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

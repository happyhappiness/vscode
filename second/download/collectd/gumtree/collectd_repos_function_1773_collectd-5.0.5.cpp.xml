<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1773_collectd-5.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cj_cb_string<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">void<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">ctx<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="37">const<pos:position pos:line="1" pos:column="42"/></specifier> <name pos:line="1" pos:column="43">unsigned<pos:position pos:line="1" pos:column="51"/></name> <name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">val<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="2" pos:column="5">yajl_len_t<pos:position pos:line="2" pos:column="15"/></name></type> <name pos:line="2" pos:column="16">len<pos:position pos:line="2" pos:column="19"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="20"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">cj_t<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">db<pos:position pos:line="4" pos:column="11"/></name> <init pos:line="4" pos:column="12">= <expr><operator pos:line="4" pos:column="14">(<pos:position pos:line="4" pos:column="15"/></operator><name pos:line="4" pos:column="15">cj_t<pos:position pos:line="4" pos:column="19"/></name> <operator pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></operator><operator pos:line="4" pos:column="21">)<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="22">ctx<pos:position pos:line="4" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">str<pos:position pos:line="5" pos:column="11"/></name><index pos:line="5" pos:column="11">[<expr><name pos:line="5" pos:column="12">len<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">+<pos:position pos:line="5" pos:column="17"/></operator> <literal type="number" pos:line="5" pos:column="18">1<pos:position pos:line="5" pos:column="19"/></literal></expr>]<pos:position pos:line="5" pos:column="20"/></index></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>

  <comment type="block" pos:line="7" pos:column="3">/* Create a null-terminated version of the string. */</comment>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">memcpy<pos:position pos:line="8" pos:column="9"/></name> <argument_list pos:line="8" pos:column="10">(<argument><expr><name pos:line="8" pos:column="11">str<pos:position pos:line="8" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="16">val<pos:position pos:line="8" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="21">len<pos:position pos:line="8" pos:column="24"/></name></expr></argument>)<pos:position pos:line="8" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="9" pos:column="3">str<pos:position pos:line="9" pos:column="6"/></name><index pos:line="9" pos:column="6">[<expr><name pos:line="9" pos:column="7">len<pos:position pos:line="9" pos:column="10"/></name></expr>]<pos:position pos:line="9" pos:column="11"/></index></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <literal type="number" pos:line="9" pos:column="14">0<pos:position pos:line="9" pos:column="15"/></literal></expr>;<pos:position pos:line="9" pos:column="16"/></expr_stmt>

  <comment type="block" pos:line="11" pos:column="3">/* No configuration for this string -&gt; simply return. */</comment>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name><name pos:line="12" pos:column="7">db<pos:position pos:line="12" pos:column="9"/></name><operator pos:line="12" pos:column="9">-&gt;<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="11">state<pos:position pos:line="12" pos:column="16"/></name><index pos:line="12" pos:column="16">[<expr><name><name pos:line="12" pos:column="17">db<pos:position pos:line="12" pos:column="19"/></name><operator pos:line="12" pos:column="19">-&gt;<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="21">depth<pos:position pos:line="12" pos:column="26"/></name></name></expr>]<pos:position pos:line="12" pos:column="27"/></index></name><operator pos:line="12" pos:column="27">.<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="28">key<pos:position pos:line="12" pos:column="31"/></name> <operator pos:line="12" pos:column="32">==<pos:position pos:line="12" pos:column="34"/></operator> <name pos:line="12" pos:column="35">NULL<pos:position pos:line="12" pos:column="39"/></name></expr>)<pos:position pos:line="12" pos:column="40"/></condition><then pos:line="12" pos:column="40">
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">(<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="13">CJ_CB_CONTINUE<pos:position pos:line="13" pos:column="27"/></name><operator pos:line="13" pos:column="27">)<pos:position pos:line="13" pos:column="28"/></operator></expr>;<pos:position pos:line="13" pos:column="29"/></return></block></then></if>

  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><operator pos:line="15" pos:column="7">!<pos:position pos:line="15" pos:column="8"/></operator><call><name pos:line="15" pos:column="8">CJ_IS_KEY<pos:position pos:line="15" pos:column="17"/></name> <argument_list pos:line="15" pos:column="18">(<argument><expr><name><name pos:line="15" pos:column="19">db<pos:position pos:line="15" pos:column="21"/></name><operator pos:line="15" pos:column="21">-&gt;<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="23">state<pos:position pos:line="15" pos:column="28"/></name><index pos:line="15" pos:column="28">[<expr><name><name pos:line="15" pos:column="29">db<pos:position pos:line="15" pos:column="31"/></name><operator pos:line="15" pos:column="31">-&gt;<pos:position pos:line="15" pos:column="36"/></operator><name pos:line="15" pos:column="33">depth<pos:position pos:line="15" pos:column="38"/></name></name></expr>]<pos:position pos:line="15" pos:column="39"/></index></name><operator pos:line="15" pos:column="39">.<pos:position pos:line="15" pos:column="40"/></operator><name pos:line="15" pos:column="40">key<pos:position pos:line="15" pos:column="43"/></name></expr></argument>)<pos:position pos:line="15" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="45"/></condition><then pos:line="15" pos:column="45">
  <block pos:line="16" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">NOTICE<pos:position pos:line="17" pos:column="11"/></name> <argument_list pos:line="17" pos:column="12">(<argument><expr><literal type="string" pos:line="17" pos:column="13">"curl_json plugin: Found string \"%s\", but the configuration "<pos:position pos:line="17" pos:column="76"/></literal>
        <literal type="string" pos:line="18" pos:column="9">"expects a map here."<pos:position pos:line="18" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="32">str<pos:position pos:line="18" pos:column="35"/></name></expr></argument>)<pos:position pos:line="18" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="37"/></expr_stmt>
    <return pos:line="19" pos:column="5">return <expr><operator pos:line="19" pos:column="12">(<pos:position pos:line="19" pos:column="13"/></operator><name pos:line="19" pos:column="13">CJ_CB_CONTINUE<pos:position pos:line="19" pos:column="27"/></name><operator pos:line="19" pos:column="27">)<pos:position pos:line="19" pos:column="28"/></operator></expr>;<pos:position pos:line="19" pos:column="29"/></return>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="22" pos:column="3">/* Handle the string as if it was a number. */</comment>
  <return pos:line="23" pos:column="3">return <expr><operator pos:line="23" pos:column="10">(<pos:position pos:line="23" pos:column="11"/></operator><call><name pos:line="23" pos:column="11">cj_cb_number<pos:position pos:line="23" pos:column="23"/></name> <argument_list pos:line="23" pos:column="24">(<argument><expr><name pos:line="23" pos:column="25">ctx<pos:position pos:line="23" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="30">(<pos:position pos:line="23" pos:column="31"/></operator><specifier pos:line="23" pos:column="31">const<pos:position pos:line="23" pos:column="36"/></specifier> <name pos:line="23" pos:column="37">char<pos:position pos:line="23" pos:column="41"/></name> <operator pos:line="23" pos:column="42">*<pos:position pos:line="23" pos:column="43"/></operator><operator pos:line="23" pos:column="43">)<pos:position pos:line="23" pos:column="44"/></operator> <name pos:line="23" pos:column="45">val<pos:position pos:line="23" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="50">len<pos:position pos:line="23" pos:column="53"/></name></expr></argument>)<pos:position pos:line="23" pos:column="54"/></argument_list></call><operator pos:line="23" pos:column="54">)<pos:position pos:line="23" pos:column="55"/></operator></expr>;<pos:position pos:line="23" pos:column="56"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

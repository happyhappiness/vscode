<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_611_collectd-4.2.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">sensors_feature_name_to_type<pos:position pos:line="1" pos:column="40"/></name> <parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier> <name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">name<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>

	<comment type="block" pos:line="5" pos:column="9">/* Yes, this is slow, but it's only ever done during initialization, so
	 * it's a one time cost.. */</comment>
	<for pos:line="7" pos:column="9">for <control pos:line="7" pos:column="13">(<init><expr><name pos:line="7" pos:column="14">i<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <literal type="number" pos:line="7" pos:column="18">0<pos:position pos:line="7" pos:column="19"/></literal></expr>;<pos:position pos:line="7" pos:column="20"/></init> <condition><expr><name pos:line="7" pos:column="21">i<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">&lt;<pos:position pos:line="7" pos:column="27"/></operator> <name pos:line="7" pos:column="25">known_features_num<pos:position pos:line="7" pos:column="43"/></name></expr>;<pos:position pos:line="7" pos:column="44"/></condition> <incr><expr><name pos:line="7" pos:column="45">i<pos:position pos:line="7" pos:column="46"/></name><operator pos:line="7" pos:column="46">++<pos:position pos:line="7" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="7" pos:column="49"/></control>
		<block type="pseudo"><if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><call><name pos:line="8" pos:column="21">strcasecmp<pos:position pos:line="8" pos:column="31"/></name> <argument_list pos:line="8" pos:column="32">(<argument><expr><name><name pos:line="8" pos:column="33">known_features<pos:position pos:line="8" pos:column="47"/></name><index pos:line="8" pos:column="47">[<expr><name pos:line="8" pos:column="48">i<pos:position pos:line="8" pos:column="49"/></name></expr>]<pos:position pos:line="8" pos:column="50"/></index></name><operator pos:line="8" pos:column="50">.<pos:position pos:line="8" pos:column="51"/></operator><name pos:line="8" pos:column="51">label<pos:position pos:line="8" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="58">name<pos:position pos:line="8" pos:column="62"/></name></expr></argument>)<pos:position pos:line="8" pos:column="63"/></argument_list></call> <operator pos:line="8" pos:column="64">==<pos:position pos:line="8" pos:column="66"/></operator> <literal type="number" pos:line="8" pos:column="67">0<pos:position pos:line="8" pos:column="68"/></literal></expr>)<pos:position pos:line="8" pos:column="69"/></condition><then pos:line="8" pos:column="69">
			<block type="pseudo"><return pos:line="9" pos:column="25">return <expr><operator pos:line="9" pos:column="32">(<pos:position pos:line="9" pos:column="33"/></operator><name><name pos:line="9" pos:column="33">known_features<pos:position pos:line="9" pos:column="47"/></name><index pos:line="9" pos:column="47">[<expr><name pos:line="9" pos:column="48">i<pos:position pos:line="9" pos:column="49"/></name></expr>]<pos:position pos:line="9" pos:column="50"/></index></name><operator pos:line="9" pos:column="50">.<pos:position pos:line="9" pos:column="51"/></operator><name pos:line="9" pos:column="51">type<pos:position pos:line="9" pos:column="55"/></name><operator pos:line="9" pos:column="55">)<pos:position pos:line="9" pos:column="56"/></operator></expr>;<pos:position pos:line="9" pos:column="57"/></return></block></then></if></block></for>

	<return pos:line="11" pos:column="9">return <expr><operator pos:line="11" pos:column="16">(<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="17">SENSOR_TYPE_UNKNOWN<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">)<pos:position pos:line="11" pos:column="37"/></operator></expr>;<pos:position pos:line="11" pos:column="38"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

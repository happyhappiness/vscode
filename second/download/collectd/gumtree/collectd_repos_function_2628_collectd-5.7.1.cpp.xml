<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2628_collectd-5.7.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">cf_unregister_complex<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">type<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list> <block pos:line="1" pos:column="46">{
  <for pos:line="2" pos:column="3">for <control pos:line="2" pos:column="7">(<init><decl><type><name pos:line="2" pos:column="8">cf_complex_callback_t<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="31">prev<pos:position pos:line="2" pos:column="35"/></name> <init pos:line="2" pos:column="36">= <expr><name pos:line="2" pos:column="38">NULL<pos:position pos:line="2" pos:column="42"/></name></expr></init></decl>, <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier><decl><type ref="prev"/><name pos:line="2" pos:column="45">this<pos:position pos:line="2" pos:column="49"/></name> <init pos:line="2" pos:column="50">= <expr><name pos:line="2" pos:column="52">complex_callback_head<pos:position pos:line="2" pos:column="73"/></name></expr></init></decl>;<pos:position pos:line="2" pos:column="74"/></init>
       <condition><expr><name pos:line="3" pos:column="8">this<pos:position pos:line="3" pos:column="12"/></name> <operator pos:line="3" pos:column="13">!=<pos:position pos:line="3" pos:column="15"/></operator> <name pos:line="3" pos:column="16">NULL<pos:position pos:line="3" pos:column="20"/></name></expr>;<pos:position pos:line="3" pos:column="21"/></condition> <incr><expr><name pos:line="3" pos:column="22">prev<pos:position pos:line="3" pos:column="26"/></name> <operator pos:line="3" pos:column="27">=<pos:position pos:line="3" pos:column="28"/></operator> <name pos:line="3" pos:column="29">this<pos:position pos:line="3" pos:column="33"/></name></expr><operator pos:line="3" pos:column="33">,<pos:position pos:line="3" pos:column="34"/></operator> <expr><name pos:line="3" pos:column="35">this<pos:position pos:line="3" pos:column="39"/></name> <operator pos:line="3" pos:column="40">=<pos:position pos:line="3" pos:column="41"/></operator> <name><name pos:line="3" pos:column="42">this<pos:position pos:line="3" pos:column="46"/></name><operator pos:line="3" pos:column="46">-&gt;<pos:position pos:line="3" pos:column="51"/></operator><name pos:line="3" pos:column="48">next<pos:position pos:line="3" pos:column="52"/></name></name></expr></incr>)<pos:position pos:line="3" pos:column="53"/></control>
    <block type="pseudo"><if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name pos:line="4" pos:column="9">strcasecmp<pos:position pos:line="4" pos:column="19"/></name><argument_list pos:line="4" pos:column="19">(<argument><expr><name><name pos:line="4" pos:column="20">this<pos:position pos:line="4" pos:column="24"/></name><operator pos:line="4" pos:column="24">-&gt;<pos:position pos:line="4" pos:column="29"/></operator><name pos:line="4" pos:column="26">type<pos:position pos:line="4" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="32">type<pos:position pos:line="4" pos:column="36"/></name></expr></argument>)<pos:position pos:line="4" pos:column="37"/></argument_list></call> <operator pos:line="4" pos:column="38">==<pos:position pos:line="4" pos:column="40"/></operator> <literal type="number" pos:line="4" pos:column="41">0<pos:position pos:line="4" pos:column="42"/></literal></expr>)<pos:position pos:line="4" pos:column="43"/></condition><then pos:line="4" pos:column="43"> <block pos:line="4" pos:column="44">{
      <if pos:line="5" pos:column="7">if <condition pos:line="5" pos:column="10">(<expr><name pos:line="5" pos:column="11">prev<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">==<pos:position pos:line="5" pos:column="18"/></operator> <name pos:line="5" pos:column="19">NULL<pos:position pos:line="5" pos:column="23"/></name></expr>)<pos:position pos:line="5" pos:column="24"/></condition><then pos:line="5" pos:column="24">
        <block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="9">complex_callback_head<pos:position pos:line="6" pos:column="30"/></name> <operator pos:line="6" pos:column="31">=<pos:position pos:line="6" pos:column="32"/></operator> <name><name pos:line="6" pos:column="33">this<pos:position pos:line="6" pos:column="37"/></name><operator pos:line="6" pos:column="37">-&gt;<pos:position pos:line="6" pos:column="42"/></operator><name pos:line="6" pos:column="39">next<pos:position pos:line="6" pos:column="43"/></name></name></expr>;<pos:position pos:line="6" pos:column="44"/></expr_stmt></block></then>
      <else pos:line="7" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="8" pos:column="9">prev<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">-&gt;<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="15">next<pos:position pos:line="8" pos:column="19"/></name></name> <operator pos:line="8" pos:column="20">=<pos:position pos:line="8" pos:column="21"/></operator> <name><name pos:line="8" pos:column="22">this<pos:position pos:line="8" pos:column="26"/></name><operator pos:line="8" pos:column="26">-&gt;<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="28">next<pos:position pos:line="8" pos:column="32"/></name></name></expr>;<pos:position pos:line="8" pos:column="33"/></expr_stmt></block></else></if>

      <expr_stmt><expr><call><name pos:line="10" pos:column="7">sfree<pos:position pos:line="10" pos:column="12"/></name><argument_list pos:line="10" pos:column="12">(<argument><expr><name><name pos:line="10" pos:column="13">this<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">-&gt;<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="19">type<pos:position pos:line="10" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="11" pos:column="7">sfree<pos:position pos:line="11" pos:column="12"/></name><argument_list pos:line="11" pos:column="12">(<argument><expr><name pos:line="11" pos:column="13">this<pos:position pos:line="11" pos:column="17"/></name></expr></argument>)<pos:position pos:line="11" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="19"/></expr_stmt>
      <break pos:line="12" pos:column="7">break;<pos:position pos:line="12" pos:column="13"/></break>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if></block></for>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

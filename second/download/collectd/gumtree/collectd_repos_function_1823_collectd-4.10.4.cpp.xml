<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1823_collectd-4.10.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">iptcc_chain_index_delete_chain<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><name><name pos:line="1" pos:column="43">struct<pos:position pos:line="1" pos:column="49"/></name> <name pos:line="1" pos:column="50">chain_head<pos:position pos:line="1" pos:column="60"/></name></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">c<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="65">TC_HANDLE_T<pos:position pos:line="1" pos:column="76"/></name></type> <name pos:line="1" pos:column="77">h<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">list_head<pos:position pos:line="3" pos:column="25"/></name></name> <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier></type><name pos:line="3" pos:column="27">index_ptr<pos:position pos:line="3" pos:column="36"/></name></decl>, <modifier pos:line="3" pos:column="38">*<pos:position pos:line="3" pos:column="39"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="39">next<pos:position pos:line="3" pos:column="43"/></name></decl>;<pos:position pos:line="3" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">chain_head<pos:position pos:line="4" pos:column="26"/></name></name> <modifier pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></modifier></type><name pos:line="4" pos:column="28">c2<pos:position pos:line="4" pos:column="30"/></name></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">unsigned<pos:position pos:line="5" pos:column="17"/></name> <name pos:line="5" pos:column="18">int<pos:position pos:line="5" pos:column="21"/></name></type> <name pos:line="5" pos:column="22">idx<pos:position pos:line="5" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="27">idx2<pos:position pos:line="5" pos:column="31"/></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>

	<expr_stmt><expr><name pos:line="7" pos:column="9">index_ptr<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">=<pos:position pos:line="7" pos:column="20"/></operator> <call><name pos:line="7" pos:column="21">iptcc_bsearch_chain_index<pos:position pos:line="7" pos:column="46"/></name><argument_list pos:line="7" pos:column="46">(<argument><expr><name><name pos:line="7" pos:column="47">c<pos:position pos:line="7" pos:column="48"/></name><operator pos:line="7" pos:column="48">-&gt;<pos:position pos:line="7" pos:column="53"/></operator><name pos:line="7" pos:column="50">name<pos:position pos:line="7" pos:column="54"/></name></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="56">&amp;<pos:position pos:line="7" pos:column="61"/></operator><name pos:line="7" pos:column="57">idx<pos:position pos:line="7" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="62">h<pos:position pos:line="7" pos:column="63"/></name></expr></argument>)<pos:position pos:line="7" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="65"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="9" pos:column="9">debug<pos:position pos:line="9" pos:column="14"/></name><argument_list pos:line="9" pos:column="14">(<argument><expr><literal type="string" pos:line="9" pos:column="15">"Del chain[%s] c-&gt;list:%p index_ptr:%p\n"<pos:position pos:line="9" pos:column="59"/></literal></expr></argument>,
	      <argument><expr><name><name pos:line="10" pos:column="15">c<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">-&gt;<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="18">name<pos:position pos:line="10" pos:column="22"/></name></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="24">&amp;<pos:position pos:line="10" pos:column="29"/></operator><name><name pos:line="10" pos:column="25">c<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">-&gt;<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="28">list<pos:position pos:line="10" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="34">index_ptr<pos:position pos:line="10" pos:column="43"/></name></expr></argument>)<pos:position pos:line="10" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="45"/></expr_stmt>

	<comment type="block" pos:line="12" pos:column="9">/* Save the next pointer */</comment>
	<expr_stmt><expr><name pos:line="13" pos:column="9">next<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <name><name pos:line="13" pos:column="16">c<pos:position pos:line="13" pos:column="17"/></name><operator pos:line="13" pos:column="17">-&gt;<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="19">list<pos:position pos:line="13" pos:column="23"/></name><operator pos:line="13" pos:column="23">.<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="24">next<pos:position pos:line="13" pos:column="28"/></name></name></expr>;<pos:position pos:line="13" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">list_del<pos:position pos:line="14" pos:column="17"/></name><argument_list pos:line="14" pos:column="17">(<argument><expr><operator pos:line="14" pos:column="18">&amp;<pos:position pos:line="14" pos:column="23"/></operator><name><name pos:line="14" pos:column="19">c<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">-&gt;<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="22">list<pos:position pos:line="14" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="28"/></expr_stmt>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">index_ptr<pos:position pos:line="16" pos:column="22"/></name> <operator pos:line="16" pos:column="23">==<pos:position pos:line="16" pos:column="25"/></operator> <operator pos:line="16" pos:column="26">&amp;<pos:position pos:line="16" pos:column="31"/></operator><name><name pos:line="16" pos:column="27">c<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">-&gt;<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="30">list<pos:position pos:line="16" pos:column="34"/></name></name></expr>)<pos:position pos:line="16" pos:column="35"/></condition><then pos:line="16" pos:column="35"> <block pos:line="16" pos:column="36">{ <comment type="block" pos:line="16" pos:column="38">/* Chain used as index ptr */</comment>

		<comment type="block" pos:line="18" pos:column="17">/* See if its possible to avoid a rebuild, by shifting
		 * to next pointer.  Its possible if the next pointer
		 * is located in the same index bucket.
		 */</comment>
		<expr_stmt><expr><name pos:line="22" pos:column="17">c2<pos:position pos:line="22" pos:column="19"/></name>         <operator pos:line="22" pos:column="28">=<pos:position pos:line="22" pos:column="29"/></operator> <call><name pos:line="22" pos:column="30">list_entry<pos:position pos:line="22" pos:column="40"/></name><argument_list pos:line="22" pos:column="40">(<argument><expr><name pos:line="22" pos:column="41">next<pos:position pos:line="22" pos:column="45"/></name></expr></argument>, <argument><expr pos:line="22" pos:column="47">struct <name pos:line="22" pos:column="54">chain_head<pos:position pos:line="22" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="66">list<pos:position pos:line="22" pos:column="70"/></name></expr></argument>)<pos:position pos:line="22" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="72"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="23" pos:column="17">iptcc_bsearch_chain_index<pos:position pos:line="23" pos:column="42"/></name><argument_list pos:line="23" pos:column="42">(<argument><expr><name><name pos:line="23" pos:column="43">c2<pos:position pos:line="23" pos:column="45"/></name><operator pos:line="23" pos:column="45">-&gt;<pos:position pos:line="23" pos:column="50"/></operator><name pos:line="23" pos:column="47">name<pos:position pos:line="23" pos:column="51"/></name></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="53">&amp;<pos:position pos:line="23" pos:column="58"/></operator><name pos:line="23" pos:column="54">idx2<pos:position pos:line="23" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="60">h<pos:position pos:line="23" pos:column="61"/></name></expr></argument>)<pos:position pos:line="23" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="63"/></expr_stmt>
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><name pos:line="24" pos:column="21">idx<pos:position pos:line="24" pos:column="24"/></name> <operator pos:line="24" pos:column="25">!=<pos:position pos:line="24" pos:column="27"/></operator> <name pos:line="24" pos:column="28">idx2<pos:position pos:line="24" pos:column="32"/></name></expr>)<pos:position pos:line="24" pos:column="33"/></condition><then pos:line="24" pos:column="33"> <block pos:line="24" pos:column="34">{
			<comment type="block" pos:line="25" pos:column="25">/* Rebuild needed */</comment>
			<return pos:line="26" pos:column="25">return <expr><call><name pos:line="26" pos:column="32">iptcc_chain_index_rebuild<pos:position pos:line="26" pos:column="57"/></name><argument_list pos:line="26" pos:column="57">(<argument><expr><name pos:line="26" pos:column="58">h<pos:position pos:line="26" pos:column="59"/></name></expr></argument>)<pos:position pos:line="26" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="61"/></return>
		}<pos:position pos:line="27" pos:column="18"/></block></then> <else pos:line="27" pos:column="19">else <block pos:line="27" pos:column="24">{
			<comment type="block" pos:line="28" pos:column="25">/* Avoiding rebuild */</comment>
			<expr_stmt><expr><call><name pos:line="29" pos:column="25">debug<pos:position pos:line="29" pos:column="30"/></name><argument_list pos:line="29" pos:column="30">(<argument><expr><literal type="string" pos:line="29" pos:column="31">"Update cindex[%d] with next ptr name:[%s]\n"<pos:position pos:line="29" pos:column="76"/></literal></expr></argument>,
			      <argument><expr><name pos:line="30" pos:column="31">idx<pos:position pos:line="30" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="36">c2<pos:position pos:line="30" pos:column="38"/></name><operator pos:line="30" pos:column="38">-&gt;<pos:position pos:line="30" pos:column="43"/></operator><name pos:line="30" pos:column="40">name<pos:position pos:line="30" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="46"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="31" pos:column="25">h<pos:position pos:line="31" pos:column="26"/></name><operator pos:line="31" pos:column="26">-&gt;<pos:position pos:line="31" pos:column="31"/></operator><name pos:line="31" pos:column="28">chain_index<pos:position pos:line="31" pos:column="39"/></name><index pos:line="31" pos:column="39">[<expr><name pos:line="31" pos:column="40">idx<pos:position pos:line="31" pos:column="43"/></name></expr>]<pos:position pos:line="31" pos:column="44"/></index></name><operator pos:line="31" pos:column="44">=<pos:position pos:line="31" pos:column="45"/></operator><name pos:line="31" pos:column="45">c2<pos:position pos:line="31" pos:column="47"/></name></expr>;<pos:position pos:line="31" pos:column="48"/></expr_stmt>
			<return pos:line="32" pos:column="25">return <expr><literal type="number" pos:line="32" pos:column="32">0<pos:position pos:line="32" pos:column="33"/></literal></expr>;<pos:position pos:line="32" pos:column="34"/></return>
		}<pos:position pos:line="33" pos:column="18"/></block></else></if>
	}<pos:position pos:line="34" pos:column="10"/></block></then></if>
	<return pos:line="35" pos:column="9">return <expr><literal type="number" pos:line="35" pos:column="16">0<pos:position pos:line="35" pos:column="17"/></literal></expr>;<pos:position pos:line="35" pos:column="18"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_457_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">ovs_stats_bridge_table_delete_cb<pos:position pos:line="1" pos:column="45"/></name><parameter_list pos:line="1" pos:column="45">(<parameter><decl><type><name pos:line="1" pos:column="46">yajl_val<pos:position pos:line="1" pos:column="54"/></name></type> <name pos:line="1" pos:column="55">jupdates<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list> <block pos:line="1" pos:column="65">{
  <decl_stmt><decl><type><specifier pos:line="2" pos:column="3">const<pos:position pos:line="2" pos:column="8"/></specifier> <name pos:line="2" pos:column="9">char<pos:position pos:line="2" pos:column="13"/></name> <modifier pos:line="2" pos:column="14">*<pos:position pos:line="2" pos:column="15"/></modifier></type><name><name pos:line="2" pos:column="15">path<pos:position pos:line="2" pos:column="19"/></name><index pos:line="2" pos:column="19">[]<pos:position pos:line="2" pos:column="21"/></index></name> <init pos:line="2" pos:column="22">= <expr><block pos:line="2" pos:column="24">{<expr><literal type="string" pos:line="2" pos:column="25">"Bridge"<pos:position pos:line="2" pos:column="33"/></literal></expr>, <expr><name pos:line="2" pos:column="35">NULL<pos:position pos:line="2" pos:column="39"/></name></expr>}<pos:position pos:line="2" pos:column="40"/></block></expr></init></decl>;<pos:position pos:line="2" pos:column="41"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">yajl_val<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">bridges<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><call><name pos:line="3" pos:column="22">yajl_tree_get<pos:position pos:line="3" pos:column="35"/></name><argument_list pos:line="3" pos:column="35">(<argument><expr><name pos:line="3" pos:column="36">jupdates<pos:position pos:line="3" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="46">path<pos:position pos:line="3" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="52">yajl_t_object<pos:position pos:line="3" pos:column="65"/></name></expr></argument>)<pos:position pos:line="3" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="67"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">yajl_val<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">bridge<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">bridges<pos:position pos:line="5" pos:column="14"/></name> <operator pos:line="5" pos:column="15">&amp;&amp;<pos:position pos:line="5" pos:column="25"/></operator> <call><name pos:line="5" pos:column="18">YAJL_IS_OBJECT<pos:position pos:line="5" pos:column="32"/></name><argument_list pos:line="5" pos:column="32">(<argument><expr><name pos:line="5" pos:column="33">bridges<pos:position pos:line="5" pos:column="40"/></name></expr></argument>)<pos:position pos:line="5" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="42"/></condition><then pos:line="5" pos:column="42"> <block pos:line="5" pos:column="43">{
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">pthread_mutex_lock<pos:position pos:line="6" pos:column="23"/></name><argument_list pos:line="6" pos:column="23">(<argument><expr><operator pos:line="6" pos:column="24">&amp;<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="25">g_stats_lock<pos:position pos:line="6" pos:column="37"/></name></expr></argument>)<pos:position pos:line="6" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="39"/></expr_stmt>
    <for pos:line="7" pos:column="5">for <control pos:line="7" pos:column="9">(<init><decl><type><name pos:line="7" pos:column="10">size_t<pos:position pos:line="7" pos:column="16"/></name></type> <name pos:line="7" pos:column="17">i<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><literal type="number" pos:line="7" pos:column="21">0<pos:position pos:line="7" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="23"/></init> <condition><expr><name pos:line="7" pos:column="24">i<pos:position pos:line="7" pos:column="25"/></name> <operator pos:line="7" pos:column="26">&lt;<pos:position pos:line="7" pos:column="30"/></operator> <call><name pos:line="7" pos:column="28">YAJL_GET_OBJECT<pos:position pos:line="7" pos:column="43"/></name><argument_list pos:line="7" pos:column="43">(<argument><expr><name pos:line="7" pos:column="44">bridges<pos:position pos:line="7" pos:column="51"/></name></expr></argument>)<pos:position pos:line="7" pos:column="52"/></argument_list></call><operator pos:line="7" pos:column="52">-&gt;<pos:position pos:line="7" pos:column="57"/></operator><name pos:line="7" pos:column="54">len<pos:position pos:line="7" pos:column="57"/></name></expr>;<pos:position pos:line="7" pos:column="58"/></condition> <incr><expr><name pos:line="7" pos:column="59">i<pos:position pos:line="7" pos:column="60"/></name><operator pos:line="7" pos:column="60">++<pos:position pos:line="7" pos:column="62"/></operator></expr></incr>)<pos:position pos:line="7" pos:column="63"/></control> <block pos:line="7" pos:column="64">{
      <expr_stmt><expr><name pos:line="8" pos:column="7">bridge<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator> <call><name pos:line="8" pos:column="16">YAJL_GET_OBJECT<pos:position pos:line="8" pos:column="31"/></name><argument_list pos:line="8" pos:column="31">(<argument><expr><name pos:line="8" pos:column="32">bridges<pos:position pos:line="8" pos:column="39"/></name></expr></argument>)<pos:position pos:line="8" pos:column="40"/></argument_list></call><operator pos:line="8" pos:column="40">-&gt;<pos:position pos:line="8" pos:column="45"/></operator><name><name pos:line="8" pos:column="42">values<pos:position pos:line="8" pos:column="48"/></name><index pos:line="8" pos:column="48">[<expr><name pos:line="8" pos:column="49">i<pos:position pos:line="8" pos:column="50"/></name></expr>]<pos:position pos:line="8" pos:column="51"/></index></name></expr>;<pos:position pos:line="8" pos:column="52"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="9" pos:column="7">ovs_stats_del_bridge<pos:position pos:line="9" pos:column="27"/></name><argument_list pos:line="9" pos:column="27">(<argument><expr><name pos:line="9" pos:column="28">bridge<pos:position pos:line="9" pos:column="34"/></name></expr></argument>)<pos:position pos:line="9" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">pthread_mutex_unlock<pos:position pos:line="11" pos:column="25"/></name><argument_list pos:line="11" pos:column="25">(<argument><expr><operator pos:line="11" pos:column="26">&amp;<pos:position pos:line="11" pos:column="31"/></operator><name pos:line="11" pos:column="27">g_stats_lock<pos:position pos:line="11" pos:column="39"/></name></expr></argument>)<pos:position pos:line="11" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="41"/></expr_stmt>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>
  <return pos:line="13" pos:column="3">return;<pos:position pos:line="13" pos:column="10"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

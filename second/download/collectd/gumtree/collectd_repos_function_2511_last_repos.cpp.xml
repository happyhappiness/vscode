<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2511_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse_int<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">void<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">payload<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">size_t<pos:position pos:line="1" pos:column="43"/></name></type> <name pos:line="1" pos:column="44">payload_size<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">uint64_t<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">out<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list> <block pos:line="1" pos:column="73">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">uint64_t<pos:position pos:line="2" pos:column="11"/></name></type> <name pos:line="2" pos:column="12">tmp<pos:position pos:line="2" pos:column="15"/></name></decl>;<pos:position pos:line="2" pos:column="16"/></decl_stmt>

  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><name pos:line="4" pos:column="7">payload_size<pos:position pos:line="4" pos:column="19"/></name> <operator pos:line="4" pos:column="20">!=<pos:position pos:line="4" pos:column="22"/></operator> <sizeof pos:line="4" pos:column="23">sizeof<argument_list pos:line="4" pos:column="29">(<argument><expr><name pos:line="4" pos:column="30">tmp<pos:position pos:line="4" pos:column="33"/></name></expr></argument>)<pos:position pos:line="4" pos:column="34"/></argument_list></sizeof></expr>)<pos:position pos:line="4" pos:column="35"/></condition><then pos:line="4" pos:column="35">
    <block type="pseudo"><return pos:line="5" pos:column="5">return <expr><name pos:line="5" pos:column="12">EINVAL<pos:position pos:line="5" pos:column="18"/></name></expr>;<pos:position pos:line="5" pos:column="19"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="7" pos:column="3">memmove<pos:position pos:line="7" pos:column="10"/></name><argument_list pos:line="7" pos:column="10">(<argument><expr><operator pos:line="7" pos:column="11">&amp;<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="12">tmp<pos:position pos:line="7" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="17">payload<pos:position pos:line="7" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="26">sizeof<argument_list pos:line="7" pos:column="32">(<argument><expr><name pos:line="7" pos:column="33">tmp<pos:position pos:line="7" pos:column="36"/></name></expr></argument>)<pos:position pos:line="7" pos:column="37"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="8" pos:column="3">*<pos:position pos:line="8" pos:column="4"/></operator><name pos:line="8" pos:column="4">out<pos:position pos:line="8" pos:column="7"/></name> <operator pos:line="8" pos:column="8">=<pos:position pos:line="8" pos:column="9"/></operator> <call><name pos:line="8" pos:column="10">be64toh<pos:position pos:line="8" pos:column="17"/></name><argument_list pos:line="8" pos:column="17">(<argument><expr><name pos:line="8" pos:column="18">tmp<pos:position pos:line="8" pos:column="21"/></name></expr></argument>)<pos:position pos:line="8" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="23"/></expr_stmt>
  <return pos:line="9" pos:column="3">return <expr><literal type="number" pos:line="9" pos:column="10">0<pos:position pos:line="9" pos:column="11"/></literal></expr>;<pos:position pos:line="9" pos:column="12"/></return>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_377_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">apcups_config<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">oconfig_item_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">ci<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">_Bool<pos:position pos:line="3" pos:column="14"/></name></type> <name pos:line="3" pos:column="15">persistent_conn_set<pos:position pos:line="3" pos:column="34"/></name> <init pos:line="3" pos:column="35">= <expr><literal type="number" pos:line="3" pos:column="37">0<pos:position pos:line="3" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="39"/></decl_stmt>

	<for pos:line="5" pos:column="9">for <control pos:line="5" pos:column="13">(<init><decl><type><name pos:line="5" pos:column="14">int<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">i<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><literal type="number" pos:line="5" pos:column="22">0<pos:position pos:line="5" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="24"/></init> <condition><expr><name pos:line="5" pos:column="25">i<pos:position pos:line="5" pos:column="26"/></name> <operator pos:line="5" pos:column="27">&lt;<pos:position pos:line="5" pos:column="31"/></operator> <name><name pos:line="5" pos:column="29">ci<pos:position pos:line="5" pos:column="31"/></name><operator pos:line="5" pos:column="31">-&gt;<pos:position pos:line="5" pos:column="36"/></operator><name pos:line="5" pos:column="33">children_num<pos:position pos:line="5" pos:column="45"/></name></name></expr>;<pos:position pos:line="5" pos:column="46"/></condition> <incr><expr><name pos:line="5" pos:column="47">i<pos:position pos:line="5" pos:column="48"/></name><operator pos:line="5" pos:column="48">++<pos:position pos:line="5" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="5" pos:column="51"/></control>
	<block pos:line="6" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="7" pos:column="17">oconfig_item_t<pos:position pos:line="7" pos:column="31"/></name> <modifier pos:line="7" pos:column="32">*<pos:position pos:line="7" pos:column="33"/></modifier></type><name pos:line="7" pos:column="33">child<pos:position pos:line="7" pos:column="38"/></name> <init pos:line="7" pos:column="39">= <expr><name><name pos:line="7" pos:column="41">ci<pos:position pos:line="7" pos:column="43"/></name><operator pos:line="7" pos:column="43">-&gt;<pos:position pos:line="7" pos:column="48"/></operator><name pos:line="7" pos:column="45">children<pos:position pos:line="7" pos:column="53"/></name></name> <operator pos:line="7" pos:column="54">+<pos:position pos:line="7" pos:column="55"/></operator> <name pos:line="7" pos:column="56">i<pos:position pos:line="7" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="58"/></decl_stmt>

		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><call><name pos:line="9" pos:column="21">strcasecmp<pos:position pos:line="9" pos:column="31"/></name> <argument_list pos:line="9" pos:column="32">(<argument><expr><name><name pos:line="9" pos:column="33">child<pos:position pos:line="9" pos:column="38"/></name><operator pos:line="9" pos:column="38">-&gt;<pos:position pos:line="9" pos:column="43"/></operator><name pos:line="9" pos:column="40">key<pos:position pos:line="9" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="45">"Host"<pos:position pos:line="9" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="52"/></argument_list></call> <operator pos:line="9" pos:column="53">==<pos:position pos:line="9" pos:column="55"/></operator> <literal type="number" pos:line="9" pos:column="56">0<pos:position pos:line="9" pos:column="57"/></literal></expr>)<pos:position pos:line="9" pos:column="58"/></condition><then pos:line="9" pos:column="58">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="25">cf_util_get_string<pos:position pos:line="10" pos:column="43"/></name> <argument_list pos:line="10" pos:column="44">(<argument><expr><name pos:line="10" pos:column="45">child<pos:position pos:line="10" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="52">&amp;<pos:position pos:line="10" pos:column="57"/></operator><name pos:line="10" pos:column="53">conf_node<pos:position pos:line="10" pos:column="62"/></name></expr></argument>)<pos:position pos:line="10" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="64"/></expr_stmt></block></then>
		<elseif pos:line="11" pos:column="17">else <if pos:line="11" pos:column="22">if <condition pos:line="11" pos:column="25">(<expr><call><name pos:line="11" pos:column="26">strcasecmp<pos:position pos:line="11" pos:column="36"/></name> <argument_list pos:line="11" pos:column="37">(<argument><expr><name><name pos:line="11" pos:column="38">child<pos:position pos:line="11" pos:column="43"/></name><operator pos:line="11" pos:column="43">-&gt;<pos:position pos:line="11" pos:column="48"/></operator><name pos:line="11" pos:column="45">key<pos:position pos:line="11" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="50">"Port"<pos:position pos:line="11" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="57"/></argument_list></call> <operator pos:line="11" pos:column="58">==<pos:position pos:line="11" pos:column="60"/></operator> <literal type="number" pos:line="11" pos:column="61">0<pos:position pos:line="11" pos:column="62"/></literal></expr>)<pos:position pos:line="11" pos:column="63"/></condition><then pos:line="11" pos:column="63">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="25">cf_util_get_service<pos:position pos:line="12" pos:column="44"/></name> <argument_list pos:line="12" pos:column="45">(<argument><expr><name pos:line="12" pos:column="46">child<pos:position pos:line="12" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="53">&amp;<pos:position pos:line="12" pos:column="58"/></operator><name pos:line="12" pos:column="54">conf_service<pos:position pos:line="12" pos:column="66"/></name></expr></argument>)<pos:position pos:line="12" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="68"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="13" pos:column="17">else <if pos:line="13" pos:column="22">if <condition pos:line="13" pos:column="25">(<expr><call><name pos:line="13" pos:column="26">strcasecmp<pos:position pos:line="13" pos:column="36"/></name> <argument_list pos:line="13" pos:column="37">(<argument><expr><name><name pos:line="13" pos:column="38">child<pos:position pos:line="13" pos:column="43"/></name><operator pos:line="13" pos:column="43">-&gt;<pos:position pos:line="13" pos:column="48"/></operator><name pos:line="13" pos:column="45">key<pos:position pos:line="13" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="50">"ReportSeconds"<pos:position pos:line="13" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="66"/></argument_list></call> <operator pos:line="13" pos:column="67">==<pos:position pos:line="13" pos:column="69"/></operator> <literal type="number" pos:line="13" pos:column="70">0<pos:position pos:line="13" pos:column="71"/></literal></expr>)<pos:position pos:line="13" pos:column="72"/></condition><then pos:line="13" pos:column="72">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="25">cf_util_get_boolean<pos:position pos:line="14" pos:column="44"/></name> <argument_list pos:line="14" pos:column="45">(<argument><expr><name pos:line="14" pos:column="46">child<pos:position pos:line="14" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="53">&amp;<pos:position pos:line="14" pos:column="58"/></operator><name pos:line="14" pos:column="54">conf_report_seconds<pos:position pos:line="14" pos:column="73"/></name></expr></argument>)<pos:position pos:line="14" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="75"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="15" pos:column="17">else <if pos:line="15" pos:column="22">if <condition pos:line="15" pos:column="25">(<expr><call><name pos:line="15" pos:column="26">strcasecmp<pos:position pos:line="15" pos:column="36"/></name> <argument_list pos:line="15" pos:column="37">(<argument><expr><name><name pos:line="15" pos:column="38">child<pos:position pos:line="15" pos:column="43"/></name><operator pos:line="15" pos:column="43">-&gt;<pos:position pos:line="15" pos:column="48"/></operator><name pos:line="15" pos:column="45">key<pos:position pos:line="15" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="50">"PersistentConnection"<pos:position pos:line="15" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="73"/></argument_list></call> <operator pos:line="15" pos:column="74">==<pos:position pos:line="15" pos:column="76"/></operator> <literal type="number" pos:line="15" pos:column="77">0<pos:position pos:line="15" pos:column="78"/></literal></expr>)<pos:position pos:line="15" pos:column="79"/></condition><then pos:line="15" pos:column="79"> <block pos:line="15" pos:column="80">{
			<expr_stmt><expr><call><name pos:line="16" pos:column="25">cf_util_get_boolean<pos:position pos:line="16" pos:column="44"/></name> <argument_list pos:line="16" pos:column="45">(<argument><expr><name pos:line="16" pos:column="46">child<pos:position pos:line="16" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="53">&amp;<pos:position pos:line="16" pos:column="58"/></operator><name pos:line="16" pos:column="54">conf_persistent_conn<pos:position pos:line="16" pos:column="74"/></name></expr></argument>)<pos:position pos:line="16" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="76"/></expr_stmt>
			<expr_stmt><expr><name pos:line="17" pos:column="25">persistent_conn_set<pos:position pos:line="17" pos:column="44"/></name> <operator pos:line="17" pos:column="45">=<pos:position pos:line="17" pos:column="46"/></operator> <literal type="number" pos:line="17" pos:column="47">1<pos:position pos:line="17" pos:column="48"/></literal></expr>;<pos:position pos:line="17" pos:column="49"/></expr_stmt>
		}<pos:position pos:line="18" pos:column="18"/></block></then></if></elseif>
		<else pos:line="19" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="25">ERROR<pos:position pos:line="20" pos:column="30"/></name> <argument_list pos:line="20" pos:column="31">(<argument><expr><literal type="string" pos:line="20" pos:column="32">"apcups plugin: Unknown config option \"%s\"."<pos:position pos:line="20" pos:column="78"/></literal></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="80">child<pos:position pos:line="20" pos:column="85"/></name><operator pos:line="20" pos:column="85">-&gt;<pos:position pos:line="20" pos:column="90"/></operator><name pos:line="20" pos:column="87">key<pos:position pos:line="20" pos:column="90"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="92"/></expr_stmt></block></else></if>
	}<pos:position pos:line="21" pos:column="10"/></block></for>

	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">!<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="14">persistent_conn_set<pos:position pos:line="23" pos:column="33"/></name></expr>)<pos:position pos:line="23" pos:column="34"/></condition><then pos:line="23" pos:column="34"> <block pos:line="23" pos:column="35">{
		<decl_stmt><decl><type><name pos:line="24" pos:column="17">double<pos:position pos:line="24" pos:column="23"/></name></type> <name pos:line="24" pos:column="24">interval<pos:position pos:line="24" pos:column="32"/></name> <init pos:line="24" pos:column="33">= <expr><call><name pos:line="24" pos:column="35">CDTIME_T_TO_DOUBLE<pos:position pos:line="24" pos:column="53"/></name><argument_list pos:line="24" pos:column="53">(<argument><expr><call><name pos:line="24" pos:column="54">plugin_get_interval<pos:position pos:line="24" pos:column="73"/></name><argument_list pos:line="24" pos:column="73">()<pos:position pos:line="24" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="24" pos:column="77"/></decl_stmt>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name pos:line="25" pos:column="21">interval<pos:position pos:line="25" pos:column="29"/></name> <operator pos:line="25" pos:column="30">&gt;<pos:position pos:line="25" pos:column="34"/></operator> <name pos:line="25" pos:column="32">APCUPS_SERVER_TIMEOUT<pos:position pos:line="25" pos:column="53"/></name></expr>)<pos:position pos:line="25" pos:column="54"/></condition><then pos:line="25" pos:column="54"> <block pos:line="25" pos:column="55">{
			<expr_stmt><expr><call><name pos:line="26" pos:column="25">NOTICE<pos:position pos:line="26" pos:column="31"/></name> <argument_list pos:line="26" pos:column="32">(<argument><expr><literal type="string" pos:line="26" pos:column="33">"apcups plugin: Plugin poll interval set to %.3f seconds. "<pos:position pos:line="26" pos:column="92"/></literal>
				<literal type="string" pos:line="27" pos:column="33">"Apcupsd NIS socket timeout is %.3f seconds, "<pos:position pos:line="27" pos:column="79"/></literal>
				<literal type="string" pos:line="28" pos:column="33">"PersistentConnection disabled by default."<pos:position pos:line="28" pos:column="76"/></literal></expr></argument>,
				<argument><expr><name pos:line="29" pos:column="33">interval<pos:position pos:line="29" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="43">APCUPS_SERVER_TIMEOUT<pos:position pos:line="29" pos:column="64"/></name></expr></argument>)<pos:position pos:line="29" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="66"/></expr_stmt>
			<expr_stmt><expr><name pos:line="30" pos:column="25">conf_persistent_conn<pos:position pos:line="30" pos:column="45"/></name> <operator pos:line="30" pos:column="46">=<pos:position pos:line="30" pos:column="47"/></operator> <literal type="number" pos:line="30" pos:column="48">0<pos:position pos:line="30" pos:column="49"/></literal></expr>;<pos:position pos:line="30" pos:column="50"/></expr_stmt>
		}<pos:position pos:line="31" pos:column="18"/></block></then></if>
	}<pos:position pos:line="32" pos:column="10"/></block></then></if>

	<return pos:line="34" pos:column="9">return <expr><operator pos:line="34" pos:column="16">(<pos:position pos:line="34" pos:column="17"/></operator><literal type="number" pos:line="34" pos:column="17">0<pos:position pos:line="34" pos:column="18"/></literal><operator pos:line="34" pos:column="18">)<pos:position pos:line="34" pos:column="19"/></operator></expr>;<pos:position pos:line="34" pos:column="20"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

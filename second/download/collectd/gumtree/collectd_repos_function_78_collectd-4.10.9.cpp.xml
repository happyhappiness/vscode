<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_78_collectd-4.10.9.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>
<name pos:line="2" pos:column="1">slist_unbox<pos:position pos:line="2" pos:column="12"/></name> <parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">SList<pos:position pos:line="2" pos:column="19"/></name> <modifier pos:line="2" pos:column="20">*<pos:position pos:line="2" pos:column="21"/></modifier></type><name pos:line="2" pos:column="21">item<pos:position pos:line="2" pos:column="25"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="26"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">void<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">userdata<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><literal type="number" pos:line="4" pos:column="20">0<pos:position pos:line="4" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">item<pos:position pos:line="6" pos:column="11"/></name></expr>)<pos:position pos:line="6" pos:column="12"/></condition><then pos:line="6" pos:column="12">
    <block pos:line="7" pos:column="5">{
      <comment type="block" pos:line="8" pos:column="7">/* Strip the const, because responsibility for this memory
	 passes to the caller on return.  */</comment>
      <expr_stmt><expr><name pos:line="10" pos:column="7">userdata<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <operator pos:line="10" pos:column="18">(<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="19">void<pos:position pos:line="10" pos:column="23"/></name> <operator pos:line="10" pos:column="24">*<pos:position pos:line="10" pos:column="25"/></operator><operator pos:line="10" pos:column="25">)<pos:position pos:line="10" pos:column="26"/></operator> <name><name pos:line="10" pos:column="27">item<pos:position pos:line="10" pos:column="31"/></name><operator pos:line="10" pos:column="31">-&gt;<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="33">userdata<pos:position pos:line="10" pos:column="41"/></name></name></expr>;<pos:position pos:line="10" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="11" pos:column="7">free<pos:position pos:line="11" pos:column="11"/></name> <argument_list pos:line="11" pos:column="12">(<argument><expr><name pos:line="11" pos:column="13">item<pos:position pos:line="11" pos:column="17"/></name></expr></argument>)<pos:position pos:line="11" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

  <return pos:line="14" pos:column="3">return <expr><name pos:line="14" pos:column="10">userdata<pos:position pos:line="14" pos:column="18"/></name></expr>;<pos:position pos:line="14" pos:column="19"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

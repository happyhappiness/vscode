<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_101_collectd-4.4.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">llentry_t<pos:position pos:line="1" pos:column="10"/></name> <modifier pos:line="1" pos:column="11">*<pos:position pos:line="1" pos:column="12"/></modifier></type><name pos:line="1" pos:column="12">llentry_create<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">key<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">void<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">value<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">llentry_t<pos:position pos:line="3" pos:column="18"/></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">e<pos:position pos:line="3" pos:column="21"/></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>

	<expr_stmt><expr><name pos:line="5" pos:column="9">e<pos:position pos:line="5" pos:column="10"/></name> <operator pos:line="5" pos:column="11">=<pos:position pos:line="5" pos:column="12"/></operator> <operator pos:line="5" pos:column="13">(<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">llentry_t<pos:position pos:line="5" pos:column="23"/></name> <operator pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></operator><operator pos:line="5" pos:column="25">)<pos:position pos:line="5" pos:column="26"/></operator> <call><name pos:line="5" pos:column="27">malloc<pos:position pos:line="5" pos:column="33"/></name> <argument_list pos:line="5" pos:column="34">(<argument><expr><sizeof pos:line="5" pos:column="35">sizeof <argument_list pos:line="5" pos:column="42">(<argument><expr><name pos:line="5" pos:column="43">llentry_t<pos:position pos:line="5" pos:column="52"/></name></expr></argument>)<pos:position pos:line="5" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="55"/></expr_stmt>
	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">e<pos:position pos:line="6" pos:column="14"/></name></expr>)<pos:position pos:line="6" pos:column="15"/></condition><then pos:line="6" pos:column="15">
	<block pos:line="7" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="8" pos:column="17">e<pos:position pos:line="8" pos:column="18"/></name><operator pos:line="8" pos:column="18">-&gt;<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="20">key<pos:position pos:line="8" pos:column="23"/></name></name>   <operator pos:line="8" pos:column="26">=<pos:position pos:line="8" pos:column="27"/></operator> <name pos:line="8" pos:column="28">key<pos:position pos:line="8" pos:column="31"/></name></expr>;<pos:position pos:line="8" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="9" pos:column="17">e<pos:position pos:line="9" pos:column="18"/></name><operator pos:line="9" pos:column="18">-&gt;<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="20">value<pos:position pos:line="9" pos:column="25"/></name></name> <operator pos:line="9" pos:column="26">=<pos:position pos:line="9" pos:column="27"/></operator> <name pos:line="9" pos:column="28">value<pos:position pos:line="9" pos:column="33"/></name></expr>;<pos:position pos:line="9" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="10" pos:column="17">e<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">-&gt;<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="20">next<pos:position pos:line="10" pos:column="24"/></name></name>  <operator pos:line="10" pos:column="26">=<pos:position pos:line="10" pos:column="27"/></operator> <name pos:line="10" pos:column="28">NULL<pos:position pos:line="10" pos:column="32"/></name></expr>;<pos:position pos:line="10" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="11" pos:column="10"/></block></then></if>

	<return pos:line="13" pos:column="9">return <expr><operator pos:line="13" pos:column="16">(<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="17">e<pos:position pos:line="13" pos:column="18"/></name><operator pos:line="13" pos:column="18">)<pos:position pos:line="13" pos:column="19"/></operator></expr>;<pos:position pos:line="13" pos:column="20"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

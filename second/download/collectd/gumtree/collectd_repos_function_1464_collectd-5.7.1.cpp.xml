<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1464_collectd-5.7.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">cmd_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">cmd_parse_getval<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">size_t<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">argc<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier><modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">argv<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
                              <parameter><decl><type><name pos:line="2" pos:column="31">cmd_getval_t<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">ret_getval<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>,
                              <parameter><decl><type><specifier pos:line="3" pos:column="31">const<pos:position pos:line="3" pos:column="36"/></specifier> <name pos:line="3" pos:column="37">cmd_options_t<pos:position pos:line="3" pos:column="50"/></name> <modifier pos:line="3" pos:column="51">*<pos:position pos:line="3" pos:column="52"/></modifier></type><name pos:line="3" pos:column="52">opts<pos:position pos:line="3" pos:column="56"/></name></decl></parameter>,
                              <parameter><decl><type><name pos:line="4" pos:column="31">cmd_error_handler_t<pos:position pos:line="4" pos:column="50"/></name> <modifier pos:line="4" pos:column="51">*<pos:position pos:line="4" pos:column="52"/></modifier></type><name pos:line="4" pos:column="52">err<pos:position pos:line="4" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="56"/></parameter_list> <block pos:line="4" pos:column="57">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">identifier_copy<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">status<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">(<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">ret_getval<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">==<pos:position pos:line="8" pos:column="21"/></operator> <name pos:line="8" pos:column="22">NULL<pos:position pos:line="8" pos:column="26"/></name><operator pos:line="8" pos:column="26">)<pos:position pos:line="8" pos:column="27"/></operator> <operator pos:line="8" pos:column="28">||<pos:position pos:line="8" pos:column="30"/></operator> <operator pos:line="8" pos:column="31">(<pos:position pos:line="8" pos:column="32"/></operator><name pos:line="8" pos:column="32">opts<pos:position pos:line="8" pos:column="36"/></name> <operator pos:line="8" pos:column="37">==<pos:position pos:line="8" pos:column="39"/></operator> <name pos:line="8" pos:column="40">NULL<pos:position pos:line="8" pos:column="44"/></name><operator pos:line="8" pos:column="44">)<pos:position pos:line="8" pos:column="45"/></operator></expr>)<pos:position pos:line="8" pos:column="46"/></condition><then pos:line="8" pos:column="46"> <block pos:line="8" pos:column="47">{
    <expr_stmt><expr><name pos:line="9" pos:column="5">errno<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">=<pos:position pos:line="9" pos:column="12"/></operator> <name pos:line="9" pos:column="13">EINVAL<pos:position pos:line="9" pos:column="19"/></name></expr>;<pos:position pos:line="9" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">cmd_error<pos:position pos:line="10" pos:column="14"/></name><argument_list pos:line="10" pos:column="14">(<argument><expr><name pos:line="10" pos:column="15">CMD_ERROR<pos:position pos:line="10" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="26">err<pos:position pos:line="10" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="31">"Invalid arguments to cmd_parse_getval."<pos:position pos:line="10" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="73"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><name pos:line="11" pos:column="13">CMD_ERROR<pos:position pos:line="11" pos:column="22"/></name><operator pos:line="11" pos:column="22">)<pos:position pos:line="11" pos:column="23"/></operator></expr>;<pos:position pos:line="11" pos:column="24"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>

  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">argc<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">!=<pos:position pos:line="14" pos:column="14"/></operator> <literal type="number" pos:line="14" pos:column="15">1<pos:position pos:line="14" pos:column="16"/></literal></expr>)<pos:position pos:line="14" pos:column="17"/></condition><then pos:line="14" pos:column="17"> <block pos:line="14" pos:column="18">{
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">argc<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">==<pos:position pos:line="15" pos:column="16"/></operator> <literal type="number" pos:line="15" pos:column="17">0<pos:position pos:line="15" pos:column="18"/></literal></expr>)<pos:position pos:line="15" pos:column="19"/></condition><then pos:line="15" pos:column="19">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="7">cmd_error<pos:position pos:line="16" pos:column="16"/></name><argument_list pos:line="16" pos:column="16">(<argument><expr><name pos:line="16" pos:column="17">CMD_PARSE_ERROR<pos:position pos:line="16" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="34">err<pos:position pos:line="16" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="39">"Missing identifier."<pos:position pos:line="16" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="62"/></expr_stmt></block></then>
    <else pos:line="17" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="7">cmd_error<pos:position pos:line="18" pos:column="16"/></name><argument_list pos:line="18" pos:column="16">(<argument><expr><name pos:line="18" pos:column="17">CMD_PARSE_ERROR<pos:position pos:line="18" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="34">err<pos:position pos:line="18" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="39">"Garbage after identifier: `%s'."<pos:position pos:line="18" pos:column="72"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="19" pos:column="17">argv<pos:position pos:line="19" pos:column="21"/></name><index pos:line="19" pos:column="21">[<expr><literal type="number" pos:line="19" pos:column="22">1<pos:position pos:line="19" pos:column="23"/></literal></expr>]<pos:position pos:line="19" pos:column="24"/></index></name></expr></argument>)<pos:position pos:line="19" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="26"/></expr_stmt></block></else></if>
    <return pos:line="20" pos:column="5">return <expr><operator pos:line="20" pos:column="12">(<pos:position pos:line="20" pos:column="13"/></operator><name pos:line="20" pos:column="13">CMD_PARSE_ERROR<pos:position pos:line="20" pos:column="28"/></name><operator pos:line="20" pos:column="28">)<pos:position pos:line="20" pos:column="29"/></operator></expr>;<pos:position pos:line="20" pos:column="30"/></return>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="23" pos:column="3">/* parse_identifier() modifies its first argument,
   * returning pointers into it */</comment>
  <expr_stmt><expr><name pos:line="25" pos:column="3">identifier_copy<pos:position pos:line="25" pos:column="18"/></name> <operator pos:line="25" pos:column="19">=<pos:position pos:line="25" pos:column="20"/></operator> <call><name pos:line="25" pos:column="21">sstrdup<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><name><name pos:line="25" pos:column="29">argv<pos:position pos:line="25" pos:column="33"/></name><index pos:line="25" pos:column="33">[<expr><literal type="number" pos:line="25" pos:column="34">0<pos:position pos:line="25" pos:column="35"/></literal></expr>]<pos:position pos:line="25" pos:column="36"/></index></name></expr></argument>)<pos:position pos:line="25" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="38"/></expr_stmt>

  <expr_stmt><expr><name pos:line="27" pos:column="3">status<pos:position pos:line="27" pos:column="9"/></name> <operator pos:line="27" pos:column="10">=<pos:position pos:line="27" pos:column="11"/></operator> <call><name pos:line="27" pos:column="12">parse_identifier<pos:position pos:line="27" pos:column="28"/></name><argument_list pos:line="27" pos:column="28">(
      <argument><expr><name><name pos:line="28" pos:column="7">argv<pos:position pos:line="28" pos:column="11"/></name><index pos:line="28" pos:column="11">[<expr><literal type="number" pos:line="28" pos:column="12">0<pos:position pos:line="28" pos:column="13"/></literal></expr>]<pos:position pos:line="28" pos:column="14"/></index></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="16">&amp;<pos:position pos:line="28" pos:column="21"/></operator><name><name pos:line="28" pos:column="17">ret_getval<pos:position pos:line="28" pos:column="27"/></name><operator pos:line="28" pos:column="27">-&gt;<pos:position pos:line="28" pos:column="32"/></operator><name pos:line="28" pos:column="29">identifier<pos:position pos:line="28" pos:column="39"/></name><operator pos:line="28" pos:column="39">.<pos:position pos:line="28" pos:column="40"/></operator><name pos:line="28" pos:column="40">host<pos:position pos:line="28" pos:column="44"/></name></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="46">&amp;<pos:position pos:line="28" pos:column="51"/></operator><name><name pos:line="28" pos:column="47">ret_getval<pos:position pos:line="28" pos:column="57"/></name><operator pos:line="28" pos:column="57">-&gt;<pos:position pos:line="28" pos:column="62"/></operator><name pos:line="28" pos:column="59">identifier<pos:position pos:line="28" pos:column="69"/></name><operator pos:line="28" pos:column="69">.<pos:position pos:line="28" pos:column="70"/></operator><name pos:line="28" pos:column="70">plugin<pos:position pos:line="28" pos:column="76"/></name></name></expr></argument>,
      <argument><expr><operator pos:line="29" pos:column="7">&amp;<pos:position pos:line="29" pos:column="12"/></operator><name><name pos:line="29" pos:column="8">ret_getval<pos:position pos:line="29" pos:column="18"/></name><operator pos:line="29" pos:column="18">-&gt;<pos:position pos:line="29" pos:column="23"/></operator><name pos:line="29" pos:column="20">identifier<pos:position pos:line="29" pos:column="30"/></name><operator pos:line="29" pos:column="30">.<pos:position pos:line="29" pos:column="31"/></operator><name pos:line="29" pos:column="31">plugin_instance<pos:position pos:line="29" pos:column="46"/></name></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="48">&amp;<pos:position pos:line="29" pos:column="53"/></operator><name><name pos:line="29" pos:column="49">ret_getval<pos:position pos:line="29" pos:column="59"/></name><operator pos:line="29" pos:column="59">-&gt;<pos:position pos:line="29" pos:column="64"/></operator><name pos:line="29" pos:column="61">identifier<pos:position pos:line="29" pos:column="71"/></name><operator pos:line="29" pos:column="71">.<pos:position pos:line="29" pos:column="72"/></operator><name pos:line="29" pos:column="72">type<pos:position pos:line="29" pos:column="76"/></name></name></expr></argument>,
      <argument><expr><operator pos:line="30" pos:column="7">&amp;<pos:position pos:line="30" pos:column="12"/></operator><name><name pos:line="30" pos:column="8">ret_getval<pos:position pos:line="30" pos:column="18"/></name><operator pos:line="30" pos:column="18">-&gt;<pos:position pos:line="30" pos:column="23"/></operator><name pos:line="30" pos:column="20">identifier<pos:position pos:line="30" pos:column="30"/></name><operator pos:line="30" pos:column="30">.<pos:position pos:line="30" pos:column="31"/></operator><name pos:line="30" pos:column="31">type_instance<pos:position pos:line="30" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="46">opts<pos:position pos:line="30" pos:column="50"/></name><operator pos:line="30" pos:column="50">-&gt;<pos:position pos:line="30" pos:column="55"/></operator><name pos:line="30" pos:column="52">identifier_default_host<pos:position pos:line="30" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="77"/></expr_stmt>
  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><name pos:line="31" pos:column="7">status<pos:position pos:line="31" pos:column="13"/></name> <operator pos:line="31" pos:column="14">!=<pos:position pos:line="31" pos:column="16"/></operator> <literal type="number" pos:line="31" pos:column="17">0<pos:position pos:line="31" pos:column="18"/></literal></expr>)<pos:position pos:line="31" pos:column="19"/></condition><then pos:line="31" pos:column="19"> <block pos:line="31" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">DEBUG<pos:position pos:line="32" pos:column="10"/></name><argument_list pos:line="32" pos:column="10">(<argument><expr><literal type="string" pos:line="32" pos:column="11">"cmd_parse_getval: Cannot parse identifier `%s'."<pos:position pos:line="32" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="62">identifier_copy<pos:position pos:line="32" pos:column="77"/></name></expr></argument>)<pos:position pos:line="32" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="79"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">cmd_error<pos:position pos:line="33" pos:column="14"/></name><argument_list pos:line="33" pos:column="14">(<argument><expr><name pos:line="33" pos:column="15">CMD_PARSE_ERROR<pos:position pos:line="33" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="32">err<pos:position pos:line="33" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="37">"Cannot parse identifier `%s'."<pos:position pos:line="33" pos:column="68"/></literal></expr></argument>,
              <argument><expr><name pos:line="34" pos:column="15">identifier_copy<pos:position pos:line="34" pos:column="30"/></name></expr></argument>)<pos:position pos:line="34" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">sfree<pos:position pos:line="35" pos:column="10"/></name><argument_list pos:line="35" pos:column="10">(<argument><expr><name pos:line="35" pos:column="11">identifier_copy<pos:position pos:line="35" pos:column="26"/></name></expr></argument>)<pos:position pos:line="35" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="28"/></expr_stmt>
    <return pos:line="36" pos:column="5">return <expr><operator pos:line="36" pos:column="12">(<pos:position pos:line="36" pos:column="13"/></operator><name pos:line="36" pos:column="13">CMD_PARSE_ERROR<pos:position pos:line="36" pos:column="28"/></name><operator pos:line="36" pos:column="28">)<pos:position pos:line="36" pos:column="29"/></operator></expr>;<pos:position pos:line="36" pos:column="30"/></return>
  }<pos:position pos:line="37" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="39" pos:column="3">ret_getval<pos:position pos:line="39" pos:column="13"/></name><operator pos:line="39" pos:column="13">-&gt;<pos:position pos:line="39" pos:column="18"/></operator><name pos:line="39" pos:column="15">raw_identifier<pos:position pos:line="39" pos:column="29"/></name></name> <operator pos:line="39" pos:column="30">=<pos:position pos:line="39" pos:column="31"/></operator> <name pos:line="39" pos:column="32">identifier_copy<pos:position pos:line="39" pos:column="47"/></name></expr>;<pos:position pos:line="39" pos:column="48"/></expr_stmt>
  <return pos:line="40" pos:column="3">return <expr><operator pos:line="40" pos:column="10">(<pos:position pos:line="40" pos:column="11"/></operator><name pos:line="40" pos:column="11">CMD_OK<pos:position pos:line="40" pos:column="17"/></name><operator pos:line="40" pos:column="17">)<pos:position pos:line="40" pos:column="18"/></operator></expr>;<pos:position pos:line="40" pos:column="19"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

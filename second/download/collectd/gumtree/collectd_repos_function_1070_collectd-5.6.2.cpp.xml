<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1070_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">openvpn_read<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">void<pos:position pos:line="1" pos:column="29"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="30"/></parameter_list> <block pos:line="1" pos:column="31">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">FILE<pos:position pos:line="2" pos:column="7"/></name> <modifier pos:line="2" pos:column="8">*<pos:position pos:line="2" pos:column="9"/></modifier></type><name pos:line="2" pos:column="9">fh<pos:position pos:line="2" pos:column="11"/></name></decl>;<pos:position pos:line="2" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">read<pos:position pos:line="3" pos:column="11"/></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>

  <expr_stmt><expr><name pos:line="5" pos:column="3">read<pos:position pos:line="5" pos:column="7"/></name> <operator pos:line="5" pos:column="8">=<pos:position pos:line="5" pos:column="9"/></operator> <literal type="number" pos:line="5" pos:column="10">0<pos:position pos:line="5" pos:column="11"/></literal></expr>;<pos:position pos:line="5" pos:column="12"/></expr_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">vpn_num<pos:position pos:line="7" pos:column="14"/></name> <operator pos:line="7" pos:column="15">==<pos:position pos:line="7" pos:column="17"/></operator> <literal type="number" pos:line="7" pos:column="18">0<pos:position pos:line="7" pos:column="19"/></literal></expr>)<pos:position pos:line="7" pos:column="20"/></condition><then pos:line="7" pos:column="20">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><literal type="number" pos:line="8" pos:column="13">0<pos:position pos:line="8" pos:column="14"/></literal><operator pos:line="8" pos:column="14">)<pos:position pos:line="8" pos:column="15"/></operator></expr>;<pos:position pos:line="8" pos:column="16"/></return></block></then></if>

  <comment type="block" pos:line="10" pos:column="3">/* call the right read function for every status entry in the list */</comment>
  <for pos:line="11" pos:column="3">for <control pos:line="11" pos:column="7">(<init><decl><type><name pos:line="11" pos:column="8">int<pos:position pos:line="11" pos:column="11"/></name></type> <name pos:line="11" pos:column="12">i<pos:position pos:line="11" pos:column="13"/></name> <init pos:line="11" pos:column="14">= <expr><literal type="number" pos:line="11" pos:column="16">0<pos:position pos:line="11" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="18"/></init> <condition><expr><name pos:line="11" pos:column="19">i<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">&lt;<pos:position pos:line="11" pos:column="25"/></operator> <name pos:line="11" pos:column="23">vpn_num<pos:position pos:line="11" pos:column="30"/></name></expr>;<pos:position pos:line="11" pos:column="31"/></condition> <incr><expr><name pos:line="11" pos:column="32">i<pos:position pos:line="11" pos:column="33"/></name><operator pos:line="11" pos:column="33">++<pos:position pos:line="11" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="36"/></control> <block pos:line="11" pos:column="37">{
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">vpn_read<pos:position pos:line="12" pos:column="17"/></name> <init pos:line="12" pos:column="18">= <expr><literal type="number" pos:line="12" pos:column="20">0<pos:position pos:line="12" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="22"/></decl_stmt>

    <expr_stmt><expr><name pos:line="14" pos:column="5">fh<pos:position pos:line="14" pos:column="7"/></name> <operator pos:line="14" pos:column="8">=<pos:position pos:line="14" pos:column="9"/></operator> <call><name pos:line="14" pos:column="10">fopen<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><name><name pos:line="14" pos:column="16">vpn_list<pos:position pos:line="14" pos:column="24"/></name><index pos:line="14" pos:column="24">[<expr><name pos:line="14" pos:column="25">i<pos:position pos:line="14" pos:column="26"/></name></expr>]<pos:position pos:line="14" pos:column="27"/></index></name><operator pos:line="14" pos:column="27">-&gt;<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="29">file<pos:position pos:line="14" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="35">"r"<pos:position pos:line="14" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="40"/></expr_stmt>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">fh<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">==<pos:position pos:line="15" pos:column="14"/></operator> <name pos:line="15" pos:column="15">NULL<pos:position pos:line="15" pos:column="19"/></name></expr>)<pos:position pos:line="15" pos:column="20"/></condition><then pos:line="15" pos:column="20"> <block pos:line="15" pos:column="21">{
      <decl_stmt><decl><type><name pos:line="16" pos:column="7">char<pos:position pos:line="16" pos:column="11"/></name></type> <name><name pos:line="16" pos:column="12">errbuf<pos:position pos:line="16" pos:column="18"/></name><index pos:line="16" pos:column="18">[<expr><literal type="number" pos:line="16" pos:column="19">1024<pos:position pos:line="16" pos:column="23"/></literal></expr>]<pos:position pos:line="16" pos:column="24"/></index></name></decl>;<pos:position pos:line="16" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="17" pos:column="7">WARNING<pos:position pos:line="17" pos:column="14"/></name><argument_list pos:line="17" pos:column="14">(<argument><expr><literal type="string" pos:line="17" pos:column="15">"openvpn plugin: fopen(%s) failed: %s"<pos:position pos:line="17" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="55">vpn_list<pos:position pos:line="17" pos:column="63"/></name><index pos:line="17" pos:column="63">[<expr><name pos:line="17" pos:column="64">i<pos:position pos:line="17" pos:column="65"/></name></expr>]<pos:position pos:line="17" pos:column="66"/></index></name><operator pos:line="17" pos:column="66">-&gt;<pos:position pos:line="17" pos:column="71"/></operator><name pos:line="17" pos:column="68">file<pos:position pos:line="17" pos:column="72"/></name></expr></argument>,
              <argument><expr><call><name pos:line="18" pos:column="15">sstrerror<pos:position pos:line="18" pos:column="24"/></name><argument_list pos:line="18" pos:column="24">(<argument><expr><name pos:line="18" pos:column="25">errno<pos:position pos:line="18" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="32">errbuf<pos:position pos:line="18" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="40">sizeof<argument_list pos:line="18" pos:column="46">(<argument><expr><name pos:line="18" pos:column="47">errbuf<pos:position pos:line="18" pos:column="53"/></name></expr></argument>)<pos:position pos:line="18" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="57"/></expr_stmt>

      <continue pos:line="20" pos:column="7">continue;<pos:position pos:line="20" pos:column="16"/></continue>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <switch pos:line="23" pos:column="5">switch <condition pos:line="23" pos:column="12">(<expr><name><name pos:line="23" pos:column="13">vpn_list<pos:position pos:line="23" pos:column="21"/></name><index pos:line="23" pos:column="21">[<expr><name pos:line="23" pos:column="22">i<pos:position pos:line="23" pos:column="23"/></name></expr>]<pos:position pos:line="23" pos:column="24"/></index></name><operator pos:line="23" pos:column="24">-&gt;<pos:position pos:line="23" pos:column="29"/></operator><name pos:line="23" pos:column="26">version<pos:position pos:line="23" pos:column="33"/></name></expr>)<pos:position pos:line="23" pos:column="34"/></condition> <block pos:line="23" pos:column="35">{
    <case pos:line="24" pos:column="5">case <expr><name pos:line="24" pos:column="10">SINGLE<pos:position pos:line="24" pos:column="16"/></name></expr>:<pos:position pos:line="24" pos:column="17"/></case>
      <expr_stmt><expr><name pos:line="25" pos:column="7">vpn_read<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <call><name pos:line="25" pos:column="18">single_read<pos:position pos:line="25" pos:column="29"/></name><argument_list pos:line="25" pos:column="29">(<argument><expr><name><name pos:line="25" pos:column="30">vpn_list<pos:position pos:line="25" pos:column="38"/></name><index pos:line="25" pos:column="38">[<expr><name pos:line="25" pos:column="39">i<pos:position pos:line="25" pos:column="40"/></name></expr>]<pos:position pos:line="25" pos:column="41"/></index></name><operator pos:line="25" pos:column="41">-&gt;<pos:position pos:line="25" pos:column="46"/></operator><name pos:line="25" pos:column="43">name<pos:position pos:line="25" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="49">fh<pos:position pos:line="25" pos:column="51"/></name></expr></argument>)<pos:position pos:line="25" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="53"/></expr_stmt>
      <break pos:line="26" pos:column="7">break;<pos:position pos:line="26" pos:column="13"/></break>

    <case pos:line="28" pos:column="5">case <expr><name pos:line="28" pos:column="10">MULTI1<pos:position pos:line="28" pos:column="16"/></name></expr>:<pos:position pos:line="28" pos:column="17"/></case>
      <expr_stmt><expr><name pos:line="29" pos:column="7">vpn_read<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">=<pos:position pos:line="29" pos:column="17"/></operator> <call><name pos:line="29" pos:column="18">multi1_read<pos:position pos:line="29" pos:column="29"/></name><argument_list pos:line="29" pos:column="29">(<argument><expr><name><name pos:line="29" pos:column="30">vpn_list<pos:position pos:line="29" pos:column="38"/></name><index pos:line="29" pos:column="38">[<expr><name pos:line="29" pos:column="39">i<pos:position pos:line="29" pos:column="40"/></name></expr>]<pos:position pos:line="29" pos:column="41"/></index></name><operator pos:line="29" pos:column="41">-&gt;<pos:position pos:line="29" pos:column="46"/></operator><name pos:line="29" pos:column="43">name<pos:position pos:line="29" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="49">fh<pos:position pos:line="29" pos:column="51"/></name></expr></argument>)<pos:position pos:line="29" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="53"/></expr_stmt>
      <break pos:line="30" pos:column="7">break;<pos:position pos:line="30" pos:column="13"/></break>

    <case pos:line="32" pos:column="5">case <expr><name pos:line="32" pos:column="10">MULTI2<pos:position pos:line="32" pos:column="16"/></name></expr>:<pos:position pos:line="32" pos:column="17"/></case>
      <expr_stmt><expr><name pos:line="33" pos:column="7">vpn_read<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">=<pos:position pos:line="33" pos:column="17"/></operator> <call><name pos:line="33" pos:column="18">multi2_read<pos:position pos:line="33" pos:column="29"/></name><argument_list pos:line="33" pos:column="29">(<argument><expr><name><name pos:line="33" pos:column="30">vpn_list<pos:position pos:line="33" pos:column="38"/></name><index pos:line="33" pos:column="38">[<expr><name pos:line="33" pos:column="39">i<pos:position pos:line="33" pos:column="40"/></name></expr>]<pos:position pos:line="33" pos:column="41"/></index></name><operator pos:line="33" pos:column="41">-&gt;<pos:position pos:line="33" pos:column="46"/></operator><name pos:line="33" pos:column="43">name<pos:position pos:line="33" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="49">fh<pos:position pos:line="33" pos:column="51"/></name></expr></argument>)<pos:position pos:line="33" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="53"/></expr_stmt>
      <break pos:line="34" pos:column="7">break;<pos:position pos:line="34" pos:column="13"/></break>

    <case pos:line="36" pos:column="5">case <expr><name pos:line="36" pos:column="10">MULTI3<pos:position pos:line="36" pos:column="16"/></name></expr>:<pos:position pos:line="36" pos:column="17"/></case>
      <expr_stmt><expr><name pos:line="37" pos:column="7">vpn_read<pos:position pos:line="37" pos:column="15"/></name> <operator pos:line="37" pos:column="16">=<pos:position pos:line="37" pos:column="17"/></operator> <call><name pos:line="37" pos:column="18">multi3_read<pos:position pos:line="37" pos:column="29"/></name><argument_list pos:line="37" pos:column="29">(<argument><expr><name><name pos:line="37" pos:column="30">vpn_list<pos:position pos:line="37" pos:column="38"/></name><index pos:line="37" pos:column="38">[<expr><name pos:line="37" pos:column="39">i<pos:position pos:line="37" pos:column="40"/></name></expr>]<pos:position pos:line="37" pos:column="41"/></index></name><operator pos:line="37" pos:column="41">-&gt;<pos:position pos:line="37" pos:column="46"/></operator><name pos:line="37" pos:column="43">name<pos:position pos:line="37" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="49">fh<pos:position pos:line="37" pos:column="51"/></name></expr></argument>)<pos:position pos:line="37" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="53"/></expr_stmt>
      <break pos:line="38" pos:column="7">break;<pos:position pos:line="38" pos:column="13"/></break>

    <case pos:line="40" pos:column="5">case <expr><name pos:line="40" pos:column="10">MULTI4<pos:position pos:line="40" pos:column="16"/></name></expr>:<pos:position pos:line="40" pos:column="17"/></case>
      <expr_stmt><expr><name pos:line="41" pos:column="7">vpn_read<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">=<pos:position pos:line="41" pos:column="17"/></operator> <call><name pos:line="41" pos:column="18">multi4_read<pos:position pos:line="41" pos:column="29"/></name><argument_list pos:line="41" pos:column="29">(<argument><expr><name><name pos:line="41" pos:column="30">vpn_list<pos:position pos:line="41" pos:column="38"/></name><index pos:line="41" pos:column="38">[<expr><name pos:line="41" pos:column="39">i<pos:position pos:line="41" pos:column="40"/></name></expr>]<pos:position pos:line="41" pos:column="41"/></index></name><operator pos:line="41" pos:column="41">-&gt;<pos:position pos:line="41" pos:column="46"/></operator><name pos:line="41" pos:column="43">name<pos:position pos:line="41" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="49">fh<pos:position pos:line="41" pos:column="51"/></name></expr></argument>)<pos:position pos:line="41" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="53"/></expr_stmt>
      <break pos:line="42" pos:column="7">break;<pos:position pos:line="42" pos:column="13"/></break>
    }<pos:position pos:line="43" pos:column="6"/></block></switch>

    <expr_stmt><expr><call><name pos:line="45" pos:column="5">fclose<pos:position pos:line="45" pos:column="11"/></name><argument_list pos:line="45" pos:column="11">(<argument><expr><name pos:line="45" pos:column="12">fh<pos:position pos:line="45" pos:column="14"/></name></expr></argument>)<pos:position pos:line="45" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name pos:line="46" pos:column="5">read<pos:position pos:line="46" pos:column="9"/></name> <operator pos:line="46" pos:column="10">+=<pos:position pos:line="46" pos:column="12"/></operator> <name pos:line="46" pos:column="13">vpn_read<pos:position pos:line="46" pos:column="21"/></name></expr>;<pos:position pos:line="46" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="47" pos:column="4"/></block></for>

  <return pos:line="49" pos:column="3">return <expr><operator pos:line="49" pos:column="10">(<pos:position pos:line="49" pos:column="11"/></operator><ternary><condition><expr><name pos:line="49" pos:column="11">read<pos:position pos:line="49" pos:column="15"/></name></expr> ?<pos:position pos:line="49" pos:column="17"/></condition><then pos:line="49" pos:column="17"> <expr><literal type="number" pos:line="49" pos:column="18">0<pos:position pos:line="49" pos:column="19"/></literal></expr> <pos:position pos:line="49" pos:column="20"/></then><else pos:line="49" pos:column="20">: <expr><operator pos:line="49" pos:column="22">-<pos:position pos:line="49" pos:column="23"/></operator><literal type="number" pos:line="49" pos:column="23">1<pos:position pos:line="49" pos:column="24"/></literal></expr></else></ternary><operator pos:line="49" pos:column="24">)<pos:position pos:line="49" pos:column="25"/></operator></expr>;<pos:position pos:line="49" pos:column="26"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1234_collectd-4.7.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">plugin_unregister_read<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">name<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list> <comment type="block" pos:line="1" pos:column="47">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">llentry_t<pos:position pos:line="3" pos:column="18"/></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">le<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">read_func_t<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">rf<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">name<pos:position pos:line="6" pos:column="17"/></name> <operator pos:line="6" pos:column="18">==<pos:position pos:line="6" pos:column="20"/></operator> <name pos:line="6" pos:column="21">NULL<pos:position pos:line="6" pos:column="25"/></name></expr>)<pos:position pos:line="6" pos:column="26"/></condition><then pos:line="6" pos:column="26">
		<block type="pseudo"><return pos:line="7" pos:column="17">return <expr><operator pos:line="7" pos:column="24">(<pos:position pos:line="7" pos:column="25"/></operator><operator pos:line="7" pos:column="25">-<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="26">ENOENT<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">)<pos:position pos:line="7" pos:column="33"/></operator></expr>;<pos:position pos:line="7" pos:column="34"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="9" pos:column="9">pthread_mutex_lock<pos:position pos:line="9" pos:column="27"/></name> <argument_list pos:line="9" pos:column="28">(<argument><expr><operator pos:line="9" pos:column="29">&amp;<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="30">read_lock<pos:position pos:line="9" pos:column="39"/></name></expr></argument>)<pos:position pos:line="9" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="41"/></expr_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">read_list<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">==<pos:position pos:line="11" pos:column="25"/></operator> <name pos:line="11" pos:column="26">NULL<pos:position pos:line="11" pos:column="30"/></name></expr>)<pos:position pos:line="11" pos:column="31"/></condition><then pos:line="11" pos:column="31">
	<block pos:line="12" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">pthread_mutex_unlock<pos:position pos:line="13" pos:column="37"/></name> <argument_list pos:line="13" pos:column="38">(<argument><expr><operator pos:line="13" pos:column="39">&amp;<pos:position pos:line="13" pos:column="44"/></operator><name pos:line="13" pos:column="40">read_lock<pos:position pos:line="13" pos:column="49"/></name></expr></argument>)<pos:position pos:line="13" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="51"/></expr_stmt>
		<return pos:line="14" pos:column="17">return <expr><operator pos:line="14" pos:column="24">(<pos:position pos:line="14" pos:column="25"/></operator><operator pos:line="14" pos:column="25">-<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="26">ENOENT<pos:position pos:line="14" pos:column="32"/></name><operator pos:line="14" pos:column="32">)<pos:position pos:line="14" pos:column="33"/></operator></expr>;<pos:position pos:line="14" pos:column="34"/></return>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="17" pos:column="9">le<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <call><name pos:line="17" pos:column="14">llist_search<pos:position pos:line="17" pos:column="26"/></name> <argument_list pos:line="17" pos:column="27">(<argument><expr><name pos:line="17" pos:column="28">read_list<pos:position pos:line="17" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="39">name<pos:position pos:line="17" pos:column="43"/></name></expr></argument>)<pos:position pos:line="17" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="45"/></expr_stmt>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">le<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">==<pos:position pos:line="18" pos:column="18"/></operator> <name pos:line="18" pos:column="19">NULL<pos:position pos:line="18" pos:column="23"/></name></expr>)<pos:position pos:line="18" pos:column="24"/></condition><then pos:line="18" pos:column="24">
	<block pos:line="19" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">pthread_mutex_unlock<pos:position pos:line="20" pos:column="37"/></name> <argument_list pos:line="20" pos:column="38">(<argument><expr><operator pos:line="20" pos:column="39">&amp;<pos:position pos:line="20" pos:column="44"/></operator><name pos:line="20" pos:column="40">read_lock<pos:position pos:line="20" pos:column="49"/></name></expr></argument>)<pos:position pos:line="20" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">WARNING<pos:position pos:line="21" pos:column="24"/></name> <argument_list pos:line="21" pos:column="25">(<argument><expr><literal type="string" pos:line="21" pos:column="26">"plugin_unregister_read: No such read function: %s"<pos:position pos:line="21" pos:column="77"/></literal></expr></argument>,
				<argument><expr><name pos:line="22" pos:column="33">name<pos:position pos:line="22" pos:column="37"/></name></expr></argument>)<pos:position pos:line="22" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="39"/></expr_stmt>
		<return pos:line="23" pos:column="17">return <expr><operator pos:line="23" pos:column="24">(<pos:position pos:line="23" pos:column="25"/></operator><operator pos:line="23" pos:column="25">-<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="26">ENOENT<pos:position pos:line="23" pos:column="32"/></name><operator pos:line="23" pos:column="32">)<pos:position pos:line="23" pos:column="33"/></operator></expr>;<pos:position pos:line="23" pos:column="34"/></return>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="26" pos:column="9">llist_remove<pos:position pos:line="26" pos:column="21"/></name> <argument_list pos:line="26" pos:column="22">(<argument><expr><name pos:line="26" pos:column="23">read_list<pos:position pos:line="26" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="34">le<pos:position pos:line="26" pos:column="36"/></name></expr></argument>)<pos:position pos:line="26" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="38"/></expr_stmt>

	<expr_stmt><expr><name pos:line="28" pos:column="9">rf<pos:position pos:line="28" pos:column="11"/></name> <operator pos:line="28" pos:column="12">=<pos:position pos:line="28" pos:column="13"/></operator> <name><name pos:line="28" pos:column="14">le<pos:position pos:line="28" pos:column="16"/></name><operator pos:line="28" pos:column="16">-&gt;<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="18">value<pos:position pos:line="28" pos:column="23"/></name></name></expr>;<pos:position pos:line="28" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">assert<pos:position pos:line="29" pos:column="15"/></name> <argument_list pos:line="29" pos:column="16">(<argument><expr><name pos:line="29" pos:column="17">rf<pos:position pos:line="29" pos:column="19"/></name> <operator pos:line="29" pos:column="20">!=<pos:position pos:line="29" pos:column="22"/></operator> <name pos:line="29" pos:column="23">NULL<pos:position pos:line="29" pos:column="27"/></name></expr></argument>)<pos:position pos:line="29" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="30" pos:column="9">rf<pos:position pos:line="30" pos:column="11"/></name><operator pos:line="30" pos:column="11">-&gt;<pos:position pos:line="30" pos:column="16"/></operator><name pos:line="30" pos:column="13">rf_type<pos:position pos:line="30" pos:column="20"/></name></name> <operator pos:line="30" pos:column="21">=<pos:position pos:line="30" pos:column="22"/></operator> <name pos:line="30" pos:column="23">RF_REMOVE<pos:position pos:line="30" pos:column="32"/></name></expr>;<pos:position pos:line="30" pos:column="33"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="32" pos:column="9">pthread_mutex_unlock<pos:position pos:line="32" pos:column="29"/></name> <argument_list pos:line="32" pos:column="30">(<argument><expr><operator pos:line="32" pos:column="31">&amp;<pos:position pos:line="32" pos:column="36"/></operator><name pos:line="32" pos:column="32">read_lock<pos:position pos:line="32" pos:column="41"/></name></expr></argument>)<pos:position pos:line="32" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="43"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="34" pos:column="9">llentry_destroy<pos:position pos:line="34" pos:column="24"/></name> <argument_list pos:line="34" pos:column="25">(<argument><expr><name pos:line="34" pos:column="26">le<pos:position pos:line="34" pos:column="28"/></name></expr></argument>)<pos:position pos:line="34" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="30"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="36" pos:column="9">DEBUG<pos:position pos:line="36" pos:column="14"/></name> <argument_list pos:line="36" pos:column="15">(<argument><expr><literal type="string" pos:line="36" pos:column="16">"plugin_unregister_read: Marked `%s' for removal."<pos:position pos:line="36" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="68">name<pos:position pos:line="36" pos:column="72"/></name></expr></argument>)<pos:position pos:line="36" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="74"/></expr_stmt>

	<return pos:line="38" pos:column="9">return <expr><operator pos:line="38" pos:column="16">(<pos:position pos:line="38" pos:column="17"/></operator><literal type="number" pos:line="38" pos:column="17">0<pos:position pos:line="38" pos:column="18"/></literal><operator pos:line="38" pos:column="18">)<pos:position pos:line="38" pos:column="19"/></operator></expr>;<pos:position pos:line="38" pos:column="20"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

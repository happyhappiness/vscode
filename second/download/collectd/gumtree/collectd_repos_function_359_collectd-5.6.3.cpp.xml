<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_359_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">camqp_subscribe_thread<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">void<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">user_data<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list> <comment type="block" pos:line="1" pos:column="54">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">camqp_config_t<pos:position pos:line="3" pos:column="17"/></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">conf<pos:position pos:line="3" pos:column="23"/></name> <init pos:line="3" pos:column="24">= <expr><name pos:line="3" pos:column="26">user_data<pos:position pos:line="3" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">cdtime_t<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">interval<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><call><name pos:line="6" pos:column="23">plugin_get_interval<pos:position pos:line="6" pos:column="42"/></name><argument_list pos:line="6" pos:column="42">()<pos:position pos:line="6" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="45"/></decl_stmt>

  <while pos:line="8" pos:column="3">while <condition pos:line="8" pos:column="9">(<expr><name pos:line="8" pos:column="10">subscriber_threads_running<pos:position pos:line="8" pos:column="36"/></name></expr>)<pos:position pos:line="8" pos:column="37"/></condition> <block pos:line="8" pos:column="38">{
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">amqp_frame_t<pos:position pos:line="9" pos:column="17"/></name></type> <name pos:line="9" pos:column="18">frame<pos:position pos:line="9" pos:column="23"/></name></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>

    <expr_stmt><expr><name pos:line="11" pos:column="5">status<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <call><name pos:line="11" pos:column="14">camqp_connect<pos:position pos:line="11" pos:column="27"/></name><argument_list pos:line="11" pos:column="27">(<argument><expr><name pos:line="11" pos:column="28">conf<pos:position pos:line="11" pos:column="32"/></name></expr></argument>)<pos:position pos:line="11" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="34"/></expr_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">status<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">!=<pos:position pos:line="12" pos:column="18"/></operator> <literal type="number" pos:line="12" pos:column="19">0<pos:position pos:line="12" pos:column="20"/></literal></expr>)<pos:position pos:line="12" pos:column="21"/></condition><then pos:line="12" pos:column="21"> <block pos:line="12" pos:column="22">{
      <decl_stmt><decl><type><name><name pos:line="13" pos:column="7">struct<pos:position pos:line="13" pos:column="13"/></name> <name pos:line="13" pos:column="14">timespec<pos:position pos:line="13" pos:column="22"/></name></name></type> <name pos:line="13" pos:column="23">ts_interval<pos:position pos:line="13" pos:column="34"/></name></decl>;<pos:position pos:line="13" pos:column="35"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="14" pos:column="7">ERROR<pos:position pos:line="14" pos:column="12"/></name><argument_list pos:line="14" pos:column="12">(<argument><expr><literal type="string" pos:line="14" pos:column="13">"amqp plugin: camqp_connect failed. "<pos:position pos:line="14" pos:column="50"/></literal>
            <literal type="string" pos:line="15" pos:column="13">"Will sleep for %.3f seconds."<pos:position pos:line="15" pos:column="43"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="16" pos:column="13">CDTIME_T_TO_DOUBLE<pos:position pos:line="16" pos:column="31"/></name><argument_list pos:line="16" pos:column="31">(<argument><expr><name pos:line="16" pos:column="32">interval<pos:position pos:line="16" pos:column="40"/></name></expr></argument>)<pos:position pos:line="16" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="43"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="17" pos:column="7">CDTIME_T_TO_TIMESPEC<pos:position pos:line="17" pos:column="27"/></name><argument_list pos:line="17" pos:column="27">(<argument><expr><name pos:line="17" pos:column="28">interval<pos:position pos:line="17" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="38">&amp;<pos:position pos:line="17" pos:column="43"/></operator><name pos:line="17" pos:column="39">ts_interval<pos:position pos:line="17" pos:column="50"/></name></expr></argument>)<pos:position pos:line="17" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="52"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="18" pos:column="7">nanosleep<pos:position pos:line="18" pos:column="16"/></name><argument_list pos:line="18" pos:column="16">(<argument><expr><operator pos:line="18" pos:column="17">&amp;<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="18">ts_interval<pos:position pos:line="18" pos:column="29"/></name></expr></argument>, <comment type="block" pos:line="18" pos:column="31">/* remaining = */</comment> <argument><expr><name pos:line="18" pos:column="49">NULL<pos:position pos:line="18" pos:column="53"/></name></expr></argument>)<pos:position pos:line="18" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="55"/></expr_stmt>
      <continue pos:line="19" pos:column="7">continue;<pos:position pos:line="19" pos:column="16"/></continue>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="22" pos:column="5">status<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <call><name pos:line="22" pos:column="14">amqp_simple_wait_frame<pos:position pos:line="22" pos:column="36"/></name><argument_list pos:line="22" pos:column="36">(<argument><expr><name><name pos:line="22" pos:column="37">conf<pos:position pos:line="22" pos:column="41"/></name><operator pos:line="22" pos:column="41">-&gt;<pos:position pos:line="22" pos:column="46"/></operator><name pos:line="22" pos:column="43">connection<pos:position pos:line="22" pos:column="53"/></name></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="55">&amp;<pos:position pos:line="22" pos:column="60"/></operator><name pos:line="22" pos:column="56">frame<pos:position pos:line="22" pos:column="61"/></name></expr></argument>)<pos:position pos:line="22" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="63"/></expr_stmt>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name pos:line="23" pos:column="9">status<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">&lt;<pos:position pos:line="23" pos:column="20"/></operator> <literal type="number" pos:line="23" pos:column="18">0<pos:position pos:line="23" pos:column="19"/></literal></expr>)<pos:position pos:line="23" pos:column="20"/></condition><then pos:line="23" pos:column="20"> <block pos:line="23" pos:column="21">{
      <decl_stmt><decl><type><name><name pos:line="24" pos:column="7">struct<pos:position pos:line="24" pos:column="13"/></name> <name pos:line="24" pos:column="14">timespec<pos:position pos:line="24" pos:column="22"/></name></name></type> <name pos:line="24" pos:column="23">ts_interval<pos:position pos:line="24" pos:column="34"/></name></decl>;<pos:position pos:line="24" pos:column="35"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="25" pos:column="7">ERROR<pos:position pos:line="25" pos:column="12"/></name><argument_list pos:line="25" pos:column="12">(<argument><expr><literal type="string" pos:line="25" pos:column="13">"amqp plugin: amqp_simple_wait_frame failed. "<pos:position pos:line="25" pos:column="59"/></literal>
            <literal type="string" pos:line="26" pos:column="13">"Will sleep for %.3f seconds."<pos:position pos:line="26" pos:column="43"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="27" pos:column="13">CDTIME_T_TO_DOUBLE<pos:position pos:line="27" pos:column="31"/></name><argument_list pos:line="27" pos:column="31">(<argument><expr><name pos:line="27" pos:column="32">interval<pos:position pos:line="27" pos:column="40"/></name></expr></argument>)<pos:position pos:line="27" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="43"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="28" pos:column="7">camqp_close_connection<pos:position pos:line="28" pos:column="29"/></name><argument_list pos:line="28" pos:column="29">(<argument><expr><name pos:line="28" pos:column="30">conf<pos:position pos:line="28" pos:column="34"/></name></expr></argument>)<pos:position pos:line="28" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="29" pos:column="7">CDTIME_T_TO_TIMESPEC<pos:position pos:line="29" pos:column="27"/></name><argument_list pos:line="29" pos:column="27">(<argument><expr><name pos:line="29" pos:column="28">interval<pos:position pos:line="29" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="38">&amp;<pos:position pos:line="29" pos:column="43"/></operator><name pos:line="29" pos:column="39">ts_interval<pos:position pos:line="29" pos:column="50"/></name></expr></argument>)<pos:position pos:line="29" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="52"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="30" pos:column="7">nanosleep<pos:position pos:line="30" pos:column="16"/></name><argument_list pos:line="30" pos:column="16">(<argument><expr><operator pos:line="30" pos:column="17">&amp;<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="18">ts_interval<pos:position pos:line="30" pos:column="29"/></name></expr></argument>, <comment type="block" pos:line="30" pos:column="31">/* remaining = */</comment> <argument><expr><name pos:line="30" pos:column="49">NULL<pos:position pos:line="30" pos:column="53"/></name></expr></argument>)<pos:position pos:line="30" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="55"/></expr_stmt>
      <continue pos:line="31" pos:column="7">continue;<pos:position pos:line="31" pos:column="16"/></continue>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name><name pos:line="34" pos:column="9">frame<pos:position pos:line="34" pos:column="14"/></name><operator pos:line="34" pos:column="14">.<pos:position pos:line="34" pos:column="15"/></operator><name pos:line="34" pos:column="15">frame_type<pos:position pos:line="34" pos:column="25"/></name></name> <operator pos:line="34" pos:column="26">!=<pos:position pos:line="34" pos:column="28"/></operator> <name pos:line="34" pos:column="29">AMQP_FRAME_METHOD<pos:position pos:line="34" pos:column="46"/></name></expr>)<pos:position pos:line="34" pos:column="47"/></condition><then pos:line="34" pos:column="47"> <block pos:line="34" pos:column="48">{
      <expr_stmt><expr><call><name pos:line="35" pos:column="7">DEBUG<pos:position pos:line="35" pos:column="12"/></name><argument_list pos:line="35" pos:column="12">(<argument><expr><literal type="string" pos:line="35" pos:column="13">"amqp plugin: Unexpected frame type: %#"<pos:position pos:line="35" pos:column="53"/></literal> <name pos:line="35" pos:column="54">PRIx8<pos:position pos:line="35" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="61">frame<pos:position pos:line="35" pos:column="66"/></name><operator pos:line="35" pos:column="66">.<pos:position pos:line="35" pos:column="67"/></operator><name pos:line="35" pos:column="67">frame_type<pos:position pos:line="35" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="79"/></expr_stmt>
      <continue pos:line="36" pos:column="7">continue;<pos:position pos:line="36" pos:column="16"/></continue>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>

    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name><name pos:line="39" pos:column="9">frame<pos:position pos:line="39" pos:column="14"/></name><operator pos:line="39" pos:column="14">.<pos:position pos:line="39" pos:column="15"/></operator><name pos:line="39" pos:column="15">payload<pos:position pos:line="39" pos:column="22"/></name><operator pos:line="39" pos:column="22">.<pos:position pos:line="39" pos:column="23"/></operator><name pos:line="39" pos:column="23">method<pos:position pos:line="39" pos:column="29"/></name><operator pos:line="39" pos:column="29">.<pos:position pos:line="39" pos:column="30"/></operator><name pos:line="39" pos:column="30">id<pos:position pos:line="39" pos:column="32"/></name></name> <operator pos:line="39" pos:column="33">!=<pos:position pos:line="39" pos:column="35"/></operator> <name pos:line="39" pos:column="36">AMQP_BASIC_DELIVER_METHOD<pos:position pos:line="39" pos:column="61"/></name></expr>)<pos:position pos:line="39" pos:column="62"/></condition><then pos:line="39" pos:column="62"> <block pos:line="39" pos:column="63">{
      <expr_stmt><expr><call><name pos:line="40" pos:column="7">DEBUG<pos:position pos:line="40" pos:column="12"/></name><argument_list pos:line="40" pos:column="12">(<argument><expr><literal type="string" pos:line="40" pos:column="13">"amqp plugin: Unexpected method id: %#"<pos:position pos:line="40" pos:column="52"/></literal> <name pos:line="40" pos:column="53">PRIx32<pos:position pos:line="40" pos:column="59"/></name></expr></argument>,
            <argument><expr><name><name pos:line="41" pos:column="13">frame<pos:position pos:line="41" pos:column="18"/></name><operator pos:line="41" pos:column="18">.<pos:position pos:line="41" pos:column="19"/></operator><name pos:line="41" pos:column="19">payload<pos:position pos:line="41" pos:column="26"/></name><operator pos:line="41" pos:column="26">.<pos:position pos:line="41" pos:column="27"/></operator><name pos:line="41" pos:column="27">method<pos:position pos:line="41" pos:column="33"/></name><operator pos:line="41" pos:column="33">.<pos:position pos:line="41" pos:column="34"/></operator><name pos:line="41" pos:column="34">id<pos:position pos:line="41" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="38"/></expr_stmt>
      <continue pos:line="42" pos:column="7">continue;<pos:position pos:line="42" pos:column="16"/></continue>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="45" pos:column="5">camqp_read_header<pos:position pos:line="45" pos:column="22"/></name><argument_list pos:line="45" pos:column="22">(<argument><expr><name pos:line="45" pos:column="23">conf<pos:position pos:line="45" pos:column="27"/></name></expr></argument>)<pos:position pos:line="45" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="29"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="47" pos:column="5">amqp_maybe_release_buffers<pos:position pos:line="47" pos:column="31"/></name><argument_list pos:line="47" pos:column="31">(<argument><expr><name><name pos:line="47" pos:column="32">conf<pos:position pos:line="47" pos:column="36"/></name><operator pos:line="47" pos:column="36">-&gt;<pos:position pos:line="47" pos:column="41"/></operator><name pos:line="47" pos:column="38">connection<pos:position pos:line="47" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="50"/></expr_stmt>
  }<pos:position pos:line="48" pos:column="4"/></block></while> <comment type="block" pos:line="48" pos:column="5">/* while (subscriber_threads_running) */</comment>

  <expr_stmt><expr><call><name pos:line="50" pos:column="3">camqp_config_free<pos:position pos:line="50" pos:column="20"/></name><argument_list pos:line="50" pos:column="20">(<argument><expr><name pos:line="50" pos:column="21">conf<pos:position pos:line="50" pos:column="25"/></name></expr></argument>)<pos:position pos:line="50" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="51" pos:column="3">pthread_exit<pos:position pos:line="51" pos:column="15"/></name><argument_list pos:line="51" pos:column="15">(<argument><expr><name pos:line="51" pos:column="16">NULL<pos:position pos:line="51" pos:column="20"/></name></expr></argument>)<pos:position pos:line="51" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="22"/></expr_stmt>
  <return pos:line="52" pos:column="3">return <expr><operator pos:line="52" pos:column="10">(<pos:position pos:line="52" pos:column="11"/></operator><name pos:line="52" pos:column="11">NULL<pos:position pos:line="52" pos:column="15"/></name><operator pos:line="52" pos:column="15">)<pos:position pos:line="52" pos:column="16"/></operator></expr>;<pos:position pos:line="52" pos:column="17"/></return>
}<pos:position pos:line="53" pos:column="2"/></block></function></unit>

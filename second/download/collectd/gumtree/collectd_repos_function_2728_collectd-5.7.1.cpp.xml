<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2728_collectd-5.7.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">plugin_register_flush<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">name<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">plugin_flush_cb<pos:position pos:line="1" pos:column="60"/></name></type> <name pos:line="1" pos:column="61">callback<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="2" pos:column="27">user_data_t<pos:position pos:line="2" pos:column="38"/></name> <specifier pos:line="2" pos:column="39">const<pos:position pos:line="2" pos:column="44"/></specifier> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">ud<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="49"/></parameter_list> <block pos:line="2" pos:column="50">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">status<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">plugin_ctx_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">ctx<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><call><name pos:line="4" pos:column="22">plugin_get_ctx<pos:position pos:line="4" pos:column="36"/></name><argument_list pos:line="4" pos:column="36">()<pos:position pos:line="4" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">status<pos:position pos:line="6" pos:column="9"/></name> <operator pos:line="6" pos:column="10">=<pos:position pos:line="6" pos:column="11"/></operator> <call><name pos:line="6" pos:column="12">create_register_callback<pos:position pos:line="6" pos:column="36"/></name><argument_list pos:line="6" pos:column="36">(<argument><expr><operator pos:line="6" pos:column="37">&amp;<pos:position pos:line="6" pos:column="42"/></operator><name pos:line="6" pos:column="38">list_flush<pos:position pos:line="6" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="50">name<pos:position pos:line="6" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="56">(<pos:position pos:line="6" pos:column="57"/></operator><name pos:line="6" pos:column="57">void<pos:position pos:line="6" pos:column="61"/></name> <operator pos:line="6" pos:column="62">*<pos:position pos:line="6" pos:column="63"/></operator><operator pos:line="6" pos:column="63">)<pos:position pos:line="6" pos:column="64"/></operator><name pos:line="6" pos:column="64">callback<pos:position pos:line="6" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="74">ud<pos:position pos:line="6" pos:column="76"/></name></expr></argument>)<pos:position pos:line="6" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="78"/></expr_stmt>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">status<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">!=<pos:position pos:line="7" pos:column="16"/></operator> <literal type="number" pos:line="7" pos:column="17">0<pos:position pos:line="7" pos:column="18"/></literal></expr>)<pos:position pos:line="7" pos:column="19"/></condition><then pos:line="7" pos:column="19">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><name pos:line="8" pos:column="12">status<pos:position pos:line="8" pos:column="18"/></name></expr>;<pos:position pos:line="8" pos:column="19"/></return></block></then></if>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name><name pos:line="10" pos:column="7">ctx<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">.<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="11">flush_interval<pos:position pos:line="10" pos:column="25"/></name></name> <operator pos:line="10" pos:column="26">!=<pos:position pos:line="10" pos:column="28"/></operator> <literal type="number" pos:line="10" pos:column="29">0<pos:position pos:line="10" pos:column="30"/></literal></expr>)<pos:position pos:line="10" pos:column="31"/></condition><then pos:line="10" pos:column="31"> <block pos:line="10" pos:column="32">{
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name> <modifier pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></modifier></type><name pos:line="11" pos:column="11">flush_name<pos:position pos:line="11" pos:column="21"/></name></decl>;<pos:position pos:line="11" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">flush_callback_t<pos:position pos:line="12" pos:column="21"/></name> <modifier pos:line="12" pos:column="22">*<pos:position pos:line="12" pos:column="23"/></modifier></type><name pos:line="12" pos:column="23">cb<pos:position pos:line="12" pos:column="25"/></name></decl>;<pos:position pos:line="12" pos:column="26"/></decl_stmt>

    <expr_stmt><expr><name pos:line="14" pos:column="5">flush_name<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <call><name pos:line="14" pos:column="18">plugin_flush_callback_name<pos:position pos:line="14" pos:column="44"/></name><argument_list pos:line="14" pos:column="44">(<argument><expr><name pos:line="14" pos:column="45">name<pos:position pos:line="14" pos:column="49"/></name></expr></argument>)<pos:position pos:line="14" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="51"/></expr_stmt>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">flush_name<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">==<pos:position pos:line="15" pos:column="22"/></operator> <name pos:line="15" pos:column="23">NULL<pos:position pos:line="15" pos:column="27"/></name></expr>)<pos:position pos:line="15" pos:column="28"/></condition><then pos:line="15" pos:column="28">
      <block type="pseudo"><return pos:line="16" pos:column="7">return <expr><operator pos:line="16" pos:column="14">(<pos:position pos:line="16" pos:column="15"/></operator><operator pos:line="16" pos:column="15">-<pos:position pos:line="16" pos:column="16"/></operator><literal type="number" pos:line="16" pos:column="16">1<pos:position pos:line="16" pos:column="17"/></literal><operator pos:line="16" pos:column="17">)<pos:position pos:line="16" pos:column="18"/></operator></expr>;<pos:position pos:line="16" pos:column="19"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="18" pos:column="5">cb<pos:position pos:line="18" pos:column="7"/></name> <operator pos:line="18" pos:column="8">=<pos:position pos:line="18" pos:column="9"/></operator> <call><name pos:line="18" pos:column="10">malloc<pos:position pos:line="18" pos:column="16"/></name><argument_list pos:line="18" pos:column="16">(<argument><expr><sizeof pos:line="18" pos:column="17">sizeof<argument_list pos:line="18" pos:column="23">(<argument><expr><operator pos:line="18" pos:column="24">*<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="25">cb<pos:position pos:line="18" pos:column="27"/></name></expr></argument>)<pos:position pos:line="18" pos:column="28"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="30"/></expr_stmt>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">cb<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">==<pos:position pos:line="19" pos:column="14"/></operator> <name pos:line="19" pos:column="15">NULL<pos:position pos:line="19" pos:column="19"/></name></expr>)<pos:position pos:line="19" pos:column="20"/></condition><then pos:line="19" pos:column="20"> <block pos:line="19" pos:column="21">{
      <expr_stmt><expr><call><name pos:line="20" pos:column="7">ERROR<pos:position pos:line="20" pos:column="12"/></name><argument_list pos:line="20" pos:column="12">(<argument><expr><literal type="string" pos:line="20" pos:column="13">"plugin_register_flush: malloc failed."<pos:position pos:line="20" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="54"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">sfree<pos:position pos:line="21" pos:column="12"/></name><argument_list pos:line="21" pos:column="12">(<argument><expr><name pos:line="21" pos:column="13">flush_name<pos:position pos:line="21" pos:column="23"/></name></expr></argument>)<pos:position pos:line="21" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="25"/></expr_stmt>
      <return pos:line="22" pos:column="7">return <expr><operator pos:line="22" pos:column="14">(<pos:position pos:line="22" pos:column="15"/></operator><operator pos:line="22" pos:column="15">-<pos:position pos:line="22" pos:column="16"/></operator><literal type="number" pos:line="22" pos:column="16">1<pos:position pos:line="22" pos:column="17"/></literal><operator pos:line="22" pos:column="17">)<pos:position pos:line="22" pos:column="18"/></operator></expr>;<pos:position pos:line="22" pos:column="19"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="25" pos:column="5">cb<pos:position pos:line="25" pos:column="7"/></name><operator pos:line="25" pos:column="7">-&gt;<pos:position pos:line="25" pos:column="12"/></operator><name pos:line="25" pos:column="9">name<pos:position pos:line="25" pos:column="13"/></name></name> <operator pos:line="25" pos:column="14">=<pos:position pos:line="25" pos:column="15"/></operator> <call><name pos:line="25" pos:column="16">strdup<pos:position pos:line="25" pos:column="22"/></name><argument_list pos:line="25" pos:column="22">(<argument><expr><name pos:line="25" pos:column="23">name<pos:position pos:line="25" pos:column="27"/></name></expr></argument>)<pos:position pos:line="25" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="29"/></expr_stmt>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name><name pos:line="26" pos:column="9">cb<pos:position pos:line="26" pos:column="11"/></name><operator pos:line="26" pos:column="11">-&gt;<pos:position pos:line="26" pos:column="16"/></operator><name pos:line="26" pos:column="13">name<pos:position pos:line="26" pos:column="17"/></name></name> <operator pos:line="26" pos:column="18">==<pos:position pos:line="26" pos:column="20"/></operator> <name pos:line="26" pos:column="21">NULL<pos:position pos:line="26" pos:column="25"/></name></expr>)<pos:position pos:line="26" pos:column="26"/></condition><then pos:line="26" pos:column="26"> <block pos:line="26" pos:column="27">{
      <expr_stmt><expr><call><name pos:line="27" pos:column="7">ERROR<pos:position pos:line="27" pos:column="12"/></name><argument_list pos:line="27" pos:column="12">(<argument><expr><literal type="string" pos:line="27" pos:column="13">"plugin_register_flush: strdup failed."<pos:position pos:line="27" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="54"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="28" pos:column="7">sfree<pos:position pos:line="28" pos:column="12"/></name><argument_list pos:line="28" pos:column="12">(<argument><expr><name pos:line="28" pos:column="13">cb<pos:position pos:line="28" pos:column="15"/></name></expr></argument>)<pos:position pos:line="28" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="29" pos:column="7">sfree<pos:position pos:line="29" pos:column="12"/></name><argument_list pos:line="29" pos:column="12">(<argument><expr><name pos:line="29" pos:column="13">flush_name<pos:position pos:line="29" pos:column="23"/></name></expr></argument>)<pos:position pos:line="29" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="25"/></expr_stmt>
      <return pos:line="30" pos:column="7">return <expr><operator pos:line="30" pos:column="14">(<pos:position pos:line="30" pos:column="15"/></operator><operator pos:line="30" pos:column="15">-<pos:position pos:line="30" pos:column="16"/></operator><literal type="number" pos:line="30" pos:column="16">1<pos:position pos:line="30" pos:column="17"/></literal><operator pos:line="30" pos:column="17">)<pos:position pos:line="30" pos:column="18"/></operator></expr>;<pos:position pos:line="30" pos:column="19"/></return>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">cb<pos:position pos:line="32" pos:column="7"/></name><operator pos:line="32" pos:column="7">-&gt;<pos:position pos:line="32" pos:column="12"/></operator><name pos:line="32" pos:column="9">timeout<pos:position pos:line="32" pos:column="16"/></name></name> <operator pos:line="32" pos:column="17">=<pos:position pos:line="32" pos:column="18"/></operator> <name><name pos:line="32" pos:column="19">ctx<pos:position pos:line="32" pos:column="22"/></name><operator pos:line="32" pos:column="22">.<pos:position pos:line="32" pos:column="23"/></operator><name pos:line="32" pos:column="23">flush_timeout<pos:position pos:line="32" pos:column="36"/></name></name></expr>;<pos:position pos:line="32" pos:column="37"/></expr_stmt>

    <expr_stmt><expr><name pos:line="34" pos:column="5">status<pos:position pos:line="34" pos:column="11"/></name> <operator pos:line="34" pos:column="12">=<pos:position pos:line="34" pos:column="13"/></operator> <call><name pos:line="34" pos:column="14">plugin_register_complex_read<pos:position pos:line="34" pos:column="42"/></name><argument_list pos:line="34" pos:column="42">(
        <comment type="block" pos:line="35" pos:column="9">/* group     = */</comment> <argument><expr><literal type="string" pos:line="35" pos:column="27">"flush"<pos:position pos:line="35" pos:column="34"/></literal></expr></argument>,
        <comment type="block" pos:line="36" pos:column="9">/* name      = */</comment> <argument><expr><name pos:line="36" pos:column="27">flush_name<pos:position pos:line="36" pos:column="37"/></name></expr></argument>,
        <comment type="block" pos:line="37" pos:column="9">/* callback  = */</comment> <argument><expr><name pos:line="37" pos:column="27">plugin_flush_timeout_callback<pos:position pos:line="37" pos:column="56"/></name></expr></argument>,
        <comment type="block" pos:line="38" pos:column="9">/* interval  = */</comment> <argument><expr><name><name pos:line="38" pos:column="27">ctx<pos:position pos:line="38" pos:column="30"/></name><operator pos:line="38" pos:column="30">.<pos:position pos:line="38" pos:column="31"/></operator><name pos:line="38" pos:column="31">flush_interval<pos:position pos:line="38" pos:column="45"/></name></name></expr></argument>,
        <comment type="block" pos:line="39" pos:column="9">/* user data = */</comment> <argument><expr><operator pos:line="39" pos:column="27">&amp;<pos:position pos:line="39" pos:column="32"/></operator><operator pos:line="39" pos:column="28">(<pos:position pos:line="39" pos:column="29"/></operator><name pos:line="39" pos:column="29">user_data_t<pos:position pos:line="39" pos:column="40"/></name><operator pos:line="39" pos:column="40">)<pos:position pos:line="39" pos:column="41"/></operator><block pos:line="39" pos:column="41">{
            <expr><operator pos:line="40" pos:column="13">.<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="14">data<pos:position pos:line="40" pos:column="18"/></name> <operator pos:line="40" pos:column="19">=<pos:position pos:line="40" pos:column="20"/></operator> <name pos:line="40" pos:column="21">cb<pos:position pos:line="40" pos:column="23"/></name></expr>, <expr><operator pos:line="40" pos:column="25">.<pos:position pos:line="40" pos:column="26"/></operator><name pos:line="40" pos:column="26">free_func<pos:position pos:line="40" pos:column="35"/></name> <operator pos:line="40" pos:column="36">=<pos:position pos:line="40" pos:column="37"/></operator> <name pos:line="40" pos:column="38">plugin_flush_timeout_callback_free<pos:position pos:line="40" pos:column="72"/></name></expr>,
        }<pos:position pos:line="41" pos:column="10"/></block></expr></argument>)<pos:position pos:line="41" pos:column="11"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="12"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="43" pos:column="5">sfree<pos:position pos:line="43" pos:column="10"/></name><argument_list pos:line="43" pos:column="10">(<argument><expr><name pos:line="43" pos:column="11">flush_name<pos:position pos:line="43" pos:column="21"/></name></expr></argument>)<pos:position pos:line="43" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="23"/></expr_stmt>
    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><name pos:line="44" pos:column="9">status<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">!=<pos:position pos:line="44" pos:column="18"/></operator> <literal type="number" pos:line="44" pos:column="19">0<pos:position pos:line="44" pos:column="20"/></literal></expr>)<pos:position pos:line="44" pos:column="21"/></condition><then pos:line="44" pos:column="21"> <block pos:line="44" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="45" pos:column="7">sfree<pos:position pos:line="45" pos:column="12"/></name><argument_list pos:line="45" pos:column="12">(<argument><expr><name><name pos:line="45" pos:column="13">cb<pos:position pos:line="45" pos:column="15"/></name><operator pos:line="45" pos:column="15">-&gt;<pos:position pos:line="45" pos:column="20"/></operator><name pos:line="45" pos:column="17">name<pos:position pos:line="45" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="46" pos:column="7">sfree<pos:position pos:line="46" pos:column="12"/></name><argument_list pos:line="46" pos:column="12">(<argument><expr><name pos:line="46" pos:column="13">cb<pos:position pos:line="46" pos:column="15"/></name></expr></argument>)<pos:position pos:line="46" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="17"/></expr_stmt>
      <return pos:line="47" pos:column="7">return <expr><name pos:line="47" pos:column="14">status<pos:position pos:line="47" pos:column="20"/></name></expr>;<pos:position pos:line="47" pos:column="21"/></return>
    }<pos:position pos:line="48" pos:column="6"/></block></then></if>
  }<pos:position pos:line="49" pos:column="4"/></block></then></if>

  <return pos:line="51" pos:column="3">return <expr><literal type="number" pos:line="51" pos:column="10">0<pos:position pos:line="51" pos:column="11"/></literal></expr>;<pos:position pos:line="51" pos:column="12"/></return>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

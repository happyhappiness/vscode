<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_244_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">exec_notification_one<pos:position pos:line="1" pos:column="35"/></name> <parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">void<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">arg<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list> <comment type="block" pos:line="1" pos:column="48">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">program_list_t<pos:position pos:line="3" pos:column="17"/></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">pl<pos:position pos:line="3" pos:column="21"/></name> <init pos:line="3" pos:column="22">= <expr><operator pos:line="3" pos:column="24">(<pos:position pos:line="3" pos:column="25"/></operator><operator pos:line="3" pos:column="25">(<pos:position pos:line="3" pos:column="26"/></operator><name pos:line="3" pos:column="26">program_list_and_notification_t<pos:position pos:line="3" pos:column="57"/></name> <operator pos:line="3" pos:column="58">*<pos:position pos:line="3" pos:column="59"/></operator><operator pos:line="3" pos:column="59">)<pos:position pos:line="3" pos:column="60"/></operator> <name pos:line="3" pos:column="61">arg<pos:position pos:line="3" pos:column="64"/></name><operator pos:line="3" pos:column="64">)<pos:position pos:line="3" pos:column="65"/></operator><operator pos:line="3" pos:column="65">-&gt;<pos:position pos:line="3" pos:column="70"/></operator><name pos:line="3" pos:column="67">pl<pos:position pos:line="3" pos:column="69"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="70"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">notification_t<pos:position pos:line="4" pos:column="17"/></name> <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">n<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><operator pos:line="4" pos:column="23">&amp;<pos:position pos:line="4" pos:column="28"/></operator><operator pos:line="4" pos:column="24">(<pos:position pos:line="4" pos:column="25"/></operator><operator pos:line="4" pos:column="25">(<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="26">program_list_and_notification_t<pos:position pos:line="4" pos:column="57"/></name> <operator pos:line="4" pos:column="58">*<pos:position pos:line="4" pos:column="59"/></operator><operator pos:line="4" pos:column="59">)<pos:position pos:line="4" pos:column="60"/></operator> <name pos:line="4" pos:column="61">arg<pos:position pos:line="4" pos:column="64"/></name><operator pos:line="4" pos:column="64">)<pos:position pos:line="4" pos:column="65"/></operator><operator pos:line="4" pos:column="65">-&gt;<pos:position pos:line="4" pos:column="70"/></operator><name pos:line="4" pos:column="67">n<pos:position pos:line="4" pos:column="68"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="69"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">notification_meta_t<pos:position pos:line="5" pos:column="22"/></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">meta<pos:position pos:line="5" pos:column="28"/></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">fd<pos:position pos:line="6" pos:column="9"/></name></decl>;<pos:position pos:line="6" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">FILE<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">fh<pos:position pos:line="7" pos:column="11"/></name></decl>;<pos:position pos:line="7" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">pid<pos:position pos:line="8" pos:column="10"/></name></decl>;<pos:position pos:line="8" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">status<pos:position pos:line="9" pos:column="13"/></name></decl>;<pos:position pos:line="9" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="10" pos:column="3">const<pos:position pos:line="10" pos:column="8"/></specifier> <name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name pos:line="10" pos:column="15">severity<pos:position pos:line="10" pos:column="23"/></name></decl>;<pos:position pos:line="10" pos:column="24"/></decl_stmt>

  <expr_stmt><expr><name pos:line="12" pos:column="3">pid<pos:position pos:line="12" pos:column="6"/></name> <operator pos:line="12" pos:column="7">=<pos:position pos:line="12" pos:column="8"/></operator> <call><name pos:line="12" pos:column="9">fork_child<pos:position pos:line="12" pos:column="19"/></name> <argument_list pos:line="12" pos:column="20">(<argument><expr><name pos:line="12" pos:column="21">pl<pos:position pos:line="12" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="25">&amp;<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="26">fd<pos:position pos:line="12" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="30">NULL<pos:position pos:line="12" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="36">NULL<pos:position pos:line="12" pos:column="40"/></name></expr></argument>)<pos:position pos:line="12" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="42"/></expr_stmt>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">pid<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">&lt;<pos:position pos:line="13" pos:column="15"/></operator> <literal type="number" pos:line="13" pos:column="13">0<pos:position pos:line="13" pos:column="14"/></literal></expr>)<pos:position pos:line="13" pos:column="15"/></condition><then pos:line="13" pos:column="15"> <block pos:line="13" pos:column="16">{
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">sfree<pos:position pos:line="14" pos:column="10"/></name> <argument_list pos:line="14" pos:column="11">(<argument><expr><name pos:line="14" pos:column="12">arg<pos:position pos:line="14" pos:column="15"/></name></expr></argument>)<pos:position pos:line="14" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">pthread_exit<pos:position pos:line="15" pos:column="17"/></name> <argument_list pos:line="15" pos:column="18">(<argument><expr><operator pos:line="15" pos:column="19">(<pos:position pos:line="15" pos:column="20"/></operator><name pos:line="15" pos:column="20">void<pos:position pos:line="15" pos:column="24"/></name> <operator pos:line="15" pos:column="25">*<pos:position pos:line="15" pos:column="26"/></operator><operator pos:line="15" pos:column="26">)<pos:position pos:line="15" pos:column="27"/></operator> <literal type="number" pos:line="15" pos:column="28">1<pos:position pos:line="15" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="31"/></expr_stmt>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="18" pos:column="3">fh<pos:position pos:line="18" pos:column="5"/></name> <operator pos:line="18" pos:column="6">=<pos:position pos:line="18" pos:column="7"/></operator> <call><name pos:line="18" pos:column="8">fdopen<pos:position pos:line="18" pos:column="14"/></name> <argument_list pos:line="18" pos:column="15">(<argument><expr><name pos:line="18" pos:column="16">fd<pos:position pos:line="18" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="20">"w"<pos:position pos:line="18" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="25"/></expr_stmt>
  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><name pos:line="19" pos:column="7">fh<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">==<pos:position pos:line="19" pos:column="12"/></operator> <name pos:line="19" pos:column="13">NULL<pos:position pos:line="19" pos:column="17"/></name></expr>)<pos:position pos:line="19" pos:column="18"/></condition><then pos:line="19" pos:column="18">
  <block pos:line="20" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">char<pos:position pos:line="21" pos:column="9"/></name></type> <name><name pos:line="21" pos:column="10">errbuf<pos:position pos:line="21" pos:column="16"/></name><index pos:line="21" pos:column="16">[<expr><literal type="number" pos:line="21" pos:column="17">1024<pos:position pos:line="21" pos:column="21"/></literal></expr>]<pos:position pos:line="21" pos:column="22"/></index></name></decl>;<pos:position pos:line="21" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">ERROR<pos:position pos:line="22" pos:column="10"/></name> <argument_list pos:line="22" pos:column="11">(<argument><expr><literal type="string" pos:line="22" pos:column="12">"exec plugin: fdopen (%i) failed: %s"<pos:position pos:line="22" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="51">fd<pos:position pos:line="22" pos:column="53"/></name></expr></argument>,
        <argument><expr><call><name pos:line="23" pos:column="9">sstrerror<pos:position pos:line="23" pos:column="18"/></name> <argument_list pos:line="23" pos:column="19">(<argument><expr><name pos:line="23" pos:column="20">errno<pos:position pos:line="23" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="27">errbuf<pos:position pos:line="23" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="35">sizeof <argument_list pos:line="23" pos:column="42">(<argument><expr><name pos:line="23" pos:column="43">errbuf<pos:position pos:line="23" pos:column="49"/></name></expr></argument>)<pos:position pos:line="23" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">kill<pos:position pos:line="24" pos:column="9"/></name> <argument_list pos:line="24" pos:column="10">(<argument><expr><name pos:line="24" pos:column="11">pid<pos:position pos:line="24" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="16">SIGTERM<pos:position pos:line="24" pos:column="23"/></name></expr></argument>)<pos:position pos:line="24" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">close<pos:position pos:line="25" pos:column="10"/></name> <argument_list pos:line="25" pos:column="11">(<argument><expr><name pos:line="25" pos:column="12">fd<pos:position pos:line="25" pos:column="14"/></name></expr></argument>)<pos:position pos:line="25" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">sfree<pos:position pos:line="26" pos:column="10"/></name> <argument_list pos:line="26" pos:column="11">(<argument><expr><name pos:line="26" pos:column="12">arg<pos:position pos:line="26" pos:column="15"/></name></expr></argument>)<pos:position pos:line="26" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">pthread_exit<pos:position pos:line="27" pos:column="17"/></name> <argument_list pos:line="27" pos:column="18">(<argument><expr><operator pos:line="27" pos:column="19">(<pos:position pos:line="27" pos:column="20"/></operator><name pos:line="27" pos:column="20">void<pos:position pos:line="27" pos:column="24"/></name> <operator pos:line="27" pos:column="25">*<pos:position pos:line="27" pos:column="26"/></operator><operator pos:line="27" pos:column="26">)<pos:position pos:line="27" pos:column="27"/></operator> <literal type="number" pos:line="27" pos:column="28">1<pos:position pos:line="27" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="31"/></expr_stmt>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="30" pos:column="3">severity<pos:position pos:line="30" pos:column="11"/></name> <operator pos:line="30" pos:column="12">=<pos:position pos:line="30" pos:column="13"/></operator> <literal type="string" pos:line="30" pos:column="14">"FAILURE"<pos:position pos:line="30" pos:column="23"/></literal></expr>;<pos:position pos:line="30" pos:column="24"/></expr_stmt>
  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><name><name pos:line="31" pos:column="7">n<pos:position pos:line="31" pos:column="8"/></name><operator pos:line="31" pos:column="8">-&gt;<pos:position pos:line="31" pos:column="13"/></operator><name pos:line="31" pos:column="10">severity<pos:position pos:line="31" pos:column="18"/></name></name> <operator pos:line="31" pos:column="19">==<pos:position pos:line="31" pos:column="21"/></operator> <name pos:line="31" pos:column="22">NOTIF_WARNING<pos:position pos:line="31" pos:column="35"/></name></expr>)<pos:position pos:line="31" pos:column="36"/></condition><then pos:line="31" pos:column="36">
    <block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="5">severity<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">=<pos:position pos:line="32" pos:column="15"/></operator> <literal type="string" pos:line="32" pos:column="16">"WARNING"<pos:position pos:line="32" pos:column="25"/></literal></expr>;<pos:position pos:line="32" pos:column="26"/></expr_stmt></block></then>
  <elseif pos:line="33" pos:column="3">else <if pos:line="33" pos:column="8">if <condition pos:line="33" pos:column="11">(<expr><name><name pos:line="33" pos:column="12">n<pos:position pos:line="33" pos:column="13"/></name><operator pos:line="33" pos:column="13">-&gt;<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="15">severity<pos:position pos:line="33" pos:column="23"/></name></name> <operator pos:line="33" pos:column="24">==<pos:position pos:line="33" pos:column="26"/></operator> <name pos:line="33" pos:column="27">NOTIF_OKAY<pos:position pos:line="33" pos:column="37"/></name></expr>)<pos:position pos:line="33" pos:column="38"/></condition><then pos:line="33" pos:column="38">
    <block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="5">severity<pos:position pos:line="34" pos:column="13"/></name> <operator pos:line="34" pos:column="14">=<pos:position pos:line="34" pos:column="15"/></operator> <literal type="string" pos:line="34" pos:column="16">"OKAY"<pos:position pos:line="34" pos:column="22"/></literal></expr>;<pos:position pos:line="34" pos:column="23"/></expr_stmt></block></then></if></elseif></if>

  <expr_stmt><expr><call><name pos:line="36" pos:column="3">fprintf<pos:position pos:line="36" pos:column="10"/></name> <argument_list pos:line="36" pos:column="11">(<argument><expr><name pos:line="36" pos:column="12">fh<pos:position pos:line="36" pos:column="14"/></name></expr></argument>,
      <argument><expr><literal type="string" pos:line="37" pos:column="7">"Severity: %s\n"<pos:position pos:line="37" pos:column="23"/></literal>
      <literal type="string" pos:line="38" pos:column="7">"Time: %.3f\n"<pos:position pos:line="38" pos:column="21"/></literal></expr></argument>,
      <argument><expr><name pos:line="39" pos:column="7">severity<pos:position pos:line="39" pos:column="15"/></name></expr></argument>, <argument><expr><call><name pos:line="39" pos:column="17">CDTIME_T_TO_DOUBLE<pos:position pos:line="39" pos:column="35"/></name> <argument_list pos:line="39" pos:column="36">(<argument><expr><name><name pos:line="39" pos:column="37">n<pos:position pos:line="39" pos:column="38"/></name><operator pos:line="39" pos:column="38">-&gt;<pos:position pos:line="39" pos:column="43"/></operator><name pos:line="39" pos:column="40">time<pos:position pos:line="39" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="47"/></expr_stmt>

  <comment type="block" pos:line="41" pos:column="3">/* Print the optional fields */</comment>
  <if pos:line="42" pos:column="3">if <condition pos:line="42" pos:column="6">(<expr><call><name pos:line="42" pos:column="7">strlen<pos:position pos:line="42" pos:column="13"/></name> <argument_list pos:line="42" pos:column="14">(<argument><expr><name><name pos:line="42" pos:column="15">n<pos:position pos:line="42" pos:column="16"/></name><operator pos:line="42" pos:column="16">-&gt;<pos:position pos:line="42" pos:column="21"/></operator><name pos:line="42" pos:column="18">host<pos:position pos:line="42" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="23"/></argument_list></call> <operator pos:line="42" pos:column="24">&gt;<pos:position pos:line="42" pos:column="28"/></operator> <literal type="number" pos:line="42" pos:column="26">0<pos:position pos:line="42" pos:column="27"/></literal></expr>)<pos:position pos:line="42" pos:column="28"/></condition><then pos:line="42" pos:column="28">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="5">fprintf<pos:position pos:line="43" pos:column="12"/></name> <argument_list pos:line="43" pos:column="13">(<argument><expr><name pos:line="43" pos:column="14">fh<pos:position pos:line="43" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="18">"Host: %s\n"<pos:position pos:line="43" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="32">n<pos:position pos:line="43" pos:column="33"/></name><operator pos:line="43" pos:column="33">-&gt;<pos:position pos:line="43" pos:column="38"/></operator><name pos:line="43" pos:column="35">host<pos:position pos:line="43" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="41"/></expr_stmt></block></then></if>
  <if pos:line="44" pos:column="3">if <condition pos:line="44" pos:column="6">(<expr><call><name pos:line="44" pos:column="7">strlen<pos:position pos:line="44" pos:column="13"/></name> <argument_list pos:line="44" pos:column="14">(<argument><expr><name><name pos:line="44" pos:column="15">n<pos:position pos:line="44" pos:column="16"/></name><operator pos:line="44" pos:column="16">-&gt;<pos:position pos:line="44" pos:column="21"/></operator><name pos:line="44" pos:column="18">plugin<pos:position pos:line="44" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="25"/></argument_list></call> <operator pos:line="44" pos:column="26">&gt;<pos:position pos:line="44" pos:column="30"/></operator> <literal type="number" pos:line="44" pos:column="28">0<pos:position pos:line="44" pos:column="29"/></literal></expr>)<pos:position pos:line="44" pos:column="30"/></condition><then pos:line="44" pos:column="30">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="5">fprintf<pos:position pos:line="45" pos:column="12"/></name> <argument_list pos:line="45" pos:column="13">(<argument><expr><name pos:line="45" pos:column="14">fh<pos:position pos:line="45" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="18">"Plugin: %s\n"<pos:position pos:line="45" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="34">n<pos:position pos:line="45" pos:column="35"/></name><operator pos:line="45" pos:column="35">-&gt;<pos:position pos:line="45" pos:column="40"/></operator><name pos:line="45" pos:column="37">plugin<pos:position pos:line="45" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="45"/></expr_stmt></block></then></if>
  <if pos:line="46" pos:column="3">if <condition pos:line="46" pos:column="6">(<expr><call><name pos:line="46" pos:column="7">strlen<pos:position pos:line="46" pos:column="13"/></name> <argument_list pos:line="46" pos:column="14">(<argument><expr><name><name pos:line="46" pos:column="15">n<pos:position pos:line="46" pos:column="16"/></name><operator pos:line="46" pos:column="16">-&gt;<pos:position pos:line="46" pos:column="21"/></operator><name pos:line="46" pos:column="18">plugin_instance<pos:position pos:line="46" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="34"/></argument_list></call> <operator pos:line="46" pos:column="35">&gt;<pos:position pos:line="46" pos:column="39"/></operator> <literal type="number" pos:line="46" pos:column="37">0<pos:position pos:line="46" pos:column="38"/></literal></expr>)<pos:position pos:line="46" pos:column="39"/></condition><then pos:line="46" pos:column="39">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="5">fprintf<pos:position pos:line="47" pos:column="12"/></name> <argument_list pos:line="47" pos:column="13">(<argument><expr><name pos:line="47" pos:column="14">fh<pos:position pos:line="47" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="18">"PluginInstance: %s\n"<pos:position pos:line="47" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="42">n<pos:position pos:line="47" pos:column="43"/></name><operator pos:line="47" pos:column="43">-&gt;<pos:position pos:line="47" pos:column="48"/></operator><name pos:line="47" pos:column="45">plugin_instance<pos:position pos:line="47" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="62"/></expr_stmt></block></then></if>
  <if pos:line="48" pos:column="3">if <condition pos:line="48" pos:column="6">(<expr><call><name pos:line="48" pos:column="7">strlen<pos:position pos:line="48" pos:column="13"/></name> <argument_list pos:line="48" pos:column="14">(<argument><expr><name><name pos:line="48" pos:column="15">n<pos:position pos:line="48" pos:column="16"/></name><operator pos:line="48" pos:column="16">-&gt;<pos:position pos:line="48" pos:column="21"/></operator><name pos:line="48" pos:column="18">type<pos:position pos:line="48" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="23"/></argument_list></call> <operator pos:line="48" pos:column="24">&gt;<pos:position pos:line="48" pos:column="28"/></operator> <literal type="number" pos:line="48" pos:column="26">0<pos:position pos:line="48" pos:column="27"/></literal></expr>)<pos:position pos:line="48" pos:column="28"/></condition><then pos:line="48" pos:column="28">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="5">fprintf<pos:position pos:line="49" pos:column="12"/></name> <argument_list pos:line="49" pos:column="13">(<argument><expr><name pos:line="49" pos:column="14">fh<pos:position pos:line="49" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="18">"Type: %s\n"<pos:position pos:line="49" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="32">n<pos:position pos:line="49" pos:column="33"/></name><operator pos:line="49" pos:column="33">-&gt;<pos:position pos:line="49" pos:column="38"/></operator><name pos:line="49" pos:column="35">type<pos:position pos:line="49" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="41"/></expr_stmt></block></then></if>
  <if pos:line="50" pos:column="3">if <condition pos:line="50" pos:column="6">(<expr><call><name pos:line="50" pos:column="7">strlen<pos:position pos:line="50" pos:column="13"/></name> <argument_list pos:line="50" pos:column="14">(<argument><expr><name><name pos:line="50" pos:column="15">n<pos:position pos:line="50" pos:column="16"/></name><operator pos:line="50" pos:column="16">-&gt;<pos:position pos:line="50" pos:column="21"/></operator><name pos:line="50" pos:column="18">type_instance<pos:position pos:line="50" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="32"/></argument_list></call> <operator pos:line="50" pos:column="33">&gt;<pos:position pos:line="50" pos:column="37"/></operator> <literal type="number" pos:line="50" pos:column="35">0<pos:position pos:line="50" pos:column="36"/></literal></expr>)<pos:position pos:line="50" pos:column="37"/></condition><then pos:line="50" pos:column="37">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="5">fprintf<pos:position pos:line="51" pos:column="12"/></name> <argument_list pos:line="51" pos:column="13">(<argument><expr><name pos:line="51" pos:column="14">fh<pos:position pos:line="51" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="18">"TypeInstance: %s\n"<pos:position pos:line="51" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="40">n<pos:position pos:line="51" pos:column="41"/></name><operator pos:line="51" pos:column="41">-&gt;<pos:position pos:line="51" pos:column="46"/></operator><name pos:line="51" pos:column="43">type_instance<pos:position pos:line="51" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="58"/></expr_stmt></block></then></if>

  <for pos:line="53" pos:column="3">for <control pos:line="53" pos:column="7">(<init><expr><name pos:line="53" pos:column="8">meta<pos:position pos:line="53" pos:column="12"/></name> <operator pos:line="53" pos:column="13">=<pos:position pos:line="53" pos:column="14"/></operator> <name><name pos:line="53" pos:column="15">n<pos:position pos:line="53" pos:column="16"/></name><operator pos:line="53" pos:column="16">-&gt;<pos:position pos:line="53" pos:column="21"/></operator><name pos:line="53" pos:column="18">meta<pos:position pos:line="53" pos:column="22"/></name></name></expr>;<pos:position pos:line="53" pos:column="23"/></init> <condition><expr><name pos:line="53" pos:column="24">meta<pos:position pos:line="53" pos:column="28"/></name> <operator pos:line="53" pos:column="29">!=<pos:position pos:line="53" pos:column="31"/></operator> <name pos:line="53" pos:column="32">NULL<pos:position pos:line="53" pos:column="36"/></name></expr>;<pos:position pos:line="53" pos:column="37"/></condition> <incr><expr><name pos:line="53" pos:column="38">meta<pos:position pos:line="53" pos:column="42"/></name> <operator pos:line="53" pos:column="43">=<pos:position pos:line="53" pos:column="44"/></operator> <name><name pos:line="53" pos:column="45">meta<pos:position pos:line="53" pos:column="49"/></name><operator pos:line="53" pos:column="49">-&gt;<pos:position pos:line="53" pos:column="54"/></operator><name pos:line="53" pos:column="51">next<pos:position pos:line="53" pos:column="55"/></name></name></expr></incr>)<pos:position pos:line="53" pos:column="56"/></control>
  <block pos:line="54" pos:column="3">{
    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><name><name pos:line="55" pos:column="9">meta<pos:position pos:line="55" pos:column="13"/></name><operator pos:line="55" pos:column="13">-&gt;<pos:position pos:line="55" pos:column="18"/></operator><name pos:line="55" pos:column="15">type<pos:position pos:line="55" pos:column="19"/></name></name> <operator pos:line="55" pos:column="20">==<pos:position pos:line="55" pos:column="22"/></operator> <name pos:line="55" pos:column="23">NM_TYPE_STRING<pos:position pos:line="55" pos:column="37"/></name></expr>)<pos:position pos:line="55" pos:column="38"/></condition><then pos:line="55" pos:column="38">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="56" pos:column="7">fprintf<pos:position pos:line="56" pos:column="14"/></name> <argument_list pos:line="56" pos:column="15">(<argument><expr><name pos:line="56" pos:column="16">fh<pos:position pos:line="56" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="20">"%s: %s\n"<pos:position pos:line="56" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="32">meta<pos:position pos:line="56" pos:column="36"/></name><operator pos:line="56" pos:column="36">-&gt;<pos:position pos:line="56" pos:column="41"/></operator><name pos:line="56" pos:column="38">name<pos:position pos:line="56" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="44">meta<pos:position pos:line="56" pos:column="48"/></name><operator pos:line="56" pos:column="48">-&gt;<pos:position pos:line="56" pos:column="53"/></operator><name pos:line="56" pos:column="50">nm_value<pos:position pos:line="56" pos:column="58"/></name><operator pos:line="56" pos:column="58">.<pos:position pos:line="56" pos:column="59"/></operator><name pos:line="56" pos:column="59">nm_string<pos:position pos:line="56" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="70"/></expr_stmt></block></then>
    <elseif pos:line="57" pos:column="5">else <if pos:line="57" pos:column="10">if <condition pos:line="57" pos:column="13">(<expr><name><name pos:line="57" pos:column="14">meta<pos:position pos:line="57" pos:column="18"/></name><operator pos:line="57" pos:column="18">-&gt;<pos:position pos:line="57" pos:column="23"/></operator><name pos:line="57" pos:column="20">type<pos:position pos:line="57" pos:column="24"/></name></name> <operator pos:line="57" pos:column="25">==<pos:position pos:line="57" pos:column="27"/></operator> <name pos:line="57" pos:column="28">NM_TYPE_SIGNED_INT<pos:position pos:line="57" pos:column="46"/></name></expr>)<pos:position pos:line="57" pos:column="47"/></condition><then pos:line="57" pos:column="47">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="7">fprintf<pos:position pos:line="58" pos:column="14"/></name> <argument_list pos:line="58" pos:column="15">(<argument><expr><name pos:line="58" pos:column="16">fh<pos:position pos:line="58" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="20">"%s: %"<pos:position pos:line="58" pos:column="27"/></literal><name pos:line="58" pos:column="27">PRIi64<pos:position pos:line="58" pos:column="33"/></name><literal type="string" pos:line="58" pos:column="33">"\n"<pos:position pos:line="58" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="39">meta<pos:position pos:line="58" pos:column="43"/></name><operator pos:line="58" pos:column="43">-&gt;<pos:position pos:line="58" pos:column="48"/></operator><name pos:line="58" pos:column="45">name<pos:position pos:line="58" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="51">meta<pos:position pos:line="58" pos:column="55"/></name><operator pos:line="58" pos:column="55">-&gt;<pos:position pos:line="58" pos:column="60"/></operator><name pos:line="58" pos:column="57">nm_value<pos:position pos:line="58" pos:column="65"/></name><operator pos:line="58" pos:column="65">.<pos:position pos:line="58" pos:column="66"/></operator><name pos:line="58" pos:column="66">nm_signed_int<pos:position pos:line="58" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="81"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="59" pos:column="5">else <if pos:line="59" pos:column="10">if <condition pos:line="59" pos:column="13">(<expr><name><name pos:line="59" pos:column="14">meta<pos:position pos:line="59" pos:column="18"/></name><operator pos:line="59" pos:column="18">-&gt;<pos:position pos:line="59" pos:column="23"/></operator><name pos:line="59" pos:column="20">type<pos:position pos:line="59" pos:column="24"/></name></name> <operator pos:line="59" pos:column="25">==<pos:position pos:line="59" pos:column="27"/></operator> <name pos:line="59" pos:column="28">NM_TYPE_UNSIGNED_INT<pos:position pos:line="59" pos:column="48"/></name></expr>)<pos:position pos:line="59" pos:column="49"/></condition><then pos:line="59" pos:column="49">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="60" pos:column="7">fprintf<pos:position pos:line="60" pos:column="14"/></name> <argument_list pos:line="60" pos:column="15">(<argument><expr><name pos:line="60" pos:column="16">fh<pos:position pos:line="60" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="20">"%s: %"<pos:position pos:line="60" pos:column="27"/></literal><name pos:line="60" pos:column="27">PRIu64<pos:position pos:line="60" pos:column="33"/></name><literal type="string" pos:line="60" pos:column="33">"\n"<pos:position pos:line="60" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="39">meta<pos:position pos:line="60" pos:column="43"/></name><operator pos:line="60" pos:column="43">-&gt;<pos:position pos:line="60" pos:column="48"/></operator><name pos:line="60" pos:column="45">name<pos:position pos:line="60" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="51">meta<pos:position pos:line="60" pos:column="55"/></name><operator pos:line="60" pos:column="55">-&gt;<pos:position pos:line="60" pos:column="60"/></operator><name pos:line="60" pos:column="57">nm_value<pos:position pos:line="60" pos:column="65"/></name><operator pos:line="60" pos:column="65">.<pos:position pos:line="60" pos:column="66"/></operator><name pos:line="60" pos:column="66">nm_unsigned_int<pos:position pos:line="60" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="83"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="61" pos:column="5">else <if pos:line="61" pos:column="10">if <condition pos:line="61" pos:column="13">(<expr><name><name pos:line="61" pos:column="14">meta<pos:position pos:line="61" pos:column="18"/></name><operator pos:line="61" pos:column="18">-&gt;<pos:position pos:line="61" pos:column="23"/></operator><name pos:line="61" pos:column="20">type<pos:position pos:line="61" pos:column="24"/></name></name> <operator pos:line="61" pos:column="25">==<pos:position pos:line="61" pos:column="27"/></operator> <name pos:line="61" pos:column="28">NM_TYPE_DOUBLE<pos:position pos:line="61" pos:column="42"/></name></expr>)<pos:position pos:line="61" pos:column="43"/></condition><then pos:line="61" pos:column="43">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="7">fprintf<pos:position pos:line="62" pos:column="14"/></name> <argument_list pos:line="62" pos:column="15">(<argument><expr><name pos:line="62" pos:column="16">fh<pos:position pos:line="62" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="20">"%s: %e\n"<pos:position pos:line="62" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="32">meta<pos:position pos:line="62" pos:column="36"/></name><operator pos:line="62" pos:column="36">-&gt;<pos:position pos:line="62" pos:column="41"/></operator><name pos:line="62" pos:column="38">name<pos:position pos:line="62" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="44">meta<pos:position pos:line="62" pos:column="48"/></name><operator pos:line="62" pos:column="48">-&gt;<pos:position pos:line="62" pos:column="53"/></operator><name pos:line="62" pos:column="50">nm_value<pos:position pos:line="62" pos:column="58"/></name><operator pos:line="62" pos:column="58">.<pos:position pos:line="62" pos:column="59"/></operator><name pos:line="62" pos:column="59">nm_double<pos:position pos:line="62" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="70"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="63" pos:column="5">else <if pos:line="63" pos:column="10">if <condition pos:line="63" pos:column="13">(<expr><name><name pos:line="63" pos:column="14">meta<pos:position pos:line="63" pos:column="18"/></name><operator pos:line="63" pos:column="18">-&gt;<pos:position pos:line="63" pos:column="23"/></operator><name pos:line="63" pos:column="20">type<pos:position pos:line="63" pos:column="24"/></name></name> <operator pos:line="63" pos:column="25">==<pos:position pos:line="63" pos:column="27"/></operator> <name pos:line="63" pos:column="28">NM_TYPE_BOOLEAN<pos:position pos:line="63" pos:column="43"/></name></expr>)<pos:position pos:line="63" pos:column="44"/></condition><then pos:line="63" pos:column="44">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="7">fprintf<pos:position pos:line="64" pos:column="14"/></name> <argument_list pos:line="64" pos:column="15">(<argument><expr><name pos:line="64" pos:column="16">fh<pos:position pos:line="64" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="20">"%s: %s\n"<pos:position pos:line="64" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="32">meta<pos:position pos:line="64" pos:column="36"/></name><operator pos:line="64" pos:column="36">-&gt;<pos:position pos:line="64" pos:column="41"/></operator><name pos:line="64" pos:column="38">name<pos:position pos:line="64" pos:column="42"/></name></name></expr></argument>,
          <argument><expr><ternary><condition><expr><name><name pos:line="65" pos:column="11">meta<pos:position pos:line="65" pos:column="15"/></name><operator pos:line="65" pos:column="15">-&gt;<pos:position pos:line="65" pos:column="20"/></operator><name pos:line="65" pos:column="17">nm_value<pos:position pos:line="65" pos:column="25"/></name><operator pos:line="65" pos:column="25">.<pos:position pos:line="65" pos:column="26"/></operator><name pos:line="65" pos:column="26">nm_boolean<pos:position pos:line="65" pos:column="36"/></name></name></expr> ?<pos:position pos:line="65" pos:column="38"/></condition><then pos:line="65" pos:column="38"> <expr><literal type="string" pos:line="65" pos:column="39">"true"<pos:position pos:line="65" pos:column="45"/></literal></expr> <pos:position pos:line="65" pos:column="46"/></then><else pos:line="65" pos:column="46">: <expr><literal type="string" pos:line="65" pos:column="48">"false"<pos:position pos:line="65" pos:column="55"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="65" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="57"/></expr_stmt></block></then></if></elseif></if>
  }<pos:position pos:line="66" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="68" pos:column="3">fprintf<pos:position pos:line="68" pos:column="10"/></name> <argument_list pos:line="68" pos:column="11">(<argument><expr><name pos:line="68" pos:column="12">fh<pos:position pos:line="68" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="16">"\n%s\n"<pos:position pos:line="68" pos:column="24"/></literal></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="26">n<pos:position pos:line="68" pos:column="27"/></name><operator pos:line="68" pos:column="27">-&gt;<pos:position pos:line="68" pos:column="32"/></operator><name pos:line="68" pos:column="29">message<pos:position pos:line="68" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="38"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="70" pos:column="3">fflush<pos:position pos:line="70" pos:column="9"/></name> <argument_list pos:line="70" pos:column="10">(<argument><expr><name pos:line="70" pos:column="11">fh<pos:position pos:line="70" pos:column="13"/></name></expr></argument>)<pos:position pos:line="70" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="71" pos:column="3">fclose<pos:position pos:line="71" pos:column="9"/></name> <argument_list pos:line="71" pos:column="10">(<argument><expr><name pos:line="71" pos:column="11">fh<pos:position pos:line="71" pos:column="13"/></name></expr></argument>)<pos:position pos:line="71" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="15"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="73" pos:column="3">waitpid<pos:position pos:line="73" pos:column="10"/></name> <argument_list pos:line="73" pos:column="11">(<argument><expr><name pos:line="73" pos:column="12">pid<pos:position pos:line="73" pos:column="15"/></name></expr></argument>, <argument><expr><operator pos:line="73" pos:column="17">&amp;<pos:position pos:line="73" pos:column="22"/></operator><name pos:line="73" pos:column="18">status<pos:position pos:line="73" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="73" pos:column="26">0<pos:position pos:line="73" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="29"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="75" pos:column="3">DEBUG<pos:position pos:line="75" pos:column="8"/></name> <argument_list pos:line="75" pos:column="9">(<argument><expr><literal type="string" pos:line="75" pos:column="10">"exec plugin: Child %i exited with status %i."<pos:position pos:line="75" pos:column="56"/></literal></expr></argument>,
      <argument><expr><name pos:line="76" pos:column="7">pid<pos:position pos:line="76" pos:column="10"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="12">status<pos:position pos:line="76" pos:column="18"/></name></expr></argument>)<pos:position pos:line="76" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="20"/></expr_stmt>

  <if pos:line="78" pos:column="3">if <condition pos:line="78" pos:column="6">(<expr><name><name pos:line="78" pos:column="7">n<pos:position pos:line="78" pos:column="8"/></name><operator pos:line="78" pos:column="8">-&gt;<pos:position pos:line="78" pos:column="13"/></operator><name pos:line="78" pos:column="10">meta<pos:position pos:line="78" pos:column="14"/></name></name> <operator pos:line="78" pos:column="15">!=<pos:position pos:line="78" pos:column="17"/></operator> <name pos:line="78" pos:column="18">NULL<pos:position pos:line="78" pos:column="22"/></name></expr>)<pos:position pos:line="78" pos:column="23"/></condition><then pos:line="78" pos:column="23">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="79" pos:column="5">plugin_notification_meta_free<pos:position pos:line="79" pos:column="34"/></name> <argument_list pos:line="79" pos:column="35">(<argument><expr><name><name pos:line="79" pos:column="36">n<pos:position pos:line="79" pos:column="37"/></name><operator pos:line="79" pos:column="37">-&gt;<pos:position pos:line="79" pos:column="42"/></operator><name pos:line="79" pos:column="39">meta<pos:position pos:line="79" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="45"/></expr_stmt></block></then></if>
  <expr_stmt><expr><name><name pos:line="80" pos:column="3">n<pos:position pos:line="80" pos:column="4"/></name><operator pos:line="80" pos:column="4">-&gt;<pos:position pos:line="80" pos:column="9"/></operator><name pos:line="80" pos:column="6">meta<pos:position pos:line="80" pos:column="10"/></name></name> <operator pos:line="80" pos:column="11">=<pos:position pos:line="80" pos:column="12"/></operator> <name pos:line="80" pos:column="13">NULL<pos:position pos:line="80" pos:column="17"/></name></expr>;<pos:position pos:line="80" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="81" pos:column="3">sfree<pos:position pos:line="81" pos:column="8"/></name> <argument_list pos:line="81" pos:column="9">(<argument><expr><name pos:line="81" pos:column="10">arg<pos:position pos:line="81" pos:column="13"/></name></expr></argument>)<pos:position pos:line="81" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="82" pos:column="3">pthread_exit<pos:position pos:line="82" pos:column="15"/></name> <argument_list pos:line="82" pos:column="16">(<argument><expr><operator pos:line="82" pos:column="17">(<pos:position pos:line="82" pos:column="18"/></operator><name pos:line="82" pos:column="18">void<pos:position pos:line="82" pos:column="22"/></name> <operator pos:line="82" pos:column="23">*<pos:position pos:line="82" pos:column="24"/></operator><operator pos:line="82" pos:column="24">)<pos:position pos:line="82" pos:column="25"/></operator> <literal type="number" pos:line="82" pos:column="26">0<pos:position pos:line="82" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="29"/></expr_stmt>
  <return pos:line="83" pos:column="3">return <expr><operator pos:line="83" pos:column="10">(<pos:position pos:line="83" pos:column="11"/></operator><name pos:line="83" pos:column="11">NULL<pos:position pos:line="83" pos:column="15"/></name><operator pos:line="83" pos:column="15">)<pos:position pos:line="83" pos:column="16"/></operator></expr>;<pos:position pos:line="83" pos:column="17"/></return>
}<pos:position pos:line="84" pos:column="2"/></block></function></unit>

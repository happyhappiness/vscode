<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_25_collectd-4.7.3.cpp" pos:tabs="8"><function_decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">lt_ptr<pos:position pos:line="1" pos:column="14"/></name></type>
<name pos:line="2" pos:column="1">sys_shl_sym<pos:position pos:line="2" pos:column="12"/></name> <parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">loader_data<pos:position pos:line="2" pos:column="25"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="27">module<pos:position pos:line="2" pos:column="33"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="35">symbol<pos:position pos:line="2" pos:column="41"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="42"/></parameter_list>
     <decl_stmt><decl><type><name pos:line="3" pos:column="6">lt_user_data<pos:position pos:line="3" pos:column="18"/></name></type> <name pos:line="3" pos:column="19">loader_data<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
     <decl_stmt><decl><type><name pos:line="4" pos:column="6">lt_module<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">module<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
     <decl_stmt><decl><type><specifier pos:line="5" pos:column="6">const<pos:position pos:line="5" pos:column="11"/></specifier> <name pos:line="5" pos:column="12">char<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">symbol<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
<block pos:line="6" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">lt_ptr<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">address<pos:position pos:line="7" pos:column="17"/></name> <init pos:line="7" pos:column="18">= <expr><literal type="number" pos:line="7" pos:column="20">0<pos:position pos:line="7" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>

  <comment type="block" pos:line="9" pos:column="3">/* sys_shl_open should never return a NULL module handle */</comment>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">module<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">==<pos:position pos:line="10" pos:column="16"/></operator> <operator pos:line="10" pos:column="17">(<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="18">lt_module<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">)<pos:position pos:line="10" pos:column="28"/></operator> <literal type="number" pos:line="10" pos:column="29">0<pos:position pos:line="10" pos:column="30"/></literal></expr>)<pos:position pos:line="10" pos:column="31"/></condition><then pos:line="10" pos:column="31">
  <block pos:line="11" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">LT_DLMUTEX_SETERROR<pos:position pos:line="12" pos:column="24"/></name> <argument_list pos:line="12" pos:column="25">(<argument><expr><call><name pos:line="12" pos:column="26">LT_DLSTRERROR<pos:position pos:line="12" pos:column="39"/></name> <argument_list pos:line="12" pos:column="40">(<argument><expr><name pos:line="12" pos:column="41">INVALID_HANDLE<pos:position pos:line="12" pos:column="55"/></name></expr></argument>)<pos:position pos:line="12" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="58"/></expr_stmt>
  }<pos:position pos:line="13" pos:column="4"/></block></then>
  <elseif pos:line="14" pos:column="3">else <if pos:line="14" pos:column="8">if <condition pos:line="14" pos:column="11">(<expr><operator pos:line="14" pos:column="12">!<pos:position pos:line="14" pos:column="13"/></operator><call><name pos:line="14" pos:column="13">shl_findsym<pos:position pos:line="14" pos:column="24"/></name><argument_list pos:line="14" pos:column="24">(<argument><expr><operator pos:line="14" pos:column="25">(<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="26">shl_t<pos:position pos:line="14" pos:column="31"/></name><operator pos:line="14" pos:column="31">*<pos:position pos:line="14" pos:column="32"/></operator><operator pos:line="14" pos:column="32">)<pos:position pos:line="14" pos:column="33"/></operator> <operator pos:line="14" pos:column="34">&amp;<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="35">module<pos:position pos:line="14" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="43">symbol<pos:position pos:line="14" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="51">TYPE_UNDEFINED<pos:position pos:line="14" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="67">&amp;<pos:position pos:line="14" pos:column="72"/></operator><name pos:line="14" pos:column="68">address<pos:position pos:line="14" pos:column="75"/></name></expr></argument>)<pos:position pos:line="14" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="77"/></condition><then pos:line="14" pos:column="77">
    <block pos:line="15" pos:column="5">{
      <if pos:line="16" pos:column="7">if <condition pos:line="16" pos:column="10">(<expr><operator pos:line="16" pos:column="11">!<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="12">address<pos:position pos:line="16" pos:column="19"/></name></expr>)<pos:position pos:line="16" pos:column="20"/></condition><then pos:line="16" pos:column="20">
	<block pos:line="17" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="18" pos:column="11">LT_DLMUTEX_SETERROR<pos:position pos:line="18" pos:column="30"/></name> <argument_list pos:line="18" pos:column="31">(<argument><expr><call><name pos:line="18" pos:column="32">LT_DLSTRERROR<pos:position pos:line="18" pos:column="45"/></name> <argument_list pos:line="18" pos:column="46">(<argument><expr><name pos:line="18" pos:column="47">SYMBOL_NOT_FOUND<pos:position pos:line="18" pos:column="63"/></name></expr></argument>)<pos:position pos:line="18" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="66"/></expr_stmt>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if></elseif></if>

  <return pos:line="22" pos:column="3">return <expr><name pos:line="22" pos:column="10">address<pos:position pos:line="22" pos:column="17"/></name></expr>;<pos:position pos:line="22" pos:column="18"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function_decl></unit>

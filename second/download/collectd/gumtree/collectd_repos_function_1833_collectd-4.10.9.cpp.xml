<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1833_collectd-4.10.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">iptcc_chain_index_alloc<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">TC_HANDLE_T<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">h<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name> <name pos:line="3" pos:column="18">int<pos:position pos:line="3" pos:column="21"/></name></type> <name pos:line="3" pos:column="22">list_length<pos:position pos:line="3" pos:column="33"/></name> <init pos:line="3" pos:column="34">= <expr><name pos:line="3" pos:column="36">CHAIN_INDEX_BUCKET_LEN<pos:position pos:line="3" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="59"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">int<pos:position pos:line="4" pos:column="21"/></name></type> <name pos:line="4" pos:column="22">array_elems<pos:position pos:line="4" pos:column="33"/></name></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">unsigned<pos:position pos:line="5" pos:column="17"/></name> <name pos:line="5" pos:column="18">int<pos:position pos:line="5" pos:column="21"/></name></type> <name pos:line="5" pos:column="22">array_mem<pos:position pos:line="5" pos:column="31"/></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>

	<comment type="block" pos:line="7" pos:column="9">/* Allocate memory for the chain index array */</comment>
	<expr_stmt><expr><name pos:line="8" pos:column="9">array_elems<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">=<pos:position pos:line="8" pos:column="22"/></operator> <operator pos:line="8" pos:column="23">(<pos:position pos:line="8" pos:column="24"/></operator><name><name pos:line="8" pos:column="24">h<pos:position pos:line="8" pos:column="25"/></name><operator pos:line="8" pos:column="25">-&gt;<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="27">num_chains<pos:position pos:line="8" pos:column="37"/></name></name> <operator pos:line="8" pos:column="38">/<pos:position pos:line="8" pos:column="39"/></operator> <name pos:line="8" pos:column="40">list_length<pos:position pos:line="8" pos:column="51"/></name><operator pos:line="8" pos:column="51">)<pos:position pos:line="8" pos:column="52"/></operator> <operator pos:line="8" pos:column="53">+<pos:position pos:line="8" pos:column="54"/></operator>
                      <operator pos:line="9" pos:column="23">(<pos:position pos:line="9" pos:column="24"/></operator><ternary><condition><expr><name><name pos:line="9" pos:column="24">h<pos:position pos:line="9" pos:column="25"/></name><operator pos:line="9" pos:column="25">-&gt;<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="27">num_chains<pos:position pos:line="9" pos:column="37"/></name></name> <operator pos:line="9" pos:column="38">%<pos:position pos:line="9" pos:column="39"/></operator> <name pos:line="9" pos:column="40">list_length<pos:position pos:line="9" pos:column="51"/></name></expr> ?<pos:position pos:line="9" pos:column="53"/></condition><then pos:line="9" pos:column="53"> <expr><literal type="number" pos:line="9" pos:column="54">1<pos:position pos:line="9" pos:column="55"/></literal></expr> <pos:position pos:line="9" pos:column="56"/></then><else pos:line="9" pos:column="56">: <expr><literal type="number" pos:line="9" pos:column="58">0<pos:position pos:line="9" pos:column="59"/></literal></expr></else></ternary><operator pos:line="9" pos:column="59">)<pos:position pos:line="9" pos:column="60"/></operator></expr>;<pos:position pos:line="9" pos:column="61"/></expr_stmt>
	<expr_stmt><expr><name pos:line="10" pos:column="9">array_mem<pos:position pos:line="10" pos:column="18"/></name>   <operator pos:line="10" pos:column="21">=<pos:position pos:line="10" pos:column="22"/></operator> <sizeof pos:line="10" pos:column="23">sizeof<argument_list pos:line="10" pos:column="29">(<argument><expr><name><name pos:line="10" pos:column="30">h<pos:position pos:line="10" pos:column="31"/></name><operator pos:line="10" pos:column="31">-&gt;<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="33">chain_index<pos:position pos:line="10" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="45"/></argument_list></sizeof> <operator pos:line="10" pos:column="46">*<pos:position pos:line="10" pos:column="47"/></operator> <name pos:line="10" pos:column="48">array_elems<pos:position pos:line="10" pos:column="59"/></name></expr>;<pos:position pos:line="10" pos:column="60"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="12" pos:column="9">debug<pos:position pos:line="12" pos:column="14"/></name><argument_list pos:line="12" pos:column="14">(<argument><expr><literal type="string" pos:line="12" pos:column="15">"Alloc Chain index, elems:%d mem:%d bytes\n"<pos:position pos:line="12" pos:column="59"/></literal></expr></argument>,
	      <argument><expr><name pos:line="13" pos:column="15">array_elems<pos:position pos:line="13" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="28">array_mem<pos:position pos:line="13" pos:column="37"/></name></expr></argument>)<pos:position pos:line="13" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="39"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="15" pos:column="9">h<pos:position pos:line="15" pos:column="10"/></name><operator pos:line="15" pos:column="10">-&gt;<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="12">chain_index<pos:position pos:line="15" pos:column="23"/></name></name> <operator pos:line="15" pos:column="24">=<pos:position pos:line="15" pos:column="25"/></operator> <call><name pos:line="15" pos:column="26">malloc<pos:position pos:line="15" pos:column="32"/></name><argument_list pos:line="15" pos:column="32">(<argument><expr><name pos:line="15" pos:column="33">array_mem<pos:position pos:line="15" pos:column="42"/></name></expr></argument>)<pos:position pos:line="15" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="44"/></expr_stmt>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">!<pos:position pos:line="16" pos:column="14"/></operator><name><name pos:line="16" pos:column="14">h<pos:position pos:line="16" pos:column="15"/></name><operator pos:line="16" pos:column="15">-&gt;<pos:position pos:line="16" pos:column="20"/></operator><name pos:line="16" pos:column="17">chain_index<pos:position pos:line="16" pos:column="28"/></name></name></expr>)<pos:position pos:line="16" pos:column="29"/></condition><then pos:line="16" pos:column="29"> <block pos:line="16" pos:column="30">{
		<expr_stmt><expr><name><name pos:line="17" pos:column="17">h<pos:position pos:line="17" pos:column="18"/></name><operator pos:line="17" pos:column="18">-&gt;<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="20">chain_index_sz<pos:position pos:line="17" pos:column="34"/></name></name> <operator pos:line="17" pos:column="35">=<pos:position pos:line="17" pos:column="36"/></operator> <literal type="number" pos:line="17" pos:column="37">0<pos:position pos:line="17" pos:column="38"/></literal></expr>;<pos:position pos:line="17" pos:column="39"/></expr_stmt>
		<return pos:line="18" pos:column="17">return <expr><operator pos:line="18" pos:column="24">-<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="25">ENOMEM<pos:position pos:line="18" pos:column="31"/></name></expr>;<pos:position pos:line="18" pos:column="32"/></return>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="20" pos:column="9">memset<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><name><name pos:line="20" pos:column="16">h<pos:position pos:line="20" pos:column="17"/></name><operator pos:line="20" pos:column="17">-&gt;<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="19">chain_index<pos:position pos:line="20" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="32">0<pos:position pos:line="20" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="35">array_mem<pos:position pos:line="20" pos:column="44"/></name></expr></argument>)<pos:position pos:line="20" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="21" pos:column="9">h<pos:position pos:line="21" pos:column="10"/></name><operator pos:line="21" pos:column="10">-&gt;<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="12">chain_index_sz<pos:position pos:line="21" pos:column="26"/></name></name> <operator pos:line="21" pos:column="27">=<pos:position pos:line="21" pos:column="28"/></operator> <name pos:line="21" pos:column="29">array_elems<pos:position pos:line="21" pos:column="40"/></name></expr>;<pos:position pos:line="21" pos:column="41"/></expr_stmt>

	<return pos:line="23" pos:column="9">return <expr><literal type="number" pos:line="23" pos:column="16">1<pos:position pos:line="23" pos:column="17"/></literal></expr>;<pos:position pos:line="23" pos:column="18"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

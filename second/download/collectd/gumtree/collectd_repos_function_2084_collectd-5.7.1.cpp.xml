<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2084_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cmc_read_page<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">web_page_t<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">wp<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list> <comment type="block" pos:line="1" pos:column="42">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">memcached_return<pos:position pos:line="3" pos:column="19"/></name></type> <name pos:line="3" pos:column="20">rc<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">string_length<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">uint32_t<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">flags<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">status<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name><name pos:line="8" pos:column="7">wp<pos:position pos:line="8" pos:column="9"/></name><operator pos:line="8" pos:column="9">-&gt;<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="11">memc<pos:position pos:line="8" pos:column="15"/></name></name> <operator pos:line="8" pos:column="16">==<pos:position pos:line="8" pos:column="18"/></operator> <name pos:line="8" pos:column="19">NULL<pos:position pos:line="8" pos:column="23"/></name></expr>)<pos:position pos:line="8" pos:column="24"/></condition><then pos:line="8" pos:column="24">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><operator pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></operator><operator pos:line="9" pos:column="13">-<pos:position pos:line="9" pos:column="14"/></operator><literal type="number" pos:line="9" pos:column="14">1<pos:position pos:line="9" pos:column="15"/></literal><operator pos:line="9" pos:column="15">)<pos:position pos:line="9" pos:column="16"/></operator></expr>;<pos:position pos:line="9" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="11" pos:column="3">wp<pos:position pos:line="11" pos:column="5"/></name><operator pos:line="11" pos:column="5">-&gt;<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="7">buffer<pos:position pos:line="11" pos:column="13"/></name></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <call><name pos:line="11" pos:column="16">memcached_get<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><name><name pos:line="11" pos:column="30">wp<pos:position pos:line="11" pos:column="32"/></name><operator pos:line="11" pos:column="32">-&gt;<pos:position pos:line="11" pos:column="37"/></operator><name pos:line="11" pos:column="34">memc<pos:position pos:line="11" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="40">wp<pos:position pos:line="11" pos:column="42"/></name><operator pos:line="11" pos:column="42">-&gt;<pos:position pos:line="11" pos:column="47"/></operator><name pos:line="11" pos:column="44">key<pos:position pos:line="11" pos:column="47"/></name></name></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="49">strlen<pos:position pos:line="11" pos:column="55"/></name><argument_list pos:line="11" pos:column="55">(<argument><expr><name><name pos:line="11" pos:column="56">wp<pos:position pos:line="11" pos:column="58"/></name><operator pos:line="11" pos:column="58">-&gt;<pos:position pos:line="11" pos:column="63"/></operator><name pos:line="11" pos:column="60">key<pos:position pos:line="11" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="11" pos:column="66">&amp;<pos:position pos:line="11" pos:column="71"/></operator><name pos:line="11" pos:column="67">string_length<pos:position pos:line="11" pos:column="80"/></name></expr></argument>,
                             <argument><expr><operator pos:line="12" pos:column="30">&amp;<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="31">flags<pos:position pos:line="12" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="38">&amp;<pos:position pos:line="12" pos:column="43"/></operator><name pos:line="12" pos:column="39">rc<pos:position pos:line="12" pos:column="41"/></name></expr></argument>)<pos:position pos:line="12" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="43"/></expr_stmt>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">rc<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">!=<pos:position pos:line="13" pos:column="12"/></operator> <name pos:line="13" pos:column="13">MEMCACHED_SUCCESS<pos:position pos:line="13" pos:column="30"/></name></expr>)<pos:position pos:line="13" pos:column="31"/></condition><then pos:line="13" pos:column="31"> <block pos:line="13" pos:column="32">{
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">ERROR<pos:position pos:line="14" pos:column="10"/></name><argument_list pos:line="14" pos:column="10">(<argument><expr><literal type="string" pos:line="14" pos:column="11">"memcachec plugin: memcached_get failed: %s"<pos:position pos:line="14" pos:column="55"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="15" pos:column="11">memcached_strerror<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">(<argument><expr><name><name pos:line="15" pos:column="30">wp<pos:position pos:line="15" pos:column="32"/></name><operator pos:line="15" pos:column="32">-&gt;<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="34">memc<pos:position pos:line="15" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="40">rc<pos:position pos:line="15" pos:column="42"/></name></expr></argument>)<pos:position pos:line="15" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="45"/></expr_stmt>
    <return pos:line="16" pos:column="5">return <expr><operator pos:line="16" pos:column="12">(<pos:position pos:line="16" pos:column="13"/></operator><operator pos:line="16" pos:column="13">-<pos:position pos:line="16" pos:column="14"/></operator><literal type="number" pos:line="16" pos:column="14">1<pos:position pos:line="16" pos:column="15"/></literal><operator pos:line="16" pos:column="15">)<pos:position pos:line="16" pos:column="16"/></operator></expr>;<pos:position pos:line="16" pos:column="17"/></return>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>

  <for pos:line="19" pos:column="3">for <control pos:line="19" pos:column="7">(<init><decl><type><name pos:line="19" pos:column="8">web_match_t<pos:position pos:line="19" pos:column="19"/></name> <modifier pos:line="19" pos:column="20">*<pos:position pos:line="19" pos:column="21"/></modifier></type><name pos:line="19" pos:column="21">wm<pos:position pos:line="19" pos:column="23"/></name> <init pos:line="19" pos:column="24">= <expr><name><name pos:line="19" pos:column="26">wp<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">-&gt;<pos:position pos:line="19" pos:column="33"/></operator><name pos:line="19" pos:column="30">matches<pos:position pos:line="19" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="19" pos:column="38"/></init> <condition><expr><name pos:line="19" pos:column="39">wm<pos:position pos:line="19" pos:column="41"/></name> <operator pos:line="19" pos:column="42">!=<pos:position pos:line="19" pos:column="44"/></operator> <name pos:line="19" pos:column="45">NULL<pos:position pos:line="19" pos:column="49"/></name></expr>;<pos:position pos:line="19" pos:column="50"/></condition> <incr><expr><name pos:line="19" pos:column="51">wm<pos:position pos:line="19" pos:column="53"/></name> <operator pos:line="19" pos:column="54">=<pos:position pos:line="19" pos:column="55"/></operator> <name><name pos:line="19" pos:column="56">wm<pos:position pos:line="19" pos:column="58"/></name><operator pos:line="19" pos:column="58">-&gt;<pos:position pos:line="19" pos:column="63"/></operator><name pos:line="19" pos:column="60">next<pos:position pos:line="19" pos:column="64"/></name></name></expr></incr>)<pos:position pos:line="19" pos:column="65"/></control> <block pos:line="19" pos:column="66">{
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">cu_match_value_t<pos:position pos:line="20" pos:column="21"/></name> <modifier pos:line="20" pos:column="22">*<pos:position pos:line="20" pos:column="23"/></modifier></type><name pos:line="20" pos:column="23">mv<pos:position pos:line="20" pos:column="25"/></name></decl>;<pos:position pos:line="20" pos:column="26"/></decl_stmt>

    <expr_stmt><expr><name pos:line="22" pos:column="5">status<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <call><name pos:line="22" pos:column="14">match_apply<pos:position pos:line="22" pos:column="25"/></name><argument_list pos:line="22" pos:column="25">(<argument><expr><name><name pos:line="22" pos:column="26">wm<pos:position pos:line="22" pos:column="28"/></name><operator pos:line="22" pos:column="28">-&gt;<pos:position pos:line="22" pos:column="33"/></operator><name pos:line="22" pos:column="30">match<pos:position pos:line="22" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="37">wp<pos:position pos:line="22" pos:column="39"/></name><operator pos:line="22" pos:column="39">-&gt;<pos:position pos:line="22" pos:column="44"/></operator><name pos:line="22" pos:column="41">buffer<pos:position pos:line="22" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="49"/></expr_stmt>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name pos:line="23" pos:column="9">status<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">!=<pos:position pos:line="23" pos:column="18"/></operator> <literal type="number" pos:line="23" pos:column="19">0<pos:position pos:line="23" pos:column="20"/></literal></expr>)<pos:position pos:line="23" pos:column="21"/></condition><then pos:line="23" pos:column="21"> <block pos:line="23" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="24" pos:column="7">WARNING<pos:position pos:line="24" pos:column="14"/></name><argument_list pos:line="24" pos:column="14">(<argument><expr><literal type="string" pos:line="24" pos:column="15">"memcachec plugin: match_apply failed."<pos:position pos:line="24" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="56"/></expr_stmt>
      <continue pos:line="25" pos:column="7">continue;<pos:position pos:line="25" pos:column="16"/></continue>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="28" pos:column="5">mv<pos:position pos:line="28" pos:column="7"/></name> <operator pos:line="28" pos:column="8">=<pos:position pos:line="28" pos:column="9"/></operator> <call><name pos:line="28" pos:column="10">match_get_user_data<pos:position pos:line="28" pos:column="29"/></name><argument_list pos:line="28" pos:column="29">(<argument><expr><name><name pos:line="28" pos:column="30">wm<pos:position pos:line="28" pos:column="32"/></name><operator pos:line="28" pos:column="32">-&gt;<pos:position pos:line="28" pos:column="37"/></operator><name pos:line="28" pos:column="34">match<pos:position pos:line="28" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="41"/></expr_stmt>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">mv<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">==<pos:position pos:line="29" pos:column="14"/></operator> <name pos:line="29" pos:column="15">NULL<pos:position pos:line="29" pos:column="19"/></name></expr>)<pos:position pos:line="29" pos:column="20"/></condition><then pos:line="29" pos:column="20"> <block pos:line="29" pos:column="21">{
      <expr_stmt><expr><call><name pos:line="30" pos:column="7">WARNING<pos:position pos:line="30" pos:column="14"/></name><argument_list pos:line="30" pos:column="14">(<argument><expr><literal type="string" pos:line="30" pos:column="15">"memcachec plugin: match_get_user_data returned NULL."<pos:position pos:line="30" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="71"/></expr_stmt>
      <continue pos:line="31" pos:column="7">continue;<pos:position pos:line="31" pos:column="16"/></continue>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="34" pos:column="5">cmc_submit<pos:position pos:line="34" pos:column="15"/></name><argument_list pos:line="34" pos:column="15">(<argument><expr><name pos:line="34" pos:column="16">wp<pos:position pos:line="34" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="20">wm<pos:position pos:line="34" pos:column="22"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="24">mv<pos:position pos:line="34" pos:column="26"/></name><operator pos:line="34" pos:column="26">-&gt;<pos:position pos:line="34" pos:column="31"/></operator><name pos:line="34" pos:column="28">value<pos:position pos:line="34" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">match_value_reset<pos:position pos:line="35" pos:column="22"/></name><argument_list pos:line="35" pos:column="22">(<argument><expr><name pos:line="35" pos:column="23">mv<pos:position pos:line="35" pos:column="25"/></name></expr></argument>)<pos:position pos:line="35" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="36" pos:column="4"/></block></for> <comment type="block" pos:line="36" pos:column="5">/* for (wm = wp-&gt;matches; wm != NULL; wm = wm-&gt;next) */</comment>

  <expr_stmt><expr><call><name pos:line="38" pos:column="3">sfree<pos:position pos:line="38" pos:column="8"/></name><argument_list pos:line="38" pos:column="8">(<argument><expr><name><name pos:line="38" pos:column="9">wp<pos:position pos:line="38" pos:column="11"/></name><operator pos:line="38" pos:column="11">-&gt;<pos:position pos:line="38" pos:column="16"/></operator><name pos:line="38" pos:column="13">buffer<pos:position pos:line="38" pos:column="19"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="21"/></expr_stmt>

  <return pos:line="40" pos:column="3">return <expr><operator pos:line="40" pos:column="10">(<pos:position pos:line="40" pos:column="11"/></operator><literal type="number" pos:line="40" pos:column="11">0<pos:position pos:line="40" pos:column="12"/></literal><operator pos:line="40" pos:column="12">)<pos:position pos:line="40" pos:column="13"/></operator></expr>;<pos:position pos:line="40" pos:column="14"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

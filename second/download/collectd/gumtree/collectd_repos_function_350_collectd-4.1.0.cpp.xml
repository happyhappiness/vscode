<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_350_collectd-4.1.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">perl_shutdown<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">void<pos:position pos:line="1" pos:column="31"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name>   <init pos:line="3" pos:column="17">= <expr><literal type="number" pos:line="3" pos:column="19">0<pos:position pos:line="3" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">ret<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><literal type="number" pos:line="4" pos:column="19">0<pos:position pos:line="4" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="6" pos:column="9">plugin_unregister_log<pos:position pos:line="6" pos:column="30"/></name> <argument_list pos:line="6" pos:column="31">(<argument><expr><literal type="string" pos:line="6" pos:column="32">"perl"<pos:position pos:line="6" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="7" pos:column="9">plugin_unregister_config<pos:position pos:line="7" pos:column="33"/></name> <argument_list pos:line="7" pos:column="34">(<argument><expr><literal type="string" pos:line="7" pos:column="35">"perl"<pos:position pos:line="7" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">plugin_unregister_init<pos:position pos:line="8" pos:column="31"/></name> <argument_list pos:line="8" pos:column="32">(<argument><expr><literal type="string" pos:line="8" pos:column="33">"perl"<pos:position pos:line="8" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">plugin_unregister_read<pos:position pos:line="9" pos:column="31"/></name> <argument_list pos:line="9" pos:column="32">(<argument><expr><literal type="string" pos:line="9" pos:column="33">"perl"<pos:position pos:line="9" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="10" pos:column="9">plugin_unregister_write<pos:position pos:line="10" pos:column="32"/></name> <argument_list pos:line="10" pos:column="33">(<argument><expr><literal type="string" pos:line="10" pos:column="34">"perl"<pos:position pos:line="10" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="42"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="12" pos:column="9">assert<pos:position pos:line="12" pos:column="15"/></name> <argument_list pos:line="12" pos:column="16">(<argument><expr><name pos:line="12" pos:column="17">NULL<pos:position pos:line="12" pos:column="21"/></name> <operator pos:line="12" pos:column="22">!=<pos:position pos:line="12" pos:column="24"/></operator> <name pos:line="12" pos:column="25">perl<pos:position pos:line="12" pos:column="29"/></name></expr></argument>)<pos:position pos:line="12" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="31"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="14" pos:column="9">PERL_SET_CONTEXT<pos:position pos:line="14" pos:column="25"/></name> <argument_list pos:line="14" pos:column="26">(<argument><expr><name pos:line="14" pos:column="27">perl<pos:position pos:line="14" pos:column="31"/></name></expr></argument>)<pos:position pos:line="14" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name pos:line="15" pos:column="9">ret<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <call><name pos:line="15" pos:column="15">pplugin_call_all<pos:position pos:line="15" pos:column="31"/></name> <argument_list pos:line="15" pos:column="32">(<argument><expr><name pos:line="15" pos:column="33">PLUGIN_SHUTDOWN<pos:position pos:line="15" pos:column="48"/></name></expr></argument>)<pos:position pos:line="15" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="50"/></expr_stmt>

	<for pos:line="17" pos:column="9">for <control pos:line="17" pos:column="13">(<init><expr><name pos:line="17" pos:column="14">i<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <literal type="number" pos:line="17" pos:column="18">0<pos:position pos:line="17" pos:column="19"/></literal></expr>;<pos:position pos:line="17" pos:column="20"/></init> <condition><expr><name pos:line="17" pos:column="21">i<pos:position pos:line="17" pos:column="22"/></name> <operator pos:line="17" pos:column="23">&lt;<pos:position pos:line="17" pos:column="27"/></operator> <name pos:line="17" pos:column="25">PLUGIN_TYPES<pos:position pos:line="17" pos:column="37"/></name></expr>;<pos:position pos:line="17" pos:column="38"/></condition> <incr><expr><operator pos:line="17" pos:column="39">++<pos:position pos:line="17" pos:column="41"/></operator><name pos:line="17" pos:column="41">i<pos:position pos:line="17" pos:column="42"/></name></expr></incr>)<pos:position pos:line="17" pos:column="43"/></control> <block pos:line="17" pos:column="44">{
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><literal type="number" pos:line="18" pos:column="21">0<pos:position pos:line="18" pos:column="22"/></literal> <operator pos:line="18" pos:column="23">&lt;<pos:position pos:line="18" pos:column="27"/></operator> <call><name pos:line="18" pos:column="25">Perl_hv_iterinit<pos:position pos:line="18" pos:column="41"/></name> <argument_list pos:line="18" pos:column="42">(<argument><expr><name pos:line="18" pos:column="43">perl<pos:position pos:line="18" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="49">plugins<pos:position pos:line="18" pos:column="56"/></name><index pos:line="18" pos:column="56">[<expr><name pos:line="18" pos:column="57">i<pos:position pos:line="18" pos:column="58"/></name></expr>]<pos:position pos:line="18" pos:column="59"/></index></name></expr></argument>)<pos:position pos:line="18" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="61"/></condition><then pos:line="18" pos:column="61"> <block pos:line="18" pos:column="62">{
			<decl_stmt><decl><type><name pos:line="19" pos:column="25">char<pos:position pos:line="19" pos:column="29"/></name> <modifier pos:line="19" pos:column="30">*<pos:position pos:line="19" pos:column="31"/></modifier></type><name pos:line="19" pos:column="31">k<pos:position pos:line="19" pos:column="32"/></name> <init pos:line="19" pos:column="33">= <expr><name pos:line="19" pos:column="35">NULL<pos:position pos:line="19" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="40"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="20" pos:column="25">I32<pos:position pos:line="20" pos:column="28"/></name></type>  <name pos:line="20" pos:column="30">l<pos:position pos:line="20" pos:column="31"/></name>  <init pos:line="20" pos:column="33">= <expr><literal type="number" pos:line="20" pos:column="35">0<pos:position pos:line="20" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="37"/></decl_stmt>

			<while pos:line="22" pos:column="25">while <condition pos:line="22" pos:column="31">(<expr><name pos:line="22" pos:column="32">NULL<pos:position pos:line="22" pos:column="36"/></name> <operator pos:line="22" pos:column="37">!=<pos:position pos:line="22" pos:column="39"/></operator> <call><name pos:line="22" pos:column="40">Perl_hv_iternextsv<pos:position pos:line="22" pos:column="58"/></name> <argument_list pos:line="22" pos:column="59">(<argument><expr><name pos:line="22" pos:column="60">perl<pos:position pos:line="22" pos:column="64"/></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="66">plugins<pos:position pos:line="22" pos:column="73"/></name><index pos:line="22" pos:column="73">[<expr><name pos:line="22" pos:column="74">i<pos:position pos:line="22" pos:column="75"/></name></expr>]<pos:position pos:line="22" pos:column="76"/></index></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="78">&amp;<pos:position pos:line="22" pos:column="83"/></operator><name pos:line="22" pos:column="79">k<pos:position pos:line="22" pos:column="80"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="82">&amp;<pos:position pos:line="22" pos:column="87"/></operator><name pos:line="22" pos:column="83">l<pos:position pos:line="22" pos:column="84"/></name></expr></argument>)<pos:position pos:line="22" pos:column="85"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="86"/></condition> <block pos:line="22" pos:column="87">{
				<expr_stmt><expr><call><name pos:line="23" pos:column="33">pplugin_unregister<pos:position pos:line="23" pos:column="51"/></name> <argument_list pos:line="23" pos:column="52">(<argument><expr><name pos:line="23" pos:column="53">i<pos:position pos:line="23" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="56">k<pos:position pos:line="23" pos:column="57"/></name></expr></argument>)<pos:position pos:line="23" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="59"/></expr_stmt>
			}<pos:position pos:line="24" pos:column="26"/></block></while>
		}<pos:position pos:line="25" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="27" pos:column="17">Perl_hv_undef<pos:position pos:line="27" pos:column="30"/></name> <argument_list pos:line="27" pos:column="31">(<argument><expr><name pos:line="27" pos:column="32">perl<pos:position pos:line="27" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="38">plugins<pos:position pos:line="27" pos:column="45"/></name><index pos:line="27" pos:column="45">[<expr><name pos:line="27" pos:column="46">i<pos:position pos:line="27" pos:column="47"/></name></expr>]<pos:position pos:line="27" pos:column="48"/></index></name></expr></argument>)<pos:position pos:line="27" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="50"/></expr_stmt>
	}<pos:position pos:line="28" pos:column="10"/></block></for>

	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><literal type="number" pos:line="30" pos:column="13">0<pos:position pos:line="30" pos:column="14"/></literal> <operator pos:line="30" pos:column="15">&lt;<pos:position pos:line="30" pos:column="19"/></operator> <call><name pos:line="30" pos:column="17">Perl_hv_iterinit<pos:position pos:line="30" pos:column="33"/></name> <argument_list pos:line="30" pos:column="34">(<argument><expr><name pos:line="30" pos:column="35">perl<pos:position pos:line="30" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="41">data_sets<pos:position pos:line="30" pos:column="50"/></name></expr></argument>)<pos:position pos:line="30" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="52"/></condition><then pos:line="30" pos:column="52"> <block pos:line="30" pos:column="53">{
		<decl_stmt><decl><type><name pos:line="31" pos:column="17">char<pos:position pos:line="31" pos:column="21"/></name> <modifier pos:line="31" pos:column="22">*<pos:position pos:line="31" pos:column="23"/></modifier></type><name pos:line="31" pos:column="23">k<pos:position pos:line="31" pos:column="24"/></name> <init pos:line="31" pos:column="25">= <expr><name pos:line="31" pos:column="27">NULL<pos:position pos:line="31" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="31" pos:column="32"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="32" pos:column="17">I32<pos:position pos:line="32" pos:column="20"/></name></type>  <name pos:line="32" pos:column="22">l<pos:position pos:line="32" pos:column="23"/></name>  <init pos:line="32" pos:column="25">= <expr><literal type="number" pos:line="32" pos:column="27">0<pos:position pos:line="32" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="32" pos:column="29"/></decl_stmt>

		<while pos:line="34" pos:column="17">while <condition pos:line="34" pos:column="23">(<expr><name pos:line="34" pos:column="24">NULL<pos:position pos:line="34" pos:column="28"/></name> <operator pos:line="34" pos:column="29">!=<pos:position pos:line="34" pos:column="31"/></operator> <call><name pos:line="34" pos:column="32">Perl_hv_iternextsv<pos:position pos:line="34" pos:column="50"/></name> <argument_list pos:line="34" pos:column="51">(<argument><expr><name pos:line="34" pos:column="52">perl<pos:position pos:line="34" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="58">data_sets<pos:position pos:line="34" pos:column="67"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="69">&amp;<pos:position pos:line="34" pos:column="74"/></operator><name pos:line="34" pos:column="70">k<pos:position pos:line="34" pos:column="71"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="73">&amp;<pos:position pos:line="34" pos:column="78"/></operator><name pos:line="34" pos:column="74">l<pos:position pos:line="34" pos:column="75"/></name></expr></argument>)<pos:position pos:line="34" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="77"/></condition> <block pos:line="34" pos:column="78">{
			<expr_stmt><expr><call><name pos:line="35" pos:column="25">pplugin_unregister_data_set<pos:position pos:line="35" pos:column="52"/></name> <argument_list pos:line="35" pos:column="53">(<argument><expr><name pos:line="35" pos:column="54">k<pos:position pos:line="35" pos:column="55"/></name></expr></argument>)<pos:position pos:line="35" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="57"/></expr_stmt>
		}<pos:position pos:line="36" pos:column="18"/></block></while>
	}<pos:position pos:line="37" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="39" pos:column="9">Perl_hv_undef<pos:position pos:line="39" pos:column="22"/></name> <argument_list pos:line="39" pos:column="23">(<argument><expr><name pos:line="39" pos:column="24">perl<pos:position pos:line="39" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="30">data_sets<pos:position pos:line="39" pos:column="39"/></name></expr></argument>)<pos:position pos:line="39" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="41"/></expr_stmt>

<cpp:if pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">if<pos:position pos:line="41" pos:column="4"/></cpp:directive> <expr><name pos:line="41" pos:column="5">COLLECT_DEBUG<pos:position pos:line="41" pos:column="18"/></name></expr></cpp:if>
	<expr_stmt><expr><call><name pos:line="42" pos:column="9">Perl_sv_report_used<pos:position pos:line="42" pos:column="28"/></name> <argument_list pos:line="42" pos:column="29">(<argument><expr><name pos:line="42" pos:column="30">perl<pos:position pos:line="42" pos:column="34"/></name></expr></argument>)<pos:position pos:line="42" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="36"/></expr_stmt>
<cpp:endif pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">endif<pos:position pos:line="43" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="43" pos:column="8">/* COLLECT_DEBUG */</comment>

	<expr_stmt><expr><call><name pos:line="45" pos:column="9">perl_destruct<pos:position pos:line="45" pos:column="22"/></name> <argument_list pos:line="45" pos:column="23">(<argument><expr><name pos:line="45" pos:column="24">perl<pos:position pos:line="45" pos:column="28"/></name></expr></argument>)<pos:position pos:line="45" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="46" pos:column="9">perl_free<pos:position pos:line="46" pos:column="18"/></name> <argument_list pos:line="46" pos:column="19">(<argument><expr><name pos:line="46" pos:column="20">perl<pos:position pos:line="46" pos:column="24"/></name></expr></argument>)<pos:position pos:line="46" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name pos:line="47" pos:column="9">perl<pos:position pos:line="47" pos:column="13"/></name> <operator pos:line="47" pos:column="14">=<pos:position pos:line="47" pos:column="15"/></operator> <name pos:line="47" pos:column="16">NULL<pos:position pos:line="47" pos:column="20"/></name></expr>;<pos:position pos:line="47" pos:column="21"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="49" pos:column="9">PERL_SYS_TERM<pos:position pos:line="49" pos:column="22"/></name> <argument_list pos:line="49" pos:column="23">()<pos:position pos:line="49" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="26"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="51" pos:column="9">plugin_unregister_shutdown<pos:position pos:line="51" pos:column="35"/></name> <argument_list pos:line="51" pos:column="36">(<argument><expr><literal type="string" pos:line="51" pos:column="37">"perl"<pos:position pos:line="51" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="45"/></expr_stmt>
	<return pos:line="52" pos:column="9">return <expr><name pos:line="52" pos:column="16">ret<pos:position pos:line="52" pos:column="19"/></name></expr>;<pos:position pos:line="52" pos:column="20"/></return>
}<pos:position pos:line="53" pos:column="2"/></block></function></unit>

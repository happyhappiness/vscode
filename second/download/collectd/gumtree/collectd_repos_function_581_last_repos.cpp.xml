<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_581_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">dpdk_helper_command_handler<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">dpdk_helper_ctx_t<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">phc<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="57">enum<pos:position pos:line="1" pos:column="61"/></name> <name pos:line="1" pos:column="62">DPDK_CMD<pos:position pos:line="1" pos:column="70"/></name></name></type> <name pos:line="1" pos:column="71">cmd<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list> <block pos:line="1" pos:column="76">{
  <if pos:line="2" pos:column="3">if <condition pos:line="2" pos:column="6">(<expr><name pos:line="2" pos:column="7">phc<pos:position pos:line="2" pos:column="10"/></name> <operator pos:line="2" pos:column="11">==<pos:position pos:line="2" pos:column="13"/></operator> <name pos:line="2" pos:column="14">NULL<pos:position pos:line="2" pos:column="18"/></name></expr>)<pos:position pos:line="2" pos:column="19"/></condition><then pos:line="2" pos:column="19"> <block pos:line="2" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">DPDK_CHILD_LOG<pos:position pos:line="3" pos:column="19"/></name><argument_list pos:line="3" pos:column="19">(<argument><expr><name pos:line="3" pos:column="20">DPDK_EVENTS_PLUGIN<pos:position pos:line="3" pos:column="38"/></name> <literal type="string" pos:line="3" pos:column="39">": Invalid argument(phc)\n"<pos:position pos:line="3" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="68"/></expr_stmt>
    <return pos:line="4" pos:column="5">return <expr><operator pos:line="4" pos:column="12">-<pos:position pos:line="4" pos:column="13"/></operator><name pos:line="4" pos:column="13">EINVAL<pos:position pos:line="4" pos:column="19"/></name></expr>;<pos:position pos:line="4" pos:column="20"/></return>
  }<pos:position pos:line="5" pos:column="4"/></block></then></if>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">cmd<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">!=<pos:position pos:line="7" pos:column="13"/></operator> <name pos:line="7" pos:column="14">DPDK_CMD_GET_EVENTS<pos:position pos:line="7" pos:column="33"/></name></expr>)<pos:position pos:line="7" pos:column="34"/></condition><then pos:line="7" pos:column="34"> <block pos:line="7" pos:column="35">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">DPDK_CHILD_LOG<pos:position pos:line="8" pos:column="19"/></name><argument_list pos:line="8" pos:column="19">(<argument><expr><name pos:line="8" pos:column="20">DPDK_EVENTS_PLUGIN<pos:position pos:line="8" pos:column="38"/></name> <literal type="string" pos:line="8" pos:column="39">": Unknown command (cmd=%d)\n"<pos:position pos:line="8" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="71">cmd<pos:position pos:line="8" pos:column="74"/></name></expr></argument>)<pos:position pos:line="8" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="76"/></expr_stmt>
    <return pos:line="9" pos:column="5">return <expr><operator pos:line="9" pos:column="12">-<pos:position pos:line="9" pos:column="13"/></operator><name pos:line="9" pos:column="13">EINVAL<pos:position pos:line="9" pos:column="19"/></name></expr>;<pos:position pos:line="9" pos:column="20"/></return>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name pos:line="12" pos:column="3">dpdk_events_ctx_t<pos:position pos:line="12" pos:column="20"/></name> <modifier pos:line="12" pos:column="21">*<pos:position pos:line="12" pos:column="22"/></modifier></type><name pos:line="12" pos:column="22">ec<pos:position pos:line="12" pos:column="24"/></name> <init pos:line="12" pos:column="25">= <expr><call><name pos:line="12" pos:column="27">DPDK_EVENTS_CTX_GET<pos:position pos:line="12" pos:column="46"/></name><argument_list pos:line="12" pos:column="46">(<argument><expr><name pos:line="12" pos:column="47">phc<pos:position pos:line="12" pos:column="50"/></name></expr></argument>)<pos:position pos:line="12" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="52"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">int<pos:position pos:line="13" pos:column="6"/></name></type> <name pos:line="13" pos:column="7">ret<pos:position pos:line="13" pos:column="10"/></name> <init pos:line="13" pos:column="11">= <expr><literal type="number" pos:line="13" pos:column="13">0<pos:position pos:line="13" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="15"/></decl_stmt>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name><name pos:line="14" pos:column="7">ec<pos:position pos:line="14" pos:column="9"/></name><operator pos:line="14" pos:column="9">-&gt;<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="11">config<pos:position pos:line="14" pos:column="17"/></name><operator pos:line="14" pos:column="17">.<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="18">link_status<pos:position pos:line="14" pos:column="29"/></name><operator pos:line="14" pos:column="29">.<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="30">enabled<pos:position pos:line="14" pos:column="37"/></name></name></expr>)<pos:position pos:line="14" pos:column="38"/></condition><then pos:line="14" pos:column="38">
    <block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="5">ret<pos:position pos:line="15" pos:column="8"/></name> <operator pos:line="15" pos:column="9">=<pos:position pos:line="15" pos:column="10"/></operator> <call><name pos:line="15" pos:column="11">dpdk_helper_link_status_get<pos:position pos:line="15" pos:column="38"/></name><argument_list pos:line="15" pos:column="38">(<argument><expr><name pos:line="15" pos:column="39">phc<pos:position pos:line="15" pos:column="42"/></name></expr></argument>)<pos:position pos:line="15" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="44"/></expr_stmt></block></then></if>

  <return pos:line="17" pos:column="3">return <expr><name pos:line="17" pos:column="10">ret<pos:position pos:line="17" pos:column="13"/></name></expr>;<pos:position pos:line="17" pos:column="14"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

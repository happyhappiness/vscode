<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1282_collectd-5.6.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">Start<pos:position pos:line="1" pos:column="11"/></name><parameter_list pos:line="1" pos:column="11">()<pos:position pos:line="1" pos:column="13"/></parameter_list>
	<block pos:line="2" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="3" pos:column="17">auto<pos:position pos:line="3" pos:column="21"/></name></type> <name pos:line="3" pos:column="22">auth<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><call><name><name pos:line="3" pos:column="29">grpc<pos:position pos:line="3" pos:column="33"/></name><operator pos:line="3" pos:column="33">::<pos:position pos:line="3" pos:column="35"/></operator><name pos:line="3" pos:column="35">InsecureServerCredentials<pos:position pos:line="3" pos:column="60"/></name></name><argument_list pos:line="3" pos:column="60">()<pos:position pos:line="3" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="63"/></decl_stmt>

		<decl_stmt><decl><type><name><name pos:line="5" pos:column="17">grpc<pos:position pos:line="5" pos:column="21"/></name><operator pos:line="5" pos:column="21">::<pos:position pos:line="5" pos:column="23"/></operator><name pos:line="5" pos:column="23">ServerBuilder<pos:position pos:line="5" pos:column="36"/></name></name></type> <name pos:line="5" pos:column="37">builder<pos:position pos:line="5" pos:column="44"/></name></decl>;<pos:position pos:line="5" pos:column="45"/></decl_stmt>

		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><call><name><name pos:line="7" pos:column="21">listeners<pos:position pos:line="7" pos:column="30"/></name><operator pos:line="7" pos:column="30">.<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="31">empty<pos:position pos:line="7" pos:column="36"/></name></name><argument_list pos:line="7" pos:column="36">()<pos:position pos:line="7" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="39"/></condition><then pos:line="7" pos:column="39"> <block pos:line="7" pos:column="40">{
			<expr_stmt><expr><call><name><name pos:line="8" pos:column="25">builder<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">.<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="33">AddListeningPort<pos:position pos:line="8" pos:column="49"/></name></name><argument_list pos:line="8" pos:column="49">(<argument><expr><name pos:line="8" pos:column="50">default_addr<pos:position pos:line="8" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="64">auth<pos:position pos:line="8" pos:column="68"/></name></expr></argument>)<pos:position pos:line="8" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="70"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="9" pos:column="25">INFO<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><literal type="string" pos:line="9" pos:column="30">"grpc: Listening on %s"<pos:position pos:line="9" pos:column="53"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="9" pos:column="55">default_addr<pos:position pos:line="9" pos:column="67"/></name><operator pos:line="9" pos:column="67">.<pos:position pos:line="9" pos:column="68"/></operator><name pos:line="9" pos:column="68">c_str<pos:position pos:line="9" pos:column="73"/></name></name><argument_list pos:line="9" pos:column="73">()<pos:position pos:line="9" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="77"/></expr_stmt>
		}<pos:position pos:line="10" pos:column="18"/></block></then>
		<else pos:line="11" pos:column="17">else <block pos:line="11" pos:column="22">{
			<for pos:line="12" pos:column="25">for <control pos:line="12" pos:column="29">(<init><decl><type><name pos:line="12" pos:column="30">auto<pos:position pos:line="12" pos:column="34"/></name></type> <name pos:line="12" pos:column="35">l<pos:position pos:line="12" pos:column="36"/></name> <range pos:line="12" pos:column="37">: <expr><name pos:line="12" pos:column="39">listeners<pos:position pos:line="12" pos:column="48"/></name></expr></range></decl></init>)<pos:position pos:line="12" pos:column="49"/></control> <block pos:line="12" pos:column="50">{
				<decl_stmt><decl><type><name><name pos:line="13" pos:column="33">grpc<pos:position pos:line="13" pos:column="37"/></name><operator pos:line="13" pos:column="37">::<pos:position pos:line="13" pos:column="39"/></operator><name pos:line="13" pos:column="39">string<pos:position pos:line="13" pos:column="45"/></name></name></type> <name pos:line="13" pos:column="46">addr<pos:position pos:line="13" pos:column="50"/></name> <init pos:line="13" pos:column="51">= <expr><name><name pos:line="13" pos:column="53">l<pos:position pos:line="13" pos:column="54"/></name><operator pos:line="13" pos:column="54">.<pos:position pos:line="13" pos:column="55"/></operator><name pos:line="13" pos:column="55">addr<pos:position pos:line="13" pos:column="59"/></name></name> <operator pos:line="13" pos:column="60">+<pos:position pos:line="13" pos:column="61"/></operator> <literal type="string" pos:line="13" pos:column="62">":"<pos:position pos:line="13" pos:column="65"/></literal> <operator pos:line="13" pos:column="66">+<pos:position pos:line="13" pos:column="67"/></operator> <name><name pos:line="13" pos:column="68">l<pos:position pos:line="13" pos:column="69"/></name><operator pos:line="13" pos:column="69">.<pos:position pos:line="13" pos:column="70"/></operator><name pos:line="13" pos:column="70">port<pos:position pos:line="13" pos:column="74"/></name></name></expr></init></decl>;<pos:position pos:line="13" pos:column="75"/></decl_stmt>

				<decl_stmt><decl><type><name pos:line="15" pos:column="33">auto<pos:position pos:line="15" pos:column="37"/></name></type> <name pos:line="15" pos:column="38">use_ssl<pos:position pos:line="15" pos:column="45"/></name> <init pos:line="15" pos:column="46">= <expr><call><name><name pos:line="15" pos:column="48">grpc<pos:position pos:line="15" pos:column="52"/></name><operator pos:line="15" pos:column="52">::<pos:position pos:line="15" pos:column="54"/></operator><name pos:line="15" pos:column="54">string<pos:position pos:line="15" pos:column="60"/></name></name><argument_list pos:line="15" pos:column="60">(<argument><expr><literal type="string" pos:line="15" pos:column="61">""<pos:position pos:line="15" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="65"/></decl_stmt>
				<decl_stmt><decl><type><name pos:line="16" pos:column="33">auto<pos:position pos:line="16" pos:column="37"/></name></type> <name pos:line="16" pos:column="38">a<pos:position pos:line="16" pos:column="39"/></name> <init pos:line="16" pos:column="40">= <expr><name pos:line="16" pos:column="42">auth<pos:position pos:line="16" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="47"/></decl_stmt>
				<if pos:line="17" pos:column="33">if <condition pos:line="17" pos:column="36">(<expr><name><name pos:line="17" pos:column="37">l<pos:position pos:line="17" pos:column="38"/></name><operator pos:line="17" pos:column="38">.<pos:position pos:line="17" pos:column="39"/></operator><name pos:line="17" pos:column="39">ssl<pos:position pos:line="17" pos:column="42"/></name></name> <operator pos:line="17" pos:column="43">!=<pos:position pos:line="17" pos:column="45"/></operator> <literal type="null" pos:line="17" pos:column="46">nullptr<pos:position pos:line="17" pos:column="53"/></literal></expr>)<pos:position pos:line="17" pos:column="54"/></condition><then pos:line="17" pos:column="54"> <block pos:line="17" pos:column="55">{
					<expr_stmt><expr><name pos:line="18" pos:column="41">use_ssl<pos:position pos:line="18" pos:column="48"/></name> <operator pos:line="18" pos:column="49">=<pos:position pos:line="18" pos:column="50"/></operator> <call><name><name pos:line="18" pos:column="51">grpc<pos:position pos:line="18" pos:column="55"/></name><operator pos:line="18" pos:column="55">::<pos:position pos:line="18" pos:column="57"/></operator><name pos:line="18" pos:column="57">string<pos:position pos:line="18" pos:column="63"/></name></name><argument_list pos:line="18" pos:column="63">(<argument><expr><literal type="string" pos:line="18" pos:column="64">" (SSL enabled)"<pos:position pos:line="18" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="82"/></expr_stmt>
					<expr_stmt><expr><name pos:line="19" pos:column="41">a<pos:position pos:line="19" pos:column="42"/></name> <operator pos:line="19" pos:column="43">=<pos:position pos:line="19" pos:column="44"/></operator> <call><name><name pos:line="19" pos:column="45">grpc<pos:position pos:line="19" pos:column="49"/></name><operator pos:line="19" pos:column="49">::<pos:position pos:line="19" pos:column="51"/></operator><name pos:line="19" pos:column="51">SslServerCredentials<pos:position pos:line="19" pos:column="71"/></name></name><argument_list pos:line="19" pos:column="71">(<argument><expr><operator pos:line="19" pos:column="72">*<pos:position pos:line="19" pos:column="73"/></operator><name><name pos:line="19" pos:column="73">l<pos:position pos:line="19" pos:column="74"/></name><operator pos:line="19" pos:column="74">.<pos:position pos:line="19" pos:column="75"/></operator><name pos:line="19" pos:column="75">ssl<pos:position pos:line="19" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="80"/></expr_stmt>
				}<pos:position pos:line="20" pos:column="34"/></block></then></if>

				<expr_stmt><expr><call><name><name pos:line="22" pos:column="33">builder<pos:position pos:line="22" pos:column="40"/></name><operator pos:line="22" pos:column="40">.<pos:position pos:line="22" pos:column="41"/></operator><name pos:line="22" pos:column="41">AddListeningPort<pos:position pos:line="22" pos:column="57"/></name></name><argument_list pos:line="22" pos:column="57">(<argument><expr><name pos:line="22" pos:column="58">addr<pos:position pos:line="22" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="64">a<pos:position pos:line="22" pos:column="65"/></name></expr></argument>)<pos:position pos:line="22" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="67"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="23" pos:column="33">INFO<pos:position pos:line="23" pos:column="37"/></name><argument_list pos:line="23" pos:column="37">(<argument><expr><literal type="string" pos:line="23" pos:column="38">"grpc: Listening on %s%s"<pos:position pos:line="23" pos:column="63"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="23" pos:column="65">addr<pos:position pos:line="23" pos:column="69"/></name><operator pos:line="23" pos:column="69">.<pos:position pos:line="23" pos:column="70"/></operator><name pos:line="23" pos:column="70">c_str<pos:position pos:line="23" pos:column="75"/></name></name><argument_list pos:line="23" pos:column="75">()<pos:position pos:line="23" pos:column="77"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="23" pos:column="79">use_ssl<pos:position pos:line="23" pos:column="86"/></name><operator pos:line="23" pos:column="86">.<pos:position pos:line="23" pos:column="87"/></operator><name pos:line="23" pos:column="87">c_str<pos:position pos:line="23" pos:column="92"/></name></name><argument_list pos:line="23" pos:column="92">()<pos:position pos:line="23" pos:column="94"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="96"/></expr_stmt>
			}<pos:position pos:line="24" pos:column="26"/></block></for>
		}<pos:position pos:line="25" pos:column="18"/></block></else></if>

		<expr_stmt><expr><call><name><name pos:line="27" pos:column="17">builder<pos:position pos:line="27" pos:column="24"/></name><operator pos:line="27" pos:column="24">.<pos:position pos:line="27" pos:column="25"/></operator><name pos:line="27" pos:column="25">RegisterService<pos:position pos:line="27" pos:column="40"/></name></name><argument_list pos:line="27" pos:column="40">(<argument><expr><operator pos:line="27" pos:column="41">&amp;<pos:position pos:line="27" pos:column="46"/></operator><name pos:line="27" pos:column="42">collectd_service_<pos:position pos:line="27" pos:column="59"/></name></expr></argument>)<pos:position pos:line="27" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="61"/></expr_stmt>

		<expr_stmt><expr><name pos:line="29" pos:column="17">server_<pos:position pos:line="29" pos:column="24"/></name> <operator pos:line="29" pos:column="25">=<pos:position pos:line="29" pos:column="26"/></operator> <call><name><name pos:line="29" pos:column="27">builder<pos:position pos:line="29" pos:column="34"/></name><operator pos:line="29" pos:column="34">.<pos:position pos:line="29" pos:column="35"/></operator><name pos:line="29" pos:column="35">BuildAndStart<pos:position pos:line="29" pos:column="48"/></name></name><argument_list pos:line="29" pos:column="48">()<pos:position pos:line="29" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="51"/></expr_stmt>
	}<pos:position pos:line="30" pos:column="10"/></block></function></unit>

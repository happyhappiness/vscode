<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_959_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">hv2value_list<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">pTHX_<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">HV<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">hash<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">value_list_t<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">vl<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">SV<pos:position pos:line="3" pos:column="11"/></name> <modifier pos:line="3" pos:column="12">*<pos:position pos:line="3" pos:column="13"/></modifier><modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier></type><name pos:line="3" pos:column="14">tmp<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">(<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">NULL<pos:position pos:line="5" pos:column="18"/></name> <operator pos:line="5" pos:column="19">==<pos:position pos:line="5" pos:column="21"/></operator> <name pos:line="5" pos:column="22">hash<pos:position pos:line="5" pos:column="26"/></name><operator pos:line="5" pos:column="26">)<pos:position pos:line="5" pos:column="27"/></operator> <operator pos:line="5" pos:column="28">||<pos:position pos:line="5" pos:column="30"/></operator> <operator pos:line="5" pos:column="31">(<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="32">NULL<pos:position pos:line="5" pos:column="36"/></name> <operator pos:line="5" pos:column="37">==<pos:position pos:line="5" pos:column="39"/></operator> <name pos:line="5" pos:column="40">vl<pos:position pos:line="5" pos:column="42"/></name><operator pos:line="5" pos:column="42">)<pos:position pos:line="5" pos:column="43"/></operator></expr>)<pos:position pos:line="5" pos:column="44"/></condition><then pos:line="5" pos:column="44">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><operator pos:line="6" pos:column="24">-<pos:position pos:line="6" pos:column="25"/></operator><literal type="number" pos:line="6" pos:column="25">1<pos:position pos:line="6" pos:column="26"/></literal></expr>;<pos:position pos:line="6" pos:column="27"/></return></block></then></if>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">NULL<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">==<pos:position pos:line="8" pos:column="20"/></operator> <operator pos:line="8" pos:column="21">(<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="22">tmp<pos:position pos:line="8" pos:column="25"/></name> <operator pos:line="8" pos:column="26">=<pos:position pos:line="8" pos:column="27"/></operator> <call><name pos:line="8" pos:column="28">hv_fetch<pos:position pos:line="8" pos:column="36"/></name> <argument_list pos:line="8" pos:column="37">(<argument><expr><name pos:line="8" pos:column="38">hash<pos:position pos:line="8" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="44">"type"<pos:position pos:line="8" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="52">4<pos:position pos:line="8" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="55">0<pos:position pos:line="8" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="57"/></argument_list></call><operator pos:line="8" pos:column="57">)<pos:position pos:line="8" pos:column="58"/></operator></expr>)<pos:position pos:line="8" pos:column="59"/></condition><then pos:line="8" pos:column="59"> <block pos:line="8" pos:column="60">{
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">log_err<pos:position pos:line="9" pos:column="24"/></name> <argument_list pos:line="9" pos:column="25">(<argument><expr><literal type="string" pos:line="9" pos:column="26">"hv2value_list: No type given."<pos:position pos:line="9" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="59"/></expr_stmt>
		<return pos:line="10" pos:column="17">return <expr><operator pos:line="10" pos:column="24">-<pos:position pos:line="10" pos:column="25"/></operator><literal type="number" pos:line="10" pos:column="25">1<pos:position pos:line="10" pos:column="26"/></literal></expr>;<pos:position pos:line="10" pos:column="27"/></return>
	}<pos:position pos:line="11" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="13" pos:column="9">sstrncpy<pos:position pos:line="13" pos:column="17"/></name> <argument_list pos:line="13" pos:column="18">(<argument><expr><name><name pos:line="13" pos:column="19">vl<pos:position pos:line="13" pos:column="21"/></name><operator pos:line="13" pos:column="21">-&gt;<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="23">type<pos:position pos:line="13" pos:column="27"/></name></name></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="29">SvPV_nolen<pos:position pos:line="13" pos:column="39"/></name> <argument_list pos:line="13" pos:column="40">(<argument><expr><operator pos:line="13" pos:column="41">*<pos:position pos:line="13" pos:column="42"/></operator><name pos:line="13" pos:column="42">tmp<pos:position pos:line="13" pos:column="45"/></name></expr></argument>)<pos:position pos:line="13" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="48">sizeof <argument_list pos:line="13" pos:column="55">(<argument><expr><name><name pos:line="13" pos:column="56">vl<pos:position pos:line="13" pos:column="58"/></name><operator pos:line="13" pos:column="58">-&gt;<pos:position pos:line="13" pos:column="63"/></operator><name pos:line="13" pos:column="60">type<pos:position pos:line="13" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="67"/></expr_stmt>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">(<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">NULL<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">==<pos:position pos:line="15" pos:column="21"/></operator> <operator pos:line="15" pos:column="22">(<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="23">tmp<pos:position pos:line="15" pos:column="26"/></name> <operator pos:line="15" pos:column="27">=<pos:position pos:line="15" pos:column="28"/></operator> <call><name pos:line="15" pos:column="29">hv_fetch<pos:position pos:line="15" pos:column="37"/></name> <argument_list pos:line="15" pos:column="38">(<argument><expr><name pos:line="15" pos:column="39">hash<pos:position pos:line="15" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="45">"values"<pos:position pos:line="15" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="55">6<pos:position pos:line="15" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="58">0<pos:position pos:line="15" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="60"/></argument_list></call><operator pos:line="15" pos:column="60">)<pos:position pos:line="15" pos:column="61"/></operator><operator pos:line="15" pos:column="61">)<pos:position pos:line="15" pos:column="62"/></operator>
			<operator pos:line="16" pos:column="25">||<pos:position pos:line="16" pos:column="27"/></operator> <operator pos:line="16" pos:column="28">(<pos:position pos:line="16" pos:column="29"/></operator><operator pos:line="16" pos:column="29">!<pos:position pos:line="16" pos:column="30"/></operator> <operator pos:line="16" pos:column="31">(<pos:position pos:line="16" pos:column="32"/></operator><call><name pos:line="16" pos:column="32">SvROK<pos:position pos:line="16" pos:column="37"/></name> <argument_list pos:line="16" pos:column="38">(<argument><expr><operator pos:line="16" pos:column="39">*<pos:position pos:line="16" pos:column="40"/></operator><name pos:line="16" pos:column="40">tmp<pos:position pos:line="16" pos:column="43"/></name></expr></argument>)<pos:position pos:line="16" pos:column="44"/></argument_list></call> <operator pos:line="16" pos:column="45">&amp;&amp;<pos:position pos:line="16" pos:column="55"/></operator> <operator pos:line="16" pos:column="48">(<pos:position pos:line="16" pos:column="49"/></operator><name pos:line="16" pos:column="49">SVt_PVAV<pos:position pos:line="16" pos:column="57"/></name> <operator pos:line="16" pos:column="58">==<pos:position pos:line="16" pos:column="60"/></operator> <call><name pos:line="16" pos:column="61">SvTYPE<pos:position pos:line="16" pos:column="67"/></name> <argument_list pos:line="16" pos:column="68">(<argument><expr><call><name pos:line="16" pos:column="69">SvRV<pos:position pos:line="16" pos:column="73"/></name> <argument_list pos:line="16" pos:column="74">(<argument><expr><operator pos:line="16" pos:column="75">*<pos:position pos:line="16" pos:column="76"/></operator><name pos:line="16" pos:column="76">tmp<pos:position pos:line="16" pos:column="79"/></name></expr></argument>)<pos:position pos:line="16" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="81"/></argument_list></call><operator pos:line="16" pos:column="81">)<pos:position pos:line="16" pos:column="82"/></operator><operator pos:line="16" pos:column="82">)<pos:position pos:line="16" pos:column="83"/></operator><operator pos:line="16" pos:column="83">)<pos:position pos:line="16" pos:column="84"/></operator></expr>)<pos:position pos:line="16" pos:column="85"/></condition><then pos:line="16" pos:column="85"> <block pos:line="16" pos:column="86">{
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">log_err<pos:position pos:line="17" pos:column="24"/></name> <argument_list pos:line="17" pos:column="25">(<argument><expr><literal type="string" pos:line="17" pos:column="26">"hv2value_list: No valid values given."<pos:position pos:line="17" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="67"/></expr_stmt>
		<return pos:line="18" pos:column="17">return <expr><operator pos:line="18" pos:column="24">-<pos:position pos:line="18" pos:column="25"/></operator><literal type="number" pos:line="18" pos:column="25">1<pos:position pos:line="18" pos:column="26"/></literal></expr>;<pos:position pos:line="18" pos:column="27"/></return>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>

	<block pos:line="21" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="22" pos:column="17">AV<pos:position pos:line="22" pos:column="19"/></name>  <modifier pos:line="22" pos:column="21">*<pos:position pos:line="22" pos:column="22"/></modifier></type><name pos:line="22" pos:column="22">array<pos:position pos:line="22" pos:column="27"/></name> <init pos:line="22" pos:column="28">= <expr><operator pos:line="22" pos:column="30">(<pos:position pos:line="22" pos:column="31"/></operator><name pos:line="22" pos:column="31">AV<pos:position pos:line="22" pos:column="33"/></name> <operator pos:line="22" pos:column="34">*<pos:position pos:line="22" pos:column="35"/></operator><operator pos:line="22" pos:column="35">)<pos:position pos:line="22" pos:column="36"/></operator><call><name pos:line="22" pos:column="36">SvRV<pos:position pos:line="22" pos:column="40"/></name> <argument_list pos:line="22" pos:column="41">(<argument><expr><operator pos:line="22" pos:column="42">*<pos:position pos:line="22" pos:column="43"/></operator><name pos:line="22" pos:column="43">tmp<pos:position pos:line="22" pos:column="46"/></name></expr></argument>)<pos:position pos:line="22" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="22" pos:column="48"/></decl_stmt>
		<comment type="block" pos:line="23" pos:column="17">/* av_len returns the highest index, not the actual length. */</comment>
		<decl_stmt><decl><type><name pos:line="24" pos:column="17">size_t<pos:position pos:line="24" pos:column="23"/></name></type> <name pos:line="24" pos:column="24">array_len<pos:position pos:line="24" pos:column="33"/></name> <init pos:line="24" pos:column="34">= <expr><call pos:line="24" pos:column="36">(<name pos:line="24" pos:column="37">size_t<pos:position pos:line="24" pos:column="43"/></name>) <argument_list pos:line="24" pos:column="45">(<argument><expr><call><name pos:line="24" pos:column="46">av_len<pos:position pos:line="24" pos:column="52"/></name> <argument_list pos:line="24" pos:column="53">(<argument><expr><name pos:line="24" pos:column="54">array<pos:position pos:line="24" pos:column="59"/></name></expr></argument>)<pos:position pos:line="24" pos:column="60"/></argument_list></call> <operator pos:line="24" pos:column="61">+<pos:position pos:line="24" pos:column="62"/></operator> <literal type="number" pos:line="24" pos:column="63">1<pos:position pos:line="24" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="24" pos:column="66"/></decl_stmt>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name pos:line="25" pos:column="21">array_len<pos:position pos:line="25" pos:column="30"/></name> <operator pos:line="25" pos:column="31">==<pos:position pos:line="25" pos:column="33"/></operator> <literal type="number" pos:line="25" pos:column="34">0<pos:position pos:line="25" pos:column="35"/></literal></expr>)<pos:position pos:line="25" pos:column="36"/></condition><then pos:line="25" pos:column="36">
			<block type="pseudo"><return pos:line="26" pos:column="25">return <expr><operator pos:line="26" pos:column="32">-<pos:position pos:line="26" pos:column="33"/></operator><literal type="number" pos:line="26" pos:column="33">1<pos:position pos:line="26" pos:column="34"/></literal></expr>;<pos:position pos:line="26" pos:column="35"/></return></block></then></if>

		<expr_stmt><expr><name><name pos:line="28" pos:column="17">vl<pos:position pos:line="28" pos:column="19"/></name><operator pos:line="28" pos:column="19">-&gt;<pos:position pos:line="28" pos:column="24"/></operator><name pos:line="28" pos:column="21">values<pos:position pos:line="28" pos:column="27"/></name></name>     <operator pos:line="28" pos:column="32">=<pos:position pos:line="28" pos:column="33"/></operator> <call><name pos:line="28" pos:column="34">calloc<pos:position pos:line="28" pos:column="40"/></name> <argument_list pos:line="28" pos:column="41">(<argument><expr><name pos:line="28" pos:column="42">array_len<pos:position pos:line="28" pos:column="51"/></name></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="53">sizeof <argument_list pos:line="28" pos:column="60">(<argument><expr><operator pos:line="28" pos:column="61">*<pos:position pos:line="28" pos:column="62"/></operator><name><name pos:line="28" pos:column="62">vl<pos:position pos:line="28" pos:column="64"/></name><operator pos:line="28" pos:column="64">-&gt;<pos:position pos:line="28" pos:column="69"/></operator><name pos:line="28" pos:column="66">values<pos:position pos:line="28" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="75"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="29" pos:column="17">vl<pos:position pos:line="29" pos:column="19"/></name><operator pos:line="29" pos:column="19">-&gt;<pos:position pos:line="29" pos:column="24"/></operator><name pos:line="29" pos:column="21">values_len<pos:position pos:line="29" pos:column="31"/></name></name> <operator pos:line="29" pos:column="32">=<pos:position pos:line="29" pos:column="33"/></operator> <macro><name pos:line="29" pos:column="34">av2value<pos:position pos:line="29" pos:column="42"/></name> <argument_list pos:line="29" pos:column="43">(<argument pos:line="29" pos:column="44">aTHX_ vl-&gt;type<pos:position pos:line="29" pos:column="58"/></argument>, <argument pos:line="29" pos:column="60">(AV *)SvRV (*tmp)<pos:position pos:line="29" pos:column="77"/></argument>, <argument pos:line="29" pos:column="79">vl-&gt;values<pos:position pos:line="29" pos:column="89"/></argument>, <argument pos:line="29" pos:column="91">array_len<pos:position pos:line="29" pos:column="100"/></argument>)<pos:position pos:line="29" pos:column="101"/></argument_list></macro></expr>;<pos:position pos:line="29" pos:column="102"/></expr_stmt>
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><name><name pos:line="30" pos:column="21">vl<pos:position pos:line="30" pos:column="23"/></name><operator pos:line="30" pos:column="23">-&gt;<pos:position pos:line="30" pos:column="28"/></operator><name pos:line="30" pos:column="25">values_len<pos:position pos:line="30" pos:column="35"/></name></name> <operator pos:line="30" pos:column="36">==<pos:position pos:line="30" pos:column="38"/></operator> <literal type="number" pos:line="30" pos:column="39">0<pos:position pos:line="30" pos:column="40"/></literal></expr>)<pos:position pos:line="30" pos:column="41"/></condition><then pos:line="30" pos:column="41"> <block pos:line="30" pos:column="42">{
			<expr_stmt><expr><call><name pos:line="31" pos:column="25">sfree<pos:position pos:line="31" pos:column="30"/></name> <argument_list pos:line="31" pos:column="31">(<argument><expr><name><name pos:line="31" pos:column="32">vl<pos:position pos:line="31" pos:column="34"/></name><operator pos:line="31" pos:column="34">-&gt;<pos:position pos:line="31" pos:column="39"/></operator><name pos:line="31" pos:column="36">values<pos:position pos:line="31" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="44"/></expr_stmt>
			<return pos:line="32" pos:column="25">return <expr><operator pos:line="32" pos:column="32">-<pos:position pos:line="32" pos:column="33"/></operator><literal type="number" pos:line="32" pos:column="33">1<pos:position pos:line="32" pos:column="34"/></literal></expr>;<pos:position pos:line="32" pos:column="35"/></return>
		}<pos:position pos:line="33" pos:column="18"/></block></then></if>
	}<pos:position pos:line="34" pos:column="10"/></block>

	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">NULL<pos:position pos:line="36" pos:column="17"/></name> <operator pos:line="36" pos:column="18">!=<pos:position pos:line="36" pos:column="20"/></operator> <operator pos:line="36" pos:column="21">(<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="22">tmp<pos:position pos:line="36" pos:column="25"/></name> <operator pos:line="36" pos:column="26">=<pos:position pos:line="36" pos:column="27"/></operator> <call><name pos:line="36" pos:column="28">hv_fetch<pos:position pos:line="36" pos:column="36"/></name> <argument_list pos:line="36" pos:column="37">(<argument><expr><name pos:line="36" pos:column="38">hash<pos:position pos:line="36" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="44">"time"<pos:position pos:line="36" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="52">4<pos:position pos:line="36" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="55">0<pos:position pos:line="36" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="57"/></argument_list></call><operator pos:line="36" pos:column="57">)<pos:position pos:line="36" pos:column="58"/></operator></expr>)<pos:position pos:line="36" pos:column="59"/></condition><then pos:line="36" pos:column="59">
	<block pos:line="37" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="38" pos:column="17">double<pos:position pos:line="38" pos:column="23"/></name></type> <name pos:line="38" pos:column="24">t<pos:position pos:line="38" pos:column="25"/></name> <init pos:line="38" pos:column="26">= <expr><call><name pos:line="38" pos:column="28">SvNV<pos:position pos:line="38" pos:column="32"/></name> <argument_list pos:line="38" pos:column="33">(<argument><expr><operator pos:line="38" pos:column="34">*<pos:position pos:line="38" pos:column="35"/></operator><name pos:line="38" pos:column="35">tmp<pos:position pos:line="38" pos:column="38"/></name></expr></argument>)<pos:position pos:line="38" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="38" pos:column="40"/></decl_stmt>
		<expr_stmt><expr><name><name pos:line="39" pos:column="17">vl<pos:position pos:line="39" pos:column="19"/></name><operator pos:line="39" pos:column="19">-&gt;<pos:position pos:line="39" pos:column="24"/></operator><name pos:line="39" pos:column="21">time<pos:position pos:line="39" pos:column="25"/></name></name> <operator pos:line="39" pos:column="26">=<pos:position pos:line="39" pos:column="27"/></operator> <call><name pos:line="39" pos:column="28">DOUBLE_TO_CDTIME_T<pos:position pos:line="39" pos:column="46"/></name> <argument_list pos:line="39" pos:column="47">(<argument><expr><name pos:line="39" pos:column="48">t<pos:position pos:line="39" pos:column="49"/></name></expr></argument>)<pos:position pos:line="39" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="51"/></expr_stmt>
	}<pos:position pos:line="40" pos:column="10"/></block></then></if>

	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name pos:line="42" pos:column="13">NULL<pos:position pos:line="42" pos:column="17"/></name> <operator pos:line="42" pos:column="18">!=<pos:position pos:line="42" pos:column="20"/></operator> <operator pos:line="42" pos:column="21">(<pos:position pos:line="42" pos:column="22"/></operator><name pos:line="42" pos:column="22">tmp<pos:position pos:line="42" pos:column="25"/></name> <operator pos:line="42" pos:column="26">=<pos:position pos:line="42" pos:column="27"/></operator> <call><name pos:line="42" pos:column="28">hv_fetch<pos:position pos:line="42" pos:column="36"/></name> <argument_list pos:line="42" pos:column="37">(<argument><expr><name pos:line="42" pos:column="38">hash<pos:position pos:line="42" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="44">"interval"<pos:position pos:line="42" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="56">8<pos:position pos:line="42" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="59">0<pos:position pos:line="42" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="61"/></argument_list></call><operator pos:line="42" pos:column="61">)<pos:position pos:line="42" pos:column="62"/></operator></expr>)<pos:position pos:line="42" pos:column="63"/></condition><then pos:line="42" pos:column="63">
	<block pos:line="43" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="44" pos:column="17">double<pos:position pos:line="44" pos:column="23"/></name></type> <name pos:line="44" pos:column="24">t<pos:position pos:line="44" pos:column="25"/></name> <init pos:line="44" pos:column="26">= <expr><call><name pos:line="44" pos:column="28">SvNV<pos:position pos:line="44" pos:column="32"/></name> <argument_list pos:line="44" pos:column="33">(<argument><expr><operator pos:line="44" pos:column="34">*<pos:position pos:line="44" pos:column="35"/></operator><name pos:line="44" pos:column="35">tmp<pos:position pos:line="44" pos:column="38"/></name></expr></argument>)<pos:position pos:line="44" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="44" pos:column="40"/></decl_stmt>
		<expr_stmt><expr><name><name pos:line="45" pos:column="17">vl<pos:position pos:line="45" pos:column="19"/></name><operator pos:line="45" pos:column="19">-&gt;<pos:position pos:line="45" pos:column="24"/></operator><name pos:line="45" pos:column="21">interval<pos:position pos:line="45" pos:column="29"/></name></name> <operator pos:line="45" pos:column="30">=<pos:position pos:line="45" pos:column="31"/></operator> <call><name pos:line="45" pos:column="32">DOUBLE_TO_CDTIME_T<pos:position pos:line="45" pos:column="50"/></name> <argument_list pos:line="45" pos:column="51">(<argument><expr><name pos:line="45" pos:column="52">t<pos:position pos:line="45" pos:column="53"/></name></expr></argument>)<pos:position pos:line="45" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="55"/></expr_stmt>
	}<pos:position pos:line="46" pos:column="10"/></block></then></if>

	<if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name pos:line="48" pos:column="13">NULL<pos:position pos:line="48" pos:column="17"/></name> <operator pos:line="48" pos:column="18">!=<pos:position pos:line="48" pos:column="20"/></operator> <operator pos:line="48" pos:column="21">(<pos:position pos:line="48" pos:column="22"/></operator><name pos:line="48" pos:column="22">tmp<pos:position pos:line="48" pos:column="25"/></name> <operator pos:line="48" pos:column="26">=<pos:position pos:line="48" pos:column="27"/></operator> <call><name pos:line="48" pos:column="28">hv_fetch<pos:position pos:line="48" pos:column="36"/></name> <argument_list pos:line="48" pos:column="37">(<argument><expr><name pos:line="48" pos:column="38">hash<pos:position pos:line="48" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="44">"host"<pos:position pos:line="48" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="52">4<pos:position pos:line="48" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="55">0<pos:position pos:line="48" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="57"/></argument_list></call><operator pos:line="48" pos:column="57">)<pos:position pos:line="48" pos:column="58"/></operator></expr>)<pos:position pos:line="48" pos:column="59"/></condition><then pos:line="48" pos:column="59">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="17">sstrncpy<pos:position pos:line="49" pos:column="25"/></name> <argument_list pos:line="49" pos:column="26">(<argument><expr><name><name pos:line="49" pos:column="27">vl<pos:position pos:line="49" pos:column="29"/></name><operator pos:line="49" pos:column="29">-&gt;<pos:position pos:line="49" pos:column="34"/></operator><name pos:line="49" pos:column="31">host<pos:position pos:line="49" pos:column="35"/></name></name></expr></argument>, <argument><expr><call><name pos:line="49" pos:column="37">SvPV_nolen<pos:position pos:line="49" pos:column="47"/></name> <argument_list pos:line="49" pos:column="48">(<argument><expr><operator pos:line="49" pos:column="49">*<pos:position pos:line="49" pos:column="50"/></operator><name pos:line="49" pos:column="50">tmp<pos:position pos:line="49" pos:column="53"/></name></expr></argument>)<pos:position pos:line="49" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="49" pos:column="56">sizeof <argument_list pos:line="49" pos:column="63">(<argument><expr><name><name pos:line="49" pos:column="64">vl<pos:position pos:line="49" pos:column="66"/></name><operator pos:line="49" pos:column="66">-&gt;<pos:position pos:line="49" pos:column="71"/></operator><name pos:line="49" pos:column="68">host<pos:position pos:line="49" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="49" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="75"/></expr_stmt></block></then>
	<else pos:line="50" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="17">sstrncpy<pos:position pos:line="51" pos:column="25"/></name> <argument_list pos:line="51" pos:column="26">(<argument><expr><name><name pos:line="51" pos:column="27">vl<pos:position pos:line="51" pos:column="29"/></name><operator pos:line="51" pos:column="29">-&gt;<pos:position pos:line="51" pos:column="34"/></operator><name pos:line="51" pos:column="31">host<pos:position pos:line="51" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="37">hostname_g<pos:position pos:line="51" pos:column="47"/></name></expr></argument>, <argument><expr><sizeof pos:line="51" pos:column="49">sizeof <argument_list pos:line="51" pos:column="56">(<argument><expr><name><name pos:line="51" pos:column="57">vl<pos:position pos:line="51" pos:column="59"/></name><operator pos:line="51" pos:column="59">-&gt;<pos:position pos:line="51" pos:column="64"/></operator><name pos:line="51" pos:column="61">host<pos:position pos:line="51" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="51" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="68"/></expr_stmt></block></else></if>

	<if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><name pos:line="53" pos:column="13">NULL<pos:position pos:line="53" pos:column="17"/></name> <operator pos:line="53" pos:column="18">!=<pos:position pos:line="53" pos:column="20"/></operator> <operator pos:line="53" pos:column="21">(<pos:position pos:line="53" pos:column="22"/></operator><name pos:line="53" pos:column="22">tmp<pos:position pos:line="53" pos:column="25"/></name> <operator pos:line="53" pos:column="26">=<pos:position pos:line="53" pos:column="27"/></operator> <call><name pos:line="53" pos:column="28">hv_fetch<pos:position pos:line="53" pos:column="36"/></name> <argument_list pos:line="53" pos:column="37">(<argument><expr><name pos:line="53" pos:column="38">hash<pos:position pos:line="53" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="44">"plugin"<pos:position pos:line="53" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="54">6<pos:position pos:line="53" pos:column="55"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="57">0<pos:position pos:line="53" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="59"/></argument_list></call><operator pos:line="53" pos:column="59">)<pos:position pos:line="53" pos:column="60"/></operator></expr>)<pos:position pos:line="53" pos:column="61"/></condition><then pos:line="53" pos:column="61">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="17">sstrncpy<pos:position pos:line="54" pos:column="25"/></name> <argument_list pos:line="54" pos:column="26">(<argument><expr><name><name pos:line="54" pos:column="27">vl<pos:position pos:line="54" pos:column="29"/></name><operator pos:line="54" pos:column="29">-&gt;<pos:position pos:line="54" pos:column="34"/></operator><name pos:line="54" pos:column="31">plugin<pos:position pos:line="54" pos:column="37"/></name></name></expr></argument>, <argument><expr><call><name pos:line="54" pos:column="39">SvPV_nolen<pos:position pos:line="54" pos:column="49"/></name> <argument_list pos:line="54" pos:column="50">(<argument><expr><operator pos:line="54" pos:column="51">*<pos:position pos:line="54" pos:column="52"/></operator><name pos:line="54" pos:column="52">tmp<pos:position pos:line="54" pos:column="55"/></name></expr></argument>)<pos:position pos:line="54" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="54" pos:column="58">sizeof <argument_list pos:line="54" pos:column="65">(<argument><expr><name><name pos:line="54" pos:column="66">vl<pos:position pos:line="54" pos:column="68"/></name><operator pos:line="54" pos:column="68">-&gt;<pos:position pos:line="54" pos:column="73"/></operator><name pos:line="54" pos:column="70">plugin<pos:position pos:line="54" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="54" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="79"/></expr_stmt></block></then></if>

	<if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name pos:line="56" pos:column="13">NULL<pos:position pos:line="56" pos:column="17"/></name> <operator pos:line="56" pos:column="18">!=<pos:position pos:line="56" pos:column="20"/></operator> <operator pos:line="56" pos:column="21">(<pos:position pos:line="56" pos:column="22"/></operator><name pos:line="56" pos:column="22">tmp<pos:position pos:line="56" pos:column="25"/></name> <operator pos:line="56" pos:column="26">=<pos:position pos:line="56" pos:column="27"/></operator> <call><name pos:line="56" pos:column="28">hv_fetch<pos:position pos:line="56" pos:column="36"/></name> <argument_list pos:line="56" pos:column="37">(<argument><expr><name pos:line="56" pos:column="38">hash<pos:position pos:line="56" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="44">"plugin_instance"<pos:position pos:line="56" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="63">15<pos:position pos:line="56" pos:column="65"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="67">0<pos:position pos:line="56" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="69"/></argument_list></call><operator pos:line="56" pos:column="69">)<pos:position pos:line="56" pos:column="70"/></operator></expr>)<pos:position pos:line="56" pos:column="71"/></condition><then pos:line="56" pos:column="71">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="57" pos:column="17">sstrncpy<pos:position pos:line="57" pos:column="25"/></name> <argument_list pos:line="57" pos:column="26">(<argument><expr><name><name pos:line="57" pos:column="27">vl<pos:position pos:line="57" pos:column="29"/></name><operator pos:line="57" pos:column="29">-&gt;<pos:position pos:line="57" pos:column="34"/></operator><name pos:line="57" pos:column="31">plugin_instance<pos:position pos:line="57" pos:column="46"/></name></name></expr></argument>, <argument><expr><call><name pos:line="57" pos:column="48">SvPV_nolen<pos:position pos:line="57" pos:column="58"/></name> <argument_list pos:line="57" pos:column="59">(<argument><expr><operator pos:line="57" pos:column="60">*<pos:position pos:line="57" pos:column="61"/></operator><name pos:line="57" pos:column="61">tmp<pos:position pos:line="57" pos:column="64"/></name></expr></argument>)<pos:position pos:line="57" pos:column="65"/></argument_list></call></expr></argument>,
				<argument><expr><sizeof pos:line="58" pos:column="33">sizeof <argument_list pos:line="58" pos:column="40">(<argument><expr><name><name pos:line="58" pos:column="41">vl<pos:position pos:line="58" pos:column="43"/></name><operator pos:line="58" pos:column="43">-&gt;<pos:position pos:line="58" pos:column="48"/></operator><name pos:line="58" pos:column="45">plugin_instance<pos:position pos:line="58" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="58" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="63"/></expr_stmt></block></then></if>

	<if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><name pos:line="60" pos:column="13">NULL<pos:position pos:line="60" pos:column="17"/></name> <operator pos:line="60" pos:column="18">!=<pos:position pos:line="60" pos:column="20"/></operator> <operator pos:line="60" pos:column="21">(<pos:position pos:line="60" pos:column="22"/></operator><name pos:line="60" pos:column="22">tmp<pos:position pos:line="60" pos:column="25"/></name> <operator pos:line="60" pos:column="26">=<pos:position pos:line="60" pos:column="27"/></operator> <call><name pos:line="60" pos:column="28">hv_fetch<pos:position pos:line="60" pos:column="36"/></name> <argument_list pos:line="60" pos:column="37">(<argument><expr><name pos:line="60" pos:column="38">hash<pos:position pos:line="60" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="44">"type_instance"<pos:position pos:line="60" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="61">13<pos:position pos:line="60" pos:column="63"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="65">0<pos:position pos:line="60" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="67"/></argument_list></call><operator pos:line="60" pos:column="67">)<pos:position pos:line="60" pos:column="68"/></operator></expr>)<pos:position pos:line="60" pos:column="69"/></condition><then pos:line="60" pos:column="69">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="61" pos:column="17">sstrncpy<pos:position pos:line="61" pos:column="25"/></name> <argument_list pos:line="61" pos:column="26">(<argument><expr><name><name pos:line="61" pos:column="27">vl<pos:position pos:line="61" pos:column="29"/></name><operator pos:line="61" pos:column="29">-&gt;<pos:position pos:line="61" pos:column="34"/></operator><name pos:line="61" pos:column="31">type_instance<pos:position pos:line="61" pos:column="44"/></name></name></expr></argument>, <argument><expr><call><name pos:line="61" pos:column="46">SvPV_nolen<pos:position pos:line="61" pos:column="56"/></name> <argument_list pos:line="61" pos:column="57">(<argument><expr><operator pos:line="61" pos:column="58">*<pos:position pos:line="61" pos:column="59"/></operator><name pos:line="61" pos:column="59">tmp<pos:position pos:line="61" pos:column="62"/></name></expr></argument>)<pos:position pos:line="61" pos:column="63"/></argument_list></call></expr></argument>,
				<argument><expr><sizeof pos:line="62" pos:column="33">sizeof <argument_list pos:line="62" pos:column="40">(<argument><expr><name><name pos:line="62" pos:column="41">vl<pos:position pos:line="62" pos:column="43"/></name><operator pos:line="62" pos:column="43">-&gt;<pos:position pos:line="62" pos:column="48"/></operator><name pos:line="62" pos:column="45">type_instance<pos:position pos:line="62" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="62" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="61"/></expr_stmt></block></then></if>
	<return pos:line="63" pos:column="9">return <expr><literal type="number" pos:line="63" pos:column="16">0<pos:position pos:line="63" pos:column="17"/></literal></expr>;<pos:position pos:line="63" pos:column="18"/></return>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_442_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">config_add_writer<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">oconfig_item_t<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">ci<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">c_psql_writer_t<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">src_writers<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="2" pos:column="30">size_t<pos:position pos:line="2" pos:column="36"/></name></type> <name pos:line="2" pos:column="37">src_writers_num<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="3" pos:column="30">c_psql_writer_t<pos:position pos:line="3" pos:column="45"/></name> <modifier pos:line="3" pos:column="46">*<pos:position pos:line="3" pos:column="47"/></modifier><modifier pos:line="3" pos:column="47">*<pos:position pos:line="3" pos:column="48"/></modifier><modifier pos:line="3" pos:column="48">*<pos:position pos:line="3" pos:column="49"/></modifier></type><name pos:line="3" pos:column="49">dst_writers<pos:position pos:line="3" pos:column="60"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="4" pos:column="30">size_t<pos:position pos:line="4" pos:column="36"/></name> <modifier pos:line="4" pos:column="37">*<pos:position pos:line="4" pos:column="38"/></modifier></type><name pos:line="4" pos:column="38">dst_writers_num<pos:position pos:line="4" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="54"/></parameter_list> <block pos:line="4" pos:column="55">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">name<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="7" pos:column="3">size_t<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">i<pos:position pos:line="7" pos:column="11"/></name></decl>;<pos:position pos:line="7" pos:column="12"/></decl_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">(<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">ci<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">==<pos:position pos:line="9" pos:column="13"/></operator> <name pos:line="9" pos:column="14">NULL<pos:position pos:line="9" pos:column="18"/></name><operator pos:line="9" pos:column="18">)<pos:position pos:line="9" pos:column="19"/></operator> <operator pos:line="9" pos:column="20">||<pos:position pos:line="9" pos:column="22"/></operator> <operator pos:line="9" pos:column="23">(<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="24">dst_writers<pos:position pos:line="9" pos:column="35"/></name> <operator pos:line="9" pos:column="36">==<pos:position pos:line="9" pos:column="38"/></operator> <name pos:line="9" pos:column="39">NULL<pos:position pos:line="9" pos:column="43"/></name><operator pos:line="9" pos:column="43">)<pos:position pos:line="9" pos:column="44"/></operator> <operator pos:line="9" pos:column="45">||<pos:position pos:line="9" pos:column="47"/></operator> <operator pos:line="9" pos:column="48">(<pos:position pos:line="9" pos:column="49"/></operator><name pos:line="9" pos:column="49">dst_writers_num<pos:position pos:line="9" pos:column="64"/></name> <operator pos:line="9" pos:column="65">==<pos:position pos:line="9" pos:column="67"/></operator> <name pos:line="9" pos:column="68">NULL<pos:position pos:line="9" pos:column="72"/></name><operator pos:line="9" pos:column="72">)<pos:position pos:line="9" pos:column="73"/></operator></expr>)<pos:position pos:line="9" pos:column="74"/></condition><then pos:line="9" pos:column="74">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">-<pos:position pos:line="10" pos:column="13"/></operator><literal type="number" pos:line="10" pos:column="13">1<pos:position pos:line="10" pos:column="14"/></literal></expr>;<pos:position pos:line="10" pos:column="15"/></return></block></then></if>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><operator pos:line="12" pos:column="7">(<pos:position pos:line="12" pos:column="8"/></operator><name><name pos:line="12" pos:column="8">ci<pos:position pos:line="12" pos:column="10"/></name><operator pos:line="12" pos:column="10">-&gt;<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="12">values_num<pos:position pos:line="12" pos:column="22"/></name></name> <operator pos:line="12" pos:column="23">!=<pos:position pos:line="12" pos:column="25"/></operator> <literal type="number" pos:line="12" pos:column="26">1<pos:position pos:line="12" pos:column="27"/></literal><operator pos:line="12" pos:column="27">)<pos:position pos:line="12" pos:column="28"/></operator> <operator pos:line="12" pos:column="29">||<pos:position pos:line="12" pos:column="31"/></operator> <operator pos:line="12" pos:column="32">(<pos:position pos:line="12" pos:column="33"/></operator><name><name pos:line="12" pos:column="33">ci<pos:position pos:line="12" pos:column="35"/></name><operator pos:line="12" pos:column="35">-&gt;<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="37">values<pos:position pos:line="12" pos:column="43"/></name><index pos:line="12" pos:column="43">[<expr><literal type="number" pos:line="12" pos:column="44">0<pos:position pos:line="12" pos:column="45"/></literal></expr>]<pos:position pos:line="12" pos:column="46"/></index></name><operator pos:line="12" pos:column="46">.<pos:position pos:line="12" pos:column="47"/></operator><name pos:line="12" pos:column="47">type<pos:position pos:line="12" pos:column="51"/></name> <operator pos:line="12" pos:column="52">!=<pos:position pos:line="12" pos:column="54"/></operator> <name pos:line="12" pos:column="55">OCONFIG_TYPE_STRING<pos:position pos:line="12" pos:column="74"/></name><operator pos:line="12" pos:column="74">)<pos:position pos:line="12" pos:column="75"/></operator></expr>)<pos:position pos:line="12" pos:column="76"/></condition><then pos:line="12" pos:column="76"> <block pos:line="12" pos:column="77">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">log_err<pos:position pos:line="13" pos:column="12"/></name><argument_list pos:line="13" pos:column="12">(<argument><expr><literal type="string" pos:line="13" pos:column="13">"`Writer' expects a single string argument."<pos:position pos:line="13" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="59"/></expr_stmt>
    <return pos:line="14" pos:column="5">return <expr><literal type="number" pos:line="14" pos:column="12">1<pos:position pos:line="14" pos:column="13"/></literal></expr>;<pos:position pos:line="14" pos:column="14"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="17" pos:column="3">name<pos:position pos:line="17" pos:column="7"/></name> <operator pos:line="17" pos:column="8">=<pos:position pos:line="17" pos:column="9"/></operator> <name><name pos:line="17" pos:column="10">ci<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">-&gt;<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="14">values<pos:position pos:line="17" pos:column="20"/></name><index pos:line="17" pos:column="20">[<expr><literal type="number" pos:line="17" pos:column="21">0<pos:position pos:line="17" pos:column="22"/></literal></expr>]<pos:position pos:line="17" pos:column="23"/></index></name><operator pos:line="17" pos:column="23">.<pos:position pos:line="17" pos:column="24"/></operator><name><name pos:line="17" pos:column="24">value<pos:position pos:line="17" pos:column="29"/></name><operator pos:line="17" pos:column="29">.<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="30">string<pos:position pos:line="17" pos:column="36"/></name></name></expr>;<pos:position pos:line="17" pos:column="37"/></expr_stmt>

  <for pos:line="19" pos:column="3">for <control pos:line="19" pos:column="7">(<init><expr><name pos:line="19" pos:column="8">i<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <literal type="number" pos:line="19" pos:column="12">0<pos:position pos:line="19" pos:column="13"/></literal></expr>;<pos:position pos:line="19" pos:column="14"/></init> <condition><expr><name pos:line="19" pos:column="15">i<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">&lt;<pos:position pos:line="19" pos:column="21"/></operator> <name pos:line="19" pos:column="19">src_writers_num<pos:position pos:line="19" pos:column="34"/></name></expr>;<pos:position pos:line="19" pos:column="35"/></condition> <incr><expr><operator pos:line="19" pos:column="36">++<pos:position pos:line="19" pos:column="38"/></operator><name pos:line="19" pos:column="38">i<pos:position pos:line="19" pos:column="39"/></name></expr></incr>)<pos:position pos:line="19" pos:column="40"/></control> <block pos:line="19" pos:column="41">{
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">c_psql_writer_t<pos:position pos:line="20" pos:column="20"/></name> <modifier pos:line="20" pos:column="21">*<pos:position pos:line="20" pos:column="22"/></modifier><modifier pos:line="20" pos:column="22">*<pos:position pos:line="20" pos:column="23"/></modifier></type><name pos:line="20" pos:column="23">tmp<pos:position pos:line="20" pos:column="26"/></name></decl>;<pos:position pos:line="20" pos:column="27"/></decl_stmt>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><call><name pos:line="22" pos:column="9">strcasecmp<pos:position pos:line="22" pos:column="19"/></name><argument_list pos:line="22" pos:column="19">(<argument><expr><name pos:line="22" pos:column="20">name<pos:position pos:line="22" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="26">src_writers<pos:position pos:line="22" pos:column="37"/></name><index pos:line="22" pos:column="37">[<expr><name pos:line="22" pos:column="38">i<pos:position pos:line="22" pos:column="39"/></name></expr>]<pos:position pos:line="22" pos:column="40"/></index></name><operator pos:line="22" pos:column="40">.<pos:position pos:line="22" pos:column="41"/></operator><name pos:line="22" pos:column="41">name<pos:position pos:line="22" pos:column="45"/></name></expr></argument>)<pos:position pos:line="22" pos:column="46"/></argument_list></call> <operator pos:line="22" pos:column="47">!=<pos:position pos:line="22" pos:column="49"/></operator> <literal type="number" pos:line="22" pos:column="50">0<pos:position pos:line="22" pos:column="51"/></literal></expr>)<pos:position pos:line="22" pos:column="52"/></condition><then pos:line="22" pos:column="52">
      <block type="pseudo"><continue pos:line="23" pos:column="7">continue;<pos:position pos:line="23" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="25" pos:column="5">tmp<pos:position pos:line="25" pos:column="8"/></name> <operator pos:line="25" pos:column="9">=<pos:position pos:line="25" pos:column="10"/></operator> <call><name pos:line="25" pos:column="11">realloc<pos:position pos:line="25" pos:column="18"/></name><argument_list pos:line="25" pos:column="18">(<argument><expr><operator pos:line="25" pos:column="19">*<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="20">dst_writers<pos:position pos:line="25" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="33">sizeof<argument_list pos:line="25" pos:column="39">(<argument><expr><operator pos:line="25" pos:column="40">*<pos:position pos:line="25" pos:column="41"/></operator><operator pos:line="25" pos:column="41">*<pos:position pos:line="25" pos:column="42"/></operator><name pos:line="25" pos:column="42">dst_writers<pos:position pos:line="25" pos:column="53"/></name></expr></argument>)<pos:position pos:line="25" pos:column="54"/></argument_list></sizeof> <operator pos:line="25" pos:column="55">*<pos:position pos:line="25" pos:column="56"/></operator> <operator pos:line="25" pos:column="57">(<pos:position pos:line="25" pos:column="58"/></operator><operator pos:line="25" pos:column="58">*<pos:position pos:line="25" pos:column="59"/></operator><name pos:line="25" pos:column="59">dst_writers_num<pos:position pos:line="25" pos:column="74"/></name> <operator pos:line="25" pos:column="75">+<pos:position pos:line="25" pos:column="76"/></operator> <literal type="number" pos:line="25" pos:column="77">1<pos:position pos:line="25" pos:column="78"/></literal><operator pos:line="25" pos:column="78">)<pos:position pos:line="25" pos:column="79"/></operator></expr></argument>)<pos:position pos:line="25" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="81"/></expr_stmt>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">tmp<pos:position pos:line="26" pos:column="12"/></name> <operator pos:line="26" pos:column="13">==<pos:position pos:line="26" pos:column="15"/></operator> <name pos:line="26" pos:column="16">NULL<pos:position pos:line="26" pos:column="20"/></name></expr>)<pos:position pos:line="26" pos:column="21"/></condition><then pos:line="26" pos:column="21"> <block pos:line="26" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="27" pos:column="7">log_err<pos:position pos:line="27" pos:column="14"/></name><argument_list pos:line="27" pos:column="14">(<argument><expr><literal type="string" pos:line="27" pos:column="15">"Out of memory."<pos:position pos:line="27" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="33"/></expr_stmt>
      <return pos:line="28" pos:column="7">return <expr><operator pos:line="28" pos:column="14">-<pos:position pos:line="28" pos:column="15"/></operator><literal type="number" pos:line="28" pos:column="15">1<pos:position pos:line="28" pos:column="16"/></literal></expr>;<pos:position pos:line="28" pos:column="17"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="31" pos:column="5">tmp<pos:position pos:line="31" pos:column="8"/></name><index pos:line="31" pos:column="8">[<expr><operator pos:line="31" pos:column="9">*<pos:position pos:line="31" pos:column="10"/></operator><name pos:line="31" pos:column="10">dst_writers_num<pos:position pos:line="31" pos:column="25"/></name></expr>]<pos:position pos:line="31" pos:column="26"/></index></name> <operator pos:line="31" pos:column="27">=<pos:position pos:line="31" pos:column="28"/></operator> <name pos:line="31" pos:column="29">src_writers<pos:position pos:line="31" pos:column="40"/></name> <operator pos:line="31" pos:column="41">+<pos:position pos:line="31" pos:column="42"/></operator> <name pos:line="31" pos:column="43">i<pos:position pos:line="31" pos:column="44"/></name></expr>;<pos:position pos:line="31" pos:column="45"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="33" pos:column="5">*<pos:position pos:line="33" pos:column="6"/></operator><name pos:line="33" pos:column="6">dst_writers<pos:position pos:line="33" pos:column="17"/></name> <operator pos:line="33" pos:column="18">=<pos:position pos:line="33" pos:column="19"/></operator> <name pos:line="33" pos:column="20">tmp<pos:position pos:line="33" pos:column="23"/></name></expr>;<pos:position pos:line="33" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="34" pos:column="5">++<pos:position pos:line="34" pos:column="7"/></operator><operator pos:line="34" pos:column="7">(<pos:position pos:line="34" pos:column="8"/></operator><operator pos:line="34" pos:column="8">*<pos:position pos:line="34" pos:column="9"/></operator><name pos:line="34" pos:column="9">dst_writers_num<pos:position pos:line="34" pos:column="24"/></name><operator pos:line="34" pos:column="24">)<pos:position pos:line="34" pos:column="25"/></operator></expr>;<pos:position pos:line="34" pos:column="26"/></expr_stmt>
    <break pos:line="35" pos:column="5">break;<pos:position pos:line="35" pos:column="11"/></break>
  }<pos:position pos:line="36" pos:column="4"/></block></for>

  <if pos:line="38" pos:column="3">if <condition pos:line="38" pos:column="6">(<expr><name pos:line="38" pos:column="7">i<pos:position pos:line="38" pos:column="8"/></name> <operator pos:line="38" pos:column="9">&gt;=<pos:position pos:line="38" pos:column="14"/></operator> <name pos:line="38" pos:column="12">src_writers_num<pos:position pos:line="38" pos:column="27"/></name></expr>)<pos:position pos:line="38" pos:column="28"/></condition><then pos:line="38" pos:column="28"> <block pos:line="38" pos:column="29">{
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">log_err<pos:position pos:line="39" pos:column="12"/></name><argument_list pos:line="39" pos:column="12">(<argument><expr><literal type="string" pos:line="39" pos:column="13">"No such writer: `%s'"<pos:position pos:line="39" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="37">name<pos:position pos:line="39" pos:column="41"/></name></expr></argument>)<pos:position pos:line="39" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="43"/></expr_stmt>
    <return pos:line="40" pos:column="5">return <expr><operator pos:line="40" pos:column="12">-<pos:position pos:line="40" pos:column="13"/></operator><literal type="number" pos:line="40" pos:column="13">1<pos:position pos:line="40" pos:column="14"/></literal></expr>;<pos:position pos:line="40" pos:column="15"/></return>
  }<pos:position pos:line="41" pos:column="4"/></block></then></if>

  <return pos:line="43" pos:column="3">return <expr><literal type="number" pos:line="43" pos:column="10">0<pos:position pos:line="43" pos:column="11"/></literal></expr>;<pos:position pos:line="43" pos:column="12"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

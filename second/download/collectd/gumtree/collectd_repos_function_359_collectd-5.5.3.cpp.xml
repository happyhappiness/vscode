<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_359_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">df_read<pos:position pos:line="1" pos:column="19"/></name> <parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">void<pos:position pos:line="1" pos:column="25"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="26"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><name pos:line="3" pos:column="5">HAVE_STATVFS<pos:position pos:line="3" pos:column="17"/></name></expr></cpp:if>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">statvfs<pos:position pos:line="4" pos:column="23"/></name></name></type> <name pos:line="4" pos:column="24">statbuf<pos:position pos:line="4" pos:column="31"/></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
<cpp:elif pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">elif<pos:position pos:line="5" pos:column="6"/></cpp:directive> <expr><name pos:line="5" pos:column="7">HAVE_STATFS<pos:position pos:line="5" pos:column="18"/></name></expr></cpp:elif>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">statfs<pos:position pos:line="6" pos:column="22"/></name></name></type> <name pos:line="6" pos:column="23">statbuf<pos:position pos:line="6" pos:column="30"/></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
<cpp:endif pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">endif<pos:position pos:line="7" pos:column="7"/></cpp:directive></cpp:endif>
	<comment type="block" pos:line="8" pos:column="9">/* struct STATANYFS statbuf; */</comment>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">cu_mount_t<pos:position pos:line="9" pos:column="19"/></name> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier></type><name pos:line="9" pos:column="21">mnt_list<pos:position pos:line="9" pos:column="29"/></name></decl>;<pos:position pos:line="9" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">cu_mount_t<pos:position pos:line="10" pos:column="19"/></name> <modifier pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></modifier></type><name pos:line="10" pos:column="21">mnt_ptr<pos:position pos:line="10" pos:column="28"/></name></decl>;<pos:position pos:line="10" pos:column="29"/></decl_stmt>

	<expr_stmt><expr><name pos:line="12" pos:column="9">mnt_list<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">=<pos:position pos:line="12" pos:column="19"/></operator> <name pos:line="12" pos:column="20">NULL<pos:position pos:line="12" pos:column="24"/></name></expr>;<pos:position pos:line="12" pos:column="25"/></expr_stmt>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><call><name pos:line="13" pos:column="13">cu_mount_getlist<pos:position pos:line="13" pos:column="29"/></name> <argument_list pos:line="13" pos:column="30">(<argument><expr><operator pos:line="13" pos:column="31">&amp;<pos:position pos:line="13" pos:column="36"/></operator><name pos:line="13" pos:column="32">mnt_list<pos:position pos:line="13" pos:column="40"/></name></expr></argument>)<pos:position pos:line="13" pos:column="41"/></argument_list></call> <operator pos:line="13" pos:column="42">==<pos:position pos:line="13" pos:column="44"/></operator> <name pos:line="13" pos:column="45">NULL<pos:position pos:line="13" pos:column="49"/></name></expr>)<pos:position pos:line="13" pos:column="50"/></condition><then pos:line="13" pos:column="50">
	<block pos:line="14" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">ERROR<pos:position pos:line="15" pos:column="22"/></name> <argument_list pos:line="15" pos:column="23">(<argument><expr><literal type="string" pos:line="15" pos:column="24">"df plugin: cu_mount_getlist failed."<pos:position pos:line="15" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="63"/></expr_stmt>
		<return pos:line="16" pos:column="17">return <expr><operator pos:line="16" pos:column="24">(<pos:position pos:line="16" pos:column="25"/></operator><operator pos:line="16" pos:column="25">-<pos:position pos:line="16" pos:column="26"/></operator><literal type="number" pos:line="16" pos:column="26">1<pos:position pos:line="16" pos:column="27"/></literal><operator pos:line="16" pos:column="27">)<pos:position pos:line="16" pos:column="28"/></operator></expr>;<pos:position pos:line="16" pos:column="29"/></return>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>

	<for pos:line="19" pos:column="9">for <control pos:line="19" pos:column="13">(<init><expr><name pos:line="19" pos:column="14">mnt_ptr<pos:position pos:line="19" pos:column="21"/></name> <operator pos:line="19" pos:column="22">=<pos:position pos:line="19" pos:column="23"/></operator> <name pos:line="19" pos:column="24">mnt_list<pos:position pos:line="19" pos:column="32"/></name></expr>;<pos:position pos:line="19" pos:column="33"/></init> <condition><expr><name pos:line="19" pos:column="34">mnt_ptr<pos:position pos:line="19" pos:column="41"/></name> <operator pos:line="19" pos:column="42">!=<pos:position pos:line="19" pos:column="44"/></operator> <name pos:line="19" pos:column="45">NULL<pos:position pos:line="19" pos:column="49"/></name></expr>;<pos:position pos:line="19" pos:column="50"/></condition> <incr><expr><name pos:line="19" pos:column="51">mnt_ptr<pos:position pos:line="19" pos:column="58"/></name> <operator pos:line="19" pos:column="59">=<pos:position pos:line="19" pos:column="60"/></operator> <name><name pos:line="19" pos:column="61">mnt_ptr<pos:position pos:line="19" pos:column="68"/></name><operator pos:line="19" pos:column="68">-&gt;<pos:position pos:line="19" pos:column="73"/></operator><name pos:line="19" pos:column="70">next<pos:position pos:line="19" pos:column="74"/></name></name></expr></incr>)<pos:position pos:line="19" pos:column="75"/></control>
	<block pos:line="20" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="21" pos:column="17">unsigned<pos:position pos:line="21" pos:column="25"/></name> <name pos:line="21" pos:column="26">long<pos:position pos:line="21" pos:column="30"/></name> <name pos:line="21" pos:column="31">long<pos:position pos:line="21" pos:column="35"/></name></type> <name pos:line="21" pos:column="36">blocksize<pos:position pos:line="21" pos:column="45"/></name></decl>;<pos:position pos:line="21" pos:column="46"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="22" pos:column="17">char<pos:position pos:line="22" pos:column="21"/></name></type> <name><name pos:line="22" pos:column="22">disk_name<pos:position pos:line="22" pos:column="31"/></name><index pos:line="22" pos:column="31">[<expr><literal type="number" pos:line="22" pos:column="32">256<pos:position pos:line="22" pos:column="35"/></literal></expr>]<pos:position pos:line="22" pos:column="36"/></index></name></decl>;<pos:position pos:line="22" pos:column="37"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="23" pos:column="17">cu_mount_t<pos:position pos:line="23" pos:column="27"/></name> <modifier pos:line="23" pos:column="28">*<pos:position pos:line="23" pos:column="29"/></modifier></type><name pos:line="23" pos:column="29">dup_ptr<pos:position pos:line="23" pos:column="36"/></name></decl>;<pos:position pos:line="23" pos:column="37"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="24" pos:column="17">uint64_t<pos:position pos:line="24" pos:column="25"/></name></type> <name pos:line="24" pos:column="26">blk_free<pos:position pos:line="24" pos:column="34"/></name></decl>;<pos:position pos:line="24" pos:column="35"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="25" pos:column="17">uint64_t<pos:position pos:line="25" pos:column="25"/></name></type> <name pos:line="25" pos:column="26">blk_reserved<pos:position pos:line="25" pos:column="38"/></name></decl>;<pos:position pos:line="25" pos:column="39"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="26" pos:column="17">uint64_t<pos:position pos:line="26" pos:column="25"/></name></type> <name pos:line="26" pos:column="26">blk_used<pos:position pos:line="26" pos:column="34"/></name></decl>;<pos:position pos:line="26" pos:column="35"/></decl_stmt>

		<decl_stmt><decl><type><name pos:line="28" pos:column="17">char<pos:position pos:line="28" pos:column="21"/></name> <specifier pos:line="28" pos:column="22">const<pos:position pos:line="28" pos:column="27"/></specifier> <modifier pos:line="28" pos:column="28">*<pos:position pos:line="28" pos:column="29"/></modifier></type><name pos:line="28" pos:column="29">dev<pos:position pos:line="28" pos:column="32"/></name> <init pos:line="28" pos:column="33">= <expr><ternary><condition><expr><operator pos:line="28" pos:column="35">(<pos:position pos:line="28" pos:column="36"/></operator><name><name pos:line="28" pos:column="36">mnt_ptr<pos:position pos:line="28" pos:column="43"/></name><operator pos:line="28" pos:column="43">-&gt;<pos:position pos:line="28" pos:column="48"/></operator><name pos:line="28" pos:column="45">spec_device<pos:position pos:line="28" pos:column="56"/></name></name> <operator pos:line="28" pos:column="57">!=<pos:position pos:line="28" pos:column="59"/></operator> <name pos:line="28" pos:column="60">NULL<pos:position pos:line="28" pos:column="64"/></name><operator pos:line="28" pos:column="64">)<pos:position pos:line="28" pos:column="65"/></operator></expr>
			?<pos:position pos:line="29" pos:column="26"/></condition><then pos:line="29" pos:column="26"> <expr><name><name pos:line="29" pos:column="27">mnt_ptr<pos:position pos:line="29" pos:column="34"/></name><operator pos:line="29" pos:column="34">-&gt;<pos:position pos:line="29" pos:column="39"/></operator><name pos:line="29" pos:column="36">spec_device<pos:position pos:line="29" pos:column="47"/></name></name></expr>
			<pos:position pos:line="30" pos:column="4"/></then><else pos:line="30" pos:column="25">: <expr><name><name pos:line="30" pos:column="27">mnt_ptr<pos:position pos:line="30" pos:column="34"/></name><operator pos:line="30" pos:column="34">-&gt;<pos:position pos:line="30" pos:column="39"/></operator><name pos:line="30" pos:column="36">device<pos:position pos:line="30" pos:column="42"/></name></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="30" pos:column="43"/></decl_stmt>

		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><call><name pos:line="32" pos:column="21">ignorelist_match<pos:position pos:line="32" pos:column="37"/></name> <argument_list pos:line="32" pos:column="38">(<argument><expr><name pos:line="32" pos:column="39">il_device<pos:position pos:line="32" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="50">dev<pos:position pos:line="32" pos:column="53"/></name></expr></argument>)<pos:position pos:line="32" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="55"/></condition><then pos:line="32" pos:column="55">
			<block type="pseudo"><continue pos:line="33" pos:column="25">continue;<pos:position pos:line="33" pos:column="34"/></continue></block></then></if>
		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><call><name pos:line="34" pos:column="21">ignorelist_match<pos:position pos:line="34" pos:column="37"/></name> <argument_list pos:line="34" pos:column="38">(<argument><expr><name pos:line="34" pos:column="39">il_mountpoint<pos:position pos:line="34" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="54">mnt_ptr<pos:position pos:line="34" pos:column="61"/></name><operator pos:line="34" pos:column="61">-&gt;<pos:position pos:line="34" pos:column="66"/></operator><name pos:line="34" pos:column="63">dir<pos:position pos:line="34" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="68"/></condition><then pos:line="34" pos:column="68">
			<block type="pseudo"><continue pos:line="35" pos:column="25">continue;<pos:position pos:line="35" pos:column="34"/></continue></block></then></if>
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><call><name pos:line="36" pos:column="21">ignorelist_match<pos:position pos:line="36" pos:column="37"/></name> <argument_list pos:line="36" pos:column="38">(<argument><expr><name pos:line="36" pos:column="39">il_fstype<pos:position pos:line="36" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="50">mnt_ptr<pos:position pos:line="36" pos:column="57"/></name><operator pos:line="36" pos:column="57">-&gt;<pos:position pos:line="36" pos:column="62"/></operator><name pos:line="36" pos:column="59">type<pos:position pos:line="36" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="65"/></condition><then pos:line="36" pos:column="65">
			<block type="pseudo"><continue pos:line="37" pos:column="25">continue;<pos:position pos:line="37" pos:column="34"/></continue></block></then></if>

		<comment type="block" pos:line="39" pos:column="17">/* search for duplicates *in front of* the current mnt_ptr. */</comment>
		<for pos:line="40" pos:column="17">for <control pos:line="40" pos:column="21">(<init><expr><name pos:line="40" pos:column="22">dup_ptr<pos:position pos:line="40" pos:column="29"/></name> <operator pos:line="40" pos:column="30">=<pos:position pos:line="40" pos:column="31"/></operator> <name pos:line="40" pos:column="32">mnt_list<pos:position pos:line="40" pos:column="40"/></name></expr>;<pos:position pos:line="40" pos:column="41"/></init> <condition><expr><name pos:line="40" pos:column="42">dup_ptr<pos:position pos:line="40" pos:column="49"/></name> <operator pos:line="40" pos:column="50">!=<pos:position pos:line="40" pos:column="52"/></operator> <name pos:line="40" pos:column="53">NULL<pos:position pos:line="40" pos:column="57"/></name></expr>;<pos:position pos:line="40" pos:column="58"/></condition> <incr><expr><name pos:line="40" pos:column="59">dup_ptr<pos:position pos:line="40" pos:column="66"/></name> <operator pos:line="40" pos:column="67">=<pos:position pos:line="40" pos:column="68"/></operator> <name><name pos:line="40" pos:column="69">dup_ptr<pos:position pos:line="40" pos:column="76"/></name><operator pos:line="40" pos:column="76">-&gt;<pos:position pos:line="40" pos:column="81"/></operator><name pos:line="40" pos:column="78">next<pos:position pos:line="40" pos:column="82"/></name></name></expr></incr>)<pos:position pos:line="40" pos:column="83"/></control>
		<block pos:line="41" pos:column="17">{
			<comment type="block" pos:line="42" pos:column="25">/* No duplicate found: mnt_ptr is the first of its kind. */</comment>
			<if pos:line="43" pos:column="25">if <condition pos:line="43" pos:column="28">(<expr><name pos:line="43" pos:column="29">dup_ptr<pos:position pos:line="43" pos:column="36"/></name> <operator pos:line="43" pos:column="37">==<pos:position pos:line="43" pos:column="39"/></operator> <name pos:line="43" pos:column="40">mnt_ptr<pos:position pos:line="43" pos:column="47"/></name></expr>)<pos:position pos:line="43" pos:column="48"/></condition><then pos:line="43" pos:column="48">
			<block pos:line="44" pos:column="25">{
				<expr_stmt><expr><name pos:line="45" pos:column="33">dup_ptr<pos:position pos:line="45" pos:column="40"/></name> <operator pos:line="45" pos:column="41">=<pos:position pos:line="45" pos:column="42"/></operator> <name pos:line="45" pos:column="43">NULL<pos:position pos:line="45" pos:column="47"/></name></expr>;<pos:position pos:line="45" pos:column="48"/></expr_stmt>
				<break pos:line="46" pos:column="33">break;<pos:position pos:line="46" pos:column="39"/></break>
			}<pos:position pos:line="47" pos:column="26"/></block></then></if>

			<comment type="block" pos:line="49" pos:column="25">/* Duplicate found: leave non-NULL dup_ptr. */</comment>
			<if pos:line="50" pos:column="25">if <condition pos:line="50" pos:column="28">(<expr><name pos:line="50" pos:column="29">by_device<pos:position pos:line="50" pos:column="38"/></name> <operator pos:line="50" pos:column="39">&amp;&amp;<pos:position pos:line="50" pos:column="49"/></operator> <operator pos:line="50" pos:column="42">(<pos:position pos:line="50" pos:column="43"/></operator><call><name pos:line="50" pos:column="43">strcmp<pos:position pos:line="50" pos:column="49"/></name> <argument_list pos:line="50" pos:column="50">(<argument><expr><name><name pos:line="50" pos:column="51">mnt_ptr<pos:position pos:line="50" pos:column="58"/></name><operator pos:line="50" pos:column="58">-&gt;<pos:position pos:line="50" pos:column="63"/></operator><name pos:line="50" pos:column="60">spec_device<pos:position pos:line="50" pos:column="71"/></name></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="73">dup_ptr<pos:position pos:line="50" pos:column="80"/></name><operator pos:line="50" pos:column="80">-&gt;<pos:position pos:line="50" pos:column="85"/></operator><name pos:line="50" pos:column="82">spec_device<pos:position pos:line="50" pos:column="93"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="94"/></argument_list></call> <operator pos:line="50" pos:column="95">==<pos:position pos:line="50" pos:column="97"/></operator> <literal type="number" pos:line="50" pos:column="98">0<pos:position pos:line="50" pos:column="99"/></literal><operator pos:line="50" pos:column="99">)<pos:position pos:line="50" pos:column="100"/></operator></expr>)<pos:position pos:line="50" pos:column="101"/></condition><then pos:line="50" pos:column="101">
				<block type="pseudo"><break pos:line="51" pos:column="33">break;<pos:position pos:line="51" pos:column="39"/></break></block></then>
			<elseif pos:line="52" pos:column="25">else <if pos:line="52" pos:column="30">if <condition pos:line="52" pos:column="33">(<expr><operator pos:line="52" pos:column="34">!<pos:position pos:line="52" pos:column="35"/></operator><name pos:line="52" pos:column="35">by_device<pos:position pos:line="52" pos:column="44"/></name> <operator pos:line="52" pos:column="45">&amp;&amp;<pos:position pos:line="52" pos:column="55"/></operator> <operator pos:line="52" pos:column="48">(<pos:position pos:line="52" pos:column="49"/></operator><call><name pos:line="52" pos:column="49">strcmp<pos:position pos:line="52" pos:column="55"/></name> <argument_list pos:line="52" pos:column="56">(<argument><expr><name><name pos:line="52" pos:column="57">mnt_ptr<pos:position pos:line="52" pos:column="64"/></name><operator pos:line="52" pos:column="64">-&gt;<pos:position pos:line="52" pos:column="69"/></operator><name pos:line="52" pos:column="66">dir<pos:position pos:line="52" pos:column="69"/></name></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="71">dup_ptr<pos:position pos:line="52" pos:column="78"/></name><operator pos:line="52" pos:column="78">-&gt;<pos:position pos:line="52" pos:column="83"/></operator><name pos:line="52" pos:column="80">dir<pos:position pos:line="52" pos:column="83"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="84"/></argument_list></call> <operator pos:line="52" pos:column="85">==<pos:position pos:line="52" pos:column="87"/></operator> <literal type="number" pos:line="52" pos:column="88">0<pos:position pos:line="52" pos:column="89"/></literal><operator pos:line="52" pos:column="89">)<pos:position pos:line="52" pos:column="90"/></operator></expr>)<pos:position pos:line="52" pos:column="91"/></condition><then pos:line="52" pos:column="91">
				<block type="pseudo"><break pos:line="53" pos:column="33">break;<pos:position pos:line="53" pos:column="39"/></break></block></then></if></elseif></if>
		}<pos:position pos:line="54" pos:column="18"/></block></for>

		<comment type="block" pos:line="56" pos:column="17">/* ignore duplicates */</comment>
		<if pos:line="57" pos:column="17">if <condition pos:line="57" pos:column="20">(<expr><name pos:line="57" pos:column="21">dup_ptr<pos:position pos:line="57" pos:column="28"/></name> <operator pos:line="57" pos:column="29">!=<pos:position pos:line="57" pos:column="31"/></operator> <name pos:line="57" pos:column="32">NULL<pos:position pos:line="57" pos:column="36"/></name></expr>)<pos:position pos:line="57" pos:column="37"/></condition><then pos:line="57" pos:column="37">
			<block type="pseudo"><continue pos:line="58" pos:column="25">continue;<pos:position pos:line="58" pos:column="34"/></continue></block></then></if>

		<if pos:line="60" pos:column="17">if <condition pos:line="60" pos:column="20">(<expr><call><name pos:line="60" pos:column="21">STATANYFS<pos:position pos:line="60" pos:column="30"/></name> <argument_list pos:line="60" pos:column="31">(<argument><expr><name><name pos:line="60" pos:column="32">mnt_ptr<pos:position pos:line="60" pos:column="39"/></name><operator pos:line="60" pos:column="39">-&gt;<pos:position pos:line="60" pos:column="44"/></operator><name pos:line="60" pos:column="41">dir<pos:position pos:line="60" pos:column="44"/></name></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="46">&amp;<pos:position pos:line="60" pos:column="51"/></operator><name pos:line="60" pos:column="47">statbuf<pos:position pos:line="60" pos:column="54"/></name></expr></argument>)<pos:position pos:line="60" pos:column="55"/></argument_list></call> <operator pos:line="60" pos:column="56">&lt;<pos:position pos:line="60" pos:column="60"/></operator> <literal type="number" pos:line="60" pos:column="58">0<pos:position pos:line="60" pos:column="59"/></literal></expr>)<pos:position pos:line="60" pos:column="60"/></condition><then pos:line="60" pos:column="60">
		<block pos:line="61" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="62" pos:column="25">char<pos:position pos:line="62" pos:column="29"/></name></type> <name><name pos:line="62" pos:column="30">errbuf<pos:position pos:line="62" pos:column="36"/></name><index pos:line="62" pos:column="36">[<expr><literal type="number" pos:line="62" pos:column="37">1024<pos:position pos:line="62" pos:column="41"/></literal></expr>]<pos:position pos:line="62" pos:column="42"/></index></name></decl>;<pos:position pos:line="62" pos:column="43"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="63" pos:column="25">ERROR<pos:position pos:line="63" pos:column="30"/></name> <argument_list pos:line="63" pos:column="31">(<argument><expr><name pos:line="63" pos:column="32">STATANYFS_STR<pos:position pos:line="63" pos:column="45"/></name><literal type="string" pos:line="63" pos:column="45">"(%s) failed: %s"<pos:position pos:line="63" pos:column="62"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="64" pos:column="41">mnt_ptr<pos:position pos:line="64" pos:column="48"/></name><operator pos:line="64" pos:column="48">-&gt;<pos:position pos:line="64" pos:column="53"/></operator><name pos:line="64" pos:column="50">dir<pos:position pos:line="64" pos:column="53"/></name></name></expr></argument>,
					<argument><expr><call><name pos:line="65" pos:column="41">sstrerror<pos:position pos:line="65" pos:column="50"/></name> <argument_list pos:line="65" pos:column="51">(<argument><expr><name pos:line="65" pos:column="52">errno<pos:position pos:line="65" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="59">errbuf<pos:position pos:line="65" pos:column="65"/></name></expr></argument>,
						<argument><expr><sizeof pos:line="66" pos:column="49">sizeof <argument_list pos:line="66" pos:column="56">(<argument><expr><name pos:line="66" pos:column="57">errbuf<pos:position pos:line="66" pos:column="63"/></name></expr></argument>)<pos:position pos:line="66" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="66" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="66" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="67"/></expr_stmt>
			<continue pos:line="67" pos:column="25">continue;<pos:position pos:line="67" pos:column="34"/></continue>
		}<pos:position pos:line="68" pos:column="18"/></block></then></if>

		<if pos:line="70" pos:column="17">if <condition pos:line="70" pos:column="20">(<expr><operator pos:line="70" pos:column="21">!<pos:position pos:line="70" pos:column="22"/></operator><name><name pos:line="70" pos:column="22">statbuf<pos:position pos:line="70" pos:column="29"/></name><operator pos:line="70" pos:column="29">.<pos:position pos:line="70" pos:column="30"/></operator><name pos:line="70" pos:column="30">f_blocks<pos:position pos:line="70" pos:column="38"/></name></name></expr>)<pos:position pos:line="70" pos:column="39"/></condition><then pos:line="70" pos:column="39">
			<block type="pseudo"><continue pos:line="71" pos:column="25">continue;<pos:position pos:line="71" pos:column="34"/></continue></block></then></if>

		<if pos:line="73" pos:column="17">if <condition pos:line="73" pos:column="20">(<expr><name pos:line="73" pos:column="21">by_device<pos:position pos:line="73" pos:column="30"/></name></expr>)<pos:position pos:line="73" pos:column="31"/></condition><then pos:line="73" pos:column="31">
		<block pos:line="74" pos:column="17">{
			<comment type="block" pos:line="75" pos:column="25">/* eg, /dev/hda1  -- strip off the "/dev/" */</comment>
			<if pos:line="76" pos:column="25">if <condition pos:line="76" pos:column="28">(<expr><call><name pos:line="76" pos:column="29">strncmp<pos:position pos:line="76" pos:column="36"/></name> <argument_list pos:line="76" pos:column="37">(<argument><expr><name pos:line="76" pos:column="38">dev<pos:position pos:line="76" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="43">"/dev/"<pos:position pos:line="76" pos:column="50"/></literal></expr></argument>, <argument><expr><call><name pos:line="76" pos:column="52">strlen<pos:position pos:line="76" pos:column="58"/></name> <argument_list pos:line="76" pos:column="59">(<argument><expr><literal type="string" pos:line="76" pos:column="60">"/dev/"<pos:position pos:line="76" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="76" pos:column="69"/></argument_list></call> <operator pos:line="76" pos:column="70">==<pos:position pos:line="76" pos:column="72"/></operator> <literal type="number" pos:line="76" pos:column="73">0<pos:position pos:line="76" pos:column="74"/></literal></expr>)<pos:position pos:line="76" pos:column="75"/></condition><then pos:line="76" pos:column="75">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="77" pos:column="33">sstrncpy<pos:position pos:line="77" pos:column="41"/></name> <argument_list pos:line="77" pos:column="42">(<argument><expr><name pos:line="77" pos:column="43">disk_name<pos:position pos:line="77" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="54">dev<pos:position pos:line="77" pos:column="57"/></name> <operator pos:line="77" pos:column="58">+<pos:position pos:line="77" pos:column="59"/></operator> <call><name pos:line="77" pos:column="60">strlen<pos:position pos:line="77" pos:column="66"/></name> <argument_list pos:line="77" pos:column="67">(<argument><expr><literal type="string" pos:line="77" pos:column="68">"/dev/"<pos:position pos:line="77" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="76"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="77" pos:column="78">sizeof <argument_list pos:line="77" pos:column="85">(<argument><expr><name pos:line="77" pos:column="86">disk_name<pos:position pos:line="77" pos:column="95"/></name></expr></argument>)<pos:position pos:line="77" pos:column="96"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="77" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="98"/></expr_stmt></block></then>
			<else pos:line="78" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="79" pos:column="33">sstrncpy<pos:position pos:line="79" pos:column="41"/></name> <argument_list pos:line="79" pos:column="42">(<argument><expr><name pos:line="79" pos:column="43">disk_name<pos:position pos:line="79" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="54">dev<pos:position pos:line="79" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="79" pos:column="59">sizeof <argument_list pos:line="79" pos:column="66">(<argument><expr><name pos:line="79" pos:column="67">disk_name<pos:position pos:line="79" pos:column="76"/></name></expr></argument>)<pos:position pos:line="79" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="79" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="79"/></expr_stmt></block></else></if>

			<if pos:line="81" pos:column="25">if <condition pos:line="81" pos:column="28">(<expr><call><name pos:line="81" pos:column="29">strlen<pos:position pos:line="81" pos:column="35"/></name><argument_list pos:line="81" pos:column="35">(<argument><expr><name pos:line="81" pos:column="36">disk_name<pos:position pos:line="81" pos:column="45"/></name></expr></argument>)<pos:position pos:line="81" pos:column="46"/></argument_list></call> <operator pos:line="81" pos:column="47">&lt;<pos:position pos:line="81" pos:column="51"/></operator> <literal type="number" pos:line="81" pos:column="49">1<pos:position pos:line="81" pos:column="50"/></literal></expr>)<pos:position pos:line="81" pos:column="51"/></condition><then pos:line="81" pos:column="51">
			<block pos:line="82" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="83" pos:column="33">DEBUG<pos:position pos:line="83" pos:column="38"/></name><argument_list pos:line="83" pos:column="38">(<argument><expr><literal type="string" pos:line="83" pos:column="39">"df: no device name for mountpoint %s, skipping"<pos:position pos:line="83" pos:column="87"/></literal></expr></argument>, <argument><expr><name><name pos:line="83" pos:column="89">mnt_ptr<pos:position pos:line="83" pos:column="96"/></name><operator pos:line="83" pos:column="96">-&gt;<pos:position pos:line="83" pos:column="101"/></operator><name pos:line="83" pos:column="98">dir<pos:position pos:line="83" pos:column="101"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="103"/></expr_stmt>
				<continue pos:line="84" pos:column="33">continue;<pos:position pos:line="84" pos:column="42"/></continue>
			}<pos:position pos:line="85" pos:column="26"/></block></then></if>
		}<pos:position pos:line="86" pos:column="18"/></block></then>
		<else pos:line="87" pos:column="17">else
		<block pos:line="88" pos:column="17">{
			<if pos:line="89" pos:column="25">if <condition pos:line="89" pos:column="28">(<expr><call><name pos:line="89" pos:column="29">strcmp<pos:position pos:line="89" pos:column="35"/></name> <argument_list pos:line="89" pos:column="36">(<argument><expr><name><name pos:line="89" pos:column="37">mnt_ptr<pos:position pos:line="89" pos:column="44"/></name><operator pos:line="89" pos:column="44">-&gt;<pos:position pos:line="89" pos:column="49"/></operator><name pos:line="89" pos:column="46">dir<pos:position pos:line="89" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="89" pos:column="51">"/"<pos:position pos:line="89" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="55"/></argument_list></call> <operator pos:line="89" pos:column="56">==<pos:position pos:line="89" pos:column="58"/></operator> <literal type="number" pos:line="89" pos:column="59">0<pos:position pos:line="89" pos:column="60"/></literal></expr>)<pos:position pos:line="89" pos:column="61"/></condition><then pos:line="89" pos:column="61">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="90" pos:column="33">sstrncpy<pos:position pos:line="90" pos:column="41"/></name> <argument_list pos:line="90" pos:column="42">(<argument><expr><name pos:line="90" pos:column="43">disk_name<pos:position pos:line="90" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="54">"root"<pos:position pos:line="90" pos:column="60"/></literal></expr></argument>, <argument><expr><sizeof pos:line="90" pos:column="62">sizeof <argument_list pos:line="90" pos:column="69">(<argument><expr><name pos:line="90" pos:column="70">disk_name<pos:position pos:line="90" pos:column="79"/></name></expr></argument>)<pos:position pos:line="90" pos:column="80"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="90" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="82"/></expr_stmt></block></then>
			<else pos:line="91" pos:column="25">else
			<block pos:line="92" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="93" pos:column="33">int<pos:position pos:line="93" pos:column="36"/></name></type> <name pos:line="93" pos:column="37">i<pos:position pos:line="93" pos:column="38"/></name></decl>, <decl><type ref="prev"/><name pos:line="93" pos:column="40">len<pos:position pos:line="93" pos:column="43"/></name></decl>;<pos:position pos:line="93" pos:column="44"/></decl_stmt>

				<expr_stmt><expr><call><name pos:line="95" pos:column="33">sstrncpy<pos:position pos:line="95" pos:column="41"/></name> <argument_list pos:line="95" pos:column="42">(<argument><expr><name pos:line="95" pos:column="43">disk_name<pos:position pos:line="95" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="95" pos:column="54">mnt_ptr<pos:position pos:line="95" pos:column="61"/></name><operator pos:line="95" pos:column="61">-&gt;<pos:position pos:line="95" pos:column="66"/></operator><name pos:line="95" pos:column="63">dir<pos:position pos:line="95" pos:column="66"/></name></name> <operator pos:line="95" pos:column="67">+<pos:position pos:line="95" pos:column="68"/></operator> <literal type="number" pos:line="95" pos:column="69">1<pos:position pos:line="95" pos:column="70"/></literal></expr></argument>, <argument><expr><sizeof pos:line="95" pos:column="72">sizeof <argument_list pos:line="95" pos:column="79">(<argument><expr><name pos:line="95" pos:column="80">disk_name<pos:position pos:line="95" pos:column="89"/></name></expr></argument>)<pos:position pos:line="95" pos:column="90"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="95" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="92"/></expr_stmt>
				<expr_stmt><expr><name pos:line="96" pos:column="33">len<pos:position pos:line="96" pos:column="36"/></name> <operator pos:line="96" pos:column="37">=<pos:position pos:line="96" pos:column="38"/></operator> <call><name pos:line="96" pos:column="39">strlen<pos:position pos:line="96" pos:column="45"/></name> <argument_list pos:line="96" pos:column="46">(<argument><expr><name pos:line="96" pos:column="47">disk_name<pos:position pos:line="96" pos:column="56"/></name></expr></argument>)<pos:position pos:line="96" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="58"/></expr_stmt>

				<for pos:line="98" pos:column="33">for <control pos:line="98" pos:column="37">(<init><expr><name pos:line="98" pos:column="38">i<pos:position pos:line="98" pos:column="39"/></name> <operator pos:line="98" pos:column="40">=<pos:position pos:line="98" pos:column="41"/></operator> <literal type="number" pos:line="98" pos:column="42">0<pos:position pos:line="98" pos:column="43"/></literal></expr>;<pos:position pos:line="98" pos:column="44"/></init> <condition><expr><name pos:line="98" pos:column="45">i<pos:position pos:line="98" pos:column="46"/></name> <operator pos:line="98" pos:column="47">&lt;<pos:position pos:line="98" pos:column="51"/></operator> <name pos:line="98" pos:column="49">len<pos:position pos:line="98" pos:column="52"/></name></expr>;<pos:position pos:line="98" pos:column="53"/></condition> <incr><expr><name pos:line="98" pos:column="54">i<pos:position pos:line="98" pos:column="55"/></name><operator pos:line="98" pos:column="55">++<pos:position pos:line="98" pos:column="57"/></operator></expr></incr>)<pos:position pos:line="98" pos:column="58"/></control>
					<block type="pseudo"><if pos:line="99" pos:column="41">if <condition pos:line="99" pos:column="44">(<expr><name><name pos:line="99" pos:column="45">disk_name<pos:position pos:line="99" pos:column="54"/></name><index pos:line="99" pos:column="54">[<expr><name pos:line="99" pos:column="55">i<pos:position pos:line="99" pos:column="56"/></name></expr>]<pos:position pos:line="99" pos:column="57"/></index></name> <operator pos:line="99" pos:column="58">==<pos:position pos:line="99" pos:column="60"/></operator> <literal type="char" pos:line="99" pos:column="61">'/'<pos:position pos:line="99" pos:column="64"/></literal></expr>)<pos:position pos:line="99" pos:column="65"/></condition><then pos:line="99" pos:column="65">
						<block type="pseudo"><expr_stmt><expr><name><name pos:line="100" pos:column="49">disk_name<pos:position pos:line="100" pos:column="58"/></name><index pos:line="100" pos:column="58">[<expr><name pos:line="100" pos:column="59">i<pos:position pos:line="100" pos:column="60"/></name></expr>]<pos:position pos:line="100" pos:column="61"/></index></name> <operator pos:line="100" pos:column="62">=<pos:position pos:line="100" pos:column="63"/></operator> <literal type="char" pos:line="100" pos:column="64">'-'<pos:position pos:line="100" pos:column="67"/></literal></expr>;<pos:position pos:line="100" pos:column="68"/></expr_stmt></block></then></if></block></for>
			}<pos:position pos:line="101" pos:column="26"/></block></else></if>
		}<pos:position pos:line="102" pos:column="18"/></block></else></if>

		<expr_stmt><expr><name pos:line="104" pos:column="17">blocksize<pos:position pos:line="104" pos:column="26"/></name> <operator pos:line="104" pos:column="27">=<pos:position pos:line="104" pos:column="28"/></operator> <call><name pos:line="104" pos:column="29">BLOCKSIZE<pos:position pos:line="104" pos:column="38"/></name><argument_list pos:line="104" pos:column="38">(<argument><expr><name pos:line="104" pos:column="39">statbuf<pos:position pos:line="104" pos:column="46"/></name></expr></argument>)<pos:position pos:line="104" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="48"/></expr_stmt>

		<comment type="block" pos:line="106" pos:column="17">/*
		 * Sanity-check for the values in the struct
		 */</comment>
		<comment type="block" pos:line="109" pos:column="17">/* Check for negative "available" byes. For example UFS can
		 * report negative free space for user. Notice. blk_reserved
		 * will start to diminish after this. */</comment>
<cpp:if pos:line="112" pos:column="1">#<cpp:directive pos:line="112" pos:column="2">if<pos:position pos:line="112" pos:column="4"/></cpp:directive> <expr><name pos:line="112" pos:column="5">HAVE_STATVFS<pos:position pos:line="112" pos:column="17"/></name></expr></cpp:if>
		<comment type="block" pos:line="113" pos:column="17">/* Cast and temporary variable are needed to avoid
		 * compiler warnings.
		 * ((struct statvfs).f_bavail is unsigned (POSIX)) */</comment>
		<decl_stmt><decl><type><name pos:line="116" pos:column="17">int64_t<pos:position pos:line="116" pos:column="24"/></name></type> <name pos:line="116" pos:column="25">signed_bavail<pos:position pos:line="116" pos:column="38"/></name> <init pos:line="116" pos:column="39">= <expr><operator pos:line="116" pos:column="41">(<pos:position pos:line="116" pos:column="42"/></operator><name pos:line="116" pos:column="42">int64_t<pos:position pos:line="116" pos:column="49"/></name><operator pos:line="116" pos:column="49">)<pos:position pos:line="116" pos:column="50"/></operator> <name><name pos:line="116" pos:column="51">statbuf<pos:position pos:line="116" pos:column="58"/></name><operator pos:line="116" pos:column="58">.<pos:position pos:line="116" pos:column="59"/></operator><name pos:line="116" pos:column="59">f_bavail<pos:position pos:line="116" pos:column="67"/></name></name></expr></init></decl>;<pos:position pos:line="116" pos:column="68"/></decl_stmt>
		<if pos:line="117" pos:column="17">if <condition pos:line="117" pos:column="20">(<expr><name pos:line="117" pos:column="21">signed_bavail<pos:position pos:line="117" pos:column="34"/></name> <operator pos:line="117" pos:column="35">&lt;<pos:position pos:line="117" pos:column="39"/></operator> <literal type="number" pos:line="117" pos:column="37">0<pos:position pos:line="117" pos:column="38"/></literal></expr>)<pos:position pos:line="117" pos:column="39"/></condition><then pos:line="117" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="118" pos:column="25">statbuf<pos:position pos:line="118" pos:column="32"/></name><operator pos:line="118" pos:column="32">.<pos:position pos:line="118" pos:column="33"/></operator><name pos:line="118" pos:column="33">f_bavail<pos:position pos:line="118" pos:column="41"/></name></name> <operator pos:line="118" pos:column="42">=<pos:position pos:line="118" pos:column="43"/></operator> <literal type="number" pos:line="118" pos:column="44">0<pos:position pos:line="118" pos:column="45"/></literal></expr>;<pos:position pos:line="118" pos:column="46"/></expr_stmt></block></then></if>
<cpp:elif pos:line="119" pos:column="1">#<cpp:directive pos:line="119" pos:column="2">elif<pos:position pos:line="119" pos:column="6"/></cpp:directive> <expr><name pos:line="119" pos:column="7">HAVE_STATFS<pos:position pos:line="119" pos:column="18"/></name></expr></cpp:elif>
		<if pos:line="120" pos:column="17">if <condition pos:line="120" pos:column="20">(<expr><name><name pos:line="120" pos:column="21">statbuf<pos:position pos:line="120" pos:column="28"/></name><operator pos:line="120" pos:column="28">.<pos:position pos:line="120" pos:column="29"/></operator><name pos:line="120" pos:column="29">f_bavail<pos:position pos:line="120" pos:column="37"/></name></name> <operator pos:line="120" pos:column="38">&lt;<pos:position pos:line="120" pos:column="42"/></operator> <literal type="number" pos:line="120" pos:column="40">0<pos:position pos:line="120" pos:column="41"/></literal></expr>)<pos:position pos:line="120" pos:column="42"/></condition><then pos:line="120" pos:column="42">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="121" pos:column="25">statbuf<pos:position pos:line="121" pos:column="32"/></name><operator pos:line="121" pos:column="32">.<pos:position pos:line="121" pos:column="33"/></operator><name pos:line="121" pos:column="33">f_bavail<pos:position pos:line="121" pos:column="41"/></name></name> <operator pos:line="121" pos:column="42">=<pos:position pos:line="121" pos:column="43"/></operator> <literal type="number" pos:line="121" pos:column="44">0<pos:position pos:line="121" pos:column="45"/></literal></expr>;<pos:position pos:line="121" pos:column="46"/></expr_stmt></block></then></if>
<cpp:endif pos:line="122" pos:column="1">#<cpp:directive pos:line="122" pos:column="2">endif<pos:position pos:line="122" pos:column="7"/></cpp:directive></cpp:endif>
		<comment type="block" pos:line="123" pos:column="17">/* Make sure that f_blocks &gt;= f_bfree &gt;= f_bavail */</comment>
		<if pos:line="124" pos:column="17">if <condition pos:line="124" pos:column="20">(<expr><name><name pos:line="124" pos:column="21">statbuf<pos:position pos:line="124" pos:column="28"/></name><operator pos:line="124" pos:column="28">.<pos:position pos:line="124" pos:column="29"/></operator><name pos:line="124" pos:column="29">f_bfree<pos:position pos:line="124" pos:column="36"/></name></name> <operator pos:line="124" pos:column="37">&lt;<pos:position pos:line="124" pos:column="41"/></operator> <name><name pos:line="124" pos:column="39">statbuf<pos:position pos:line="124" pos:column="46"/></name><operator pos:line="124" pos:column="46">.<pos:position pos:line="124" pos:column="47"/></operator><name pos:line="124" pos:column="47">f_bavail<pos:position pos:line="124" pos:column="55"/></name></name></expr>)<pos:position pos:line="124" pos:column="56"/></condition><then pos:line="124" pos:column="56">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="125" pos:column="25">statbuf<pos:position pos:line="125" pos:column="32"/></name><operator pos:line="125" pos:column="32">.<pos:position pos:line="125" pos:column="33"/></operator><name pos:line="125" pos:column="33">f_bfree<pos:position pos:line="125" pos:column="40"/></name></name> <operator pos:line="125" pos:column="41">=<pos:position pos:line="125" pos:column="42"/></operator> <name><name pos:line="125" pos:column="43">statbuf<pos:position pos:line="125" pos:column="50"/></name><operator pos:line="125" pos:column="50">.<pos:position pos:line="125" pos:column="51"/></operator><name pos:line="125" pos:column="51">f_bavail<pos:position pos:line="125" pos:column="59"/></name></name></expr>;<pos:position pos:line="125" pos:column="60"/></expr_stmt></block></then></if>
		<if pos:line="126" pos:column="17">if <condition pos:line="126" pos:column="20">(<expr><name><name pos:line="126" pos:column="21">statbuf<pos:position pos:line="126" pos:column="28"/></name><operator pos:line="126" pos:column="28">.<pos:position pos:line="126" pos:column="29"/></operator><name pos:line="126" pos:column="29">f_blocks<pos:position pos:line="126" pos:column="37"/></name></name> <operator pos:line="126" pos:column="38">&lt;<pos:position pos:line="126" pos:column="42"/></operator> <name><name pos:line="126" pos:column="40">statbuf<pos:position pos:line="126" pos:column="47"/></name><operator pos:line="126" pos:column="47">.<pos:position pos:line="126" pos:column="48"/></operator><name pos:line="126" pos:column="48">f_bfree<pos:position pos:line="126" pos:column="55"/></name></name></expr>)<pos:position pos:line="126" pos:column="56"/></condition><then pos:line="126" pos:column="56">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="127" pos:column="25">statbuf<pos:position pos:line="127" pos:column="32"/></name><operator pos:line="127" pos:column="32">.<pos:position pos:line="127" pos:column="33"/></operator><name pos:line="127" pos:column="33">f_blocks<pos:position pos:line="127" pos:column="41"/></name></name> <operator pos:line="127" pos:column="42">=<pos:position pos:line="127" pos:column="43"/></operator> <name><name pos:line="127" pos:column="44">statbuf<pos:position pos:line="127" pos:column="51"/></name><operator pos:line="127" pos:column="51">.<pos:position pos:line="127" pos:column="52"/></operator><name pos:line="127" pos:column="52">f_bfree<pos:position pos:line="127" pos:column="59"/></name></name></expr>;<pos:position pos:line="127" pos:column="60"/></expr_stmt></block></then></if>

		<expr_stmt><expr><name pos:line="129" pos:column="17">blk_free<pos:position pos:line="129" pos:column="25"/></name>     <operator pos:line="129" pos:column="30">=<pos:position pos:line="129" pos:column="31"/></operator> <operator pos:line="129" pos:column="32">(<pos:position pos:line="129" pos:column="33"/></operator><name pos:line="129" pos:column="33">uint64_t<pos:position pos:line="129" pos:column="41"/></name><operator pos:line="129" pos:column="41">)<pos:position pos:line="129" pos:column="42"/></operator> <name><name pos:line="129" pos:column="43">statbuf<pos:position pos:line="129" pos:column="50"/></name><operator pos:line="129" pos:column="50">.<pos:position pos:line="129" pos:column="51"/></operator><name pos:line="129" pos:column="51">f_bavail<pos:position pos:line="129" pos:column="59"/></name></name></expr>;<pos:position pos:line="129" pos:column="60"/></expr_stmt>
		<expr_stmt><expr><name pos:line="130" pos:column="17">blk_reserved<pos:position pos:line="130" pos:column="29"/></name> <operator pos:line="130" pos:column="30">=<pos:position pos:line="130" pos:column="31"/></operator> <call pos:line="130" pos:column="32">(<name pos:line="130" pos:column="33">uint64_t<pos:position pos:line="130" pos:column="41"/></name>) <argument_list pos:line="130" pos:column="43">(<argument><expr><name><name pos:line="130" pos:column="44">statbuf<pos:position pos:line="130" pos:column="51"/></name><operator pos:line="130" pos:column="51">.<pos:position pos:line="130" pos:column="52"/></operator><name pos:line="130" pos:column="52">f_bfree<pos:position pos:line="130" pos:column="59"/></name></name> <operator pos:line="130" pos:column="60">-<pos:position pos:line="130" pos:column="61"/></operator> <name><name pos:line="130" pos:column="62">statbuf<pos:position pos:line="130" pos:column="69"/></name><operator pos:line="130" pos:column="69">.<pos:position pos:line="130" pos:column="70"/></operator><name pos:line="130" pos:column="70">f_bavail<pos:position pos:line="130" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="130" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="80"/></expr_stmt>
		<expr_stmt><expr><name pos:line="131" pos:column="17">blk_used<pos:position pos:line="131" pos:column="25"/></name>     <operator pos:line="131" pos:column="30">=<pos:position pos:line="131" pos:column="31"/></operator> <call pos:line="131" pos:column="32">(<name pos:line="131" pos:column="33">uint64_t<pos:position pos:line="131" pos:column="41"/></name>) <argument_list pos:line="131" pos:column="43">(<argument><expr><name><name pos:line="131" pos:column="44">statbuf<pos:position pos:line="131" pos:column="51"/></name><operator pos:line="131" pos:column="51">.<pos:position pos:line="131" pos:column="52"/></operator><name pos:line="131" pos:column="52">f_blocks<pos:position pos:line="131" pos:column="60"/></name></name> <operator pos:line="131" pos:column="61">-<pos:position pos:line="131" pos:column="62"/></operator> <name><name pos:line="131" pos:column="63">statbuf<pos:position pos:line="131" pos:column="70"/></name><operator pos:line="131" pos:column="70">.<pos:position pos:line="131" pos:column="71"/></operator><name pos:line="131" pos:column="71">f_bfree<pos:position pos:line="131" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="131" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="80"/></expr_stmt>

		<if pos:line="133" pos:column="17">if <condition pos:line="133" pos:column="20">(<expr><name pos:line="133" pos:column="21">values_absolute<pos:position pos:line="133" pos:column="36"/></name></expr>)<pos:position pos:line="133" pos:column="37"/></condition><then pos:line="133" pos:column="37">
		<block pos:line="134" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="135" pos:column="25">df_submit_one<pos:position pos:line="135" pos:column="38"/></name> <argument_list pos:line="135" pos:column="39">(<argument><expr><name pos:line="135" pos:column="40">disk_name<pos:position pos:line="135" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="135" pos:column="51">"df_complex"<pos:position pos:line="135" pos:column="63"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="135" pos:column="65">"free"<pos:position pos:line="135" pos:column="71"/></literal></expr></argument>,
				<argument><expr><call pos:line="136" pos:column="33">(<name pos:line="136" pos:column="34">gauge_t<pos:position pos:line="136" pos:column="41"/></name>) <argument_list pos:line="136" pos:column="43">(<argument><expr><name pos:line="136" pos:column="44">blk_free<pos:position pos:line="136" pos:column="52"/></name> <operator pos:line="136" pos:column="53">*<pos:position pos:line="136" pos:column="54"/></operator> <name pos:line="136" pos:column="55">blocksize<pos:position pos:line="136" pos:column="64"/></name></expr></argument>)<pos:position pos:line="136" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="136" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="67"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="137" pos:column="25">df_submit_one<pos:position pos:line="137" pos:column="38"/></name> <argument_list pos:line="137" pos:column="39">(<argument><expr><name pos:line="137" pos:column="40">disk_name<pos:position pos:line="137" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="137" pos:column="51">"df_complex"<pos:position pos:line="137" pos:column="63"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="137" pos:column="65">"reserved"<pos:position pos:line="137" pos:column="75"/></literal></expr></argument>,
				<argument><expr><call pos:line="138" pos:column="33">(<name pos:line="138" pos:column="34">gauge_t<pos:position pos:line="138" pos:column="41"/></name>) <argument_list pos:line="138" pos:column="43">(<argument><expr><name pos:line="138" pos:column="44">blk_reserved<pos:position pos:line="138" pos:column="56"/></name> <operator pos:line="138" pos:column="57">*<pos:position pos:line="138" pos:column="58"/></operator> <name pos:line="138" pos:column="59">blocksize<pos:position pos:line="138" pos:column="68"/></name></expr></argument>)<pos:position pos:line="138" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="138" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="71"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="139" pos:column="25">df_submit_one<pos:position pos:line="139" pos:column="38"/></name> <argument_list pos:line="139" pos:column="39">(<argument><expr><name pos:line="139" pos:column="40">disk_name<pos:position pos:line="139" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="139" pos:column="51">"df_complex"<pos:position pos:line="139" pos:column="63"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="139" pos:column="65">"used"<pos:position pos:line="139" pos:column="71"/></literal></expr></argument>,
				<argument><expr><call pos:line="140" pos:column="33">(<name pos:line="140" pos:column="34">gauge_t<pos:position pos:line="140" pos:column="41"/></name>) <argument_list pos:line="140" pos:column="43">(<argument><expr><name pos:line="140" pos:column="44">blk_used<pos:position pos:line="140" pos:column="52"/></name> <operator pos:line="140" pos:column="53">*<pos:position pos:line="140" pos:column="54"/></operator> <name pos:line="140" pos:column="55">blocksize<pos:position pos:line="140" pos:column="64"/></name></expr></argument>)<pos:position pos:line="140" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="140" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="67"/></expr_stmt>
		}<pos:position pos:line="141" pos:column="18"/></block></then></if>

		<if pos:line="143" pos:column="17">if <condition pos:line="143" pos:column="20">(<expr><name pos:line="143" pos:column="21">values_percentage<pos:position pos:line="143" pos:column="38"/></name></expr>)<pos:position pos:line="143" pos:column="39"/></condition><then pos:line="143" pos:column="39">
		<block pos:line="144" pos:column="17">{
			<if pos:line="145" pos:column="25">if <condition pos:line="145" pos:column="28">(<expr><name><name pos:line="145" pos:column="29">statbuf<pos:position pos:line="145" pos:column="36"/></name><operator pos:line="145" pos:column="36">.<pos:position pos:line="145" pos:column="37"/></operator><name pos:line="145" pos:column="37">f_blocks<pos:position pos:line="145" pos:column="45"/></name></name> <operator pos:line="145" pos:column="46">&gt;<pos:position pos:line="145" pos:column="50"/></operator> <literal type="number" pos:line="145" pos:column="48">0<pos:position pos:line="145" pos:column="49"/></literal></expr>)<pos:position pos:line="145" pos:column="50"/></condition><then pos:line="145" pos:column="50">
				<block pos:line="146" pos:column="33">{
				<expr_stmt><expr><call><name pos:line="147" pos:column="33">df_submit_one<pos:position pos:line="147" pos:column="46"/></name> <argument_list pos:line="147" pos:column="47">(<argument><expr><name pos:line="147" pos:column="48">disk_name<pos:position pos:line="147" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="147" pos:column="59">"percent_bytes"<pos:position pos:line="147" pos:column="74"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="147" pos:column="76">"free"<pos:position pos:line="147" pos:column="82"/></literal></expr></argument>,
					<argument><expr><call pos:line="148" pos:column="41">(<name pos:line="148" pos:column="42">gauge_t<pos:position pos:line="148" pos:column="49"/></name>) <argument_list pos:line="148" pos:column="51">(<argument><expr><call pos:line="148" pos:column="52">(<name pos:line="148" pos:column="53">float_t<pos:position pos:line="148" pos:column="60"/></name>)<argument_list pos:line="148" pos:column="61">(<argument><expr><name pos:line="148" pos:column="62">blk_free<pos:position pos:line="148" pos:column="70"/></name></expr></argument>)<pos:position pos:line="148" pos:column="71"/></argument_list></call> <operator pos:line="148" pos:column="72">/<pos:position pos:line="148" pos:column="73"/></operator> <name><name pos:line="148" pos:column="74">statbuf<pos:position pos:line="148" pos:column="81"/></name><operator pos:line="148" pos:column="81">.<pos:position pos:line="148" pos:column="82"/></operator><name pos:line="148" pos:column="82">f_blocks<pos:position pos:line="148" pos:column="90"/></name></name> <operator pos:line="148" pos:column="91">*<pos:position pos:line="148" pos:column="92"/></operator> <literal type="number" pos:line="148" pos:column="93">100<pos:position pos:line="148" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="148" pos:column="97"/></argument_list></call></expr></argument>)<pos:position pos:line="148" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="99"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="149" pos:column="33">df_submit_one<pos:position pos:line="149" pos:column="46"/></name> <argument_list pos:line="149" pos:column="47">(<argument><expr><name pos:line="149" pos:column="48">disk_name<pos:position pos:line="149" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="149" pos:column="59">"percent_bytes"<pos:position pos:line="149" pos:column="74"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="149" pos:column="76">"reserved"<pos:position pos:line="149" pos:column="86"/></literal></expr></argument>,
					<argument><expr><call pos:line="150" pos:column="41">(<name pos:line="150" pos:column="42">gauge_t<pos:position pos:line="150" pos:column="49"/></name>) <argument_list pos:line="150" pos:column="51">(<argument><expr><call pos:line="150" pos:column="52">(<name pos:line="150" pos:column="53">float_t<pos:position pos:line="150" pos:column="60"/></name>)<argument_list pos:line="150" pos:column="61">(<argument><expr><name pos:line="150" pos:column="62">blk_reserved<pos:position pos:line="150" pos:column="74"/></name></expr></argument>)<pos:position pos:line="150" pos:column="75"/></argument_list></call> <operator pos:line="150" pos:column="76">/<pos:position pos:line="150" pos:column="77"/></operator> <name><name pos:line="150" pos:column="78">statbuf<pos:position pos:line="150" pos:column="85"/></name><operator pos:line="150" pos:column="85">.<pos:position pos:line="150" pos:column="86"/></operator><name pos:line="150" pos:column="86">f_blocks<pos:position pos:line="150" pos:column="94"/></name></name> <operator pos:line="150" pos:column="95">*<pos:position pos:line="150" pos:column="96"/></operator> <literal type="number" pos:line="150" pos:column="97">100<pos:position pos:line="150" pos:column="100"/></literal></expr></argument>)<pos:position pos:line="150" pos:column="101"/></argument_list></call></expr></argument>)<pos:position pos:line="150" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="103"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="151" pos:column="33">df_submit_one<pos:position pos:line="151" pos:column="46"/></name> <argument_list pos:line="151" pos:column="47">(<argument><expr><name pos:line="151" pos:column="48">disk_name<pos:position pos:line="151" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="151" pos:column="59">"percent_bytes"<pos:position pos:line="151" pos:column="74"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="151" pos:column="76">"used"<pos:position pos:line="151" pos:column="82"/></literal></expr></argument>,
					<argument><expr><call pos:line="152" pos:column="41">(<name pos:line="152" pos:column="42">gauge_t<pos:position pos:line="152" pos:column="49"/></name>) <argument_list pos:line="152" pos:column="51">(<argument><expr><call pos:line="152" pos:column="52">(<name pos:line="152" pos:column="53">float_t<pos:position pos:line="152" pos:column="60"/></name>)<argument_list pos:line="152" pos:column="61">(<argument><expr><name pos:line="152" pos:column="62">blk_used<pos:position pos:line="152" pos:column="70"/></name></expr></argument>)<pos:position pos:line="152" pos:column="71"/></argument_list></call> <operator pos:line="152" pos:column="72">/<pos:position pos:line="152" pos:column="73"/></operator> <name><name pos:line="152" pos:column="74">statbuf<pos:position pos:line="152" pos:column="81"/></name><operator pos:line="152" pos:column="81">.<pos:position pos:line="152" pos:column="82"/></operator><name pos:line="152" pos:column="82">f_blocks<pos:position pos:line="152" pos:column="90"/></name></name> <operator pos:line="152" pos:column="91">*<pos:position pos:line="152" pos:column="92"/></operator> <literal type="number" pos:line="152" pos:column="93">100<pos:position pos:line="152" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="152" pos:column="97"/></argument_list></call></expr></argument>)<pos:position pos:line="152" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="99"/></expr_stmt>
				}<pos:position pos:line="153" pos:column="34"/></block></then>
			<else pos:line="154" pos:column="25">else <block type="pseudo"><return pos:line="154" pos:column="30">return <expr><operator pos:line="154" pos:column="37">(<pos:position pos:line="154" pos:column="38"/></operator><operator pos:line="154" pos:column="38">-<pos:position pos:line="154" pos:column="39"/></operator><literal type="number" pos:line="154" pos:column="39">1<pos:position pos:line="154" pos:column="40"/></literal><operator pos:line="154" pos:column="40">)<pos:position pos:line="154" pos:column="41"/></operator></expr>;<pos:position pos:line="154" pos:column="42"/></return></block></else></if>
		}<pos:position pos:line="155" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="157" pos:column="17">/* inode handling */</comment>
		<if pos:line="158" pos:column="17">if <condition pos:line="158" pos:column="20">(<expr><name pos:line="158" pos:column="21">report_inodes<pos:position pos:line="158" pos:column="34"/></name> <operator pos:line="158" pos:column="35">&amp;&amp;<pos:position pos:line="158" pos:column="45"/></operator> <name><name pos:line="158" pos:column="38">statbuf<pos:position pos:line="158" pos:column="45"/></name><operator pos:line="158" pos:column="45">.<pos:position pos:line="158" pos:column="46"/></operator><name pos:line="158" pos:column="46">f_files<pos:position pos:line="158" pos:column="53"/></name></name> <operator pos:line="158" pos:column="54">!=<pos:position pos:line="158" pos:column="56"/></operator> <literal type="number" pos:line="158" pos:column="57">0<pos:position pos:line="158" pos:column="58"/></literal> <operator pos:line="158" pos:column="59">&amp;&amp;<pos:position pos:line="158" pos:column="69"/></operator> <name><name pos:line="158" pos:column="62">statbuf<pos:position pos:line="158" pos:column="69"/></name><operator pos:line="158" pos:column="69">.<pos:position pos:line="158" pos:column="70"/></operator><name pos:line="158" pos:column="70">f_ffree<pos:position pos:line="158" pos:column="77"/></name></name> <operator pos:line="158" pos:column="78">!=<pos:position pos:line="158" pos:column="80"/></operator> <literal type="number" pos:line="158" pos:column="81">0<pos:position pos:line="158" pos:column="82"/></literal></expr>)<pos:position pos:line="158" pos:column="83"/></condition><then pos:line="158" pos:column="83">
		<block pos:line="159" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="160" pos:column="25">uint64_t<pos:position pos:line="160" pos:column="33"/></name></type> <name pos:line="160" pos:column="34">inode_free<pos:position pos:line="160" pos:column="44"/></name></decl>;<pos:position pos:line="160" pos:column="45"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="161" pos:column="25">uint64_t<pos:position pos:line="161" pos:column="33"/></name></type> <name pos:line="161" pos:column="34">inode_reserved<pos:position pos:line="161" pos:column="48"/></name></decl>;<pos:position pos:line="161" pos:column="49"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="162" pos:column="25">uint64_t<pos:position pos:line="162" pos:column="33"/></name></type> <name pos:line="162" pos:column="34">inode_used<pos:position pos:line="162" pos:column="44"/></name></decl>;<pos:position pos:line="162" pos:column="45"/></decl_stmt>

			<comment type="block" pos:line="164" pos:column="25">/* Sanity-check for the values in the struct */</comment>
			<if pos:line="165" pos:column="25">if <condition pos:line="165" pos:column="28">(<expr><name><name pos:line="165" pos:column="29">statbuf<pos:position pos:line="165" pos:column="36"/></name><operator pos:line="165" pos:column="36">.<pos:position pos:line="165" pos:column="37"/></operator><name pos:line="165" pos:column="37">f_ffree<pos:position pos:line="165" pos:column="44"/></name></name> <operator pos:line="165" pos:column="45">&lt;<pos:position pos:line="165" pos:column="49"/></operator> <name><name pos:line="165" pos:column="47">statbuf<pos:position pos:line="165" pos:column="54"/></name><operator pos:line="165" pos:column="54">.<pos:position pos:line="165" pos:column="55"/></operator><name pos:line="165" pos:column="55">f_favail<pos:position pos:line="165" pos:column="63"/></name></name></expr>)<pos:position pos:line="165" pos:column="64"/></condition><then pos:line="165" pos:column="64">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="166" pos:column="33">statbuf<pos:position pos:line="166" pos:column="40"/></name><operator pos:line="166" pos:column="40">.<pos:position pos:line="166" pos:column="41"/></operator><name pos:line="166" pos:column="41">f_ffree<pos:position pos:line="166" pos:column="48"/></name></name> <operator pos:line="166" pos:column="49">=<pos:position pos:line="166" pos:column="50"/></operator> <name><name pos:line="166" pos:column="51">statbuf<pos:position pos:line="166" pos:column="58"/></name><operator pos:line="166" pos:column="58">.<pos:position pos:line="166" pos:column="59"/></operator><name pos:line="166" pos:column="59">f_favail<pos:position pos:line="166" pos:column="67"/></name></name></expr>;<pos:position pos:line="166" pos:column="68"/></expr_stmt></block></then></if>
			<if pos:line="167" pos:column="25">if <condition pos:line="167" pos:column="28">(<expr><name><name pos:line="167" pos:column="29">statbuf<pos:position pos:line="167" pos:column="36"/></name><operator pos:line="167" pos:column="36">.<pos:position pos:line="167" pos:column="37"/></operator><name pos:line="167" pos:column="37">f_files<pos:position pos:line="167" pos:column="44"/></name></name> <operator pos:line="167" pos:column="45">&lt;<pos:position pos:line="167" pos:column="49"/></operator> <name><name pos:line="167" pos:column="47">statbuf<pos:position pos:line="167" pos:column="54"/></name><operator pos:line="167" pos:column="54">.<pos:position pos:line="167" pos:column="55"/></operator><name pos:line="167" pos:column="55">f_ffree<pos:position pos:line="167" pos:column="62"/></name></name></expr>)<pos:position pos:line="167" pos:column="63"/></condition><then pos:line="167" pos:column="63">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="168" pos:column="33">statbuf<pos:position pos:line="168" pos:column="40"/></name><operator pos:line="168" pos:column="40">.<pos:position pos:line="168" pos:column="41"/></operator><name pos:line="168" pos:column="41">f_files<pos:position pos:line="168" pos:column="48"/></name></name> <operator pos:line="168" pos:column="49">=<pos:position pos:line="168" pos:column="50"/></operator> <name><name pos:line="168" pos:column="51">statbuf<pos:position pos:line="168" pos:column="58"/></name><operator pos:line="168" pos:column="58">.<pos:position pos:line="168" pos:column="59"/></operator><name pos:line="168" pos:column="59">f_ffree<pos:position pos:line="168" pos:column="66"/></name></name></expr>;<pos:position pos:line="168" pos:column="67"/></expr_stmt></block></then></if>

			<expr_stmt><expr><name pos:line="170" pos:column="25">inode_free<pos:position pos:line="170" pos:column="35"/></name> <operator pos:line="170" pos:column="36">=<pos:position pos:line="170" pos:column="37"/></operator> <operator pos:line="170" pos:column="38">(<pos:position pos:line="170" pos:column="39"/></operator><name pos:line="170" pos:column="39">uint64_t<pos:position pos:line="170" pos:column="47"/></name><operator pos:line="170" pos:column="47">)<pos:position pos:line="170" pos:column="48"/></operator> <name><name pos:line="170" pos:column="49">statbuf<pos:position pos:line="170" pos:column="56"/></name><operator pos:line="170" pos:column="56">.<pos:position pos:line="170" pos:column="57"/></operator><name pos:line="170" pos:column="57">f_favail<pos:position pos:line="170" pos:column="65"/></name></name></expr>;<pos:position pos:line="170" pos:column="66"/></expr_stmt>
			<expr_stmt><expr><name pos:line="171" pos:column="25">inode_reserved<pos:position pos:line="171" pos:column="39"/></name> <operator pos:line="171" pos:column="40">=<pos:position pos:line="171" pos:column="41"/></operator> <call pos:line="171" pos:column="42">(<name pos:line="171" pos:column="43">uint64_t<pos:position pos:line="171" pos:column="51"/></name>) <argument_list pos:line="171" pos:column="53">(<argument><expr><name><name pos:line="171" pos:column="54">statbuf<pos:position pos:line="171" pos:column="61"/></name><operator pos:line="171" pos:column="61">.<pos:position pos:line="171" pos:column="62"/></operator><name pos:line="171" pos:column="62">f_ffree<pos:position pos:line="171" pos:column="69"/></name></name> <operator pos:line="171" pos:column="70">-<pos:position pos:line="171" pos:column="71"/></operator> <name><name pos:line="171" pos:column="72">statbuf<pos:position pos:line="171" pos:column="79"/></name><operator pos:line="171" pos:column="79">.<pos:position pos:line="171" pos:column="80"/></operator><name pos:line="171" pos:column="80">f_favail<pos:position pos:line="171" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="171" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="90"/></expr_stmt>
			<expr_stmt><expr><name pos:line="172" pos:column="25">inode_used<pos:position pos:line="172" pos:column="35"/></name> <operator pos:line="172" pos:column="36">=<pos:position pos:line="172" pos:column="37"/></operator> <call pos:line="172" pos:column="38">(<name pos:line="172" pos:column="39">uint64_t<pos:position pos:line="172" pos:column="47"/></name>) <argument_list pos:line="172" pos:column="49">(<argument><expr><name><name pos:line="172" pos:column="50">statbuf<pos:position pos:line="172" pos:column="57"/></name><operator pos:line="172" pos:column="57">.<pos:position pos:line="172" pos:column="58"/></operator><name pos:line="172" pos:column="58">f_files<pos:position pos:line="172" pos:column="65"/></name></name> <operator pos:line="172" pos:column="66">-<pos:position pos:line="172" pos:column="67"/></operator> <name><name pos:line="172" pos:column="68">statbuf<pos:position pos:line="172" pos:column="75"/></name><operator pos:line="172" pos:column="75">.<pos:position pos:line="172" pos:column="76"/></operator><name pos:line="172" pos:column="76">f_ffree<pos:position pos:line="172" pos:column="83"/></name></name></expr></argument>)<pos:position pos:line="172" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="85"/></expr_stmt>

			<if pos:line="174" pos:column="25">if <condition pos:line="174" pos:column="28">(<expr><name pos:line="174" pos:column="29">values_percentage<pos:position pos:line="174" pos:column="46"/></name></expr>)<pos:position pos:line="174" pos:column="47"/></condition><then pos:line="174" pos:column="47">
			<block pos:line="175" pos:column="25">{
				<if pos:line="176" pos:column="33">if <condition pos:line="176" pos:column="36">(<expr><name><name pos:line="176" pos:column="37">statbuf<pos:position pos:line="176" pos:column="44"/></name><operator pos:line="176" pos:column="44">.<pos:position pos:line="176" pos:column="45"/></operator><name pos:line="176" pos:column="45">f_files<pos:position pos:line="176" pos:column="52"/></name></name> <operator pos:line="176" pos:column="53">&gt;<pos:position pos:line="176" pos:column="57"/></operator> <literal type="number" pos:line="176" pos:column="55">0<pos:position pos:line="176" pos:column="56"/></literal></expr>)<pos:position pos:line="176" pos:column="57"/></condition><then pos:line="176" pos:column="57">
				<block pos:line="177" pos:column="33">{
					<expr_stmt><expr><call><name pos:line="178" pos:column="41">df_submit_one<pos:position pos:line="178" pos:column="54"/></name> <argument_list pos:line="178" pos:column="55">(<argument><expr><name pos:line="178" pos:column="56">disk_name<pos:position pos:line="178" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="178" pos:column="67">"percent_inodes"<pos:position pos:line="178" pos:column="83"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="178" pos:column="85">"free"<pos:position pos:line="178" pos:column="91"/></literal></expr></argument>,
						<argument><expr><call pos:line="179" pos:column="49">(<name pos:line="179" pos:column="50">gauge_t<pos:position pos:line="179" pos:column="57"/></name>) <argument_list pos:line="179" pos:column="59">(<argument><expr><call pos:line="179" pos:column="60">(<name pos:line="179" pos:column="61">float_t<pos:position pos:line="179" pos:column="68"/></name>)<argument_list pos:line="179" pos:column="69">(<argument><expr><name pos:line="179" pos:column="70">inode_free<pos:position pos:line="179" pos:column="80"/></name></expr></argument>)<pos:position pos:line="179" pos:column="81"/></argument_list></call> <operator pos:line="179" pos:column="82">/<pos:position pos:line="179" pos:column="83"/></operator> <name><name pos:line="179" pos:column="84">statbuf<pos:position pos:line="179" pos:column="91"/></name><operator pos:line="179" pos:column="91">.<pos:position pos:line="179" pos:column="92"/></operator><name pos:line="179" pos:column="92">f_files<pos:position pos:line="179" pos:column="99"/></name></name> <operator pos:line="179" pos:column="100">*<pos:position pos:line="179" pos:column="101"/></operator> <literal type="number" pos:line="179" pos:column="102">100<pos:position pos:line="179" pos:column="105"/></literal></expr></argument>)<pos:position pos:line="179" pos:column="106"/></argument_list></call></expr></argument>)<pos:position pos:line="179" pos:column="107"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="108"/></expr_stmt>
					<expr_stmt><expr><call><name pos:line="180" pos:column="41">df_submit_one<pos:position pos:line="180" pos:column="54"/></name> <argument_list pos:line="180" pos:column="55">(<argument><expr><name pos:line="180" pos:column="56">disk_name<pos:position pos:line="180" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="180" pos:column="67">"percent_inodes"<pos:position pos:line="180" pos:column="83"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="180" pos:column="85">"reserved"<pos:position pos:line="180" pos:column="95"/></literal></expr></argument>,
						<argument><expr><call pos:line="181" pos:column="49">(<name pos:line="181" pos:column="50">gauge_t<pos:position pos:line="181" pos:column="57"/></name>) <argument_list pos:line="181" pos:column="59">(<argument><expr><call pos:line="181" pos:column="60">(<name pos:line="181" pos:column="61">float_t<pos:position pos:line="181" pos:column="68"/></name>)<argument_list pos:line="181" pos:column="69">(<argument><expr><name pos:line="181" pos:column="70">inode_reserved<pos:position pos:line="181" pos:column="84"/></name></expr></argument>)<pos:position pos:line="181" pos:column="85"/></argument_list></call> <operator pos:line="181" pos:column="86">/<pos:position pos:line="181" pos:column="87"/></operator> <name><name pos:line="181" pos:column="88">statbuf<pos:position pos:line="181" pos:column="95"/></name><operator pos:line="181" pos:column="95">.<pos:position pos:line="181" pos:column="96"/></operator><name pos:line="181" pos:column="96">f_files<pos:position pos:line="181" pos:column="103"/></name></name> <operator pos:line="181" pos:column="104">*<pos:position pos:line="181" pos:column="105"/></operator> <literal type="number" pos:line="181" pos:column="106">100<pos:position pos:line="181" pos:column="109"/></literal></expr></argument>)<pos:position pos:line="181" pos:column="110"/></argument_list></call></expr></argument>)<pos:position pos:line="181" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="112"/></expr_stmt>
					<expr_stmt><expr><call><name pos:line="182" pos:column="41">df_submit_one<pos:position pos:line="182" pos:column="54"/></name> <argument_list pos:line="182" pos:column="55">(<argument><expr><name pos:line="182" pos:column="56">disk_name<pos:position pos:line="182" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="182" pos:column="67">"percent_inodes"<pos:position pos:line="182" pos:column="83"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="182" pos:column="85">"used"<pos:position pos:line="182" pos:column="91"/></literal></expr></argument>,
						<argument><expr><call pos:line="183" pos:column="49">(<name pos:line="183" pos:column="50">gauge_t<pos:position pos:line="183" pos:column="57"/></name>) <argument_list pos:line="183" pos:column="59">(<argument><expr><call pos:line="183" pos:column="60">(<name pos:line="183" pos:column="61">float_t<pos:position pos:line="183" pos:column="68"/></name>)<argument_list pos:line="183" pos:column="69">(<argument><expr><name pos:line="183" pos:column="70">inode_used<pos:position pos:line="183" pos:column="80"/></name></expr></argument>)<pos:position pos:line="183" pos:column="81"/></argument_list></call> <operator pos:line="183" pos:column="82">/<pos:position pos:line="183" pos:column="83"/></operator> <name><name pos:line="183" pos:column="84">statbuf<pos:position pos:line="183" pos:column="91"/></name><operator pos:line="183" pos:column="91">.<pos:position pos:line="183" pos:column="92"/></operator><name pos:line="183" pos:column="92">f_files<pos:position pos:line="183" pos:column="99"/></name></name> <operator pos:line="183" pos:column="100">*<pos:position pos:line="183" pos:column="101"/></operator> <literal type="number" pos:line="183" pos:column="102">100<pos:position pos:line="183" pos:column="105"/></literal></expr></argument>)<pos:position pos:line="183" pos:column="106"/></argument_list></call></expr></argument>)<pos:position pos:line="183" pos:column="107"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="108"/></expr_stmt>
				}<pos:position pos:line="184" pos:column="34"/></block></then>
				<else pos:line="185" pos:column="33">else <block type="pseudo"><return pos:line="185" pos:column="38">return <expr><operator pos:line="185" pos:column="45">(<pos:position pos:line="185" pos:column="46"/></operator><operator pos:line="185" pos:column="46">-<pos:position pos:line="185" pos:column="47"/></operator><literal type="number" pos:line="185" pos:column="47">1<pos:position pos:line="185" pos:column="48"/></literal><operator pos:line="185" pos:column="48">)<pos:position pos:line="185" pos:column="49"/></operator></expr>;<pos:position pos:line="185" pos:column="50"/></return></block></else></if>
			}<pos:position pos:line="186" pos:column="26"/></block></then></if>
			<if pos:line="187" pos:column="25">if <condition pos:line="187" pos:column="28">(<expr><name pos:line="187" pos:column="29">values_absolute<pos:position pos:line="187" pos:column="44"/></name></expr>)<pos:position pos:line="187" pos:column="45"/></condition><then pos:line="187" pos:column="45">
			<block pos:line="188" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="189" pos:column="33">df_submit_one<pos:position pos:line="189" pos:column="46"/></name> <argument_list pos:line="189" pos:column="47">(<argument><expr><name pos:line="189" pos:column="48">disk_name<pos:position pos:line="189" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="189" pos:column="59">"df_inodes"<pos:position pos:line="189" pos:column="70"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="189" pos:column="72">"free"<pos:position pos:line="189" pos:column="78"/></literal></expr></argument>,
						<argument><expr><operator pos:line="190" pos:column="49">(<pos:position pos:line="190" pos:column="50"/></operator><name pos:line="190" pos:column="50">gauge_t<pos:position pos:line="190" pos:column="57"/></name><operator pos:line="190" pos:column="57">)<pos:position pos:line="190" pos:column="58"/></operator> <name pos:line="190" pos:column="59">inode_free<pos:position pos:line="190" pos:column="69"/></name></expr></argument>)<pos:position pos:line="190" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="71"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="191" pos:column="33">df_submit_one<pos:position pos:line="191" pos:column="46"/></name> <argument_list pos:line="191" pos:column="47">(<argument><expr><name pos:line="191" pos:column="48">disk_name<pos:position pos:line="191" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="191" pos:column="59">"df_inodes"<pos:position pos:line="191" pos:column="70"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="191" pos:column="72">"reserved"<pos:position pos:line="191" pos:column="82"/></literal></expr></argument>,
						<argument><expr><operator pos:line="192" pos:column="49">(<pos:position pos:line="192" pos:column="50"/></operator><name pos:line="192" pos:column="50">gauge_t<pos:position pos:line="192" pos:column="57"/></name><operator pos:line="192" pos:column="57">)<pos:position pos:line="192" pos:column="58"/></operator> <name pos:line="192" pos:column="59">inode_reserved<pos:position pos:line="192" pos:column="73"/></name></expr></argument>)<pos:position pos:line="192" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="75"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="193" pos:column="33">df_submit_one<pos:position pos:line="193" pos:column="46"/></name> <argument_list pos:line="193" pos:column="47">(<argument><expr><name pos:line="193" pos:column="48">disk_name<pos:position pos:line="193" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="193" pos:column="59">"df_inodes"<pos:position pos:line="193" pos:column="70"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="193" pos:column="72">"used"<pos:position pos:line="193" pos:column="78"/></literal></expr></argument>,
						<argument><expr><operator pos:line="194" pos:column="49">(<pos:position pos:line="194" pos:column="50"/></operator><name pos:line="194" pos:column="50">gauge_t<pos:position pos:line="194" pos:column="57"/></name><operator pos:line="194" pos:column="57">)<pos:position pos:line="194" pos:column="58"/></operator> <name pos:line="194" pos:column="59">inode_used<pos:position pos:line="194" pos:column="69"/></name></expr></argument>)<pos:position pos:line="194" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="71"/></expr_stmt>
			}<pos:position pos:line="195" pos:column="26"/></block></then></if>
		}<pos:position pos:line="196" pos:column="18"/></block></then></if>
	}<pos:position pos:line="197" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="199" pos:column="9">cu_mount_freelist<pos:position pos:line="199" pos:column="26"/></name> <argument_list pos:line="199" pos:column="27">(<argument><expr><name pos:line="199" pos:column="28">mnt_list<pos:position pos:line="199" pos:column="36"/></name></expr></argument>)<pos:position pos:line="199" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="38"/></expr_stmt>

	<return pos:line="201" pos:column="9">return <expr><operator pos:line="201" pos:column="16">(<pos:position pos:line="201" pos:column="17"/></operator><literal type="number" pos:line="201" pos:column="17">0<pos:position pos:line="201" pos:column="18"/></literal><operator pos:line="201" pos:column="18">)<pos:position pos:line="201" pos:column="19"/></operator></expr>;<pos:position pos:line="201" pos:column="20"/></return>
}<pos:position pos:line="202" pos:column="2"/></block></function></unit>

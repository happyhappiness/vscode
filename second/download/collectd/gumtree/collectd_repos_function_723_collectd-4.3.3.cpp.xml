<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_723_collectd-4.3.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">plugin_register_write<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">name<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>,
		<parameter><function_decl><type><name pos:line="2" pos:column="17">int<pos:position pos:line="2" pos:column="20"/></name></type> (<modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier><name pos:line="2" pos:column="23">callback<pos:position pos:line="2" pos:column="31"/></name>) <parameter_list pos:line="2" pos:column="33">(<parameter><decl><type><specifier pos:line="2" pos:column="34">const<pos:position pos:line="2" pos:column="39"/></specifier> <name pos:line="2" pos:column="40">data_set_t<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">ds<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="56">const<pos:position pos:line="2" pos:column="61"/></specifier> <name pos:line="2" pos:column="62">value_list_t<pos:position pos:line="2" pos:column="74"/></name> <modifier pos:line="2" pos:column="75">*<pos:position pos:line="2" pos:column="76"/></modifier></type><name pos:line="2" pos:column="76">vl<pos:position pos:line="2" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="79"/></parameter_list></function_decl></parameter>)<pos:position pos:line="2" pos:column="80"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<return pos:line="4" pos:column="9">return <expr><operator pos:line="4" pos:column="16">(<pos:position pos:line="4" pos:column="17"/></operator><call><name pos:line="4" pos:column="17">register_callback<pos:position pos:line="4" pos:column="34"/></name> <argument_list pos:line="4" pos:column="35">(<argument><expr><operator pos:line="4" pos:column="36">&amp;<pos:position pos:line="4" pos:column="41"/></operator><name pos:line="4" pos:column="37">list_write<pos:position pos:line="4" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="49">name<pos:position pos:line="4" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="4" pos:column="55">(<pos:position pos:line="4" pos:column="56"/></operator><name pos:line="4" pos:column="56">void<pos:position pos:line="4" pos:column="60"/></name> <operator pos:line="4" pos:column="61">*<pos:position pos:line="4" pos:column="62"/></operator><operator pos:line="4" pos:column="62">)<pos:position pos:line="4" pos:column="63"/></operator> <name pos:line="4" pos:column="64">callback<pos:position pos:line="4" pos:column="72"/></name></expr></argument>)<pos:position pos:line="4" pos:column="73"/></argument_list></call><operator pos:line="4" pos:column="73">)<pos:position pos:line="4" pos:column="74"/></operator></expr>;<pos:position pos:line="4" pos:column="75"/></return>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_374_collectd-4.2.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">perl_shutdown<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">void<pos:position pos:line="1" pos:column="31"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">ret<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><literal type="number" pos:line="3" pos:column="19">0<pos:position pos:line="3" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="5" pos:column="9">plugin_unregister_complex_config<pos:position pos:line="5" pos:column="41"/></name> <argument_list pos:line="5" pos:column="42">(<argument><expr><literal type="string" pos:line="5" pos:column="43">"perl"<pos:position pos:line="5" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="51"/></expr_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">NULL<pos:position pos:line="7" pos:column="17"/></name> <operator pos:line="7" pos:column="18">==<pos:position pos:line="7" pos:column="20"/></operator> <name pos:line="7" pos:column="21">perl<pos:position pos:line="7" pos:column="25"/></name></expr>)<pos:position pos:line="7" pos:column="26"/></condition><then pos:line="7" pos:column="26">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr>;<pos:position pos:line="8" pos:column="26"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="10" pos:column="9">plugin_unregister_log<pos:position pos:line="10" pos:column="30"/></name> <argument_list pos:line="10" pos:column="31">(<argument><expr><literal type="string" pos:line="10" pos:column="32">"perl"<pos:position pos:line="10" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">plugin_unregister_init<pos:position pos:line="11" pos:column="31"/></name> <argument_list pos:line="11" pos:column="32">(<argument><expr><literal type="string" pos:line="11" pos:column="33">"perl"<pos:position pos:line="11" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">plugin_unregister_read<pos:position pos:line="12" pos:column="31"/></name> <argument_list pos:line="12" pos:column="32">(<argument><expr><literal type="string" pos:line="12" pos:column="33">"perl"<pos:position pos:line="12" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="13" pos:column="9">plugin_unregister_write<pos:position pos:line="13" pos:column="32"/></name> <argument_list pos:line="13" pos:column="33">(<argument><expr><literal type="string" pos:line="13" pos:column="34">"perl"<pos:position pos:line="13" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="42"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="15" pos:column="9">PERL_SET_CONTEXT<pos:position pos:line="15" pos:column="25"/></name> <argument_list pos:line="15" pos:column="26">(<argument><expr><name pos:line="15" pos:column="27">perl<pos:position pos:line="15" pos:column="31"/></name></expr></argument>)<pos:position pos:line="15" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name pos:line="16" pos:column="9">ret<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <call><name pos:line="16" pos:column="15">pplugin_call_all<pos:position pos:line="16" pos:column="31"/></name> <argument_list pos:line="16" pos:column="32">(<argument><expr><name pos:line="16" pos:column="33">PLUGIN_SHUTDOWN<pos:position pos:line="16" pos:column="48"/></name></expr></argument>)<pos:position pos:line="16" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="50"/></expr_stmt>

<cpp:if pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">if<pos:position pos:line="18" pos:column="4"/></cpp:directive> <expr><name pos:line="18" pos:column="5">COLLECT_DEBUG<pos:position pos:line="18" pos:column="18"/></name></expr></cpp:if>
	<expr_stmt><expr><call><name pos:line="19" pos:column="9">Perl_sv_report_used<pos:position pos:line="19" pos:column="28"/></name> <argument_list pos:line="19" pos:column="29">(<argument><expr><name pos:line="19" pos:column="30">perl<pos:position pos:line="19" pos:column="34"/></name></expr></argument>)<pos:position pos:line="19" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="36"/></expr_stmt>
<cpp:endif pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">endif<pos:position pos:line="20" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="20" pos:column="8">/* COLLECT_DEBUG */</comment>

	<expr_stmt><expr><call><name pos:line="22" pos:column="9">perl_destruct<pos:position pos:line="22" pos:column="22"/></name> <argument_list pos:line="22" pos:column="23">(<argument><expr><name pos:line="22" pos:column="24">perl<pos:position pos:line="22" pos:column="28"/></name></expr></argument>)<pos:position pos:line="22" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">perl_free<pos:position pos:line="23" pos:column="18"/></name> <argument_list pos:line="23" pos:column="19">(<argument><expr><name pos:line="23" pos:column="20">perl<pos:position pos:line="23" pos:column="24"/></name></expr></argument>)<pos:position pos:line="23" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name pos:line="24" pos:column="9">perl<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">=<pos:position pos:line="24" pos:column="15"/></operator> <name pos:line="24" pos:column="16">NULL<pos:position pos:line="24" pos:column="20"/></name></expr>;<pos:position pos:line="24" pos:column="21"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="26" pos:column="9">PERL_SYS_TERM<pos:position pos:line="26" pos:column="22"/></name> <argument_list pos:line="26" pos:column="23">()<pos:position pos:line="26" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="26"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="28" pos:column="9">plugin_unregister_shutdown<pos:position pos:line="28" pos:column="35"/></name> <argument_list pos:line="28" pos:column="36">(<argument><expr><literal type="string" pos:line="28" pos:column="37">"perl"<pos:position pos:line="28" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="45"/></expr_stmt>
	<return pos:line="29" pos:column="9">return <expr><name pos:line="29" pos:column="16">ret<pos:position pos:line="29" pos:column="19"/></name></expr>;<pos:position pos:line="29" pos:column="20"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

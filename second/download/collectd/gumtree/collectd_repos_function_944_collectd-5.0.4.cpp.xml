<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_944_collectd-5.0.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">v5_zfs_arc_counts<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">data_set_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">ds<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">value_list_t<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">vl<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list> <comment type="block" pos:line="1" pos:column="71">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">value_list_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">new_vl<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">value_t<pos:position pos:line="4" pos:column="10"/></name></type> <name pos:line="4" pos:column="11">new_value<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">_Bool<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">is_hits<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name><name pos:line="7" pos:column="7">vl<pos:position pos:line="7" pos:column="9"/></name><operator pos:line="7" pos:column="9">-&gt;<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="11">values_len<pos:position pos:line="7" pos:column="21"/></name></name> <operator pos:line="7" pos:column="22">!=<pos:position pos:line="7" pos:column="24"/></operator> <literal type="number" pos:line="7" pos:column="25">4<pos:position pos:line="7" pos:column="26"/></literal></expr>)<pos:position pos:line="7" pos:column="27"/></condition><then pos:line="7" pos:column="27">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="13">FC_TARGET_STOP<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">)<pos:position pos:line="8" pos:column="28"/></operator></expr>;<pos:position pos:line="8" pos:column="29"/></return></block></then></if>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><call><name pos:line="10" pos:column="7">strcmp<pos:position pos:line="10" pos:column="13"/></name> <argument_list pos:line="10" pos:column="14">(<argument><expr><literal type="string" pos:line="10" pos:column="15">"hits"<pos:position pos:line="10" pos:column="21"/></literal></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="23">vl<pos:position pos:line="10" pos:column="25"/></name><operator pos:line="10" pos:column="25">-&gt;<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="27">type_instance<pos:position pos:line="10" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="41"/></argument_list></call> <operator pos:line="10" pos:column="42">==<pos:position pos:line="10" pos:column="44"/></operator> <literal type="number" pos:line="10" pos:column="45">0<pos:position pos:line="10" pos:column="46"/></literal></expr>)<pos:position pos:line="10" pos:column="47"/></condition><then pos:line="10" pos:column="47">
    <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="5">is_hits<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">=<pos:position pos:line="11" pos:column="14"/></operator> <literal type="number" pos:line="11" pos:column="15">1<pos:position pos:line="11" pos:column="16"/></literal></expr>;<pos:position pos:line="11" pos:column="17"/></expr_stmt></block></then>
  <elseif pos:line="12" pos:column="3">else <if pos:line="12" pos:column="8">if <condition pos:line="12" pos:column="11">(<expr><call><name pos:line="12" pos:column="12">strcmp<pos:position pos:line="12" pos:column="18"/></name> <argument_list pos:line="12" pos:column="19">(<argument><expr><literal type="string" pos:line="12" pos:column="20">"misses"<pos:position pos:line="12" pos:column="28"/></literal></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="30">vl<pos:position pos:line="12" pos:column="32"/></name><operator pos:line="12" pos:column="32">-&gt;<pos:position pos:line="12" pos:column="37"/></operator><name pos:line="12" pos:column="34">type_instance<pos:position pos:line="12" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="48"/></argument_list></call> <operator pos:line="12" pos:column="49">==<pos:position pos:line="12" pos:column="51"/></operator> <literal type="number" pos:line="12" pos:column="52">0<pos:position pos:line="12" pos:column="53"/></literal></expr>)<pos:position pos:line="12" pos:column="54"/></condition><then pos:line="12" pos:column="54">
    <block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="5">is_hits<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <literal type="number" pos:line="13" pos:column="15">0<pos:position pos:line="13" pos:column="16"/></literal></expr>;<pos:position pos:line="13" pos:column="17"/></expr_stmt></block></then></if></elseif>
  <else pos:line="14" pos:column="3">else
    <block type="pseudo"><return pos:line="15" pos:column="5">return <expr><operator pos:line="15" pos:column="12">(<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="13">FC_TARGET_STOP<pos:position pos:line="15" pos:column="27"/></name><operator pos:line="15" pos:column="27">)<pos:position pos:line="15" pos:column="28"/></operator></expr>;<pos:position pos:line="15" pos:column="29"/></return></block></else></if>

  <comment type="block" pos:line="17" pos:column="3">/* Copy everything: Time, interval, host, ... */</comment>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">memcpy<pos:position pos:line="18" pos:column="9"/></name> <argument_list pos:line="18" pos:column="10">(<argument><expr><operator pos:line="18" pos:column="11">&amp;<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="12">new_vl<pos:position pos:line="18" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="20">vl<pos:position pos:line="18" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="24">sizeof <argument_list pos:line="18" pos:column="31">(<argument><expr><name pos:line="18" pos:column="32">new_vl<pos:position pos:line="18" pos:column="38"/></name></expr></argument>)<pos:position pos:line="18" pos:column="39"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="41"/></expr_stmt>

  <comment type="block" pos:line="20" pos:column="3">/* Reset data we can't simply copy */</comment>
  <expr_stmt><expr><name><name pos:line="21" pos:column="3">new_vl<pos:position pos:line="21" pos:column="9"/></name><operator pos:line="21" pos:column="9">.<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">values<pos:position pos:line="21" pos:column="16"/></name></name> <operator pos:line="21" pos:column="17">=<pos:position pos:line="21" pos:column="18"/></operator> <operator pos:line="21" pos:column="19">&amp;<pos:position pos:line="21" pos:column="24"/></operator><name pos:line="21" pos:column="20">new_value<pos:position pos:line="21" pos:column="29"/></name></expr>;<pos:position pos:line="21" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="22" pos:column="3">new_vl<pos:position pos:line="22" pos:column="9"/></name><operator pos:line="22" pos:column="9">.<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="10">values_len<pos:position pos:line="22" pos:column="20"/></name></name> <operator pos:line="22" pos:column="21">=<pos:position pos:line="22" pos:column="22"/></operator> <literal type="number" pos:line="22" pos:column="23">1<pos:position pos:line="22" pos:column="24"/></literal></expr>;<pos:position pos:line="22" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="23" pos:column="3">new_vl<pos:position pos:line="23" pos:column="9"/></name><operator pos:line="23" pos:column="9">.<pos:position pos:line="23" pos:column="10"/></operator><name pos:line="23" pos:column="10">meta<pos:position pos:line="23" pos:column="14"/></name></name> <operator pos:line="23" pos:column="15">=<pos:position pos:line="23" pos:column="16"/></operator> <name pos:line="23" pos:column="17">NULL<pos:position pos:line="23" pos:column="21"/></name></expr>;<pos:position pos:line="23" pos:column="22"/></expr_stmt>

  <comment type="block" pos:line="25" pos:column="3">/* Change the type to "cache_result" */</comment>
  <expr_stmt><expr><call><name pos:line="26" pos:column="3">sstrncpy<pos:position pos:line="26" pos:column="11"/></name> <argument_list pos:line="26" pos:column="12">(<argument><expr><name><name pos:line="26" pos:column="13">new_vl<pos:position pos:line="26" pos:column="19"/></name><operator pos:line="26" pos:column="19">.<pos:position pos:line="26" pos:column="20"/></operator><name pos:line="26" pos:column="20">type<pos:position pos:line="26" pos:column="24"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="26">"cache_result"<pos:position pos:line="26" pos:column="40"/></literal></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="42">sizeof <argument_list pos:line="26" pos:column="49">(<argument><expr><name><name pos:line="26" pos:column="50">new_vl<pos:position pos:line="26" pos:column="56"/></name><operator pos:line="26" pos:column="56">.<pos:position pos:line="26" pos:column="57"/></operator><name pos:line="26" pos:column="57">type<pos:position pos:line="26" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="64"/></expr_stmt>

  <comment type="block" pos:line="28" pos:column="3">/* Dispatch new value lists instead of this one */</comment>
  <expr_stmt><expr><name><name pos:line="29" pos:column="3">new_vl<pos:position pos:line="29" pos:column="9"/></name><operator pos:line="29" pos:column="9">.<pos:position pos:line="29" pos:column="10"/></operator><name pos:line="29" pos:column="10">values<pos:position pos:line="29" pos:column="16"/></name><index pos:line="29" pos:column="16">[<expr><literal type="number" pos:line="29" pos:column="17">0<pos:position pos:line="29" pos:column="18"/></literal></expr>]<pos:position pos:line="29" pos:column="19"/></index></name><operator pos:line="29" pos:column="19">.<pos:position pos:line="29" pos:column="20"/></operator><name pos:line="29" pos:column="20">derive<pos:position pos:line="29" pos:column="26"/></name> <operator pos:line="29" pos:column="27">=<pos:position pos:line="29" pos:column="28"/></operator> <operator pos:line="29" pos:column="29">(<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="30">derive_t<pos:position pos:line="29" pos:column="38"/></name><operator pos:line="29" pos:column="38">)<pos:position pos:line="29" pos:column="39"/></operator> <name><name pos:line="29" pos:column="40">vl<pos:position pos:line="29" pos:column="42"/></name><operator pos:line="29" pos:column="42">-&gt;<pos:position pos:line="29" pos:column="47"/></operator><name pos:line="29" pos:column="44">values<pos:position pos:line="29" pos:column="50"/></name><index pos:line="29" pos:column="50">[<expr><literal type="number" pos:line="29" pos:column="51">0<pos:position pos:line="29" pos:column="52"/></literal></expr>]<pos:position pos:line="29" pos:column="53"/></index></name><operator pos:line="29" pos:column="53">.<pos:position pos:line="29" pos:column="54"/></operator><name pos:line="29" pos:column="54">counter<pos:position pos:line="29" pos:column="61"/></name></expr>;<pos:position pos:line="29" pos:column="62"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="30" pos:column="3">ssnprintf<pos:position pos:line="30" pos:column="12"/></name> <argument_list pos:line="30" pos:column="13">(<argument><expr><name><name pos:line="30" pos:column="14">new_vl<pos:position pos:line="30" pos:column="20"/></name><operator pos:line="30" pos:column="20">.<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="21">type_instance<pos:position pos:line="30" pos:column="34"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="36">sizeof <argument_list pos:line="30" pos:column="43">(<argument><expr><name><name pos:line="30" pos:column="44">new_vl<pos:position pos:line="30" pos:column="50"/></name><operator pos:line="30" pos:column="50">.<pos:position pos:line="30" pos:column="51"/></operator><name pos:line="30" pos:column="51">type_instance<pos:position pos:line="30" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="65"/></argument_list></sizeof></expr></argument>,
      <argument><expr><literal type="string" pos:line="31" pos:column="7">"demand_data-%s"<pos:position pos:line="31" pos:column="23"/></literal></expr></argument>,
      <argument><expr><ternary><condition><expr><name pos:line="32" pos:column="7">is_hits<pos:position pos:line="32" pos:column="14"/></name></expr> ?<pos:position pos:line="32" pos:column="16"/></condition><then pos:line="32" pos:column="16"> <expr><literal type="string" pos:line="32" pos:column="17">"hit"<pos:position pos:line="32" pos:column="22"/></literal></expr> <pos:position pos:line="32" pos:column="23"/></then><else pos:line="32" pos:column="23">: <expr><literal type="string" pos:line="32" pos:column="25">"miss"<pos:position pos:line="32" pos:column="31"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="32" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="33" pos:column="3">plugin_dispatch_values<pos:position pos:line="33" pos:column="25"/></name> <argument_list pos:line="33" pos:column="26">(<argument><expr><operator pos:line="33" pos:column="27">&amp;<pos:position pos:line="33" pos:column="32"/></operator><name pos:line="33" pos:column="28">new_vl<pos:position pos:line="33" pos:column="34"/></name></expr></argument>)<pos:position pos:line="33" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="35" pos:column="3">new_vl<pos:position pos:line="35" pos:column="9"/></name><operator pos:line="35" pos:column="9">.<pos:position pos:line="35" pos:column="10"/></operator><name pos:line="35" pos:column="10">values<pos:position pos:line="35" pos:column="16"/></name><index pos:line="35" pos:column="16">[<expr><literal type="number" pos:line="35" pos:column="17">0<pos:position pos:line="35" pos:column="18"/></literal></expr>]<pos:position pos:line="35" pos:column="19"/></index></name><operator pos:line="35" pos:column="19">.<pos:position pos:line="35" pos:column="20"/></operator><name pos:line="35" pos:column="20">derive<pos:position pos:line="35" pos:column="26"/></name> <operator pos:line="35" pos:column="27">=<pos:position pos:line="35" pos:column="28"/></operator> <operator pos:line="35" pos:column="29">(<pos:position pos:line="35" pos:column="30"/></operator><name pos:line="35" pos:column="30">derive_t<pos:position pos:line="35" pos:column="38"/></name><operator pos:line="35" pos:column="38">)<pos:position pos:line="35" pos:column="39"/></operator> <name><name pos:line="35" pos:column="40">vl<pos:position pos:line="35" pos:column="42"/></name><operator pos:line="35" pos:column="42">-&gt;<pos:position pos:line="35" pos:column="47"/></operator><name pos:line="35" pos:column="44">values<pos:position pos:line="35" pos:column="50"/></name><index pos:line="35" pos:column="50">[<expr><literal type="number" pos:line="35" pos:column="51">1<pos:position pos:line="35" pos:column="52"/></literal></expr>]<pos:position pos:line="35" pos:column="53"/></index></name><operator pos:line="35" pos:column="53">.<pos:position pos:line="35" pos:column="54"/></operator><name pos:line="35" pos:column="54">counter<pos:position pos:line="35" pos:column="61"/></name></expr>;<pos:position pos:line="35" pos:column="62"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="36" pos:column="3">ssnprintf<pos:position pos:line="36" pos:column="12"/></name> <argument_list pos:line="36" pos:column="13">(<argument><expr><name><name pos:line="36" pos:column="14">new_vl<pos:position pos:line="36" pos:column="20"/></name><operator pos:line="36" pos:column="20">.<pos:position pos:line="36" pos:column="21"/></operator><name pos:line="36" pos:column="21">type_instance<pos:position pos:line="36" pos:column="34"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="36" pos:column="36">sizeof <argument_list pos:line="36" pos:column="43">(<argument><expr><name><name pos:line="36" pos:column="44">new_vl<pos:position pos:line="36" pos:column="50"/></name><operator pos:line="36" pos:column="50">.<pos:position pos:line="36" pos:column="51"/></operator><name pos:line="36" pos:column="51">type_instance<pos:position pos:line="36" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="65"/></argument_list></sizeof></expr></argument>,
      <argument><expr><literal type="string" pos:line="37" pos:column="7">"demand_metadata-%s"<pos:position pos:line="37" pos:column="27"/></literal></expr></argument>,
      <argument><expr><ternary><condition><expr><name pos:line="38" pos:column="7">is_hits<pos:position pos:line="38" pos:column="14"/></name></expr> ?<pos:position pos:line="38" pos:column="16"/></condition><then pos:line="38" pos:column="16"> <expr><literal type="string" pos:line="38" pos:column="17">"hit"<pos:position pos:line="38" pos:column="22"/></literal></expr> <pos:position pos:line="38" pos:column="23"/></then><else pos:line="38" pos:column="23">: <expr><literal type="string" pos:line="38" pos:column="25">"miss"<pos:position pos:line="38" pos:column="31"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="38" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="39" pos:column="3">plugin_dispatch_values<pos:position pos:line="39" pos:column="25"/></name> <argument_list pos:line="39" pos:column="26">(<argument><expr><operator pos:line="39" pos:column="27">&amp;<pos:position pos:line="39" pos:column="32"/></operator><name pos:line="39" pos:column="28">new_vl<pos:position pos:line="39" pos:column="34"/></name></expr></argument>)<pos:position pos:line="39" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="41" pos:column="3">new_vl<pos:position pos:line="41" pos:column="9"/></name><operator pos:line="41" pos:column="9">.<pos:position pos:line="41" pos:column="10"/></operator><name pos:line="41" pos:column="10">values<pos:position pos:line="41" pos:column="16"/></name><index pos:line="41" pos:column="16">[<expr><literal type="number" pos:line="41" pos:column="17">0<pos:position pos:line="41" pos:column="18"/></literal></expr>]<pos:position pos:line="41" pos:column="19"/></index></name><operator pos:line="41" pos:column="19">.<pos:position pos:line="41" pos:column="20"/></operator><name pos:line="41" pos:column="20">derive<pos:position pos:line="41" pos:column="26"/></name> <operator pos:line="41" pos:column="27">=<pos:position pos:line="41" pos:column="28"/></operator> <operator pos:line="41" pos:column="29">(<pos:position pos:line="41" pos:column="30"/></operator><name pos:line="41" pos:column="30">derive_t<pos:position pos:line="41" pos:column="38"/></name><operator pos:line="41" pos:column="38">)<pos:position pos:line="41" pos:column="39"/></operator> <name><name pos:line="41" pos:column="40">vl<pos:position pos:line="41" pos:column="42"/></name><operator pos:line="41" pos:column="42">-&gt;<pos:position pos:line="41" pos:column="47"/></operator><name pos:line="41" pos:column="44">values<pos:position pos:line="41" pos:column="50"/></name><index pos:line="41" pos:column="50">[<expr><literal type="number" pos:line="41" pos:column="51">2<pos:position pos:line="41" pos:column="52"/></literal></expr>]<pos:position pos:line="41" pos:column="53"/></index></name><operator pos:line="41" pos:column="53">.<pos:position pos:line="41" pos:column="54"/></operator><name pos:line="41" pos:column="54">counter<pos:position pos:line="41" pos:column="61"/></name></expr>;<pos:position pos:line="41" pos:column="62"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="42" pos:column="3">ssnprintf<pos:position pos:line="42" pos:column="12"/></name> <argument_list pos:line="42" pos:column="13">(<argument><expr><name><name pos:line="42" pos:column="14">new_vl<pos:position pos:line="42" pos:column="20"/></name><operator pos:line="42" pos:column="20">.<pos:position pos:line="42" pos:column="21"/></operator><name pos:line="42" pos:column="21">type_instance<pos:position pos:line="42" pos:column="34"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="42" pos:column="36">sizeof <argument_list pos:line="42" pos:column="43">(<argument><expr><name><name pos:line="42" pos:column="44">new_vl<pos:position pos:line="42" pos:column="50"/></name><operator pos:line="42" pos:column="50">.<pos:position pos:line="42" pos:column="51"/></operator><name pos:line="42" pos:column="51">type_instance<pos:position pos:line="42" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="65"/></argument_list></sizeof></expr></argument>,
      <argument><expr><literal type="string" pos:line="43" pos:column="7">"prefetch_data-%s"<pos:position pos:line="43" pos:column="25"/></literal></expr></argument>,
      <argument><expr><ternary><condition><expr><name pos:line="44" pos:column="7">is_hits<pos:position pos:line="44" pos:column="14"/></name></expr> ?<pos:position pos:line="44" pos:column="16"/></condition><then pos:line="44" pos:column="16"> <expr><literal type="string" pos:line="44" pos:column="17">"hit"<pos:position pos:line="44" pos:column="22"/></literal></expr> <pos:position pos:line="44" pos:column="23"/></then><else pos:line="44" pos:column="23">: <expr><literal type="string" pos:line="44" pos:column="25">"miss"<pos:position pos:line="44" pos:column="31"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="44" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="45" pos:column="3">plugin_dispatch_values<pos:position pos:line="45" pos:column="25"/></name> <argument_list pos:line="45" pos:column="26">(<argument><expr><operator pos:line="45" pos:column="27">&amp;<pos:position pos:line="45" pos:column="32"/></operator><name pos:line="45" pos:column="28">new_vl<pos:position pos:line="45" pos:column="34"/></name></expr></argument>)<pos:position pos:line="45" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="47" pos:column="3">new_vl<pos:position pos:line="47" pos:column="9"/></name><operator pos:line="47" pos:column="9">.<pos:position pos:line="47" pos:column="10"/></operator><name pos:line="47" pos:column="10">values<pos:position pos:line="47" pos:column="16"/></name><index pos:line="47" pos:column="16">[<expr><literal type="number" pos:line="47" pos:column="17">0<pos:position pos:line="47" pos:column="18"/></literal></expr>]<pos:position pos:line="47" pos:column="19"/></index></name><operator pos:line="47" pos:column="19">.<pos:position pos:line="47" pos:column="20"/></operator><name pos:line="47" pos:column="20">derive<pos:position pos:line="47" pos:column="26"/></name> <operator pos:line="47" pos:column="27">=<pos:position pos:line="47" pos:column="28"/></operator> <operator pos:line="47" pos:column="29">(<pos:position pos:line="47" pos:column="30"/></operator><name pos:line="47" pos:column="30">derive_t<pos:position pos:line="47" pos:column="38"/></name><operator pos:line="47" pos:column="38">)<pos:position pos:line="47" pos:column="39"/></operator> <name><name pos:line="47" pos:column="40">vl<pos:position pos:line="47" pos:column="42"/></name><operator pos:line="47" pos:column="42">-&gt;<pos:position pos:line="47" pos:column="47"/></operator><name pos:line="47" pos:column="44">values<pos:position pos:line="47" pos:column="50"/></name><index pos:line="47" pos:column="50">[<expr><literal type="number" pos:line="47" pos:column="51">3<pos:position pos:line="47" pos:column="52"/></literal></expr>]<pos:position pos:line="47" pos:column="53"/></index></name><operator pos:line="47" pos:column="53">.<pos:position pos:line="47" pos:column="54"/></operator><name pos:line="47" pos:column="54">counter<pos:position pos:line="47" pos:column="61"/></name></expr>;<pos:position pos:line="47" pos:column="62"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="48" pos:column="3">ssnprintf<pos:position pos:line="48" pos:column="12"/></name> <argument_list pos:line="48" pos:column="13">(<argument><expr><name><name pos:line="48" pos:column="14">new_vl<pos:position pos:line="48" pos:column="20"/></name><operator pos:line="48" pos:column="20">.<pos:position pos:line="48" pos:column="21"/></operator><name pos:line="48" pos:column="21">type_instance<pos:position pos:line="48" pos:column="34"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="48" pos:column="36">sizeof <argument_list pos:line="48" pos:column="43">(<argument><expr><name><name pos:line="48" pos:column="44">new_vl<pos:position pos:line="48" pos:column="50"/></name><operator pos:line="48" pos:column="50">.<pos:position pos:line="48" pos:column="51"/></operator><name pos:line="48" pos:column="51">type_instance<pos:position pos:line="48" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="65"/></argument_list></sizeof></expr></argument>,
      <argument><expr><literal type="string" pos:line="49" pos:column="7">"prefetch_metadata-%s"<pos:position pos:line="49" pos:column="29"/></literal></expr></argument>,
      <argument><expr><ternary><condition><expr><name pos:line="50" pos:column="7">is_hits<pos:position pos:line="50" pos:column="14"/></name></expr> ?<pos:position pos:line="50" pos:column="16"/></condition><then pos:line="50" pos:column="16"> <expr><literal type="string" pos:line="50" pos:column="17">"hit"<pos:position pos:line="50" pos:column="22"/></literal></expr> <pos:position pos:line="50" pos:column="23"/></then><else pos:line="50" pos:column="23">: <expr><literal type="string" pos:line="50" pos:column="25">"miss"<pos:position pos:line="50" pos:column="31"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="50" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="51" pos:column="3">plugin_dispatch_values<pos:position pos:line="51" pos:column="25"/></name> <argument_list pos:line="51" pos:column="26">(<argument><expr><operator pos:line="51" pos:column="27">&amp;<pos:position pos:line="51" pos:column="32"/></operator><name pos:line="51" pos:column="28">new_vl<pos:position pos:line="51" pos:column="34"/></name></expr></argument>)<pos:position pos:line="51" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="36"/></expr_stmt>

  <comment type="block" pos:line="53" pos:column="3">/* Abort processing */</comment>
  <return pos:line="54" pos:column="3">return <expr><operator pos:line="54" pos:column="10">(<pos:position pos:line="54" pos:column="11"/></operator><name pos:line="54" pos:column="11">FC_TARGET_STOP<pos:position pos:line="54" pos:column="25"/></name><operator pos:line="54" pos:column="25">)<pos:position pos:line="54" pos:column="26"/></operator></expr>;<pos:position pos:line="54" pos:column="27"/></return>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

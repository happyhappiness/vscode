<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_120_collectd-4.9.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type>
<name pos:line="2" pos:column="1">vm_sym<pos:position pos:line="2" pos:column="7"/></name> <parameter_list pos:line="2" pos:column="8">(<parameter><decl><type><name pos:line="2" pos:column="9">lt_user_data<pos:position pos:line="2" pos:column="21"/></name></type> <name pos:line="2" pos:column="22">loader_data<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="35">lt_module<pos:position pos:line="2" pos:column="44"/></name></type> <name pos:line="2" pos:column="45">module<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="53">const<pos:position pos:line="2" pos:column="58"/></specifier> <name pos:line="2" pos:column="59">char<pos:position pos:line="2" pos:column="63"/></name> <modifier pos:line="2" pos:column="64">*<pos:position pos:line="2" pos:column="65"/></modifier></type><name pos:line="2" pos:column="65">name<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="70"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">NSSymbol<pos:position pos:line="4" pos:column="11"/></name> <modifier pos:line="4" pos:column="12">*<pos:position pos:line="4" pos:column="13"/></modifier></type><name pos:line="4" pos:column="13">nssym<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><literal type="number" pos:line="4" pos:column="21">0<pos:position pos:line="4" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name pos:line="5" pos:column="9">mach_header<pos:position pos:line="5" pos:column="20"/></name> <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">mh<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><operator pos:line="5" pos:column="27">(<pos:position pos:line="5" pos:column="28"/></operator><specifier pos:line="5" pos:column="28">const<pos:position pos:line="5" pos:column="33"/></specifier> <name pos:line="5" pos:column="34">mach_header<pos:position pos:line="5" pos:column="45"/></name> <operator pos:line="5" pos:column="46">*<pos:position pos:line="5" pos:column="47"/></operator><operator pos:line="5" pos:column="47">)<pos:position pos:line="5" pos:column="48"/></operator> <name pos:line="5" pos:column="49">module<pos:position pos:line="5" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="56"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">saveError<pos:position pos:line="6" pos:column="17"/></name><index pos:line="6" pos:column="17">[<expr><literal type="number" pos:line="6" pos:column="18">256<pos:position pos:line="6" pos:column="21"/></literal></expr>]<pos:position pos:line="6" pos:column="22"/></index></name> <init pos:line="6" pos:column="23">= <expr><literal type="string" pos:line="6" pos:column="25">"Symbol not found"<pos:position pos:line="6" pos:column="43"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="44"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">module<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">==<pos:position pos:line="8" pos:column="16"/></operator> <operator pos:line="8" pos:column="17">(<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="18">lt_module<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">)<pos:position pos:line="8" pos:column="28"/></operator> <operator pos:line="8" pos:column="29">-<pos:position pos:line="8" pos:column="30"/></operator><literal type="number" pos:line="8" pos:column="30">1<pos:position pos:line="8" pos:column="31"/></literal></expr>)<pos:position pos:line="8" pos:column="32"/></condition><then pos:line="8" pos:column="32">
    <block pos:line="9" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="10" pos:column="7">void<pos:position pos:line="10" pos:column="11"/></name> <modifier pos:line="10" pos:column="12">*<pos:position pos:line="10" pos:column="13"/></modifier></type><name pos:line="10" pos:column="13">address<pos:position pos:line="10" pos:column="20"/></name></decl>, <modifier pos:line="10" pos:column="22">*<pos:position pos:line="10" pos:column="23"/></modifier><decl><type ref="prev"/><name pos:line="10" pos:column="23">unused<pos:position pos:line="10" pos:column="29"/></name></decl>;<pos:position pos:line="10" pos:column="30"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="11" pos:column="7">_dyld_lookup_and_bind<pos:position pos:line="11" pos:column="28"/></name> <argument_list pos:line="11" pos:column="29">(<argument><expr><name pos:line="11" pos:column="30">name<pos:position pos:line="11" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="36">(<pos:position pos:line="11" pos:column="37"/></operator><name pos:line="11" pos:column="37">unsigned<pos:position pos:line="11" pos:column="45"/></name> <name pos:line="11" pos:column="46">long<pos:position pos:line="11" pos:column="50"/></name><operator pos:line="11" pos:column="50">*<pos:position pos:line="11" pos:column="51"/></operator><operator pos:line="11" pos:column="51">)<pos:position pos:line="11" pos:column="52"/></operator> <operator pos:line="11" pos:column="53">&amp;<pos:position pos:line="11" pos:column="58"/></operator><name pos:line="11" pos:column="54">address<pos:position pos:line="11" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="63">&amp;<pos:position pos:line="11" pos:column="68"/></operator><name pos:line="11" pos:column="64">unused<pos:position pos:line="11" pos:column="70"/></name></expr></argument>)<pos:position pos:line="11" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="72"/></expr_stmt>
      <return pos:line="12" pos:column="7">return <expr><name pos:line="12" pos:column="14">address<pos:position pos:line="12" pos:column="21"/></name></expr>;<pos:position pos:line="12" pos:column="22"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name><name pos:line="15" pos:column="7">mh<pos:position pos:line="15" pos:column="9"/></name><operator pos:line="15" pos:column="9">-&gt;<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="11">magic<pos:position pos:line="15" pos:column="16"/></name></name> <operator pos:line="15" pos:column="17">==<pos:position pos:line="15" pos:column="19"/></operator> <name pos:line="15" pos:column="20">LT__MAGIC<pos:position pos:line="15" pos:column="29"/></name></expr>)<pos:position pos:line="15" pos:column="30"/></condition><then pos:line="15" pos:column="30">
    <block pos:line="16" pos:column="5">{
      <if pos:line="17" pos:column="7">if <condition pos:line="17" pos:column="10">(<expr><name pos:line="17" pos:column="11">lt__image_symbol_p<pos:position pos:line="17" pos:column="29"/></name> <operator pos:line="17" pos:column="30">&amp;&amp;<pos:position pos:line="17" pos:column="40"/></operator> <name pos:line="17" pos:column="33">lt__image_symbol<pos:position pos:line="17" pos:column="49"/></name></expr>)<pos:position pos:line="17" pos:column="50"/></condition><then pos:line="17" pos:column="50">
	<block pos:line="18" pos:column="9">{
	  <if pos:line="19" pos:column="11">if <condition pos:line="19" pos:column="14">(<expr><call><name pos:line="19" pos:column="15">lt__image_symbol_p<pos:position pos:line="19" pos:column="33"/></name> <argument_list pos:line="19" pos:column="34">(<argument><expr><name pos:line="19" pos:column="35">mh<pos:position pos:line="19" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="39">name<pos:position pos:line="19" pos:column="43"/></name></expr></argument>)<pos:position pos:line="19" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="45"/></condition><then pos:line="19" pos:column="45">
	    <block pos:line="20" pos:column="13">{
	      <expr_stmt><expr><name pos:line="21" pos:column="15">nssym<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">=<pos:position pos:line="21" pos:column="22"/></operator> <call><name pos:line="21" pos:column="23">lt__image_symbol<pos:position pos:line="21" pos:column="39"/></name> <argument_list pos:line="21" pos:column="40">(<argument><expr><name pos:line="21" pos:column="41">mh<pos:position pos:line="21" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="45">name<pos:position pos:line="21" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="51">LT__SYMLOOKUP_OPTS<pos:position pos:line="21" pos:column="69"/></name></expr></argument>)<pos:position pos:line="21" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="71"/></expr_stmt>
	    }<pos:position pos:line="22" pos:column="14"/></block></then></if>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>

    }<pos:position pos:line="25" pos:column="6"/></block></then>
  <else pos:line="26" pos:column="3">else
    <block pos:line="27" pos:column="5">{
      <expr_stmt><expr><name pos:line="28" pos:column="7">nssym<pos:position pos:line="28" pos:column="12"/></name> <operator pos:line="28" pos:column="13">=<pos:position pos:line="28" pos:column="14"/></operator> <call><name pos:line="28" pos:column="15">NSLookupSymbolInModule<pos:position pos:line="28" pos:column="37"/></name> <argument_list pos:line="28" pos:column="38">(<argument><expr><name pos:line="28" pos:column="39">module<pos:position pos:line="28" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="47">name<pos:position pos:line="28" pos:column="51"/></name></expr></argument>)<pos:position pos:line="28" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></else></if>

  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><operator pos:line="31" pos:column="7">!<pos:position pos:line="31" pos:column="8"/></operator><name pos:line="31" pos:column="8">nssym<pos:position pos:line="31" pos:column="13"/></name></expr>)<pos:position pos:line="31" pos:column="14"/></condition><then pos:line="31" pos:column="14">
    <block pos:line="32" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="33" pos:column="7">strncpy<pos:position pos:line="33" pos:column="14"/></name> <argument_list pos:line="33" pos:column="15">(<argument><expr><name pos:line="33" pos:column="16">saveError<pos:position pos:line="33" pos:column="25"/></name></expr></argument>, <argument><expr><call><name pos:line="33" pos:column="27">dylderror<pos:position pos:line="33" pos:column="36"/></name> <argument_list pos:line="33" pos:column="37">(<argument><expr><call><name pos:line="33" pos:column="38">LT__STRERROR<pos:position pos:line="33" pos:column="50"/></name> <argument_list pos:line="33" pos:column="51">(<argument><expr><name pos:line="33" pos:column="52">SYMBOL_NOT_FOUND<pos:position pos:line="33" pos:column="68"/></name></expr></argument>)<pos:position pos:line="33" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="70"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="72">255<pos:position pos:line="33" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="77"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="34" pos:column="7">saveError<pos:position pos:line="34" pos:column="16"/></name><index pos:line="34" pos:column="16">[<expr><literal type="number" pos:line="34" pos:column="17">255<pos:position pos:line="34" pos:column="20"/></literal></expr>]<pos:position pos:line="34" pos:column="21"/></index></name> <operator pos:line="34" pos:column="22">=<pos:position pos:line="34" pos:column="23"/></operator> <literal type="number" pos:line="34" pos:column="24">0<pos:position pos:line="34" pos:column="25"/></literal></expr>;<pos:position pos:line="34" pos:column="26"/></expr_stmt>
      <if pos:line="35" pos:column="7">if <condition pos:line="35" pos:column="10">(<expr><operator pos:line="35" pos:column="11">!<pos:position pos:line="35" pos:column="12"/></operator><name pos:line="35" pos:column="12">mh<pos:position pos:line="35" pos:column="14"/></name></expr>)<pos:position pos:line="35" pos:column="15"/></condition><then pos:line="35" pos:column="15">
	<block pos:line="36" pos:column="9">{
	  <expr_stmt><expr><name pos:line="37" pos:column="11">mh<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">=<pos:position pos:line="37" pos:column="15"/></operator> <operator pos:line="37" pos:column="16">(<pos:position pos:line="37" pos:column="17"/></operator><name pos:line="37" pos:column="17">mach_header<pos:position pos:line="37" pos:column="28"/></name> <operator pos:line="37" pos:column="29">*<pos:position pos:line="37" pos:column="30"/></operator><operator pos:line="37" pos:column="30">)<pos:position pos:line="37" pos:column="31"/></operator><call><name pos:line="37" pos:column="31">lt__nsmodule_get_header<pos:position pos:line="37" pos:column="54"/></name> <argument_list pos:line="37" pos:column="55">(<argument><expr><name pos:line="37" pos:column="56">module<pos:position pos:line="37" pos:column="62"/></name></expr></argument>)<pos:position pos:line="37" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="64"/></expr_stmt>
	}<pos:position pos:line="38" pos:column="10"/></block></then></if>
      <expr_stmt><expr><name pos:line="39" pos:column="7">nssym<pos:position pos:line="39" pos:column="12"/></name> <operator pos:line="39" pos:column="13">=<pos:position pos:line="39" pos:column="14"/></operator> <call><name pos:line="39" pos:column="15">lt__linkedlib_symbol<pos:position pos:line="39" pos:column="35"/></name> <argument_list pos:line="39" pos:column="36">(<argument><expr><name pos:line="39" pos:column="37">name<pos:position pos:line="39" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="43">mh<pos:position pos:line="39" pos:column="45"/></name></expr></argument>)<pos:position pos:line="39" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>

  <if pos:line="42" pos:column="3">if <condition pos:line="42" pos:column="6">(<expr><operator pos:line="42" pos:column="7">!<pos:position pos:line="42" pos:column="8"/></operator><name pos:line="42" pos:column="8">nssym<pos:position pos:line="42" pos:column="13"/></name></expr>)<pos:position pos:line="42" pos:column="14"/></condition><then pos:line="42" pos:column="14">
    <block pos:line="43" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="44" pos:column="7">LT__SETERRORSTR<pos:position pos:line="44" pos:column="22"/></name> <argument_list pos:line="44" pos:column="23">(<argument><expr><name pos:line="44" pos:column="24">saveError<pos:position pos:line="44" pos:column="33"/></name></expr></argument>)<pos:position pos:line="44" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>

  <return pos:line="47" pos:column="3">return <expr><ternary><condition><expr><name pos:line="47" pos:column="10">nssym<pos:position pos:line="47" pos:column="15"/></name></expr> ?<pos:position pos:line="47" pos:column="17"/></condition><then pos:line="47" pos:column="17"> <expr><call><name pos:line="47" pos:column="18">NSAddressOfSymbol<pos:position pos:line="47" pos:column="35"/></name> <argument_list pos:line="47" pos:column="36">(<argument><expr><name pos:line="47" pos:column="37">nssym<pos:position pos:line="47" pos:column="42"/></name></expr></argument>)<pos:position pos:line="47" pos:column="43"/></argument_list></call></expr> <pos:position pos:line="47" pos:column="44"/></then><else pos:line="47" pos:column="44">: <expr><literal type="number" pos:line="47" pos:column="46">0<pos:position pos:line="47" pos:column="47"/></literal></expr></else></ternary></expr>;<pos:position pos:line="47" pos:column="48"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_693_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ps_read_process<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">long<pos:position pos:line="1" pos:column="32"/></name></type> <name pos:line="1" pos:column="33">pid<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">process_entry_t<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">ps<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">char<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">state<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list> <block pos:line="1" pos:column="72">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">char<pos:position pos:line="2" pos:column="7"/></name></type> <name><name pos:line="2" pos:column="8">filename<pos:position pos:line="2" pos:column="16"/></name><index pos:line="2" pos:column="16">[<expr><literal type="number" pos:line="2" pos:column="17">64<pos:position pos:line="2" pos:column="19"/></literal></expr>]<pos:position pos:line="2" pos:column="20"/></index></name></decl>;<pos:position pos:line="2" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">buffer<pos:position pos:line="3" pos:column="14"/></name><index pos:line="3" pos:column="14">[<expr><literal type="number" pos:line="3" pos:column="15">1024<pos:position pos:line="3" pos:column="19"/></literal></expr>]<pos:position pos:line="3" pos:column="20"/></index></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name><name pos:line="5" pos:column="9">fields<pos:position pos:line="5" pos:column="15"/></name><index pos:line="5" pos:column="15">[<expr><literal type="number" pos:line="5" pos:column="16">64<pos:position pos:line="5" pos:column="18"/></literal></expr>]<pos:position pos:line="5" pos:column="19"/></index></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name pos:line="6" pos:column="8">fields_len<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="8" pos:column="3">size_t<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">buffer_len<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier></type><name pos:line="10" pos:column="9">buffer_ptr<pos:position pos:line="10" pos:column="19"/></name></decl>;<pos:position pos:line="10" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">size_t<pos:position pos:line="11" pos:column="9"/></name></type> <name pos:line="11" pos:column="10">name_start_pos<pos:position pos:line="11" pos:column="24"/></name></decl>;<pos:position pos:line="11" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">size_t<pos:position pos:line="12" pos:column="9"/></name></type> <name pos:line="12" pos:column="10">name_end_pos<pos:position pos:line="12" pos:column="22"/></name></decl>;<pos:position pos:line="12" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">size_t<pos:position pos:line="13" pos:column="9"/></name></type> <name pos:line="13" pos:column="10">name_len<pos:position pos:line="13" pos:column="18"/></name></decl>;<pos:position pos:line="13" pos:column="19"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="15" pos:column="3">derive_t<pos:position pos:line="15" pos:column="11"/></name></type> <name pos:line="15" pos:column="12">cpu_user_counter<pos:position pos:line="15" pos:column="28"/></name></decl>;<pos:position pos:line="15" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">derive_t<pos:position pos:line="16" pos:column="11"/></name></type> <name pos:line="16" pos:column="12">cpu_system_counter<pos:position pos:line="16" pos:column="30"/></name></decl>;<pos:position pos:line="16" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">long<pos:position pos:line="17" pos:column="7"/></name> <name pos:line="17" pos:column="8">long<pos:position pos:line="17" pos:column="12"/></name> <name pos:line="17" pos:column="13">unsigned<pos:position pos:line="17" pos:column="21"/></name></type> <name pos:line="17" pos:column="22">vmem_size<pos:position pos:line="17" pos:column="31"/></name></decl>;<pos:position pos:line="17" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">long<pos:position pos:line="18" pos:column="7"/></name> <name pos:line="18" pos:column="8">long<pos:position pos:line="18" pos:column="12"/></name> <name pos:line="18" pos:column="13">unsigned<pos:position pos:line="18" pos:column="21"/></name></type> <name pos:line="18" pos:column="22">vmem_rss<pos:position pos:line="18" pos:column="30"/></name></decl>;<pos:position pos:line="18" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="19" pos:column="3">long<pos:position pos:line="19" pos:column="7"/></name> <name pos:line="19" pos:column="8">long<pos:position pos:line="19" pos:column="12"/></name> <name pos:line="19" pos:column="13">unsigned<pos:position pos:line="19" pos:column="21"/></name></type> <name pos:line="19" pos:column="22">stack_size<pos:position pos:line="19" pos:column="32"/></name></decl>;<pos:position pos:line="19" pos:column="33"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="21" pos:column="3">ssize_t<pos:position pos:line="21" pos:column="10"/></name></type> <name pos:line="21" pos:column="11">status<pos:position pos:line="21" pos:column="17"/></name></decl>;<pos:position pos:line="21" pos:column="18"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="23" pos:column="3">snprintf<pos:position pos:line="23" pos:column="11"/></name><argument_list pos:line="23" pos:column="11">(<argument><expr><name pos:line="23" pos:column="12">filename<pos:position pos:line="23" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="22">sizeof<argument_list pos:line="23" pos:column="28">(<argument><expr><name pos:line="23" pos:column="29">filename<pos:position pos:line="23" pos:column="37"/></name></expr></argument>)<pos:position pos:line="23" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="40">"/proc/%li/stat"<pos:position pos:line="23" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="58">pid<pos:position pos:line="23" pos:column="61"/></name></expr></argument>)<pos:position pos:line="23" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="63"/></expr_stmt>

  <expr_stmt><expr><name pos:line="25" pos:column="3">status<pos:position pos:line="25" pos:column="9"/></name> <operator pos:line="25" pos:column="10">=<pos:position pos:line="25" pos:column="11"/></operator> <call><name pos:line="25" pos:column="12">read_file_contents<pos:position pos:line="25" pos:column="30"/></name><argument_list pos:line="25" pos:column="30">(<argument><expr><name pos:line="25" pos:column="31">filename<pos:position pos:line="25" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="41">buffer<pos:position pos:line="25" pos:column="47"/></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="49">sizeof<argument_list pos:line="25" pos:column="55">(<argument><expr><name pos:line="25" pos:column="56">buffer<pos:position pos:line="25" pos:column="62"/></name></expr></argument>)<pos:position pos:line="25" pos:column="63"/></argument_list></sizeof> <operator pos:line="25" pos:column="64">-<pos:position pos:line="25" pos:column="65"/></operator> <literal type="number" pos:line="25" pos:column="66">1<pos:position pos:line="25" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="69"/></expr_stmt>
  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><name pos:line="26" pos:column="7">status<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">&lt;=<pos:position pos:line="26" pos:column="19"/></operator> <literal type="number" pos:line="26" pos:column="17">0<pos:position pos:line="26" pos:column="18"/></literal></expr>)<pos:position pos:line="26" pos:column="19"/></condition><then pos:line="26" pos:column="19">
    <block type="pseudo"><return pos:line="27" pos:column="5">return <expr><operator pos:line="27" pos:column="12">-<pos:position pos:line="27" pos:column="13"/></operator><literal type="number" pos:line="27" pos:column="13">1<pos:position pos:line="27" pos:column="14"/></literal></expr>;<pos:position pos:line="27" pos:column="15"/></return></block></then></if>
  <expr_stmt><expr><name pos:line="28" pos:column="3">buffer_len<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">=<pos:position pos:line="28" pos:column="15"/></operator> <operator pos:line="28" pos:column="16">(<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="17">size_t<pos:position pos:line="28" pos:column="23"/></name><operator pos:line="28" pos:column="23">)<pos:position pos:line="28" pos:column="24"/></operator><name pos:line="28" pos:column="24">status<pos:position pos:line="28" pos:column="30"/></name></expr>;<pos:position pos:line="28" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="29" pos:column="3">buffer<pos:position pos:line="29" pos:column="9"/></name><index pos:line="29" pos:column="9">[<expr><name pos:line="29" pos:column="10">buffer_len<pos:position pos:line="29" pos:column="20"/></name></expr>]<pos:position pos:line="29" pos:column="21"/></index></name> <operator pos:line="29" pos:column="22">=<pos:position pos:line="29" pos:column="23"/></operator> <literal type="number" pos:line="29" pos:column="24">0<pos:position pos:line="29" pos:column="25"/></literal></expr>;<pos:position pos:line="29" pos:column="26"/></expr_stmt>

  <comment type="block" pos:line="31" pos:column="3">/* The name of the process is enclosed in parens. Since the name can
   * contain parens itself, spaces, numbers and pretty much everything
   * else, use these to determine the process name. We don't use
   * strchr(3) and strrchr(3) to avoid pointer arithmetic which would
   * otherwise be required to determine name_len. */</comment>
  <expr_stmt><expr><name pos:line="36" pos:column="3">name_start_pos<pos:position pos:line="36" pos:column="17"/></name> <operator pos:line="36" pos:column="18">=<pos:position pos:line="36" pos:column="19"/></operator> <literal type="number" pos:line="36" pos:column="20">0<pos:position pos:line="36" pos:column="21"/></literal></expr>;<pos:position pos:line="36" pos:column="22"/></expr_stmt>
  <while pos:line="37" pos:column="3">while <condition pos:line="37" pos:column="9">(<expr><name pos:line="37" pos:column="10">name_start_pos<pos:position pos:line="37" pos:column="24"/></name> <operator pos:line="37" pos:column="25">&lt;<pos:position pos:line="37" pos:column="29"/></operator> <name pos:line="37" pos:column="27">buffer_len<pos:position pos:line="37" pos:column="37"/></name> <operator pos:line="37" pos:column="38">&amp;&amp;<pos:position pos:line="37" pos:column="48"/></operator> <name><name pos:line="37" pos:column="41">buffer<pos:position pos:line="37" pos:column="47"/></name><index pos:line="37" pos:column="47">[<expr><name pos:line="37" pos:column="48">name_start_pos<pos:position pos:line="37" pos:column="62"/></name></expr>]<pos:position pos:line="37" pos:column="63"/></index></name> <operator pos:line="37" pos:column="64">!=<pos:position pos:line="37" pos:column="66"/></operator> <literal type="char" pos:line="37" pos:column="67">'('<pos:position pos:line="37" pos:column="70"/></literal></expr>)<pos:position pos:line="37" pos:column="71"/></condition>
    <block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="5">name_start_pos<pos:position pos:line="38" pos:column="19"/></name><operator pos:line="38" pos:column="19">++<pos:position pos:line="38" pos:column="21"/></operator></expr>;<pos:position pos:line="38" pos:column="22"/></expr_stmt></block></while>

  <expr_stmt><expr><name pos:line="40" pos:column="3">name_end_pos<pos:position pos:line="40" pos:column="15"/></name> <operator pos:line="40" pos:column="16">=<pos:position pos:line="40" pos:column="17"/></operator> <name pos:line="40" pos:column="18">buffer_len<pos:position pos:line="40" pos:column="28"/></name></expr>;<pos:position pos:line="40" pos:column="29"/></expr_stmt>
  <while pos:line="41" pos:column="3">while <condition pos:line="41" pos:column="9">(<expr><name pos:line="41" pos:column="10">name_end_pos<pos:position pos:line="41" pos:column="22"/></name> <operator pos:line="41" pos:column="23">&gt;<pos:position pos:line="41" pos:column="27"/></operator> <literal type="number" pos:line="41" pos:column="25">0<pos:position pos:line="41" pos:column="26"/></literal> <operator pos:line="41" pos:column="27">&amp;&amp;<pos:position pos:line="41" pos:column="37"/></operator> <name><name pos:line="41" pos:column="30">buffer<pos:position pos:line="41" pos:column="36"/></name><index pos:line="41" pos:column="36">[<expr><name pos:line="41" pos:column="37">name_end_pos<pos:position pos:line="41" pos:column="49"/></name></expr>]<pos:position pos:line="41" pos:column="50"/></index></name> <operator pos:line="41" pos:column="51">!=<pos:position pos:line="41" pos:column="53"/></operator> <literal type="char" pos:line="41" pos:column="54">')'<pos:position pos:line="41" pos:column="57"/></literal></expr>)<pos:position pos:line="41" pos:column="58"/></condition>
    <block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="5">name_end_pos<pos:position pos:line="42" pos:column="17"/></name><operator pos:line="42" pos:column="17">--<pos:position pos:line="42" pos:column="19"/></operator></expr>;<pos:position pos:line="42" pos:column="20"/></expr_stmt></block></while>

  <comment type="block" pos:line="44" pos:column="3">/* Either '(' or ')' is not found or they are in the wrong order.
   * Anyway, something weird that shouldn't happen ever. */</comment>
  <if pos:line="46" pos:column="3">if <condition pos:line="46" pos:column="6">(<expr><name pos:line="46" pos:column="7">name_start_pos<pos:position pos:line="46" pos:column="21"/></name> <operator pos:line="46" pos:column="22">&gt;=<pos:position pos:line="46" pos:column="27"/></operator> <name pos:line="46" pos:column="25">name_end_pos<pos:position pos:line="46" pos:column="37"/></name></expr>)<pos:position pos:line="46" pos:column="38"/></condition><then pos:line="46" pos:column="38"> <block pos:line="46" pos:column="39">{
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">ERROR<pos:position pos:line="47" pos:column="10"/></name><argument_list pos:line="47" pos:column="10">(<argument><expr><literal type="string" pos:line="47" pos:column="11">"processes plugin: name_start_pos = %zu &gt;= name_end_pos = %zu"<pos:position pos:line="47" pos:column="76"/></literal></expr></argument>,
          <argument><expr><name pos:line="48" pos:column="11">name_start_pos<pos:position pos:line="48" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="27">name_end_pos<pos:position pos:line="48" pos:column="39"/></name></expr></argument>)<pos:position pos:line="48" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="41"/></expr_stmt>
    <return pos:line="49" pos:column="5">return <expr><operator pos:line="49" pos:column="12">-<pos:position pos:line="49" pos:column="13"/></operator><literal type="number" pos:line="49" pos:column="13">1<pos:position pos:line="49" pos:column="14"/></literal></expr>;<pos:position pos:line="49" pos:column="15"/></return>
  }<pos:position pos:line="50" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="52" pos:column="3">name_len<pos:position pos:line="52" pos:column="11"/></name> <operator pos:line="52" pos:column="12">=<pos:position pos:line="52" pos:column="13"/></operator> <operator pos:line="52" pos:column="14">(<pos:position pos:line="52" pos:column="15"/></operator><name pos:line="52" pos:column="15">name_end_pos<pos:position pos:line="52" pos:column="27"/></name> <operator pos:line="52" pos:column="28">-<pos:position pos:line="52" pos:column="29"/></operator> <name pos:line="52" pos:column="30">name_start_pos<pos:position pos:line="52" pos:column="44"/></name><operator pos:line="52" pos:column="44">)<pos:position pos:line="52" pos:column="45"/></operator> <operator pos:line="52" pos:column="46">-<pos:position pos:line="52" pos:column="47"/></operator> <literal type="number" pos:line="52" pos:column="48">1<pos:position pos:line="52" pos:column="49"/></literal></expr>;<pos:position pos:line="52" pos:column="50"/></expr_stmt>
  <if pos:line="53" pos:column="3">if <condition pos:line="53" pos:column="6">(<expr><name pos:line="53" pos:column="7">name_len<pos:position pos:line="53" pos:column="15"/></name> <operator pos:line="53" pos:column="16">&gt;=<pos:position pos:line="53" pos:column="21"/></operator> <sizeof pos:line="53" pos:column="19">sizeof<argument_list pos:line="53" pos:column="25">(<argument><expr><name><name pos:line="53" pos:column="26">ps<pos:position pos:line="53" pos:column="28"/></name><operator pos:line="53" pos:column="28">-&gt;<pos:position pos:line="53" pos:column="33"/></operator><name pos:line="53" pos:column="30">name<pos:position pos:line="53" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="35"/></argument_list></sizeof></expr>)<pos:position pos:line="53" pos:column="36"/></condition><then pos:line="53" pos:column="36">
    <block type="pseudo"><expr_stmt><expr><name pos:line="54" pos:column="5">name_len<pos:position pos:line="54" pos:column="13"/></name> <operator pos:line="54" pos:column="14">=<pos:position pos:line="54" pos:column="15"/></operator> <sizeof pos:line="54" pos:column="16">sizeof<argument_list pos:line="54" pos:column="22">(<argument><expr><name><name pos:line="54" pos:column="23">ps<pos:position pos:line="54" pos:column="25"/></name><operator pos:line="54" pos:column="25">-&gt;<pos:position pos:line="54" pos:column="30"/></operator><name pos:line="54" pos:column="27">name<pos:position pos:line="54" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="32"/></argument_list></sizeof> <operator pos:line="54" pos:column="33">-<pos:position pos:line="54" pos:column="34"/></operator> <literal type="number" pos:line="54" pos:column="35">1<pos:position pos:line="54" pos:column="36"/></literal></expr>;<pos:position pos:line="54" pos:column="37"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="56" pos:column="3">sstrncpy<pos:position pos:line="56" pos:column="11"/></name><argument_list pos:line="56" pos:column="11">(<argument><expr><name><name pos:line="56" pos:column="12">ps<pos:position pos:line="56" pos:column="14"/></name><operator pos:line="56" pos:column="14">-&gt;<pos:position pos:line="56" pos:column="19"/></operator><name pos:line="56" pos:column="16">name<pos:position pos:line="56" pos:column="20"/></name></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="22">&amp;<pos:position pos:line="56" pos:column="27"/></operator><name><name pos:line="56" pos:column="23">buffer<pos:position pos:line="56" pos:column="29"/></name><index pos:line="56" pos:column="29">[<expr><name pos:line="56" pos:column="30">name_start_pos<pos:position pos:line="56" pos:column="44"/></name> <operator pos:line="56" pos:column="45">+<pos:position pos:line="56" pos:column="46"/></operator> <literal type="number" pos:line="56" pos:column="47">1<pos:position pos:line="56" pos:column="48"/></literal></expr>]<pos:position pos:line="56" pos:column="49"/></index></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="51">name_len<pos:position pos:line="56" pos:column="59"/></name> <operator pos:line="56" pos:column="60">+<pos:position pos:line="56" pos:column="61"/></operator> <literal type="number" pos:line="56" pos:column="62">1<pos:position pos:line="56" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="65"/></expr_stmt>

  <if pos:line="58" pos:column="3">if <condition pos:line="58" pos:column="6">(<expr><operator pos:line="58" pos:column="7">(<pos:position pos:line="58" pos:column="8"/></operator><name pos:line="58" pos:column="8">buffer_len<pos:position pos:line="58" pos:column="18"/></name> <operator pos:line="58" pos:column="19">-<pos:position pos:line="58" pos:column="20"/></operator> <name pos:line="58" pos:column="21">name_end_pos<pos:position pos:line="58" pos:column="33"/></name><operator pos:line="58" pos:column="33">)<pos:position pos:line="58" pos:column="34"/></operator> <operator pos:line="58" pos:column="35">&lt;<pos:position pos:line="58" pos:column="39"/></operator> <literal type="number" pos:line="58" pos:column="37">2<pos:position pos:line="58" pos:column="38"/></literal></expr>)<pos:position pos:line="58" pos:column="39"/></condition><then pos:line="58" pos:column="39">
    <block type="pseudo"><return pos:line="59" pos:column="5">return <expr><operator pos:line="59" pos:column="12">-<pos:position pos:line="59" pos:column="13"/></operator><literal type="number" pos:line="59" pos:column="13">1<pos:position pos:line="59" pos:column="14"/></literal></expr>;<pos:position pos:line="59" pos:column="15"/></return></block></then></if>
  <expr_stmt><expr><name pos:line="60" pos:column="3">buffer_ptr<pos:position pos:line="60" pos:column="13"/></name> <operator pos:line="60" pos:column="14">=<pos:position pos:line="60" pos:column="15"/></operator> <operator pos:line="60" pos:column="16">&amp;<pos:position pos:line="60" pos:column="21"/></operator><name><name pos:line="60" pos:column="17">buffer<pos:position pos:line="60" pos:column="23"/></name><index pos:line="60" pos:column="23">[<expr><name pos:line="60" pos:column="24">name_end_pos<pos:position pos:line="60" pos:column="36"/></name> <operator pos:line="60" pos:column="37">+<pos:position pos:line="60" pos:column="38"/></operator> <literal type="number" pos:line="60" pos:column="39">2<pos:position pos:line="60" pos:column="40"/></literal></expr>]<pos:position pos:line="60" pos:column="41"/></index></name></expr>;<pos:position pos:line="60" pos:column="42"/></expr_stmt>

  <expr_stmt><expr><name pos:line="62" pos:column="3">fields_len<pos:position pos:line="62" pos:column="13"/></name> <operator pos:line="62" pos:column="14">=<pos:position pos:line="62" pos:column="15"/></operator> <call><name pos:line="62" pos:column="16">strsplit<pos:position pos:line="62" pos:column="24"/></name><argument_list pos:line="62" pos:column="24">(<argument><expr><name pos:line="62" pos:column="25">buffer_ptr<pos:position pos:line="62" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="37">fields<pos:position pos:line="62" pos:column="43"/></name></expr></argument>, <argument><expr><call><name pos:line="62" pos:column="45">STATIC_ARRAY_SIZE<pos:position pos:line="62" pos:column="62"/></name><argument_list pos:line="62" pos:column="62">(<argument><expr><name pos:line="62" pos:column="63">fields<pos:position pos:line="62" pos:column="69"/></name></expr></argument>)<pos:position pos:line="62" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="62" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="72"/></expr_stmt>
  <if pos:line="63" pos:column="3">if <condition pos:line="63" pos:column="6">(<expr><name pos:line="63" pos:column="7">fields_len<pos:position pos:line="63" pos:column="17"/></name> <operator pos:line="63" pos:column="18">&lt;<pos:position pos:line="63" pos:column="22"/></operator> <literal type="number" pos:line="63" pos:column="20">22<pos:position pos:line="63" pos:column="22"/></literal></expr>)<pos:position pos:line="63" pos:column="23"/></condition><then pos:line="63" pos:column="23"> <block pos:line="63" pos:column="24">{
    <expr_stmt><expr><call><name pos:line="64" pos:column="5">DEBUG<pos:position pos:line="64" pos:column="10"/></name><argument_list pos:line="64" pos:column="10">(<argument><expr><literal type="string" pos:line="64" pos:column="11">"processes plugin: ps_read_process (pid = %li):"<pos:position pos:line="64" pos:column="59"/></literal>
          <literal type="string" pos:line="65" pos:column="11">" `%s' has only %i fields.."<pos:position pos:line="65" pos:column="39"/></literal></expr></argument>,
          <argument><expr><name pos:line="66" pos:column="11">pid<pos:position pos:line="66" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="16">filename<pos:position pos:line="66" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="26">fields_len<pos:position pos:line="66" pos:column="36"/></name></expr></argument>)<pos:position pos:line="66" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="38"/></expr_stmt>
    <return pos:line="67" pos:column="5">return <expr><operator pos:line="67" pos:column="12">-<pos:position pos:line="67" pos:column="13"/></operator><literal type="number" pos:line="67" pos:column="13">1<pos:position pos:line="67" pos:column="14"/></literal></expr>;<pos:position pos:line="67" pos:column="15"/></return>
  }<pos:position pos:line="68" pos:column="4"/></block></then></if>

  <expr_stmt><expr><operator pos:line="70" pos:column="3">*<pos:position pos:line="70" pos:column="4"/></operator><name pos:line="70" pos:column="4">state<pos:position pos:line="70" pos:column="9"/></name> <operator pos:line="70" pos:column="10">=<pos:position pos:line="70" pos:column="11"/></operator> <name><name pos:line="70" pos:column="12">fields<pos:position pos:line="70" pos:column="18"/></name><index pos:line="70" pos:column="18">[<expr><literal type="number" pos:line="70" pos:column="19">0<pos:position pos:line="70" pos:column="20"/></literal></expr>]<pos:position pos:line="70" pos:column="21"/></index><index pos:line="70" pos:column="21">[<expr><literal type="number" pos:line="70" pos:column="22">0<pos:position pos:line="70" pos:column="23"/></literal></expr>]<pos:position pos:line="70" pos:column="24"/></index></name></expr>;<pos:position pos:line="70" pos:column="25"/></expr_stmt>

  <if pos:line="72" pos:column="3">if <condition pos:line="72" pos:column="6">(<expr><operator pos:line="72" pos:column="7">*<pos:position pos:line="72" pos:column="8"/></operator><name pos:line="72" pos:column="8">state<pos:position pos:line="72" pos:column="13"/></name> <operator pos:line="72" pos:column="14">==<pos:position pos:line="72" pos:column="16"/></operator> <literal type="char" pos:line="72" pos:column="17">'Z'<pos:position pos:line="72" pos:column="20"/></literal></expr>)<pos:position pos:line="72" pos:column="21"/></condition><then pos:line="72" pos:column="21"> <block pos:line="72" pos:column="22">{
    <expr_stmt><expr><name><name pos:line="73" pos:column="5">ps<pos:position pos:line="73" pos:column="7"/></name><operator pos:line="73" pos:column="7">-&gt;<pos:position pos:line="73" pos:column="12"/></operator><name pos:line="73" pos:column="9">num_lwp<pos:position pos:line="73" pos:column="16"/></name></name> <operator pos:line="73" pos:column="17">=<pos:position pos:line="73" pos:column="18"/></operator> <literal type="number" pos:line="73" pos:column="19">0<pos:position pos:line="73" pos:column="20"/></literal></expr>;<pos:position pos:line="73" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="74" pos:column="5">ps<pos:position pos:line="74" pos:column="7"/></name><operator pos:line="74" pos:column="7">-&gt;<pos:position pos:line="74" pos:column="12"/></operator><name pos:line="74" pos:column="9">num_proc<pos:position pos:line="74" pos:column="17"/></name></name> <operator pos:line="74" pos:column="18">=<pos:position pos:line="74" pos:column="19"/></operator> <literal type="number" pos:line="74" pos:column="20">0<pos:position pos:line="74" pos:column="21"/></literal></expr>;<pos:position pos:line="74" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="75" pos:column="4"/></block></then> <else pos:line="75" pos:column="5">else <block pos:line="75" pos:column="10">{
    <expr_stmt><expr><name><name pos:line="76" pos:column="5">ps<pos:position pos:line="76" pos:column="7"/></name><operator pos:line="76" pos:column="7">-&gt;<pos:position pos:line="76" pos:column="12"/></operator><name pos:line="76" pos:column="9">num_lwp<pos:position pos:line="76" pos:column="16"/></name></name> <operator pos:line="76" pos:column="17">=<pos:position pos:line="76" pos:column="18"/></operator> <call><name pos:line="76" pos:column="19">strtoul<pos:position pos:line="76" pos:column="26"/></name><argument_list pos:line="76" pos:column="26">(<argument><expr><name><name pos:line="76" pos:column="27">fields<pos:position pos:line="76" pos:column="33"/></name><index pos:line="76" pos:column="33">[<expr><literal type="number" pos:line="76" pos:column="34">17<pos:position pos:line="76" pos:column="36"/></literal></expr>]<pos:position pos:line="76" pos:column="37"/></index></name></expr></argument>, <comment type="block" pos:line="76" pos:column="39">/* endptr = */</comment> <argument><expr><name pos:line="76" pos:column="54">NULL<pos:position pos:line="76" pos:column="58"/></name></expr></argument>, <comment type="block" pos:line="76" pos:column="60">/* base = */</comment> <argument><expr><literal type="number" pos:line="76" pos:column="73">10<pos:position pos:line="76" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="77"/></expr_stmt>
    <if pos:line="77" pos:column="5">if <condition pos:line="77" pos:column="8">(<expr><operator pos:line="77" pos:column="9">(<pos:position pos:line="77" pos:column="10"/></operator><call><name pos:line="77" pos:column="10">ps_read_status<pos:position pos:line="77" pos:column="24"/></name><argument_list pos:line="77" pos:column="24">(<argument><expr><name pos:line="77" pos:column="25">pid<pos:position pos:line="77" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="30">ps<pos:position pos:line="77" pos:column="32"/></name></expr></argument>)<pos:position pos:line="77" pos:column="33"/></argument_list></call><operator pos:line="77" pos:column="33">)<pos:position pos:line="77" pos:column="34"/></operator> <operator pos:line="77" pos:column="35">!=<pos:position pos:line="77" pos:column="37"/></operator> <literal type="number" pos:line="77" pos:column="38">0<pos:position pos:line="77" pos:column="39"/></literal></expr>)<pos:position pos:line="77" pos:column="40"/></condition><then pos:line="77" pos:column="40"> <block pos:line="77" pos:column="41">{
      <comment type="block" pos:line="78" pos:column="7">/* No VMem data */</comment>
      <expr_stmt><expr><name><name pos:line="79" pos:column="7">ps<pos:position pos:line="79" pos:column="9"/></name><operator pos:line="79" pos:column="9">-&gt;<pos:position pos:line="79" pos:column="14"/></operator><name pos:line="79" pos:column="11">vmem_data<pos:position pos:line="79" pos:column="20"/></name></name> <operator pos:line="79" pos:column="21">=<pos:position pos:line="79" pos:column="22"/></operator> <operator pos:line="79" pos:column="23">-<pos:position pos:line="79" pos:column="24"/></operator><literal type="number" pos:line="79" pos:column="24">1<pos:position pos:line="79" pos:column="25"/></literal></expr>;<pos:position pos:line="79" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="80" pos:column="7">ps<pos:position pos:line="80" pos:column="9"/></name><operator pos:line="80" pos:column="9">-&gt;<pos:position pos:line="80" pos:column="14"/></operator><name pos:line="80" pos:column="11">vmem_code<pos:position pos:line="80" pos:column="20"/></name></name> <operator pos:line="80" pos:column="21">=<pos:position pos:line="80" pos:column="22"/></operator> <operator pos:line="80" pos:column="23">-<pos:position pos:line="80" pos:column="24"/></operator><literal type="number" pos:line="80" pos:column="24">1<pos:position pos:line="80" pos:column="25"/></literal></expr>;<pos:position pos:line="80" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="81" pos:column="7">DEBUG<pos:position pos:line="81" pos:column="12"/></name><argument_list pos:line="81" pos:column="12">(<argument><expr><literal type="string" pos:line="81" pos:column="13">"ps_read_process: did not get vmem data for pid %li"<pos:position pos:line="81" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="81" pos:column="67">pid<pos:position pos:line="81" pos:column="70"/></name></expr></argument>)<pos:position pos:line="81" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="72"/></expr_stmt>
    }<pos:position pos:line="82" pos:column="6"/></block></then></if>
    <if pos:line="83" pos:column="5">if <condition pos:line="83" pos:column="8">(<expr><name><name pos:line="83" pos:column="9">ps<pos:position pos:line="83" pos:column="11"/></name><operator pos:line="83" pos:column="11">-&gt;<pos:position pos:line="83" pos:column="16"/></operator><name pos:line="83" pos:column="13">num_lwp<pos:position pos:line="83" pos:column="20"/></name></name> <operator pos:line="83" pos:column="21">==<pos:position pos:line="83" pos:column="23"/></operator> <literal type="number" pos:line="83" pos:column="24">0<pos:position pos:line="83" pos:column="25"/></literal></expr>)<pos:position pos:line="83" pos:column="26"/></condition><then pos:line="83" pos:column="26">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="84" pos:column="7">ps<pos:position pos:line="84" pos:column="9"/></name><operator pos:line="84" pos:column="9">-&gt;<pos:position pos:line="84" pos:column="14"/></operator><name pos:line="84" pos:column="11">num_lwp<pos:position pos:line="84" pos:column="18"/></name></name> <operator pos:line="84" pos:column="19">=<pos:position pos:line="84" pos:column="20"/></operator> <literal type="number" pos:line="84" pos:column="21">1<pos:position pos:line="84" pos:column="22"/></literal></expr>;<pos:position pos:line="84" pos:column="23"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name><name pos:line="85" pos:column="5">ps<pos:position pos:line="85" pos:column="7"/></name><operator pos:line="85" pos:column="7">-&gt;<pos:position pos:line="85" pos:column="12"/></operator><name pos:line="85" pos:column="9">num_proc<pos:position pos:line="85" pos:column="17"/></name></name> <operator pos:line="85" pos:column="18">=<pos:position pos:line="85" pos:column="19"/></operator> <literal type="number" pos:line="85" pos:column="20">1<pos:position pos:line="85" pos:column="21"/></literal></expr>;<pos:position pos:line="85" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="86" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="88" pos:column="3">/* Leave the rest at zero if this is only a zombi */</comment>
  <if pos:line="89" pos:column="3">if <condition pos:line="89" pos:column="6">(<expr><name><name pos:line="89" pos:column="7">ps<pos:position pos:line="89" pos:column="9"/></name><operator pos:line="89" pos:column="9">-&gt;<pos:position pos:line="89" pos:column="14"/></operator><name pos:line="89" pos:column="11">num_proc<pos:position pos:line="89" pos:column="19"/></name></name> <operator pos:line="89" pos:column="20">==<pos:position pos:line="89" pos:column="22"/></operator> <literal type="number" pos:line="89" pos:column="23">0<pos:position pos:line="89" pos:column="24"/></literal></expr>)<pos:position pos:line="89" pos:column="25"/></condition><then pos:line="89" pos:column="25"> <block pos:line="89" pos:column="26">{
    <expr_stmt><expr><call><name pos:line="90" pos:column="5">DEBUG<pos:position pos:line="90" pos:column="10"/></name><argument_list pos:line="90" pos:column="10">(<argument><expr><literal type="string" pos:line="90" pos:column="11">"processes plugin: This is only a zombie: pid = %li; "<pos:position pos:line="90" pos:column="65"/></literal>
          <literal type="string" pos:line="91" pos:column="11">"name = %s;"<pos:position pos:line="91" pos:column="23"/></literal></expr></argument>,
          <argument><expr><name pos:line="92" pos:column="11">pid<pos:position pos:line="92" pos:column="14"/></name></expr></argument>, <argument><expr><name><name pos:line="92" pos:column="16">ps<pos:position pos:line="92" pos:column="18"/></name><operator pos:line="92" pos:column="18">-&gt;<pos:position pos:line="92" pos:column="23"/></operator><name pos:line="92" pos:column="20">name<pos:position pos:line="92" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="92" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="26"/></expr_stmt>
    <return pos:line="93" pos:column="5">return <expr><literal type="number" pos:line="93" pos:column="12">0<pos:position pos:line="93" pos:column="13"/></literal></expr>;<pos:position pos:line="93" pos:column="14"/></return>
  }<pos:position pos:line="94" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="96" pos:column="3">cpu_user_counter<pos:position pos:line="96" pos:column="19"/></name> <operator pos:line="96" pos:column="20">=<pos:position pos:line="96" pos:column="21"/></operator> <call><name pos:line="96" pos:column="22">atoll<pos:position pos:line="96" pos:column="27"/></name><argument_list pos:line="96" pos:column="27">(<argument><expr><name><name pos:line="96" pos:column="28">fields<pos:position pos:line="96" pos:column="34"/></name><index pos:line="96" pos:column="34">[<expr><literal type="number" pos:line="96" pos:column="35">11<pos:position pos:line="96" pos:column="37"/></literal></expr>]<pos:position pos:line="96" pos:column="38"/></index></name></expr></argument>)<pos:position pos:line="96" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><name pos:line="97" pos:column="3">cpu_system_counter<pos:position pos:line="97" pos:column="21"/></name> <operator pos:line="97" pos:column="22">=<pos:position pos:line="97" pos:column="23"/></operator> <call><name pos:line="97" pos:column="24">atoll<pos:position pos:line="97" pos:column="29"/></name><argument_list pos:line="97" pos:column="29">(<argument><expr><name><name pos:line="97" pos:column="30">fields<pos:position pos:line="97" pos:column="36"/></name><index pos:line="97" pos:column="36">[<expr><literal type="number" pos:line="97" pos:column="37">12<pos:position pos:line="97" pos:column="39"/></literal></expr>]<pos:position pos:line="97" pos:column="40"/></index></name></expr></argument>)<pos:position pos:line="97" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><name pos:line="98" pos:column="3">vmem_size<pos:position pos:line="98" pos:column="12"/></name> <operator pos:line="98" pos:column="13">=<pos:position pos:line="98" pos:column="14"/></operator> <call><name pos:line="98" pos:column="15">atoll<pos:position pos:line="98" pos:column="20"/></name><argument_list pos:line="98" pos:column="20">(<argument><expr><name><name pos:line="98" pos:column="21">fields<pos:position pos:line="98" pos:column="27"/></name><index pos:line="98" pos:column="27">[<expr><literal type="number" pos:line="98" pos:column="28">20<pos:position pos:line="98" pos:column="30"/></literal></expr>]<pos:position pos:line="98" pos:column="31"/></index></name></expr></argument>)<pos:position pos:line="98" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><name pos:line="99" pos:column="3">vmem_rss<pos:position pos:line="99" pos:column="11"/></name> <operator pos:line="99" pos:column="12">=<pos:position pos:line="99" pos:column="13"/></operator> <call><name pos:line="99" pos:column="14">atoll<pos:position pos:line="99" pos:column="19"/></name><argument_list pos:line="99" pos:column="19">(<argument><expr><name><name pos:line="99" pos:column="20">fields<pos:position pos:line="99" pos:column="26"/></name><index pos:line="99" pos:column="26">[<expr><literal type="number" pos:line="99" pos:column="27">21<pos:position pos:line="99" pos:column="29"/></literal></expr>]<pos:position pos:line="99" pos:column="30"/></index></name></expr></argument>)<pos:position pos:line="99" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="100" pos:column="3">ps<pos:position pos:line="100" pos:column="5"/></name><operator pos:line="100" pos:column="5">-&gt;<pos:position pos:line="100" pos:column="10"/></operator><name pos:line="100" pos:column="7">vmem_minflt_counter<pos:position pos:line="100" pos:column="26"/></name></name> <operator pos:line="100" pos:column="27">=<pos:position pos:line="100" pos:column="28"/></operator> <call><name pos:line="100" pos:column="29">atol<pos:position pos:line="100" pos:column="33"/></name><argument_list pos:line="100" pos:column="33">(<argument><expr><name><name pos:line="100" pos:column="34">fields<pos:position pos:line="100" pos:column="40"/></name><index pos:line="100" pos:column="40">[<expr><literal type="number" pos:line="100" pos:column="41">7<pos:position pos:line="100" pos:column="42"/></literal></expr>]<pos:position pos:line="100" pos:column="43"/></index></name></expr></argument>)<pos:position pos:line="100" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="101" pos:column="3">ps<pos:position pos:line="101" pos:column="5"/></name><operator pos:line="101" pos:column="5">-&gt;<pos:position pos:line="101" pos:column="10"/></operator><name pos:line="101" pos:column="7">vmem_majflt_counter<pos:position pos:line="101" pos:column="26"/></name></name> <operator pos:line="101" pos:column="27">=<pos:position pos:line="101" pos:column="28"/></operator> <call><name pos:line="101" pos:column="29">atol<pos:position pos:line="101" pos:column="33"/></name><argument_list pos:line="101" pos:column="33">(<argument><expr><name><name pos:line="101" pos:column="34">fields<pos:position pos:line="101" pos:column="40"/></name><index pos:line="101" pos:column="40">[<expr><literal type="number" pos:line="101" pos:column="41">9<pos:position pos:line="101" pos:column="42"/></literal></expr>]<pos:position pos:line="101" pos:column="43"/></index></name></expr></argument>)<pos:position pos:line="101" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="45"/></expr_stmt>

  <block pos:line="103" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="104" pos:column="5">unsigned<pos:position pos:line="104" pos:column="13"/></name> <name pos:line="104" pos:column="14">long<pos:position pos:line="104" pos:column="18"/></name> <name pos:line="104" pos:column="19">long<pos:position pos:line="104" pos:column="23"/></name></type> <name pos:line="104" pos:column="24">stack_start<pos:position pos:line="104" pos:column="35"/></name> <init pos:line="104" pos:column="36">= <expr><call><name pos:line="104" pos:column="38">atoll<pos:position pos:line="104" pos:column="43"/></name><argument_list pos:line="104" pos:column="43">(<argument><expr><name><name pos:line="104" pos:column="44">fields<pos:position pos:line="104" pos:column="50"/></name><index pos:line="104" pos:column="50">[<expr><literal type="number" pos:line="104" pos:column="51">25<pos:position pos:line="104" pos:column="53"/></literal></expr>]<pos:position pos:line="104" pos:column="54"/></index></name></expr></argument>)<pos:position pos:line="104" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="104" pos:column="56"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="105" pos:column="5">unsigned<pos:position pos:line="105" pos:column="13"/></name> <name pos:line="105" pos:column="14">long<pos:position pos:line="105" pos:column="18"/></name> <name pos:line="105" pos:column="19">long<pos:position pos:line="105" pos:column="23"/></name></type> <name pos:line="105" pos:column="24">stack_ptr<pos:position pos:line="105" pos:column="33"/></name> <init pos:line="105" pos:column="34">= <expr><call><name pos:line="105" pos:column="36">atoll<pos:position pos:line="105" pos:column="41"/></name><argument_list pos:line="105" pos:column="41">(<argument><expr><name><name pos:line="105" pos:column="42">fields<pos:position pos:line="105" pos:column="48"/></name><index pos:line="105" pos:column="48">[<expr><literal type="number" pos:line="105" pos:column="49">26<pos:position pos:line="105" pos:column="51"/></literal></expr>]<pos:position pos:line="105" pos:column="52"/></index></name></expr></argument>)<pos:position pos:line="105" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="105" pos:column="54"/></decl_stmt>

    <expr_stmt><expr><name pos:line="107" pos:column="5">stack_size<pos:position pos:line="107" pos:column="15"/></name> <operator pos:line="107" pos:column="16">=<pos:position pos:line="107" pos:column="17"/></operator> <ternary><condition><expr><operator pos:line="107" pos:column="18">(<pos:position pos:line="107" pos:column="19"/></operator><name pos:line="107" pos:column="19">stack_start<pos:position pos:line="107" pos:column="30"/></name> <operator pos:line="107" pos:column="31">&gt;<pos:position pos:line="107" pos:column="35"/></operator> <name pos:line="107" pos:column="33">stack_ptr<pos:position pos:line="107" pos:column="42"/></name><operator pos:line="107" pos:column="42">)<pos:position pos:line="107" pos:column="43"/></operator></expr> ?<pos:position pos:line="107" pos:column="45"/></condition><then pos:line="107" pos:column="45"> <expr><name pos:line="107" pos:column="46">stack_start<pos:position pos:line="107" pos:column="57"/></name> <operator pos:line="107" pos:column="58">-<pos:position pos:line="107" pos:column="59"/></operator> <name pos:line="107" pos:column="60">stack_ptr<pos:position pos:line="107" pos:column="69"/></name></expr>
                                           <pos:position pos:line="108" pos:column="44"/></then><else pos:line="108" pos:column="44">: <expr><name pos:line="108" pos:column="46">stack_ptr<pos:position pos:line="108" pos:column="55"/></name> <operator pos:line="108" pos:column="56">-<pos:position pos:line="108" pos:column="57"/></operator> <name pos:line="108" pos:column="58">stack_start<pos:position pos:line="108" pos:column="69"/></name></expr></else></ternary></expr>;<pos:position pos:line="108" pos:column="70"/></expr_stmt>
  }<pos:position pos:line="109" pos:column="4"/></block>

  <comment type="block" pos:line="111" pos:column="3">/* Convert jiffies to useconds */</comment>
  <expr_stmt><expr><name pos:line="112" pos:column="3">cpu_user_counter<pos:position pos:line="112" pos:column="19"/></name> <operator pos:line="112" pos:column="20">=<pos:position pos:line="112" pos:column="21"/></operator> <name pos:line="112" pos:column="22">cpu_user_counter<pos:position pos:line="112" pos:column="38"/></name> <operator pos:line="112" pos:column="39">*<pos:position pos:line="112" pos:column="40"/></operator> <literal type="number" pos:line="112" pos:column="41">1000000<pos:position pos:line="112" pos:column="48"/></literal> <operator pos:line="112" pos:column="49">/<pos:position pos:line="112" pos:column="50"/></operator> <name pos:line="112" pos:column="51">CONFIG_HZ<pos:position pos:line="112" pos:column="60"/></name></expr>;<pos:position pos:line="112" pos:column="61"/></expr_stmt>
  <expr_stmt><expr><name pos:line="113" pos:column="3">cpu_system_counter<pos:position pos:line="113" pos:column="21"/></name> <operator pos:line="113" pos:column="22">=<pos:position pos:line="113" pos:column="23"/></operator> <name pos:line="113" pos:column="24">cpu_system_counter<pos:position pos:line="113" pos:column="42"/></name> <operator pos:line="113" pos:column="43">*<pos:position pos:line="113" pos:column="44"/></operator> <literal type="number" pos:line="113" pos:column="45">1000000<pos:position pos:line="113" pos:column="52"/></literal> <operator pos:line="113" pos:column="53">/<pos:position pos:line="113" pos:column="54"/></operator> <name pos:line="113" pos:column="55">CONFIG_HZ<pos:position pos:line="113" pos:column="64"/></name></expr>;<pos:position pos:line="113" pos:column="65"/></expr_stmt>
  <expr_stmt><expr><name pos:line="114" pos:column="3">vmem_rss<pos:position pos:line="114" pos:column="11"/></name> <operator pos:line="114" pos:column="12">=<pos:position pos:line="114" pos:column="13"/></operator> <name pos:line="114" pos:column="14">vmem_rss<pos:position pos:line="114" pos:column="22"/></name> <operator pos:line="114" pos:column="23">*<pos:position pos:line="114" pos:column="24"/></operator> <name pos:line="114" pos:column="25">pagesize_g<pos:position pos:line="114" pos:column="35"/></name></expr>;<pos:position pos:line="114" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="116" pos:column="3">ps<pos:position pos:line="116" pos:column="5"/></name><operator pos:line="116" pos:column="5">-&gt;<pos:position pos:line="116" pos:column="10"/></operator><name pos:line="116" pos:column="7">cpu_user_counter<pos:position pos:line="116" pos:column="23"/></name></name> <operator pos:line="116" pos:column="24">=<pos:position pos:line="116" pos:column="25"/></operator> <name pos:line="116" pos:column="26">cpu_user_counter<pos:position pos:line="116" pos:column="42"/></name></expr>;<pos:position pos:line="116" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="117" pos:column="3">ps<pos:position pos:line="117" pos:column="5"/></name><operator pos:line="117" pos:column="5">-&gt;<pos:position pos:line="117" pos:column="10"/></operator><name pos:line="117" pos:column="7">cpu_system_counter<pos:position pos:line="117" pos:column="25"/></name></name> <operator pos:line="117" pos:column="26">=<pos:position pos:line="117" pos:column="27"/></operator> <name pos:line="117" pos:column="28">cpu_system_counter<pos:position pos:line="117" pos:column="46"/></name></expr>;<pos:position pos:line="117" pos:column="47"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="118" pos:column="3">ps<pos:position pos:line="118" pos:column="5"/></name><operator pos:line="118" pos:column="5">-&gt;<pos:position pos:line="118" pos:column="10"/></operator><name pos:line="118" pos:column="7">vmem_size<pos:position pos:line="118" pos:column="16"/></name></name> <operator pos:line="118" pos:column="17">=<pos:position pos:line="118" pos:column="18"/></operator> <operator pos:line="118" pos:column="19">(<pos:position pos:line="118" pos:column="20"/></operator><name pos:line="118" pos:column="20">unsigned<pos:position pos:line="118" pos:column="28"/></name> <name pos:line="118" pos:column="29">long<pos:position pos:line="118" pos:column="33"/></name><operator pos:line="118" pos:column="33">)<pos:position pos:line="118" pos:column="34"/></operator><name pos:line="118" pos:column="34">vmem_size<pos:position pos:line="118" pos:column="43"/></name></expr>;<pos:position pos:line="118" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="119" pos:column="3">ps<pos:position pos:line="119" pos:column="5"/></name><operator pos:line="119" pos:column="5">-&gt;<pos:position pos:line="119" pos:column="10"/></operator><name pos:line="119" pos:column="7">vmem_rss<pos:position pos:line="119" pos:column="15"/></name></name> <operator pos:line="119" pos:column="16">=<pos:position pos:line="119" pos:column="17"/></operator> <operator pos:line="119" pos:column="18">(<pos:position pos:line="119" pos:column="19"/></operator><name pos:line="119" pos:column="19">unsigned<pos:position pos:line="119" pos:column="27"/></name> <name pos:line="119" pos:column="28">long<pos:position pos:line="119" pos:column="32"/></name><operator pos:line="119" pos:column="32">)<pos:position pos:line="119" pos:column="33"/></operator><name pos:line="119" pos:column="33">vmem_rss<pos:position pos:line="119" pos:column="41"/></name></expr>;<pos:position pos:line="119" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="120" pos:column="3">ps<pos:position pos:line="120" pos:column="5"/></name><operator pos:line="120" pos:column="5">-&gt;<pos:position pos:line="120" pos:column="10"/></operator><name pos:line="120" pos:column="7">stack_size<pos:position pos:line="120" pos:column="17"/></name></name> <operator pos:line="120" pos:column="18">=<pos:position pos:line="120" pos:column="19"/></operator> <operator pos:line="120" pos:column="20">(<pos:position pos:line="120" pos:column="21"/></operator><name pos:line="120" pos:column="21">unsigned<pos:position pos:line="120" pos:column="29"/></name> <name pos:line="120" pos:column="30">long<pos:position pos:line="120" pos:column="34"/></name><operator pos:line="120" pos:column="34">)<pos:position pos:line="120" pos:column="35"/></operator><name pos:line="120" pos:column="35">stack_size<pos:position pos:line="120" pos:column="45"/></name></expr>;<pos:position pos:line="120" pos:column="46"/></expr_stmt>

  <comment type="block" pos:line="122" pos:column="3">/* no data by default. May be filled by ps_fill_details () */</comment>
  <expr_stmt><expr><name><name pos:line="123" pos:column="3">ps<pos:position pos:line="123" pos:column="5"/></name><operator pos:line="123" pos:column="5">-&gt;<pos:position pos:line="123" pos:column="10"/></operator><name pos:line="123" pos:column="7">io_rchar<pos:position pos:line="123" pos:column="15"/></name></name> <operator pos:line="123" pos:column="16">=<pos:position pos:line="123" pos:column="17"/></operator> <operator pos:line="123" pos:column="18">-<pos:position pos:line="123" pos:column="19"/></operator><literal type="number" pos:line="123" pos:column="19">1<pos:position pos:line="123" pos:column="20"/></literal></expr>;<pos:position pos:line="123" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="124" pos:column="3">ps<pos:position pos:line="124" pos:column="5"/></name><operator pos:line="124" pos:column="5">-&gt;<pos:position pos:line="124" pos:column="10"/></operator><name pos:line="124" pos:column="7">io_wchar<pos:position pos:line="124" pos:column="15"/></name></name> <operator pos:line="124" pos:column="16">=<pos:position pos:line="124" pos:column="17"/></operator> <operator pos:line="124" pos:column="18">-<pos:position pos:line="124" pos:column="19"/></operator><literal type="number" pos:line="124" pos:column="19">1<pos:position pos:line="124" pos:column="20"/></literal></expr>;<pos:position pos:line="124" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="125" pos:column="3">ps<pos:position pos:line="125" pos:column="5"/></name><operator pos:line="125" pos:column="5">-&gt;<pos:position pos:line="125" pos:column="10"/></operator><name pos:line="125" pos:column="7">io_syscr<pos:position pos:line="125" pos:column="15"/></name></name> <operator pos:line="125" pos:column="16">=<pos:position pos:line="125" pos:column="17"/></operator> <operator pos:line="125" pos:column="18">-<pos:position pos:line="125" pos:column="19"/></operator><literal type="number" pos:line="125" pos:column="19">1<pos:position pos:line="125" pos:column="20"/></literal></expr>;<pos:position pos:line="125" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="126" pos:column="3">ps<pos:position pos:line="126" pos:column="5"/></name><operator pos:line="126" pos:column="5">-&gt;<pos:position pos:line="126" pos:column="10"/></operator><name pos:line="126" pos:column="7">io_syscw<pos:position pos:line="126" pos:column="15"/></name></name> <operator pos:line="126" pos:column="16">=<pos:position pos:line="126" pos:column="17"/></operator> <operator pos:line="126" pos:column="18">-<pos:position pos:line="126" pos:column="19"/></operator><literal type="number" pos:line="126" pos:column="19">1<pos:position pos:line="126" pos:column="20"/></literal></expr>;<pos:position pos:line="126" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="127" pos:column="3">ps<pos:position pos:line="127" pos:column="5"/></name><operator pos:line="127" pos:column="5">-&gt;<pos:position pos:line="127" pos:column="10"/></operator><name pos:line="127" pos:column="7">io_diskr<pos:position pos:line="127" pos:column="15"/></name></name> <operator pos:line="127" pos:column="16">=<pos:position pos:line="127" pos:column="17"/></operator> <operator pos:line="127" pos:column="18">-<pos:position pos:line="127" pos:column="19"/></operator><literal type="number" pos:line="127" pos:column="19">1<pos:position pos:line="127" pos:column="20"/></literal></expr>;<pos:position pos:line="127" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="128" pos:column="3">ps<pos:position pos:line="128" pos:column="5"/></name><operator pos:line="128" pos:column="5">-&gt;<pos:position pos:line="128" pos:column="10"/></operator><name pos:line="128" pos:column="7">io_diskw<pos:position pos:line="128" pos:column="15"/></name></name> <operator pos:line="128" pos:column="16">=<pos:position pos:line="128" pos:column="17"/></operator> <operator pos:line="128" pos:column="18">-<pos:position pos:line="128" pos:column="19"/></operator><literal type="number" pos:line="128" pos:column="19">1<pos:position pos:line="128" pos:column="20"/></literal></expr>;<pos:position pos:line="128" pos:column="21"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="130" pos:column="3">ps<pos:position pos:line="130" pos:column="5"/></name><operator pos:line="130" pos:column="5">-&gt;<pos:position pos:line="130" pos:column="10"/></operator><name pos:line="130" pos:column="7">cswitch_vol<pos:position pos:line="130" pos:column="18"/></name></name> <operator pos:line="130" pos:column="19">=<pos:position pos:line="130" pos:column="20"/></operator> <operator pos:line="130" pos:column="21">-<pos:position pos:line="130" pos:column="22"/></operator><literal type="number" pos:line="130" pos:column="22">1<pos:position pos:line="130" pos:column="23"/></literal></expr>;<pos:position pos:line="130" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="131" pos:column="3">ps<pos:position pos:line="131" pos:column="5"/></name><operator pos:line="131" pos:column="5">-&gt;<pos:position pos:line="131" pos:column="10"/></operator><name pos:line="131" pos:column="7">cswitch_invol<pos:position pos:line="131" pos:column="20"/></name></name> <operator pos:line="131" pos:column="21">=<pos:position pos:line="131" pos:column="22"/></operator> <operator pos:line="131" pos:column="23">-<pos:position pos:line="131" pos:column="24"/></operator><literal type="number" pos:line="131" pos:column="24">1<pos:position pos:line="131" pos:column="25"/></literal></expr>;<pos:position pos:line="131" pos:column="26"/></expr_stmt>

  <comment type="block" pos:line="133" pos:column="3">/* success */</comment>
  <return pos:line="134" pos:column="3">return <expr><literal type="number" pos:line="134" pos:column="10">0<pos:position pos:line="134" pos:column="11"/></literal></expr>;<pos:position pos:line="134" pos:column="12"/></return>
}<pos:position pos:line="135" pos:column="2"/></block></function></unit>

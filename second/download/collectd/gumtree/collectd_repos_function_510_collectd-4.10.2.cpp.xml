<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_510_collectd-4.10.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">ps_get_cmdline<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">pid_t<pos:position pos:line="1" pos:column="35"/></name></type> <name pos:line="1" pos:column="36">pid<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">char<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">name<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">buf<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="64">size_t<pos:position pos:line="1" pos:column="70"/></name></type> <name pos:line="1" pos:column="71">buf_len<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name>  <modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">buf_ptr<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">size_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">len<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name></type> <name><name pos:line="6" pos:column="14">file<pos:position pos:line="6" pos:column="18"/></name><index pos:line="6" pos:column="18">[<expr><name pos:line="6" pos:column="19">PATH_MAX<pos:position pos:line="6" pos:column="27"/></name></expr>]<pos:position pos:line="6" pos:column="28"/></index></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type>  <name pos:line="7" pos:column="14">fd<pos:position pos:line="7" pos:column="16"/></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="9" pos:column="9">size_t<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">n<pos:position pos:line="9" pos:column="17"/></name></decl>;<pos:position pos:line="9" pos:column="18"/></decl_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">(<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">pid<pos:position pos:line="11" pos:column="17"/></name> <operator pos:line="11" pos:column="18">&lt;<pos:position pos:line="11" pos:column="22"/></operator> <literal type="number" pos:line="11" pos:column="20">1<pos:position pos:line="11" pos:column="21"/></literal><operator pos:line="11" pos:column="21">)<pos:position pos:line="11" pos:column="22"/></operator> <operator pos:line="11" pos:column="23">||<pos:position pos:line="11" pos:column="25"/></operator> <operator pos:line="11" pos:column="26">(<pos:position pos:line="11" pos:column="27"/></operator><name pos:line="11" pos:column="27">NULL<pos:position pos:line="11" pos:column="31"/></name> <operator pos:line="11" pos:column="32">==<pos:position pos:line="11" pos:column="34"/></operator> <name pos:line="11" pos:column="35">buf<pos:position pos:line="11" pos:column="38"/></name><operator pos:line="11" pos:column="38">)<pos:position pos:line="11" pos:column="39"/></operator> <operator pos:line="11" pos:column="40">||<pos:position pos:line="11" pos:column="42"/></operator> <operator pos:line="11" pos:column="43">(<pos:position pos:line="11" pos:column="44"/></operator><name pos:line="11" pos:column="44">buf_len<pos:position pos:line="11" pos:column="51"/></name> <operator pos:line="11" pos:column="52">&lt;<pos:position pos:line="11" pos:column="56"/></operator> <literal type="number" pos:line="11" pos:column="54">2<pos:position pos:line="11" pos:column="55"/></literal><operator pos:line="11" pos:column="55">)<pos:position pos:line="11" pos:column="56"/></operator></expr>)<pos:position pos:line="11" pos:column="57"/></condition><then pos:line="11" pos:column="57">
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><name pos:line="12" pos:column="24">NULL<pos:position pos:line="12" pos:column="28"/></name></expr>;<pos:position pos:line="12" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="14" pos:column="9">ssnprintf<pos:position pos:line="14" pos:column="18"/></name> <argument_list pos:line="14" pos:column="19">(<argument><expr><name pos:line="14" pos:column="20">file<pos:position pos:line="14" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="26">sizeof <argument_list pos:line="14" pos:column="33">(<argument><expr><name pos:line="14" pos:column="34">file<pos:position pos:line="14" pos:column="38"/></name></expr></argument>)<pos:position pos:line="14" pos:column="39"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="41">"/proc/%u/cmdline"<pos:position pos:line="14" pos:column="59"/></literal></expr></argument>,
		       	<argument><expr><operator pos:line="15" pos:column="25">(<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="26">unsigned<pos:position pos:line="15" pos:column="34"/></name> <name pos:line="15" pos:column="35">int<pos:position pos:line="15" pos:column="38"/></name><operator pos:line="15" pos:column="38">)<pos:position pos:line="15" pos:column="39"/></operator> <name pos:line="15" pos:column="40">pid<pos:position pos:line="15" pos:column="43"/></name></expr></argument>)<pos:position pos:line="15" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="45"/></expr_stmt>

	<expr_stmt><expr><name pos:line="17" pos:column="9">errno<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">=<pos:position pos:line="17" pos:column="16"/></operator> <literal type="number" pos:line="17" pos:column="17">0<pos:position pos:line="17" pos:column="18"/></literal></expr>;<pos:position pos:line="17" pos:column="19"/></expr_stmt>
	<expr_stmt><expr><name pos:line="18" pos:column="9">fd<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <call><name pos:line="18" pos:column="14">open<pos:position pos:line="18" pos:column="18"/></name> <argument_list pos:line="18" pos:column="19">(<argument><expr><name pos:line="18" pos:column="20">file<pos:position pos:line="18" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="26">O_RDONLY<pos:position pos:line="18" pos:column="34"/></name></expr></argument>)<pos:position pos:line="18" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="36"/></expr_stmt>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">fd<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">&lt;<pos:position pos:line="19" pos:column="20"/></operator> <literal type="number" pos:line="19" pos:column="18">0<pos:position pos:line="19" pos:column="19"/></literal></expr>)<pos:position pos:line="19" pos:column="20"/></condition><then pos:line="19" pos:column="20"> <block pos:line="19" pos:column="21">{
		<decl_stmt><decl><type><name pos:line="20" pos:column="17">char<pos:position pos:line="20" pos:column="21"/></name></type> <name><name pos:line="20" pos:column="22">errbuf<pos:position pos:line="20" pos:column="28"/></name><index pos:line="20" pos:column="28">[<expr><literal type="number" pos:line="20" pos:column="29">4096<pos:position pos:line="20" pos:column="33"/></literal></expr>]<pos:position pos:line="20" pos:column="34"/></index></name></decl>;<pos:position pos:line="20" pos:column="35"/></decl_stmt>
		<comment type="block" pos:line="21" pos:column="17">/* ENOENT means the process exited while we were handling it.
		 * Don't complain about this, it only fills the logs. */</comment>
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><name pos:line="23" pos:column="21">errno<pos:position pos:line="23" pos:column="26"/></name> <operator pos:line="23" pos:column="27">!=<pos:position pos:line="23" pos:column="29"/></operator> <name pos:line="23" pos:column="30">ENOENT<pos:position pos:line="23" pos:column="36"/></name></expr>)<pos:position pos:line="23" pos:column="37"/></condition><then pos:line="23" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="25">WARNING<pos:position pos:line="24" pos:column="32"/></name> <argument_list pos:line="24" pos:column="33">(<argument><expr><literal type="string" pos:line="24" pos:column="34">"processes plugin: Failed to open `%s': %s."<pos:position pos:line="24" pos:column="78"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="80">file<pos:position pos:line="24" pos:column="84"/></name></expr></argument>,
					<argument><expr><call><name pos:line="25" pos:column="41">sstrerror<pos:position pos:line="25" pos:column="50"/></name> <argument_list pos:line="25" pos:column="51">(<argument><expr><name pos:line="25" pos:column="52">errno<pos:position pos:line="25" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="59">errbuf<pos:position pos:line="25" pos:column="65"/></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="67">sizeof <argument_list pos:line="25" pos:column="74">(<argument><expr><name pos:line="25" pos:column="75">errbuf<pos:position pos:line="25" pos:column="81"/></name></expr></argument>)<pos:position pos:line="25" pos:column="82"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="85"/></expr_stmt></block></then></if>
		<return pos:line="26" pos:column="17">return <expr><name pos:line="26" pos:column="24">NULL<pos:position pos:line="26" pos:column="28"/></name></expr>;<pos:position pos:line="26" pos:column="29"/></return>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="29" pos:column="9">buf_ptr<pos:position pos:line="29" pos:column="16"/></name> <operator pos:line="29" pos:column="17">=<pos:position pos:line="29" pos:column="18"/></operator> <name pos:line="29" pos:column="19">buf<pos:position pos:line="29" pos:column="22"/></name></expr>;<pos:position pos:line="29" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><name pos:line="30" pos:column="9">len<pos:position pos:line="30" pos:column="12"/></name>     <operator pos:line="30" pos:column="17">=<pos:position pos:line="30" pos:column="18"/></operator> <name pos:line="30" pos:column="19">buf_len<pos:position pos:line="30" pos:column="26"/></name></expr>;<pos:position pos:line="30" pos:column="27"/></expr_stmt>

	<expr_stmt><expr><name pos:line="32" pos:column="9">n<pos:position pos:line="32" pos:column="10"/></name> <operator pos:line="32" pos:column="11">=<pos:position pos:line="32" pos:column="12"/></operator> <literal type="number" pos:line="32" pos:column="13">0<pos:position pos:line="32" pos:column="14"/></literal></expr>;<pos:position pos:line="32" pos:column="15"/></expr_stmt>

	<while pos:line="34" pos:column="9">while <condition pos:line="34" pos:column="15">(<expr><literal type="number" pos:line="34" pos:column="16">42<pos:position pos:line="34" pos:column="18"/></literal></expr>)<pos:position pos:line="34" pos:column="19"/></condition> <block pos:line="34" pos:column="20">{
		<decl_stmt><decl><type><name pos:line="35" pos:column="17">ssize_t<pos:position pos:line="35" pos:column="24"/></name></type> <name pos:line="35" pos:column="25">status<pos:position pos:line="35" pos:column="31"/></name></decl>;<pos:position pos:line="35" pos:column="32"/></decl_stmt>

		<expr_stmt><expr><name pos:line="37" pos:column="17">status<pos:position pos:line="37" pos:column="23"/></name> <operator pos:line="37" pos:column="24">=<pos:position pos:line="37" pos:column="25"/></operator> <call><name pos:line="37" pos:column="26">read<pos:position pos:line="37" pos:column="30"/></name> <argument_list pos:line="37" pos:column="31">(<argument><expr><name pos:line="37" pos:column="32">fd<pos:position pos:line="37" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="36">(<pos:position pos:line="37" pos:column="37"/></operator><name pos:line="37" pos:column="37">void<pos:position pos:line="37" pos:column="41"/></name> <operator pos:line="37" pos:column="42">*<pos:position pos:line="37" pos:column="43"/></operator><operator pos:line="37" pos:column="43">)<pos:position pos:line="37" pos:column="44"/></operator><name pos:line="37" pos:column="44">buf_ptr<pos:position pos:line="37" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="53">len<pos:position pos:line="37" pos:column="56"/></name></expr></argument>)<pos:position pos:line="37" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="58"/></expr_stmt>

		<if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><name pos:line="39" pos:column="21">status<pos:position pos:line="39" pos:column="27"/></name> <operator pos:line="39" pos:column="28">&lt;<pos:position pos:line="39" pos:column="32"/></operator> <literal type="number" pos:line="39" pos:column="30">0<pos:position pos:line="39" pos:column="31"/></literal></expr>)<pos:position pos:line="39" pos:column="32"/></condition><then pos:line="39" pos:column="32"> <block pos:line="39" pos:column="33">{
			<decl_stmt><decl><type><name pos:line="40" pos:column="25">char<pos:position pos:line="40" pos:column="29"/></name></type> <name><name pos:line="40" pos:column="30">errbuf<pos:position pos:line="40" pos:column="36"/></name><index pos:line="40" pos:column="36">[<expr><literal type="number" pos:line="40" pos:column="37">1024<pos:position pos:line="40" pos:column="41"/></literal></expr>]<pos:position pos:line="40" pos:column="42"/></index></name></decl>;<pos:position pos:line="40" pos:column="43"/></decl_stmt>

			<if pos:line="42" pos:column="25">if <condition pos:line="42" pos:column="28">(<expr><operator pos:line="42" pos:column="29">(<pos:position pos:line="42" pos:column="30"/></operator><name pos:line="42" pos:column="30">EAGAIN<pos:position pos:line="42" pos:column="36"/></name> <operator pos:line="42" pos:column="37">==<pos:position pos:line="42" pos:column="39"/></operator> <name pos:line="42" pos:column="40">errno<pos:position pos:line="42" pos:column="45"/></name><operator pos:line="42" pos:column="45">)<pos:position pos:line="42" pos:column="46"/></operator> <operator pos:line="42" pos:column="47">||<pos:position pos:line="42" pos:column="49"/></operator> <operator pos:line="42" pos:column="50">(<pos:position pos:line="42" pos:column="51"/></operator><name pos:line="42" pos:column="51">EINTR<pos:position pos:line="42" pos:column="56"/></name> <operator pos:line="42" pos:column="57">==<pos:position pos:line="42" pos:column="59"/></operator> <name pos:line="42" pos:column="60">errno<pos:position pos:line="42" pos:column="65"/></name><operator pos:line="42" pos:column="65">)<pos:position pos:line="42" pos:column="66"/></operator></expr>)<pos:position pos:line="42" pos:column="67"/></condition><then pos:line="42" pos:column="67">
				<block type="pseudo"><continue pos:line="43" pos:column="33">continue;<pos:position pos:line="43" pos:column="42"/></continue></block></then></if>

			<expr_stmt><expr><call><name pos:line="45" pos:column="25">WARNING<pos:position pos:line="45" pos:column="32"/></name> <argument_list pos:line="45" pos:column="33">(<argument><expr><literal type="string" pos:line="45" pos:column="34">"processes plugin: Failed to read from `%s': %s."<pos:position pos:line="45" pos:column="83"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="85">file<pos:position pos:line="45" pos:column="89"/></name></expr></argument>,
					<argument><expr><call><name pos:line="46" pos:column="41">sstrerror<pos:position pos:line="46" pos:column="50"/></name> <argument_list pos:line="46" pos:column="51">(<argument><expr><name pos:line="46" pos:column="52">errno<pos:position pos:line="46" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="59">errbuf<pos:position pos:line="46" pos:column="65"/></name></expr></argument>, <argument><expr><sizeof pos:line="46" pos:column="67">sizeof <argument_list pos:line="46" pos:column="74">(<argument><expr><name pos:line="46" pos:column="75">errbuf<pos:position pos:line="46" pos:column="81"/></name></expr></argument>)<pos:position pos:line="46" pos:column="82"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="46" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="85"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="47" pos:column="25">close<pos:position pos:line="47" pos:column="30"/></name> <argument_list pos:line="47" pos:column="31">(<argument><expr><name pos:line="47" pos:column="32">fd<pos:position pos:line="47" pos:column="34"/></name></expr></argument>)<pos:position pos:line="47" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="36"/></expr_stmt>
			<return pos:line="48" pos:column="25">return <expr><name pos:line="48" pos:column="32">NULL<pos:position pos:line="48" pos:column="36"/></name></expr>;<pos:position pos:line="48" pos:column="37"/></return>
		}<pos:position pos:line="49" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="51" pos:column="17">n<pos:position pos:line="51" pos:column="18"/></name> <operator pos:line="51" pos:column="19">+=<pos:position pos:line="51" pos:column="21"/></operator> <name pos:line="51" pos:column="22">status<pos:position pos:line="51" pos:column="28"/></name></expr>;<pos:position pos:line="51" pos:column="29"/></expr_stmt>

		<if pos:line="53" pos:column="17">if <condition pos:line="53" pos:column="20">(<expr><name pos:line="53" pos:column="21">status<pos:position pos:line="53" pos:column="27"/></name> <operator pos:line="53" pos:column="28">==<pos:position pos:line="53" pos:column="30"/></operator> <literal type="number" pos:line="53" pos:column="31">0<pos:position pos:line="53" pos:column="32"/></literal></expr>)<pos:position pos:line="53" pos:column="33"/></condition><then pos:line="53" pos:column="33">
			<block type="pseudo"><break pos:line="54" pos:column="25">break;<pos:position pos:line="54" pos:column="31"/></break></block></then></if>

		<expr_stmt><expr><name pos:line="56" pos:column="17">buf_ptr<pos:position pos:line="56" pos:column="24"/></name> <operator pos:line="56" pos:column="25">+=<pos:position pos:line="56" pos:column="27"/></operator> <name pos:line="56" pos:column="28">status<pos:position pos:line="56" pos:column="34"/></name></expr>;<pos:position pos:line="56" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name pos:line="57" pos:column="17">len<pos:position pos:line="57" pos:column="20"/></name>     <operator pos:line="57" pos:column="25">-=<pos:position pos:line="57" pos:column="27"/></operator> <name pos:line="57" pos:column="28">status<pos:position pos:line="57" pos:column="34"/></name></expr>;<pos:position pos:line="57" pos:column="35"/></expr_stmt>

		<if pos:line="59" pos:column="17">if <condition pos:line="59" pos:column="20">(<expr><name pos:line="59" pos:column="21">len<pos:position pos:line="59" pos:column="24"/></name> <operator pos:line="59" pos:column="25">&lt;=<pos:position pos:line="59" pos:column="30"/></operator> <literal type="number" pos:line="59" pos:column="28">0<pos:position pos:line="59" pos:column="29"/></literal></expr>)<pos:position pos:line="59" pos:column="30"/></condition><then pos:line="59" pos:column="30">
			<block type="pseudo"><break pos:line="60" pos:column="25">break;<pos:position pos:line="60" pos:column="31"/></break></block></then></if>
	}<pos:position pos:line="61" pos:column="10"/></block></while>

	<expr_stmt><expr><call><name pos:line="63" pos:column="9">close<pos:position pos:line="63" pos:column="14"/></name> <argument_list pos:line="63" pos:column="15">(<argument><expr><name pos:line="63" pos:column="16">fd<pos:position pos:line="63" pos:column="18"/></name></expr></argument>)<pos:position pos:line="63" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="20"/></expr_stmt>

	<if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><literal type="number" pos:line="65" pos:column="13">0<pos:position pos:line="65" pos:column="14"/></literal> <operator pos:line="65" pos:column="15">==<pos:position pos:line="65" pos:column="17"/></operator> <name pos:line="65" pos:column="18">n<pos:position pos:line="65" pos:column="19"/></name></expr>)<pos:position pos:line="65" pos:column="20"/></condition><then pos:line="65" pos:column="20"> <block pos:line="65" pos:column="21">{
		<comment type="block" pos:line="66" pos:column="17">/* cmdline not available; e.g. kernel thread, zombie */</comment>
		<if pos:line="67" pos:column="17">if <condition pos:line="67" pos:column="20">(<expr><name pos:line="67" pos:column="21">NULL<pos:position pos:line="67" pos:column="25"/></name> <operator pos:line="67" pos:column="26">==<pos:position pos:line="67" pos:column="28"/></operator> <name pos:line="67" pos:column="29">name<pos:position pos:line="67" pos:column="33"/></name></expr>)<pos:position pos:line="67" pos:column="34"/></condition><then pos:line="67" pos:column="34">
			<block type="pseudo"><return pos:line="68" pos:column="25">return <expr><name pos:line="68" pos:column="32">NULL<pos:position pos:line="68" pos:column="36"/></name></expr>;<pos:position pos:line="68" pos:column="37"/></return></block></then></if>

		<expr_stmt><expr><call><name pos:line="70" pos:column="17">ssnprintf<pos:position pos:line="70" pos:column="26"/></name> <argument_list pos:line="70" pos:column="27">(<argument><expr><name pos:line="70" pos:column="28">buf<pos:position pos:line="70" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="33">buf_len<pos:position pos:line="70" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="42">"[%s]"<pos:position pos:line="70" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="70" pos:column="50">name<pos:position pos:line="70" pos:column="54"/></name></expr></argument>)<pos:position pos:line="70" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="56"/></expr_stmt>
		<return pos:line="71" pos:column="17">return <expr><name pos:line="71" pos:column="24">buf<pos:position pos:line="71" pos:column="27"/></name></expr>;<pos:position pos:line="71" pos:column="28"/></return>
	}<pos:position pos:line="72" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="74" pos:column="9">assert<pos:position pos:line="74" pos:column="15"/></name> <argument_list pos:line="74" pos:column="16">(<argument><expr><name pos:line="74" pos:column="17">n<pos:position pos:line="74" pos:column="18"/></name> <operator pos:line="74" pos:column="19">&lt;=<pos:position pos:line="74" pos:column="24"/></operator> <name pos:line="74" pos:column="22">buf_len<pos:position pos:line="74" pos:column="29"/></name></expr></argument>)<pos:position pos:line="74" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="31"/></expr_stmt>

	<if pos:line="76" pos:column="9">if <condition pos:line="76" pos:column="12">(<expr><name pos:line="76" pos:column="13">n<pos:position pos:line="76" pos:column="14"/></name> <operator pos:line="76" pos:column="15">==<pos:position pos:line="76" pos:column="17"/></operator> <name pos:line="76" pos:column="18">buf_len<pos:position pos:line="76" pos:column="25"/></name></expr>)<pos:position pos:line="76" pos:column="26"/></condition><then pos:line="76" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="77" pos:column="17">--<pos:position pos:line="77" pos:column="19"/></operator><name pos:line="77" pos:column="19">n<pos:position pos:line="77" pos:column="20"/></name></expr>;<pos:position pos:line="77" pos:column="21"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name><name pos:line="78" pos:column="9">buf<pos:position pos:line="78" pos:column="12"/></name><index pos:line="78" pos:column="12">[<expr><name pos:line="78" pos:column="13">n<pos:position pos:line="78" pos:column="14"/></name></expr>]<pos:position pos:line="78" pos:column="15"/></index></name> <operator pos:line="78" pos:column="16">=<pos:position pos:line="78" pos:column="17"/></operator> <literal type="char" pos:line="78" pos:column="18">'\0'<pos:position pos:line="78" pos:column="22"/></literal></expr>;<pos:position pos:line="78" pos:column="23"/></expr_stmt>

	<expr_stmt><expr><operator pos:line="80" pos:column="9">--<pos:position pos:line="80" pos:column="11"/></operator><name pos:line="80" pos:column="11">n<pos:position pos:line="80" pos:column="12"/></name></expr>;<pos:position pos:line="80" pos:column="13"/></expr_stmt>
	<comment type="block" pos:line="81" pos:column="9">/* remove trailing whitespace */</comment>
	<while pos:line="82" pos:column="9">while <condition pos:line="82" pos:column="15">(<expr><operator pos:line="82" pos:column="16">(<pos:position pos:line="82" pos:column="17"/></operator><name pos:line="82" pos:column="17">n<pos:position pos:line="82" pos:column="18"/></name> <operator pos:line="82" pos:column="19">&gt;<pos:position pos:line="82" pos:column="23"/></operator> <literal type="number" pos:line="82" pos:column="21">0<pos:position pos:line="82" pos:column="22"/></literal><operator pos:line="82" pos:column="22">)<pos:position pos:line="82" pos:column="23"/></operator> <operator pos:line="82" pos:column="24">&amp;&amp;<pos:position pos:line="82" pos:column="34"/></operator> <operator pos:line="82" pos:column="27">(<pos:position pos:line="82" pos:column="28"/></operator><call><name pos:line="82" pos:column="28">isspace<pos:position pos:line="82" pos:column="35"/></name> <argument_list pos:line="82" pos:column="36">(<argument><expr><name><name pos:line="82" pos:column="37">buf<pos:position pos:line="82" pos:column="40"/></name><index pos:line="82" pos:column="40">[<expr><name pos:line="82" pos:column="41">n<pos:position pos:line="82" pos:column="42"/></name></expr>]<pos:position pos:line="82" pos:column="43"/></index></name></expr></argument>)<pos:position pos:line="82" pos:column="44"/></argument_list></call> <operator pos:line="82" pos:column="45">||<pos:position pos:line="82" pos:column="47"/></operator> <operator pos:line="82" pos:column="48">(<pos:position pos:line="82" pos:column="49"/></operator><literal type="char" pos:line="82" pos:column="49">'\0'<pos:position pos:line="82" pos:column="53"/></literal> <operator pos:line="82" pos:column="54">==<pos:position pos:line="82" pos:column="56"/></operator> <name><name pos:line="82" pos:column="57">buf<pos:position pos:line="82" pos:column="60"/></name><index pos:line="82" pos:column="60">[<expr><name pos:line="82" pos:column="61">n<pos:position pos:line="82" pos:column="62"/></name></expr>]<pos:position pos:line="82" pos:column="63"/></index></name><operator pos:line="82" pos:column="63">)<pos:position pos:line="82" pos:column="64"/></operator><operator pos:line="82" pos:column="64">)<pos:position pos:line="82" pos:column="65"/></operator></expr>)<pos:position pos:line="82" pos:column="66"/></condition> <block pos:line="82" pos:column="67">{
		<expr_stmt><expr><name><name pos:line="83" pos:column="17">buf<pos:position pos:line="83" pos:column="20"/></name><index pos:line="83" pos:column="20">[<expr><name pos:line="83" pos:column="21">n<pos:position pos:line="83" pos:column="22"/></name></expr>]<pos:position pos:line="83" pos:column="23"/></index></name> <operator pos:line="83" pos:column="24">=<pos:position pos:line="83" pos:column="25"/></operator> <literal type="char" pos:line="83" pos:column="26">'\0'<pos:position pos:line="83" pos:column="30"/></literal></expr>;<pos:position pos:line="83" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="84" pos:column="17">--<pos:position pos:line="84" pos:column="19"/></operator><name pos:line="84" pos:column="19">n<pos:position pos:line="84" pos:column="20"/></name></expr>;<pos:position pos:line="84" pos:column="21"/></expr_stmt>
	}<pos:position pos:line="85" pos:column="10"/></block></while>

	<comment type="block" pos:line="87" pos:column="9">/* arguments are separated by '\0' in /proc/&lt;pid&gt;/cmdline */</comment>
	<while pos:line="88" pos:column="9">while <condition pos:line="88" pos:column="15">(<expr><name pos:line="88" pos:column="16">n<pos:position pos:line="88" pos:column="17"/></name> <operator pos:line="88" pos:column="18">&gt;<pos:position pos:line="88" pos:column="22"/></operator> <literal type="number" pos:line="88" pos:column="20">0<pos:position pos:line="88" pos:column="21"/></literal></expr>)<pos:position pos:line="88" pos:column="22"/></condition> <block pos:line="88" pos:column="23">{
		<if pos:line="89" pos:column="17">if <condition pos:line="89" pos:column="20">(<expr><literal type="char" pos:line="89" pos:column="21">'\0'<pos:position pos:line="89" pos:column="25"/></literal> <operator pos:line="89" pos:column="26">==<pos:position pos:line="89" pos:column="28"/></operator> <name><name pos:line="89" pos:column="29">buf<pos:position pos:line="89" pos:column="32"/></name><index pos:line="89" pos:column="32">[<expr><name pos:line="89" pos:column="33">n<pos:position pos:line="89" pos:column="34"/></name></expr>]<pos:position pos:line="89" pos:column="35"/></index></name></expr>)<pos:position pos:line="89" pos:column="36"/></condition><then pos:line="89" pos:column="36">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="90" pos:column="25">buf<pos:position pos:line="90" pos:column="28"/></name><index pos:line="90" pos:column="28">[<expr><name pos:line="90" pos:column="29">n<pos:position pos:line="90" pos:column="30"/></name></expr>]<pos:position pos:line="90" pos:column="31"/></index></name> <operator pos:line="90" pos:column="32">=<pos:position pos:line="90" pos:column="33"/></operator> <literal type="char" pos:line="90" pos:column="34">' '<pos:position pos:line="90" pos:column="37"/></literal></expr>;<pos:position pos:line="90" pos:column="38"/></expr_stmt></block></then></if>
		<expr_stmt><expr><operator pos:line="91" pos:column="17">--<pos:position pos:line="91" pos:column="19"/></operator><name pos:line="91" pos:column="19">n<pos:position pos:line="91" pos:column="20"/></name></expr>;<pos:position pos:line="91" pos:column="21"/></expr_stmt>
	}<pos:position pos:line="92" pos:column="10"/></block></while>
	<return pos:line="93" pos:column="9">return <expr><name pos:line="93" pos:column="16">buf<pos:position pos:line="93" pos:column="19"/></name></expr>;<pos:position pos:line="93" pos:column="20"/></return>
}<pos:position pos:line="94" pos:column="2"/></block></function></unit>

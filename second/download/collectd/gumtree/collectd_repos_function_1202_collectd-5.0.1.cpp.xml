<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1202_collectd-5.0.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">rrd_cache_flush_identifier<pos:position pos:line="1" pos:column="38"/></name> <parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">cdtime_t<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">timeout<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>,
    <parameter><decl><type><specifier pos:line="2" pos:column="5">const<pos:position pos:line="2" pos:column="10"/></specifier> <name pos:line="2" pos:column="11">char<pos:position pos:line="2" pos:column="15"/></name> <modifier pos:line="2" pos:column="16">*<pos:position pos:line="2" pos:column="17"/></modifier></type><name pos:line="2" pos:column="17">identifier<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="28"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">rrd_cache_t<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">rc<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">cdtime_t<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">now<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">status<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type> <name><name pos:line="7" pos:column="8">key<pos:position pos:line="7" pos:column="11"/></name><index pos:line="7" pos:column="11">[<expr><literal type="number" pos:line="7" pos:column="12">2048<pos:position pos:line="7" pos:column="16"/></literal></expr>]<pos:position pos:line="7" pos:column="17"/></index></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">identifier<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">==<pos:position pos:line="9" pos:column="20"/></operator> <name pos:line="9" pos:column="21">NULL<pos:position pos:line="9" pos:column="25"/></name></expr>)<pos:position pos:line="9" pos:column="26"/></condition><then pos:line="9" pos:column="26">
  <block pos:line="10" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">rrd_cache_flush<pos:position pos:line="11" pos:column="20"/></name> <argument_list pos:line="11" pos:column="21">(<argument><expr><name pos:line="11" pos:column="22">timeout<pos:position pos:line="11" pos:column="29"/></name></expr></argument>)<pos:position pos:line="11" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">(<pos:position pos:line="12" pos:column="13"/></operator><literal type="number" pos:line="12" pos:column="13">0<pos:position pos:line="12" pos:column="14"/></literal><operator pos:line="12" pos:column="14">)<pos:position pos:line="12" pos:column="15"/></operator></expr>;<pos:position pos:line="12" pos:column="16"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="15" pos:column="3">now<pos:position pos:line="15" pos:column="6"/></name> <operator pos:line="15" pos:column="7">=<pos:position pos:line="15" pos:column="8"/></operator> <call><name pos:line="15" pos:column="9">cdtime<pos:position pos:line="15" pos:column="15"/></name> <argument_list pos:line="15" pos:column="16">()<pos:position pos:line="15" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="19"/></expr_stmt>

  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">datadir<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">==<pos:position pos:line="17" pos:column="17"/></operator> <name pos:line="17" pos:column="18">NULL<pos:position pos:line="17" pos:column="22"/></name></expr>)<pos:position pos:line="17" pos:column="23"/></condition><then pos:line="17" pos:column="23">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="5">snprintf<pos:position pos:line="18" pos:column="13"/></name> <argument_list pos:line="18" pos:column="14">(<argument><expr><name pos:line="18" pos:column="15">key<pos:position pos:line="18" pos:column="18"/></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="20">sizeof <argument_list pos:line="18" pos:column="27">(<argument><expr><name pos:line="18" pos:column="28">key<pos:position pos:line="18" pos:column="31"/></name></expr></argument>)<pos:position pos:line="18" pos:column="32"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="34">"%s.rrd"<pos:position pos:line="18" pos:column="42"/></literal></expr></argument>,
        <argument><expr><name pos:line="19" pos:column="9">identifier<pos:position pos:line="19" pos:column="19"/></name></expr></argument>)<pos:position pos:line="19" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="21"/></expr_stmt></block></then>
  <else pos:line="20" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="5">snprintf<pos:position pos:line="21" pos:column="13"/></name> <argument_list pos:line="21" pos:column="14">(<argument><expr><name pos:line="21" pos:column="15">key<pos:position pos:line="21" pos:column="18"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="20">sizeof <argument_list pos:line="21" pos:column="27">(<argument><expr><name pos:line="21" pos:column="28">key<pos:position pos:line="21" pos:column="31"/></name></expr></argument>)<pos:position pos:line="21" pos:column="32"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="34">"%s/%s.rrd"<pos:position pos:line="21" pos:column="45"/></literal></expr></argument>,
        <argument><expr><name pos:line="22" pos:column="9">datadir<pos:position pos:line="22" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="18">identifier<pos:position pos:line="22" pos:column="28"/></name></expr></argument>)<pos:position pos:line="22" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="30"/></expr_stmt></block></else></if>
  <expr_stmt><expr><name><name pos:line="23" pos:column="3">key<pos:position pos:line="23" pos:column="6"/></name><index pos:line="23" pos:column="6">[<expr><sizeof pos:line="23" pos:column="7">sizeof <argument_list pos:line="23" pos:column="14">(<argument><expr><name pos:line="23" pos:column="15">key<pos:position pos:line="23" pos:column="18"/></name></expr></argument>)<pos:position pos:line="23" pos:column="19"/></argument_list></sizeof> <operator pos:line="23" pos:column="20">-<pos:position pos:line="23" pos:column="21"/></operator> <literal type="number" pos:line="23" pos:column="22">1<pos:position pos:line="23" pos:column="23"/></literal></expr>]<pos:position pos:line="23" pos:column="24"/></index></name> <operator pos:line="23" pos:column="25">=<pos:position pos:line="23" pos:column="26"/></operator> <literal type="number" pos:line="23" pos:column="27">0<pos:position pos:line="23" pos:column="28"/></literal></expr>;<pos:position pos:line="23" pos:column="29"/></expr_stmt>

  <expr_stmt><expr><name pos:line="25" pos:column="3">status<pos:position pos:line="25" pos:column="9"/></name> <operator pos:line="25" pos:column="10">=<pos:position pos:line="25" pos:column="11"/></operator> <call><name pos:line="25" pos:column="12">c_avl_get<pos:position pos:line="25" pos:column="21"/></name> <argument_list pos:line="25" pos:column="22">(<argument><expr><name pos:line="25" pos:column="23">cache<pos:position pos:line="25" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="30">key<pos:position pos:line="25" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="35">(<pos:position pos:line="25" pos:column="36"/></operator><name pos:line="25" pos:column="36">void<pos:position pos:line="25" pos:column="40"/></name> <operator pos:line="25" pos:column="41">*<pos:position pos:line="25" pos:column="42"/></operator><operator pos:line="25" pos:column="42">)<pos:position pos:line="25" pos:column="43"/></operator> <operator pos:line="25" pos:column="44">&amp;<pos:position pos:line="25" pos:column="49"/></operator><name pos:line="25" pos:column="45">rc<pos:position pos:line="25" pos:column="47"/></name></expr></argument>)<pos:position pos:line="25" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="49"/></expr_stmt>
  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><name pos:line="26" pos:column="7">status<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">!=<pos:position pos:line="26" pos:column="16"/></operator> <literal type="number" pos:line="26" pos:column="17">0<pos:position pos:line="26" pos:column="18"/></literal></expr>)<pos:position pos:line="26" pos:column="19"/></condition><then pos:line="26" pos:column="19">
  <block pos:line="27" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">INFO<pos:position pos:line="28" pos:column="9"/></name> <argument_list pos:line="28" pos:column="10">(<argument><expr><literal type="string" pos:line="28" pos:column="11">"rrdtool plugin: rrd_cache_flush_identifier: "<pos:position pos:line="28" pos:column="57"/></literal>
        <literal type="string" pos:line="29" pos:column="9">"c_avl_get (%s) failed. Does that file really exist?"<pos:position pos:line="29" pos:column="62"/></literal></expr></argument>,
        <argument><expr><name pos:line="30" pos:column="9">key<pos:position pos:line="30" pos:column="12"/></name></expr></argument>)<pos:position pos:line="30" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="14"/></expr_stmt>
    <return pos:line="31" pos:column="5">return <expr><operator pos:line="31" pos:column="12">(<pos:position pos:line="31" pos:column="13"/></operator><name pos:line="31" pos:column="13">status<pos:position pos:line="31" pos:column="19"/></name><operator pos:line="31" pos:column="19">)<pos:position pos:line="31" pos:column="20"/></operator></expr>;<pos:position pos:line="31" pos:column="21"/></return>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if>

  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><name><name pos:line="34" pos:column="7">rc<pos:position pos:line="34" pos:column="9"/></name><operator pos:line="34" pos:column="9">-&gt;<pos:position pos:line="34" pos:column="14"/></operator><name pos:line="34" pos:column="11">flags<pos:position pos:line="34" pos:column="16"/></name></name> <operator pos:line="34" pos:column="17">==<pos:position pos:line="34" pos:column="19"/></operator> <name pos:line="34" pos:column="20">FLAG_FLUSHQ<pos:position pos:line="34" pos:column="31"/></name></expr>)<pos:position pos:line="34" pos:column="32"/></condition><then pos:line="34" pos:column="32">
  <block pos:line="35" pos:column="3">{
    <expr_stmt><expr><name pos:line="36" pos:column="5">status<pos:position pos:line="36" pos:column="11"/></name> <operator pos:line="36" pos:column="12">=<pos:position pos:line="36" pos:column="13"/></operator> <literal type="number" pos:line="36" pos:column="14">0<pos:position pos:line="36" pos:column="15"/></literal></expr>;<pos:position pos:line="36" pos:column="16"/></expr_stmt>
  }<pos:position pos:line="37" pos:column="4"/></block></then>
  <elseif pos:line="38" pos:column="3">else <if pos:line="38" pos:column="8">if <condition pos:line="38" pos:column="11">(<expr><name><name pos:line="38" pos:column="12">rc<pos:position pos:line="38" pos:column="14"/></name><operator pos:line="38" pos:column="14">-&gt;<pos:position pos:line="38" pos:column="19"/></operator><name pos:line="38" pos:column="16">flags<pos:position pos:line="38" pos:column="21"/></name></name> <operator pos:line="38" pos:column="22">==<pos:position pos:line="38" pos:column="24"/></operator> <name pos:line="38" pos:column="25">FLAG_QUEUED<pos:position pos:line="38" pos:column="36"/></name></expr>)<pos:position pos:line="38" pos:column="37"/></condition><then pos:line="38" pos:column="37">
  <block pos:line="39" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">rrd_queue_dequeue<pos:position pos:line="40" pos:column="22"/></name> <argument_list pos:line="40" pos:column="23">(<argument><expr><name pos:line="40" pos:column="24">key<pos:position pos:line="40" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="29">&amp;<pos:position pos:line="40" pos:column="34"/></operator><name pos:line="40" pos:column="30">queue_head<pos:position pos:line="40" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="42">&amp;<pos:position pos:line="40" pos:column="47"/></operator><name pos:line="40" pos:column="43">queue_tail<pos:position pos:line="40" pos:column="53"/></name></expr></argument>)<pos:position pos:line="40" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><name pos:line="41" pos:column="5">status<pos:position pos:line="41" pos:column="11"/></name> <operator pos:line="41" pos:column="12">=<pos:position pos:line="41" pos:column="13"/></operator> <call><name pos:line="41" pos:column="14">rrd_queue_enqueue<pos:position pos:line="41" pos:column="31"/></name> <argument_list pos:line="41" pos:column="32">(<argument><expr><name pos:line="41" pos:column="33">key<pos:position pos:line="41" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="38">&amp;<pos:position pos:line="41" pos:column="43"/></operator><name pos:line="41" pos:column="39">flushq_head<pos:position pos:line="41" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="52">&amp;<pos:position pos:line="41" pos:column="57"/></operator><name pos:line="41" pos:column="53">flushq_tail<pos:position pos:line="41" pos:column="64"/></name></expr></argument>)<pos:position pos:line="41" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="66"/></expr_stmt>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name pos:line="42" pos:column="9">status<pos:position pos:line="42" pos:column="15"/></name> <operator pos:line="42" pos:column="16">==<pos:position pos:line="42" pos:column="18"/></operator> <literal type="number" pos:line="42" pos:column="19">0<pos:position pos:line="42" pos:column="20"/></literal></expr>)<pos:position pos:line="42" pos:column="21"/></condition><then pos:line="42" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="43" pos:column="7">rc<pos:position pos:line="43" pos:column="9"/></name><operator pos:line="43" pos:column="9">-&gt;<pos:position pos:line="43" pos:column="14"/></operator><name pos:line="43" pos:column="11">flags<pos:position pos:line="43" pos:column="16"/></name></name> <operator pos:line="43" pos:column="17">=<pos:position pos:line="43" pos:column="18"/></operator> <name pos:line="43" pos:column="19">FLAG_FLUSHQ<pos:position pos:line="43" pos:column="30"/></name></expr>;<pos:position pos:line="43" pos:column="31"/></expr_stmt></block></then></if>
  }<pos:position pos:line="44" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="45" pos:column="3">else <if pos:line="45" pos:column="8">if <condition pos:line="45" pos:column="11">(<expr><operator pos:line="45" pos:column="12">(<pos:position pos:line="45" pos:column="13"/></operator><name pos:line="45" pos:column="13">now<pos:position pos:line="45" pos:column="16"/></name> <operator pos:line="45" pos:column="17">-<pos:position pos:line="45" pos:column="18"/></operator> <name><name pos:line="45" pos:column="19">rc<pos:position pos:line="45" pos:column="21"/></name><operator pos:line="45" pos:column="21">-&gt;<pos:position pos:line="45" pos:column="26"/></operator><name pos:line="45" pos:column="23">first_value<pos:position pos:line="45" pos:column="34"/></name></name><operator pos:line="45" pos:column="34">)<pos:position pos:line="45" pos:column="35"/></operator> <operator pos:line="45" pos:column="36">&lt;<pos:position pos:line="45" pos:column="40"/></operator> <name pos:line="45" pos:column="38">timeout<pos:position pos:line="45" pos:column="45"/></name></expr>)<pos:position pos:line="45" pos:column="46"/></condition><then pos:line="45" pos:column="46">
  <block pos:line="46" pos:column="3">{
    <expr_stmt><expr><name pos:line="47" pos:column="5">status<pos:position pos:line="47" pos:column="11"/></name> <operator pos:line="47" pos:column="12">=<pos:position pos:line="47" pos:column="13"/></operator> <literal type="number" pos:line="47" pos:column="14">0<pos:position pos:line="47" pos:column="15"/></literal></expr>;<pos:position pos:line="47" pos:column="16"/></expr_stmt>
  }<pos:position pos:line="48" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="49" pos:column="3">else <if pos:line="49" pos:column="8">if <condition pos:line="49" pos:column="11">(<expr><name><name pos:line="49" pos:column="12">rc<pos:position pos:line="49" pos:column="14"/></name><operator pos:line="49" pos:column="14">-&gt;<pos:position pos:line="49" pos:column="19"/></operator><name pos:line="49" pos:column="16">values_num<pos:position pos:line="49" pos:column="26"/></name></name> <operator pos:line="49" pos:column="27">&gt;<pos:position pos:line="49" pos:column="31"/></operator> <literal type="number" pos:line="49" pos:column="29">0<pos:position pos:line="49" pos:column="30"/></literal></expr>)<pos:position pos:line="49" pos:column="31"/></condition><then pos:line="49" pos:column="31">
  <block pos:line="50" pos:column="3">{
    <expr_stmt><expr><name pos:line="51" pos:column="5">status<pos:position pos:line="51" pos:column="11"/></name> <operator pos:line="51" pos:column="12">=<pos:position pos:line="51" pos:column="13"/></operator> <call><name pos:line="51" pos:column="14">rrd_queue_enqueue<pos:position pos:line="51" pos:column="31"/></name> <argument_list pos:line="51" pos:column="32">(<argument><expr><name pos:line="51" pos:column="33">key<pos:position pos:line="51" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="38">&amp;<pos:position pos:line="51" pos:column="43"/></operator><name pos:line="51" pos:column="39">flushq_head<pos:position pos:line="51" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="52">&amp;<pos:position pos:line="51" pos:column="57"/></operator><name pos:line="51" pos:column="53">flushq_tail<pos:position pos:line="51" pos:column="64"/></name></expr></argument>)<pos:position pos:line="51" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="66"/></expr_stmt>
    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><name pos:line="52" pos:column="9">status<pos:position pos:line="52" pos:column="15"/></name> <operator pos:line="52" pos:column="16">==<pos:position pos:line="52" pos:column="18"/></operator> <literal type="number" pos:line="52" pos:column="19">0<pos:position pos:line="52" pos:column="20"/></literal></expr>)<pos:position pos:line="52" pos:column="21"/></condition><then pos:line="52" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="53" pos:column="7">rc<pos:position pos:line="53" pos:column="9"/></name><operator pos:line="53" pos:column="9">-&gt;<pos:position pos:line="53" pos:column="14"/></operator><name pos:line="53" pos:column="11">flags<pos:position pos:line="53" pos:column="16"/></name></name> <operator pos:line="53" pos:column="17">=<pos:position pos:line="53" pos:column="18"/></operator> <name pos:line="53" pos:column="19">FLAG_FLUSHQ<pos:position pos:line="53" pos:column="30"/></name></expr>;<pos:position pos:line="53" pos:column="31"/></expr_stmt></block></then></if>
  }<pos:position pos:line="54" pos:column="4"/></block></then></if></elseif></if>

  <return pos:line="56" pos:column="3">return <expr><operator pos:line="56" pos:column="10">(<pos:position pos:line="56" pos:column="11"/></operator><name pos:line="56" pos:column="11">status<pos:position pos:line="56" pos:column="17"/></name><operator pos:line="56" pos:column="17">)<pos:position pos:line="56" pos:column="18"/></operator></expr>;<pos:position pos:line="56" pos:column="19"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_420_collectd-4.3.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">xs_init<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">pTHX<pos:position pos:line="1" pos:column="26"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="27"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">HV<pos:position pos:line="3" pos:column="11"/></name>   <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">stash<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><name pos:line="3" pos:column="23">NULL<pos:position pos:line="3" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">SV<pos:position pos:line="4" pos:column="11"/></name>   <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">tmp<pos:position pos:line="4" pos:column="18"/></name>   <init pos:line="4" pos:column="21">= <expr><name pos:line="4" pos:column="23">NULL<pos:position pos:line="4" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">file<pos:position pos:line="5" pos:column="19"/></name>  <init pos:line="5" pos:column="21">= <expr><name pos:line="5" pos:column="23">__FILE__<pos:position pos:line="5" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">i<pos:position pos:line="7" pos:column="14"/></name> <init pos:line="7" pos:column="15">= <expr><literal type="number" pos:line="7" pos:column="17">0<pos:position pos:line="7" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>

	<expr_stmt><expr><name pos:line="9" pos:column="9">dXSUB_SYS<pos:position pos:line="9" pos:column="18"/></name></expr>;<pos:position pos:line="9" pos:column="19"/></expr_stmt>

	<comment type="block" pos:line="11" pos:column="9">/* enable usage of Perl modules using shared libraries */</comment>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">newXS<pos:position pos:line="12" pos:column="14"/></name> <argument_list pos:line="12" pos:column="15">(<argument><expr><literal type="string" pos:line="12" pos:column="16">"DynaLoader::boot_DynaLoader"<pos:position pos:line="12" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="47">boot_DynaLoader<pos:position pos:line="12" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="64">file<pos:position pos:line="12" pos:column="68"/></name></expr></argument>)<pos:position pos:line="12" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="70"/></expr_stmt>

	<comment type="block" pos:line="14" pos:column="9">/* register API */</comment>
	<for pos:line="15" pos:column="9">for <control pos:line="15" pos:column="13">(<init><expr><name pos:line="15" pos:column="14">i<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <literal type="number" pos:line="15" pos:column="18">0<pos:position pos:line="15" pos:column="19"/></literal></expr>;<pos:position pos:line="15" pos:column="20"/></init> <condition><expr><name pos:line="15" pos:column="21">NULL<pos:position pos:line="15" pos:column="25"/></name> <operator pos:line="15" pos:column="26">!=<pos:position pos:line="15" pos:column="28"/></operator> <name><name pos:line="15" pos:column="29">api<pos:position pos:line="15" pos:column="32"/></name><index pos:line="15" pos:column="32">[<expr><name pos:line="15" pos:column="33">i<pos:position pos:line="15" pos:column="34"/></name></expr>]<pos:position pos:line="15" pos:column="35"/></index></name><operator pos:line="15" pos:column="35">.<pos:position pos:line="15" pos:column="36"/></operator><name pos:line="15" pos:column="36">f<pos:position pos:line="15" pos:column="37"/></name></expr>;<pos:position pos:line="15" pos:column="38"/></condition> <incr><expr><operator pos:line="15" pos:column="39">++<pos:position pos:line="15" pos:column="41"/></operator><name pos:line="15" pos:column="41">i<pos:position pos:line="15" pos:column="42"/></name></expr></incr>)<pos:position pos:line="15" pos:column="43"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="17">newXS<pos:position pos:line="16" pos:column="22"/></name> <argument_list pos:line="16" pos:column="23">(<argument><expr><name><name pos:line="16" pos:column="24">api<pos:position pos:line="16" pos:column="27"/></name><index pos:line="16" pos:column="27">[<expr><name pos:line="16" pos:column="28">i<pos:position pos:line="16" pos:column="29"/></name></expr>]<pos:position pos:line="16" pos:column="30"/></index></name><operator pos:line="16" pos:column="30">.<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="31">name<pos:position pos:line="16" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="37">api<pos:position pos:line="16" pos:column="40"/></name><index pos:line="16" pos:column="40">[<expr><name pos:line="16" pos:column="41">i<pos:position pos:line="16" pos:column="42"/></name></expr>]<pos:position pos:line="16" pos:column="43"/></index></name><operator pos:line="16" pos:column="43">.<pos:position pos:line="16" pos:column="44"/></operator><name pos:line="16" pos:column="44">f<pos:position pos:line="16" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="47">file<pos:position pos:line="16" pos:column="51"/></name></expr></argument>)<pos:position pos:line="16" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="53"/></expr_stmt></block></for>

	<expr_stmt><expr><name pos:line="18" pos:column="9">stash<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">=<pos:position pos:line="18" pos:column="16"/></operator> <call><name pos:line="18" pos:column="17">gv_stashpv<pos:position pos:line="18" pos:column="27"/></name> <argument_list pos:line="18" pos:column="28">(<argument><expr><literal type="string" pos:line="18" pos:column="29">"Collectd"<pos:position pos:line="18" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="41">1<pos:position pos:line="18" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="44"/></expr_stmt>

	<comment type="block" pos:line="20" pos:column="9">/* export "constants" */</comment>
	<for pos:line="21" pos:column="9">for <control pos:line="21" pos:column="13">(<init><expr><name pos:line="21" pos:column="14">i<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <literal type="number" pos:line="21" pos:column="18">0<pos:position pos:line="21" pos:column="19"/></literal></expr>;<pos:position pos:line="21" pos:column="20"/></init> <condition><expr><literal type="char" pos:line="21" pos:column="21">'\0'<pos:position pos:line="21" pos:column="25"/></literal> <operator pos:line="21" pos:column="26">!=<pos:position pos:line="21" pos:column="28"/></operator> <name><name pos:line="21" pos:column="29">constants<pos:position pos:line="21" pos:column="38"/></name><index pos:line="21" pos:column="38">[<expr><name pos:line="21" pos:column="39">i<pos:position pos:line="21" pos:column="40"/></name></expr>]<pos:position pos:line="21" pos:column="41"/></index></name><operator pos:line="21" pos:column="41">.<pos:position pos:line="21" pos:column="42"/></operator><name><name pos:line="21" pos:column="42">name<pos:position pos:line="21" pos:column="46"/></name><index pos:line="21" pos:column="46">[<expr><literal type="number" pos:line="21" pos:column="47">0<pos:position pos:line="21" pos:column="48"/></literal></expr>]<pos:position pos:line="21" pos:column="49"/></index></name></expr>;<pos:position pos:line="21" pos:column="50"/></condition> <incr><expr><operator pos:line="21" pos:column="51">++<pos:position pos:line="21" pos:column="53"/></operator><name pos:line="21" pos:column="53">i<pos:position pos:line="21" pos:column="54"/></name></expr></incr>)<pos:position pos:line="21" pos:column="55"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="17">newCONSTSUB<pos:position pos:line="22" pos:column="28"/></name> <argument_list pos:line="22" pos:column="29">(<argument><expr><name pos:line="22" pos:column="30">stash<pos:position pos:line="22" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="37">constants<pos:position pos:line="22" pos:column="46"/></name><index pos:line="22" pos:column="46">[<expr><name pos:line="22" pos:column="47">i<pos:position pos:line="22" pos:column="48"/></name></expr>]<pos:position pos:line="22" pos:column="49"/></index></name><operator pos:line="22" pos:column="49">.<pos:position pos:line="22" pos:column="50"/></operator><name pos:line="22" pos:column="50">name<pos:position pos:line="22" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="56">newSViv<pos:position pos:line="22" pos:column="63"/></name> <argument_list pos:line="22" pos:column="64">(<argument><expr><name><name pos:line="22" pos:column="65">constants<pos:position pos:line="22" pos:column="74"/></name><index pos:line="22" pos:column="74">[<expr><name pos:line="22" pos:column="75">i<pos:position pos:line="22" pos:column="76"/></name></expr>]<pos:position pos:line="22" pos:column="77"/></index></name><operator pos:line="22" pos:column="77">.<pos:position pos:line="22" pos:column="78"/></operator><name pos:line="22" pos:column="78">value<pos:position pos:line="22" pos:column="83"/></name></expr></argument>)<pos:position pos:line="22" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="86"/></expr_stmt></block></for>

	<comment type="block" pos:line="24" pos:column="9">/* export global variables
	 * by adding "magic" to the SV's representing the globale variables
	 * perl is able to automagically call the get/set function when
	 * accessing any such variable (this is basically the same as using
	 * tie() in Perl) */</comment>
	<comment type="block" pos:line="29" pos:column="9">/* global strings */</comment>
	<for pos:line="30" pos:column="9">for <control pos:line="30" pos:column="13">(<init><expr><name pos:line="30" pos:column="14">i<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <literal type="number" pos:line="30" pos:column="18">0<pos:position pos:line="30" pos:column="19"/></literal></expr>;<pos:position pos:line="30" pos:column="20"/></init> <condition><expr><literal type="char" pos:line="30" pos:column="21">'\0'<pos:position pos:line="30" pos:column="25"/></literal> <operator pos:line="30" pos:column="26">!=<pos:position pos:line="30" pos:column="28"/></operator> <name><name pos:line="30" pos:column="29">g_strings<pos:position pos:line="30" pos:column="38"/></name><index pos:line="30" pos:column="38">[<expr><name pos:line="30" pos:column="39">i<pos:position pos:line="30" pos:column="40"/></name></expr>]<pos:position pos:line="30" pos:column="41"/></index></name><operator pos:line="30" pos:column="41">.<pos:position pos:line="30" pos:column="42"/></operator><name><name pos:line="30" pos:column="42">name<pos:position pos:line="30" pos:column="46"/></name><index pos:line="30" pos:column="46">[<expr><literal type="number" pos:line="30" pos:column="47">0<pos:position pos:line="30" pos:column="48"/></literal></expr>]<pos:position pos:line="30" pos:column="49"/></index></name></expr>;<pos:position pos:line="30" pos:column="50"/></condition> <incr><expr><operator pos:line="30" pos:column="51">++<pos:position pos:line="30" pos:column="53"/></operator><name pos:line="30" pos:column="53">i<pos:position pos:line="30" pos:column="54"/></name></expr></incr>)<pos:position pos:line="30" pos:column="55"/></control> <block pos:line="30" pos:column="56">{
		<expr_stmt><expr><name pos:line="31" pos:column="17">tmp<pos:position pos:line="31" pos:column="20"/></name> <operator pos:line="31" pos:column="21">=<pos:position pos:line="31" pos:column="22"/></operator> <call><name pos:line="31" pos:column="23">get_sv<pos:position pos:line="31" pos:column="29"/></name> <argument_list pos:line="31" pos:column="30">(<argument><expr><name><name pos:line="31" pos:column="31">g_strings<pos:position pos:line="31" pos:column="40"/></name><index pos:line="31" pos:column="40">[<expr><name pos:line="31" pos:column="41">i<pos:position pos:line="31" pos:column="42"/></name></expr>]<pos:position pos:line="31" pos:column="43"/></index></name><operator pos:line="31" pos:column="43">.<pos:position pos:line="31" pos:column="44"/></operator><name pos:line="31" pos:column="44">name<pos:position pos:line="31" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="50">1<pos:position pos:line="31" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="32" pos:column="17">sv_magicext<pos:position pos:line="32" pos:column="28"/></name> <argument_list pos:line="32" pos:column="29">(<argument><expr><name pos:line="32" pos:column="30">tmp<pos:position pos:line="32" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="35">NULL<pos:position pos:line="32" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="41">PERL_MAGIC_ext<pos:position pos:line="32" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="57">&amp;<pos:position pos:line="32" pos:column="62"/></operator><name pos:line="32" pos:column="58">g_pv_vtbl<pos:position pos:line="32" pos:column="67"/></name></expr></argument>,
				<argument><expr><name><name pos:line="33" pos:column="33">g_strings<pos:position pos:line="33" pos:column="42"/></name><index pos:line="33" pos:column="42">[<expr><name pos:line="33" pos:column="43">i<pos:position pos:line="33" pos:column="44"/></name></expr>]<pos:position pos:line="33" pos:column="45"/></index></name><operator pos:line="33" pos:column="45">.<pos:position pos:line="33" pos:column="46"/></operator><name pos:line="33" pos:column="46">var<pos:position pos:line="33" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="51">0<pos:position pos:line="33" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="54"/></expr_stmt>
	}<pos:position pos:line="34" pos:column="10"/></block></for>

	<comment type="block" pos:line="36" pos:column="9">/* global integers */</comment>
	<for pos:line="37" pos:column="9">for <control pos:line="37" pos:column="13">(<init><expr><name pos:line="37" pos:column="14">i<pos:position pos:line="37" pos:column="15"/></name> <operator pos:line="37" pos:column="16">=<pos:position pos:line="37" pos:column="17"/></operator> <literal type="number" pos:line="37" pos:column="18">0<pos:position pos:line="37" pos:column="19"/></literal></expr>;<pos:position pos:line="37" pos:column="20"/></init> <condition><expr><literal type="char" pos:line="37" pos:column="21">'\0'<pos:position pos:line="37" pos:column="25"/></literal> <operator pos:line="37" pos:column="26">!=<pos:position pos:line="37" pos:column="28"/></operator> <name><name pos:line="37" pos:column="29">g_integers<pos:position pos:line="37" pos:column="39"/></name><index pos:line="37" pos:column="39">[<expr><name pos:line="37" pos:column="40">i<pos:position pos:line="37" pos:column="41"/></name></expr>]<pos:position pos:line="37" pos:column="42"/></index></name><operator pos:line="37" pos:column="42">.<pos:position pos:line="37" pos:column="43"/></operator><name><name pos:line="37" pos:column="43">name<pos:position pos:line="37" pos:column="47"/></name><index pos:line="37" pos:column="47">[<expr><literal type="number" pos:line="37" pos:column="48">0<pos:position pos:line="37" pos:column="49"/></literal></expr>]<pos:position pos:line="37" pos:column="50"/></index></name></expr>;<pos:position pos:line="37" pos:column="51"/></condition> <incr><expr><operator pos:line="37" pos:column="52">++<pos:position pos:line="37" pos:column="54"/></operator><name pos:line="37" pos:column="54">i<pos:position pos:line="37" pos:column="55"/></name></expr></incr>)<pos:position pos:line="37" pos:column="56"/></control> <block pos:line="37" pos:column="57">{
		<expr_stmt><expr><name pos:line="38" pos:column="17">tmp<pos:position pos:line="38" pos:column="20"/></name> <operator pos:line="38" pos:column="21">=<pos:position pos:line="38" pos:column="22"/></operator> <call><name pos:line="38" pos:column="23">get_sv<pos:position pos:line="38" pos:column="29"/></name> <argument_list pos:line="38" pos:column="30">(<argument><expr><name><name pos:line="38" pos:column="31">g_integers<pos:position pos:line="38" pos:column="41"/></name><index pos:line="38" pos:column="41">[<expr><name pos:line="38" pos:column="42">i<pos:position pos:line="38" pos:column="43"/></name></expr>]<pos:position pos:line="38" pos:column="44"/></index></name><operator pos:line="38" pos:column="44">.<pos:position pos:line="38" pos:column="45"/></operator><name pos:line="38" pos:column="45">name<pos:position pos:line="38" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="51">1<pos:position pos:line="38" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="39" pos:column="17">sv_magicext<pos:position pos:line="39" pos:column="28"/></name> <argument_list pos:line="39" pos:column="29">(<argument><expr><name pos:line="39" pos:column="30">tmp<pos:position pos:line="39" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="35">NULL<pos:position pos:line="39" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="41">PERL_MAGIC_ext<pos:position pos:line="39" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="57">&amp;<pos:position pos:line="39" pos:column="62"/></operator><name pos:line="39" pos:column="58">g_iv_vtbl<pos:position pos:line="39" pos:column="67"/></name></expr></argument>,
				<argument><expr><operator pos:line="40" pos:column="33">(<pos:position pos:line="40" pos:column="34"/></operator><name pos:line="40" pos:column="34">char<pos:position pos:line="40" pos:column="38"/></name> <operator pos:line="40" pos:column="39">*<pos:position pos:line="40" pos:column="40"/></operator><operator pos:line="40" pos:column="40">)<pos:position pos:line="40" pos:column="41"/></operator><name><name pos:line="40" pos:column="41">g_integers<pos:position pos:line="40" pos:column="51"/></name><index pos:line="40" pos:column="51">[<expr><name pos:line="40" pos:column="52">i<pos:position pos:line="40" pos:column="53"/></name></expr>]<pos:position pos:line="40" pos:column="54"/></index></name><operator pos:line="40" pos:column="54">.<pos:position pos:line="40" pos:column="55"/></operator><name pos:line="40" pos:column="55">var<pos:position pos:line="40" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="60">0<pos:position pos:line="40" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="63"/></expr_stmt>
	}<pos:position pos:line="41" pos:column="10"/></block></for>
	<return pos:line="42" pos:column="9">return;<pos:position pos:line="42" pos:column="16"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

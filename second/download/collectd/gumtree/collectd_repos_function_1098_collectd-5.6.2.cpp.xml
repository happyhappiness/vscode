<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1098_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">submit_volume_perf_data<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">hostname<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="58">/* {{{ */</comment>
                                   <parameter><decl><type><name pos:line="2" pos:column="36">data_volume_perf_t<pos:position pos:line="2" pos:column="54"/></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="56">old_data<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>,
                                   <parameter><decl><type><specifier pos:line="3" pos:column="36">const<pos:position pos:line="3" pos:column="41"/></specifier> <name pos:line="3" pos:column="42">data_volume_perf_t<pos:position pos:line="3" pos:column="60"/></name> <modifier pos:line="3" pos:column="61">*<pos:position pos:line="3" pos:column="62"/></modifier></type><name pos:line="3" pos:column="62">new_data<pos:position pos:line="3" pos:column="70"/></name></decl></parameter>,
                                   <parameter><decl><type><name pos:line="4" pos:column="36">int<pos:position pos:line="4" pos:column="39"/></name></type> <name pos:line="4" pos:column="40">interval<pos:position pos:line="4" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="49"/></parameter_list> <block pos:line="4" pos:column="50">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">plugin_instance<pos:position pos:line="5" pos:column="23"/></name><index pos:line="5" pos:column="23">[<expr><name pos:line="5" pos:column="24">DATA_MAX_NAME_LEN<pos:position pos:line="5" pos:column="41"/></name></expr>]<pos:position pos:line="5" pos:column="42"/></index></name></decl>;<pos:position pos:line="5" pos:column="43"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><operator pos:line="7" pos:column="7">(<pos:position pos:line="7" pos:column="8"/></operator><name pos:line="7" pos:column="8">hostname<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">==<pos:position pos:line="7" pos:column="19"/></operator> <name pos:line="7" pos:column="20">NULL<pos:position pos:line="7" pos:column="24"/></name><operator pos:line="7" pos:column="24">)<pos:position pos:line="7" pos:column="25"/></operator> <operator pos:line="7" pos:column="26">||<pos:position pos:line="7" pos:column="28"/></operator> <operator pos:line="7" pos:column="29">(<pos:position pos:line="7" pos:column="30"/></operator><name pos:line="7" pos:column="30">old_data<pos:position pos:line="7" pos:column="38"/></name> <operator pos:line="7" pos:column="39">==<pos:position pos:line="7" pos:column="41"/></operator> <name pos:line="7" pos:column="42">NULL<pos:position pos:line="7" pos:column="46"/></name><operator pos:line="7" pos:column="46">)<pos:position pos:line="7" pos:column="47"/></operator> <operator pos:line="7" pos:column="48">||<pos:position pos:line="7" pos:column="50"/></operator> <operator pos:line="7" pos:column="51">(<pos:position pos:line="7" pos:column="52"/></operator><name pos:line="7" pos:column="52">new_data<pos:position pos:line="7" pos:column="60"/></name> <operator pos:line="7" pos:column="61">==<pos:position pos:line="7" pos:column="63"/></operator> <name pos:line="7" pos:column="64">NULL<pos:position pos:line="7" pos:column="68"/></name><operator pos:line="7" pos:column="68">)<pos:position pos:line="7" pos:column="69"/></operator></expr>)<pos:position pos:line="7" pos:column="70"/></condition><then pos:line="7" pos:column="70">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><operator pos:line="8" pos:column="13">-<pos:position pos:line="8" pos:column="14"/></operator><literal type="number" pos:line="8" pos:column="14">1<pos:position pos:line="8" pos:column="15"/></literal><operator pos:line="8" pos:column="15">)<pos:position pos:line="8" pos:column="16"/></operator></expr>;<pos:position pos:line="8" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="10" pos:column="3">ssnprintf<pos:position pos:line="10" pos:column="12"/></name><argument_list pos:line="10" pos:column="12">(<argument><expr><name pos:line="10" pos:column="13">plugin_instance<pos:position pos:line="10" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="30">sizeof<argument_list pos:line="10" pos:column="36">(<argument><expr><name pos:line="10" pos:column="37">plugin_instance<pos:position pos:line="10" pos:column="52"/></name></expr></argument>)<pos:position pos:line="10" pos:column="53"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="55">"volume-%s"<pos:position pos:line="10" pos:column="66"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="11" pos:column="13">old_data<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">-&gt;<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="23">name<pos:position pos:line="11" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="29"/></expr_stmt>

  <comment type="block" pos:line="13" pos:column="3">/* Check for and submit disk-octet values */</comment>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><call><name pos:line="14" pos:column="7">HAS_ALL_FLAGS<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><name><name pos:line="14" pos:column="21">old_data<pos:position pos:line="14" pos:column="29"/></name><operator pos:line="14" pos:column="29">-&gt;<pos:position pos:line="14" pos:column="34"/></operator><name pos:line="14" pos:column="31">flags<pos:position pos:line="14" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="38">CFG_VOLUME_PERF_IO<pos:position pos:line="14" pos:column="56"/></name></expr></argument>)<pos:position pos:line="14" pos:column="57"/></argument_list></call> <operator pos:line="14" pos:column="58">&amp;&amp;<pos:position pos:line="14" pos:column="68"/></operator>
      <call><name pos:line="15" pos:column="7">HAS_ALL_FLAGS<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><name><name pos:line="15" pos:column="21">new_data<pos:position pos:line="15" pos:column="29"/></name><operator pos:line="15" pos:column="29">-&gt;<pos:position pos:line="15" pos:column="34"/></operator><name pos:line="15" pos:column="31">flags<pos:position pos:line="15" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="38">HAVE_VOLUME_PERF_BYTES_READ<pos:position pos:line="15" pos:column="65"/></name> <operator pos:line="15" pos:column="66">|<pos:position pos:line="15" pos:column="67"/></operator>
                                         <name pos:line="16" pos:column="42">HAVE_VOLUME_PERF_BYTES_WRITE<pos:position pos:line="16" pos:column="70"/></name></expr></argument>)<pos:position pos:line="16" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="72"/></condition><then pos:line="16" pos:column="72"> <block pos:line="16" pos:column="73">{
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">submit_two_derive<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(
        <argument><expr><name pos:line="18" pos:column="9">hostname<pos:position pos:line="18" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="19">plugin_instance<pos:position pos:line="18" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="36">"disk_octets"<pos:position pos:line="18" pos:column="49"/></literal></expr></argument>, <comment type="block" pos:line="18" pos:column="51">/* type instance = */</comment> <argument><expr><name pos:line="18" pos:column="73">NULL<pos:position pos:line="18" pos:column="77"/></name></expr></argument>,
        <argument><expr><operator pos:line="19" pos:column="9">(<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">derive_t<pos:position pos:line="19" pos:column="18"/></name><operator pos:line="19" pos:column="18">)<pos:position pos:line="19" pos:column="19"/></operator><name><name pos:line="19" pos:column="19">new_data<pos:position pos:line="19" pos:column="27"/></name><operator pos:line="19" pos:column="27">-&gt;<pos:position pos:line="19" pos:column="32"/></operator><name pos:line="19" pos:column="29">read_bytes<pos:position pos:line="19" pos:column="39"/></name></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="41">(<pos:position pos:line="19" pos:column="42"/></operator><name pos:line="19" pos:column="42">derive_t<pos:position pos:line="19" pos:column="50"/></name><operator pos:line="19" pos:column="50">)<pos:position pos:line="19" pos:column="51"/></operator><name><name pos:line="19" pos:column="51">new_data<pos:position pos:line="19" pos:column="59"/></name><operator pos:line="19" pos:column="59">-&gt;<pos:position pos:line="19" pos:column="64"/></operator><name pos:line="19" pos:column="61">write_bytes<pos:position pos:line="19" pos:column="72"/></name></name></expr></argument>,
        <argument><expr><name><name pos:line="20" pos:column="9">new_data<pos:position pos:line="20" pos:column="17"/></name><operator pos:line="20" pos:column="17">-&gt;<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="19">timestamp<pos:position pos:line="20" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="30">interval<pos:position pos:line="20" pos:column="38"/></name></expr></argument>)<pos:position pos:line="20" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="40"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="23" pos:column="3">/* Check for and submit disk-operations values */</comment>
  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><call><name pos:line="24" pos:column="7">HAS_ALL_FLAGS<pos:position pos:line="24" pos:column="20"/></name><argument_list pos:line="24" pos:column="20">(<argument><expr><name><name pos:line="24" pos:column="21">old_data<pos:position pos:line="24" pos:column="29"/></name><operator pos:line="24" pos:column="29">-&gt;<pos:position pos:line="24" pos:column="34"/></operator><name pos:line="24" pos:column="31">flags<pos:position pos:line="24" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="38">CFG_VOLUME_PERF_OPS<pos:position pos:line="24" pos:column="57"/></name></expr></argument>)<pos:position pos:line="24" pos:column="58"/></argument_list></call> <operator pos:line="24" pos:column="59">&amp;&amp;<pos:position pos:line="24" pos:column="69"/></operator>
      <call><name pos:line="25" pos:column="7">HAS_ALL_FLAGS<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><name><name pos:line="25" pos:column="21">new_data<pos:position pos:line="25" pos:column="29"/></name><operator pos:line="25" pos:column="29">-&gt;<pos:position pos:line="25" pos:column="34"/></operator><name pos:line="25" pos:column="31">flags<pos:position pos:line="25" pos:column="36"/></name></name></expr></argument>,
                    <argument><expr><name pos:line="26" pos:column="21">HAVE_VOLUME_PERF_OPS_READ<pos:position pos:line="26" pos:column="46"/></name> <operator pos:line="26" pos:column="47">|<pos:position pos:line="26" pos:column="48"/></operator> <name pos:line="26" pos:column="49">HAVE_VOLUME_PERF_OPS_WRITE<pos:position pos:line="26" pos:column="75"/></name></expr></argument>)<pos:position pos:line="26" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="77"/></condition><then pos:line="26" pos:column="77"> <block pos:line="26" pos:column="78">{
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">submit_two_derive<pos:position pos:line="27" pos:column="22"/></name><argument_list pos:line="27" pos:column="22">(<argument><expr><name pos:line="27" pos:column="23">hostname<pos:position pos:line="27" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="33">plugin_instance<pos:position pos:line="27" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="50">"disk_ops"<pos:position pos:line="27" pos:column="60"/></literal></expr></argument>,
                      <comment type="block" pos:line="28" pos:column="23">/* type instance = */</comment> <argument><expr><name pos:line="28" pos:column="45">NULL<pos:position pos:line="28" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="51">(<pos:position pos:line="28" pos:column="52"/></operator><name pos:line="28" pos:column="52">derive_t<pos:position pos:line="28" pos:column="60"/></name><operator pos:line="28" pos:column="60">)<pos:position pos:line="28" pos:column="61"/></operator><name><name pos:line="28" pos:column="61">new_data<pos:position pos:line="28" pos:column="69"/></name><operator pos:line="28" pos:column="69">-&gt;<pos:position pos:line="28" pos:column="74"/></operator><name pos:line="28" pos:column="71">read_ops<pos:position pos:line="28" pos:column="79"/></name></name></expr></argument>,
                      <argument><expr><operator pos:line="29" pos:column="23">(<pos:position pos:line="29" pos:column="24"/></operator><name pos:line="29" pos:column="24">derive_t<pos:position pos:line="29" pos:column="32"/></name><operator pos:line="29" pos:column="32">)<pos:position pos:line="29" pos:column="33"/></operator><name><name pos:line="29" pos:column="33">new_data<pos:position pos:line="29" pos:column="41"/></name><operator pos:line="29" pos:column="41">-&gt;<pos:position pos:line="29" pos:column="46"/></operator><name pos:line="29" pos:column="43">write_ops<pos:position pos:line="29" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="54">new_data<pos:position pos:line="29" pos:column="62"/></name><operator pos:line="29" pos:column="62">-&gt;<pos:position pos:line="29" pos:column="67"/></operator><name pos:line="29" pos:column="64">timestamp<pos:position pos:line="29" pos:column="73"/></name></name></expr></argument>,
                      <argument><expr><name pos:line="30" pos:column="23">interval<pos:position pos:line="30" pos:column="31"/></name></expr></argument>)<pos:position pos:line="30" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="33"/></expr_stmt>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="33" pos:column="3">/* Check for, calculate and submit disk-latency values */</comment>
  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><call><name pos:line="34" pos:column="7">HAS_ALL_FLAGS<pos:position pos:line="34" pos:column="20"/></name><argument_list pos:line="34" pos:column="20">(<argument><expr><name><name pos:line="34" pos:column="21">old_data<pos:position pos:line="34" pos:column="29"/></name><operator pos:line="34" pos:column="29">-&gt;<pos:position pos:line="34" pos:column="34"/></operator><name pos:line="34" pos:column="31">flags<pos:position pos:line="34" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="38">CFG_VOLUME_PERF_LATENCY<pos:position pos:line="34" pos:column="61"/></name> <operator pos:line="34" pos:column="62">|<pos:position pos:line="34" pos:column="63"/></operator>
                                         <name pos:line="35" pos:column="42">HAVE_VOLUME_PERF_OPS_READ<pos:position pos:line="35" pos:column="67"/></name> <operator pos:line="35" pos:column="68">|<pos:position pos:line="35" pos:column="69"/></operator>
                                         <name pos:line="36" pos:column="42">HAVE_VOLUME_PERF_OPS_WRITE<pos:position pos:line="36" pos:column="68"/></name> <operator pos:line="36" pos:column="69">|<pos:position pos:line="36" pos:column="70"/></operator>
                                         <name pos:line="37" pos:column="42">HAVE_VOLUME_PERF_LATENCY_READ<pos:position pos:line="37" pos:column="71"/></name> <operator pos:line="37" pos:column="72">|<pos:position pos:line="37" pos:column="73"/></operator>
                                         <name pos:line="38" pos:column="42">HAVE_VOLUME_PERF_LATENCY_WRITE<pos:position pos:line="38" pos:column="72"/></name></expr></argument>)<pos:position pos:line="38" pos:column="73"/></argument_list></call> <operator pos:line="38" pos:column="74">&amp;&amp;<pos:position pos:line="38" pos:column="84"/></operator>
      <call><name pos:line="39" pos:column="7">HAS_ALL_FLAGS<pos:position pos:line="39" pos:column="20"/></name><argument_list pos:line="39" pos:column="20">(<argument><expr><name><name pos:line="39" pos:column="21">new_data<pos:position pos:line="39" pos:column="29"/></name><operator pos:line="39" pos:column="29">-&gt;<pos:position pos:line="39" pos:column="34"/></operator><name pos:line="39" pos:column="31">flags<pos:position pos:line="39" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="38">HAVE_VOLUME_PERF_OPS_READ<pos:position pos:line="39" pos:column="63"/></name> <operator pos:line="39" pos:column="64">|<pos:position pos:line="39" pos:column="65"/></operator>
                                         <name pos:line="40" pos:column="42">HAVE_VOLUME_PERF_OPS_WRITE<pos:position pos:line="40" pos:column="68"/></name> <operator pos:line="40" pos:column="69">|<pos:position pos:line="40" pos:column="70"/></operator>
                                         <name pos:line="41" pos:column="42">HAVE_VOLUME_PERF_LATENCY_READ<pos:position pos:line="41" pos:column="71"/></name> <operator pos:line="41" pos:column="72">|<pos:position pos:line="41" pos:column="73"/></operator>
                                         <name pos:line="42" pos:column="42">HAVE_VOLUME_PERF_LATENCY_WRITE<pos:position pos:line="42" pos:column="72"/></name></expr></argument>)<pos:position pos:line="42" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="74"/></condition><then pos:line="42" pos:column="74"> <block pos:line="42" pos:column="75">{
    <decl_stmt><decl><type><name pos:line="43" pos:column="5">gauge_t<pos:position pos:line="43" pos:column="12"/></name></type> <name pos:line="43" pos:column="13">latency_per_op_read<pos:position pos:line="43" pos:column="32"/></name></decl>;<pos:position pos:line="43" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="44" pos:column="5">gauge_t<pos:position pos:line="44" pos:column="12"/></name></type> <name pos:line="44" pos:column="13">latency_per_op_write<pos:position pos:line="44" pos:column="33"/></name></decl>;<pos:position pos:line="44" pos:column="34"/></decl_stmt>

    <expr_stmt><expr><name pos:line="46" pos:column="5">latency_per_op_read<pos:position pos:line="46" pos:column="24"/></name> <operator pos:line="46" pos:column="25">=<pos:position pos:line="46" pos:column="26"/></operator> <name pos:line="46" pos:column="27">NAN<pos:position pos:line="46" pos:column="30"/></name></expr>;<pos:position pos:line="46" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name pos:line="47" pos:column="5">latency_per_op_write<pos:position pos:line="47" pos:column="25"/></name> <operator pos:line="47" pos:column="26">=<pos:position pos:line="47" pos:column="27"/></operator> <name pos:line="47" pos:column="28">NAN<pos:position pos:line="47" pos:column="31"/></name></expr>;<pos:position pos:line="47" pos:column="32"/></expr_stmt>

    <comment type="block" pos:line="49" pos:column="5">/* Check if a counter wrapped around. */</comment>
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><operator pos:line="50" pos:column="9">(<pos:position pos:line="50" pos:column="10"/></operator><name><name pos:line="50" pos:column="10">new_data<pos:position pos:line="50" pos:column="18"/></name><operator pos:line="50" pos:column="18">-&gt;<pos:position pos:line="50" pos:column="23"/></operator><name pos:line="50" pos:column="20">read_ops<pos:position pos:line="50" pos:column="28"/></name></name> <operator pos:line="50" pos:column="29">&gt;<pos:position pos:line="50" pos:column="33"/></operator> <name><name pos:line="50" pos:column="31">old_data<pos:position pos:line="50" pos:column="39"/></name><operator pos:line="50" pos:column="39">-&gt;<pos:position pos:line="50" pos:column="44"/></operator><name pos:line="50" pos:column="41">read_ops<pos:position pos:line="50" pos:column="49"/></name></name><operator pos:line="50" pos:column="49">)<pos:position pos:line="50" pos:column="50"/></operator> <operator pos:line="50" pos:column="51">&amp;&amp;<pos:position pos:line="50" pos:column="61"/></operator>
        <operator pos:line="51" pos:column="9">(<pos:position pos:line="51" pos:column="10"/></operator><name><name pos:line="51" pos:column="10">new_data<pos:position pos:line="51" pos:column="18"/></name><operator pos:line="51" pos:column="18">-&gt;<pos:position pos:line="51" pos:column="23"/></operator><name pos:line="51" pos:column="20">read_latency<pos:position pos:line="51" pos:column="32"/></name></name> <operator pos:line="51" pos:column="33">&gt;<pos:position pos:line="51" pos:column="37"/></operator> <name><name pos:line="51" pos:column="35">old_data<pos:position pos:line="51" pos:column="43"/></name><operator pos:line="51" pos:column="43">-&gt;<pos:position pos:line="51" pos:column="48"/></operator><name pos:line="51" pos:column="45">read_latency<pos:position pos:line="51" pos:column="57"/></name></name><operator pos:line="51" pos:column="57">)<pos:position pos:line="51" pos:column="58"/></operator></expr>)<pos:position pos:line="51" pos:column="59"/></condition><then pos:line="51" pos:column="59"> <block pos:line="51" pos:column="60">{
      <decl_stmt><decl><type><name pos:line="52" pos:column="7">uint64_t<pos:position pos:line="52" pos:column="15"/></name></type> <name pos:line="52" pos:column="16">diff_ops_read<pos:position pos:line="52" pos:column="29"/></name></decl>;<pos:position pos:line="52" pos:column="30"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="53" pos:column="7">uint64_t<pos:position pos:line="53" pos:column="15"/></name></type> <name pos:line="53" pos:column="16">diff_latency_read<pos:position pos:line="53" pos:column="33"/></name></decl>;<pos:position pos:line="53" pos:column="34"/></decl_stmt>

      <expr_stmt><expr><name pos:line="55" pos:column="7">diff_ops_read<pos:position pos:line="55" pos:column="20"/></name> <operator pos:line="55" pos:column="21">=<pos:position pos:line="55" pos:column="22"/></operator> <name><name pos:line="55" pos:column="23">new_data<pos:position pos:line="55" pos:column="31"/></name><operator pos:line="55" pos:column="31">-&gt;<pos:position pos:line="55" pos:column="36"/></operator><name pos:line="55" pos:column="33">read_ops<pos:position pos:line="55" pos:column="41"/></name></name> <operator pos:line="55" pos:column="42">-<pos:position pos:line="55" pos:column="43"/></operator> <name><name pos:line="55" pos:column="44">old_data<pos:position pos:line="55" pos:column="52"/></name><operator pos:line="55" pos:column="52">-&gt;<pos:position pos:line="55" pos:column="57"/></operator><name pos:line="55" pos:column="54">read_ops<pos:position pos:line="55" pos:column="62"/></name></name></expr>;<pos:position pos:line="55" pos:column="63"/></expr_stmt>
      <expr_stmt><expr><name pos:line="56" pos:column="7">diff_latency_read<pos:position pos:line="56" pos:column="24"/></name> <operator pos:line="56" pos:column="25">=<pos:position pos:line="56" pos:column="26"/></operator> <name><name pos:line="56" pos:column="27">new_data<pos:position pos:line="56" pos:column="35"/></name><operator pos:line="56" pos:column="35">-&gt;<pos:position pos:line="56" pos:column="40"/></operator><name pos:line="56" pos:column="37">read_latency<pos:position pos:line="56" pos:column="49"/></name></name> <operator pos:line="56" pos:column="50">-<pos:position pos:line="56" pos:column="51"/></operator> <name><name pos:line="56" pos:column="52">old_data<pos:position pos:line="56" pos:column="60"/></name><operator pos:line="56" pos:column="60">-&gt;<pos:position pos:line="56" pos:column="65"/></operator><name pos:line="56" pos:column="62">read_latency<pos:position pos:line="56" pos:column="74"/></name></name></expr>;<pos:position pos:line="56" pos:column="75"/></expr_stmt>

      <if pos:line="58" pos:column="7">if <condition pos:line="58" pos:column="10">(<expr><name pos:line="58" pos:column="11">diff_ops_read<pos:position pos:line="58" pos:column="24"/></name> <operator pos:line="58" pos:column="25">&gt;<pos:position pos:line="58" pos:column="29"/></operator> <literal type="number" pos:line="58" pos:column="27">0<pos:position pos:line="58" pos:column="28"/></literal></expr>)<pos:position pos:line="58" pos:column="29"/></condition><then pos:line="58" pos:column="29">
        <block type="pseudo"><expr_stmt><expr><name pos:line="59" pos:column="9">latency_per_op_read<pos:position pos:line="59" pos:column="28"/></name> <operator pos:line="59" pos:column="29">=<pos:position pos:line="59" pos:column="30"/></operator>
            <operator pos:line="60" pos:column="13">(<pos:position pos:line="60" pos:column="14"/></operator><operator pos:line="60" pos:column="14">(<pos:position pos:line="60" pos:column="15"/></operator><name pos:line="60" pos:column="15">gauge_t<pos:position pos:line="60" pos:column="22"/></name><operator pos:line="60" pos:column="22">)<pos:position pos:line="60" pos:column="23"/></operator><name pos:line="60" pos:column="23">diff_latency_read<pos:position pos:line="60" pos:column="40"/></name><operator pos:line="60" pos:column="40">)<pos:position pos:line="60" pos:column="41"/></operator> <operator pos:line="60" pos:column="42">/<pos:position pos:line="60" pos:column="43"/></operator> <operator pos:line="60" pos:column="44">(<pos:position pos:line="60" pos:column="45"/></operator><operator pos:line="60" pos:column="45">(<pos:position pos:line="60" pos:column="46"/></operator><name pos:line="60" pos:column="46">gauge_t<pos:position pos:line="60" pos:column="53"/></name><operator pos:line="60" pos:column="53">)<pos:position pos:line="60" pos:column="54"/></operator><name pos:line="60" pos:column="54">diff_ops_read<pos:position pos:line="60" pos:column="67"/></name><operator pos:line="60" pos:column="67">)<pos:position pos:line="60" pos:column="68"/></operator></expr>;<pos:position pos:line="60" pos:column="69"/></expr_stmt></block></then></if>
    }<pos:position pos:line="61" pos:column="6"/></block></then></if>

    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><operator pos:line="63" pos:column="9">(<pos:position pos:line="63" pos:column="10"/></operator><name><name pos:line="63" pos:column="10">new_data<pos:position pos:line="63" pos:column="18"/></name><operator pos:line="63" pos:column="18">-&gt;<pos:position pos:line="63" pos:column="23"/></operator><name pos:line="63" pos:column="20">write_ops<pos:position pos:line="63" pos:column="29"/></name></name> <operator pos:line="63" pos:column="30">&gt;<pos:position pos:line="63" pos:column="34"/></operator> <name><name pos:line="63" pos:column="32">old_data<pos:position pos:line="63" pos:column="40"/></name><operator pos:line="63" pos:column="40">-&gt;<pos:position pos:line="63" pos:column="45"/></operator><name pos:line="63" pos:column="42">write_ops<pos:position pos:line="63" pos:column="51"/></name></name><operator pos:line="63" pos:column="51">)<pos:position pos:line="63" pos:column="52"/></operator> <operator pos:line="63" pos:column="53">&amp;&amp;<pos:position pos:line="63" pos:column="63"/></operator>
        <operator pos:line="64" pos:column="9">(<pos:position pos:line="64" pos:column="10"/></operator><name><name pos:line="64" pos:column="10">new_data<pos:position pos:line="64" pos:column="18"/></name><operator pos:line="64" pos:column="18">-&gt;<pos:position pos:line="64" pos:column="23"/></operator><name pos:line="64" pos:column="20">write_latency<pos:position pos:line="64" pos:column="33"/></name></name> <operator pos:line="64" pos:column="34">&gt;<pos:position pos:line="64" pos:column="38"/></operator> <name><name pos:line="64" pos:column="36">old_data<pos:position pos:line="64" pos:column="44"/></name><operator pos:line="64" pos:column="44">-&gt;<pos:position pos:line="64" pos:column="49"/></operator><name pos:line="64" pos:column="46">write_latency<pos:position pos:line="64" pos:column="59"/></name></name><operator pos:line="64" pos:column="59">)<pos:position pos:line="64" pos:column="60"/></operator></expr>)<pos:position pos:line="64" pos:column="61"/></condition><then pos:line="64" pos:column="61"> <block pos:line="64" pos:column="62">{
      <decl_stmt><decl><type><name pos:line="65" pos:column="7">uint64_t<pos:position pos:line="65" pos:column="15"/></name></type> <name pos:line="65" pos:column="16">diff_ops_write<pos:position pos:line="65" pos:column="30"/></name></decl>;<pos:position pos:line="65" pos:column="31"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="66" pos:column="7">uint64_t<pos:position pos:line="66" pos:column="15"/></name></type> <name pos:line="66" pos:column="16">diff_latency_write<pos:position pos:line="66" pos:column="34"/></name></decl>;<pos:position pos:line="66" pos:column="35"/></decl_stmt>

      <expr_stmt><expr><name pos:line="68" pos:column="7">diff_ops_write<pos:position pos:line="68" pos:column="21"/></name> <operator pos:line="68" pos:column="22">=<pos:position pos:line="68" pos:column="23"/></operator> <name><name pos:line="68" pos:column="24">new_data<pos:position pos:line="68" pos:column="32"/></name><operator pos:line="68" pos:column="32">-&gt;<pos:position pos:line="68" pos:column="37"/></operator><name pos:line="68" pos:column="34">write_ops<pos:position pos:line="68" pos:column="43"/></name></name> <operator pos:line="68" pos:column="44">-<pos:position pos:line="68" pos:column="45"/></operator> <name><name pos:line="68" pos:column="46">old_data<pos:position pos:line="68" pos:column="54"/></name><operator pos:line="68" pos:column="54">-&gt;<pos:position pos:line="68" pos:column="59"/></operator><name pos:line="68" pos:column="56">write_ops<pos:position pos:line="68" pos:column="65"/></name></name></expr>;<pos:position pos:line="68" pos:column="66"/></expr_stmt>
      <expr_stmt><expr><name pos:line="69" pos:column="7">diff_latency_write<pos:position pos:line="69" pos:column="25"/></name> <operator pos:line="69" pos:column="26">=<pos:position pos:line="69" pos:column="27"/></operator> <name><name pos:line="69" pos:column="28">new_data<pos:position pos:line="69" pos:column="36"/></name><operator pos:line="69" pos:column="36">-&gt;<pos:position pos:line="69" pos:column="41"/></operator><name pos:line="69" pos:column="38">write_latency<pos:position pos:line="69" pos:column="51"/></name></name> <operator pos:line="69" pos:column="52">-<pos:position pos:line="69" pos:column="53"/></operator> <name><name pos:line="69" pos:column="54">old_data<pos:position pos:line="69" pos:column="62"/></name><operator pos:line="69" pos:column="62">-&gt;<pos:position pos:line="69" pos:column="67"/></operator><name pos:line="69" pos:column="64">write_latency<pos:position pos:line="69" pos:column="77"/></name></name></expr>;<pos:position pos:line="69" pos:column="78"/></expr_stmt>

      <if pos:line="71" pos:column="7">if <condition pos:line="71" pos:column="10">(<expr><name pos:line="71" pos:column="11">diff_ops_write<pos:position pos:line="71" pos:column="25"/></name> <operator pos:line="71" pos:column="26">&gt;<pos:position pos:line="71" pos:column="30"/></operator> <literal type="number" pos:line="71" pos:column="28">0<pos:position pos:line="71" pos:column="29"/></literal></expr>)<pos:position pos:line="71" pos:column="30"/></condition><then pos:line="71" pos:column="30">
        <block type="pseudo"><expr_stmt><expr><name pos:line="72" pos:column="9">latency_per_op_write<pos:position pos:line="72" pos:column="29"/></name> <operator pos:line="72" pos:column="30">=<pos:position pos:line="72" pos:column="31"/></operator>
            <operator pos:line="73" pos:column="13">(<pos:position pos:line="73" pos:column="14"/></operator><operator pos:line="73" pos:column="14">(<pos:position pos:line="73" pos:column="15"/></operator><name pos:line="73" pos:column="15">gauge_t<pos:position pos:line="73" pos:column="22"/></name><operator pos:line="73" pos:column="22">)<pos:position pos:line="73" pos:column="23"/></operator><name pos:line="73" pos:column="23">diff_latency_write<pos:position pos:line="73" pos:column="41"/></name><operator pos:line="73" pos:column="41">)<pos:position pos:line="73" pos:column="42"/></operator> <operator pos:line="73" pos:column="43">/<pos:position pos:line="73" pos:column="44"/></operator> <operator pos:line="73" pos:column="45">(<pos:position pos:line="73" pos:column="46"/></operator><operator pos:line="73" pos:column="46">(<pos:position pos:line="73" pos:column="47"/></operator><name pos:line="73" pos:column="47">gauge_t<pos:position pos:line="73" pos:column="54"/></name><operator pos:line="73" pos:column="54">)<pos:position pos:line="73" pos:column="55"/></operator><name pos:line="73" pos:column="55">diff_ops_write<pos:position pos:line="73" pos:column="69"/></name><operator pos:line="73" pos:column="69">)<pos:position pos:line="73" pos:column="70"/></operator></expr>;<pos:position pos:line="73" pos:column="71"/></expr_stmt></block></then></if>
    }<pos:position pos:line="74" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="76" pos:column="5">submit_two_gauge<pos:position pos:line="76" pos:column="21"/></name><argument_list pos:line="76" pos:column="21">(<argument><expr><name pos:line="76" pos:column="22">hostname<pos:position pos:line="76" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="32">plugin_instance<pos:position pos:line="76" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="49">"disk_latency"<pos:position pos:line="76" pos:column="63"/></literal></expr></argument>,
                     <comment type="block" pos:line="77" pos:column="22">/* type instance = */</comment> <argument><expr><name pos:line="77" pos:column="44">NULL<pos:position pos:line="77" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="50">latency_per_op_read<pos:position pos:line="77" pos:column="69"/></name></expr></argument>,
                     <argument><expr><name pos:line="78" pos:column="22">latency_per_op_write<pos:position pos:line="78" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="44">new_data<pos:position pos:line="78" pos:column="52"/></name><operator pos:line="78" pos:column="52">-&gt;<pos:position pos:line="78" pos:column="57"/></operator><name pos:line="78" pos:column="54">timestamp<pos:position pos:line="78" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="65">interval<pos:position pos:line="78" pos:column="73"/></name></expr></argument>)<pos:position pos:line="78" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="75"/></expr_stmt>
  }<pos:position pos:line="79" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="81" pos:column="3">/* Clear all HAVE_* flags. */</comment>
  <expr_stmt><expr><name><name pos:line="82" pos:column="3">old_data<pos:position pos:line="82" pos:column="11"/></name><operator pos:line="82" pos:column="11">-&gt;<pos:position pos:line="82" pos:column="16"/></operator><name pos:line="82" pos:column="13">flags<pos:position pos:line="82" pos:column="18"/></name></name> <operator pos:line="82" pos:column="19">&amp;=<pos:position pos:line="82" pos:column="25"/></operator> <operator pos:line="82" pos:column="22">~<pos:position pos:line="82" pos:column="23"/></operator><name pos:line="82" pos:column="23">HAVE_VOLUME_PERF_ALL<pos:position pos:line="82" pos:column="43"/></name></expr>;<pos:position pos:line="82" pos:column="44"/></expr_stmt>

  <comment type="block" pos:line="84" pos:column="3">/* Copy all counters */</comment>
  <expr_stmt><expr><name><name pos:line="85" pos:column="3">old_data<pos:position pos:line="85" pos:column="11"/></name><operator pos:line="85" pos:column="11">-&gt;<pos:position pos:line="85" pos:column="16"/></operator><name pos:line="85" pos:column="13">timestamp<pos:position pos:line="85" pos:column="22"/></name></name> <operator pos:line="85" pos:column="23">=<pos:position pos:line="85" pos:column="24"/></operator> <name><name pos:line="85" pos:column="25">new_data<pos:position pos:line="85" pos:column="33"/></name><operator pos:line="85" pos:column="33">-&gt;<pos:position pos:line="85" pos:column="38"/></operator><name pos:line="85" pos:column="35">timestamp<pos:position pos:line="85" pos:column="44"/></name></name></expr>;<pos:position pos:line="85" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="86" pos:column="3">old_data<pos:position pos:line="86" pos:column="11"/></name><operator pos:line="86" pos:column="11">-&gt;<pos:position pos:line="86" pos:column="16"/></operator><name pos:line="86" pos:column="13">read_bytes<pos:position pos:line="86" pos:column="23"/></name></name> <operator pos:line="86" pos:column="24">=<pos:position pos:line="86" pos:column="25"/></operator> <name><name pos:line="86" pos:column="26">new_data<pos:position pos:line="86" pos:column="34"/></name><operator pos:line="86" pos:column="34">-&gt;<pos:position pos:line="86" pos:column="39"/></operator><name pos:line="86" pos:column="36">read_bytes<pos:position pos:line="86" pos:column="46"/></name></name></expr>;<pos:position pos:line="86" pos:column="47"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="87" pos:column="3">old_data<pos:position pos:line="87" pos:column="11"/></name><operator pos:line="87" pos:column="11">-&gt;<pos:position pos:line="87" pos:column="16"/></operator><name pos:line="87" pos:column="13">write_bytes<pos:position pos:line="87" pos:column="24"/></name></name> <operator pos:line="87" pos:column="25">=<pos:position pos:line="87" pos:column="26"/></operator> <name><name pos:line="87" pos:column="27">new_data<pos:position pos:line="87" pos:column="35"/></name><operator pos:line="87" pos:column="35">-&gt;<pos:position pos:line="87" pos:column="40"/></operator><name pos:line="87" pos:column="37">write_bytes<pos:position pos:line="87" pos:column="48"/></name></name></expr>;<pos:position pos:line="87" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="88" pos:column="3">old_data<pos:position pos:line="88" pos:column="11"/></name><operator pos:line="88" pos:column="11">-&gt;<pos:position pos:line="88" pos:column="16"/></operator><name pos:line="88" pos:column="13">read_ops<pos:position pos:line="88" pos:column="21"/></name></name> <operator pos:line="88" pos:column="22">=<pos:position pos:line="88" pos:column="23"/></operator> <name><name pos:line="88" pos:column="24">new_data<pos:position pos:line="88" pos:column="32"/></name><operator pos:line="88" pos:column="32">-&gt;<pos:position pos:line="88" pos:column="37"/></operator><name pos:line="88" pos:column="34">read_ops<pos:position pos:line="88" pos:column="42"/></name></name></expr>;<pos:position pos:line="88" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="89" pos:column="3">old_data<pos:position pos:line="89" pos:column="11"/></name><operator pos:line="89" pos:column="11">-&gt;<pos:position pos:line="89" pos:column="16"/></operator><name pos:line="89" pos:column="13">write_ops<pos:position pos:line="89" pos:column="22"/></name></name> <operator pos:line="89" pos:column="23">=<pos:position pos:line="89" pos:column="24"/></operator> <name><name pos:line="89" pos:column="25">new_data<pos:position pos:line="89" pos:column="33"/></name><operator pos:line="89" pos:column="33">-&gt;<pos:position pos:line="89" pos:column="38"/></operator><name pos:line="89" pos:column="35">write_ops<pos:position pos:line="89" pos:column="44"/></name></name></expr>;<pos:position pos:line="89" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="90" pos:column="3">old_data<pos:position pos:line="90" pos:column="11"/></name><operator pos:line="90" pos:column="11">-&gt;<pos:position pos:line="90" pos:column="16"/></operator><name pos:line="90" pos:column="13">read_latency<pos:position pos:line="90" pos:column="25"/></name></name> <operator pos:line="90" pos:column="26">=<pos:position pos:line="90" pos:column="27"/></operator> <name><name pos:line="90" pos:column="28">new_data<pos:position pos:line="90" pos:column="36"/></name><operator pos:line="90" pos:column="36">-&gt;<pos:position pos:line="90" pos:column="41"/></operator><name pos:line="90" pos:column="38">read_latency<pos:position pos:line="90" pos:column="50"/></name></name></expr>;<pos:position pos:line="90" pos:column="51"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="91" pos:column="3">old_data<pos:position pos:line="91" pos:column="11"/></name><operator pos:line="91" pos:column="11">-&gt;<pos:position pos:line="91" pos:column="16"/></operator><name pos:line="91" pos:column="13">write_latency<pos:position pos:line="91" pos:column="26"/></name></name> <operator pos:line="91" pos:column="27">=<pos:position pos:line="91" pos:column="28"/></operator> <name><name pos:line="91" pos:column="29">new_data<pos:position pos:line="91" pos:column="37"/></name><operator pos:line="91" pos:column="37">-&gt;<pos:position pos:line="91" pos:column="42"/></operator><name pos:line="91" pos:column="39">write_latency<pos:position pos:line="91" pos:column="52"/></name></name></expr>;<pos:position pos:line="91" pos:column="53"/></expr_stmt>

  <comment type="block" pos:line="93" pos:column="3">/* Copy the HAVE_* flags */</comment>
  <expr_stmt><expr><name><name pos:line="94" pos:column="3">old_data<pos:position pos:line="94" pos:column="11"/></name><operator pos:line="94" pos:column="11">-&gt;<pos:position pos:line="94" pos:column="16"/></operator><name pos:line="94" pos:column="13">flags<pos:position pos:line="94" pos:column="18"/></name></name> <operator pos:line="94" pos:column="19">|=<pos:position pos:line="94" pos:column="21"/></operator> <operator pos:line="94" pos:column="22">(<pos:position pos:line="94" pos:column="23"/></operator><name><name pos:line="94" pos:column="23">new_data<pos:position pos:line="94" pos:column="31"/></name><operator pos:line="94" pos:column="31">-&gt;<pos:position pos:line="94" pos:column="36"/></operator><name pos:line="94" pos:column="33">flags<pos:position pos:line="94" pos:column="38"/></name></name> <operator pos:line="94" pos:column="39">&amp;<pos:position pos:line="94" pos:column="44"/></operator> <name pos:line="94" pos:column="41">HAVE_VOLUME_PERF_ALL<pos:position pos:line="94" pos:column="61"/></name><operator pos:line="94" pos:column="61">)<pos:position pos:line="94" pos:column="62"/></operator></expr>;<pos:position pos:line="94" pos:column="63"/></expr_stmt>

  <return pos:line="96" pos:column="3">return <expr><operator pos:line="96" pos:column="10">(<pos:position pos:line="96" pos:column="11"/></operator><literal type="number" pos:line="96" pos:column="11">0<pos:position pos:line="96" pos:column="12"/></literal><operator pos:line="96" pos:column="12">)<pos:position pos:line="96" pos:column="13"/></operator></expr>;<pos:position pos:line="96" pos:column="14"/></return>
}<pos:position pos:line="97" pos:column="2"/></block></function></unit>

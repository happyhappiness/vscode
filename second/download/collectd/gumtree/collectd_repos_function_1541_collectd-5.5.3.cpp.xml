<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1541_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">compact_ds_name<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">buffer<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">size_t<pos:position pos:line="1" pos:column="49"/></name></type> <name pos:line="1" pos:column="50">buffer_size<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="63">char<pos:position pos:line="1" pos:column="67"/></name> <specifier pos:line="1" pos:column="68">const<pos:position pos:line="1" pos:column="73"/></specifier> <modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier></type><name pos:line="1" pos:column="75">src<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">src_copy<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">size_t<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">src_len<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">ptr<pos:position pos:line="5" pos:column="14"/></name> <init pos:line="5" pos:column="15">= <expr><name pos:line="5" pos:column="17">buffer<pos:position pos:line="5" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">size_t<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">ptr_size<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><name pos:line="6" pos:column="23">buffer_size<pos:position pos:line="6" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">_Bool<pos:position pos:line="7" pos:column="10"/></name></type> <name pos:line="7" pos:column="11">append_plus<pos:position pos:line="7" pos:column="22"/></name> <init pos:line="7" pos:column="23">= <expr><literal type="number" pos:line="7" pos:column="25">0<pos:position pos:line="7" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">_Bool<pos:position pos:line="8" pos:column="10"/></name></type> <name pos:line="8" pos:column="11">append_minus<pos:position pos:line="8" pos:column="23"/></name> <init pos:line="8" pos:column="24">= <expr><literal type="number" pos:line="8" pos:column="26">0<pos:position pos:line="8" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">(<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">buffer<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">==<pos:position pos:line="10" pos:column="19"/></operator> <name pos:line="10" pos:column="20">NULL<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">)<pos:position pos:line="10" pos:column="25"/></operator> <operator pos:line="10" pos:column="26">||<pos:position pos:line="10" pos:column="28"/></operator> <operator pos:line="10" pos:column="29">(<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="30">buffer_size<pos:position pos:line="10" pos:column="41"/></name> <operator pos:line="10" pos:column="42">&lt;=<pos:position pos:line="10" pos:column="47"/></operator> <call><name pos:line="10" pos:column="45">strlen<pos:position pos:line="10" pos:column="51"/></name> <argument_list pos:line="10" pos:column="52">(<argument><expr><literal type="string" pos:line="10" pos:column="53">"Minus"<pos:position pos:line="10" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="61"/></argument_list></call><operator pos:line="10" pos:column="61">)<pos:position pos:line="10" pos:column="62"/></operator> <operator pos:line="10" pos:column="63">||<pos:position pos:line="10" pos:column="65"/></operator> <operator pos:line="10" pos:column="66">(<pos:position pos:line="10" pos:column="67"/></operator><name pos:line="10" pos:column="67">src<pos:position pos:line="10" pos:column="70"/></name> <operator pos:line="10" pos:column="71">==<pos:position pos:line="10" pos:column="73"/></operator> <name pos:line="10" pos:column="74">NULL<pos:position pos:line="10" pos:column="78"/></name><operator pos:line="10" pos:column="78">)<pos:position pos:line="10" pos:column="79"/></operator></expr>)<pos:position pos:line="10" pos:column="80"/></condition><then pos:line="10" pos:column="80">
      <block type="pseudo"><return pos:line="11" pos:column="7">return <expr><name pos:line="11" pos:column="14">EINVAL<pos:position pos:line="11" pos:column="20"/></name></expr>;<pos:position pos:line="11" pos:column="21"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="13" pos:column="5">src_copy<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <call><name pos:line="13" pos:column="16">strdup<pos:position pos:line="13" pos:column="22"/></name> <argument_list pos:line="13" pos:column="23">(<argument><expr><name pos:line="13" pos:column="24">src<pos:position pos:line="13" pos:column="27"/></name></expr></argument>)<pos:position pos:line="13" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">src_len<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <call><name pos:line="14" pos:column="15">strlen<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><name pos:line="14" pos:column="22">src<pos:position pos:line="14" pos:column="25"/></name></expr></argument>)<pos:position pos:line="14" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="27"/></expr_stmt>

    <comment type="block" pos:line="16" pos:column="5">/* Remove trailing "+" and "-". */</comment>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name><name pos:line="17" pos:column="9">src_copy<pos:position pos:line="17" pos:column="17"/></name><index pos:line="17" pos:column="17">[<expr><name pos:line="17" pos:column="18">src_len<pos:position pos:line="17" pos:column="25"/></name> <operator pos:line="17" pos:column="26">-<pos:position pos:line="17" pos:column="27"/></operator> <literal type="number" pos:line="17" pos:column="28">1<pos:position pos:line="17" pos:column="29"/></literal></expr>]<pos:position pos:line="17" pos:column="30"/></index></name> <operator pos:line="17" pos:column="31">==<pos:position pos:line="17" pos:column="33"/></operator> <literal type="char" pos:line="17" pos:column="34">'+'<pos:position pos:line="17" pos:column="37"/></literal></expr>)<pos:position pos:line="17" pos:column="38"/></condition><then pos:line="17" pos:column="38">
    <block pos:line="18" pos:column="5">{
        <expr_stmt><expr><name pos:line="19" pos:column="9">append_plus<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">=<pos:position pos:line="19" pos:column="22"/></operator> <literal type="number" pos:line="19" pos:column="23">1<pos:position pos:line="19" pos:column="24"/></literal></expr>;<pos:position pos:line="19" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name pos:line="20" pos:column="9">src_len<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">--<pos:position pos:line="20" pos:column="18"/></operator></expr>;<pos:position pos:line="20" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="21" pos:column="9">src_copy<pos:position pos:line="21" pos:column="17"/></name><index pos:line="21" pos:column="17">[<expr><name pos:line="21" pos:column="18">src_len<pos:position pos:line="21" pos:column="25"/></name></expr>]<pos:position pos:line="21" pos:column="26"/></index></name> <operator pos:line="21" pos:column="27">=<pos:position pos:line="21" pos:column="28"/></operator> <literal type="number" pos:line="21" pos:column="29">0<pos:position pos:line="21" pos:column="30"/></literal></expr>;<pos:position pos:line="21" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></then>
    <elseif pos:line="23" pos:column="5">else <if pos:line="23" pos:column="10">if <condition pos:line="23" pos:column="13">(<expr><name><name pos:line="23" pos:column="14">src_copy<pos:position pos:line="23" pos:column="22"/></name><index pos:line="23" pos:column="22">[<expr><name pos:line="23" pos:column="23">src_len<pos:position pos:line="23" pos:column="30"/></name> <operator pos:line="23" pos:column="31">-<pos:position pos:line="23" pos:column="32"/></operator> <literal type="number" pos:line="23" pos:column="33">1<pos:position pos:line="23" pos:column="34"/></literal></expr>]<pos:position pos:line="23" pos:column="35"/></index></name> <operator pos:line="23" pos:column="36">==<pos:position pos:line="23" pos:column="38"/></operator> <literal type="char" pos:line="23" pos:column="39">'-'<pos:position pos:line="23" pos:column="42"/></literal></expr>)<pos:position pos:line="23" pos:column="43"/></condition><then pos:line="23" pos:column="43">
    <block pos:line="24" pos:column="5">{
        <expr_stmt><expr><name pos:line="25" pos:column="9">append_minus<pos:position pos:line="25" pos:column="21"/></name> <operator pos:line="25" pos:column="22">=<pos:position pos:line="25" pos:column="23"/></operator> <literal type="number" pos:line="25" pos:column="24">1<pos:position pos:line="25" pos:column="25"/></literal></expr>;<pos:position pos:line="25" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name pos:line="26" pos:column="9">src_len<pos:position pos:line="26" pos:column="16"/></name><operator pos:line="26" pos:column="16">--<pos:position pos:line="26" pos:column="18"/></operator></expr>;<pos:position pos:line="26" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="27" pos:column="9">src_copy<pos:position pos:line="27" pos:column="17"/></name><index pos:line="27" pos:column="17">[<expr><name pos:line="27" pos:column="18">src_len<pos:position pos:line="27" pos:column="25"/></name></expr>]<pos:position pos:line="27" pos:column="26"/></index></name> <operator pos:line="27" pos:column="27">=<pos:position pos:line="27" pos:column="28"/></operator> <literal type="number" pos:line="27" pos:column="29">0<pos:position pos:line="27" pos:column="30"/></literal></expr>;<pos:position pos:line="27" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if></elseif></if>

    <comment type="block" pos:line="30" pos:column="5">/* Split at special chars, capitalize first character, append to buffer. */</comment>
    <decl_stmt><decl><type><name pos:line="31" pos:column="5">char<pos:position pos:line="31" pos:column="9"/></name> <modifier pos:line="31" pos:column="10">*<pos:position pos:line="31" pos:column="11"/></modifier></type><name pos:line="31" pos:column="11">dummy<pos:position pos:line="31" pos:column="16"/></name> <init pos:line="31" pos:column="17">= <expr><name pos:line="31" pos:column="19">src_copy<pos:position pos:line="31" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="31" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="32" pos:column="5">char<pos:position pos:line="32" pos:column="9"/></name> <modifier pos:line="32" pos:column="10">*<pos:position pos:line="32" pos:column="11"/></modifier></type><name pos:line="32" pos:column="11">token<pos:position pos:line="32" pos:column="16"/></name></decl>;<pos:position pos:line="32" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="33" pos:column="5">char<pos:position pos:line="33" pos:column="9"/></name> <modifier pos:line="33" pos:column="10">*<pos:position pos:line="33" pos:column="11"/></modifier></type><name pos:line="33" pos:column="11">save_ptr<pos:position pos:line="33" pos:column="19"/></name> <init pos:line="33" pos:column="20">= <expr><name pos:line="33" pos:column="22">NULL<pos:position pos:line="33" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="33" pos:column="27"/></decl_stmt>
    <while pos:line="34" pos:column="5">while <condition pos:line="34" pos:column="11">(<expr><operator pos:line="34" pos:column="12">(<pos:position pos:line="34" pos:column="13"/></operator><name pos:line="34" pos:column="13">token<pos:position pos:line="34" pos:column="18"/></name> <operator pos:line="34" pos:column="19">=<pos:position pos:line="34" pos:column="20"/></operator> <call><name pos:line="34" pos:column="21">strtok_r<pos:position pos:line="34" pos:column="29"/></name> <argument_list pos:line="34" pos:column="30">(<argument><expr><name pos:line="34" pos:column="31">dummy<pos:position pos:line="34" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="38">":_-+"<pos:position pos:line="34" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="34" pos:column="46">&amp;<pos:position pos:line="34" pos:column="51"/></operator><name pos:line="34" pos:column="47">save_ptr<pos:position pos:line="34" pos:column="55"/></name></expr></argument>)<pos:position pos:line="34" pos:column="56"/></argument_list></call><operator pos:line="34" pos:column="56">)<pos:position pos:line="34" pos:column="57"/></operator> <operator pos:line="34" pos:column="58">!=<pos:position pos:line="34" pos:column="60"/></operator> <name pos:line="34" pos:column="61">NULL<pos:position pos:line="34" pos:column="65"/></name></expr>)<pos:position pos:line="34" pos:column="66"/></condition>
    <block pos:line="35" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="36" pos:column="9">size_t<pos:position pos:line="36" pos:column="15"/></name></type> <name pos:line="36" pos:column="16">len<pos:position pos:line="36" pos:column="19"/></name></decl>;<pos:position pos:line="36" pos:column="20"/></decl_stmt>

        <expr_stmt><expr><name pos:line="38" pos:column="9">dummy<pos:position pos:line="38" pos:column="14"/></name> <operator pos:line="38" pos:column="15">=<pos:position pos:line="38" pos:column="16"/></operator> <name pos:line="38" pos:column="17">NULL<pos:position pos:line="38" pos:column="21"/></name></expr>;<pos:position pos:line="38" pos:column="22"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="40" pos:column="9">token<pos:position pos:line="40" pos:column="14"/></name><index pos:line="40" pos:column="14">[<expr><literal type="number" pos:line="40" pos:column="15">0<pos:position pos:line="40" pos:column="16"/></literal></expr>]<pos:position pos:line="40" pos:column="17"/></index></name> <operator pos:line="40" pos:column="18">=<pos:position pos:line="40" pos:column="19"/></operator> <call><name pos:line="40" pos:column="20">toupper<pos:position pos:line="40" pos:column="27"/></name> <argument_list pos:line="40" pos:column="28">(<argument><expr><operator pos:line="40" pos:column="29">(<pos:position pos:line="40" pos:column="30"/></operator><name pos:line="40" pos:column="30">int<pos:position pos:line="40" pos:column="33"/></name><operator pos:line="40" pos:column="33">)<pos:position pos:line="40" pos:column="34"/></operator> <name><name pos:line="40" pos:column="35">token<pos:position pos:line="40" pos:column="40"/></name><index pos:line="40" pos:column="40">[<expr><literal type="number" pos:line="40" pos:column="41">0<pos:position pos:line="40" pos:column="42"/></literal></expr>]<pos:position pos:line="40" pos:column="43"/></index></name></expr></argument>)<pos:position pos:line="40" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="45"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="42" pos:column="9">assert<pos:position pos:line="42" pos:column="15"/></name> <argument_list pos:line="42" pos:column="16">(<argument><expr><name pos:line="42" pos:column="17">ptr_size<pos:position pos:line="42" pos:column="25"/></name> <operator pos:line="42" pos:column="26">&gt;<pos:position pos:line="42" pos:column="30"/></operator> <literal type="number" pos:line="42" pos:column="28">1<pos:position pos:line="42" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="31"/></expr_stmt>

        <expr_stmt><expr><name pos:line="44" pos:column="9">len<pos:position pos:line="44" pos:column="12"/></name> <operator pos:line="44" pos:column="13">=<pos:position pos:line="44" pos:column="14"/></operator> <call><name pos:line="44" pos:column="15">strlen<pos:position pos:line="44" pos:column="21"/></name> <argument_list pos:line="44" pos:column="22">(<argument><expr><name pos:line="44" pos:column="23">token<pos:position pos:line="44" pos:column="28"/></name></expr></argument>)<pos:position pos:line="44" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="30"/></expr_stmt>
        <if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><name pos:line="45" pos:column="13">len<pos:position pos:line="45" pos:column="16"/></name> <operator pos:line="45" pos:column="17">&gt;=<pos:position pos:line="45" pos:column="22"/></operator> <name pos:line="45" pos:column="20">ptr_size<pos:position pos:line="45" pos:column="28"/></name></expr>)<pos:position pos:line="45" pos:column="29"/></condition><then pos:line="45" pos:column="29">
            <block type="pseudo"><expr_stmt><expr><name pos:line="46" pos:column="13">len<pos:position pos:line="46" pos:column="16"/></name> <operator pos:line="46" pos:column="17">=<pos:position pos:line="46" pos:column="18"/></operator> <name pos:line="46" pos:column="19">ptr_size<pos:position pos:line="46" pos:column="27"/></name> <operator pos:line="46" pos:column="28">-<pos:position pos:line="46" pos:column="29"/></operator> <literal type="number" pos:line="46" pos:column="30">1<pos:position pos:line="46" pos:column="31"/></literal></expr>;<pos:position pos:line="46" pos:column="32"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name pos:line="48" pos:column="9">assert<pos:position pos:line="48" pos:column="15"/></name> <argument_list pos:line="48" pos:column="16">(<argument><expr><name pos:line="48" pos:column="17">len<pos:position pos:line="48" pos:column="20"/></name> <operator pos:line="48" pos:column="21">&gt;<pos:position pos:line="48" pos:column="25"/></operator> <literal type="number" pos:line="48" pos:column="23">0<pos:position pos:line="48" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="49" pos:column="9">assert<pos:position pos:line="49" pos:column="15"/></name> <argument_list pos:line="49" pos:column="16">(<argument><expr><name pos:line="49" pos:column="17">len<pos:position pos:line="49" pos:column="20"/></name> <operator pos:line="49" pos:column="21">&lt;<pos:position pos:line="49" pos:column="25"/></operator> <name pos:line="49" pos:column="23">ptr_size<pos:position pos:line="49" pos:column="31"/></name></expr></argument>)<pos:position pos:line="49" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="33"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="51" pos:column="9">sstrncpy<pos:position pos:line="51" pos:column="17"/></name> <argument_list pos:line="51" pos:column="18">(<argument><expr><name pos:line="51" pos:column="19">ptr<pos:position pos:line="51" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="24">token<pos:position pos:line="51" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="31">len<pos:position pos:line="51" pos:column="34"/></name> <operator pos:line="51" pos:column="35">+<pos:position pos:line="51" pos:column="36"/></operator> <literal type="number" pos:line="51" pos:column="37">1<pos:position pos:line="51" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name pos:line="52" pos:column="9">ptr<pos:position pos:line="52" pos:column="12"/></name> <operator pos:line="52" pos:column="13">+=<pos:position pos:line="52" pos:column="15"/></operator> <name pos:line="52" pos:column="16">len<pos:position pos:line="52" pos:column="19"/></name></expr>;<pos:position pos:line="52" pos:column="20"/></expr_stmt>
        <expr_stmt><expr><name pos:line="53" pos:column="9">ptr_size<pos:position pos:line="53" pos:column="17"/></name> <operator pos:line="53" pos:column="18">-=<pos:position pos:line="53" pos:column="20"/></operator> <name pos:line="53" pos:column="21">len<pos:position pos:line="53" pos:column="24"/></name></expr>;<pos:position pos:line="53" pos:column="25"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="55" pos:column="9">assert<pos:position pos:line="55" pos:column="15"/></name> <argument_list pos:line="55" pos:column="16">(<argument><expr><operator pos:line="55" pos:column="17">*<pos:position pos:line="55" pos:column="18"/></operator><name pos:line="55" pos:column="18">ptr<pos:position pos:line="55" pos:column="21"/></name> <operator pos:line="55" pos:column="22">==<pos:position pos:line="55" pos:column="24"/></operator> <literal type="number" pos:line="55" pos:column="25">0<pos:position pos:line="55" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="28"/></expr_stmt>
        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name pos:line="56" pos:column="13">ptr_size<pos:position pos:line="56" pos:column="21"/></name> <operator pos:line="56" pos:column="22">&lt;=<pos:position pos:line="56" pos:column="27"/></operator> <literal type="number" pos:line="56" pos:column="25">1<pos:position pos:line="56" pos:column="26"/></literal></expr>)<pos:position pos:line="56" pos:column="27"/></condition><then pos:line="56" pos:column="27">
            <block type="pseudo"><break pos:line="57" pos:column="13">break;<pos:position pos:line="57" pos:column="19"/></break></block></then></if>
    }<pos:position pos:line="58" pos:column="6"/></block></while>

    <comment type="block" pos:line="60" pos:column="5">/* Append "Plus" or "Minus" if "+" or "-" has been stripped above. */</comment>
    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><name pos:line="61" pos:column="9">append_plus<pos:position pos:line="61" pos:column="20"/></name> <operator pos:line="61" pos:column="21">||<pos:position pos:line="61" pos:column="23"/></operator> <name pos:line="61" pos:column="24">append_minus<pos:position pos:line="61" pos:column="36"/></name></expr>)<pos:position pos:line="61" pos:column="37"/></condition><then pos:line="61" pos:column="37">
    <block pos:line="62" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="63" pos:column="9">char<pos:position pos:line="63" pos:column="13"/></name> <specifier pos:line="63" pos:column="14">const<pos:position pos:line="63" pos:column="19"/></specifier> <modifier pos:line="63" pos:column="20">*<pos:position pos:line="63" pos:column="21"/></modifier></type><name pos:line="63" pos:column="21">append<pos:position pos:line="63" pos:column="27"/></name> <init pos:line="63" pos:column="28">= <expr><literal type="string" pos:line="63" pos:column="30">"Plus"<pos:position pos:line="63" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="63" pos:column="37"/></decl_stmt>
        <if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><name pos:line="64" pos:column="13">append_minus<pos:position pos:line="64" pos:column="25"/></name></expr>)<pos:position pos:line="64" pos:column="26"/></condition><then pos:line="64" pos:column="26">
            <block type="pseudo"><expr_stmt><expr><name pos:line="65" pos:column="13">append<pos:position pos:line="65" pos:column="19"/></name> <operator pos:line="65" pos:column="20">=<pos:position pos:line="65" pos:column="21"/></operator> <literal type="string" pos:line="65" pos:column="22">"Minus"<pos:position pos:line="65" pos:column="29"/></literal></expr>;<pos:position pos:line="65" pos:column="30"/></expr_stmt></block></then></if>

        <decl_stmt><decl><type><name pos:line="67" pos:column="9">size_t<pos:position pos:line="67" pos:column="15"/></name></type> <name pos:line="67" pos:column="16">offset<pos:position pos:line="67" pos:column="22"/></name> <init pos:line="67" pos:column="23">= <expr><name pos:line="67" pos:column="25">buffer_size<pos:position pos:line="67" pos:column="36"/></name> <operator pos:line="67" pos:column="37">-<pos:position pos:line="67" pos:column="38"/></operator> <operator pos:line="67" pos:column="39">(<pos:position pos:line="67" pos:column="40"/></operator><call><name pos:line="67" pos:column="40">strlen<pos:position pos:line="67" pos:column="46"/></name> <argument_list pos:line="67" pos:column="47">(<argument><expr><name pos:line="67" pos:column="48">append<pos:position pos:line="67" pos:column="54"/></name></expr></argument>)<pos:position pos:line="67" pos:column="55"/></argument_list></call> <operator pos:line="67" pos:column="56">+<pos:position pos:line="67" pos:column="57"/></operator> <literal type="number" pos:line="67" pos:column="58">1<pos:position pos:line="67" pos:column="59"/></literal><operator pos:line="67" pos:column="59">)<pos:position pos:line="67" pos:column="60"/></operator></expr></init></decl>;<pos:position pos:line="67" pos:column="61"/></decl_stmt>
        <if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><name pos:line="68" pos:column="13">offset<pos:position pos:line="68" pos:column="19"/></name> <operator pos:line="68" pos:column="20">&gt;<pos:position pos:line="68" pos:column="24"/></operator> <call><name pos:line="68" pos:column="22">strlen<pos:position pos:line="68" pos:column="28"/></name> <argument_list pos:line="68" pos:column="29">(<argument><expr><name pos:line="68" pos:column="30">buffer<pos:position pos:line="68" pos:column="36"/></name></expr></argument>)<pos:position pos:line="68" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="68" pos:column="38"/></condition><then pos:line="68" pos:column="38">
            <block type="pseudo"><expr_stmt><expr><name pos:line="69" pos:column="13">offset<pos:position pos:line="69" pos:column="19"/></name> <operator pos:line="69" pos:column="20">=<pos:position pos:line="69" pos:column="21"/></operator> <call><name pos:line="69" pos:column="22">strlen<pos:position pos:line="69" pos:column="28"/></name> <argument_list pos:line="69" pos:column="29">(<argument><expr><name pos:line="69" pos:column="30">buffer<pos:position pos:line="69" pos:column="36"/></name></expr></argument>)<pos:position pos:line="69" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="38"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name pos:line="71" pos:column="9">sstrncpy<pos:position pos:line="71" pos:column="17"/></name> <argument_list pos:line="71" pos:column="18">(<argument><expr><name pos:line="71" pos:column="19">buffer<pos:position pos:line="71" pos:column="25"/></name> <operator pos:line="71" pos:column="26">+<pos:position pos:line="71" pos:column="27"/></operator> <name pos:line="71" pos:column="28">offset<pos:position pos:line="71" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="36">append<pos:position pos:line="71" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="44">buffer_size<pos:position pos:line="71" pos:column="55"/></name> <operator pos:line="71" pos:column="56">-<pos:position pos:line="71" pos:column="57"/></operator> <name pos:line="71" pos:column="58">offset<pos:position pos:line="71" pos:column="64"/></name></expr></argument>)<pos:position pos:line="71" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="66"/></expr_stmt>
    }<pos:position pos:line="72" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="74" pos:column="5">sfree<pos:position pos:line="74" pos:column="10"/></name> <argument_list pos:line="74" pos:column="11">(<argument><expr><name pos:line="74" pos:column="12">src_copy<pos:position pos:line="74" pos:column="20"/></name></expr></argument>)<pos:position pos:line="74" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="22"/></expr_stmt>
    <return pos:line="75" pos:column="5">return <expr><literal type="number" pos:line="75" pos:column="12">0<pos:position pos:line="75" pos:column="13"/></literal></expr>;<pos:position pos:line="75" pos:column="14"/></return>
}<pos:position pos:line="76" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1524_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">read_options<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">int<pos:position pos:line="1" pos:column="28"/></name></type> <name pos:line="1" pos:column="29">argc<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier><modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">argv<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list> <comment type="block" pos:line="1" pos:column="48">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">opt<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>

  <while pos:line="5" pos:column="3">while <condition pos:line="5" pos:column="9">(<expr><operator pos:line="5" pos:column="10">(<pos:position pos:line="5" pos:column="11"/></operator><name pos:line="5" pos:column="11">opt<pos:position pos:line="5" pos:column="14"/></name> <operator pos:line="5" pos:column="15">=<pos:position pos:line="5" pos:column="16"/></operator> <call><name pos:line="5" pos:column="17">getopt<pos:position pos:line="5" pos:column="23"/></name><argument_list pos:line="5" pos:column="23">(<argument><expr><name pos:line="5" pos:column="24">argc<pos:position pos:line="5" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="30">argv<pos:position pos:line="5" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="36">"n:H:p:i:d:D:h"<pos:position pos:line="5" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="52"/></argument_list></call><operator pos:line="5" pos:column="52">)<pos:position pos:line="5" pos:column="53"/></operator> <operator pos:line="5" pos:column="54">!=<pos:position pos:line="5" pos:column="56"/></operator> <operator pos:line="5" pos:column="57">-<pos:position pos:line="5" pos:column="58"/></operator><literal type="number" pos:line="5" pos:column="58">1<pos:position pos:line="5" pos:column="59"/></literal></expr>)<pos:position pos:line="5" pos:column="60"/></condition> <block pos:line="5" pos:column="61">{
    <switch pos:line="6" pos:column="5">switch <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">opt<pos:position pos:line="6" pos:column="16"/></name></expr>)<pos:position pos:line="6" pos:column="17"/></condition> <block pos:line="6" pos:column="18">{
    <case pos:line="7" pos:column="5">case <expr><literal type="char" pos:line="7" pos:column="10">'n'<pos:position pos:line="7" pos:column="13"/></literal></expr>:<pos:position pos:line="7" pos:column="14"/></case>
      <expr_stmt><expr><call><name pos:line="8" pos:column="7">get_integer_opt<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><name pos:line="8" pos:column="23">optarg<pos:position pos:line="8" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="31">&amp;<pos:position pos:line="8" pos:column="36"/></operator><name pos:line="8" pos:column="32">conf_num_values<pos:position pos:line="8" pos:column="47"/></name></expr></argument>)<pos:position pos:line="8" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="49"/></expr_stmt>
      <break pos:line="9" pos:column="7">break;<pos:position pos:line="9" pos:column="13"/></break>

    <case pos:line="11" pos:column="5">case <expr><literal type="char" pos:line="11" pos:column="10">'H'<pos:position pos:line="11" pos:column="13"/></literal></expr>:<pos:position pos:line="11" pos:column="14"/></case>
      <expr_stmt><expr><call><name pos:line="12" pos:column="7">get_integer_opt<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<argument><expr><name pos:line="12" pos:column="23">optarg<pos:position pos:line="12" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="31">&amp;<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="32">conf_num_hosts<pos:position pos:line="12" pos:column="46"/></name></expr></argument>)<pos:position pos:line="12" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="48"/></expr_stmt>
      <break pos:line="13" pos:column="7">break;<pos:position pos:line="13" pos:column="13"/></break>

    <case pos:line="15" pos:column="5">case <expr><literal type="char" pos:line="15" pos:column="10">'p'<pos:position pos:line="15" pos:column="13"/></literal></expr>:<pos:position pos:line="15" pos:column="14"/></case>
      <expr_stmt><expr><call><name pos:line="16" pos:column="7">get_integer_opt<pos:position pos:line="16" pos:column="22"/></name><argument_list pos:line="16" pos:column="22">(<argument><expr><name pos:line="16" pos:column="23">optarg<pos:position pos:line="16" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="31">&amp;<pos:position pos:line="16" pos:column="36"/></operator><name pos:line="16" pos:column="32">conf_num_plugins<pos:position pos:line="16" pos:column="48"/></name></expr></argument>)<pos:position pos:line="16" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="50"/></expr_stmt>
      <break pos:line="17" pos:column="7">break;<pos:position pos:line="17" pos:column="13"/></break>

    <case pos:line="19" pos:column="5">case <expr><literal type="char" pos:line="19" pos:column="10">'i'<pos:position pos:line="19" pos:column="13"/></literal></expr>:<pos:position pos:line="19" pos:column="14"/></case>
      <expr_stmt><expr><call><name pos:line="20" pos:column="7">get_double_opt<pos:position pos:line="20" pos:column="21"/></name><argument_list pos:line="20" pos:column="21">(<argument><expr><name pos:line="20" pos:column="22">optarg<pos:position pos:line="20" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="30">&amp;<pos:position pos:line="20" pos:column="35"/></operator><name pos:line="20" pos:column="31">conf_interval<pos:position pos:line="20" pos:column="44"/></name></expr></argument>)<pos:position pos:line="20" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="46"/></expr_stmt>
      <break pos:line="21" pos:column="7">break;<pos:position pos:line="21" pos:column="13"/></break>

    <case pos:line="23" pos:column="5">case <expr><literal type="char" pos:line="23" pos:column="10">'d'<pos:position pos:line="23" pos:column="13"/></literal></expr>:<pos:position pos:line="23" pos:column="14"/></case>
      <expr_stmt><expr><name pos:line="24" pos:column="7">conf_destination<pos:position pos:line="24" pos:column="23"/></name> <operator pos:line="24" pos:column="24">=<pos:position pos:line="24" pos:column="25"/></operator> <name pos:line="24" pos:column="26">optarg<pos:position pos:line="24" pos:column="32"/></name></expr>;<pos:position pos:line="24" pos:column="33"/></expr_stmt>
      <break pos:line="25" pos:column="7">break;<pos:position pos:line="25" pos:column="13"/></break>

    <case pos:line="27" pos:column="5">case <expr><literal type="char" pos:line="27" pos:column="10">'D'<pos:position pos:line="27" pos:column="13"/></literal></expr>:<pos:position pos:line="27" pos:column="14"/></case>
      <expr_stmt><expr><name pos:line="28" pos:column="7">conf_service<pos:position pos:line="28" pos:column="19"/></name> <operator pos:line="28" pos:column="20">=<pos:position pos:line="28" pos:column="21"/></operator> <name pos:line="28" pos:column="22">optarg<pos:position pos:line="28" pos:column="28"/></name></expr>;<pos:position pos:line="28" pos:column="29"/></expr_stmt>
      <break pos:line="29" pos:column="7">break;<pos:position pos:line="29" pos:column="13"/></break>

    <case pos:line="31" pos:column="5">case <expr><literal type="char" pos:line="31" pos:column="10">'h'<pos:position pos:line="31" pos:column="13"/></literal></expr>:<pos:position pos:line="31" pos:column="14"/></case>
      <expr_stmt><expr><call><name pos:line="32" pos:column="7">exit_usage<pos:position pos:line="32" pos:column="17"/></name><argument_list pos:line="32" pos:column="17">(<argument><expr><name pos:line="32" pos:column="18">EXIT_SUCCESS<pos:position pos:line="32" pos:column="30"/></name></expr></argument>)<pos:position pos:line="32" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="32"/></expr_stmt>

    <default pos:line="34" pos:column="5">default:<pos:position pos:line="34" pos:column="13"/></default>
      <expr_stmt><expr><call><name pos:line="35" pos:column="7">exit_usage<pos:position pos:line="35" pos:column="17"/></name><argument_list pos:line="35" pos:column="17">(<argument><expr><name pos:line="35" pos:column="18">EXIT_FAILURE<pos:position pos:line="35" pos:column="30"/></name></expr></argument>)<pos:position pos:line="35" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></switch> <comment type="block" pos:line="36" pos:column="7">/* switch (opt) */</comment>
  }<pos:position pos:line="37" pos:column="4"/></block></while>   <comment type="block" pos:line="37" pos:column="7">/* while (getopt) */</comment>

  <return pos:line="39" pos:column="3">return <expr><operator pos:line="39" pos:column="10">(<pos:position pos:line="39" pos:column="11"/></operator><literal type="number" pos:line="39" pos:column="11">0<pos:position pos:line="39" pos:column="12"/></literal><operator pos:line="39" pos:column="12">)<pos:position pos:line="39" pos:column="13"/></operator></expr>;<pos:position pos:line="39" pos:column="14"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

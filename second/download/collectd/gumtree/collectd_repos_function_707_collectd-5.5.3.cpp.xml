<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_707_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cow_simple_read<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">void<pos:position pos:line="1" pos:column="33"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="34"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">value_t<pos:position pos:line="3" pos:column="10"/></name></type>      <name><name pos:line="3" pos:column="16">values<pos:position pos:line="3" pos:column="22"/></name><index pos:line="3" pos:column="22">[<expr><literal type="number" pos:line="3" pos:column="23">1<pos:position pos:line="3" pos:column="24"/></literal></expr>]<pos:position pos:line="3" pos:column="25"/></index></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">value_list_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">vl<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">VALUE_LIST_INIT<pos:position pos:line="4" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name>        <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">buffer<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type>       <name pos:line="6" pos:column="16">buffer_size<pos:position pos:line="6" pos:column="27"/></name></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type>          <name pos:line="7" pos:column="16">status<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name>        <modifier pos:line="8" pos:column="15">*<pos:position pos:line="8" pos:column="16"/></modifier></type><name pos:line="8" pos:column="16">endptr<pos:position pos:line="8" pos:column="22"/></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">direct_access_element_t<pos:position pos:line="9" pos:column="26"/></name> <modifier pos:line="9" pos:column="27">*<pos:position pos:line="9" pos:column="28"/></modifier></type><name pos:line="9" pos:column="28">traverse<pos:position pos:line="9" pos:column="36"/></name></decl>;<pos:position pos:line="9" pos:column="37"/></decl_stmt>

  <comment type="block" pos:line="11" pos:column="3">/* traverse list and check entries */</comment>
  <for pos:line="12" pos:column="3">for <control pos:line="12" pos:column="7">(<init><expr><name pos:line="12" pos:column="8">traverse<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">=<pos:position pos:line="12" pos:column="18"/></operator> <name pos:line="12" pos:column="19">direct_list<pos:position pos:line="12" pos:column="30"/></name></expr>;<pos:position pos:line="12" pos:column="31"/></init> <condition><expr><name pos:line="12" pos:column="32">traverse<pos:position pos:line="12" pos:column="40"/></name> <operator pos:line="12" pos:column="41">!=<pos:position pos:line="12" pos:column="43"/></operator> <name pos:line="12" pos:column="44">NULL<pos:position pos:line="12" pos:column="48"/></name></expr>;<pos:position pos:line="12" pos:column="49"/></condition> <incr><expr><name pos:line="12" pos:column="50">traverse<pos:position pos:line="12" pos:column="58"/></name> <operator pos:line="12" pos:column="59">=<pos:position pos:line="12" pos:column="60"/></operator> <name><name pos:line="12" pos:column="61">traverse<pos:position pos:line="12" pos:column="69"/></name><operator pos:line="12" pos:column="69">-&gt;<pos:position pos:line="12" pos:column="74"/></operator><name pos:line="12" pos:column="71">next<pos:position pos:line="12" pos:column="75"/></name></name></expr></incr>)<pos:position pos:line="12" pos:column="76"/></control>
  <block pos:line="13" pos:column="3">{
      <expr_stmt><expr><name><name pos:line="14" pos:column="7">vl<pos:position pos:line="14" pos:column="9"/></name><operator pos:line="14" pos:column="9">.<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">values<pos:position pos:line="14" pos:column="16"/></name></name> <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator> <name pos:line="14" pos:column="19">values<pos:position pos:line="14" pos:column="25"/></name></expr>;<pos:position pos:line="14" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="15" pos:column="7">vl<pos:position pos:line="15" pos:column="9"/></name><operator pos:line="15" pos:column="9">.<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">values_len<pos:position pos:line="15" pos:column="20"/></name></name> <operator pos:line="15" pos:column="21">=<pos:position pos:line="15" pos:column="22"/></operator> <literal type="number" pos:line="15" pos:column="23">1<pos:position pos:line="15" pos:column="24"/></literal></expr>;<pos:position pos:line="15" pos:column="25"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="17" pos:column="7">sstrncpy<pos:position pos:line="17" pos:column="15"/></name> <argument_list pos:line="17" pos:column="16">(<argument><expr><name><name pos:line="17" pos:column="17">vl<pos:position pos:line="17" pos:column="19"/></name><operator pos:line="17" pos:column="19">.<pos:position pos:line="17" pos:column="20"/></operator><name pos:line="17" pos:column="20">host<pos:position pos:line="17" pos:column="24"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="26">hostname_g<pos:position pos:line="17" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="38">sizeof <argument_list pos:line="17" pos:column="45">(<argument><expr><name><name pos:line="17" pos:column="46">vl<pos:position pos:line="17" pos:column="48"/></name><operator pos:line="17" pos:column="48">.<pos:position pos:line="17" pos:column="49"/></operator><name pos:line="17" pos:column="49">host<pos:position pos:line="17" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="56"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="18" pos:column="7">sstrncpy<pos:position pos:line="18" pos:column="15"/></name> <argument_list pos:line="18" pos:column="16">(<argument><expr><name><name pos:line="18" pos:column="17">vl<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">.<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="20">plugin<pos:position pos:line="18" pos:column="26"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="28">"onewire"<pos:position pos:line="18" pos:column="37"/></literal></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="39">sizeof <argument_list pos:line="18" pos:column="46">(<argument><expr><name><name pos:line="18" pos:column="47">vl<pos:position pos:line="18" pos:column="49"/></name><operator pos:line="18" pos:column="49">.<pos:position pos:line="18" pos:column="50"/></operator><name pos:line="18" pos:column="50">plugin<pos:position pos:line="18" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="59"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="19" pos:column="7">sstrncpy<pos:position pos:line="19" pos:column="15"/></name> <argument_list pos:line="19" pos:column="16">(<argument><expr><name><name pos:line="19" pos:column="17">vl<pos:position pos:line="19" pos:column="19"/></name><operator pos:line="19" pos:column="19">.<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="20">plugin_instance<pos:position pos:line="19" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="37">traverse<pos:position pos:line="19" pos:column="45"/></name><operator pos:line="19" pos:column="45">-&gt;<pos:position pos:line="19" pos:column="50"/></operator><name pos:line="19" pos:column="47">address<pos:position pos:line="19" pos:column="54"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="56">sizeof <argument_list pos:line="19" pos:column="63">(<argument><expr><name><name pos:line="19" pos:column="64">vl<pos:position pos:line="19" pos:column="66"/></name><operator pos:line="19" pos:column="66">.<pos:position pos:line="19" pos:column="67"/></operator><name pos:line="19" pos:column="67">plugin_instance<pos:position pos:line="19" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="83"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="85"/></expr_stmt>

      <expr_stmt><expr><name pos:line="21" pos:column="7">status<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">=<pos:position pos:line="21" pos:column="15"/></operator> <call><name pos:line="21" pos:column="16">OW_get<pos:position pos:line="21" pos:column="22"/></name> <argument_list pos:line="21" pos:column="23">(<argument><expr><name><name pos:line="21" pos:column="24">traverse<pos:position pos:line="21" pos:column="32"/></name><operator pos:line="21" pos:column="32">-&gt;<pos:position pos:line="21" pos:column="37"/></operator><name pos:line="21" pos:column="34">path<pos:position pos:line="21" pos:column="38"/></name></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="40">&amp;<pos:position pos:line="21" pos:column="45"/></operator><name pos:line="21" pos:column="41">buffer<pos:position pos:line="21" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="49">&amp;<pos:position pos:line="21" pos:column="54"/></operator><name pos:line="21" pos:column="50">buffer_size<pos:position pos:line="21" pos:column="61"/></name></expr></argument>)<pos:position pos:line="21" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="63"/></expr_stmt>
      <if pos:line="22" pos:column="7">if <condition pos:line="22" pos:column="10">(<expr><name pos:line="22" pos:column="11">status<pos:position pos:line="22" pos:column="17"/></name> <operator pos:line="22" pos:column="18">&lt;<pos:position pos:line="22" pos:column="22"/></operator> <literal type="number" pos:line="22" pos:column="20">0<pos:position pos:line="22" pos:column="21"/></literal></expr>)<pos:position pos:line="22" pos:column="22"/></condition><then pos:line="22" pos:column="22">
      <block pos:line="23" pos:column="7">{
          <expr_stmt><expr><call><name pos:line="24" pos:column="11">ERROR<pos:position pos:line="24" pos:column="16"/></name> <argument_list pos:line="24" pos:column="17">(<argument><expr><literal type="string" pos:line="24" pos:column="18">"onewire plugin: OW_get (%s) failed. status = %#x;"<pos:position pos:line="24" pos:column="69"/></literal></expr></argument>,
                 <argument><expr><name><name pos:line="25" pos:column="18">traverse<pos:position pos:line="25" pos:column="26"/></name><operator pos:line="25" pos:column="26">-&gt;<pos:position pos:line="25" pos:column="31"/></operator><name pos:line="25" pos:column="28">path<pos:position pos:line="25" pos:column="32"/></name></name></expr></argument>,
                 <argument><expr><name pos:line="26" pos:column="18">status<pos:position pos:line="26" pos:column="24"/></name></expr></argument>)<pos:position pos:line="26" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="26"/></expr_stmt>
          <return pos:line="27" pos:column="11">return <expr><operator pos:line="27" pos:column="18">(<pos:position pos:line="27" pos:column="19"/></operator><operator pos:line="27" pos:column="19">-<pos:position pos:line="27" pos:column="20"/></operator><literal type="number" pos:line="27" pos:column="20">1<pos:position pos:line="27" pos:column="21"/></literal><operator pos:line="27" pos:column="21">)<pos:position pos:line="27" pos:column="22"/></operator></expr>;<pos:position pos:line="27" pos:column="23"/></return>
      }<pos:position pos:line="28" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="29" pos:column="7">DEBUG<pos:position pos:line="29" pos:column="12"/></name> <argument_list pos:line="29" pos:column="13">(<argument><expr><literal type="string" pos:line="29" pos:column="14">"onewire plugin: Read onewire device %s as %s"<pos:position pos:line="29" pos:column="60"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="62">traverse<pos:position pos:line="29" pos:column="70"/></name><operator pos:line="29" pos:column="70">-&gt;<pos:position pos:line="29" pos:column="75"/></operator><name pos:line="29" pos:column="72">path<pos:position pos:line="29" pos:column="76"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="78">buffer<pos:position pos:line="29" pos:column="84"/></name></expr></argument>)<pos:position pos:line="29" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="86"/></expr_stmt>


      <expr_stmt><expr><name pos:line="32" pos:column="7">endptr<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">=<pos:position pos:line="32" pos:column="15"/></operator> <name pos:line="32" pos:column="16">NULL<pos:position pos:line="32" pos:column="20"/></name></expr>;<pos:position pos:line="32" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="33" pos:column="7">values<pos:position pos:line="33" pos:column="13"/></name><index pos:line="33" pos:column="13">[<expr><literal type="number" pos:line="33" pos:column="14">0<pos:position pos:line="33" pos:column="15"/></literal></expr>]<pos:position pos:line="33" pos:column="16"/></index></name><operator pos:line="33" pos:column="16">.<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="17">gauge<pos:position pos:line="33" pos:column="22"/></name> <operator pos:line="33" pos:column="23">=<pos:position pos:line="33" pos:column="24"/></operator> <call><name pos:line="33" pos:column="25">strtod<pos:position pos:line="33" pos:column="31"/></name> <argument_list pos:line="33" pos:column="32">(<argument><expr><name pos:line="33" pos:column="33">buffer<pos:position pos:line="33" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="41">&amp;<pos:position pos:line="33" pos:column="46"/></operator><name pos:line="33" pos:column="42">endptr<pos:position pos:line="33" pos:column="48"/></name></expr></argument>)<pos:position pos:line="33" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="50"/></expr_stmt>
      <if pos:line="34" pos:column="7">if <condition pos:line="34" pos:column="10">(<expr><name pos:line="34" pos:column="11">endptr<pos:position pos:line="34" pos:column="17"/></name> <operator pos:line="34" pos:column="18">==<pos:position pos:line="34" pos:column="20"/></operator> <name pos:line="34" pos:column="21">NULL<pos:position pos:line="34" pos:column="25"/></name></expr>)<pos:position pos:line="34" pos:column="26"/></condition><then pos:line="34" pos:column="26">
      <block pos:line="35" pos:column="7">{
          <expr_stmt><expr><call><name pos:line="36" pos:column="11">ERROR<pos:position pos:line="36" pos:column="16"/></name> <argument_list pos:line="36" pos:column="17">(<argument><expr><literal type="string" pos:line="36" pos:column="18">"onewire plugin: Buffer is not a number: %s"<pos:position pos:line="36" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="64">buffer<pos:position pos:line="36" pos:column="70"/></name></expr></argument>)<pos:position pos:line="36" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="72"/></expr_stmt>
          <continue pos:line="37" pos:column="11">continue;<pos:position pos:line="37" pos:column="20"/></continue>
      }<pos:position pos:line="38" pos:column="8"/></block></then></if>

      <expr_stmt><expr><call><name pos:line="40" pos:column="7">sstrncpy<pos:position pos:line="40" pos:column="15"/></name> <argument_list pos:line="40" pos:column="16">(<argument><expr><name><name pos:line="40" pos:column="17">vl<pos:position pos:line="40" pos:column="19"/></name><operator pos:line="40" pos:column="19">.<pos:position pos:line="40" pos:column="20"/></operator><name pos:line="40" pos:column="20">type<pos:position pos:line="40" pos:column="24"/></name></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="26">traverse<pos:position pos:line="40" pos:column="34"/></name><operator pos:line="40" pos:column="34">-&gt;<pos:position pos:line="40" pos:column="39"/></operator><name pos:line="40" pos:column="36">file<pos:position pos:line="40" pos:column="40"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="40" pos:column="42">sizeof <argument_list pos:line="40" pos:column="49">(<argument><expr><name><name pos:line="40" pos:column="50">vl<pos:position pos:line="40" pos:column="52"/></name><operator pos:line="40" pos:column="52">.<pos:position pos:line="40" pos:column="53"/></operator><name pos:line="40" pos:column="53">type<pos:position pos:line="40" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="40" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="60"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="41" pos:column="7">sstrncpy<pos:position pos:line="41" pos:column="15"/></name> <argument_list pos:line="41" pos:column="16">(<argument><expr><name><name pos:line="41" pos:column="17">vl<pos:position pos:line="41" pos:column="19"/></name><operator pos:line="41" pos:column="19">.<pos:position pos:line="41" pos:column="20"/></operator><name pos:line="41" pos:column="20">type_instance<pos:position pos:line="41" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="35">""<pos:position pos:line="41" pos:column="37"/></literal></expr></argument>,   <argument><expr><sizeof pos:line="41" pos:column="41">sizeof <argument_list pos:line="41" pos:column="48">(<argument><expr><literal type="string" pos:line="41" pos:column="49">""<pos:position pos:line="41" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="41" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="54"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="43" pos:column="7">plugin_dispatch_values<pos:position pos:line="43" pos:column="29"/></name> <argument_list pos:line="43" pos:column="30">(<argument><expr><operator pos:line="43" pos:column="31">&amp;<pos:position pos:line="43" pos:column="36"/></operator><name pos:line="43" pos:column="32">vl<pos:position pos:line="43" pos:column="34"/></name></expr></argument>)<pos:position pos:line="43" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="44" pos:column="7">free<pos:position pos:line="44" pos:column="11"/></name> <argument_list pos:line="44" pos:column="12">(<argument><expr><name pos:line="44" pos:column="13">buffer<pos:position pos:line="44" pos:column="19"/></name></expr></argument>)<pos:position pos:line="44" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="21"/></expr_stmt>
  }<pos:position pos:line="45" pos:column="4"/></block></for> <comment type="block" pos:line="45" pos:column="5">/* for (traverse) */</comment>

  <return pos:line="47" pos:column="3">return <expr><literal type="number" pos:line="47" pos:column="10">0<pos:position pos:line="47" pos:column="11"/></literal></expr>;<pos:position pos:line="47" pos:column="12"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1296_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cldap_read_host<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">user_data_t<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">ud<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list> <comment type="block" pos:line="1" pos:column="46">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">cldap_t<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">st<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">LDAPMessage<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">result<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">dn<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">rc<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">status<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name><name pos:line="9" pos:column="15">attrs<pos:position pos:line="9" pos:column="20"/></name><index pos:line="9" pos:column="20">[<expr><literal type="number" pos:line="9" pos:column="21">9<pos:position pos:line="9" pos:column="22"/></literal></expr>]<pos:position pos:line="9" pos:column="23"/></index></name> <init pos:line="9" pos:column="24">= <expr><block pos:line="9" pos:column="26">{ <expr><literal type="string" pos:line="9" pos:column="28">"monitorCounter"<pos:position pos:line="9" pos:column="44"/></literal></expr>,
				<expr><literal type="string" pos:line="10" pos:column="33">"monitorOpCompleted"<pos:position pos:line="10" pos:column="53"/></literal></expr>,
				<expr><literal type="string" pos:line="11" pos:column="33">"monitorOpInitiated"<pos:position pos:line="11" pos:column="53"/></literal></expr>,
				<expr><literal type="string" pos:line="12" pos:column="33">"monitoredInfo"<pos:position pos:line="12" pos:column="48"/></literal></expr>,
				<expr><literal type="string" pos:line="13" pos:column="33">"olmBDBEntryCache"<pos:position pos:line="13" pos:column="51"/></literal></expr>,
				<expr><literal type="string" pos:line="14" pos:column="33">"olmBDBDNCache"<pos:position pos:line="14" pos:column="48"/></literal></expr>,
				<expr><literal type="string" pos:line="15" pos:column="33">"olmBDBIDLCache"<pos:position pos:line="15" pos:column="49"/></literal></expr>,
				<expr><literal type="string" pos:line="16" pos:column="33">"namingContexts"<pos:position pos:line="16" pos:column="49"/></literal></expr>,
				<expr><name pos:line="17" pos:column="33">NULL<pos:position pos:line="17" pos:column="37"/></name></expr> }<pos:position pos:line="17" pos:column="39"/></block></expr></init></decl>;<pos:position pos:line="17" pos:column="40"/></decl_stmt>

	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">(<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">ud<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">==<pos:position pos:line="19" pos:column="19"/></operator> <name pos:line="19" pos:column="20">NULL<pos:position pos:line="19" pos:column="24"/></name><operator pos:line="19" pos:column="24">)<pos:position pos:line="19" pos:column="25"/></operator> <operator pos:line="19" pos:column="26">||<pos:position pos:line="19" pos:column="28"/></operator> <operator pos:line="19" pos:column="29">(<pos:position pos:line="19" pos:column="30"/></operator><name><name pos:line="19" pos:column="30">ud<pos:position pos:line="19" pos:column="32"/></name><operator pos:line="19" pos:column="32">-&gt;<pos:position pos:line="19" pos:column="37"/></operator><name pos:line="19" pos:column="34">data<pos:position pos:line="19" pos:column="38"/></name></name> <operator pos:line="19" pos:column="39">==<pos:position pos:line="19" pos:column="41"/></operator> <name pos:line="19" pos:column="42">NULL<pos:position pos:line="19" pos:column="46"/></name><operator pos:line="19" pos:column="46">)<pos:position pos:line="19" pos:column="47"/></operator></expr>)<pos:position pos:line="19" pos:column="48"/></condition><then pos:line="19" pos:column="48">
	<block pos:line="20" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">ERROR<pos:position pos:line="21" pos:column="22"/></name> <argument_list pos:line="21" pos:column="23">(<argument><expr><literal type="string" pos:line="21" pos:column="24">"openldap plugin: cldap_read_host: Invalid user data."<pos:position pos:line="21" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="80"/></expr_stmt>
		<return pos:line="22" pos:column="17">return <expr><operator pos:line="22" pos:column="24">(<pos:position pos:line="22" pos:column="25"/></operator><operator pos:line="22" pos:column="25">-<pos:position pos:line="22" pos:column="26"/></operator><literal type="number" pos:line="22" pos:column="26">1<pos:position pos:line="22" pos:column="27"/></literal><operator pos:line="22" pos:column="27">)<pos:position pos:line="22" pos:column="28"/></operator></expr>;<pos:position pos:line="22" pos:column="29"/></return>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="25" pos:column="9">st<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <operator pos:line="25" pos:column="14">(<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="15">cldap_t<pos:position pos:line="25" pos:column="22"/></name> <operator pos:line="25" pos:column="23">*<pos:position pos:line="25" pos:column="24"/></operator><operator pos:line="25" pos:column="24">)<pos:position pos:line="25" pos:column="25"/></operator> <name><name pos:line="25" pos:column="26">ud<pos:position pos:line="25" pos:column="28"/></name><operator pos:line="25" pos:column="28">-&gt;<pos:position pos:line="25" pos:column="33"/></operator><name pos:line="25" pos:column="30">data<pos:position pos:line="25" pos:column="34"/></name></name></expr>;<pos:position pos:line="25" pos:column="35"/></expr_stmt>

	<expr_stmt><expr><name pos:line="27" pos:column="9">status<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <call><name pos:line="27" pos:column="18">cldap_init_host<pos:position pos:line="27" pos:column="33"/></name> <argument_list pos:line="27" pos:column="34">(<argument><expr><name pos:line="27" pos:column="35">st<pos:position pos:line="27" pos:column="37"/></name></expr></argument>)<pos:position pos:line="27" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="39"/></expr_stmt>
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">status<pos:position pos:line="28" pos:column="19"/></name> <operator pos:line="28" pos:column="20">!=<pos:position pos:line="28" pos:column="22"/></operator> <literal type="number" pos:line="28" pos:column="23">0<pos:position pos:line="28" pos:column="24"/></literal></expr>)<pos:position pos:line="28" pos:column="25"/></condition><then pos:line="28" pos:column="25">
		<block type="pseudo"><return pos:line="29" pos:column="17">return <expr><operator pos:line="29" pos:column="24">(<pos:position pos:line="29" pos:column="25"/></operator><operator pos:line="29" pos:column="25">-<pos:position pos:line="29" pos:column="26"/></operator><literal type="number" pos:line="29" pos:column="26">1<pos:position pos:line="29" pos:column="27"/></literal><operator pos:line="29" pos:column="27">)<pos:position pos:line="29" pos:column="28"/></operator></expr>;<pos:position pos:line="29" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="31" pos:column="9">rc<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">=<pos:position pos:line="31" pos:column="13"/></operator> <call><name pos:line="31" pos:column="14">ldap_search_ext_s<pos:position pos:line="31" pos:column="31"/></name> <argument_list pos:line="31" pos:column="32">(<argument><expr><name><name pos:line="31" pos:column="33">st<pos:position pos:line="31" pos:column="35"/></name><operator pos:line="31" pos:column="35">-&gt;<pos:position pos:line="31" pos:column="40"/></operator><name pos:line="31" pos:column="37">ld<pos:position pos:line="31" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="41">"cn=Monitor"<pos:position pos:line="31" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="55">LDAP_SCOPE_SUBTREE<pos:position pos:line="31" pos:column="73"/></name></expr></argument>,
		<argument><expr><literal type="string" pos:line="32" pos:column="17">"(|(!(cn=* *))(cn=Database*))"<pos:position pos:line="32" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="49">attrs<pos:position pos:line="32" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="56">0<pos:position pos:line="32" pos:column="57"/></literal></expr></argument>,
		<argument><expr><name pos:line="33" pos:column="17">NULL<pos:position pos:line="33" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="23">NULL<pos:position pos:line="33" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="29">NULL<pos:position pos:line="33" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="35">0<pos:position pos:line="33" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="33" pos:column="38">&amp;<pos:position pos:line="33" pos:column="43"/></operator><name pos:line="33" pos:column="39">result<pos:position pos:line="33" pos:column="45"/></name></expr></argument>)<pos:position pos:line="33" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="47"/></expr_stmt>

	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name pos:line="35" pos:column="13">rc<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">!=<pos:position pos:line="35" pos:column="18"/></operator> <name pos:line="35" pos:column="19">LDAP_SUCCESS<pos:position pos:line="35" pos:column="31"/></name></expr>)<pos:position pos:line="35" pos:column="32"/></condition><then pos:line="35" pos:column="32">
	<block pos:line="36" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">ERROR<pos:position pos:line="37" pos:column="22"/></name> <argument_list pos:line="37" pos:column="23">(<argument><expr><literal type="string" pos:line="37" pos:column="24">"openldap plugin: Failed to execute search: %s"<pos:position pos:line="37" pos:column="71"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="38" pos:column="33">ldap_err2string<pos:position pos:line="38" pos:column="48"/></name> <argument_list pos:line="38" pos:column="49">(<argument><expr><name pos:line="38" pos:column="50">rc<pos:position pos:line="38" pos:column="52"/></name></expr></argument>)<pos:position pos:line="38" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="39" pos:column="17">ldap_msgfree<pos:position pos:line="39" pos:column="29"/></name> <argument_list pos:line="39" pos:column="30">(<argument><expr><name pos:line="39" pos:column="31">result<pos:position pos:line="39" pos:column="37"/></name></expr></argument>)<pos:position pos:line="39" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="40" pos:column="17">st<pos:position pos:line="40" pos:column="19"/></name><operator pos:line="40" pos:column="19">-&gt;<pos:position pos:line="40" pos:column="24"/></operator><name pos:line="40" pos:column="21">state<pos:position pos:line="40" pos:column="26"/></name></name> <operator pos:line="40" pos:column="27">=<pos:position pos:line="40" pos:column="28"/></operator> <literal type="number" pos:line="40" pos:column="29">0<pos:position pos:line="40" pos:column="30"/></literal></expr>;<pos:position pos:line="40" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="41" pos:column="17">ldap_unbind_ext_s<pos:position pos:line="41" pos:column="34"/></name> <argument_list pos:line="41" pos:column="35">(<argument><expr><name><name pos:line="41" pos:column="36">st<pos:position pos:line="41" pos:column="38"/></name><operator pos:line="41" pos:column="38">-&gt;<pos:position pos:line="41" pos:column="43"/></operator><name pos:line="41" pos:column="40">ld<pos:position pos:line="41" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="44">NULL<pos:position pos:line="41" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="50">NULL<pos:position pos:line="41" pos:column="54"/></name></expr></argument>)<pos:position pos:line="41" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="56"/></expr_stmt>
		<return pos:line="42" pos:column="17">return <expr><operator pos:line="42" pos:column="24">(<pos:position pos:line="42" pos:column="25"/></operator><operator pos:line="42" pos:column="25">-<pos:position pos:line="42" pos:column="26"/></operator><literal type="number" pos:line="42" pos:column="26">1<pos:position pos:line="42" pos:column="27"/></literal><operator pos:line="42" pos:column="27">)<pos:position pos:line="42" pos:column="28"/></operator></expr>;<pos:position pos:line="42" pos:column="29"/></return>
	}<pos:position pos:line="43" pos:column="10"/></block></then></if>

	<for pos:line="45" pos:column="9">for <control pos:line="45" pos:column="13">(<init><decl><type><name pos:line="45" pos:column="14">LDAPMessage<pos:position pos:line="45" pos:column="25"/></name> <modifier pos:line="45" pos:column="26">*<pos:position pos:line="45" pos:column="27"/></modifier></type><name pos:line="45" pos:column="27">e<pos:position pos:line="45" pos:column="28"/></name> <init pos:line="45" pos:column="29">= <expr><call><name pos:line="45" pos:column="31">ldap_first_entry<pos:position pos:line="45" pos:column="47"/></name> <argument_list pos:line="45" pos:column="48">(<argument><expr><name><name pos:line="45" pos:column="49">st<pos:position pos:line="45" pos:column="51"/></name><operator pos:line="45" pos:column="51">-&gt;<pos:position pos:line="45" pos:column="56"/></operator><name pos:line="45" pos:column="53">ld<pos:position pos:line="45" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="57">result<pos:position pos:line="45" pos:column="63"/></name></expr></argument>)<pos:position pos:line="45" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="45" pos:column="65"/></init> <condition><expr><name pos:line="45" pos:column="66">e<pos:position pos:line="45" pos:column="67"/></name> <operator pos:line="45" pos:column="68">!=<pos:position pos:line="45" pos:column="70"/></operator> <name pos:line="45" pos:column="71">NULL<pos:position pos:line="45" pos:column="75"/></name></expr>;<pos:position pos:line="45" pos:column="76"/></condition>
		<incr><expr><name pos:line="46" pos:column="17">e<pos:position pos:line="46" pos:column="18"/></name> <operator pos:line="46" pos:column="19">=<pos:position pos:line="46" pos:column="20"/></operator> <call><name pos:line="46" pos:column="21">ldap_next_entry<pos:position pos:line="46" pos:column="36"/></name> <argument_list pos:line="46" pos:column="37">(<argument><expr><name><name pos:line="46" pos:column="38">st<pos:position pos:line="46" pos:column="40"/></name><operator pos:line="46" pos:column="40">-&gt;<pos:position pos:line="46" pos:column="45"/></operator><name pos:line="46" pos:column="42">ld<pos:position pos:line="46" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="46">e<pos:position pos:line="46" pos:column="47"/></name></expr></argument>)<pos:position pos:line="46" pos:column="48"/></argument_list></call></expr></incr>)<pos:position pos:line="46" pos:column="49"/></control>
	<block pos:line="47" pos:column="9">{
		<if pos:line="48" pos:column="17">if <condition pos:line="48" pos:column="20">(<expr><operator pos:line="48" pos:column="21">(<pos:position pos:line="48" pos:column="22"/></operator><name pos:line="48" pos:column="22">dn<pos:position pos:line="48" pos:column="24"/></name> <operator pos:line="48" pos:column="25">=<pos:position pos:line="48" pos:column="26"/></operator> <call><name pos:line="48" pos:column="27">ldap_get_dn<pos:position pos:line="48" pos:column="38"/></name> <argument_list pos:line="48" pos:column="39">(<argument><expr><name><name pos:line="48" pos:column="40">st<pos:position pos:line="48" pos:column="42"/></name><operator pos:line="48" pos:column="42">-&gt;<pos:position pos:line="48" pos:column="47"/></operator><name pos:line="48" pos:column="44">ld<pos:position pos:line="48" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="48">e<pos:position pos:line="48" pos:column="49"/></name></expr></argument>)<pos:position pos:line="48" pos:column="50"/></argument_list></call><operator pos:line="48" pos:column="50">)<pos:position pos:line="48" pos:column="51"/></operator> <operator pos:line="48" pos:column="52">!=<pos:position pos:line="48" pos:column="54"/></operator> <name pos:line="48" pos:column="55">NULL<pos:position pos:line="48" pos:column="59"/></name></expr>)<pos:position pos:line="48" pos:column="60"/></condition><then pos:line="48" pos:column="60">
		<block pos:line="49" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="50" pos:column="25">unsigned<pos:position pos:line="50" pos:column="33"/></name> <name pos:line="50" pos:column="34">long<pos:position pos:line="50" pos:column="38"/></name> <name pos:line="50" pos:column="39">long<pos:position pos:line="50" pos:column="43"/></name></type> <name pos:line="50" pos:column="44">counter<pos:position pos:line="50" pos:column="51"/></name> <init pos:line="50" pos:column="52">= <expr><literal type="number" pos:line="50" pos:column="54">0<pos:position pos:line="50" pos:column="55"/></literal></expr></init></decl>;<pos:position pos:line="50" pos:column="56"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="51" pos:column="25">unsigned<pos:position pos:line="51" pos:column="33"/></name> <name pos:line="51" pos:column="34">long<pos:position pos:line="51" pos:column="38"/></name> <name pos:line="51" pos:column="39">long<pos:position pos:line="51" pos:column="43"/></name></type> <name pos:line="51" pos:column="44">opc<pos:position pos:line="51" pos:column="47"/></name> <init pos:line="51" pos:column="48">= <expr><literal type="number" pos:line="51" pos:column="50">0<pos:position pos:line="51" pos:column="51"/></literal></expr></init></decl>;<pos:position pos:line="51" pos:column="52"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="52" pos:column="25">unsigned<pos:position pos:line="52" pos:column="33"/></name> <name pos:line="52" pos:column="34">long<pos:position pos:line="52" pos:column="38"/></name> <name pos:line="52" pos:column="39">long<pos:position pos:line="52" pos:column="43"/></name></type> <name pos:line="52" pos:column="44">opi<pos:position pos:line="52" pos:column="47"/></name> <init pos:line="52" pos:column="48">= <expr><literal type="number" pos:line="52" pos:column="50">0<pos:position pos:line="52" pos:column="51"/></literal></expr></init></decl>;<pos:position pos:line="52" pos:column="52"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="53" pos:column="25">unsigned<pos:position pos:line="53" pos:column="33"/></name> <name pos:line="53" pos:column="34">long<pos:position pos:line="53" pos:column="38"/></name> <name pos:line="53" pos:column="39">long<pos:position pos:line="53" pos:column="43"/></name></type> <name pos:line="53" pos:column="44">info<pos:position pos:line="53" pos:column="48"/></name> <init pos:line="53" pos:column="49">= <expr><literal type="number" pos:line="53" pos:column="51">0<pos:position pos:line="53" pos:column="52"/></literal></expr></init></decl>;<pos:position pos:line="53" pos:column="53"/></decl_stmt>

			<decl_stmt><decl><type><name><name pos:line="55" pos:column="25">struct<pos:position pos:line="55" pos:column="31"/></name> <name pos:line="55" pos:column="32">berval<pos:position pos:line="55" pos:column="38"/></name></name></type> <name pos:line="55" pos:column="39">counter_data<pos:position pos:line="55" pos:column="51"/></name></decl>;<pos:position pos:line="55" pos:column="52"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="56" pos:column="25">struct<pos:position pos:line="56" pos:column="31"/></name> <name pos:line="56" pos:column="32">berval<pos:position pos:line="56" pos:column="38"/></name></name></type> <name pos:line="56" pos:column="39">opc_data<pos:position pos:line="56" pos:column="47"/></name></decl>;<pos:position pos:line="56" pos:column="48"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="57" pos:column="25">struct<pos:position pos:line="57" pos:column="31"/></name> <name pos:line="57" pos:column="32">berval<pos:position pos:line="57" pos:column="38"/></name></name></type> <name pos:line="57" pos:column="39">opi_data<pos:position pos:line="57" pos:column="47"/></name></decl>;<pos:position pos:line="57" pos:column="48"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="58" pos:column="25">struct<pos:position pos:line="58" pos:column="31"/></name> <name pos:line="58" pos:column="32">berval<pos:position pos:line="58" pos:column="38"/></name></name></type> <name pos:line="58" pos:column="39">info_data<pos:position pos:line="58" pos:column="48"/></name></decl>;<pos:position pos:line="58" pos:column="49"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="59" pos:column="25">struct<pos:position pos:line="59" pos:column="31"/></name> <name pos:line="59" pos:column="32">berval<pos:position pos:line="59" pos:column="38"/></name></name></type> <name pos:line="59" pos:column="39">olmbdb_data<pos:position pos:line="59" pos:column="50"/></name></decl>;<pos:position pos:line="59" pos:column="51"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="60" pos:column="25">struct<pos:position pos:line="60" pos:column="31"/></name> <name pos:line="60" pos:column="32">berval<pos:position pos:line="60" pos:column="38"/></name></name></type> <name pos:line="60" pos:column="39">nc_data<pos:position pos:line="60" pos:column="46"/></name></decl>;<pos:position pos:line="60" pos:column="47"/></decl_stmt>

			<decl_stmt><decl><type><name><name pos:line="62" pos:column="25">struct<pos:position pos:line="62" pos:column="31"/></name> <name pos:line="62" pos:column="32">berval<pos:position pos:line="62" pos:column="38"/></name></name> <modifier pos:line="62" pos:column="39">*<pos:position pos:line="62" pos:column="40"/></modifier><modifier pos:line="62" pos:column="40">*<pos:position pos:line="62" pos:column="41"/></modifier></type><name pos:line="62" pos:column="41">counter_list<pos:position pos:line="62" pos:column="53"/></name></decl>;<pos:position pos:line="62" pos:column="54"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="63" pos:column="25">struct<pos:position pos:line="63" pos:column="31"/></name> <name pos:line="63" pos:column="32">berval<pos:position pos:line="63" pos:column="38"/></name></name> <modifier pos:line="63" pos:column="39">*<pos:position pos:line="63" pos:column="40"/></modifier><modifier pos:line="63" pos:column="40">*<pos:position pos:line="63" pos:column="41"/></modifier></type><name pos:line="63" pos:column="41">opc_list<pos:position pos:line="63" pos:column="49"/></name></decl>;<pos:position pos:line="63" pos:column="50"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="64" pos:column="25">struct<pos:position pos:line="64" pos:column="31"/></name> <name pos:line="64" pos:column="32">berval<pos:position pos:line="64" pos:column="38"/></name></name> <modifier pos:line="64" pos:column="39">*<pos:position pos:line="64" pos:column="40"/></modifier><modifier pos:line="64" pos:column="40">*<pos:position pos:line="64" pos:column="41"/></modifier></type><name pos:line="64" pos:column="41">opi_list<pos:position pos:line="64" pos:column="49"/></name></decl>;<pos:position pos:line="64" pos:column="50"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="65" pos:column="25">struct<pos:position pos:line="65" pos:column="31"/></name> <name pos:line="65" pos:column="32">berval<pos:position pos:line="65" pos:column="38"/></name></name> <modifier pos:line="65" pos:column="39">*<pos:position pos:line="65" pos:column="40"/></modifier><modifier pos:line="65" pos:column="40">*<pos:position pos:line="65" pos:column="41"/></modifier></type><name pos:line="65" pos:column="41">info_list<pos:position pos:line="65" pos:column="50"/></name></decl>;<pos:position pos:line="65" pos:column="51"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="66" pos:column="25">struct<pos:position pos:line="66" pos:column="31"/></name> <name pos:line="66" pos:column="32">berval<pos:position pos:line="66" pos:column="38"/></name></name> <modifier pos:line="66" pos:column="39">*<pos:position pos:line="66" pos:column="40"/></modifier><modifier pos:line="66" pos:column="40">*<pos:position pos:line="66" pos:column="41"/></modifier></type><name pos:line="66" pos:column="41">olmbdb_list<pos:position pos:line="66" pos:column="52"/></name></decl>;<pos:position pos:line="66" pos:column="53"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="67" pos:column="25">struct<pos:position pos:line="67" pos:column="31"/></name> <name pos:line="67" pos:column="32">berval<pos:position pos:line="67" pos:column="38"/></name></name> <modifier pos:line="67" pos:column="39">*<pos:position pos:line="67" pos:column="40"/></modifier><modifier pos:line="67" pos:column="40">*<pos:position pos:line="67" pos:column="41"/></modifier></type><name pos:line="67" pos:column="41">nc_list<pos:position pos:line="67" pos:column="48"/></name></decl>;<pos:position pos:line="67" pos:column="49"/></decl_stmt>

			<if pos:line="69" pos:column="25">if <condition pos:line="69" pos:column="28">(<expr><operator pos:line="69" pos:column="29">(<pos:position pos:line="69" pos:column="30"/></operator><name pos:line="69" pos:column="30">counter_list<pos:position pos:line="69" pos:column="42"/></name> <operator pos:line="69" pos:column="43">=<pos:position pos:line="69" pos:column="44"/></operator> <call><name pos:line="69" pos:column="45">ldap_get_values_len<pos:position pos:line="69" pos:column="64"/></name> <argument_list pos:line="69" pos:column="65">(<argument><expr><name><name pos:line="69" pos:column="66">st<pos:position pos:line="69" pos:column="68"/></name><operator pos:line="69" pos:column="68">-&gt;<pos:position pos:line="69" pos:column="73"/></operator><name pos:line="69" pos:column="70">ld<pos:position pos:line="69" pos:column="72"/></name></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="74">e<pos:position pos:line="69" pos:column="75"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="70" pos:column="33">"monitorCounter"<pos:position pos:line="70" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="50"/></argument_list></call><operator pos:line="70" pos:column="50">)<pos:position pos:line="70" pos:column="51"/></operator> <operator pos:line="70" pos:column="52">!=<pos:position pos:line="70" pos:column="54"/></operator> <name pos:line="70" pos:column="55">NULL<pos:position pos:line="70" pos:column="59"/></name></expr>)<pos:position pos:line="70" pos:column="60"/></condition><then pos:line="70" pos:column="60">
			<block pos:line="71" pos:column="25">{
				<expr_stmt><expr><name pos:line="72" pos:column="33">counter_data<pos:position pos:line="72" pos:column="45"/></name> <operator pos:line="72" pos:column="46">=<pos:position pos:line="72" pos:column="47"/></operator> <operator pos:line="72" pos:column="48">*<pos:position pos:line="72" pos:column="49"/></operator><name><name pos:line="72" pos:column="49">counter_list<pos:position pos:line="72" pos:column="61"/></name><index pos:line="72" pos:column="61">[<expr><literal type="number" pos:line="72" pos:column="62">0<pos:position pos:line="72" pos:column="63"/></literal></expr>]<pos:position pos:line="72" pos:column="64"/></index></name></expr>;<pos:position pos:line="72" pos:column="65"/></expr_stmt>
				<expr_stmt><expr><name pos:line="73" pos:column="33">counter<pos:position pos:line="73" pos:column="40"/></name> <operator pos:line="73" pos:column="41">=<pos:position pos:line="73" pos:column="42"/></operator> <call><name pos:line="73" pos:column="43">atoll<pos:position pos:line="73" pos:column="48"/></name> <argument_list pos:line="73" pos:column="49">(<argument><expr><name><name pos:line="73" pos:column="50">counter_data<pos:position pos:line="73" pos:column="62"/></name><operator pos:line="73" pos:column="62">.<pos:position pos:line="73" pos:column="63"/></operator><name pos:line="73" pos:column="63">bv_val<pos:position pos:line="73" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="71"/></expr_stmt>
			}<pos:position pos:line="74" pos:column="26"/></block></then></if>

			<if pos:line="76" pos:column="25">if <condition pos:line="76" pos:column="28">(<expr><operator pos:line="76" pos:column="29">(<pos:position pos:line="76" pos:column="30"/></operator><name pos:line="76" pos:column="30">opc_list<pos:position pos:line="76" pos:column="38"/></name> <operator pos:line="76" pos:column="39">=<pos:position pos:line="76" pos:column="40"/></operator> <call><name pos:line="76" pos:column="41">ldap_get_values_len<pos:position pos:line="76" pos:column="60"/></name> <argument_list pos:line="76" pos:column="61">(<argument><expr><name><name pos:line="76" pos:column="62">st<pos:position pos:line="76" pos:column="64"/></name><operator pos:line="76" pos:column="64">-&gt;<pos:position pos:line="76" pos:column="69"/></operator><name pos:line="76" pos:column="66">ld<pos:position pos:line="76" pos:column="68"/></name></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="70">e<pos:position pos:line="76" pos:column="71"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="77" pos:column="33">"monitorOpCompleted"<pos:position pos:line="77" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="54"/></argument_list></call><operator pos:line="77" pos:column="54">)<pos:position pos:line="77" pos:column="55"/></operator> <operator pos:line="77" pos:column="56">!=<pos:position pos:line="77" pos:column="58"/></operator> <name pos:line="77" pos:column="59">NULL<pos:position pos:line="77" pos:column="63"/></name></expr>)<pos:position pos:line="77" pos:column="64"/></condition><then pos:line="77" pos:column="64">
			<block pos:line="78" pos:column="25">{
				<expr_stmt><expr><name pos:line="79" pos:column="33">opc_data<pos:position pos:line="79" pos:column="41"/></name> <operator pos:line="79" pos:column="42">=<pos:position pos:line="79" pos:column="43"/></operator> <operator pos:line="79" pos:column="44">*<pos:position pos:line="79" pos:column="45"/></operator><name><name pos:line="79" pos:column="45">opc_list<pos:position pos:line="79" pos:column="53"/></name><index pos:line="79" pos:column="53">[<expr><literal type="number" pos:line="79" pos:column="54">0<pos:position pos:line="79" pos:column="55"/></literal></expr>]<pos:position pos:line="79" pos:column="56"/></index></name></expr>;<pos:position pos:line="79" pos:column="57"/></expr_stmt>
				<expr_stmt><expr><name pos:line="80" pos:column="33">opc<pos:position pos:line="80" pos:column="36"/></name> <operator pos:line="80" pos:column="37">=<pos:position pos:line="80" pos:column="38"/></operator> <call><name pos:line="80" pos:column="39">atoll<pos:position pos:line="80" pos:column="44"/></name> <argument_list pos:line="80" pos:column="45">(<argument><expr><name><name pos:line="80" pos:column="46">opc_data<pos:position pos:line="80" pos:column="54"/></name><operator pos:line="80" pos:column="54">.<pos:position pos:line="80" pos:column="55"/></operator><name pos:line="80" pos:column="55">bv_val<pos:position pos:line="80" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="63"/></expr_stmt>
			}<pos:position pos:line="81" pos:column="26"/></block></then></if>

			<if pos:line="83" pos:column="25">if <condition pos:line="83" pos:column="28">(<expr><operator pos:line="83" pos:column="29">(<pos:position pos:line="83" pos:column="30"/></operator><name pos:line="83" pos:column="30">opi_list<pos:position pos:line="83" pos:column="38"/></name> <operator pos:line="83" pos:column="39">=<pos:position pos:line="83" pos:column="40"/></operator> <call><name pos:line="83" pos:column="41">ldap_get_values_len<pos:position pos:line="83" pos:column="60"/></name> <argument_list pos:line="83" pos:column="61">(<argument><expr><name><name pos:line="83" pos:column="62">st<pos:position pos:line="83" pos:column="64"/></name><operator pos:line="83" pos:column="64">-&gt;<pos:position pos:line="83" pos:column="69"/></operator><name pos:line="83" pos:column="66">ld<pos:position pos:line="83" pos:column="68"/></name></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="70">e<pos:position pos:line="83" pos:column="71"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="84" pos:column="33">"monitorOpInitiated"<pos:position pos:line="84" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="54"/></argument_list></call><operator pos:line="84" pos:column="54">)<pos:position pos:line="84" pos:column="55"/></operator> <operator pos:line="84" pos:column="56">!=<pos:position pos:line="84" pos:column="58"/></operator> <name pos:line="84" pos:column="59">NULL<pos:position pos:line="84" pos:column="63"/></name></expr>)<pos:position pos:line="84" pos:column="64"/></condition><then pos:line="84" pos:column="64">
			<block pos:line="85" pos:column="25">{
				<expr_stmt><expr><name pos:line="86" pos:column="33">opi_data<pos:position pos:line="86" pos:column="41"/></name> <operator pos:line="86" pos:column="42">=<pos:position pos:line="86" pos:column="43"/></operator> <operator pos:line="86" pos:column="44">*<pos:position pos:line="86" pos:column="45"/></operator><name><name pos:line="86" pos:column="45">opi_list<pos:position pos:line="86" pos:column="53"/></name><index pos:line="86" pos:column="53">[<expr><literal type="number" pos:line="86" pos:column="54">0<pos:position pos:line="86" pos:column="55"/></literal></expr>]<pos:position pos:line="86" pos:column="56"/></index></name></expr>;<pos:position pos:line="86" pos:column="57"/></expr_stmt>
				<expr_stmt><expr><name pos:line="87" pos:column="33">opi<pos:position pos:line="87" pos:column="36"/></name> <operator pos:line="87" pos:column="37">=<pos:position pos:line="87" pos:column="38"/></operator> <call><name pos:line="87" pos:column="39">atoll<pos:position pos:line="87" pos:column="44"/></name> <argument_list pos:line="87" pos:column="45">(<argument><expr><name><name pos:line="87" pos:column="46">opi_data<pos:position pos:line="87" pos:column="54"/></name><operator pos:line="87" pos:column="54">.<pos:position pos:line="87" pos:column="55"/></operator><name pos:line="87" pos:column="55">bv_val<pos:position pos:line="87" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="63"/></expr_stmt>
			}<pos:position pos:line="88" pos:column="26"/></block></then></if>

			<if pos:line="90" pos:column="25">if <condition pos:line="90" pos:column="28">(<expr><operator pos:line="90" pos:column="29">(<pos:position pos:line="90" pos:column="30"/></operator><name pos:line="90" pos:column="30">info_list<pos:position pos:line="90" pos:column="39"/></name> <operator pos:line="90" pos:column="40">=<pos:position pos:line="90" pos:column="41"/></operator> <call><name pos:line="90" pos:column="42">ldap_get_values_len<pos:position pos:line="90" pos:column="61"/></name> <argument_list pos:line="90" pos:column="62">(<argument><expr><name><name pos:line="90" pos:column="63">st<pos:position pos:line="90" pos:column="65"/></name><operator pos:line="90" pos:column="65">-&gt;<pos:position pos:line="90" pos:column="70"/></operator><name pos:line="90" pos:column="67">ld<pos:position pos:line="90" pos:column="69"/></name></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="71">e<pos:position pos:line="90" pos:column="72"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="91" pos:column="33">"monitoredInfo"<pos:position pos:line="91" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="49"/></argument_list></call><operator pos:line="91" pos:column="49">)<pos:position pos:line="91" pos:column="50"/></operator> <operator pos:line="91" pos:column="51">!=<pos:position pos:line="91" pos:column="53"/></operator> <name pos:line="91" pos:column="54">NULL<pos:position pos:line="91" pos:column="58"/></name></expr>)<pos:position pos:line="91" pos:column="59"/></condition><then pos:line="91" pos:column="59">
			<block pos:line="92" pos:column="25">{
				<expr_stmt><expr><name pos:line="93" pos:column="33">info_data<pos:position pos:line="93" pos:column="42"/></name> <operator pos:line="93" pos:column="43">=<pos:position pos:line="93" pos:column="44"/></operator> <operator pos:line="93" pos:column="45">*<pos:position pos:line="93" pos:column="46"/></operator><name><name pos:line="93" pos:column="46">info_list<pos:position pos:line="93" pos:column="55"/></name><index pos:line="93" pos:column="55">[<expr><literal type="number" pos:line="93" pos:column="56">0<pos:position pos:line="93" pos:column="57"/></literal></expr>]<pos:position pos:line="93" pos:column="58"/></index></name></expr>;<pos:position pos:line="93" pos:column="59"/></expr_stmt>
				<expr_stmt><expr><name pos:line="94" pos:column="33">info<pos:position pos:line="94" pos:column="37"/></name> <operator pos:line="94" pos:column="38">=<pos:position pos:line="94" pos:column="39"/></operator> <call><name pos:line="94" pos:column="40">atoll<pos:position pos:line="94" pos:column="45"/></name> <argument_list pos:line="94" pos:column="46">(<argument><expr><name><name pos:line="94" pos:column="47">info_data<pos:position pos:line="94" pos:column="56"/></name><operator pos:line="94" pos:column="56">.<pos:position pos:line="94" pos:column="57"/></operator><name pos:line="94" pos:column="57">bv_val<pos:position pos:line="94" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="94" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="65"/></expr_stmt>
			}<pos:position pos:line="95" pos:column="26"/></block></then></if>

			<if pos:line="97" pos:column="25">if <condition pos:line="97" pos:column="28">(<expr><call><name pos:line="97" pos:column="29">strcmp<pos:position pos:line="97" pos:column="35"/></name> <argument_list pos:line="97" pos:column="36">(<argument><expr><name pos:line="97" pos:column="37">dn<pos:position pos:line="97" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="41">"cn=Total,cn=Connections,cn=Monitor"<pos:position pos:line="97" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="78"/></argument_list></call>
					<operator pos:line="98" pos:column="41">==<pos:position pos:line="98" pos:column="43"/></operator> <literal type="number" pos:line="98" pos:column="44">0<pos:position pos:line="98" pos:column="45"/></literal></expr>)<pos:position pos:line="98" pos:column="46"/></condition><then pos:line="98" pos:column="46">
			<block pos:line="99" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="100" pos:column="33">cldap_submit_derive<pos:position pos:line="100" pos:column="52"/></name> <argument_list pos:line="100" pos:column="53">(<argument><expr><literal type="string" pos:line="100" pos:column="54">"total_connections"<pos:position pos:line="100" pos:column="73"/></literal></expr></argument>, <argument><expr><name pos:line="100" pos:column="75">NULL<pos:position pos:line="100" pos:column="79"/></name></expr></argument>,
					<argument><expr><name pos:line="101" pos:column="41">counter<pos:position pos:line="101" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="50">st<pos:position pos:line="101" pos:column="52"/></name></expr></argument>)<pos:position pos:line="101" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="54"/></expr_stmt>
			}<pos:position pos:line="102" pos:column="26"/></block></then>
			<elseif pos:line="103" pos:column="25">else <if pos:line="103" pos:column="30">if <condition pos:line="103" pos:column="33">(<expr><call><name pos:line="103" pos:column="34">strcmp<pos:position pos:line="103" pos:column="40"/></name> <argument_list pos:line="103" pos:column="41">(<argument><expr><name pos:line="103" pos:column="42">dn<pos:position pos:line="103" pos:column="44"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="104" pos:column="41">"cn=Current,cn=Connections,cn=Monitor"<pos:position pos:line="104" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="80"/></argument_list></call>
					<operator pos:line="105" pos:column="41">==<pos:position pos:line="105" pos:column="43"/></operator> <literal type="number" pos:line="105" pos:column="44">0<pos:position pos:line="105" pos:column="45"/></literal></expr>)<pos:position pos:line="105" pos:column="46"/></condition><then pos:line="105" pos:column="46">
			<block pos:line="106" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="107" pos:column="33">cldap_submit_gauge<pos:position pos:line="107" pos:column="51"/></name> <argument_list pos:line="107" pos:column="52">(<argument><expr><literal type="string" pos:line="107" pos:column="53">"current_connections"<pos:position pos:line="107" pos:column="74"/></literal></expr></argument>, <argument><expr><name pos:line="107" pos:column="76">NULL<pos:position pos:line="107" pos:column="80"/></name></expr></argument>,
					<argument><expr><name pos:line="108" pos:column="41">counter<pos:position pos:line="108" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="50">st<pos:position pos:line="108" pos:column="52"/></name></expr></argument>)<pos:position pos:line="108" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="54"/></expr_stmt>
			}<pos:position pos:line="109" pos:column="26"/></block></then></if></elseif>
			<elseif pos:line="110" pos:column="25">else <if pos:line="110" pos:column="30">if <condition pos:line="110" pos:column="33">(<expr><call><name pos:line="110" pos:column="34">strcmp<pos:position pos:line="110" pos:column="40"/></name> <argument_list pos:line="110" pos:column="41">(<argument><expr><name pos:line="110" pos:column="42">dn<pos:position pos:line="110" pos:column="44"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="111" pos:column="41">"cn=Operations,cn=Monitor"<pos:position pos:line="111" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="68"/></argument_list></call> <operator pos:line="111" pos:column="69">==<pos:position pos:line="111" pos:column="71"/></operator> <literal type="number" pos:line="111" pos:column="72">0<pos:position pos:line="111" pos:column="73"/></literal></expr>)<pos:position pos:line="111" pos:column="74"/></condition><then pos:line="111" pos:column="74">
			<block pos:line="112" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="113" pos:column="33">cldap_submit_derive<pos:position pos:line="113" pos:column="52"/></name> <argument_list pos:line="113" pos:column="53">(<argument><expr><literal type="string" pos:line="113" pos:column="54">"operations"<pos:position pos:line="113" pos:column="66"/></literal></expr></argument>,
					<argument><expr><literal type="string" pos:line="114" pos:column="41">"completed"<pos:position pos:line="114" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="114" pos:column="54">opc<pos:position pos:line="114" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="59">st<pos:position pos:line="114" pos:column="61"/></name></expr></argument>)<pos:position pos:line="114" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="63"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="115" pos:column="33">cldap_submit_derive<pos:position pos:line="115" pos:column="52"/></name> <argument_list pos:line="115" pos:column="53">(<argument><expr><literal type="string" pos:line="115" pos:column="54">"operations"<pos:position pos:line="115" pos:column="66"/></literal></expr></argument>,
					<argument><expr><literal type="string" pos:line="116" pos:column="41">"initiated"<pos:position pos:line="116" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="116" pos:column="54">opi<pos:position pos:line="116" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="59">st<pos:position pos:line="116" pos:column="61"/></name></expr></argument>)<pos:position pos:line="116" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="63"/></expr_stmt>
			}<pos:position pos:line="117" pos:column="26"/></block></then></if></elseif>
			<elseif pos:line="118" pos:column="25">else <if pos:line="118" pos:column="30">if <condition pos:line="118" pos:column="33">(<expr><call><name pos:line="118" pos:column="34">strcmp<pos:position pos:line="118" pos:column="40"/></name> <argument_list pos:line="118" pos:column="41">(<argument><expr><name pos:line="118" pos:column="42">dn<pos:position pos:line="118" pos:column="44"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="119" pos:column="41">"cn=Bind,cn=Operations,cn=Monitor"<pos:position pos:line="119" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="76"/></argument_list></call>
					<operator pos:line="120" pos:column="41">==<pos:position pos:line="120" pos:column="43"/></operator> <literal type="number" pos:line="120" pos:column="44">0<pos:position pos:line="120" pos:column="45"/></literal></expr>)<pos:position pos:line="120" pos:column="46"/></condition><then pos:line="120" pos:column="46">
			<block pos:line="121" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="122" pos:column="33">cldap_submit_derive<pos:position pos:line="122" pos:column="52"/></name> <argument_list pos:line="122" pos:column="53">(<argument><expr><literal type="string" pos:line="122" pos:column="54">"operations"<pos:position pos:line="122" pos:column="66"/></literal></expr></argument>,
					<argument><expr><literal type="string" pos:line="123" pos:column="41">"bind-completed"<pos:position pos:line="123" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="123" pos:column="59">opc<pos:position pos:line="123" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="64">st<pos:position pos:line="123" pos:column="66"/></name></expr></argument>)<pos:position pos:line="123" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="68"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="124" pos:column="33">cldap_submit_derive<pos:position pos:line="124" pos:column="52"/></name> <argument_list pos:line="124" pos:column="53">(<argument><expr><literal type="string" pos:line="124" pos:column="54">"operations"<pos:position pos:line="124" pos:column="66"/></literal></expr></argument>,
					<argument><expr><literal type="string" pos:line="125" pos:column="41">"bind-initiated"<pos:position pos:line="125" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="125" pos:column="59">opi<pos:position pos:line="125" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="64">st<pos:position pos:line="125" pos:column="66"/></name></expr></argument>)<pos:position pos:line="125" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="68"/></expr_stmt>
			}<pos:position pos:line="126" pos:column="26"/></block></then></if></elseif>
			<elseif pos:line="127" pos:column="25">else <if pos:line="127" pos:column="30">if <condition pos:line="127" pos:column="33">(<expr><call><name pos:line="127" pos:column="34">strcmp<pos:position pos:line="127" pos:column="40"/></name> <argument_list pos:line="127" pos:column="41">(<argument><expr><name pos:line="127" pos:column="42">dn<pos:position pos:line="127" pos:column="44"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="128" pos:column="41">"cn=UnBind,cn=Operations,cn=Monitor"<pos:position pos:line="128" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="128" pos:column="78"/></argument_list></call>
					<operator pos:line="129" pos:column="41">==<pos:position pos:line="129" pos:column="43"/></operator> <literal type="number" pos:line="129" pos:column="44">0<pos:position pos:line="129" pos:column="45"/></literal></expr>)<pos:position pos:line="129" pos:column="46"/></condition><then pos:line="129" pos:column="46">
			<block pos:line="130" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="131" pos:column="33">cldap_submit_derive<pos:position pos:line="131" pos:column="52"/></name> <argument_list pos:line="131" pos:column="53">(<argument><expr><literal type="string" pos:line="131" pos:column="54">"operations"<pos:position pos:line="131" pos:column="66"/></literal></expr></argument>,
					<argument><expr><literal type="string" pos:line="132" pos:column="41">"unbind-completed"<pos:position pos:line="132" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="132" pos:column="61">opc<pos:position pos:line="132" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="66">st<pos:position pos:line="132" pos:column="68"/></name></expr></argument>)<pos:position pos:line="132" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="70"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="133" pos:column="33">cldap_submit_derive<pos:position pos:line="133" pos:column="52"/></name> <argument_list pos:line="133" pos:column="53">(<argument><expr><literal type="string" pos:line="133" pos:column="54">"operations"<pos:position pos:line="133" pos:column="66"/></literal></expr></argument>,
					<argument><expr><literal type="string" pos:line="134" pos:column="41">"unbind-initiated"<pos:position pos:line="134" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="134" pos:column="61">opi<pos:position pos:line="134" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="66">st<pos:position pos:line="134" pos:column="68"/></name></expr></argument>)<pos:position pos:line="134" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="70"/></expr_stmt>
			}<pos:position pos:line="135" pos:column="26"/></block></then></if></elseif>
			<elseif pos:line="136" pos:column="25">else <if pos:line="136" pos:column="30">if <condition pos:line="136" pos:column="33">(<expr><call><name pos:line="136" pos:column="34">strcmp<pos:position pos:line="136" pos:column="40"/></name> <argument_list pos:line="136" pos:column="41">(<argument><expr><name pos:line="136" pos:column="42">dn<pos:position pos:line="136" pos:column="44"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="137" pos:column="41">"cn=Search,cn=Operations,cn=Monitor"<pos:position pos:line="137" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="137" pos:column="78"/></argument_list></call>
					<operator pos:line="138" pos:column="41">==<pos:position pos:line="138" pos:column="43"/></operator> <literal type="number" pos:line="138" pos:column="44">0<pos:position pos:line="138" pos:column="45"/></literal></expr>)<pos:position pos:line="138" pos:column="46"/></condition><then pos:line="138" pos:column="46">
			<block pos:line="139" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="140" pos:column="33">cldap_submit_derive<pos:position pos:line="140" pos:column="52"/></name> <argument_list pos:line="140" pos:column="53">(<argument><expr><literal type="string" pos:line="140" pos:column="54">"operations"<pos:position pos:line="140" pos:column="66"/></literal></expr></argument>,
					<argument><expr><literal type="string" pos:line="141" pos:column="41">"search-completed"<pos:position pos:line="141" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="141" pos:column="61">opc<pos:position pos:line="141" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="66">st<pos:position pos:line="141" pos:column="68"/></name></expr></argument>)<pos:position pos:line="141" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="70"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="142" pos:column="33">cldap_submit_derive<pos:position pos:line="142" pos:column="52"/></name> <argument_list pos:line="142" pos:column="53">(<argument><expr><literal type="string" pos:line="142" pos:column="54">"operations"<pos:position pos:line="142" pos:column="66"/></literal></expr></argument>,
					<argument><expr><literal type="string" pos:line="143" pos:column="41">"search-initiated"<pos:position pos:line="143" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="143" pos:column="61">opi<pos:position pos:line="143" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="66">st<pos:position pos:line="143" pos:column="68"/></name></expr></argument>)<pos:position pos:line="143" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="70"/></expr_stmt>
			}<pos:position pos:line="144" pos:column="26"/></block></then></if></elseif>
			<elseif pos:line="145" pos:column="25">else <if pos:line="145" pos:column="30">if <condition pos:line="145" pos:column="33">(<expr><call><name pos:line="145" pos:column="34">strcmp<pos:position pos:line="145" pos:column="40"/></name> <argument_list pos:line="145" pos:column="41">(<argument><expr><name pos:line="145" pos:column="42">dn<pos:position pos:line="145" pos:column="44"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="146" pos:column="41">"cn=Compare,cn=Operations,cn=Monitor"<pos:position pos:line="146" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="146" pos:column="79"/></argument_list></call>
					<operator pos:line="147" pos:column="41">==<pos:position pos:line="147" pos:column="43"/></operator> <literal type="number" pos:line="147" pos:column="44">0<pos:position pos:line="147" pos:column="45"/></literal></expr>)<pos:position pos:line="147" pos:column="46"/></condition><then pos:line="147" pos:column="46">
			<block pos:line="148" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="149" pos:column="33">cldap_submit_derive<pos:position pos:line="149" pos:column="52"/></name> <argument_list pos:line="149" pos:column="53">(<argument><expr><literal type="string" pos:line="149" pos:column="54">"operations"<pos:position pos:line="149" pos:column="66"/></literal></expr></argument>,
					<argument><expr><literal type="string" pos:line="150" pos:column="41">"compare-completed"<pos:position pos:line="150" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="150" pos:column="62">opc<pos:position pos:line="150" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="67">st<pos:position pos:line="150" pos:column="69"/></name></expr></argument>)<pos:position pos:line="150" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="71"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="151" pos:column="33">cldap_submit_derive<pos:position pos:line="151" pos:column="52"/></name> <argument_list pos:line="151" pos:column="53">(<argument><expr><literal type="string" pos:line="151" pos:column="54">"operations"<pos:position pos:line="151" pos:column="66"/></literal></expr></argument>,
					<argument><expr><literal type="string" pos:line="152" pos:column="41">"compare-initiated"<pos:position pos:line="152" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="152" pos:column="62">opi<pos:position pos:line="152" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="67">st<pos:position pos:line="152" pos:column="69"/></name></expr></argument>)<pos:position pos:line="152" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="71"/></expr_stmt>
			}<pos:position pos:line="153" pos:column="26"/></block></then></if></elseif>
			<elseif pos:line="154" pos:column="25">else <if pos:line="154" pos:column="30">if <condition pos:line="154" pos:column="33">(<expr><call><name pos:line="154" pos:column="34">strcmp<pos:position pos:line="154" pos:column="40"/></name> <argument_list pos:line="154" pos:column="41">(<argument><expr><name pos:line="154" pos:column="42">dn<pos:position pos:line="154" pos:column="44"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="155" pos:column="41">"cn=Modify,cn=Operations,cn=Monitor"<pos:position pos:line="155" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="155" pos:column="78"/></argument_list></call>
					<operator pos:line="156" pos:column="41">==<pos:position pos:line="156" pos:column="43"/></operator> <literal type="number" pos:line="156" pos:column="44">0<pos:position pos:line="156" pos:column="45"/></literal></expr>)<pos:position pos:line="156" pos:column="46"/></condition><then pos:line="156" pos:column="46">
			<block pos:line="157" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="158" pos:column="33">cldap_submit_derive<pos:position pos:line="158" pos:column="52"/></name> <argument_list pos:line="158" pos:column="53">(<argument><expr><literal type="string" pos:line="158" pos:column="54">"operations"<pos:position pos:line="158" pos:column="66"/></literal></expr></argument>,
					<argument><expr><literal type="string" pos:line="159" pos:column="41">"modify-completed"<pos:position pos:line="159" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="159" pos:column="61">opc<pos:position pos:line="159" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="159" pos:column="66">st<pos:position pos:line="159" pos:column="68"/></name></expr></argument>)<pos:position pos:line="159" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="70"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="160" pos:column="33">cldap_submit_derive<pos:position pos:line="160" pos:column="52"/></name> <argument_list pos:line="160" pos:column="53">(<argument><expr><literal type="string" pos:line="160" pos:column="54">"operations"<pos:position pos:line="160" pos:column="66"/></literal></expr></argument>,
					<argument><expr><literal type="string" pos:line="161" pos:column="41">"modify-initiated"<pos:position pos:line="161" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="161" pos:column="61">opi<pos:position pos:line="161" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="161" pos:column="66">st<pos:position pos:line="161" pos:column="68"/></name></expr></argument>)<pos:position pos:line="161" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="70"/></expr_stmt>
			}<pos:position pos:line="162" pos:column="26"/></block></then></if></elseif>
			<elseif pos:line="163" pos:column="25">else <if pos:line="163" pos:column="30">if <condition pos:line="163" pos:column="33">(<expr><call><name pos:line="163" pos:column="34">strcmp<pos:position pos:line="163" pos:column="40"/></name> <argument_list pos:line="163" pos:column="41">(<argument><expr><name pos:line="163" pos:column="42">dn<pos:position pos:line="163" pos:column="44"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="164" pos:column="41">"cn=Modrdn,cn=Operations,cn=Monitor"<pos:position pos:line="164" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="164" pos:column="78"/></argument_list></call>
					<operator pos:line="165" pos:column="41">==<pos:position pos:line="165" pos:column="43"/></operator> <literal type="number" pos:line="165" pos:column="44">0<pos:position pos:line="165" pos:column="45"/></literal></expr>)<pos:position pos:line="165" pos:column="46"/></condition><then pos:line="165" pos:column="46">
			<block pos:line="166" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="167" pos:column="33">cldap_submit_derive<pos:position pos:line="167" pos:column="52"/></name> <argument_list pos:line="167" pos:column="53">(<argument><expr><literal type="string" pos:line="167" pos:column="54">"operations"<pos:position pos:line="167" pos:column="66"/></literal></expr></argument>,
					<argument><expr><literal type="string" pos:line="168" pos:column="41">"modrdn-completed"<pos:position pos:line="168" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="168" pos:column="61">opc<pos:position pos:line="168" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="168" pos:column="66">st<pos:position pos:line="168" pos:column="68"/></name></expr></argument>)<pos:position pos:line="168" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="70"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="169" pos:column="33">cldap_submit_derive<pos:position pos:line="169" pos:column="52"/></name> <argument_list pos:line="169" pos:column="53">(<argument><expr><literal type="string" pos:line="169" pos:column="54">"operations"<pos:position pos:line="169" pos:column="66"/></literal></expr></argument>,
					<argument><expr><literal type="string" pos:line="170" pos:column="41">"modrdn-initiated"<pos:position pos:line="170" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="170" pos:column="61">opi<pos:position pos:line="170" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="170" pos:column="66">st<pos:position pos:line="170" pos:column="68"/></name></expr></argument>)<pos:position pos:line="170" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="70"/></expr_stmt>
			}<pos:position pos:line="171" pos:column="26"/></block></then></if></elseif>
			<elseif pos:line="172" pos:column="25">else <if pos:line="172" pos:column="30">if <condition pos:line="172" pos:column="33">(<expr><call><name pos:line="172" pos:column="34">strcmp<pos:position pos:line="172" pos:column="40"/></name> <argument_list pos:line="172" pos:column="41">(<argument><expr><name pos:line="172" pos:column="42">dn<pos:position pos:line="172" pos:column="44"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="173" pos:column="41">"cn=Add,cn=Operations,cn=Monitor"<pos:position pos:line="173" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="173" pos:column="75"/></argument_list></call>
					<operator pos:line="174" pos:column="41">==<pos:position pos:line="174" pos:column="43"/></operator> <literal type="number" pos:line="174" pos:column="44">0<pos:position pos:line="174" pos:column="45"/></literal></expr>)<pos:position pos:line="174" pos:column="46"/></condition><then pos:line="174" pos:column="46">
			<block pos:line="175" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="176" pos:column="33">cldap_submit_derive<pos:position pos:line="176" pos:column="52"/></name> <argument_list pos:line="176" pos:column="53">(<argument><expr><literal type="string" pos:line="176" pos:column="54">"operations"<pos:position pos:line="176" pos:column="66"/></literal></expr></argument>,
					<argument><expr><literal type="string" pos:line="177" pos:column="41">"add-completed"<pos:position pos:line="177" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="177" pos:column="58">opc<pos:position pos:line="177" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="177" pos:column="63">st<pos:position pos:line="177" pos:column="65"/></name></expr></argument>)<pos:position pos:line="177" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="67"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="178" pos:column="33">cldap_submit_derive<pos:position pos:line="178" pos:column="52"/></name> <argument_list pos:line="178" pos:column="53">(<argument><expr><literal type="string" pos:line="178" pos:column="54">"operations"<pos:position pos:line="178" pos:column="66"/></literal></expr></argument>,
					<argument><expr><literal type="string" pos:line="179" pos:column="41">"add-initiated"<pos:position pos:line="179" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="179" pos:column="58">opi<pos:position pos:line="179" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="179" pos:column="63">st<pos:position pos:line="179" pos:column="65"/></name></expr></argument>)<pos:position pos:line="179" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="67"/></expr_stmt>
			}<pos:position pos:line="180" pos:column="26"/></block></then></if></elseif>
			<elseif pos:line="181" pos:column="25">else <if pos:line="181" pos:column="30">if <condition pos:line="181" pos:column="33">(<expr><call><name pos:line="181" pos:column="34">strcmp<pos:position pos:line="181" pos:column="40"/></name> <argument_list pos:line="181" pos:column="41">(<argument><expr><name pos:line="181" pos:column="42">dn<pos:position pos:line="181" pos:column="44"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="182" pos:column="41">"cn=Delete,cn=Operations,cn=Monitor"<pos:position pos:line="182" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="182" pos:column="78"/></argument_list></call>
					<operator pos:line="183" pos:column="41">==<pos:position pos:line="183" pos:column="43"/></operator> <literal type="number" pos:line="183" pos:column="44">0<pos:position pos:line="183" pos:column="45"/></literal></expr>)<pos:position pos:line="183" pos:column="46"/></condition><then pos:line="183" pos:column="46">
			<block pos:line="184" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="185" pos:column="33">cldap_submit_derive<pos:position pos:line="185" pos:column="52"/></name> <argument_list pos:line="185" pos:column="53">(<argument><expr><literal type="string" pos:line="185" pos:column="54">"operations"<pos:position pos:line="185" pos:column="66"/></literal></expr></argument>,
					<argument><expr><literal type="string" pos:line="186" pos:column="41">"delete-completed"<pos:position pos:line="186" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="186" pos:column="61">opc<pos:position pos:line="186" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="66">st<pos:position pos:line="186" pos:column="68"/></name></expr></argument>)<pos:position pos:line="186" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="70"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="187" pos:column="33">cldap_submit_derive<pos:position pos:line="187" pos:column="52"/></name> <argument_list pos:line="187" pos:column="53">(<argument><expr><literal type="string" pos:line="187" pos:column="54">"operations"<pos:position pos:line="187" pos:column="66"/></literal></expr></argument>,
					<argument><expr><literal type="string" pos:line="188" pos:column="41">"delete-initiated"<pos:position pos:line="188" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="188" pos:column="61">opi<pos:position pos:line="188" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="188" pos:column="66">st<pos:position pos:line="188" pos:column="68"/></name></expr></argument>)<pos:position pos:line="188" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="70"/></expr_stmt>
			}<pos:position pos:line="189" pos:column="26"/></block></then></if></elseif>
			<elseif pos:line="190" pos:column="25">else <if pos:line="190" pos:column="30">if <condition pos:line="190" pos:column="33">(<expr><call><name pos:line="190" pos:column="34">strcmp<pos:position pos:line="190" pos:column="40"/></name> <argument_list pos:line="190" pos:column="41">(<argument><expr><name pos:line="190" pos:column="42">dn<pos:position pos:line="190" pos:column="44"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="191" pos:column="41">"cn=Abandon,cn=Operations,cn=Monitor"<pos:position pos:line="191" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="191" pos:column="79"/></argument_list></call>
					<operator pos:line="192" pos:column="41">==<pos:position pos:line="192" pos:column="43"/></operator> <literal type="number" pos:line="192" pos:column="44">0<pos:position pos:line="192" pos:column="45"/></literal></expr>)<pos:position pos:line="192" pos:column="46"/></condition><then pos:line="192" pos:column="46">
			<block pos:line="193" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="194" pos:column="33">cldap_submit_derive<pos:position pos:line="194" pos:column="52"/></name> <argument_list pos:line="194" pos:column="53">(<argument><expr><literal type="string" pos:line="194" pos:column="54">"operations"<pos:position pos:line="194" pos:column="66"/></literal></expr></argument>,
					<argument><expr><literal type="string" pos:line="195" pos:column="41">"abandon-completed"<pos:position pos:line="195" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="195" pos:column="62">opc<pos:position pos:line="195" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="195" pos:column="67">st<pos:position pos:line="195" pos:column="69"/></name></expr></argument>)<pos:position pos:line="195" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="71"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="196" pos:column="33">cldap_submit_derive<pos:position pos:line="196" pos:column="52"/></name> <argument_list pos:line="196" pos:column="53">(<argument><expr><literal type="string" pos:line="196" pos:column="54">"operations"<pos:position pos:line="196" pos:column="66"/></literal></expr></argument>,
					<argument><expr><literal type="string" pos:line="197" pos:column="41">"abandon-initiated"<pos:position pos:line="197" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="197" pos:column="62">opi<pos:position pos:line="197" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="197" pos:column="67">st<pos:position pos:line="197" pos:column="69"/></name></expr></argument>)<pos:position pos:line="197" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="71"/></expr_stmt>
			}<pos:position pos:line="198" pos:column="26"/></block></then></if></elseif>
			<elseif pos:line="199" pos:column="25">else <if pos:line="199" pos:column="30">if <condition pos:line="199" pos:column="33">(<expr><call><name pos:line="199" pos:column="34">strcmp<pos:position pos:line="199" pos:column="40"/></name> <argument_list pos:line="199" pos:column="41">(<argument><expr><name pos:line="199" pos:column="42">dn<pos:position pos:line="199" pos:column="44"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="200" pos:column="41">"cn=Extended,cn=Operations,cn=Monitor"<pos:position pos:line="200" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="200" pos:column="80"/></argument_list></call>
					<operator pos:line="201" pos:column="41">==<pos:position pos:line="201" pos:column="43"/></operator> <literal type="number" pos:line="201" pos:column="44">0<pos:position pos:line="201" pos:column="45"/></literal></expr>)<pos:position pos:line="201" pos:column="46"/></condition><then pos:line="201" pos:column="46">
			<block pos:line="202" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="203" pos:column="33">cldap_submit_derive<pos:position pos:line="203" pos:column="52"/></name> <argument_list pos:line="203" pos:column="53">(<argument><expr><literal type="string" pos:line="203" pos:column="54">"operations"<pos:position pos:line="203" pos:column="66"/></literal></expr></argument>,
					<argument><expr><literal type="string" pos:line="204" pos:column="41">"extended-completed"<pos:position pos:line="204" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="204" pos:column="63">opc<pos:position pos:line="204" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="204" pos:column="68">st<pos:position pos:line="204" pos:column="70"/></name></expr></argument>)<pos:position pos:line="204" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="72"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="205" pos:column="33">cldap_submit_derive<pos:position pos:line="205" pos:column="52"/></name> <argument_list pos:line="205" pos:column="53">(<argument><expr><literal type="string" pos:line="205" pos:column="54">"operations"<pos:position pos:line="205" pos:column="66"/></literal></expr></argument>,
					<argument><expr><literal type="string" pos:line="206" pos:column="41">"extended-initiated"<pos:position pos:line="206" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="206" pos:column="63">opi<pos:position pos:line="206" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="206" pos:column="68">st<pos:position pos:line="206" pos:column="70"/></name></expr></argument>)<pos:position pos:line="206" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="72"/></expr_stmt>
			}<pos:position pos:line="207" pos:column="26"/></block></then></if></elseif>
			<elseif pos:line="208" pos:column="25">else <if pos:line="208" pos:column="30">if <condition pos:line="208" pos:column="33">(<expr><operator pos:line="208" pos:column="34">(<pos:position pos:line="208" pos:column="35"/></operator><call><name pos:line="208" pos:column="35">strncmp<pos:position pos:line="208" pos:column="42"/></name> <argument_list pos:line="208" pos:column="43">(<argument><expr><name pos:line="208" pos:column="44">dn<pos:position pos:line="208" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="208" pos:column="48">"cn=Database"<pos:position pos:line="208" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="208" pos:column="63">11<pos:position pos:line="208" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="208" pos:column="66"/></argument_list></call> <operator pos:line="208" pos:column="67">==<pos:position pos:line="208" pos:column="69"/></operator> <literal type="number" pos:line="208" pos:column="70">0<pos:position pos:line="208" pos:column="71"/></literal><operator pos:line="208" pos:column="71">)<pos:position pos:line="208" pos:column="72"/></operator>
				<operator pos:line="209" pos:column="33">&amp;&amp;<pos:position pos:line="209" pos:column="43"/></operator> <operator pos:line="209" pos:column="36">(<pos:position pos:line="209" pos:column="37"/></operator><operator pos:line="209" pos:column="37">(<pos:position pos:line="209" pos:column="38"/></operator><name pos:line="209" pos:column="38">nc_list<pos:position pos:line="209" pos:column="45"/></name> <operator pos:line="209" pos:column="46">=<pos:position pos:line="209" pos:column="47"/></operator> <call><name pos:line="209" pos:column="48">ldap_get_values_len<pos:position pos:line="209" pos:column="67"/></name>
						<argument_list pos:line="210" pos:column="49">(<argument><expr><name><name pos:line="210" pos:column="50">st<pos:position pos:line="210" pos:column="52"/></name><operator pos:line="210" pos:column="52">-&gt;<pos:position pos:line="210" pos:column="57"/></operator><name pos:line="210" pos:column="54">ld<pos:position pos:line="210" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="210" pos:column="58">e<pos:position pos:line="210" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="210" pos:column="61">"namingContexts"<pos:position pos:line="210" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="210" pos:column="78"/></argument_list></call><operator pos:line="210" pos:column="78">)<pos:position pos:line="210" pos:column="79"/></operator> <operator pos:line="210" pos:column="80">!=<pos:position pos:line="210" pos:column="82"/></operator> <name pos:line="210" pos:column="83">NULL<pos:position pos:line="210" pos:column="87"/></name><operator pos:line="210" pos:column="87">)<pos:position pos:line="210" pos:column="88"/></operator></expr>)<pos:position pos:line="210" pos:column="89"/></condition><then pos:line="210" pos:column="89">
			<block pos:line="211" pos:column="25">{
				<expr_stmt><expr><name pos:line="212" pos:column="33">nc_data<pos:position pos:line="212" pos:column="40"/></name> <operator pos:line="212" pos:column="41">=<pos:position pos:line="212" pos:column="42"/></operator> <operator pos:line="212" pos:column="43">*<pos:position pos:line="212" pos:column="44"/></operator><name><name pos:line="212" pos:column="44">nc_list<pos:position pos:line="212" pos:column="51"/></name><index pos:line="212" pos:column="51">[<expr><literal type="number" pos:line="212" pos:column="52">0<pos:position pos:line="212" pos:column="53"/></literal></expr>]<pos:position pos:line="212" pos:column="54"/></index></name></expr>;<pos:position pos:line="212" pos:column="55"/></expr_stmt>
				<decl_stmt><decl><type><name pos:line="213" pos:column="33">char<pos:position pos:line="213" pos:column="37"/></name></type> <name><name pos:line="213" pos:column="38">typeinst<pos:position pos:line="213" pos:column="46"/></name><index pos:line="213" pos:column="46">[<expr><name pos:line="213" pos:column="47">DATA_MAX_NAME_LEN<pos:position pos:line="213" pos:column="64"/></name></expr>]<pos:position pos:line="213" pos:column="65"/></index></name></decl>;<pos:position pos:line="213" pos:column="66"/></decl_stmt>

				<if pos:line="215" pos:column="33">if <condition pos:line="215" pos:column="36">(<expr><operator pos:line="215" pos:column="37">(<pos:position pos:line="215" pos:column="38"/></operator><name pos:line="215" pos:column="38">olmbdb_list<pos:position pos:line="215" pos:column="49"/></name> <operator pos:line="215" pos:column="50">=<pos:position pos:line="215" pos:column="51"/></operator> <call><name pos:line="215" pos:column="52">ldap_get_values_len<pos:position pos:line="215" pos:column="71"/></name> <argument_list pos:line="215" pos:column="72">(<argument><expr><name><name pos:line="215" pos:column="73">st<pos:position pos:line="215" pos:column="75"/></name><operator pos:line="215" pos:column="75">-&gt;<pos:position pos:line="215" pos:column="80"/></operator><name pos:line="215" pos:column="77">ld<pos:position pos:line="215" pos:column="79"/></name></name></expr></argument>, <argument><expr><name pos:line="215" pos:column="81">e<pos:position pos:line="215" pos:column="82"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="216" pos:column="41">"olmBDBEntryCache"<pos:position pos:line="216" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="216" pos:column="60"/></argument_list></call><operator pos:line="216" pos:column="60">)<pos:position pos:line="216" pos:column="61"/></operator> <operator pos:line="216" pos:column="62">!=<pos:position pos:line="216" pos:column="64"/></operator> <name pos:line="216" pos:column="65">NULL<pos:position pos:line="216" pos:column="69"/></name></expr>)<pos:position pos:line="216" pos:column="70"/></condition><then pos:line="216" pos:column="70">
				<block pos:line="217" pos:column="33">{
					<expr_stmt><expr><name pos:line="218" pos:column="41">olmbdb_data<pos:position pos:line="218" pos:column="52"/></name> <operator pos:line="218" pos:column="53">=<pos:position pos:line="218" pos:column="54"/></operator> <operator pos:line="218" pos:column="55">*<pos:position pos:line="218" pos:column="56"/></operator><name><name pos:line="218" pos:column="56">olmbdb_list<pos:position pos:line="218" pos:column="67"/></name><index pos:line="218" pos:column="67">[<expr><literal type="number" pos:line="218" pos:column="68">0<pos:position pos:line="218" pos:column="69"/></literal></expr>]<pos:position pos:line="218" pos:column="70"/></index></name></expr>;<pos:position pos:line="218" pos:column="71"/></expr_stmt>
					<expr_stmt><expr><call><name pos:line="219" pos:column="41">ssnprintf<pos:position pos:line="219" pos:column="50"/></name> <argument_list pos:line="219" pos:column="51">(<argument><expr><name pos:line="219" pos:column="52">typeinst<pos:position pos:line="219" pos:column="60"/></name></expr></argument>, <argument><expr><sizeof pos:line="219" pos:column="62">sizeof <argument_list pos:line="219" pos:column="69">(<argument><expr><name pos:line="219" pos:column="70">typeinst<pos:position pos:line="219" pos:column="78"/></name></expr></argument>)<pos:position pos:line="219" pos:column="79"/></argument_list></sizeof></expr></argument>,
						<argument><expr><literal type="string" pos:line="220" pos:column="49">"bdbentrycache-%s"<pos:position pos:line="220" pos:column="67"/></literal></expr></argument>, <argument><expr><name><name pos:line="220" pos:column="69">nc_data<pos:position pos:line="220" pos:column="76"/></name><operator pos:line="220" pos:column="76">.<pos:position pos:line="220" pos:column="77"/></operator><name pos:line="220" pos:column="77">bv_val<pos:position pos:line="220" pos:column="83"/></name></name></expr></argument>)<pos:position pos:line="220" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="85"/></expr_stmt>
					<expr_stmt><expr><call><name pos:line="221" pos:column="41">cldap_submit_gauge<pos:position pos:line="221" pos:column="59"/></name> <argument_list pos:line="221" pos:column="60">(<argument><expr><literal type="string" pos:line="221" pos:column="61">"cache_size"<pos:position pos:line="221" pos:column="73"/></literal></expr></argument>, <argument><expr><name pos:line="221" pos:column="75">typeinst<pos:position pos:line="221" pos:column="83"/></name></expr></argument>,
						<argument><expr><call><name pos:line="222" pos:column="49">atoll<pos:position pos:line="222" pos:column="54"/></name> <argument_list pos:line="222" pos:column="55">(<argument><expr><name><name pos:line="222" pos:column="56">olmbdb_data<pos:position pos:line="222" pos:column="67"/></name><operator pos:line="222" pos:column="67">.<pos:position pos:line="222" pos:column="68"/></operator><name pos:line="222" pos:column="68">bv_val<pos:position pos:line="222" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="222" pos:column="75"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="222" pos:column="77">st<pos:position pos:line="222" pos:column="79"/></name></expr></argument>)<pos:position pos:line="222" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="81"/></expr_stmt>
					<expr_stmt><expr><call><name pos:line="223" pos:column="41">ldap_value_free_len<pos:position pos:line="223" pos:column="60"/></name> <argument_list pos:line="223" pos:column="61">(<argument><expr><name pos:line="223" pos:column="62">olmbdb_list<pos:position pos:line="223" pos:column="73"/></name></expr></argument>)<pos:position pos:line="223" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="223" pos:column="75"/></expr_stmt>
				}<pos:position pos:line="224" pos:column="34"/></block></then></if>

				<if pos:line="226" pos:column="33">if <condition pos:line="226" pos:column="36">(<expr><operator pos:line="226" pos:column="37">(<pos:position pos:line="226" pos:column="38"/></operator><name pos:line="226" pos:column="38">olmbdb_list<pos:position pos:line="226" pos:column="49"/></name> <operator pos:line="226" pos:column="50">=<pos:position pos:line="226" pos:column="51"/></operator> <call><name pos:line="226" pos:column="52">ldap_get_values_len<pos:position pos:line="226" pos:column="71"/></name> <argument_list pos:line="226" pos:column="72">(<argument><expr><name><name pos:line="226" pos:column="73">st<pos:position pos:line="226" pos:column="75"/></name><operator pos:line="226" pos:column="75">-&gt;<pos:position pos:line="226" pos:column="80"/></operator><name pos:line="226" pos:column="77">ld<pos:position pos:line="226" pos:column="79"/></name></name></expr></argument>, <argument><expr><name pos:line="226" pos:column="81">e<pos:position pos:line="226" pos:column="82"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="227" pos:column="41">"olmBDBDNCache"<pos:position pos:line="227" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="227" pos:column="57"/></argument_list></call><operator pos:line="227" pos:column="57">)<pos:position pos:line="227" pos:column="58"/></operator> <operator pos:line="227" pos:column="59">!=<pos:position pos:line="227" pos:column="61"/></operator> <name pos:line="227" pos:column="62">NULL<pos:position pos:line="227" pos:column="66"/></name></expr>)<pos:position pos:line="227" pos:column="67"/></condition><then pos:line="227" pos:column="67">
				<block pos:line="228" pos:column="33">{
					<expr_stmt><expr><name pos:line="229" pos:column="41">olmbdb_data<pos:position pos:line="229" pos:column="52"/></name> <operator pos:line="229" pos:column="53">=<pos:position pos:line="229" pos:column="54"/></operator> <operator pos:line="229" pos:column="55">*<pos:position pos:line="229" pos:column="56"/></operator><name><name pos:line="229" pos:column="56">olmbdb_list<pos:position pos:line="229" pos:column="67"/></name><index pos:line="229" pos:column="67">[<expr><literal type="number" pos:line="229" pos:column="68">0<pos:position pos:line="229" pos:column="69"/></literal></expr>]<pos:position pos:line="229" pos:column="70"/></index></name></expr>;<pos:position pos:line="229" pos:column="71"/></expr_stmt>
					<expr_stmt><expr><call><name pos:line="230" pos:column="41">ssnprintf<pos:position pos:line="230" pos:column="50"/></name> <argument_list pos:line="230" pos:column="51">(<argument><expr><name pos:line="230" pos:column="52">typeinst<pos:position pos:line="230" pos:column="60"/></name></expr></argument>, <argument><expr><sizeof pos:line="230" pos:column="62">sizeof <argument_list pos:line="230" pos:column="69">(<argument><expr><name pos:line="230" pos:column="70">typeinst<pos:position pos:line="230" pos:column="78"/></name></expr></argument>)<pos:position pos:line="230" pos:column="79"/></argument_list></sizeof></expr></argument>,
						<argument><expr><literal type="string" pos:line="231" pos:column="49">"bdbdncache-%s"<pos:position pos:line="231" pos:column="64"/></literal></expr></argument>, <argument><expr><name><name pos:line="231" pos:column="66">nc_data<pos:position pos:line="231" pos:column="73"/></name><operator pos:line="231" pos:column="73">.<pos:position pos:line="231" pos:column="74"/></operator><name pos:line="231" pos:column="74">bv_val<pos:position pos:line="231" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="231" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="231" pos:column="82"/></expr_stmt>
					<expr_stmt><expr><call><name pos:line="232" pos:column="41">cldap_submit_gauge<pos:position pos:line="232" pos:column="59"/></name> <argument_list pos:line="232" pos:column="60">(<argument><expr><literal type="string" pos:line="232" pos:column="61">"cache_size"<pos:position pos:line="232" pos:column="73"/></literal></expr></argument>, <argument><expr><name pos:line="232" pos:column="75">typeinst<pos:position pos:line="232" pos:column="83"/></name></expr></argument>,
						<argument><expr><call><name pos:line="233" pos:column="49">atoll<pos:position pos:line="233" pos:column="54"/></name> <argument_list pos:line="233" pos:column="55">(<argument><expr><name><name pos:line="233" pos:column="56">olmbdb_data<pos:position pos:line="233" pos:column="67"/></name><operator pos:line="233" pos:column="67">.<pos:position pos:line="233" pos:column="68"/></operator><name pos:line="233" pos:column="68">bv_val<pos:position pos:line="233" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="233" pos:column="75"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="233" pos:column="77">st<pos:position pos:line="233" pos:column="79"/></name></expr></argument>)<pos:position pos:line="233" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="233" pos:column="81"/></expr_stmt>
					<expr_stmt><expr><call><name pos:line="234" pos:column="41">ldap_value_free_len<pos:position pos:line="234" pos:column="60"/></name> <argument_list pos:line="234" pos:column="61">(<argument><expr><name pos:line="234" pos:column="62">olmbdb_list<pos:position pos:line="234" pos:column="73"/></name></expr></argument>)<pos:position pos:line="234" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="234" pos:column="75"/></expr_stmt>
				}<pos:position pos:line="235" pos:column="34"/></block></then></if>

				<if pos:line="237" pos:column="33">if <condition pos:line="237" pos:column="36">(<expr><operator pos:line="237" pos:column="37">(<pos:position pos:line="237" pos:column="38"/></operator><name pos:line="237" pos:column="38">olmbdb_list<pos:position pos:line="237" pos:column="49"/></name> <operator pos:line="237" pos:column="50">=<pos:position pos:line="237" pos:column="51"/></operator> <call><name pos:line="237" pos:column="52">ldap_get_values_len<pos:position pos:line="237" pos:column="71"/></name> <argument_list pos:line="237" pos:column="72">(<argument><expr><name><name pos:line="237" pos:column="73">st<pos:position pos:line="237" pos:column="75"/></name><operator pos:line="237" pos:column="75">-&gt;<pos:position pos:line="237" pos:column="80"/></operator><name pos:line="237" pos:column="77">ld<pos:position pos:line="237" pos:column="79"/></name></name></expr></argument>, <argument><expr><name pos:line="237" pos:column="81">e<pos:position pos:line="237" pos:column="82"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="238" pos:column="41">"olmBDBIDLCache"<pos:position pos:line="238" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="238" pos:column="58"/></argument_list></call><operator pos:line="238" pos:column="58">)<pos:position pos:line="238" pos:column="59"/></operator> <operator pos:line="238" pos:column="60">!=<pos:position pos:line="238" pos:column="62"/></operator> <name pos:line="238" pos:column="63">NULL<pos:position pos:line="238" pos:column="67"/></name></expr>)<pos:position pos:line="238" pos:column="68"/></condition><then pos:line="238" pos:column="68">
				<block pos:line="239" pos:column="33">{
					<expr_stmt><expr><name pos:line="240" pos:column="41">olmbdb_data<pos:position pos:line="240" pos:column="52"/></name> <operator pos:line="240" pos:column="53">=<pos:position pos:line="240" pos:column="54"/></operator> <operator pos:line="240" pos:column="55">*<pos:position pos:line="240" pos:column="56"/></operator><name><name pos:line="240" pos:column="56">olmbdb_list<pos:position pos:line="240" pos:column="67"/></name><index pos:line="240" pos:column="67">[<expr><literal type="number" pos:line="240" pos:column="68">0<pos:position pos:line="240" pos:column="69"/></literal></expr>]<pos:position pos:line="240" pos:column="70"/></index></name></expr>;<pos:position pos:line="240" pos:column="71"/></expr_stmt>
					<expr_stmt><expr><call><name pos:line="241" pos:column="41">ssnprintf<pos:position pos:line="241" pos:column="50"/></name> <argument_list pos:line="241" pos:column="51">(<argument><expr><name pos:line="241" pos:column="52">typeinst<pos:position pos:line="241" pos:column="60"/></name></expr></argument>, <argument><expr><sizeof pos:line="241" pos:column="62">sizeof <argument_list pos:line="241" pos:column="69">(<argument><expr><name pos:line="241" pos:column="70">typeinst<pos:position pos:line="241" pos:column="78"/></name></expr></argument>)<pos:position pos:line="241" pos:column="79"/></argument_list></sizeof></expr></argument>,
						<argument><expr><literal type="string" pos:line="242" pos:column="49">"bdbidlcache-%s"<pos:position pos:line="242" pos:column="65"/></literal></expr></argument>, <argument><expr><name><name pos:line="242" pos:column="67">nc_data<pos:position pos:line="242" pos:column="74"/></name><operator pos:line="242" pos:column="74">.<pos:position pos:line="242" pos:column="75"/></operator><name pos:line="242" pos:column="75">bv_val<pos:position pos:line="242" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="242" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="242" pos:column="83"/></expr_stmt>
					<expr_stmt><expr><call><name pos:line="243" pos:column="41">cldap_submit_gauge<pos:position pos:line="243" pos:column="59"/></name> <argument_list pos:line="243" pos:column="60">(<argument><expr><literal type="string" pos:line="243" pos:column="61">"cache_size"<pos:position pos:line="243" pos:column="73"/></literal></expr></argument>, <argument><expr><name pos:line="243" pos:column="75">typeinst<pos:position pos:line="243" pos:column="83"/></name></expr></argument>,
						<argument><expr><call><name pos:line="244" pos:column="49">atoll<pos:position pos:line="244" pos:column="54"/></name> <argument_list pos:line="244" pos:column="55">(<argument><expr><name><name pos:line="244" pos:column="56">olmbdb_data<pos:position pos:line="244" pos:column="67"/></name><operator pos:line="244" pos:column="67">.<pos:position pos:line="244" pos:column="68"/></operator><name pos:line="244" pos:column="68">bv_val<pos:position pos:line="244" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="244" pos:column="75"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="244" pos:column="77">st<pos:position pos:line="244" pos:column="79"/></name></expr></argument>)<pos:position pos:line="244" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="244" pos:column="81"/></expr_stmt>
					<expr_stmt><expr><call><name pos:line="245" pos:column="41">ldap_value_free_len<pos:position pos:line="245" pos:column="60"/></name> <argument_list pos:line="245" pos:column="61">(<argument><expr><name pos:line="245" pos:column="62">olmbdb_list<pos:position pos:line="245" pos:column="73"/></name></expr></argument>)<pos:position pos:line="245" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="245" pos:column="75"/></expr_stmt>
				}<pos:position pos:line="246" pos:column="34"/></block></then></if>

				<expr_stmt><expr><call><name pos:line="248" pos:column="33">ldap_value_free_len<pos:position pos:line="248" pos:column="52"/></name> <argument_list pos:line="248" pos:column="53">(<argument><expr><name pos:line="248" pos:column="54">nc_list<pos:position pos:line="248" pos:column="61"/></name></expr></argument>)<pos:position pos:line="248" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="248" pos:column="63"/></expr_stmt>
			}<pos:position pos:line="249" pos:column="26"/></block></then></if></elseif>
			<elseif pos:line="250" pos:column="25">else <if pos:line="250" pos:column="30">if <condition pos:line="250" pos:column="33">(<expr><call><name pos:line="250" pos:column="34">strcmp<pos:position pos:line="250" pos:column="40"/></name> <argument_list pos:line="250" pos:column="41">(<argument><expr><name pos:line="250" pos:column="42">dn<pos:position pos:line="250" pos:column="44"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="251" pos:column="41">"cn=Bytes,cn=Statistics,cn=Monitor"<pos:position pos:line="251" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="251" pos:column="77"/></argument_list></call>
					<operator pos:line="252" pos:column="41">==<pos:position pos:line="252" pos:column="43"/></operator> <literal type="number" pos:line="252" pos:column="44">0<pos:position pos:line="252" pos:column="45"/></literal></expr>)<pos:position pos:line="252" pos:column="46"/></condition><then pos:line="252" pos:column="46">
			<block pos:line="253" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="254" pos:column="33">cldap_submit_derive<pos:position pos:line="254" pos:column="52"/></name> <argument_list pos:line="254" pos:column="53">(<argument><expr><literal type="string" pos:line="254" pos:column="54">"derive"<pos:position pos:line="254" pos:column="62"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="254" pos:column="64">"statistics-bytes"<pos:position pos:line="254" pos:column="82"/></literal></expr></argument>,
					<argument><expr><name pos:line="255" pos:column="41">counter<pos:position pos:line="255" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="255" pos:column="50">st<pos:position pos:line="255" pos:column="52"/></name></expr></argument>)<pos:position pos:line="255" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="255" pos:column="54"/></expr_stmt>
			}<pos:position pos:line="256" pos:column="26"/></block></then></if></elseif>
			<elseif pos:line="257" pos:column="25">else <if pos:line="257" pos:column="30">if <condition pos:line="257" pos:column="33">(<expr><call><name pos:line="257" pos:column="34">strcmp<pos:position pos:line="257" pos:column="40"/></name> <argument_list pos:line="257" pos:column="41">(<argument><expr><name pos:line="257" pos:column="42">dn<pos:position pos:line="257" pos:column="44"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="258" pos:column="41">"cn=PDU,cn=Statistics,cn=Monitor"<pos:position pos:line="258" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="258" pos:column="75"/></argument_list></call>
					<operator pos:line="259" pos:column="41">==<pos:position pos:line="259" pos:column="43"/></operator> <literal type="number" pos:line="259" pos:column="44">0<pos:position pos:line="259" pos:column="45"/></literal></expr>)<pos:position pos:line="259" pos:column="46"/></condition><then pos:line="259" pos:column="46">
			<block pos:line="260" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="261" pos:column="33">cldap_submit_derive<pos:position pos:line="261" pos:column="52"/></name> <argument_list pos:line="261" pos:column="53">(<argument><expr><literal type="string" pos:line="261" pos:column="54">"derive"<pos:position pos:line="261" pos:column="62"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="261" pos:column="64">"statistics-pdu"<pos:position pos:line="261" pos:column="80"/></literal></expr></argument>,
					<argument><expr><name pos:line="262" pos:column="41">counter<pos:position pos:line="262" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="262" pos:column="50">st<pos:position pos:line="262" pos:column="52"/></name></expr></argument>)<pos:position pos:line="262" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="262" pos:column="54"/></expr_stmt>
			}<pos:position pos:line="263" pos:column="26"/></block></then></if></elseif>
			<elseif pos:line="264" pos:column="25">else <if pos:line="264" pos:column="30">if <condition pos:line="264" pos:column="33">(<expr><call><name pos:line="264" pos:column="34">strcmp<pos:position pos:line="264" pos:column="40"/></name> <argument_list pos:line="264" pos:column="41">(<argument><expr><name pos:line="264" pos:column="42">dn<pos:position pos:line="264" pos:column="44"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="265" pos:column="41">"cn=Entries,cn=Statistics,cn=Monitor"<pos:position pos:line="265" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="265" pos:column="79"/></argument_list></call>
					<operator pos:line="266" pos:column="41">==<pos:position pos:line="266" pos:column="43"/></operator> <literal type="number" pos:line="266" pos:column="44">0<pos:position pos:line="266" pos:column="45"/></literal></expr>)<pos:position pos:line="266" pos:column="46"/></condition><then pos:line="266" pos:column="46">
			<block pos:line="267" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="268" pos:column="33">cldap_submit_derive<pos:position pos:line="268" pos:column="52"/></name> <argument_list pos:line="268" pos:column="53">(<argument><expr><literal type="string" pos:line="268" pos:column="54">"derive"<pos:position pos:line="268" pos:column="62"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="268" pos:column="64">"statistics-entries"<pos:position pos:line="268" pos:column="84"/></literal></expr></argument>,
					<argument><expr><name pos:line="269" pos:column="41">counter<pos:position pos:line="269" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="269" pos:column="50">st<pos:position pos:line="269" pos:column="52"/></name></expr></argument>)<pos:position pos:line="269" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="269" pos:column="54"/></expr_stmt>
			}<pos:position pos:line="270" pos:column="26"/></block></then></if></elseif>
			<elseif pos:line="271" pos:column="25">else <if pos:line="271" pos:column="30">if <condition pos:line="271" pos:column="33">(<expr><call><name pos:line="271" pos:column="34">strcmp<pos:position pos:line="271" pos:column="40"/></name> <argument_list pos:line="271" pos:column="41">(<argument><expr><name pos:line="271" pos:column="42">dn<pos:position pos:line="271" pos:column="44"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="272" pos:column="41">"cn=Referrals,cn=Statistics,cn=Monitor"<pos:position pos:line="272" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="272" pos:column="81"/></argument_list></call>
					<operator pos:line="273" pos:column="41">==<pos:position pos:line="273" pos:column="43"/></operator> <literal type="number" pos:line="273" pos:column="44">0<pos:position pos:line="273" pos:column="45"/></literal></expr>)<pos:position pos:line="273" pos:column="46"/></condition><then pos:line="273" pos:column="46">
			<block pos:line="274" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="275" pos:column="33">cldap_submit_derive<pos:position pos:line="275" pos:column="52"/></name> <argument_list pos:line="275" pos:column="53">(<argument><expr><literal type="string" pos:line="275" pos:column="54">"derive"<pos:position pos:line="275" pos:column="62"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="275" pos:column="64">"statistics-referrals"<pos:position pos:line="275" pos:column="86"/></literal></expr></argument>,
					<argument><expr><name pos:line="276" pos:column="41">counter<pos:position pos:line="276" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="276" pos:column="50">st<pos:position pos:line="276" pos:column="52"/></name></expr></argument>)<pos:position pos:line="276" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="276" pos:column="54"/></expr_stmt>
			}<pos:position pos:line="277" pos:column="26"/></block></then></if></elseif>
			<elseif pos:line="278" pos:column="25">else <if pos:line="278" pos:column="30">if <condition pos:line="278" pos:column="33">(<expr><call><name pos:line="278" pos:column="34">strcmp<pos:position pos:line="278" pos:column="40"/></name> <argument_list pos:line="278" pos:column="41">(<argument><expr><name pos:line="278" pos:column="42">dn<pos:position pos:line="278" pos:column="44"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="279" pos:column="41">"cn=Open,cn=Threads,cn=Monitor"<pos:position pos:line="279" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="279" pos:column="73"/></argument_list></call>
					<operator pos:line="280" pos:column="41">==<pos:position pos:line="280" pos:column="43"/></operator> <literal type="number" pos:line="280" pos:column="44">0<pos:position pos:line="280" pos:column="45"/></literal></expr>)<pos:position pos:line="280" pos:column="46"/></condition><then pos:line="280" pos:column="46">
			<block pos:line="281" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="282" pos:column="33">cldap_submit_gauge<pos:position pos:line="282" pos:column="51"/></name> <argument_list pos:line="282" pos:column="52">(<argument><expr><literal type="string" pos:line="282" pos:column="53">"threads"<pos:position pos:line="282" pos:column="62"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="282" pos:column="64">"threads-open"<pos:position pos:line="282" pos:column="78"/></literal></expr></argument>,
					<argument><expr><name pos:line="283" pos:column="41">info<pos:position pos:line="283" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="283" pos:column="47">st<pos:position pos:line="283" pos:column="49"/></name></expr></argument>)<pos:position pos:line="283" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="283" pos:column="51"/></expr_stmt>
			}<pos:position pos:line="284" pos:column="26"/></block></then></if></elseif>
			<elseif pos:line="285" pos:column="25">else <if pos:line="285" pos:column="30">if <condition pos:line="285" pos:column="33">(<expr><call><name pos:line="285" pos:column="34">strcmp<pos:position pos:line="285" pos:column="40"/></name> <argument_list pos:line="285" pos:column="41">(<argument><expr><name pos:line="285" pos:column="42">dn<pos:position pos:line="285" pos:column="44"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="286" pos:column="41">"cn=Starting,cn=Threads,cn=Monitor"<pos:position pos:line="286" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="286" pos:column="77"/></argument_list></call>
					<operator pos:line="287" pos:column="41">==<pos:position pos:line="287" pos:column="43"/></operator> <literal type="number" pos:line="287" pos:column="44">0<pos:position pos:line="287" pos:column="45"/></literal></expr>)<pos:position pos:line="287" pos:column="46"/></condition><then pos:line="287" pos:column="46">
			<block pos:line="288" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="289" pos:column="33">cldap_submit_gauge<pos:position pos:line="289" pos:column="51"/></name> <argument_list pos:line="289" pos:column="52">(<argument><expr><literal type="string" pos:line="289" pos:column="53">"threads"<pos:position pos:line="289" pos:column="62"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="289" pos:column="64">"threads-starting"<pos:position pos:line="289" pos:column="82"/></literal></expr></argument>,
					<argument><expr><name pos:line="290" pos:column="41">info<pos:position pos:line="290" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="290" pos:column="47">st<pos:position pos:line="290" pos:column="49"/></name></expr></argument>)<pos:position pos:line="290" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="290" pos:column="51"/></expr_stmt>
			}<pos:position pos:line="291" pos:column="26"/></block></then></if></elseif>
			<elseif pos:line="292" pos:column="25">else <if pos:line="292" pos:column="30">if <condition pos:line="292" pos:column="33">(<expr><call><name pos:line="292" pos:column="34">strcmp<pos:position pos:line="292" pos:column="40"/></name> <argument_list pos:line="292" pos:column="41">(<argument><expr><name pos:line="292" pos:column="42">dn<pos:position pos:line="292" pos:column="44"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="293" pos:column="41">"cn=Active,cn=Threads,cn=Monitor"<pos:position pos:line="293" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="293" pos:column="75"/></argument_list></call>
					<operator pos:line="294" pos:column="41">==<pos:position pos:line="294" pos:column="43"/></operator> <literal type="number" pos:line="294" pos:column="44">0<pos:position pos:line="294" pos:column="45"/></literal></expr>)<pos:position pos:line="294" pos:column="46"/></condition><then pos:line="294" pos:column="46">
			<block pos:line="295" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="296" pos:column="33">cldap_submit_gauge<pos:position pos:line="296" pos:column="51"/></name> <argument_list pos:line="296" pos:column="52">(<argument><expr><literal type="string" pos:line="296" pos:column="53">"threads"<pos:position pos:line="296" pos:column="62"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="296" pos:column="64">"threads-active"<pos:position pos:line="296" pos:column="80"/></literal></expr></argument>,
					<argument><expr><name pos:line="297" pos:column="41">info<pos:position pos:line="297" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="297" pos:column="47">st<pos:position pos:line="297" pos:column="49"/></name></expr></argument>)<pos:position pos:line="297" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="297" pos:column="51"/></expr_stmt>
			}<pos:position pos:line="298" pos:column="26"/></block></then></if></elseif>
			<elseif pos:line="299" pos:column="25">else <if pos:line="299" pos:column="30">if <condition pos:line="299" pos:column="33">(<expr><call><name pos:line="299" pos:column="34">strcmp<pos:position pos:line="299" pos:column="40"/></name> <argument_list pos:line="299" pos:column="41">(<argument><expr><name pos:line="299" pos:column="42">dn<pos:position pos:line="299" pos:column="44"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="300" pos:column="41">"cn=Pending,cn=Threads,cn=Monitor"<pos:position pos:line="300" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="300" pos:column="76"/></argument_list></call>
					<operator pos:line="301" pos:column="41">==<pos:position pos:line="301" pos:column="43"/></operator> <literal type="number" pos:line="301" pos:column="44">0<pos:position pos:line="301" pos:column="45"/></literal></expr>)<pos:position pos:line="301" pos:column="46"/></condition><then pos:line="301" pos:column="46">
			<block pos:line="302" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="303" pos:column="33">cldap_submit_gauge<pos:position pos:line="303" pos:column="51"/></name> <argument_list pos:line="303" pos:column="52">(<argument><expr><literal type="string" pos:line="303" pos:column="53">"threads"<pos:position pos:line="303" pos:column="62"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="303" pos:column="64">"threads-pending"<pos:position pos:line="303" pos:column="81"/></literal></expr></argument>,
					<argument><expr><name pos:line="304" pos:column="41">info<pos:position pos:line="304" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="304" pos:column="47">st<pos:position pos:line="304" pos:column="49"/></name></expr></argument>)<pos:position pos:line="304" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="304" pos:column="51"/></expr_stmt>
			}<pos:position pos:line="305" pos:column="26"/></block></then></if></elseif>
			<elseif pos:line="306" pos:column="25">else <if pos:line="306" pos:column="30">if <condition pos:line="306" pos:column="33">(<expr><call><name pos:line="306" pos:column="34">strcmp<pos:position pos:line="306" pos:column="40"/></name> <argument_list pos:line="306" pos:column="41">(<argument><expr><name pos:line="306" pos:column="42">dn<pos:position pos:line="306" pos:column="44"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="307" pos:column="41">"cn=Backload,cn=Threads,cn=Monitor"<pos:position pos:line="307" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="307" pos:column="77"/></argument_list></call>
					<operator pos:line="308" pos:column="41">==<pos:position pos:line="308" pos:column="43"/></operator> <literal type="number" pos:line="308" pos:column="44">0<pos:position pos:line="308" pos:column="45"/></literal></expr>)<pos:position pos:line="308" pos:column="46"/></condition><then pos:line="308" pos:column="46">
			<block pos:line="309" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="310" pos:column="33">cldap_submit_gauge<pos:position pos:line="310" pos:column="51"/></name> <argument_list pos:line="310" pos:column="52">(<argument><expr><literal type="string" pos:line="310" pos:column="53">"threads"<pos:position pos:line="310" pos:column="62"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="310" pos:column="64">"threads-backload"<pos:position pos:line="310" pos:column="82"/></literal></expr></argument>,
					<argument><expr><name pos:line="311" pos:column="41">info<pos:position pos:line="311" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="311" pos:column="47">st<pos:position pos:line="311" pos:column="49"/></name></expr></argument>)<pos:position pos:line="311" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="311" pos:column="51"/></expr_stmt>
			}<pos:position pos:line="312" pos:column="26"/></block></then></if></elseif>
			<elseif pos:line="313" pos:column="25">else <if pos:line="313" pos:column="30">if <condition pos:line="313" pos:column="33">(<expr><call><name pos:line="313" pos:column="34">strcmp<pos:position pos:line="313" pos:column="40"/></name> <argument_list pos:line="313" pos:column="41">(<argument><expr><name pos:line="313" pos:column="42">dn<pos:position pos:line="313" pos:column="44"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="314" pos:column="41">"cn=Read,cn=Waiters,cn=Monitor"<pos:position pos:line="314" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="314" pos:column="73"/></argument_list></call>
					<operator pos:line="315" pos:column="41">==<pos:position pos:line="315" pos:column="43"/></operator> <literal type="number" pos:line="315" pos:column="44">0<pos:position pos:line="315" pos:column="45"/></literal></expr>)<pos:position pos:line="315" pos:column="46"/></condition><then pos:line="315" pos:column="46">
			<block pos:line="316" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="317" pos:column="33">cldap_submit_derive<pos:position pos:line="317" pos:column="52"/></name> <argument_list pos:line="317" pos:column="53">(<argument><expr><literal type="string" pos:line="317" pos:column="54">"derive"<pos:position pos:line="317" pos:column="62"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="317" pos:column="64">"waiters-read"<pos:position pos:line="317" pos:column="78"/></literal></expr></argument>,
					<argument><expr><name pos:line="318" pos:column="41">counter<pos:position pos:line="318" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="318" pos:column="50">st<pos:position pos:line="318" pos:column="52"/></name></expr></argument>)<pos:position pos:line="318" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="318" pos:column="54"/></expr_stmt>
			}<pos:position pos:line="319" pos:column="26"/></block></then></if></elseif>
			<elseif pos:line="320" pos:column="25">else <if pos:line="320" pos:column="30">if <condition pos:line="320" pos:column="33">(<expr><call><name pos:line="320" pos:column="34">strcmp<pos:position pos:line="320" pos:column="40"/></name> <argument_list pos:line="320" pos:column="41">(<argument><expr><name pos:line="320" pos:column="42">dn<pos:position pos:line="320" pos:column="44"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="321" pos:column="41">"cn=Write,cn=Waiters,cn=Monitor"<pos:position pos:line="321" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="321" pos:column="74"/></argument_list></call>
					<operator pos:line="322" pos:column="41">==<pos:position pos:line="322" pos:column="43"/></operator> <literal type="number" pos:line="322" pos:column="44">0<pos:position pos:line="322" pos:column="45"/></literal></expr>)<pos:position pos:line="322" pos:column="46"/></condition><then pos:line="322" pos:column="46">
			<block pos:line="323" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="324" pos:column="33">cldap_submit_derive<pos:position pos:line="324" pos:column="52"/></name> <argument_list pos:line="324" pos:column="53">(<argument><expr><literal type="string" pos:line="324" pos:column="54">"derive"<pos:position pos:line="324" pos:column="62"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="324" pos:column="64">"waiters-write"<pos:position pos:line="324" pos:column="79"/></literal></expr></argument>,
					<argument><expr><name pos:line="325" pos:column="41">counter<pos:position pos:line="325" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="325" pos:column="50">st<pos:position pos:line="325" pos:column="52"/></name></expr></argument>)<pos:position pos:line="325" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="325" pos:column="54"/></expr_stmt>
			}<pos:position pos:line="326" pos:column="26"/></block></then></if></elseif></if>

			<expr_stmt><expr><call><name pos:line="328" pos:column="25">ldap_value_free_len<pos:position pos:line="328" pos:column="44"/></name> <argument_list pos:line="328" pos:column="45">(<argument><expr><name pos:line="328" pos:column="46">counter_list<pos:position pos:line="328" pos:column="58"/></name></expr></argument>)<pos:position pos:line="328" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="328" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="329" pos:column="25">ldap_value_free_len<pos:position pos:line="329" pos:column="44"/></name> <argument_list pos:line="329" pos:column="45">(<argument><expr><name pos:line="329" pos:column="46">opc_list<pos:position pos:line="329" pos:column="54"/></name></expr></argument>)<pos:position pos:line="329" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="329" pos:column="56"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="330" pos:column="25">ldap_value_free_len<pos:position pos:line="330" pos:column="44"/></name> <argument_list pos:line="330" pos:column="45">(<argument><expr><name pos:line="330" pos:column="46">opi_list<pos:position pos:line="330" pos:column="54"/></name></expr></argument>)<pos:position pos:line="330" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="330" pos:column="56"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="331" pos:column="25">ldap_value_free_len<pos:position pos:line="331" pos:column="44"/></name> <argument_list pos:line="331" pos:column="45">(<argument><expr><name pos:line="331" pos:column="46">info_list<pos:position pos:line="331" pos:column="55"/></name></expr></argument>)<pos:position pos:line="331" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="331" pos:column="57"/></expr_stmt>
		}<pos:position pos:line="332" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="334" pos:column="17">ldap_memfree<pos:position pos:line="334" pos:column="29"/></name> <argument_list pos:line="334" pos:column="30">(<argument><expr><name pos:line="334" pos:column="31">dn<pos:position pos:line="334" pos:column="33"/></name></expr></argument>)<pos:position pos:line="334" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="334" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="335" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="337" pos:column="9">ldap_msgfree<pos:position pos:line="337" pos:column="21"/></name> <argument_list pos:line="337" pos:column="22">(<argument><expr><name pos:line="337" pos:column="23">result<pos:position pos:line="337" pos:column="29"/></name></expr></argument>)<pos:position pos:line="337" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="337" pos:column="31"/></expr_stmt>
	<return pos:line="338" pos:column="9">return <expr><operator pos:line="338" pos:column="16">(<pos:position pos:line="338" pos:column="17"/></operator><literal type="number" pos:line="338" pos:column="17">0<pos:position pos:line="338" pos:column="18"/></literal><operator pos:line="338" pos:column="18">)<pos:position pos:line="338" pos:column="19"/></operator></expr>;<pos:position pos:line="338" pos:column="20"/></return>
}<pos:position pos:line="339" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_208_collectd-5.0.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">array_grow<pos:position pos:line="1" pos:column="22"/></name> <parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">void<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier><modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">array<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">int<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">array_len<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">size_t<pos:position pos:line="1" pos:column="60"/></name></type> <name pos:line="1" pos:column="61">elem_size<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">void<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">tmp<pos:position pos:line="3" pos:column="12"/></name></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="5" pos:column="3">assert<pos:position pos:line="5" pos:column="9"/></name> <argument_list pos:line="5" pos:column="10">(<argument><expr><operator pos:line="5" pos:column="11">(<pos:position pos:line="5" pos:column="12"/></operator><name pos:line="5" pos:column="12">array<pos:position pos:line="5" pos:column="17"/></name> <operator pos:line="5" pos:column="18">!=<pos:position pos:line="5" pos:column="20"/></operator> <name pos:line="5" pos:column="21">NULL<pos:position pos:line="5" pos:column="25"/></name><operator pos:line="5" pos:column="25">)<pos:position pos:line="5" pos:column="26"/></operator> <operator pos:line="5" pos:column="27">&amp;&amp;<pos:position pos:line="5" pos:column="37"/></operator> <operator pos:line="5" pos:column="30">(<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="31">array_len<pos:position pos:line="5" pos:column="40"/></name> <operator pos:line="5" pos:column="41">!=<pos:position pos:line="5" pos:column="43"/></operator> <name pos:line="5" pos:column="44">NULL<pos:position pos:line="5" pos:column="48"/></name><operator pos:line="5" pos:column="48">)<pos:position pos:line="5" pos:column="49"/></operator></expr></argument>)<pos:position pos:line="5" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="51"/></expr_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">tmp<pos:position pos:line="7" pos:column="6"/></name> <operator pos:line="7" pos:column="7">=<pos:position pos:line="7" pos:column="8"/></operator> <call><name pos:line="7" pos:column="9">realloc<pos:position pos:line="7" pos:column="16"/></name> <argument_list pos:line="7" pos:column="17">(<argument><expr><operator pos:line="7" pos:column="18">*<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="19">array<pos:position pos:line="7" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="26">(<pos:position pos:line="7" pos:column="27"/></operator><operator pos:line="7" pos:column="27">*<pos:position pos:line="7" pos:column="28"/></operator><name pos:line="7" pos:column="28">array_len<pos:position pos:line="7" pos:column="37"/></name> <operator pos:line="7" pos:column="38">+<pos:position pos:line="7" pos:column="39"/></operator> <literal type="number" pos:line="7" pos:column="40">1<pos:position pos:line="7" pos:column="41"/></literal><operator pos:line="7" pos:column="41">)<pos:position pos:line="7" pos:column="42"/></operator> <operator pos:line="7" pos:column="43">*<pos:position pos:line="7" pos:column="44"/></operator> <name pos:line="7" pos:column="45">elem_size<pos:position pos:line="7" pos:column="54"/></name></expr></argument>)<pos:position pos:line="7" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="56"/></expr_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">tmp<pos:position pos:line="8" pos:column="10"/></name> <operator pos:line="8" pos:column="11">==<pos:position pos:line="8" pos:column="13"/></operator> <name pos:line="8" pos:column="14">NULL<pos:position pos:line="8" pos:column="18"/></name></expr>)<pos:position pos:line="8" pos:column="19"/></condition><then pos:line="8" pos:column="19"> <block pos:line="8" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">fprintf<pos:position pos:line="9" pos:column="12"/></name> <argument_list pos:line="9" pos:column="13">(<argument><expr><name pos:line="9" pos:column="14">stderr<pos:position pos:line="9" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="22">"ERROR: Failed to allocate memory.\n"<pos:position pos:line="9" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="61"/></expr_stmt>
    <return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">(<pos:position pos:line="10" pos:column="13"/></operator><operator pos:line="10" pos:column="13">-<pos:position pos:line="10" pos:column="14"/></operator><literal type="number" pos:line="10" pos:column="14">1<pos:position pos:line="10" pos:column="15"/></literal><operator pos:line="10" pos:column="15">)<pos:position pos:line="10" pos:column="16"/></operator></expr>;<pos:position pos:line="10" pos:column="17"/></return>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>

  <expr_stmt><expr><operator pos:line="13" pos:column="3">*<pos:position pos:line="13" pos:column="4"/></operator><name pos:line="13" pos:column="4">array<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">=<pos:position pos:line="13" pos:column="11"/></operator> <name pos:line="13" pos:column="12">tmp<pos:position pos:line="13" pos:column="15"/></name></expr>;<pos:position pos:line="13" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="14" pos:column="3">++<pos:position pos:line="14" pos:column="5"/></operator><operator pos:line="14" pos:column="5">(<pos:position pos:line="14" pos:column="6"/></operator><operator pos:line="14" pos:column="6">*<pos:position pos:line="14" pos:column="7"/></operator><name pos:line="14" pos:column="7">array_len<pos:position pos:line="14" pos:column="16"/></name><operator pos:line="14" pos:column="16">)<pos:position pos:line="14" pos:column="17"/></operator></expr>;<pos:position pos:line="14" pos:column="18"/></expr_stmt>
  <return pos:line="15" pos:column="3">return <expr><operator pos:line="15" pos:column="10">(<pos:position pos:line="15" pos:column="11"/></operator><literal type="number" pos:line="15" pos:column="11">0<pos:position pos:line="15" pos:column="12"/></literal><operator pos:line="15" pos:column="12">)<pos:position pos:line="15" pos:column="13"/></operator></expr>;<pos:position pos:line="15" pos:column="14"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

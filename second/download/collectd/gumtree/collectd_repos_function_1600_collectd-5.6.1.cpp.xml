<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1600_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">statsd_config<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">oconfig_item_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">ci<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list> <comment type="block" pos:line="1" pos:column="47">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <for pos:line="3" pos:column="3">for <control pos:line="3" pos:column="7">(<init><decl><type><name pos:line="3" pos:column="8">int<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">i<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><literal type="number" pos:line="3" pos:column="16">0<pos:position pos:line="3" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="18"/></init> <condition><expr><name pos:line="3" pos:column="19">i<pos:position pos:line="3" pos:column="20"/></name> <operator pos:line="3" pos:column="21">&lt;<pos:position pos:line="3" pos:column="25"/></operator> <name><name pos:line="3" pos:column="23">ci<pos:position pos:line="3" pos:column="25"/></name><operator pos:line="3" pos:column="25">-&gt;<pos:position pos:line="3" pos:column="30"/></operator><name pos:line="3" pos:column="27">children_num<pos:position pos:line="3" pos:column="39"/></name></name></expr>;<pos:position pos:line="3" pos:column="40"/></condition> <incr><expr><name pos:line="3" pos:column="41">i<pos:position pos:line="3" pos:column="42"/></name><operator pos:line="3" pos:column="42">++<pos:position pos:line="3" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="3" pos:column="45"/></control>
  <block pos:line="4" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">oconfig_item_t<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">child<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><name><name pos:line="5" pos:column="29">ci<pos:position pos:line="5" pos:column="31"/></name><operator pos:line="5" pos:column="31">-&gt;<pos:position pos:line="5" pos:column="36"/></operator><name pos:line="5" pos:column="33">children<pos:position pos:line="5" pos:column="41"/></name></name> <operator pos:line="5" pos:column="42">+<pos:position pos:line="5" pos:column="43"/></operator> <name pos:line="5" pos:column="44">i<pos:position pos:line="5" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="46"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call><name pos:line="7" pos:column="9">strcasecmp<pos:position pos:line="7" pos:column="19"/></name> <argument_list pos:line="7" pos:column="20">(<argument><expr><literal type="string" pos:line="7" pos:column="21">"Host"<pos:position pos:line="7" pos:column="27"/></literal></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="29">child<pos:position pos:line="7" pos:column="34"/></name><operator pos:line="7" pos:column="34">-&gt;<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="36">key<pos:position pos:line="7" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="40"/></argument_list></call> <operator pos:line="7" pos:column="41">==<pos:position pos:line="7" pos:column="43"/></operator> <literal type="number" pos:line="7" pos:column="44">0<pos:position pos:line="7" pos:column="45"/></literal></expr>)<pos:position pos:line="7" pos:column="46"/></condition><then pos:line="7" pos:column="46">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="7">cf_util_get_string<pos:position pos:line="8" pos:column="25"/></name> <argument_list pos:line="8" pos:column="26">(<argument><expr><name pos:line="8" pos:column="27">child<pos:position pos:line="8" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="34">&amp;<pos:position pos:line="8" pos:column="39"/></operator><name pos:line="8" pos:column="35">conf_node<pos:position pos:line="8" pos:column="44"/></name></expr></argument>)<pos:position pos:line="8" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="46"/></expr_stmt></block></then>
    <elseif pos:line="9" pos:column="5">else <if pos:line="9" pos:column="10">if <condition pos:line="9" pos:column="13">(<expr><call><name pos:line="9" pos:column="14">strcasecmp<pos:position pos:line="9" pos:column="24"/></name> <argument_list pos:line="9" pos:column="25">(<argument><expr><literal type="string" pos:line="9" pos:column="26">"Port"<pos:position pos:line="9" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="34">child<pos:position pos:line="9" pos:column="39"/></name><operator pos:line="9" pos:column="39">-&gt;<pos:position pos:line="9" pos:column="44"/></operator><name pos:line="9" pos:column="41">key<pos:position pos:line="9" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="45"/></argument_list></call> <operator pos:line="9" pos:column="46">==<pos:position pos:line="9" pos:column="48"/></operator> <literal type="number" pos:line="9" pos:column="49">0<pos:position pos:line="9" pos:column="50"/></literal></expr>)<pos:position pos:line="9" pos:column="51"/></condition><then pos:line="9" pos:column="51">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="7">cf_util_get_service<pos:position pos:line="10" pos:column="26"/></name> <argument_list pos:line="10" pos:column="27">(<argument><expr><name pos:line="10" pos:column="28">child<pos:position pos:line="10" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="35">&amp;<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="36">conf_service<pos:position pos:line="10" pos:column="48"/></name></expr></argument>)<pos:position pos:line="10" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="50"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="11" pos:column="5">else <if pos:line="11" pos:column="10">if <condition pos:line="11" pos:column="13">(<expr><call><name pos:line="11" pos:column="14">strcasecmp<pos:position pos:line="11" pos:column="24"/></name> <argument_list pos:line="11" pos:column="25">(<argument><expr><literal type="string" pos:line="11" pos:column="26">"DeleteCounters"<pos:position pos:line="11" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="44">child<pos:position pos:line="11" pos:column="49"/></name><operator pos:line="11" pos:column="49">-&gt;<pos:position pos:line="11" pos:column="54"/></operator><name pos:line="11" pos:column="51">key<pos:position pos:line="11" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="55"/></argument_list></call> <operator pos:line="11" pos:column="56">==<pos:position pos:line="11" pos:column="58"/></operator> <literal type="number" pos:line="11" pos:column="59">0<pos:position pos:line="11" pos:column="60"/></literal></expr>)<pos:position pos:line="11" pos:column="61"/></condition><then pos:line="11" pos:column="61">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="7">cf_util_get_boolean<pos:position pos:line="12" pos:column="26"/></name> <argument_list pos:line="12" pos:column="27">(<argument><expr><name pos:line="12" pos:column="28">child<pos:position pos:line="12" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="35">&amp;<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="36">conf_delete_counters<pos:position pos:line="12" pos:column="56"/></name></expr></argument>)<pos:position pos:line="12" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="58"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="13" pos:column="5">else <if pos:line="13" pos:column="10">if <condition pos:line="13" pos:column="13">(<expr><call><name pos:line="13" pos:column="14">strcasecmp<pos:position pos:line="13" pos:column="24"/></name> <argument_list pos:line="13" pos:column="25">(<argument><expr><literal type="string" pos:line="13" pos:column="26">"DeleteTimers"<pos:position pos:line="13" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="42">child<pos:position pos:line="13" pos:column="47"/></name><operator pos:line="13" pos:column="47">-&gt;<pos:position pos:line="13" pos:column="52"/></operator><name pos:line="13" pos:column="49">key<pos:position pos:line="13" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="53"/></argument_list></call> <operator pos:line="13" pos:column="54">==<pos:position pos:line="13" pos:column="56"/></operator> <literal type="number" pos:line="13" pos:column="57">0<pos:position pos:line="13" pos:column="58"/></literal></expr>)<pos:position pos:line="13" pos:column="59"/></condition><then pos:line="13" pos:column="59">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="7">cf_util_get_boolean<pos:position pos:line="14" pos:column="26"/></name> <argument_list pos:line="14" pos:column="27">(<argument><expr><name pos:line="14" pos:column="28">child<pos:position pos:line="14" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="35">&amp;<pos:position pos:line="14" pos:column="40"/></operator><name pos:line="14" pos:column="36">conf_delete_timers<pos:position pos:line="14" pos:column="54"/></name></expr></argument>)<pos:position pos:line="14" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="56"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="15" pos:column="5">else <if pos:line="15" pos:column="10">if <condition pos:line="15" pos:column="13">(<expr><call><name pos:line="15" pos:column="14">strcasecmp<pos:position pos:line="15" pos:column="24"/></name> <argument_list pos:line="15" pos:column="25">(<argument><expr><literal type="string" pos:line="15" pos:column="26">"DeleteGauges"<pos:position pos:line="15" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="42">child<pos:position pos:line="15" pos:column="47"/></name><operator pos:line="15" pos:column="47">-&gt;<pos:position pos:line="15" pos:column="52"/></operator><name pos:line="15" pos:column="49">key<pos:position pos:line="15" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="53"/></argument_list></call> <operator pos:line="15" pos:column="54">==<pos:position pos:line="15" pos:column="56"/></operator> <literal type="number" pos:line="15" pos:column="57">0<pos:position pos:line="15" pos:column="58"/></literal></expr>)<pos:position pos:line="15" pos:column="59"/></condition><then pos:line="15" pos:column="59">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="7">cf_util_get_boolean<pos:position pos:line="16" pos:column="26"/></name> <argument_list pos:line="16" pos:column="27">(<argument><expr><name pos:line="16" pos:column="28">child<pos:position pos:line="16" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="35">&amp;<pos:position pos:line="16" pos:column="40"/></operator><name pos:line="16" pos:column="36">conf_delete_gauges<pos:position pos:line="16" pos:column="54"/></name></expr></argument>)<pos:position pos:line="16" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="56"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="17" pos:column="5">else <if pos:line="17" pos:column="10">if <condition pos:line="17" pos:column="13">(<expr><call><name pos:line="17" pos:column="14">strcasecmp<pos:position pos:line="17" pos:column="24"/></name> <argument_list pos:line="17" pos:column="25">(<argument><expr><literal type="string" pos:line="17" pos:column="26">"DeleteSets"<pos:position pos:line="17" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="40">child<pos:position pos:line="17" pos:column="45"/></name><operator pos:line="17" pos:column="45">-&gt;<pos:position pos:line="17" pos:column="50"/></operator><name pos:line="17" pos:column="47">key<pos:position pos:line="17" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="51"/></argument_list></call> <operator pos:line="17" pos:column="52">==<pos:position pos:line="17" pos:column="54"/></operator> <literal type="number" pos:line="17" pos:column="55">0<pos:position pos:line="17" pos:column="56"/></literal></expr>)<pos:position pos:line="17" pos:column="57"/></condition><then pos:line="17" pos:column="57">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="7">cf_util_get_boolean<pos:position pos:line="18" pos:column="26"/></name> <argument_list pos:line="18" pos:column="27">(<argument><expr><name pos:line="18" pos:column="28">child<pos:position pos:line="18" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="35">&amp;<pos:position pos:line="18" pos:column="40"/></operator><name pos:line="18" pos:column="36">conf_delete_sets<pos:position pos:line="18" pos:column="52"/></name></expr></argument>)<pos:position pos:line="18" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="54"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="19" pos:column="5">else <if pos:line="19" pos:column="10">if <condition pos:line="19" pos:column="13">(<expr><call><name pos:line="19" pos:column="14">strcasecmp<pos:position pos:line="19" pos:column="24"/></name> <argument_list pos:line="19" pos:column="25">(<argument><expr><literal type="string" pos:line="19" pos:column="26">"CounterSum"<pos:position pos:line="19" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="40">child<pos:position pos:line="19" pos:column="45"/></name><operator pos:line="19" pos:column="45">-&gt;<pos:position pos:line="19" pos:column="50"/></operator><name pos:line="19" pos:column="47">key<pos:position pos:line="19" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="51"/></argument_list></call> <operator pos:line="19" pos:column="52">==<pos:position pos:line="19" pos:column="54"/></operator> <literal type="number" pos:line="19" pos:column="55">0<pos:position pos:line="19" pos:column="56"/></literal></expr>)<pos:position pos:line="19" pos:column="57"/></condition><then pos:line="19" pos:column="57">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="7">cf_util_get_boolean<pos:position pos:line="20" pos:column="26"/></name> <argument_list pos:line="20" pos:column="27">(<argument><expr><name pos:line="20" pos:column="28">child<pos:position pos:line="20" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="35">&amp;<pos:position pos:line="20" pos:column="40"/></operator><name pos:line="20" pos:column="36">conf_counter_sum<pos:position pos:line="20" pos:column="52"/></name></expr></argument>)<pos:position pos:line="20" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="54"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="21" pos:column="5">else <if pos:line="21" pos:column="10">if <condition pos:line="21" pos:column="13">(<expr><call><name pos:line="21" pos:column="14">strcasecmp<pos:position pos:line="21" pos:column="24"/></name> <argument_list pos:line="21" pos:column="25">(<argument><expr><literal type="string" pos:line="21" pos:column="26">"TimerLower"<pos:position pos:line="21" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="40">child<pos:position pos:line="21" pos:column="45"/></name><operator pos:line="21" pos:column="45">-&gt;<pos:position pos:line="21" pos:column="50"/></operator><name pos:line="21" pos:column="47">key<pos:position pos:line="21" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="51"/></argument_list></call> <operator pos:line="21" pos:column="52">==<pos:position pos:line="21" pos:column="54"/></operator> <literal type="number" pos:line="21" pos:column="55">0<pos:position pos:line="21" pos:column="56"/></literal></expr>)<pos:position pos:line="21" pos:column="57"/></condition><then pos:line="21" pos:column="57">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="7">cf_util_get_boolean<pos:position pos:line="22" pos:column="26"/></name> <argument_list pos:line="22" pos:column="27">(<argument><expr><name pos:line="22" pos:column="28">child<pos:position pos:line="22" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="35">&amp;<pos:position pos:line="22" pos:column="40"/></operator><name pos:line="22" pos:column="36">conf_timer_lower<pos:position pos:line="22" pos:column="52"/></name></expr></argument>)<pos:position pos:line="22" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="54"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="23" pos:column="5">else <if pos:line="23" pos:column="10">if <condition pos:line="23" pos:column="13">(<expr><call><name pos:line="23" pos:column="14">strcasecmp<pos:position pos:line="23" pos:column="24"/></name> <argument_list pos:line="23" pos:column="25">(<argument><expr><literal type="string" pos:line="23" pos:column="26">"TimerUpper"<pos:position pos:line="23" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="40">child<pos:position pos:line="23" pos:column="45"/></name><operator pos:line="23" pos:column="45">-&gt;<pos:position pos:line="23" pos:column="50"/></operator><name pos:line="23" pos:column="47">key<pos:position pos:line="23" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="51"/></argument_list></call> <operator pos:line="23" pos:column="52">==<pos:position pos:line="23" pos:column="54"/></operator> <literal type="number" pos:line="23" pos:column="55">0<pos:position pos:line="23" pos:column="56"/></literal></expr>)<pos:position pos:line="23" pos:column="57"/></condition><then pos:line="23" pos:column="57">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="7">cf_util_get_boolean<pos:position pos:line="24" pos:column="26"/></name> <argument_list pos:line="24" pos:column="27">(<argument><expr><name pos:line="24" pos:column="28">child<pos:position pos:line="24" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="35">&amp;<pos:position pos:line="24" pos:column="40"/></operator><name pos:line="24" pos:column="36">conf_timer_upper<pos:position pos:line="24" pos:column="52"/></name></expr></argument>)<pos:position pos:line="24" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="54"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="25" pos:column="5">else <if pos:line="25" pos:column="10">if <condition pos:line="25" pos:column="13">(<expr><call><name pos:line="25" pos:column="14">strcasecmp<pos:position pos:line="25" pos:column="24"/></name> <argument_list pos:line="25" pos:column="25">(<argument><expr><literal type="string" pos:line="25" pos:column="26">"TimerSum"<pos:position pos:line="25" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="38">child<pos:position pos:line="25" pos:column="43"/></name><operator pos:line="25" pos:column="43">-&gt;<pos:position pos:line="25" pos:column="48"/></operator><name pos:line="25" pos:column="45">key<pos:position pos:line="25" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="49"/></argument_list></call> <operator pos:line="25" pos:column="50">==<pos:position pos:line="25" pos:column="52"/></operator> <literal type="number" pos:line="25" pos:column="53">0<pos:position pos:line="25" pos:column="54"/></literal></expr>)<pos:position pos:line="25" pos:column="55"/></condition><then pos:line="25" pos:column="55">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="7">cf_util_get_boolean<pos:position pos:line="26" pos:column="26"/></name> <argument_list pos:line="26" pos:column="27">(<argument><expr><name pos:line="26" pos:column="28">child<pos:position pos:line="26" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="35">&amp;<pos:position pos:line="26" pos:column="40"/></operator><name pos:line="26" pos:column="36">conf_timer_sum<pos:position pos:line="26" pos:column="50"/></name></expr></argument>)<pos:position pos:line="26" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="52"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="27" pos:column="5">else <if pos:line="27" pos:column="10">if <condition pos:line="27" pos:column="13">(<expr><call><name pos:line="27" pos:column="14">strcasecmp<pos:position pos:line="27" pos:column="24"/></name> <argument_list pos:line="27" pos:column="25">(<argument><expr><literal type="string" pos:line="27" pos:column="26">"TimerCount"<pos:position pos:line="27" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="40">child<pos:position pos:line="27" pos:column="45"/></name><operator pos:line="27" pos:column="45">-&gt;<pos:position pos:line="27" pos:column="50"/></operator><name pos:line="27" pos:column="47">key<pos:position pos:line="27" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="51"/></argument_list></call> <operator pos:line="27" pos:column="52">==<pos:position pos:line="27" pos:column="54"/></operator> <literal type="number" pos:line="27" pos:column="55">0<pos:position pos:line="27" pos:column="56"/></literal></expr>)<pos:position pos:line="27" pos:column="57"/></condition><then pos:line="27" pos:column="57">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="7">cf_util_get_boolean<pos:position pos:line="28" pos:column="26"/></name> <argument_list pos:line="28" pos:column="27">(<argument><expr><name pos:line="28" pos:column="28">child<pos:position pos:line="28" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="35">&amp;<pos:position pos:line="28" pos:column="40"/></operator><name pos:line="28" pos:column="36">conf_timer_count<pos:position pos:line="28" pos:column="52"/></name></expr></argument>)<pos:position pos:line="28" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="54"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="29" pos:column="5">else <if pos:line="29" pos:column="10">if <condition pos:line="29" pos:column="13">(<expr><call><name pos:line="29" pos:column="14">strcasecmp<pos:position pos:line="29" pos:column="24"/></name> <argument_list pos:line="29" pos:column="25">(<argument><expr><literal type="string" pos:line="29" pos:column="26">"TimerPercentile"<pos:position pos:line="29" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="45">child<pos:position pos:line="29" pos:column="50"/></name><operator pos:line="29" pos:column="50">-&gt;<pos:position pos:line="29" pos:column="55"/></operator><name pos:line="29" pos:column="52">key<pos:position pos:line="29" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="56"/></argument_list></call> <operator pos:line="29" pos:column="57">==<pos:position pos:line="29" pos:column="59"/></operator> <literal type="number" pos:line="29" pos:column="60">0<pos:position pos:line="29" pos:column="61"/></literal></expr>)<pos:position pos:line="29" pos:column="62"/></condition><then pos:line="29" pos:column="62">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="7">statsd_config_timer_percentile<pos:position pos:line="30" pos:column="37"/></name> <argument_list pos:line="30" pos:column="38">(<argument><expr><name pos:line="30" pos:column="39">child<pos:position pos:line="30" pos:column="44"/></name></expr></argument>)<pos:position pos:line="30" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="46"/></expr_stmt></block></then></if></elseif>
    <else pos:line="31" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="7">ERROR<pos:position pos:line="32" pos:column="12"/></name> <argument_list pos:line="32" pos:column="13">(<argument><expr><literal type="string" pos:line="32" pos:column="14">"statsd plugin: The \"%s\" config option is not valid."<pos:position pos:line="32" pos:column="69"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="33" pos:column="11">child<pos:position pos:line="33" pos:column="16"/></name><operator pos:line="33" pos:column="16">-&gt;<pos:position pos:line="33" pos:column="21"/></operator><name pos:line="33" pos:column="18">key<pos:position pos:line="33" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="23"/></expr_stmt></block></else></if>
  }<pos:position pos:line="34" pos:column="4"/></block></for>

  <return pos:line="36" pos:column="3">return <expr><operator pos:line="36" pos:column="10">(<pos:position pos:line="36" pos:column="11"/></operator><literal type="number" pos:line="36" pos:column="11">0<pos:position pos:line="36" pos:column="12"/></literal><operator pos:line="36" pos:column="12">)<pos:position pos:line="36" pos:column="13"/></operator></expr>;<pos:position pos:line="36" pos:column="14"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

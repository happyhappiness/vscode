<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1375_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">derive_t<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">float_counter_get<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><specifier pos:line="1" pos:column="35">const<pos:position pos:line="1" pos:column="40"/></specifier> <name pos:line="1" pos:column="41">float_counter_t<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">fc<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="62">/* {{{ */</comment>
                                  <parameter><decl><type><name pos:line="2" pos:column="35">uint64_t<pos:position pos:line="2" pos:column="43"/></name></type> <name pos:line="2" pos:column="44">factor<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list> <block pos:line="2" pos:column="52">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">derive_t<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">ret<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>

  <expr_stmt><expr><name pos:line="5" pos:column="3">ret<pos:position pos:line="5" pos:column="6"/></name> <operator pos:line="5" pos:column="7">=<pos:position pos:line="5" pos:column="8"/></operator> <call pos:line="5" pos:column="9">(<name pos:line="5" pos:column="10">derive_t<pos:position pos:line="5" pos:column="18"/></name>)<argument_list pos:line="5" pos:column="19">(<argument><expr><name><name pos:line="5" pos:column="20">fc<pos:position pos:line="5" pos:column="22"/></name><operator pos:line="5" pos:column="22">-&gt;<pos:position pos:line="5" pos:column="27"/></operator><name pos:line="5" pos:column="24">i<pos:position pos:line="5" pos:column="25"/></name></name> <operator pos:line="5" pos:column="26">*<pos:position pos:line="5" pos:column="27"/></operator> <name pos:line="5" pos:column="28">factor<pos:position pos:line="5" pos:column="34"/></name></expr></argument>)<pos:position pos:line="5" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><name pos:line="6" pos:column="3">ret<pos:position pos:line="6" pos:column="6"/></name> <operator pos:line="6" pos:column="7">+=<pos:position pos:line="6" pos:column="9"/></operator> <call pos:line="6" pos:column="10">(<name pos:line="6" pos:column="11">derive_t<pos:position pos:line="6" pos:column="19"/></name>)<argument_list pos:line="6" pos:column="20">(<argument><expr><name><name pos:line="6" pos:column="21">fc<pos:position pos:line="6" pos:column="23"/></name><operator pos:line="6" pos:column="23">-&gt;<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="25">n<pos:position pos:line="6" pos:column="26"/></name></name> <operator pos:line="6" pos:column="27">/<pos:position pos:line="6" pos:column="28"/></operator> <operator pos:line="6" pos:column="29">(<pos:position pos:line="6" pos:column="30"/></operator><literal type="number" pos:line="6" pos:column="30">1000000000<pos:position pos:line="6" pos:column="40"/></literal> <operator pos:line="6" pos:column="41">/<pos:position pos:line="6" pos:column="42"/></operator> <name pos:line="6" pos:column="43">factor<pos:position pos:line="6" pos:column="49"/></name><operator pos:line="6" pos:column="49">)<pos:position pos:line="6" pos:column="50"/></operator></expr></argument>)<pos:position pos:line="6" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="52"/></expr_stmt>

  <return pos:line="8" pos:column="3">return <expr><operator pos:line="8" pos:column="10">(<pos:position pos:line="8" pos:column="11"/></operator><name pos:line="8" pos:column="11">ret<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">)<pos:position pos:line="8" pos:column="15"/></operator></expr>;<pos:position pos:line="8" pos:column="16"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

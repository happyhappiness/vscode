<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_828_collectd-4.8.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">gmond_init<pos:position pos:line="1" pos:column="22"/></name> <parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">void<pos:position pos:line="1" pos:column="28"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="29"/></parameter_list> <comment type="block" pos:line="1" pos:column="30">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <expr_stmt><expr><call><name pos:line="3" pos:column="3">create_sockets<pos:position pos:line="3" pos:column="17"/></name> <argument_list pos:line="3" pos:column="18">(<argument><expr><operator pos:line="3" pos:column="19">&amp;<pos:position pos:line="3" pos:column="24"/></operator><name pos:line="3" pos:column="20">mc_send_sockets<pos:position pos:line="3" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="3" pos:column="37">&amp;<pos:position pos:line="3" pos:column="42"/></operator><name pos:line="3" pos:column="38">mc_send_sockets_num<pos:position pos:line="3" pos:column="57"/></name></expr></argument>,
      <argument><expr><ternary><condition><expr><operator pos:line="4" pos:column="7">(<pos:position pos:line="4" pos:column="8"/></operator><name pos:line="4" pos:column="8">mc_receive_group<pos:position pos:line="4" pos:column="24"/></name> <operator pos:line="4" pos:column="25">!=<pos:position pos:line="4" pos:column="27"/></operator> <name pos:line="4" pos:column="28">NULL<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">)<pos:position pos:line="4" pos:column="33"/></operator></expr> ?<pos:position pos:line="4" pos:column="35"/></condition><then pos:line="4" pos:column="35"> <expr><name pos:line="4" pos:column="36">mc_receive_group<pos:position pos:line="4" pos:column="52"/></name></expr> <pos:position pos:line="4" pos:column="53"/></then><else pos:line="4" pos:column="53">: <expr><name pos:line="4" pos:column="55">MC_RECEIVE_GROUP_DEFAULT<pos:position pos:line="4" pos:column="79"/></name></expr></else></ternary></expr></argument>,
      <argument><expr><ternary><condition><expr><operator pos:line="5" pos:column="7">(<pos:position pos:line="5" pos:column="8"/></operator><name pos:line="5" pos:column="8">mc_receive_port<pos:position pos:line="5" pos:column="23"/></name> <operator pos:line="5" pos:column="24">!=<pos:position pos:line="5" pos:column="26"/></operator> <name pos:line="5" pos:column="27">NULL<pos:position pos:line="5" pos:column="31"/></name><operator pos:line="5" pos:column="31">)<pos:position pos:line="5" pos:column="32"/></operator></expr> ?<pos:position pos:line="5" pos:column="34"/></condition><then pos:line="5" pos:column="34"> <expr><name pos:line="5" pos:column="35">mc_receive_port<pos:position pos:line="5" pos:column="50"/></name></expr> <pos:position pos:line="5" pos:column="51"/></then><else pos:line="5" pos:column="51">: <expr><name pos:line="5" pos:column="53">MC_RECEIVE_PORT_DEFAULT<pos:position pos:line="5" pos:column="76"/></name></expr></else></ternary></expr></argument>,
      <comment type="block" pos:line="6" pos:column="7">/* listen = */</comment> <argument><expr><literal type="number" pos:line="6" pos:column="22">0<pos:position pos:line="6" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="25"/></expr_stmt>

  <expr_stmt><expr><name pos:line="8" pos:column="3">staging_tree<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <call><name pos:line="8" pos:column="18">c_avl_create<pos:position pos:line="8" pos:column="30"/></name> <argument_list pos:line="8" pos:column="31">(<argument><expr><operator pos:line="8" pos:column="32">(<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="33">void<pos:position pos:line="8" pos:column="37"/></name> <operator pos:line="8" pos:column="38">*<pos:position pos:line="8" pos:column="39"/></operator><operator pos:line="8" pos:column="39">)<pos:position pos:line="8" pos:column="40"/></operator> <name pos:line="8" pos:column="41">strcmp<pos:position pos:line="8" pos:column="47"/></name></expr></argument>)<pos:position pos:line="8" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="49"/></expr_stmt>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">staging_tree<pos:position pos:line="9" pos:column="19"/></name> <operator pos:line="9" pos:column="20">==<pos:position pos:line="9" pos:column="22"/></operator> <name pos:line="9" pos:column="23">NULL<pos:position pos:line="9" pos:column="27"/></name></expr>)<pos:position pos:line="9" pos:column="28"/></condition><then pos:line="9" pos:column="28">
  <block pos:line="10" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">ERROR<pos:position pos:line="11" pos:column="10"/></name> <argument_list pos:line="11" pos:column="11">(<argument><expr><literal type="string" pos:line="11" pos:column="12">"gmond plugin: c_avl_create failed."<pos:position pos:line="11" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="50"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">(<pos:position pos:line="12" pos:column="13"/></operator><operator pos:line="12" pos:column="13">-<pos:position pos:line="12" pos:column="14"/></operator><literal type="number" pos:line="12" pos:column="14">1<pos:position pos:line="12" pos:column="15"/></literal><operator pos:line="12" pos:column="15">)<pos:position pos:line="12" pos:column="16"/></operator></expr>;<pos:position pos:line="12" pos:column="17"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">mc_receive_thread_start<pos:position pos:line="15" pos:column="26"/></name> <argument_list pos:line="15" pos:column="27">()<pos:position pos:line="15" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="30"/></expr_stmt>

  <return pos:line="17" pos:column="3">return <expr><operator pos:line="17" pos:column="10">(<pos:position pos:line="17" pos:column="11"/></operator><literal type="number" pos:line="17" pos:column="11">0<pos:position pos:line="17" pos:column="12"/></literal><operator pos:line="17" pos:column="12">)<pos:position pos:line="17" pos:column="13"/></operator></expr>;<pos:position pos:line="17" pos:column="14"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

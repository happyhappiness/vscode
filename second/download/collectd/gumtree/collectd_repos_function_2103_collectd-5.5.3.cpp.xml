<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2103_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">nb_add_values<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier><modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">ret_buffer<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="46">/* {{{ */</comment>
    <parameter><decl><type><name pos:line="2" pos:column="5">size_t<pos:position pos:line="2" pos:column="11"/></name> <modifier pos:line="2" pos:column="12">*<pos:position pos:line="2" pos:column="13"/></modifier></type><name pos:line="2" pos:column="13">ret_buffer_len<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>,
    <parameter><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">lcc_value_list_t<pos:position pos:line="3" pos:column="27"/></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">vl<pos:position pos:line="3" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="32"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">packet_ptr<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">packet_len<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="8" pos:column="3">uint16_t<pos:position pos:line="8" pos:column="11"/></name></type>      <name pos:line="8" pos:column="17">pkg_type<pos:position pos:line="8" pos:column="25"/></name></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">uint16_t<pos:position pos:line="9" pos:column="11"/></name></type>      <name pos:line="9" pos:column="17">pkg_length<pos:position pos:line="9" pos:column="27"/></name></decl>;<pos:position pos:line="9" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">uint16_t<pos:position pos:line="10" pos:column="11"/></name></type>      <name pos:line="10" pos:column="17">pkg_num_values<pos:position pos:line="10" pos:column="31"/></name></decl>;<pos:position pos:line="10" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">uint8_t<pos:position pos:line="11" pos:column="10"/></name></type>       <name><name pos:line="11" pos:column="17">pkg_values_types<pos:position pos:line="11" pos:column="33"/></name><index pos:line="11" pos:column="33">[<expr><name><name pos:line="11" pos:column="34">vl<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">-&gt;<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="38">values_len<pos:position pos:line="11" pos:column="48"/></name></name></expr>]<pos:position pos:line="11" pos:column="49"/></index></name></decl>;<pos:position pos:line="11" pos:column="50"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">value_t<pos:position pos:line="12" pos:column="10"/></name></type>       <name><name pos:line="12" pos:column="17">pkg_values<pos:position pos:line="12" pos:column="27"/></name><index pos:line="12" pos:column="27">[<expr><name><name pos:line="12" pos:column="28">vl<pos:position pos:line="12" pos:column="30"/></name><operator pos:line="12" pos:column="30">-&gt;<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="32">values_len<pos:position pos:line="12" pos:column="42"/></name></name></expr>]<pos:position pos:line="12" pos:column="43"/></index></name></decl>;<pos:position pos:line="12" pos:column="44"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="14" pos:column="3">size_t<pos:position pos:line="14" pos:column="9"/></name></type> <name pos:line="14" pos:column="10">offset<pos:position pos:line="14" pos:column="16"/></name></decl>;<pos:position pos:line="14" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">size_t<pos:position pos:line="15" pos:column="9"/></name></type> <name pos:line="15" pos:column="10">i<pos:position pos:line="15" pos:column="11"/></name></decl>;<pos:position pos:line="15" pos:column="12"/></decl_stmt>

  <expr_stmt><expr><name pos:line="17" pos:column="3">packet_len<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator> <sizeof pos:line="17" pos:column="16">sizeof <argument_list pos:line="17" pos:column="23">(<argument><expr><name pos:line="17" pos:column="24">pkg_type<pos:position pos:line="17" pos:column="32"/></name></expr></argument>)<pos:position pos:line="17" pos:column="33"/></argument_list></sizeof> <operator pos:line="17" pos:column="34">+<pos:position pos:line="17" pos:column="35"/></operator> <sizeof pos:line="17" pos:column="36">sizeof <argument_list pos:line="17" pos:column="43">(<argument><expr><name pos:line="17" pos:column="44">pkg_length<pos:position pos:line="17" pos:column="54"/></name></expr></argument>)<pos:position pos:line="17" pos:column="55"/></argument_list></sizeof>
    <operator pos:line="18" pos:column="5">+<pos:position pos:line="18" pos:column="6"/></operator> <sizeof pos:line="18" pos:column="7">sizeof <argument_list pos:line="18" pos:column="14">(<argument><expr><name pos:line="18" pos:column="15">pkg_num_values<pos:position pos:line="18" pos:column="29"/></name></expr></argument>)<pos:position pos:line="18" pos:column="30"/></argument_list></sizeof>
    <operator pos:line="19" pos:column="5">+<pos:position pos:line="19" pos:column="6"/></operator> <sizeof pos:line="19" pos:column="7">sizeof <argument_list pos:line="19" pos:column="14">(<argument><expr><name pos:line="19" pos:column="15">pkg_values_types<pos:position pos:line="19" pos:column="31"/></name></expr></argument>)<pos:position pos:line="19" pos:column="32"/></argument_list></sizeof>
    <operator pos:line="20" pos:column="5">+<pos:position pos:line="20" pos:column="6"/></operator> <sizeof pos:line="20" pos:column="7">sizeof <argument_list pos:line="20" pos:column="14">(<argument><expr><name pos:line="20" pos:column="15">pkg_values<pos:position pos:line="20" pos:column="25"/></name></expr></argument>)<pos:position pos:line="20" pos:column="26"/></argument_list></sizeof></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt>

  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><operator pos:line="22" pos:column="7">*<pos:position pos:line="22" pos:column="8"/></operator><name pos:line="22" pos:column="8">ret_buffer_len<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">&lt;<pos:position pos:line="22" pos:column="27"/></operator> <name pos:line="22" pos:column="25">packet_len<pos:position pos:line="22" pos:column="35"/></name></expr>)<pos:position pos:line="22" pos:column="36"/></condition><then pos:line="22" pos:column="36">
    <block type="pseudo"><return pos:line="23" pos:column="5">return <expr><operator pos:line="23" pos:column="12">(<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="13">ENOMEM<pos:position pos:line="23" pos:column="19"/></name><operator pos:line="23" pos:column="19">)<pos:position pos:line="23" pos:column="20"/></operator></expr>;<pos:position pos:line="23" pos:column="21"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="25" pos:column="3">pkg_type<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <call><name pos:line="25" pos:column="14">htons<pos:position pos:line="25" pos:column="19"/></name> <argument_list pos:line="25" pos:column="20">(<argument><expr><name pos:line="25" pos:column="21">TYPE_VALUES<pos:position pos:line="25" pos:column="32"/></name></expr></argument>)<pos:position pos:line="25" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><name pos:line="26" pos:column="3">pkg_length<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">=<pos:position pos:line="26" pos:column="15"/></operator> <call><name pos:line="26" pos:column="16">htons<pos:position pos:line="26" pos:column="21"/></name> <argument_list pos:line="26" pos:column="22">(<argument><expr><operator pos:line="26" pos:column="23">(<pos:position pos:line="26" pos:column="24"/></operator><name pos:line="26" pos:column="24">uint16_t<pos:position pos:line="26" pos:column="32"/></name><operator pos:line="26" pos:column="32">)<pos:position pos:line="26" pos:column="33"/></operator> <name pos:line="26" pos:column="34">packet_len<pos:position pos:line="26" pos:column="44"/></name></expr></argument>)<pos:position pos:line="26" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><name pos:line="27" pos:column="3">pkg_num_values<pos:position pos:line="27" pos:column="17"/></name> <operator pos:line="27" pos:column="18">=<pos:position pos:line="27" pos:column="19"/></operator> <call><name pos:line="27" pos:column="20">htons<pos:position pos:line="27" pos:column="25"/></name> <argument_list pos:line="27" pos:column="26">(<argument><expr><operator pos:line="27" pos:column="27">(<pos:position pos:line="27" pos:column="28"/></operator><name pos:line="27" pos:column="28">uint16_t<pos:position pos:line="27" pos:column="36"/></name><operator pos:line="27" pos:column="36">)<pos:position pos:line="27" pos:column="37"/></operator> <name><name pos:line="27" pos:column="38">vl<pos:position pos:line="27" pos:column="40"/></name><operator pos:line="27" pos:column="40">-&gt;<pos:position pos:line="27" pos:column="45"/></operator><name pos:line="27" pos:column="42">values_len<pos:position pos:line="27" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="54"/></expr_stmt>

  <for pos:line="29" pos:column="3">for <control pos:line="29" pos:column="7">(<init><expr><name pos:line="29" pos:column="8">i<pos:position pos:line="29" pos:column="9"/></name> <operator pos:line="29" pos:column="10">=<pos:position pos:line="29" pos:column="11"/></operator> <literal type="number" pos:line="29" pos:column="12">0<pos:position pos:line="29" pos:column="13"/></literal></expr>;<pos:position pos:line="29" pos:column="14"/></init> <condition><expr><name pos:line="29" pos:column="15">i<pos:position pos:line="29" pos:column="16"/></name> <operator pos:line="29" pos:column="17">&lt;<pos:position pos:line="29" pos:column="21"/></operator> <name><name pos:line="29" pos:column="19">vl<pos:position pos:line="29" pos:column="21"/></name><operator pos:line="29" pos:column="21">-&gt;<pos:position pos:line="29" pos:column="26"/></operator><name pos:line="29" pos:column="23">values_len<pos:position pos:line="29" pos:column="33"/></name></name></expr>;<pos:position pos:line="29" pos:column="34"/></condition> <incr><expr><name pos:line="29" pos:column="35">i<pos:position pos:line="29" pos:column="36"/></name><operator pos:line="29" pos:column="36">++<pos:position pos:line="29" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="29" pos:column="39"/></control>
  <block pos:line="30" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">pkg_values_types<pos:position pos:line="31" pos:column="21"/></name><index pos:line="31" pos:column="21">[<expr><name pos:line="31" pos:column="22">i<pos:position pos:line="31" pos:column="23"/></name></expr>]<pos:position pos:line="31" pos:column="24"/></index></name> <operator pos:line="31" pos:column="25">=<pos:position pos:line="31" pos:column="26"/></operator> <operator pos:line="31" pos:column="27">(<pos:position pos:line="31" pos:column="28"/></operator><name pos:line="31" pos:column="28">uint8_t<pos:position pos:line="31" pos:column="35"/></name><operator pos:line="31" pos:column="35">)<pos:position pos:line="31" pos:column="36"/></operator> <name><name pos:line="31" pos:column="37">vl<pos:position pos:line="31" pos:column="39"/></name><operator pos:line="31" pos:column="39">-&gt;<pos:position pos:line="31" pos:column="44"/></operator><name pos:line="31" pos:column="41">values_types<pos:position pos:line="31" pos:column="53"/></name><index pos:line="31" pos:column="53">[<expr><name pos:line="31" pos:column="54">i<pos:position pos:line="31" pos:column="55"/></name></expr>]<pos:position pos:line="31" pos:column="56"/></index></name></expr>;<pos:position pos:line="31" pos:column="57"/></expr_stmt>
    <switch pos:line="32" pos:column="5">switch <condition pos:line="32" pos:column="12">(<expr><name><name pos:line="32" pos:column="13">vl<pos:position pos:line="32" pos:column="15"/></name><operator pos:line="32" pos:column="15">-&gt;<pos:position pos:line="32" pos:column="20"/></operator><name pos:line="32" pos:column="17">values_types<pos:position pos:line="32" pos:column="29"/></name><index pos:line="32" pos:column="29">[<expr><name pos:line="32" pos:column="30">i<pos:position pos:line="32" pos:column="31"/></name></expr>]<pos:position pos:line="32" pos:column="32"/></index></name></expr>)<pos:position pos:line="32" pos:column="33"/></condition>
    <block pos:line="33" pos:column="5">{
      <case pos:line="34" pos:column="7">case <expr><name pos:line="34" pos:column="12">LCC_TYPE_COUNTER<pos:position pos:line="34" pos:column="28"/></name></expr>:<pos:position pos:line="34" pos:column="29"/></case>
        <expr_stmt><expr><name><name pos:line="35" pos:column="9">pkg_values<pos:position pos:line="35" pos:column="19"/></name><index pos:line="35" pos:column="19">[<expr><name pos:line="35" pos:column="20">i<pos:position pos:line="35" pos:column="21"/></name></expr>]<pos:position pos:line="35" pos:column="22"/></index></name><operator pos:line="35" pos:column="22">.<pos:position pos:line="35" pos:column="23"/></operator><name pos:line="35" pos:column="23">counter<pos:position pos:line="35" pos:column="30"/></name> <operator pos:line="35" pos:column="31">=<pos:position pos:line="35" pos:column="32"/></operator> <operator pos:line="35" pos:column="33">(<pos:position pos:line="35" pos:column="34"/></operator><name pos:line="35" pos:column="34">counter_t<pos:position pos:line="35" pos:column="43"/></name><operator pos:line="35" pos:column="43">)<pos:position pos:line="35" pos:column="44"/></operator> <call><name pos:line="35" pos:column="45">htonll<pos:position pos:line="35" pos:column="51"/></name> <argument_list pos:line="35" pos:column="52">(<argument><expr><name><name pos:line="35" pos:column="53">vl<pos:position pos:line="35" pos:column="55"/></name><operator pos:line="35" pos:column="55">-&gt;<pos:position pos:line="35" pos:column="60"/></operator><name pos:line="35" pos:column="57">values<pos:position pos:line="35" pos:column="63"/></name><index pos:line="35" pos:column="63">[<expr><name pos:line="35" pos:column="64">i<pos:position pos:line="35" pos:column="65"/></name></expr>]<pos:position pos:line="35" pos:column="66"/></index></name><operator pos:line="35" pos:column="66">.<pos:position pos:line="35" pos:column="67"/></operator><name pos:line="35" pos:column="67">counter<pos:position pos:line="35" pos:column="74"/></name></expr></argument>)<pos:position pos:line="35" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="76"/></expr_stmt>
        <break pos:line="36" pos:column="9">break;<pos:position pos:line="36" pos:column="15"/></break>

      <case pos:line="38" pos:column="7">case <expr><name pos:line="38" pos:column="12">LCC_TYPE_GAUGE<pos:position pos:line="38" pos:column="26"/></name></expr>:<pos:position pos:line="38" pos:column="27"/></case>
        <expr_stmt><expr><name><name pos:line="39" pos:column="9">pkg_values<pos:position pos:line="39" pos:column="19"/></name><index pos:line="39" pos:column="19">[<expr><name pos:line="39" pos:column="20">i<pos:position pos:line="39" pos:column="21"/></name></expr>]<pos:position pos:line="39" pos:column="22"/></index></name><operator pos:line="39" pos:column="22">.<pos:position pos:line="39" pos:column="23"/></operator><name pos:line="39" pos:column="23">gauge<pos:position pos:line="39" pos:column="28"/></name> <operator pos:line="39" pos:column="29">=<pos:position pos:line="39" pos:column="30"/></operator> <operator pos:line="39" pos:column="31">(<pos:position pos:line="39" pos:column="32"/></operator><name pos:line="39" pos:column="32">gauge_t<pos:position pos:line="39" pos:column="39"/></name><operator pos:line="39" pos:column="39">)<pos:position pos:line="39" pos:column="40"/></operator> <call><name pos:line="39" pos:column="41">htond<pos:position pos:line="39" pos:column="46"/></name> <argument_list pos:line="39" pos:column="47">(<argument><expr><name><name pos:line="39" pos:column="48">vl<pos:position pos:line="39" pos:column="50"/></name><operator pos:line="39" pos:column="50">-&gt;<pos:position pos:line="39" pos:column="55"/></operator><name pos:line="39" pos:column="52">values<pos:position pos:line="39" pos:column="58"/></name><index pos:line="39" pos:column="58">[<expr><name pos:line="39" pos:column="59">i<pos:position pos:line="39" pos:column="60"/></name></expr>]<pos:position pos:line="39" pos:column="61"/></index></name><operator pos:line="39" pos:column="61">.<pos:position pos:line="39" pos:column="62"/></operator><name pos:line="39" pos:column="62">gauge<pos:position pos:line="39" pos:column="67"/></name></expr></argument>)<pos:position pos:line="39" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="69"/></expr_stmt>
        <break pos:line="40" pos:column="9">break;<pos:position pos:line="40" pos:column="15"/></break>

      <case pos:line="42" pos:column="7">case <expr><name pos:line="42" pos:column="12">LCC_TYPE_DERIVE<pos:position pos:line="42" pos:column="27"/></name></expr>:<pos:position pos:line="42" pos:column="28"/></case>
        <expr_stmt><expr><name><name pos:line="43" pos:column="9">pkg_values<pos:position pos:line="43" pos:column="19"/></name><index pos:line="43" pos:column="19">[<expr><name pos:line="43" pos:column="20">i<pos:position pos:line="43" pos:column="21"/></name></expr>]<pos:position pos:line="43" pos:column="22"/></index></name><operator pos:line="43" pos:column="22">.<pos:position pos:line="43" pos:column="23"/></operator><name pos:line="43" pos:column="23">derive<pos:position pos:line="43" pos:column="29"/></name> <operator pos:line="43" pos:column="30">=<pos:position pos:line="43" pos:column="31"/></operator> <operator pos:line="43" pos:column="32">(<pos:position pos:line="43" pos:column="33"/></operator><name pos:line="43" pos:column="33">derive_t<pos:position pos:line="43" pos:column="41"/></name><operator pos:line="43" pos:column="41">)<pos:position pos:line="43" pos:column="42"/></operator> <call><name pos:line="43" pos:column="43">htonll<pos:position pos:line="43" pos:column="49"/></name> <argument_list pos:line="43" pos:column="50">(<argument><expr><name><name pos:line="43" pos:column="51">vl<pos:position pos:line="43" pos:column="53"/></name><operator pos:line="43" pos:column="53">-&gt;<pos:position pos:line="43" pos:column="58"/></operator><name pos:line="43" pos:column="55">values<pos:position pos:line="43" pos:column="61"/></name><index pos:line="43" pos:column="61">[<expr><name pos:line="43" pos:column="62">i<pos:position pos:line="43" pos:column="63"/></name></expr>]<pos:position pos:line="43" pos:column="64"/></index></name><operator pos:line="43" pos:column="64">.<pos:position pos:line="43" pos:column="65"/></operator><name pos:line="43" pos:column="65">derive<pos:position pos:line="43" pos:column="71"/></name></expr></argument>)<pos:position pos:line="43" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="73"/></expr_stmt>
        <break pos:line="44" pos:column="9">break;<pos:position pos:line="44" pos:column="15"/></break>

      <case pos:line="46" pos:column="7">case <expr><name pos:line="46" pos:column="12">LCC_TYPE_ABSOLUTE<pos:position pos:line="46" pos:column="29"/></name></expr>:<pos:position pos:line="46" pos:column="30"/></case>
        <expr_stmt><expr><name><name pos:line="47" pos:column="9">pkg_values<pos:position pos:line="47" pos:column="19"/></name><index pos:line="47" pos:column="19">[<expr><name pos:line="47" pos:column="20">i<pos:position pos:line="47" pos:column="21"/></name></expr>]<pos:position pos:line="47" pos:column="22"/></index></name><operator pos:line="47" pos:column="22">.<pos:position pos:line="47" pos:column="23"/></operator><name pos:line="47" pos:column="23">absolute<pos:position pos:line="47" pos:column="31"/></name> <operator pos:line="47" pos:column="32">=<pos:position pos:line="47" pos:column="33"/></operator> <operator pos:line="47" pos:column="34">(<pos:position pos:line="47" pos:column="35"/></operator><name pos:line="47" pos:column="35">absolute_t<pos:position pos:line="47" pos:column="45"/></name><operator pos:line="47" pos:column="45">)<pos:position pos:line="47" pos:column="46"/></operator> <call><name pos:line="47" pos:column="47">htonll<pos:position pos:line="47" pos:column="53"/></name> <argument_list pos:line="47" pos:column="54">(<argument><expr><name><name pos:line="47" pos:column="55">vl<pos:position pos:line="47" pos:column="57"/></name><operator pos:line="47" pos:column="57">-&gt;<pos:position pos:line="47" pos:column="62"/></operator><name pos:line="47" pos:column="59">values<pos:position pos:line="47" pos:column="65"/></name><index pos:line="47" pos:column="65">[<expr><name pos:line="47" pos:column="66">i<pos:position pos:line="47" pos:column="67"/></name></expr>]<pos:position pos:line="47" pos:column="68"/></index></name><operator pos:line="47" pos:column="68">.<pos:position pos:line="47" pos:column="69"/></operator><name pos:line="47" pos:column="69">absolute<pos:position pos:line="47" pos:column="77"/></name></expr></argument>)<pos:position pos:line="47" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="79"/></expr_stmt>
        <break pos:line="48" pos:column="9">break;<pos:position pos:line="48" pos:column="15"/></break>

      <default pos:line="50" pos:column="7">default:<pos:position pos:line="50" pos:column="15"/></default>
        <return pos:line="51" pos:column="9">return <expr><operator pos:line="51" pos:column="16">(<pos:position pos:line="51" pos:column="17"/></operator><name pos:line="51" pos:column="17">EINVAL<pos:position pos:line="51" pos:column="23"/></name><operator pos:line="51" pos:column="23">)<pos:position pos:line="51" pos:column="24"/></operator></expr>;<pos:position pos:line="51" pos:column="25"/></return>
    }<pos:position pos:line="52" pos:column="6"/></block></switch> <comment type="block" pos:line="52" pos:column="7">/* switch (vl-&gt;values_types[i]) */</comment>
  }<pos:position pos:line="53" pos:column="4"/></block></for> <comment type="block" pos:line="53" pos:column="5">/* for (vl-&gt;values_len) */</comment>

  <comment type="block" pos:line="55" pos:column="3">/*
   * Use `memcpy' to write everything to the buffer, because the pointer
   * may be unaligned and some architectures, such as SPARC, can't handle
   * that.
   */</comment>
  <expr_stmt><expr><name pos:line="60" pos:column="3">packet_ptr<pos:position pos:line="60" pos:column="13"/></name> <operator pos:line="60" pos:column="14">=<pos:position pos:line="60" pos:column="15"/></operator> <operator pos:line="60" pos:column="16">*<pos:position pos:line="60" pos:column="17"/></operator><name pos:line="60" pos:column="17">ret_buffer<pos:position pos:line="60" pos:column="27"/></name></expr>;<pos:position pos:line="60" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name pos:line="61" pos:column="3">offset<pos:position pos:line="61" pos:column="9"/></name> <operator pos:line="61" pos:column="10">=<pos:position pos:line="61" pos:column="11"/></operator> <literal type="number" pos:line="61" pos:column="12">0<pos:position pos:line="61" pos:column="13"/></literal></expr>;<pos:position pos:line="61" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="62" pos:column="3">memcpy<pos:position pos:line="62" pos:column="9"/></name> <argument_list pos:line="62" pos:column="10">(<argument><expr><name pos:line="62" pos:column="11">packet_ptr<pos:position pos:line="62" pos:column="21"/></name> <operator pos:line="62" pos:column="22">+<pos:position pos:line="62" pos:column="23"/></operator> <name pos:line="62" pos:column="24">offset<pos:position pos:line="62" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="32">&amp;<pos:position pos:line="62" pos:column="37"/></operator><name pos:line="62" pos:column="33">pkg_type<pos:position pos:line="62" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="62" pos:column="43">sizeof <argument_list pos:line="62" pos:column="50">(<argument><expr><name pos:line="62" pos:column="51">pkg_type<pos:position pos:line="62" pos:column="59"/></name></expr></argument>)<pos:position pos:line="62" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="62" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="62"/></expr_stmt>
  <expr_stmt><expr><name pos:line="63" pos:column="3">offset<pos:position pos:line="63" pos:column="9"/></name> <operator pos:line="63" pos:column="10">+=<pos:position pos:line="63" pos:column="12"/></operator> <sizeof pos:line="63" pos:column="13">sizeof <argument_list pos:line="63" pos:column="20">(<argument><expr><name pos:line="63" pos:column="21">pkg_type<pos:position pos:line="63" pos:column="29"/></name></expr></argument>)<pos:position pos:line="63" pos:column="30"/></argument_list></sizeof></expr>;<pos:position pos:line="63" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="64" pos:column="3">memcpy<pos:position pos:line="64" pos:column="9"/></name> <argument_list pos:line="64" pos:column="10">(<argument><expr><name pos:line="64" pos:column="11">packet_ptr<pos:position pos:line="64" pos:column="21"/></name> <operator pos:line="64" pos:column="22">+<pos:position pos:line="64" pos:column="23"/></operator> <name pos:line="64" pos:column="24">offset<pos:position pos:line="64" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="32">&amp;<pos:position pos:line="64" pos:column="37"/></operator><name pos:line="64" pos:column="33">pkg_length<pos:position pos:line="64" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="64" pos:column="45">sizeof <argument_list pos:line="64" pos:column="52">(<argument><expr><name pos:line="64" pos:column="53">pkg_length<pos:position pos:line="64" pos:column="63"/></name></expr></argument>)<pos:position pos:line="64" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="64" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="66"/></expr_stmt>
  <expr_stmt><expr><name pos:line="65" pos:column="3">offset<pos:position pos:line="65" pos:column="9"/></name> <operator pos:line="65" pos:column="10">+=<pos:position pos:line="65" pos:column="12"/></operator> <sizeof pos:line="65" pos:column="13">sizeof <argument_list pos:line="65" pos:column="20">(<argument><expr><name pos:line="65" pos:column="21">pkg_length<pos:position pos:line="65" pos:column="31"/></name></expr></argument>)<pos:position pos:line="65" pos:column="32"/></argument_list></sizeof></expr>;<pos:position pos:line="65" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="66" pos:column="3">memcpy<pos:position pos:line="66" pos:column="9"/></name> <argument_list pos:line="66" pos:column="10">(<argument><expr><name pos:line="66" pos:column="11">packet_ptr<pos:position pos:line="66" pos:column="21"/></name> <operator pos:line="66" pos:column="22">+<pos:position pos:line="66" pos:column="23"/></operator> <name pos:line="66" pos:column="24">offset<pos:position pos:line="66" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="66" pos:column="32">&amp;<pos:position pos:line="66" pos:column="37"/></operator><name pos:line="66" pos:column="33">pkg_num_values<pos:position pos:line="66" pos:column="47"/></name></expr></argument>, <argument><expr><sizeof pos:line="66" pos:column="49">sizeof <argument_list pos:line="66" pos:column="56">(<argument><expr><name pos:line="66" pos:column="57">pkg_num_values<pos:position pos:line="66" pos:column="71"/></name></expr></argument>)<pos:position pos:line="66" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="66" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="74"/></expr_stmt>
  <expr_stmt><expr><name pos:line="67" pos:column="3">offset<pos:position pos:line="67" pos:column="9"/></name> <operator pos:line="67" pos:column="10">+=<pos:position pos:line="67" pos:column="12"/></operator> <sizeof pos:line="67" pos:column="13">sizeof <argument_list pos:line="67" pos:column="20">(<argument><expr><name pos:line="67" pos:column="21">pkg_num_values<pos:position pos:line="67" pos:column="35"/></name></expr></argument>)<pos:position pos:line="67" pos:column="36"/></argument_list></sizeof></expr>;<pos:position pos:line="67" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="68" pos:column="3">memcpy<pos:position pos:line="68" pos:column="9"/></name> <argument_list pos:line="68" pos:column="10">(<argument><expr><name pos:line="68" pos:column="11">packet_ptr<pos:position pos:line="68" pos:column="21"/></name> <operator pos:line="68" pos:column="22">+<pos:position pos:line="68" pos:column="23"/></operator> <name pos:line="68" pos:column="24">offset<pos:position pos:line="68" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="32">pkg_values_types<pos:position pos:line="68" pos:column="48"/></name></expr></argument>, <argument><expr><sizeof pos:line="68" pos:column="50">sizeof <argument_list pos:line="68" pos:column="57">(<argument><expr><name pos:line="68" pos:column="58">pkg_values_types<pos:position pos:line="68" pos:column="74"/></name></expr></argument>)<pos:position pos:line="68" pos:column="75"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="68" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="77"/></expr_stmt>
  <expr_stmt><expr><name pos:line="69" pos:column="3">offset<pos:position pos:line="69" pos:column="9"/></name> <operator pos:line="69" pos:column="10">+=<pos:position pos:line="69" pos:column="12"/></operator> <sizeof pos:line="69" pos:column="13">sizeof <argument_list pos:line="69" pos:column="20">(<argument><expr><name pos:line="69" pos:column="21">pkg_values_types<pos:position pos:line="69" pos:column="37"/></name></expr></argument>)<pos:position pos:line="69" pos:column="38"/></argument_list></sizeof></expr>;<pos:position pos:line="69" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="70" pos:column="3">memcpy<pos:position pos:line="70" pos:column="9"/></name> <argument_list pos:line="70" pos:column="10">(<argument><expr><name pos:line="70" pos:column="11">packet_ptr<pos:position pos:line="70" pos:column="21"/></name> <operator pos:line="70" pos:column="22">+<pos:position pos:line="70" pos:column="23"/></operator> <name pos:line="70" pos:column="24">offset<pos:position pos:line="70" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="32">pkg_values<pos:position pos:line="70" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="70" pos:column="44">sizeof <argument_list pos:line="70" pos:column="51">(<argument><expr><name pos:line="70" pos:column="52">pkg_values<pos:position pos:line="70" pos:column="62"/></name></expr></argument>)<pos:position pos:line="70" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="70" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="65"/></expr_stmt>
  <expr_stmt><expr><name pos:line="71" pos:column="3">offset<pos:position pos:line="71" pos:column="9"/></name> <operator pos:line="71" pos:column="10">+=<pos:position pos:line="71" pos:column="12"/></operator> <sizeof pos:line="71" pos:column="13">sizeof <argument_list pos:line="71" pos:column="20">(<argument><expr><name pos:line="71" pos:column="21">pkg_values<pos:position pos:line="71" pos:column="31"/></name></expr></argument>)<pos:position pos:line="71" pos:column="32"/></argument_list></sizeof></expr>;<pos:position pos:line="71" pos:column="33"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="73" pos:column="3">assert<pos:position pos:line="73" pos:column="9"/></name> <argument_list pos:line="73" pos:column="10">(<argument><expr><name pos:line="73" pos:column="11">offset<pos:position pos:line="73" pos:column="17"/></name> <operator pos:line="73" pos:column="18">==<pos:position pos:line="73" pos:column="20"/></operator> <name pos:line="73" pos:column="21">packet_len<pos:position pos:line="73" pos:column="31"/></name></expr></argument>)<pos:position pos:line="73" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="33"/></expr_stmt>

  <expr_stmt><expr><operator pos:line="75" pos:column="3">*<pos:position pos:line="75" pos:column="4"/></operator><name pos:line="75" pos:column="4">ret_buffer<pos:position pos:line="75" pos:column="14"/></name> <operator pos:line="75" pos:column="15">=<pos:position pos:line="75" pos:column="16"/></operator> <name pos:line="75" pos:column="17">packet_ptr<pos:position pos:line="75" pos:column="27"/></name> <operator pos:line="75" pos:column="28">+<pos:position pos:line="75" pos:column="29"/></operator> <name pos:line="75" pos:column="30">packet_len<pos:position pos:line="75" pos:column="40"/></name></expr>;<pos:position pos:line="75" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="76" pos:column="3">*<pos:position pos:line="76" pos:column="4"/></operator><name pos:line="76" pos:column="4">ret_buffer_len<pos:position pos:line="76" pos:column="18"/></name> <operator pos:line="76" pos:column="19">-=<pos:position pos:line="76" pos:column="21"/></operator> <name pos:line="76" pos:column="22">packet_len<pos:position pos:line="76" pos:column="32"/></name></expr>;<pos:position pos:line="76" pos:column="33"/></expr_stmt>
  <return pos:line="77" pos:column="3">return <expr><operator pos:line="77" pos:column="10">(<pos:position pos:line="77" pos:column="11"/></operator><literal type="number" pos:line="77" pos:column="11">0<pos:position pos:line="77" pos:column="12"/></literal><operator pos:line="77" pos:column="12">)<pos:position pos:line="77" pos:column="13"/></operator></expr>;<pos:position pos:line="77" pos:column="14"/></return>
}<pos:position pos:line="78" pos:column="2"/></block></function></unit>

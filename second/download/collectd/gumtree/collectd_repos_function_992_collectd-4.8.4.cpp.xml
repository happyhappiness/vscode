<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_992_collectd-4.8.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">format_json_finalize<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">buffer<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="41">/* {{{ */</comment>
    <parameter><decl><type><name pos:line="2" pos:column="5">size_t<pos:position pos:line="2" pos:column="11"/></name> <modifier pos:line="2" pos:column="12">*<pos:position pos:line="2" pos:column="13"/></modifier></type><name pos:line="2" pos:column="13">ret_buffer_fill<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="30">size_t<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">ret_buffer_free<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">pos<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><operator pos:line="6" pos:column="7">(<pos:position pos:line="6" pos:column="8"/></operator><name pos:line="6" pos:column="8">buffer<pos:position pos:line="6" pos:column="14"/></name> <operator pos:line="6" pos:column="15">==<pos:position pos:line="6" pos:column="17"/></operator> <name pos:line="6" pos:column="18">NULL<pos:position pos:line="6" pos:column="22"/></name><operator pos:line="6" pos:column="22">)<pos:position pos:line="6" pos:column="23"/></operator> <operator pos:line="6" pos:column="24">||<pos:position pos:line="6" pos:column="26"/></operator> <operator pos:line="6" pos:column="27">(<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="28">ret_buffer_fill<pos:position pos:line="6" pos:column="43"/></name> <operator pos:line="6" pos:column="44">==<pos:position pos:line="6" pos:column="46"/></operator> <name pos:line="6" pos:column="47">NULL<pos:position pos:line="6" pos:column="51"/></name><operator pos:line="6" pos:column="51">)<pos:position pos:line="6" pos:column="52"/></operator> <operator pos:line="6" pos:column="53">||<pos:position pos:line="6" pos:column="55"/></operator> <operator pos:line="6" pos:column="56">(<pos:position pos:line="6" pos:column="57"/></operator><name pos:line="6" pos:column="57">ret_buffer_free<pos:position pos:line="6" pos:column="72"/></name> <operator pos:line="6" pos:column="73">==<pos:position pos:line="6" pos:column="75"/></operator> <name pos:line="6" pos:column="76">NULL<pos:position pos:line="6" pos:column="80"/></name><operator pos:line="6" pos:column="80">)<pos:position pos:line="6" pos:column="81"/></operator></expr>)<pos:position pos:line="6" pos:column="82"/></condition><then pos:line="6" pos:column="82">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><operator pos:line="7" pos:column="12">(<pos:position pos:line="7" pos:column="13"/></operator><operator pos:line="7" pos:column="13">-<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">EINVAL<pos:position pos:line="7" pos:column="20"/></name><operator pos:line="7" pos:column="20">)<pos:position pos:line="7" pos:column="21"/></operator></expr>;<pos:position pos:line="7" pos:column="22"/></return></block></then></if>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">*<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">ret_buffer_free<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">&lt;<pos:position pos:line="9" pos:column="28"/></operator> <literal type="number" pos:line="9" pos:column="26">2<pos:position pos:line="9" pos:column="27"/></literal></expr>)<pos:position pos:line="9" pos:column="28"/></condition><then pos:line="9" pos:column="28">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">(<pos:position pos:line="10" pos:column="13"/></operator><operator pos:line="10" pos:column="13">-<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">ENOMEM<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">)<pos:position pos:line="10" pos:column="21"/></operator></expr>;<pos:position pos:line="10" pos:column="22"/></return></block></then></if>

  <comment type="block" pos:line="12" pos:column="3">/* Replace the leading comma added in `value_list_to_json' with a square
   * bracket. */</comment>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name><name pos:line="14" pos:column="7">buffer<pos:position pos:line="14" pos:column="13"/></name><index pos:line="14" pos:column="13">[<expr><literal type="number" pos:line="14" pos:column="14">0<pos:position pos:line="14" pos:column="15"/></literal></expr>]<pos:position pos:line="14" pos:column="16"/></index></name> <operator pos:line="14" pos:column="17">!=<pos:position pos:line="14" pos:column="19"/></operator> <literal type="char" pos:line="14" pos:column="20">','<pos:position pos:line="14" pos:column="23"/></literal></expr>)<pos:position pos:line="14" pos:column="24"/></condition><then pos:line="14" pos:column="24">
    <block type="pseudo"><return pos:line="15" pos:column="5">return <expr><operator pos:line="15" pos:column="12">(<pos:position pos:line="15" pos:column="13"/></operator><operator pos:line="15" pos:column="13">-<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">EINVAL<pos:position pos:line="15" pos:column="20"/></name><operator pos:line="15" pos:column="20">)<pos:position pos:line="15" pos:column="21"/></operator></expr>;<pos:position pos:line="15" pos:column="22"/></return></block></then></if>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">buffer<pos:position pos:line="16" pos:column="9"/></name><index pos:line="16" pos:column="9">[<expr><literal type="number" pos:line="16" pos:column="10">0<pos:position pos:line="16" pos:column="11"/></literal></expr>]<pos:position pos:line="16" pos:column="12"/></index></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <literal type="char" pos:line="16" pos:column="15">'['<pos:position pos:line="16" pos:column="18"/></literal></expr>;<pos:position pos:line="16" pos:column="19"/></expr_stmt>

  <expr_stmt><expr><name pos:line="18" pos:column="3">pos<pos:position pos:line="18" pos:column="6"/></name> <operator pos:line="18" pos:column="7">=<pos:position pos:line="18" pos:column="8"/></operator> <operator pos:line="18" pos:column="9">*<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">ret_buffer_fill<pos:position pos:line="18" pos:column="25"/></name></expr>;<pos:position pos:line="18" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="19" pos:column="3">buffer<pos:position pos:line="19" pos:column="9"/></name><index pos:line="19" pos:column="9">[<expr><name pos:line="19" pos:column="10">pos<pos:position pos:line="19" pos:column="13"/></name></expr>]<pos:position pos:line="19" pos:column="14"/></index></name> <operator pos:line="19" pos:column="15">=<pos:position pos:line="19" pos:column="16"/></operator> <literal type="char" pos:line="19" pos:column="17">']'<pos:position pos:line="19" pos:column="20"/></literal></expr>;<pos:position pos:line="19" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="20" pos:column="3">buffer<pos:position pos:line="20" pos:column="9"/></name><index pos:line="20" pos:column="9">[<expr><name pos:line="20" pos:column="10">pos<pos:position pos:line="20" pos:column="13"/></name><operator pos:line="20" pos:column="13">+<pos:position pos:line="20" pos:column="14"/></operator><literal type="number" pos:line="20" pos:column="14">1<pos:position pos:line="20" pos:column="15"/></literal></expr>]<pos:position pos:line="20" pos:column="16"/></index></name> <operator pos:line="20" pos:column="17">=<pos:position pos:line="20" pos:column="18"/></operator> <literal type="number" pos:line="20" pos:column="19">0<pos:position pos:line="20" pos:column="20"/></literal></expr>;<pos:position pos:line="20" pos:column="21"/></expr_stmt>

  <expr_stmt><expr><operator pos:line="22" pos:column="3">(<pos:position pos:line="22" pos:column="4"/></operator><operator pos:line="22" pos:column="4">*<pos:position pos:line="22" pos:column="5"/></operator><name pos:line="22" pos:column="5">ret_buffer_fill<pos:position pos:line="22" pos:column="20"/></name><operator pos:line="22" pos:column="20">)<pos:position pos:line="22" pos:column="21"/></operator><operator pos:line="22" pos:column="21">++<pos:position pos:line="22" pos:column="23"/></operator></expr>;<pos:position pos:line="22" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="23" pos:column="3">(<pos:position pos:line="23" pos:column="4"/></operator><operator pos:line="23" pos:column="4">*<pos:position pos:line="23" pos:column="5"/></operator><name pos:line="23" pos:column="5">ret_buffer_free<pos:position pos:line="23" pos:column="20"/></name><operator pos:line="23" pos:column="20">)<pos:position pos:line="23" pos:column="21"/></operator><operator pos:line="23" pos:column="21">--<pos:position pos:line="23" pos:column="23"/></operator></expr>;<pos:position pos:line="23" pos:column="24"/></expr_stmt>

  <return pos:line="25" pos:column="3">return <expr><operator pos:line="25" pos:column="10">(<pos:position pos:line="25" pos:column="11"/></operator><literal type="number" pos:line="25" pos:column="11">0<pos:position pos:line="25" pos:column="12"/></literal><operator pos:line="25" pos:column="12">)<pos:position pos:line="25" pos:column="13"/></operator></expr>;<pos:position pos:line="25" pos:column="14"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

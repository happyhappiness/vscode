<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1006_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">hv2data_source<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">pTHX_<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">HV<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">hash<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">data_source_t<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">ds<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list> <block pos:line="1" pos:column="62">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">SV<pos:position pos:line="2" pos:column="5"/></name> <modifier pos:line="2" pos:column="6">*<pos:position pos:line="2" pos:column="7"/></modifier><modifier pos:line="2" pos:column="7">*<pos:position pos:line="2" pos:column="8"/></modifier></type><name pos:line="2" pos:column="8">tmp<pos:position pos:line="2" pos:column="11"/></name> <init pos:line="2" pos:column="12">= <expr><name pos:line="2" pos:column="14">NULL<pos:position pos:line="2" pos:column="18"/></name></expr></init></decl>;<pos:position pos:line="2" pos:column="19"/></decl_stmt>

  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><operator pos:line="4" pos:column="7">(<pos:position pos:line="4" pos:column="8"/></operator><name pos:line="4" pos:column="8">NULL<pos:position pos:line="4" pos:column="12"/></name> <operator pos:line="4" pos:column="13">==<pos:position pos:line="4" pos:column="15"/></operator> <name pos:line="4" pos:column="16">hash<pos:position pos:line="4" pos:column="20"/></name><operator pos:line="4" pos:column="20">)<pos:position pos:line="4" pos:column="21"/></operator> <operator pos:line="4" pos:column="22">||<pos:position pos:line="4" pos:column="24"/></operator> <operator pos:line="4" pos:column="25">(<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="26">NULL<pos:position pos:line="4" pos:column="30"/></name> <operator pos:line="4" pos:column="31">==<pos:position pos:line="4" pos:column="33"/></operator> <name pos:line="4" pos:column="34">ds<pos:position pos:line="4" pos:column="36"/></name><operator pos:line="4" pos:column="36">)<pos:position pos:line="4" pos:column="37"/></operator></expr>)<pos:position pos:line="4" pos:column="38"/></condition><then pos:line="4" pos:column="38">
    <block type="pseudo"><return pos:line="5" pos:column="5">return <expr><operator pos:line="5" pos:column="12">-<pos:position pos:line="5" pos:column="13"/></operator><literal type="number" pos:line="5" pos:column="13">1<pos:position pos:line="5" pos:column="14"/></literal></expr>;<pos:position pos:line="5" pos:column="15"/></return></block></then></if>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">NULL<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">!=<pos:position pos:line="7" pos:column="14"/></operator> <operator pos:line="7" pos:column="15">(<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="16">tmp<pos:position pos:line="7" pos:column="19"/></name> <operator pos:line="7" pos:column="20">=<pos:position pos:line="7" pos:column="21"/></operator> <call><name pos:line="7" pos:column="22">hv_fetch<pos:position pos:line="7" pos:column="30"/></name><argument_list pos:line="7" pos:column="30">(<argument><expr><name pos:line="7" pos:column="31">hash<pos:position pos:line="7" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="37">"name"<pos:position pos:line="7" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="45">4<pos:position pos:line="7" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="48">0<pos:position pos:line="7" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="50"/></argument_list></call><operator pos:line="7" pos:column="50">)<pos:position pos:line="7" pos:column="51"/></operator></expr>)<pos:position pos:line="7" pos:column="52"/></condition><then pos:line="7" pos:column="52"> <block pos:line="7" pos:column="53">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">sstrncpy<pos:position pos:line="8" pos:column="13"/></name><argument_list pos:line="8" pos:column="13">(<argument><expr><name><name pos:line="8" pos:column="14">ds<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">-&gt;<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="18">name<pos:position pos:line="8" pos:column="22"/></name></name></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="24">SvPV_nolen<pos:position pos:line="8" pos:column="34"/></name><argument_list pos:line="8" pos:column="34">(<argument><expr><operator pos:line="8" pos:column="35">*<pos:position pos:line="8" pos:column="36"/></operator><name pos:line="8" pos:column="36">tmp<pos:position pos:line="8" pos:column="39"/></name></expr></argument>)<pos:position pos:line="8" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="42">sizeof<argument_list pos:line="8" pos:column="48">(<argument><expr><name><name pos:line="8" pos:column="49">ds<pos:position pos:line="8" pos:column="51"/></name><operator pos:line="8" pos:column="51">-&gt;<pos:position pos:line="8" pos:column="56"/></operator><name pos:line="8" pos:column="53">name<pos:position pos:line="8" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="60"/></expr_stmt>
  }<pos:position pos:line="9" pos:column="4"/></block></then> <else pos:line="9" pos:column="5">else <block pos:line="9" pos:column="10">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">log_err<pos:position pos:line="10" pos:column="12"/></name><argument_list pos:line="10" pos:column="12">(<argument><expr><literal type="string" pos:line="10" pos:column="13">"hv2data_source: No DS name given."<pos:position pos:line="10" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="50"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">-<pos:position pos:line="11" pos:column="13"/></operator><literal type="number" pos:line="11" pos:column="13">1<pos:position pos:line="11" pos:column="14"/></literal></expr>;<pos:position pos:line="11" pos:column="15"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></else></if>

  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">NULL<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">!=<pos:position pos:line="14" pos:column="14"/></operator> <operator pos:line="14" pos:column="15">(<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="16">tmp<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">=<pos:position pos:line="14" pos:column="21"/></operator> <call><name pos:line="14" pos:column="22">hv_fetch<pos:position pos:line="14" pos:column="30"/></name><argument_list pos:line="14" pos:column="30">(<argument><expr><name pos:line="14" pos:column="31">hash<pos:position pos:line="14" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="37">"type"<pos:position pos:line="14" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="45">4<pos:position pos:line="14" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="48">0<pos:position pos:line="14" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="50"/></argument_list></call><operator pos:line="14" pos:column="50">)<pos:position pos:line="14" pos:column="51"/></operator></expr>)<pos:position pos:line="14" pos:column="52"/></condition><then pos:line="14" pos:column="52"> <block pos:line="14" pos:column="53">{
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">ds<pos:position pos:line="15" pos:column="7"/></name><operator pos:line="15" pos:column="7">-&gt;<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="9">type<pos:position pos:line="15" pos:column="13"/></name></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <call><name pos:line="15" pos:column="16">SvIV<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><operator pos:line="15" pos:column="21">*<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="22">tmp<pos:position pos:line="15" pos:column="25"/></name></expr></argument>)<pos:position pos:line="15" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="27"/></expr_stmt>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><operator pos:line="17" pos:column="9">(<pos:position pos:line="17" pos:column="10"/></operator><name pos:line="17" pos:column="10">DS_TYPE_COUNTER<pos:position pos:line="17" pos:column="25"/></name> <operator pos:line="17" pos:column="26">!=<pos:position pos:line="17" pos:column="28"/></operator> <name><name pos:line="17" pos:column="29">ds<pos:position pos:line="17" pos:column="31"/></name><operator pos:line="17" pos:column="31">-&gt;<pos:position pos:line="17" pos:column="36"/></operator><name pos:line="17" pos:column="33">type<pos:position pos:line="17" pos:column="37"/></name></name><operator pos:line="17" pos:column="37">)<pos:position pos:line="17" pos:column="38"/></operator> <operator pos:line="17" pos:column="39">&amp;&amp;<pos:position pos:line="17" pos:column="49"/></operator> <operator pos:line="17" pos:column="42">(<pos:position pos:line="17" pos:column="43"/></operator><name pos:line="17" pos:column="43">DS_TYPE_GAUGE<pos:position pos:line="17" pos:column="56"/></name> <operator pos:line="17" pos:column="57">!=<pos:position pos:line="17" pos:column="59"/></operator> <name><name pos:line="17" pos:column="60">ds<pos:position pos:line="17" pos:column="62"/></name><operator pos:line="17" pos:column="62">-&gt;<pos:position pos:line="17" pos:column="67"/></operator><name pos:line="17" pos:column="64">type<pos:position pos:line="17" pos:column="68"/></name></name><operator pos:line="17" pos:column="68">)<pos:position pos:line="17" pos:column="69"/></operator> <operator pos:line="17" pos:column="70">&amp;&amp;<pos:position pos:line="17" pos:column="80"/></operator>
        <operator pos:line="18" pos:column="9">(<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">DS_TYPE_DERIVE<pos:position pos:line="18" pos:column="24"/></name> <operator pos:line="18" pos:column="25">!=<pos:position pos:line="18" pos:column="27"/></operator> <name><name pos:line="18" pos:column="28">ds<pos:position pos:line="18" pos:column="30"/></name><operator pos:line="18" pos:column="30">-&gt;<pos:position pos:line="18" pos:column="35"/></operator><name pos:line="18" pos:column="32">type<pos:position pos:line="18" pos:column="36"/></name></name><operator pos:line="18" pos:column="36">)<pos:position pos:line="18" pos:column="37"/></operator> <operator pos:line="18" pos:column="38">&amp;&amp;<pos:position pos:line="18" pos:column="48"/></operator> <operator pos:line="18" pos:column="41">(<pos:position pos:line="18" pos:column="42"/></operator><name pos:line="18" pos:column="42">DS_TYPE_ABSOLUTE<pos:position pos:line="18" pos:column="58"/></name> <operator pos:line="18" pos:column="59">!=<pos:position pos:line="18" pos:column="61"/></operator> <name><name pos:line="18" pos:column="62">ds<pos:position pos:line="18" pos:column="64"/></name><operator pos:line="18" pos:column="64">-&gt;<pos:position pos:line="18" pos:column="69"/></operator><name pos:line="18" pos:column="66">type<pos:position pos:line="18" pos:column="70"/></name></name><operator pos:line="18" pos:column="70">)<pos:position pos:line="18" pos:column="71"/></operator></expr>)<pos:position pos:line="18" pos:column="72"/></condition><then pos:line="18" pos:column="72"> <block pos:line="18" pos:column="73">{
      <expr_stmt><expr><call><name pos:line="19" pos:column="7">log_err<pos:position pos:line="19" pos:column="14"/></name><argument_list pos:line="19" pos:column="14">(<argument><expr><literal type="string" pos:line="19" pos:column="15">"hv2data_source: Invalid DS type."<pos:position pos:line="19" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="51"/></expr_stmt>
      <return pos:line="20" pos:column="7">return <expr><operator pos:line="20" pos:column="14">-<pos:position pos:line="20" pos:column="15"/></operator><literal type="number" pos:line="20" pos:column="15">1<pos:position pos:line="20" pos:column="16"/></literal></expr>;<pos:position pos:line="20" pos:column="17"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>
  }<pos:position pos:line="22" pos:column="4"/></block></then> <else pos:line="22" pos:column="5">else <block pos:line="22" pos:column="10">{
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">ds<pos:position pos:line="23" pos:column="7"/></name><operator pos:line="23" pos:column="7">-&gt;<pos:position pos:line="23" pos:column="12"/></operator><name pos:line="23" pos:column="9">type<pos:position pos:line="23" pos:column="13"/></name></name> <operator pos:line="23" pos:column="14">=<pos:position pos:line="23" pos:column="15"/></operator> <name pos:line="23" pos:column="16">DS_TYPE_COUNTER<pos:position pos:line="23" pos:column="31"/></name></expr>;<pos:position pos:line="23" pos:column="32"/></expr_stmt>
  }<pos:position pos:line="24" pos:column="4"/></block></else></if>

  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><name pos:line="26" pos:column="7">NULL<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">!=<pos:position pos:line="26" pos:column="14"/></operator> <operator pos:line="26" pos:column="15">(<pos:position pos:line="26" pos:column="16"/></operator><name pos:line="26" pos:column="16">tmp<pos:position pos:line="26" pos:column="19"/></name> <operator pos:line="26" pos:column="20">=<pos:position pos:line="26" pos:column="21"/></operator> <call><name pos:line="26" pos:column="22">hv_fetch<pos:position pos:line="26" pos:column="30"/></name><argument_list pos:line="26" pos:column="30">(<argument><expr><name pos:line="26" pos:column="31">hash<pos:position pos:line="26" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="37">"min"<pos:position pos:line="26" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="44">3<pos:position pos:line="26" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="47">0<pos:position pos:line="26" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="49"/></argument_list></call><operator pos:line="26" pos:column="49">)<pos:position pos:line="26" pos:column="50"/></operator></expr>)<pos:position pos:line="26" pos:column="51"/></condition><then pos:line="26" pos:column="51">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="27" pos:column="5">ds<pos:position pos:line="27" pos:column="7"/></name><operator pos:line="27" pos:column="7">-&gt;<pos:position pos:line="27" pos:column="12"/></operator><name pos:line="27" pos:column="9">min<pos:position pos:line="27" pos:column="12"/></name></name> <operator pos:line="27" pos:column="13">=<pos:position pos:line="27" pos:column="14"/></operator> <call><name pos:line="27" pos:column="15">SvNV<pos:position pos:line="27" pos:column="19"/></name><argument_list pos:line="27" pos:column="19">(<argument><expr><operator pos:line="27" pos:column="20">*<pos:position pos:line="27" pos:column="21"/></operator><name pos:line="27" pos:column="21">tmp<pos:position pos:line="27" pos:column="24"/></name></expr></argument>)<pos:position pos:line="27" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="26"/></expr_stmt></block></then>
  <else pos:line="28" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="29" pos:column="5">ds<pos:position pos:line="29" pos:column="7"/></name><operator pos:line="29" pos:column="7">-&gt;<pos:position pos:line="29" pos:column="12"/></operator><name pos:line="29" pos:column="9">min<pos:position pos:line="29" pos:column="12"/></name></name> <operator pos:line="29" pos:column="13">=<pos:position pos:line="29" pos:column="14"/></operator> <name pos:line="29" pos:column="15">NAN<pos:position pos:line="29" pos:column="18"/></name></expr>;<pos:position pos:line="29" pos:column="19"/></expr_stmt></block></else></if>

  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><name pos:line="31" pos:column="7">NULL<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">!=<pos:position pos:line="31" pos:column="14"/></operator> <operator pos:line="31" pos:column="15">(<pos:position pos:line="31" pos:column="16"/></operator><name pos:line="31" pos:column="16">tmp<pos:position pos:line="31" pos:column="19"/></name> <operator pos:line="31" pos:column="20">=<pos:position pos:line="31" pos:column="21"/></operator> <call><name pos:line="31" pos:column="22">hv_fetch<pos:position pos:line="31" pos:column="30"/></name><argument_list pos:line="31" pos:column="30">(<argument><expr><name pos:line="31" pos:column="31">hash<pos:position pos:line="31" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="37">"max"<pos:position pos:line="31" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="44">3<pos:position pos:line="31" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="47">0<pos:position pos:line="31" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="49"/></argument_list></call><operator pos:line="31" pos:column="49">)<pos:position pos:line="31" pos:column="50"/></operator></expr>)<pos:position pos:line="31" pos:column="51"/></condition><then pos:line="31" pos:column="51">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="32" pos:column="5">ds<pos:position pos:line="32" pos:column="7"/></name><operator pos:line="32" pos:column="7">-&gt;<pos:position pos:line="32" pos:column="12"/></operator><name pos:line="32" pos:column="9">max<pos:position pos:line="32" pos:column="12"/></name></name> <operator pos:line="32" pos:column="13">=<pos:position pos:line="32" pos:column="14"/></operator> <call><name pos:line="32" pos:column="15">SvNV<pos:position pos:line="32" pos:column="19"/></name><argument_list pos:line="32" pos:column="19">(<argument><expr><operator pos:line="32" pos:column="20">*<pos:position pos:line="32" pos:column="21"/></operator><name pos:line="32" pos:column="21">tmp<pos:position pos:line="32" pos:column="24"/></name></expr></argument>)<pos:position pos:line="32" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="26"/></expr_stmt></block></then>
  <else pos:line="33" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="34" pos:column="5">ds<pos:position pos:line="34" pos:column="7"/></name><operator pos:line="34" pos:column="7">-&gt;<pos:position pos:line="34" pos:column="12"/></operator><name pos:line="34" pos:column="9">max<pos:position pos:line="34" pos:column="12"/></name></name> <operator pos:line="34" pos:column="13">=<pos:position pos:line="34" pos:column="14"/></operator> <name pos:line="34" pos:column="15">NAN<pos:position pos:line="34" pos:column="18"/></name></expr>;<pos:position pos:line="34" pos:column="19"/></expr_stmt></block></else></if>
  <return pos:line="35" pos:column="3">return <expr><literal type="number" pos:line="35" pos:column="10">0<pos:position pos:line="35" pos:column="11"/></literal></expr>;<pos:position pos:line="35" pos:column="12"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

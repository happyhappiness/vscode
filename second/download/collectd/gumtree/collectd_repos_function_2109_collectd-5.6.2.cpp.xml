<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2109_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">cipvs_submit_dest<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">pi<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="47">struct<pos:position pos:line="1" pos:column="53"/></name> <name pos:line="1" pos:column="54">ip_vs_dest_entry<pos:position pos:line="1" pos:column="70"/></name></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">de<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list> <block pos:line="1" pos:column="76">{
  <decl_stmt><decl><type><name><name pos:line="2" pos:column="3">struct<pos:position pos:line="2" pos:column="9"/></name> <name pos:line="2" pos:column="10">ip_vs_stats_user<pos:position pos:line="2" pos:column="26"/></name></name></type> <name pos:line="2" pos:column="27">stats<pos:position pos:line="2" pos:column="32"/></name> <init pos:line="2" pos:column="33">= <expr><name><name pos:line="2" pos:column="35">de<pos:position pos:line="2" pos:column="37"/></name><operator pos:line="2" pos:column="37">-&gt;<pos:position pos:line="2" pos:column="42"/></operator><name pos:line="2" pos:column="39">stats<pos:position pos:line="2" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="2" pos:column="45"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">ti<pos:position pos:line="4" pos:column="10"/></name><index pos:line="4" pos:column="10">[<expr><name pos:line="4" pos:column="11">DATA_MAX_NAME_LEN<pos:position pos:line="4" pos:column="28"/></name></expr>]<pos:position pos:line="4" pos:column="29"/></index></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><literal type="number" pos:line="6" pos:column="7">0<pos:position pos:line="6" pos:column="8"/></literal> <operator pos:line="6" pos:column="9">!=<pos:position pos:line="6" pos:column="11"/></operator> <call><name pos:line="6" pos:column="12">get_ti<pos:position pos:line="6" pos:column="18"/></name><argument_list pos:line="6" pos:column="18">(<argument><expr><name pos:line="6" pos:column="19">de<pos:position pos:line="6" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="23">ti<pos:position pos:line="6" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="27">sizeof<argument_list pos:line="6" pos:column="33">(<argument><expr><name pos:line="6" pos:column="34">ti<pos:position pos:line="6" pos:column="36"/></name></expr></argument>)<pos:position pos:line="6" pos:column="37"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="39"/></condition><then pos:line="6" pos:column="39">
    <block type="pseudo"><return pos:line="7" pos:column="5">return;<pos:position pos:line="7" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="9" pos:column="3">cipvs_submit_connections<pos:position pos:line="9" pos:column="27"/></name><argument_list pos:line="9" pos:column="27">(<argument><expr><name pos:line="9" pos:column="28">pi<pos:position pos:line="9" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="32">ti<pos:position pos:line="9" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="36">stats<pos:position pos:line="9" pos:column="41"/></name><operator pos:line="9" pos:column="41">.<pos:position pos:line="9" pos:column="42"/></operator><name pos:line="9" pos:column="42">conns<pos:position pos:line="9" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">cipvs_submit_if<pos:position pos:line="10" pos:column="18"/></name><argument_list pos:line="10" pos:column="18">(<argument><expr><name pos:line="10" pos:column="19">pi<pos:position pos:line="10" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="23">"if_packets"<pos:position pos:line="10" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="37">ti<pos:position pos:line="10" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="41">stats<pos:position pos:line="10" pos:column="46"/></name><operator pos:line="10" pos:column="46">.<pos:position pos:line="10" pos:column="47"/></operator><name pos:line="10" pos:column="47">inpkts<pos:position pos:line="10" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="55">stats<pos:position pos:line="10" pos:column="60"/></name><operator pos:line="10" pos:column="60">.<pos:position pos:line="10" pos:column="61"/></operator><name pos:line="10" pos:column="61">outpkts<pos:position pos:line="10" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="70"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">cipvs_submit_if<pos:position pos:line="11" pos:column="18"/></name><argument_list pos:line="11" pos:column="18">(<argument><expr><name pos:line="11" pos:column="19">pi<pos:position pos:line="11" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="23">"if_octets"<pos:position pos:line="11" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="36">ti<pos:position pos:line="11" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="40">stats<pos:position pos:line="11" pos:column="45"/></name><operator pos:line="11" pos:column="45">.<pos:position pos:line="11" pos:column="46"/></operator><name pos:line="11" pos:column="46">inbytes<pos:position pos:line="11" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="55">stats<pos:position pos:line="11" pos:column="60"/></name><operator pos:line="11" pos:column="60">.<pos:position pos:line="11" pos:column="61"/></operator><name pos:line="11" pos:column="61">outbytes<pos:position pos:line="11" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="71"/></expr_stmt>
  <return pos:line="12" pos:column="3">return;<pos:position pos:line="12" pos:column="10"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

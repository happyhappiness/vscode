<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_398_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">read_pmu<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">void<pos:position pos:line="1" pos:column="25"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="26"/></parameter_list> <comment type="block" pos:line="1" pos:column="27">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">i<pos:position pos:line="3" pos:column="8"/></name> <init pos:line="3" pos:column="9">= <expr><literal type="number" pos:line="3" pos:column="11">0<pos:position pos:line="3" pos:column="12"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>
  <comment type="block" pos:line="4" pos:column="3">/* The upper limit here is just a safeguard. If there is a system with
   * more than 100 batteries, this can easily be increased. */</comment>
  <for pos:line="6" pos:column="3">for <control pos:line="6" pos:column="7">(<init pos:line="6" pos:column="8">;<pos:position pos:line="6" pos:column="9"/></init> <condition><expr><name pos:line="6" pos:column="10">i<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">&lt;<pos:position pos:line="6" pos:column="16"/></operator> <literal type="number" pos:line="6" pos:column="14">100<pos:position pos:line="6" pos:column="17"/></literal></expr>;<pos:position pos:line="6" pos:column="18"/></condition> <incr><expr><name pos:line="6" pos:column="19">i<pos:position pos:line="6" pos:column="20"/></name><operator pos:line="6" pos:column="20">++<pos:position pos:line="6" pos:column="22"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="23"/></control> <block pos:line="6" pos:column="24">{
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">FILE<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">fh<pos:position pos:line="7" pos:column="13"/></name></decl>;<pos:position pos:line="7" pos:column="14"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name></type> <name><name pos:line="9" pos:column="10">buffer<pos:position pos:line="9" pos:column="16"/></name><index pos:line="9" pos:column="16">[<expr><literal type="number" pos:line="9" pos:column="17">1024<pos:position pos:line="9" pos:column="21"/></literal></expr>]<pos:position pos:line="9" pos:column="22"/></index></name></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name></type> <name><name pos:line="10" pos:column="10">filename<pos:position pos:line="10" pos:column="18"/></name><index pos:line="10" pos:column="18">[<expr><name pos:line="10" pos:column="19">PATH_MAX<pos:position pos:line="10" pos:column="27"/></name></expr>]<pos:position pos:line="10" pos:column="28"/></index></name></decl>;<pos:position pos:line="10" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name></type> <name><name pos:line="11" pos:column="10">plugin_instance<pos:position pos:line="11" pos:column="25"/></name><index pos:line="11" pos:column="25">[<expr><name pos:line="11" pos:column="26">DATA_MAX_NAME_LEN<pos:position pos:line="11" pos:column="43"/></name></expr>]<pos:position pos:line="11" pos:column="44"/></index></name></decl>;<pos:position pos:line="11" pos:column="45"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="13" pos:column="5">gauge_t<pos:position pos:line="13" pos:column="12"/></name></type> <name pos:line="13" pos:column="13">current<pos:position pos:line="13" pos:column="20"/></name> <init pos:line="13" pos:column="21">= <expr><name pos:line="13" pos:column="23">NAN<pos:position pos:line="13" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">gauge_t<pos:position pos:line="14" pos:column="12"/></name></type> <name pos:line="14" pos:column="13">voltage<pos:position pos:line="14" pos:column="20"/></name> <init pos:line="14" pos:column="21">= <expr><name pos:line="14" pos:column="23">NAN<pos:position pos:line="14" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">gauge_t<pos:position pos:line="15" pos:column="12"/></name></type> <name pos:line="15" pos:column="13">charge<pos:position pos:line="15" pos:column="19"/></name> <init pos:line="15" pos:column="20">= <expr><name pos:line="15" pos:column="22">NAN<pos:position pos:line="15" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="26"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="17" pos:column="5">ssnprintf<pos:position pos:line="17" pos:column="14"/></name><argument_list pos:line="17" pos:column="14">(<argument><expr><name pos:line="17" pos:column="15">filename<pos:position pos:line="17" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="25">sizeof<argument_list pos:line="17" pos:column="31">(<argument><expr><name pos:line="17" pos:column="32">filename<pos:position pos:line="17" pos:column="40"/></name></expr></argument>)<pos:position pos:line="17" pos:column="41"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="17" pos:column="43">PROC_PMU_PATH_FORMAT<pos:position pos:line="17" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="65">i<pos:position pos:line="17" pos:column="66"/></name></expr></argument>)<pos:position pos:line="17" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="68"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><call><name pos:line="18" pos:column="9">access<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><name pos:line="18" pos:column="16">filename<pos:position pos:line="18" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="26">R_OK<pos:position pos:line="18" pos:column="30"/></name></expr></argument>)<pos:position pos:line="18" pos:column="31"/></argument_list></call> <operator pos:line="18" pos:column="32">!=<pos:position pos:line="18" pos:column="34"/></operator> <literal type="number" pos:line="18" pos:column="35">0<pos:position pos:line="18" pos:column="36"/></literal></expr>)<pos:position pos:line="18" pos:column="37"/></condition><then pos:line="18" pos:column="37">
      <block type="pseudo"><break pos:line="19" pos:column="7">break;<pos:position pos:line="19" pos:column="13"/></break></block></then></if>

    <expr_stmt><expr><call><name pos:line="21" pos:column="5">ssnprintf<pos:position pos:line="21" pos:column="14"/></name><argument_list pos:line="21" pos:column="14">(<argument><expr><name pos:line="21" pos:column="15">plugin_instance<pos:position pos:line="21" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="32">sizeof<argument_list pos:line="21" pos:column="38">(<argument><expr><name pos:line="21" pos:column="39">plugin_instance<pos:position pos:line="21" pos:column="54"/></name></expr></argument>)<pos:position pos:line="21" pos:column="55"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="57">"%i"<pos:position pos:line="21" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="63">i<pos:position pos:line="21" pos:column="64"/></name></expr></argument>)<pos:position pos:line="21" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="66"/></expr_stmt>

    <expr_stmt><expr><name pos:line="23" pos:column="5">fh<pos:position pos:line="23" pos:column="7"/></name> <operator pos:line="23" pos:column="8">=<pos:position pos:line="23" pos:column="9"/></operator> <call><name pos:line="23" pos:column="10">fopen<pos:position pos:line="23" pos:column="15"/></name><argument_list pos:line="23" pos:column="15">(<argument><expr><name pos:line="23" pos:column="16">filename<pos:position pos:line="23" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="26">"r"<pos:position pos:line="23" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="31"/></expr_stmt>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">fh<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">==<pos:position pos:line="24" pos:column="14"/></operator> <name pos:line="24" pos:column="15">NULL<pos:position pos:line="24" pos:column="19"/></name></expr>)<pos:position pos:line="24" pos:column="20"/></condition><then pos:line="24" pos:column="20"> <block pos:line="24" pos:column="21">{
      <if pos:line="25" pos:column="7">if <condition pos:line="25" pos:column="10">(<expr><name pos:line="25" pos:column="11">errno<pos:position pos:line="25" pos:column="16"/></name> <operator pos:line="25" pos:column="17">==<pos:position pos:line="25" pos:column="19"/></operator> <name pos:line="25" pos:column="20">ENOENT<pos:position pos:line="25" pos:column="26"/></name></expr>)<pos:position pos:line="25" pos:column="27"/></condition><then pos:line="25" pos:column="27">
        <block type="pseudo"><break pos:line="26" pos:column="9">break;<pos:position pos:line="26" pos:column="15"/></break></block></then>
      <elseif pos:line="27" pos:column="7">else <if pos:line="27" pos:column="12">if <condition pos:line="27" pos:column="15">(<expr><operator pos:line="27" pos:column="16">(<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="17">errno<pos:position pos:line="27" pos:column="22"/></name> <operator pos:line="27" pos:column="23">==<pos:position pos:line="27" pos:column="25"/></operator> <name pos:line="27" pos:column="26">EAGAIN<pos:position pos:line="27" pos:column="32"/></name><operator pos:line="27" pos:column="32">)<pos:position pos:line="27" pos:column="33"/></operator> <operator pos:line="27" pos:column="34">||<pos:position pos:line="27" pos:column="36"/></operator> <operator pos:line="27" pos:column="37">(<pos:position pos:line="27" pos:column="38"/></operator><name pos:line="27" pos:column="38">errno<pos:position pos:line="27" pos:column="43"/></name> <operator pos:line="27" pos:column="44">==<pos:position pos:line="27" pos:column="46"/></operator> <name pos:line="27" pos:column="47">EINTR<pos:position pos:line="27" pos:column="52"/></name><operator pos:line="27" pos:column="52">)<pos:position pos:line="27" pos:column="53"/></operator></expr>)<pos:position pos:line="27" pos:column="54"/></condition><then pos:line="27" pos:column="54">
        <block type="pseudo"><continue pos:line="28" pos:column="9">continue;<pos:position pos:line="28" pos:column="18"/></continue></block></then></if></elseif>
      <else pos:line="29" pos:column="7">else
        <block type="pseudo"><return pos:line="30" pos:column="9">return <expr><operator pos:line="30" pos:column="16">(<pos:position pos:line="30" pos:column="17"/></operator><name pos:line="30" pos:column="17">errno<pos:position pos:line="30" pos:column="22"/></name><operator pos:line="30" pos:column="22">)<pos:position pos:line="30" pos:column="23"/></operator></expr>;<pos:position pos:line="30" pos:column="24"/></return></block></else></if>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

    <while pos:line="33" pos:column="5">while <condition pos:line="33" pos:column="11">(<expr><call><name pos:line="33" pos:column="12">fgets<pos:position pos:line="33" pos:column="17"/></name><argument_list pos:line="33" pos:column="17">(<argument><expr><name pos:line="33" pos:column="18">buffer<pos:position pos:line="33" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="26">sizeof<argument_list pos:line="33" pos:column="32">(<argument><expr><name pos:line="33" pos:column="33">buffer<pos:position pos:line="33" pos:column="39"/></name></expr></argument>)<pos:position pos:line="33" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="33" pos:column="42">fh<pos:position pos:line="33" pos:column="44"/></name></expr></argument>)<pos:position pos:line="33" pos:column="45"/></argument_list></call> <operator pos:line="33" pos:column="46">!=<pos:position pos:line="33" pos:column="48"/></operator> <name pos:line="33" pos:column="49">NULL<pos:position pos:line="33" pos:column="53"/></name></expr>)<pos:position pos:line="33" pos:column="54"/></condition> <block pos:line="33" pos:column="55">{
      <decl_stmt><decl><type><name pos:line="34" pos:column="7">char<pos:position pos:line="34" pos:column="11"/></name> <modifier pos:line="34" pos:column="12">*<pos:position pos:line="34" pos:column="13"/></modifier></type><name><name pos:line="34" pos:column="13">fields<pos:position pos:line="34" pos:column="19"/></name><index pos:line="34" pos:column="19">[<expr><literal type="number" pos:line="34" pos:column="20">8<pos:position pos:line="34" pos:column="21"/></literal></expr>]<pos:position pos:line="34" pos:column="22"/></index></name></decl>;<pos:position pos:line="34" pos:column="23"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="35" pos:column="7">int<pos:position pos:line="35" pos:column="10"/></name></type> <name pos:line="35" pos:column="11">numfields<pos:position pos:line="35" pos:column="20"/></name></decl>;<pos:position pos:line="35" pos:column="21"/></decl_stmt>

      <expr_stmt><expr><name pos:line="37" pos:column="7">numfields<pos:position pos:line="37" pos:column="16"/></name> <operator pos:line="37" pos:column="17">=<pos:position pos:line="37" pos:column="18"/></operator> <call><name pos:line="37" pos:column="19">strsplit<pos:position pos:line="37" pos:column="27"/></name><argument_list pos:line="37" pos:column="27">(<argument><expr><name pos:line="37" pos:column="28">buffer<pos:position pos:line="37" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="36">fields<pos:position pos:line="37" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="37" pos:column="44">STATIC_ARRAY_SIZE<pos:position pos:line="37" pos:column="61"/></name><argument_list pos:line="37" pos:column="61">(<argument><expr><name pos:line="37" pos:column="62">fields<pos:position pos:line="37" pos:column="68"/></name></expr></argument>)<pos:position pos:line="37" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="71"/></expr_stmt>
      <if pos:line="38" pos:column="7">if <condition pos:line="38" pos:column="10">(<expr><name pos:line="38" pos:column="11">numfields<pos:position pos:line="38" pos:column="20"/></name> <operator pos:line="38" pos:column="21">&lt;<pos:position pos:line="38" pos:column="25"/></operator> <literal type="number" pos:line="38" pos:column="23">3<pos:position pos:line="38" pos:column="24"/></literal></expr>)<pos:position pos:line="38" pos:column="25"/></condition><then pos:line="38" pos:column="25">
        <block type="pseudo"><continue pos:line="39" pos:column="9">continue;<pos:position pos:line="39" pos:column="18"/></continue></block></then></if>

      <if pos:line="41" pos:column="7">if <condition pos:line="41" pos:column="10">(<expr><call><name pos:line="41" pos:column="11">strcmp<pos:position pos:line="41" pos:column="17"/></name><argument_list pos:line="41" pos:column="17">(<argument><expr><literal type="string" pos:line="41" pos:column="18">"current"<pos:position pos:line="41" pos:column="27"/></literal></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="29">fields<pos:position pos:line="41" pos:column="35"/></name><index pos:line="41" pos:column="35">[<expr><literal type="number" pos:line="41" pos:column="36">0<pos:position pos:line="41" pos:column="37"/></literal></expr>]<pos:position pos:line="41" pos:column="38"/></index></name></expr></argument>)<pos:position pos:line="41" pos:column="39"/></argument_list></call> <operator pos:line="41" pos:column="40">==<pos:position pos:line="41" pos:column="42"/></operator> <literal type="number" pos:line="41" pos:column="43">0<pos:position pos:line="41" pos:column="44"/></literal></expr>)<pos:position pos:line="41" pos:column="45"/></condition><then pos:line="41" pos:column="45">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="9">strtogauge<pos:position pos:line="42" pos:column="19"/></name><argument_list pos:line="42" pos:column="19">(<argument><expr><name><name pos:line="42" pos:column="20">fields<pos:position pos:line="42" pos:column="26"/></name><index pos:line="42" pos:column="26">[<expr><literal type="number" pos:line="42" pos:column="27">2<pos:position pos:line="42" pos:column="28"/></literal></expr>]<pos:position pos:line="42" pos:column="29"/></index></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="31">&amp;<pos:position pos:line="42" pos:column="36"/></operator><name pos:line="42" pos:column="32">current<pos:position pos:line="42" pos:column="39"/></name></expr></argument>)<pos:position pos:line="42" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="41"/></expr_stmt></block></then>
      <elseif pos:line="43" pos:column="7">else <if pos:line="43" pos:column="12">if <condition pos:line="43" pos:column="15">(<expr><call><name pos:line="43" pos:column="16">strcmp<pos:position pos:line="43" pos:column="22"/></name><argument_list pos:line="43" pos:column="22">(<argument><expr><literal type="string" pos:line="43" pos:column="23">"voltage"<pos:position pos:line="43" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="34">fields<pos:position pos:line="43" pos:column="40"/></name><index pos:line="43" pos:column="40">[<expr><literal type="number" pos:line="43" pos:column="41">0<pos:position pos:line="43" pos:column="42"/></literal></expr>]<pos:position pos:line="43" pos:column="43"/></index></name></expr></argument>)<pos:position pos:line="43" pos:column="44"/></argument_list></call> <operator pos:line="43" pos:column="45">==<pos:position pos:line="43" pos:column="47"/></operator> <literal type="number" pos:line="43" pos:column="48">0<pos:position pos:line="43" pos:column="49"/></literal></expr>)<pos:position pos:line="43" pos:column="50"/></condition><then pos:line="43" pos:column="50">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="9">strtogauge<pos:position pos:line="44" pos:column="19"/></name><argument_list pos:line="44" pos:column="19">(<argument><expr><name><name pos:line="44" pos:column="20">fields<pos:position pos:line="44" pos:column="26"/></name><index pos:line="44" pos:column="26">[<expr><literal type="number" pos:line="44" pos:column="27">2<pos:position pos:line="44" pos:column="28"/></literal></expr>]<pos:position pos:line="44" pos:column="29"/></index></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="31">&amp;<pos:position pos:line="44" pos:column="36"/></operator><name pos:line="44" pos:column="32">voltage<pos:position pos:line="44" pos:column="39"/></name></expr></argument>)<pos:position pos:line="44" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="41"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="45" pos:column="7">else <if pos:line="45" pos:column="12">if <condition pos:line="45" pos:column="15">(<expr><call><name pos:line="45" pos:column="16">strcmp<pos:position pos:line="45" pos:column="22"/></name><argument_list pos:line="45" pos:column="22">(<argument><expr><literal type="string" pos:line="45" pos:column="23">"charge"<pos:position pos:line="45" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="33">fields<pos:position pos:line="45" pos:column="39"/></name><index pos:line="45" pos:column="39">[<expr><literal type="number" pos:line="45" pos:column="40">0<pos:position pos:line="45" pos:column="41"/></literal></expr>]<pos:position pos:line="45" pos:column="42"/></index></name></expr></argument>)<pos:position pos:line="45" pos:column="43"/></argument_list></call> <operator pos:line="45" pos:column="44">==<pos:position pos:line="45" pos:column="46"/></operator> <literal type="number" pos:line="45" pos:column="47">0<pos:position pos:line="45" pos:column="48"/></literal></expr>)<pos:position pos:line="45" pos:column="49"/></condition><then pos:line="45" pos:column="49">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="9">strtogauge<pos:position pos:line="46" pos:column="19"/></name><argument_list pos:line="46" pos:column="19">(<argument><expr><name><name pos:line="46" pos:column="20">fields<pos:position pos:line="46" pos:column="26"/></name><index pos:line="46" pos:column="26">[<expr><literal type="number" pos:line="46" pos:column="27">2<pos:position pos:line="46" pos:column="28"/></literal></expr>]<pos:position pos:line="46" pos:column="29"/></index></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="31">&amp;<pos:position pos:line="46" pos:column="36"/></operator><name pos:line="46" pos:column="32">charge<pos:position pos:line="46" pos:column="38"/></name></expr></argument>)<pos:position pos:line="46" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="40"/></expr_stmt></block></then></if></elseif></if>
    }<pos:position pos:line="47" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="49" pos:column="5">fclose<pos:position pos:line="49" pos:column="11"/></name><argument_list pos:line="49" pos:column="11">(<argument><expr><name pos:line="49" pos:column="12">fh<pos:position pos:line="49" pos:column="14"/></name></expr></argument>)<pos:position pos:line="49" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name pos:line="50" pos:column="5">fh<pos:position pos:line="50" pos:column="7"/></name> <operator pos:line="50" pos:column="8">=<pos:position pos:line="50" pos:column="9"/></operator> <name pos:line="50" pos:column="10">NULL<pos:position pos:line="50" pos:column="14"/></name></expr>;<pos:position pos:line="50" pos:column="15"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="52" pos:column="5">battery_submit<pos:position pos:line="52" pos:column="19"/></name><argument_list pos:line="52" pos:column="19">(<argument><expr><name pos:line="52" pos:column="20">plugin_instance<pos:position pos:line="52" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="37">"charge"<pos:position pos:line="52" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="52" pos:column="47">charge<pos:position pos:line="52" pos:column="53"/></name> <operator pos:line="52" pos:column="54">/<pos:position pos:line="52" pos:column="55"/></operator> <literal type="number" pos:line="52" pos:column="56">1000.0<pos:position pos:line="52" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">battery_submit<pos:position pos:line="53" pos:column="19"/></name><argument_list pos:line="53" pos:column="19">(<argument><expr><name pos:line="53" pos:column="20">plugin_instance<pos:position pos:line="53" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="37">"current"<pos:position pos:line="53" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="48">current<pos:position pos:line="53" pos:column="55"/></name> <operator pos:line="53" pos:column="56">/<pos:position pos:line="53" pos:column="57"/></operator> <literal type="number" pos:line="53" pos:column="58">1000.0<pos:position pos:line="53" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="54" pos:column="5">battery_submit<pos:position pos:line="54" pos:column="19"/></name><argument_list pos:line="54" pos:column="19">(<argument><expr><name pos:line="54" pos:column="20">plugin_instance<pos:position pos:line="54" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="37">"voltage"<pos:position pos:line="54" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="48">voltage<pos:position pos:line="54" pos:column="55"/></name> <operator pos:line="54" pos:column="56">/<pos:position pos:line="54" pos:column="57"/></operator> <literal type="number" pos:line="54" pos:column="58">1000.0<pos:position pos:line="54" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="66"/></expr_stmt>
  }<pos:position pos:line="55" pos:column="4"/></block></for>

  <if pos:line="57" pos:column="3">if <condition pos:line="57" pos:column="6">(<expr><name pos:line="57" pos:column="7">i<pos:position pos:line="57" pos:column="8"/></name> <operator pos:line="57" pos:column="9">==<pos:position pos:line="57" pos:column="11"/></operator> <literal type="number" pos:line="57" pos:column="12">0<pos:position pos:line="57" pos:column="13"/></literal></expr>)<pos:position pos:line="57" pos:column="14"/></condition><then pos:line="57" pos:column="14">
    <block type="pseudo"><return pos:line="58" pos:column="5">return <expr><operator pos:line="58" pos:column="12">(<pos:position pos:line="58" pos:column="13"/></operator><name pos:line="58" pos:column="13">ENOENT<pos:position pos:line="58" pos:column="19"/></name><operator pos:line="58" pos:column="19">)<pos:position pos:line="58" pos:column="20"/></operator></expr>;<pos:position pos:line="58" pos:column="21"/></return></block></then></if>
  <return pos:line="59" pos:column="3">return <expr><operator pos:line="59" pos:column="10">(<pos:position pos:line="59" pos:column="11"/></operator><literal type="number" pos:line="59" pos:column="11">0<pos:position pos:line="59" pos:column="12"/></literal><operator pos:line="59" pos:column="12">)<pos:position pos:line="59" pos:column="13"/></operator></expr>;<pos:position pos:line="59" pos:column="14"/></return>
}<pos:position pos:line="60" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_285_collectd-4.10.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">net_send<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">int<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">sockfd<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">buff<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">int<pos:position pos:line="1" pos:column="50"/></name></type> <name pos:line="1" pos:column="51">len<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">uint16_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">packet_size<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="5" pos:column="9">assert<pos:position pos:line="5" pos:column="15"/></name> <argument_list pos:line="5" pos:column="16">(<argument><expr><name pos:line="5" pos:column="17">len<pos:position pos:line="5" pos:column="20"/></name> <operator pos:line="5" pos:column="21">&gt;<pos:position pos:line="5" pos:column="25"/></operator> <literal type="number" pos:line="5" pos:column="23">0<pos:position pos:line="5" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="6" pos:column="9">assert<pos:position pos:line="6" pos:column="15"/></name> <argument_list pos:line="6" pos:column="16">(<argument><expr><operator pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="18">sockfd<pos:position pos:line="6" pos:column="24"/></name> <operator pos:line="6" pos:column="25">&gt;=<pos:position pos:line="6" pos:column="30"/></operator> <literal type="number" pos:line="6" pos:column="28">0<pos:position pos:line="6" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="31"/></expr_stmt>

	<comment type="block" pos:line="8" pos:column="9">/* send short containing size of data packet */</comment>
	<expr_stmt><expr><name pos:line="9" pos:column="9">packet_size<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">=<pos:position pos:line="9" pos:column="22"/></operator> <call><name pos:line="9" pos:column="23">htons<pos:position pos:line="9" pos:column="28"/></name> <argument_list pos:line="9" pos:column="29">(<argument><expr><operator pos:line="9" pos:column="30">(<pos:position pos:line="9" pos:column="31"/></operator><name pos:line="9" pos:column="31">uint16_t<pos:position pos:line="9" pos:column="39"/></name><operator pos:line="9" pos:column="39">)<pos:position pos:line="9" pos:column="40"/></operator> <name pos:line="9" pos:column="41">len<pos:position pos:line="9" pos:column="44"/></name></expr></argument>)<pos:position pos:line="9" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="46"/></expr_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><call><name pos:line="11" pos:column="13">swrite<pos:position pos:line="11" pos:column="19"/></name> <argument_list pos:line="11" pos:column="20">(<argument><expr><operator pos:line="11" pos:column="21">*<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="22">sockfd<pos:position pos:line="11" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="30">(<pos:position pos:line="11" pos:column="31"/></operator><name pos:line="11" pos:column="31">void<pos:position pos:line="11" pos:column="35"/></name> <operator pos:line="11" pos:column="36">*<pos:position pos:line="11" pos:column="37"/></operator><operator pos:line="11" pos:column="37">)<pos:position pos:line="11" pos:column="38"/></operator> <operator pos:line="11" pos:column="39">&amp;<pos:position pos:line="11" pos:column="44"/></operator><name pos:line="11" pos:column="40">packet_size<pos:position pos:line="11" pos:column="51"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="53">sizeof <argument_list pos:line="11" pos:column="60">(<argument><expr><name pos:line="11" pos:column="61">packet_size<pos:position pos:line="11" pos:column="72"/></name></expr></argument>)<pos:position pos:line="11" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="74"/></argument_list></call> <operator pos:line="11" pos:column="75">!=<pos:position pos:line="11" pos:column="77"/></operator> <literal type="number" pos:line="11" pos:column="78">0<pos:position pos:line="11" pos:column="79"/></literal></expr>)<pos:position pos:line="11" pos:column="80"/></condition><then pos:line="11" pos:column="80">
	<block pos:line="12" pos:column="9">{
		<expr_stmt><expr><operator pos:line="13" pos:column="17">*<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">sockfd<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">=<pos:position pos:line="13" pos:column="26"/></operator> <operator pos:line="13" pos:column="27">-<pos:position pos:line="13" pos:column="28"/></operator><literal type="number" pos:line="13" pos:column="28">1<pos:position pos:line="13" pos:column="29"/></literal></expr>;<pos:position pos:line="13" pos:column="30"/></expr_stmt>
		<return pos:line="14" pos:column="17">return <expr><operator pos:line="14" pos:column="24">(<pos:position pos:line="14" pos:column="25"/></operator><operator pos:line="14" pos:column="25">-<pos:position pos:line="14" pos:column="26"/></operator><literal type="number" pos:line="14" pos:column="26">1<pos:position pos:line="14" pos:column="27"/></literal><operator pos:line="14" pos:column="27">)<pos:position pos:line="14" pos:column="28"/></operator></expr>;<pos:position pos:line="14" pos:column="29"/></return>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="17" pos:column="9">/* send data packet */</comment>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><call><name pos:line="18" pos:column="13">swrite<pos:position pos:line="18" pos:column="19"/></name> <argument_list pos:line="18" pos:column="20">(<argument><expr><operator pos:line="18" pos:column="21">*<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="22">sockfd<pos:position pos:line="18" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="30">(<pos:position pos:line="18" pos:column="31"/></operator><name pos:line="18" pos:column="31">void<pos:position pos:line="18" pos:column="35"/></name> <operator pos:line="18" pos:column="36">*<pos:position pos:line="18" pos:column="37"/></operator><operator pos:line="18" pos:column="37">)<pos:position pos:line="18" pos:column="38"/></operator> <name pos:line="18" pos:column="39">buff<pos:position pos:line="18" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="45">len<pos:position pos:line="18" pos:column="48"/></name></expr></argument>)<pos:position pos:line="18" pos:column="49"/></argument_list></call> <operator pos:line="18" pos:column="50">!=<pos:position pos:line="18" pos:column="52"/></operator> <literal type="number" pos:line="18" pos:column="53">0<pos:position pos:line="18" pos:column="54"/></literal></expr>)<pos:position pos:line="18" pos:column="55"/></condition><then pos:line="18" pos:column="55">
	<block pos:line="19" pos:column="9">{
		<expr_stmt><expr><operator pos:line="20" pos:column="17">*<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="18">sockfd<pos:position pos:line="20" pos:column="24"/></name> <operator pos:line="20" pos:column="25">=<pos:position pos:line="20" pos:column="26"/></operator> <operator pos:line="20" pos:column="27">-<pos:position pos:line="20" pos:column="28"/></operator><literal type="number" pos:line="20" pos:column="28">1<pos:position pos:line="20" pos:column="29"/></literal></expr>;<pos:position pos:line="20" pos:column="30"/></expr_stmt>
		<return pos:line="21" pos:column="17">return <expr><operator pos:line="21" pos:column="24">(<pos:position pos:line="21" pos:column="25"/></operator><operator pos:line="21" pos:column="25">-<pos:position pos:line="21" pos:column="26"/></operator><literal type="number" pos:line="21" pos:column="26">2<pos:position pos:line="21" pos:column="27"/></literal><operator pos:line="21" pos:column="27">)<pos:position pos:line="21" pos:column="28"/></operator></expr>;<pos:position pos:line="21" pos:column="29"/></return>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if>

	<return pos:line="24" pos:column="9">return <expr><operator pos:line="24" pos:column="16">(<pos:position pos:line="24" pos:column="17"/></operator><literal type="number" pos:line="24" pos:column="17">0<pos:position pos:line="24" pos:column="18"/></literal><operator pos:line="24" pos:column="18">)<pos:position pos:line="24" pos:column="19"/></operator></expr>;<pos:position pos:line="24" pos:column="20"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2181_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ignorelist_append_regex<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">ignorelist_t<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">il<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="54">const<pos:position pos:line="1" pos:column="59"/></specifier> <name pos:line="1" pos:column="60">char<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">entry<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">regex_t<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">re<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">ignorelist_item_t<pos:position pos:line="4" pos:column="26"/></name> <modifier pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></modifier></type><name pos:line="4" pos:column="28">item<pos:position pos:line="4" pos:column="32"/></name></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">status<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>

	<comment type="block" pos:line="7" pos:column="9">/* create buffer */</comment>
	<expr_stmt><expr><name pos:line="8" pos:column="9">re<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <call><name pos:line="8" pos:column="14">malloc<pos:position pos:line="8" pos:column="20"/></name> <argument_list pos:line="8" pos:column="21">(<argument><expr><sizeof pos:line="8" pos:column="22">sizeof <argument_list pos:line="8" pos:column="29">(<argument><expr><operator pos:line="8" pos:column="30">*<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="31">re<pos:position pos:line="8" pos:column="33"/></name></expr></argument>)<pos:position pos:line="8" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="36"/></expr_stmt>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">re<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">==<pos:position pos:line="9" pos:column="18"/></operator> <name pos:line="9" pos:column="19">NULL<pos:position pos:line="9" pos:column="23"/></name></expr>)<pos:position pos:line="9" pos:column="24"/></condition><then pos:line="9" pos:column="24">
	<block pos:line="10" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">ERROR<pos:position pos:line="11" pos:column="22"/></name> <argument_list pos:line="11" pos:column="23">(<argument><expr><literal type="string" pos:line="11" pos:column="24">"ignorelist_append_regex: malloc failed."<pos:position pos:line="11" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="67"/></expr_stmt>
		<return pos:line="12" pos:column="17">return <expr><name pos:line="12" pos:column="24">ENOMEM<pos:position pos:line="12" pos:column="30"/></name></expr>;<pos:position pos:line="12" pos:column="31"/></return>
	}<pos:position pos:line="13" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">memset<pos:position pos:line="14" pos:column="15"/></name> <argument_list pos:line="14" pos:column="16">(<argument><expr><name pos:line="14" pos:column="17">re<pos:position pos:line="14" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="21">0<pos:position pos:line="14" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="24">sizeof <argument_list pos:line="14" pos:column="31">(<argument><expr><operator pos:line="14" pos:column="32">*<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="33">re<pos:position pos:line="14" pos:column="35"/></name></expr></argument>)<pos:position pos:line="14" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="38"/></expr_stmt>

	<comment type="block" pos:line="16" pos:column="9">/* compile regex */</comment>
	<expr_stmt><expr><name pos:line="17" pos:column="9">status<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <call><name pos:line="17" pos:column="18">regcomp<pos:position pos:line="17" pos:column="25"/></name> <argument_list pos:line="17" pos:column="26">(<argument><expr><name pos:line="17" pos:column="27">re<pos:position pos:line="17" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="31">entry<pos:position pos:line="17" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="38">REG_EXTENDED<pos:position pos:line="17" pos:column="50"/></name></expr></argument>)<pos:position pos:line="17" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="52"/></expr_stmt>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">status<pos:position pos:line="18" pos:column="19"/></name> <operator pos:line="18" pos:column="20">!=<pos:position pos:line="18" pos:column="22"/></operator> <literal type="number" pos:line="18" pos:column="23">0<pos:position pos:line="18" pos:column="24"/></literal></expr>)<pos:position pos:line="18" pos:column="25"/></condition><then pos:line="18" pos:column="25">
	<block pos:line="19" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="20" pos:column="17">char<pos:position pos:line="20" pos:column="21"/></name></type> <name><name pos:line="20" pos:column="22">errbuf<pos:position pos:line="20" pos:column="28"/></name><index pos:line="20" pos:column="28">[<expr><literal type="number" pos:line="20" pos:column="29">1024<pos:position pos:line="20" pos:column="33"/></literal></expr>]<pos:position pos:line="20" pos:column="34"/></index></name></decl>;<pos:position pos:line="20" pos:column="35"/></decl_stmt>

		<expr_stmt><expr><operator pos:line="22" pos:column="17">(<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="18">void<pos:position pos:line="22" pos:column="22"/></name><operator pos:line="22" pos:column="22">)<pos:position pos:line="22" pos:column="23"/></operator> <call><name pos:line="22" pos:column="24">regerror<pos:position pos:line="22" pos:column="32"/></name> <argument_list pos:line="22" pos:column="33">(<argument><expr><name pos:line="22" pos:column="34">status<pos:position pos:line="22" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="42">re<pos:position pos:line="22" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="46">errbuf<pos:position pos:line="22" pos:column="52"/></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="54">sizeof <argument_list pos:line="22" pos:column="61">(<argument><expr><name pos:line="22" pos:column="62">errbuf<pos:position pos:line="22" pos:column="68"/></name></expr></argument>)<pos:position pos:line="22" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="71"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="23" pos:column="17">ERROR<pos:position pos:line="23" pos:column="22"/></name> <argument_list pos:line="23" pos:column="23">(<argument><expr><literal type="string" pos:line="23" pos:column="24">"ignorelist_append_regex: Compiling regular expression \"%s\" failed: %s"<pos:position pos:line="23" pos:column="97"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="99">entry<pos:position pos:line="23" pos:column="104"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="106">errbuf<pos:position pos:line="23" pos:column="112"/></name></expr></argument>)<pos:position pos:line="23" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="114"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">sfree<pos:position pos:line="24" pos:column="22"/></name> <argument_list pos:line="24" pos:column="23">(<argument><expr><name pos:line="24" pos:column="24">re<pos:position pos:line="24" pos:column="26"/></name></expr></argument>)<pos:position pos:line="24" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="28"/></expr_stmt>
		<return pos:line="25" pos:column="17">return <expr><name pos:line="25" pos:column="24">status<pos:position pos:line="25" pos:column="30"/></name></expr>;<pos:position pos:line="25" pos:column="31"/></return>
	}<pos:position pos:line="26" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="28" pos:column="9">/* create new entry */</comment>
	<expr_stmt><expr><name pos:line="29" pos:column="9">item<pos:position pos:line="29" pos:column="13"/></name> <operator pos:line="29" pos:column="14">=<pos:position pos:line="29" pos:column="15"/></operator> <call><name pos:line="29" pos:column="16">malloc<pos:position pos:line="29" pos:column="22"/></name> <argument_list pos:line="29" pos:column="23">(<argument><expr><sizeof pos:line="29" pos:column="24">sizeof <argument_list pos:line="29" pos:column="31">(<argument><expr><operator pos:line="29" pos:column="32">*<pos:position pos:line="29" pos:column="33"/></operator><name pos:line="29" pos:column="33">item<pos:position pos:line="29" pos:column="37"/></name></expr></argument>)<pos:position pos:line="29" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="40"/></expr_stmt>
	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">item<pos:position pos:line="30" pos:column="17"/></name> <operator pos:line="30" pos:column="18">==<pos:position pos:line="30" pos:column="20"/></operator> <name pos:line="30" pos:column="21">NULL<pos:position pos:line="30" pos:column="25"/></name></expr>)<pos:position pos:line="30" pos:column="26"/></condition><then pos:line="30" pos:column="26">
	<block pos:line="31" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="32" pos:column="17">ERROR<pos:position pos:line="32" pos:column="22"/></name> <argument_list pos:line="32" pos:column="23">(<argument><expr><literal type="string" pos:line="32" pos:column="24">"ignorelist_append_regex: malloc failed."<pos:position pos:line="32" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="67"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">regfree<pos:position pos:line="33" pos:column="24"/></name> <argument_list pos:line="33" pos:column="25">(<argument><expr><name pos:line="33" pos:column="26">re<pos:position pos:line="33" pos:column="28"/></name></expr></argument>)<pos:position pos:line="33" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">sfree<pos:position pos:line="34" pos:column="22"/></name> <argument_list pos:line="34" pos:column="23">(<argument><expr><name pos:line="34" pos:column="24">re<pos:position pos:line="34" pos:column="26"/></name></expr></argument>)<pos:position pos:line="34" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="28"/></expr_stmt>
		<return pos:line="35" pos:column="17">return <expr><name pos:line="35" pos:column="24">ENOMEM<pos:position pos:line="35" pos:column="30"/></name></expr>;<pos:position pos:line="35" pos:column="31"/></return>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="37" pos:column="9">memset<pos:position pos:line="37" pos:column="15"/></name> <argument_list pos:line="37" pos:column="16">(<argument><expr><name pos:line="37" pos:column="17">item<pos:position pos:line="37" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="23">0<pos:position pos:line="37" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="37" pos:column="26">sizeof <argument_list pos:line="37" pos:column="33">(<argument><expr><operator pos:line="37" pos:column="34">*<pos:position pos:line="37" pos:column="35"/></operator><name pos:line="37" pos:column="35">item<pos:position pos:line="37" pos:column="39"/></name></expr></argument>)<pos:position pos:line="37" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="37" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="38" pos:column="9">item<pos:position pos:line="38" pos:column="13"/></name><operator pos:line="38" pos:column="13">-&gt;<pos:position pos:line="38" pos:column="18"/></operator><name pos:line="38" pos:column="15">rmatch<pos:position pos:line="38" pos:column="21"/></name></name> <operator pos:line="38" pos:column="22">=<pos:position pos:line="38" pos:column="23"/></operator> <name pos:line="38" pos:column="24">re<pos:position pos:line="38" pos:column="26"/></name></expr>;<pos:position pos:line="38" pos:column="27"/></expr_stmt>

	<comment type="block" pos:line="40" pos:column="9">/* append new entry */</comment>
	<expr_stmt><expr><call><name pos:line="41" pos:column="9">ignorelist_append<pos:position pos:line="41" pos:column="26"/></name> <argument_list pos:line="41" pos:column="27">(<argument><expr><name pos:line="41" pos:column="28">il<pos:position pos:line="41" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="32">item<pos:position pos:line="41" pos:column="36"/></name></expr></argument>)<pos:position pos:line="41" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="38"/></expr_stmt>

	<return pos:line="43" pos:column="9">return <expr><operator pos:line="43" pos:column="16">(<pos:position pos:line="43" pos:column="17"/></operator><literal type="number" pos:line="43" pos:column="17">0<pos:position pos:line="43" pos:column="18"/></literal><operator pos:line="43" pos:column="18">)<pos:position pos:line="43" pos:column="19"/></operator></expr>;<pos:position pos:line="43" pos:column="20"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_387_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">csnmp_config_add_host_priv_protocol<pos:position pos:line="1" pos:column="47"/></name><parameter_list pos:line="1" pos:column="47">(<parameter><decl><type><name pos:line="1" pos:column="48">host_definition_t<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">hd<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
                                               <parameter><decl><type><name pos:line="2" pos:column="48">oconfig_item_t<pos:position pos:line="2" pos:column="62"/></name> <modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="64">ci<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="67"/></parameter_list> <block pos:line="2" pos:column="68">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">buffer<pos:position pos:line="3" pos:column="14"/></name><index pos:line="3" pos:column="14">[<expr><literal type="number" pos:line="3" pos:column="15">4<pos:position pos:line="3" pos:column="16"/></literal></expr>]<pos:position pos:line="3" pos:column="17"/></index></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">status<pos:position pos:line="6" pos:column="9"/></name> <operator pos:line="6" pos:column="10">=<pos:position pos:line="6" pos:column="11"/></operator> <call><name pos:line="6" pos:column="12">cf_util_get_string_buffer<pos:position pos:line="6" pos:column="37"/></name><argument_list pos:line="6" pos:column="37">(<argument><expr><name pos:line="6" pos:column="38">ci<pos:position pos:line="6" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="42">buffer<pos:position pos:line="6" pos:column="48"/></name></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="50">sizeof<argument_list pos:line="6" pos:column="56">(<argument><expr><name pos:line="6" pos:column="57">buffer<pos:position pos:line="6" pos:column="63"/></name></expr></argument>)<pos:position pos:line="6" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="66"/></expr_stmt>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">status<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">!=<pos:position pos:line="7" pos:column="16"/></operator> <literal type="number" pos:line="7" pos:column="17">0<pos:position pos:line="7" pos:column="18"/></literal></expr>)<pos:position pos:line="7" pos:column="19"/></condition><then pos:line="7" pos:column="19">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><name pos:line="8" pos:column="12">status<pos:position pos:line="8" pos:column="18"/></name></expr>;<pos:position pos:line="8" pos:column="19"/></return></block></then></if>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><call><name pos:line="10" pos:column="7">strcasecmp<pos:position pos:line="10" pos:column="17"/></name><argument_list pos:line="10" pos:column="17">(<argument><expr><literal type="string" pos:line="10" pos:column="18">"AES"<pos:position pos:line="10" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="25">buffer<pos:position pos:line="10" pos:column="31"/></name></expr></argument>)<pos:position pos:line="10" pos:column="32"/></argument_list></call> <operator pos:line="10" pos:column="33">==<pos:position pos:line="10" pos:column="35"/></operator> <literal type="number" pos:line="10" pos:column="36">0<pos:position pos:line="10" pos:column="37"/></literal></expr>)<pos:position pos:line="10" pos:column="38"/></condition><then pos:line="10" pos:column="38"> <block pos:line="10" pos:column="39">{
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">hd<pos:position pos:line="11" pos:column="7"/></name><operator pos:line="11" pos:column="7">-&gt;<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="9">priv_protocol<pos:position pos:line="11" pos:column="22"/></name></name> <operator pos:line="11" pos:column="23">=<pos:position pos:line="11" pos:column="24"/></operator> <name pos:line="11" pos:column="25">usmAESPrivProtocol<pos:position pos:line="11" pos:column="43"/></name></expr>;<pos:position pos:line="11" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">hd<pos:position pos:line="12" pos:column="7"/></name><operator pos:line="12" pos:column="7">-&gt;<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="9">priv_protocol_len<pos:position pos:line="12" pos:column="26"/></name></name> <operator pos:line="12" pos:column="27">=<pos:position pos:line="12" pos:column="28"/></operator> <sizeof pos:line="12" pos:column="29">sizeof<argument_list pos:line="12" pos:column="35">(<argument><expr><name pos:line="12" pos:column="36">usmAESPrivProtocol<pos:position pos:line="12" pos:column="54"/></name></expr></argument>)<pos:position pos:line="12" pos:column="55"/></argument_list></sizeof> <operator pos:line="12" pos:column="56">/<pos:position pos:line="12" pos:column="57"/></operator> <sizeof pos:line="12" pos:column="58">sizeof<argument_list pos:line="12" pos:column="64">(<argument><expr><name pos:line="12" pos:column="65">oid<pos:position pos:line="12" pos:column="68"/></name></expr></argument>)<pos:position pos:line="12" pos:column="69"/></argument_list></sizeof></expr>;<pos:position pos:line="12" pos:column="70"/></expr_stmt>
  }<pos:position pos:line="13" pos:column="4"/></block></then> <elseif pos:line="13" pos:column="5">else <if pos:line="13" pos:column="10">if <condition pos:line="13" pos:column="13">(<expr><call><name pos:line="13" pos:column="14">strcasecmp<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">(<argument><expr><literal type="string" pos:line="13" pos:column="25">"DES"<pos:position pos:line="13" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="32">buffer<pos:position pos:line="13" pos:column="38"/></name></expr></argument>)<pos:position pos:line="13" pos:column="39"/></argument_list></call> <operator pos:line="13" pos:column="40">==<pos:position pos:line="13" pos:column="42"/></operator> <literal type="number" pos:line="13" pos:column="43">0<pos:position pos:line="13" pos:column="44"/></literal></expr>)<pos:position pos:line="13" pos:column="45"/></condition><then pos:line="13" pos:column="45"> <block pos:line="13" pos:column="46">{
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">hd<pos:position pos:line="14" pos:column="7"/></name><operator pos:line="14" pos:column="7">-&gt;<pos:position pos:line="14" pos:column="12"/></operator><name pos:line="14" pos:column="9">priv_protocol<pos:position pos:line="14" pos:column="22"/></name></name> <operator pos:line="14" pos:column="23">=<pos:position pos:line="14" pos:column="24"/></operator> <name pos:line="14" pos:column="25">usmDESPrivProtocol<pos:position pos:line="14" pos:column="43"/></name></expr>;<pos:position pos:line="14" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">hd<pos:position pos:line="15" pos:column="7"/></name><operator pos:line="15" pos:column="7">-&gt;<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="9">priv_protocol_len<pos:position pos:line="15" pos:column="26"/></name></name> <operator pos:line="15" pos:column="27">=<pos:position pos:line="15" pos:column="28"/></operator> <sizeof pos:line="15" pos:column="29">sizeof<argument_list pos:line="15" pos:column="35">(<argument><expr><name pos:line="15" pos:column="36">usmDESPrivProtocol<pos:position pos:line="15" pos:column="54"/></name></expr></argument>)<pos:position pos:line="15" pos:column="55"/></argument_list></sizeof> <operator pos:line="15" pos:column="56">/<pos:position pos:line="15" pos:column="57"/></operator> <sizeof pos:line="15" pos:column="58">sizeof<argument_list pos:line="15" pos:column="64">(<argument><expr><name pos:line="15" pos:column="65">oid<pos:position pos:line="15" pos:column="68"/></name></expr></argument>)<pos:position pos:line="15" pos:column="69"/></argument_list></sizeof></expr>;<pos:position pos:line="15" pos:column="70"/></expr_stmt>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if></elseif> <else pos:line="16" pos:column="5">else <block pos:line="16" pos:column="10">{
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">WARNING<pos:position pos:line="17" pos:column="12"/></name><argument_list pos:line="17" pos:column="12">(<argument><expr><literal type="string" pos:line="17" pos:column="13">"snmp plugin: The `PrivProtocol' config option must be `AES' or "<pos:position pos:line="17" pos:column="78"/></literal>
            <literal type="string" pos:line="18" pos:column="13">"`DES'."<pos:position pos:line="18" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="23"/></expr_stmt>
    <return pos:line="19" pos:column="5">return <expr><operator pos:line="19" pos:column="12">-<pos:position pos:line="19" pos:column="13"/></operator><literal type="number" pos:line="19" pos:column="13">1<pos:position pos:line="19" pos:column="14"/></literal></expr>;<pos:position pos:line="19" pos:column="15"/></return>
  }<pos:position pos:line="20" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="22" pos:column="3">DEBUG<pos:position pos:line="22" pos:column="8"/></name><argument_list pos:line="22" pos:column="8">(<argument><expr><literal type="string" pos:line="22" pos:column="9">"snmp plugin: host = %s; host-&gt;priv_protocol = %s;"<pos:position pos:line="22" pos:column="63"/></literal></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="62">hd<pos:position pos:line="22" pos:column="64"/></name><operator pos:line="22" pos:column="64">-&gt;<pos:position pos:line="22" pos:column="69"/></operator><name pos:line="22" pos:column="66">name<pos:position pos:line="22" pos:column="70"/></name></name></expr></argument>,
        <argument><expr><ternary><condition><expr><name><name pos:line="23" pos:column="9">hd<pos:position pos:line="23" pos:column="11"/></name><operator pos:line="23" pos:column="11">-&gt;<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="13">priv_protocol<pos:position pos:line="23" pos:column="26"/></name></name> <operator pos:line="23" pos:column="27">==<pos:position pos:line="23" pos:column="29"/></operator> <name pos:line="23" pos:column="30">usmAESPrivProtocol<pos:position pos:line="23" pos:column="48"/></name></expr> ?<pos:position pos:line="23" pos:column="50"/></condition><then pos:line="23" pos:column="50"> <expr><literal type="string" pos:line="23" pos:column="51">"AES"<pos:position pos:line="23" pos:column="56"/></literal></expr> <pos:position pos:line="23" pos:column="57"/></then><else pos:line="23" pos:column="57">: <expr><literal type="string" pos:line="23" pos:column="59">"DES"<pos:position pos:line="23" pos:column="64"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="23" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="66"/></expr_stmt>

  <return pos:line="25" pos:column="3">return <expr><literal type="number" pos:line="25" pos:column="10">0<pos:position pos:line="25" pos:column="11"/></literal></expr>;<pos:position pos:line="25" pos:column="12"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1936_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">sockent_add<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">sockent_t<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">se<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list> <comment type="block" pos:line="1" pos:column="39">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">sockent_t<pos:position pos:line="3" pos:column="12"/></name> <modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier></type><name pos:line="3" pos:column="14">last_ptr<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">se<pos:position pos:line="5" pos:column="9"/></name> <operator pos:line="5" pos:column="10">==<pos:position pos:line="5" pos:column="12"/></operator> <name pos:line="5" pos:column="13">NULL<pos:position pos:line="5" pos:column="17"/></name></expr>)<pos:position pos:line="5" pos:column="18"/></condition><then pos:line="5" pos:column="18">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><operator pos:line="6" pos:column="12">(<pos:position pos:line="6" pos:column="13"/></operator><operator pos:line="6" pos:column="13">-<pos:position pos:line="6" pos:column="14"/></operator><literal type="number" pos:line="6" pos:column="14">1<pos:position pos:line="6" pos:column="15"/></literal><operator pos:line="6" pos:column="15">)<pos:position pos:line="6" pos:column="16"/></operator></expr>;<pos:position pos:line="6" pos:column="17"/></return></block></then></if>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name><name pos:line="8" pos:column="7">se<pos:position pos:line="8" pos:column="9"/></name><operator pos:line="8" pos:column="9">-&gt;<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="11">type<pos:position pos:line="8" pos:column="15"/></name></name> <operator pos:line="8" pos:column="16">==<pos:position pos:line="8" pos:column="18"/></operator> <name pos:line="8" pos:column="19">SOCKENT_TYPE_SERVER<pos:position pos:line="8" pos:column="38"/></name></expr>)<pos:position pos:line="8" pos:column="39"/></condition><then pos:line="8" pos:column="39"> <block pos:line="8" pos:column="40">{
    <decl_stmt><decl><type><name><name pos:line="9" pos:column="5">struct<pos:position pos:line="9" pos:column="11"/></name> <name pos:line="9" pos:column="12">pollfd<pos:position pos:line="9" pos:column="18"/></name></name> <modifier pos:line="9" pos:column="19">*<pos:position pos:line="9" pos:column="20"/></modifier></type><name pos:line="9" pos:column="20">tmp<pos:position pos:line="9" pos:column="23"/></name></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>

    <expr_stmt><expr><name pos:line="11" pos:column="5">tmp<pos:position pos:line="11" pos:column="8"/></name> <operator pos:line="11" pos:column="9">=<pos:position pos:line="11" pos:column="10"/></operator> <call><name pos:line="11" pos:column="11">realloc<pos:position pos:line="11" pos:column="18"/></name><argument_list pos:line="11" pos:column="18">(<argument><expr><name pos:line="11" pos:column="19">listen_sockets_pollfd<pos:position pos:line="11" pos:column="40"/></name></expr></argument>,
                  <argument><expr><sizeof pos:line="12" pos:column="19">sizeof<argument_list pos:line="12" pos:column="25">(<argument><expr><operator pos:line="12" pos:column="26">*<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="27">tmp<pos:position pos:line="12" pos:column="30"/></name></expr></argument>)<pos:position pos:line="12" pos:column="31"/></argument_list></sizeof> <operator pos:line="12" pos:column="32">*<pos:position pos:line="12" pos:column="33"/></operator> <operator pos:line="12" pos:column="34">(<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="35">listen_sockets_num<pos:position pos:line="12" pos:column="53"/></name> <operator pos:line="12" pos:column="54">+<pos:position pos:line="12" pos:column="55"/></operator> <name><name pos:line="12" pos:column="56">se<pos:position pos:line="12" pos:column="58"/></name><operator pos:line="12" pos:column="58">-&gt;<pos:position pos:line="12" pos:column="63"/></operator><name pos:line="12" pos:column="60">data<pos:position pos:line="12" pos:column="64"/></name><operator pos:line="12" pos:column="64">.<pos:position pos:line="12" pos:column="65"/></operator><name pos:line="12" pos:column="65">server<pos:position pos:line="12" pos:column="71"/></name><operator pos:line="12" pos:column="71">.<pos:position pos:line="12" pos:column="72"/></operator><name pos:line="12" pos:column="72">fd_num<pos:position pos:line="12" pos:column="78"/></name></name><operator pos:line="12" pos:column="78">)<pos:position pos:line="12" pos:column="79"/></operator></expr></argument>)<pos:position pos:line="12" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="81"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">tmp<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">==<pos:position pos:line="13" pos:column="15"/></operator> <name pos:line="13" pos:column="16">NULL<pos:position pos:line="13" pos:column="20"/></name></expr>)<pos:position pos:line="13" pos:column="21"/></condition><then pos:line="13" pos:column="21"> <block pos:line="13" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="14" pos:column="7">ERROR<pos:position pos:line="14" pos:column="12"/></name><argument_list pos:line="14" pos:column="12">(<argument><expr><literal type="string" pos:line="14" pos:column="13">"network plugin: realloc failed."<pos:position pos:line="14" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="48"/></expr_stmt>
      <return pos:line="15" pos:column="7">return <expr><operator pos:line="15" pos:column="14">(<pos:position pos:line="15" pos:column="15"/></operator><operator pos:line="15" pos:column="15">-<pos:position pos:line="15" pos:column="16"/></operator><literal type="number" pos:line="15" pos:column="16">1<pos:position pos:line="15" pos:column="17"/></literal><operator pos:line="15" pos:column="17">)<pos:position pos:line="15" pos:column="18"/></operator></expr>;<pos:position pos:line="15" pos:column="19"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="17" pos:column="5">listen_sockets_pollfd<pos:position pos:line="17" pos:column="26"/></name> <operator pos:line="17" pos:column="27">=<pos:position pos:line="17" pos:column="28"/></operator> <name pos:line="17" pos:column="29">tmp<pos:position pos:line="17" pos:column="32"/></name></expr>;<pos:position pos:line="17" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name pos:line="18" pos:column="5">tmp<pos:position pos:line="18" pos:column="8"/></name> <operator pos:line="18" pos:column="9">=<pos:position pos:line="18" pos:column="10"/></operator> <name pos:line="18" pos:column="11">listen_sockets_pollfd<pos:position pos:line="18" pos:column="32"/></name> <operator pos:line="18" pos:column="33">+<pos:position pos:line="18" pos:column="34"/></operator> <name pos:line="18" pos:column="35">listen_sockets_num<pos:position pos:line="18" pos:column="53"/></name></expr>;<pos:position pos:line="18" pos:column="54"/></expr_stmt>

    <for pos:line="20" pos:column="5">for <control pos:line="20" pos:column="9">(<init><decl><type><name pos:line="20" pos:column="10">size_t<pos:position pos:line="20" pos:column="16"/></name></type> <name pos:line="20" pos:column="17">i<pos:position pos:line="20" pos:column="18"/></name> <init pos:line="20" pos:column="19">= <expr><literal type="number" pos:line="20" pos:column="21">0<pos:position pos:line="20" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="23"/></init> <condition><expr><name pos:line="20" pos:column="24">i<pos:position pos:line="20" pos:column="25"/></name> <operator pos:line="20" pos:column="26">&lt;<pos:position pos:line="20" pos:column="30"/></operator> <name><name pos:line="20" pos:column="28">se<pos:position pos:line="20" pos:column="30"/></name><operator pos:line="20" pos:column="30">-&gt;<pos:position pos:line="20" pos:column="35"/></operator><name pos:line="20" pos:column="32">data<pos:position pos:line="20" pos:column="36"/></name><operator pos:line="20" pos:column="36">.<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="37">server<pos:position pos:line="20" pos:column="43"/></name><operator pos:line="20" pos:column="43">.<pos:position pos:line="20" pos:column="44"/></operator><name pos:line="20" pos:column="44">fd_num<pos:position pos:line="20" pos:column="50"/></name></name></expr>;<pos:position pos:line="20" pos:column="51"/></condition> <incr><expr><name pos:line="20" pos:column="52">i<pos:position pos:line="20" pos:column="53"/></name><operator pos:line="20" pos:column="53">++<pos:position pos:line="20" pos:column="55"/></operator></expr></incr>)<pos:position pos:line="20" pos:column="56"/></control> <block pos:line="20" pos:column="57">{
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">memset<pos:position pos:line="21" pos:column="13"/></name><argument_list pos:line="21" pos:column="13">(<argument><expr><name pos:line="21" pos:column="14">tmp<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">+<pos:position pos:line="21" pos:column="19"/></operator> <name pos:line="21" pos:column="20">i<pos:position pos:line="21" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="23">0<pos:position pos:line="21" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="26">sizeof<argument_list pos:line="21" pos:column="32">(<argument><expr><operator pos:line="21" pos:column="33">*<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="34">tmp<pos:position pos:line="21" pos:column="37"/></name></expr></argument>)<pos:position pos:line="21" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="40"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="22" pos:column="7">tmp<pos:position pos:line="22" pos:column="10"/></name><index pos:line="22" pos:column="10">[<expr><name pos:line="22" pos:column="11">i<pos:position pos:line="22" pos:column="12"/></name></expr>]<pos:position pos:line="22" pos:column="13"/></index></name><operator pos:line="22" pos:column="13">.<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="14">fd<pos:position pos:line="22" pos:column="16"/></name> <operator pos:line="22" pos:column="17">=<pos:position pos:line="22" pos:column="18"/></operator> <name><name pos:line="22" pos:column="19">se<pos:position pos:line="22" pos:column="21"/></name><operator pos:line="22" pos:column="21">-&gt;<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="23">data<pos:position pos:line="22" pos:column="27"/></name><operator pos:line="22" pos:column="27">.<pos:position pos:line="22" pos:column="28"/></operator><name pos:line="22" pos:column="28">server<pos:position pos:line="22" pos:column="34"/></name><operator pos:line="22" pos:column="34">.<pos:position pos:line="22" pos:column="35"/></operator><name pos:line="22" pos:column="35">fd<pos:position pos:line="22" pos:column="37"/></name><index pos:line="22" pos:column="37">[<expr><name pos:line="22" pos:column="38">i<pos:position pos:line="22" pos:column="39"/></name></expr>]<pos:position pos:line="22" pos:column="40"/></index></name></expr>;<pos:position pos:line="22" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="23" pos:column="7">tmp<pos:position pos:line="23" pos:column="10"/></name><index pos:line="23" pos:column="10">[<expr><name pos:line="23" pos:column="11">i<pos:position pos:line="23" pos:column="12"/></name></expr>]<pos:position pos:line="23" pos:column="13"/></index></name><operator pos:line="23" pos:column="13">.<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="14">events<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">=<pos:position pos:line="23" pos:column="22"/></operator> <name pos:line="23" pos:column="23">POLLIN<pos:position pos:line="23" pos:column="29"/></name> <operator pos:line="23" pos:column="30">|<pos:position pos:line="23" pos:column="31"/></operator> <name pos:line="23" pos:column="32">POLLPRI<pos:position pos:line="23" pos:column="39"/></name></expr>;<pos:position pos:line="23" pos:column="40"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="24" pos:column="7">tmp<pos:position pos:line="24" pos:column="10"/></name><index pos:line="24" pos:column="10">[<expr><name pos:line="24" pos:column="11">i<pos:position pos:line="24" pos:column="12"/></name></expr>]<pos:position pos:line="24" pos:column="13"/></index></name><operator pos:line="24" pos:column="13">.<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="14">revents<pos:position pos:line="24" pos:column="21"/></name> <operator pos:line="24" pos:column="22">=<pos:position pos:line="24" pos:column="23"/></operator> <literal type="number" pos:line="24" pos:column="24">0<pos:position pos:line="24" pos:column="25"/></literal></expr>;<pos:position pos:line="24" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></for>

    <expr_stmt><expr><name pos:line="27" pos:column="5">listen_sockets_num<pos:position pos:line="27" pos:column="23"/></name> <operator pos:line="27" pos:column="24">+=<pos:position pos:line="27" pos:column="26"/></operator> <name><name pos:line="27" pos:column="27">se<pos:position pos:line="27" pos:column="29"/></name><operator pos:line="27" pos:column="29">-&gt;<pos:position pos:line="27" pos:column="34"/></operator><name pos:line="27" pos:column="31">data<pos:position pos:line="27" pos:column="35"/></name><operator pos:line="27" pos:column="35">.<pos:position pos:line="27" pos:column="36"/></operator><name pos:line="27" pos:column="36">server<pos:position pos:line="27" pos:column="42"/></name><operator pos:line="27" pos:column="42">.<pos:position pos:line="27" pos:column="43"/></operator><name pos:line="27" pos:column="43">fd_num<pos:position pos:line="27" pos:column="49"/></name></name></expr>;<pos:position pos:line="27" pos:column="50"/></expr_stmt>

    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">listen_sockets<pos:position pos:line="29" pos:column="23"/></name> <operator pos:line="29" pos:column="24">==<pos:position pos:line="29" pos:column="26"/></operator> <name pos:line="29" pos:column="27">NULL<pos:position pos:line="29" pos:column="31"/></name></expr>)<pos:position pos:line="29" pos:column="32"/></condition><then pos:line="29" pos:column="32"> <block pos:line="29" pos:column="33">{
      <expr_stmt><expr><name pos:line="30" pos:column="7">listen_sockets<pos:position pos:line="30" pos:column="21"/></name> <operator pos:line="30" pos:column="22">=<pos:position pos:line="30" pos:column="23"/></operator> <name pos:line="30" pos:column="24">se<pos:position pos:line="30" pos:column="26"/></name></expr>;<pos:position pos:line="30" pos:column="27"/></expr_stmt>
      <return pos:line="31" pos:column="7">return <expr><operator pos:line="31" pos:column="14">(<pos:position pos:line="31" pos:column="15"/></operator><literal type="number" pos:line="31" pos:column="15">0<pos:position pos:line="31" pos:column="16"/></literal><operator pos:line="31" pos:column="16">)<pos:position pos:line="31" pos:column="17"/></operator></expr>;<pos:position pos:line="31" pos:column="18"/></return>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="33" pos:column="5">last_ptr<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">=<pos:position pos:line="33" pos:column="15"/></operator> <name pos:line="33" pos:column="16">listen_sockets<pos:position pos:line="33" pos:column="30"/></name></expr>;<pos:position pos:line="33" pos:column="31"/></expr_stmt>
  }<pos:position pos:line="34" pos:column="4"/></block></then> <else pos:line="34" pos:column="5">else <comment type="block" pos:line="34" pos:column="10">/* if (se-&gt;type == SOCKENT_TYPE_CLIENT) */</comment>
  <block pos:line="35" pos:column="3">{
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name pos:line="36" pos:column="9">sending_sockets<pos:position pos:line="36" pos:column="24"/></name> <operator pos:line="36" pos:column="25">==<pos:position pos:line="36" pos:column="27"/></operator> <name pos:line="36" pos:column="28">NULL<pos:position pos:line="36" pos:column="32"/></name></expr>)<pos:position pos:line="36" pos:column="33"/></condition><then pos:line="36" pos:column="33"> <block pos:line="36" pos:column="34">{
      <expr_stmt><expr><name pos:line="37" pos:column="7">sending_sockets<pos:position pos:line="37" pos:column="22"/></name> <operator pos:line="37" pos:column="23">=<pos:position pos:line="37" pos:column="24"/></operator> <name pos:line="37" pos:column="25">se<pos:position pos:line="37" pos:column="27"/></name></expr>;<pos:position pos:line="37" pos:column="28"/></expr_stmt>
      <return pos:line="38" pos:column="7">return <expr><operator pos:line="38" pos:column="14">(<pos:position pos:line="38" pos:column="15"/></operator><literal type="number" pos:line="38" pos:column="15">0<pos:position pos:line="38" pos:column="16"/></literal><operator pos:line="38" pos:column="16">)<pos:position pos:line="38" pos:column="17"/></operator></expr>;<pos:position pos:line="38" pos:column="18"/></return>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="40" pos:column="5">last_ptr<pos:position pos:line="40" pos:column="13"/></name> <operator pos:line="40" pos:column="14">=<pos:position pos:line="40" pos:column="15"/></operator> <name pos:line="40" pos:column="16">sending_sockets<pos:position pos:line="40" pos:column="31"/></name></expr>;<pos:position pos:line="40" pos:column="32"/></expr_stmt>
  }<pos:position pos:line="41" pos:column="4"/></block></else></if>

  <while pos:line="43" pos:column="3">while <condition pos:line="43" pos:column="9">(<expr><name><name pos:line="43" pos:column="10">last_ptr<pos:position pos:line="43" pos:column="18"/></name><operator pos:line="43" pos:column="18">-&gt;<pos:position pos:line="43" pos:column="23"/></operator><name pos:line="43" pos:column="20">next<pos:position pos:line="43" pos:column="24"/></name></name> <operator pos:line="43" pos:column="25">!=<pos:position pos:line="43" pos:column="27"/></operator> <name pos:line="43" pos:column="28">NULL<pos:position pos:line="43" pos:column="32"/></name></expr>)<pos:position pos:line="43" pos:column="33"/></condition>
    <block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="5">last_ptr<pos:position pos:line="44" pos:column="13"/></name> <operator pos:line="44" pos:column="14">=<pos:position pos:line="44" pos:column="15"/></operator> <name><name pos:line="44" pos:column="16">last_ptr<pos:position pos:line="44" pos:column="24"/></name><operator pos:line="44" pos:column="24">-&gt;<pos:position pos:line="44" pos:column="29"/></operator><name pos:line="44" pos:column="26">next<pos:position pos:line="44" pos:column="30"/></name></name></expr>;<pos:position pos:line="44" pos:column="31"/></expr_stmt></block></while>
  <expr_stmt><expr><name><name pos:line="45" pos:column="3">last_ptr<pos:position pos:line="45" pos:column="11"/></name><operator pos:line="45" pos:column="11">-&gt;<pos:position pos:line="45" pos:column="16"/></operator><name pos:line="45" pos:column="13">next<pos:position pos:line="45" pos:column="17"/></name></name> <operator pos:line="45" pos:column="18">=<pos:position pos:line="45" pos:column="19"/></operator> <name pos:line="45" pos:column="20">se<pos:position pos:line="45" pos:column="22"/></name></expr>;<pos:position pos:line="45" pos:column="23"/></expr_stmt>

  <return pos:line="47" pos:column="3">return <expr><operator pos:line="47" pos:column="10">(<pos:position pos:line="47" pos:column="11"/></operator><literal type="number" pos:line="47" pos:column="11">0<pos:position pos:line="47" pos:column="12"/></literal><operator pos:line="47" pos:column="12">)<pos:position pos:line="47" pos:column="13"/></operator></expr>;<pos:position pos:line="47" pos:column="14"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

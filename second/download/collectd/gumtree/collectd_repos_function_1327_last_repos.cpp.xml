<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1327_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">grpc<pos:position pos:line="1" pos:column="12"/></name><operator pos:line="1" pos:column="12">::<pos:position pos:line="1" pos:column="14"/></operator><name pos:line="1" pos:column="14">Status<pos:position pos:line="1" pos:column="20"/></name></name></type> <name pos:line="1" pos:column="21">unmarshal_meta_data<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">grpcMetadata<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">&amp;<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="61">rpc_metadata<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>,
                                        <parameter><decl><type><name pos:line="2" pos:column="41">meta_data_t<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier><modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">md_out<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list> <block pos:line="2" pos:column="63">{
  <expr_stmt><expr><operator pos:line="3" pos:column="3">*<pos:position pos:line="3" pos:column="4"/></operator><name pos:line="3" pos:column="4">md_out<pos:position pos:line="3" pos:column="10"/></name> <operator pos:line="3" pos:column="11">=<pos:position pos:line="3" pos:column="12"/></operator> <call><name pos:line="3" pos:column="13">meta_data_create<pos:position pos:line="3" pos:column="29"/></name><argument_list pos:line="3" pos:column="29">()<pos:position pos:line="3" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="32"/></expr_stmt>
  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><operator pos:line="4" pos:column="7">*<pos:position pos:line="4" pos:column="8"/></operator><name pos:line="4" pos:column="8">md_out<pos:position pos:line="4" pos:column="14"/></name> <operator pos:line="4" pos:column="15">==<pos:position pos:line="4" pos:column="17"/></operator> <literal type="null" pos:line="4" pos:column="18">nullptr<pos:position pos:line="4" pos:column="25"/></literal></expr>)<pos:position pos:line="4" pos:column="26"/></condition><then pos:line="4" pos:column="26"> <block pos:line="4" pos:column="27">{
    <return pos:line="5" pos:column="5">return <expr><call><name><name pos:line="5" pos:column="12">grpc<pos:position pos:line="5" pos:column="16"/></name><operator pos:line="5" pos:column="16">::<pos:position pos:line="5" pos:column="18"/></operator><name pos:line="5" pos:column="18">Status<pos:position pos:line="5" pos:column="24"/></name></name><argument_list pos:line="5" pos:column="24">(<argument><expr><name><name pos:line="5" pos:column="25">grpc<pos:position pos:line="5" pos:column="29"/></name><operator pos:line="5" pos:column="29">::<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="31">StatusCode<pos:position pos:line="5" pos:column="41"/></name><operator pos:line="5" pos:column="41">::<pos:position pos:line="5" pos:column="43"/></operator><name pos:line="5" pos:column="43">RESOURCE_EXHAUSTED<pos:position pos:line="5" pos:column="61"/></name></name></expr></argument>,
                        <argument><expr><call><name><name pos:line="6" pos:column="25">grpc<pos:position pos:line="6" pos:column="29"/></name><operator pos:line="6" pos:column="29">::<pos:position pos:line="6" pos:column="31"/></operator><name pos:line="6" pos:column="31">string<pos:position pos:line="6" pos:column="37"/></name></name><argument_list pos:line="6" pos:column="37">(<argument><expr><literal type="string" pos:line="6" pos:column="38">"failed to metadata list"<pos:position pos:line="6" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="66"/></return>
  }<pos:position pos:line="7" pos:column="4"/></block></then></if>
  <for pos:line="8" pos:column="3">for <control pos:line="8" pos:column="7">(<init><decl><type><name pos:line="8" pos:column="8">auto<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">kv<pos:position pos:line="8" pos:column="15"/></name><range pos:line="8" pos:column="15">: <expr><name pos:line="8" pos:column="17">rpc_metadata<pos:position pos:line="8" pos:column="29"/></name></expr></range></decl></init>)<pos:position pos:line="8" pos:column="30"/></control> <block pos:line="8" pos:column="31">{
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">auto<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">k<pos:position pos:line="9" pos:column="11"/></name> <init pos:line="9" pos:column="12">= <expr><call><name><name pos:line="9" pos:column="14">kv<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">.<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="17">first<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">.<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="23">c_str<pos:position pos:line="9" pos:column="28"/></name></name><argument_list pos:line="9" pos:column="28">()<pos:position pos:line="9" pos:column="30"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">auto<pos:position pos:line="10" pos:column="9"/></name></type> <name pos:line="10" pos:column="10">v<pos:position pos:line="10" pos:column="11"/></name> <init pos:line="10" pos:column="12">= <expr><name><name pos:line="10" pos:column="14">kv<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">.<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="17">second<pos:position pos:line="10" pos:column="23"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="24"/></decl_stmt>

    <comment type="line" pos:line="12" pos:column="5">// The meta_data collection individually allocates copies of the keys and</comment>
    <comment type="line" pos:line="13" pos:column="5">// string values for each entry, so it's safe for us to pass a reference</comment>
    <comment type="line" pos:line="14" pos:column="5">// to our short-lived strings.</comment>

    <switch pos:line="16" pos:column="5">switch <condition pos:line="16" pos:column="12">(<expr><call><name><name pos:line="16" pos:column="13">v<pos:position pos:line="16" pos:column="14"/></name><operator pos:line="16" pos:column="14">.<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="15">value_case<pos:position pos:line="16" pos:column="25"/></name></name><argument_list pos:line="16" pos:column="25">()<pos:position pos:line="16" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="28"/></condition> <block pos:line="16" pos:column="29">{
    <case pos:line="17" pos:column="5">case <expr><name><name pos:line="17" pos:column="10">collectd<pos:position pos:line="17" pos:column="18"/></name><operator pos:line="17" pos:column="18">::<pos:position pos:line="17" pos:column="20"/></operator><name pos:line="17" pos:column="20">types<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">::<pos:position pos:line="17" pos:column="27"/></operator><name pos:line="17" pos:column="27">MetadataValue<pos:position pos:line="17" pos:column="40"/></name><operator pos:line="17" pos:column="40">::<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="42">ValueCase<pos:position pos:line="17" pos:column="51"/></name><operator pos:line="17" pos:column="51">::<pos:position pos:line="17" pos:column="53"/></operator><name pos:line="17" pos:column="53">kStringValue<pos:position pos:line="17" pos:column="65"/></name></name></expr>:<pos:position pos:line="17" pos:column="66"/></case>
      <expr_stmt><expr><call><name pos:line="18" pos:column="7">meta_data_add_string<pos:position pos:line="18" pos:column="27"/></name><argument_list pos:line="18" pos:column="27">(<argument><expr><operator pos:line="18" pos:column="28">*<pos:position pos:line="18" pos:column="29"/></operator><name pos:line="18" pos:column="29">md_out<pos:position pos:line="18" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="37">k<pos:position pos:line="18" pos:column="38"/></name></expr></argument>, <argument><expr><call><name><name pos:line="18" pos:column="40">v<pos:position pos:line="18" pos:column="41"/></name><operator pos:line="18" pos:column="41">.<pos:position pos:line="18" pos:column="42"/></operator><name pos:line="18" pos:column="42">string_value<pos:position pos:line="18" pos:column="54"/></name></name><argument_list pos:line="18" pos:column="54">()<pos:position pos:line="18" pos:column="56"/></argument_list></call><operator pos:line="18" pos:column="56">.<pos:position pos:line="18" pos:column="57"/></operator><call><name pos:line="18" pos:column="57">c_str<pos:position pos:line="18" pos:column="62"/></name><argument_list pos:line="18" pos:column="62">()<pos:position pos:line="18" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="66"/></expr_stmt>
      <break pos:line="19" pos:column="7">break;<pos:position pos:line="19" pos:column="13"/></break>
    <case pos:line="20" pos:column="5">case <expr><name><name pos:line="20" pos:column="10">collectd<pos:position pos:line="20" pos:column="18"/></name><operator pos:line="20" pos:column="18">::<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="20">types<pos:position pos:line="20" pos:column="25"/></name><operator pos:line="20" pos:column="25">::<pos:position pos:line="20" pos:column="27"/></operator><name pos:line="20" pos:column="27">MetadataValue<pos:position pos:line="20" pos:column="40"/></name><operator pos:line="20" pos:column="40">::<pos:position pos:line="20" pos:column="42"/></operator><name pos:line="20" pos:column="42">ValueCase<pos:position pos:line="20" pos:column="51"/></name><operator pos:line="20" pos:column="51">::<pos:position pos:line="20" pos:column="53"/></operator><name pos:line="20" pos:column="53">kInt64Value<pos:position pos:line="20" pos:column="64"/></name></name></expr>:<pos:position pos:line="20" pos:column="65"/></case>
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">meta_data_add_signed_int<pos:position pos:line="21" pos:column="31"/></name><argument_list pos:line="21" pos:column="31">(<argument><expr><operator pos:line="21" pos:column="32">*<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="33">md_out<pos:position pos:line="21" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="41">k<pos:position pos:line="21" pos:column="42"/></name></expr></argument>, <argument><expr><call><name><name pos:line="21" pos:column="44">v<pos:position pos:line="21" pos:column="45"/></name><operator pos:line="21" pos:column="45">.<pos:position pos:line="21" pos:column="46"/></operator><name pos:line="21" pos:column="46">int64_value<pos:position pos:line="21" pos:column="57"/></name></name><argument_list pos:line="21" pos:column="57">()<pos:position pos:line="21" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="61"/></expr_stmt>
      <break pos:line="22" pos:column="7">break;<pos:position pos:line="22" pos:column="13"/></break>
    <case pos:line="23" pos:column="5">case <expr><name><name pos:line="23" pos:column="10">collectd<pos:position pos:line="23" pos:column="18"/></name><operator pos:line="23" pos:column="18">::<pos:position pos:line="23" pos:column="20"/></operator><name pos:line="23" pos:column="20">types<pos:position pos:line="23" pos:column="25"/></name><operator pos:line="23" pos:column="25">::<pos:position pos:line="23" pos:column="27"/></operator><name pos:line="23" pos:column="27">MetadataValue<pos:position pos:line="23" pos:column="40"/></name><operator pos:line="23" pos:column="40">::<pos:position pos:line="23" pos:column="42"/></operator><name pos:line="23" pos:column="42">ValueCase<pos:position pos:line="23" pos:column="51"/></name><operator pos:line="23" pos:column="51">::<pos:position pos:line="23" pos:column="53"/></operator><name pos:line="23" pos:column="53">kUint64Value<pos:position pos:line="23" pos:column="65"/></name></name></expr>:<pos:position pos:line="23" pos:column="66"/></case>
      <expr_stmt><expr><call><name pos:line="24" pos:column="7">meta_data_add_unsigned_int<pos:position pos:line="24" pos:column="33"/></name><argument_list pos:line="24" pos:column="33">(<argument><expr><operator pos:line="24" pos:column="34">*<pos:position pos:line="24" pos:column="35"/></operator><name pos:line="24" pos:column="35">md_out<pos:position pos:line="24" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="43">k<pos:position pos:line="24" pos:column="44"/></name></expr></argument>, <argument><expr><call><name><name pos:line="24" pos:column="46">v<pos:position pos:line="24" pos:column="47"/></name><operator pos:line="24" pos:column="47">.<pos:position pos:line="24" pos:column="48"/></operator><name pos:line="24" pos:column="48">uint64_value<pos:position pos:line="24" pos:column="60"/></name></name><argument_list pos:line="24" pos:column="60">()<pos:position pos:line="24" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="64"/></expr_stmt>
      <break pos:line="25" pos:column="7">break;<pos:position pos:line="25" pos:column="13"/></break>
    <case pos:line="26" pos:column="5">case <expr><name><name pos:line="26" pos:column="10">collectd<pos:position pos:line="26" pos:column="18"/></name><operator pos:line="26" pos:column="18">::<pos:position pos:line="26" pos:column="20"/></operator><name pos:line="26" pos:column="20">types<pos:position pos:line="26" pos:column="25"/></name><operator pos:line="26" pos:column="25">::<pos:position pos:line="26" pos:column="27"/></operator><name pos:line="26" pos:column="27">MetadataValue<pos:position pos:line="26" pos:column="40"/></name><operator pos:line="26" pos:column="40">::<pos:position pos:line="26" pos:column="42"/></operator><name pos:line="26" pos:column="42">ValueCase<pos:position pos:line="26" pos:column="51"/></name><operator pos:line="26" pos:column="51">::<pos:position pos:line="26" pos:column="53"/></operator><name pos:line="26" pos:column="53">kDoubleValue<pos:position pos:line="26" pos:column="65"/></name></name></expr>:<pos:position pos:line="26" pos:column="66"/></case>
      <expr_stmt><expr><call><name pos:line="27" pos:column="7">meta_data_add_double<pos:position pos:line="27" pos:column="27"/></name><argument_list pos:line="27" pos:column="27">(<argument><expr><operator pos:line="27" pos:column="28">*<pos:position pos:line="27" pos:column="29"/></operator><name pos:line="27" pos:column="29">md_out<pos:position pos:line="27" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="37">k<pos:position pos:line="27" pos:column="38"/></name></expr></argument>, <argument><expr><call><name><name pos:line="27" pos:column="40">v<pos:position pos:line="27" pos:column="41"/></name><operator pos:line="27" pos:column="41">.<pos:position pos:line="27" pos:column="42"/></operator><name pos:line="27" pos:column="42">double_value<pos:position pos:line="27" pos:column="54"/></name></name><argument_list pos:line="27" pos:column="54">()<pos:position pos:line="27" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="58"/></expr_stmt>
      <break pos:line="28" pos:column="7">break;<pos:position pos:line="28" pos:column="13"/></break>
    <case pos:line="29" pos:column="5">case <expr><name><name pos:line="29" pos:column="10">collectd<pos:position pos:line="29" pos:column="18"/></name><operator pos:line="29" pos:column="18">::<pos:position pos:line="29" pos:column="20"/></operator><name pos:line="29" pos:column="20">types<pos:position pos:line="29" pos:column="25"/></name><operator pos:line="29" pos:column="25">::<pos:position pos:line="29" pos:column="27"/></operator><name pos:line="29" pos:column="27">MetadataValue<pos:position pos:line="29" pos:column="40"/></name><operator pos:line="29" pos:column="40">::<pos:position pos:line="29" pos:column="42"/></operator><name pos:line="29" pos:column="42">ValueCase<pos:position pos:line="29" pos:column="51"/></name><operator pos:line="29" pos:column="51">::<pos:position pos:line="29" pos:column="53"/></operator><name pos:line="29" pos:column="53">kBoolValue<pos:position pos:line="29" pos:column="63"/></name></name></expr>:<pos:position pos:line="29" pos:column="64"/></case>
      <expr_stmt><expr><call><name pos:line="30" pos:column="7">meta_data_add_boolean<pos:position pos:line="30" pos:column="28"/></name><argument_list pos:line="30" pos:column="28">(<argument><expr><operator pos:line="30" pos:column="29">*<pos:position pos:line="30" pos:column="30"/></operator><name pos:line="30" pos:column="30">md_out<pos:position pos:line="30" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="38">k<pos:position pos:line="30" pos:column="39"/></name></expr></argument>, <argument><expr><call><name><name pos:line="30" pos:column="41">v<pos:position pos:line="30" pos:column="42"/></name><operator pos:line="30" pos:column="42">.<pos:position pos:line="30" pos:column="43"/></operator><name pos:line="30" pos:column="43">bool_value<pos:position pos:line="30" pos:column="53"/></name></name><argument_list pos:line="30" pos:column="53">()<pos:position pos:line="30" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="57"/></expr_stmt>
      <break pos:line="31" pos:column="7">break;<pos:position pos:line="31" pos:column="13"/></break>
    <default pos:line="32" pos:column="5">default:<pos:position pos:line="32" pos:column="13"/></default>
      <expr_stmt><expr><call><name pos:line="33" pos:column="7">meta_data_destroy<pos:position pos:line="33" pos:column="24"/></name><argument_list pos:line="33" pos:column="24">(<argument><expr><operator pos:line="33" pos:column="25">*<pos:position pos:line="33" pos:column="26"/></operator><name pos:line="33" pos:column="26">md_out<pos:position pos:line="33" pos:column="32"/></name></expr></argument>)<pos:position pos:line="33" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="34"/></expr_stmt>
      <return pos:line="34" pos:column="7">return  <expr><call><name><name pos:line="34" pos:column="15">grpc<pos:position pos:line="34" pos:column="19"/></name><operator pos:line="34" pos:column="19">::<pos:position pos:line="34" pos:column="21"/></operator><name pos:line="34" pos:column="21">Status<pos:position pos:line="34" pos:column="27"/></name></name><argument_list pos:line="34" pos:column="27">(<argument><expr><name><name pos:line="34" pos:column="28">grpc<pos:position pos:line="34" pos:column="32"/></name><operator pos:line="34" pos:column="32">::<pos:position pos:line="34" pos:column="34"/></operator><name pos:line="34" pos:column="34">StatusCode<pos:position pos:line="34" pos:column="44"/></name><operator pos:line="34" pos:column="44">::<pos:position pos:line="34" pos:column="46"/></operator><name pos:line="34" pos:column="46">INVALID_ARGUMENT<pos:position pos:line="34" pos:column="62"/></name></name></expr></argument>,
                           <argument><expr><call><name><name pos:line="35" pos:column="28">grpc<pos:position pos:line="35" pos:column="32"/></name><operator pos:line="35" pos:column="32">::<pos:position pos:line="35" pos:column="34"/></operator><name pos:line="35" pos:column="34">string<pos:position pos:line="35" pos:column="40"/></name></name><argument_list pos:line="35" pos:column="40">(<argument><expr><literal type="string" pos:line="35" pos:column="41">"Metadata of unknown type"<pos:position pos:line="35" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="70"/></return>
    }<pos:position pos:line="36" pos:column="6"/></block></switch>
  }<pos:position pos:line="37" pos:column="4"/></block></for>
  <return pos:line="38" pos:column="3">return <expr><name><name pos:line="38" pos:column="10">grpc<pos:position pos:line="38" pos:column="14"/></name><operator pos:line="38" pos:column="14">::<pos:position pos:line="38" pos:column="16"/></operator><name pos:line="38" pos:column="16">Status<pos:position pos:line="38" pos:column="22"/></name><operator pos:line="38" pos:column="22">::<pos:position pos:line="38" pos:column="24"/></operator><name pos:line="38" pos:column="24">OK<pos:position pos:line="38" pos:column="26"/></name></name></expr>;<pos:position pos:line="38" pos:column="27"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

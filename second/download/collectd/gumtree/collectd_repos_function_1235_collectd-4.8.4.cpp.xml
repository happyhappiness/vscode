<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1235_collectd-4.8.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">udb_query_handle_result<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">udb_query_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">q<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier><modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">column_values<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list> <comment type="block" pos:line="1" pos:column="68">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">udb_result_t<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">r<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">success<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">status<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">q<pos:position pos:line="7" pos:column="8"/></name> <operator pos:line="7" pos:column="9">==<pos:position pos:line="7" pos:column="11"/></operator> <name pos:line="7" pos:column="12">NULL<pos:position pos:line="7" pos:column="16"/></name></expr>)<pos:position pos:line="7" pos:column="17"/></condition><then pos:line="7" pos:column="17">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><operator pos:line="8" pos:column="13">-<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">EINVAL<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">)<pos:position pos:line="8" pos:column="21"/></operator></expr>;<pos:position pos:line="8" pos:column="22"/></return></block></then></if>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><operator pos:line="10" pos:column="7">(<pos:position pos:line="10" pos:column="8"/></operator><name><name pos:line="10" pos:column="8">q<pos:position pos:line="10" pos:column="9"/></name><operator pos:line="10" pos:column="9">-&gt;<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="11">column_num<pos:position pos:line="10" pos:column="21"/></name></name> <operator pos:line="10" pos:column="22">&lt;<pos:position pos:line="10" pos:column="26"/></operator> <literal type="number" pos:line="10" pos:column="24">1<pos:position pos:line="10" pos:column="25"/></literal><operator pos:line="10" pos:column="25">)<pos:position pos:line="10" pos:column="26"/></operator> <operator pos:line="10" pos:column="27">||<pos:position pos:line="10" pos:column="29"/></operator> <operator pos:line="10" pos:column="30">(<pos:position pos:line="10" pos:column="31"/></operator><name><name pos:line="10" pos:column="31">q<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">-&gt;<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="34">host<pos:position pos:line="10" pos:column="38"/></name></name> <operator pos:line="10" pos:column="39">==<pos:position pos:line="10" pos:column="41"/></operator> <name pos:line="10" pos:column="42">NULL<pos:position pos:line="10" pos:column="46"/></name><operator pos:line="10" pos:column="46">)<pos:position pos:line="10" pos:column="47"/></operator> <operator pos:line="10" pos:column="48">||<pos:position pos:line="10" pos:column="50"/></operator> <operator pos:line="10" pos:column="51">(<pos:position pos:line="10" pos:column="52"/></operator><name><name pos:line="10" pos:column="52">q<pos:position pos:line="10" pos:column="53"/></name><operator pos:line="10" pos:column="53">-&gt;<pos:position pos:line="10" pos:column="58"/></operator><name pos:line="10" pos:column="55">plugin<pos:position pos:line="10" pos:column="61"/></name></name> <operator pos:line="10" pos:column="62">==<pos:position pos:line="10" pos:column="64"/></operator> <name pos:line="10" pos:column="65">NULL<pos:position pos:line="10" pos:column="69"/></name><operator pos:line="10" pos:column="69">)<pos:position pos:line="10" pos:column="70"/></operator>
      <operator pos:line="11" pos:column="7">||<pos:position pos:line="11" pos:column="9"/></operator> <operator pos:line="11" pos:column="10">(<pos:position pos:line="11" pos:column="11"/></operator><name><name pos:line="11" pos:column="11">q<pos:position pos:line="11" pos:column="12"/></name><operator pos:line="11" pos:column="12">-&gt;<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="14">db_name<pos:position pos:line="11" pos:column="21"/></name></name> <operator pos:line="11" pos:column="22">==<pos:position pos:line="11" pos:column="24"/></operator> <name pos:line="11" pos:column="25">NULL<pos:position pos:line="11" pos:column="29"/></name><operator pos:line="11" pos:column="29">)<pos:position pos:line="11" pos:column="30"/></operator></expr>)<pos:position pos:line="11" pos:column="31"/></condition><then pos:line="11" pos:column="31">
  <block pos:line="12" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">ERROR<pos:position pos:line="13" pos:column="10"/></name> <argument_list pos:line="13" pos:column="11">(<argument><expr><literal type="string" pos:line="13" pos:column="12">"db query utils: Query `%s': Query is not prepared; "<pos:position pos:line="13" pos:column="65"/></literal>
        <literal type="string" pos:line="14" pos:column="9">"can't handle result."<pos:position pos:line="14" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="33">q<pos:position pos:line="14" pos:column="34"/></name><operator pos:line="14" pos:column="34">-&gt;<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="36">name<pos:position pos:line="14" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="42"/></expr_stmt>
    <return pos:line="15" pos:column="5">return <expr><operator pos:line="15" pos:column="12">(<pos:position pos:line="15" pos:column="13"/></operator><operator pos:line="15" pos:column="13">-<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">EINVAL<pos:position pos:line="15" pos:column="20"/></name><operator pos:line="15" pos:column="20">)<pos:position pos:line="15" pos:column="21"/></operator></expr>;<pos:position pos:line="15" pos:column="22"/></return>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

<cpp:if pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">if<pos:position pos:line="18" pos:column="4"/></cpp:directive> <expr><call><name pos:line="18" pos:column="5">defined<pos:position pos:line="18" pos:column="12"/></name><argument_list pos:line="18" pos:column="12">(<argument><expr><name pos:line="18" pos:column="13">COLLECT_DEBUG<pos:position pos:line="18" pos:column="26"/></name></expr></argument>)<pos:position pos:line="18" pos:column="27"/></argument_list></call> <operator pos:line="18" pos:column="28">&amp;&amp;<pos:position pos:line="18" pos:column="38"/></operator> <name pos:line="18" pos:column="31">COLLECT_DEBUG<pos:position pos:line="18" pos:column="44"/></name></expr></cpp:if> <comment type="block" pos:line="18" pos:column="45">/* {{{ */</comment>
  <do pos:line="19" pos:column="3">do
  <block pos:line="20" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">size_t<pos:position pos:line="21" pos:column="11"/></name></type> <name pos:line="21" pos:column="12">i<pos:position pos:line="21" pos:column="13"/></name></decl>;<pos:position pos:line="21" pos:column="14"/></decl_stmt>

    <for pos:line="23" pos:column="5">for <control pos:line="23" pos:column="9">(<init><expr><name pos:line="23" pos:column="10">i<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <literal type="number" pos:line="23" pos:column="14">0<pos:position pos:line="23" pos:column="15"/></literal></expr>;<pos:position pos:line="23" pos:column="16"/></init> <condition><expr><name pos:line="23" pos:column="17">i<pos:position pos:line="23" pos:column="18"/></name> <operator pos:line="23" pos:column="19">&lt;<pos:position pos:line="23" pos:column="23"/></operator> <name><name pos:line="23" pos:column="21">q<pos:position pos:line="23" pos:column="22"/></name><operator pos:line="23" pos:column="22">-&gt;<pos:position pos:line="23" pos:column="27"/></operator><name pos:line="23" pos:column="24">column_num<pos:position pos:line="23" pos:column="34"/></name></name></expr>;<pos:position pos:line="23" pos:column="35"/></condition> <incr><expr><name pos:line="23" pos:column="36">i<pos:position pos:line="23" pos:column="37"/></name><operator pos:line="23" pos:column="37">++<pos:position pos:line="23" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="23" pos:column="40"/></control>
    <block pos:line="24" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="25" pos:column="7">DEBUG<pos:position pos:line="25" pos:column="12"/></name> <argument_list pos:line="25" pos:column="13">(<argument><expr><literal type="string" pos:line="25" pos:column="14">"db query utils: udb_query_handle_result (%s, %s): "<pos:position pos:line="25" pos:column="66"/></literal>
          <literal type="string" pos:line="26" pos:column="11">"column[%zu] = %s;"<pos:position pos:line="26" pos:column="30"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="27" pos:column="11">q<pos:position pos:line="27" pos:column="12"/></name><operator pos:line="27" pos:column="12">-&gt;<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="14">db_name<pos:position pos:line="27" pos:column="21"/></name></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="23">q<pos:position pos:line="27" pos:column="24"/></name><operator pos:line="27" pos:column="24">-&gt;<pos:position pos:line="27" pos:column="29"/></operator><name pos:line="27" pos:column="26">name<pos:position pos:line="27" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="32">i<pos:position pos:line="27" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="35">column_values<pos:position pos:line="27" pos:column="48"/></name><index pos:line="27" pos:column="48">[<expr><name pos:line="27" pos:column="49">i<pos:position pos:line="27" pos:column="50"/></name></expr>]<pos:position pos:line="27" pos:column="51"/></index></name></expr></argument>)<pos:position pos:line="27" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></for>
  }<pos:position pos:line="29" pos:column="4"/></block> while <condition pos:line="29" pos:column="11">(<expr><literal type="number" pos:line="29" pos:column="12">0<pos:position pos:line="29" pos:column="13"/></literal></expr>)<pos:position pos:line="29" pos:column="14"/></condition>;<pos:position pos:line="29" pos:column="15"/></do>
<cpp:endif pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">endif<pos:position pos:line="30" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="30" pos:column="8">/* }}} */</comment>

  <expr_stmt><expr><name pos:line="32" pos:column="3">success<pos:position pos:line="32" pos:column="10"/></name> <operator pos:line="32" pos:column="11">=<pos:position pos:line="32" pos:column="12"/></operator> <literal type="number" pos:line="32" pos:column="13">0<pos:position pos:line="32" pos:column="14"/></literal></expr>;<pos:position pos:line="32" pos:column="15"/></expr_stmt>
  <for pos:line="33" pos:column="3">for <control pos:line="33" pos:column="7">(<init><expr><name pos:line="33" pos:column="8">r<pos:position pos:line="33" pos:column="9"/></name> <operator pos:line="33" pos:column="10">=<pos:position pos:line="33" pos:column="11"/></operator> <name><name pos:line="33" pos:column="12">q<pos:position pos:line="33" pos:column="13"/></name><operator pos:line="33" pos:column="13">-&gt;<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="15">results<pos:position pos:line="33" pos:column="22"/></name></name></expr>;<pos:position pos:line="33" pos:column="23"/></init> <condition><expr><name pos:line="33" pos:column="24">r<pos:position pos:line="33" pos:column="25"/></name> <operator pos:line="33" pos:column="26">!=<pos:position pos:line="33" pos:column="28"/></operator> <name pos:line="33" pos:column="29">NULL<pos:position pos:line="33" pos:column="33"/></name></expr>;<pos:position pos:line="33" pos:column="34"/></condition> <incr><expr><name pos:line="33" pos:column="35">r<pos:position pos:line="33" pos:column="36"/></name> <operator pos:line="33" pos:column="37">=<pos:position pos:line="33" pos:column="38"/></operator> <name><name pos:line="33" pos:column="39">r<pos:position pos:line="33" pos:column="40"/></name><operator pos:line="33" pos:column="40">-&gt;<pos:position pos:line="33" pos:column="45"/></operator><name pos:line="33" pos:column="42">next<pos:position pos:line="33" pos:column="46"/></name></name></expr></incr>)<pos:position pos:line="33" pos:column="47"/></control>
  <block pos:line="34" pos:column="3">{
    <expr_stmt><expr><name pos:line="35" pos:column="5">status<pos:position pos:line="35" pos:column="11"/></name> <operator pos:line="35" pos:column="12">=<pos:position pos:line="35" pos:column="13"/></operator> <call><name pos:line="35" pos:column="14">udb_result_handle_result<pos:position pos:line="35" pos:column="38"/></name> <argument_list pos:line="35" pos:column="39">(<argument><expr><name pos:line="35" pos:column="40">r<pos:position pos:line="35" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="43">q<pos:position pos:line="35" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="46">column_values<pos:position pos:line="35" pos:column="59"/></name></expr></argument>)<pos:position pos:line="35" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="61"/></expr_stmt>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name pos:line="36" pos:column="9">status<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">==<pos:position pos:line="36" pos:column="18"/></operator> <literal type="number" pos:line="36" pos:column="19">0<pos:position pos:line="36" pos:column="20"/></literal></expr>)<pos:position pos:line="36" pos:column="21"/></condition><then pos:line="36" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="7">success<pos:position pos:line="37" pos:column="14"/></name><operator pos:line="37" pos:column="14">++<pos:position pos:line="37" pos:column="16"/></operator></expr>;<pos:position pos:line="37" pos:column="17"/></expr_stmt></block></then></if>
  }<pos:position pos:line="38" pos:column="4"/></block></for>

  <if pos:line="40" pos:column="3">if <condition pos:line="40" pos:column="6">(<expr><name pos:line="40" pos:column="7">success<pos:position pos:line="40" pos:column="14"/></name> <operator pos:line="40" pos:column="15">==<pos:position pos:line="40" pos:column="17"/></operator> <literal type="number" pos:line="40" pos:column="18">0<pos:position pos:line="40" pos:column="19"/></literal></expr>)<pos:position pos:line="40" pos:column="20"/></condition><then pos:line="40" pos:column="20">
  <block pos:line="41" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">ERROR<pos:position pos:line="42" pos:column="10"/></name> <argument_list pos:line="42" pos:column="11">(<argument><expr><literal type="string" pos:line="42" pos:column="12">"db query utils: udb_query_handle_result (%s, %s): "<pos:position pos:line="42" pos:column="64"/></literal>
        <literal type="string" pos:line="43" pos:column="9">"All results failed."<pos:position pos:line="43" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="32">q<pos:position pos:line="43" pos:column="33"/></name><operator pos:line="43" pos:column="33">-&gt;<pos:position pos:line="43" pos:column="38"/></operator><name pos:line="43" pos:column="35">db_name<pos:position pos:line="43" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="44">q<pos:position pos:line="43" pos:column="45"/></name><operator pos:line="43" pos:column="45">-&gt;<pos:position pos:line="43" pos:column="50"/></operator><name pos:line="43" pos:column="47">name<pos:position pos:line="43" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="53"/></expr_stmt>
    <return pos:line="44" pos:column="5">return <expr><operator pos:line="44" pos:column="12">(<pos:position pos:line="44" pos:column="13"/></operator><operator pos:line="44" pos:column="13">-<pos:position pos:line="44" pos:column="14"/></operator><literal type="number" pos:line="44" pos:column="14">1<pos:position pos:line="44" pos:column="15"/></literal><operator pos:line="44" pos:column="15">)<pos:position pos:line="44" pos:column="16"/></operator></expr>;<pos:position pos:line="44" pos:column="17"/></return>
  }<pos:position pos:line="45" pos:column="4"/></block></then></if>

  <return pos:line="47" pos:column="3">return <expr><operator pos:line="47" pos:column="10">(<pos:position pos:line="47" pos:column="11"/></operator><literal type="number" pos:line="47" pos:column="11">0<pos:position pos:line="47" pos:column="12"/></literal><operator pos:line="47" pos:column="12">)<pos:position pos:line="47" pos:column="13"/></operator></expr>;<pos:position pos:line="47" pos:column="14"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_256_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">irq_submit<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">irq_name<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">derive_t<pos:position pos:line="1" pos:column="54"/></name></type> <name pos:line="1" pos:column="55">value<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list> <block pos:line="1" pos:column="62">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">value_t<pos:position pos:line="2" pos:column="10"/></name></type> <name><name pos:line="2" pos:column="11">values<pos:position pos:line="2" pos:column="17"/></name><index pos:line="2" pos:column="17">[<expr><literal type="number" pos:line="2" pos:column="18">1<pos:position pos:line="2" pos:column="19"/></literal></expr>]<pos:position pos:line="2" pos:column="20"/></index></name></decl>;<pos:position pos:line="2" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">value_list_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">vl<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">VALUE_LIST_INIT<pos:position pos:line="3" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="37"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><call><name pos:line="5" pos:column="7">ignorelist_match<pos:position pos:line="5" pos:column="23"/></name><argument_list pos:line="5" pos:column="23">(<argument><expr><name pos:line="5" pos:column="24">ignorelist<pos:position pos:line="5" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="36">irq_name<pos:position pos:line="5" pos:column="44"/></name></expr></argument>)<pos:position pos:line="5" pos:column="45"/></argument_list></call> <operator pos:line="5" pos:column="46">!=<pos:position pos:line="5" pos:column="48"/></operator> <literal type="number" pos:line="5" pos:column="49">0<pos:position pos:line="5" pos:column="50"/></literal></expr>)<pos:position pos:line="5" pos:column="51"/></condition><then pos:line="5" pos:column="51">
    <block type="pseudo"><return pos:line="6" pos:column="5">return;<pos:position pos:line="6" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="8" pos:column="3">values<pos:position pos:line="8" pos:column="9"/></name><index pos:line="8" pos:column="9">[<expr><literal type="number" pos:line="8" pos:column="10">0<pos:position pos:line="8" pos:column="11"/></literal></expr>]<pos:position pos:line="8" pos:column="12"/></index></name><operator pos:line="8" pos:column="12">.<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="13">derive<pos:position pos:line="8" pos:column="19"/></name> <operator pos:line="8" pos:column="20">=<pos:position pos:line="8" pos:column="21"/></operator> <name pos:line="8" pos:column="22">value<pos:position pos:line="8" pos:column="27"/></name></expr>;<pos:position pos:line="8" pos:column="28"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="10" pos:column="3">vl<pos:position pos:line="10" pos:column="5"/></name><operator pos:line="10" pos:column="5">.<pos:position pos:line="10" pos:column="6"/></operator><name pos:line="10" pos:column="6">values<pos:position pos:line="10" pos:column="12"/></name></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <name pos:line="10" pos:column="15">values<pos:position pos:line="10" pos:column="21"/></name></expr>;<pos:position pos:line="10" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="11" pos:column="3">vl<pos:position pos:line="11" pos:column="5"/></name><operator pos:line="11" pos:column="5">.<pos:position pos:line="11" pos:column="6"/></operator><name pos:line="11" pos:column="6">values_len<pos:position pos:line="11" pos:column="16"/></name></name> <operator pos:line="11" pos:column="17">=<pos:position pos:line="11" pos:column="18"/></operator> <literal type="number" pos:line="11" pos:column="19">1<pos:position pos:line="11" pos:column="20"/></literal></expr>;<pos:position pos:line="11" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">sstrncpy<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><name><name pos:line="12" pos:column="12">vl<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">.<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="15">host<pos:position pos:line="12" pos:column="19"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="21">hostname_g<pos:position pos:line="12" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="33">sizeof<argument_list pos:line="12" pos:column="39">(<argument><expr><name><name pos:line="12" pos:column="40">vl<pos:position pos:line="12" pos:column="42"/></name><operator pos:line="12" pos:column="42">.<pos:position pos:line="12" pos:column="43"/></operator><name pos:line="12" pos:column="43">host<pos:position pos:line="12" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">sstrncpy<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><name><name pos:line="13" pos:column="12">vl<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">.<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="15">plugin<pos:position pos:line="13" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="23">"irq"<pos:position pos:line="13" pos:column="28"/></literal></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="30">sizeof<argument_list pos:line="13" pos:column="36">(<argument><expr><name><name pos:line="13" pos:column="37">vl<pos:position pos:line="13" pos:column="39"/></name><operator pos:line="13" pos:column="39">.<pos:position pos:line="13" pos:column="40"/></operator><name pos:line="13" pos:column="40">plugin<pos:position pos:line="13" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="14" pos:column="3">sstrncpy<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><name><name pos:line="14" pos:column="12">vl<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">.<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="15">type<pos:position pos:line="14" pos:column="19"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="21">"irq"<pos:position pos:line="14" pos:column="26"/></literal></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="28">sizeof<argument_list pos:line="14" pos:column="34">(<argument><expr><name><name pos:line="14" pos:column="35">vl<pos:position pos:line="14" pos:column="37"/></name><operator pos:line="14" pos:column="37">.<pos:position pos:line="14" pos:column="38"/></operator><name pos:line="14" pos:column="38">type<pos:position pos:line="14" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="15" pos:column="3">sstrncpy<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><name><name pos:line="15" pos:column="12">vl<pos:position pos:line="15" pos:column="14"/></name><operator pos:line="15" pos:column="14">.<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="15">type_instance<pos:position pos:line="15" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="30">irq_name<pos:position pos:line="15" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="40">sizeof<argument_list pos:line="15" pos:column="46">(<argument><expr><name><name pos:line="15" pos:column="47">vl<pos:position pos:line="15" pos:column="49"/></name><operator pos:line="15" pos:column="49">.<pos:position pos:line="15" pos:column="50"/></operator><name pos:line="15" pos:column="50">type_instance<pos:position pos:line="15" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="66"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">plugin_dispatch_values<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><operator pos:line="17" pos:column="26">&amp;<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="27">vl<pos:position pos:line="17" pos:column="29"/></name></expr></argument>)<pos:position pos:line="17" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="31"/></expr_stmt>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

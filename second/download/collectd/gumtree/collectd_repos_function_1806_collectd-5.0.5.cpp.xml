<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1806_collectd-5.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">read_file<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">path<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">FILE<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">fh<pos:position pos:line="3" pos:column="11"/></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">key_buffer<pos:position pos:line="4" pos:column="18"/></name><index pos:line="4" pos:column="18">[<expr><literal type="number" pos:line="4" pos:column="19">4096<pos:position pos:line="4" pos:column="23"/></literal></expr>]<pos:position pos:line="4" pos:column="24"/></index></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">value_buffer<pos:position pos:line="5" pos:column="20"/></name><index pos:line="5" pos:column="20">[<expr><literal type="number" pos:line="5" pos:column="21">4096<pos:position pos:line="5" pos:column="25"/></literal></expr>]<pos:position pos:line="5" pos:column="26"/></index></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">key_ptr<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">value_ptr<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name><name pos:line="8" pos:column="9">key_fields<pos:position pos:line="8" pos:column="19"/></name><index pos:line="8" pos:column="19">[<expr><literal type="number" pos:line="8" pos:column="20">256<pos:position pos:line="8" pos:column="23"/></literal></expr>]<pos:position pos:line="8" pos:column="24"/></index></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name><name pos:line="9" pos:column="9">value_fields<pos:position pos:line="9" pos:column="21"/></name><index pos:line="9" pos:column="21">[<expr><literal type="number" pos:line="9" pos:column="22">256<pos:position pos:line="9" pos:column="25"/></literal></expr>]<pos:position pos:line="9" pos:column="26"/></index></name></decl>;<pos:position pos:line="9" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">key_fields_num<pos:position pos:line="10" pos:column="21"/></name></decl>;<pos:position pos:line="10" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">value_fields_num<pos:position pos:line="11" pos:column="23"/></name></decl>;<pos:position pos:line="11" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type> <name pos:line="12" pos:column="7">status<pos:position pos:line="12" pos:column="13"/></name></decl>;<pos:position pos:line="12" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">int<pos:position pos:line="13" pos:column="6"/></name></type> <name pos:line="13" pos:column="7">i<pos:position pos:line="13" pos:column="8"/></name></decl>;<pos:position pos:line="13" pos:column="9"/></decl_stmt>

  <expr_stmt><expr><name pos:line="15" pos:column="3">fh<pos:position pos:line="15" pos:column="5"/></name> <operator pos:line="15" pos:column="6">=<pos:position pos:line="15" pos:column="7"/></operator> <call><name pos:line="15" pos:column="8">fopen<pos:position pos:line="15" pos:column="13"/></name> <argument_list pos:line="15" pos:column="14">(<argument><expr><name pos:line="15" pos:column="15">path<pos:position pos:line="15" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="21">"r"<pos:position pos:line="15" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="26"/></expr_stmt>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">fh<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">==<pos:position pos:line="16" pos:column="12"/></operator> <name pos:line="16" pos:column="13">NULL<pos:position pos:line="16" pos:column="17"/></name></expr>)<pos:position pos:line="16" pos:column="18"/></condition><then pos:line="16" pos:column="18">
  <block pos:line="17" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">ERROR<pos:position pos:line="18" pos:column="10"/></name> <argument_list pos:line="18" pos:column="11">(<argument><expr><literal type="string" pos:line="18" pos:column="12">"protocols plugin: fopen (%s) failed: %s."<pos:position pos:line="18" pos:column="54"/></literal></expr></argument>,
        <argument><expr><name pos:line="19" pos:column="9">path<pos:position pos:line="19" pos:column="13"/></name></expr></argument>, <argument><expr><call><name pos:line="19" pos:column="15">sstrerror<pos:position pos:line="19" pos:column="24"/></name> <argument_list pos:line="19" pos:column="25">(<argument><expr><name pos:line="19" pos:column="26">errno<pos:position pos:line="19" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="33">key_buffer<pos:position pos:line="19" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="45">sizeof <argument_list pos:line="19" pos:column="52">(<argument><expr><name pos:line="19" pos:column="53">key_buffer<pos:position pos:line="19" pos:column="63"/></name></expr></argument>)<pos:position pos:line="19" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="67"/></expr_stmt>
    <return pos:line="20" pos:column="5">return <expr><operator pos:line="20" pos:column="12">(<pos:position pos:line="20" pos:column="13"/></operator><operator pos:line="20" pos:column="13">-<pos:position pos:line="20" pos:column="14"/></operator><literal type="number" pos:line="20" pos:column="14">1<pos:position pos:line="20" pos:column="15"/></literal><operator pos:line="20" pos:column="15">)<pos:position pos:line="20" pos:column="16"/></operator></expr>;<pos:position pos:line="20" pos:column="17"/></return>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="23" pos:column="3">status<pos:position pos:line="23" pos:column="9"/></name> <operator pos:line="23" pos:column="10">=<pos:position pos:line="23" pos:column="11"/></operator> <operator pos:line="23" pos:column="12">-<pos:position pos:line="23" pos:column="13"/></operator><literal type="number" pos:line="23" pos:column="13">1<pos:position pos:line="23" pos:column="14"/></literal></expr>;<pos:position pos:line="23" pos:column="15"/></expr_stmt>
  <while pos:line="24" pos:column="3">while <condition pos:line="24" pos:column="9">(<expr><literal type="number" pos:line="24" pos:column="10">42<pos:position pos:line="24" pos:column="12"/></literal></expr>)<pos:position pos:line="24" pos:column="13"/></condition>
  <block pos:line="25" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">clearerr<pos:position pos:line="26" pos:column="13"/></name> <argument_list pos:line="26" pos:column="14">(<argument><expr><name pos:line="26" pos:column="15">fh<pos:position pos:line="26" pos:column="17"/></name></expr></argument>)<pos:position pos:line="26" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="27" pos:column="5">key_ptr<pos:position pos:line="27" pos:column="12"/></name> <operator pos:line="27" pos:column="13">=<pos:position pos:line="27" pos:column="14"/></operator> <call><name pos:line="27" pos:column="15">fgets<pos:position pos:line="27" pos:column="20"/></name> <argument_list pos:line="27" pos:column="21">(<argument><expr><name pos:line="27" pos:column="22">key_buffer<pos:position pos:line="27" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="34">sizeof <argument_list pos:line="27" pos:column="41">(<argument><expr><name pos:line="27" pos:column="42">key_buffer<pos:position pos:line="27" pos:column="52"/></name></expr></argument>)<pos:position pos:line="27" pos:column="53"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="27" pos:column="55">fh<pos:position pos:line="27" pos:column="57"/></name></expr></argument>)<pos:position pos:line="27" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="59"/></expr_stmt>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name pos:line="28" pos:column="9">key_ptr<pos:position pos:line="28" pos:column="16"/></name> <operator pos:line="28" pos:column="17">==<pos:position pos:line="28" pos:column="19"/></operator> <name pos:line="28" pos:column="20">NULL<pos:position pos:line="28" pos:column="24"/></name></expr>)<pos:position pos:line="28" pos:column="25"/></condition><then pos:line="28" pos:column="25">
    <block pos:line="29" pos:column="5">{
      <if pos:line="30" pos:column="7">if <condition pos:line="30" pos:column="10">(<expr><call><name pos:line="30" pos:column="11">feof<pos:position pos:line="30" pos:column="15"/></name> <argument_list pos:line="30" pos:column="16">(<argument><expr><name pos:line="30" pos:column="17">fh<pos:position pos:line="30" pos:column="19"/></name></expr></argument>)<pos:position pos:line="30" pos:column="20"/></argument_list></call> <operator pos:line="30" pos:column="21">!=<pos:position pos:line="30" pos:column="23"/></operator> <literal type="number" pos:line="30" pos:column="24">0<pos:position pos:line="30" pos:column="25"/></literal></expr>)<pos:position pos:line="30" pos:column="26"/></condition><then pos:line="30" pos:column="26">
      <block pos:line="31" pos:column="7">{
        <expr_stmt><expr><name pos:line="32" pos:column="9">status<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">=<pos:position pos:line="32" pos:column="17"/></operator> <literal type="number" pos:line="32" pos:column="18">0<pos:position pos:line="32" pos:column="19"/></literal></expr>;<pos:position pos:line="32" pos:column="20"/></expr_stmt>
        <break pos:line="33" pos:column="9">break;<pos:position pos:line="33" pos:column="15"/></break>
      }<pos:position pos:line="34" pos:column="8"/></block></then>
      <elseif pos:line="35" pos:column="7">else <if pos:line="35" pos:column="12">if <condition pos:line="35" pos:column="15">(<expr><call><name pos:line="35" pos:column="16">ferror<pos:position pos:line="35" pos:column="22"/></name> <argument_list pos:line="35" pos:column="23">(<argument><expr><name pos:line="35" pos:column="24">fh<pos:position pos:line="35" pos:column="26"/></name></expr></argument>)<pos:position pos:line="35" pos:column="27"/></argument_list></call> <operator pos:line="35" pos:column="28">!=<pos:position pos:line="35" pos:column="30"/></operator> <literal type="number" pos:line="35" pos:column="31">0<pos:position pos:line="35" pos:column="32"/></literal></expr>)<pos:position pos:line="35" pos:column="33"/></condition><then pos:line="35" pos:column="33">
      <block pos:line="36" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="37" pos:column="9">ERROR<pos:position pos:line="37" pos:column="14"/></name> <argument_list pos:line="37" pos:column="15">(<argument><expr><literal type="string" pos:line="37" pos:column="16">"protocols plugin: Reading from %s failed."<pos:position pos:line="37" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="61">path<pos:position pos:line="37" pos:column="65"/></name></expr></argument>)<pos:position pos:line="37" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="67"/></expr_stmt>
        <break pos:line="38" pos:column="9">break;<pos:position pos:line="38" pos:column="15"/></break>
      }<pos:position pos:line="39" pos:column="8"/></block></then></if></elseif>
      <else pos:line="40" pos:column="7">else
      <block pos:line="41" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="42" pos:column="9">ERROR<pos:position pos:line="42" pos:column="14"/></name> <argument_list pos:line="42" pos:column="15">(<argument><expr><literal type="string" pos:line="42" pos:column="16">"protocols plugin: fgets failed for an unknown reason."<pos:position pos:line="42" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="73"/></expr_stmt>
        <break pos:line="43" pos:column="9">break;<pos:position pos:line="43" pos:column="15"/></break>
      }<pos:position pos:line="44" pos:column="8"/></block></else></if>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if> <comment type="block" pos:line="45" pos:column="7">/* if (key_ptr == NULL) */</comment>

    <expr_stmt><expr><name pos:line="47" pos:column="5">value_ptr<pos:position pos:line="47" pos:column="14"/></name> <operator pos:line="47" pos:column="15">=<pos:position pos:line="47" pos:column="16"/></operator> <call><name pos:line="47" pos:column="17">fgets<pos:position pos:line="47" pos:column="22"/></name> <argument_list pos:line="47" pos:column="23">(<argument><expr><name pos:line="47" pos:column="24">value_buffer<pos:position pos:line="47" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="47" pos:column="38">sizeof <argument_list pos:line="47" pos:column="45">(<argument><expr><name pos:line="47" pos:column="46">value_buffer<pos:position pos:line="47" pos:column="58"/></name></expr></argument>)<pos:position pos:line="47" pos:column="59"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="47" pos:column="61">fh<pos:position pos:line="47" pos:column="63"/></name></expr></argument>)<pos:position pos:line="47" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="65"/></expr_stmt>
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><name pos:line="48" pos:column="9">value_ptr<pos:position pos:line="48" pos:column="18"/></name> <operator pos:line="48" pos:column="19">==<pos:position pos:line="48" pos:column="21"/></operator> <name pos:line="48" pos:column="22">NULL<pos:position pos:line="48" pos:column="26"/></name></expr>)<pos:position pos:line="48" pos:column="27"/></condition><then pos:line="48" pos:column="27">
    <block pos:line="49" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="50" pos:column="7">ERROR<pos:position pos:line="50" pos:column="12"/></name> <argument_list pos:line="50" pos:column="13">(<argument><expr><literal type="string" pos:line="50" pos:column="14">"protocols plugin: read_file (%s): Could not read values line."<pos:position pos:line="50" pos:column="77"/></literal></expr></argument>,
          <argument><expr><name pos:line="51" pos:column="11">path<pos:position pos:line="51" pos:column="15"/></name></expr></argument>)<pos:position pos:line="51" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="17"/></expr_stmt>
      <break pos:line="52" pos:column="7">break;<pos:position pos:line="52" pos:column="13"/></break>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="55" pos:column="5">key_ptr<pos:position pos:line="55" pos:column="12"/></name> <operator pos:line="55" pos:column="13">=<pos:position pos:line="55" pos:column="14"/></operator> <call><name pos:line="55" pos:column="15">strchr<pos:position pos:line="55" pos:column="21"/></name> <argument_list pos:line="55" pos:column="22">(<argument><expr><name pos:line="55" pos:column="23">key_buffer<pos:position pos:line="55" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="55" pos:column="35">':'<pos:position pos:line="55" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="40"/></expr_stmt>
    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><name pos:line="56" pos:column="9">key_ptr<pos:position pos:line="56" pos:column="16"/></name> <operator pos:line="56" pos:column="17">==<pos:position pos:line="56" pos:column="19"/></operator> <name pos:line="56" pos:column="20">NULL<pos:position pos:line="56" pos:column="24"/></name></expr>)<pos:position pos:line="56" pos:column="25"/></condition><then pos:line="56" pos:column="25">
    <block pos:line="57" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="58" pos:column="7">ERROR<pos:position pos:line="58" pos:column="12"/></name> <argument_list pos:line="58" pos:column="13">(<argument><expr><literal type="string" pos:line="58" pos:column="14">"protocols plugin: Could not find protocol name in keys line."<pos:position pos:line="58" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="78"/></expr_stmt>
      <break pos:line="59" pos:column="7">break;<pos:position pos:line="59" pos:column="13"/></break>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="61" pos:column="5">*<pos:position pos:line="61" pos:column="6"/></operator><name pos:line="61" pos:column="6">key_ptr<pos:position pos:line="61" pos:column="13"/></name> <operator pos:line="61" pos:column="14">=<pos:position pos:line="61" pos:column="15"/></operator> <literal type="number" pos:line="61" pos:column="16">0<pos:position pos:line="61" pos:column="17"/></literal></expr>;<pos:position pos:line="61" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name pos:line="62" pos:column="5">key_ptr<pos:position pos:line="62" pos:column="12"/></name><operator pos:line="62" pos:column="12">++<pos:position pos:line="62" pos:column="14"/></operator></expr>;<pos:position pos:line="62" pos:column="15"/></expr_stmt>

    <expr_stmt><expr><name pos:line="64" pos:column="5">value_ptr<pos:position pos:line="64" pos:column="14"/></name> <operator pos:line="64" pos:column="15">=<pos:position pos:line="64" pos:column="16"/></operator> <call><name pos:line="64" pos:column="17">strchr<pos:position pos:line="64" pos:column="23"/></name> <argument_list pos:line="64" pos:column="24">(<argument><expr><name pos:line="64" pos:column="25">value_buffer<pos:position pos:line="64" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="64" pos:column="39">':'<pos:position pos:line="64" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="44"/></expr_stmt>
    <if pos:line="65" pos:column="5">if <condition pos:line="65" pos:column="8">(<expr><name pos:line="65" pos:column="9">value_ptr<pos:position pos:line="65" pos:column="18"/></name> <operator pos:line="65" pos:column="19">==<pos:position pos:line="65" pos:column="21"/></operator> <name pos:line="65" pos:column="22">NULL<pos:position pos:line="65" pos:column="26"/></name></expr>)<pos:position pos:line="65" pos:column="27"/></condition><then pos:line="65" pos:column="27">
    <block pos:line="66" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="67" pos:column="7">ERROR<pos:position pos:line="67" pos:column="12"/></name> <argument_list pos:line="67" pos:column="13">(<argument><expr><literal type="string" pos:line="67" pos:column="14">"protocols plugin: Could not find protocol name "<pos:position pos:line="67" pos:column="63"/></literal>
          <literal type="string" pos:line="68" pos:column="11">"in values line."<pos:position pos:line="68" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="30"/></expr_stmt>
      <break pos:line="69" pos:column="7">break;<pos:position pos:line="69" pos:column="13"/></break>
    }<pos:position pos:line="70" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="71" pos:column="5">*<pos:position pos:line="71" pos:column="6"/></operator><name pos:line="71" pos:column="6">value_ptr<pos:position pos:line="71" pos:column="15"/></name> <operator pos:line="71" pos:column="16">=<pos:position pos:line="71" pos:column="17"/></operator> <literal type="number" pos:line="71" pos:column="18">0<pos:position pos:line="71" pos:column="19"/></literal></expr>;<pos:position pos:line="71" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="72" pos:column="5">value_ptr<pos:position pos:line="72" pos:column="14"/></name><operator pos:line="72" pos:column="14">++<pos:position pos:line="72" pos:column="16"/></operator></expr>;<pos:position pos:line="72" pos:column="17"/></expr_stmt>

    <if pos:line="74" pos:column="5">if <condition pos:line="74" pos:column="8">(<expr><call><name pos:line="74" pos:column="9">strcmp<pos:position pos:line="74" pos:column="15"/></name> <argument_list pos:line="74" pos:column="16">(<argument><expr><name pos:line="74" pos:column="17">key_buffer<pos:position pos:line="74" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="29">value_buffer<pos:position pos:line="74" pos:column="41"/></name></expr></argument>)<pos:position pos:line="74" pos:column="42"/></argument_list></call> <operator pos:line="74" pos:column="43">!=<pos:position pos:line="74" pos:column="45"/></operator> <literal type="number" pos:line="74" pos:column="46">0<pos:position pos:line="74" pos:column="47"/></literal></expr>)<pos:position pos:line="74" pos:column="48"/></condition><then pos:line="74" pos:column="48">
    <block pos:line="75" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="76" pos:column="7">ERROR<pos:position pos:line="76" pos:column="12"/></name> <argument_list pos:line="76" pos:column="13">(<argument><expr><literal type="string" pos:line="76" pos:column="14">"protocols plugin: Protocol names in keys and values lines "<pos:position pos:line="76" pos:column="74"/></literal>
          <literal type="string" pos:line="77" pos:column="11">"don't match: `%s' vs. `%s'."<pos:position pos:line="77" pos:column="40"/></literal></expr></argument>,
          <argument><expr><name pos:line="78" pos:column="11">key_buffer<pos:position pos:line="78" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="23">value_buffer<pos:position pos:line="78" pos:column="35"/></name></expr></argument>)<pos:position pos:line="78" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="37"/></expr_stmt>
      <break pos:line="79" pos:column="7">break;<pos:position pos:line="79" pos:column="13"/></break>
    }<pos:position pos:line="80" pos:column="6"/></block></then></if>


    <expr_stmt><expr><name pos:line="83" pos:column="5">key_fields_num<pos:position pos:line="83" pos:column="19"/></name> <operator pos:line="83" pos:column="20">=<pos:position pos:line="83" pos:column="21"/></operator> <call><name pos:line="83" pos:column="22">strsplit<pos:position pos:line="83" pos:column="30"/></name> <argument_list pos:line="83" pos:column="31">(<argument><expr><name pos:line="83" pos:column="32">key_ptr<pos:position pos:line="83" pos:column="39"/></name></expr></argument>,
        <argument><expr><name pos:line="84" pos:column="9">key_fields<pos:position pos:line="84" pos:column="19"/></name></expr></argument>, <argument><expr><call><name pos:line="84" pos:column="21">STATIC_ARRAY_SIZE<pos:position pos:line="84" pos:column="38"/></name> <argument_list pos:line="84" pos:column="39">(<argument><expr><name pos:line="84" pos:column="40">key_fields<pos:position pos:line="84" pos:column="50"/></name></expr></argument>)<pos:position pos:line="84" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="84" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><name pos:line="85" pos:column="5">value_fields_num<pos:position pos:line="85" pos:column="21"/></name> <operator pos:line="85" pos:column="22">=<pos:position pos:line="85" pos:column="23"/></operator> <call><name pos:line="85" pos:column="24">strsplit<pos:position pos:line="85" pos:column="32"/></name> <argument_list pos:line="85" pos:column="33">(<argument><expr><name pos:line="85" pos:column="34">value_ptr<pos:position pos:line="85" pos:column="43"/></name></expr></argument>,
        <argument><expr><name pos:line="86" pos:column="9">value_fields<pos:position pos:line="86" pos:column="21"/></name></expr></argument>, <argument><expr><call><name pos:line="86" pos:column="23">STATIC_ARRAY_SIZE<pos:position pos:line="86" pos:column="40"/></name> <argument_list pos:line="86" pos:column="41">(<argument><expr><name pos:line="86" pos:column="42">value_fields<pos:position pos:line="86" pos:column="54"/></name></expr></argument>)<pos:position pos:line="86" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="86" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="57"/></expr_stmt>

    <if pos:line="88" pos:column="5">if <condition pos:line="88" pos:column="8">(<expr><name pos:line="88" pos:column="9">key_fields_num<pos:position pos:line="88" pos:column="23"/></name> <operator pos:line="88" pos:column="24">!=<pos:position pos:line="88" pos:column="26"/></operator> <name pos:line="88" pos:column="27">value_fields_num<pos:position pos:line="88" pos:column="43"/></name></expr>)<pos:position pos:line="88" pos:column="44"/></condition><then pos:line="88" pos:column="44">
    <block pos:line="89" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="90" pos:column="7">ERROR<pos:position pos:line="90" pos:column="12"/></name> <argument_list pos:line="90" pos:column="13">(<argument><expr><literal type="string" pos:line="90" pos:column="14">"protocols plugin: Number of fields in keys and values lines "<pos:position pos:line="90" pos:column="76"/></literal>
          <literal type="string" pos:line="91" pos:column="11">"don't match: %i vs %i."<pos:position pos:line="91" pos:column="35"/></literal></expr></argument>,
          <argument><expr><name pos:line="92" pos:column="11">key_fields_num<pos:position pos:line="92" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="27">value_fields_num<pos:position pos:line="92" pos:column="43"/></name></expr></argument>)<pos:position pos:line="92" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="45"/></expr_stmt>
      <break pos:line="93" pos:column="7">break;<pos:position pos:line="93" pos:column="13"/></break>
    }<pos:position pos:line="94" pos:column="6"/></block></then></if>

    <for pos:line="96" pos:column="5">for <control pos:line="96" pos:column="9">(<init><expr><name pos:line="96" pos:column="10">i<pos:position pos:line="96" pos:column="11"/></name> <operator pos:line="96" pos:column="12">=<pos:position pos:line="96" pos:column="13"/></operator> <literal type="number" pos:line="96" pos:column="14">0<pos:position pos:line="96" pos:column="15"/></literal></expr>;<pos:position pos:line="96" pos:column="16"/></init> <condition><expr><name pos:line="96" pos:column="17">i<pos:position pos:line="96" pos:column="18"/></name> <operator pos:line="96" pos:column="19">&lt;<pos:position pos:line="96" pos:column="23"/></operator> <name pos:line="96" pos:column="21">key_fields_num<pos:position pos:line="96" pos:column="35"/></name></expr>;<pos:position pos:line="96" pos:column="36"/></condition> <incr><expr><name pos:line="96" pos:column="37">i<pos:position pos:line="96" pos:column="38"/></name><operator pos:line="96" pos:column="38">++<pos:position pos:line="96" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="96" pos:column="41"/></control>
    <block pos:line="97" pos:column="5">{
      <if pos:line="98" pos:column="7">if <condition pos:line="98" pos:column="10">(<expr><name pos:line="98" pos:column="11">values_list<pos:position pos:line="98" pos:column="22"/></name> <operator pos:line="98" pos:column="23">!=<pos:position pos:line="98" pos:column="25"/></operator> <name pos:line="98" pos:column="26">NULL<pos:position pos:line="98" pos:column="30"/></name></expr>)<pos:position pos:line="98" pos:column="31"/></condition><then pos:line="98" pos:column="31">
      <block pos:line="99" pos:column="7">{
        <decl_stmt><decl><type><name pos:line="100" pos:column="9">char<pos:position pos:line="100" pos:column="13"/></name></type> <name><name pos:line="100" pos:column="14">match_name<pos:position pos:line="100" pos:column="24"/></name><index pos:line="100" pos:column="24">[<expr><literal type="number" pos:line="100" pos:column="25">2<pos:position pos:line="100" pos:column="26"/></literal> <operator pos:line="100" pos:column="27">*<pos:position pos:line="100" pos:column="28"/></operator> <name pos:line="100" pos:column="29">DATA_MAX_NAME_LEN<pos:position pos:line="100" pos:column="46"/></name></expr>]<pos:position pos:line="100" pos:column="47"/></index></name></decl>;<pos:position pos:line="100" pos:column="48"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="102" pos:column="9">ssnprintf<pos:position pos:line="102" pos:column="18"/></name> <argument_list pos:line="102" pos:column="19">(<argument><expr><name pos:line="102" pos:column="20">match_name<pos:position pos:line="102" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="102" pos:column="32">sizeof <argument_list pos:line="102" pos:column="39">(<argument><expr><name pos:line="102" pos:column="40">match_name<pos:position pos:line="102" pos:column="50"/></name></expr></argument>)<pos:position pos:line="102" pos:column="51"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="53">"%s:%s"<pos:position pos:line="102" pos:column="60"/></literal></expr></argument>,
            <argument><expr><name pos:line="103" pos:column="13">key_buffer<pos:position pos:line="103" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="103" pos:column="25">key_fields<pos:position pos:line="103" pos:column="35"/></name><index pos:line="103" pos:column="35">[<expr><name pos:line="103" pos:column="36">i<pos:position pos:line="103" pos:column="37"/></name></expr>]<pos:position pos:line="103" pos:column="38"/></index></name></expr></argument>)<pos:position pos:line="103" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="40"/></expr_stmt>

        <if pos:line="105" pos:column="9">if <condition pos:line="105" pos:column="12">(<expr><call><name pos:line="105" pos:column="13">ignorelist_match<pos:position pos:line="105" pos:column="29"/></name> <argument_list pos:line="105" pos:column="30">(<argument><expr><name pos:line="105" pos:column="31">values_list<pos:position pos:line="105" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="44">match_name<pos:position pos:line="105" pos:column="54"/></name></expr></argument>)<pos:position pos:line="105" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="105" pos:column="56"/></condition><then pos:line="105" pos:column="56">
          <block type="pseudo"><continue pos:line="106" pos:column="11">continue;<pos:position pos:line="106" pos:column="20"/></continue></block></then></if>
      }<pos:position pos:line="107" pos:column="8"/></block></then></if> <comment type="block" pos:line="107" pos:column="9">/* if (values_list != NULL) */</comment>

      <expr_stmt><expr><call><name pos:line="109" pos:column="7">submit<pos:position pos:line="109" pos:column="13"/></name> <argument_list pos:line="109" pos:column="14">(<argument><expr><name pos:line="109" pos:column="15">key_buffer<pos:position pos:line="109" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="109" pos:column="27">key_fields<pos:position pos:line="109" pos:column="37"/></name><index pos:line="109" pos:column="37">[<expr><name pos:line="109" pos:column="38">i<pos:position pos:line="109" pos:column="39"/></name></expr>]<pos:position pos:line="109" pos:column="40"/></index></name></expr></argument>, <argument><expr><name><name pos:line="109" pos:column="42">value_fields<pos:position pos:line="109" pos:column="54"/></name><index pos:line="109" pos:column="54">[<expr><name pos:line="109" pos:column="55">i<pos:position pos:line="109" pos:column="56"/></name></expr>]<pos:position pos:line="109" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="109" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="110" pos:column="6"/></block></for> <comment type="block" pos:line="110" pos:column="7">/* for (i = 0; i &lt; key_fields_num; i++) */</comment>
  }<pos:position pos:line="111" pos:column="4"/></block></while> <comment type="block" pos:line="111" pos:column="5">/* while (42) */</comment>

  <expr_stmt><expr><call><name pos:line="113" pos:column="3">fclose<pos:position pos:line="113" pos:column="9"/></name> <argument_list pos:line="113" pos:column="10">(<argument><expr><name pos:line="113" pos:column="11">fh<pos:position pos:line="113" pos:column="13"/></name></expr></argument>)<pos:position pos:line="113" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="15"/></expr_stmt>

  <return pos:line="115" pos:column="3">return <expr><operator pos:line="115" pos:column="10">(<pos:position pos:line="115" pos:column="11"/></operator><name pos:line="115" pos:column="11">status<pos:position pos:line="115" pos:column="17"/></name><operator pos:line="115" pos:column="17">)<pos:position pos:line="115" pos:column="18"/></operator></expr>;<pos:position pos:line="115" pos:column="19"/></return>
}<pos:position pos:line="116" pos:column="2"/></block></function></unit>

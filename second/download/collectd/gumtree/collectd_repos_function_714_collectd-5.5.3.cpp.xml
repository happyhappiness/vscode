<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_714_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">submit6_chain<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">( <parameter><decl><type><name pos:line="1" pos:column="28">ip6tc_handle_t<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">handle<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">ip_chain_t<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">chain<pos:position pos:line="1" pos:column="69"/></name></decl></parameter> )<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name><name pos:line="3" pos:column="11">struct<pos:position pos:line="3" pos:column="17"/></name> <name pos:line="3" pos:column="18">ip6t_entry<pos:position pos:line="3" pos:column="28"/></name></name> <modifier pos:line="3" pos:column="29">*<pos:position pos:line="3" pos:column="30"/></modifier></type><name pos:line="3" pos:column="30">entry<pos:position pos:line="3" pos:column="35"/></name></decl>;<pos:position pos:line="3" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">rule_num<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>

    <comment type="block" pos:line="6" pos:column="5">/* Find first rule for chain and use the iterate macro */</comment>
    <expr_stmt><expr><name pos:line="7" pos:column="5">entry<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">=<pos:position pos:line="7" pos:column="12"/></operator> <call><name pos:line="7" pos:column="13">ip6tc_first_rule<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">( <argument><expr><name><name pos:line="7" pos:column="31">chain<pos:position pos:line="7" pos:column="36"/></name><operator pos:line="7" pos:column="36">-&gt;<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="38">chain<pos:position pos:line="7" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="45">handle<pos:position pos:line="7" pos:column="51"/></name></expr></argument> )<pos:position pos:line="7" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="54"/></expr_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">entry<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">==<pos:position pos:line="8" pos:column="17"/></operator> <name pos:line="8" pos:column="18">NULL<pos:position pos:line="8" pos:column="22"/></name></expr>)<pos:position pos:line="8" pos:column="23"/></condition><then pos:line="8" pos:column="23">
    <block pos:line="9" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">DEBUG<pos:position pos:line="10" pos:column="14"/></name> <argument_list pos:line="10" pos:column="15">(<argument><expr><literal type="string" pos:line="10" pos:column="16">"ip6tc_first_rule failed: %s"<pos:position pos:line="10" pos:column="45"/></literal></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="47">ip6tc_strerror<pos:position pos:line="10" pos:column="61"/></name> <argument_list pos:line="10" pos:column="62">(<argument><expr><name pos:line="10" pos:column="63">errno<pos:position pos:line="10" pos:column="68"/></name></expr></argument>)<pos:position pos:line="10" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="71"/></expr_stmt>
        <return pos:line="11" pos:column="9">return;<pos:position pos:line="11" pos:column="16"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="14" pos:column="5">rule_num<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <literal type="number" pos:line="14" pos:column="16">1<pos:position pos:line="14" pos:column="17"/></literal></expr>;<pos:position pos:line="14" pos:column="18"/></expr_stmt>
    <while pos:line="15" pos:column="5">while <condition pos:line="15" pos:column="11">(<expr><name pos:line="15" pos:column="12">entry<pos:position pos:line="15" pos:column="17"/></name></expr>)<pos:position pos:line="15" pos:column="18"/></condition>
    <block pos:line="16" pos:column="5">{
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name><name pos:line="17" pos:column="13">chain<pos:position pos:line="17" pos:column="18"/></name><operator pos:line="17" pos:column="18">-&gt;<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="20">rule_type<pos:position pos:line="17" pos:column="29"/></name></name> <operator pos:line="17" pos:column="30">==<pos:position pos:line="17" pos:column="32"/></operator> <name pos:line="17" pos:column="33">RTYPE_NUM<pos:position pos:line="17" pos:column="42"/></name></expr>)<pos:position pos:line="17" pos:column="43"/></condition><then pos:line="17" pos:column="43">
        <block pos:line="18" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="19" pos:column="13">submit6_match<pos:position pos:line="19" pos:column="26"/></name> <argument_list pos:line="19" pos:column="27">(<argument><expr><name pos:line="19" pos:column="28">NULL<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="34">entry<pos:position pos:line="19" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="41">chain<pos:position pos:line="19" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="48">rule_num<pos:position pos:line="19" pos:column="56"/></name></expr></argument>)<pos:position pos:line="19" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="58"/></expr_stmt>
        }<pos:position pos:line="20" pos:column="10"/></block></then>
        <else pos:line="21" pos:column="9">else
        <block pos:line="22" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="23" pos:column="13">IP6T_MATCH_ITERATE<pos:position pos:line="23" pos:column="31"/></name><argument_list pos:line="23" pos:column="31">( <argument><expr><name pos:line="23" pos:column="33">entry<pos:position pos:line="23" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="40">submit6_match<pos:position pos:line="23" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="55">entry<pos:position pos:line="23" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="62">chain<pos:position pos:line="23" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="69">rule_num<pos:position pos:line="23" pos:column="77"/></name></expr></argument> )<pos:position pos:line="23" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="80"/></expr_stmt>
        }<pos:position pos:line="24" pos:column="10"/></block></else></if>

        <expr_stmt><expr><name pos:line="26" pos:column="9">entry<pos:position pos:line="26" pos:column="14"/></name> <operator pos:line="26" pos:column="15">=<pos:position pos:line="26" pos:column="16"/></operator> <call><name pos:line="26" pos:column="17">ip6tc_next_rule<pos:position pos:line="26" pos:column="32"/></name><argument_list pos:line="26" pos:column="32">( <argument><expr><name pos:line="26" pos:column="34">entry<pos:position pos:line="26" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="41">handle<pos:position pos:line="26" pos:column="47"/></name></expr></argument> )<pos:position pos:line="26" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name pos:line="27" pos:column="9">rule_num<pos:position pos:line="27" pos:column="17"/></name><operator pos:line="27" pos:column="17">++<pos:position pos:line="27" pos:column="19"/></operator></expr>;<pos:position pos:line="27" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></while> <comment type="block" pos:line="28" pos:column="7">/* while (entry) */</comment>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1713_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">size_t<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">cx_curl_callback<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">void<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">buf<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="43">/* {{{ */</comment>
                               <parameter><decl><type><name pos:line="2" pos:column="32">size_t<pos:position pos:line="2" pos:column="38"/></name></type> <name pos:line="2" pos:column="39">size<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">size_t<pos:position pos:line="2" pos:column="51"/></name></type> <name pos:line="2" pos:column="52">nmemb<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="59">void<pos:position pos:line="2" pos:column="63"/></name> <modifier pos:line="2" pos:column="64">*<pos:position pos:line="2" pos:column="65"/></modifier></type><name pos:line="2" pos:column="65">user_data<pos:position pos:line="2" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="75"/></parameter_list> <block pos:line="2" pos:column="76">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">len<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><name pos:line="3" pos:column="16">size<pos:position pos:line="3" pos:column="20"/></name> <operator pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></operator> <name pos:line="3" pos:column="23">nmemb<pos:position pos:line="3" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">cx_t<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">db<pos:position pos:line="4" pos:column="11"/></name></decl>;<pos:position pos:line="4" pos:column="12"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">db<pos:position pos:line="6" pos:column="5"/></name> <operator pos:line="6" pos:column="6">=<pos:position pos:line="6" pos:column="7"/></operator> <name pos:line="6" pos:column="8">user_data<pos:position pos:line="6" pos:column="17"/></name></expr>;<pos:position pos:line="6" pos:column="18"/></expr_stmt>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">db<pos:position pos:line="7" pos:column="9"/></name> <operator pos:line="7" pos:column="10">==<pos:position pos:line="7" pos:column="12"/></operator> <name pos:line="7" pos:column="13">NULL<pos:position pos:line="7" pos:column="17"/></name></expr>)<pos:position pos:line="7" pos:column="18"/></condition><then pos:line="7" pos:column="18"> <block pos:line="7" pos:column="19">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">ERROR<pos:position pos:line="8" pos:column="10"/></name><argument_list pos:line="8" pos:column="10">(<argument><expr><literal type="string" pos:line="8" pos:column="11">"curl_xml plugin: cx_curl_callback: "<pos:position pos:line="8" pos:column="48"/></literal>
          <literal type="string" pos:line="9" pos:column="11">"user_data pointer is NULL."<pos:position pos:line="9" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="41"/></expr_stmt>
    <return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">(<pos:position pos:line="10" pos:column="13"/></operator><literal type="number" pos:line="10" pos:column="13">0<pos:position pos:line="10" pos:column="14"/></literal><operator pos:line="10" pos:column="14">)<pos:position pos:line="10" pos:column="15"/></operator></expr>;<pos:position pos:line="10" pos:column="16"/></return>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>

  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">len<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">==<pos:position pos:line="13" pos:column="13"/></operator> <literal type="number" pos:line="13" pos:column="14">0<pos:position pos:line="13" pos:column="15"/></literal></expr>)<pos:position pos:line="13" pos:column="16"/></condition><then pos:line="13" pos:column="16">
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">(<pos:position pos:line="14" pos:column="13"/></operator><name pos:line="14" pos:column="13">len<pos:position pos:line="14" pos:column="16"/></name><operator pos:line="14" pos:column="16">)<pos:position pos:line="14" pos:column="17"/></operator></expr>;<pos:position pos:line="14" pos:column="18"/></return></block></then></if>

  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><operator pos:line="16" pos:column="7">(<pos:position pos:line="16" pos:column="8"/></operator><name><name pos:line="16" pos:column="8">db<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">-&gt;<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="12">buffer_fill<pos:position pos:line="16" pos:column="23"/></name></name> <operator pos:line="16" pos:column="24">+<pos:position pos:line="16" pos:column="25"/></operator> <name pos:line="16" pos:column="26">len<pos:position pos:line="16" pos:column="29"/></name><operator pos:line="16" pos:column="29">)<pos:position pos:line="16" pos:column="30"/></operator> <operator pos:line="16" pos:column="31">&gt;=<pos:position pos:line="16" pos:column="36"/></operator> <name><name pos:line="16" pos:column="34">db<pos:position pos:line="16" pos:column="36"/></name><operator pos:line="16" pos:column="36">-&gt;<pos:position pos:line="16" pos:column="41"/></operator><name pos:line="16" pos:column="38">buffer_size<pos:position pos:line="16" pos:column="49"/></name></name></expr>)<pos:position pos:line="16" pos:column="50"/></condition><then pos:line="16" pos:column="50"> <block pos:line="16" pos:column="51">{
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">char<pos:position pos:line="17" pos:column="9"/></name> <modifier pos:line="17" pos:column="10">*<pos:position pos:line="17" pos:column="11"/></modifier></type><name pos:line="17" pos:column="11">temp<pos:position pos:line="17" pos:column="15"/></name></decl>;<pos:position pos:line="17" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><name pos:line="19" pos:column="5">temp<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <call><name pos:line="19" pos:column="12">realloc<pos:position pos:line="19" pos:column="19"/></name><argument_list pos:line="19" pos:column="19">(<argument><expr><name><name pos:line="19" pos:column="20">db<pos:position pos:line="19" pos:column="22"/></name><operator pos:line="19" pos:column="22">-&gt;<pos:position pos:line="19" pos:column="27"/></operator><name pos:line="19" pos:column="24">buffer<pos:position pos:line="19" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="32">db<pos:position pos:line="19" pos:column="34"/></name><operator pos:line="19" pos:column="34">-&gt;<pos:position pos:line="19" pos:column="39"/></operator><name pos:line="19" pos:column="36">buffer_fill<pos:position pos:line="19" pos:column="47"/></name></name> <operator pos:line="19" pos:column="48">+<pos:position pos:line="19" pos:column="49"/></operator> <name pos:line="19" pos:column="50">len<pos:position pos:line="19" pos:column="53"/></name> <operator pos:line="19" pos:column="54">+<pos:position pos:line="19" pos:column="55"/></operator> <literal type="number" pos:line="19" pos:column="56">1<pos:position pos:line="19" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="59"/></expr_stmt>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">temp<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">==<pos:position pos:line="20" pos:column="16"/></operator> <name pos:line="20" pos:column="17">NULL<pos:position pos:line="20" pos:column="21"/></name></expr>)<pos:position pos:line="20" pos:column="22"/></condition><then pos:line="20" pos:column="22"> <block pos:line="20" pos:column="23">{
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">ERROR<pos:position pos:line="21" pos:column="12"/></name><argument_list pos:line="21" pos:column="12">(<argument><expr><literal type="string" pos:line="21" pos:column="13">"curl_xml plugin: realloc failed."<pos:position pos:line="21" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="49"/></expr_stmt>
      <return pos:line="22" pos:column="7">return <expr><operator pos:line="22" pos:column="14">(<pos:position pos:line="22" pos:column="15"/></operator><literal type="number" pos:line="22" pos:column="15">0<pos:position pos:line="22" pos:column="16"/></literal><operator pos:line="22" pos:column="16">)<pos:position pos:line="22" pos:column="17"/></operator></expr>;<pos:position pos:line="22" pos:column="18"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">db<pos:position pos:line="24" pos:column="7"/></name><operator pos:line="24" pos:column="7">-&gt;<pos:position pos:line="24" pos:column="12"/></operator><name pos:line="24" pos:column="9">buffer<pos:position pos:line="24" pos:column="15"/></name></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <name pos:line="24" pos:column="18">temp<pos:position pos:line="24" pos:column="22"/></name></expr>;<pos:position pos:line="24" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">db<pos:position pos:line="25" pos:column="7"/></name><operator pos:line="25" pos:column="7">-&gt;<pos:position pos:line="25" pos:column="12"/></operator><name pos:line="25" pos:column="9">buffer_size<pos:position pos:line="25" pos:column="20"/></name></name> <operator pos:line="25" pos:column="21">=<pos:position pos:line="25" pos:column="22"/></operator> <name><name pos:line="25" pos:column="23">db<pos:position pos:line="25" pos:column="25"/></name><operator pos:line="25" pos:column="25">-&gt;<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="27">buffer_fill<pos:position pos:line="25" pos:column="38"/></name></name> <operator pos:line="25" pos:column="39">+<pos:position pos:line="25" pos:column="40"/></operator> <name pos:line="25" pos:column="41">len<pos:position pos:line="25" pos:column="44"/></name> <operator pos:line="25" pos:column="45">+<pos:position pos:line="25" pos:column="46"/></operator> <literal type="number" pos:line="25" pos:column="47">1<pos:position pos:line="25" pos:column="48"/></literal></expr>;<pos:position pos:line="25" pos:column="49"/></expr_stmt>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="28" pos:column="3">memcpy<pos:position pos:line="28" pos:column="9"/></name><argument_list pos:line="28" pos:column="9">(<argument><expr><name><name pos:line="28" pos:column="10">db<pos:position pos:line="28" pos:column="12"/></name><operator pos:line="28" pos:column="12">-&gt;<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="14">buffer<pos:position pos:line="28" pos:column="20"/></name></name> <operator pos:line="28" pos:column="21">+<pos:position pos:line="28" pos:column="22"/></operator> <name><name pos:line="28" pos:column="23">db<pos:position pos:line="28" pos:column="25"/></name><operator pos:line="28" pos:column="25">-&gt;<pos:position pos:line="28" pos:column="30"/></operator><name pos:line="28" pos:column="27">buffer_fill<pos:position pos:line="28" pos:column="38"/></name></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="40">(<pos:position pos:line="28" pos:column="41"/></operator><name pos:line="28" pos:column="41">char<pos:position pos:line="28" pos:column="45"/></name> <operator pos:line="28" pos:column="46">*<pos:position pos:line="28" pos:column="47"/></operator><operator pos:line="28" pos:column="47">)<pos:position pos:line="28" pos:column="48"/></operator><name pos:line="28" pos:column="48">buf<pos:position pos:line="28" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="53">len<pos:position pos:line="28" pos:column="56"/></name></expr></argument>)<pos:position pos:line="28" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="58"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="29" pos:column="3">db<pos:position pos:line="29" pos:column="5"/></name><operator pos:line="29" pos:column="5">-&gt;<pos:position pos:line="29" pos:column="10"/></operator><name pos:line="29" pos:column="7">buffer_fill<pos:position pos:line="29" pos:column="18"/></name></name> <operator pos:line="29" pos:column="19">+=<pos:position pos:line="29" pos:column="21"/></operator> <name pos:line="29" pos:column="22">len<pos:position pos:line="29" pos:column="25"/></name></expr>;<pos:position pos:line="29" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="30" pos:column="3">db<pos:position pos:line="30" pos:column="5"/></name><operator pos:line="30" pos:column="5">-&gt;<pos:position pos:line="30" pos:column="10"/></operator><name pos:line="30" pos:column="7">buffer<pos:position pos:line="30" pos:column="13"/></name><index pos:line="30" pos:column="13">[<expr><name><name pos:line="30" pos:column="14">db<pos:position pos:line="30" pos:column="16"/></name><operator pos:line="30" pos:column="16">-&gt;<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="18">buffer_fill<pos:position pos:line="30" pos:column="29"/></name></name></expr>]<pos:position pos:line="30" pos:column="30"/></index></name> <operator pos:line="30" pos:column="31">=<pos:position pos:line="30" pos:column="32"/></operator> <literal type="number" pos:line="30" pos:column="33">0<pos:position pos:line="30" pos:column="34"/></literal></expr>;<pos:position pos:line="30" pos:column="35"/></expr_stmt>

  <return pos:line="32" pos:column="3">return <expr><operator pos:line="32" pos:column="10">(<pos:position pos:line="32" pos:column="11"/></operator><name pos:line="32" pos:column="11">len<pos:position pos:line="32" pos:column="14"/></name><operator pos:line="32" pos:column="14">)<pos:position pos:line="32" pos:column="15"/></operator></expr>;<pos:position pos:line="32" pos:column="16"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

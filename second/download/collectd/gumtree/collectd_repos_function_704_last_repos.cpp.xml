<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_704_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">mic_read_memory<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">int<pos:position pos:line="1" pos:column="31"/></name></type> <name pos:line="1" pos:column="32">mic<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list> <block pos:line="1" pos:column="37">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">U32<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">ret<pos:position pos:line="2" pos:column="10"/></name></decl>;<pos:position pos:line="2" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">U32<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">mem_total<pos:position pos:line="3" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="18">mem_free<pos:position pos:line="3" pos:column="26"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="28">mem_bufs<pos:position pos:line="3" pos:column="36"/></name></decl>;<pos:position pos:line="3" pos:column="37"/></decl_stmt>

  <expr_stmt><expr><name pos:line="5" pos:column="3">ret<pos:position pos:line="5" pos:column="6"/></name> <operator pos:line="5" pos:column="7">=<pos:position pos:line="5" pos:column="8"/></operator> <call><name pos:line="5" pos:column="9">MicGetMemoryUtilization<pos:position pos:line="5" pos:column="32"/></name><argument_list pos:line="5" pos:column="32">(<argument><expr><name pos:line="5" pos:column="33">mic_handle<pos:position pos:line="5" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="45">&amp;<pos:position pos:line="5" pos:column="50"/></operator><name pos:line="5" pos:column="46">mem_total<pos:position pos:line="5" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="57">&amp;<pos:position pos:line="5" pos:column="62"/></operator><name pos:line="5" pos:column="58">mem_free<pos:position pos:line="5" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="68">&amp;<pos:position pos:line="5" pos:column="73"/></operator><name pos:line="5" pos:column="69">mem_bufs<pos:position pos:line="5" pos:column="77"/></name></expr></argument>)<pos:position pos:line="5" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="79"/></expr_stmt>
  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">ret<pos:position pos:line="6" pos:column="10"/></name> <operator pos:line="6" pos:column="11">!=<pos:position pos:line="6" pos:column="13"/></operator> <name pos:line="6" pos:column="14">MIC_ACCESS_API_SUCCESS<pos:position pos:line="6" pos:column="36"/></name></expr>)<pos:position pos:line="6" pos:column="37"/></condition><then pos:line="6" pos:column="37"> <block pos:line="6" pos:column="38">{
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">ERROR<pos:position pos:line="7" pos:column="10"/></name><argument_list pos:line="7" pos:column="10">(<argument><expr><literal type="string" pos:line="7" pos:column="11">"mic plugin: Problem getting Memory Utilization: %s"<pos:position pos:line="7" pos:column="63"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="8" pos:column="11">MicGetErrorString<pos:position pos:line="8" pos:column="28"/></name><argument_list pos:line="8" pos:column="28">(<argument><expr><name pos:line="8" pos:column="29">ret<pos:position pos:line="8" pos:column="32"/></name></expr></argument>)<pos:position pos:line="8" pos:column="33"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="35"/></expr_stmt>
    <return pos:line="9" pos:column="5">return <expr><literal type="number" pos:line="9" pos:column="12">1<pos:position pos:line="9" pos:column="13"/></literal></expr>;<pos:position pos:line="9" pos:column="14"/></return>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">mic_submit_memory_use<pos:position pos:line="11" pos:column="24"/></name><argument_list pos:line="11" pos:column="24">(<argument><expr><name pos:line="11" pos:column="25">mic<pos:position pos:line="11" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="30">"free"<pos:position pos:line="11" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="38">mem_free<pos:position pos:line="11" pos:column="46"/></name></expr></argument>)<pos:position pos:line="11" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="48"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">mic_submit_memory_use<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><name pos:line="12" pos:column="25">mic<pos:position pos:line="12" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="30">"used"<pos:position pos:line="12" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="38">mem_total<pos:position pos:line="12" pos:column="47"/></name> <operator pos:line="12" pos:column="48">-<pos:position pos:line="12" pos:column="49"/></operator> <name pos:line="12" pos:column="50">mem_free<pos:position pos:line="12" pos:column="58"/></name> <operator pos:line="12" pos:column="59">-<pos:position pos:line="12" pos:column="60"/></operator> <name pos:line="12" pos:column="61">mem_bufs<pos:position pos:line="12" pos:column="69"/></name></expr></argument>)<pos:position pos:line="12" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="71"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">mic_submit_memory_use<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">(<argument><expr><name pos:line="13" pos:column="25">mic<pos:position pos:line="13" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="30">"buffered"<pos:position pos:line="13" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="42">mem_bufs<pos:position pos:line="13" pos:column="50"/></name></expr></argument>)<pos:position pos:line="13" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="52"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="14" pos:column="3">DEBUG<pos:position pos:line="14" pos:column="8"/></name><argument_list pos:line="14" pos:column="8">(<argument><expr><literal type="string" pos:line="14" pos:column="9">"mic plugin: Memory Read: %u %u %u"<pos:position pos:line="14" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="46">mem_total<pos:position pos:line="14" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="57">mem_free<pos:position pos:line="14" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="67">mem_bufs<pos:position pos:line="14" pos:column="75"/></name></expr></argument>)<pos:position pos:line="14" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="77"/></expr_stmt>
  <return pos:line="15" pos:column="3">return <expr><literal type="number" pos:line="15" pos:column="10">0<pos:position pos:line="15" pos:column="11"/></literal></expr>;<pos:position pos:line="15" pos:column="12"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

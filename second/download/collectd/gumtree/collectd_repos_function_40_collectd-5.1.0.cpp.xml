<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_40_collectd-5.1.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">lt_dlhandle<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">lt_dlopenadvise<pos:position pos:line="2" pos:column="16"/></name> <parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><specifier pos:line="2" pos:column="18">const<pos:position pos:line="2" pos:column="23"/></specifier> <name pos:line="2" pos:column="24">char<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="30">filename<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="40">lt_dladvise<pos:position pos:line="2" pos:column="51"/></name></type> <name pos:line="2" pos:column="52">advise<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="59"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">lt_dlhandle<pos:position pos:line="4" pos:column="14"/></name></type>	<name pos:line="4" pos:column="17">handle<pos:position pos:line="4" pos:column="23"/></name>	<init pos:line="4" pos:column="25">= <expr><literal type="number" pos:line="4" pos:column="27">0<pos:position pos:line="4" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type>		<name pos:line="5" pos:column="17">errors<pos:position pos:line="5" pos:column="23"/></name>	<init pos:line="5" pos:column="25">= <expr><literal type="number" pos:line="5" pos:column="27">0<pos:position pos:line="5" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type>	<name pos:line="6" pos:column="17">saved_error<pos:position pos:line="6" pos:column="28"/></name>	<init pos:line="6" pos:column="33">= <expr><literal type="number" pos:line="6" pos:column="35">0<pos:position pos:line="6" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="37"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">LT__GETERROR<pos:position pos:line="8" pos:column="15"/></name> <argument_list pos:line="8" pos:column="16">(<argument><expr><name pos:line="8" pos:column="17">saved_error<pos:position pos:line="8" pos:column="28"/></name></expr></argument>)<pos:position pos:line="8" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="30"/></expr_stmt>

  <comment type="block" pos:line="10" pos:column="3">/* Can't have symbols hidden and visible at the same time!  */</comment>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">advise<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">&amp;&amp;<pos:position pos:line="11" pos:column="24"/></operator> <name><name pos:line="11" pos:column="17">advise<pos:position pos:line="11" pos:column="23"/></name><operator pos:line="11" pos:column="23">-&gt;<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="25">is_symlocal<pos:position pos:line="11" pos:column="36"/></name></name> <operator pos:line="11" pos:column="37">&amp;&amp;<pos:position pos:line="11" pos:column="47"/></operator> <name><name pos:line="11" pos:column="40">advise<pos:position pos:line="11" pos:column="46"/></name><operator pos:line="11" pos:column="46">-&gt;<pos:position pos:line="11" pos:column="51"/></operator><name pos:line="11" pos:column="48">is_symglobal<pos:position pos:line="11" pos:column="60"/></name></name></expr>)<pos:position pos:line="11" pos:column="61"/></condition><then pos:line="11" pos:column="61">
    <block pos:line="12" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="13" pos:column="7">LT__SETERROR<pos:position pos:line="13" pos:column="19"/></name> <argument_list pos:line="13" pos:column="20">(<argument><expr><name pos:line="13" pos:column="21">CONFLICTING_FLAGS<pos:position pos:line="13" pos:column="38"/></name></expr></argument>)<pos:position pos:line="13" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="40"/></expr_stmt>
      <return pos:line="14" pos:column="7">return <expr><literal type="number" pos:line="14" pos:column="14">0<pos:position pos:line="14" pos:column="15"/></literal></expr>;<pos:position pos:line="14" pos:column="16"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><operator pos:line="17" pos:column="7">!<pos:position pos:line="17" pos:column="8"/></operator><name pos:line="17" pos:column="8">filename<pos:position pos:line="17" pos:column="16"/></name>
      <operator pos:line="18" pos:column="7">||<pos:position pos:line="18" pos:column="9"/></operator> <operator pos:line="18" pos:column="10">!<pos:position pos:line="18" pos:column="11"/></operator><name pos:line="18" pos:column="11">advise<pos:position pos:line="18" pos:column="17"/></name>
      <operator pos:line="19" pos:column="7">||<pos:position pos:line="19" pos:column="9"/></operator> <operator pos:line="19" pos:column="10">!<pos:position pos:line="19" pos:column="11"/></operator><name><name pos:line="19" pos:column="11">advise<pos:position pos:line="19" pos:column="17"/></name><operator pos:line="19" pos:column="17">-&gt;<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="19">try_ext<pos:position pos:line="19" pos:column="26"/></name></name>
      <operator pos:line="20" pos:column="7">||<pos:position pos:line="20" pos:column="9"/></operator> <call><name pos:line="20" pos:column="10">has_library_ext<pos:position pos:line="20" pos:column="25"/></name> <argument_list pos:line="20" pos:column="26">(<argument><expr><name pos:line="20" pos:column="27">filename<pos:position pos:line="20" pos:column="35"/></name></expr></argument>)<pos:position pos:line="20" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="37"/></condition><then pos:line="20" pos:column="37">
    <block pos:line="21" pos:column="5">{
      <comment type="block" pos:line="22" pos:column="7">/* Just incase we missed a code path in try_dlopen() that reports
	 an error, but forgot to reset handle... */</comment>
      <if pos:line="24" pos:column="7">if <condition pos:line="24" pos:column="10">(<expr><call><name pos:line="24" pos:column="11">try_dlopen<pos:position pos:line="24" pos:column="21"/></name> <argument_list pos:line="24" pos:column="22">(<argument><expr><operator pos:line="24" pos:column="23">&amp;<pos:position pos:line="24" pos:column="28"/></operator><name pos:line="24" pos:column="24">handle<pos:position pos:line="24" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="32">filename<pos:position pos:line="24" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="42">NULL<pos:position pos:line="24" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="48">advise<pos:position pos:line="24" pos:column="54"/></name></expr></argument>)<pos:position pos:line="24" pos:column="55"/></argument_list></call> <operator pos:line="24" pos:column="56">!=<pos:position pos:line="24" pos:column="58"/></operator> <literal type="number" pos:line="24" pos:column="59">0<pos:position pos:line="24" pos:column="60"/></literal></expr>)<pos:position pos:line="24" pos:column="61"/></condition><then pos:line="24" pos:column="61">
	<block type="pseudo"><return pos:line="25" pos:column="9">return <expr><literal type="number" pos:line="25" pos:column="16">0<pos:position pos:line="25" pos:column="17"/></literal></expr>;<pos:position pos:line="25" pos:column="18"/></return></block></then></if>

      <return pos:line="27" pos:column="7">return <expr><name pos:line="27" pos:column="14">handle<pos:position pos:line="27" pos:column="20"/></name></expr>;<pos:position pos:line="27" pos:column="21"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then>
  <elseif pos:line="29" pos:column="3">else <if pos:line="29" pos:column="8">if <condition pos:line="29" pos:column="11">(<expr><name pos:line="29" pos:column="12">filename<pos:position pos:line="29" pos:column="20"/></name> <operator pos:line="29" pos:column="21">&amp;&amp;<pos:position pos:line="29" pos:column="31"/></operator> <operator pos:line="29" pos:column="24">*<pos:position pos:line="29" pos:column="25"/></operator><name pos:line="29" pos:column="25">filename<pos:position pos:line="29" pos:column="33"/></name></expr>)<pos:position pos:line="29" pos:column="34"/></condition><then pos:line="29" pos:column="34">
    <block pos:line="30" pos:column="5">{

      <comment type="block" pos:line="32" pos:column="7">/* First try appending ARCHIVE_EXT.  */</comment>
      <expr_stmt><expr><name pos:line="33" pos:column="7">errors<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">+=<pos:position pos:line="33" pos:column="16"/></operator> <call><name pos:line="33" pos:column="17">try_dlopen<pos:position pos:line="33" pos:column="27"/></name> <argument_list pos:line="33" pos:column="28">(<argument><expr><operator pos:line="33" pos:column="29">&amp;<pos:position pos:line="33" pos:column="34"/></operator><name pos:line="33" pos:column="30">handle<pos:position pos:line="33" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="38">filename<pos:position pos:line="33" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="48">archive_ext<pos:position pos:line="33" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="61">advise<pos:position pos:line="33" pos:column="67"/></name></expr></argument>)<pos:position pos:line="33" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="69"/></expr_stmt>

      <comment type="block" pos:line="35" pos:column="7">/* If we found FILENAME, stop searching -- whether we were able to
	 load the file as a module or not.  If the file exists but loading
	 failed, it is better to return an error message here than to
	 report FILE_NOT_FOUND when the alternatives (foo.so etc) are not
	 in the module search path.  */</comment>
      <if pos:line="40" pos:column="7">if <condition pos:line="40" pos:column="10">(<expr><name pos:line="40" pos:column="11">handle<pos:position pos:line="40" pos:column="17"/></name> <operator pos:line="40" pos:column="18">||<pos:position pos:line="40" pos:column="20"/></operator> <operator pos:line="40" pos:column="21">(<pos:position pos:line="40" pos:column="22"/></operator><operator pos:line="40" pos:column="22">(<pos:position pos:line="40" pos:column="23"/></operator><name pos:line="40" pos:column="23">errors<pos:position pos:line="40" pos:column="29"/></name> <operator pos:line="40" pos:column="30">&gt;<pos:position pos:line="40" pos:column="34"/></operator> <literal type="number" pos:line="40" pos:column="32">0<pos:position pos:line="40" pos:column="33"/></literal><operator pos:line="40" pos:column="33">)<pos:position pos:line="40" pos:column="34"/></operator> <operator pos:line="40" pos:column="35">&amp;&amp;<pos:position pos:line="40" pos:column="45"/></operator> <operator pos:line="40" pos:column="38">!<pos:position pos:line="40" pos:column="39"/></operator><call><name pos:line="40" pos:column="39">file_not_found<pos:position pos:line="40" pos:column="53"/></name> <argument_list pos:line="40" pos:column="54">()<pos:position pos:line="40" pos:column="56"/></argument_list></call><operator pos:line="40" pos:column="56">)<pos:position pos:line="40" pos:column="57"/></operator></expr>)<pos:position pos:line="40" pos:column="58"/></condition><then pos:line="40" pos:column="58">
	<block type="pseudo"><return pos:line="41" pos:column="9">return <expr><name pos:line="41" pos:column="16">handle<pos:position pos:line="41" pos:column="22"/></name></expr>;<pos:position pos:line="41" pos:column="23"/></return></block></then></if>

<cpp:if pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">if<pos:position pos:line="43" pos:column="4"/></cpp:directive> <expr><call><name pos:line="43" pos:column="5">defined<pos:position pos:line="43" pos:column="12"/></name><argument_list pos:line="43" pos:column="12">(<argument><expr><name pos:line="43" pos:column="13">LT_MODULE_EXT<pos:position pos:line="43" pos:column="26"/></name></expr></argument>)<pos:position pos:line="43" pos:column="27"/></argument_list></call></expr></cpp:if>
      <comment type="block" pos:line="44" pos:column="7">/* Try appending SHLIB_EXT.   */</comment>
      <expr_stmt><expr><call><name pos:line="45" pos:column="7">LT__SETERRORSTR<pos:position pos:line="45" pos:column="22"/></name> <argument_list pos:line="45" pos:column="23">(<argument><expr><name pos:line="45" pos:column="24">saved_error<pos:position pos:line="45" pos:column="35"/></name></expr></argument>)<pos:position pos:line="45" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="37"/></expr_stmt>
      <expr_stmt><expr><name pos:line="46" pos:column="7">errors<pos:position pos:line="46" pos:column="13"/></name> <operator pos:line="46" pos:column="14">=<pos:position pos:line="46" pos:column="15"/></operator> <call><name pos:line="46" pos:column="16">try_dlopen<pos:position pos:line="46" pos:column="26"/></name> <argument_list pos:line="46" pos:column="27">(<argument><expr><operator pos:line="46" pos:column="28">&amp;<pos:position pos:line="46" pos:column="33"/></operator><name pos:line="46" pos:column="29">handle<pos:position pos:line="46" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="37">filename<pos:position pos:line="46" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="47">shlib_ext<pos:position pos:line="46" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="58">advise<pos:position pos:line="46" pos:column="64"/></name></expr></argument>)<pos:position pos:line="46" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="66"/></expr_stmt>

      <comment type="block" pos:line="48" pos:column="7">/* As before, if the file was found but loading failed, return now
	 with the current error message.  */</comment>
      <if pos:line="50" pos:column="7">if <condition pos:line="50" pos:column="10">(<expr><name pos:line="50" pos:column="11">handle<pos:position pos:line="50" pos:column="17"/></name> <operator pos:line="50" pos:column="18">||<pos:position pos:line="50" pos:column="20"/></operator> <operator pos:line="50" pos:column="21">(<pos:position pos:line="50" pos:column="22"/></operator><operator pos:line="50" pos:column="22">(<pos:position pos:line="50" pos:column="23"/></operator><name pos:line="50" pos:column="23">errors<pos:position pos:line="50" pos:column="29"/></name> <operator pos:line="50" pos:column="30">&gt;<pos:position pos:line="50" pos:column="34"/></operator> <literal type="number" pos:line="50" pos:column="32">0<pos:position pos:line="50" pos:column="33"/></literal><operator pos:line="50" pos:column="33">)<pos:position pos:line="50" pos:column="34"/></operator> <operator pos:line="50" pos:column="35">&amp;&amp;<pos:position pos:line="50" pos:column="45"/></operator> <operator pos:line="50" pos:column="38">!<pos:position pos:line="50" pos:column="39"/></operator><call><name pos:line="50" pos:column="39">file_not_found<pos:position pos:line="50" pos:column="53"/></name> <argument_list pos:line="50" pos:column="54">()<pos:position pos:line="50" pos:column="56"/></argument_list></call><operator pos:line="50" pos:column="56">)<pos:position pos:line="50" pos:column="57"/></operator></expr>)<pos:position pos:line="50" pos:column="58"/></condition><then pos:line="50" pos:column="58">
	<block type="pseudo"><return pos:line="51" pos:column="9">return <expr><name pos:line="51" pos:column="16">handle<pos:position pos:line="51" pos:column="22"/></name></expr>;<pos:position pos:line="51" pos:column="23"/></return></block></then></if>
<cpp:endif pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">endif<pos:position pos:line="52" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if></elseif></if>

  <comment type="block" pos:line="55" pos:column="3">/* Still here?  Then we really did fail to locate any of the file
     names we tried.  */</comment>
  <expr_stmt><expr><call><name pos:line="57" pos:column="3">LT__SETERROR<pos:position pos:line="57" pos:column="15"/></name> <argument_list pos:line="57" pos:column="16">(<argument><expr><name pos:line="57" pos:column="17">FILE_NOT_FOUND<pos:position pos:line="57" pos:column="31"/></name></expr></argument>)<pos:position pos:line="57" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="33"/></expr_stmt>
  <return pos:line="58" pos:column="3">return <expr><literal type="number" pos:line="58" pos:column="10">0<pos:position pos:line="58" pos:column="11"/></literal></expr>;<pos:position pos:line="58" pos:column="12"/></return>
}<pos:position pos:line="59" pos:column="2"/></block></function></unit>

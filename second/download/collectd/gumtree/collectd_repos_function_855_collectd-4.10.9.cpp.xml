<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_855_collectd-4.10.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">submit_values<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">host<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="45">/* {{{ */</comment>
		<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">char<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">plugin_inst<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="3" pos:column="17">const<pos:position pos:line="3" pos:column="22"/></specifier> <name pos:line="3" pos:column="23">char<pos:position pos:line="3" pos:column="27"/></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">type<pos:position pos:line="3" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="35">const<pos:position pos:line="3" pos:column="40"/></specifier> <name pos:line="3" pos:column="41">char<pos:position pos:line="3" pos:column="45"/></name> <modifier pos:line="3" pos:column="46">*<pos:position pos:line="3" pos:column="47"/></modifier></type><name pos:line="3" pos:column="47">type_inst<pos:position pos:line="3" pos:column="56"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="4" pos:column="17">value_t<pos:position pos:line="4" pos:column="24"/></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="26">values<pos:position pos:line="4" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="34">int<pos:position pos:line="4" pos:column="37"/></name></type> <name pos:line="4" pos:column="38">values_len<pos:position pos:line="4" pos:column="48"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="5" pos:column="17">time_t<pos:position pos:line="5" pos:column="23"/></name></type> <name pos:line="5" pos:column="24">timestamp<pos:position pos:line="5" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="5" pos:column="35">int<pos:position pos:line="5" pos:column="38"/></name></type> <name pos:line="5" pos:column="39">interval<pos:position pos:line="5" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="48"/></parameter_list>
<block pos:line="6" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">value_list_t<pos:position pos:line="7" pos:column="21"/></name></type> <name pos:line="7" pos:column="22">vl<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><name pos:line="7" pos:column="27">VALUE_LIST_INIT<pos:position pos:line="7" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="43"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="9" pos:column="9">vl<pos:position pos:line="9" pos:column="11"/></name><operator pos:line="9" pos:column="11">.<pos:position pos:line="9" pos:column="12"/></operator><name pos:line="9" pos:column="12">values<pos:position pos:line="9" pos:column="18"/></name></name> <operator pos:line="9" pos:column="19">=<pos:position pos:line="9" pos:column="20"/></operator> <name pos:line="9" pos:column="21">values<pos:position pos:line="9" pos:column="27"/></name></expr>;<pos:position pos:line="9" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="10" pos:column="9">vl<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">.<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="12">values_len<pos:position pos:line="10" pos:column="22"/></name></name> <operator pos:line="10" pos:column="23">=<pos:position pos:line="10" pos:column="24"/></operator> <name pos:line="10" pos:column="25">values_len<pos:position pos:line="10" pos:column="35"/></name></expr>;<pos:position pos:line="10" pos:column="36"/></expr_stmt>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">timestamp<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">&gt;<pos:position pos:line="12" pos:column="27"/></operator> <literal type="number" pos:line="12" pos:column="25">0<pos:position pos:line="12" pos:column="26"/></literal></expr>)<pos:position pos:line="12" pos:column="27"/></condition><then pos:line="12" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="13" pos:column="17">vl<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">.<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="20">time<pos:position pos:line="13" pos:column="24"/></name></name> <operator pos:line="13" pos:column="25">=<pos:position pos:line="13" pos:column="26"/></operator> <name pos:line="13" pos:column="27">timestamp<pos:position pos:line="13" pos:column="36"/></name></expr>;<pos:position pos:line="13" pos:column="37"/></expr_stmt></block></then></if>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">interval<pos:position pos:line="15" pos:column="21"/></name> <operator pos:line="15" pos:column="22">&gt;<pos:position pos:line="15" pos:column="26"/></operator> <literal type="number" pos:line="15" pos:column="24">0<pos:position pos:line="15" pos:column="25"/></literal></expr>)<pos:position pos:line="15" pos:column="26"/></condition><then pos:line="15" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="16" pos:column="17">vl<pos:position pos:line="16" pos:column="19"/></name><operator pos:line="16" pos:column="19">.<pos:position pos:line="16" pos:column="20"/></operator><name pos:line="16" pos:column="20">interval<pos:position pos:line="16" pos:column="28"/></name></name> <operator pos:line="16" pos:column="29">=<pos:position pos:line="16" pos:column="30"/></operator> <name pos:line="16" pos:column="31">interval<pos:position pos:line="16" pos:column="39"/></name></expr>;<pos:position pos:line="16" pos:column="40"/></expr_stmt></block></then></if>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">host<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">!=<pos:position pos:line="18" pos:column="20"/></operator> <name pos:line="18" pos:column="21">NULL<pos:position pos:line="18" pos:column="25"/></name></expr>)<pos:position pos:line="18" pos:column="26"/></condition><then pos:line="18" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="17">sstrncpy<pos:position pos:line="19" pos:column="25"/></name> <argument_list pos:line="19" pos:column="26">(<argument><expr><name><name pos:line="19" pos:column="27">vl<pos:position pos:line="19" pos:column="29"/></name><operator pos:line="19" pos:column="29">.<pos:position pos:line="19" pos:column="30"/></operator><name pos:line="19" pos:column="30">host<pos:position pos:line="19" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="36">host<pos:position pos:line="19" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="42">sizeof <argument_list pos:line="19" pos:column="49">(<argument><expr><name><name pos:line="19" pos:column="50">vl<pos:position pos:line="19" pos:column="52"/></name><operator pos:line="19" pos:column="52">.<pos:position pos:line="19" pos:column="53"/></operator><name pos:line="19" pos:column="53">host<pos:position pos:line="19" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="60"/></expr_stmt></block></then>
	<else pos:line="20" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="17">sstrncpy<pos:position pos:line="21" pos:column="25"/></name> <argument_list pos:line="21" pos:column="26">(<argument><expr><name><name pos:line="21" pos:column="27">vl<pos:position pos:line="21" pos:column="29"/></name><operator pos:line="21" pos:column="29">.<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="30">host<pos:position pos:line="21" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="36">hostname_g<pos:position pos:line="21" pos:column="46"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="48">sizeof <argument_list pos:line="21" pos:column="55">(<argument><expr><name><name pos:line="21" pos:column="56">vl<pos:position pos:line="21" pos:column="58"/></name><operator pos:line="21" pos:column="58">.<pos:position pos:line="21" pos:column="59"/></operator><name pos:line="21" pos:column="59">host<pos:position pos:line="21" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="66"/></expr_stmt></block></else></if>
	<expr_stmt><expr><call><name pos:line="22" pos:column="9">sstrncpy<pos:position pos:line="22" pos:column="17"/></name> <argument_list pos:line="22" pos:column="18">(<argument><expr><name><name pos:line="22" pos:column="19">vl<pos:position pos:line="22" pos:column="21"/></name><operator pos:line="22" pos:column="21">.<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="22">plugin<pos:position pos:line="22" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="30">"netapp"<pos:position pos:line="22" pos:column="38"/></literal></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="40">sizeof <argument_list pos:line="22" pos:column="47">(<argument><expr><name><name pos:line="22" pos:column="48">vl<pos:position pos:line="22" pos:column="50"/></name><operator pos:line="22" pos:column="50">.<pos:position pos:line="22" pos:column="51"/></operator><name pos:line="22" pos:column="51">plugin<pos:position pos:line="22" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="60"/></expr_stmt>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">plugin_inst<pos:position pos:line="23" pos:column="24"/></name> <operator pos:line="23" pos:column="25">!=<pos:position pos:line="23" pos:column="27"/></operator> <name pos:line="23" pos:column="28">NULL<pos:position pos:line="23" pos:column="32"/></name></expr>)<pos:position pos:line="23" pos:column="33"/></condition><then pos:line="23" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="17">sstrncpy<pos:position pos:line="24" pos:column="25"/></name> <argument_list pos:line="24" pos:column="26">(<argument><expr><name><name pos:line="24" pos:column="27">vl<pos:position pos:line="24" pos:column="29"/></name><operator pos:line="24" pos:column="29">.<pos:position pos:line="24" pos:column="30"/></operator><name pos:line="24" pos:column="30">plugin_instance<pos:position pos:line="24" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="47">plugin_inst<pos:position pos:line="24" pos:column="58"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="60">sizeof <argument_list pos:line="24" pos:column="67">(<argument><expr><name><name pos:line="24" pos:column="68">vl<pos:position pos:line="24" pos:column="70"/></name><operator pos:line="24" pos:column="70">.<pos:position pos:line="24" pos:column="71"/></operator><name pos:line="24" pos:column="71">plugin_instance<pos:position pos:line="24" pos:column="86"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="87"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="89"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">sstrncpy<pos:position pos:line="25" pos:column="17"/></name> <argument_list pos:line="25" pos:column="18">(<argument><expr><name><name pos:line="25" pos:column="19">vl<pos:position pos:line="25" pos:column="21"/></name><operator pos:line="25" pos:column="21">.<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="22">type<pos:position pos:line="25" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="28">type<pos:position pos:line="25" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="34">sizeof <argument_list pos:line="25" pos:column="41">(<argument><expr><name><name pos:line="25" pos:column="42">vl<pos:position pos:line="25" pos:column="44"/></name><operator pos:line="25" pos:column="44">.<pos:position pos:line="25" pos:column="45"/></operator><name pos:line="25" pos:column="45">type<pos:position pos:line="25" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="52"/></expr_stmt>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">type_inst<pos:position pos:line="26" pos:column="22"/></name> <operator pos:line="26" pos:column="23">!=<pos:position pos:line="26" pos:column="25"/></operator> <name pos:line="26" pos:column="26">NULL<pos:position pos:line="26" pos:column="30"/></name></expr>)<pos:position pos:line="26" pos:column="31"/></condition><then pos:line="26" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="17">sstrncpy<pos:position pos:line="27" pos:column="25"/></name> <argument_list pos:line="27" pos:column="26">(<argument><expr><name><name pos:line="27" pos:column="27">vl<pos:position pos:line="27" pos:column="29"/></name><operator pos:line="27" pos:column="29">.<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="30">type_instance<pos:position pos:line="27" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="45">type_inst<pos:position pos:line="27" pos:column="54"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="56">sizeof <argument_list pos:line="27" pos:column="63">(<argument><expr><name><name pos:line="27" pos:column="64">vl<pos:position pos:line="27" pos:column="66"/></name><operator pos:line="27" pos:column="66">.<pos:position pos:line="27" pos:column="67"/></operator><name pos:line="27" pos:column="67">type_instance<pos:position pos:line="27" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="81"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="83"/></expr_stmt></block></then></if>

	<return pos:line="29" pos:column="9">return <expr><operator pos:line="29" pos:column="16">(<pos:position pos:line="29" pos:column="17"/></operator><call><name pos:line="29" pos:column="17">plugin_dispatch_values<pos:position pos:line="29" pos:column="39"/></name> <argument_list pos:line="29" pos:column="40">(<argument><expr><operator pos:line="29" pos:column="41">&amp;<pos:position pos:line="29" pos:column="46"/></operator><name pos:line="29" pos:column="42">vl<pos:position pos:line="29" pos:column="44"/></name></expr></argument>)<pos:position pos:line="29" pos:column="45"/></argument_list></call><operator pos:line="29" pos:column="45">)<pos:position pos:line="29" pos:column="46"/></operator></expr>;<pos:position pos:line="29" pos:column="47"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

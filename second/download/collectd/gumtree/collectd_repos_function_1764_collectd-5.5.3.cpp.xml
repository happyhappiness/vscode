<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1764_collectd-5.5.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">udb_query_preparation_area_t<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type>
<name pos:line="2" pos:column="1">udb_query_allocate_preparation_area<pos:position pos:line="2" pos:column="36"/></name> <parameter_list pos:line="2" pos:column="37">(<parameter><decl><type><name pos:line="2" pos:column="38">udb_query_t<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">q<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list> <comment type="block" pos:line="2" pos:column="54">/* {{{ */</comment>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">udb_query_preparation_area_t<pos:position pos:line="4" pos:column="31"/></name>   <modifier pos:line="4" pos:column="34">*<pos:position pos:line="4" pos:column="35"/></modifier></type><name pos:line="4" pos:column="35">q_area<pos:position pos:line="4" pos:column="41"/></name></decl>;<pos:position pos:line="4" pos:column="42"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">udb_result_preparation_area_t<pos:position pos:line="5" pos:column="32"/></name> <modifier pos:line="5" pos:column="33">*<pos:position pos:line="5" pos:column="34"/></modifier><modifier pos:line="5" pos:column="34">*<pos:position pos:line="5" pos:column="35"/></modifier></type><name pos:line="5" pos:column="35">next_r_area<pos:position pos:line="5" pos:column="46"/></name></decl>;<pos:position pos:line="5" pos:column="47"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">udb_result_t<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">r<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>

  <expr_stmt><expr><name pos:line="8" pos:column="3">q_area<pos:position pos:line="8" pos:column="9"/></name> <operator pos:line="8" pos:column="10">=<pos:position pos:line="8" pos:column="11"/></operator> <call><name pos:line="8" pos:column="12">malloc<pos:position pos:line="8" pos:column="18"/></name> <argument_list pos:line="8" pos:column="19">(<argument><expr><sizeof pos:line="8" pos:column="20">sizeof <argument_list pos:line="8" pos:column="27">(<argument><expr><operator pos:line="8" pos:column="28">*<pos:position pos:line="8" pos:column="29"/></operator><name pos:line="8" pos:column="29">q_area<pos:position pos:line="8" pos:column="35"/></name></expr></argument>)<pos:position pos:line="8" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="38"/></expr_stmt>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">q_area<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">==<pos:position pos:line="9" pos:column="16"/></operator> <name pos:line="9" pos:column="17">NULL<pos:position pos:line="9" pos:column="21"/></name></expr>)<pos:position pos:line="9" pos:column="22"/></condition><then pos:line="9" pos:column="22">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">NULL<pos:position pos:line="10" pos:column="16"/></name></expr>;<pos:position pos:line="10" pos:column="17"/></return></block></then></if>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">memset<pos:position pos:line="11" pos:column="9"/></name> <argument_list pos:line="11" pos:column="10">(<argument><expr><name pos:line="11" pos:column="11">q_area<pos:position pos:line="11" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="19">0<pos:position pos:line="11" pos:column="20"/></literal></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="22">sizeof <argument_list pos:line="11" pos:column="29">(<argument><expr><operator pos:line="11" pos:column="30">*<pos:position pos:line="11" pos:column="31"/></operator><name pos:line="11" pos:column="31">q_area<pos:position pos:line="11" pos:column="37"/></name></expr></argument>)<pos:position pos:line="11" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="40"/></expr_stmt>

  <expr_stmt><expr><name pos:line="13" pos:column="3">next_r_area<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">=<pos:position pos:line="13" pos:column="16"/></operator> <operator pos:line="13" pos:column="17">&amp;<pos:position pos:line="13" pos:column="22"/></operator><name><name pos:line="13" pos:column="18">q_area<pos:position pos:line="13" pos:column="24"/></name><operator pos:line="13" pos:column="24">-&gt;<pos:position pos:line="13" pos:column="29"/></operator><name pos:line="13" pos:column="26">result_prep_areas<pos:position pos:line="13" pos:column="43"/></name></name></expr>;<pos:position pos:line="13" pos:column="44"/></expr_stmt>
  <for pos:line="14" pos:column="3">for <control pos:line="14" pos:column="7">(<init><expr><name pos:line="14" pos:column="8">r<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">=<pos:position pos:line="14" pos:column="11"/></operator> <name><name pos:line="14" pos:column="12">q<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">results<pos:position pos:line="14" pos:column="22"/></name></name></expr>;<pos:position pos:line="14" pos:column="23"/></init> <condition><expr><name pos:line="14" pos:column="24">r<pos:position pos:line="14" pos:column="25"/></name> <operator pos:line="14" pos:column="26">!=<pos:position pos:line="14" pos:column="28"/></operator> <name pos:line="14" pos:column="29">NULL<pos:position pos:line="14" pos:column="33"/></name></expr>;<pos:position pos:line="14" pos:column="34"/></condition> <incr><expr><name pos:line="14" pos:column="35">r<pos:position pos:line="14" pos:column="36"/></name> <operator pos:line="14" pos:column="37">=<pos:position pos:line="14" pos:column="38"/></operator> <name><name pos:line="14" pos:column="39">r<pos:position pos:line="14" pos:column="40"/></name><operator pos:line="14" pos:column="40">-&gt;<pos:position pos:line="14" pos:column="45"/></operator><name pos:line="14" pos:column="42">next<pos:position pos:line="14" pos:column="46"/></name></name></expr></incr>)<pos:position pos:line="14" pos:column="47"/></control>
  <block pos:line="15" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">udb_result_preparation_area_t<pos:position pos:line="16" pos:column="34"/></name> <modifier pos:line="16" pos:column="35">*<pos:position pos:line="16" pos:column="36"/></modifier></type><name pos:line="16" pos:column="36">r_area<pos:position pos:line="16" pos:column="42"/></name></decl>;<pos:position pos:line="16" pos:column="43"/></decl_stmt>

    <expr_stmt><expr><name pos:line="18" pos:column="5">r_area<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <call><name pos:line="18" pos:column="14">malloc<pos:position pos:line="18" pos:column="20"/></name> <argument_list pos:line="18" pos:column="21">(<argument><expr><sizeof pos:line="18" pos:column="22">sizeof <argument_list pos:line="18" pos:column="29">(<argument><expr><operator pos:line="18" pos:column="30">*<pos:position pos:line="18" pos:column="31"/></operator><name pos:line="18" pos:column="31">r_area<pos:position pos:line="18" pos:column="37"/></name></expr></argument>)<pos:position pos:line="18" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="40"/></expr_stmt>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">r_area<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">==<pos:position pos:line="19" pos:column="18"/></operator> <name pos:line="19" pos:column="19">NULL<pos:position pos:line="19" pos:column="23"/></name></expr>)<pos:position pos:line="19" pos:column="24"/></condition><then pos:line="19" pos:column="24">
    <block pos:line="20" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="21" pos:column="7">udb_result_preparation_area_t<pos:position pos:line="21" pos:column="36"/></name> <modifier pos:line="21" pos:column="37">*<pos:position pos:line="21" pos:column="38"/></modifier></type><name pos:line="21" pos:column="38">a<pos:position pos:line="21" pos:column="39"/></name> <init pos:line="21" pos:column="40">= <expr><name><name pos:line="21" pos:column="42">q_area<pos:position pos:line="21" pos:column="48"/></name><operator pos:line="21" pos:column="48">-&gt;<pos:position pos:line="21" pos:column="53"/></operator><name pos:line="21" pos:column="50">result_prep_areas<pos:position pos:line="21" pos:column="67"/></name></name></expr></init></decl>;<pos:position pos:line="21" pos:column="68"/></decl_stmt>

      <while pos:line="23" pos:column="7">while <condition pos:line="23" pos:column="13">(<expr><name pos:line="23" pos:column="14">a<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">!=<pos:position pos:line="23" pos:column="18"/></operator> <name pos:line="23" pos:column="19">NULL<pos:position pos:line="23" pos:column="23"/></name></expr>)<pos:position pos:line="23" pos:column="24"/></condition>
      <block pos:line="24" pos:column="7">{
        <decl_stmt><decl><type><name pos:line="25" pos:column="9">udb_result_preparation_area_t<pos:position pos:line="25" pos:column="38"/></name> <modifier pos:line="25" pos:column="39">*<pos:position pos:line="25" pos:column="40"/></modifier></type><name pos:line="25" pos:column="40">next<pos:position pos:line="25" pos:column="44"/></name> <init pos:line="25" pos:column="45">= <expr><name><name pos:line="25" pos:column="47">a<pos:position pos:line="25" pos:column="48"/></name><operator pos:line="25" pos:column="48">-&gt;<pos:position pos:line="25" pos:column="53"/></operator><name pos:line="25" pos:column="50">next<pos:position pos:line="25" pos:column="54"/></name></name></expr></init></decl>;<pos:position pos:line="25" pos:column="55"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">sfree<pos:position pos:line="26" pos:column="14"/></name> <argument_list pos:line="26" pos:column="15">(<argument><expr><name pos:line="26" pos:column="16">a<pos:position pos:line="26" pos:column="17"/></name></expr></argument>)<pos:position pos:line="26" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><name pos:line="27" pos:column="9">a<pos:position pos:line="27" pos:column="10"/></name> <operator pos:line="27" pos:column="11">=<pos:position pos:line="27" pos:column="12"/></operator> <name pos:line="27" pos:column="13">next<pos:position pos:line="27" pos:column="17"/></name></expr>;<pos:position pos:line="27" pos:column="18"/></expr_stmt>
      }<pos:position pos:line="28" pos:column="8"/></block></while>

      <expr_stmt><expr><call><name pos:line="30" pos:column="7">free<pos:position pos:line="30" pos:column="11"/></name> <argument_list pos:line="30" pos:column="12">(<argument><expr><name pos:line="30" pos:column="13">q_area<pos:position pos:line="30" pos:column="19"/></name></expr></argument>)<pos:position pos:line="30" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="21"/></expr_stmt>
      <return pos:line="31" pos:column="7">return <expr><name pos:line="31" pos:column="14">NULL<pos:position pos:line="31" pos:column="18"/></name></expr>;<pos:position pos:line="31" pos:column="19"/></return>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="34" pos:column="5">memset<pos:position pos:line="34" pos:column="11"/></name> <argument_list pos:line="34" pos:column="12">(<argument><expr><name pos:line="34" pos:column="13">r_area<pos:position pos:line="34" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="21">0<pos:position pos:line="34" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="34" pos:column="24">sizeof <argument_list pos:line="34" pos:column="31">(<argument><expr><operator pos:line="34" pos:column="32">*<pos:position pos:line="34" pos:column="33"/></operator><name pos:line="34" pos:column="33">r_area<pos:position pos:line="34" pos:column="39"/></name></expr></argument>)<pos:position pos:line="34" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="34" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="42"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="36" pos:column="5">*<pos:position pos:line="36" pos:column="6"/></operator><name pos:line="36" pos:column="6">next_r_area<pos:position pos:line="36" pos:column="17"/></name> <operator pos:line="36" pos:column="18">=<pos:position pos:line="36" pos:column="19"/></operator> <name pos:line="36" pos:column="20">r_area<pos:position pos:line="36" pos:column="26"/></name></expr>;<pos:position pos:line="36" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="37" pos:column="5">next_r_area<pos:position pos:line="37" pos:column="16"/></name>  <operator pos:line="37" pos:column="18">=<pos:position pos:line="37" pos:column="19"/></operator> <operator pos:line="37" pos:column="20">&amp;<pos:position pos:line="37" pos:column="25"/></operator><name><name pos:line="37" pos:column="21">r_area<pos:position pos:line="37" pos:column="27"/></name><operator pos:line="37" pos:column="27">-&gt;<pos:position pos:line="37" pos:column="32"/></operator><name pos:line="37" pos:column="29">next<pos:position pos:line="37" pos:column="33"/></name></name></expr>;<pos:position pos:line="37" pos:column="34"/></expr_stmt>
  }<pos:position pos:line="38" pos:column="4"/></block></for>

  <return pos:line="40" pos:column="3">return <expr><operator pos:line="40" pos:column="10">(<pos:position pos:line="40" pos:column="11"/></operator><name pos:line="40" pos:column="11">q_area<pos:position pos:line="40" pos:column="17"/></name><operator pos:line="40" pos:column="17">)<pos:position pos:line="40" pos:column="18"/></operator></expr>;<pos:position pos:line="40" pos:column="19"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

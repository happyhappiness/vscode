<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1125_collectd-4.10.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">value_list_to_string<pos:position pos:line="1" pos:column="32"/></name> <parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">buffer<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">int<pos:position pos:line="1" pos:column="51"/></name></type> <name pos:line="1" pos:column="52">buffer_len<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">data_set_t<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">ds<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="39">const<pos:position pos:line="2" pos:column="44"/></specifier> <name pos:line="2" pos:column="45">value_list_t<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">vl<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">offset<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">status<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">i<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">memset<pos:position pos:line="8" pos:column="15"/></name> <argument_list pos:line="8" pos:column="16">(<argument><expr><name pos:line="8" pos:column="17">buffer<pos:position pos:line="8" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="8" pos:column="25">'\0'<pos:position pos:line="8" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="31">buffer_len<pos:position pos:line="8" pos:column="41"/></name></expr></argument>)<pos:position pos:line="8" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="43"/></expr_stmt>

	<expr_stmt><expr><name pos:line="10" pos:column="9">status<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <call><name pos:line="10" pos:column="18">ssnprintf<pos:position pos:line="10" pos:column="27"/></name> <argument_list pos:line="10" pos:column="28">(<argument><expr><name pos:line="10" pos:column="29">buffer<pos:position pos:line="10" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="37">buffer_len<pos:position pos:line="10" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="49">"%u"<pos:position pos:line="10" pos:column="53"/></literal></expr></argument>, <argument><expr><operator pos:line="10" pos:column="55">(<pos:position pos:line="10" pos:column="56"/></operator><name pos:line="10" pos:column="56">unsigned<pos:position pos:line="10" pos:column="64"/></name> <name pos:line="10" pos:column="65">int<pos:position pos:line="10" pos:column="68"/></name><operator pos:line="10" pos:column="68">)<pos:position pos:line="10" pos:column="69"/></operator> <name><name pos:line="10" pos:column="70">vl<pos:position pos:line="10" pos:column="72"/></name><operator pos:line="10" pos:column="72">-&gt;<pos:position pos:line="10" pos:column="77"/></operator><name pos:line="10" pos:column="74">time<pos:position pos:line="10" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="80"/></expr_stmt>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">(<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">status<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">&lt;<pos:position pos:line="11" pos:column="25"/></operator> <literal type="number" pos:line="11" pos:column="23">1<pos:position pos:line="11" pos:column="24"/></literal><operator pos:line="11" pos:column="24">)<pos:position pos:line="11" pos:column="25"/></operator> <operator pos:line="11" pos:column="26">||<pos:position pos:line="11" pos:column="28"/></operator> <operator pos:line="11" pos:column="29">(<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="30">status<pos:position pos:line="11" pos:column="36"/></name> <operator pos:line="11" pos:column="37">&gt;=<pos:position pos:line="11" pos:column="42"/></operator> <name pos:line="11" pos:column="40">buffer_len<pos:position pos:line="11" pos:column="50"/></name><operator pos:line="11" pos:column="50">)<pos:position pos:line="11" pos:column="51"/></operator></expr>)<pos:position pos:line="11" pos:column="52"/></condition><then pos:line="11" pos:column="52">
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><operator pos:line="12" pos:column="24">(<pos:position pos:line="12" pos:column="25"/></operator><operator pos:line="12" pos:column="25">-<pos:position pos:line="12" pos:column="26"/></operator><literal type="number" pos:line="12" pos:column="26">1<pos:position pos:line="12" pos:column="27"/></literal><operator pos:line="12" pos:column="27">)<pos:position pos:line="12" pos:column="28"/></operator></expr>;<pos:position pos:line="12" pos:column="29"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="13" pos:column="9">offset<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <name pos:line="13" pos:column="18">status<pos:position pos:line="13" pos:column="24"/></name></expr>;<pos:position pos:line="13" pos:column="25"/></expr_stmt>

	<for pos:line="15" pos:column="9">for <control pos:line="15" pos:column="13">(<init><expr><name pos:line="15" pos:column="14">i<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <literal type="number" pos:line="15" pos:column="18">0<pos:position pos:line="15" pos:column="19"/></literal></expr>;<pos:position pos:line="15" pos:column="20"/></init> <condition><expr><name pos:line="15" pos:column="21">i<pos:position pos:line="15" pos:column="22"/></name> <operator pos:line="15" pos:column="23">&lt;<pos:position pos:line="15" pos:column="27"/></operator> <name><name pos:line="15" pos:column="25">ds<pos:position pos:line="15" pos:column="27"/></name><operator pos:line="15" pos:column="27">-&gt;<pos:position pos:line="15" pos:column="32"/></operator><name pos:line="15" pos:column="29">ds_num<pos:position pos:line="15" pos:column="35"/></name></name></expr>;<pos:position pos:line="15" pos:column="36"/></condition> <incr><expr><name pos:line="15" pos:column="37">i<pos:position pos:line="15" pos:column="38"/></name><operator pos:line="15" pos:column="38">++<pos:position pos:line="15" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="15" pos:column="41"/></control>
	<block pos:line="16" pos:column="9">{
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><operator pos:line="17" pos:column="21">(<pos:position pos:line="17" pos:column="22"/></operator><name><name pos:line="17" pos:column="22">ds<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">-&gt;<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="26">ds<pos:position pos:line="17" pos:column="28"/></name><index pos:line="17" pos:column="28">[<expr><name pos:line="17" pos:column="29">i<pos:position pos:line="17" pos:column="30"/></name></expr>]<pos:position pos:line="17" pos:column="31"/></index></name><operator pos:line="17" pos:column="31">.<pos:position pos:line="17" pos:column="32"/></operator><name pos:line="17" pos:column="32">type<pos:position pos:line="17" pos:column="36"/></name> <operator pos:line="17" pos:column="37">!=<pos:position pos:line="17" pos:column="39"/></operator> <name pos:line="17" pos:column="40">DS_TYPE_COUNTER<pos:position pos:line="17" pos:column="55"/></name><operator pos:line="17" pos:column="55">)<pos:position pos:line="17" pos:column="56"/></operator>
				<operator pos:line="18" pos:column="33">&amp;&amp;<pos:position pos:line="18" pos:column="43"/></operator> <operator pos:line="18" pos:column="36">(<pos:position pos:line="18" pos:column="37"/></operator><name><name pos:line="18" pos:column="37">ds<pos:position pos:line="18" pos:column="39"/></name><operator pos:line="18" pos:column="39">-&gt;<pos:position pos:line="18" pos:column="44"/></operator><name pos:line="18" pos:column="41">ds<pos:position pos:line="18" pos:column="43"/></name><index pos:line="18" pos:column="43">[<expr><name pos:line="18" pos:column="44">i<pos:position pos:line="18" pos:column="45"/></name></expr>]<pos:position pos:line="18" pos:column="46"/></index></name><operator pos:line="18" pos:column="46">.<pos:position pos:line="18" pos:column="47"/></operator><name pos:line="18" pos:column="47">type<pos:position pos:line="18" pos:column="51"/></name> <operator pos:line="18" pos:column="52">!=<pos:position pos:line="18" pos:column="54"/></operator> <name pos:line="18" pos:column="55">DS_TYPE_GAUGE<pos:position pos:line="18" pos:column="68"/></name><operator pos:line="18" pos:column="68">)<pos:position pos:line="18" pos:column="69"/></operator>
				<operator pos:line="19" pos:column="33">&amp;&amp;<pos:position pos:line="19" pos:column="43"/></operator> <operator pos:line="19" pos:column="36">(<pos:position pos:line="19" pos:column="37"/></operator><name><name pos:line="19" pos:column="37">ds<pos:position pos:line="19" pos:column="39"/></name><operator pos:line="19" pos:column="39">-&gt;<pos:position pos:line="19" pos:column="44"/></operator><name pos:line="19" pos:column="41">ds<pos:position pos:line="19" pos:column="43"/></name><index pos:line="19" pos:column="43">[<expr><name pos:line="19" pos:column="44">i<pos:position pos:line="19" pos:column="45"/></name></expr>]<pos:position pos:line="19" pos:column="46"/></index></name><operator pos:line="19" pos:column="46">.<pos:position pos:line="19" pos:column="47"/></operator><name pos:line="19" pos:column="47">type<pos:position pos:line="19" pos:column="51"/></name> <operator pos:line="19" pos:column="52">!=<pos:position pos:line="19" pos:column="54"/></operator> <name pos:line="19" pos:column="55">DS_TYPE_DERIVE<pos:position pos:line="19" pos:column="69"/></name><operator pos:line="19" pos:column="69">)<pos:position pos:line="19" pos:column="70"/></operator>
				<operator pos:line="20" pos:column="33">&amp;&amp;<pos:position pos:line="20" pos:column="43"/></operator> <operator pos:line="20" pos:column="36">(<pos:position pos:line="20" pos:column="37"/></operator><name><name pos:line="20" pos:column="37">ds<pos:position pos:line="20" pos:column="39"/></name><operator pos:line="20" pos:column="39">-&gt;<pos:position pos:line="20" pos:column="44"/></operator><name pos:line="20" pos:column="41">ds<pos:position pos:line="20" pos:column="43"/></name><index pos:line="20" pos:column="43">[<expr><name pos:line="20" pos:column="44">i<pos:position pos:line="20" pos:column="45"/></name></expr>]<pos:position pos:line="20" pos:column="46"/></index></name><operator pos:line="20" pos:column="46">.<pos:position pos:line="20" pos:column="47"/></operator><name pos:line="20" pos:column="47">type<pos:position pos:line="20" pos:column="51"/></name> <operator pos:line="20" pos:column="52">!=<pos:position pos:line="20" pos:column="54"/></operator> <name pos:line="20" pos:column="55">DS_TYPE_ABSOLUTE<pos:position pos:line="20" pos:column="71"/></name><operator pos:line="20" pos:column="71">)<pos:position pos:line="20" pos:column="72"/></operator></expr>)<pos:position pos:line="20" pos:column="73"/></condition><then pos:line="20" pos:column="73">
			<block type="pseudo"><return pos:line="21" pos:column="25">return <expr><operator pos:line="21" pos:column="32">(<pos:position pos:line="21" pos:column="33"/></operator><operator pos:line="21" pos:column="33">-<pos:position pos:line="21" pos:column="34"/></operator><literal type="number" pos:line="21" pos:column="34">1<pos:position pos:line="21" pos:column="35"/></literal><operator pos:line="21" pos:column="35">)<pos:position pos:line="21" pos:column="36"/></operator></expr>;<pos:position pos:line="21" pos:column="37"/></return></block></then></if>

		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><name><name pos:line="23" pos:column="21">ds<pos:position pos:line="23" pos:column="23"/></name><operator pos:line="23" pos:column="23">-&gt;<pos:position pos:line="23" pos:column="28"/></operator><name pos:line="23" pos:column="25">ds<pos:position pos:line="23" pos:column="27"/></name><index pos:line="23" pos:column="27">[<expr><name pos:line="23" pos:column="28">i<pos:position pos:line="23" pos:column="29"/></name></expr>]<pos:position pos:line="23" pos:column="30"/></index></name><operator pos:line="23" pos:column="30">.<pos:position pos:line="23" pos:column="31"/></operator><name pos:line="23" pos:column="31">type<pos:position pos:line="23" pos:column="35"/></name> <operator pos:line="23" pos:column="36">==<pos:position pos:line="23" pos:column="38"/></operator> <name pos:line="23" pos:column="39">DS_TYPE_COUNTER<pos:position pos:line="23" pos:column="54"/></name></expr>)<pos:position pos:line="23" pos:column="55"/></condition><then pos:line="23" pos:column="55">
			<block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="25">status<pos:position pos:line="24" pos:column="31"/></name> <operator pos:line="24" pos:column="32">=<pos:position pos:line="24" pos:column="33"/></operator> <call><name pos:line="24" pos:column="34">ssnprintf<pos:position pos:line="24" pos:column="43"/></name> <argument_list pos:line="24" pos:column="44">(<argument><expr><name pos:line="24" pos:column="45">buffer<pos:position pos:line="24" pos:column="51"/></name> <operator pos:line="24" pos:column="52">+<pos:position pos:line="24" pos:column="53"/></operator> <name pos:line="24" pos:column="54">offset<pos:position pos:line="24" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="62">buffer_len<pos:position pos:line="24" pos:column="72"/></name> <operator pos:line="24" pos:column="73">-<pos:position pos:line="24" pos:column="74"/></operator> <name pos:line="24" pos:column="75">offset<pos:position pos:line="24" pos:column="81"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="25" pos:column="41">":%llu"<pos:position pos:line="25" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="50">vl<pos:position pos:line="25" pos:column="52"/></name><operator pos:line="25" pos:column="52">-&gt;<pos:position pos:line="25" pos:column="57"/></operator><name pos:line="25" pos:column="54">values<pos:position pos:line="25" pos:column="60"/></name><index pos:line="25" pos:column="60">[<expr><name pos:line="25" pos:column="61">i<pos:position pos:line="25" pos:column="62"/></name></expr>]<pos:position pos:line="25" pos:column="63"/></index></name><operator pos:line="25" pos:column="63">.<pos:position pos:line="25" pos:column="64"/></operator><name pos:line="25" pos:column="64">counter<pos:position pos:line="25" pos:column="71"/></name></expr></argument>)<pos:position pos:line="25" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="73"/></expr_stmt></block></then>
		<elseif pos:line="26" pos:column="17">else <if pos:line="26" pos:column="22">if <condition pos:line="26" pos:column="25">(<expr><name><name pos:line="26" pos:column="26">ds<pos:position pos:line="26" pos:column="28"/></name><operator pos:line="26" pos:column="28">-&gt;<pos:position pos:line="26" pos:column="33"/></operator><name pos:line="26" pos:column="30">ds<pos:position pos:line="26" pos:column="32"/></name><index pos:line="26" pos:column="32">[<expr><name pos:line="26" pos:column="33">i<pos:position pos:line="26" pos:column="34"/></name></expr>]<pos:position pos:line="26" pos:column="35"/></index></name><operator pos:line="26" pos:column="35">.<pos:position pos:line="26" pos:column="36"/></operator><name pos:line="26" pos:column="36">type<pos:position pos:line="26" pos:column="40"/></name> <operator pos:line="26" pos:column="41">==<pos:position pos:line="26" pos:column="43"/></operator> <name pos:line="26" pos:column="44">DS_TYPE_GAUGE<pos:position pos:line="26" pos:column="57"/></name></expr>)<pos:position pos:line="26" pos:column="58"/></condition><then pos:line="26" pos:column="58">
			<block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="25">status<pos:position pos:line="27" pos:column="31"/></name> <operator pos:line="27" pos:column="32">=<pos:position pos:line="27" pos:column="33"/></operator> <call><name pos:line="27" pos:column="34">ssnprintf<pos:position pos:line="27" pos:column="43"/></name> <argument_list pos:line="27" pos:column="44">(<argument><expr><name pos:line="27" pos:column="45">buffer<pos:position pos:line="27" pos:column="51"/></name> <operator pos:line="27" pos:column="52">+<pos:position pos:line="27" pos:column="53"/></operator> <name pos:line="27" pos:column="54">offset<pos:position pos:line="27" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="62">buffer_len<pos:position pos:line="27" pos:column="72"/></name> <operator pos:line="27" pos:column="73">-<pos:position pos:line="27" pos:column="74"/></operator> <name pos:line="27" pos:column="75">offset<pos:position pos:line="27" pos:column="81"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="28" pos:column="41">":%lf"<pos:position pos:line="28" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="49">vl<pos:position pos:line="28" pos:column="51"/></name><operator pos:line="28" pos:column="51">-&gt;<pos:position pos:line="28" pos:column="56"/></operator><name pos:line="28" pos:column="53">values<pos:position pos:line="28" pos:column="59"/></name><index pos:line="28" pos:column="59">[<expr><name pos:line="28" pos:column="60">i<pos:position pos:line="28" pos:column="61"/></name></expr>]<pos:position pos:line="28" pos:column="62"/></index></name><operator pos:line="28" pos:column="62">.<pos:position pos:line="28" pos:column="63"/></operator><name pos:line="28" pos:column="63">gauge<pos:position pos:line="28" pos:column="68"/></name></expr></argument>)<pos:position pos:line="28" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="70"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="29" pos:column="17">else <if pos:line="29" pos:column="22">if <condition pos:line="29" pos:column="25">(<expr><name><name pos:line="29" pos:column="26">ds<pos:position pos:line="29" pos:column="28"/></name><operator pos:line="29" pos:column="28">-&gt;<pos:position pos:line="29" pos:column="33"/></operator><name pos:line="29" pos:column="30">ds<pos:position pos:line="29" pos:column="32"/></name><index pos:line="29" pos:column="32">[<expr><name pos:line="29" pos:column="33">i<pos:position pos:line="29" pos:column="34"/></name></expr>]<pos:position pos:line="29" pos:column="35"/></index></name><operator pos:line="29" pos:column="35">.<pos:position pos:line="29" pos:column="36"/></operator><name pos:line="29" pos:column="36">type<pos:position pos:line="29" pos:column="40"/></name> <operator pos:line="29" pos:column="41">==<pos:position pos:line="29" pos:column="43"/></operator> <name pos:line="29" pos:column="44">DS_TYPE_DERIVE<pos:position pos:line="29" pos:column="58"/></name></expr>)<pos:position pos:line="29" pos:column="59"/></condition><then pos:line="29" pos:column="59">
			<block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="25">status<pos:position pos:line="30" pos:column="31"/></name> <operator pos:line="30" pos:column="32">=<pos:position pos:line="30" pos:column="33"/></operator> <call><name pos:line="30" pos:column="34">ssnprintf<pos:position pos:line="30" pos:column="43"/></name> <argument_list pos:line="30" pos:column="44">(<argument><expr><name pos:line="30" pos:column="45">buffer<pos:position pos:line="30" pos:column="51"/></name> <operator pos:line="30" pos:column="52">+<pos:position pos:line="30" pos:column="53"/></operator> <name pos:line="30" pos:column="54">offset<pos:position pos:line="30" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="62">buffer_len<pos:position pos:line="30" pos:column="72"/></name> <operator pos:line="30" pos:column="73">-<pos:position pos:line="30" pos:column="74"/></operator> <name pos:line="30" pos:column="75">offset<pos:position pos:line="30" pos:column="81"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="31" pos:column="41">":%"<pos:position pos:line="31" pos:column="45"/></literal><name pos:line="31" pos:column="45">PRIi64<pos:position pos:line="31" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="53">vl<pos:position pos:line="31" pos:column="55"/></name><operator pos:line="31" pos:column="55">-&gt;<pos:position pos:line="31" pos:column="60"/></operator><name pos:line="31" pos:column="57">values<pos:position pos:line="31" pos:column="63"/></name><index pos:line="31" pos:column="63">[<expr><name pos:line="31" pos:column="64">i<pos:position pos:line="31" pos:column="65"/></name></expr>]<pos:position pos:line="31" pos:column="66"/></index></name><operator pos:line="31" pos:column="66">.<pos:position pos:line="31" pos:column="67"/></operator><name pos:line="31" pos:column="67">derive<pos:position pos:line="31" pos:column="73"/></name></expr></argument>)<pos:position pos:line="31" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="75"/></expr_stmt></block></then></if></elseif>
		<else pos:line="32" pos:column="17">else <comment type="block" pos:line="32" pos:column="22">/*if (ds-&gt;ds[i].type == DS_TYPE_ABSOLUTE) */</comment>
			<block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="25">status<pos:position pos:line="33" pos:column="31"/></name> <operator pos:line="33" pos:column="32">=<pos:position pos:line="33" pos:column="33"/></operator> <call><name pos:line="33" pos:column="34">ssnprintf<pos:position pos:line="33" pos:column="43"/></name> <argument_list pos:line="33" pos:column="44">(<argument><expr><name pos:line="33" pos:column="45">buffer<pos:position pos:line="33" pos:column="51"/></name> <operator pos:line="33" pos:column="52">+<pos:position pos:line="33" pos:column="53"/></operator> <name pos:line="33" pos:column="54">offset<pos:position pos:line="33" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="62">buffer_len<pos:position pos:line="33" pos:column="72"/></name> <operator pos:line="33" pos:column="73">-<pos:position pos:line="33" pos:column="74"/></operator> <name pos:line="33" pos:column="75">offset<pos:position pos:line="33" pos:column="81"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="34" pos:column="41">":%"<pos:position pos:line="34" pos:column="45"/></literal><name pos:line="34" pos:column="45">PRIu64<pos:position pos:line="34" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="53">vl<pos:position pos:line="34" pos:column="55"/></name><operator pos:line="34" pos:column="55">-&gt;<pos:position pos:line="34" pos:column="60"/></operator><name pos:line="34" pos:column="57">values<pos:position pos:line="34" pos:column="63"/></name><index pos:line="34" pos:column="63">[<expr><name pos:line="34" pos:column="64">i<pos:position pos:line="34" pos:column="65"/></name></expr>]<pos:position pos:line="34" pos:column="66"/></index></name><operator pos:line="34" pos:column="66">.<pos:position pos:line="34" pos:column="67"/></operator><name pos:line="34" pos:column="67">absolute<pos:position pos:line="34" pos:column="75"/></name></expr></argument>)<pos:position pos:line="34" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="77"/></expr_stmt></block></else></if>

		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><operator pos:line="36" pos:column="21">(<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="22">status<pos:position pos:line="36" pos:column="28"/></name> <operator pos:line="36" pos:column="29">&lt;<pos:position pos:line="36" pos:column="33"/></operator> <literal type="number" pos:line="36" pos:column="31">1<pos:position pos:line="36" pos:column="32"/></literal><operator pos:line="36" pos:column="32">)<pos:position pos:line="36" pos:column="33"/></operator> <operator pos:line="36" pos:column="34">||<pos:position pos:line="36" pos:column="36"/></operator> <operator pos:line="36" pos:column="37">(<pos:position pos:line="36" pos:column="38"/></operator><name pos:line="36" pos:column="38">status<pos:position pos:line="36" pos:column="44"/></name> <operator pos:line="36" pos:column="45">&gt;=<pos:position pos:line="36" pos:column="50"/></operator> <operator pos:line="36" pos:column="48">(<pos:position pos:line="36" pos:column="49"/></operator><name pos:line="36" pos:column="49">buffer_len<pos:position pos:line="36" pos:column="59"/></name> <operator pos:line="36" pos:column="60">-<pos:position pos:line="36" pos:column="61"/></operator> <name pos:line="36" pos:column="62">offset<pos:position pos:line="36" pos:column="68"/></name><operator pos:line="36" pos:column="68">)<pos:position pos:line="36" pos:column="69"/></operator><operator pos:line="36" pos:column="69">)<pos:position pos:line="36" pos:column="70"/></operator></expr>)<pos:position pos:line="36" pos:column="71"/></condition><then pos:line="36" pos:column="71">
			<block type="pseudo"><return pos:line="37" pos:column="25">return <expr><operator pos:line="37" pos:column="32">(<pos:position pos:line="37" pos:column="33"/></operator><operator pos:line="37" pos:column="33">-<pos:position pos:line="37" pos:column="34"/></operator><literal type="number" pos:line="37" pos:column="34">1<pos:position pos:line="37" pos:column="35"/></literal><operator pos:line="37" pos:column="35">)<pos:position pos:line="37" pos:column="36"/></operator></expr>;<pos:position pos:line="37" pos:column="37"/></return></block></then></if>

		<expr_stmt><expr><name pos:line="39" pos:column="17">offset<pos:position pos:line="39" pos:column="23"/></name> <operator pos:line="39" pos:column="24">+=<pos:position pos:line="39" pos:column="26"/></operator> <name pos:line="39" pos:column="27">status<pos:position pos:line="39" pos:column="33"/></name></expr>;<pos:position pos:line="39" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="40" pos:column="10"/></block></for> <comment type="block" pos:line="40" pos:column="11">/* for ds-&gt;ds_num */</comment>

	<return pos:line="42" pos:column="9">return <expr><operator pos:line="42" pos:column="16">(<pos:position pos:line="42" pos:column="17"/></operator><literal type="number" pos:line="42" pos:column="17">0<pos:position pos:line="42" pos:column="18"/></literal><operator pos:line="42" pos:column="18">)<pos:position pos:line="42" pos:column="19"/></operator></expr>;<pos:position pos:line="42" pos:column="20"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

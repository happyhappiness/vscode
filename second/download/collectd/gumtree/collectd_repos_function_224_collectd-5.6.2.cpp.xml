<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_224_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">refresh_lists<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">void<pos:position pos:line="1" pos:column="30"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="31"/></parameter_list> <block pos:line="1" pos:column="32">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">n<pos:position pos:line="2" pos:column="8"/></name></decl>;<pos:position pos:line="2" pos:column="9"/></decl_stmt>

  <expr_stmt><expr><name pos:line="4" pos:column="3">n<pos:position pos:line="4" pos:column="4"/></name> <operator pos:line="4" pos:column="5">=<pos:position pos:line="4" pos:column="6"/></operator> <call><name pos:line="4" pos:column="7">virConnectNumOfDomains<pos:position pos:line="4" pos:column="29"/></name><argument_list pos:line="4" pos:column="29">(<argument><expr><name pos:line="4" pos:column="30">conn<pos:position pos:line="4" pos:column="34"/></name></expr></argument>)<pos:position pos:line="4" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="36"/></expr_stmt>
  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">n<pos:position pos:line="5" pos:column="8"/></name> <operator pos:line="5" pos:column="9">&lt;<pos:position pos:line="5" pos:column="13"/></operator> <literal type="number" pos:line="5" pos:column="11">0<pos:position pos:line="5" pos:column="12"/></literal></expr>)<pos:position pos:line="5" pos:column="13"/></condition><then pos:line="5" pos:column="13"> <block pos:line="5" pos:column="14">{
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">VIRT_ERROR<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><name pos:line="6" pos:column="16">conn<pos:position pos:line="6" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="22">"reading number of domains"<pos:position pos:line="6" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="51"/></expr_stmt>
    <return pos:line="7" pos:column="5">return <expr><operator pos:line="7" pos:column="12">-<pos:position pos:line="7" pos:column="13"/></operator><literal type="number" pos:line="7" pos:column="13">1<pos:position pos:line="7" pos:column="14"/></literal></expr>;<pos:position pos:line="7" pos:column="15"/></return>
  }<pos:position pos:line="8" pos:column="4"/></block></then></if>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">n<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">&gt;<pos:position pos:line="10" pos:column="13"/></operator> <literal type="number" pos:line="10" pos:column="11">0<pos:position pos:line="10" pos:column="12"/></literal></expr>)<pos:position pos:line="10" pos:column="13"/></condition><then pos:line="10" pos:column="13"> <block pos:line="10" pos:column="14">{
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">int<pos:position pos:line="11" pos:column="8"/></name> <modifier pos:line="11" pos:column="9">*<pos:position pos:line="11" pos:column="10"/></modifier></type><name pos:line="11" pos:column="10">domids<pos:position pos:line="11" pos:column="16"/></name></decl>;<pos:position pos:line="11" pos:column="17"/></decl_stmt>

    <comment type="block" pos:line="13" pos:column="5">/* Get list of domains. */</comment>
    <expr_stmt><expr><name pos:line="14" pos:column="5">domids<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <call><name pos:line="14" pos:column="14">malloc<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><sizeof pos:line="14" pos:column="21">sizeof<argument_list pos:line="14" pos:column="27">(<argument><expr><operator pos:line="14" pos:column="28">*<pos:position pos:line="14" pos:column="29"/></operator><name pos:line="14" pos:column="29">domids<pos:position pos:line="14" pos:column="35"/></name></expr></argument>)<pos:position pos:line="14" pos:column="36"/></argument_list></sizeof> <operator pos:line="14" pos:column="37">*<pos:position pos:line="14" pos:column="38"/></operator> <name pos:line="14" pos:column="39">n<pos:position pos:line="14" pos:column="40"/></name></expr></argument>)<pos:position pos:line="14" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="42"/></expr_stmt>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">domids<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">==<pos:position pos:line="15" pos:column="18"/></operator> <name pos:line="15" pos:column="19">NULL<pos:position pos:line="15" pos:column="23"/></name></expr>)<pos:position pos:line="15" pos:column="24"/></condition><then pos:line="15" pos:column="24"> <block pos:line="15" pos:column="25">{
      <expr_stmt><expr><call><name pos:line="16" pos:column="7">ERROR<pos:position pos:line="16" pos:column="12"/></name><argument_list pos:line="16" pos:column="12">(<argument><expr><name pos:line="16" pos:column="13">PLUGIN_NAME<pos:position pos:line="16" pos:column="24"/></name> <literal type="string" pos:line="16" pos:column="25">" plugin: malloc failed."<pos:position pos:line="16" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="52"/></expr_stmt>
      <return pos:line="17" pos:column="7">return <expr><operator pos:line="17" pos:column="14">-<pos:position pos:line="17" pos:column="15"/></operator><literal type="number" pos:line="17" pos:column="15">1<pos:position pos:line="17" pos:column="16"/></literal></expr>;<pos:position pos:line="17" pos:column="17"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="20" pos:column="5">n<pos:position pos:line="20" pos:column="6"/></name> <operator pos:line="20" pos:column="7">=<pos:position pos:line="20" pos:column="8"/></operator> <call><name pos:line="20" pos:column="9">virConnectListDomains<pos:position pos:line="20" pos:column="30"/></name><argument_list pos:line="20" pos:column="30">(<argument><expr><name pos:line="20" pos:column="31">conn<pos:position pos:line="20" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="37">domids<pos:position pos:line="20" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="45">n<pos:position pos:line="20" pos:column="46"/></name></expr></argument>)<pos:position pos:line="20" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="48"/></expr_stmt>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">n<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">&lt;<pos:position pos:line="21" pos:column="15"/></operator> <literal type="number" pos:line="21" pos:column="13">0<pos:position pos:line="21" pos:column="14"/></literal></expr>)<pos:position pos:line="21" pos:column="15"/></condition><then pos:line="21" pos:column="15"> <block pos:line="21" pos:column="16">{
      <expr_stmt><expr><call><name pos:line="22" pos:column="7">VIRT_ERROR<pos:position pos:line="22" pos:column="17"/></name><argument_list pos:line="22" pos:column="17">(<argument><expr><name pos:line="22" pos:column="18">conn<pos:position pos:line="22" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="24">"reading list of domains"<pos:position pos:line="22" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="23" pos:column="7">sfree<pos:position pos:line="23" pos:column="12"/></name><argument_list pos:line="23" pos:column="12">(<argument><expr><name pos:line="23" pos:column="13">domids<pos:position pos:line="23" pos:column="19"/></name></expr></argument>)<pos:position pos:line="23" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="21"/></expr_stmt>
      <return pos:line="24" pos:column="7">return <expr><operator pos:line="24" pos:column="14">-<pos:position pos:line="24" pos:column="15"/></operator><literal type="number" pos:line="24" pos:column="15">1<pos:position pos:line="24" pos:column="16"/></literal></expr>;<pos:position pos:line="24" pos:column="17"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="27" pos:column="5">free_block_devices<pos:position pos:line="27" pos:column="23"/></name><argument_list pos:line="27" pos:column="23">()<pos:position pos:line="27" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">free_interface_devices<pos:position pos:line="28" pos:column="27"/></name><argument_list pos:line="28" pos:column="27">()<pos:position pos:line="28" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">free_domains<pos:position pos:line="29" pos:column="17"/></name><argument_list pos:line="29" pos:column="17">()<pos:position pos:line="29" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="20"/></expr_stmt>

    <comment type="block" pos:line="31" pos:column="5">/* Fetch each domain and add it to the list, unless ignore. */</comment>
    <for pos:line="32" pos:column="5">for <control pos:line="32" pos:column="9">(<init><decl><type><name pos:line="32" pos:column="10">int<pos:position pos:line="32" pos:column="13"/></name></type> <name pos:line="32" pos:column="14">i<pos:position pos:line="32" pos:column="15"/></name> <init pos:line="32" pos:column="16">= <expr><literal type="number" pos:line="32" pos:column="18">0<pos:position pos:line="32" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="32" pos:column="20"/></init> <condition><expr><name pos:line="32" pos:column="21">i<pos:position pos:line="32" pos:column="22"/></name> <operator pos:line="32" pos:column="23">&lt;<pos:position pos:line="32" pos:column="27"/></operator> <name pos:line="32" pos:column="25">n<pos:position pos:line="32" pos:column="26"/></name></expr>;<pos:position pos:line="32" pos:column="27"/></condition> <incr><expr><operator pos:line="32" pos:column="28">++<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="30">i<pos:position pos:line="32" pos:column="31"/></name></expr></incr>)<pos:position pos:line="32" pos:column="32"/></control> <block pos:line="32" pos:column="33">{
      <decl_stmt><decl><type><name pos:line="33" pos:column="7">virDomainPtr<pos:position pos:line="33" pos:column="19"/></name></type> <name pos:line="33" pos:column="20">dom<pos:position pos:line="33" pos:column="23"/></name> <init pos:line="33" pos:column="24">= <expr><name pos:line="33" pos:column="26">NULL<pos:position pos:line="33" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="33" pos:column="31"/></decl_stmt>
      <decl_stmt><decl><type><specifier pos:line="34" pos:column="7">const<pos:position pos:line="34" pos:column="12"/></specifier> <name pos:line="34" pos:column="13">char<pos:position pos:line="34" pos:column="17"/></name> <modifier pos:line="34" pos:column="18">*<pos:position pos:line="34" pos:column="19"/></modifier></type><name pos:line="34" pos:column="19">name<pos:position pos:line="34" pos:column="23"/></name></decl>;<pos:position pos:line="34" pos:column="24"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="35" pos:column="7">char<pos:position pos:line="35" pos:column="11"/></name> <modifier pos:line="35" pos:column="12">*<pos:position pos:line="35" pos:column="13"/></modifier></type><name pos:line="35" pos:column="13">xml<pos:position pos:line="35" pos:column="16"/></name> <init pos:line="35" pos:column="17">= <expr><name pos:line="35" pos:column="19">NULL<pos:position pos:line="35" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="35" pos:column="24"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="36" pos:column="7">xmlDocPtr<pos:position pos:line="36" pos:column="16"/></name></type> <name pos:line="36" pos:column="17">xml_doc<pos:position pos:line="36" pos:column="24"/></name> <init pos:line="36" pos:column="25">= <expr><name pos:line="36" pos:column="27">NULL<pos:position pos:line="36" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="36" pos:column="32"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="37" pos:column="7">xmlXPathContextPtr<pos:position pos:line="37" pos:column="25"/></name></type> <name pos:line="37" pos:column="26">xpath_ctx<pos:position pos:line="37" pos:column="35"/></name> <init pos:line="37" pos:column="36">= <expr><name pos:line="37" pos:column="38">NULL<pos:position pos:line="37" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="37" pos:column="43"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="38" pos:column="7">xmlXPathObjectPtr<pos:position pos:line="38" pos:column="24"/></name></type> <name pos:line="38" pos:column="25">xpath_obj<pos:position pos:line="38" pos:column="34"/></name> <init pos:line="38" pos:column="35">= <expr><name pos:line="38" pos:column="37">NULL<pos:position pos:line="38" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="38" pos:column="42"/></decl_stmt>

      <expr_stmt><expr><name pos:line="40" pos:column="7">dom<pos:position pos:line="40" pos:column="10"/></name> <operator pos:line="40" pos:column="11">=<pos:position pos:line="40" pos:column="12"/></operator> <call><name pos:line="40" pos:column="13">virDomainLookupByID<pos:position pos:line="40" pos:column="32"/></name><argument_list pos:line="40" pos:column="32">(<argument><expr><name pos:line="40" pos:column="33">conn<pos:position pos:line="40" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="39">domids<pos:position pos:line="40" pos:column="45"/></name><index pos:line="40" pos:column="45">[<expr><name pos:line="40" pos:column="46">i<pos:position pos:line="40" pos:column="47"/></name></expr>]<pos:position pos:line="40" pos:column="48"/></index></name></expr></argument>)<pos:position pos:line="40" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="50"/></expr_stmt>
      <if pos:line="41" pos:column="7">if <condition pos:line="41" pos:column="10">(<expr><name pos:line="41" pos:column="11">dom<pos:position pos:line="41" pos:column="14"/></name> <operator pos:line="41" pos:column="15">==<pos:position pos:line="41" pos:column="17"/></operator> <name pos:line="41" pos:column="18">NULL<pos:position pos:line="41" pos:column="22"/></name></expr>)<pos:position pos:line="41" pos:column="23"/></condition><then pos:line="41" pos:column="23"> <block pos:line="41" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="42" pos:column="9">VIRT_ERROR<pos:position pos:line="42" pos:column="19"/></name><argument_list pos:line="42" pos:column="19">(<argument><expr><name pos:line="42" pos:column="20">conn<pos:position pos:line="42" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="26">"virDomainLookupByID"<pos:position pos:line="42" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="49"/></expr_stmt>
        <comment type="block" pos:line="43" pos:column="9">/* Could be that the domain went away -- ignore it anyway. */</comment>
        <continue pos:line="44" pos:column="9">continue;<pos:position pos:line="44" pos:column="18"/></continue>
      }<pos:position pos:line="45" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name pos:line="47" pos:column="7">name<pos:position pos:line="47" pos:column="11"/></name> <operator pos:line="47" pos:column="12">=<pos:position pos:line="47" pos:column="13"/></operator> <call><name pos:line="47" pos:column="14">virDomainGetName<pos:position pos:line="47" pos:column="30"/></name><argument_list pos:line="47" pos:column="30">(<argument><expr><name pos:line="47" pos:column="31">dom<pos:position pos:line="47" pos:column="34"/></name></expr></argument>)<pos:position pos:line="47" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="36"/></expr_stmt>
      <if pos:line="48" pos:column="7">if <condition pos:line="48" pos:column="10">(<expr><name pos:line="48" pos:column="11">name<pos:position pos:line="48" pos:column="15"/></name> <operator pos:line="48" pos:column="16">==<pos:position pos:line="48" pos:column="18"/></operator> <name pos:line="48" pos:column="19">NULL<pos:position pos:line="48" pos:column="23"/></name></expr>)<pos:position pos:line="48" pos:column="24"/></condition><then pos:line="48" pos:column="24"> <block pos:line="48" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="49" pos:column="9">VIRT_ERROR<pos:position pos:line="49" pos:column="19"/></name><argument_list pos:line="49" pos:column="19">(<argument><expr><name pos:line="49" pos:column="20">conn<pos:position pos:line="49" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="26">"virDomainGetName"<pos:position pos:line="49" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="46"/></expr_stmt>
        <goto pos:line="50" pos:column="9">goto <name pos:line="50" pos:column="14">cont<pos:position pos:line="50" pos:column="18"/></name>;<pos:position pos:line="50" pos:column="19"/></goto>
      }<pos:position pos:line="51" pos:column="8"/></block></then></if>

      <if pos:line="53" pos:column="7">if <condition pos:line="53" pos:column="10">(<expr><name pos:line="53" pos:column="11">il_domains<pos:position pos:line="53" pos:column="21"/></name> <operator pos:line="53" pos:column="22">&amp;&amp;<pos:position pos:line="53" pos:column="32"/></operator> <call><name pos:line="53" pos:column="25">ignorelist_match<pos:position pos:line="53" pos:column="41"/></name><argument_list pos:line="53" pos:column="41">(<argument><expr><name pos:line="53" pos:column="42">il_domains<pos:position pos:line="53" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="54">name<pos:position pos:line="53" pos:column="58"/></name></expr></argument>)<pos:position pos:line="53" pos:column="59"/></argument_list></call> <operator pos:line="53" pos:column="60">!=<pos:position pos:line="53" pos:column="62"/></operator> <literal type="number" pos:line="53" pos:column="63">0<pos:position pos:line="53" pos:column="64"/></literal></expr>)<pos:position pos:line="53" pos:column="65"/></condition><then pos:line="53" pos:column="65">
        <block type="pseudo"><goto pos:line="54" pos:column="9">goto <name pos:line="54" pos:column="14">cont<pos:position pos:line="54" pos:column="18"/></name>;<pos:position pos:line="54" pos:column="19"/></goto></block></then></if>

      <if pos:line="56" pos:column="7">if <condition pos:line="56" pos:column="10">(<expr><call><name pos:line="56" pos:column="11">add_domain<pos:position pos:line="56" pos:column="21"/></name><argument_list pos:line="56" pos:column="21">(<argument><expr><name pos:line="56" pos:column="22">dom<pos:position pos:line="56" pos:column="25"/></name></expr></argument>)<pos:position pos:line="56" pos:column="26"/></argument_list></call> <operator pos:line="56" pos:column="27">&lt;<pos:position pos:line="56" pos:column="31"/></operator> <literal type="number" pos:line="56" pos:column="29">0<pos:position pos:line="56" pos:column="30"/></literal></expr>)<pos:position pos:line="56" pos:column="31"/></condition><then pos:line="56" pos:column="31"> <block pos:line="56" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="57" pos:column="9">ERROR<pos:position pos:line="57" pos:column="14"/></name><argument_list pos:line="57" pos:column="14">(<argument><expr><name pos:line="57" pos:column="15">PLUGIN_NAME<pos:position pos:line="57" pos:column="26"/></name> <literal type="string" pos:line="57" pos:column="27">" plugin: malloc failed."<pos:position pos:line="57" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="54"/></expr_stmt>
        <goto pos:line="58" pos:column="9">goto <name pos:line="58" pos:column="14">cont<pos:position pos:line="58" pos:column="18"/></name>;<pos:position pos:line="58" pos:column="19"/></goto>
      }<pos:position pos:line="59" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="61" pos:column="7">/* Get a list of devices for this domain. */</comment>
      <expr_stmt><expr><name pos:line="62" pos:column="7">xml<pos:position pos:line="62" pos:column="10"/></name> <operator pos:line="62" pos:column="11">=<pos:position pos:line="62" pos:column="12"/></operator> <call><name pos:line="62" pos:column="13">virDomainGetXMLDesc<pos:position pos:line="62" pos:column="32"/></name><argument_list pos:line="62" pos:column="32">(<argument><expr><name pos:line="62" pos:column="33">dom<pos:position pos:line="62" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="38">0<pos:position pos:line="62" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="41"/></expr_stmt>
      <if pos:line="63" pos:column="7">if <condition pos:line="63" pos:column="10">(<expr><operator pos:line="63" pos:column="11">!<pos:position pos:line="63" pos:column="12"/></operator><name pos:line="63" pos:column="12">xml<pos:position pos:line="63" pos:column="15"/></name></expr>)<pos:position pos:line="63" pos:column="16"/></condition><then pos:line="63" pos:column="16"> <block pos:line="63" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="64" pos:column="9">VIRT_ERROR<pos:position pos:line="64" pos:column="19"/></name><argument_list pos:line="64" pos:column="19">(<argument><expr><name pos:line="64" pos:column="20">conn<pos:position pos:line="64" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="26">"virDomainGetXMLDesc"<pos:position pos:line="64" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="49"/></expr_stmt>
        <goto pos:line="65" pos:column="9">goto <name pos:line="65" pos:column="14">cont<pos:position pos:line="65" pos:column="18"/></name>;<pos:position pos:line="65" pos:column="19"/></goto>
      }<pos:position pos:line="66" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="68" pos:column="7">/* Yuck, XML.  Parse out the devices. */</comment>
      <expr_stmt><expr><name pos:line="69" pos:column="7">xml_doc<pos:position pos:line="69" pos:column="14"/></name> <operator pos:line="69" pos:column="15">=<pos:position pos:line="69" pos:column="16"/></operator> <call><name pos:line="69" pos:column="17">xmlReadDoc<pos:position pos:line="69" pos:column="27"/></name><argument_list pos:line="69" pos:column="27">(<argument><expr><operator pos:line="69" pos:column="28">(<pos:position pos:line="69" pos:column="29"/></operator><name pos:line="69" pos:column="29">xmlChar<pos:position pos:line="69" pos:column="36"/></name> <operator pos:line="69" pos:column="37">*<pos:position pos:line="69" pos:column="38"/></operator><operator pos:line="69" pos:column="38">)<pos:position pos:line="69" pos:column="39"/></operator><name pos:line="69" pos:column="39">xml<pos:position pos:line="69" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="44">NULL<pos:position pos:line="69" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="50">NULL<pos:position pos:line="69" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="56">XML_PARSE_NONET<pos:position pos:line="69" pos:column="71"/></name></expr></argument>)<pos:position pos:line="69" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="73"/></expr_stmt>
      <if pos:line="70" pos:column="7">if <condition pos:line="70" pos:column="10">(<expr><name pos:line="70" pos:column="11">xml_doc<pos:position pos:line="70" pos:column="18"/></name> <operator pos:line="70" pos:column="19">==<pos:position pos:line="70" pos:column="21"/></operator> <name pos:line="70" pos:column="22">NULL<pos:position pos:line="70" pos:column="26"/></name></expr>)<pos:position pos:line="70" pos:column="27"/></condition><then pos:line="70" pos:column="27"> <block pos:line="70" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="71" pos:column="9">VIRT_ERROR<pos:position pos:line="71" pos:column="19"/></name><argument_list pos:line="71" pos:column="19">(<argument><expr><name pos:line="71" pos:column="20">conn<pos:position pos:line="71" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="26">"xmlReadDoc"<pos:position pos:line="71" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="40"/></expr_stmt>
        <goto pos:line="72" pos:column="9">goto <name pos:line="72" pos:column="14">cont<pos:position pos:line="72" pos:column="18"/></name>;<pos:position pos:line="72" pos:column="19"/></goto>
      }<pos:position pos:line="73" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name pos:line="75" pos:column="7">xpath_ctx<pos:position pos:line="75" pos:column="16"/></name> <operator pos:line="75" pos:column="17">=<pos:position pos:line="75" pos:column="18"/></operator> <call><name pos:line="75" pos:column="19">xmlXPathNewContext<pos:position pos:line="75" pos:column="37"/></name><argument_list pos:line="75" pos:column="37">(<argument><expr><name pos:line="75" pos:column="38">xml_doc<pos:position pos:line="75" pos:column="45"/></name></expr></argument>)<pos:position pos:line="75" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="47"/></expr_stmt>

      <comment type="block" pos:line="77" pos:column="7">/* Block devices. */</comment>
      <expr_stmt><expr><name pos:line="78" pos:column="7">xpath_obj<pos:position pos:line="78" pos:column="16"/></name> <operator pos:line="78" pos:column="17">=<pos:position pos:line="78" pos:column="18"/></operator> <call><name pos:line="78" pos:column="19">xmlXPathEval<pos:position pos:line="78" pos:column="31"/></name><argument_list pos:line="78" pos:column="31">(<argument><expr><operator pos:line="78" pos:column="32">(<pos:position pos:line="78" pos:column="33"/></operator><name pos:line="78" pos:column="33">xmlChar<pos:position pos:line="78" pos:column="40"/></name> <operator pos:line="78" pos:column="41">*<pos:position pos:line="78" pos:column="42"/></operator><operator pos:line="78" pos:column="42">)<pos:position pos:line="78" pos:column="43"/></operator><literal type="string" pos:line="78" pos:column="43">"/domain/devices/disk/target[@dev]"<pos:position pos:line="78" pos:column="78"/></literal></expr></argument>,
                               <argument><expr><name pos:line="79" pos:column="32">xpath_ctx<pos:position pos:line="79" pos:column="41"/></name></expr></argument>)<pos:position pos:line="79" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="43"/></expr_stmt>
      <if pos:line="80" pos:column="7">if <condition pos:line="80" pos:column="10">(<expr><name pos:line="80" pos:column="11">xpath_obj<pos:position pos:line="80" pos:column="20"/></name> <operator pos:line="80" pos:column="21">==<pos:position pos:line="80" pos:column="23"/></operator> <name pos:line="80" pos:column="24">NULL<pos:position pos:line="80" pos:column="28"/></name> <operator pos:line="80" pos:column="29">||<pos:position pos:line="80" pos:column="31"/></operator> <name><name pos:line="80" pos:column="32">xpath_obj<pos:position pos:line="80" pos:column="41"/></name><operator pos:line="80" pos:column="41">-&gt;<pos:position pos:line="80" pos:column="46"/></operator><name pos:line="80" pos:column="43">type<pos:position pos:line="80" pos:column="47"/></name></name> <operator pos:line="80" pos:column="48">!=<pos:position pos:line="80" pos:column="50"/></operator> <name pos:line="80" pos:column="51">XPATH_NODESET<pos:position pos:line="80" pos:column="64"/></name> <operator pos:line="80" pos:column="65">||<pos:position pos:line="80" pos:column="67"/></operator>
          <name><name pos:line="81" pos:column="11">xpath_obj<pos:position pos:line="81" pos:column="20"/></name><operator pos:line="81" pos:column="20">-&gt;<pos:position pos:line="81" pos:column="25"/></operator><name pos:line="81" pos:column="22">nodesetval<pos:position pos:line="81" pos:column="32"/></name></name> <operator pos:line="81" pos:column="33">==<pos:position pos:line="81" pos:column="35"/></operator> <name pos:line="81" pos:column="36">NULL<pos:position pos:line="81" pos:column="40"/></name></expr>)<pos:position pos:line="81" pos:column="41"/></condition><then pos:line="81" pos:column="41">
        <block type="pseudo"><goto pos:line="82" pos:column="9">goto <name pos:line="82" pos:column="14">cont<pos:position pos:line="82" pos:column="18"/></name>;<pos:position pos:line="82" pos:column="19"/></goto></block></then></if>

      <for pos:line="84" pos:column="7">for <control pos:line="84" pos:column="11">(<init><decl><type><name pos:line="84" pos:column="12">int<pos:position pos:line="84" pos:column="15"/></name></type> <name pos:line="84" pos:column="16">j<pos:position pos:line="84" pos:column="17"/></name> <init pos:line="84" pos:column="18">= <expr><literal type="number" pos:line="84" pos:column="20">0<pos:position pos:line="84" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="84" pos:column="22"/></init> <condition><expr><name pos:line="84" pos:column="23">j<pos:position pos:line="84" pos:column="24"/></name> <operator pos:line="84" pos:column="25">&lt;<pos:position pos:line="84" pos:column="29"/></operator> <name><name pos:line="84" pos:column="27">xpath_obj<pos:position pos:line="84" pos:column="36"/></name><operator pos:line="84" pos:column="36">-&gt;<pos:position pos:line="84" pos:column="41"/></operator><name pos:line="84" pos:column="38">nodesetval<pos:position pos:line="84" pos:column="48"/></name><operator pos:line="84" pos:column="48">-&gt;<pos:position pos:line="84" pos:column="53"/></operator><name pos:line="84" pos:column="50">nodeNr<pos:position pos:line="84" pos:column="56"/></name></name></expr>;<pos:position pos:line="84" pos:column="57"/></condition> <incr><expr><operator pos:line="84" pos:column="58">++<pos:position pos:line="84" pos:column="60"/></operator><name pos:line="84" pos:column="60">j<pos:position pos:line="84" pos:column="61"/></name></expr></incr>)<pos:position pos:line="84" pos:column="62"/></control> <block pos:line="84" pos:column="63">{
        <decl_stmt><decl><type><name pos:line="85" pos:column="9">xmlNodePtr<pos:position pos:line="85" pos:column="19"/></name></type> <name pos:line="85" pos:column="20">node<pos:position pos:line="85" pos:column="24"/></name></decl>;<pos:position pos:line="85" pos:column="25"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="86" pos:column="9">char<pos:position pos:line="86" pos:column="13"/></name> <modifier pos:line="86" pos:column="14">*<pos:position pos:line="86" pos:column="15"/></modifier></type><name pos:line="86" pos:column="15">path<pos:position pos:line="86" pos:column="19"/></name> <init pos:line="86" pos:column="20">= <expr><name pos:line="86" pos:column="22">NULL<pos:position pos:line="86" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="86" pos:column="27"/></decl_stmt>

        <expr_stmt><expr><name pos:line="88" pos:column="9">node<pos:position pos:line="88" pos:column="13"/></name> <operator pos:line="88" pos:column="14">=<pos:position pos:line="88" pos:column="15"/></operator> <name><name pos:line="88" pos:column="16">xpath_obj<pos:position pos:line="88" pos:column="25"/></name><operator pos:line="88" pos:column="25">-&gt;<pos:position pos:line="88" pos:column="30"/></operator><name pos:line="88" pos:column="27">nodesetval<pos:position pos:line="88" pos:column="37"/></name><operator pos:line="88" pos:column="37">-&gt;<pos:position pos:line="88" pos:column="42"/></operator><name pos:line="88" pos:column="39">nodeTab<pos:position pos:line="88" pos:column="46"/></name><index pos:line="88" pos:column="46">[<expr><name pos:line="88" pos:column="47">j<pos:position pos:line="88" pos:column="48"/></name></expr>]<pos:position pos:line="88" pos:column="49"/></index></name></expr>;<pos:position pos:line="88" pos:column="50"/></expr_stmt>
        <if pos:line="89" pos:column="9">if <condition pos:line="89" pos:column="12">(<expr><operator pos:line="89" pos:column="13">!<pos:position pos:line="89" pos:column="14"/></operator><name pos:line="89" pos:column="14">node<pos:position pos:line="89" pos:column="18"/></name></expr>)<pos:position pos:line="89" pos:column="19"/></condition><then pos:line="89" pos:column="19">
          <block type="pseudo"><continue pos:line="90" pos:column="11">continue;<pos:position pos:line="90" pos:column="20"/></continue></block></then></if>
        <expr_stmt><expr><name pos:line="91" pos:column="9">path<pos:position pos:line="91" pos:column="13"/></name> <operator pos:line="91" pos:column="14">=<pos:position pos:line="91" pos:column="15"/></operator> <operator pos:line="91" pos:column="16">(<pos:position pos:line="91" pos:column="17"/></operator><name pos:line="91" pos:column="17">char<pos:position pos:line="91" pos:column="21"/></name> <operator pos:line="91" pos:column="22">*<pos:position pos:line="91" pos:column="23"/></operator><operator pos:line="91" pos:column="23">)<pos:position pos:line="91" pos:column="24"/></operator><call><name pos:line="91" pos:column="24">xmlGetProp<pos:position pos:line="91" pos:column="34"/></name><argument_list pos:line="91" pos:column="34">(<argument><expr><name pos:line="91" pos:column="35">node<pos:position pos:line="91" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="91" pos:column="41">(<pos:position pos:line="91" pos:column="42"/></operator><name pos:line="91" pos:column="42">xmlChar<pos:position pos:line="91" pos:column="49"/></name> <operator pos:line="91" pos:column="50">*<pos:position pos:line="91" pos:column="51"/></operator><operator pos:line="91" pos:column="51">)<pos:position pos:line="91" pos:column="52"/></operator><literal type="string" pos:line="91" pos:column="52">"dev"<pos:position pos:line="91" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="59"/></expr_stmt>
        <if pos:line="92" pos:column="9">if <condition pos:line="92" pos:column="12">(<expr><operator pos:line="92" pos:column="13">!<pos:position pos:line="92" pos:column="14"/></operator><name pos:line="92" pos:column="14">path<pos:position pos:line="92" pos:column="18"/></name></expr>)<pos:position pos:line="92" pos:column="19"/></condition><then pos:line="92" pos:column="19">
          <block type="pseudo"><continue pos:line="93" pos:column="11">continue;<pos:position pos:line="93" pos:column="20"/></continue></block></then></if>

        <if pos:line="95" pos:column="9">if <condition pos:line="95" pos:column="12">(<expr><name pos:line="95" pos:column="13">il_block_devices<pos:position pos:line="95" pos:column="29"/></name> <operator pos:line="95" pos:column="30">&amp;&amp;<pos:position pos:line="95" pos:column="40"/></operator>
            <call><name pos:line="96" pos:column="13">ignore_device_match<pos:position pos:line="96" pos:column="32"/></name><argument_list pos:line="96" pos:column="32">(<argument><expr><name pos:line="96" pos:column="33">il_block_devices<pos:position pos:line="96" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="51">name<pos:position pos:line="96" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="57">path<pos:position pos:line="96" pos:column="61"/></name></expr></argument>)<pos:position pos:line="96" pos:column="62"/></argument_list></call> <operator pos:line="96" pos:column="63">!=<pos:position pos:line="96" pos:column="65"/></operator> <literal type="number" pos:line="96" pos:column="66">0<pos:position pos:line="96" pos:column="67"/></literal></expr>)<pos:position pos:line="96" pos:column="68"/></condition><then pos:line="96" pos:column="68">
          <block type="pseudo"><goto pos:line="97" pos:column="11">goto <name pos:line="97" pos:column="16">cont2<pos:position pos:line="97" pos:column="21"/></name>;<pos:position pos:line="97" pos:column="22"/></goto></block></then></if>

        <expr_stmt><expr><call><name pos:line="99" pos:column="9">add_block_device<pos:position pos:line="99" pos:column="25"/></name><argument_list pos:line="99" pos:column="25">(<argument><expr><name pos:line="99" pos:column="26">dom<pos:position pos:line="99" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="31">path<pos:position pos:line="99" pos:column="35"/></name></expr></argument>)<pos:position pos:line="99" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="37"/></expr_stmt>
      <label><name pos:line="100" pos:column="7">cont2<pos:position pos:line="100" pos:column="12"/></name>:<pos:position pos:line="100" pos:column="13"/></label>
        <if pos:line="101" pos:column="9">if <condition pos:line="101" pos:column="12">(<expr><name pos:line="101" pos:column="13">path<pos:position pos:line="101" pos:column="17"/></name></expr>)<pos:position pos:line="101" pos:column="18"/></condition><then pos:line="101" pos:column="18">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="102" pos:column="11">xmlFree<pos:position pos:line="102" pos:column="18"/></name><argument_list pos:line="102" pos:column="18">(<argument><expr><name pos:line="102" pos:column="19">path<pos:position pos:line="102" pos:column="23"/></name></expr></argument>)<pos:position pos:line="102" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="25"/></expr_stmt></block></then></if>
      }<pos:position pos:line="103" pos:column="8"/></block></for>
      <expr_stmt><expr><call><name pos:line="104" pos:column="7">xmlXPathFreeObject<pos:position pos:line="104" pos:column="25"/></name><argument_list pos:line="104" pos:column="25">(<argument><expr><name pos:line="104" pos:column="26">xpath_obj<pos:position pos:line="104" pos:column="35"/></name></expr></argument>)<pos:position pos:line="104" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="37"/></expr_stmt>

      <comment type="block" pos:line="106" pos:column="7">/* Network interfaces. */</comment>
      <expr_stmt><expr><name pos:line="107" pos:column="7">xpath_obj<pos:position pos:line="107" pos:column="16"/></name> <operator pos:line="107" pos:column="17">=<pos:position pos:line="107" pos:column="18"/></operator> <call><name pos:line="107" pos:column="19">xmlXPathEval<pos:position pos:line="107" pos:column="31"/></name><argument_list pos:line="107" pos:column="31">(
          <argument><expr><operator pos:line="108" pos:column="11">(<pos:position pos:line="108" pos:column="12"/></operator><name pos:line="108" pos:column="12">xmlChar<pos:position pos:line="108" pos:column="19"/></name> <operator pos:line="108" pos:column="20">*<pos:position pos:line="108" pos:column="21"/></operator><operator pos:line="108" pos:column="21">)<pos:position pos:line="108" pos:column="22"/></operator><literal type="string" pos:line="108" pos:column="22">"/domain/devices/interface[target[@dev]]"<pos:position pos:line="108" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="108" pos:column="65">xpath_ctx<pos:position pos:line="108" pos:column="74"/></name></expr></argument>)<pos:position pos:line="108" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="76"/></expr_stmt>
      <if pos:line="109" pos:column="7">if <condition pos:line="109" pos:column="10">(<expr><name pos:line="109" pos:column="11">xpath_obj<pos:position pos:line="109" pos:column="20"/></name> <operator pos:line="109" pos:column="21">==<pos:position pos:line="109" pos:column="23"/></operator> <name pos:line="109" pos:column="24">NULL<pos:position pos:line="109" pos:column="28"/></name> <operator pos:line="109" pos:column="29">||<pos:position pos:line="109" pos:column="31"/></operator> <name><name pos:line="109" pos:column="32">xpath_obj<pos:position pos:line="109" pos:column="41"/></name><operator pos:line="109" pos:column="41">-&gt;<pos:position pos:line="109" pos:column="46"/></operator><name pos:line="109" pos:column="43">type<pos:position pos:line="109" pos:column="47"/></name></name> <operator pos:line="109" pos:column="48">!=<pos:position pos:line="109" pos:column="50"/></operator> <name pos:line="109" pos:column="51">XPATH_NODESET<pos:position pos:line="109" pos:column="64"/></name> <operator pos:line="109" pos:column="65">||<pos:position pos:line="109" pos:column="67"/></operator>
          <name><name pos:line="110" pos:column="11">xpath_obj<pos:position pos:line="110" pos:column="20"/></name><operator pos:line="110" pos:column="20">-&gt;<pos:position pos:line="110" pos:column="25"/></operator><name pos:line="110" pos:column="22">nodesetval<pos:position pos:line="110" pos:column="32"/></name></name> <operator pos:line="110" pos:column="33">==<pos:position pos:line="110" pos:column="35"/></operator> <name pos:line="110" pos:column="36">NULL<pos:position pos:line="110" pos:column="40"/></name></expr>)<pos:position pos:line="110" pos:column="41"/></condition><then pos:line="110" pos:column="41">
        <block type="pseudo"><goto pos:line="111" pos:column="9">goto <name pos:line="111" pos:column="14">cont<pos:position pos:line="111" pos:column="18"/></name>;<pos:position pos:line="111" pos:column="19"/></goto></block></then></if>

      <decl_stmt><decl><type><name pos:line="113" pos:column="7">xmlNodeSetPtr<pos:position pos:line="113" pos:column="20"/></name></type> <name pos:line="113" pos:column="21">xml_interfaces<pos:position pos:line="113" pos:column="35"/></name> <init pos:line="113" pos:column="36">= <expr><name><name pos:line="113" pos:column="38">xpath_obj<pos:position pos:line="113" pos:column="47"/></name><operator pos:line="113" pos:column="47">-&gt;<pos:position pos:line="113" pos:column="52"/></operator><name pos:line="113" pos:column="49">nodesetval<pos:position pos:line="113" pos:column="59"/></name></name></expr></init></decl>;<pos:position pos:line="113" pos:column="60"/></decl_stmt>

      <for pos:line="115" pos:column="7">for <control pos:line="115" pos:column="11">(<init><decl><type><name pos:line="115" pos:column="12">int<pos:position pos:line="115" pos:column="15"/></name></type> <name pos:line="115" pos:column="16">j<pos:position pos:line="115" pos:column="17"/></name> <init pos:line="115" pos:column="18">= <expr><literal type="number" pos:line="115" pos:column="20">0<pos:position pos:line="115" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="115" pos:column="22"/></init> <condition><expr><name pos:line="115" pos:column="23">j<pos:position pos:line="115" pos:column="24"/></name> <operator pos:line="115" pos:column="25">&lt;<pos:position pos:line="115" pos:column="29"/></operator> <name><name pos:line="115" pos:column="27">xml_interfaces<pos:position pos:line="115" pos:column="41"/></name><operator pos:line="115" pos:column="41">-&gt;<pos:position pos:line="115" pos:column="46"/></operator><name pos:line="115" pos:column="43">nodeNr<pos:position pos:line="115" pos:column="49"/></name></name></expr>;<pos:position pos:line="115" pos:column="50"/></condition> <incr><expr><operator pos:line="115" pos:column="51">++<pos:position pos:line="115" pos:column="53"/></operator><name pos:line="115" pos:column="53">j<pos:position pos:line="115" pos:column="54"/></name></expr></incr>)<pos:position pos:line="115" pos:column="55"/></control> <block pos:line="115" pos:column="56">{
        <decl_stmt><decl><type><name pos:line="116" pos:column="9">char<pos:position pos:line="116" pos:column="13"/></name> <modifier pos:line="116" pos:column="14">*<pos:position pos:line="116" pos:column="15"/></modifier></type><name pos:line="116" pos:column="15">path<pos:position pos:line="116" pos:column="19"/></name> <init pos:line="116" pos:column="20">= <expr><name pos:line="116" pos:column="22">NULL<pos:position pos:line="116" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="116" pos:column="27"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="117" pos:column="9">char<pos:position pos:line="117" pos:column="13"/></name> <modifier pos:line="117" pos:column="14">*<pos:position pos:line="117" pos:column="15"/></modifier></type><name pos:line="117" pos:column="15">address<pos:position pos:line="117" pos:column="22"/></name> <init pos:line="117" pos:column="23">= <expr><name pos:line="117" pos:column="25">NULL<pos:position pos:line="117" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="117" pos:column="30"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="118" pos:column="9">xmlNodePtr<pos:position pos:line="118" pos:column="19"/></name></type> <name pos:line="118" pos:column="20">xml_interface<pos:position pos:line="118" pos:column="33"/></name></decl>;<pos:position pos:line="118" pos:column="34"/></decl_stmt>

        <expr_stmt><expr><name pos:line="120" pos:column="9">xml_interface<pos:position pos:line="120" pos:column="22"/></name> <operator pos:line="120" pos:column="23">=<pos:position pos:line="120" pos:column="24"/></operator> <name><name pos:line="120" pos:column="25">xml_interfaces<pos:position pos:line="120" pos:column="39"/></name><operator pos:line="120" pos:column="39">-&gt;<pos:position pos:line="120" pos:column="44"/></operator><name pos:line="120" pos:column="41">nodeTab<pos:position pos:line="120" pos:column="48"/></name><index pos:line="120" pos:column="48">[<expr><name pos:line="120" pos:column="49">j<pos:position pos:line="120" pos:column="50"/></name></expr>]<pos:position pos:line="120" pos:column="51"/></index></name></expr>;<pos:position pos:line="120" pos:column="52"/></expr_stmt>
        <if pos:line="121" pos:column="9">if <condition pos:line="121" pos:column="12">(<expr><operator pos:line="121" pos:column="13">!<pos:position pos:line="121" pos:column="14"/></operator><name pos:line="121" pos:column="14">xml_interface<pos:position pos:line="121" pos:column="27"/></name></expr>)<pos:position pos:line="121" pos:column="28"/></condition><then pos:line="121" pos:column="28">
          <block type="pseudo"><continue pos:line="122" pos:column="11">continue;<pos:position pos:line="122" pos:column="20"/></continue></block></then></if>

        <for pos:line="124" pos:column="9">for <control pos:line="124" pos:column="13">(<init><decl><type><name pos:line="124" pos:column="14">xmlNodePtr<pos:position pos:line="124" pos:column="24"/></name></type> <name pos:line="124" pos:column="25">child<pos:position pos:line="124" pos:column="30"/></name> <init pos:line="124" pos:column="31">= <expr><name><name pos:line="124" pos:column="33">xml_interface<pos:position pos:line="124" pos:column="46"/></name><operator pos:line="124" pos:column="46">-&gt;<pos:position pos:line="124" pos:column="51"/></operator><name pos:line="124" pos:column="48">children<pos:position pos:line="124" pos:column="56"/></name></name></expr></init></decl>;<pos:position pos:line="124" pos:column="57"/></init> <condition><expr><name pos:line="124" pos:column="58">child<pos:position pos:line="124" pos:column="63"/></name></expr>;<pos:position pos:line="124" pos:column="64"/></condition>
             <incr><expr><name pos:line="125" pos:column="14">child<pos:position pos:line="125" pos:column="19"/></name> <operator pos:line="125" pos:column="20">=<pos:position pos:line="125" pos:column="21"/></operator> <name><name pos:line="125" pos:column="22">child<pos:position pos:line="125" pos:column="27"/></name><operator pos:line="125" pos:column="27">-&gt;<pos:position pos:line="125" pos:column="32"/></operator><name pos:line="125" pos:column="29">next<pos:position pos:line="125" pos:column="33"/></name></name></expr></incr>)<pos:position pos:line="125" pos:column="34"/></control> <block pos:line="125" pos:column="35">{
          <if pos:line="126" pos:column="11">if <condition pos:line="126" pos:column="14">(<expr><name><name pos:line="126" pos:column="15">child<pos:position pos:line="126" pos:column="20"/></name><operator pos:line="126" pos:column="20">-&gt;<pos:position pos:line="126" pos:column="25"/></operator><name pos:line="126" pos:column="22">type<pos:position pos:line="126" pos:column="26"/></name></name> <operator pos:line="126" pos:column="27">!=<pos:position pos:line="126" pos:column="29"/></operator> <name pos:line="126" pos:column="30">XML_ELEMENT_NODE<pos:position pos:line="126" pos:column="46"/></name></expr>)<pos:position pos:line="126" pos:column="47"/></condition><then pos:line="126" pos:column="47">
            <block type="pseudo"><continue pos:line="127" pos:column="13">continue;<pos:position pos:line="127" pos:column="22"/></continue></block></then></if>

          <if pos:line="129" pos:column="11">if <condition pos:line="129" pos:column="14">(<expr><call><name pos:line="129" pos:column="15">xmlStrEqual<pos:position pos:line="129" pos:column="26"/></name><argument_list pos:line="129" pos:column="26">(<argument><expr><name><name pos:line="129" pos:column="27">child<pos:position pos:line="129" pos:column="32"/></name><operator pos:line="129" pos:column="32">-&gt;<pos:position pos:line="129" pos:column="37"/></operator><name pos:line="129" pos:column="34">name<pos:position pos:line="129" pos:column="38"/></name></name></expr></argument>, <argument><expr><operator pos:line="129" pos:column="40">(<pos:position pos:line="129" pos:column="41"/></operator><specifier pos:line="129" pos:column="41">const<pos:position pos:line="129" pos:column="46"/></specifier> <name pos:line="129" pos:column="47">xmlChar<pos:position pos:line="129" pos:column="54"/></name> <operator pos:line="129" pos:column="55">*<pos:position pos:line="129" pos:column="56"/></operator><operator pos:line="129" pos:column="56">)<pos:position pos:line="129" pos:column="57"/></operator><literal type="string" pos:line="129" pos:column="57">"target"<pos:position pos:line="129" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="129" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="129" pos:column="67"/></condition><then pos:line="129" pos:column="67"> <block pos:line="129" pos:column="68">{
            <expr_stmt><expr><name pos:line="130" pos:column="13">path<pos:position pos:line="130" pos:column="17"/></name> <operator pos:line="130" pos:column="18">=<pos:position pos:line="130" pos:column="19"/></operator> <operator pos:line="130" pos:column="20">(<pos:position pos:line="130" pos:column="21"/></operator><name pos:line="130" pos:column="21">char<pos:position pos:line="130" pos:column="25"/></name> <operator pos:line="130" pos:column="26">*<pos:position pos:line="130" pos:column="27"/></operator><operator pos:line="130" pos:column="27">)<pos:position pos:line="130" pos:column="28"/></operator><call><name pos:line="130" pos:column="28">xmlGetProp<pos:position pos:line="130" pos:column="38"/></name><argument_list pos:line="130" pos:column="38">(<argument><expr><name pos:line="130" pos:column="39">child<pos:position pos:line="130" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="130" pos:column="46">(<pos:position pos:line="130" pos:column="47"/></operator><specifier pos:line="130" pos:column="47">const<pos:position pos:line="130" pos:column="52"/></specifier> <name pos:line="130" pos:column="53">xmlChar<pos:position pos:line="130" pos:column="60"/></name> <operator pos:line="130" pos:column="61">*<pos:position pos:line="130" pos:column="62"/></operator><operator pos:line="130" pos:column="62">)<pos:position pos:line="130" pos:column="63"/></operator><literal type="string" pos:line="130" pos:column="63">"dev"<pos:position pos:line="130" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="130" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="70"/></expr_stmt>
            <if pos:line="131" pos:column="13">if <condition pos:line="131" pos:column="16">(<expr><operator pos:line="131" pos:column="17">!<pos:position pos:line="131" pos:column="18"/></operator><name pos:line="131" pos:column="18">path<pos:position pos:line="131" pos:column="22"/></name></expr>)<pos:position pos:line="131" pos:column="23"/></condition><then pos:line="131" pos:column="23">
              <block type="pseudo"><continue pos:line="132" pos:column="15">continue;<pos:position pos:line="132" pos:column="24"/></continue></block></then></if>
          }<pos:position pos:line="133" pos:column="12"/></block></then> <elseif pos:line="133" pos:column="13">else <if pos:line="133" pos:column="18">if <condition pos:line="133" pos:column="21">(<expr><call><name pos:line="133" pos:column="22">xmlStrEqual<pos:position pos:line="133" pos:column="33"/></name><argument_list pos:line="133" pos:column="33">(<argument><expr><name><name pos:line="133" pos:column="34">child<pos:position pos:line="133" pos:column="39"/></name><operator pos:line="133" pos:column="39">-&gt;<pos:position pos:line="133" pos:column="44"/></operator><name pos:line="133" pos:column="41">name<pos:position pos:line="133" pos:column="45"/></name></name></expr></argument>, <argument><expr><operator pos:line="133" pos:column="47">(<pos:position pos:line="133" pos:column="48"/></operator><specifier pos:line="133" pos:column="48">const<pos:position pos:line="133" pos:column="53"/></specifier> <name pos:line="133" pos:column="54">xmlChar<pos:position pos:line="133" pos:column="61"/></name> <operator pos:line="133" pos:column="62">*<pos:position pos:line="133" pos:column="63"/></operator><operator pos:line="133" pos:column="63">)<pos:position pos:line="133" pos:column="64"/></operator><literal type="string" pos:line="133" pos:column="64">"mac"<pos:position pos:line="133" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="133" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="133" pos:column="71"/></condition><then pos:line="133" pos:column="71"> <block pos:line="133" pos:column="72">{
            <expr_stmt><expr><name pos:line="134" pos:column="13">address<pos:position pos:line="134" pos:column="20"/></name> <operator pos:line="134" pos:column="21">=<pos:position pos:line="134" pos:column="22"/></operator> <operator pos:line="134" pos:column="23">(<pos:position pos:line="134" pos:column="24"/></operator><name pos:line="134" pos:column="24">char<pos:position pos:line="134" pos:column="28"/></name> <operator pos:line="134" pos:column="29">*<pos:position pos:line="134" pos:column="30"/></operator><operator pos:line="134" pos:column="30">)<pos:position pos:line="134" pos:column="31"/></operator><call><name pos:line="134" pos:column="31">xmlGetProp<pos:position pos:line="134" pos:column="41"/></name><argument_list pos:line="134" pos:column="41">(<argument><expr><name pos:line="134" pos:column="42">child<pos:position pos:line="134" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="134" pos:column="49">(<pos:position pos:line="134" pos:column="50"/></operator><specifier pos:line="134" pos:column="50">const<pos:position pos:line="134" pos:column="55"/></specifier> <name pos:line="134" pos:column="56">xmlChar<pos:position pos:line="134" pos:column="63"/></name> <operator pos:line="134" pos:column="64">*<pos:position pos:line="134" pos:column="65"/></operator><operator pos:line="134" pos:column="65">)<pos:position pos:line="134" pos:column="66"/></operator><literal type="string" pos:line="134" pos:column="66">"address"<pos:position pos:line="134" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="134" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="77"/></expr_stmt>
            <if pos:line="135" pos:column="13">if <condition pos:line="135" pos:column="16">(<expr><operator pos:line="135" pos:column="17">!<pos:position pos:line="135" pos:column="18"/></operator><name pos:line="135" pos:column="18">address<pos:position pos:line="135" pos:column="25"/></name></expr>)<pos:position pos:line="135" pos:column="26"/></condition><then pos:line="135" pos:column="26">
              <block type="pseudo"><continue pos:line="136" pos:column="15">continue;<pos:position pos:line="136" pos:column="24"/></continue></block></then></if>
          }<pos:position pos:line="137" pos:column="12"/></block></then></if></elseif></if>
        }<pos:position pos:line="138" pos:column="10"/></block></for>

        <if pos:line="140" pos:column="9">if <condition pos:line="140" pos:column="12">(<expr><name pos:line="140" pos:column="13">il_interface_devices<pos:position pos:line="140" pos:column="33"/></name> <operator pos:line="140" pos:column="34">&amp;&amp;<pos:position pos:line="140" pos:column="44"/></operator>
            <operator pos:line="141" pos:column="13">(<pos:position pos:line="141" pos:column="14"/></operator><call><name pos:line="141" pos:column="14">ignore_device_match<pos:position pos:line="141" pos:column="33"/></name><argument_list pos:line="141" pos:column="33">(<argument><expr><name pos:line="141" pos:column="34">il_interface_devices<pos:position pos:line="141" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="56">name<pos:position pos:line="141" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="62">path<pos:position pos:line="141" pos:column="66"/></name></expr></argument>)<pos:position pos:line="141" pos:column="67"/></argument_list></call> <operator pos:line="141" pos:column="68">!=<pos:position pos:line="141" pos:column="70"/></operator> <literal type="number" pos:line="141" pos:column="71">0<pos:position pos:line="141" pos:column="72"/></literal> <operator pos:line="141" pos:column="73">||<pos:position pos:line="141" pos:column="75"/></operator>
             <call><name pos:line="142" pos:column="14">ignore_device_match<pos:position pos:line="142" pos:column="33"/></name><argument_list pos:line="142" pos:column="33">(<argument><expr><name pos:line="142" pos:column="34">il_interface_devices<pos:position pos:line="142" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="56">name<pos:position pos:line="142" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="62">address<pos:position pos:line="142" pos:column="69"/></name></expr></argument>)<pos:position pos:line="142" pos:column="70"/></argument_list></call> <operator pos:line="142" pos:column="71">!=<pos:position pos:line="142" pos:column="73"/></operator> <literal type="number" pos:line="142" pos:column="74">0<pos:position pos:line="142" pos:column="75"/></literal><operator pos:line="142" pos:column="75">)<pos:position pos:line="142" pos:column="76"/></operator></expr>)<pos:position pos:line="142" pos:column="77"/></condition><then pos:line="142" pos:column="77">
          <block type="pseudo"><goto pos:line="143" pos:column="11">goto <name pos:line="143" pos:column="16">cont3<pos:position pos:line="143" pos:column="21"/></name>;<pos:position pos:line="143" pos:column="22"/></goto></block></then></if>

        <expr_stmt><expr><call><name pos:line="145" pos:column="9">add_interface_device<pos:position pos:line="145" pos:column="29"/></name><argument_list pos:line="145" pos:column="29">(<argument><expr><name pos:line="145" pos:column="30">dom<pos:position pos:line="145" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="145" pos:column="35">path<pos:position pos:line="145" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="145" pos:column="41">address<pos:position pos:line="145" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="145" pos:column="50">j<pos:position pos:line="145" pos:column="51"/></name> <operator pos:line="145" pos:column="52">+<pos:position pos:line="145" pos:column="53"/></operator> <literal type="number" pos:line="145" pos:column="54">1<pos:position pos:line="145" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="145" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="57"/></expr_stmt>
      <label><name pos:line="146" pos:column="7">cont3<pos:position pos:line="146" pos:column="12"/></name>:<pos:position pos:line="146" pos:column="13"/></label>
        <if pos:line="147" pos:column="9">if <condition pos:line="147" pos:column="12">(<expr><name pos:line="147" pos:column="13">path<pos:position pos:line="147" pos:column="17"/></name></expr>)<pos:position pos:line="147" pos:column="18"/></condition><then pos:line="147" pos:column="18">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="148" pos:column="11">xmlFree<pos:position pos:line="148" pos:column="18"/></name><argument_list pos:line="148" pos:column="18">(<argument><expr><name pos:line="148" pos:column="19">path<pos:position pos:line="148" pos:column="23"/></name></expr></argument>)<pos:position pos:line="148" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="25"/></expr_stmt></block></then></if>
        <if pos:line="149" pos:column="9">if <condition pos:line="149" pos:column="12">(<expr><name pos:line="149" pos:column="13">address<pos:position pos:line="149" pos:column="20"/></name></expr>)<pos:position pos:line="149" pos:column="21"/></condition><then pos:line="149" pos:column="21">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="150" pos:column="11">xmlFree<pos:position pos:line="150" pos:column="18"/></name><argument_list pos:line="150" pos:column="18">(<argument><expr><name pos:line="150" pos:column="19">address<pos:position pos:line="150" pos:column="26"/></name></expr></argument>)<pos:position pos:line="150" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="28"/></expr_stmt></block></then></if>
      }<pos:position pos:line="151" pos:column="8"/></block></for>

    <label><name pos:line="153" pos:column="5">cont<pos:position pos:line="153" pos:column="9"/></name>:<pos:position pos:line="153" pos:column="10"/></label>
      <if pos:line="154" pos:column="7">if <condition pos:line="154" pos:column="10">(<expr><name pos:line="154" pos:column="11">xpath_obj<pos:position pos:line="154" pos:column="20"/></name></expr>)<pos:position pos:line="154" pos:column="21"/></condition><then pos:line="154" pos:column="21">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="155" pos:column="9">xmlXPathFreeObject<pos:position pos:line="155" pos:column="27"/></name><argument_list pos:line="155" pos:column="27">(<argument><expr><name pos:line="155" pos:column="28">xpath_obj<pos:position pos:line="155" pos:column="37"/></name></expr></argument>)<pos:position pos:line="155" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="39"/></expr_stmt></block></then></if>
      <if pos:line="156" pos:column="7">if <condition pos:line="156" pos:column="10">(<expr><name pos:line="156" pos:column="11">xpath_ctx<pos:position pos:line="156" pos:column="20"/></name></expr>)<pos:position pos:line="156" pos:column="21"/></condition><then pos:line="156" pos:column="21">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="157" pos:column="9">xmlXPathFreeContext<pos:position pos:line="157" pos:column="28"/></name><argument_list pos:line="157" pos:column="28">(<argument><expr><name pos:line="157" pos:column="29">xpath_ctx<pos:position pos:line="157" pos:column="38"/></name></expr></argument>)<pos:position pos:line="157" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="40"/></expr_stmt></block></then></if>
      <if pos:line="158" pos:column="7">if <condition pos:line="158" pos:column="10">(<expr><name pos:line="158" pos:column="11">xml_doc<pos:position pos:line="158" pos:column="18"/></name></expr>)<pos:position pos:line="158" pos:column="19"/></condition><then pos:line="158" pos:column="19">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="159" pos:column="9">xmlFreeDoc<pos:position pos:line="159" pos:column="19"/></name><argument_list pos:line="159" pos:column="19">(<argument><expr><name pos:line="159" pos:column="20">xml_doc<pos:position pos:line="159" pos:column="27"/></name></expr></argument>)<pos:position pos:line="159" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="29"/></expr_stmt></block></then></if>
      <expr_stmt><expr><call><name pos:line="160" pos:column="7">sfree<pos:position pos:line="160" pos:column="12"/></name><argument_list pos:line="160" pos:column="12">(<argument><expr><name pos:line="160" pos:column="13">xml<pos:position pos:line="160" pos:column="16"/></name></expr></argument>)<pos:position pos:line="160" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="161" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="163" pos:column="5">sfree<pos:position pos:line="163" pos:column="10"/></name><argument_list pos:line="163" pos:column="10">(<argument><expr><name pos:line="163" pos:column="11">domids<pos:position pos:line="163" pos:column="17"/></name></expr></argument>)<pos:position pos:line="163" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="164" pos:column="4"/></block></then></if>

  <return pos:line="166" pos:column="3">return <expr><literal type="number" pos:line="166" pos:column="10">0<pos:position pos:line="166" pos:column="11"/></literal></expr>;<pos:position pos:line="166" pos:column="12"/></return>
}<pos:position pos:line="167" pos:column="2"/></block></function></unit>

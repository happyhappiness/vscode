<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_755_collectd-4.4.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">network_config<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">key<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">val<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">node<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">service<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name><name pos:line="6" pos:column="15">fields<pos:position pos:line="6" pos:column="21"/></name><index pos:line="6" pos:column="21">[<expr><literal type="number" pos:line="6" pos:column="22">3<pos:position pos:line="6" pos:column="23"/></literal></expr>]<pos:position pos:line="6" pos:column="24"/></index></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type>   <name pos:line="7" pos:column="15">fields_num<pos:position pos:line="7" pos:column="25"/></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">(<pos:position pos:line="9" pos:column="14"/></operator><call><name pos:line="9" pos:column="14">strcasecmp<pos:position pos:line="9" pos:column="24"/></name> <argument_list pos:line="9" pos:column="25">(<argument><expr><literal type="string" pos:line="9" pos:column="26">"Listen"<pos:position pos:line="9" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="36">key<pos:position pos:line="9" pos:column="39"/></name></expr></argument>)<pos:position pos:line="9" pos:column="40"/></argument_list></call> <operator pos:line="9" pos:column="41">==<pos:position pos:line="9" pos:column="43"/></operator> <literal type="number" pos:line="9" pos:column="44">0<pos:position pos:line="9" pos:column="45"/></literal><operator pos:line="9" pos:column="45">)<pos:position pos:line="9" pos:column="46"/></operator>
			<operator pos:line="10" pos:column="25">||<pos:position pos:line="10" pos:column="27"/></operator> <operator pos:line="10" pos:column="28">(<pos:position pos:line="10" pos:column="29"/></operator><call><name pos:line="10" pos:column="29">strcasecmp<pos:position pos:line="10" pos:column="39"/></name> <argument_list pos:line="10" pos:column="40">(<argument><expr><literal type="string" pos:line="10" pos:column="41">"Server"<pos:position pos:line="10" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="51">key<pos:position pos:line="10" pos:column="54"/></name></expr></argument>)<pos:position pos:line="10" pos:column="55"/></argument_list></call> <operator pos:line="10" pos:column="56">==<pos:position pos:line="10" pos:column="58"/></operator> <literal type="number" pos:line="10" pos:column="59">0<pos:position pos:line="10" pos:column="60"/></literal><operator pos:line="10" pos:column="60">)<pos:position pos:line="10" pos:column="61"/></operator></expr>)<pos:position pos:line="10" pos:column="62"/></condition><then pos:line="10" pos:column="62">
	<block pos:line="11" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="12" pos:column="17">char<pos:position pos:line="12" pos:column="21"/></name> <modifier pos:line="12" pos:column="22">*<pos:position pos:line="12" pos:column="23"/></modifier></type><name pos:line="12" pos:column="23">val_cpy<pos:position pos:line="12" pos:column="30"/></name> <init pos:line="12" pos:column="31">= <expr><call><name pos:line="12" pos:column="33">strdup<pos:position pos:line="12" pos:column="39"/></name> <argument_list pos:line="12" pos:column="40">(<argument><expr><name pos:line="12" pos:column="41">val<pos:position pos:line="12" pos:column="44"/></name></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="46"/></decl_stmt>
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><name pos:line="13" pos:column="21">val_cpy<pos:position pos:line="13" pos:column="28"/></name> <operator pos:line="13" pos:column="29">==<pos:position pos:line="13" pos:column="31"/></operator> <name pos:line="13" pos:column="32">NULL<pos:position pos:line="13" pos:column="36"/></name></expr>)<pos:position pos:line="13" pos:column="37"/></condition><then pos:line="13" pos:column="37">
			<block type="pseudo"><return pos:line="14" pos:column="25">return <expr><operator pos:line="14" pos:column="32">(<pos:position pos:line="14" pos:column="33"/></operator><literal type="number" pos:line="14" pos:column="33">1<pos:position pos:line="14" pos:column="34"/></literal><operator pos:line="14" pos:column="34">)<pos:position pos:line="14" pos:column="35"/></operator></expr>;<pos:position pos:line="14" pos:column="36"/></return></block></then></if>

		<expr_stmt><expr><name pos:line="16" pos:column="17">service<pos:position pos:line="16" pos:column="24"/></name> <operator pos:line="16" pos:column="25">=<pos:position pos:line="16" pos:column="26"/></operator> <name pos:line="16" pos:column="27">NET_DEFAULT_PORT<pos:position pos:line="16" pos:column="43"/></name></expr>;<pos:position pos:line="16" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><name pos:line="17" pos:column="17">fields_num<pos:position pos:line="17" pos:column="27"/></name> <operator pos:line="17" pos:column="28">=<pos:position pos:line="17" pos:column="29"/></operator> <call><name pos:line="17" pos:column="30">strsplit<pos:position pos:line="17" pos:column="38"/></name> <argument_list pos:line="17" pos:column="39">(<argument><expr><name pos:line="17" pos:column="40">val_cpy<pos:position pos:line="17" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="49">fields<pos:position pos:line="17" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="57">3<pos:position pos:line="17" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="60"/></expr_stmt>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><operator pos:line="18" pos:column="21">(<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="22">fields_num<pos:position pos:line="18" pos:column="32"/></name> <operator pos:line="18" pos:column="33">!=<pos:position pos:line="18" pos:column="35"/></operator> <literal type="number" pos:line="18" pos:column="36">1<pos:position pos:line="18" pos:column="37"/></literal><operator pos:line="18" pos:column="37">)<pos:position pos:line="18" pos:column="38"/></operator>
				<operator pos:line="19" pos:column="33">&amp;&amp;<pos:position pos:line="19" pos:column="43"/></operator> <operator pos:line="19" pos:column="36">(<pos:position pos:line="19" pos:column="37"/></operator><name pos:line="19" pos:column="37">fields_num<pos:position pos:line="19" pos:column="47"/></name> <operator pos:line="19" pos:column="48">!=<pos:position pos:line="19" pos:column="50"/></operator> <literal type="number" pos:line="19" pos:column="51">2<pos:position pos:line="19" pos:column="52"/></literal><operator pos:line="19" pos:column="52">)<pos:position pos:line="19" pos:column="53"/></operator></expr>)<pos:position pos:line="19" pos:column="54"/></condition><then pos:line="19" pos:column="54">
		<block pos:line="20" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="21" pos:column="25">sfree<pos:position pos:line="21" pos:column="30"/></name> <argument_list pos:line="21" pos:column="31">(<argument><expr><name pos:line="21" pos:column="32">val_cpy<pos:position pos:line="21" pos:column="39"/></name></expr></argument>)<pos:position pos:line="21" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="41"/></expr_stmt>
			<return pos:line="22" pos:column="25">return <expr><operator pos:line="22" pos:column="32">(<pos:position pos:line="22" pos:column="33"/></operator><literal type="number" pos:line="22" pos:column="33">1<pos:position pos:line="22" pos:column="34"/></literal><operator pos:line="22" pos:column="34">)<pos:position pos:line="22" pos:column="35"/></operator></expr>;<pos:position pos:line="22" pos:column="36"/></return>
		}<pos:position pos:line="23" pos:column="18"/></block></then>
		<elseif pos:line="24" pos:column="17">else <if pos:line="24" pos:column="22">if <condition pos:line="24" pos:column="25">(<expr><name pos:line="24" pos:column="26">fields_num<pos:position pos:line="24" pos:column="36"/></name> <operator pos:line="24" pos:column="37">==<pos:position pos:line="24" pos:column="39"/></operator> <literal type="number" pos:line="24" pos:column="40">2<pos:position pos:line="24" pos:column="41"/></literal></expr>)<pos:position pos:line="24" pos:column="42"/></condition><then pos:line="24" pos:column="42">
		<block pos:line="25" pos:column="17">{
			<if pos:line="26" pos:column="25">if <condition pos:line="26" pos:column="28">(<expr><operator pos:line="26" pos:column="29">(<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="30">service<pos:position pos:line="26" pos:column="37"/></name> <operator pos:line="26" pos:column="38">=<pos:position pos:line="26" pos:column="39"/></operator> <call><name pos:line="26" pos:column="40">strchr<pos:position pos:line="26" pos:column="46"/></name> <argument_list pos:line="26" pos:column="47">(<argument><expr><name><name pos:line="26" pos:column="48">fields<pos:position pos:line="26" pos:column="54"/></name><index pos:line="26" pos:column="54">[<expr><literal type="number" pos:line="26" pos:column="55">1<pos:position pos:line="26" pos:column="56"/></literal></expr>]<pos:position pos:line="26" pos:column="57"/></index></name></expr></argument>, <argument><expr><literal type="char" pos:line="26" pos:column="59">'.'<pos:position pos:line="26" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="63"/></argument_list></call><operator pos:line="26" pos:column="63">)<pos:position pos:line="26" pos:column="64"/></operator> <operator pos:line="26" pos:column="65">!=<pos:position pos:line="26" pos:column="67"/></operator> <name pos:line="26" pos:column="68">NULL<pos:position pos:line="26" pos:column="72"/></name></expr>)<pos:position pos:line="26" pos:column="73"/></condition><then pos:line="26" pos:column="73">
				<block type="pseudo"><expr_stmt><expr><operator pos:line="27" pos:column="33">*<pos:position pos:line="27" pos:column="34"/></operator><name pos:line="27" pos:column="34">service<pos:position pos:line="27" pos:column="41"/></name> <operator pos:line="27" pos:column="42">=<pos:position pos:line="27" pos:column="43"/></operator> <literal type="char" pos:line="27" pos:column="44">'\0'<pos:position pos:line="27" pos:column="48"/></literal></expr>;<pos:position pos:line="27" pos:column="49"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="28" pos:column="25">service<pos:position pos:line="28" pos:column="32"/></name> <operator pos:line="28" pos:column="33">=<pos:position pos:line="28" pos:column="34"/></operator> <name><name pos:line="28" pos:column="35">fields<pos:position pos:line="28" pos:column="41"/></name><index pos:line="28" pos:column="41">[<expr><literal type="number" pos:line="28" pos:column="42">1<pos:position pos:line="28" pos:column="43"/></literal></expr>]<pos:position pos:line="28" pos:column="44"/></index></name></expr>;<pos:position pos:line="28" pos:column="45"/></expr_stmt>
		}<pos:position pos:line="29" pos:column="18"/></block></then></if></elseif></if>
		<expr_stmt><expr><name pos:line="30" pos:column="17">node<pos:position pos:line="30" pos:column="21"/></name> <operator pos:line="30" pos:column="22">=<pos:position pos:line="30" pos:column="23"/></operator> <name><name pos:line="30" pos:column="24">fields<pos:position pos:line="30" pos:column="30"/></name><index pos:line="30" pos:column="30">[<expr><literal type="number" pos:line="30" pos:column="31">0<pos:position pos:line="30" pos:column="32"/></literal></expr>]<pos:position pos:line="30" pos:column="33"/></index></name></expr>;<pos:position pos:line="30" pos:column="34"/></expr_stmt>

		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><call><name pos:line="32" pos:column="21">strcasecmp<pos:position pos:line="32" pos:column="31"/></name> <argument_list pos:line="32" pos:column="32">(<argument><expr><literal type="string" pos:line="32" pos:column="33">"Listen"<pos:position pos:line="32" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="43">key<pos:position pos:line="32" pos:column="46"/></name></expr></argument>)<pos:position pos:line="32" pos:column="47"/></argument_list></call> <operator pos:line="32" pos:column="48">==<pos:position pos:line="32" pos:column="50"/></operator> <literal type="number" pos:line="32" pos:column="51">0<pos:position pos:line="32" pos:column="52"/></literal></expr>)<pos:position pos:line="32" pos:column="53"/></condition><then pos:line="32" pos:column="53">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="25">network_add_listen_socket<pos:position pos:line="33" pos:column="50"/></name> <argument_list pos:line="33" pos:column="51">(<argument><expr><name pos:line="33" pos:column="52">node<pos:position pos:line="33" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="58">service<pos:position pos:line="33" pos:column="65"/></name></expr></argument>)<pos:position pos:line="33" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="67"/></expr_stmt></block></then>
		<else pos:line="34" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="25">network_add_sending_socket<pos:position pos:line="35" pos:column="51"/></name> <argument_list pos:line="35" pos:column="52">(<argument><expr><name pos:line="35" pos:column="53">node<pos:position pos:line="35" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="59">service<pos:position pos:line="35" pos:column="66"/></name></expr></argument>)<pos:position pos:line="35" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="68"/></expr_stmt></block></else></if>

		<expr_stmt><expr><call><name pos:line="37" pos:column="17">sfree<pos:position pos:line="37" pos:column="22"/></name> <argument_list pos:line="37" pos:column="23">(<argument><expr><name pos:line="37" pos:column="24">val_cpy<pos:position pos:line="37" pos:column="31"/></name></expr></argument>)<pos:position pos:line="37" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="38" pos:column="10"/></block></then>
	<elseif pos:line="39" pos:column="9">else <if pos:line="39" pos:column="14">if <condition pos:line="39" pos:column="17">(<expr><call><name pos:line="39" pos:column="18">strcasecmp<pos:position pos:line="39" pos:column="28"/></name> <argument_list pos:line="39" pos:column="29">(<argument><expr><literal type="string" pos:line="39" pos:column="30">"TimeToLive"<pos:position pos:line="39" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="44">key<pos:position pos:line="39" pos:column="47"/></name></expr></argument>)<pos:position pos:line="39" pos:column="48"/></argument_list></call> <operator pos:line="39" pos:column="49">==<pos:position pos:line="39" pos:column="51"/></operator> <literal type="number" pos:line="39" pos:column="52">0<pos:position pos:line="39" pos:column="53"/></literal></expr>)<pos:position pos:line="39" pos:column="54"/></condition><then pos:line="39" pos:column="54">
	<block pos:line="40" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="41" pos:column="17">int<pos:position pos:line="41" pos:column="20"/></name></type> <name pos:line="41" pos:column="21">tmp<pos:position pos:line="41" pos:column="24"/></name> <init pos:line="41" pos:column="25">= <expr><call><name pos:line="41" pos:column="27">atoi<pos:position pos:line="41" pos:column="31"/></name> <argument_list pos:line="41" pos:column="32">(<argument><expr><name pos:line="41" pos:column="33">val<pos:position pos:line="41" pos:column="36"/></name></expr></argument>)<pos:position pos:line="41" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="41" pos:column="38"/></decl_stmt>
		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><operator pos:line="42" pos:column="21">(<pos:position pos:line="42" pos:column="22"/></operator><name pos:line="42" pos:column="22">tmp<pos:position pos:line="42" pos:column="25"/></name> <operator pos:line="42" pos:column="26">&gt;<pos:position pos:line="42" pos:column="30"/></operator> <literal type="number" pos:line="42" pos:column="28">0<pos:position pos:line="42" pos:column="29"/></literal><operator pos:line="42" pos:column="29">)<pos:position pos:line="42" pos:column="30"/></operator> <operator pos:line="42" pos:column="31">&amp;&amp;<pos:position pos:line="42" pos:column="41"/></operator> <operator pos:line="42" pos:column="34">(<pos:position pos:line="42" pos:column="35"/></operator><name pos:line="42" pos:column="35">tmp<pos:position pos:line="42" pos:column="38"/></name> <operator pos:line="42" pos:column="39">&lt;<pos:position pos:line="42" pos:column="43"/></operator> <literal type="number" pos:line="42" pos:column="41">256<pos:position pos:line="42" pos:column="44"/></literal><operator pos:line="42" pos:column="44">)<pos:position pos:line="42" pos:column="45"/></operator></expr>)<pos:position pos:line="42" pos:column="46"/></condition><then pos:line="42" pos:column="46">
			<block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="25">network_config_ttl<pos:position pos:line="43" pos:column="43"/></name> <operator pos:line="43" pos:column="44">=<pos:position pos:line="43" pos:column="45"/></operator> <name pos:line="43" pos:column="46">tmp<pos:position pos:line="43" pos:column="49"/></name></expr>;<pos:position pos:line="43" pos:column="50"/></expr_stmt></block></then>
		<else pos:line="44" pos:column="17">else
			<block type="pseudo"><return pos:line="45" pos:column="25">return <expr><operator pos:line="45" pos:column="32">(<pos:position pos:line="45" pos:column="33"/></operator><literal type="number" pos:line="45" pos:column="33">1<pos:position pos:line="45" pos:column="34"/></literal><operator pos:line="45" pos:column="34">)<pos:position pos:line="45" pos:column="35"/></operator></expr>;<pos:position pos:line="45" pos:column="36"/></return></block></else></if>
	}<pos:position pos:line="46" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="47" pos:column="9">else <if pos:line="47" pos:column="14">if <condition pos:line="47" pos:column="17">(<expr><call><name pos:line="47" pos:column="18">strcasecmp<pos:position pos:line="47" pos:column="28"/></name> <argument_list pos:line="47" pos:column="29">(<argument><expr><literal type="string" pos:line="47" pos:column="30">"Forward"<pos:position pos:line="47" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="41">key<pos:position pos:line="47" pos:column="44"/></name></expr></argument>)<pos:position pos:line="47" pos:column="45"/></argument_list></call> <operator pos:line="47" pos:column="46">==<pos:position pos:line="47" pos:column="48"/></operator> <literal type="number" pos:line="47" pos:column="49">0<pos:position pos:line="47" pos:column="50"/></literal></expr>)<pos:position pos:line="47" pos:column="51"/></condition><then pos:line="47" pos:column="51">
	<block pos:line="48" pos:column="9">{
		<if pos:line="49" pos:column="17">if <condition pos:line="49" pos:column="20">(<expr><operator pos:line="49" pos:column="21">(<pos:position pos:line="49" pos:column="22"/></operator><call><name pos:line="49" pos:column="22">strcasecmp<pos:position pos:line="49" pos:column="32"/></name> <argument_list pos:line="49" pos:column="33">(<argument><expr><literal type="string" pos:line="49" pos:column="34">"true"<pos:position pos:line="49" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="42">val<pos:position pos:line="49" pos:column="45"/></name></expr></argument>)<pos:position pos:line="49" pos:column="46"/></argument_list></call> <operator pos:line="49" pos:column="47">==<pos:position pos:line="49" pos:column="49"/></operator> <literal type="number" pos:line="49" pos:column="50">0<pos:position pos:line="49" pos:column="51"/></literal><operator pos:line="49" pos:column="51">)<pos:position pos:line="49" pos:column="52"/></operator>
				<operator pos:line="50" pos:column="33">||<pos:position pos:line="50" pos:column="35"/></operator> <operator pos:line="50" pos:column="36">(<pos:position pos:line="50" pos:column="37"/></operator><call><name pos:line="50" pos:column="37">strcasecmp<pos:position pos:line="50" pos:column="47"/></name> <argument_list pos:line="50" pos:column="48">(<argument><expr><literal type="string" pos:line="50" pos:column="49">"yes"<pos:position pos:line="50" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="56">val<pos:position pos:line="50" pos:column="59"/></name></expr></argument>)<pos:position pos:line="50" pos:column="60"/></argument_list></call> <operator pos:line="50" pos:column="61">==<pos:position pos:line="50" pos:column="63"/></operator> <literal type="number" pos:line="50" pos:column="64">0<pos:position pos:line="50" pos:column="65"/></literal><operator pos:line="50" pos:column="65">)<pos:position pos:line="50" pos:column="66"/></operator>
				<operator pos:line="51" pos:column="33">||<pos:position pos:line="51" pos:column="35"/></operator> <operator pos:line="51" pos:column="36">(<pos:position pos:line="51" pos:column="37"/></operator><call><name pos:line="51" pos:column="37">strcasecmp<pos:position pos:line="51" pos:column="47"/></name> <argument_list pos:line="51" pos:column="48">(<argument><expr><literal type="string" pos:line="51" pos:column="49">"on"<pos:position pos:line="51" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="55">val<pos:position pos:line="51" pos:column="58"/></name></expr></argument>)<pos:position pos:line="51" pos:column="59"/></argument_list></call> <operator pos:line="51" pos:column="60">==<pos:position pos:line="51" pos:column="62"/></operator> <literal type="number" pos:line="51" pos:column="63">0<pos:position pos:line="51" pos:column="64"/></literal><operator pos:line="51" pos:column="64">)<pos:position pos:line="51" pos:column="65"/></operator></expr>)<pos:position pos:line="51" pos:column="66"/></condition><then pos:line="51" pos:column="66">
			<block type="pseudo"><expr_stmt><expr><name pos:line="52" pos:column="25">network_config_forward<pos:position pos:line="52" pos:column="47"/></name> <operator pos:line="52" pos:column="48">=<pos:position pos:line="52" pos:column="49"/></operator> <literal type="number" pos:line="52" pos:column="50">1<pos:position pos:line="52" pos:column="51"/></literal></expr>;<pos:position pos:line="52" pos:column="52"/></expr_stmt></block></then>
		<else pos:line="53" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="54" pos:column="25">network_config_forward<pos:position pos:line="54" pos:column="47"/></name> <operator pos:line="54" pos:column="48">=<pos:position pos:line="54" pos:column="49"/></operator> <literal type="number" pos:line="54" pos:column="50">0<pos:position pos:line="54" pos:column="51"/></literal></expr>;<pos:position pos:line="54" pos:column="52"/></expr_stmt></block></else></if>
	}<pos:position pos:line="55" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="56" pos:column="9">else <if pos:line="56" pos:column="14">if <condition pos:line="56" pos:column="17">(<expr><call><name pos:line="56" pos:column="18">strcasecmp<pos:position pos:line="56" pos:column="28"/></name> <argument_list pos:line="56" pos:column="29">(<argument><expr><literal type="string" pos:line="56" pos:column="30">"CacheFlush"<pos:position pos:line="56" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="44">key<pos:position pos:line="56" pos:column="47"/></name></expr></argument>)<pos:position pos:line="56" pos:column="48"/></argument_list></call> <operator pos:line="56" pos:column="49">==<pos:position pos:line="56" pos:column="51"/></operator> <literal type="number" pos:line="56" pos:column="52">0<pos:position pos:line="56" pos:column="53"/></literal></expr>)<pos:position pos:line="56" pos:column="54"/></condition><then pos:line="56" pos:column="54">
	<block pos:line="57" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="58" pos:column="17">int<pos:position pos:line="58" pos:column="20"/></name></type> <name pos:line="58" pos:column="21">tmp<pos:position pos:line="58" pos:column="24"/></name> <init pos:line="58" pos:column="25">= <expr><call><name pos:line="58" pos:column="27">atoi<pos:position pos:line="58" pos:column="31"/></name> <argument_list pos:line="58" pos:column="32">(<argument><expr><name pos:line="58" pos:column="33">val<pos:position pos:line="58" pos:column="36"/></name></expr></argument>)<pos:position pos:line="58" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="58" pos:column="38"/></decl_stmt>
		<if pos:line="59" pos:column="17">if <condition pos:line="59" pos:column="20">(<expr><name pos:line="59" pos:column="21">tmp<pos:position pos:line="59" pos:column="24"/></name> <operator pos:line="59" pos:column="25">&gt;<pos:position pos:line="59" pos:column="29"/></operator> <literal type="number" pos:line="59" pos:column="27">0<pos:position pos:line="59" pos:column="28"/></literal></expr>)<pos:position pos:line="59" pos:column="29"/></condition><then pos:line="59" pos:column="29">
			<block type="pseudo"><expr_stmt><expr><name pos:line="60" pos:column="25">cache_flush_interval<pos:position pos:line="60" pos:column="45"/></name> <operator pos:line="60" pos:column="46">=<pos:position pos:line="60" pos:column="47"/></operator> <name pos:line="60" pos:column="48">tmp<pos:position pos:line="60" pos:column="51"/></name></expr>;<pos:position pos:line="60" pos:column="52"/></expr_stmt></block></then>
		<else pos:line="61" pos:column="17">else <block type="pseudo"><return pos:line="61" pos:column="22">return <expr><operator pos:line="61" pos:column="29">(<pos:position pos:line="61" pos:column="30"/></operator><literal type="number" pos:line="61" pos:column="30">1<pos:position pos:line="61" pos:column="31"/></literal><operator pos:line="61" pos:column="31">)<pos:position pos:line="61" pos:column="32"/></operator></expr>;<pos:position pos:line="61" pos:column="33"/></return></block></else></if>
	}<pos:position pos:line="62" pos:column="10"/></block></then></if></elseif>
	<else pos:line="63" pos:column="9">else
	<block pos:line="64" pos:column="9">{
		<return pos:line="65" pos:column="17">return <expr><operator pos:line="65" pos:column="24">(<pos:position pos:line="65" pos:column="25"/></operator><operator pos:line="65" pos:column="25">-<pos:position pos:line="65" pos:column="26"/></operator><literal type="number" pos:line="65" pos:column="26">1<pos:position pos:line="65" pos:column="27"/></literal><operator pos:line="65" pos:column="27">)<pos:position pos:line="65" pos:column="28"/></operator></expr>;<pos:position pos:line="65" pos:column="29"/></return>
	}<pos:position pos:line="66" pos:column="10"/></block></else></if>
	<return pos:line="67" pos:column="9">return <expr><operator pos:line="67" pos:column="16">(<pos:position pos:line="67" pos:column="17"/></operator><literal type="number" pos:line="67" pos:column="17">0<pos:position pos:line="67" pos:column="18"/></literal><operator pos:line="67" pos:column="18">)<pos:position pos:line="67" pos:column="19"/></operator></expr>;<pos:position pos:line="67" pos:column="20"/></return>
}<pos:position pos:line="68" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_413_collectd-4.8.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">cjni_jvm_env_destroy<pos:position pos:line="1" pos:column="33"/></name> <parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">void<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">args<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list> <comment type="block" pos:line="1" pos:column="47">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">cjni_jvm_env_t<pos:position pos:line="3" pos:column="17"/></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">cjni_env<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">args<pos:position pos:line="5" pos:column="11"/></name> <operator pos:line="5" pos:column="12">==<pos:position pos:line="5" pos:column="14"/></operator> <name pos:line="5" pos:column="15">NULL<pos:position pos:line="5" pos:column="19"/></name></expr>)<pos:position pos:line="5" pos:column="20"/></condition><then pos:line="5" pos:column="20">
    <block type="pseudo"><return pos:line="6" pos:column="5">return;<pos:position pos:line="6" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="8" pos:column="3">cjni_env<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <operator pos:line="8" pos:column="14">(<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="15">cjni_jvm_env_t<pos:position pos:line="8" pos:column="29"/></name> <operator pos:line="8" pos:column="30">*<pos:position pos:line="8" pos:column="31"/></operator><operator pos:line="8" pos:column="31">)<pos:position pos:line="8" pos:column="32"/></operator> <name pos:line="8" pos:column="33">args<pos:position pos:line="8" pos:column="37"/></name></expr>;<pos:position pos:line="8" pos:column="38"/></expr_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name><name pos:line="10" pos:column="7">cjni_env<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">-&gt;<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="17">reference_counter<pos:position pos:line="10" pos:column="34"/></name></name> <operator pos:line="10" pos:column="35">&gt;<pos:position pos:line="10" pos:column="39"/></operator> <literal type="number" pos:line="10" pos:column="37">0<pos:position pos:line="10" pos:column="38"/></literal></expr>)<pos:position pos:line="10" pos:column="39"/></condition><then pos:line="10" pos:column="39">
  <block pos:line="11" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">ERROR<pos:position pos:line="12" pos:column="10"/></name> <argument_list pos:line="12" pos:column="11">(<argument><expr><literal type="string" pos:line="12" pos:column="12">"java plugin: cjni_jvm_env_destroy: "<pos:position pos:line="12" pos:column="49"/></literal>
        <literal type="string" pos:line="13" pos:column="9">"cjni_env-&gt;reference_counter = %i;"<pos:position pos:line="13" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="46">cjni_env<pos:position pos:line="13" pos:column="54"/></name><operator pos:line="13" pos:column="54">-&gt;<pos:position pos:line="13" pos:column="59"/></operator><name pos:line="13" pos:column="56">reference_counter<pos:position pos:line="13" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="75"/></expr_stmt>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name><name pos:line="16" pos:column="7">cjni_env<pos:position pos:line="16" pos:column="15"/></name><operator pos:line="16" pos:column="15">-&gt;<pos:position pos:line="16" pos:column="20"/></operator><name pos:line="16" pos:column="17">jvm_env<pos:position pos:line="16" pos:column="24"/></name></name> <operator pos:line="16" pos:column="25">!=<pos:position pos:line="16" pos:column="27"/></operator> <name pos:line="16" pos:column="28">NULL<pos:position pos:line="16" pos:column="32"/></name></expr>)<pos:position pos:line="16" pos:column="33"/></condition><then pos:line="16" pos:column="33">
  <block pos:line="17" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">ERROR<pos:position pos:line="18" pos:column="10"/></name> <argument_list pos:line="18" pos:column="11">(<argument><expr><literal type="string" pos:line="18" pos:column="12">"java plugin: cjni_jvm_env_destroy: cjni_env-&gt;jvm_env = %p;"<pos:position pos:line="18" pos:column="75"/></literal></expr></argument>,
        <argument><expr><operator pos:line="19" pos:column="9">(<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">void<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">*<pos:position pos:line="19" pos:column="16"/></operator><operator pos:line="19" pos:column="16">)<pos:position pos:line="19" pos:column="17"/></operator> <name><name pos:line="19" pos:column="18">cjni_env<pos:position pos:line="19" pos:column="26"/></name><operator pos:line="19" pos:column="26">-&gt;<pos:position pos:line="19" pos:column="31"/></operator><name pos:line="19" pos:column="28">jvm_env<pos:position pos:line="19" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="37"/></expr_stmt>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="22" pos:column="3">/* The pointer is allocated in `cjni_thread_attach' */</comment>
  <expr_stmt><expr><call><name pos:line="23" pos:column="3">free<pos:position pos:line="23" pos:column="7"/></name> <argument_list pos:line="23" pos:column="8">(<argument><expr><name pos:line="23" pos:column="9">cjni_env<pos:position pos:line="23" pos:column="17"/></name></expr></argument>)<pos:position pos:line="23" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="19"/></expr_stmt>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

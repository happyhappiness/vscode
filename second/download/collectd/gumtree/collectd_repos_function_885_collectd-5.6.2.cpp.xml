<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_885_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">memcached_read<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">user_data_t<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">user_data<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list> <block pos:line="1" pos:column="51">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">char<pos:position pos:line="2" pos:column="7"/></name></type> <name><name pos:line="2" pos:column="8">buf<pos:position pos:line="2" pos:column="11"/></name><index pos:line="2" pos:column="11">[<expr><literal type="number" pos:line="2" pos:column="12">4096<pos:position pos:line="2" pos:column="16"/></literal></expr>]<pos:position pos:line="2" pos:column="17"/></index></name></decl>;<pos:position pos:line="2" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name><name pos:line="3" pos:column="9">fields<pos:position pos:line="3" pos:column="15"/></name><index pos:line="3" pos:column="15">[<expr><literal type="number" pos:line="3" pos:column="16">3<pos:position pos:line="3" pos:column="17"/></literal></expr>]<pos:position pos:line="3" pos:column="18"/></index></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">ptr<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">line<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">saveptr<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">fields_num<pos:position pos:line="7" pos:column="17"/></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="9" pos:column="3">gauge_t<pos:position pos:line="9" pos:column="10"/></name></type> <name pos:line="9" pos:column="11">bytes_used<pos:position pos:line="9" pos:column="21"/></name> <init pos:line="9" pos:column="22">= <expr><name pos:line="9" pos:column="24">NAN<pos:position pos:line="9" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">gauge_t<pos:position pos:line="10" pos:column="10"/></name></type> <name pos:line="10" pos:column="11">bytes_total<pos:position pos:line="10" pos:column="22"/></name> <init pos:line="10" pos:column="23">= <expr><name pos:line="10" pos:column="25">NAN<pos:position pos:line="10" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">gauge_t<pos:position pos:line="11" pos:column="10"/></name></type> <name pos:line="11" pos:column="11">hits<pos:position pos:line="11" pos:column="15"/></name> <init pos:line="11" pos:column="16">= <expr><name pos:line="11" pos:column="18">NAN<pos:position pos:line="11" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">gauge_t<pos:position pos:line="12" pos:column="10"/></name></type> <name pos:line="12" pos:column="11">gets<pos:position pos:line="12" pos:column="15"/></name> <init pos:line="12" pos:column="16">= <expr><name pos:line="12" pos:column="18">NAN<pos:position pos:line="12" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">gauge_t<pos:position pos:line="13" pos:column="10"/></name></type> <name pos:line="13" pos:column="11">incr_hits<pos:position pos:line="13" pos:column="20"/></name> <init pos:line="13" pos:column="21">= <expr><name pos:line="13" pos:column="23">NAN<pos:position pos:line="13" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">derive_t<pos:position pos:line="14" pos:column="11"/></name></type> <name pos:line="14" pos:column="12">incr<pos:position pos:line="14" pos:column="16"/></name> <init pos:line="14" pos:column="17">= <expr><literal type="number" pos:line="14" pos:column="19">0<pos:position pos:line="14" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">gauge_t<pos:position pos:line="15" pos:column="10"/></name></type> <name pos:line="15" pos:column="11">decr_hits<pos:position pos:line="15" pos:column="20"/></name> <init pos:line="15" pos:column="21">= <expr><name pos:line="15" pos:column="23">NAN<pos:position pos:line="15" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">derive_t<pos:position pos:line="16" pos:column="11"/></name></type> <name pos:line="16" pos:column="12">decr<pos:position pos:line="16" pos:column="16"/></name> <init pos:line="16" pos:column="17">= <expr><literal type="number" pos:line="16" pos:column="19">0<pos:position pos:line="16" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="16" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">derive_t<pos:position pos:line="17" pos:column="11"/></name></type> <name pos:line="17" pos:column="12">rusage_user<pos:position pos:line="17" pos:column="23"/></name> <init pos:line="17" pos:column="24">= <expr><literal type="number" pos:line="17" pos:column="26">0<pos:position pos:line="17" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">derive_t<pos:position pos:line="18" pos:column="11"/></name></type> <name pos:line="18" pos:column="12">rusage_syst<pos:position pos:line="18" pos:column="23"/></name> <init pos:line="18" pos:column="24">= <expr><literal type="number" pos:line="18" pos:column="26">0<pos:position pos:line="18" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="18" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="19" pos:column="3">derive_t<pos:position pos:line="19" pos:column="11"/></name></type> <name pos:line="19" pos:column="12">octets_rx<pos:position pos:line="19" pos:column="21"/></name> <init pos:line="19" pos:column="22">= <expr><literal type="number" pos:line="19" pos:column="24">0<pos:position pos:line="19" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="19" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="20" pos:column="3">derive_t<pos:position pos:line="20" pos:column="11"/></name></type> <name pos:line="20" pos:column="12">octets_tx<pos:position pos:line="20" pos:column="21"/></name> <init pos:line="20" pos:column="22">= <expr><literal type="number" pos:line="20" pos:column="24">0<pos:position pos:line="20" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="26"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="22" pos:column="3">memcached_t<pos:position pos:line="22" pos:column="14"/></name> <modifier pos:line="22" pos:column="15">*<pos:position pos:line="22" pos:column="16"/></modifier></type><name pos:line="22" pos:column="16">st<pos:position pos:line="22" pos:column="18"/></name></decl>;<pos:position pos:line="22" pos:column="19"/></decl_stmt>
  <expr_stmt><expr><name pos:line="23" pos:column="3">st<pos:position pos:line="23" pos:column="5"/></name> <operator pos:line="23" pos:column="6">=<pos:position pos:line="23" pos:column="7"/></operator> <name><name pos:line="23" pos:column="8">user_data<pos:position pos:line="23" pos:column="17"/></name><operator pos:line="23" pos:column="17">-&gt;<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="19">data<pos:position pos:line="23" pos:column="23"/></name></name></expr>;<pos:position pos:line="23" pos:column="24"/></expr_stmt>

  <comment type="block" pos:line="25" pos:column="3">/* get data from daemon */</comment>
  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><call><name pos:line="26" pos:column="7">memcached_query_daemon<pos:position pos:line="26" pos:column="29"/></name><argument_list pos:line="26" pos:column="29">(<argument><expr><name pos:line="26" pos:column="30">buf<pos:position pos:line="26" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="35">sizeof<argument_list pos:line="26" pos:column="41">(<argument><expr><name pos:line="26" pos:column="42">buf<pos:position pos:line="26" pos:column="45"/></name></expr></argument>)<pos:position pos:line="26" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="26" pos:column="48">st<pos:position pos:line="26" pos:column="50"/></name></expr></argument>)<pos:position pos:line="26" pos:column="51"/></argument_list></call> <operator pos:line="26" pos:column="52">&lt;<pos:position pos:line="26" pos:column="56"/></operator> <literal type="number" pos:line="26" pos:column="54">0<pos:position pos:line="26" pos:column="55"/></literal></expr>)<pos:position pos:line="26" pos:column="56"/></condition><then pos:line="26" pos:column="56"> <block pos:line="26" pos:column="57">{
    <return pos:line="27" pos:column="5">return <expr><operator pos:line="27" pos:column="12">-<pos:position pos:line="27" pos:column="13"/></operator><literal type="number" pos:line="27" pos:column="13">1<pos:position pos:line="27" pos:column="14"/></literal></expr>;<pos:position pos:line="27" pos:column="15"/></return>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

<cpp:define pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">define<pos:position pos:line="30" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="30" pos:column="9">FIELD_IS<pos:position pos:line="30" pos:column="17"/></name><parameter_list pos:line="30" pos:column="17">(<parameter><type><name pos:line="30" pos:column="18">cnst<pos:position pos:line="30" pos:column="22"/></name></type></parameter>)<pos:position pos:line="30" pos:column="23"/></parameter_list></cpp:macro>                                                         \
  <cpp:value pos:line="31" pos:column="3">(((sizeof(cnst) - 1) == name_len) &amp;&amp; (strcmp(cnst, fields[1]) == 0))<pos:position pos:line="31" pos:column="71"/></cpp:value></cpp:define>

  <expr_stmt><expr><name pos:line="33" pos:column="3">ptr<pos:position pos:line="33" pos:column="6"/></name> <operator pos:line="33" pos:column="7">=<pos:position pos:line="33" pos:column="8"/></operator> <name pos:line="33" pos:column="9">buf<pos:position pos:line="33" pos:column="12"/></name></expr>;<pos:position pos:line="33" pos:column="13"/></expr_stmt>
  <expr_stmt><expr><name pos:line="34" pos:column="3">saveptr<pos:position pos:line="34" pos:column="10"/></name> <operator pos:line="34" pos:column="11">=<pos:position pos:line="34" pos:column="12"/></operator> <name pos:line="34" pos:column="13">NULL<pos:position pos:line="34" pos:column="17"/></name></expr>;<pos:position pos:line="34" pos:column="18"/></expr_stmt>
  <while pos:line="35" pos:column="3">while <condition pos:line="35" pos:column="9">(<expr><operator pos:line="35" pos:column="10">(<pos:position pos:line="35" pos:column="11"/></operator><name pos:line="35" pos:column="11">line<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">=<pos:position pos:line="35" pos:column="17"/></operator> <call><name pos:line="35" pos:column="18">strtok_r<pos:position pos:line="35" pos:column="26"/></name><argument_list pos:line="35" pos:column="26">(<argument><expr><name pos:line="35" pos:column="27">ptr<pos:position pos:line="35" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="32">"\n\r"<pos:position pos:line="35" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="35" pos:column="40">&amp;<pos:position pos:line="35" pos:column="45"/></operator><name pos:line="35" pos:column="41">saveptr<pos:position pos:line="35" pos:column="48"/></name></expr></argument>)<pos:position pos:line="35" pos:column="49"/></argument_list></call><operator pos:line="35" pos:column="49">)<pos:position pos:line="35" pos:column="50"/></operator> <operator pos:line="35" pos:column="51">!=<pos:position pos:line="35" pos:column="53"/></operator> <name pos:line="35" pos:column="54">NULL<pos:position pos:line="35" pos:column="58"/></name></expr>)<pos:position pos:line="35" pos:column="59"/></condition> <block pos:line="35" pos:column="60">{
    <decl_stmt><decl><type><name pos:line="36" pos:column="5">int<pos:position pos:line="36" pos:column="8"/></name></type> <name pos:line="36" pos:column="9">name_len<pos:position pos:line="36" pos:column="17"/></name></decl>;<pos:position pos:line="36" pos:column="18"/></decl_stmt>

    <expr_stmt><expr><name pos:line="38" pos:column="5">ptr<pos:position pos:line="38" pos:column="8"/></name> <operator pos:line="38" pos:column="9">=<pos:position pos:line="38" pos:column="10"/></operator> <name pos:line="38" pos:column="11">NULL<pos:position pos:line="38" pos:column="15"/></name></expr>;<pos:position pos:line="38" pos:column="16"/></expr_stmt>

    <expr_stmt><expr><name pos:line="40" pos:column="5">fields_num<pos:position pos:line="40" pos:column="15"/></name> <operator pos:line="40" pos:column="16">=<pos:position pos:line="40" pos:column="17"/></operator> <call><name pos:line="40" pos:column="18">strsplit<pos:position pos:line="40" pos:column="26"/></name><argument_list pos:line="40" pos:column="26">(<argument><expr><name pos:line="40" pos:column="27">line<pos:position pos:line="40" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="33">fields<pos:position pos:line="40" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="41">3<pos:position pos:line="40" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="44"/></expr_stmt>
    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><name pos:line="41" pos:column="9">fields_num<pos:position pos:line="41" pos:column="19"/></name> <operator pos:line="41" pos:column="20">!=<pos:position pos:line="41" pos:column="22"/></operator> <literal type="number" pos:line="41" pos:column="23">3<pos:position pos:line="41" pos:column="24"/></literal></expr>)<pos:position pos:line="41" pos:column="25"/></condition><then pos:line="41" pos:column="25">
      <block type="pseudo"><continue pos:line="42" pos:column="7">continue;<pos:position pos:line="42" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="44" pos:column="5">name_len<pos:position pos:line="44" pos:column="13"/></name> <operator pos:line="44" pos:column="14">=<pos:position pos:line="44" pos:column="15"/></operator> <call><name pos:line="44" pos:column="16">strlen<pos:position pos:line="44" pos:column="22"/></name><argument_list pos:line="44" pos:column="22">(<argument><expr><name><name pos:line="44" pos:column="23">fields<pos:position pos:line="44" pos:column="29"/></name><index pos:line="44" pos:column="29">[<expr><literal type="number" pos:line="44" pos:column="30">1<pos:position pos:line="44" pos:column="31"/></literal></expr>]<pos:position pos:line="44" pos:column="32"/></index></name></expr></argument>)<pos:position pos:line="44" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="34"/></expr_stmt>
    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><name pos:line="45" pos:column="9">name_len<pos:position pos:line="45" pos:column="17"/></name> <operator pos:line="45" pos:column="18">==<pos:position pos:line="45" pos:column="20"/></operator> <literal type="number" pos:line="45" pos:column="21">0<pos:position pos:line="45" pos:column="22"/></literal></expr>)<pos:position pos:line="45" pos:column="23"/></condition><then pos:line="45" pos:column="23">
      <block type="pseudo"><continue pos:line="46" pos:column="7">continue;<pos:position pos:line="46" pos:column="16"/></continue></block></then></if>

    <comment type="block" pos:line="48" pos:column="5">/*
     * For an explanation on these fields please refer to
     * &lt;https://github.com/memcached/memcached/blob/master/doc/protocol.txt&gt;
     */</comment>

    <comment type="block" pos:line="53" pos:column="5">/*
     * CPU time consumed by the memcached process
     */</comment>
    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><call><name pos:line="56" pos:column="9">FIELD_IS<pos:position pos:line="56" pos:column="17"/></name><argument_list pos:line="56" pos:column="17">(<argument><expr><literal type="string" pos:line="56" pos:column="18">"rusage_user"<pos:position pos:line="56" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="33"/></condition><then pos:line="56" pos:column="33"> <block pos:line="56" pos:column="34">{
      <expr_stmt><expr><name pos:line="57" pos:column="7">rusage_user<pos:position pos:line="57" pos:column="18"/></name> <operator pos:line="57" pos:column="19">=<pos:position pos:line="57" pos:column="20"/></operator> <call><name pos:line="57" pos:column="21">atoll<pos:position pos:line="57" pos:column="26"/></name><argument_list pos:line="57" pos:column="26">(<argument><expr><name><name pos:line="57" pos:column="27">fields<pos:position pos:line="57" pos:column="33"/></name><index pos:line="57" pos:column="33">[<expr><literal type="number" pos:line="57" pos:column="34">2<pos:position pos:line="57" pos:column="35"/></literal></expr>]<pos:position pos:line="57" pos:column="36"/></index></name></expr></argument>)<pos:position pos:line="57" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="58" pos:column="6"/></block></then> <elseif pos:line="58" pos:column="7">else <if pos:line="58" pos:column="12">if <condition pos:line="58" pos:column="15">(<expr><call><name pos:line="58" pos:column="16">FIELD_IS<pos:position pos:line="58" pos:column="24"/></name><argument_list pos:line="58" pos:column="24">(<argument><expr><literal type="string" pos:line="58" pos:column="25">"rusage_system"<pos:position pos:line="58" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="58" pos:column="42"/></condition><then pos:line="58" pos:column="42"> <block pos:line="58" pos:column="43">{
      <expr_stmt><expr><name pos:line="59" pos:column="7">rusage_syst<pos:position pos:line="59" pos:column="18"/></name> <operator pos:line="59" pos:column="19">=<pos:position pos:line="59" pos:column="20"/></operator> <call><name pos:line="59" pos:column="21">atoll<pos:position pos:line="59" pos:column="26"/></name><argument_list pos:line="59" pos:column="26">(<argument><expr><name><name pos:line="59" pos:column="27">fields<pos:position pos:line="59" pos:column="33"/></name><index pos:line="59" pos:column="33">[<expr><literal type="number" pos:line="59" pos:column="34">2<pos:position pos:line="59" pos:column="35"/></literal></expr>]<pos:position pos:line="59" pos:column="36"/></index></name></expr></argument>)<pos:position pos:line="59" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if></elseif>

    <comment type="block" pos:line="62" pos:column="5">/*
     * Number of threads of this instance
     */</comment>
    <elseif pos:line="65" pos:column="5">else <if pos:line="65" pos:column="10">if <condition pos:line="65" pos:column="13">(<expr><call><name pos:line="65" pos:column="14">FIELD_IS<pos:position pos:line="65" pos:column="22"/></name><argument_list pos:line="65" pos:column="22">(<argument><expr><literal type="string" pos:line="65" pos:column="23">"threads"<pos:position pos:line="65" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="65" pos:column="34"/></condition><then pos:line="65" pos:column="34"> <block pos:line="65" pos:column="35">{
      <expr_stmt><expr><call><name pos:line="66" pos:column="7">submit_gauge2<pos:position pos:line="66" pos:column="20"/></name><argument_list pos:line="66" pos:column="20">(<argument><expr><literal type="string" pos:line="66" pos:column="21">"ps_count"<pos:position pos:line="66" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="33">NULL<pos:position pos:line="66" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="39">NAN<pos:position pos:line="66" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="66" pos:column="44">atof<pos:position pos:line="66" pos:column="48"/></name><argument_list pos:line="66" pos:column="48">(<argument><expr><name><name pos:line="66" pos:column="49">fields<pos:position pos:line="66" pos:column="55"/></name><index pos:line="66" pos:column="55">[<expr><literal type="number" pos:line="66" pos:column="56">2<pos:position pos:line="66" pos:column="57"/></literal></expr>]<pos:position pos:line="66" pos:column="58"/></index></name></expr></argument>)<pos:position pos:line="66" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="66" pos:column="61">st<pos:position pos:line="66" pos:column="63"/></name></expr></argument>)<pos:position pos:line="66" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="65"/></expr_stmt>
    }<pos:position pos:line="67" pos:column="6"/></block></then></if></elseif>

    <comment type="block" pos:line="69" pos:column="5">/*
     * Number of items stored
     */</comment>
    <elseif pos:line="72" pos:column="5">else <if pos:line="72" pos:column="10">if <condition pos:line="72" pos:column="13">(<expr><call><name pos:line="72" pos:column="14">FIELD_IS<pos:position pos:line="72" pos:column="22"/></name><argument_list pos:line="72" pos:column="22">(<argument><expr><literal type="string" pos:line="72" pos:column="23">"curr_items"<pos:position pos:line="72" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="72" pos:column="37"/></condition><then pos:line="72" pos:column="37"> <block pos:line="72" pos:column="38">{
      <expr_stmt><expr><call><name pos:line="73" pos:column="7">submit_gauge<pos:position pos:line="73" pos:column="19"/></name><argument_list pos:line="73" pos:column="19">(<argument><expr><literal type="string" pos:line="73" pos:column="20">"memcached_items"<pos:position pos:line="73" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="39">"current"<pos:position pos:line="73" pos:column="48"/></literal></expr></argument>, <argument><expr><call><name pos:line="73" pos:column="50">atof<pos:position pos:line="73" pos:column="54"/></name><argument_list pos:line="73" pos:column="54">(<argument><expr><name><name pos:line="73" pos:column="55">fields<pos:position pos:line="73" pos:column="61"/></name><index pos:line="73" pos:column="61">[<expr><literal type="number" pos:line="73" pos:column="62">2<pos:position pos:line="73" pos:column="63"/></literal></expr>]<pos:position pos:line="73" pos:column="64"/></index></name></expr></argument>)<pos:position pos:line="73" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="73" pos:column="67">st<pos:position pos:line="73" pos:column="69"/></name></expr></argument>)<pos:position pos:line="73" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="71"/></expr_stmt>
    }<pos:position pos:line="74" pos:column="6"/></block></then></if></elseif>

    <comment type="block" pos:line="76" pos:column="5">/*
     * Number of bytes used and available (total - used)
     */</comment>
    <elseif pos:line="79" pos:column="5">else <if pos:line="79" pos:column="10">if <condition pos:line="79" pos:column="13">(<expr><call><name pos:line="79" pos:column="14">FIELD_IS<pos:position pos:line="79" pos:column="22"/></name><argument_list pos:line="79" pos:column="22">(<argument><expr><literal type="string" pos:line="79" pos:column="23">"bytes"<pos:position pos:line="79" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="79" pos:column="32"/></condition><then pos:line="79" pos:column="32"> <block pos:line="79" pos:column="33">{
      <expr_stmt><expr><name pos:line="80" pos:column="7">bytes_used<pos:position pos:line="80" pos:column="17"/></name> <operator pos:line="80" pos:column="18">=<pos:position pos:line="80" pos:column="19"/></operator> <call><name pos:line="80" pos:column="20">atof<pos:position pos:line="80" pos:column="24"/></name><argument_list pos:line="80" pos:column="24">(<argument><expr><name><name pos:line="80" pos:column="25">fields<pos:position pos:line="80" pos:column="31"/></name><index pos:line="80" pos:column="31">[<expr><literal type="number" pos:line="80" pos:column="32">2<pos:position pos:line="80" pos:column="33"/></literal></expr>]<pos:position pos:line="80" pos:column="34"/></index></name></expr></argument>)<pos:position pos:line="80" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="81" pos:column="6"/></block></then></if></elseif> <elseif pos:line="81" pos:column="7">else <if pos:line="81" pos:column="12">if <condition pos:line="81" pos:column="15">(<expr><call><name pos:line="81" pos:column="16">FIELD_IS<pos:position pos:line="81" pos:column="24"/></name><argument_list pos:line="81" pos:column="24">(<argument><expr><literal type="string" pos:line="81" pos:column="25">"limit_maxbytes"<pos:position pos:line="81" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="81" pos:column="43"/></condition><then pos:line="81" pos:column="43"> <block pos:line="81" pos:column="44">{
      <expr_stmt><expr><name pos:line="82" pos:column="7">bytes_total<pos:position pos:line="82" pos:column="18"/></name> <operator pos:line="82" pos:column="19">=<pos:position pos:line="82" pos:column="20"/></operator> <call><name pos:line="82" pos:column="21">atof<pos:position pos:line="82" pos:column="25"/></name><argument_list pos:line="82" pos:column="25">(<argument><expr><name><name pos:line="82" pos:column="26">fields<pos:position pos:line="82" pos:column="32"/></name><index pos:line="82" pos:column="32">[<expr><literal type="number" pos:line="82" pos:column="33">2<pos:position pos:line="82" pos:column="34"/></literal></expr>]<pos:position pos:line="82" pos:column="35"/></index></name></expr></argument>)<pos:position pos:line="82" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="83" pos:column="6"/></block></then></if></elseif>

    <comment type="block" pos:line="85" pos:column="5">/*
     * Connections
     */</comment>
    <elseif pos:line="88" pos:column="5">else <if pos:line="88" pos:column="10">if <condition pos:line="88" pos:column="13">(<expr><call><name pos:line="88" pos:column="14">FIELD_IS<pos:position pos:line="88" pos:column="22"/></name><argument_list pos:line="88" pos:column="22">(<argument><expr><literal type="string" pos:line="88" pos:column="23">"curr_connections"<pos:position pos:line="88" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="88" pos:column="43"/></condition><then pos:line="88" pos:column="43"> <block pos:line="88" pos:column="44">{
      <expr_stmt><expr><call><name pos:line="89" pos:column="7">submit_gauge<pos:position pos:line="89" pos:column="19"/></name><argument_list pos:line="89" pos:column="19">(<argument><expr><literal type="string" pos:line="89" pos:column="20">"memcached_connections"<pos:position pos:line="89" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="89" pos:column="45">"current"<pos:position pos:line="89" pos:column="54"/></literal></expr></argument>, <argument><expr><call><name pos:line="89" pos:column="56">atof<pos:position pos:line="89" pos:column="60"/></name><argument_list pos:line="89" pos:column="60">(<argument><expr><name><name pos:line="89" pos:column="61">fields<pos:position pos:line="89" pos:column="67"/></name><index pos:line="89" pos:column="67">[<expr><literal type="number" pos:line="89" pos:column="68">2<pos:position pos:line="89" pos:column="69"/></literal></expr>]<pos:position pos:line="89" pos:column="70"/></index></name></expr></argument>)<pos:position pos:line="89" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="89" pos:column="73">st<pos:position pos:line="89" pos:column="75"/></name></expr></argument>)<pos:position pos:line="89" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="77"/></expr_stmt>
    }<pos:position pos:line="90" pos:column="6"/></block></then></if></elseif> <elseif pos:line="90" pos:column="7">else <if pos:line="90" pos:column="12">if <condition pos:line="90" pos:column="15">(<expr><call><name pos:line="90" pos:column="16">FIELD_IS<pos:position pos:line="90" pos:column="24"/></name><argument_list pos:line="90" pos:column="24">(<argument><expr><literal type="string" pos:line="90" pos:column="25">"listen_disabled_num"<pos:position pos:line="90" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="90" pos:column="48"/></condition><then pos:line="90" pos:column="48"> <block pos:line="90" pos:column="49">{
      <expr_stmt><expr><call><name pos:line="91" pos:column="7">submit_derive<pos:position pos:line="91" pos:column="20"/></name><argument_list pos:line="91" pos:column="20">(<argument><expr><literal type="string" pos:line="91" pos:column="21">"connections"<pos:position pos:line="91" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="36">"listen_disabled"<pos:position pos:line="91" pos:column="53"/></literal></expr></argument>, <argument><expr><call><name pos:line="91" pos:column="55">atof<pos:position pos:line="91" pos:column="59"/></name><argument_list pos:line="91" pos:column="59">(<argument><expr><name><name pos:line="91" pos:column="60">fields<pos:position pos:line="91" pos:column="66"/></name><index pos:line="91" pos:column="66">[<expr><literal type="number" pos:line="91" pos:column="67">2<pos:position pos:line="91" pos:column="68"/></literal></expr>]<pos:position pos:line="91" pos:column="69"/></index></name></expr></argument>)<pos:position pos:line="91" pos:column="70"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="91" pos:column="72">st<pos:position pos:line="91" pos:column="74"/></name></expr></argument>)<pos:position pos:line="91" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="76"/></expr_stmt>
    }<pos:position pos:line="92" pos:column="6"/></block></then></if></elseif>

    <comment type="block" pos:line="94" pos:column="5">/*
     * Commands
     */</comment>
    <elseif pos:line="97" pos:column="5">else <if pos:line="97" pos:column="10">if <condition pos:line="97" pos:column="13">(<expr><operator pos:line="97" pos:column="14">(<pos:position pos:line="97" pos:column="15"/></operator><name pos:line="97" pos:column="15">name_len<pos:position pos:line="97" pos:column="23"/></name> <operator pos:line="97" pos:column="24">&gt;<pos:position pos:line="97" pos:column="28"/></operator> <literal type="number" pos:line="97" pos:column="26">4<pos:position pos:line="97" pos:column="27"/></literal><operator pos:line="97" pos:column="27">)<pos:position pos:line="97" pos:column="28"/></operator> <operator pos:line="97" pos:column="29">&amp;&amp;<pos:position pos:line="97" pos:column="39"/></operator> <operator pos:line="97" pos:column="32">(<pos:position pos:line="97" pos:column="33"/></operator><call><name pos:line="97" pos:column="33">strncmp<pos:position pos:line="97" pos:column="40"/></name><argument_list pos:line="97" pos:column="40">(<argument><expr><name><name pos:line="97" pos:column="41">fields<pos:position pos:line="97" pos:column="47"/></name><index pos:line="97" pos:column="47">[<expr><literal type="number" pos:line="97" pos:column="48">1<pos:position pos:line="97" pos:column="49"/></literal></expr>]<pos:position pos:line="97" pos:column="50"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="52">"cmd_"<pos:position pos:line="97" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="97" pos:column="60">4<pos:position pos:line="97" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="62"/></argument_list></call> <operator pos:line="97" pos:column="63">==<pos:position pos:line="97" pos:column="65"/></operator> <literal type="number" pos:line="97" pos:column="66">0<pos:position pos:line="97" pos:column="67"/></literal><operator pos:line="97" pos:column="67">)<pos:position pos:line="97" pos:column="68"/></operator></expr>)<pos:position pos:line="97" pos:column="69"/></condition><then pos:line="97" pos:column="69"> <block pos:line="97" pos:column="70">{
      <decl_stmt><decl><type><specifier pos:line="98" pos:column="7">const<pos:position pos:line="98" pos:column="12"/></specifier> <name pos:line="98" pos:column="13">char<pos:position pos:line="98" pos:column="17"/></name> <modifier pos:line="98" pos:column="18">*<pos:position pos:line="98" pos:column="19"/></modifier></type><name pos:line="98" pos:column="19">name<pos:position pos:line="98" pos:column="23"/></name> <init pos:line="98" pos:column="24">= <expr><name><name pos:line="98" pos:column="26">fields<pos:position pos:line="98" pos:column="32"/></name><index pos:line="98" pos:column="32">[<expr><literal type="number" pos:line="98" pos:column="33">1<pos:position pos:line="98" pos:column="34"/></literal></expr>]<pos:position pos:line="98" pos:column="35"/></index></name> <operator pos:line="98" pos:column="36">+<pos:position pos:line="98" pos:column="37"/></operator> <literal type="number" pos:line="98" pos:column="38">4<pos:position pos:line="98" pos:column="39"/></literal></expr></init></decl>;<pos:position pos:line="98" pos:column="40"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="99" pos:column="7">submit_derive<pos:position pos:line="99" pos:column="20"/></name><argument_list pos:line="99" pos:column="20">(<argument><expr><literal type="string" pos:line="99" pos:column="21">"memcached_command"<pos:position pos:line="99" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="99" pos:column="42">name<pos:position pos:line="99" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="99" pos:column="48">atoll<pos:position pos:line="99" pos:column="53"/></name><argument_list pos:line="99" pos:column="53">(<argument><expr><name><name pos:line="99" pos:column="54">fields<pos:position pos:line="99" pos:column="60"/></name><index pos:line="99" pos:column="60">[<expr><literal type="number" pos:line="99" pos:column="61">2<pos:position pos:line="99" pos:column="62"/></literal></expr>]<pos:position pos:line="99" pos:column="63"/></index></name></expr></argument>)<pos:position pos:line="99" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="99" pos:column="66">st<pos:position pos:line="99" pos:column="68"/></name></expr></argument>)<pos:position pos:line="99" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="70"/></expr_stmt>
      <if pos:line="100" pos:column="7">if <condition pos:line="100" pos:column="10">(<expr><call><name pos:line="100" pos:column="11">strcmp<pos:position pos:line="100" pos:column="17"/></name><argument_list pos:line="100" pos:column="17">(<argument><expr><name pos:line="100" pos:column="18">name<pos:position pos:line="100" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="100" pos:column="24">"get"<pos:position pos:line="100" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="30"/></argument_list></call> <operator pos:line="100" pos:column="31">==<pos:position pos:line="100" pos:column="33"/></operator> <literal type="number" pos:line="100" pos:column="34">0<pos:position pos:line="100" pos:column="35"/></literal></expr>)<pos:position pos:line="100" pos:column="36"/></condition><then pos:line="100" pos:column="36">
        <block type="pseudo"><expr_stmt><expr><name pos:line="101" pos:column="9">gets<pos:position pos:line="101" pos:column="13"/></name> <operator pos:line="101" pos:column="14">=<pos:position pos:line="101" pos:column="15"/></operator> <call><name pos:line="101" pos:column="16">atof<pos:position pos:line="101" pos:column="20"/></name><argument_list pos:line="101" pos:column="20">(<argument><expr><name><name pos:line="101" pos:column="21">fields<pos:position pos:line="101" pos:column="27"/></name><index pos:line="101" pos:column="27">[<expr><literal type="number" pos:line="101" pos:column="28">2<pos:position pos:line="101" pos:column="29"/></literal></expr>]<pos:position pos:line="101" pos:column="30"/></index></name></expr></argument>)<pos:position pos:line="101" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="32"/></expr_stmt></block></then></if>
    }<pos:position pos:line="102" pos:column="6"/></block></then></if></elseif>

    <comment type="block" pos:line="104" pos:column="5">/*
     * Increment/Decrement
     */</comment>
    <elseif pos:line="107" pos:column="5">else <if pos:line="107" pos:column="10">if <condition pos:line="107" pos:column="13">(<expr><call><name pos:line="107" pos:column="14">FIELD_IS<pos:position pos:line="107" pos:column="22"/></name><argument_list pos:line="107" pos:column="22">(<argument><expr><literal type="string" pos:line="107" pos:column="23">"incr_misses"<pos:position pos:line="107" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="107" pos:column="38"/></condition><then pos:line="107" pos:column="38"> <block pos:line="107" pos:column="39">{
      <decl_stmt><decl><type><name pos:line="108" pos:column="7">derive_t<pos:position pos:line="108" pos:column="15"/></name></type> <name pos:line="108" pos:column="16">incr_count<pos:position pos:line="108" pos:column="26"/></name> <init pos:line="108" pos:column="27">= <expr><call><name pos:line="108" pos:column="29">atoll<pos:position pos:line="108" pos:column="34"/></name><argument_list pos:line="108" pos:column="34">(<argument><expr><name><name pos:line="108" pos:column="35">fields<pos:position pos:line="108" pos:column="41"/></name><index pos:line="108" pos:column="41">[<expr><literal type="number" pos:line="108" pos:column="42">2<pos:position pos:line="108" pos:column="43"/></literal></expr>]<pos:position pos:line="108" pos:column="44"/></index></name></expr></argument>)<pos:position pos:line="108" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="108" pos:column="46"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="109" pos:column="7">submit_derive<pos:position pos:line="109" pos:column="20"/></name><argument_list pos:line="109" pos:column="20">(<argument><expr><literal type="string" pos:line="109" pos:column="21">"memcached_ops"<pos:position pos:line="109" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="109" pos:column="38">"incr_misses"<pos:position pos:line="109" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="109" pos:column="53">incr_count<pos:position pos:line="109" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="65">st<pos:position pos:line="109" pos:column="67"/></name></expr></argument>)<pos:position pos:line="109" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="69"/></expr_stmt>
      <expr_stmt><expr><name pos:line="110" pos:column="7">incr<pos:position pos:line="110" pos:column="11"/></name> <operator pos:line="110" pos:column="12">+=<pos:position pos:line="110" pos:column="14"/></operator> <name pos:line="110" pos:column="15">incr_count<pos:position pos:line="110" pos:column="25"/></name></expr>;<pos:position pos:line="110" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="111" pos:column="6"/></block></then></if></elseif> <elseif pos:line="111" pos:column="7">else <if pos:line="111" pos:column="12">if <condition pos:line="111" pos:column="15">(<expr><call><name pos:line="111" pos:column="16">FIELD_IS<pos:position pos:line="111" pos:column="24"/></name><argument_list pos:line="111" pos:column="24">(<argument><expr><literal type="string" pos:line="111" pos:column="25">"incr_hits"<pos:position pos:line="111" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="111" pos:column="38"/></condition><then pos:line="111" pos:column="38"> <block pos:line="111" pos:column="39">{
      <decl_stmt><decl><type><name pos:line="112" pos:column="7">derive_t<pos:position pos:line="112" pos:column="15"/></name></type> <name pos:line="112" pos:column="16">incr_count<pos:position pos:line="112" pos:column="26"/></name> <init pos:line="112" pos:column="27">= <expr><call><name pos:line="112" pos:column="29">atoll<pos:position pos:line="112" pos:column="34"/></name><argument_list pos:line="112" pos:column="34">(<argument><expr><name><name pos:line="112" pos:column="35">fields<pos:position pos:line="112" pos:column="41"/></name><index pos:line="112" pos:column="41">[<expr><literal type="number" pos:line="112" pos:column="42">2<pos:position pos:line="112" pos:column="43"/></literal></expr>]<pos:position pos:line="112" pos:column="44"/></index></name></expr></argument>)<pos:position pos:line="112" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="112" pos:column="46"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="113" pos:column="7">submit_derive<pos:position pos:line="113" pos:column="20"/></name><argument_list pos:line="113" pos:column="20">(<argument><expr><literal type="string" pos:line="113" pos:column="21">"memcached_ops"<pos:position pos:line="113" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="113" pos:column="38">"incr_hits"<pos:position pos:line="113" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="113" pos:column="51">incr_count<pos:position pos:line="113" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="63">st<pos:position pos:line="113" pos:column="65"/></name></expr></argument>)<pos:position pos:line="113" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="67"/></expr_stmt>
      <expr_stmt><expr><name pos:line="114" pos:column="7">incr_hits<pos:position pos:line="114" pos:column="16"/></name> <operator pos:line="114" pos:column="17">=<pos:position pos:line="114" pos:column="18"/></operator> <call><name pos:line="114" pos:column="19">atof<pos:position pos:line="114" pos:column="23"/></name><argument_list pos:line="114" pos:column="23">(<argument><expr><name><name pos:line="114" pos:column="24">fields<pos:position pos:line="114" pos:column="30"/></name><index pos:line="114" pos:column="30">[<expr><literal type="number" pos:line="114" pos:column="31">2<pos:position pos:line="114" pos:column="32"/></literal></expr>]<pos:position pos:line="114" pos:column="33"/></index></name></expr></argument>)<pos:position pos:line="114" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><name pos:line="115" pos:column="7">incr<pos:position pos:line="115" pos:column="11"/></name> <operator pos:line="115" pos:column="12">+=<pos:position pos:line="115" pos:column="14"/></operator> <name pos:line="115" pos:column="15">incr_count<pos:position pos:line="115" pos:column="25"/></name></expr>;<pos:position pos:line="115" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="116" pos:column="6"/></block></then></if></elseif> <elseif pos:line="116" pos:column="7">else <if pos:line="116" pos:column="12">if <condition pos:line="116" pos:column="15">(<expr><call><name pos:line="116" pos:column="16">FIELD_IS<pos:position pos:line="116" pos:column="24"/></name><argument_list pos:line="116" pos:column="24">(<argument><expr><literal type="string" pos:line="116" pos:column="25">"decr_misses"<pos:position pos:line="116" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="116" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="116" pos:column="40"/></condition><then pos:line="116" pos:column="40"> <block pos:line="116" pos:column="41">{
      <decl_stmt><decl><type><name pos:line="117" pos:column="7">derive_t<pos:position pos:line="117" pos:column="15"/></name></type> <name pos:line="117" pos:column="16">decr_count<pos:position pos:line="117" pos:column="26"/></name> <init pos:line="117" pos:column="27">= <expr><call><name pos:line="117" pos:column="29">atoll<pos:position pos:line="117" pos:column="34"/></name><argument_list pos:line="117" pos:column="34">(<argument><expr><name><name pos:line="117" pos:column="35">fields<pos:position pos:line="117" pos:column="41"/></name><index pos:line="117" pos:column="41">[<expr><literal type="number" pos:line="117" pos:column="42">2<pos:position pos:line="117" pos:column="43"/></literal></expr>]<pos:position pos:line="117" pos:column="44"/></index></name></expr></argument>)<pos:position pos:line="117" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="117" pos:column="46"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="118" pos:column="7">submit_derive<pos:position pos:line="118" pos:column="20"/></name><argument_list pos:line="118" pos:column="20">(<argument><expr><literal type="string" pos:line="118" pos:column="21">"memcached_ops"<pos:position pos:line="118" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="118" pos:column="38">"decr_misses"<pos:position pos:line="118" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="118" pos:column="53">decr_count<pos:position pos:line="118" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="65">st<pos:position pos:line="118" pos:column="67"/></name></expr></argument>)<pos:position pos:line="118" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="69"/></expr_stmt>
      <expr_stmt><expr><name pos:line="119" pos:column="7">decr<pos:position pos:line="119" pos:column="11"/></name> <operator pos:line="119" pos:column="12">+=<pos:position pos:line="119" pos:column="14"/></operator> <name pos:line="119" pos:column="15">decr_count<pos:position pos:line="119" pos:column="25"/></name></expr>;<pos:position pos:line="119" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="120" pos:column="6"/></block></then></if></elseif> <elseif pos:line="120" pos:column="7">else <if pos:line="120" pos:column="12">if <condition pos:line="120" pos:column="15">(<expr><call><name pos:line="120" pos:column="16">FIELD_IS<pos:position pos:line="120" pos:column="24"/></name><argument_list pos:line="120" pos:column="24">(<argument><expr><literal type="string" pos:line="120" pos:column="25">"decr_hits"<pos:position pos:line="120" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="120" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="120" pos:column="38"/></condition><then pos:line="120" pos:column="38"> <block pos:line="120" pos:column="39">{
      <decl_stmt><decl><type><name pos:line="121" pos:column="7">derive_t<pos:position pos:line="121" pos:column="15"/></name></type> <name pos:line="121" pos:column="16">decr_count<pos:position pos:line="121" pos:column="26"/></name> <init pos:line="121" pos:column="27">= <expr><call><name pos:line="121" pos:column="29">atoll<pos:position pos:line="121" pos:column="34"/></name><argument_list pos:line="121" pos:column="34">(<argument><expr><name><name pos:line="121" pos:column="35">fields<pos:position pos:line="121" pos:column="41"/></name><index pos:line="121" pos:column="41">[<expr><literal type="number" pos:line="121" pos:column="42">2<pos:position pos:line="121" pos:column="43"/></literal></expr>]<pos:position pos:line="121" pos:column="44"/></index></name></expr></argument>)<pos:position pos:line="121" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="121" pos:column="46"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="122" pos:column="7">submit_derive<pos:position pos:line="122" pos:column="20"/></name><argument_list pos:line="122" pos:column="20">(<argument><expr><literal type="string" pos:line="122" pos:column="21">"memcached_ops"<pos:position pos:line="122" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="122" pos:column="38">"decr_hits"<pos:position pos:line="122" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="122" pos:column="51">decr_count<pos:position pos:line="122" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="122" pos:column="63">st<pos:position pos:line="122" pos:column="65"/></name></expr></argument>)<pos:position pos:line="122" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="67"/></expr_stmt>
      <expr_stmt><expr><name pos:line="123" pos:column="7">decr_hits<pos:position pos:line="123" pos:column="16"/></name> <operator pos:line="123" pos:column="17">=<pos:position pos:line="123" pos:column="18"/></operator> <call><name pos:line="123" pos:column="19">atof<pos:position pos:line="123" pos:column="23"/></name><argument_list pos:line="123" pos:column="23">(<argument><expr><name><name pos:line="123" pos:column="24">fields<pos:position pos:line="123" pos:column="30"/></name><index pos:line="123" pos:column="30">[<expr><literal type="number" pos:line="123" pos:column="31">2<pos:position pos:line="123" pos:column="32"/></literal></expr>]<pos:position pos:line="123" pos:column="33"/></index></name></expr></argument>)<pos:position pos:line="123" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><name pos:line="124" pos:column="7">decr<pos:position pos:line="124" pos:column="11"/></name> <operator pos:line="124" pos:column="12">+=<pos:position pos:line="124" pos:column="14"/></operator> <name pos:line="124" pos:column="15">decr_count<pos:position pos:line="124" pos:column="25"/></name></expr>;<pos:position pos:line="124" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="125" pos:column="6"/></block></then></if></elseif>

    <comment type="block" pos:line="127" pos:column="5">/*
     * Operations on the cache, i. e. cache hits, cache misses and evictions of
     * items
     */</comment>
    <elseif pos:line="131" pos:column="5">else <if pos:line="131" pos:column="10">if <condition pos:line="131" pos:column="13">(<expr><call><name pos:line="131" pos:column="14">FIELD_IS<pos:position pos:line="131" pos:column="22"/></name><argument_list pos:line="131" pos:column="22">(<argument><expr><literal type="string" pos:line="131" pos:column="23">"get_hits"<pos:position pos:line="131" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="131" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="131" pos:column="35"/></condition><then pos:line="131" pos:column="35"> <block pos:line="131" pos:column="36">{
      <expr_stmt><expr><call><name pos:line="132" pos:column="7">submit_derive<pos:position pos:line="132" pos:column="20"/></name><argument_list pos:line="132" pos:column="20">(<argument><expr><literal type="string" pos:line="132" pos:column="21">"memcached_ops"<pos:position pos:line="132" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="132" pos:column="38">"hits"<pos:position pos:line="132" pos:column="44"/></literal></expr></argument>, <argument><expr><call><name pos:line="132" pos:column="46">atoll<pos:position pos:line="132" pos:column="51"/></name><argument_list pos:line="132" pos:column="51">(<argument><expr><name><name pos:line="132" pos:column="52">fields<pos:position pos:line="132" pos:column="58"/></name><index pos:line="132" pos:column="58">[<expr><literal type="number" pos:line="132" pos:column="59">2<pos:position pos:line="132" pos:column="60"/></literal></expr>]<pos:position pos:line="132" pos:column="61"/></index></name></expr></argument>)<pos:position pos:line="132" pos:column="62"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="132" pos:column="64">st<pos:position pos:line="132" pos:column="66"/></name></expr></argument>)<pos:position pos:line="132" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="68"/></expr_stmt>
      <expr_stmt><expr><name pos:line="133" pos:column="7">hits<pos:position pos:line="133" pos:column="11"/></name> <operator pos:line="133" pos:column="12">=<pos:position pos:line="133" pos:column="13"/></operator> <call><name pos:line="133" pos:column="14">atof<pos:position pos:line="133" pos:column="18"/></name><argument_list pos:line="133" pos:column="18">(<argument><expr><name><name pos:line="133" pos:column="19">fields<pos:position pos:line="133" pos:column="25"/></name><index pos:line="133" pos:column="25">[<expr><literal type="number" pos:line="133" pos:column="26">2<pos:position pos:line="133" pos:column="27"/></literal></expr>]<pos:position pos:line="133" pos:column="28"/></index></name></expr></argument>)<pos:position pos:line="133" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="134" pos:column="6"/></block></then></if></elseif> <elseif pos:line="134" pos:column="7">else <if pos:line="134" pos:column="12">if <condition pos:line="134" pos:column="15">(<expr><call><name pos:line="134" pos:column="16">FIELD_IS<pos:position pos:line="134" pos:column="24"/></name><argument_list pos:line="134" pos:column="24">(<argument><expr><literal type="string" pos:line="134" pos:column="25">"get_misses"<pos:position pos:line="134" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="134" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="134" pos:column="39"/></condition><then pos:line="134" pos:column="39"> <block pos:line="134" pos:column="40">{
      <expr_stmt><expr><call><name pos:line="135" pos:column="7">submit_derive<pos:position pos:line="135" pos:column="20"/></name><argument_list pos:line="135" pos:column="20">(<argument><expr><literal type="string" pos:line="135" pos:column="21">"memcached_ops"<pos:position pos:line="135" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="135" pos:column="38">"misses"<pos:position pos:line="135" pos:column="46"/></literal></expr></argument>, <argument><expr><call><name pos:line="135" pos:column="48">atoll<pos:position pos:line="135" pos:column="53"/></name><argument_list pos:line="135" pos:column="53">(<argument><expr><name><name pos:line="135" pos:column="54">fields<pos:position pos:line="135" pos:column="60"/></name><index pos:line="135" pos:column="60">[<expr><literal type="number" pos:line="135" pos:column="61">2<pos:position pos:line="135" pos:column="62"/></literal></expr>]<pos:position pos:line="135" pos:column="63"/></index></name></expr></argument>)<pos:position pos:line="135" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="135" pos:column="66">st<pos:position pos:line="135" pos:column="68"/></name></expr></argument>)<pos:position pos:line="135" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="70"/></expr_stmt>
    }<pos:position pos:line="136" pos:column="6"/></block></then></if></elseif> <elseif pos:line="136" pos:column="7">else <if pos:line="136" pos:column="12">if <condition pos:line="136" pos:column="15">(<expr><call><name pos:line="136" pos:column="16">FIELD_IS<pos:position pos:line="136" pos:column="24"/></name><argument_list pos:line="136" pos:column="24">(<argument><expr><literal type="string" pos:line="136" pos:column="25">"evictions"<pos:position pos:line="136" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="136" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="136" pos:column="38"/></condition><then pos:line="136" pos:column="38"> <block pos:line="136" pos:column="39">{
      <expr_stmt><expr><call><name pos:line="137" pos:column="7">submit_derive<pos:position pos:line="137" pos:column="20"/></name><argument_list pos:line="137" pos:column="20">(<argument><expr><literal type="string" pos:line="137" pos:column="21">"memcached_ops"<pos:position pos:line="137" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="137" pos:column="38">"evictions"<pos:position pos:line="137" pos:column="49"/></literal></expr></argument>, <argument><expr><call><name pos:line="137" pos:column="51">atoll<pos:position pos:line="137" pos:column="56"/></name><argument_list pos:line="137" pos:column="56">(<argument><expr><name><name pos:line="137" pos:column="57">fields<pos:position pos:line="137" pos:column="63"/></name><index pos:line="137" pos:column="63">[<expr><literal type="number" pos:line="137" pos:column="64">2<pos:position pos:line="137" pos:column="65"/></literal></expr>]<pos:position pos:line="137" pos:column="66"/></index></name></expr></argument>)<pos:position pos:line="137" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="137" pos:column="69">st<pos:position pos:line="137" pos:column="71"/></name></expr></argument>)<pos:position pos:line="137" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="73"/></expr_stmt>
    }<pos:position pos:line="138" pos:column="6"/></block></then></if></elseif>

    <comment type="block" pos:line="140" pos:column="5">/*
     * Network traffic
     */</comment>
    <elseif pos:line="143" pos:column="5">else <if pos:line="143" pos:column="10">if <condition pos:line="143" pos:column="13">(<expr><call><name pos:line="143" pos:column="14">FIELD_IS<pos:position pos:line="143" pos:column="22"/></name><argument_list pos:line="143" pos:column="22">(<argument><expr><literal type="string" pos:line="143" pos:column="23">"bytes_read"<pos:position pos:line="143" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="143" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="143" pos:column="37"/></condition><then pos:line="143" pos:column="37"> <block pos:line="143" pos:column="38">{
      <expr_stmt><expr><name pos:line="144" pos:column="7">octets_rx<pos:position pos:line="144" pos:column="16"/></name> <operator pos:line="144" pos:column="17">=<pos:position pos:line="144" pos:column="18"/></operator> <call><name pos:line="144" pos:column="19">atoll<pos:position pos:line="144" pos:column="24"/></name><argument_list pos:line="144" pos:column="24">(<argument><expr><name><name pos:line="144" pos:column="25">fields<pos:position pos:line="144" pos:column="31"/></name><index pos:line="144" pos:column="31">[<expr><literal type="number" pos:line="144" pos:column="32">2<pos:position pos:line="144" pos:column="33"/></literal></expr>]<pos:position pos:line="144" pos:column="34"/></index></name></expr></argument>)<pos:position pos:line="144" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="145" pos:column="6"/></block></then></if></elseif> <elseif pos:line="145" pos:column="7">else <if pos:line="145" pos:column="12">if <condition pos:line="145" pos:column="15">(<expr><call><name pos:line="145" pos:column="16">FIELD_IS<pos:position pos:line="145" pos:column="24"/></name><argument_list pos:line="145" pos:column="24">(<argument><expr><literal type="string" pos:line="145" pos:column="25">"bytes_written"<pos:position pos:line="145" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="145" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="145" pos:column="42"/></condition><then pos:line="145" pos:column="42"> <block pos:line="145" pos:column="43">{
      <expr_stmt><expr><name pos:line="146" pos:column="7">octets_tx<pos:position pos:line="146" pos:column="16"/></name> <operator pos:line="146" pos:column="17">=<pos:position pos:line="146" pos:column="18"/></operator> <call><name pos:line="146" pos:column="19">atoll<pos:position pos:line="146" pos:column="24"/></name><argument_list pos:line="146" pos:column="24">(<argument><expr><name><name pos:line="146" pos:column="25">fields<pos:position pos:line="146" pos:column="31"/></name><index pos:line="146" pos:column="31">[<expr><literal type="number" pos:line="146" pos:column="32">2<pos:position pos:line="146" pos:column="33"/></literal></expr>]<pos:position pos:line="146" pos:column="34"/></index></name></expr></argument>)<pos:position pos:line="146" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="147" pos:column="6"/></block></then></if></elseif></if>
  }<pos:position pos:line="148" pos:column="4"/></block></while> <comment type="block" pos:line="148" pos:column="5">/* while ((line = strtok_r (ptr, "\n\r", &amp;saveptr)) != NULL) */</comment>

  <if pos:line="150" pos:column="3">if <condition pos:line="150" pos:column="6">(<expr><operator pos:line="150" pos:column="7">!<pos:position pos:line="150" pos:column="8"/></operator><call><name pos:line="150" pos:column="8">isnan<pos:position pos:line="150" pos:column="13"/></name><argument_list pos:line="150" pos:column="13">(<argument><expr><name pos:line="150" pos:column="14">bytes_used<pos:position pos:line="150" pos:column="24"/></name></expr></argument>)<pos:position pos:line="150" pos:column="25"/></argument_list></call> <operator pos:line="150" pos:column="26">&amp;&amp;<pos:position pos:line="150" pos:column="36"/></operator> <operator pos:line="150" pos:column="29">!<pos:position pos:line="150" pos:column="30"/></operator><call><name pos:line="150" pos:column="30">isnan<pos:position pos:line="150" pos:column="35"/></name><argument_list pos:line="150" pos:column="35">(<argument><expr><name pos:line="150" pos:column="36">bytes_total<pos:position pos:line="150" pos:column="47"/></name></expr></argument>)<pos:position pos:line="150" pos:column="48"/></argument_list></call> <operator pos:line="150" pos:column="49">&amp;&amp;<pos:position pos:line="150" pos:column="59"/></operator> <operator pos:line="150" pos:column="52">(<pos:position pos:line="150" pos:column="53"/></operator><name pos:line="150" pos:column="53">bytes_used<pos:position pos:line="150" pos:column="63"/></name> <operator pos:line="150" pos:column="64">&lt;=<pos:position pos:line="150" pos:column="69"/></operator> <name pos:line="150" pos:column="67">bytes_total<pos:position pos:line="150" pos:column="78"/></name><operator pos:line="150" pos:column="78">)<pos:position pos:line="150" pos:column="79"/></operator></expr>)<pos:position pos:line="150" pos:column="80"/></condition><then pos:line="150" pos:column="80">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="151" pos:column="5">submit_gauge2<pos:position pos:line="151" pos:column="18"/></name><argument_list pos:line="151" pos:column="18">(<argument><expr><literal type="string" pos:line="151" pos:column="19">"df"<pos:position pos:line="151" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="151" pos:column="25">"cache"<pos:position pos:line="151" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="151" pos:column="34">bytes_used<pos:position pos:line="151" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="151" pos:column="46">bytes_total<pos:position pos:line="151" pos:column="57"/></name> <operator pos:line="151" pos:column="58">-<pos:position pos:line="151" pos:column="59"/></operator> <name pos:line="151" pos:column="60">bytes_used<pos:position pos:line="151" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="151" pos:column="72">st<pos:position pos:line="151" pos:column="74"/></name></expr></argument>)<pos:position pos:line="151" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="76"/></expr_stmt></block></then></if>

  <if pos:line="153" pos:column="3">if <condition pos:line="153" pos:column="6">(<expr><operator pos:line="153" pos:column="7">(<pos:position pos:line="153" pos:column="8"/></operator><name pos:line="153" pos:column="8">rusage_user<pos:position pos:line="153" pos:column="19"/></name> <operator pos:line="153" pos:column="20">!=<pos:position pos:line="153" pos:column="22"/></operator> <literal type="number" pos:line="153" pos:column="23">0<pos:position pos:line="153" pos:column="24"/></literal><operator pos:line="153" pos:column="24">)<pos:position pos:line="153" pos:column="25"/></operator> <operator pos:line="153" pos:column="26">||<pos:position pos:line="153" pos:column="28"/></operator> <operator pos:line="153" pos:column="29">(<pos:position pos:line="153" pos:column="30"/></operator><name pos:line="153" pos:column="30">rusage_syst<pos:position pos:line="153" pos:column="41"/></name> <operator pos:line="153" pos:column="42">!=<pos:position pos:line="153" pos:column="44"/></operator> <literal type="number" pos:line="153" pos:column="45">0<pos:position pos:line="153" pos:column="46"/></literal><operator pos:line="153" pos:column="46">)<pos:position pos:line="153" pos:column="47"/></operator></expr>)<pos:position pos:line="153" pos:column="48"/></condition><then pos:line="153" pos:column="48">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="154" pos:column="5">submit_derive2<pos:position pos:line="154" pos:column="19"/></name><argument_list pos:line="154" pos:column="19">(<argument><expr><literal type="string" pos:line="154" pos:column="20">"ps_cputime"<pos:position pos:line="154" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="154" pos:column="34">NULL<pos:position pos:line="154" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="154" pos:column="40">rusage_user<pos:position pos:line="154" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="154" pos:column="53">rusage_syst<pos:position pos:line="154" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="154" pos:column="66">st<pos:position pos:line="154" pos:column="68"/></name></expr></argument>)<pos:position pos:line="154" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="70"/></expr_stmt></block></then></if>

  <if pos:line="156" pos:column="3">if <condition pos:line="156" pos:column="6">(<expr><operator pos:line="156" pos:column="7">(<pos:position pos:line="156" pos:column="8"/></operator><name pos:line="156" pos:column="8">octets_rx<pos:position pos:line="156" pos:column="17"/></name> <operator pos:line="156" pos:column="18">!=<pos:position pos:line="156" pos:column="20"/></operator> <literal type="number" pos:line="156" pos:column="21">0<pos:position pos:line="156" pos:column="22"/></literal><operator pos:line="156" pos:column="22">)<pos:position pos:line="156" pos:column="23"/></operator> <operator pos:line="156" pos:column="24">||<pos:position pos:line="156" pos:column="26"/></operator> <operator pos:line="156" pos:column="27">(<pos:position pos:line="156" pos:column="28"/></operator><name pos:line="156" pos:column="28">octets_tx<pos:position pos:line="156" pos:column="37"/></name> <operator pos:line="156" pos:column="38">!=<pos:position pos:line="156" pos:column="40"/></operator> <literal type="number" pos:line="156" pos:column="41">0<pos:position pos:line="156" pos:column="42"/></literal><operator pos:line="156" pos:column="42">)<pos:position pos:line="156" pos:column="43"/></operator></expr>)<pos:position pos:line="156" pos:column="44"/></condition><then pos:line="156" pos:column="44">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="157" pos:column="5">submit_derive2<pos:position pos:line="157" pos:column="19"/></name><argument_list pos:line="157" pos:column="19">(<argument><expr><literal type="string" pos:line="157" pos:column="20">"memcached_octets"<pos:position pos:line="157" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="157" pos:column="40">NULL<pos:position pos:line="157" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="46">octets_rx<pos:position pos:line="157" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="57">octets_tx<pos:position pos:line="157" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="68">st<pos:position pos:line="157" pos:column="70"/></name></expr></argument>)<pos:position pos:line="157" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="72"/></expr_stmt></block></then></if>

  <if pos:line="159" pos:column="3">if <condition pos:line="159" pos:column="6">(<expr><operator pos:line="159" pos:column="7">!<pos:position pos:line="159" pos:column="8"/></operator><call><name pos:line="159" pos:column="8">isnan<pos:position pos:line="159" pos:column="13"/></name><argument_list pos:line="159" pos:column="13">(<argument><expr><name pos:line="159" pos:column="14">gets<pos:position pos:line="159" pos:column="18"/></name></expr></argument>)<pos:position pos:line="159" pos:column="19"/></argument_list></call> <operator pos:line="159" pos:column="20">&amp;&amp;<pos:position pos:line="159" pos:column="30"/></operator> <operator pos:line="159" pos:column="23">!<pos:position pos:line="159" pos:column="24"/></operator><call><name pos:line="159" pos:column="24">isnan<pos:position pos:line="159" pos:column="29"/></name><argument_list pos:line="159" pos:column="29">(<argument><expr><name pos:line="159" pos:column="30">hits<pos:position pos:line="159" pos:column="34"/></name></expr></argument>)<pos:position pos:line="159" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="159" pos:column="36"/></condition><then pos:line="159" pos:column="36"> <block pos:line="159" pos:column="37">{
    <decl_stmt><decl><type><name pos:line="160" pos:column="5">gauge_t<pos:position pos:line="160" pos:column="12"/></name></type> <name pos:line="160" pos:column="13">rate<pos:position pos:line="160" pos:column="17"/></name> <init pos:line="160" pos:column="18">= <expr><name pos:line="160" pos:column="20">NAN<pos:position pos:line="160" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="160" pos:column="24"/></decl_stmt>

    <if pos:line="162" pos:column="5">if <condition pos:line="162" pos:column="8">(<expr><name pos:line="162" pos:column="9">gets<pos:position pos:line="162" pos:column="13"/></name> <operator pos:line="162" pos:column="14">!=<pos:position pos:line="162" pos:column="16"/></operator> <literal type="number" pos:line="162" pos:column="17">0.0<pos:position pos:line="162" pos:column="20"/></literal></expr>)<pos:position pos:line="162" pos:column="21"/></condition><then pos:line="162" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><name pos:line="163" pos:column="7">rate<pos:position pos:line="163" pos:column="11"/></name> <operator pos:line="163" pos:column="12">=<pos:position pos:line="163" pos:column="13"/></operator> <literal type="number" pos:line="163" pos:column="14">100.0<pos:position pos:line="163" pos:column="19"/></literal> <operator pos:line="163" pos:column="20">*<pos:position pos:line="163" pos:column="21"/></operator> <name pos:line="163" pos:column="22">hits<pos:position pos:line="163" pos:column="26"/></name> <operator pos:line="163" pos:column="27">/<pos:position pos:line="163" pos:column="28"/></operator> <name pos:line="163" pos:column="29">gets<pos:position pos:line="163" pos:column="33"/></name></expr>;<pos:position pos:line="163" pos:column="34"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="165" pos:column="5">submit_gauge<pos:position pos:line="165" pos:column="17"/></name><argument_list pos:line="165" pos:column="17">(<argument><expr><literal type="string" pos:line="165" pos:column="18">"percent"<pos:position pos:line="165" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="165" pos:column="29">"hitratio"<pos:position pos:line="165" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="165" pos:column="41">rate<pos:position pos:line="165" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="165" pos:column="47">st<pos:position pos:line="165" pos:column="49"/></name></expr></argument>)<pos:position pos:line="165" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="51"/></expr_stmt>
  }<pos:position pos:line="166" pos:column="4"/></block></then></if>

  <if pos:line="168" pos:column="3">if <condition pos:line="168" pos:column="6">(<expr><operator pos:line="168" pos:column="7">!<pos:position pos:line="168" pos:column="8"/></operator><call><name pos:line="168" pos:column="8">isnan<pos:position pos:line="168" pos:column="13"/></name><argument_list pos:line="168" pos:column="13">(<argument><expr><name pos:line="168" pos:column="14">incr_hits<pos:position pos:line="168" pos:column="23"/></name></expr></argument>)<pos:position pos:line="168" pos:column="24"/></argument_list></call> <operator pos:line="168" pos:column="25">&amp;&amp;<pos:position pos:line="168" pos:column="35"/></operator> <name pos:line="168" pos:column="28">incr<pos:position pos:line="168" pos:column="32"/></name> <operator pos:line="168" pos:column="33">!=<pos:position pos:line="168" pos:column="35"/></operator> <literal type="number" pos:line="168" pos:column="36">0<pos:position pos:line="168" pos:column="37"/></literal></expr>)<pos:position pos:line="168" pos:column="38"/></condition><then pos:line="168" pos:column="38"> <block pos:line="168" pos:column="39">{
    <decl_stmt><decl><type><name pos:line="169" pos:column="5">gauge_t<pos:position pos:line="169" pos:column="12"/></name></type> <name pos:line="169" pos:column="13">incr_rate<pos:position pos:line="169" pos:column="22"/></name> <init pos:line="169" pos:column="23">= <expr><literal type="number" pos:line="169" pos:column="25">100.0<pos:position pos:line="169" pos:column="30"/></literal> <operator pos:line="169" pos:column="31">*<pos:position pos:line="169" pos:column="32"/></operator> <name pos:line="169" pos:column="33">incr_hits<pos:position pos:line="169" pos:column="42"/></name> <operator pos:line="169" pos:column="43">/<pos:position pos:line="169" pos:column="44"/></operator> <name pos:line="169" pos:column="45">incr<pos:position pos:line="169" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="169" pos:column="50"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="170" pos:column="5">submit_gauge<pos:position pos:line="170" pos:column="17"/></name><argument_list pos:line="170" pos:column="17">(<argument><expr><literal type="string" pos:line="170" pos:column="18">"percent"<pos:position pos:line="170" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="170" pos:column="29">"incr_hitratio"<pos:position pos:line="170" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="170" pos:column="46">incr_rate<pos:position pos:line="170" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="170" pos:column="57">st<pos:position pos:line="170" pos:column="59"/></name></expr></argument>)<pos:position pos:line="170" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="171" pos:column="5">submit_derive<pos:position pos:line="171" pos:column="18"/></name><argument_list pos:line="171" pos:column="18">(<argument><expr><literal type="string" pos:line="171" pos:column="19">"memcached_ops"<pos:position pos:line="171" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="171" pos:column="36">"incr"<pos:position pos:line="171" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="171" pos:column="44">incr<pos:position pos:line="171" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="171" pos:column="50">st<pos:position pos:line="171" pos:column="52"/></name></expr></argument>)<pos:position pos:line="171" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="54"/></expr_stmt>
  }<pos:position pos:line="172" pos:column="4"/></block></then></if>

  <if pos:line="174" pos:column="3">if <condition pos:line="174" pos:column="6">(<expr><operator pos:line="174" pos:column="7">!<pos:position pos:line="174" pos:column="8"/></operator><call><name pos:line="174" pos:column="8">isnan<pos:position pos:line="174" pos:column="13"/></name><argument_list pos:line="174" pos:column="13">(<argument><expr><name pos:line="174" pos:column="14">decr_hits<pos:position pos:line="174" pos:column="23"/></name></expr></argument>)<pos:position pos:line="174" pos:column="24"/></argument_list></call> <operator pos:line="174" pos:column="25">&amp;&amp;<pos:position pos:line="174" pos:column="35"/></operator> <name pos:line="174" pos:column="28">decr<pos:position pos:line="174" pos:column="32"/></name> <operator pos:line="174" pos:column="33">!=<pos:position pos:line="174" pos:column="35"/></operator> <literal type="number" pos:line="174" pos:column="36">0<pos:position pos:line="174" pos:column="37"/></literal></expr>)<pos:position pos:line="174" pos:column="38"/></condition><then pos:line="174" pos:column="38"> <block pos:line="174" pos:column="39">{
    <decl_stmt><decl><type><name pos:line="175" pos:column="5">gauge_t<pos:position pos:line="175" pos:column="12"/></name></type> <name pos:line="175" pos:column="13">decr_rate<pos:position pos:line="175" pos:column="22"/></name> <init pos:line="175" pos:column="23">= <expr><literal type="number" pos:line="175" pos:column="25">100.0<pos:position pos:line="175" pos:column="30"/></literal> <operator pos:line="175" pos:column="31">*<pos:position pos:line="175" pos:column="32"/></operator> <name pos:line="175" pos:column="33">decr_hits<pos:position pos:line="175" pos:column="42"/></name> <operator pos:line="175" pos:column="43">/<pos:position pos:line="175" pos:column="44"/></operator> <name pos:line="175" pos:column="45">decr<pos:position pos:line="175" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="175" pos:column="50"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="176" pos:column="5">submit_gauge<pos:position pos:line="176" pos:column="17"/></name><argument_list pos:line="176" pos:column="17">(<argument><expr><literal type="string" pos:line="176" pos:column="18">"percent"<pos:position pos:line="176" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="176" pos:column="29">"decr_hitratio"<pos:position pos:line="176" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="176" pos:column="46">decr_rate<pos:position pos:line="176" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="176" pos:column="57">st<pos:position pos:line="176" pos:column="59"/></name></expr></argument>)<pos:position pos:line="176" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="177" pos:column="5">submit_derive<pos:position pos:line="177" pos:column="18"/></name><argument_list pos:line="177" pos:column="18">(<argument><expr><literal type="string" pos:line="177" pos:column="19">"memcached_ops"<pos:position pos:line="177" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="177" pos:column="36">"decr"<pos:position pos:line="177" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="177" pos:column="44">decr<pos:position pos:line="177" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="177" pos:column="50">st<pos:position pos:line="177" pos:column="52"/></name></expr></argument>)<pos:position pos:line="177" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="54"/></expr_stmt>
  }<pos:position pos:line="178" pos:column="4"/></block></then></if>

  <return pos:line="180" pos:column="3">return <expr><literal type="number" pos:line="180" pos:column="10">0<pos:position pos:line="180" pos:column="11"/></literal></expr>;<pos:position pos:line="180" pos:column="12"/></return>
}<pos:position pos:line="181" pos:column="2"/></block></function></unit>

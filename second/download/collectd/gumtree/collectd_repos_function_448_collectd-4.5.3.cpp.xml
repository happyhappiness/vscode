<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_448_collectd-4.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">powerdns_config<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">oconfig_item_t<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">ci<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list> <comment type="block" pos:line="1" pos:column="49">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">i<pos:position pos:line="3" pos:column="8"/></name></decl>;<pos:position pos:line="3" pos:column="9"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="5" pos:column="3">DEBUG<pos:position pos:line="5" pos:column="8"/></name> <argument_list pos:line="5" pos:column="9">(<argument><expr><literal type="string" pos:line="5" pos:column="10">"powerdns plugin: powerdns_config (ci = %p);"<pos:position pos:line="5" pos:column="55"/></literal></expr></argument>, <argument><expr><operator pos:line="5" pos:column="57">(<pos:position pos:line="5" pos:column="58"/></operator><name pos:line="5" pos:column="58">void<pos:position pos:line="5" pos:column="62"/></name> <operator pos:line="5" pos:column="63">*<pos:position pos:line="5" pos:column="64"/></operator><operator pos:line="5" pos:column="64">)<pos:position pos:line="5" pos:column="65"/></operator> <name pos:line="5" pos:column="66">ci<pos:position pos:line="5" pos:column="68"/></name></expr></argument>)<pos:position pos:line="5" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="70"/></expr_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">list<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">==<pos:position pos:line="7" pos:column="14"/></operator> <name pos:line="7" pos:column="15">NULL<pos:position pos:line="7" pos:column="19"/></name></expr>)<pos:position pos:line="7" pos:column="20"/></condition><then pos:line="7" pos:column="20">
  <block pos:line="8" pos:column="3">{
    <expr_stmt><expr><name pos:line="9" pos:column="5">list<pos:position pos:line="9" pos:column="9"/></name> <operator pos:line="9" pos:column="10">=<pos:position pos:line="9" pos:column="11"/></operator> <call><name pos:line="9" pos:column="12">llist_create<pos:position pos:line="9" pos:column="24"/></name> <argument_list pos:line="9" pos:column="25">()<pos:position pos:line="9" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="28"/></expr_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">list<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">==<pos:position pos:line="11" pos:column="16"/></operator> <name pos:line="11" pos:column="17">NULL<pos:position pos:line="11" pos:column="21"/></name></expr>)<pos:position pos:line="11" pos:column="22"/></condition><then pos:line="11" pos:column="22">
    <block pos:line="12" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="13" pos:column="7">ERROR<pos:position pos:line="13" pos:column="12"/></name> <argument_list pos:line="13" pos:column="13">(<argument><expr><literal type="string" pos:line="13" pos:column="14">"powerdns plugin: `llist_create' failed."<pos:position pos:line="13" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="57"/></expr_stmt>
      <return pos:line="14" pos:column="7">return <expr><operator pos:line="14" pos:column="14">(<pos:position pos:line="14" pos:column="15"/></operator><operator pos:line="14" pos:column="15">-<pos:position pos:line="14" pos:column="16"/></operator><literal type="number" pos:line="14" pos:column="16">1<pos:position pos:line="14" pos:column="17"/></literal><operator pos:line="14" pos:column="17">)<pos:position pos:line="14" pos:column="18"/></operator></expr>;<pos:position pos:line="14" pos:column="19"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

  <for pos:line="18" pos:column="3">for <control pos:line="18" pos:column="7">(<init><expr><name pos:line="18" pos:column="8">i<pos:position pos:line="18" pos:column="9"/></name> <operator pos:line="18" pos:column="10">=<pos:position pos:line="18" pos:column="11"/></operator> <literal type="number" pos:line="18" pos:column="12">0<pos:position pos:line="18" pos:column="13"/></literal></expr>;<pos:position pos:line="18" pos:column="14"/></init> <condition><expr><name pos:line="18" pos:column="15">i<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">&lt;<pos:position pos:line="18" pos:column="21"/></operator> <name><name pos:line="18" pos:column="19">ci<pos:position pos:line="18" pos:column="21"/></name><operator pos:line="18" pos:column="21">-&gt;<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="23">children_num<pos:position pos:line="18" pos:column="35"/></name></name></expr>;<pos:position pos:line="18" pos:column="36"/></condition> <incr><expr><name pos:line="18" pos:column="37">i<pos:position pos:line="18" pos:column="38"/></name><operator pos:line="18" pos:column="38">++<pos:position pos:line="18" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="41"/></control>
  <block pos:line="19" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">oconfig_item_t<pos:position pos:line="20" pos:column="19"/></name> <modifier pos:line="20" pos:column="20">*<pos:position pos:line="20" pos:column="21"/></modifier></type><name pos:line="20" pos:column="21">option<pos:position pos:line="20" pos:column="27"/></name> <init pos:line="20" pos:column="28">= <expr><name><name pos:line="20" pos:column="30">ci<pos:position pos:line="20" pos:column="32"/></name><operator pos:line="20" pos:column="32">-&gt;<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="34">children<pos:position pos:line="20" pos:column="42"/></name></name> <operator pos:line="20" pos:column="43">+<pos:position pos:line="20" pos:column="44"/></operator> <name pos:line="20" pos:column="45">i<pos:position pos:line="20" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="20" pos:column="47"/></decl_stmt>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">(<pos:position pos:line="22" pos:column="10"/></operator><call><name pos:line="22" pos:column="10">strcasecmp<pos:position pos:line="22" pos:column="20"/></name> <argument_list pos:line="22" pos:column="21">(<argument><expr><literal type="string" pos:line="22" pos:column="22">"Server"<pos:position pos:line="22" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="32">option<pos:position pos:line="22" pos:column="38"/></name><operator pos:line="22" pos:column="38">-&gt;<pos:position pos:line="22" pos:column="43"/></operator><name pos:line="22" pos:column="40">key<pos:position pos:line="22" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="44"/></argument_list></call> <operator pos:line="22" pos:column="45">==<pos:position pos:line="22" pos:column="47"/></operator> <literal type="number" pos:line="22" pos:column="48">0<pos:position pos:line="22" pos:column="49"/></literal><operator pos:line="22" pos:column="49">)<pos:position pos:line="22" pos:column="50"/></operator>
	<operator pos:line="23" pos:column="9">||<pos:position pos:line="23" pos:column="11"/></operator> <operator pos:line="23" pos:column="12">(<pos:position pos:line="23" pos:column="13"/></operator><call><name pos:line="23" pos:column="13">strcasecmp<pos:position pos:line="23" pos:column="23"/></name> <argument_list pos:line="23" pos:column="24">(<argument><expr><literal type="string" pos:line="23" pos:column="25">"Recursor"<pos:position pos:line="23" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="37">option<pos:position pos:line="23" pos:column="43"/></name><operator pos:line="23" pos:column="43">-&gt;<pos:position pos:line="23" pos:column="48"/></operator><name pos:line="23" pos:column="45">key<pos:position pos:line="23" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="49"/></argument_list></call> <operator pos:line="23" pos:column="50">==<pos:position pos:line="23" pos:column="52"/></operator> <literal type="number" pos:line="23" pos:column="53">0<pos:position pos:line="23" pos:column="54"/></literal><operator pos:line="23" pos:column="54">)<pos:position pos:line="23" pos:column="55"/></operator></expr>)<pos:position pos:line="23" pos:column="56"/></condition><then pos:line="23" pos:column="56">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="7">powerdns_config_add_server<pos:position pos:line="24" pos:column="33"/></name> <argument_list pos:line="24" pos:column="34">(<argument><expr><name pos:line="24" pos:column="35">option<pos:position pos:line="24" pos:column="41"/></name></expr></argument>)<pos:position pos:line="24" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="43"/></expr_stmt></block></then>
    <elseif pos:line="25" pos:column="5">else <if pos:line="25" pos:column="10">if <condition pos:line="25" pos:column="13">(<expr><call><name pos:line="25" pos:column="14">strcasecmp<pos:position pos:line="25" pos:column="24"/></name> <argument_list pos:line="25" pos:column="25">(<argument><expr><literal type="string" pos:line="25" pos:column="26">"LocalSocket"<pos:position pos:line="25" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="41">option<pos:position pos:line="25" pos:column="47"/></name><operator pos:line="25" pos:column="47">-&gt;<pos:position pos:line="25" pos:column="52"/></operator><name pos:line="25" pos:column="49">key<pos:position pos:line="25" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="53"/></argument_list></call> <operator pos:line="25" pos:column="54">==<pos:position pos:line="25" pos:column="56"/></operator> <literal type="number" pos:line="25" pos:column="57">0<pos:position pos:line="25" pos:column="58"/></literal></expr>)<pos:position pos:line="25" pos:column="59"/></condition><then pos:line="25" pos:column="59">
    <block pos:line="26" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="27" pos:column="7">char<pos:position pos:line="27" pos:column="11"/></name> <modifier pos:line="27" pos:column="12">*<pos:position pos:line="27" pos:column="13"/></modifier></type><name pos:line="27" pos:column="13">temp<pos:position pos:line="27" pos:column="17"/></name> <init pos:line="27" pos:column="18">= <expr><call><name pos:line="27" pos:column="20">strdup<pos:position pos:line="27" pos:column="26"/></name> <argument_list pos:line="27" pos:column="27">(<argument><expr><name><name pos:line="27" pos:column="28">option<pos:position pos:line="27" pos:column="34"/></name><operator pos:line="27" pos:column="34">-&gt;<pos:position pos:line="27" pos:column="39"/></operator><name pos:line="27" pos:column="36">key<pos:position pos:line="27" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="27" pos:column="41"/></decl_stmt>
      <if pos:line="28" pos:column="7">if <condition pos:line="28" pos:column="10">(<expr><name pos:line="28" pos:column="11">temp<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">==<pos:position pos:line="28" pos:column="18"/></operator> <name pos:line="28" pos:column="19">NULL<pos:position pos:line="28" pos:column="23"/></name></expr>)<pos:position pos:line="28" pos:column="24"/></condition><then pos:line="28" pos:column="24">
        <block type="pseudo"><return pos:line="29" pos:column="9">return <expr><operator pos:line="29" pos:column="16">(<pos:position pos:line="29" pos:column="17"/></operator><literal type="number" pos:line="29" pos:column="17">1<pos:position pos:line="29" pos:column="18"/></literal><operator pos:line="29" pos:column="18">)<pos:position pos:line="29" pos:column="19"/></operator></expr>;<pos:position pos:line="29" pos:column="20"/></return></block></then></if>
      <expr_stmt><expr><call><name pos:line="30" pos:column="7">sfree<pos:position pos:line="30" pos:column="12"/></name> <argument_list pos:line="30" pos:column="13">(<argument><expr><name pos:line="30" pos:column="14">local_sockpath<pos:position pos:line="30" pos:column="28"/></name></expr></argument>)<pos:position pos:line="30" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><name pos:line="31" pos:column="7">local_sockpath<pos:position pos:line="31" pos:column="21"/></name> <operator pos:line="31" pos:column="22">=<pos:position pos:line="31" pos:column="23"/></operator> <name pos:line="31" pos:column="24">temp<pos:position pos:line="31" pos:column="28"/></name></expr>;<pos:position pos:line="31" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if></elseif>
    <else pos:line="33" pos:column="5">else
    <block pos:line="34" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="35" pos:column="7">ERROR<pos:position pos:line="35" pos:column="12"/></name> <argument_list pos:line="35" pos:column="13">(<argument><expr><literal type="string" pos:line="35" pos:column="14">"powerdns plugin: Option `%s' not allowed here."<pos:position pos:line="35" pos:column="62"/></literal></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="64">option<pos:position pos:line="35" pos:column="70"/></name><operator pos:line="35" pos:column="70">-&gt;<pos:position pos:line="35" pos:column="75"/></operator><name pos:line="35" pos:column="72">key<pos:position pos:line="35" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="77"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></else></if>
  }<pos:position pos:line="37" pos:column="4"/></block></for> <comment type="block" pos:line="37" pos:column="5">/* for (i = 0; i &lt; ci-&gt;children_num; i++) */</comment>

  <return pos:line="39" pos:column="3">return <expr><operator pos:line="39" pos:column="10">(<pos:position pos:line="39" pos:column="11"/></operator><literal type="number" pos:line="39" pos:column="11">0<pos:position pos:line="39" pos:column="12"/></literal><operator pos:line="39" pos:column="12">)<pos:position pos:line="39" pos:column="13"/></operator></expr>;<pos:position pos:line="39" pos:column="14"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

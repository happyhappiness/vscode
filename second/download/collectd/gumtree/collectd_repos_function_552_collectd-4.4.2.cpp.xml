<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_552_collectd-4.4.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">sensor_read_handler<pos:position pos:line="1" pos:column="32"/></name> <parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">ipmi_sensor_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">sensor<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="2" pos:column="5">int<pos:position pos:line="2" pos:column="8"/></name></type> <name pos:line="2" pos:column="9">err<pos:position pos:line="2" pos:column="12"/></name></decl></parameter>,
    <parameter><decl><type><name><name pos:line="3" pos:column="5">enum<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">ipmi_value_present_e<pos:position pos:line="3" pos:column="30"/></name></name></type> <name pos:line="3" pos:column="31">value_present<pos:position pos:line="3" pos:column="44"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="4" pos:column="5">unsigned<pos:position pos:line="4" pos:column="13"/></name> <name pos:line="4" pos:column="14">int<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">raw_value<pos:position pos:line="4" pos:column="27"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="5" pos:column="5">double<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">value<pos:position pos:line="5" pos:column="17"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="6" pos:column="5">ipmi_states_t<pos:position pos:line="6" pos:column="18"/></name> <modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier></type><name pos:line="6" pos:column="20">states<pos:position pos:line="6" pos:column="26"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="7" pos:column="5">void<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">user_data<pos:position pos:line="7" pos:column="20"/></name></decl></parameter>)<pos:position pos:line="7" pos:column="21"/></parameter_list>
<block pos:line="8" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">value_t<pos:position pos:line="9" pos:column="10"/></name></type> <name><name pos:line="9" pos:column="11">values<pos:position pos:line="9" pos:column="17"/></name><index pos:line="9" pos:column="17">[<expr><literal type="number" pos:line="9" pos:column="18">1<pos:position pos:line="9" pos:column="19"/></literal></expr>]<pos:position pos:line="9" pos:column="20"/></index></name></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">value_list_t<pos:position pos:line="10" pos:column="15"/></name></type> <name pos:line="10" pos:column="16">vl<pos:position pos:line="10" pos:column="18"/></name> <init pos:line="10" pos:column="19">= <expr><name pos:line="10" pos:column="21">VALUE_LIST_INIT<pos:position pos:line="10" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="37"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="12" pos:column="3">char<pos:position pos:line="12" pos:column="7"/></name></type> <name><name pos:line="12" pos:column="8">sensor_name<pos:position pos:line="12" pos:column="19"/></name><index pos:line="12" pos:column="19">[<expr><name pos:line="12" pos:column="20">IPMI_SENSOR_NAME_LEN<pos:position pos:line="12" pos:column="40"/></name></expr>]<pos:position pos:line="12" pos:column="41"/></index></name></decl>;<pos:position pos:line="12" pos:column="42"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">char<pos:position pos:line="13" pos:column="7"/></name> <modifier pos:line="13" pos:column="8">*<pos:position pos:line="13" pos:column="9"/></modifier></type><name pos:line="13" pos:column="9">sensor_name_ptr<pos:position pos:line="13" pos:column="24"/></name></decl>;<pos:position pos:line="13" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">int<pos:position pos:line="14" pos:column="6"/></name></type> <name pos:line="14" pos:column="7">sensor_type<pos:position pos:line="14" pos:column="18"/></name></decl>;<pos:position pos:line="14" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="15" pos:column="3">const<pos:position pos:line="15" pos:column="8"/></specifier> <name pos:line="15" pos:column="9">char<pos:position pos:line="15" pos:column="13"/></name> <modifier pos:line="15" pos:column="14">*<pos:position pos:line="15" pos:column="15"/></modifier></type><name pos:line="15" pos:column="15">type<pos:position pos:line="15" pos:column="19"/></name></decl>;<pos:position pos:line="15" pos:column="20"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">memset<pos:position pos:line="17" pos:column="9"/></name> <argument_list pos:line="17" pos:column="10">(<argument><expr><name pos:line="17" pos:column="11">sensor_name<pos:position pos:line="17" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="24">0<pos:position pos:line="17" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="27">sizeof <argument_list pos:line="17" pos:column="34">(<argument><expr><name pos:line="17" pos:column="35">sensor_name<pos:position pos:line="17" pos:column="46"/></name></expr></argument>)<pos:position pos:line="17" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">ipmi_sensor_get_name<pos:position pos:line="18" pos:column="23"/></name> <argument_list pos:line="18" pos:column="24">(<argument><expr><name pos:line="18" pos:column="25">sensor<pos:position pos:line="18" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="33">sensor_name<pos:position pos:line="18" pos:column="44"/></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="46">sizeof <argument_list pos:line="18" pos:column="53">(<argument><expr><name pos:line="18" pos:column="54">sensor_name<pos:position pos:line="18" pos:column="65"/></name></expr></argument>)<pos:position pos:line="18" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="68"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="19" pos:column="3">sensor_name<pos:position pos:line="19" pos:column="14"/></name><index pos:line="19" pos:column="14">[<expr><sizeof pos:line="19" pos:column="15">sizeof <argument_list pos:line="19" pos:column="22">(<argument><expr><name pos:line="19" pos:column="23">sensor_name<pos:position pos:line="19" pos:column="34"/></name></expr></argument>)<pos:position pos:line="19" pos:column="35"/></argument_list></sizeof> <operator pos:line="19" pos:column="36">-<pos:position pos:line="19" pos:column="37"/></operator> <literal type="number" pos:line="19" pos:column="38">1<pos:position pos:line="19" pos:column="39"/></literal></expr>]<pos:position pos:line="19" pos:column="40"/></index></name> <operator pos:line="19" pos:column="41">=<pos:position pos:line="19" pos:column="42"/></operator> <literal type="number" pos:line="19" pos:column="43">0<pos:position pos:line="19" pos:column="44"/></literal></expr>;<pos:position pos:line="19" pos:column="45"/></expr_stmt>

  <expr_stmt><expr><name pos:line="21" pos:column="3">sensor_name_ptr<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">=<pos:position pos:line="21" pos:column="20"/></operator> <call><name pos:line="21" pos:column="21">strstr<pos:position pos:line="21" pos:column="27"/></name> <argument_list pos:line="21" pos:column="28">(<argument><expr><name pos:line="21" pos:column="29">sensor_name<pos:position pos:line="21" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="42">")."<pos:position pos:line="21" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="48"/></expr_stmt>
  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><name pos:line="22" pos:column="7">sensor_name_ptr<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">==<pos:position pos:line="22" pos:column="25"/></operator> <name pos:line="22" pos:column="26">NULL<pos:position pos:line="22" pos:column="30"/></name></expr>)<pos:position pos:line="22" pos:column="31"/></condition><then pos:line="22" pos:column="31">
    <block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="5">sensor_name_ptr<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">=<pos:position pos:line="23" pos:column="22"/></operator> <name pos:line="23" pos:column="23">sensor_name<pos:position pos:line="23" pos:column="34"/></name></expr>;<pos:position pos:line="23" pos:column="35"/></expr_stmt></block></then>
  <else pos:line="24" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="5">sensor_name_ptr<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">+=<pos:position pos:line="25" pos:column="23"/></operator> <literal type="number" pos:line="25" pos:column="24">2<pos:position pos:line="25" pos:column="25"/></literal></expr>;<pos:position pos:line="25" pos:column="26"/></expr_stmt></block></else></if>

  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><name pos:line="27" pos:column="7">err<pos:position pos:line="27" pos:column="10"/></name> <operator pos:line="27" pos:column="11">!=<pos:position pos:line="27" pos:column="13"/></operator> <literal type="number" pos:line="27" pos:column="14">0<pos:position pos:line="27" pos:column="15"/></literal></expr>)<pos:position pos:line="27" pos:column="16"/></condition><then pos:line="27" pos:column="16">
  <block pos:line="28" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">INFO<pos:position pos:line="29" pos:column="9"/></name> <argument_list pos:line="29" pos:column="10">(<argument><expr><literal type="string" pos:line="29" pos:column="11">"ipmi plugin: sensor_read_handler: Removing sensor %s, "<pos:position pos:line="29" pos:column="67"/></literal>
        <literal type="string" pos:line="30" pos:column="9">"because it failed with status %#x."<pos:position pos:line="30" pos:column="45"/></literal></expr></argument>,
        <argument><expr><name pos:line="31" pos:column="9">sensor_name_ptr<pos:position pos:line="31" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="26">err<pos:position pos:line="31" pos:column="29"/></name></expr></argument>)<pos:position pos:line="31" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">sensor_list_remove<pos:position pos:line="32" pos:column="23"/></name> <argument_list pos:line="32" pos:column="24">(<argument><expr><name pos:line="32" pos:column="25">sensor<pos:position pos:line="32" pos:column="31"/></name></expr></argument>)<pos:position pos:line="32" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="33"/></expr_stmt>
    <return pos:line="33" pos:column="5">return;<pos:position pos:line="33" pos:column="12"/></return>
  }<pos:position pos:line="34" pos:column="4"/></block></then></if>

  <if pos:line="36" pos:column="3">if <condition pos:line="36" pos:column="6">(<expr><name pos:line="36" pos:column="7">value_present<pos:position pos:line="36" pos:column="20"/></name> <operator pos:line="36" pos:column="21">!=<pos:position pos:line="36" pos:column="23"/></operator> <name pos:line="36" pos:column="24">IPMI_BOTH_VALUES_PRESENT<pos:position pos:line="36" pos:column="48"/></name></expr>)<pos:position pos:line="36" pos:column="49"/></condition><then pos:line="36" pos:column="49">
  <block pos:line="37" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">INFO<pos:position pos:line="38" pos:column="9"/></name> <argument_list pos:line="38" pos:column="10">(<argument><expr><literal type="string" pos:line="38" pos:column="11">"ipmi plugin: sensor_read_handler: Removing sensor %s, "<pos:position pos:line="38" pos:column="67"/></literal>
        <literal type="string" pos:line="39" pos:column="9">"because it provides %s. If you need this sensor, "<pos:position pos:line="39" pos:column="60"/></literal>
        <literal type="string" pos:line="40" pos:column="9">"please file a bug report."<pos:position pos:line="40" pos:column="36"/></literal></expr></argument>,
        <argument><expr><name pos:line="41" pos:column="9">sensor_name_ptr<pos:position pos:line="41" pos:column="24"/></name></expr></argument>,
        <argument><expr><ternary><condition><expr><operator pos:line="42" pos:column="9">(<pos:position pos:line="42" pos:column="10"/></operator><name pos:line="42" pos:column="10">value_present<pos:position pos:line="42" pos:column="23"/></name> <operator pos:line="42" pos:column="24">==<pos:position pos:line="42" pos:column="26"/></operator> <name pos:line="42" pos:column="27">IPMI_RAW_VALUE_PRESENT<pos:position pos:line="42" pos:column="49"/></name><operator pos:line="42" pos:column="49">)<pos:position pos:line="42" pos:column="50"/></operator></expr>
        ?<pos:position pos:line="43" pos:column="10"/></condition><then pos:line="43" pos:column="10"> <expr><literal type="string" pos:line="43" pos:column="11">"only the raw value"<pos:position pos:line="43" pos:column="31"/></literal></expr>
        <pos:position pos:line="44" pos:column="9"/></then><else pos:line="44" pos:column="9">: <expr><literal type="string" pos:line="44" pos:column="11">"no value"<pos:position pos:line="44" pos:column="21"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="44" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">sensor_list_remove<pos:position pos:line="45" pos:column="23"/></name> <argument_list pos:line="45" pos:column="24">(<argument><expr><name pos:line="45" pos:column="25">sensor<pos:position pos:line="45" pos:column="31"/></name></expr></argument>)<pos:position pos:line="45" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="33"/></expr_stmt>
    <return pos:line="46" pos:column="5">return;<pos:position pos:line="46" pos:column="12"/></return>
  }<pos:position pos:line="47" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="49" pos:column="3">/* Both `ignorelist' and `plugin_instance' may be NULL. */</comment>
  <if pos:line="50" pos:column="3">if <condition pos:line="50" pos:column="6">(<expr><call><name pos:line="50" pos:column="7">ignorelist_match<pos:position pos:line="50" pos:column="23"/></name> <argument_list pos:line="50" pos:column="24">(<argument><expr><name pos:line="50" pos:column="25">ignorelist<pos:position pos:line="50" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="37">sensor_name_ptr<pos:position pos:line="50" pos:column="52"/></name></expr></argument>)<pos:position pos:line="50" pos:column="53"/></argument_list></call> <operator pos:line="50" pos:column="54">!=<pos:position pos:line="50" pos:column="56"/></operator> <literal type="number" pos:line="50" pos:column="57">0<pos:position pos:line="50" pos:column="58"/></literal></expr>)<pos:position pos:line="50" pos:column="59"/></condition><then pos:line="50" pos:column="59">
  <block pos:line="51" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">sensor_list_remove<pos:position pos:line="52" pos:column="23"/></name> <argument_list pos:line="52" pos:column="24">(<argument><expr><name pos:line="52" pos:column="25">sensor<pos:position pos:line="52" pos:column="31"/></name></expr></argument>)<pos:position pos:line="52" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="33"/></expr_stmt>
    <return pos:line="53" pos:column="5">return;<pos:position pos:line="53" pos:column="12"/></return>
  }<pos:position pos:line="54" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="56" pos:column="3">/* FIXME: Use rate unit or base unit to scale the value */</comment>

  <expr_stmt><expr><name pos:line="58" pos:column="3">sensor_type<pos:position pos:line="58" pos:column="14"/></name> <operator pos:line="58" pos:column="15">=<pos:position pos:line="58" pos:column="16"/></operator> <call><name pos:line="58" pos:column="17">ipmi_sensor_get_sensor_type<pos:position pos:line="58" pos:column="44"/></name> <argument_list pos:line="58" pos:column="45">(<argument><expr><name pos:line="58" pos:column="46">sensor<pos:position pos:line="58" pos:column="52"/></name></expr></argument>)<pos:position pos:line="58" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="54"/></expr_stmt>
  <switch pos:line="59" pos:column="3">switch <condition pos:line="59" pos:column="10">(<expr><name pos:line="59" pos:column="11">sensor_type<pos:position pos:line="59" pos:column="22"/></name></expr>)<pos:position pos:line="59" pos:column="23"/></condition>
  <block pos:line="60" pos:column="3">{
    <case pos:line="61" pos:column="5">case <expr><name pos:line="61" pos:column="10">IPMI_SENSOR_TYPE_TEMPERATURE<pos:position pos:line="61" pos:column="38"/></name></expr>:<pos:position pos:line="61" pos:column="39"/></case>
      <expr_stmt><expr><name pos:line="62" pos:column="7">type<pos:position pos:line="62" pos:column="11"/></name> <operator pos:line="62" pos:column="12">=<pos:position pos:line="62" pos:column="13"/></operator> <literal type="string" pos:line="62" pos:column="14">"temperature"<pos:position pos:line="62" pos:column="27"/></literal></expr>;<pos:position pos:line="62" pos:column="28"/></expr_stmt>
      <break pos:line="63" pos:column="7">break;<pos:position pos:line="63" pos:column="13"/></break>

    <case pos:line="65" pos:column="5">case <expr><name pos:line="65" pos:column="10">IPMI_SENSOR_TYPE_VOLTAGE<pos:position pos:line="65" pos:column="34"/></name></expr>:<pos:position pos:line="65" pos:column="35"/></case>
      <expr_stmt><expr><name pos:line="66" pos:column="7">type<pos:position pos:line="66" pos:column="11"/></name> <operator pos:line="66" pos:column="12">=<pos:position pos:line="66" pos:column="13"/></operator> <literal type="string" pos:line="66" pos:column="14">"voltage"<pos:position pos:line="66" pos:column="23"/></literal></expr>;<pos:position pos:line="66" pos:column="24"/></expr_stmt>
      <break pos:line="67" pos:column="7">break;<pos:position pos:line="67" pos:column="13"/></break>

    <case pos:line="69" pos:column="5">case <expr><name pos:line="69" pos:column="10">IPMI_SENSOR_TYPE_CURRENT<pos:position pos:line="69" pos:column="34"/></name></expr>:<pos:position pos:line="69" pos:column="35"/></case>
      <expr_stmt><expr><name pos:line="70" pos:column="7">type<pos:position pos:line="70" pos:column="11"/></name> <operator pos:line="70" pos:column="12">=<pos:position pos:line="70" pos:column="13"/></operator> <literal type="string" pos:line="70" pos:column="14">"current"<pos:position pos:line="70" pos:column="23"/></literal></expr>;<pos:position pos:line="70" pos:column="24"/></expr_stmt>
      <break pos:line="71" pos:column="7">break;<pos:position pos:line="71" pos:column="13"/></break>

    <case pos:line="73" pos:column="5">case <expr><name pos:line="73" pos:column="10">IPMI_SENSOR_TYPE_FAN<pos:position pos:line="73" pos:column="30"/></name></expr>:<pos:position pos:line="73" pos:column="31"/></case>
      <expr_stmt><expr><name pos:line="74" pos:column="7">type<pos:position pos:line="74" pos:column="11"/></name> <operator pos:line="74" pos:column="12">=<pos:position pos:line="74" pos:column="13"/></operator> <literal type="string" pos:line="74" pos:column="14">"fanspeed"<pos:position pos:line="74" pos:column="24"/></literal></expr>;<pos:position pos:line="74" pos:column="25"/></expr_stmt>
      <break pos:line="75" pos:column="7">break;<pos:position pos:line="75" pos:column="13"/></break>

    <default pos:line="77" pos:column="5">default:<pos:position pos:line="77" pos:column="13"/></default>
      <block pos:line="78" pos:column="7">{
        <decl_stmt><decl><type><specifier pos:line="79" pos:column="9">const<pos:position pos:line="79" pos:column="14"/></specifier> <name pos:line="79" pos:column="15">char<pos:position pos:line="79" pos:column="19"/></name> <modifier pos:line="79" pos:column="20">*<pos:position pos:line="79" pos:column="21"/></modifier></type><name pos:line="79" pos:column="21">sensor_type_str<pos:position pos:line="79" pos:column="36"/></name></decl>;<pos:position pos:line="79" pos:column="37"/></decl_stmt>
        
        <expr_stmt><expr><name pos:line="81" pos:column="9">sensor_type_str<pos:position pos:line="81" pos:column="24"/></name> <operator pos:line="81" pos:column="25">=<pos:position pos:line="81" pos:column="26"/></operator> <call><name pos:line="81" pos:column="27">ipmi_sensor_get_sensor_type_string<pos:position pos:line="81" pos:column="61"/></name> <argument_list pos:line="81" pos:column="62">(<argument><expr><name pos:line="81" pos:column="63">sensor<pos:position pos:line="81" pos:column="69"/></name></expr></argument>)<pos:position pos:line="81" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="71"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="82" pos:column="9">INFO<pos:position pos:line="82" pos:column="13"/></name> <argument_list pos:line="82" pos:column="14">(<argument><expr><literal type="string" pos:line="82" pos:column="15">"ipmi plugin: sensor_read_handler: Removing sensor %s, "<pos:position pos:line="82" pos:column="71"/></literal>
            <literal type="string" pos:line="83" pos:column="13">"because I don't know how to handle its type (%#x, %s). "<pos:position pos:line="83" pos:column="70"/></literal>
            <literal type="string" pos:line="84" pos:column="13">"If you need this sensor, please file a bug report."<pos:position pos:line="84" pos:column="65"/></literal></expr></argument>,
            <argument><expr><name pos:line="85" pos:column="13">sensor_name_ptr<pos:position pos:line="85" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="30">sensor_type<pos:position pos:line="85" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="43">sensor_type_str<pos:position pos:line="85" pos:column="58"/></name></expr></argument>)<pos:position pos:line="85" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="86" pos:column="9">sensor_list_remove<pos:position pos:line="86" pos:column="27"/></name> <argument_list pos:line="86" pos:column="28">(<argument><expr><name pos:line="86" pos:column="29">sensor<pos:position pos:line="86" pos:column="35"/></name></expr></argument>)<pos:position pos:line="86" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="37"/></expr_stmt>
        <return pos:line="87" pos:column="9">return;<pos:position pos:line="87" pos:column="16"/></return>
      }<pos:position pos:line="88" pos:column="8"/></block>
  }<pos:position pos:line="89" pos:column="4"/></block></switch> <comment type="block" pos:line="89" pos:column="5">/* switch (sensor_type) */</comment>

  <expr_stmt><expr><name><name pos:line="91" pos:column="3">values<pos:position pos:line="91" pos:column="9"/></name><index pos:line="91" pos:column="9">[<expr><literal type="number" pos:line="91" pos:column="10">0<pos:position pos:line="91" pos:column="11"/></literal></expr>]<pos:position pos:line="91" pos:column="12"/></index></name><operator pos:line="91" pos:column="12">.<pos:position pos:line="91" pos:column="13"/></operator><name pos:line="91" pos:column="13">gauge<pos:position pos:line="91" pos:column="18"/></name> <operator pos:line="91" pos:column="19">=<pos:position pos:line="91" pos:column="20"/></operator> <name pos:line="91" pos:column="21">value<pos:position pos:line="91" pos:column="26"/></name></expr>;<pos:position pos:line="91" pos:column="27"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="93" pos:column="3">vl<pos:position pos:line="93" pos:column="5"/></name><operator pos:line="93" pos:column="5">.<pos:position pos:line="93" pos:column="6"/></operator><name pos:line="93" pos:column="6">values<pos:position pos:line="93" pos:column="12"/></name></name> <operator pos:line="93" pos:column="13">=<pos:position pos:line="93" pos:column="14"/></operator> <name pos:line="93" pos:column="15">values<pos:position pos:line="93" pos:column="21"/></name></expr>;<pos:position pos:line="93" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="94" pos:column="3">vl<pos:position pos:line="94" pos:column="5"/></name><operator pos:line="94" pos:column="5">.<pos:position pos:line="94" pos:column="6"/></operator><name pos:line="94" pos:column="6">values_len<pos:position pos:line="94" pos:column="16"/></name></name> <operator pos:line="94" pos:column="17">=<pos:position pos:line="94" pos:column="18"/></operator> <literal type="number" pos:line="94" pos:column="19">1<pos:position pos:line="94" pos:column="20"/></literal></expr>;<pos:position pos:line="94" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="95" pos:column="3">vl<pos:position pos:line="95" pos:column="5"/></name><operator pos:line="95" pos:column="5">.<pos:position pos:line="95" pos:column="6"/></operator><name pos:line="95" pos:column="6">time<pos:position pos:line="95" pos:column="10"/></name></name> <operator pos:line="95" pos:column="11">=<pos:position pos:line="95" pos:column="12"/></operator> <call><name pos:line="95" pos:column="13">time<pos:position pos:line="95" pos:column="17"/></name> <argument_list pos:line="95" pos:column="18">(<argument><expr><name pos:line="95" pos:column="19">NULL<pos:position pos:line="95" pos:column="23"/></name></expr></argument>)<pos:position pos:line="95" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="25"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="97" pos:column="3">sstrncpy<pos:position pos:line="97" pos:column="11"/></name> <argument_list pos:line="97" pos:column="12">(<argument><expr><name><name pos:line="97" pos:column="13">vl<pos:position pos:line="97" pos:column="15"/></name><operator pos:line="97" pos:column="15">.<pos:position pos:line="97" pos:column="16"/></operator><name pos:line="97" pos:column="16">host<pos:position pos:line="97" pos:column="20"/></name></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="22">hostname_g<pos:position pos:line="97" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="97" pos:column="34">sizeof <argument_list pos:line="97" pos:column="41">(<argument><expr><name><name pos:line="97" pos:column="42">vl<pos:position pos:line="97" pos:column="44"/></name><operator pos:line="97" pos:column="44">.<pos:position pos:line="97" pos:column="45"/></operator><name pos:line="97" pos:column="45">host<pos:position pos:line="97" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="97" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="97" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="52"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="98" pos:column="3">sstrncpy<pos:position pos:line="98" pos:column="11"/></name> <argument_list pos:line="98" pos:column="12">(<argument><expr><name><name pos:line="98" pos:column="13">vl<pos:position pos:line="98" pos:column="15"/></name><operator pos:line="98" pos:column="15">.<pos:position pos:line="98" pos:column="16"/></operator><name pos:line="98" pos:column="16">plugin<pos:position pos:line="98" pos:column="22"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="24">"ipmi"<pos:position pos:line="98" pos:column="30"/></literal></expr></argument>, <argument><expr><sizeof pos:line="98" pos:column="32">sizeof <argument_list pos:line="98" pos:column="39">(<argument><expr><name><name pos:line="98" pos:column="40">vl<pos:position pos:line="98" pos:column="42"/></name><operator pos:line="98" pos:column="42">.<pos:position pos:line="98" pos:column="43"/></operator><name pos:line="98" pos:column="43">plugin<pos:position pos:line="98" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="98" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="98" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="52"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="99" pos:column="3">sstrncpy<pos:position pos:line="99" pos:column="11"/></name> <argument_list pos:line="99" pos:column="12">(<argument><expr><name><name pos:line="99" pos:column="13">vl<pos:position pos:line="99" pos:column="15"/></name><operator pos:line="99" pos:column="15">.<pos:position pos:line="99" pos:column="16"/></operator><name pos:line="99" pos:column="16">type_instance<pos:position pos:line="99" pos:column="29"/></name></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="31">sensor_name_ptr<pos:position pos:line="99" pos:column="46"/></name></expr></argument>, <argument><expr><sizeof pos:line="99" pos:column="48">sizeof <argument_list pos:line="99" pos:column="55">(<argument><expr><name><name pos:line="99" pos:column="56">vl<pos:position pos:line="99" pos:column="58"/></name><operator pos:line="99" pos:column="58">.<pos:position pos:line="99" pos:column="59"/></operator><name pos:line="99" pos:column="59">type_instance<pos:position pos:line="99" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="99" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="75"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="101" pos:column="3">plugin_dispatch_values<pos:position pos:line="101" pos:column="25"/></name> <argument_list pos:line="101" pos:column="26">(<argument><expr><name pos:line="101" pos:column="27">type<pos:position pos:line="101" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="101" pos:column="33">&amp;<pos:position pos:line="101" pos:column="38"/></operator><name pos:line="101" pos:column="34">vl<pos:position pos:line="101" pos:column="36"/></name></expr></argument>)<pos:position pos:line="101" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="38"/></expr_stmt>
}<pos:position pos:line="102" pos:column="2"/></block></function></unit>

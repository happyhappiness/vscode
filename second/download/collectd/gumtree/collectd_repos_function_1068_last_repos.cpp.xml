<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1068_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">llentry_t<pos:position pos:line="1" pos:column="17"/></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type><name pos:line="1" pos:column="19">mcelog_dimm<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">mcelog_memory_rec_t<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">rec<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
                              <parameter><decl><type><name pos:line="2" pos:column="31">llist_t<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">dimms_list<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list> <block pos:line="2" pos:column="52">{

  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">dimm_name<pos:position pos:line="4" pos:column="17"/></name><index pos:line="4" pos:column="17">[<expr><name pos:line="4" pos:column="18">DATA_MAX_NAME_LEN<pos:position pos:line="4" pos:column="35"/></name></expr>]<pos:position pos:line="4" pos:column="36"/></index></name></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><call><name pos:line="6" pos:column="7">strlen<pos:position pos:line="6" pos:column="13"/></name><argument_list pos:line="6" pos:column="13">(<argument><expr><name><name pos:line="6" pos:column="14">rec<pos:position pos:line="6" pos:column="17"/></name><operator pos:line="6" pos:column="17">-&gt;<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="19">dimm_name<pos:position pos:line="6" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="29"/></argument_list></call> <operator pos:line="6" pos:column="30">&gt;<pos:position pos:line="6" pos:column="34"/></operator> <literal type="number" pos:line="6" pos:column="32">0<pos:position pos:line="6" pos:column="33"/></literal></expr>)<pos:position pos:line="6" pos:column="34"/></condition><then pos:line="6" pos:column="34"> <block pos:line="6" pos:column="35">{
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">snprintf<pos:position pos:line="7" pos:column="13"/></name><argument_list pos:line="7" pos:column="13">(<argument><expr><name pos:line="7" pos:column="14">dimm_name<pos:position pos:line="7" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="25">sizeof<argument_list pos:line="7" pos:column="31">(<argument><expr><name pos:line="7" pos:column="32">dimm_name<pos:position pos:line="7" pos:column="41"/></name></expr></argument>)<pos:position pos:line="7" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="44">"%s_%s"<pos:position pos:line="7" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="53">rec<pos:position pos:line="7" pos:column="56"/></name><operator pos:line="7" pos:column="56">-&gt;<pos:position pos:line="7" pos:column="61"/></operator><name pos:line="7" pos:column="58">location<pos:position pos:line="7" pos:column="66"/></name></name></expr></argument>,
             <argument><expr><name><name pos:line="8" pos:column="14">rec<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">-&gt;<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="19">dimm_name<pos:position pos:line="8" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="30"/></expr_stmt>
  }<pos:position pos:line="9" pos:column="4"/></block></then> <else pos:line="9" pos:column="5">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="5">sstrncpy<pos:position pos:line="10" pos:column="13"/></name><argument_list pos:line="10" pos:column="13">(<argument><expr><name pos:line="10" pos:column="14">dimm_name<pos:position pos:line="10" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="25">rec<pos:position pos:line="10" pos:column="28"/></name><operator pos:line="10" pos:column="28">-&gt;<pos:position pos:line="10" pos:column="33"/></operator><name pos:line="10" pos:column="30">location<pos:position pos:line="10" pos:column="38"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="40">sizeof<argument_list pos:line="10" pos:column="46">(<argument><expr><name pos:line="10" pos:column="47">dimm_name<pos:position pos:line="10" pos:column="56"/></name></expr></argument>)<pos:position pos:line="10" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="59"/></expr_stmt></block></else></if>

  <decl_stmt><decl><type><name pos:line="12" pos:column="3">llentry_t<pos:position pos:line="12" pos:column="12"/></name> <modifier pos:line="12" pos:column="13">*<pos:position pos:line="12" pos:column="14"/></modifier></type><name pos:line="12" pos:column="14">dimm_le<pos:position pos:line="12" pos:column="21"/></name> <init pos:line="12" pos:column="22">= <expr><call><name pos:line="12" pos:column="24">llist_search<pos:position pos:line="12" pos:column="36"/></name><argument_list pos:line="12" pos:column="36">(<argument><expr><name><name pos:line="12" pos:column="37">g_mcelog_config<pos:position pos:line="12" pos:column="52"/></name><operator pos:line="12" pos:column="52">.<pos:position pos:line="12" pos:column="53"/></operator><name pos:line="12" pos:column="53">dimms_list<pos:position pos:line="12" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="65">dimm_name<pos:position pos:line="12" pos:column="74"/></name></expr></argument>)<pos:position pos:line="12" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="76"/></decl_stmt>

  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">dimm_le<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">!=<pos:position pos:line="14" pos:column="17"/></operator> <name pos:line="14" pos:column="18">NULL<pos:position pos:line="14" pos:column="22"/></name></expr>)<pos:position pos:line="14" pos:column="23"/></condition><then pos:line="14" pos:column="23">
    <block type="pseudo"><return pos:line="15" pos:column="5">return <expr><name pos:line="15" pos:column="12">dimm_le<pos:position pos:line="15" pos:column="19"/></name></expr>;<pos:position pos:line="15" pos:column="20"/></return></block></then></if>

  <comment type="block" pos:line="17" pos:column="3">/* allocate new linked list entry */</comment>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">mcelog_memory_rec_t<pos:position pos:line="18" pos:column="22"/></name> <modifier pos:line="18" pos:column="23">*<pos:position pos:line="18" pos:column="24"/></modifier></type><name pos:line="18" pos:column="24">dimm_mr<pos:position pos:line="18" pos:column="31"/></name> <init pos:line="18" pos:column="32">= <expr><call><name pos:line="18" pos:column="34">calloc<pos:position pos:line="18" pos:column="40"/></name><argument_list pos:line="18" pos:column="40">(<argument><expr><literal type="number" pos:line="18" pos:column="41">1<pos:position pos:line="18" pos:column="42"/></literal></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="44">sizeof<argument_list pos:line="18" pos:column="50">(<argument><expr><operator pos:line="18" pos:column="51">*<pos:position pos:line="18" pos:column="52"/></operator><name pos:line="18" pos:column="52">dimm_mr<pos:position pos:line="18" pos:column="59"/></name></expr></argument>)<pos:position pos:line="18" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="62"/></decl_stmt>
  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><name pos:line="19" pos:column="7">dimm_mr<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">==<pos:position pos:line="19" pos:column="17"/></operator> <name pos:line="19" pos:column="18">NULL<pos:position pos:line="19" pos:column="22"/></name></expr>)<pos:position pos:line="19" pos:column="23"/></condition><then pos:line="19" pos:column="23"> <block pos:line="19" pos:column="24">{
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">ERROR<pos:position pos:line="20" pos:column="10"/></name><argument_list pos:line="20" pos:column="10">(<argument><expr><name pos:line="20" pos:column="11">MCELOG_PLUGIN<pos:position pos:line="20" pos:column="24"/></name> <literal type="string" pos:line="20" pos:column="25">": Error allocating dimm memory item"<pos:position pos:line="20" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="64"/></expr_stmt>
    <return pos:line="21" pos:column="5">return <expr><name pos:line="21" pos:column="12">NULL<pos:position pos:line="21" pos:column="16"/></name></expr>;<pos:position pos:line="21" pos:column="17"/></return>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>
  <decl_stmt><decl><type><name pos:line="23" pos:column="3">char<pos:position pos:line="23" pos:column="7"/></name> <modifier pos:line="23" pos:column="8">*<pos:position pos:line="23" pos:column="9"/></modifier></type><name pos:line="23" pos:column="9">p_name<pos:position pos:line="23" pos:column="15"/></name> <init pos:line="23" pos:column="16">= <expr><call><name pos:line="23" pos:column="18">strdup<pos:position pos:line="23" pos:column="24"/></name><argument_list pos:line="23" pos:column="24">(<argument><expr><name pos:line="23" pos:column="25">dimm_name<pos:position pos:line="23" pos:column="34"/></name></expr></argument>)<pos:position pos:line="23" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="23" pos:column="36"/></decl_stmt>
  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><name pos:line="24" pos:column="7">p_name<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">==<pos:position pos:line="24" pos:column="16"/></operator> <name pos:line="24" pos:column="17">NULL<pos:position pos:line="24" pos:column="21"/></name></expr>)<pos:position pos:line="24" pos:column="22"/></condition><then pos:line="24" pos:column="22"> <block pos:line="24" pos:column="23">{
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">ERROR<pos:position pos:line="25" pos:column="10"/></name><argument_list pos:line="25" pos:column="10">(<argument><expr><name pos:line="25" pos:column="11">MCELOG_PLUGIN<pos:position pos:line="25" pos:column="24"/></name> <literal type="string" pos:line="25" pos:column="25">": strdup: error"<pos:position pos:line="25" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">free<pos:position pos:line="26" pos:column="9"/></name><argument_list pos:line="26" pos:column="9">(<argument><expr><name pos:line="26" pos:column="10">dimm_mr<pos:position pos:line="26" pos:column="17"/></name></expr></argument>)<pos:position pos:line="26" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="19"/></expr_stmt>
    <return pos:line="27" pos:column="5">return <expr><name pos:line="27" pos:column="12">NULL<pos:position pos:line="27" pos:column="16"/></name></expr>;<pos:position pos:line="27" pos:column="17"/></return>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="30" pos:column="3">/* add new dimm */</comment>
  <expr_stmt><expr><name pos:line="31" pos:column="3">dimm_le<pos:position pos:line="31" pos:column="10"/></name> <operator pos:line="31" pos:column="11">=<pos:position pos:line="31" pos:column="12"/></operator> <call><name pos:line="31" pos:column="13">llentry_create<pos:position pos:line="31" pos:column="27"/></name><argument_list pos:line="31" pos:column="27">(<argument><expr><name pos:line="31" pos:column="28">p_name<pos:position pos:line="31" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="36">dimm_mr<pos:position pos:line="31" pos:column="43"/></name></expr></argument>)<pos:position pos:line="31" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="45"/></expr_stmt>
  <if pos:line="32" pos:column="3">if <condition pos:line="32" pos:column="6">(<expr><name pos:line="32" pos:column="7">dimm_le<pos:position pos:line="32" pos:column="14"/></name> <operator pos:line="32" pos:column="15">==<pos:position pos:line="32" pos:column="17"/></operator> <name pos:line="32" pos:column="18">NULL<pos:position pos:line="32" pos:column="22"/></name></expr>)<pos:position pos:line="32" pos:column="23"/></condition><then pos:line="32" pos:column="23"> <block pos:line="32" pos:column="24">{
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">ERROR<pos:position pos:line="33" pos:column="10"/></name><argument_list pos:line="33" pos:column="10">(<argument><expr><name pos:line="33" pos:column="11">MCELOG_PLUGIN<pos:position pos:line="33" pos:column="24"/></name> <literal type="string" pos:line="33" pos:column="25">": llentry_create(): error"<pos:position pos:line="33" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">free<pos:position pos:line="34" pos:column="9"/></name><argument_list pos:line="34" pos:column="9">(<argument><expr><name pos:line="34" pos:column="10">dimm_mr<pos:position pos:line="34" pos:column="17"/></name></expr></argument>)<pos:position pos:line="34" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">free<pos:position pos:line="35" pos:column="9"/></name><argument_list pos:line="35" pos:column="9">(<argument><expr><name pos:line="35" pos:column="10">p_name<pos:position pos:line="35" pos:column="16"/></name></expr></argument>)<pos:position pos:line="35" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="18"/></expr_stmt>
    <return pos:line="36" pos:column="5">return <expr><name pos:line="36" pos:column="12">NULL<pos:position pos:line="36" pos:column="16"/></name></expr>;<pos:position pos:line="36" pos:column="17"/></return>
  }<pos:position pos:line="37" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="38" pos:column="3">pthread_mutex_lock<pos:position pos:line="38" pos:column="21"/></name><argument_list pos:line="38" pos:column="21">(<argument><expr><operator pos:line="38" pos:column="22">&amp;<pos:position pos:line="38" pos:column="27"/></operator><name><name pos:line="38" pos:column="23">g_mcelog_config<pos:position pos:line="38" pos:column="38"/></name><operator pos:line="38" pos:column="38">.<pos:position pos:line="38" pos:column="39"/></operator><name pos:line="38" pos:column="39">dimms_lock<pos:position pos:line="38" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="51"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="39" pos:column="3">llist_append<pos:position pos:line="39" pos:column="15"/></name><argument_list pos:line="39" pos:column="15">(<argument><expr><name><name pos:line="39" pos:column="16">g_mcelog_config<pos:position pos:line="39" pos:column="31"/></name><operator pos:line="39" pos:column="31">.<pos:position pos:line="39" pos:column="32"/></operator><name pos:line="39" pos:column="32">dimms_list<pos:position pos:line="39" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="44">dimm_le<pos:position pos:line="39" pos:column="51"/></name></expr></argument>)<pos:position pos:line="39" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="53"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="40" pos:column="3">pthread_mutex_unlock<pos:position pos:line="40" pos:column="23"/></name><argument_list pos:line="40" pos:column="23">(<argument><expr><operator pos:line="40" pos:column="24">&amp;<pos:position pos:line="40" pos:column="29"/></operator><name><name pos:line="40" pos:column="25">g_mcelog_config<pos:position pos:line="40" pos:column="40"/></name><operator pos:line="40" pos:column="40">.<pos:position pos:line="40" pos:column="41"/></operator><name pos:line="40" pos:column="41">dimms_lock<pos:position pos:line="40" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="53"/></expr_stmt>

  <return pos:line="42" pos:column="3">return <expr><name pos:line="42" pos:column="10">dimm_le<pos:position pos:line="42" pos:column="17"/></name></expr>;<pos:position pos:line="42" pos:column="18"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_429_collectd-4.3.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">match_range<pos:position pos:line="1" pos:column="16"/></name> <parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">range_t<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">range<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">double<pos:position pos:line="1" pos:column="40"/></name></type> <name pos:line="1" pos:column="41">value<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">ret<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><literal type="number" pos:line="3" pos:column="19">0<pos:position pos:line="3" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><call><name pos:line="5" pos:column="14">isnan<pos:position pos:line="5" pos:column="19"/></name> <argument_list pos:line="5" pos:column="20">(<argument><expr><name><name pos:line="5" pos:column="21">range<pos:position pos:line="5" pos:column="26"/></name><operator pos:line="5" pos:column="26">-&gt;<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="28">min<pos:position pos:line="5" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="32"/></argument_list></call> <operator pos:line="5" pos:column="33">&amp;&amp;<pos:position pos:line="5" pos:column="43"/></operator> <operator pos:line="5" pos:column="36">(<pos:position pos:line="5" pos:column="37"/></operator><name><name pos:line="5" pos:column="37">range<pos:position pos:line="5" pos:column="42"/></name><operator pos:line="5" pos:column="42">-&gt;<pos:position pos:line="5" pos:column="47"/></operator><name pos:line="5" pos:column="44">min<pos:position pos:line="5" pos:column="47"/></name></name> <operator pos:line="5" pos:column="48">&gt;<pos:position pos:line="5" pos:column="52"/></operator> <name pos:line="5" pos:column="50">value<pos:position pos:line="5" pos:column="55"/></name><operator pos:line="5" pos:column="55">)<pos:position pos:line="5" pos:column="56"/></operator></expr>)<pos:position pos:line="5" pos:column="57"/></condition><then pos:line="5" pos:column="57">
		<block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="17">ret<pos:position pos:line="6" pos:column="20"/></name> <operator pos:line="6" pos:column="21">=<pos:position pos:line="6" pos:column="22"/></operator> <literal type="number" pos:line="6" pos:column="23">1<pos:position pos:line="6" pos:column="24"/></literal></expr>;<pos:position pos:line="6" pos:column="25"/></expr_stmt></block></then></if>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><call><name pos:line="7" pos:column="14">isnan<pos:position pos:line="7" pos:column="19"/></name> <argument_list pos:line="7" pos:column="20">(<argument><expr><name><name pos:line="7" pos:column="21">range<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">-&gt;<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="28">max<pos:position pos:line="7" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="32"/></argument_list></call> <operator pos:line="7" pos:column="33">&amp;&amp;<pos:position pos:line="7" pos:column="43"/></operator> <operator pos:line="7" pos:column="36">(<pos:position pos:line="7" pos:column="37"/></operator><name><name pos:line="7" pos:column="37">range<pos:position pos:line="7" pos:column="42"/></name><operator pos:line="7" pos:column="42">-&gt;<pos:position pos:line="7" pos:column="47"/></operator><name pos:line="7" pos:column="44">max<pos:position pos:line="7" pos:column="47"/></name></name> <operator pos:line="7" pos:column="48">&lt;<pos:position pos:line="7" pos:column="52"/></operator> <name pos:line="7" pos:column="50">value<pos:position pos:line="7" pos:column="55"/></name><operator pos:line="7" pos:column="55">)<pos:position pos:line="7" pos:column="56"/></operator></expr>)<pos:position pos:line="7" pos:column="57"/></condition><then pos:line="7" pos:column="57">
		<block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="17">ret<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">=<pos:position pos:line="8" pos:column="22"/></operator> <literal type="number" pos:line="8" pos:column="23">1<pos:position pos:line="8" pos:column="24"/></literal></expr>;<pos:position pos:line="8" pos:column="25"/></expr_stmt></block></then></if>

	<return pos:line="10" pos:column="9">return <expr><operator pos:line="10" pos:column="16">(<pos:position pos:line="10" pos:column="17"/></operator><ternary><condition><expr><operator pos:line="10" pos:column="17">(<pos:position pos:line="10" pos:column="18"/></operator><operator pos:line="10" pos:column="18">(<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="19">ret<pos:position pos:line="10" pos:column="22"/></name> <operator pos:line="10" pos:column="23">-<pos:position pos:line="10" pos:column="24"/></operator> <name><name pos:line="10" pos:column="25">range<pos:position pos:line="10" pos:column="30"/></name><operator pos:line="10" pos:column="30">-&gt;<pos:position pos:line="10" pos:column="35"/></operator><name pos:line="10" pos:column="32">invert<pos:position pos:line="10" pos:column="38"/></name></name><operator pos:line="10" pos:column="38">)<pos:position pos:line="10" pos:column="39"/></operator> <operator pos:line="10" pos:column="40">==<pos:position pos:line="10" pos:column="42"/></operator> <literal type="number" pos:line="10" pos:column="43">0<pos:position pos:line="10" pos:column="44"/></literal><operator pos:line="10" pos:column="44">)<pos:position pos:line="10" pos:column="45"/></operator></expr> ?<pos:position pos:line="10" pos:column="47"/></condition><then pos:line="10" pos:column="47"> <expr><literal type="number" pos:line="10" pos:column="48">0<pos:position pos:line="10" pos:column="49"/></literal></expr> <pos:position pos:line="10" pos:column="50"/></then><else pos:line="10" pos:column="50">: <expr><literal type="number" pos:line="10" pos:column="52">1<pos:position pos:line="10" pos:column="53"/></literal></expr></else></ternary><operator pos:line="10" pos:column="53">)<pos:position pos:line="10" pos:column="54"/></operator></expr>;<pos:position pos:line="10" pos:column="55"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

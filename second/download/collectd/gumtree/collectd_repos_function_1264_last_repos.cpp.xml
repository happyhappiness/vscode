<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1264_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bson_t<pos:position pos:line="1" pos:column="14"/></name> <modifier pos:line="1" pos:column="15">*<pos:position pos:line="1" pos:column="16"/></modifier></type><name pos:line="1" pos:column="16">wm_create_bson<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">data_set_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">ds<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="53">/* {{{ */</comment>
                              <parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name pos:line="2" pos:column="37">value_list_t<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">vl<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="55">_Bool<pos:position pos:line="2" pos:column="60"/></name></type> <name pos:line="2" pos:column="61">store_rates<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="73"/></parameter_list> <block pos:line="2" pos:column="74">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">bson_t<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">ret<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">bson_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">subarray<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">gauge_t<pos:position pos:line="5" pos:column="10"/></name> <modifier pos:line="5" pos:column="11">*<pos:position pos:line="5" pos:column="12"/></modifier></type><name pos:line="5" pos:column="12">rates<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">ret<pos:position pos:line="7" pos:column="6"/></name> <operator pos:line="7" pos:column="7">=<pos:position pos:line="7" pos:column="8"/></operator> <call><name pos:line="7" pos:column="9">bson_new<pos:position pos:line="7" pos:column="17"/></name><argument_list pos:line="7" pos:column="17">()<pos:position pos:line="7" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="20"/></expr_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">!<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">ret<pos:position pos:line="8" pos:column="11"/></name></expr>)<pos:position pos:line="8" pos:column="12"/></condition><then pos:line="8" pos:column="12"> <block pos:line="8" pos:column="13">{
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">ERROR<pos:position pos:line="9" pos:column="10"/></name><argument_list pos:line="9" pos:column="10">(<argument><expr><literal type="string" pos:line="9" pos:column="11">"write_mongodb plugin: bson_new failed."<pos:position pos:line="9" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="53"/></expr_stmt>
    <return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">NULL<pos:position pos:line="10" pos:column="16"/></name></expr>;<pos:position pos:line="10" pos:column="17"/></return>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>

  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">store_rates<pos:position pos:line="13" pos:column="18"/></name></expr>)<pos:position pos:line="13" pos:column="19"/></condition><then pos:line="13" pos:column="19"> <block pos:line="13" pos:column="20">{
    <expr_stmt><expr><name pos:line="14" pos:column="5">rates<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <call><name pos:line="14" pos:column="13">uc_get_rate<pos:position pos:line="14" pos:column="24"/></name><argument_list pos:line="14" pos:column="24">(<argument><expr><name pos:line="14" pos:column="25">ds<pos:position pos:line="14" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="29">vl<pos:position pos:line="14" pos:column="31"/></name></expr></argument>)<pos:position pos:line="14" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="33"/></expr_stmt>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">rates<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">==<pos:position pos:line="15" pos:column="17"/></operator> <name pos:line="15" pos:column="18">NULL<pos:position pos:line="15" pos:column="22"/></name></expr>)<pos:position pos:line="15" pos:column="23"/></condition><then pos:line="15" pos:column="23"> <block pos:line="15" pos:column="24">{
      <expr_stmt><expr><call><name pos:line="16" pos:column="7">ERROR<pos:position pos:line="16" pos:column="12"/></name><argument_list pos:line="16" pos:column="12">(<argument><expr><literal type="string" pos:line="16" pos:column="13">"write_mongodb plugin: uc_get_rate() failed."<pos:position pos:line="16" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="60"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="17" pos:column="7">bson_destroy<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">(<argument><expr><name pos:line="17" pos:column="20">ret<pos:position pos:line="17" pos:column="23"/></name></expr></argument>)<pos:position pos:line="17" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="25"/></expr_stmt>
      <return pos:line="18" pos:column="7">return <expr><name pos:line="18" pos:column="14">NULL<pos:position pos:line="18" pos:column="18"/></name></expr>;<pos:position pos:line="18" pos:column="19"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>
  }<pos:position pos:line="20" pos:column="4"/></block></then> <else pos:line="20" pos:column="5">else <block pos:line="20" pos:column="10">{
    <expr_stmt><expr><name pos:line="21" pos:column="5">rates<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">=<pos:position pos:line="21" pos:column="12"/></operator> <name pos:line="21" pos:column="13">NULL<pos:position pos:line="21" pos:column="17"/></name></expr>;<pos:position pos:line="21" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="22" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="24" pos:column="3">BSON_APPEND_DATE_TIME<pos:position pos:line="24" pos:column="24"/></name><argument_list pos:line="24" pos:column="24">(<argument><expr><name pos:line="24" pos:column="25">ret<pos:position pos:line="24" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="30">"timestamp"<pos:position pos:line="24" pos:column="41"/></literal></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="43">CDTIME_T_TO_MS<pos:position pos:line="24" pos:column="57"/></name><argument_list pos:line="24" pos:column="57">(<argument><expr><name><name pos:line="24" pos:column="58">vl<pos:position pos:line="24" pos:column="60"/></name><operator pos:line="24" pos:column="60">-&gt;<pos:position pos:line="24" pos:column="65"/></operator><name pos:line="24" pos:column="62">time<pos:position pos:line="24" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="69"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">BSON_APPEND_UTF8<pos:position pos:line="25" pos:column="19"/></name><argument_list pos:line="25" pos:column="19">(<argument><expr><name pos:line="25" pos:column="20">ret<pos:position pos:line="25" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="25">"host"<pos:position pos:line="25" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="33">vl<pos:position pos:line="25" pos:column="35"/></name><operator pos:line="25" pos:column="35">-&gt;<pos:position pos:line="25" pos:column="40"/></operator><name pos:line="25" pos:column="37">host<pos:position pos:line="25" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="26" pos:column="3">BSON_APPEND_UTF8<pos:position pos:line="26" pos:column="19"/></name><argument_list pos:line="26" pos:column="19">(<argument><expr><name pos:line="26" pos:column="20">ret<pos:position pos:line="26" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="25">"plugin"<pos:position pos:line="26" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="35">vl<pos:position pos:line="26" pos:column="37"/></name><operator pos:line="26" pos:column="37">-&gt;<pos:position pos:line="26" pos:column="42"/></operator><name pos:line="26" pos:column="39">plugin<pos:position pos:line="26" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="47"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="27" pos:column="3">BSON_APPEND_UTF8<pos:position pos:line="27" pos:column="19"/></name><argument_list pos:line="27" pos:column="19">(<argument><expr><name pos:line="27" pos:column="20">ret<pos:position pos:line="27" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="25">"plugin_instance"<pos:position pos:line="27" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="44">vl<pos:position pos:line="27" pos:column="46"/></name><operator pos:line="27" pos:column="46">-&gt;<pos:position pos:line="27" pos:column="51"/></operator><name pos:line="27" pos:column="48">plugin_instance<pos:position pos:line="27" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="65"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="28" pos:column="3">BSON_APPEND_UTF8<pos:position pos:line="28" pos:column="19"/></name><argument_list pos:line="28" pos:column="19">(<argument><expr><name pos:line="28" pos:column="20">ret<pos:position pos:line="28" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="25">"type"<pos:position pos:line="28" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="33">vl<pos:position pos:line="28" pos:column="35"/></name><operator pos:line="28" pos:column="35">-&gt;<pos:position pos:line="28" pos:column="40"/></operator><name pos:line="28" pos:column="37">type<pos:position pos:line="28" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="29" pos:column="3">BSON_APPEND_UTF8<pos:position pos:line="29" pos:column="19"/></name><argument_list pos:line="29" pos:column="19">(<argument><expr><name pos:line="29" pos:column="20">ret<pos:position pos:line="29" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="25">"type_instance"<pos:position pos:line="29" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="42">vl<pos:position pos:line="29" pos:column="44"/></name><operator pos:line="29" pos:column="44">-&gt;<pos:position pos:line="29" pos:column="49"/></operator><name pos:line="29" pos:column="46">type_instance<pos:position pos:line="29" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="61"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="31" pos:column="3">BSON_APPEND_ARRAY_BEGIN<pos:position pos:line="31" pos:column="26"/></name><argument_list pos:line="31" pos:column="26">(<argument><expr><name pos:line="31" pos:column="27">ret<pos:position pos:line="31" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="32">"values"<pos:position pos:line="31" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="31" pos:column="42">&amp;<pos:position pos:line="31" pos:column="47"/></operator><name pos:line="31" pos:column="43">subarray<pos:position pos:line="31" pos:column="51"/></name></expr></argument>)<pos:position pos:line="31" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="53"/></expr_stmt> <comment type="block" pos:line="31" pos:column="54">/* {{{ */</comment>
  <for pos:line="32" pos:column="3">for <control pos:line="32" pos:column="7">(<init><decl><type><name pos:line="32" pos:column="8">size_t<pos:position pos:line="32" pos:column="14"/></name></type> <name pos:line="32" pos:column="15">i<pos:position pos:line="32" pos:column="16"/></name> <init pos:line="32" pos:column="17">= <expr><literal type="number" pos:line="32" pos:column="19">0<pos:position pos:line="32" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="32" pos:column="21"/></init> <condition><expr><name pos:line="32" pos:column="22">i<pos:position pos:line="32" pos:column="23"/></name> <operator pos:line="32" pos:column="24">&lt;<pos:position pos:line="32" pos:column="28"/></operator> <name><name pos:line="32" pos:column="26">ds<pos:position pos:line="32" pos:column="28"/></name><operator pos:line="32" pos:column="28">-&gt;<pos:position pos:line="32" pos:column="33"/></operator><name pos:line="32" pos:column="30">ds_num<pos:position pos:line="32" pos:column="36"/></name></name></expr>;<pos:position pos:line="32" pos:column="37"/></condition> <incr><expr><name pos:line="32" pos:column="38">i<pos:position pos:line="32" pos:column="39"/></name><operator pos:line="32" pos:column="39">++<pos:position pos:line="32" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="32" pos:column="42"/></control> <block pos:line="32" pos:column="43">{
    <decl_stmt><decl><type><name pos:line="33" pos:column="5">char<pos:position pos:line="33" pos:column="9"/></name></type> <name><name pos:line="33" pos:column="10">key<pos:position pos:line="33" pos:column="13"/></name><index pos:line="33" pos:column="13">[<expr><literal type="number" pos:line="33" pos:column="14">16<pos:position pos:line="33" pos:column="16"/></literal></expr>]<pos:position pos:line="33" pos:column="17"/></index></name></decl>;<pos:position pos:line="33" pos:column="18"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="35" pos:column="5">snprintf<pos:position pos:line="35" pos:column="13"/></name><argument_list pos:line="35" pos:column="13">(<argument><expr><name pos:line="35" pos:column="14">key<pos:position pos:line="35" pos:column="17"/></name></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="19">sizeof<argument_list pos:line="35" pos:column="25">(<argument><expr><name pos:line="35" pos:column="26">key<pos:position pos:line="35" pos:column="29"/></name></expr></argument>)<pos:position pos:line="35" pos:column="30"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="32">"%zu"<pos:position pos:line="35" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="39">i<pos:position pos:line="35" pos:column="40"/></name></expr></argument>)<pos:position pos:line="35" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="42"/></expr_stmt>

    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name><name pos:line="37" pos:column="9">ds<pos:position pos:line="37" pos:column="11"/></name><operator pos:line="37" pos:column="11">-&gt;<pos:position pos:line="37" pos:column="16"/></operator><name pos:line="37" pos:column="13">ds<pos:position pos:line="37" pos:column="15"/></name><index pos:line="37" pos:column="15">[<expr><name pos:line="37" pos:column="16">i<pos:position pos:line="37" pos:column="17"/></name></expr>]<pos:position pos:line="37" pos:column="18"/></index></name><operator pos:line="37" pos:column="18">.<pos:position pos:line="37" pos:column="19"/></operator><name pos:line="37" pos:column="19">type<pos:position pos:line="37" pos:column="23"/></name> <operator pos:line="37" pos:column="24">==<pos:position pos:line="37" pos:column="26"/></operator> <name pos:line="37" pos:column="27">DS_TYPE_GAUGE<pos:position pos:line="37" pos:column="40"/></name></expr>)<pos:position pos:line="37" pos:column="41"/></condition><then pos:line="37" pos:column="41">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="7">BSON_APPEND_DOUBLE<pos:position pos:line="38" pos:column="25"/></name><argument_list pos:line="38" pos:column="25">(<argument><expr><operator pos:line="38" pos:column="26">&amp;<pos:position pos:line="38" pos:column="31"/></operator><name pos:line="38" pos:column="27">subarray<pos:position pos:line="38" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="37">key<pos:position pos:line="38" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="42">vl<pos:position pos:line="38" pos:column="44"/></name><operator pos:line="38" pos:column="44">-&gt;<pos:position pos:line="38" pos:column="49"/></operator><name pos:line="38" pos:column="46">values<pos:position pos:line="38" pos:column="52"/></name><index pos:line="38" pos:column="52">[<expr><name pos:line="38" pos:column="53">i<pos:position pos:line="38" pos:column="54"/></name></expr>]<pos:position pos:line="38" pos:column="55"/></index></name><operator pos:line="38" pos:column="55">.<pos:position pos:line="38" pos:column="56"/></operator><name pos:line="38" pos:column="56">gauge<pos:position pos:line="38" pos:column="61"/></name></expr></argument>)<pos:position pos:line="38" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="63"/></expr_stmt></block></then>
    <elseif pos:line="39" pos:column="5">else <if pos:line="39" pos:column="10">if <condition pos:line="39" pos:column="13">(<expr><name pos:line="39" pos:column="14">store_rates<pos:position pos:line="39" pos:column="25"/></name></expr>)<pos:position pos:line="39" pos:column="26"/></condition><then pos:line="39" pos:column="26">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="7">BSON_APPEND_DOUBLE<pos:position pos:line="40" pos:column="25"/></name><argument_list pos:line="40" pos:column="25">(<argument><expr><operator pos:line="40" pos:column="26">&amp;<pos:position pos:line="40" pos:column="31"/></operator><name pos:line="40" pos:column="27">subarray<pos:position pos:line="40" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="37">key<pos:position pos:line="40" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="42">(<pos:position pos:line="40" pos:column="43"/></operator><name pos:line="40" pos:column="43">double<pos:position pos:line="40" pos:column="49"/></name><operator pos:line="40" pos:column="49">)<pos:position pos:line="40" pos:column="50"/></operator><name><name pos:line="40" pos:column="50">rates<pos:position pos:line="40" pos:column="55"/></name><index pos:line="40" pos:column="55">[<expr><name pos:line="40" pos:column="56">i<pos:position pos:line="40" pos:column="57"/></name></expr>]<pos:position pos:line="40" pos:column="58"/></index></name></expr></argument>)<pos:position pos:line="40" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="60"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="41" pos:column="5">else <if pos:line="41" pos:column="10">if <condition pos:line="41" pos:column="13">(<expr><name><name pos:line="41" pos:column="14">ds<pos:position pos:line="41" pos:column="16"/></name><operator pos:line="41" pos:column="16">-&gt;<pos:position pos:line="41" pos:column="21"/></operator><name pos:line="41" pos:column="18">ds<pos:position pos:line="41" pos:column="20"/></name><index pos:line="41" pos:column="20">[<expr><name pos:line="41" pos:column="21">i<pos:position pos:line="41" pos:column="22"/></name></expr>]<pos:position pos:line="41" pos:column="23"/></index></name><operator pos:line="41" pos:column="23">.<pos:position pos:line="41" pos:column="24"/></operator><name pos:line="41" pos:column="24">type<pos:position pos:line="41" pos:column="28"/></name> <operator pos:line="41" pos:column="29">==<pos:position pos:line="41" pos:column="31"/></operator> <name pos:line="41" pos:column="32">DS_TYPE_COUNTER<pos:position pos:line="41" pos:column="47"/></name></expr>)<pos:position pos:line="41" pos:column="48"/></condition><then pos:line="41" pos:column="48">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="7">BSON_APPEND_INT64<pos:position pos:line="42" pos:column="24"/></name><argument_list pos:line="42" pos:column="24">(<argument><expr><operator pos:line="42" pos:column="25">&amp;<pos:position pos:line="42" pos:column="30"/></operator><name pos:line="42" pos:column="26">subarray<pos:position pos:line="42" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="36">key<pos:position pos:line="42" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="41">vl<pos:position pos:line="42" pos:column="43"/></name><operator pos:line="42" pos:column="43">-&gt;<pos:position pos:line="42" pos:column="48"/></operator><name pos:line="42" pos:column="45">values<pos:position pos:line="42" pos:column="51"/></name><index pos:line="42" pos:column="51">[<expr><name pos:line="42" pos:column="52">i<pos:position pos:line="42" pos:column="53"/></name></expr>]<pos:position pos:line="42" pos:column="54"/></index></name><operator pos:line="42" pos:column="54">.<pos:position pos:line="42" pos:column="55"/></operator><name pos:line="42" pos:column="55">counter<pos:position pos:line="42" pos:column="62"/></name></expr></argument>)<pos:position pos:line="42" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="64"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="43" pos:column="5">else <if pos:line="43" pos:column="10">if <condition pos:line="43" pos:column="13">(<expr><name><name pos:line="43" pos:column="14">ds<pos:position pos:line="43" pos:column="16"/></name><operator pos:line="43" pos:column="16">-&gt;<pos:position pos:line="43" pos:column="21"/></operator><name pos:line="43" pos:column="18">ds<pos:position pos:line="43" pos:column="20"/></name><index pos:line="43" pos:column="20">[<expr><name pos:line="43" pos:column="21">i<pos:position pos:line="43" pos:column="22"/></name></expr>]<pos:position pos:line="43" pos:column="23"/></index></name><operator pos:line="43" pos:column="23">.<pos:position pos:line="43" pos:column="24"/></operator><name pos:line="43" pos:column="24">type<pos:position pos:line="43" pos:column="28"/></name> <operator pos:line="43" pos:column="29">==<pos:position pos:line="43" pos:column="31"/></operator> <name pos:line="43" pos:column="32">DS_TYPE_DERIVE<pos:position pos:line="43" pos:column="46"/></name></expr>)<pos:position pos:line="43" pos:column="47"/></condition><then pos:line="43" pos:column="47">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="7">BSON_APPEND_INT64<pos:position pos:line="44" pos:column="24"/></name><argument_list pos:line="44" pos:column="24">(<argument><expr><operator pos:line="44" pos:column="25">&amp;<pos:position pos:line="44" pos:column="30"/></operator><name pos:line="44" pos:column="26">subarray<pos:position pos:line="44" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="36">key<pos:position pos:line="44" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="41">vl<pos:position pos:line="44" pos:column="43"/></name><operator pos:line="44" pos:column="43">-&gt;<pos:position pos:line="44" pos:column="48"/></operator><name pos:line="44" pos:column="45">values<pos:position pos:line="44" pos:column="51"/></name><index pos:line="44" pos:column="51">[<expr><name pos:line="44" pos:column="52">i<pos:position pos:line="44" pos:column="53"/></name></expr>]<pos:position pos:line="44" pos:column="54"/></index></name><operator pos:line="44" pos:column="54">.<pos:position pos:line="44" pos:column="55"/></operator><name pos:line="44" pos:column="55">derive<pos:position pos:line="44" pos:column="61"/></name></expr></argument>)<pos:position pos:line="44" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="63"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="45" pos:column="5">else <if pos:line="45" pos:column="10">if <condition pos:line="45" pos:column="13">(<expr><name><name pos:line="45" pos:column="14">ds<pos:position pos:line="45" pos:column="16"/></name><operator pos:line="45" pos:column="16">-&gt;<pos:position pos:line="45" pos:column="21"/></operator><name pos:line="45" pos:column="18">ds<pos:position pos:line="45" pos:column="20"/></name><index pos:line="45" pos:column="20">[<expr><name pos:line="45" pos:column="21">i<pos:position pos:line="45" pos:column="22"/></name></expr>]<pos:position pos:line="45" pos:column="23"/></index></name><operator pos:line="45" pos:column="23">.<pos:position pos:line="45" pos:column="24"/></operator><name pos:line="45" pos:column="24">type<pos:position pos:line="45" pos:column="28"/></name> <operator pos:line="45" pos:column="29">==<pos:position pos:line="45" pos:column="31"/></operator> <name pos:line="45" pos:column="32">DS_TYPE_ABSOLUTE<pos:position pos:line="45" pos:column="48"/></name></expr>)<pos:position pos:line="45" pos:column="49"/></condition><then pos:line="45" pos:column="49">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="7">BSON_APPEND_INT64<pos:position pos:line="46" pos:column="24"/></name><argument_list pos:line="46" pos:column="24">(<argument><expr><operator pos:line="46" pos:column="25">&amp;<pos:position pos:line="46" pos:column="30"/></operator><name pos:line="46" pos:column="26">subarray<pos:position pos:line="46" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="36">key<pos:position pos:line="46" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="41">vl<pos:position pos:line="46" pos:column="43"/></name><operator pos:line="46" pos:column="43">-&gt;<pos:position pos:line="46" pos:column="48"/></operator><name pos:line="46" pos:column="45">values<pos:position pos:line="46" pos:column="51"/></name><index pos:line="46" pos:column="51">[<expr><name pos:line="46" pos:column="52">i<pos:position pos:line="46" pos:column="53"/></name></expr>]<pos:position pos:line="46" pos:column="54"/></index></name><operator pos:line="46" pos:column="54">.<pos:position pos:line="46" pos:column="55"/></operator><name pos:line="46" pos:column="55">absolute<pos:position pos:line="46" pos:column="63"/></name></expr></argument>)<pos:position pos:line="46" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="65"/></expr_stmt></block></then></if></elseif>
    <else pos:line="47" pos:column="5">else <block pos:line="47" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="48" pos:column="7">ERROR<pos:position pos:line="48" pos:column="12"/></name><argument_list pos:line="48" pos:column="12">(<argument><expr><literal type="string" pos:line="48" pos:column="13">"write_mongodb plugin: Unknown ds_type %d for index %zu"<pos:position pos:line="48" pos:column="69"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="49" pos:column="13">ds<pos:position pos:line="49" pos:column="15"/></name><operator pos:line="49" pos:column="15">-&gt;<pos:position pos:line="49" pos:column="20"/></operator><name pos:line="49" pos:column="17">ds<pos:position pos:line="49" pos:column="19"/></name><index pos:line="49" pos:column="19">[<expr><name pos:line="49" pos:column="20">i<pos:position pos:line="49" pos:column="21"/></name></expr>]<pos:position pos:line="49" pos:column="22"/></index></name><operator pos:line="49" pos:column="22">.<pos:position pos:line="49" pos:column="23"/></operator><name pos:line="49" pos:column="23">type<pos:position pos:line="49" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="29">i<pos:position pos:line="49" pos:column="30"/></name></expr></argument>)<pos:position pos:line="49" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="50" pos:column="7">bson_destroy<pos:position pos:line="50" pos:column="19"/></name><argument_list pos:line="50" pos:column="19">(<argument><expr><name pos:line="50" pos:column="20">ret<pos:position pos:line="50" pos:column="23"/></name></expr></argument>)<pos:position pos:line="50" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="25"/></expr_stmt>
      <return pos:line="51" pos:column="7">return <expr><name pos:line="51" pos:column="14">NULL<pos:position pos:line="51" pos:column="18"/></name></expr>;<pos:position pos:line="51" pos:column="19"/></return>
    }<pos:position pos:line="52" pos:column="6"/></block></else></if>
  }<pos:position pos:line="53" pos:column="4"/></block></for>
  <expr_stmt><expr><call><name pos:line="54" pos:column="3">bson_append_array_end<pos:position pos:line="54" pos:column="24"/></name><argument_list pos:line="54" pos:column="24">(<argument><expr><name pos:line="54" pos:column="25">ret<pos:position pos:line="54" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="30">&amp;<pos:position pos:line="54" pos:column="35"/></operator><name pos:line="54" pos:column="31">subarray<pos:position pos:line="54" pos:column="39"/></name></expr></argument>)<pos:position pos:line="54" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="41"/></expr_stmt> <comment type="block" pos:line="54" pos:column="42">/* }}} values */</comment>

  <expr_stmt><expr><call><name pos:line="56" pos:column="3">BSON_APPEND_ARRAY_BEGIN<pos:position pos:line="56" pos:column="26"/></name><argument_list pos:line="56" pos:column="26">(<argument><expr><name pos:line="56" pos:column="27">ret<pos:position pos:line="56" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="32">"dstypes"<pos:position pos:line="56" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="56" pos:column="43">&amp;<pos:position pos:line="56" pos:column="48"/></operator><name pos:line="56" pos:column="44">subarray<pos:position pos:line="56" pos:column="52"/></name></expr></argument>)<pos:position pos:line="56" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="54"/></expr_stmt> <comment type="block" pos:line="56" pos:column="55">/* {{{ */</comment>
  <for pos:line="57" pos:column="3">for <control pos:line="57" pos:column="7">(<init><decl><type><name pos:line="57" pos:column="8">size_t<pos:position pos:line="57" pos:column="14"/></name></type> <name pos:line="57" pos:column="15">i<pos:position pos:line="57" pos:column="16"/></name> <init pos:line="57" pos:column="17">= <expr><literal type="number" pos:line="57" pos:column="19">0<pos:position pos:line="57" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="57" pos:column="21"/></init> <condition><expr><name pos:line="57" pos:column="22">i<pos:position pos:line="57" pos:column="23"/></name> <operator pos:line="57" pos:column="24">&lt;<pos:position pos:line="57" pos:column="28"/></operator> <name><name pos:line="57" pos:column="26">ds<pos:position pos:line="57" pos:column="28"/></name><operator pos:line="57" pos:column="28">-&gt;<pos:position pos:line="57" pos:column="33"/></operator><name pos:line="57" pos:column="30">ds_num<pos:position pos:line="57" pos:column="36"/></name></name></expr>;<pos:position pos:line="57" pos:column="37"/></condition> <incr><expr><name pos:line="57" pos:column="38">i<pos:position pos:line="57" pos:column="39"/></name><operator pos:line="57" pos:column="39">++<pos:position pos:line="57" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="57" pos:column="42"/></control> <block pos:line="57" pos:column="43">{
    <decl_stmt><decl><type><name pos:line="58" pos:column="5">char<pos:position pos:line="58" pos:column="9"/></name></type> <name><name pos:line="58" pos:column="10">key<pos:position pos:line="58" pos:column="13"/></name><index pos:line="58" pos:column="13">[<expr><literal type="number" pos:line="58" pos:column="14">16<pos:position pos:line="58" pos:column="16"/></literal></expr>]<pos:position pos:line="58" pos:column="17"/></index></name></decl>;<pos:position pos:line="58" pos:column="18"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="60" pos:column="5">snprintf<pos:position pos:line="60" pos:column="13"/></name><argument_list pos:line="60" pos:column="13">(<argument><expr><name pos:line="60" pos:column="14">key<pos:position pos:line="60" pos:column="17"/></name></expr></argument>, <argument><expr><sizeof pos:line="60" pos:column="19">sizeof<argument_list pos:line="60" pos:column="25">(<argument><expr><name pos:line="60" pos:column="26">key<pos:position pos:line="60" pos:column="29"/></name></expr></argument>)<pos:position pos:line="60" pos:column="30"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="32">"%zu"<pos:position pos:line="60" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="60" pos:column="39">i<pos:position pos:line="60" pos:column="40"/></name></expr></argument>)<pos:position pos:line="60" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="42"/></expr_stmt>

    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><name pos:line="62" pos:column="9">store_rates<pos:position pos:line="62" pos:column="20"/></name></expr>)<pos:position pos:line="62" pos:column="21"/></condition><then pos:line="62" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="63" pos:column="7">BSON_APPEND_UTF8<pos:position pos:line="63" pos:column="23"/></name><argument_list pos:line="63" pos:column="23">(<argument><expr><operator pos:line="63" pos:column="24">&amp;<pos:position pos:line="63" pos:column="29"/></operator><name pos:line="63" pos:column="25">subarray<pos:position pos:line="63" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="35">key<pos:position pos:line="63" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="40">"gauge"<pos:position pos:line="63" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="49"/></expr_stmt></block></then>
    <else pos:line="64" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="65" pos:column="7">BSON_APPEND_UTF8<pos:position pos:line="65" pos:column="23"/></name><argument_list pos:line="65" pos:column="23">(<argument><expr><operator pos:line="65" pos:column="24">&amp;<pos:position pos:line="65" pos:column="29"/></operator><name pos:line="65" pos:column="25">subarray<pos:position pos:line="65" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="35">key<pos:position pos:line="65" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="65" pos:column="40">DS_TYPE_TO_STRING<pos:position pos:line="65" pos:column="57"/></name><argument_list pos:line="65" pos:column="57">(<argument><expr><name><name pos:line="65" pos:column="58">ds<pos:position pos:line="65" pos:column="60"/></name><operator pos:line="65" pos:column="60">-&gt;<pos:position pos:line="65" pos:column="65"/></operator><name pos:line="65" pos:column="62">ds<pos:position pos:line="65" pos:column="64"/></name><index pos:line="65" pos:column="64">[<expr><name pos:line="65" pos:column="65">i<pos:position pos:line="65" pos:column="66"/></name></expr>]<pos:position pos:line="65" pos:column="67"/></index></name><operator pos:line="65" pos:column="67">.<pos:position pos:line="65" pos:column="68"/></operator><name pos:line="65" pos:column="68">type<pos:position pos:line="65" pos:column="72"/></name></expr></argument>)<pos:position pos:line="65" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="65" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="75"/></expr_stmt></block></else></if>
  }<pos:position pos:line="66" pos:column="4"/></block></for>
  <expr_stmt><expr><call><name pos:line="67" pos:column="3">bson_append_array_end<pos:position pos:line="67" pos:column="24"/></name><argument_list pos:line="67" pos:column="24">(<argument><expr><name pos:line="67" pos:column="25">ret<pos:position pos:line="67" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="67" pos:column="30">&amp;<pos:position pos:line="67" pos:column="35"/></operator><name pos:line="67" pos:column="31">subarray<pos:position pos:line="67" pos:column="39"/></name></expr></argument>)<pos:position pos:line="67" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="41"/></expr_stmt> <comment type="block" pos:line="67" pos:column="42">/* }}} dstypes */</comment>

  <expr_stmt><expr><call><name pos:line="69" pos:column="3">BSON_APPEND_ARRAY_BEGIN<pos:position pos:line="69" pos:column="26"/></name><argument_list pos:line="69" pos:column="26">(<argument><expr><name pos:line="69" pos:column="27">ret<pos:position pos:line="69" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="32">"dsnames"<pos:position pos:line="69" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="69" pos:column="43">&amp;<pos:position pos:line="69" pos:column="48"/></operator><name pos:line="69" pos:column="44">subarray<pos:position pos:line="69" pos:column="52"/></name></expr></argument>)<pos:position pos:line="69" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="54"/></expr_stmt> <comment type="block" pos:line="69" pos:column="55">/* {{{ */</comment>
  <for pos:line="70" pos:column="3">for <control pos:line="70" pos:column="7">(<init><decl><type><name pos:line="70" pos:column="8">size_t<pos:position pos:line="70" pos:column="14"/></name></type> <name pos:line="70" pos:column="15">i<pos:position pos:line="70" pos:column="16"/></name> <init pos:line="70" pos:column="17">= <expr><literal type="number" pos:line="70" pos:column="19">0<pos:position pos:line="70" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="70" pos:column="21"/></init> <condition><expr><name pos:line="70" pos:column="22">i<pos:position pos:line="70" pos:column="23"/></name> <operator pos:line="70" pos:column="24">&lt;<pos:position pos:line="70" pos:column="28"/></operator> <name><name pos:line="70" pos:column="26">ds<pos:position pos:line="70" pos:column="28"/></name><operator pos:line="70" pos:column="28">-&gt;<pos:position pos:line="70" pos:column="33"/></operator><name pos:line="70" pos:column="30">ds_num<pos:position pos:line="70" pos:column="36"/></name></name></expr>;<pos:position pos:line="70" pos:column="37"/></condition> <incr><expr><name pos:line="70" pos:column="38">i<pos:position pos:line="70" pos:column="39"/></name><operator pos:line="70" pos:column="39">++<pos:position pos:line="70" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="70" pos:column="42"/></control> <block pos:line="70" pos:column="43">{
    <decl_stmt><decl><type><name pos:line="71" pos:column="5">char<pos:position pos:line="71" pos:column="9"/></name></type> <name><name pos:line="71" pos:column="10">key<pos:position pos:line="71" pos:column="13"/></name><index pos:line="71" pos:column="13">[<expr><literal type="number" pos:line="71" pos:column="14">16<pos:position pos:line="71" pos:column="16"/></literal></expr>]<pos:position pos:line="71" pos:column="17"/></index></name></decl>;<pos:position pos:line="71" pos:column="18"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="73" pos:column="5">snprintf<pos:position pos:line="73" pos:column="13"/></name><argument_list pos:line="73" pos:column="13">(<argument><expr><name pos:line="73" pos:column="14">key<pos:position pos:line="73" pos:column="17"/></name></expr></argument>, <argument><expr><sizeof pos:line="73" pos:column="19">sizeof<argument_list pos:line="73" pos:column="25">(<argument><expr><name pos:line="73" pos:column="26">key<pos:position pos:line="73" pos:column="29"/></name></expr></argument>)<pos:position pos:line="73" pos:column="30"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="32">"%zu"<pos:position pos:line="73" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="39">i<pos:position pos:line="73" pos:column="40"/></name></expr></argument>)<pos:position pos:line="73" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="74" pos:column="5">BSON_APPEND_UTF8<pos:position pos:line="74" pos:column="21"/></name><argument_list pos:line="74" pos:column="21">(<argument><expr><operator pos:line="74" pos:column="22">&amp;<pos:position pos:line="74" pos:column="27"/></operator><name pos:line="74" pos:column="23">subarray<pos:position pos:line="74" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="33">key<pos:position pos:line="74" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="38">ds<pos:position pos:line="74" pos:column="40"/></name><operator pos:line="74" pos:column="40">-&gt;<pos:position pos:line="74" pos:column="45"/></operator><name pos:line="74" pos:column="42">ds<pos:position pos:line="74" pos:column="44"/></name><index pos:line="74" pos:column="44">[<expr><name pos:line="74" pos:column="45">i<pos:position pos:line="74" pos:column="46"/></name></expr>]<pos:position pos:line="74" pos:column="47"/></index></name><operator pos:line="74" pos:column="47">.<pos:position pos:line="74" pos:column="48"/></operator><name pos:line="74" pos:column="48">name<pos:position pos:line="74" pos:column="52"/></name></expr></argument>)<pos:position pos:line="74" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="54"/></expr_stmt>
  }<pos:position pos:line="75" pos:column="4"/></block></for>
  <expr_stmt><expr><call><name pos:line="76" pos:column="3">bson_append_array_end<pos:position pos:line="76" pos:column="24"/></name><argument_list pos:line="76" pos:column="24">(<argument><expr><name pos:line="76" pos:column="25">ret<pos:position pos:line="76" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="76" pos:column="30">&amp;<pos:position pos:line="76" pos:column="35"/></operator><name pos:line="76" pos:column="31">subarray<pos:position pos:line="76" pos:column="39"/></name></expr></argument>)<pos:position pos:line="76" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="41"/></expr_stmt> <comment type="block" pos:line="76" pos:column="42">/* }}} dsnames */</comment>

  <expr_stmt><expr><call><name pos:line="78" pos:column="3">sfree<pos:position pos:line="78" pos:column="8"/></name><argument_list pos:line="78" pos:column="8">(<argument><expr><name pos:line="78" pos:column="9">rates<pos:position pos:line="78" pos:column="14"/></name></expr></argument>)<pos:position pos:line="78" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="16"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="80" pos:column="3">size_t<pos:position pos:line="80" pos:column="9"/></name></type> <name pos:line="80" pos:column="10">error_location<pos:position pos:line="80" pos:column="24"/></name></decl>;<pos:position pos:line="80" pos:column="25"/></decl_stmt>
  <if pos:line="81" pos:column="3">if <condition pos:line="81" pos:column="6">(<expr><operator pos:line="81" pos:column="7">!<pos:position pos:line="81" pos:column="8"/></operator><call><name pos:line="81" pos:column="8">bson_validate<pos:position pos:line="81" pos:column="21"/></name><argument_list pos:line="81" pos:column="21">(<argument><expr><name pos:line="81" pos:column="22">ret<pos:position pos:line="81" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="27">BSON_VALIDATE_UTF8<pos:position pos:line="81" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="81" pos:column="47">&amp;<pos:position pos:line="81" pos:column="52"/></operator><name pos:line="81" pos:column="48">error_location<pos:position pos:line="81" pos:column="62"/></name></expr></argument>)<pos:position pos:line="81" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="81" pos:column="64"/></condition><then pos:line="81" pos:column="64"> <block pos:line="81" pos:column="65">{
    <expr_stmt><expr><call><name pos:line="82" pos:column="5">ERROR<pos:position pos:line="82" pos:column="10"/></name><argument_list pos:line="82" pos:column="10">(<argument><expr><literal type="string" pos:line="82" pos:column="11">"write_mongodb plugin: Error in generated BSON document "<pos:position pos:line="82" pos:column="68"/></literal>
          <literal type="string" pos:line="83" pos:column="11">"at byte %zu"<pos:position pos:line="83" pos:column="24"/></literal></expr></argument>,
          <argument><expr><name pos:line="84" pos:column="11">error_location<pos:position pos:line="84" pos:column="25"/></name></expr></argument>)<pos:position pos:line="84" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="85" pos:column="5">bson_destroy<pos:position pos:line="85" pos:column="17"/></name><argument_list pos:line="85" pos:column="17">(<argument><expr><name pos:line="85" pos:column="18">ret<pos:position pos:line="85" pos:column="21"/></name></expr></argument>)<pos:position pos:line="85" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="23"/></expr_stmt>
    <return pos:line="86" pos:column="5">return <expr><name pos:line="86" pos:column="12">NULL<pos:position pos:line="86" pos:column="16"/></name></expr>;<pos:position pos:line="86" pos:column="17"/></return>
  }<pos:position pos:line="87" pos:column="4"/></block></then></if>

  <return pos:line="89" pos:column="3">return <expr><name pos:line="89" pos:column="10">ret<pos:position pos:line="89" pos:column="13"/></name></expr>;<pos:position pos:line="89" pos:column="14"/></return>
}<pos:position pos:line="90" pos:column="2"/></block></function></unit>

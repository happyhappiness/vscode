<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1648_collectd-4.9.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">unquote<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">orig<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">ret<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><call><name pos:line="3" pos:column="21">strdup<pos:position pos:line="3" pos:column="27"/></name> <argument_list pos:line="3" pos:column="28">(<argument><expr><name pos:line="3" pos:column="29">orig<pos:position pos:line="3" pos:column="33"/></name></expr></argument>)<pos:position pos:line="3" pos:column="34"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">len<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">ret<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">==<pos:position pos:line="7" pos:column="19"/></operator> <name pos:line="7" pos:column="20">NULL<pos:position pos:line="7" pos:column="24"/></name></expr>)<pos:position pos:line="7" pos:column="25"/></condition><then pos:line="7" pos:column="25">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><operator pos:line="8" pos:column="24">(<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="25">NULL<pos:position pos:line="8" pos:column="29"/></name><operator pos:line="8" pos:column="29">)<pos:position pos:line="8" pos:column="30"/></operator></expr>;<pos:position pos:line="8" pos:column="31"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="10" pos:column="9">len<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <call><name pos:line="10" pos:column="15">strlen<pos:position pos:line="10" pos:column="21"/></name> <argument_list pos:line="10" pos:column="22">(<argument><expr><name pos:line="10" pos:column="23">ret<pos:position pos:line="10" pos:column="26"/></name></expr></argument>)<pos:position pos:line="10" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="28"/></expr_stmt>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">(<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">len<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">&lt;<pos:position pos:line="12" pos:column="22"/></operator> <literal type="number" pos:line="12" pos:column="20">2<pos:position pos:line="12" pos:column="21"/></literal><operator pos:line="12" pos:column="21">)<pos:position pos:line="12" pos:column="22"/></operator> <operator pos:line="12" pos:column="23">||<pos:position pos:line="12" pos:column="25"/></operator> <operator pos:line="12" pos:column="26">(<pos:position pos:line="12" pos:column="27"/></operator><name><name pos:line="12" pos:column="27">ret<pos:position pos:line="12" pos:column="30"/></name><index pos:line="12" pos:column="30">[<expr><literal type="number" pos:line="12" pos:column="31">0<pos:position pos:line="12" pos:column="32"/></literal></expr>]<pos:position pos:line="12" pos:column="33"/></index></name> <operator pos:line="12" pos:column="34">!=<pos:position pos:line="12" pos:column="36"/></operator> <literal type="char" pos:line="12" pos:column="37">'"'<pos:position pos:line="12" pos:column="40"/></literal><operator pos:line="12" pos:column="40">)<pos:position pos:line="12" pos:column="41"/></operator> <operator pos:line="12" pos:column="42">||<pos:position pos:line="12" pos:column="44"/></operator> <operator pos:line="12" pos:column="45">(<pos:position pos:line="12" pos:column="46"/></operator><name><name pos:line="12" pos:column="46">ret<pos:position pos:line="12" pos:column="49"/></name><index pos:line="12" pos:column="49">[<expr><name pos:line="12" pos:column="50">len<pos:position pos:line="12" pos:column="53"/></name> <operator pos:line="12" pos:column="54">-<pos:position pos:line="12" pos:column="55"/></operator> <literal type="number" pos:line="12" pos:column="56">1<pos:position pos:line="12" pos:column="57"/></literal></expr>]<pos:position pos:line="12" pos:column="58"/></index></name> <operator pos:line="12" pos:column="59">!=<pos:position pos:line="12" pos:column="61"/></operator> <literal type="char" pos:line="12" pos:column="62">'"'<pos:position pos:line="12" pos:column="65"/></literal><operator pos:line="12" pos:column="65">)<pos:position pos:line="12" pos:column="66"/></operator></expr>)<pos:position pos:line="12" pos:column="67"/></condition><then pos:line="12" pos:column="67">
		<block type="pseudo"><return pos:line="13" pos:column="17">return <expr><operator pos:line="13" pos:column="24">(<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="25">ret<pos:position pos:line="13" pos:column="28"/></name><operator pos:line="13" pos:column="28">)<pos:position pos:line="13" pos:column="29"/></operator></expr>;<pos:position pos:line="13" pos:column="30"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="15" pos:column="9">len<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">-=<pos:position pos:line="15" pos:column="15"/></operator> <literal type="number" pos:line="15" pos:column="16">2<pos:position pos:line="15" pos:column="17"/></literal></expr>;<pos:position pos:line="15" pos:column="18"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">memmove<pos:position pos:line="16" pos:column="16"/></name> <argument_list pos:line="16" pos:column="17">(<argument><expr><name pos:line="16" pos:column="18">ret<pos:position pos:line="16" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="23">ret<pos:position pos:line="16" pos:column="26"/></name> <operator pos:line="16" pos:column="27">+<pos:position pos:line="16" pos:column="28"/></operator> <literal type="number" pos:line="16" pos:column="29">1<pos:position pos:line="16" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="32">len<pos:position pos:line="16" pos:column="35"/></name></expr></argument>)<pos:position pos:line="16" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="17" pos:column="9">ret<pos:position pos:line="17" pos:column="12"/></name><index pos:line="17" pos:column="12">[<expr><name pos:line="17" pos:column="13">len<pos:position pos:line="17" pos:column="16"/></name></expr>]<pos:position pos:line="17" pos:column="17"/></index></name> <operator pos:line="17" pos:column="18">=<pos:position pos:line="17" pos:column="19"/></operator> <literal type="char" pos:line="17" pos:column="20">'\0'<pos:position pos:line="17" pos:column="24"/></literal></expr>;<pos:position pos:line="17" pos:column="25"/></expr_stmt>

	<for pos:line="19" pos:column="9">for <control pos:line="19" pos:column="13">(<init><expr><name pos:line="19" pos:column="14">i<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <literal type="number" pos:line="19" pos:column="18">0<pos:position pos:line="19" pos:column="19"/></literal></expr>;<pos:position pos:line="19" pos:column="20"/></init> <condition><expr><name pos:line="19" pos:column="21">i<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">&lt;<pos:position pos:line="19" pos:column="27"/></operator> <name pos:line="19" pos:column="25">len<pos:position pos:line="19" pos:column="28"/></name></expr>;<pos:position pos:line="19" pos:column="29"/></condition> <incr><expr><name pos:line="19" pos:column="30">i<pos:position pos:line="19" pos:column="31"/></name><operator pos:line="19" pos:column="31">++<pos:position pos:line="19" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="19" pos:column="34"/></control>
	<block pos:line="20" pos:column="9">{
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><name><name pos:line="21" pos:column="21">ret<pos:position pos:line="21" pos:column="24"/></name><index pos:line="21" pos:column="24">[<expr><name pos:line="21" pos:column="25">i<pos:position pos:line="21" pos:column="26"/></name></expr>]<pos:position pos:line="21" pos:column="27"/></index></name> <operator pos:line="21" pos:column="28">==<pos:position pos:line="21" pos:column="30"/></operator> <literal type="char" pos:line="21" pos:column="31">'\\'<pos:position pos:line="21" pos:column="35"/></literal></expr>)<pos:position pos:line="21" pos:column="36"/></condition><then pos:line="21" pos:column="36">
		<block pos:line="22" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="23" pos:column="25">memmove<pos:position pos:line="23" pos:column="32"/></name> <argument_list pos:line="23" pos:column="33">(<argument><expr><name pos:line="23" pos:column="34">ret<pos:position pos:line="23" pos:column="37"/></name> <operator pos:line="23" pos:column="38">+<pos:position pos:line="23" pos:column="39"/></operator> <name pos:line="23" pos:column="40">i<pos:position pos:line="23" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="43">ret<pos:position pos:line="23" pos:column="46"/></name> <operator pos:line="23" pos:column="47">+<pos:position pos:line="23" pos:column="48"/></operator> <operator pos:line="23" pos:column="49">(<pos:position pos:line="23" pos:column="50"/></operator><name pos:line="23" pos:column="50">i<pos:position pos:line="23" pos:column="51"/></name> <operator pos:line="23" pos:column="52">+<pos:position pos:line="23" pos:column="53"/></operator> <literal type="number" pos:line="23" pos:column="54">1<pos:position pos:line="23" pos:column="55"/></literal><operator pos:line="23" pos:column="55">)<pos:position pos:line="23" pos:column="56"/></operator></expr></argument>, <argument><expr><name pos:line="23" pos:column="58">len<pos:position pos:line="23" pos:column="61"/></name> <operator pos:line="23" pos:column="62">-<pos:position pos:line="23" pos:column="63"/></operator> <name pos:line="23" pos:column="64">i<pos:position pos:line="23" pos:column="65"/></name></expr></argument>)<pos:position pos:line="23" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="67"/></expr_stmt>
			<expr_stmt><expr><name pos:line="24" pos:column="25">len<pos:position pos:line="24" pos:column="28"/></name><operator pos:line="24" pos:column="28">--<pos:position pos:line="24" pos:column="30"/></operator></expr>;<pos:position pos:line="24" pos:column="31"/></expr_stmt>
		}<pos:position pos:line="25" pos:column="18"/></block></then></if>
	}<pos:position pos:line="26" pos:column="10"/></block></for>

	<return pos:line="28" pos:column="9">return <expr><operator pos:line="28" pos:column="16">(<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="17">ret<pos:position pos:line="28" pos:column="20"/></name><operator pos:line="28" pos:column="20">)<pos:position pos:line="28" pos:column="21"/></operator></expr>;<pos:position pos:line="28" pos:column="22"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

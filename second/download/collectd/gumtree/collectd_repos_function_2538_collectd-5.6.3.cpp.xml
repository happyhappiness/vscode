<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2538_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">format_rfc3339<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">buffer<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">size_t<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">buffer_size<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">cdtime_t<pos:position pos:line="1" pos:column="69"/></name></type> <name pos:line="1" pos:column="70">t<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="2" pos:column="27">_Bool<pos:position pos:line="2" pos:column="32"/></name></type> <name pos:line="2" pos:column="33">print_nano<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="44"/></parameter_list> <comment type="block" pos:line="2" pos:column="45">/* {{{ */</comment>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">timespec<pos:position pos:line="4" pos:column="18"/></name></name></type> <name pos:line="4" pos:column="19">t_spec<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">tm<pos:position pos:line="5" pos:column="12"/></name></name></type> <name pos:line="5" pos:column="13">t_tm<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">base<pos:position pos:line="6" pos:column="12"/></name><index pos:line="6" pos:column="12">[<expr><literal type="number" pos:line="6" pos:column="13">20<pos:position pos:line="6" pos:column="15"/></literal></expr>]<pos:position pos:line="6" pos:column="16"/></index></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt> <comment type="block" pos:line="6" pos:column="18">/* 2006-01-02T15:04:05 */</comment>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type> <name><name pos:line="7" pos:column="8">nano<pos:position pos:line="7" pos:column="12"/></name><index pos:line="7" pos:column="12">[<expr><literal type="number" pos:line="7" pos:column="13">11<pos:position pos:line="7" pos:column="15"/></literal></expr>]<pos:position pos:line="7" pos:column="16"/></index></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt> <comment type="block" pos:line="7" pos:column="18">/* .999999999 */</comment>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name></type> <name><name pos:line="8" pos:column="8">zone<pos:position pos:line="8" pos:column="12"/></name><index pos:line="8" pos:column="12">[<expr><literal type="number" pos:line="8" pos:column="13">7<pos:position pos:line="8" pos:column="14"/></literal></expr>]<pos:position pos:line="8" pos:column="15"/></index></name></decl>;<pos:position pos:line="8" pos:column="16"/></decl_stmt>  <comment type="block" pos:line="8" pos:column="18">/* +00:00 */</comment>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name><name pos:line="9" pos:column="9">fields<pos:position pos:line="9" pos:column="15"/></name><index pos:line="9" pos:column="15">[]<pos:position pos:line="9" pos:column="17"/></index></name> <init pos:line="9" pos:column="18">= <expr><block pos:line="9" pos:column="20">{<expr><name pos:line="9" pos:column="21">base<pos:position pos:line="9" pos:column="25"/></name></expr>, <expr><name pos:line="9" pos:column="27">nano<pos:position pos:line="9" pos:column="31"/></name></expr>, <expr><name pos:line="9" pos:column="33">zone<pos:position pos:line="9" pos:column="37"/></name></expr>}<pos:position pos:line="9" pos:column="38"/></block></expr></init></decl>;<pos:position pos:line="9" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">size_t<pos:position pos:line="10" pos:column="9"/></name></type> <name pos:line="10" pos:column="10">len<pos:position pos:line="10" pos:column="13"/></name></decl>;<pos:position pos:line="10" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">status<pos:position pos:line="11" pos:column="13"/></name></decl>;<pos:position pos:line="11" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="13" pos:column="3">CDTIME_T_TO_TIMESPEC<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><name pos:line="13" pos:column="24">t<pos:position pos:line="13" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="27">&amp;<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="28">t_spec<pos:position pos:line="13" pos:column="34"/></name></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="14" pos:column="3">NORMALIZE_TIMESPEC<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><name pos:line="14" pos:column="22">t_spec<pos:position pos:line="14" pos:column="28"/></name></expr></argument>)<pos:position pos:line="14" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="30"/></expr_stmt>

  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><call><name pos:line="16" pos:column="7">localtime_r<pos:position pos:line="16" pos:column="18"/></name><argument_list pos:line="16" pos:column="18">(<argument><expr><operator pos:line="16" pos:column="19">&amp;<pos:position pos:line="16" pos:column="24"/></operator><name><name pos:line="16" pos:column="20">t_spec<pos:position pos:line="16" pos:column="26"/></name><operator pos:line="16" pos:column="26">.<pos:position pos:line="16" pos:column="27"/></operator><name pos:line="16" pos:column="27">tv_sec<pos:position pos:line="16" pos:column="33"/></name></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="35">&amp;<pos:position pos:line="16" pos:column="40"/></operator><name pos:line="16" pos:column="36">t_tm<pos:position pos:line="16" pos:column="40"/></name></expr></argument>)<pos:position pos:line="16" pos:column="41"/></argument_list></call> <operator pos:line="16" pos:column="42">==<pos:position pos:line="16" pos:column="44"/></operator> <name pos:line="16" pos:column="45">NULL<pos:position pos:line="16" pos:column="49"/></name></expr>)<pos:position pos:line="16" pos:column="50"/></condition><then pos:line="16" pos:column="50"> <block pos:line="16" pos:column="51">{
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">char<pos:position pos:line="17" pos:column="9"/></name></type> <name><name pos:line="17" pos:column="10">errbuf<pos:position pos:line="17" pos:column="16"/></name><index pos:line="17" pos:column="16">[<expr><literal type="number" pos:line="17" pos:column="17">1024<pos:position pos:line="17" pos:column="21"/></literal></expr>]<pos:position pos:line="17" pos:column="22"/></index></name></decl>;<pos:position pos:line="17" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><name pos:line="18" pos:column="5">status<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <name pos:line="18" pos:column="14">errno<pos:position pos:line="18" pos:column="19"/></name></expr>;<pos:position pos:line="18" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">ERROR<pos:position pos:line="19" pos:column="10"/></name><argument_list pos:line="19" pos:column="10">(<argument><expr><literal type="string" pos:line="19" pos:column="11">"format_rfc3339: localtime_r failed: %s"<pos:position pos:line="19" pos:column="51"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="20" pos:column="11">sstrerror<pos:position pos:line="20" pos:column="20"/></name><argument_list pos:line="20" pos:column="20">(<argument><expr><name pos:line="20" pos:column="21">status<pos:position pos:line="20" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="29">errbuf<pos:position pos:line="20" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="37">sizeof<argument_list pos:line="20" pos:column="43">(<argument><expr><name pos:line="20" pos:column="44">errbuf<pos:position pos:line="20" pos:column="50"/></name></expr></argument>)<pos:position pos:line="20" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="54"/></expr_stmt>
    <return pos:line="21" pos:column="5">return <expr><operator pos:line="21" pos:column="12">(<pos:position pos:line="21" pos:column="13"/></operator><name pos:line="21" pos:column="13">status<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">)<pos:position pos:line="21" pos:column="20"/></operator></expr>;<pos:position pos:line="21" pos:column="21"/></return>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="24" pos:column="3">len<pos:position pos:line="24" pos:column="6"/></name> <operator pos:line="24" pos:column="7">=<pos:position pos:line="24" pos:column="8"/></operator> <call><name pos:line="24" pos:column="9">strftime<pos:position pos:line="24" pos:column="17"/></name><argument_list pos:line="24" pos:column="17">(<argument><expr><name pos:line="24" pos:column="18">base<pos:position pos:line="24" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="24">sizeof<argument_list pos:line="24" pos:column="30">(<argument><expr><name pos:line="24" pos:column="31">base<pos:position pos:line="24" pos:column="35"/></name></expr></argument>)<pos:position pos:line="24" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="38">"%Y-%m-%dT%H:%M:%S"<pos:position pos:line="24" pos:column="57"/></literal></expr></argument>, <argument><expr><operator pos:line="24" pos:column="59">&amp;<pos:position pos:line="24" pos:column="64"/></operator><name pos:line="24" pos:column="60">t_tm<pos:position pos:line="24" pos:column="64"/></name></expr></argument>)<pos:position pos:line="24" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="66"/></expr_stmt>
  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><name pos:line="25" pos:column="7">len<pos:position pos:line="25" pos:column="10"/></name> <operator pos:line="25" pos:column="11">==<pos:position pos:line="25" pos:column="13"/></operator> <literal type="number" pos:line="25" pos:column="14">0<pos:position pos:line="25" pos:column="15"/></literal></expr>)<pos:position pos:line="25" pos:column="16"/></condition><then pos:line="25" pos:column="16">
    <block type="pseudo"><return pos:line="26" pos:column="5">return <expr><name pos:line="26" pos:column="12">ENOMEM<pos:position pos:line="26" pos:column="18"/></name></expr>;<pos:position pos:line="26" pos:column="19"/></return></block></then></if>

  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name pos:line="28" pos:column="7">print_nano<pos:position pos:line="28" pos:column="17"/></name></expr>)<pos:position pos:line="28" pos:column="18"/></condition><then pos:line="28" pos:column="18">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="5">ssnprintf<pos:position pos:line="29" pos:column="14"/></name><argument_list pos:line="29" pos:column="14">(<argument><expr><name pos:line="29" pos:column="15">nano<pos:position pos:line="29" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="21">sizeof<argument_list pos:line="29" pos:column="27">(<argument><expr><name pos:line="29" pos:column="28">nano<pos:position pos:line="29" pos:column="32"/></name></expr></argument>)<pos:position pos:line="29" pos:column="33"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="35">".%09ld"<pos:position pos:line="29" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="29" pos:column="45">(<pos:position pos:line="29" pos:column="46"/></operator><name pos:line="29" pos:column="46">long<pos:position pos:line="29" pos:column="50"/></name><operator pos:line="29" pos:column="50">)<pos:position pos:line="29" pos:column="51"/></operator><name><name pos:line="29" pos:column="51">t_spec<pos:position pos:line="29" pos:column="57"/></name><operator pos:line="29" pos:column="57">.<pos:position pos:line="29" pos:column="58"/></operator><name pos:line="29" pos:column="58">tv_nsec<pos:position pos:line="29" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="67"/></expr_stmt></block></then>
  <else pos:line="30" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="5">sstrncpy<pos:position pos:line="31" pos:column="13"/></name><argument_list pos:line="31" pos:column="13">(<argument><expr><name pos:line="31" pos:column="14">nano<pos:position pos:line="31" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="20">""<pos:position pos:line="31" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="24">sizeof<argument_list pos:line="31" pos:column="30">(<argument><expr><name pos:line="31" pos:column="31">nano<pos:position pos:line="31" pos:column="35"/></name></expr></argument>)<pos:position pos:line="31" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="31" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="38"/></expr_stmt></block></else></if>

  <expr_stmt><expr><name pos:line="33" pos:column="3">status<pos:position pos:line="33" pos:column="9"/></name> <operator pos:line="33" pos:column="10">=<pos:position pos:line="33" pos:column="11"/></operator> <call><name pos:line="33" pos:column="12">format_zone<pos:position pos:line="33" pos:column="23"/></name><argument_list pos:line="33" pos:column="23">(<argument><expr><name pos:line="33" pos:column="24">zone<pos:position pos:line="33" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="30">sizeof<argument_list pos:line="33" pos:column="36">(<argument><expr><name pos:line="33" pos:column="37">zone<pos:position pos:line="33" pos:column="41"/></name></expr></argument>)<pos:position pos:line="33" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="33" pos:column="44">&amp;<pos:position pos:line="33" pos:column="49"/></operator><name pos:line="33" pos:column="45">t_tm<pos:position pos:line="33" pos:column="49"/></name></expr></argument>)<pos:position pos:line="33" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="51"/></expr_stmt>
  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><name pos:line="34" pos:column="7">status<pos:position pos:line="34" pos:column="13"/></name> <operator pos:line="34" pos:column="14">!=<pos:position pos:line="34" pos:column="16"/></operator> <literal type="number" pos:line="34" pos:column="17">0<pos:position pos:line="34" pos:column="18"/></literal></expr>)<pos:position pos:line="34" pos:column="19"/></condition><then pos:line="34" pos:column="19">
    <block type="pseudo"><return pos:line="35" pos:column="5">return <expr><name pos:line="35" pos:column="12">status<pos:position pos:line="35" pos:column="18"/></name></expr>;<pos:position pos:line="35" pos:column="19"/></return></block></then></if>

  <if pos:line="37" pos:column="3">if <condition pos:line="37" pos:column="6">(<expr><call><name pos:line="37" pos:column="7">strjoin<pos:position pos:line="37" pos:column="14"/></name><argument_list pos:line="37" pos:column="14">(<argument><expr><name pos:line="37" pos:column="15">buffer<pos:position pos:line="37" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="23">buffer_size<pos:position pos:line="37" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="36">fields<pos:position pos:line="37" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="37" pos:column="44">STATIC_ARRAY_SIZE<pos:position pos:line="37" pos:column="61"/></name><argument_list pos:line="37" pos:column="61">(<argument><expr><name pos:line="37" pos:column="62">fields<pos:position pos:line="37" pos:column="68"/></name></expr></argument>)<pos:position pos:line="37" pos:column="69"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="71">""<pos:position pos:line="37" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="74"/></argument_list></call> <operator pos:line="37" pos:column="75">&lt;<pos:position pos:line="37" pos:column="79"/></operator> <literal type="number" pos:line="37" pos:column="77">0<pos:position pos:line="37" pos:column="78"/></literal></expr>)<pos:position pos:line="37" pos:column="79"/></condition><then pos:line="37" pos:column="79">
    <block type="pseudo"><return pos:line="38" pos:column="5">return <expr><name pos:line="38" pos:column="12">ENOMEM<pos:position pos:line="38" pos:column="18"/></name></expr>;<pos:position pos:line="38" pos:column="19"/></return></block></then></if>
  <return pos:line="39" pos:column="3">return <expr><literal type="number" pos:line="39" pos:column="10">0<pos:position pos:line="39" pos:column="11"/></literal></expr>;<pos:position pos:line="39" pos:column="12"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_79_collectd-4.7.3.cpp" pos:tabs="8"><function_decl><type><name pos:line="1" pos:column="1">lt_ptr<pos:position pos:line="1" pos:column="7"/></name></type>
<name pos:line="2" pos:column="1">lt_dlsym<pos:position pos:line="2" pos:column="9"/></name> <parameter_list pos:line="2" pos:column="10">(<parameter><decl><type><name pos:line="2" pos:column="11">handle<pos:position pos:line="2" pos:column="17"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="19">symbol<pos:position pos:line="2" pos:column="25"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="26"/></parameter_list>
     <decl_stmt><decl><type><name pos:line="3" pos:column="6">lt_dlhandle<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">handle<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
     <decl_stmt><decl><type><specifier pos:line="4" pos:column="6">const<pos:position pos:line="4" pos:column="11"/></specifier> <name pos:line="4" pos:column="12">char<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">symbol<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">lensym<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type>	<name><name pos:line="7" pos:column="9">lsym<pos:position pos:line="7" pos:column="13"/></name><index pos:line="7" pos:column="13">[<expr><name pos:line="7" pos:column="14">LT_SYMBOL_LENGTH<pos:position pos:line="7" pos:column="30"/></name></expr>]<pos:position pos:line="7" pos:column="31"/></index></name></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name>	<modifier pos:line="8" pos:column="9">*<pos:position pos:line="8" pos:column="10"/></modifier></type><name pos:line="8" pos:column="10">sym<pos:position pos:line="8" pos:column="13"/></name></decl>;<pos:position pos:line="8" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">lt_ptr<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">address<pos:position pos:line="9" pos:column="17"/></name></decl>;<pos:position pos:line="9" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">lt_user_data<pos:position pos:line="10" pos:column="15"/></name></type> <name pos:line="10" pos:column="16">data<pos:position pos:line="10" pos:column="20"/></name></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><operator pos:line="12" pos:column="7">!<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">handle<pos:position pos:line="12" pos:column="14"/></name></expr>)<pos:position pos:line="12" pos:column="15"/></condition><then pos:line="12" pos:column="15">
    <block pos:line="13" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="14" pos:column="7">LT_DLMUTEX_SETERROR<pos:position pos:line="14" pos:column="26"/></name> <argument_list pos:line="14" pos:column="27">(<argument><expr><call><name pos:line="14" pos:column="28">LT_DLSTRERROR<pos:position pos:line="14" pos:column="41"/></name> <argument_list pos:line="14" pos:column="42">(<argument><expr><name pos:line="14" pos:column="43">INVALID_HANDLE<pos:position pos:line="14" pos:column="57"/></name></expr></argument>)<pos:position pos:line="14" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="60"/></expr_stmt>
      <return pos:line="15" pos:column="7">return <expr><literal type="number" pos:line="15" pos:column="14">0<pos:position pos:line="15" pos:column="15"/></literal></expr>;<pos:position pos:line="15" pos:column="16"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><operator pos:line="18" pos:column="7">!<pos:position pos:line="18" pos:column="8"/></operator><name pos:line="18" pos:column="8">symbol<pos:position pos:line="18" pos:column="14"/></name></expr>)<pos:position pos:line="18" pos:column="15"/></condition><then pos:line="18" pos:column="15">
    <block pos:line="19" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="20" pos:column="7">LT_DLMUTEX_SETERROR<pos:position pos:line="20" pos:column="26"/></name> <argument_list pos:line="20" pos:column="27">(<argument><expr><call><name pos:line="20" pos:column="28">LT_DLSTRERROR<pos:position pos:line="20" pos:column="41"/></name> <argument_list pos:line="20" pos:column="42">(<argument><expr><name pos:line="20" pos:column="43">SYMBOL_NOT_FOUND<pos:position pos:line="20" pos:column="59"/></name></expr></argument>)<pos:position pos:line="20" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="62"/></expr_stmt>
      <return pos:line="21" pos:column="7">return <expr><literal type="number" pos:line="21" pos:column="14">0<pos:position pos:line="21" pos:column="15"/></literal></expr>;<pos:position pos:line="21" pos:column="16"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

  <expr_stmt><expr><name pos:line="24" pos:column="3">lensym<pos:position pos:line="24" pos:column="9"/></name> <operator pos:line="24" pos:column="10">=<pos:position pos:line="24" pos:column="11"/></operator> <call><name pos:line="24" pos:column="12">LT_STRLEN<pos:position pos:line="24" pos:column="21"/></name> <argument_list pos:line="24" pos:column="22">(<argument><expr><name pos:line="24" pos:column="23">symbol<pos:position pos:line="24" pos:column="29"/></name></expr></argument>)<pos:position pos:line="24" pos:column="30"/></argument_list></call> <operator pos:line="24" pos:column="31">+<pos:position pos:line="24" pos:column="32"/></operator> <call><name pos:line="24" pos:column="33">LT_STRLEN<pos:position pos:line="24" pos:column="42"/></name> <argument_list pos:line="24" pos:column="43">(<argument><expr><name><name pos:line="24" pos:column="44">handle<pos:position pos:line="24" pos:column="50"/></name><operator pos:line="24" pos:column="50">-&gt;<pos:position pos:line="24" pos:column="55"/></operator><name pos:line="24" pos:column="52">loader<pos:position pos:line="24" pos:column="58"/></name><operator pos:line="24" pos:column="58">-&gt;<pos:position pos:line="24" pos:column="63"/></operator><name pos:line="24" pos:column="60">sym_prefix<pos:position pos:line="24" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="71"/></argument_list></call>
					<operator pos:line="25" pos:column="41">+<pos:position pos:line="25" pos:column="42"/></operator> <call><name pos:line="25" pos:column="43">LT_STRLEN<pos:position pos:line="25" pos:column="52"/></name> <argument_list pos:line="25" pos:column="53">(<argument><expr><name><name pos:line="25" pos:column="54">handle<pos:position pos:line="25" pos:column="60"/></name><operator pos:line="25" pos:column="60">-&gt;<pos:position pos:line="25" pos:column="65"/></operator><name pos:line="25" pos:column="62">info<pos:position pos:line="25" pos:column="66"/></name><operator pos:line="25" pos:column="66">.<pos:position pos:line="25" pos:column="67"/></operator><name pos:line="25" pos:column="67">name<pos:position pos:line="25" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="73"/></expr_stmt>

  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><name pos:line="27" pos:column="7">lensym<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">+<pos:position pos:line="27" pos:column="15"/></operator> <name pos:line="27" pos:column="16">LT_SYMBOL_OVERHEAD<pos:position pos:line="27" pos:column="34"/></name> <operator pos:line="27" pos:column="35">&lt;<pos:position pos:line="27" pos:column="39"/></operator> <name pos:line="27" pos:column="37">LT_SYMBOL_LENGTH<pos:position pos:line="27" pos:column="53"/></name></expr>)<pos:position pos:line="27" pos:column="54"/></condition><then pos:line="27" pos:column="54">
    <block pos:line="28" pos:column="5">{
      <expr_stmt><expr><name pos:line="29" pos:column="7">sym<pos:position pos:line="29" pos:column="10"/></name> <operator pos:line="29" pos:column="11">=<pos:position pos:line="29" pos:column="12"/></operator> <name pos:line="29" pos:column="13">lsym<pos:position pos:line="29" pos:column="17"/></name></expr>;<pos:position pos:line="29" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></then>
  <else pos:line="31" pos:column="3">else
    <block pos:line="32" pos:column="5">{
      <expr_stmt><expr><name pos:line="33" pos:column="7">sym<pos:position pos:line="33" pos:column="10"/></name> <operator pos:line="33" pos:column="11">=<pos:position pos:line="33" pos:column="12"/></operator> <call><name pos:line="33" pos:column="13">LT_EMALLOC<pos:position pos:line="33" pos:column="23"/></name> <argument_list pos:line="33" pos:column="24">(<argument><expr><name pos:line="33" pos:column="25">char<pos:position pos:line="33" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="31">lensym<pos:position pos:line="33" pos:column="37"/></name> <operator pos:line="33" pos:column="38">+<pos:position pos:line="33" pos:column="39"/></operator> <name pos:line="33" pos:column="40">LT_SYMBOL_OVERHEAD<pos:position pos:line="33" pos:column="58"/></name> <operator pos:line="33" pos:column="59">+<pos:position pos:line="33" pos:column="60"/></operator> <literal type="number" pos:line="33" pos:column="61">1<pos:position pos:line="33" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="64"/></expr_stmt>
      <if pos:line="34" pos:column="7">if <condition pos:line="34" pos:column="10">(<expr><operator pos:line="34" pos:column="11">!<pos:position pos:line="34" pos:column="12"/></operator><name pos:line="34" pos:column="12">sym<pos:position pos:line="34" pos:column="15"/></name></expr>)<pos:position pos:line="34" pos:column="16"/></condition><then pos:line="34" pos:column="16">
	<block pos:line="35" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="36" pos:column="11">LT_DLMUTEX_SETERROR<pos:position pos:line="36" pos:column="30"/></name> <argument_list pos:line="36" pos:column="31">(<argument><expr><call><name pos:line="36" pos:column="32">LT_DLSTRERROR<pos:position pos:line="36" pos:column="45"/></name> <argument_list pos:line="36" pos:column="46">(<argument><expr><name pos:line="36" pos:column="47">BUFFER_OVERFLOW<pos:position pos:line="36" pos:column="62"/></name></expr></argument>)<pos:position pos:line="36" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="65"/></expr_stmt>
	  <return pos:line="37" pos:column="11">return <expr><literal type="number" pos:line="37" pos:column="18">0<pos:position pos:line="37" pos:column="19"/></literal></expr>;<pos:position pos:line="37" pos:column="20"/></return>
	}<pos:position pos:line="38" pos:column="10"/></block></then></if>
    }<pos:position pos:line="39" pos:column="6"/></block></else></if>

  <expr_stmt><expr><name pos:line="41" pos:column="3">data<pos:position pos:line="41" pos:column="7"/></name> <operator pos:line="41" pos:column="8">=<pos:position pos:line="41" pos:column="9"/></operator> <name><name pos:line="41" pos:column="10">handle<pos:position pos:line="41" pos:column="16"/></name><operator pos:line="41" pos:column="16">-&gt;<pos:position pos:line="41" pos:column="21"/></operator><name pos:line="41" pos:column="18">loader<pos:position pos:line="41" pos:column="24"/></name><operator pos:line="41" pos:column="24">-&gt;<pos:position pos:line="41" pos:column="29"/></operator><name pos:line="41" pos:column="26">dlloader_data<pos:position pos:line="41" pos:column="39"/></name></name></expr>;<pos:position pos:line="41" pos:column="40"/></expr_stmt>
  <if pos:line="42" pos:column="3">if <condition pos:line="42" pos:column="6">(<expr><name><name pos:line="42" pos:column="7">handle<pos:position pos:line="42" pos:column="13"/></name><operator pos:line="42" pos:column="13">-&gt;<pos:position pos:line="42" pos:column="18"/></operator><name pos:line="42" pos:column="15">info<pos:position pos:line="42" pos:column="19"/></name><operator pos:line="42" pos:column="19">.<pos:position pos:line="42" pos:column="20"/></operator><name pos:line="42" pos:column="20">name<pos:position pos:line="42" pos:column="24"/></name></name></expr>)<pos:position pos:line="42" pos:column="25"/></condition><then pos:line="42" pos:column="25">
    <block pos:line="43" pos:column="5">{
      <decl_stmt><decl><type><specifier pos:line="44" pos:column="7">const<pos:position pos:line="44" pos:column="12"/></specifier> <name pos:line="44" pos:column="13">char<pos:position pos:line="44" pos:column="17"/></name> <modifier pos:line="44" pos:column="18">*<pos:position pos:line="44" pos:column="19"/></modifier></type><name pos:line="44" pos:column="19">saved_error<pos:position pos:line="44" pos:column="30"/></name></decl>;<pos:position pos:line="44" pos:column="31"/></decl_stmt>

      <expr_stmt><expr><call><name pos:line="46" pos:column="7">LT_DLMUTEX_GETERROR<pos:position pos:line="46" pos:column="26"/></name> <argument_list pos:line="46" pos:column="27">(<argument><expr><name pos:line="46" pos:column="28">saved_error<pos:position pos:line="46" pos:column="39"/></name></expr></argument>)<pos:position pos:line="46" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="41"/></expr_stmt>

      <comment type="block" pos:line="48" pos:column="7">/* this is a libtool module */</comment>
      <if pos:line="49" pos:column="7">if <condition pos:line="49" pos:column="10">(<expr><name><name pos:line="49" pos:column="11">handle<pos:position pos:line="49" pos:column="17"/></name><operator pos:line="49" pos:column="17">-&gt;<pos:position pos:line="49" pos:column="22"/></operator><name pos:line="49" pos:column="19">loader<pos:position pos:line="49" pos:column="25"/></name><operator pos:line="49" pos:column="25">-&gt;<pos:position pos:line="49" pos:column="30"/></operator><name pos:line="49" pos:column="27">sym_prefix<pos:position pos:line="49" pos:column="37"/></name></name></expr>)<pos:position pos:line="49" pos:column="38"/></condition><then pos:line="49" pos:column="38">
	<block pos:line="50" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="51" pos:column="11">strcpy<pos:position pos:line="51" pos:column="17"/></name><argument_list pos:line="51" pos:column="17">(<argument><expr><name pos:line="51" pos:column="18">sym<pos:position pos:line="51" pos:column="21"/></name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="23">handle<pos:position pos:line="51" pos:column="29"/></name><operator pos:line="51" pos:column="29">-&gt;<pos:position pos:line="51" pos:column="34"/></operator><name pos:line="51" pos:column="31">loader<pos:position pos:line="51" pos:column="37"/></name><operator pos:line="51" pos:column="37">-&gt;<pos:position pos:line="51" pos:column="42"/></operator><name pos:line="51" pos:column="39">sym_prefix<pos:position pos:line="51" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="51"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="52" pos:column="11">strcat<pos:position pos:line="52" pos:column="17"/></name><argument_list pos:line="52" pos:column="17">(<argument><expr><name pos:line="52" pos:column="18">sym<pos:position pos:line="52" pos:column="21"/></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="23">handle<pos:position pos:line="52" pos:column="29"/></name><operator pos:line="52" pos:column="29">-&gt;<pos:position pos:line="52" pos:column="34"/></operator><name pos:line="52" pos:column="31">info<pos:position pos:line="52" pos:column="35"/></name><operator pos:line="52" pos:column="35">.<pos:position pos:line="52" pos:column="36"/></operator><name pos:line="52" pos:column="36">name<pos:position pos:line="52" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="53" pos:column="10"/></block></then>
      <else pos:line="54" pos:column="7">else
	<block pos:line="55" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="56" pos:column="11">strcpy<pos:position pos:line="56" pos:column="17"/></name><argument_list pos:line="56" pos:column="17">(<argument><expr><name pos:line="56" pos:column="18">sym<pos:position pos:line="56" pos:column="21"/></name></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="23">handle<pos:position pos:line="56" pos:column="29"/></name><operator pos:line="56" pos:column="29">-&gt;<pos:position pos:line="56" pos:column="34"/></operator><name pos:line="56" pos:column="31">info<pos:position pos:line="56" pos:column="35"/></name><operator pos:line="56" pos:column="35">.<pos:position pos:line="56" pos:column="36"/></operator><name pos:line="56" pos:column="36">name<pos:position pos:line="56" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="57" pos:column="10"/></block></else></if>

      <expr_stmt><expr><call><name pos:line="59" pos:column="7">strcat<pos:position pos:line="59" pos:column="13"/></name><argument_list pos:line="59" pos:column="13">(<argument><expr><name pos:line="59" pos:column="14">sym<pos:position pos:line="59" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="19">"_LTX_"<pos:position pos:line="59" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="60" pos:column="7">strcat<pos:position pos:line="60" pos:column="13"/></name><argument_list pos:line="60" pos:column="13">(<argument><expr><name pos:line="60" pos:column="14">sym<pos:position pos:line="60" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="19">symbol<pos:position pos:line="60" pos:column="25"/></name></expr></argument>)<pos:position pos:line="60" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="27"/></expr_stmt>

      <comment type="block" pos:line="62" pos:column="7">/* try "modulename_LTX_symbol" */</comment>
      <expr_stmt><expr><name pos:line="63" pos:column="7">address<pos:position pos:line="63" pos:column="14"/></name> <operator pos:line="63" pos:column="15">=<pos:position pos:line="63" pos:column="16"/></operator> <call><name><name pos:line="63" pos:column="17">handle<pos:position pos:line="63" pos:column="23"/></name><operator pos:line="63" pos:column="23">-&gt;<pos:position pos:line="63" pos:column="28"/></operator><name pos:line="63" pos:column="25">loader<pos:position pos:line="63" pos:column="31"/></name><operator pos:line="63" pos:column="31">-&gt;<pos:position pos:line="63" pos:column="36"/></operator><name pos:line="63" pos:column="33">find_sym<pos:position pos:line="63" pos:column="41"/></name></name> <argument_list pos:line="63" pos:column="42">(<argument><expr><name pos:line="63" pos:column="43">data<pos:position pos:line="63" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="49">handle<pos:position pos:line="63" pos:column="55"/></name><operator pos:line="63" pos:column="55">-&gt;<pos:position pos:line="63" pos:column="60"/></operator><name pos:line="63" pos:column="57">module<pos:position pos:line="63" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="65">sym<pos:position pos:line="63" pos:column="68"/></name></expr></argument>)<pos:position pos:line="63" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="70"/></expr_stmt>
      <if pos:line="64" pos:column="7">if <condition pos:line="64" pos:column="10">(<expr><name pos:line="64" pos:column="11">address<pos:position pos:line="64" pos:column="18"/></name></expr>)<pos:position pos:line="64" pos:column="19"/></condition><then pos:line="64" pos:column="19">
	<block pos:line="65" pos:column="9">{
	  <if pos:line="66" pos:column="11">if <condition pos:line="66" pos:column="14">(<expr><name pos:line="66" pos:column="15">sym<pos:position pos:line="66" pos:column="18"/></name> <operator pos:line="66" pos:column="19">!=<pos:position pos:line="66" pos:column="21"/></operator> <name pos:line="66" pos:column="22">lsym<pos:position pos:line="66" pos:column="26"/></name></expr>)<pos:position pos:line="66" pos:column="27"/></condition><then pos:line="66" pos:column="27">
	    <block pos:line="67" pos:column="13">{
	      <expr_stmt><expr><call><name pos:line="68" pos:column="15">LT_DLFREE<pos:position pos:line="68" pos:column="24"/></name> <argument_list pos:line="68" pos:column="25">(<argument><expr><name pos:line="68" pos:column="26">sym<pos:position pos:line="68" pos:column="29"/></name></expr></argument>)<pos:position pos:line="68" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="31"/></expr_stmt>
	    }<pos:position pos:line="69" pos:column="14"/></block></then></if>
	  <return pos:line="70" pos:column="11">return <expr><name pos:line="70" pos:column="18">address<pos:position pos:line="70" pos:column="25"/></name></expr>;<pos:position pos:line="70" pos:column="26"/></return>
	}<pos:position pos:line="71" pos:column="10"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="72" pos:column="7">LT_DLMUTEX_SETERROR<pos:position pos:line="72" pos:column="26"/></name> <argument_list pos:line="72" pos:column="27">(<argument><expr><name pos:line="72" pos:column="28">saved_error<pos:position pos:line="72" pos:column="39"/></name></expr></argument>)<pos:position pos:line="72" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="73" pos:column="6"/></block></then></if>

  <comment type="block" pos:line="75" pos:column="3">/* otherwise try "symbol" */</comment>
  <if pos:line="76" pos:column="3">if <condition pos:line="76" pos:column="6">(<expr><name><name pos:line="76" pos:column="7">handle<pos:position pos:line="76" pos:column="13"/></name><operator pos:line="76" pos:column="13">-&gt;<pos:position pos:line="76" pos:column="18"/></operator><name pos:line="76" pos:column="15">loader<pos:position pos:line="76" pos:column="21"/></name><operator pos:line="76" pos:column="21">-&gt;<pos:position pos:line="76" pos:column="26"/></operator><name pos:line="76" pos:column="23">sym_prefix<pos:position pos:line="76" pos:column="33"/></name></name></expr>)<pos:position pos:line="76" pos:column="34"/></condition><then pos:line="76" pos:column="34">
    <block pos:line="77" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="78" pos:column="7">strcpy<pos:position pos:line="78" pos:column="13"/></name><argument_list pos:line="78" pos:column="13">(<argument><expr><name pos:line="78" pos:column="14">sym<pos:position pos:line="78" pos:column="17"/></name></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="19">handle<pos:position pos:line="78" pos:column="25"/></name><operator pos:line="78" pos:column="25">-&gt;<pos:position pos:line="78" pos:column="30"/></operator><name pos:line="78" pos:column="27">loader<pos:position pos:line="78" pos:column="33"/></name><operator pos:line="78" pos:column="33">-&gt;<pos:position pos:line="78" pos:column="38"/></operator><name pos:line="78" pos:column="35">sym_prefix<pos:position pos:line="78" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="47"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="79" pos:column="7">strcat<pos:position pos:line="79" pos:column="13"/></name><argument_list pos:line="79" pos:column="13">(<argument><expr><name pos:line="79" pos:column="14">sym<pos:position pos:line="79" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="19">symbol<pos:position pos:line="79" pos:column="25"/></name></expr></argument>)<pos:position pos:line="79" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="80" pos:column="6"/></block></then>
  <else pos:line="81" pos:column="3">else
    <block pos:line="82" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="83" pos:column="7">strcpy<pos:position pos:line="83" pos:column="13"/></name><argument_list pos:line="83" pos:column="13">(<argument><expr><name pos:line="83" pos:column="14">sym<pos:position pos:line="83" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="19">symbol<pos:position pos:line="83" pos:column="25"/></name></expr></argument>)<pos:position pos:line="83" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="84" pos:column="6"/></block></else></if>

  <expr_stmt><expr><name pos:line="86" pos:column="3">address<pos:position pos:line="86" pos:column="10"/></name> <operator pos:line="86" pos:column="11">=<pos:position pos:line="86" pos:column="12"/></operator> <call><name><name pos:line="86" pos:column="13">handle<pos:position pos:line="86" pos:column="19"/></name><operator pos:line="86" pos:column="19">-&gt;<pos:position pos:line="86" pos:column="24"/></operator><name pos:line="86" pos:column="21">loader<pos:position pos:line="86" pos:column="27"/></name><operator pos:line="86" pos:column="27">-&gt;<pos:position pos:line="86" pos:column="32"/></operator><name pos:line="86" pos:column="29">find_sym<pos:position pos:line="86" pos:column="37"/></name></name> <argument_list pos:line="86" pos:column="38">(<argument><expr><name pos:line="86" pos:column="39">data<pos:position pos:line="86" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="86" pos:column="45">handle<pos:position pos:line="86" pos:column="51"/></name><operator pos:line="86" pos:column="51">-&gt;<pos:position pos:line="86" pos:column="56"/></operator><name pos:line="86" pos:column="53">module<pos:position pos:line="86" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="61">sym<pos:position pos:line="86" pos:column="64"/></name></expr></argument>)<pos:position pos:line="86" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="66"/></expr_stmt>
  <if pos:line="87" pos:column="3">if <condition pos:line="87" pos:column="6">(<expr><name pos:line="87" pos:column="7">sym<pos:position pos:line="87" pos:column="10"/></name> <operator pos:line="87" pos:column="11">!=<pos:position pos:line="87" pos:column="13"/></operator> <name pos:line="87" pos:column="14">lsym<pos:position pos:line="87" pos:column="18"/></name></expr>)<pos:position pos:line="87" pos:column="19"/></condition><then pos:line="87" pos:column="19">
    <block pos:line="88" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="89" pos:column="7">LT_DLFREE<pos:position pos:line="89" pos:column="16"/></name> <argument_list pos:line="89" pos:column="17">(<argument><expr><name pos:line="89" pos:column="18">sym<pos:position pos:line="89" pos:column="21"/></name></expr></argument>)<pos:position pos:line="89" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="90" pos:column="6"/></block></then></if>

  <return pos:line="92" pos:column="3">return <expr><name pos:line="92" pos:column="10">address<pos:position pos:line="92" pos:column="17"/></name></expr>;<pos:position pos:line="92" pos:column="18"/></return>
}<pos:position pos:line="93" pos:column="2"/></block></function_decl></unit>

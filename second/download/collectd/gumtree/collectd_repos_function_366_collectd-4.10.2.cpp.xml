<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_366_collectd-4.10.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">nut_add_ups<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">name<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">nut_ups_t<pos:position pos:line="3" pos:column="12"/></name> <modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier></type><name pos:line="3" pos:column="14">ups<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">DEBUG<pos:position pos:line="6" pos:column="8"/></name> <argument_list pos:line="6" pos:column="9">(<argument><expr><literal type="string" pos:line="6" pos:column="10">"nut plugin: nut_add_ups (name = %s);"<pos:position pos:line="6" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="50">name<pos:position pos:line="6" pos:column="54"/></name></expr></argument>)<pos:position pos:line="6" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="56"/></expr_stmt>

  <expr_stmt><expr><name pos:line="8" pos:column="3">ups<pos:position pos:line="8" pos:column="6"/></name> <operator pos:line="8" pos:column="7">=<pos:position pos:line="8" pos:column="8"/></operator> <operator pos:line="8" pos:column="9">(<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">nut_ups_t<pos:position pos:line="8" pos:column="19"/></name> <operator pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></operator><operator pos:line="8" pos:column="21">)<pos:position pos:line="8" pos:column="22"/></operator> <call><name pos:line="8" pos:column="23">malloc<pos:position pos:line="8" pos:column="29"/></name> <argument_list pos:line="8" pos:column="30">(<argument><expr><sizeof pos:line="8" pos:column="31">sizeof <argument_list pos:line="8" pos:column="38">(<argument><expr><name pos:line="8" pos:column="39">nut_ups_t<pos:position pos:line="8" pos:column="48"/></name></expr></argument>)<pos:position pos:line="8" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="51"/></expr_stmt>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">ups<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">==<pos:position pos:line="9" pos:column="13"/></operator> <name pos:line="9" pos:column="14">NULL<pos:position pos:line="9" pos:column="18"/></name></expr>)<pos:position pos:line="9" pos:column="19"/></condition><then pos:line="9" pos:column="19">
  <block pos:line="10" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">ERROR<pos:position pos:line="11" pos:column="10"/></name> <argument_list pos:line="11" pos:column="11">(<argument><expr><literal type="string" pos:line="11" pos:column="12">"nut plugin: nut_add_ups: malloc failed."<pos:position pos:line="11" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="55"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">(<pos:position pos:line="12" pos:column="13"/></operator><literal type="number" pos:line="12" pos:column="13">1<pos:position pos:line="12" pos:column="14"/></literal><operator pos:line="12" pos:column="14">)<pos:position pos:line="12" pos:column="15"/></operator></expr>;<pos:position pos:line="12" pos:column="16"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="14" pos:column="3">memset<pos:position pos:line="14" pos:column="9"/></name> <argument_list pos:line="14" pos:column="10">(<argument><expr><name pos:line="14" pos:column="11">ups<pos:position pos:line="14" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="14" pos:column="16">'\0'<pos:position pos:line="14" pos:column="20"/></literal></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="22">sizeof <argument_list pos:line="14" pos:column="29">(<argument><expr><name pos:line="14" pos:column="30">nut_ups_t<pos:position pos:line="14" pos:column="39"/></name></expr></argument>)<pos:position pos:line="14" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="42"/></expr_stmt>

  <expr_stmt><expr><name pos:line="16" pos:column="3">status<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">=<pos:position pos:line="16" pos:column="11"/></operator> <call><name pos:line="16" pos:column="12">upscli_splitname<pos:position pos:line="16" pos:column="28"/></name> <argument_list pos:line="16" pos:column="29">(<argument><expr><name pos:line="16" pos:column="30">name<pos:position pos:line="16" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="36">&amp;<pos:position pos:line="16" pos:column="41"/></operator><name><name pos:line="16" pos:column="37">ups<pos:position pos:line="16" pos:column="40"/></name><operator pos:line="16" pos:column="40">-&gt;<pos:position pos:line="16" pos:column="45"/></operator><name pos:line="16" pos:column="42">upsname<pos:position pos:line="16" pos:column="49"/></name></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="51">&amp;<pos:position pos:line="16" pos:column="56"/></operator><name><name pos:line="16" pos:column="52">ups<pos:position pos:line="16" pos:column="55"/></name><operator pos:line="16" pos:column="55">-&gt;<pos:position pos:line="16" pos:column="60"/></operator><name pos:line="16" pos:column="57">hostname<pos:position pos:line="16" pos:column="65"/></name></name></expr></argument>,
      <argument><expr><operator pos:line="17" pos:column="7">&amp;<pos:position pos:line="17" pos:column="12"/></operator><name><name pos:line="17" pos:column="8">ups<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">-&gt;<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="13">port<pos:position pos:line="17" pos:column="17"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="19"/></expr_stmt>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name pos:line="18" pos:column="7">status<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">!=<pos:position pos:line="18" pos:column="16"/></operator> <literal type="number" pos:line="18" pos:column="17">0<pos:position pos:line="18" pos:column="18"/></literal></expr>)<pos:position pos:line="18" pos:column="19"/></condition><then pos:line="18" pos:column="19">
  <block pos:line="19" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">ERROR<pos:position pos:line="20" pos:column="10"/></name> <argument_list pos:line="20" pos:column="11">(<argument><expr><literal type="string" pos:line="20" pos:column="12">"nut plugin: nut_add_ups: upscli_splitname (%s) failed."<pos:position pos:line="20" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="70">name<pos:position pos:line="20" pos:column="74"/></name></expr></argument>)<pos:position pos:line="20" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="76"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">free_nut_ups_t<pos:position pos:line="21" pos:column="19"/></name> <argument_list pos:line="21" pos:column="20">(<argument><expr><name pos:line="21" pos:column="21">ups<pos:position pos:line="21" pos:column="24"/></name></expr></argument>)<pos:position pos:line="21" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="26"/></expr_stmt>
    <return pos:line="22" pos:column="5">return <expr><operator pos:line="22" pos:column="12">(<pos:position pos:line="22" pos:column="13"/></operator><literal type="number" pos:line="22" pos:column="13">1<pos:position pos:line="22" pos:column="14"/></literal><operator pos:line="22" pos:column="14">)<pos:position pos:line="22" pos:column="15"/></operator></expr>;<pos:position pos:line="22" pos:column="16"/></return>
  }<pos:position pos:line="23" pos:column="4"/></block></then></if>

  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><name pos:line="25" pos:column="7">upslist_head<pos:position pos:line="25" pos:column="19"/></name> <operator pos:line="25" pos:column="20">==<pos:position pos:line="25" pos:column="22"/></operator> <name pos:line="25" pos:column="23">NULL<pos:position pos:line="25" pos:column="27"/></name></expr>)<pos:position pos:line="25" pos:column="28"/></condition><then pos:line="25" pos:column="28">
    <block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="5">upslist_head<pos:position pos:line="26" pos:column="17"/></name> <operator pos:line="26" pos:column="18">=<pos:position pos:line="26" pos:column="19"/></operator> <name pos:line="26" pos:column="20">ups<pos:position pos:line="26" pos:column="23"/></name></expr>;<pos:position pos:line="26" pos:column="24"/></expr_stmt></block></then>
  <else pos:line="27" pos:column="3">else
  <block pos:line="28" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="29" pos:column="5">nut_ups_t<pos:position pos:line="29" pos:column="14"/></name> <modifier pos:line="29" pos:column="15">*<pos:position pos:line="29" pos:column="16"/></modifier></type><name pos:line="29" pos:column="16">last<pos:position pos:line="29" pos:column="20"/></name> <init pos:line="29" pos:column="21">= <expr><name pos:line="29" pos:column="23">upslist_head<pos:position pos:line="29" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="29" pos:column="36"/></decl_stmt>
    <while pos:line="30" pos:column="5">while <condition pos:line="30" pos:column="11">(<expr><name><name pos:line="30" pos:column="12">last<pos:position pos:line="30" pos:column="16"/></name><operator pos:line="30" pos:column="16">-&gt;<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="18">next<pos:position pos:line="30" pos:column="22"/></name></name> <operator pos:line="30" pos:column="23">!=<pos:position pos:line="30" pos:column="25"/></operator> <name pos:line="30" pos:column="26">NULL<pos:position pos:line="30" pos:column="30"/></name></expr>)<pos:position pos:line="30" pos:column="31"/></condition>
      <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="7">last<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">=<pos:position pos:line="31" pos:column="13"/></operator> <name><name pos:line="31" pos:column="14">last<pos:position pos:line="31" pos:column="18"/></name><operator pos:line="31" pos:column="18">-&gt;<pos:position pos:line="31" pos:column="23"/></operator><name pos:line="31" pos:column="20">next<pos:position pos:line="31" pos:column="24"/></name></name></expr>;<pos:position pos:line="31" pos:column="25"/></expr_stmt></block></while>
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">last<pos:position pos:line="32" pos:column="9"/></name><operator pos:line="32" pos:column="9">-&gt;<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="11">next<pos:position pos:line="32" pos:column="15"/></name></name> <operator pos:line="32" pos:column="16">=<pos:position pos:line="32" pos:column="17"/></operator> <name pos:line="32" pos:column="18">ups<pos:position pos:line="32" pos:column="21"/></name></expr>;<pos:position pos:line="32" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="33" pos:column="4"/></block></else></if>

  <return pos:line="35" pos:column="3">return <expr><operator pos:line="35" pos:column="10">(<pos:position pos:line="35" pos:column="11"/></operator><literal type="number" pos:line="35" pos:column="11">0<pos:position pos:line="35" pos:column="12"/></literal><operator pos:line="35" pos:column="12">)<pos:position pos:line="35" pos:column="13"/></operator></expr>;<pos:position pos:line="35" pos:column="14"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2124_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">aquaero_submit_array<pos:position pos:line="1" pos:column="33"/></name> <parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><specifier pos:line="1" pos:column="35">const<pos:position pos:line="1" pos:column="40"/></specifier> <name pos:line="1" pos:column="41">char<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">type<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">char<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">type_instance_prefix<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="51">double<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">value_array<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="72">int<pos:position pos:line="2" pos:column="75"/></name></type> <name pos:line="2" pos:column="76">len<pos:position pos:line="2" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="80"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">type_instance<pos:position pos:line="4" pos:column="27"/></name><index pos:line="4" pos:column="27">[<expr><name pos:line="4" pos:column="28">DATA_MAX_NAME_LEN<pos:position pos:line="4" pos:column="45"/></name></expr>]<pos:position pos:line="4" pos:column="46"/></index></name></decl>;<pos:position pos:line="4" pos:column="47"/></decl_stmt>

	<for pos:line="6" pos:column="9">for <control pos:line="6" pos:column="13">(<init><decl><type><name pos:line="6" pos:column="14">int<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">i<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><literal type="number" pos:line="6" pos:column="22">0<pos:position pos:line="6" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="24"/></init> <condition><expr><name pos:line="6" pos:column="25">i<pos:position pos:line="6" pos:column="26"/></name> <operator pos:line="6" pos:column="27">&lt;<pos:position pos:line="6" pos:column="31"/></operator> <name pos:line="6" pos:column="29">len<pos:position pos:line="6" pos:column="32"/></name></expr>;<pos:position pos:line="6" pos:column="33"/></condition> <incr><expr><name pos:line="6" pos:column="34">i<pos:position pos:line="6" pos:column="35"/></name><operator pos:line="6" pos:column="35">++<pos:position pos:line="6" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="38"/></control>
	<block pos:line="7" pos:column="9">{
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><name><name pos:line="8" pos:column="21">value_array<pos:position pos:line="8" pos:column="32"/></name><index pos:line="8" pos:column="32">[<expr><name pos:line="8" pos:column="33">i<pos:position pos:line="8" pos:column="34"/></name></expr>]<pos:position pos:line="8" pos:column="35"/></index></name> <operator pos:line="8" pos:column="36">==<pos:position pos:line="8" pos:column="38"/></operator> <name pos:line="8" pos:column="39">AQ5_FLOAT_UNDEF<pos:position pos:line="8" pos:column="54"/></name></expr>)<pos:position pos:line="8" pos:column="55"/></condition><then pos:line="8" pos:column="55">
			<block type="pseudo"><continue pos:line="9" pos:column="25">continue;<pos:position pos:line="9" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><call><name pos:line="11" pos:column="17">snprintf<pos:position pos:line="11" pos:column="25"/></name> <argument_list pos:line="11" pos:column="26">(<argument><expr><name pos:line="11" pos:column="27">type_instance<pos:position pos:line="11" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="42">sizeof <argument_list pos:line="11" pos:column="49">(<argument><expr><name pos:line="11" pos:column="50">type_instance<pos:position pos:line="11" pos:column="63"/></name></expr></argument>)<pos:position pos:line="11" pos:column="64"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="66">"%s%d"<pos:position pos:line="11" pos:column="72"/></literal></expr></argument>,
				<argument><expr><name pos:line="12" pos:column="33">type_instance_prefix<pos:position pos:line="12" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="55">i<pos:position pos:line="12" pos:column="56"/></name> <operator pos:line="12" pos:column="57">+<pos:position pos:line="12" pos:column="58"/></operator> <literal type="number" pos:line="12" pos:column="59">1<pos:position pos:line="12" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">aquaero_submit<pos:position pos:line="13" pos:column="31"/></name> <argument_list pos:line="13" pos:column="32">(<argument><expr><name pos:line="13" pos:column="33">type<pos:position pos:line="13" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="39">type_instance<pos:position pos:line="13" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="54">value_array<pos:position pos:line="13" pos:column="65"/></name><index pos:line="13" pos:column="65">[<expr><name pos:line="13" pos:column="66">i<pos:position pos:line="13" pos:column="67"/></name></expr>]<pos:position pos:line="13" pos:column="68"/></index></name></expr></argument>)<pos:position pos:line="13" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="70"/></expr_stmt>
	}<pos:position pos:line="14" pos:column="10"/></block></for>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

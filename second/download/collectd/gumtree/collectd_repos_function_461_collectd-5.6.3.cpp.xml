<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_461_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">csnmp_read_table<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">host_definition_t<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">host<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">data_definition_t<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">data<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list> <block pos:line="1" pos:column="79">{
  <decl_stmt><decl><type><name><name pos:line="2" pos:column="3">struct<pos:position pos:line="2" pos:column="9"/></name> <name pos:line="2" pos:column="10">snmp_pdu<pos:position pos:line="2" pos:column="18"/></name></name> <modifier pos:line="2" pos:column="19">*<pos:position pos:line="2" pos:column="20"/></modifier></type><name pos:line="2" pos:column="20">req<pos:position pos:line="2" pos:column="23"/></name></decl>;<pos:position pos:line="2" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">snmp_pdu<pos:position pos:line="3" pos:column="18"/></name></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">res<pos:position pos:line="3" pos:column="23"/></name> <init pos:line="3" pos:column="24">= <expr><name pos:line="3" pos:column="26">NULL<pos:position pos:line="3" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">variable_list<pos:position pos:line="4" pos:column="23"/></name></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">vb<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>

  <decl_stmt><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name pos:line="6" pos:column="9">data_set_t<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">ds<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="8" pos:column="3">size_t<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">oid_list_len<pos:position pos:line="8" pos:column="22"/></name> <init pos:line="8" pos:column="23">= <expr><name><name pos:line="8" pos:column="25">data<pos:position pos:line="8" pos:column="29"/></name><operator pos:line="8" pos:column="29">-&gt;<pos:position pos:line="8" pos:column="34"/></operator><name pos:line="8" pos:column="31">values_len<pos:position pos:line="8" pos:column="41"/></name></name> <operator pos:line="8" pos:column="42">+<pos:position pos:line="8" pos:column="43"/></operator> <literal type="number" pos:line="8" pos:column="44">1<pos:position pos:line="8" pos:column="45"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="46"/></decl_stmt>
  <comment type="block" pos:line="9" pos:column="3">/* Holds the last OID returned by the device. We use this in the GETNEXT
   * request to proceed. */</comment>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">oid_t<pos:position pos:line="11" pos:column="8"/></name></type> <name><name pos:line="11" pos:column="9">oid_list<pos:position pos:line="11" pos:column="17"/></name><index pos:line="11" pos:column="17">[<expr><name pos:line="11" pos:column="18">oid_list_len<pos:position pos:line="11" pos:column="30"/></name></expr>]<pos:position pos:line="11" pos:column="31"/></index></name></decl>;<pos:position pos:line="11" pos:column="32"/></decl_stmt>
  <comment type="block" pos:line="12" pos:column="3">/* Set to false when an OID has left its subtree so we don't re-request it
   * again. */</comment>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">_Bool<pos:position pos:line="14" pos:column="8"/></name></type> <name><name pos:line="14" pos:column="9">oid_list_todo<pos:position pos:line="14" pos:column="22"/></name><index pos:line="14" pos:column="22">[<expr><name pos:line="14" pos:column="23">oid_list_len<pos:position pos:line="14" pos:column="35"/></name></expr>]<pos:position pos:line="14" pos:column="36"/></index></name></decl>;<pos:position pos:line="14" pos:column="37"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="16" pos:column="3">int<pos:position pos:line="16" pos:column="6"/></name></type> <name pos:line="16" pos:column="7">status<pos:position pos:line="16" pos:column="13"/></name></decl>;<pos:position pos:line="16" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">size_t<pos:position pos:line="17" pos:column="9"/></name></type> <name pos:line="17" pos:column="10">i<pos:position pos:line="17" pos:column="11"/></name></decl>;<pos:position pos:line="17" pos:column="12"/></decl_stmt>

  <comment type="block" pos:line="19" pos:column="3">/* `value_list_head' and `value_list_tail' implement a linked list for each
   * value. `instance_list_head' and `instance_list_tail' implement a linked
   * list of
   * instance names. This is used to jump gaps in the table. */</comment>
  <decl_stmt><decl><type><name pos:line="23" pos:column="3">csnmp_list_instances_t<pos:position pos:line="23" pos:column="25"/></name> <modifier pos:line="23" pos:column="26">*<pos:position pos:line="23" pos:column="27"/></modifier></type><name pos:line="23" pos:column="27">instance_list_head<pos:position pos:line="23" pos:column="45"/></name></decl>;<pos:position pos:line="23" pos:column="46"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="24" pos:column="3">csnmp_list_instances_t<pos:position pos:line="24" pos:column="25"/></name> <modifier pos:line="24" pos:column="26">*<pos:position pos:line="24" pos:column="27"/></modifier></type><name pos:line="24" pos:column="27">instance_list_tail<pos:position pos:line="24" pos:column="45"/></name></decl>;<pos:position pos:line="24" pos:column="46"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="25" pos:column="3">csnmp_table_values_t<pos:position pos:line="25" pos:column="23"/></name> <modifier pos:line="25" pos:column="24">*<pos:position pos:line="25" pos:column="25"/></modifier><modifier pos:line="25" pos:column="25">*<pos:position pos:line="25" pos:column="26"/></modifier></type><name pos:line="25" pos:column="26">value_list_head<pos:position pos:line="25" pos:column="41"/></name></decl>;<pos:position pos:line="25" pos:column="42"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="26" pos:column="3">csnmp_table_values_t<pos:position pos:line="26" pos:column="23"/></name> <modifier pos:line="26" pos:column="24">*<pos:position pos:line="26" pos:column="25"/></modifier><modifier pos:line="26" pos:column="25">*<pos:position pos:line="26" pos:column="26"/></modifier></type><name pos:line="26" pos:column="26">value_list_tail<pos:position pos:line="26" pos:column="41"/></name></decl>;<pos:position pos:line="26" pos:column="42"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="28" pos:column="3">DEBUG<pos:position pos:line="28" pos:column="8"/></name><argument_list pos:line="28" pos:column="8">(<argument><expr><literal type="string" pos:line="28" pos:column="9">"snmp plugin: csnmp_read_table (host = %s, data = %s)"<pos:position pos:line="28" pos:column="63"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="65">host<pos:position pos:line="28" pos:column="69"/></name><operator pos:line="28" pos:column="69">-&gt;<pos:position pos:line="28" pos:column="74"/></operator><name pos:line="28" pos:column="71">name<pos:position pos:line="28" pos:column="75"/></name></name></expr></argument>,
        <argument><expr><name><name pos:line="29" pos:column="9">data<pos:position pos:line="29" pos:column="13"/></name><operator pos:line="29" pos:column="13">-&gt;<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="15">name<pos:position pos:line="29" pos:column="19"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="21"/></expr_stmt>

  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><name><name pos:line="31" pos:column="7">host<pos:position pos:line="31" pos:column="11"/></name><operator pos:line="31" pos:column="11">-&gt;<pos:position pos:line="31" pos:column="16"/></operator><name pos:line="31" pos:column="13">sess_handle<pos:position pos:line="31" pos:column="24"/></name></name> <operator pos:line="31" pos:column="25">==<pos:position pos:line="31" pos:column="27"/></operator> <name pos:line="31" pos:column="28">NULL<pos:position pos:line="31" pos:column="32"/></name></expr>)<pos:position pos:line="31" pos:column="33"/></condition><then pos:line="31" pos:column="33"> <block pos:line="31" pos:column="34">{
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">DEBUG<pos:position pos:line="32" pos:column="10"/></name><argument_list pos:line="32" pos:column="10">(<argument><expr><literal type="string" pos:line="32" pos:column="11">"snmp plugin: csnmp_read_table: host-&gt;sess_handle == NULL"<pos:position pos:line="32" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="71"/></expr_stmt>
    <return pos:line="33" pos:column="5">return <expr><operator pos:line="33" pos:column="12">(<pos:position pos:line="33" pos:column="13"/></operator><operator pos:line="33" pos:column="13">-<pos:position pos:line="33" pos:column="14"/></operator><literal type="number" pos:line="33" pos:column="14">1<pos:position pos:line="33" pos:column="15"/></literal><operator pos:line="33" pos:column="15">)<pos:position pos:line="33" pos:column="16"/></operator></expr>;<pos:position pos:line="33" pos:column="17"/></return>
  }<pos:position pos:line="34" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="36" pos:column="3">ds<pos:position pos:line="36" pos:column="5"/></name> <operator pos:line="36" pos:column="6">=<pos:position pos:line="36" pos:column="7"/></operator> <call><name pos:line="36" pos:column="8">plugin_get_ds<pos:position pos:line="36" pos:column="21"/></name><argument_list pos:line="36" pos:column="21">(<argument><expr><name><name pos:line="36" pos:column="22">data<pos:position pos:line="36" pos:column="26"/></name><operator pos:line="36" pos:column="26">-&gt;<pos:position pos:line="36" pos:column="31"/></operator><name pos:line="36" pos:column="28">type<pos:position pos:line="36" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="34"/></expr_stmt>
  <if pos:line="37" pos:column="3">if <condition pos:line="37" pos:column="6">(<expr><operator pos:line="37" pos:column="7">!<pos:position pos:line="37" pos:column="8"/></operator><name pos:line="37" pos:column="8">ds<pos:position pos:line="37" pos:column="10"/></name></expr>)<pos:position pos:line="37" pos:column="11"/></condition><then pos:line="37" pos:column="11"> <block pos:line="37" pos:column="12">{
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">ERROR<pos:position pos:line="38" pos:column="10"/></name><argument_list pos:line="38" pos:column="10">(<argument><expr><literal type="string" pos:line="38" pos:column="11">"snmp plugin: DataSet `%s' not defined."<pos:position pos:line="38" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="53">data<pos:position pos:line="38" pos:column="57"/></name><operator pos:line="38" pos:column="57">-&gt;<pos:position pos:line="38" pos:column="62"/></operator><name pos:line="38" pos:column="59">type<pos:position pos:line="38" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="65"/></expr_stmt>
    <return pos:line="39" pos:column="5">return <expr><operator pos:line="39" pos:column="12">(<pos:position pos:line="39" pos:column="13"/></operator><operator pos:line="39" pos:column="13">-<pos:position pos:line="39" pos:column="14"/></operator><literal type="number" pos:line="39" pos:column="14">1<pos:position pos:line="39" pos:column="15"/></literal><operator pos:line="39" pos:column="15">)<pos:position pos:line="39" pos:column="16"/></operator></expr>;<pos:position pos:line="39" pos:column="17"/></return>
  }<pos:position pos:line="40" pos:column="4"/></block></then></if>

  <if pos:line="42" pos:column="3">if <condition pos:line="42" pos:column="6">(<expr><name><name pos:line="42" pos:column="7">ds<pos:position pos:line="42" pos:column="9"/></name><operator pos:line="42" pos:column="9">-&gt;<pos:position pos:line="42" pos:column="14"/></operator><name pos:line="42" pos:column="11">ds_num<pos:position pos:line="42" pos:column="17"/></name></name> <operator pos:line="42" pos:column="18">!=<pos:position pos:line="42" pos:column="20"/></operator> <name><name pos:line="42" pos:column="21">data<pos:position pos:line="42" pos:column="25"/></name><operator pos:line="42" pos:column="25">-&gt;<pos:position pos:line="42" pos:column="30"/></operator><name pos:line="42" pos:column="27">values_len<pos:position pos:line="42" pos:column="37"/></name></name></expr>)<pos:position pos:line="42" pos:column="38"/></condition><then pos:line="42" pos:column="38"> <block pos:line="42" pos:column="39">{
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">ERROR<pos:position pos:line="43" pos:column="10"/></name><argument_list pos:line="43" pos:column="10">(<argument><expr><literal type="string" pos:line="43" pos:column="11">"snmp plugin: DataSet `%s' requires %zu values, but config talks "<pos:position pos:line="43" pos:column="77"/></literal>
          <literal type="string" pos:line="44" pos:column="11">"about %zu"<pos:position pos:line="44" pos:column="22"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="45" pos:column="11">data<pos:position pos:line="45" pos:column="15"/></name><operator pos:line="45" pos:column="15">-&gt;<pos:position pos:line="45" pos:column="20"/></operator><name pos:line="45" pos:column="17">type<pos:position pos:line="45" pos:column="21"/></name></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="23">ds<pos:position pos:line="45" pos:column="25"/></name><operator pos:line="45" pos:column="25">-&gt;<pos:position pos:line="45" pos:column="30"/></operator><name pos:line="45" pos:column="27">ds_num<pos:position pos:line="45" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="35">data<pos:position pos:line="45" pos:column="39"/></name><operator pos:line="45" pos:column="39">-&gt;<pos:position pos:line="45" pos:column="44"/></operator><name pos:line="45" pos:column="41">values_len<pos:position pos:line="45" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="53"/></expr_stmt>
    <return pos:line="46" pos:column="5">return <expr><operator pos:line="46" pos:column="12">(<pos:position pos:line="46" pos:column="13"/></operator><operator pos:line="46" pos:column="13">-<pos:position pos:line="46" pos:column="14"/></operator><literal type="number" pos:line="46" pos:column="14">1<pos:position pos:line="46" pos:column="15"/></literal><operator pos:line="46" pos:column="15">)<pos:position pos:line="46" pos:column="16"/></operator></expr>;<pos:position pos:line="46" pos:column="17"/></return>
  }<pos:position pos:line="47" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="48" pos:column="3">assert<pos:position pos:line="48" pos:column="9"/></name><argument_list pos:line="48" pos:column="9">(<argument><expr><name><name pos:line="48" pos:column="10">data<pos:position pos:line="48" pos:column="14"/></name><operator pos:line="48" pos:column="14">-&gt;<pos:position pos:line="48" pos:column="19"/></operator><name pos:line="48" pos:column="16">values_len<pos:position pos:line="48" pos:column="26"/></name></name> <operator pos:line="48" pos:column="27">&gt;<pos:position pos:line="48" pos:column="31"/></operator> <literal type="number" pos:line="48" pos:column="29">0<pos:position pos:line="48" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="32"/></expr_stmt>

  <comment type="block" pos:line="50" pos:column="3">/* We need a copy of all the OIDs, because GETNEXT will destroy them. */</comment>
  <expr_stmt><expr><call><name pos:line="51" pos:column="3">memcpy<pos:position pos:line="51" pos:column="9"/></name><argument_list pos:line="51" pos:column="9">(<argument><expr><name pos:line="51" pos:column="10">oid_list<pos:position pos:line="51" pos:column="18"/></name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="20">data<pos:position pos:line="51" pos:column="24"/></name><operator pos:line="51" pos:column="24">-&gt;<pos:position pos:line="51" pos:column="29"/></operator><name pos:line="51" pos:column="26">values<pos:position pos:line="51" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="34">data<pos:position pos:line="51" pos:column="38"/></name><operator pos:line="51" pos:column="38">-&gt;<pos:position pos:line="51" pos:column="43"/></operator><name pos:line="51" pos:column="40">values_len<pos:position pos:line="51" pos:column="50"/></name></name> <operator pos:line="51" pos:column="51">*<pos:position pos:line="51" pos:column="52"/></operator> <sizeof pos:line="51" pos:column="53">sizeof<argument_list pos:line="51" pos:column="59">(<argument><expr><name pos:line="51" pos:column="60">oid_t<pos:position pos:line="51" pos:column="65"/></name></expr></argument>)<pos:position pos:line="51" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="51" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="68"/></expr_stmt>
  <if pos:line="52" pos:column="3">if <condition pos:line="52" pos:column="6">(<expr><name><name pos:line="52" pos:column="7">data<pos:position pos:line="52" pos:column="11"/></name><operator pos:line="52" pos:column="11">-&gt;<pos:position pos:line="52" pos:column="16"/></operator><name pos:line="52" pos:column="13">instance<pos:position pos:line="52" pos:column="21"/></name><operator pos:line="52" pos:column="21">.<pos:position pos:line="52" pos:column="22"/></operator><name pos:line="52" pos:column="22">oid<pos:position pos:line="52" pos:column="25"/></name><operator pos:line="52" pos:column="25">.<pos:position pos:line="52" pos:column="26"/></operator><name pos:line="52" pos:column="26">oid_len<pos:position pos:line="52" pos:column="33"/></name></name> <operator pos:line="52" pos:column="34">&gt;<pos:position pos:line="52" pos:column="38"/></operator> <literal type="number" pos:line="52" pos:column="36">0<pos:position pos:line="52" pos:column="37"/></literal></expr>)<pos:position pos:line="52" pos:column="38"/></condition><then pos:line="52" pos:column="38">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="53" pos:column="5">memcpy<pos:position pos:line="53" pos:column="11"/></name><argument_list pos:line="53" pos:column="11">(<argument><expr><name pos:line="53" pos:column="12">oid_list<pos:position pos:line="53" pos:column="20"/></name> <operator pos:line="53" pos:column="21">+<pos:position pos:line="53" pos:column="22"/></operator> <name><name pos:line="53" pos:column="23">data<pos:position pos:line="53" pos:column="27"/></name><operator pos:line="53" pos:column="27">-&gt;<pos:position pos:line="53" pos:column="32"/></operator><name pos:line="53" pos:column="29">values_len<pos:position pos:line="53" pos:column="39"/></name></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="41">&amp;<pos:position pos:line="53" pos:column="46"/></operator><name><name pos:line="53" pos:column="42">data<pos:position pos:line="53" pos:column="46"/></name><operator pos:line="53" pos:column="46">-&gt;<pos:position pos:line="53" pos:column="51"/></operator><name pos:line="53" pos:column="48">instance<pos:position pos:line="53" pos:column="56"/></name><operator pos:line="53" pos:column="56">.<pos:position pos:line="53" pos:column="57"/></operator><name pos:line="53" pos:column="57">oid<pos:position pos:line="53" pos:column="60"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="53" pos:column="62">sizeof<argument_list pos:line="53" pos:column="68">(<argument><expr><name pos:line="53" pos:column="69">oid_t<pos:position pos:line="53" pos:column="74"/></name></expr></argument>)<pos:position pos:line="53" pos:column="75"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="53" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="77"/></expr_stmt></block></then>
  <else pos:line="54" pos:column="3">else <comment type="block" pos:line="54" pos:column="8">/* no InstanceFrom option specified. */</comment>
    <block type="pseudo"><expr_stmt><expr><name pos:line="55" pos:column="5">oid_list_len<pos:position pos:line="55" pos:column="17"/></name><operator pos:line="55" pos:column="17">--<pos:position pos:line="55" pos:column="19"/></operator></expr>;<pos:position pos:line="55" pos:column="20"/></expr_stmt></block></else></if>

  <for pos:line="57" pos:column="3">for <control pos:line="57" pos:column="7">(<init><expr><name pos:line="57" pos:column="8">i<pos:position pos:line="57" pos:column="9"/></name> <operator pos:line="57" pos:column="10">=<pos:position pos:line="57" pos:column="11"/></operator> <literal type="number" pos:line="57" pos:column="12">0<pos:position pos:line="57" pos:column="13"/></literal></expr>;<pos:position pos:line="57" pos:column="14"/></init> <condition><expr><name pos:line="57" pos:column="15">i<pos:position pos:line="57" pos:column="16"/></name> <operator pos:line="57" pos:column="17">&lt;<pos:position pos:line="57" pos:column="21"/></operator> <name pos:line="57" pos:column="19">oid_list_len<pos:position pos:line="57" pos:column="31"/></name></expr>;<pos:position pos:line="57" pos:column="32"/></condition> <incr><expr><name pos:line="57" pos:column="33">i<pos:position pos:line="57" pos:column="34"/></name><operator pos:line="57" pos:column="34">++<pos:position pos:line="57" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="57" pos:column="37"/></control>
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="58" pos:column="5">oid_list_todo<pos:position pos:line="58" pos:column="18"/></name><index pos:line="58" pos:column="18">[<expr><name pos:line="58" pos:column="19">i<pos:position pos:line="58" pos:column="20"/></name></expr>]<pos:position pos:line="58" pos:column="21"/></index></name> <operator pos:line="58" pos:column="22">=<pos:position pos:line="58" pos:column="23"/></operator> <literal type="number" pos:line="58" pos:column="24">1<pos:position pos:line="58" pos:column="25"/></literal></expr>;<pos:position pos:line="58" pos:column="26"/></expr_stmt></block></for>

  <comment type="block" pos:line="60" pos:column="3">/* We're going to construct n linked lists, one for each "value".
   * value_list_head will contain pointers to the heads of these linked lists,
   * value_list_tail will contain pointers to the tail of the lists. */</comment>
  <expr_stmt><expr><name pos:line="63" pos:column="3">value_list_head<pos:position pos:line="63" pos:column="18"/></name> <operator pos:line="63" pos:column="19">=<pos:position pos:line="63" pos:column="20"/></operator> <call><name pos:line="63" pos:column="21">calloc<pos:position pos:line="63" pos:column="27"/></name><argument_list pos:line="63" pos:column="27">(<argument><expr><name><name pos:line="63" pos:column="28">data<pos:position pos:line="63" pos:column="32"/></name><operator pos:line="63" pos:column="32">-&gt;<pos:position pos:line="63" pos:column="37"/></operator><name pos:line="63" pos:column="34">values_len<pos:position pos:line="63" pos:column="44"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="63" pos:column="46">sizeof<argument_list pos:line="63" pos:column="52">(<argument><expr><operator pos:line="63" pos:column="53">*<pos:position pos:line="63" pos:column="54"/></operator><name pos:line="63" pos:column="54">value_list_head<pos:position pos:line="63" pos:column="69"/></name></expr></argument>)<pos:position pos:line="63" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="63" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="72"/></expr_stmt>
  <expr_stmt><expr><name pos:line="64" pos:column="3">value_list_tail<pos:position pos:line="64" pos:column="18"/></name> <operator pos:line="64" pos:column="19">=<pos:position pos:line="64" pos:column="20"/></operator> <call><name pos:line="64" pos:column="21">calloc<pos:position pos:line="64" pos:column="27"/></name><argument_list pos:line="64" pos:column="27">(<argument><expr><name><name pos:line="64" pos:column="28">data<pos:position pos:line="64" pos:column="32"/></name><operator pos:line="64" pos:column="32">-&gt;<pos:position pos:line="64" pos:column="37"/></operator><name pos:line="64" pos:column="34">values_len<pos:position pos:line="64" pos:column="44"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="64" pos:column="46">sizeof<argument_list pos:line="64" pos:column="52">(<argument><expr><operator pos:line="64" pos:column="53">*<pos:position pos:line="64" pos:column="54"/></operator><name pos:line="64" pos:column="54">value_list_tail<pos:position pos:line="64" pos:column="69"/></name></expr></argument>)<pos:position pos:line="64" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="64" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="72"/></expr_stmt>
  <if pos:line="65" pos:column="3">if <condition pos:line="65" pos:column="6">(<expr><operator pos:line="65" pos:column="7">(<pos:position pos:line="65" pos:column="8"/></operator><name pos:line="65" pos:column="8">value_list_head<pos:position pos:line="65" pos:column="23"/></name> <operator pos:line="65" pos:column="24">==<pos:position pos:line="65" pos:column="26"/></operator> <name pos:line="65" pos:column="27">NULL<pos:position pos:line="65" pos:column="31"/></name><operator pos:line="65" pos:column="31">)<pos:position pos:line="65" pos:column="32"/></operator> <operator pos:line="65" pos:column="33">||<pos:position pos:line="65" pos:column="35"/></operator> <operator pos:line="65" pos:column="36">(<pos:position pos:line="65" pos:column="37"/></operator><name pos:line="65" pos:column="37">value_list_tail<pos:position pos:line="65" pos:column="52"/></name> <operator pos:line="65" pos:column="53">==<pos:position pos:line="65" pos:column="55"/></operator> <name pos:line="65" pos:column="56">NULL<pos:position pos:line="65" pos:column="60"/></name><operator pos:line="65" pos:column="60">)<pos:position pos:line="65" pos:column="61"/></operator></expr>)<pos:position pos:line="65" pos:column="62"/></condition><then pos:line="65" pos:column="62"> <block pos:line="65" pos:column="63">{
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">ERROR<pos:position pos:line="66" pos:column="10"/></name><argument_list pos:line="66" pos:column="10">(<argument><expr><literal type="string" pos:line="66" pos:column="11">"snmp plugin: csnmp_read_table: calloc failed."<pos:position pos:line="66" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">sfree<pos:position pos:line="67" pos:column="10"/></name><argument_list pos:line="67" pos:column="10">(<argument><expr><name pos:line="67" pos:column="11">value_list_head<pos:position pos:line="67" pos:column="26"/></name></expr></argument>)<pos:position pos:line="67" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="68" pos:column="5">sfree<pos:position pos:line="68" pos:column="10"/></name><argument_list pos:line="68" pos:column="10">(<argument><expr><name pos:line="68" pos:column="11">value_list_tail<pos:position pos:line="68" pos:column="26"/></name></expr></argument>)<pos:position pos:line="68" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="28"/></expr_stmt>
    <return pos:line="69" pos:column="5">return <expr><operator pos:line="69" pos:column="12">(<pos:position pos:line="69" pos:column="13"/></operator><operator pos:line="69" pos:column="13">-<pos:position pos:line="69" pos:column="14"/></operator><literal type="number" pos:line="69" pos:column="14">1<pos:position pos:line="69" pos:column="15"/></literal><operator pos:line="69" pos:column="15">)<pos:position pos:line="69" pos:column="16"/></operator></expr>;<pos:position pos:line="69" pos:column="17"/></return>
  }<pos:position pos:line="70" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="72" pos:column="3">instance_list_head<pos:position pos:line="72" pos:column="21"/></name> <operator pos:line="72" pos:column="22">=<pos:position pos:line="72" pos:column="23"/></operator> <name pos:line="72" pos:column="24">NULL<pos:position pos:line="72" pos:column="28"/></name></expr>;<pos:position pos:line="72" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name pos:line="73" pos:column="3">instance_list_tail<pos:position pos:line="73" pos:column="21"/></name> <operator pos:line="73" pos:column="22">=<pos:position pos:line="73" pos:column="23"/></operator> <name pos:line="73" pos:column="24">NULL<pos:position pos:line="73" pos:column="28"/></name></expr>;<pos:position pos:line="73" pos:column="29"/></expr_stmt>

  <expr_stmt><expr><name pos:line="75" pos:column="3">status<pos:position pos:line="75" pos:column="9"/></name> <operator pos:line="75" pos:column="10">=<pos:position pos:line="75" pos:column="11"/></operator> <literal type="number" pos:line="75" pos:column="12">0<pos:position pos:line="75" pos:column="13"/></literal></expr>;<pos:position pos:line="75" pos:column="14"/></expr_stmt>
  <while pos:line="76" pos:column="3">while <condition pos:line="76" pos:column="9">(<expr><name pos:line="76" pos:column="10">status<pos:position pos:line="76" pos:column="16"/></name> <operator pos:line="76" pos:column="17">==<pos:position pos:line="76" pos:column="19"/></operator> <literal type="number" pos:line="76" pos:column="20">0<pos:position pos:line="76" pos:column="21"/></literal></expr>)<pos:position pos:line="76" pos:column="22"/></condition> <block pos:line="76" pos:column="23">{
    <decl_stmt><decl><type><name pos:line="77" pos:column="5">int<pos:position pos:line="77" pos:column="8"/></name></type> <name pos:line="77" pos:column="9">oid_list_todo_num<pos:position pos:line="77" pos:column="26"/></name></decl>;<pos:position pos:line="77" pos:column="27"/></decl_stmt>

    <expr_stmt><expr><name pos:line="79" pos:column="5">req<pos:position pos:line="79" pos:column="8"/></name> <operator pos:line="79" pos:column="9">=<pos:position pos:line="79" pos:column="10"/></operator> <call><name pos:line="79" pos:column="11">snmp_pdu_create<pos:position pos:line="79" pos:column="26"/></name><argument_list pos:line="79" pos:column="26">(<argument><expr><name pos:line="79" pos:column="27">SNMP_MSG_GETNEXT<pos:position pos:line="79" pos:column="43"/></name></expr></argument>)<pos:position pos:line="79" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="45"/></expr_stmt>
    <if pos:line="80" pos:column="5">if <condition pos:line="80" pos:column="8">(<expr><name pos:line="80" pos:column="9">req<pos:position pos:line="80" pos:column="12"/></name> <operator pos:line="80" pos:column="13">==<pos:position pos:line="80" pos:column="15"/></operator> <name pos:line="80" pos:column="16">NULL<pos:position pos:line="80" pos:column="20"/></name></expr>)<pos:position pos:line="80" pos:column="21"/></condition><then pos:line="80" pos:column="21"> <block pos:line="80" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="81" pos:column="7">ERROR<pos:position pos:line="81" pos:column="12"/></name><argument_list pos:line="81" pos:column="12">(<argument><expr><literal type="string" pos:line="81" pos:column="13">"snmp plugin: snmp_pdu_create failed."<pos:position pos:line="81" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="53"/></expr_stmt>
      <expr_stmt><expr><name pos:line="82" pos:column="7">status<pos:position pos:line="82" pos:column="13"/></name> <operator pos:line="82" pos:column="14">=<pos:position pos:line="82" pos:column="15"/></operator> <operator pos:line="82" pos:column="16">-<pos:position pos:line="82" pos:column="17"/></operator><literal type="number" pos:line="82" pos:column="17">1<pos:position pos:line="82" pos:column="18"/></literal></expr>;<pos:position pos:line="82" pos:column="19"/></expr_stmt>
      <break pos:line="83" pos:column="7">break;<pos:position pos:line="83" pos:column="13"/></break>
    }<pos:position pos:line="84" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="86" pos:column="5">oid_list_todo_num<pos:position pos:line="86" pos:column="22"/></name> <operator pos:line="86" pos:column="23">=<pos:position pos:line="86" pos:column="24"/></operator> <literal type="number" pos:line="86" pos:column="25">0<pos:position pos:line="86" pos:column="26"/></literal></expr>;<pos:position pos:line="86" pos:column="27"/></expr_stmt>
    <for pos:line="87" pos:column="5">for <control pos:line="87" pos:column="9">(<init><expr><name pos:line="87" pos:column="10">i<pos:position pos:line="87" pos:column="11"/></name> <operator pos:line="87" pos:column="12">=<pos:position pos:line="87" pos:column="13"/></operator> <literal type="number" pos:line="87" pos:column="14">0<pos:position pos:line="87" pos:column="15"/></literal></expr>;<pos:position pos:line="87" pos:column="16"/></init> <condition><expr><name pos:line="87" pos:column="17">i<pos:position pos:line="87" pos:column="18"/></name> <operator pos:line="87" pos:column="19">&lt;<pos:position pos:line="87" pos:column="23"/></operator> <name pos:line="87" pos:column="21">oid_list_len<pos:position pos:line="87" pos:column="33"/></name></expr>;<pos:position pos:line="87" pos:column="34"/></condition> <incr><expr><name pos:line="87" pos:column="35">i<pos:position pos:line="87" pos:column="36"/></name><operator pos:line="87" pos:column="36">++<pos:position pos:line="87" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="87" pos:column="39"/></control> <block pos:line="87" pos:column="40">{
      <comment type="block" pos:line="88" pos:column="7">/* Do not rerequest already finished OIDs */</comment>
      <if pos:line="89" pos:column="7">if <condition pos:line="89" pos:column="10">(<expr><operator pos:line="89" pos:column="11">!<pos:position pos:line="89" pos:column="12"/></operator><name><name pos:line="89" pos:column="12">oid_list_todo<pos:position pos:line="89" pos:column="25"/></name><index pos:line="89" pos:column="25">[<expr><name pos:line="89" pos:column="26">i<pos:position pos:line="89" pos:column="27"/></name></expr>]<pos:position pos:line="89" pos:column="28"/></index></name></expr>)<pos:position pos:line="89" pos:column="29"/></condition><then pos:line="89" pos:column="29">
        <block type="pseudo"><continue pos:line="90" pos:column="9">continue;<pos:position pos:line="90" pos:column="18"/></continue></block></then></if>
      <expr_stmt><expr><name pos:line="91" pos:column="7">oid_list_todo_num<pos:position pos:line="91" pos:column="24"/></name><operator pos:line="91" pos:column="24">++<pos:position pos:line="91" pos:column="26"/></operator></expr>;<pos:position pos:line="91" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="92" pos:column="7">snmp_add_null_var<pos:position pos:line="92" pos:column="24"/></name><argument_list pos:line="92" pos:column="24">(<argument><expr><name pos:line="92" pos:column="25">req<pos:position pos:line="92" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="92" pos:column="30">oid_list<pos:position pos:line="92" pos:column="38"/></name><index pos:line="92" pos:column="38">[<expr><name pos:line="92" pos:column="39">i<pos:position pos:line="92" pos:column="40"/></name></expr>]<pos:position pos:line="92" pos:column="41"/></index></name><operator pos:line="92" pos:column="41">.<pos:position pos:line="92" pos:column="42"/></operator><name pos:line="92" pos:column="42">oid<pos:position pos:line="92" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="92" pos:column="47">oid_list<pos:position pos:line="92" pos:column="55"/></name><index pos:line="92" pos:column="55">[<expr><name pos:line="92" pos:column="56">i<pos:position pos:line="92" pos:column="57"/></name></expr>]<pos:position pos:line="92" pos:column="58"/></index></name><operator pos:line="92" pos:column="58">.<pos:position pos:line="92" pos:column="59"/></operator><name pos:line="92" pos:column="59">oid_len<pos:position pos:line="92" pos:column="66"/></name></expr></argument>)<pos:position pos:line="92" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="68"/></expr_stmt>
    }<pos:position pos:line="93" pos:column="6"/></block></for>

    <if pos:line="95" pos:column="5">if <condition pos:line="95" pos:column="8">(<expr><name pos:line="95" pos:column="9">oid_list_todo_num<pos:position pos:line="95" pos:column="26"/></name> <operator pos:line="95" pos:column="27">==<pos:position pos:line="95" pos:column="29"/></operator> <literal type="number" pos:line="95" pos:column="30">0<pos:position pos:line="95" pos:column="31"/></literal></expr>)<pos:position pos:line="95" pos:column="32"/></condition><then pos:line="95" pos:column="32"> <block pos:line="95" pos:column="33">{
      <comment type="block" pos:line="96" pos:column="7">/* The request is still empty - so we are finished */</comment>
      <expr_stmt><expr><call><name pos:line="97" pos:column="7">DEBUG<pos:position pos:line="97" pos:column="12"/></name><argument_list pos:line="97" pos:column="12">(<argument><expr><literal type="string" pos:line="97" pos:column="13">"snmp plugin: all variables have left their subtree"<pos:position pos:line="97" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="67"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="98" pos:column="7">snmp_free_pdu<pos:position pos:line="98" pos:column="20"/></name><argument_list pos:line="98" pos:column="20">(<argument><expr><name pos:line="98" pos:column="21">req<pos:position pos:line="98" pos:column="24"/></name></expr></argument>)<pos:position pos:line="98" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><name pos:line="99" pos:column="7">status<pos:position pos:line="99" pos:column="13"/></name> <operator pos:line="99" pos:column="14">=<pos:position pos:line="99" pos:column="15"/></operator> <literal type="number" pos:line="99" pos:column="16">0<pos:position pos:line="99" pos:column="17"/></literal></expr>;<pos:position pos:line="99" pos:column="18"/></expr_stmt>
      <break pos:line="100" pos:column="7">break;<pos:position pos:line="100" pos:column="13"/></break>
    }<pos:position pos:line="101" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="103" pos:column="5">res<pos:position pos:line="103" pos:column="8"/></name> <operator pos:line="103" pos:column="9">=<pos:position pos:line="103" pos:column="10"/></operator> <name pos:line="103" pos:column="11">NULL<pos:position pos:line="103" pos:column="15"/></name></expr>;<pos:position pos:line="103" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name pos:line="104" pos:column="5">status<pos:position pos:line="104" pos:column="11"/></name> <operator pos:line="104" pos:column="12">=<pos:position pos:line="104" pos:column="13"/></operator> <call><name pos:line="104" pos:column="14">snmp_sess_synch_response<pos:position pos:line="104" pos:column="38"/></name><argument_list pos:line="104" pos:column="38">(<argument><expr><name><name pos:line="104" pos:column="39">host<pos:position pos:line="104" pos:column="43"/></name><operator pos:line="104" pos:column="43">-&gt;<pos:position pos:line="104" pos:column="48"/></operator><name pos:line="104" pos:column="45">sess_handle<pos:position pos:line="104" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="58">req<pos:position pos:line="104" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="104" pos:column="63">&amp;<pos:position pos:line="104" pos:column="68"/></operator><name pos:line="104" pos:column="64">res<pos:position pos:line="104" pos:column="67"/></name></expr></argument>)<pos:position pos:line="104" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="69"/></expr_stmt>

    <comment type="block" pos:line="106" pos:column="5">/* snmp_sess_synch_response always frees our req PDU */</comment>
    <expr_stmt><expr><name pos:line="107" pos:column="5">req<pos:position pos:line="107" pos:column="8"/></name> <operator pos:line="107" pos:column="9">=<pos:position pos:line="107" pos:column="10"/></operator> <name pos:line="107" pos:column="11">NULL<pos:position pos:line="107" pos:column="15"/></name></expr>;<pos:position pos:line="107" pos:column="16"/></expr_stmt>

    <if pos:line="109" pos:column="5">if <condition pos:line="109" pos:column="8">(<expr><operator pos:line="109" pos:column="9">(<pos:position pos:line="109" pos:column="10"/></operator><name pos:line="109" pos:column="10">status<pos:position pos:line="109" pos:column="16"/></name> <operator pos:line="109" pos:column="17">!=<pos:position pos:line="109" pos:column="19"/></operator> <name pos:line="109" pos:column="20">STAT_SUCCESS<pos:position pos:line="109" pos:column="32"/></name><operator pos:line="109" pos:column="32">)<pos:position pos:line="109" pos:column="33"/></operator> <operator pos:line="109" pos:column="34">||<pos:position pos:line="109" pos:column="36"/></operator> <operator pos:line="109" pos:column="37">(<pos:position pos:line="109" pos:column="38"/></operator><name pos:line="109" pos:column="38">res<pos:position pos:line="109" pos:column="41"/></name> <operator pos:line="109" pos:column="42">==<pos:position pos:line="109" pos:column="44"/></operator> <name pos:line="109" pos:column="45">NULL<pos:position pos:line="109" pos:column="49"/></name><operator pos:line="109" pos:column="49">)<pos:position pos:line="109" pos:column="50"/></operator></expr>)<pos:position pos:line="109" pos:column="51"/></condition><then pos:line="109" pos:column="51"> <block pos:line="109" pos:column="52">{
      <decl_stmt><decl><type><name pos:line="110" pos:column="7">char<pos:position pos:line="110" pos:column="11"/></name> <modifier pos:line="110" pos:column="12">*<pos:position pos:line="110" pos:column="13"/></modifier></type><name pos:line="110" pos:column="13">errstr<pos:position pos:line="110" pos:column="19"/></name> <init pos:line="110" pos:column="20">= <expr><name pos:line="110" pos:column="22">NULL<pos:position pos:line="110" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="110" pos:column="27"/></decl_stmt>

      <expr_stmt><expr><call><name pos:line="112" pos:column="7">snmp_sess_error<pos:position pos:line="112" pos:column="22"/></name><argument_list pos:line="112" pos:column="22">(<argument><expr><name><name pos:line="112" pos:column="23">host<pos:position pos:line="112" pos:column="27"/></name><operator pos:line="112" pos:column="27">-&gt;<pos:position pos:line="112" pos:column="32"/></operator><name pos:line="112" pos:column="29">sess_handle<pos:position pos:line="112" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="42">NULL<pos:position pos:line="112" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="48">NULL<pos:position pos:line="112" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="112" pos:column="54">&amp;<pos:position pos:line="112" pos:column="59"/></operator><name pos:line="112" pos:column="55">errstr<pos:position pos:line="112" pos:column="61"/></name></expr></argument>)<pos:position pos:line="112" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="63"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="114" pos:column="7">c_complain<pos:position pos:line="114" pos:column="17"/></name><argument_list pos:line="114" pos:column="17">(<argument><expr><name pos:line="114" pos:column="18">LOG_ERR<pos:position pos:line="114" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="114" pos:column="27">&amp;<pos:position pos:line="114" pos:column="32"/></operator><name><name pos:line="114" pos:column="28">host<pos:position pos:line="114" pos:column="32"/></name><operator pos:line="114" pos:column="32">-&gt;<pos:position pos:line="114" pos:column="37"/></operator><name pos:line="114" pos:column="34">complaint<pos:position pos:line="114" pos:column="43"/></name></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="115" pos:column="18">"snmp plugin: host %s: snmp_sess_synch_response failed: %s"<pos:position pos:line="115" pos:column="77"/></literal></expr></argument>,
                 <argument><expr><name><name pos:line="116" pos:column="18">host<pos:position pos:line="116" pos:column="22"/></name><operator pos:line="116" pos:column="22">-&gt;<pos:position pos:line="116" pos:column="27"/></operator><name pos:line="116" pos:column="24">name<pos:position pos:line="116" pos:column="28"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="116" pos:column="30">(<pos:position pos:line="116" pos:column="31"/></operator><name pos:line="116" pos:column="31">errstr<pos:position pos:line="116" pos:column="37"/></name> <operator pos:line="116" pos:column="38">==<pos:position pos:line="116" pos:column="40"/></operator> <name pos:line="116" pos:column="41">NULL<pos:position pos:line="116" pos:column="45"/></name><operator pos:line="116" pos:column="45">)<pos:position pos:line="116" pos:column="46"/></operator></expr> ?<pos:position pos:line="116" pos:column="48"/></condition><then pos:line="116" pos:column="48"> <expr><literal type="string" pos:line="116" pos:column="49">"Unknown problem"<pos:position pos:line="116" pos:column="66"/></literal></expr> <pos:position pos:line="116" pos:column="67"/></then><else pos:line="116" pos:column="67">: <expr><name pos:line="116" pos:column="69">errstr<pos:position pos:line="116" pos:column="75"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="116" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="77"/></expr_stmt>

      <if pos:line="118" pos:column="7">if <condition pos:line="118" pos:column="10">(<expr><name pos:line="118" pos:column="11">res<pos:position pos:line="118" pos:column="14"/></name> <operator pos:line="118" pos:column="15">!=<pos:position pos:line="118" pos:column="17"/></operator> <name pos:line="118" pos:column="18">NULL<pos:position pos:line="118" pos:column="22"/></name></expr>)<pos:position pos:line="118" pos:column="23"/></condition><then pos:line="118" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="119" pos:column="9">snmp_free_pdu<pos:position pos:line="119" pos:column="22"/></name><argument_list pos:line="119" pos:column="22">(<argument><expr><name pos:line="119" pos:column="23">res<pos:position pos:line="119" pos:column="26"/></name></expr></argument>)<pos:position pos:line="119" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="28"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name pos:line="120" pos:column="7">res<pos:position pos:line="120" pos:column="10"/></name> <operator pos:line="120" pos:column="11">=<pos:position pos:line="120" pos:column="12"/></operator> <name pos:line="120" pos:column="13">NULL<pos:position pos:line="120" pos:column="17"/></name></expr>;<pos:position pos:line="120" pos:column="18"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="122" pos:column="7">sfree<pos:position pos:line="122" pos:column="12"/></name><argument_list pos:line="122" pos:column="12">(<argument><expr><name pos:line="122" pos:column="13">errstr<pos:position pos:line="122" pos:column="19"/></name></expr></argument>)<pos:position pos:line="122" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="123" pos:column="7">csnmp_host_close_session<pos:position pos:line="123" pos:column="31"/></name><argument_list pos:line="123" pos:column="31">(<argument><expr><name pos:line="123" pos:column="32">host<pos:position pos:line="123" pos:column="36"/></name></expr></argument>)<pos:position pos:line="123" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="38"/></expr_stmt>

      <expr_stmt><expr><name pos:line="125" pos:column="7">status<pos:position pos:line="125" pos:column="13"/></name> <operator pos:line="125" pos:column="14">=<pos:position pos:line="125" pos:column="15"/></operator> <operator pos:line="125" pos:column="16">-<pos:position pos:line="125" pos:column="17"/></operator><literal type="number" pos:line="125" pos:column="17">1<pos:position pos:line="125" pos:column="18"/></literal></expr>;<pos:position pos:line="125" pos:column="19"/></expr_stmt>
      <break pos:line="126" pos:column="7">break;<pos:position pos:line="126" pos:column="13"/></break>
    }<pos:position pos:line="127" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="129" pos:column="5">status<pos:position pos:line="129" pos:column="11"/></name> <operator pos:line="129" pos:column="12">=<pos:position pos:line="129" pos:column="13"/></operator> <literal type="number" pos:line="129" pos:column="14">0<pos:position pos:line="129" pos:column="15"/></literal></expr>;<pos:position pos:line="129" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="130" pos:column="5">assert<pos:position pos:line="130" pos:column="11"/></name><argument_list pos:line="130" pos:column="11">(<argument><expr><name pos:line="130" pos:column="12">res<pos:position pos:line="130" pos:column="15"/></name> <operator pos:line="130" pos:column="16">!=<pos:position pos:line="130" pos:column="18"/></operator> <name pos:line="130" pos:column="19">NULL<pos:position pos:line="130" pos:column="23"/></name></expr></argument>)<pos:position pos:line="130" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="131" pos:column="5">c_release<pos:position pos:line="131" pos:column="14"/></name><argument_list pos:line="131" pos:column="14">(<argument><expr><name pos:line="131" pos:column="15">LOG_INFO<pos:position pos:line="131" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="131" pos:column="25">&amp;<pos:position pos:line="131" pos:column="30"/></operator><name><name pos:line="131" pos:column="26">host<pos:position pos:line="131" pos:column="30"/></name><operator pos:line="131" pos:column="30">-&gt;<pos:position pos:line="131" pos:column="35"/></operator><name pos:line="131" pos:column="32">complaint<pos:position pos:line="131" pos:column="41"/></name></name></expr></argument>,
              <argument><expr><literal type="string" pos:line="132" pos:column="15">"snmp plugin: host %s: snmp_sess_synch_response successful."<pos:position pos:line="132" pos:column="75"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="133" pos:column="15">host<pos:position pos:line="133" pos:column="19"/></name><operator pos:line="133" pos:column="19">-&gt;<pos:position pos:line="133" pos:column="24"/></operator><name pos:line="133" pos:column="21">name<pos:position pos:line="133" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="133" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><name pos:line="135" pos:column="5">vb<pos:position pos:line="135" pos:column="7"/></name> <operator pos:line="135" pos:column="8">=<pos:position pos:line="135" pos:column="9"/></operator> <name><name pos:line="135" pos:column="10">res<pos:position pos:line="135" pos:column="13"/></name><operator pos:line="135" pos:column="13">-&gt;<pos:position pos:line="135" pos:column="18"/></operator><name pos:line="135" pos:column="15">variables<pos:position pos:line="135" pos:column="24"/></name></name></expr>;<pos:position pos:line="135" pos:column="25"/></expr_stmt>
    <if pos:line="136" pos:column="5">if <condition pos:line="136" pos:column="8">(<expr><name pos:line="136" pos:column="9">vb<pos:position pos:line="136" pos:column="11"/></name> <operator pos:line="136" pos:column="12">==<pos:position pos:line="136" pos:column="14"/></operator> <name pos:line="136" pos:column="15">NULL<pos:position pos:line="136" pos:column="19"/></name></expr>)<pos:position pos:line="136" pos:column="20"/></condition><then pos:line="136" pos:column="20"> <block pos:line="136" pos:column="21">{
      <expr_stmt><expr><name pos:line="137" pos:column="7">status<pos:position pos:line="137" pos:column="13"/></name> <operator pos:line="137" pos:column="14">=<pos:position pos:line="137" pos:column="15"/></operator> <operator pos:line="137" pos:column="16">-<pos:position pos:line="137" pos:column="17"/></operator><literal type="number" pos:line="137" pos:column="17">1<pos:position pos:line="137" pos:column="18"/></literal></expr>;<pos:position pos:line="137" pos:column="19"/></expr_stmt>
      <break pos:line="138" pos:column="7">break;<pos:position pos:line="138" pos:column="13"/></break>
    }<pos:position pos:line="139" pos:column="6"/></block></then></if>

    <for pos:line="141" pos:column="5">for <control pos:line="141" pos:column="9">(<init><expr><name pos:line="141" pos:column="10">vb<pos:position pos:line="141" pos:column="12"/></name> <operator pos:line="141" pos:column="13">=<pos:position pos:line="141" pos:column="14"/></operator> <name><name pos:line="141" pos:column="15">res<pos:position pos:line="141" pos:column="18"/></name><operator pos:line="141" pos:column="18">-&gt;<pos:position pos:line="141" pos:column="23"/></operator><name pos:line="141" pos:column="20">variables<pos:position pos:line="141" pos:column="29"/></name></name></expr><operator pos:line="141" pos:column="29">,<pos:position pos:line="141" pos:column="30"/></operator> <expr><name pos:line="141" pos:column="31">i<pos:position pos:line="141" pos:column="32"/></name> <operator pos:line="141" pos:column="33">=<pos:position pos:line="141" pos:column="34"/></operator> <literal type="number" pos:line="141" pos:column="35">0<pos:position pos:line="141" pos:column="36"/></literal></expr>;<pos:position pos:line="141" pos:column="37"/></init> <condition><expr><operator pos:line="141" pos:column="38">(<pos:position pos:line="141" pos:column="39"/></operator><name pos:line="141" pos:column="39">vb<pos:position pos:line="141" pos:column="41"/></name> <operator pos:line="141" pos:column="42">!=<pos:position pos:line="141" pos:column="44"/></operator> <name pos:line="141" pos:column="45">NULL<pos:position pos:line="141" pos:column="49"/></name><operator pos:line="141" pos:column="49">)<pos:position pos:line="141" pos:column="50"/></operator></expr>;<pos:position pos:line="141" pos:column="51"/></condition>
         <incr><expr><name pos:line="142" pos:column="10">vb<pos:position pos:line="142" pos:column="12"/></name> <operator pos:line="142" pos:column="13">=<pos:position pos:line="142" pos:column="14"/></operator> <name><name pos:line="142" pos:column="15">vb<pos:position pos:line="142" pos:column="17"/></name><operator pos:line="142" pos:column="17">-&gt;<pos:position pos:line="142" pos:column="22"/></operator><name pos:line="142" pos:column="19">next_variable<pos:position pos:line="142" pos:column="32"/></name></name></expr><operator pos:line="142" pos:column="32">,<pos:position pos:line="142" pos:column="33"/></operator> <expr><name pos:line="142" pos:column="34">i<pos:position pos:line="142" pos:column="35"/></name><operator pos:line="142" pos:column="35">++<pos:position pos:line="142" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="142" pos:column="38"/></control> <block pos:line="142" pos:column="39">{
      <comment type="block" pos:line="143" pos:column="7">/* Calculate value index from todo list */</comment>
      <while pos:line="144" pos:column="7">while <condition pos:line="144" pos:column="13">(<expr><operator pos:line="144" pos:column="14">(<pos:position pos:line="144" pos:column="15"/></operator><name pos:line="144" pos:column="15">i<pos:position pos:line="144" pos:column="16"/></name> <operator pos:line="144" pos:column="17">&lt;<pos:position pos:line="144" pos:column="21"/></operator> <name pos:line="144" pos:column="19">oid_list_len<pos:position pos:line="144" pos:column="31"/></name><operator pos:line="144" pos:column="31">)<pos:position pos:line="144" pos:column="32"/></operator> <operator pos:line="144" pos:column="33">&amp;&amp;<pos:position pos:line="144" pos:column="43"/></operator> <operator pos:line="144" pos:column="36">!<pos:position pos:line="144" pos:column="37"/></operator><name><name pos:line="144" pos:column="37">oid_list_todo<pos:position pos:line="144" pos:column="50"/></name><index pos:line="144" pos:column="50">[<expr><name pos:line="144" pos:column="51">i<pos:position pos:line="144" pos:column="52"/></name></expr>]<pos:position pos:line="144" pos:column="53"/></index></name></expr>)<pos:position pos:line="144" pos:column="54"/></condition>
        <block type="pseudo"><expr_stmt><expr><name pos:line="145" pos:column="9">i<pos:position pos:line="145" pos:column="10"/></name><operator pos:line="145" pos:column="10">++<pos:position pos:line="145" pos:column="12"/></operator></expr>;<pos:position pos:line="145" pos:column="13"/></expr_stmt></block></while>

      <comment type="block" pos:line="147" pos:column="7">/* An instance is configured and the res variable we process is the
       * instance value (last index) */</comment>
      <if pos:line="149" pos:column="7">if <condition pos:line="149" pos:column="10">(<expr><operator pos:line="149" pos:column="11">(<pos:position pos:line="149" pos:column="12"/></operator><name><name pos:line="149" pos:column="12">data<pos:position pos:line="149" pos:column="16"/></name><operator pos:line="149" pos:column="16">-&gt;<pos:position pos:line="149" pos:column="21"/></operator><name pos:line="149" pos:column="18">instance<pos:position pos:line="149" pos:column="26"/></name><operator pos:line="149" pos:column="26">.<pos:position pos:line="149" pos:column="27"/></operator><name pos:line="149" pos:column="27">oid<pos:position pos:line="149" pos:column="30"/></name><operator pos:line="149" pos:column="30">.<pos:position pos:line="149" pos:column="31"/></operator><name pos:line="149" pos:column="31">oid_len<pos:position pos:line="149" pos:column="38"/></name></name> <operator pos:line="149" pos:column="39">&gt;<pos:position pos:line="149" pos:column="43"/></operator> <literal type="number" pos:line="149" pos:column="41">0<pos:position pos:line="149" pos:column="42"/></literal><operator pos:line="149" pos:column="42">)<pos:position pos:line="149" pos:column="43"/></operator> <operator pos:line="149" pos:column="44">&amp;&amp;<pos:position pos:line="149" pos:column="54"/></operator> <operator pos:line="149" pos:column="47">(<pos:position pos:line="149" pos:column="48"/></operator><name pos:line="149" pos:column="48">i<pos:position pos:line="149" pos:column="49"/></name> <operator pos:line="149" pos:column="50">==<pos:position pos:line="149" pos:column="52"/></operator> <name><name pos:line="149" pos:column="53">data<pos:position pos:line="149" pos:column="57"/></name><operator pos:line="149" pos:column="57">-&gt;<pos:position pos:line="149" pos:column="62"/></operator><name pos:line="149" pos:column="59">values_len<pos:position pos:line="149" pos:column="69"/></name></name><operator pos:line="149" pos:column="69">)<pos:position pos:line="149" pos:column="70"/></operator></expr>)<pos:position pos:line="149" pos:column="71"/></condition><then pos:line="149" pos:column="71"> <block pos:line="149" pos:column="72">{
        <if pos:line="150" pos:column="9">if <condition pos:line="150" pos:column="12">(<expr><operator pos:line="150" pos:column="13">(<pos:position pos:line="150" pos:column="14"/></operator><name><name pos:line="150" pos:column="14">vb<pos:position pos:line="150" pos:column="16"/></name><operator pos:line="150" pos:column="16">-&gt;<pos:position pos:line="150" pos:column="21"/></operator><name pos:line="150" pos:column="18">type<pos:position pos:line="150" pos:column="22"/></name></name> <operator pos:line="150" pos:column="23">==<pos:position pos:line="150" pos:column="25"/></operator> <name pos:line="150" pos:column="26">SNMP_ENDOFMIBVIEW<pos:position pos:line="150" pos:column="43"/></name><operator pos:line="150" pos:column="43">)<pos:position pos:line="150" pos:column="44"/></operator> <operator pos:line="150" pos:column="45">||<pos:position pos:line="150" pos:column="47"/></operator>
            <operator pos:line="151" pos:column="13">(<pos:position pos:line="151" pos:column="14"/></operator><call><name pos:line="151" pos:column="14">snmp_oid_ncompare<pos:position pos:line="151" pos:column="31"/></name><argument_list pos:line="151" pos:column="31">(
                 <argument><expr><name><name pos:line="152" pos:column="18">data<pos:position pos:line="152" pos:column="22"/></name><operator pos:line="152" pos:column="22">-&gt;<pos:position pos:line="152" pos:column="27"/></operator><name pos:line="152" pos:column="24">instance<pos:position pos:line="152" pos:column="32"/></name><operator pos:line="152" pos:column="32">.<pos:position pos:line="152" pos:column="33"/></operator><name pos:line="152" pos:column="33">oid<pos:position pos:line="152" pos:column="36"/></name><operator pos:line="152" pos:column="36">.<pos:position pos:line="152" pos:column="37"/></operator><name pos:line="152" pos:column="37">oid<pos:position pos:line="152" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="152" pos:column="42">data<pos:position pos:line="152" pos:column="46"/></name><operator pos:line="152" pos:column="46">-&gt;<pos:position pos:line="152" pos:column="51"/></operator><name pos:line="152" pos:column="48">instance<pos:position pos:line="152" pos:column="56"/></name><operator pos:line="152" pos:column="56">.<pos:position pos:line="152" pos:column="57"/></operator><name pos:line="152" pos:column="57">oid<pos:position pos:line="152" pos:column="60"/></name><operator pos:line="152" pos:column="60">.<pos:position pos:line="152" pos:column="61"/></operator><name pos:line="152" pos:column="61">oid_len<pos:position pos:line="152" pos:column="68"/></name></name></expr></argument>, <argument><expr><name><name pos:line="152" pos:column="70">vb<pos:position pos:line="152" pos:column="72"/></name><operator pos:line="152" pos:column="72">-&gt;<pos:position pos:line="152" pos:column="77"/></operator><name pos:line="152" pos:column="74">name<pos:position pos:line="152" pos:column="78"/></name></name></expr></argument>,
                 <argument><expr><name><name pos:line="153" pos:column="18">vb<pos:position pos:line="153" pos:column="20"/></name><operator pos:line="153" pos:column="20">-&gt;<pos:position pos:line="153" pos:column="25"/></operator><name pos:line="153" pos:column="22">name_length<pos:position pos:line="153" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="153" pos:column="35">data<pos:position pos:line="153" pos:column="39"/></name><operator pos:line="153" pos:column="39">-&gt;<pos:position pos:line="153" pos:column="44"/></operator><name pos:line="153" pos:column="41">instance<pos:position pos:line="153" pos:column="49"/></name><operator pos:line="153" pos:column="49">.<pos:position pos:line="153" pos:column="50"/></operator><name pos:line="153" pos:column="50">oid<pos:position pos:line="153" pos:column="53"/></name><operator pos:line="153" pos:column="53">.<pos:position pos:line="153" pos:column="54"/></operator><name pos:line="153" pos:column="54">oid_len<pos:position pos:line="153" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="153" pos:column="62"/></argument_list></call> <operator pos:line="153" pos:column="63">!=<pos:position pos:line="153" pos:column="65"/></operator> <literal type="number" pos:line="153" pos:column="66">0<pos:position pos:line="153" pos:column="67"/></literal><operator pos:line="153" pos:column="67">)<pos:position pos:line="153" pos:column="68"/></operator></expr>)<pos:position pos:line="153" pos:column="69"/></condition><then pos:line="153" pos:column="69"> <block pos:line="153" pos:column="70">{
          <expr_stmt><expr><call><name pos:line="154" pos:column="11">DEBUG<pos:position pos:line="154" pos:column="16"/></name><argument_list pos:line="154" pos:column="16">(<argument><expr><literal type="string" pos:line="154" pos:column="17">"snmp plugin: host = %s; data = %s; Instance left its subtree."<pos:position pos:line="154" pos:column="80"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="155" pos:column="17">host<pos:position pos:line="155" pos:column="21"/></name><operator pos:line="155" pos:column="21">-&gt;<pos:position pos:line="155" pos:column="26"/></operator><name pos:line="155" pos:column="23">name<pos:position pos:line="155" pos:column="27"/></name></name></expr></argument>, <argument><expr><name><name pos:line="155" pos:column="29">data<pos:position pos:line="155" pos:column="33"/></name><operator pos:line="155" pos:column="33">-&gt;<pos:position pos:line="155" pos:column="38"/></operator><name pos:line="155" pos:column="35">name<pos:position pos:line="155" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="155" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="41"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="156" pos:column="11">oid_list_todo<pos:position pos:line="156" pos:column="24"/></name><index pos:line="156" pos:column="24">[<expr><name pos:line="156" pos:column="25">i<pos:position pos:line="156" pos:column="26"/></name></expr>]<pos:position pos:line="156" pos:column="27"/></index></name> <operator pos:line="156" pos:column="28">=<pos:position pos:line="156" pos:column="29"/></operator> <literal type="number" pos:line="156" pos:column="30">0<pos:position pos:line="156" pos:column="31"/></literal></expr>;<pos:position pos:line="156" pos:column="32"/></expr_stmt>
          <continue pos:line="157" pos:column="11">continue;<pos:position pos:line="157" pos:column="20"/></continue>
        }<pos:position pos:line="158" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="160" pos:column="9">/* Allocate a new `csnmp_list_instances_t', insert the instance name and
         * add it to the list */</comment>
        <if pos:line="162" pos:column="9">if <condition pos:line="162" pos:column="12">(<expr><call><name pos:line="162" pos:column="13">csnmp_instance_list_add<pos:position pos:line="162" pos:column="36"/></name><argument_list pos:line="162" pos:column="36">(<argument><expr><operator pos:line="162" pos:column="37">&amp;<pos:position pos:line="162" pos:column="42"/></operator><name pos:line="162" pos:column="38">instance_list_head<pos:position pos:line="162" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="162" pos:column="58">&amp;<pos:position pos:line="162" pos:column="63"/></operator><name pos:line="162" pos:column="59">instance_list_tail<pos:position pos:line="162" pos:column="77"/></name></expr></argument>,
                                    <argument><expr><name pos:line="163" pos:column="37">res<pos:position pos:line="163" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="163" pos:column="42">host<pos:position pos:line="163" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="163" pos:column="48">data<pos:position pos:line="163" pos:column="52"/></name></expr></argument>)<pos:position pos:line="163" pos:column="53"/></argument_list></call> <operator pos:line="163" pos:column="54">!=<pos:position pos:line="163" pos:column="56"/></operator> <literal type="number" pos:line="163" pos:column="57">0<pos:position pos:line="163" pos:column="58"/></literal></expr>)<pos:position pos:line="163" pos:column="59"/></condition><then pos:line="163" pos:column="59"> <block pos:line="163" pos:column="60">{
          <expr_stmt><expr><call><name pos:line="164" pos:column="11">ERROR<pos:position pos:line="164" pos:column="16"/></name><argument_list pos:line="164" pos:column="16">(<argument><expr><literal type="string" pos:line="164" pos:column="17">"snmp plugin: host %s: csnmp_instance_list_add failed."<pos:position pos:line="164" pos:column="72"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="165" pos:column="17">host<pos:position pos:line="165" pos:column="21"/></name><operator pos:line="165" pos:column="21">-&gt;<pos:position pos:line="165" pos:column="26"/></operator><name pos:line="165" pos:column="23">name<pos:position pos:line="165" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="165" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="29"/></expr_stmt>
          <expr_stmt><expr><name pos:line="166" pos:column="11">status<pos:position pos:line="166" pos:column="17"/></name> <operator pos:line="166" pos:column="18">=<pos:position pos:line="166" pos:column="19"/></operator> <operator pos:line="166" pos:column="20">-<pos:position pos:line="166" pos:column="21"/></operator><literal type="number" pos:line="166" pos:column="21">1<pos:position pos:line="166" pos:column="22"/></literal></expr>;<pos:position pos:line="166" pos:column="23"/></expr_stmt>
          <break pos:line="167" pos:column="11">break;<pos:position pos:line="167" pos:column="17"/></break>
        }<pos:position pos:line="168" pos:column="10"/></block></then></if>
      }<pos:position pos:line="169" pos:column="8"/></block></then> <else pos:line="169" pos:column="9">else <comment type="block" pos:line="169" pos:column="14">/* The variable we are processing is a normal value */</comment>
      <block pos:line="170" pos:column="7">{
        <decl_stmt><decl><type><name pos:line="171" pos:column="9">csnmp_table_values_t<pos:position pos:line="171" pos:column="29"/></name> <modifier pos:line="171" pos:column="30">*<pos:position pos:line="171" pos:column="31"/></modifier></type><name pos:line="171" pos:column="31">vt<pos:position pos:line="171" pos:column="33"/></name></decl>;<pos:position pos:line="171" pos:column="34"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="172" pos:column="9">oid_t<pos:position pos:line="172" pos:column="14"/></name></type> <name pos:line="172" pos:column="15">vb_name<pos:position pos:line="172" pos:column="22"/></name></decl>;<pos:position pos:line="172" pos:column="23"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="173" pos:column="9">oid_t<pos:position pos:line="173" pos:column="14"/></name></type> <name pos:line="173" pos:column="15">suffix<pos:position pos:line="173" pos:column="21"/></name></decl>;<pos:position pos:line="173" pos:column="22"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="174" pos:column="9">int<pos:position pos:line="174" pos:column="12"/></name></type> <name pos:line="174" pos:column="13">ret<pos:position pos:line="174" pos:column="16"/></name></decl>;<pos:position pos:line="174" pos:column="17"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="176" pos:column="9">csnmp_oid_init<pos:position pos:line="176" pos:column="23"/></name><argument_list pos:line="176" pos:column="23">(<argument><expr><operator pos:line="176" pos:column="24">&amp;<pos:position pos:line="176" pos:column="29"/></operator><name pos:line="176" pos:column="25">vb_name<pos:position pos:line="176" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="176" pos:column="34">vb<pos:position pos:line="176" pos:column="36"/></name><operator pos:line="176" pos:column="36">-&gt;<pos:position pos:line="176" pos:column="41"/></operator><name pos:line="176" pos:column="38">name<pos:position pos:line="176" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="176" pos:column="44">vb<pos:position pos:line="176" pos:column="46"/></name><operator pos:line="176" pos:column="46">-&gt;<pos:position pos:line="176" pos:column="51"/></operator><name pos:line="176" pos:column="48">name_length<pos:position pos:line="176" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="176" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="61"/></expr_stmt>

        <comment type="block" pos:line="178" pos:column="9">/* Calculate the current suffix. This is later used to check that the
         * suffix is increasing. This also checks if we left the subtree */</comment>
        <expr_stmt><expr><name pos:line="180" pos:column="9">ret<pos:position pos:line="180" pos:column="12"/></name> <operator pos:line="180" pos:column="13">=<pos:position pos:line="180" pos:column="14"/></operator> <call><name pos:line="180" pos:column="15">csnmp_oid_suffix<pos:position pos:line="180" pos:column="31"/></name><argument_list pos:line="180" pos:column="31">(<argument><expr><operator pos:line="180" pos:column="32">&amp;<pos:position pos:line="180" pos:column="37"/></operator><name pos:line="180" pos:column="33">suffix<pos:position pos:line="180" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="180" pos:column="41">&amp;<pos:position pos:line="180" pos:column="46"/></operator><name pos:line="180" pos:column="42">vb_name<pos:position pos:line="180" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="180" pos:column="51">data<pos:position pos:line="180" pos:column="55"/></name><operator pos:line="180" pos:column="55">-&gt;<pos:position pos:line="180" pos:column="60"/></operator><name pos:line="180" pos:column="57">values<pos:position pos:line="180" pos:column="63"/></name></name> <operator pos:line="180" pos:column="64">+<pos:position pos:line="180" pos:column="65"/></operator> <name pos:line="180" pos:column="66">i<pos:position pos:line="180" pos:column="67"/></name></expr></argument>)<pos:position pos:line="180" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="69"/></expr_stmt>
        <if pos:line="181" pos:column="9">if <condition pos:line="181" pos:column="12">(<expr><name pos:line="181" pos:column="13">ret<pos:position pos:line="181" pos:column="16"/></name> <operator pos:line="181" pos:column="17">!=<pos:position pos:line="181" pos:column="19"/></operator> <literal type="number" pos:line="181" pos:column="20">0<pos:position pos:line="181" pos:column="21"/></literal></expr>)<pos:position pos:line="181" pos:column="22"/></condition><then pos:line="181" pos:column="22"> <block pos:line="181" pos:column="23">{
          <expr_stmt><expr><call><name pos:line="182" pos:column="11">DEBUG<pos:position pos:line="182" pos:column="16"/></name><argument_list pos:line="182" pos:column="16">(<argument><expr><literal type="string" pos:line="182" pos:column="17">"snmp plugin: host = %s; data = %s; i = %zu; "<pos:position pos:line="182" pos:column="63"/></literal>
                <literal type="string" pos:line="183" pos:column="17">"Value probably left its subtree."<pos:position pos:line="183" pos:column="51"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="184" pos:column="17">host<pos:position pos:line="184" pos:column="21"/></name><operator pos:line="184" pos:column="21">-&gt;<pos:position pos:line="184" pos:column="26"/></operator><name pos:line="184" pos:column="23">name<pos:position pos:line="184" pos:column="27"/></name></name></expr></argument>, <argument><expr><name><name pos:line="184" pos:column="29">data<pos:position pos:line="184" pos:column="33"/></name><operator pos:line="184" pos:column="33">-&gt;<pos:position pos:line="184" pos:column="38"/></operator><name pos:line="184" pos:column="35">name<pos:position pos:line="184" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="184" pos:column="41">i<pos:position pos:line="184" pos:column="42"/></name></expr></argument>)<pos:position pos:line="184" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="44"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="185" pos:column="11">oid_list_todo<pos:position pos:line="185" pos:column="24"/></name><index pos:line="185" pos:column="24">[<expr><name pos:line="185" pos:column="25">i<pos:position pos:line="185" pos:column="26"/></name></expr>]<pos:position pos:line="185" pos:column="27"/></index></name> <operator pos:line="185" pos:column="28">=<pos:position pos:line="185" pos:column="29"/></operator> <literal type="number" pos:line="185" pos:column="30">0<pos:position pos:line="185" pos:column="31"/></literal></expr>;<pos:position pos:line="185" pos:column="32"/></expr_stmt>
          <continue pos:line="186" pos:column="11">continue;<pos:position pos:line="186" pos:column="20"/></continue>
        }<pos:position pos:line="187" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="189" pos:column="9">/* Make sure the OIDs returned by the agent are increasing. Otherwise
         * our
         * table matching algorithm will get confused. */</comment>
        <if pos:line="192" pos:column="9">if <condition pos:line="192" pos:column="12">(<expr><operator pos:line="192" pos:column="13">(<pos:position pos:line="192" pos:column="14"/></operator><name><name pos:line="192" pos:column="14">value_list_tail<pos:position pos:line="192" pos:column="29"/></name><index pos:line="192" pos:column="29">[<expr><name pos:line="192" pos:column="30">i<pos:position pos:line="192" pos:column="31"/></name></expr>]<pos:position pos:line="192" pos:column="32"/></index></name> <operator pos:line="192" pos:column="33">!=<pos:position pos:line="192" pos:column="35"/></operator> <name pos:line="192" pos:column="36">NULL<pos:position pos:line="192" pos:column="40"/></name><operator pos:line="192" pos:column="40">)<pos:position pos:line="192" pos:column="41"/></operator> <operator pos:line="192" pos:column="42">&amp;&amp;<pos:position pos:line="192" pos:column="52"/></operator>
            <operator pos:line="193" pos:column="13">(<pos:position pos:line="193" pos:column="14"/></operator><call><name pos:line="193" pos:column="14">csnmp_oid_compare<pos:position pos:line="193" pos:column="31"/></name><argument_list pos:line="193" pos:column="31">(<argument><expr><operator pos:line="193" pos:column="32">&amp;<pos:position pos:line="193" pos:column="37"/></operator><name pos:line="193" pos:column="33">suffix<pos:position pos:line="193" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="193" pos:column="41">&amp;<pos:position pos:line="193" pos:column="46"/></operator><name><name pos:line="193" pos:column="42">value_list_tail<pos:position pos:line="193" pos:column="57"/></name><index pos:line="193" pos:column="57">[<expr><name pos:line="193" pos:column="58">i<pos:position pos:line="193" pos:column="59"/></name></expr>]<pos:position pos:line="193" pos:column="60"/></index></name><operator pos:line="193" pos:column="60">-&gt;<pos:position pos:line="193" pos:column="65"/></operator><name pos:line="193" pos:column="62">suffix<pos:position pos:line="193" pos:column="68"/></name></expr></argument>)<pos:position pos:line="193" pos:column="69"/></argument_list></call> <operator pos:line="193" pos:column="70">&lt;=<pos:position pos:line="193" pos:column="75"/></operator> <literal type="number" pos:line="193" pos:column="73">0<pos:position pos:line="193" pos:column="74"/></literal><operator pos:line="193" pos:column="74">)<pos:position pos:line="193" pos:column="75"/></operator></expr>)<pos:position pos:line="193" pos:column="76"/></condition><then pos:line="193" pos:column="76"> <block pos:line="193" pos:column="77">{
          <expr_stmt><expr><call><name pos:line="194" pos:column="11">DEBUG<pos:position pos:line="194" pos:column="16"/></name><argument_list pos:line="194" pos:column="16">(<argument><expr><literal type="string" pos:line="194" pos:column="17">"snmp plugin: host = %s; data = %s; i = %zu; "<pos:position pos:line="194" pos:column="63"/></literal>
                <literal type="string" pos:line="195" pos:column="17">"Suffix is not increasing."<pos:position pos:line="195" pos:column="44"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="196" pos:column="17">host<pos:position pos:line="196" pos:column="21"/></name><operator pos:line="196" pos:column="21">-&gt;<pos:position pos:line="196" pos:column="26"/></operator><name pos:line="196" pos:column="23">name<pos:position pos:line="196" pos:column="27"/></name></name></expr></argument>, <argument><expr><name><name pos:line="196" pos:column="29">data<pos:position pos:line="196" pos:column="33"/></name><operator pos:line="196" pos:column="33">-&gt;<pos:position pos:line="196" pos:column="38"/></operator><name pos:line="196" pos:column="35">name<pos:position pos:line="196" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="196" pos:column="41">i<pos:position pos:line="196" pos:column="42"/></name></expr></argument>)<pos:position pos:line="196" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="44"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="197" pos:column="11">oid_list_todo<pos:position pos:line="197" pos:column="24"/></name><index pos:line="197" pos:column="24">[<expr><name pos:line="197" pos:column="25">i<pos:position pos:line="197" pos:column="26"/></name></expr>]<pos:position pos:line="197" pos:column="27"/></index></name> <operator pos:line="197" pos:column="28">=<pos:position pos:line="197" pos:column="29"/></operator> <literal type="number" pos:line="197" pos:column="30">0<pos:position pos:line="197" pos:column="31"/></literal></expr>;<pos:position pos:line="197" pos:column="32"/></expr_stmt>
          <continue pos:line="198" pos:column="11">continue;<pos:position pos:line="198" pos:column="20"/></continue>
        }<pos:position pos:line="199" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="201" pos:column="9">vt<pos:position pos:line="201" pos:column="11"/></name> <operator pos:line="201" pos:column="12">=<pos:position pos:line="201" pos:column="13"/></operator> <call><name pos:line="201" pos:column="14">calloc<pos:position pos:line="201" pos:column="20"/></name><argument_list pos:line="201" pos:column="20">(<argument><expr><literal type="number" pos:line="201" pos:column="21">1<pos:position pos:line="201" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="201" pos:column="24">sizeof<argument_list pos:line="201" pos:column="30">(<argument><expr><operator pos:line="201" pos:column="31">*<pos:position pos:line="201" pos:column="32"/></operator><name pos:line="201" pos:column="32">vt<pos:position pos:line="201" pos:column="34"/></name></expr></argument>)<pos:position pos:line="201" pos:column="35"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="201" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="37"/></expr_stmt>
        <if pos:line="202" pos:column="9">if <condition pos:line="202" pos:column="12">(<expr><name pos:line="202" pos:column="13">vt<pos:position pos:line="202" pos:column="15"/></name> <operator pos:line="202" pos:column="16">==<pos:position pos:line="202" pos:column="18"/></operator> <name pos:line="202" pos:column="19">NULL<pos:position pos:line="202" pos:column="23"/></name></expr>)<pos:position pos:line="202" pos:column="24"/></condition><then pos:line="202" pos:column="24"> <block pos:line="202" pos:column="25">{
          <expr_stmt><expr><call><name pos:line="203" pos:column="11">ERROR<pos:position pos:line="203" pos:column="16"/></name><argument_list pos:line="203" pos:column="16">(<argument><expr><literal type="string" pos:line="203" pos:column="17">"snmp plugin: calloc failed."<pos:position pos:line="203" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="203" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="203" pos:column="48"/></expr_stmt>
          <expr_stmt><expr><name pos:line="204" pos:column="11">status<pos:position pos:line="204" pos:column="17"/></name> <operator pos:line="204" pos:column="18">=<pos:position pos:line="204" pos:column="19"/></operator> <operator pos:line="204" pos:column="20">-<pos:position pos:line="204" pos:column="21"/></operator><literal type="number" pos:line="204" pos:column="21">1<pos:position pos:line="204" pos:column="22"/></literal></expr>;<pos:position pos:line="204" pos:column="23"/></expr_stmt>
          <break pos:line="205" pos:column="11">break;<pos:position pos:line="205" pos:column="17"/></break>
        }<pos:position pos:line="206" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name><name pos:line="208" pos:column="9">vt<pos:position pos:line="208" pos:column="11"/></name><operator pos:line="208" pos:column="11">-&gt;<pos:position pos:line="208" pos:column="16"/></operator><name pos:line="208" pos:column="13">value<pos:position pos:line="208" pos:column="18"/></name></name> <operator pos:line="208" pos:column="19">=<pos:position pos:line="208" pos:column="20"/></operator>
            <call><name pos:line="209" pos:column="13">csnmp_value_list_to_value<pos:position pos:line="209" pos:column="38"/></name><argument_list pos:line="209" pos:column="38">(<argument><expr><name pos:line="209" pos:column="39">vb<pos:position pos:line="209" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="209" pos:column="43">ds<pos:position pos:line="209" pos:column="45"/></name><operator pos:line="209" pos:column="45">-&gt;<pos:position pos:line="209" pos:column="50"/></operator><name pos:line="209" pos:column="47">ds<pos:position pos:line="209" pos:column="49"/></name><index pos:line="209" pos:column="49">[<expr><name pos:line="209" pos:column="50">i<pos:position pos:line="209" pos:column="51"/></name></expr>]<pos:position pos:line="209" pos:column="52"/></index></name><operator pos:line="209" pos:column="52">.<pos:position pos:line="209" pos:column="53"/></operator><name pos:line="209" pos:column="53">type<pos:position pos:line="209" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="209" pos:column="59">data<pos:position pos:line="209" pos:column="63"/></name><operator pos:line="209" pos:column="63">-&gt;<pos:position pos:line="209" pos:column="68"/></operator><name pos:line="209" pos:column="65">scale<pos:position pos:line="209" pos:column="70"/></name></name></expr></argument>,
                                      <argument><expr><name><name pos:line="210" pos:column="39">data<pos:position pos:line="210" pos:column="43"/></name><operator pos:line="210" pos:column="43">-&gt;<pos:position pos:line="210" pos:column="48"/></operator><name pos:line="210" pos:column="45">shift<pos:position pos:line="210" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="210" pos:column="52">host<pos:position pos:line="210" pos:column="56"/></name><operator pos:line="210" pos:column="56">-&gt;<pos:position pos:line="210" pos:column="61"/></operator><name pos:line="210" pos:column="58">name<pos:position pos:line="210" pos:column="62"/></name></name></expr></argument>, <argument><expr><name><name pos:line="210" pos:column="64">data<pos:position pos:line="210" pos:column="68"/></name><operator pos:line="210" pos:column="68">-&gt;<pos:position pos:line="210" pos:column="73"/></operator><name pos:line="210" pos:column="70">name<pos:position pos:line="210" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="210" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="76"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="211" pos:column="9">memcpy<pos:position pos:line="211" pos:column="15"/></name><argument_list pos:line="211" pos:column="15">(<argument><expr><operator pos:line="211" pos:column="16">&amp;<pos:position pos:line="211" pos:column="21"/></operator><name><name pos:line="211" pos:column="17">vt<pos:position pos:line="211" pos:column="19"/></name><operator pos:line="211" pos:column="19">-&gt;<pos:position pos:line="211" pos:column="24"/></operator><name pos:line="211" pos:column="21">suffix<pos:position pos:line="211" pos:column="27"/></name></name></expr></argument>, <argument><expr><operator pos:line="211" pos:column="29">&amp;<pos:position pos:line="211" pos:column="34"/></operator><name pos:line="211" pos:column="30">suffix<pos:position pos:line="211" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="211" pos:column="38">sizeof<argument_list pos:line="211" pos:column="44">(<argument><expr><name><name pos:line="211" pos:column="45">vt<pos:position pos:line="211" pos:column="47"/></name><operator pos:line="211" pos:column="47">-&gt;<pos:position pos:line="211" pos:column="52"/></operator><name pos:line="211" pos:column="49">suffix<pos:position pos:line="211" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="211" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="211" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="211" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="212" pos:column="9">vt<pos:position pos:line="212" pos:column="11"/></name><operator pos:line="212" pos:column="11">-&gt;<pos:position pos:line="212" pos:column="16"/></operator><name pos:line="212" pos:column="13">next<pos:position pos:line="212" pos:column="17"/></name></name> <operator pos:line="212" pos:column="18">=<pos:position pos:line="212" pos:column="19"/></operator> <name pos:line="212" pos:column="20">NULL<pos:position pos:line="212" pos:column="24"/></name></expr>;<pos:position pos:line="212" pos:column="25"/></expr_stmt>

        <if pos:line="214" pos:column="9">if <condition pos:line="214" pos:column="12">(<expr><name><name pos:line="214" pos:column="13">value_list_tail<pos:position pos:line="214" pos:column="28"/></name><index pos:line="214" pos:column="28">[<expr><name pos:line="214" pos:column="29">i<pos:position pos:line="214" pos:column="30"/></name></expr>]<pos:position pos:line="214" pos:column="31"/></index></name> <operator pos:line="214" pos:column="32">==<pos:position pos:line="214" pos:column="34"/></operator> <name pos:line="214" pos:column="35">NULL<pos:position pos:line="214" pos:column="39"/></name></expr>)<pos:position pos:line="214" pos:column="40"/></condition><then pos:line="214" pos:column="40">
          <block type="pseudo"><expr_stmt><expr><name><name pos:line="215" pos:column="11">value_list_head<pos:position pos:line="215" pos:column="26"/></name><index pos:line="215" pos:column="26">[<expr><name pos:line="215" pos:column="27">i<pos:position pos:line="215" pos:column="28"/></name></expr>]<pos:position pos:line="215" pos:column="29"/></index></name> <operator pos:line="215" pos:column="30">=<pos:position pos:line="215" pos:column="31"/></operator> <name pos:line="215" pos:column="32">vt<pos:position pos:line="215" pos:column="34"/></name></expr>;<pos:position pos:line="215" pos:column="35"/></expr_stmt></block></then>
        <else pos:line="216" pos:column="9">else
          <block type="pseudo"><expr_stmt><expr><name><name pos:line="217" pos:column="11">value_list_tail<pos:position pos:line="217" pos:column="26"/></name><index pos:line="217" pos:column="26">[<expr><name pos:line="217" pos:column="27">i<pos:position pos:line="217" pos:column="28"/></name></expr>]<pos:position pos:line="217" pos:column="29"/></index></name><operator pos:line="217" pos:column="29">-&gt;<pos:position pos:line="217" pos:column="34"/></operator><name pos:line="217" pos:column="31">next<pos:position pos:line="217" pos:column="35"/></name> <operator pos:line="217" pos:column="36">=<pos:position pos:line="217" pos:column="37"/></operator> <name pos:line="217" pos:column="38">vt<pos:position pos:line="217" pos:column="40"/></name></expr>;<pos:position pos:line="217" pos:column="41"/></expr_stmt></block></else></if>
        <expr_stmt><expr><name><name pos:line="218" pos:column="9">value_list_tail<pos:position pos:line="218" pos:column="24"/></name><index pos:line="218" pos:column="24">[<expr><name pos:line="218" pos:column="25">i<pos:position pos:line="218" pos:column="26"/></name></expr>]<pos:position pos:line="218" pos:column="27"/></index></name> <operator pos:line="218" pos:column="28">=<pos:position pos:line="218" pos:column="29"/></operator> <name pos:line="218" pos:column="30">vt<pos:position pos:line="218" pos:column="32"/></name></expr>;<pos:position pos:line="218" pos:column="33"/></expr_stmt>
      }<pos:position pos:line="219" pos:column="8"/></block></else></if>

      <comment type="block" pos:line="221" pos:column="7">/* Copy OID to oid_list[i] */</comment>
      <expr_stmt><expr><call><name pos:line="222" pos:column="7">memcpy<pos:position pos:line="222" pos:column="13"/></name><argument_list pos:line="222" pos:column="13">(<argument><expr><name><name pos:line="222" pos:column="14">oid_list<pos:position pos:line="222" pos:column="22"/></name><index pos:line="222" pos:column="22">[<expr><name pos:line="222" pos:column="23">i<pos:position pos:line="222" pos:column="24"/></name></expr>]<pos:position pos:line="222" pos:column="25"/></index></name><operator pos:line="222" pos:column="25">.<pos:position pos:line="222" pos:column="26"/></operator><name pos:line="222" pos:column="26">oid<pos:position pos:line="222" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="222" pos:column="31">vb<pos:position pos:line="222" pos:column="33"/></name><operator pos:line="222" pos:column="33">-&gt;<pos:position pos:line="222" pos:column="38"/></operator><name pos:line="222" pos:column="35">name<pos:position pos:line="222" pos:column="39"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="222" pos:column="41">sizeof<argument_list pos:line="222" pos:column="47">(<argument><expr><name pos:line="222" pos:column="48">oid<pos:position pos:line="222" pos:column="51"/></name></expr></argument>)<pos:position pos:line="222" pos:column="52"/></argument_list></sizeof> <operator pos:line="222" pos:column="53">*<pos:position pos:line="222" pos:column="54"/></operator> <name><name pos:line="222" pos:column="55">vb<pos:position pos:line="222" pos:column="57"/></name><operator pos:line="222" pos:column="57">-&gt;<pos:position pos:line="222" pos:column="62"/></operator><name pos:line="222" pos:column="59">name_length<pos:position pos:line="222" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="222" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="72"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="223" pos:column="7">oid_list<pos:position pos:line="223" pos:column="15"/></name><index pos:line="223" pos:column="15">[<expr><name pos:line="223" pos:column="16">i<pos:position pos:line="223" pos:column="17"/></name></expr>]<pos:position pos:line="223" pos:column="18"/></index></name><operator pos:line="223" pos:column="18">.<pos:position pos:line="223" pos:column="19"/></operator><name pos:line="223" pos:column="19">oid_len<pos:position pos:line="223" pos:column="26"/></name> <operator pos:line="223" pos:column="27">=<pos:position pos:line="223" pos:column="28"/></operator> <name><name pos:line="223" pos:column="29">vb<pos:position pos:line="223" pos:column="31"/></name><operator pos:line="223" pos:column="31">-&gt;<pos:position pos:line="223" pos:column="36"/></operator><name pos:line="223" pos:column="33">name_length<pos:position pos:line="223" pos:column="44"/></name></name></expr>;<pos:position pos:line="223" pos:column="45"/></expr_stmt>

    }<pos:position pos:line="225" pos:column="6"/></block></for> <comment type="block" pos:line="225" pos:column="7">/* for (vb = res-&gt;variables ...) */</comment>

    <if pos:line="227" pos:column="5">if <condition pos:line="227" pos:column="8">(<expr><name pos:line="227" pos:column="9">res<pos:position pos:line="227" pos:column="12"/></name> <operator pos:line="227" pos:column="13">!=<pos:position pos:line="227" pos:column="15"/></operator> <name pos:line="227" pos:column="16">NULL<pos:position pos:line="227" pos:column="20"/></name></expr>)<pos:position pos:line="227" pos:column="21"/></condition><then pos:line="227" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="228" pos:column="7">snmp_free_pdu<pos:position pos:line="228" pos:column="20"/></name><argument_list pos:line="228" pos:column="20">(<argument><expr><name pos:line="228" pos:column="21">res<pos:position pos:line="228" pos:column="24"/></name></expr></argument>)<pos:position pos:line="228" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="228" pos:column="26"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name pos:line="229" pos:column="5">res<pos:position pos:line="229" pos:column="8"/></name> <operator pos:line="229" pos:column="9">=<pos:position pos:line="229" pos:column="10"/></operator> <name pos:line="229" pos:column="11">NULL<pos:position pos:line="229" pos:column="15"/></name></expr>;<pos:position pos:line="229" pos:column="16"/></expr_stmt>
  }<pos:position pos:line="230" pos:column="4"/></block></while> <comment type="block" pos:line="230" pos:column="5">/* while (status == 0) */</comment>

  <if pos:line="232" pos:column="3">if <condition pos:line="232" pos:column="6">(<expr><name pos:line="232" pos:column="7">res<pos:position pos:line="232" pos:column="10"/></name> <operator pos:line="232" pos:column="11">!=<pos:position pos:line="232" pos:column="13"/></operator> <name pos:line="232" pos:column="14">NULL<pos:position pos:line="232" pos:column="18"/></name></expr>)<pos:position pos:line="232" pos:column="19"/></condition><then pos:line="232" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="233" pos:column="5">snmp_free_pdu<pos:position pos:line="233" pos:column="18"/></name><argument_list pos:line="233" pos:column="18">(<argument><expr><name pos:line="233" pos:column="19">res<pos:position pos:line="233" pos:column="22"/></name></expr></argument>)<pos:position pos:line="233" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="233" pos:column="24"/></expr_stmt></block></then></if>
  <expr_stmt><expr><name pos:line="234" pos:column="3">res<pos:position pos:line="234" pos:column="6"/></name> <operator pos:line="234" pos:column="7">=<pos:position pos:line="234" pos:column="8"/></operator> <name pos:line="234" pos:column="9">NULL<pos:position pos:line="234" pos:column="13"/></name></expr>;<pos:position pos:line="234" pos:column="14"/></expr_stmt>


  <if pos:line="237" pos:column="3">if <condition pos:line="237" pos:column="6">(<expr><name pos:line="237" pos:column="7">status<pos:position pos:line="237" pos:column="13"/></name> <operator pos:line="237" pos:column="14">==<pos:position pos:line="237" pos:column="16"/></operator> <literal type="number" pos:line="237" pos:column="17">0<pos:position pos:line="237" pos:column="18"/></literal></expr>)<pos:position pos:line="237" pos:column="19"/></condition><then pos:line="237" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="238" pos:column="5">csnmp_dispatch_table<pos:position pos:line="238" pos:column="25"/></name><argument_list pos:line="238" pos:column="25">(<argument><expr><name pos:line="238" pos:column="26">host<pos:position pos:line="238" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="238" pos:column="32">data<pos:position pos:line="238" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="238" pos:column="38">instance_list_head<pos:position pos:line="238" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="238" pos:column="58">value_list_head<pos:position pos:line="238" pos:column="73"/></name></expr></argument>)<pos:position pos:line="238" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="238" pos:column="75"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="240" pos:column="3">/* Free all allocated variables here */</comment>
  <while pos:line="241" pos:column="3">while <condition pos:line="241" pos:column="9">(<expr><name pos:line="241" pos:column="10">instance_list_head<pos:position pos:line="241" pos:column="28"/></name> <operator pos:line="241" pos:column="29">!=<pos:position pos:line="241" pos:column="31"/></operator> <name pos:line="241" pos:column="32">NULL<pos:position pos:line="241" pos:column="36"/></name></expr>)<pos:position pos:line="241" pos:column="37"/></condition> <block pos:line="241" pos:column="38">{
    <decl_stmt><decl><type><name pos:line="242" pos:column="5">csnmp_list_instances_t<pos:position pos:line="242" pos:column="27"/></name> <modifier pos:line="242" pos:column="28">*<pos:position pos:line="242" pos:column="29"/></modifier></type><name pos:line="242" pos:column="29">next<pos:position pos:line="242" pos:column="33"/></name> <init pos:line="242" pos:column="34">= <expr><name><name pos:line="242" pos:column="36">instance_list_head<pos:position pos:line="242" pos:column="54"/></name><operator pos:line="242" pos:column="54">-&gt;<pos:position pos:line="242" pos:column="59"/></operator><name pos:line="242" pos:column="56">next<pos:position pos:line="242" pos:column="60"/></name></name></expr></init></decl>;<pos:position pos:line="242" pos:column="61"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="243" pos:column="5">sfree<pos:position pos:line="243" pos:column="10"/></name><argument_list pos:line="243" pos:column="10">(<argument><expr><name pos:line="243" pos:column="11">instance_list_head<pos:position pos:line="243" pos:column="29"/></name></expr></argument>)<pos:position pos:line="243" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="243" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name pos:line="244" pos:column="5">instance_list_head<pos:position pos:line="244" pos:column="23"/></name> <operator pos:line="244" pos:column="24">=<pos:position pos:line="244" pos:column="25"/></operator> <name pos:line="244" pos:column="26">next<pos:position pos:line="244" pos:column="30"/></name></expr>;<pos:position pos:line="244" pos:column="31"/></expr_stmt>
  }<pos:position pos:line="245" pos:column="4"/></block></while>

  <for pos:line="247" pos:column="3">for <control pos:line="247" pos:column="7">(<init><expr><name pos:line="247" pos:column="8">i<pos:position pos:line="247" pos:column="9"/></name> <operator pos:line="247" pos:column="10">=<pos:position pos:line="247" pos:column="11"/></operator> <literal type="number" pos:line="247" pos:column="12">0<pos:position pos:line="247" pos:column="13"/></literal></expr>;<pos:position pos:line="247" pos:column="14"/></init> <condition><expr><name pos:line="247" pos:column="15">i<pos:position pos:line="247" pos:column="16"/></name> <operator pos:line="247" pos:column="17">&lt;<pos:position pos:line="247" pos:column="21"/></operator> <name><name pos:line="247" pos:column="19">data<pos:position pos:line="247" pos:column="23"/></name><operator pos:line="247" pos:column="23">-&gt;<pos:position pos:line="247" pos:column="28"/></operator><name pos:line="247" pos:column="25">values_len<pos:position pos:line="247" pos:column="35"/></name></name></expr>;<pos:position pos:line="247" pos:column="36"/></condition> <incr><expr><name pos:line="247" pos:column="37">i<pos:position pos:line="247" pos:column="38"/></name><operator pos:line="247" pos:column="38">++<pos:position pos:line="247" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="247" pos:column="41"/></control> <block pos:line="247" pos:column="42">{
    <while pos:line="248" pos:column="5">while <condition pos:line="248" pos:column="11">(<expr><name><name pos:line="248" pos:column="12">value_list_head<pos:position pos:line="248" pos:column="27"/></name><index pos:line="248" pos:column="27">[<expr><name pos:line="248" pos:column="28">i<pos:position pos:line="248" pos:column="29"/></name></expr>]<pos:position pos:line="248" pos:column="30"/></index></name> <operator pos:line="248" pos:column="31">!=<pos:position pos:line="248" pos:column="33"/></operator> <name pos:line="248" pos:column="34">NULL<pos:position pos:line="248" pos:column="38"/></name></expr>)<pos:position pos:line="248" pos:column="39"/></condition> <block pos:line="248" pos:column="40">{
      <decl_stmt><decl><type><name pos:line="249" pos:column="7">csnmp_table_values_t<pos:position pos:line="249" pos:column="27"/></name> <modifier pos:line="249" pos:column="28">*<pos:position pos:line="249" pos:column="29"/></modifier></type><name pos:line="249" pos:column="29">next<pos:position pos:line="249" pos:column="33"/></name> <init pos:line="249" pos:column="34">= <expr><name><name pos:line="249" pos:column="36">value_list_head<pos:position pos:line="249" pos:column="51"/></name><index pos:line="249" pos:column="51">[<expr><name pos:line="249" pos:column="52">i<pos:position pos:line="249" pos:column="53"/></name></expr>]<pos:position pos:line="249" pos:column="54"/></index></name><operator pos:line="249" pos:column="54">-&gt;<pos:position pos:line="249" pos:column="59"/></operator><name pos:line="249" pos:column="56">next<pos:position pos:line="249" pos:column="60"/></name></expr></init></decl>;<pos:position pos:line="249" pos:column="61"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="250" pos:column="7">sfree<pos:position pos:line="250" pos:column="12"/></name><argument_list pos:line="250" pos:column="12">(<argument><expr><name><name pos:line="250" pos:column="13">value_list_head<pos:position pos:line="250" pos:column="28"/></name><index pos:line="250" pos:column="28">[<expr><name pos:line="250" pos:column="29">i<pos:position pos:line="250" pos:column="30"/></name></expr>]<pos:position pos:line="250" pos:column="31"/></index></name></expr></argument>)<pos:position pos:line="250" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="250" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="251" pos:column="7">value_list_head<pos:position pos:line="251" pos:column="22"/></name><index pos:line="251" pos:column="22">[<expr><name pos:line="251" pos:column="23">i<pos:position pos:line="251" pos:column="24"/></name></expr>]<pos:position pos:line="251" pos:column="25"/></index></name> <operator pos:line="251" pos:column="26">=<pos:position pos:line="251" pos:column="27"/></operator> <name pos:line="251" pos:column="28">next<pos:position pos:line="251" pos:column="32"/></name></expr>;<pos:position pos:line="251" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="252" pos:column="6"/></block></while>
  }<pos:position pos:line="253" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="255" pos:column="3">sfree<pos:position pos:line="255" pos:column="8"/></name><argument_list pos:line="255" pos:column="8">(<argument><expr><name pos:line="255" pos:column="9">value_list_head<pos:position pos:line="255" pos:column="24"/></name></expr></argument>)<pos:position pos:line="255" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="255" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="256" pos:column="3">sfree<pos:position pos:line="256" pos:column="8"/></name><argument_list pos:line="256" pos:column="8">(<argument><expr><name pos:line="256" pos:column="9">value_list_tail<pos:position pos:line="256" pos:column="24"/></name></expr></argument>)<pos:position pos:line="256" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="256" pos:column="26"/></expr_stmt>

  <return pos:line="258" pos:column="3">return <expr><operator pos:line="258" pos:column="10">(<pos:position pos:line="258" pos:column="11"/></operator><literal type="number" pos:line="258" pos:column="11">0<pos:position pos:line="258" pos:column="12"/></literal><operator pos:line="258" pos:column="12">)<pos:position pos:line="258" pos:column="13"/></operator></expr>;<pos:position pos:line="258" pos:column="14"/></return>
}<pos:position pos:line="259" pos:column="2"/></block></function></unit>

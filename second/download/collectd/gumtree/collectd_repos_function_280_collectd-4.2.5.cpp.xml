<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_280_collectd-4.2.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">strsubstitute<pos:position pos:line="1" pos:column="18"/></name> <parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">str<pos:position pos:line="1" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name></type> <name pos:line="1" pos:column="36">c_from<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">c_to<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">ret<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">str<pos:position pos:line="5" pos:column="16"/></name> <operator pos:line="5" pos:column="17">==<pos:position pos:line="5" pos:column="19"/></operator> <name pos:line="5" pos:column="20">NULL<pos:position pos:line="5" pos:column="24"/></name></expr>)<pos:position pos:line="5" pos:column="25"/></condition><then pos:line="5" pos:column="25">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><operator pos:line="6" pos:column="24">(<pos:position pos:line="6" pos:column="25"/></operator><operator pos:line="6" pos:column="25">-<pos:position pos:line="6" pos:column="26"/></operator><literal type="number" pos:line="6" pos:column="26">1<pos:position pos:line="6" pos:column="27"/></literal><operator pos:line="6" pos:column="27">)<pos:position pos:line="6" pos:column="28"/></operator></expr>;<pos:position pos:line="6" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="8" pos:column="9">ret<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">=<pos:position pos:line="8" pos:column="14"/></operator> <literal type="number" pos:line="8" pos:column="15">0<pos:position pos:line="8" pos:column="16"/></literal></expr>;<pos:position pos:line="8" pos:column="17"/></expr_stmt>
	<while pos:line="9" pos:column="9">while <condition pos:line="9" pos:column="15">(<expr><operator pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="17">str<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">!=<pos:position pos:line="9" pos:column="23"/></operator> <literal type="char" pos:line="9" pos:column="24">'\0'<pos:position pos:line="9" pos:column="28"/></literal></expr>)<pos:position pos:line="9" pos:column="29"/></condition>
	<block pos:line="10" pos:column="9">{
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><operator pos:line="11" pos:column="21">*<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="22">str<pos:position pos:line="11" pos:column="25"/></name> <operator pos:line="11" pos:column="26">==<pos:position pos:line="11" pos:column="28"/></operator> <name pos:line="11" pos:column="29">c_from<pos:position pos:line="11" pos:column="35"/></name></expr>)<pos:position pos:line="11" pos:column="36"/></condition><then pos:line="11" pos:column="36">
		<block pos:line="12" pos:column="17">{
			<expr_stmt><expr><operator pos:line="13" pos:column="25">*<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="26">str<pos:position pos:line="13" pos:column="29"/></name> <operator pos:line="13" pos:column="30">=<pos:position pos:line="13" pos:column="31"/></operator> <name pos:line="13" pos:column="32">c_to<pos:position pos:line="13" pos:column="36"/></name></expr>;<pos:position pos:line="13" pos:column="37"/></expr_stmt>
			<expr_stmt><expr><name pos:line="14" pos:column="25">ret<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">++<pos:position pos:line="14" pos:column="30"/></operator></expr>;<pos:position pos:line="14" pos:column="31"/></expr_stmt>
		}<pos:position pos:line="15" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="16" pos:column="17">str<pos:position pos:line="16" pos:column="20"/></name><operator pos:line="16" pos:column="20">++<pos:position pos:line="16" pos:column="22"/></operator></expr>;<pos:position pos:line="16" pos:column="23"/></expr_stmt>
	}<pos:position pos:line="17" pos:column="10"/></block></while>

	<return pos:line="19" pos:column="9">return <expr><operator pos:line="19" pos:column="16">(<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="17">ret<pos:position pos:line="19" pos:column="20"/></name><operator pos:line="19" pos:column="20">)<pos:position pos:line="19" pos:column="21"/></operator></expr>;<pos:position pos:line="19" pos:column="22"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

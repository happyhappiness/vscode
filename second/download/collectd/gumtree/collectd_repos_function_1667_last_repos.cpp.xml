<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1667_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">check_respawn<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">void<pos:position pos:line="1" pos:column="31"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list> <block pos:line="1" pos:column="33">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">time_t<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">t<pos:position pos:line="2" pos:column="11"/></name> <init pos:line="2" pos:column="12">= <expr><call><name pos:line="2" pos:column="14">time<pos:position pos:line="2" pos:column="18"/></name><argument_list pos:line="2" pos:column="18">(<argument><expr><name pos:line="2" pos:column="19">NULL<pos:position pos:line="2" pos:column="23"/></name></expr></argument>)<pos:position pos:line="2" pos:column="24"/></argument_list></call></expr></init></decl>;<pos:position pos:line="2" pos:column="25"/></decl_stmt>

  <decl_stmt><decl><specifier pos:line="4" pos:column="3">static<pos:position pos:line="4" pos:column="9"/></specifier> <type><name pos:line="4" pos:column="10">time_t<pos:position pos:line="4" pos:column="16"/></name></type> <name pos:line="4" pos:column="17">timestamp<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><literal type="number" pos:line="4" pos:column="29">0<pos:position pos:line="4" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="5" pos:column="3">static<pos:position pos:line="5" pos:column="9"/></specifier> <type><name pos:line="5" pos:column="10">int<pos:position pos:line="5" pos:column="13"/></name></type> <name pos:line="5" pos:column="14">counter<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><literal type="number" pos:line="5" pos:column="24">0<pos:position pos:line="5" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><operator pos:line="7" pos:column="7">(<pos:position pos:line="7" pos:column="8"/></operator><name pos:line="7" pos:column="8">t<pos:position pos:line="7" pos:column="9"/></name> <operator pos:line="7" pos:column="10">-<pos:position pos:line="7" pos:column="11"/></operator> <literal type="number" pos:line="7" pos:column="12">120<pos:position pos:line="7" pos:column="15"/></literal><operator pos:line="7" pos:column="15">)<pos:position pos:line="7" pos:column="16"/></operator> <operator pos:line="7" pos:column="17">&lt;<pos:position pos:line="7" pos:column="21"/></operator> <name pos:line="7" pos:column="19">timestamp<pos:position pos:line="7" pos:column="28"/></name></expr>)<pos:position pos:line="7" pos:column="29"/></condition><then pos:line="7" pos:column="29">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="8" pos:column="5">++<pos:position pos:line="8" pos:column="7"/></operator><name pos:line="8" pos:column="7">counter<pos:position pos:line="8" pos:column="14"/></name></expr>;<pos:position pos:line="8" pos:column="15"/></expr_stmt></block></then>
  <else pos:line="9" pos:column="3">else <block pos:line="9" pos:column="8">{
    <expr_stmt><expr><name pos:line="10" pos:column="5">timestamp<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <name pos:line="10" pos:column="17">t<pos:position pos:line="10" pos:column="18"/></name></expr>;<pos:position pos:line="10" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="11" pos:column="5">counter<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">=<pos:position pos:line="11" pos:column="14"/></operator> <literal type="number" pos:line="11" pos:column="15">0<pos:position pos:line="11" pos:column="16"/></literal></expr>;<pos:position pos:line="11" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="12" pos:column="4"/></block></else></if>

  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><literal type="number" pos:line="14" pos:column="7">10<pos:position pos:line="14" pos:column="9"/></literal> <operator pos:line="14" pos:column="10">&lt;<pos:position pos:line="14" pos:column="14"/></operator> <name pos:line="14" pos:column="12">counter<pos:position pos:line="14" pos:column="19"/></name></expr>)<pos:position pos:line="14" pos:column="20"/></condition><then pos:line="14" pos:column="20"> <block pos:line="14" pos:column="21">{
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">unsigned<pos:position pos:line="15" pos:column="13"/></name> <name pos:line="15" pos:column="14">int<pos:position pos:line="15" pos:column="17"/></name></type> <name pos:line="15" pos:column="18">time_left<pos:position pos:line="15" pos:column="27"/></name> <init pos:line="15" pos:column="28">= <expr><literal type="number" pos:line="15" pos:column="30">300<pos:position pos:line="15" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="34"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="17" pos:column="5">syslog<pos:position pos:line="17" pos:column="11"/></name><argument_list pos:line="17" pos:column="11">(<argument><expr><name pos:line="17" pos:column="12">LOG_ERR<pos:position pos:line="17" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="21">"Error: collectd is respawning too fast - "<pos:position pos:line="17" pos:column="64"/></literal>
                    <literal type="string" pos:line="18" pos:column="21">"disabled for %i seconds"<pos:position pos:line="18" pos:column="46"/></literal></expr></argument>,
           <argument><expr><name pos:line="19" pos:column="12">time_left<pos:position pos:line="19" pos:column="21"/></name></expr></argument>)<pos:position pos:line="19" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="23"/></expr_stmt>

    <while pos:line="21" pos:column="5">while <condition pos:line="21" pos:column="11">(<expr><operator pos:line="21" pos:column="12">(<pos:position pos:line="21" pos:column="13"/></operator><literal type="number" pos:line="21" pos:column="13">0<pos:position pos:line="21" pos:column="14"/></literal> <operator pos:line="21" pos:column="15">&lt;<pos:position pos:line="21" pos:column="19"/></operator> <operator pos:line="21" pos:column="17">(<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="18">time_left<pos:position pos:line="21" pos:column="27"/></name> <operator pos:line="21" pos:column="28">=<pos:position pos:line="21" pos:column="29"/></operator> <call><name pos:line="21" pos:column="30">sleep<pos:position pos:line="21" pos:column="35"/></name><argument_list pos:line="21" pos:column="35">(<argument><expr><name pos:line="21" pos:column="36">time_left<pos:position pos:line="21" pos:column="45"/></name></expr></argument>)<pos:position pos:line="21" pos:column="46"/></argument_list></call><operator pos:line="21" pos:column="46">)<pos:position pos:line="21" pos:column="47"/></operator><operator pos:line="21" pos:column="47">)<pos:position pos:line="21" pos:column="48"/></operator> <operator pos:line="21" pos:column="49">&amp;&amp;<pos:position pos:line="21" pos:column="59"/></operator> <operator pos:line="21" pos:column="52">(<pos:position pos:line="21" pos:column="53"/></operator><literal type="number" pos:line="21" pos:column="53">0<pos:position pos:line="21" pos:column="54"/></literal> <operator pos:line="21" pos:column="55">==<pos:position pos:line="21" pos:column="57"/></operator> <name pos:line="21" pos:column="58">loop<pos:position pos:line="21" pos:column="62"/></name><operator pos:line="21" pos:column="62">)<pos:position pos:line="21" pos:column="63"/></operator></expr>)<pos:position pos:line="21" pos:column="64"/></condition>
      <block type="pseudo"><empty_stmt pos:line="22" pos:column="7">;<pos:position pos:line="22" pos:column="8"/></empty_stmt></block></while>
  }<pos:position pos:line="23" pos:column="4"/></block></then></if>
  <return pos:line="24" pos:column="3">return;<pos:position pos:line="24" pos:column="10"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

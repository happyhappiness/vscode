<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1834_collectd-5.1.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cj_curl_perform<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">cj_t<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">db<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">CURL<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">curl<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list> <comment type="block" pos:line="1" pos:column="51">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">status<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">long<pos:position pos:line="4" pos:column="7"/></name></type> <name pos:line="4" pos:column="8">rc<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">url<pos:position pos:line="5" pos:column="12"/></name></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">yajl_handle<pos:position pos:line="6" pos:column="14"/></name></type> <name pos:line="6" pos:column="15">yprev<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><name><name pos:line="6" pos:column="23">db<pos:position pos:line="6" pos:column="25"/></name><operator pos:line="6" pos:column="25">-&gt;<pos:position pos:line="6" pos:column="30"/></operator><name pos:line="6" pos:column="27">yajl<pos:position pos:line="6" pos:column="31"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>

  <expr_stmt><expr><name><name pos:line="8" pos:column="3">db<pos:position pos:line="8" pos:column="5"/></name><operator pos:line="8" pos:column="5">-&gt;<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="7">yajl<pos:position pos:line="8" pos:column="11"/></name></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <call><name pos:line="8" pos:column="14">yajl_alloc<pos:position pos:line="8" pos:column="24"/></name> <argument_list pos:line="8" pos:column="25">(<argument><expr><operator pos:line="8" pos:column="26">&amp;<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="27">ycallbacks<pos:position pos:line="8" pos:column="37"/></name></expr></argument>,
<cpp:if pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">if<pos:position pos:line="9" pos:column="4"/></cpp:directive> <expr><name pos:line="9" pos:column="5">HAVE_YAJL_V2<pos:position pos:line="9" pos:column="17"/></name></expr></cpp:if>
      <comment type="block" pos:line="10" pos:column="7">/* alloc funcs = */</comment> <argument><expr><name pos:line="10" pos:column="27">NULL<pos:position pos:line="10" pos:column="31"/></name></expr></argument>,
<cpp:else pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">else<pos:position pos:line="11" pos:column="6"/></cpp:directive></cpp:else>
      <comment type="block" pos:line="12" pos:column="7">/* alloc funcs = */</comment> <argument><expr><name pos:line="12" pos:column="27">NULL<pos:position pos:line="12" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="33">NULL<pos:position pos:line="12" pos:column="37"/></name></expr></argument>,
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif<pos:position pos:line="13" pos:column="7"/></cpp:directive></cpp:endif>
      <comment type="block" pos:line="14" pos:column="7">/* context = */</comment> <argument><expr><operator pos:line="14" pos:column="23">(<pos:position pos:line="14" pos:column="24"/></operator><name pos:line="14" pos:column="24">void<pos:position pos:line="14" pos:column="28"/></name> <operator pos:line="14" pos:column="29">*<pos:position pos:line="14" pos:column="30"/></operator><operator pos:line="14" pos:column="30">)<pos:position pos:line="14" pos:column="31"/></operator><name pos:line="14" pos:column="31">db<pos:position pos:line="14" pos:column="33"/></name></expr></argument>)<pos:position pos:line="14" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="35"/></expr_stmt>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name><name pos:line="15" pos:column="7">db<pos:position pos:line="15" pos:column="9"/></name><operator pos:line="15" pos:column="9">-&gt;<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="11">yajl<pos:position pos:line="15" pos:column="15"/></name></name> <operator pos:line="15" pos:column="16">==<pos:position pos:line="15" pos:column="18"/></operator> <name pos:line="15" pos:column="19">NULL<pos:position pos:line="15" pos:column="23"/></name></expr>)<pos:position pos:line="15" pos:column="24"/></condition><then pos:line="15" pos:column="24">
  <block pos:line="16" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">ERROR<pos:position pos:line="17" pos:column="10"/></name> <argument_list pos:line="17" pos:column="11">(<argument><expr><literal type="string" pos:line="17" pos:column="12">"curl_json plugin: yajl_alloc failed."<pos:position pos:line="17" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">db<pos:position pos:line="18" pos:column="7"/></name><operator pos:line="18" pos:column="7">-&gt;<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="9">yajl<pos:position pos:line="18" pos:column="13"/></name></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <name pos:line="18" pos:column="16">yprev<pos:position pos:line="18" pos:column="21"/></name></expr>;<pos:position pos:line="18" pos:column="22"/></expr_stmt>
    <return pos:line="19" pos:column="5">return <expr><operator pos:line="19" pos:column="12">(<pos:position pos:line="19" pos:column="13"/></operator><operator pos:line="19" pos:column="13">-<pos:position pos:line="19" pos:column="14"/></operator><literal type="number" pos:line="19" pos:column="14">1<pos:position pos:line="19" pos:column="15"/></literal><operator pos:line="19" pos:column="15">)<pos:position pos:line="19" pos:column="16"/></operator></expr>;<pos:position pos:line="19" pos:column="17"/></return>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="22" pos:column="3">url<pos:position pos:line="22" pos:column="6"/></name> <operator pos:line="22" pos:column="7">=<pos:position pos:line="22" pos:column="8"/></operator> <name pos:line="22" pos:column="9">NULL<pos:position pos:line="22" pos:column="13"/></name></expr>;<pos:position pos:line="22" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="23" pos:column="3">curl_easy_getinfo<pos:position pos:line="23" pos:column="20"/></name><argument_list pos:line="23" pos:column="20">(<argument><expr><name pos:line="23" pos:column="21">curl<pos:position pos:line="23" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="27">CURLINFO_EFFECTIVE_URL<pos:position pos:line="23" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="51">&amp;<pos:position pos:line="23" pos:column="56"/></operator><name pos:line="23" pos:column="52">url<pos:position pos:line="23" pos:column="55"/></name></expr></argument>)<pos:position pos:line="23" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="57"/></expr_stmt>

  <expr_stmt><expr><name pos:line="25" pos:column="3">status<pos:position pos:line="25" pos:column="9"/></name> <operator pos:line="25" pos:column="10">=<pos:position pos:line="25" pos:column="11"/></operator> <call><name pos:line="25" pos:column="12">curl_easy_perform<pos:position pos:line="25" pos:column="29"/></name> <argument_list pos:line="25" pos:column="30">(<argument><expr><name pos:line="25" pos:column="31">curl<pos:position pos:line="25" pos:column="35"/></name></expr></argument>)<pos:position pos:line="25" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="37"/></expr_stmt>
  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><name pos:line="26" pos:column="7">status<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">!=<pos:position pos:line="26" pos:column="16"/></operator> <literal type="number" pos:line="26" pos:column="17">0<pos:position pos:line="26" pos:column="18"/></literal></expr>)<pos:position pos:line="26" pos:column="19"/></condition><then pos:line="26" pos:column="19">
  <block pos:line="27" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">ERROR<pos:position pos:line="28" pos:column="10"/></name> <argument_list pos:line="28" pos:column="11">(<argument><expr><literal type="string" pos:line="28" pos:column="12">"curl_json plugin: curl_easy_perform failed with status %i: %s (%s)"<pos:position pos:line="28" pos:column="80"/></literal></expr></argument>,
           <argument><expr><name pos:line="29" pos:column="12">status<pos:position pos:line="29" pos:column="18"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="20">db<pos:position pos:line="29" pos:column="22"/></name><operator pos:line="29" pos:column="22">-&gt;<pos:position pos:line="29" pos:column="27"/></operator><name pos:line="29" pos:column="24">curl_errbuf<pos:position pos:line="29" pos:column="35"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="29" pos:column="37">(<pos:position pos:line="29" pos:column="38"/></operator><name pos:line="29" pos:column="38">url<pos:position pos:line="29" pos:column="41"/></name> <operator pos:line="29" pos:column="42">!=<pos:position pos:line="29" pos:column="44"/></operator> <name pos:line="29" pos:column="45">NULL<pos:position pos:line="29" pos:column="49"/></name><operator pos:line="29" pos:column="49">)<pos:position pos:line="29" pos:column="50"/></operator></expr> ?<pos:position pos:line="29" pos:column="52"/></condition><then pos:line="29" pos:column="52"> <expr><name pos:line="29" pos:column="53">url<pos:position pos:line="29" pos:column="56"/></name></expr> <pos:position pos:line="29" pos:column="57"/></then><else pos:line="29" pos:column="57">: <expr><literal type="string" pos:line="29" pos:column="59">"&lt;null&gt;"<pos:position pos:line="29" pos:column="73"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="29" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">yajl_free<pos:position pos:line="30" pos:column="14"/></name> <argument_list pos:line="30" pos:column="15">(<argument><expr><name><name pos:line="30" pos:column="16">db<pos:position pos:line="30" pos:column="18"/></name><operator pos:line="30" pos:column="18">-&gt;<pos:position pos:line="30" pos:column="23"/></operator><name pos:line="30" pos:column="20">yajl<pos:position pos:line="30" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">db<pos:position pos:line="31" pos:column="7"/></name><operator pos:line="31" pos:column="7">-&gt;<pos:position pos:line="31" pos:column="12"/></operator><name pos:line="31" pos:column="9">yajl<pos:position pos:line="31" pos:column="13"/></name></name> <operator pos:line="31" pos:column="14">=<pos:position pos:line="31" pos:column="15"/></operator> <name pos:line="31" pos:column="16">yprev<pos:position pos:line="31" pos:column="21"/></name></expr>;<pos:position pos:line="31" pos:column="22"/></expr_stmt>
    <return pos:line="32" pos:column="5">return <expr><operator pos:line="32" pos:column="12">(<pos:position pos:line="32" pos:column="13"/></operator><operator pos:line="32" pos:column="13">-<pos:position pos:line="32" pos:column="14"/></operator><literal type="number" pos:line="32" pos:column="14">1<pos:position pos:line="32" pos:column="15"/></literal><operator pos:line="32" pos:column="15">)<pos:position pos:line="32" pos:column="16"/></operator></expr>;<pos:position pos:line="32" pos:column="17"/></return>
  }<pos:position pos:line="33" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="35" pos:column="3">curl_easy_getinfo<pos:position pos:line="35" pos:column="20"/></name><argument_list pos:line="35" pos:column="20">(<argument><expr><name pos:line="35" pos:column="21">curl<pos:position pos:line="35" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="27">CURLINFO_RESPONSE_CODE<pos:position pos:line="35" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="51">&amp;<pos:position pos:line="35" pos:column="56"/></operator><name pos:line="35" pos:column="52">rc<pos:position pos:line="35" pos:column="54"/></name></expr></argument>)<pos:position pos:line="35" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="56"/></expr_stmt>

  <comment type="block" pos:line="37" pos:column="3">/* The response code is zero if a non-HTTP transport was used. */</comment>
  <if pos:line="38" pos:column="3">if <condition pos:line="38" pos:column="6">(<expr><operator pos:line="38" pos:column="7">(<pos:position pos:line="38" pos:column="8"/></operator><name pos:line="38" pos:column="8">rc<pos:position pos:line="38" pos:column="10"/></name> <operator pos:line="38" pos:column="11">!=<pos:position pos:line="38" pos:column="13"/></operator> <literal type="number" pos:line="38" pos:column="14">0<pos:position pos:line="38" pos:column="15"/></literal><operator pos:line="38" pos:column="15">)<pos:position pos:line="38" pos:column="16"/></operator> <operator pos:line="38" pos:column="17">&amp;&amp;<pos:position pos:line="38" pos:column="27"/></operator> <operator pos:line="38" pos:column="20">(<pos:position pos:line="38" pos:column="21"/></operator><name pos:line="38" pos:column="21">rc<pos:position pos:line="38" pos:column="23"/></name> <operator pos:line="38" pos:column="24">!=<pos:position pos:line="38" pos:column="26"/></operator> <literal type="number" pos:line="38" pos:column="27">200<pos:position pos:line="38" pos:column="30"/></literal><operator pos:line="38" pos:column="30">)<pos:position pos:line="38" pos:column="31"/></operator></expr>)<pos:position pos:line="38" pos:column="32"/></condition><then pos:line="38" pos:column="32">
  <block pos:line="39" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">ERROR<pos:position pos:line="40" pos:column="10"/></name> <argument_list pos:line="40" pos:column="11">(<argument><expr><literal type="string" pos:line="40" pos:column="12">"curl_json plugin: curl_easy_perform failed with "<pos:position pos:line="40" pos:column="62"/></literal>
        <literal type="string" pos:line="41" pos:column="9">"response code %ld (%s)"<pos:position pos:line="41" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="35">rc<pos:position pos:line="41" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="39">url<pos:position pos:line="41" pos:column="42"/></name></expr></argument>)<pos:position pos:line="41" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">yajl_free<pos:position pos:line="42" pos:column="14"/></name> <argument_list pos:line="42" pos:column="15">(<argument><expr><name><name pos:line="42" pos:column="16">db<pos:position pos:line="42" pos:column="18"/></name><operator pos:line="42" pos:column="18">-&gt;<pos:position pos:line="42" pos:column="23"/></operator><name pos:line="42" pos:column="20">yajl<pos:position pos:line="42" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="43" pos:column="5">db<pos:position pos:line="43" pos:column="7"/></name><operator pos:line="43" pos:column="7">-&gt;<pos:position pos:line="43" pos:column="12"/></operator><name pos:line="43" pos:column="9">yajl<pos:position pos:line="43" pos:column="13"/></name></name> <operator pos:line="43" pos:column="14">=<pos:position pos:line="43" pos:column="15"/></operator> <name pos:line="43" pos:column="16">yprev<pos:position pos:line="43" pos:column="21"/></name></expr>;<pos:position pos:line="43" pos:column="22"/></expr_stmt>
    <return pos:line="44" pos:column="5">return <expr><operator pos:line="44" pos:column="12">(<pos:position pos:line="44" pos:column="13"/></operator><operator pos:line="44" pos:column="13">-<pos:position pos:line="44" pos:column="14"/></operator><literal type="number" pos:line="44" pos:column="14">1<pos:position pos:line="44" pos:column="15"/></literal><operator pos:line="44" pos:column="15">)<pos:position pos:line="44" pos:column="16"/></operator></expr>;<pos:position pos:line="44" pos:column="17"/></return>
  }<pos:position pos:line="45" pos:column="4"/></block></then></if>

<cpp:if pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">if<pos:position pos:line="47" pos:column="4"/></cpp:directive> <expr><name pos:line="47" pos:column="5">HAVE_YAJL_V2<pos:position pos:line="47" pos:column="17"/></name></expr></cpp:if>
    <expr_stmt><expr><name pos:line="48" pos:column="5">status<pos:position pos:line="48" pos:column="11"/></name> <operator pos:line="48" pos:column="12">=<pos:position pos:line="48" pos:column="13"/></operator> <call><name pos:line="48" pos:column="14">yajl_complete_parse<pos:position pos:line="48" pos:column="33"/></name><argument_list pos:line="48" pos:column="33">(<argument><expr><name><name pos:line="48" pos:column="34">db<pos:position pos:line="48" pos:column="36"/></name><operator pos:line="48" pos:column="36">-&gt;<pos:position pos:line="48" pos:column="41"/></operator><name pos:line="48" pos:column="38">yajl<pos:position pos:line="48" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="44"/></expr_stmt>
<cpp:else pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">else<pos:position pos:line="49" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><name pos:line="50" pos:column="5">status<pos:position pos:line="50" pos:column="11"/></name> <operator pos:line="50" pos:column="12">=<pos:position pos:line="50" pos:column="13"/></operator> <call><name pos:line="50" pos:column="14">yajl_parse_complete<pos:position pos:line="50" pos:column="33"/></name><argument_list pos:line="50" pos:column="33">(<argument><expr><name><name pos:line="50" pos:column="34">db<pos:position pos:line="50" pos:column="36"/></name><operator pos:line="50" pos:column="36">-&gt;<pos:position pos:line="50" pos:column="41"/></operator><name pos:line="50" pos:column="38">yajl<pos:position pos:line="50" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="44"/></expr_stmt>
<cpp:endif pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">endif<pos:position pos:line="51" pos:column="7"/></cpp:directive></cpp:endif>
  <if pos:line="52" pos:column="3">if <condition pos:line="52" pos:column="6">(<expr><name pos:line="52" pos:column="7">status<pos:position pos:line="52" pos:column="13"/></name> <operator pos:line="52" pos:column="14">!=<pos:position pos:line="52" pos:column="16"/></operator> <name pos:line="52" pos:column="17">yajl_status_ok<pos:position pos:line="52" pos:column="31"/></name></expr>)<pos:position pos:line="52" pos:column="32"/></condition><then pos:line="52" pos:column="32">
  <block pos:line="53" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="54" pos:column="5">unsigned<pos:position pos:line="54" pos:column="13"/></name> <name pos:line="54" pos:column="14">char<pos:position pos:line="54" pos:column="18"/></name> <modifier pos:line="54" pos:column="19">*<pos:position pos:line="54" pos:column="20"/></modifier></type><name pos:line="54" pos:column="20">errmsg<pos:position pos:line="54" pos:column="26"/></name></decl>;<pos:position pos:line="54" pos:column="27"/></decl_stmt>

    <expr_stmt><expr><name pos:line="56" pos:column="5">errmsg<pos:position pos:line="56" pos:column="11"/></name> <operator pos:line="56" pos:column="12">=<pos:position pos:line="56" pos:column="13"/></operator> <call><name pos:line="56" pos:column="14">yajl_get_error<pos:position pos:line="56" pos:column="28"/></name> <argument_list pos:line="56" pos:column="29">(<argument><expr><name><name pos:line="56" pos:column="30">db<pos:position pos:line="56" pos:column="32"/></name><operator pos:line="56" pos:column="32">-&gt;<pos:position pos:line="56" pos:column="37"/></operator><name pos:line="56" pos:column="34">yajl<pos:position pos:line="56" pos:column="38"/></name></name></expr></argument>, <comment type="block" pos:line="56" pos:column="40">/* verbose = */</comment> <argument><expr><literal type="number" pos:line="56" pos:column="56">0<pos:position pos:line="56" pos:column="57"/></literal></expr></argument>,
        <comment type="block" pos:line="57" pos:column="9">/* jsonText = */</comment> <argument><expr><name pos:line="57" pos:column="26">NULL<pos:position pos:line="57" pos:column="30"/></name></expr></argument>, <comment type="block" pos:line="57" pos:column="32">/* jsonTextLen = */</comment> <argument><expr><literal type="number" pos:line="57" pos:column="52">0<pos:position pos:line="57" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="58" pos:column="5">ERROR<pos:position pos:line="58" pos:column="10"/></name> <argument_list pos:line="58" pos:column="11">(<argument><expr><literal type="string" pos:line="58" pos:column="12">"curl_json plugin: yajl_parse_complete failed: %s"<pos:position pos:line="58" pos:column="62"/></literal></expr></argument>,
        <argument><expr><operator pos:line="59" pos:column="9">(<pos:position pos:line="59" pos:column="10"/></operator><name pos:line="59" pos:column="10">char<pos:position pos:line="59" pos:column="14"/></name> <operator pos:line="59" pos:column="15">*<pos:position pos:line="59" pos:column="16"/></operator><operator pos:line="59" pos:column="16">)<pos:position pos:line="59" pos:column="17"/></operator> <name pos:line="59" pos:column="18">errmsg<pos:position pos:line="59" pos:column="24"/></name></expr></argument>)<pos:position pos:line="59" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="60" pos:column="5">yajl_free_error<pos:position pos:line="60" pos:column="20"/></name> <argument_list pos:line="60" pos:column="21">(<argument><expr><name><name pos:line="60" pos:column="22">db<pos:position pos:line="60" pos:column="24"/></name><operator pos:line="60" pos:column="24">-&gt;<pos:position pos:line="60" pos:column="29"/></operator><name pos:line="60" pos:column="26">yajl<pos:position pos:line="60" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="32">errmsg<pos:position pos:line="60" pos:column="38"/></name></expr></argument>)<pos:position pos:line="60" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="61" pos:column="5">yajl_free<pos:position pos:line="61" pos:column="14"/></name> <argument_list pos:line="61" pos:column="15">(<argument><expr><name><name pos:line="61" pos:column="16">db<pos:position pos:line="61" pos:column="18"/></name><operator pos:line="61" pos:column="18">-&gt;<pos:position pos:line="61" pos:column="23"/></operator><name pos:line="61" pos:column="20">yajl<pos:position pos:line="61" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="62" pos:column="5">db<pos:position pos:line="62" pos:column="7"/></name><operator pos:line="62" pos:column="7">-&gt;<pos:position pos:line="62" pos:column="12"/></operator><name pos:line="62" pos:column="9">yajl<pos:position pos:line="62" pos:column="13"/></name></name> <operator pos:line="62" pos:column="14">=<pos:position pos:line="62" pos:column="15"/></operator> <name pos:line="62" pos:column="16">yprev<pos:position pos:line="62" pos:column="21"/></name></expr>;<pos:position pos:line="62" pos:column="22"/></expr_stmt>
    <return pos:line="63" pos:column="5">return <expr><operator pos:line="63" pos:column="12">(<pos:position pos:line="63" pos:column="13"/></operator><operator pos:line="63" pos:column="13">-<pos:position pos:line="63" pos:column="14"/></operator><literal type="number" pos:line="63" pos:column="14">1<pos:position pos:line="63" pos:column="15"/></literal><operator pos:line="63" pos:column="15">)<pos:position pos:line="63" pos:column="16"/></operator></expr>;<pos:position pos:line="63" pos:column="17"/></return>
  }<pos:position pos:line="64" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="66" pos:column="3">yajl_free<pos:position pos:line="66" pos:column="12"/></name> <argument_list pos:line="66" pos:column="13">(<argument><expr><name><name pos:line="66" pos:column="14">db<pos:position pos:line="66" pos:column="16"/></name><operator pos:line="66" pos:column="16">-&gt;<pos:position pos:line="66" pos:column="21"/></operator><name pos:line="66" pos:column="18">yajl<pos:position pos:line="66" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="67" pos:column="3">db<pos:position pos:line="67" pos:column="5"/></name><operator pos:line="67" pos:column="5">-&gt;<pos:position pos:line="67" pos:column="10"/></operator><name pos:line="67" pos:column="7">yajl<pos:position pos:line="67" pos:column="11"/></name></name> <operator pos:line="67" pos:column="12">=<pos:position pos:line="67" pos:column="13"/></operator> <name pos:line="67" pos:column="14">yprev<pos:position pos:line="67" pos:column="19"/></name></expr>;<pos:position pos:line="67" pos:column="20"/></expr_stmt>
  <return pos:line="68" pos:column="3">return <expr><operator pos:line="68" pos:column="10">(<pos:position pos:line="68" pos:column="11"/></operator><literal type="number" pos:line="68" pos:column="11">0<pos:position pos:line="68" pos:column="12"/></literal><operator pos:line="68" pos:column="12">)<pos:position pos:line="68" pos:column="13"/></operator></expr>;<pos:position pos:line="68" pos:column="14"/></return>
}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

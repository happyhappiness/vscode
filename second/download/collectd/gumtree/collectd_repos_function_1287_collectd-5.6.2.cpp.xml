<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1287_collectd-5.6.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">c_grpc_config_server<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">oconfig_item_t<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">ci<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
	<block pos:line="2" pos:column="9">{
		<if pos:line="3" pos:column="17">if <condition pos:line="3" pos:column="20">(<expr><operator pos:line="3" pos:column="21">(<pos:position pos:line="3" pos:column="22"/></operator><name><name pos:line="3" pos:column="22">ci<pos:position pos:line="3" pos:column="24"/></name><operator pos:line="3" pos:column="24">-&gt;<pos:position pos:line="3" pos:column="29"/></operator><name pos:line="3" pos:column="26">values_num<pos:position pos:line="3" pos:column="36"/></name></name> <operator pos:line="3" pos:column="37">!=<pos:position pos:line="3" pos:column="39"/></operator> <literal type="number" pos:line="3" pos:column="40">2<pos:position pos:line="3" pos:column="41"/></literal><operator pos:line="3" pos:column="41">)<pos:position pos:line="3" pos:column="42"/></operator>
				<operator pos:line="4" pos:column="33">||<pos:position pos:line="4" pos:column="35"/></operator> <operator pos:line="4" pos:column="36">(<pos:position pos:line="4" pos:column="37"/></operator><name><name pos:line="4" pos:column="37">ci<pos:position pos:line="4" pos:column="39"/></name><operator pos:line="4" pos:column="39">-&gt;<pos:position pos:line="4" pos:column="44"/></operator><name pos:line="4" pos:column="41">values<pos:position pos:line="4" pos:column="47"/></name><index pos:line="4" pos:column="47">[<expr><literal type="number" pos:line="4" pos:column="48">0<pos:position pos:line="4" pos:column="49"/></literal></expr>]<pos:position pos:line="4" pos:column="50"/></index></name><operator pos:line="4" pos:column="50">.<pos:position pos:line="4" pos:column="51"/></operator><name pos:line="4" pos:column="51">type<pos:position pos:line="4" pos:column="55"/></name> <operator pos:line="4" pos:column="56">!=<pos:position pos:line="4" pos:column="58"/></operator> <name pos:line="4" pos:column="59">OCONFIG_TYPE_STRING<pos:position pos:line="4" pos:column="78"/></name><operator pos:line="4" pos:column="78">)<pos:position pos:line="4" pos:column="79"/></operator>
				<operator pos:line="5" pos:column="33">||<pos:position pos:line="5" pos:column="35"/></operator> <operator pos:line="5" pos:column="36">(<pos:position pos:line="5" pos:column="37"/></operator><name><name pos:line="5" pos:column="37">ci<pos:position pos:line="5" pos:column="39"/></name><operator pos:line="5" pos:column="39">-&gt;<pos:position pos:line="5" pos:column="44"/></operator><name pos:line="5" pos:column="41">values<pos:position pos:line="5" pos:column="47"/></name><index pos:line="5" pos:column="47">[<expr><literal type="number" pos:line="5" pos:column="48">1<pos:position pos:line="5" pos:column="49"/></literal></expr>]<pos:position pos:line="5" pos:column="50"/></index></name><operator pos:line="5" pos:column="50">.<pos:position pos:line="5" pos:column="51"/></operator><name pos:line="5" pos:column="51">type<pos:position pos:line="5" pos:column="55"/></name> <operator pos:line="5" pos:column="56">!=<pos:position pos:line="5" pos:column="58"/></operator> <name pos:line="5" pos:column="59">OCONFIG_TYPE_STRING<pos:position pos:line="5" pos:column="78"/></name><operator pos:line="5" pos:column="78">)<pos:position pos:line="5" pos:column="79"/></operator></expr>)<pos:position pos:line="5" pos:column="80"/></condition><then pos:line="5" pos:column="80"> <block pos:line="5" pos:column="81">{
			<expr_stmt><expr><call><name pos:line="6" pos:column="25">ERROR<pos:position pos:line="6" pos:column="30"/></name><argument_list pos:line="6" pos:column="30">(<argument><expr><literal type="string" pos:line="6" pos:column="31">"grpc: The `%s` config option needs exactly "<pos:position pos:line="6" pos:column="76"/></literal>
					<literal type="string" pos:line="7" pos:column="41">"two string argument (address and port)."<pos:position pos:line="7" pos:column="82"/></literal></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="84">ci<pos:position pos:line="7" pos:column="86"/></name><operator pos:line="7" pos:column="86">-&gt;<pos:position pos:line="7" pos:column="91"/></operator><name pos:line="7" pos:column="88">key<pos:position pos:line="7" pos:column="91"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="93"/></expr_stmt>
			<return pos:line="8" pos:column="25">return <expr><operator pos:line="8" pos:column="32">-<pos:position pos:line="8" pos:column="33"/></operator><literal type="number" pos:line="8" pos:column="33">1<pos:position pos:line="8" pos:column="34"/></literal></expr>;<pos:position pos:line="8" pos:column="35"/></return>
		}<pos:position pos:line="9" pos:column="18"/></block></then></if>

		<decl_stmt><decl><type><name><name pos:line="11" pos:column="17">grpc<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">::<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="23">SslCredentialsOptions<pos:position pos:line="11" pos:column="44"/></name></name></type> <name pos:line="11" pos:column="45">ssl_opts<pos:position pos:line="11" pos:column="53"/></name></decl>;<pos:position pos:line="11" pos:column="54"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="12" pos:column="17">bool<pos:position pos:line="12" pos:column="21"/></name></type> <name pos:line="12" pos:column="22">use_ssl<pos:position pos:line="12" pos:column="29"/></name> <init pos:line="12" pos:column="30">= <expr><literal type="boolean" pos:line="12" pos:column="32">false<pos:position pos:line="12" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="38"/></decl_stmt>

		<for pos:line="14" pos:column="17">for <control pos:line="14" pos:column="21">(<init><decl><type><name pos:line="14" pos:column="22">int<pos:position pos:line="14" pos:column="25"/></name></type> <name pos:line="14" pos:column="26">i<pos:position pos:line="14" pos:column="27"/></name> <init pos:line="14" pos:column="28">= <expr><literal type="number" pos:line="14" pos:column="30">0<pos:position pos:line="14" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="32"/></init> <condition><expr><name pos:line="14" pos:column="33">i<pos:position pos:line="14" pos:column="34"/></name> <operator pos:line="14" pos:column="35">&lt;<pos:position pos:line="14" pos:column="39"/></operator> <name><name pos:line="14" pos:column="37">ci<pos:position pos:line="14" pos:column="39"/></name><operator pos:line="14" pos:column="39">-&gt;<pos:position pos:line="14" pos:column="44"/></operator><name pos:line="14" pos:column="41">children_num<pos:position pos:line="14" pos:column="53"/></name></name></expr>;<pos:position pos:line="14" pos:column="54"/></condition> <incr><expr><name pos:line="14" pos:column="55">i<pos:position pos:line="14" pos:column="56"/></name><operator pos:line="14" pos:column="56">++<pos:position pos:line="14" pos:column="58"/></operator></expr></incr>)<pos:position pos:line="14" pos:column="59"/></control> <block pos:line="14" pos:column="60">{
			<decl_stmt><decl><type><name pos:line="15" pos:column="25">oconfig_item_t<pos:position pos:line="15" pos:column="39"/></name> <modifier pos:line="15" pos:column="40">*<pos:position pos:line="15" pos:column="41"/></modifier></type><name pos:line="15" pos:column="41">child<pos:position pos:line="15" pos:column="46"/></name> <init pos:line="15" pos:column="47">= <expr><name><name pos:line="15" pos:column="49">ci<pos:position pos:line="15" pos:column="51"/></name><operator pos:line="15" pos:column="51">-&gt;<pos:position pos:line="15" pos:column="56"/></operator><name pos:line="15" pos:column="53">children<pos:position pos:line="15" pos:column="61"/></name></name> <operator pos:line="15" pos:column="62">+<pos:position pos:line="15" pos:column="63"/></operator> <name pos:line="15" pos:column="64">i<pos:position pos:line="15" pos:column="65"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="66"/></decl_stmt>

			<if pos:line="17" pos:column="25">if <condition pos:line="17" pos:column="28">(<expr><operator pos:line="17" pos:column="29">!<pos:position pos:line="17" pos:column="30"/></operator><call><name pos:line="17" pos:column="30">strcasecmp<pos:position pos:line="17" pos:column="40"/></name><argument_list pos:line="17" pos:column="40">(<argument><expr><literal type="string" pos:line="17" pos:column="41">"EnableSSL"<pos:position pos:line="17" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="54">child<pos:position pos:line="17" pos:column="59"/></name><operator pos:line="17" pos:column="59">-&gt;<pos:position pos:line="17" pos:column="64"/></operator><name pos:line="17" pos:column="61">key<pos:position pos:line="17" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="66"/></condition><then pos:line="17" pos:column="66"> <block pos:line="17" pos:column="67">{
				<if pos:line="18" pos:column="33">if <condition pos:line="18" pos:column="36">(<expr><call><name pos:line="18" pos:column="37">cf_util_get_boolean<pos:position pos:line="18" pos:column="56"/></name><argument_list pos:line="18" pos:column="56">(<argument><expr><name pos:line="18" pos:column="57">child<pos:position pos:line="18" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="64">&amp;<pos:position pos:line="18" pos:column="69"/></operator><name pos:line="18" pos:column="65">use_ssl<pos:position pos:line="18" pos:column="72"/></name></expr></argument>)<pos:position pos:line="18" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="74"/></condition><then pos:line="18" pos:column="74"> <block pos:line="18" pos:column="75">{
					<return pos:line="19" pos:column="41">return <expr><operator pos:line="19" pos:column="48">-<pos:position pos:line="19" pos:column="49"/></operator><literal type="number" pos:line="19" pos:column="49">1<pos:position pos:line="19" pos:column="50"/></literal></expr>;<pos:position pos:line="19" pos:column="51"/></return>
				}<pos:position pos:line="20" pos:column="34"/></block></then></if>
			}<pos:position pos:line="21" pos:column="26"/></block></then>
			<elseif pos:line="22" pos:column="25">else <if pos:line="22" pos:column="30">if <condition pos:line="22" pos:column="33">(<expr><operator pos:line="22" pos:column="34">!<pos:position pos:line="22" pos:column="35"/></operator><call><name pos:line="22" pos:column="35">strcasecmp<pos:position pos:line="22" pos:column="45"/></name><argument_list pos:line="22" pos:column="45">(<argument><expr><literal type="string" pos:line="22" pos:column="46">"SSLCACertificateFile"<pos:position pos:line="22" pos:column="68"/></literal></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="70">child<pos:position pos:line="22" pos:column="75"/></name><operator pos:line="22" pos:column="75">-&gt;<pos:position pos:line="22" pos:column="80"/></operator><name pos:line="22" pos:column="77">key<pos:position pos:line="22" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="81"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="82"/></condition><then pos:line="22" pos:column="82"> <block pos:line="22" pos:column="83">{
				<decl_stmt><decl><type><name pos:line="23" pos:column="33">char<pos:position pos:line="23" pos:column="37"/></name> <modifier pos:line="23" pos:column="38">*<pos:position pos:line="23" pos:column="39"/></modifier></type><name pos:line="23" pos:column="39">certs<pos:position pos:line="23" pos:column="44"/></name> <init pos:line="23" pos:column="45">= <expr><name pos:line="23" pos:column="47">NULL<pos:position pos:line="23" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="23" pos:column="52"/></decl_stmt>
				<if pos:line="24" pos:column="33">if <condition pos:line="24" pos:column="36">(<expr><call><name pos:line="24" pos:column="37">cf_util_get_string<pos:position pos:line="24" pos:column="55"/></name><argument_list pos:line="24" pos:column="55">(<argument><expr><name pos:line="24" pos:column="56">child<pos:position pos:line="24" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="63">&amp;<pos:position pos:line="24" pos:column="68"/></operator><name pos:line="24" pos:column="64">certs<pos:position pos:line="24" pos:column="69"/></name></expr></argument>)<pos:position pos:line="24" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="71"/></condition><then pos:line="24" pos:column="71"> <block pos:line="24" pos:column="72">{
					<return pos:line="25" pos:column="41">return <expr><operator pos:line="25" pos:column="48">-<pos:position pos:line="25" pos:column="49"/></operator><literal type="number" pos:line="25" pos:column="49">1<pos:position pos:line="25" pos:column="50"/></literal></expr>;<pos:position pos:line="25" pos:column="51"/></return>
				}<pos:position pos:line="26" pos:column="34"/></block></then></if>
				<expr_stmt><expr><name><name pos:line="27" pos:column="33">ssl_opts<pos:position pos:line="27" pos:column="41"/></name><operator pos:line="27" pos:column="41">.<pos:position pos:line="27" pos:column="42"/></operator><name pos:line="27" pos:column="42">pem_root_certs<pos:position pos:line="27" pos:column="56"/></name></name> <operator pos:line="27" pos:column="57">=<pos:position pos:line="27" pos:column="58"/></operator> <call><name pos:line="27" pos:column="59">read_file<pos:position pos:line="27" pos:column="68"/></name><argument_list pos:line="27" pos:column="68">(<argument><expr><name pos:line="27" pos:column="69">certs<pos:position pos:line="27" pos:column="74"/></name></expr></argument>)<pos:position pos:line="27" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="76"/></expr_stmt>
			}<pos:position pos:line="28" pos:column="26"/></block></then></if></elseif>
			<elseif pos:line="29" pos:column="25">else <if pos:line="29" pos:column="30">if <condition pos:line="29" pos:column="33">(<expr><operator pos:line="29" pos:column="34">!<pos:position pos:line="29" pos:column="35"/></operator><call><name pos:line="29" pos:column="35">strcasecmp<pos:position pos:line="29" pos:column="45"/></name><argument_list pos:line="29" pos:column="45">(<argument><expr><literal type="string" pos:line="29" pos:column="46">"SSLCertificateKeyFile"<pos:position pos:line="29" pos:column="69"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="71">child<pos:position pos:line="29" pos:column="76"/></name><operator pos:line="29" pos:column="76">-&gt;<pos:position pos:line="29" pos:column="81"/></operator><name pos:line="29" pos:column="78">key<pos:position pos:line="29" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="82"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="83"/></condition><then pos:line="29" pos:column="83"> <block pos:line="29" pos:column="84">{
				<decl_stmt><decl><type><name pos:line="30" pos:column="33">char<pos:position pos:line="30" pos:column="37"/></name> <modifier pos:line="30" pos:column="38">*<pos:position pos:line="30" pos:column="39"/></modifier></type><name pos:line="30" pos:column="39">key<pos:position pos:line="30" pos:column="42"/></name> <init pos:line="30" pos:column="43">= <expr><name pos:line="30" pos:column="45">NULL<pos:position pos:line="30" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="30" pos:column="50"/></decl_stmt>
				<if pos:line="31" pos:column="33">if <condition pos:line="31" pos:column="36">(<expr><call><name pos:line="31" pos:column="37">cf_util_get_string<pos:position pos:line="31" pos:column="55"/></name><argument_list pos:line="31" pos:column="55">(<argument><expr><name pos:line="31" pos:column="56">child<pos:position pos:line="31" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="63">&amp;<pos:position pos:line="31" pos:column="68"/></operator><name pos:line="31" pos:column="64">key<pos:position pos:line="31" pos:column="67"/></name></expr></argument>)<pos:position pos:line="31" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="69"/></condition><then pos:line="31" pos:column="69"> <block pos:line="31" pos:column="70">{
					<return pos:line="32" pos:column="41">return <expr><operator pos:line="32" pos:column="48">-<pos:position pos:line="32" pos:column="49"/></operator><literal type="number" pos:line="32" pos:column="49">1<pos:position pos:line="32" pos:column="50"/></literal></expr>;<pos:position pos:line="32" pos:column="51"/></return>
				}<pos:position pos:line="33" pos:column="34"/></block></then></if>
				<expr_stmt><expr><name><name pos:line="34" pos:column="33">ssl_opts<pos:position pos:line="34" pos:column="41"/></name><operator pos:line="34" pos:column="41">.<pos:position pos:line="34" pos:column="42"/></operator><name pos:line="34" pos:column="42">pem_private_key<pos:position pos:line="34" pos:column="57"/></name></name> <operator pos:line="34" pos:column="58">=<pos:position pos:line="34" pos:column="59"/></operator> <call><name pos:line="34" pos:column="60">read_file<pos:position pos:line="34" pos:column="69"/></name><argument_list pos:line="34" pos:column="69">(<argument><expr><name pos:line="34" pos:column="70">key<pos:position pos:line="34" pos:column="73"/></name></expr></argument>)<pos:position pos:line="34" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="75"/></expr_stmt>
			}<pos:position pos:line="35" pos:column="26"/></block></then></if></elseif>
			<elseif pos:line="36" pos:column="25">else <if pos:line="36" pos:column="30">if <condition pos:line="36" pos:column="33">(<expr><operator pos:line="36" pos:column="34">!<pos:position pos:line="36" pos:column="35"/></operator><call><name pos:line="36" pos:column="35">strcasecmp<pos:position pos:line="36" pos:column="45"/></name><argument_list pos:line="36" pos:column="45">(<argument><expr><literal type="string" pos:line="36" pos:column="46">"SSLCertificateFile"<pos:position pos:line="36" pos:column="66"/></literal></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="68">child<pos:position pos:line="36" pos:column="73"/></name><operator pos:line="36" pos:column="73">-&gt;<pos:position pos:line="36" pos:column="78"/></operator><name pos:line="36" pos:column="75">key<pos:position pos:line="36" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="79"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="80"/></condition><then pos:line="36" pos:column="80"> <block pos:line="36" pos:column="81">{
				<decl_stmt><decl><type><name pos:line="37" pos:column="33">char<pos:position pos:line="37" pos:column="37"/></name> <modifier pos:line="37" pos:column="38">*<pos:position pos:line="37" pos:column="39"/></modifier></type><name pos:line="37" pos:column="39">cert<pos:position pos:line="37" pos:column="43"/></name> <init pos:line="37" pos:column="44">= <expr><name pos:line="37" pos:column="46">NULL<pos:position pos:line="37" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="37" pos:column="51"/></decl_stmt>
				<if pos:line="38" pos:column="33">if <condition pos:line="38" pos:column="36">(<expr><call><name pos:line="38" pos:column="37">cf_util_get_string<pos:position pos:line="38" pos:column="55"/></name><argument_list pos:line="38" pos:column="55">(<argument><expr><name pos:line="38" pos:column="56">child<pos:position pos:line="38" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="63">&amp;<pos:position pos:line="38" pos:column="68"/></operator><name pos:line="38" pos:column="64">cert<pos:position pos:line="38" pos:column="68"/></name></expr></argument>)<pos:position pos:line="38" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="70"/></condition><then pos:line="38" pos:column="70"> <block pos:line="38" pos:column="71">{
					<return pos:line="39" pos:column="41">return <expr><operator pos:line="39" pos:column="48">-<pos:position pos:line="39" pos:column="49"/></operator><literal type="number" pos:line="39" pos:column="49">1<pos:position pos:line="39" pos:column="50"/></literal></expr>;<pos:position pos:line="39" pos:column="51"/></return>
				}<pos:position pos:line="40" pos:column="34"/></block></then></if>
				<expr_stmt><expr><name><name pos:line="41" pos:column="33">ssl_opts<pos:position pos:line="41" pos:column="41"/></name><operator pos:line="41" pos:column="41">.<pos:position pos:line="41" pos:column="42"/></operator><name pos:line="41" pos:column="42">pem_cert_chain<pos:position pos:line="41" pos:column="56"/></name></name> <operator pos:line="41" pos:column="57">=<pos:position pos:line="41" pos:column="58"/></operator> <call><name pos:line="41" pos:column="59">read_file<pos:position pos:line="41" pos:column="68"/></name><argument_list pos:line="41" pos:column="68">(<argument><expr><name pos:line="41" pos:column="69">cert<pos:position pos:line="41" pos:column="73"/></name></expr></argument>)<pos:position pos:line="41" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="75"/></expr_stmt>
			}<pos:position pos:line="42" pos:column="26"/></block></then></if></elseif>
			<else pos:line="43" pos:column="25">else <block pos:line="43" pos:column="30">{
				<expr_stmt><expr><call><name pos:line="44" pos:column="33">WARNING<pos:position pos:line="44" pos:column="40"/></name><argument_list pos:line="44" pos:column="40">(<argument><expr><literal type="string" pos:line="44" pos:column="41">"grpc: Option `%s` not allowed in &lt;%s&gt; block."<pos:position pos:line="44" pos:column="93"/></literal></expr></argument>,
						<argument><expr><name><name pos:line="45" pos:column="49">child<pos:position pos:line="45" pos:column="54"/></name><operator pos:line="45" pos:column="54">-&gt;<pos:position pos:line="45" pos:column="59"/></operator><name pos:line="45" pos:column="56">key<pos:position pos:line="45" pos:column="59"/></name></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="61">ci<pos:position pos:line="45" pos:column="63"/></name><operator pos:line="45" pos:column="63">-&gt;<pos:position pos:line="45" pos:column="68"/></operator><name pos:line="45" pos:column="65">key<pos:position pos:line="45" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="70"/></expr_stmt>
			}<pos:position pos:line="46" pos:column="26"/></block></else></if>
		}<pos:position pos:line="47" pos:column="18"/></block></for>

		<decl_stmt><decl><type><name pos:line="49" pos:column="17">auto<pos:position pos:line="49" pos:column="21"/></name></type> <name pos:line="49" pos:column="22">node<pos:position pos:line="49" pos:column="26"/></name>    <init pos:line="49" pos:column="30">= <expr><call><name><name pos:line="49" pos:column="32">grpc<pos:position pos:line="49" pos:column="36"/></name><operator pos:line="49" pos:column="36">::<pos:position pos:line="49" pos:column="38"/></operator><name pos:line="49" pos:column="38">string<pos:position pos:line="49" pos:column="44"/></name></name><argument_list pos:line="49" pos:column="44">(<argument><expr><name><name pos:line="49" pos:column="45">ci<pos:position pos:line="49" pos:column="47"/></name><operator pos:line="49" pos:column="47">-&gt;<pos:position pos:line="49" pos:column="52"/></operator><name pos:line="49" pos:column="49">values<pos:position pos:line="49" pos:column="55"/></name><index pos:line="49" pos:column="55">[<expr><literal type="number" pos:line="49" pos:column="56">0<pos:position pos:line="49" pos:column="57"/></literal></expr>]<pos:position pos:line="49" pos:column="58"/></index></name><operator pos:line="49" pos:column="58">.<pos:position pos:line="49" pos:column="59"/></operator><name><name pos:line="49" pos:column="59">value<pos:position pos:line="49" pos:column="64"/></name><operator pos:line="49" pos:column="64">.<pos:position pos:line="49" pos:column="65"/></operator><name pos:line="49" pos:column="65">string<pos:position pos:line="49" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="49" pos:column="73"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="50" pos:column="17">auto<pos:position pos:line="50" pos:column="21"/></name></type> <name pos:line="50" pos:column="22">service<pos:position pos:line="50" pos:column="29"/></name> <init pos:line="50" pos:column="30">= <expr><call><name><name pos:line="50" pos:column="32">grpc<pos:position pos:line="50" pos:column="36"/></name><operator pos:line="50" pos:column="36">::<pos:position pos:line="50" pos:column="38"/></operator><name pos:line="50" pos:column="38">string<pos:position pos:line="50" pos:column="44"/></name></name><argument_list pos:line="50" pos:column="44">(<argument><expr><name><name pos:line="50" pos:column="45">ci<pos:position pos:line="50" pos:column="47"/></name><operator pos:line="50" pos:column="47">-&gt;<pos:position pos:line="50" pos:column="52"/></operator><name pos:line="50" pos:column="49">values<pos:position pos:line="50" pos:column="55"/></name><index pos:line="50" pos:column="55">[<expr><literal type="number" pos:line="50" pos:column="56">1<pos:position pos:line="50" pos:column="57"/></literal></expr>]<pos:position pos:line="50" pos:column="58"/></index></name><operator pos:line="50" pos:column="58">.<pos:position pos:line="50" pos:column="59"/></operator><name><name pos:line="50" pos:column="59">value<pos:position pos:line="50" pos:column="64"/></name><operator pos:line="50" pos:column="64">.<pos:position pos:line="50" pos:column="65"/></operator><name pos:line="50" pos:column="65">string<pos:position pos:line="50" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="50" pos:column="73"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="51" pos:column="17">auto<pos:position pos:line="51" pos:column="21"/></name></type> <name pos:line="51" pos:column="22">addr<pos:position pos:line="51" pos:column="26"/></name>    <init pos:line="51" pos:column="30">= <expr><name pos:line="51" pos:column="32">node<pos:position pos:line="51" pos:column="36"/></name> <operator pos:line="51" pos:column="37">+<pos:position pos:line="51" pos:column="38"/></operator> <literal type="string" pos:line="51" pos:column="39">":"<pos:position pos:line="51" pos:column="42"/></literal> <operator pos:line="51" pos:column="43">+<pos:position pos:line="51" pos:column="44"/></operator> <name pos:line="51" pos:column="45">service<pos:position pos:line="51" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="51" pos:column="53"/></decl_stmt>

		<decl_stmt><decl><type><name pos:line="53" pos:column="17">CollectdClient<pos:position pos:line="53" pos:column="31"/></name> <modifier pos:line="53" pos:column="32">*<pos:position pos:line="53" pos:column="33"/></modifier></type><name pos:line="53" pos:column="33">client<pos:position pos:line="53" pos:column="39"/></name></decl>;<pos:position pos:line="53" pos:column="40"/></decl_stmt>
		<if pos:line="54" pos:column="17">if <condition pos:line="54" pos:column="20">(<expr><name pos:line="54" pos:column="21">use_ssl<pos:position pos:line="54" pos:column="28"/></name></expr>)<pos:position pos:line="54" pos:column="29"/></condition><then pos:line="54" pos:column="29"> <block pos:line="54" pos:column="30">{
			<decl_stmt><decl><type><name pos:line="55" pos:column="25">auto<pos:position pos:line="55" pos:column="29"/></name></type> <name pos:line="55" pos:column="30">channel_creds<pos:position pos:line="55" pos:column="43"/></name> <init pos:line="55" pos:column="44">= <expr><call><name><name pos:line="55" pos:column="46">grpc<pos:position pos:line="55" pos:column="50"/></name><operator pos:line="55" pos:column="50">::<pos:position pos:line="55" pos:column="52"/></operator><name pos:line="55" pos:column="52">SslCredentials<pos:position pos:line="55" pos:column="66"/></name></name><argument_list pos:line="55" pos:column="66">(<argument><expr><name pos:line="55" pos:column="67">ssl_opts<pos:position pos:line="55" pos:column="75"/></name></expr></argument>)<pos:position pos:line="55" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="55" pos:column="77"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="56" pos:column="25">auto<pos:position pos:line="56" pos:column="29"/></name></type> <name pos:line="56" pos:column="30">channel<pos:position pos:line="56" pos:column="37"/></name> <init pos:line="56" pos:column="38">= <expr><call><name><name pos:line="56" pos:column="40">grpc<pos:position pos:line="56" pos:column="44"/></name><operator pos:line="56" pos:column="44">::<pos:position pos:line="56" pos:column="46"/></operator><name pos:line="56" pos:column="46">CreateChannel<pos:position pos:line="56" pos:column="59"/></name></name><argument_list pos:line="56" pos:column="59">(<argument><expr><name pos:line="56" pos:column="60">addr<pos:position pos:line="56" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="66">channel_creds<pos:position pos:line="56" pos:column="79"/></name></expr></argument>)<pos:position pos:line="56" pos:column="80"/></argument_list></call></expr></init></decl>;<pos:position pos:line="56" pos:column="81"/></decl_stmt>
			<expr_stmt><expr><name pos:line="57" pos:column="25">client<pos:position pos:line="57" pos:column="31"/></name> <operator pos:line="57" pos:column="32">=<pos:position pos:line="57" pos:column="33"/></operator> <operator pos:line="57" pos:column="34">new<pos:position pos:line="57" pos:column="37"/></operator> <call><name pos:line="57" pos:column="38">CollectdClient<pos:position pos:line="57" pos:column="52"/></name><argument_list pos:line="57" pos:column="52">(<argument><expr><name pos:line="57" pos:column="53">channel<pos:position pos:line="57" pos:column="60"/></name></expr></argument>)<pos:position pos:line="57" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="62"/></expr_stmt>
		}<pos:position pos:line="58" pos:column="18"/></block></then> <else pos:line="58" pos:column="19">else <block pos:line="58" pos:column="24">{
			<decl_stmt><decl><type><name pos:line="59" pos:column="25">auto<pos:position pos:line="59" pos:column="29"/></name></type> <name pos:line="59" pos:column="30">channel<pos:position pos:line="59" pos:column="37"/></name> <init pos:line="59" pos:column="38">= <expr><call><name><name pos:line="59" pos:column="40">grpc<pos:position pos:line="59" pos:column="44"/></name><operator pos:line="59" pos:column="44">::<pos:position pos:line="59" pos:column="46"/></operator><name pos:line="59" pos:column="46">CreateChannel<pos:position pos:line="59" pos:column="59"/></name></name><argument_list pos:line="59" pos:column="59">(<argument><expr><name pos:line="59" pos:column="60">addr<pos:position pos:line="59" pos:column="64"/></name></expr></argument>, <argument><expr><call><name><name pos:line="59" pos:column="66">grpc<pos:position pos:line="59" pos:column="70"/></name><operator pos:line="59" pos:column="70">::<pos:position pos:line="59" pos:column="72"/></operator><name pos:line="59" pos:column="72">InsecureChannelCredentials<pos:position pos:line="59" pos:column="98"/></name></name><argument_list pos:line="59" pos:column="98">()<pos:position pos:line="59" pos:column="100"/></argument_list></call></expr></argument>)<pos:position pos:line="59" pos:column="101"/></argument_list></call></expr></init></decl>;<pos:position pos:line="59" pos:column="102"/></decl_stmt>
			<expr_stmt><expr><name pos:line="60" pos:column="25">client<pos:position pos:line="60" pos:column="31"/></name> <operator pos:line="60" pos:column="32">=<pos:position pos:line="60" pos:column="33"/></operator> <operator pos:line="60" pos:column="34">new<pos:position pos:line="60" pos:column="37"/></operator> <call><name pos:line="60" pos:column="38">CollectdClient<pos:position pos:line="60" pos:column="52"/></name><argument_list pos:line="60" pos:column="52">(<argument><expr><name pos:line="60" pos:column="53">channel<pos:position pos:line="60" pos:column="60"/></name></expr></argument>)<pos:position pos:line="60" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="62"/></expr_stmt>
		}<pos:position pos:line="61" pos:column="18"/></block></else></if>

		<decl_stmt><decl><type><name pos:line="63" pos:column="17">auto<pos:position pos:line="63" pos:column="21"/></name></type> <name pos:line="63" pos:column="22">callback_name<pos:position pos:line="63" pos:column="35"/></name> <init pos:line="63" pos:column="36">= <expr><call><name><name pos:line="63" pos:column="38">grpc<pos:position pos:line="63" pos:column="42"/></name><operator pos:line="63" pos:column="42">::<pos:position pos:line="63" pos:column="44"/></operator><name pos:line="63" pos:column="44">string<pos:position pos:line="63" pos:column="50"/></name></name><argument_list pos:line="63" pos:column="50">(<argument><expr><literal type="string" pos:line="63" pos:column="51">"grpc/"<pos:position pos:line="63" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="59"/></argument_list></call> <operator pos:line="63" pos:column="60">+<pos:position pos:line="63" pos:column="61"/></operator> <name pos:line="63" pos:column="62">addr<pos:position pos:line="63" pos:column="66"/></name></expr></init></decl>;<pos:position pos:line="63" pos:column="67"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="64" pos:column="17">user_data_t<pos:position pos:line="64" pos:column="28"/></name></type> <name pos:line="64" pos:column="29">ud<pos:position pos:line="64" pos:column="31"/></name> <init pos:line="64" pos:column="32">= <expr><block pos:line="64" pos:column="34">{
			<expr><operator pos:line="65" pos:column="25">.<pos:position pos:line="65" pos:column="26"/></operator><name pos:line="65" pos:column="26">data<pos:position pos:line="65" pos:column="30"/></name> <operator pos:line="65" pos:column="31">=<pos:position pos:line="65" pos:column="32"/></operator> <name pos:line="65" pos:column="33">client<pos:position pos:line="65" pos:column="39"/></name></expr>,
			<expr><operator pos:line="66" pos:column="25">.<pos:position pos:line="66" pos:column="26"/></operator><name pos:line="66" pos:column="26">free_func<pos:position pos:line="66" pos:column="35"/></name> <operator pos:line="66" pos:column="36">=<pos:position pos:line="66" pos:column="37"/></operator> <name pos:line="66" pos:column="38">c_grpc_destroy_write_callback<pos:position pos:line="66" pos:column="67"/></name></expr>,
		}<pos:position pos:line="67" pos:column="18"/></block></expr></init></decl>;<pos:position pos:line="67" pos:column="19"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="69" pos:column="17">plugin_register_write<pos:position pos:line="69" pos:column="38"/></name> <argument_list pos:line="69" pos:column="39">(<argument><expr><call><name><name pos:line="69" pos:column="40">callback_name<pos:position pos:line="69" pos:column="53"/></name><operator pos:line="69" pos:column="53">.<pos:position pos:line="69" pos:column="54"/></operator><name pos:line="69" pos:column="54">c_str<pos:position pos:line="69" pos:column="59"/></name></name><argument_list pos:line="69" pos:column="59">()<pos:position pos:line="69" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="69" pos:column="63">c_grpc_write<pos:position pos:line="69" pos:column="75"/></name></expr></argument>, <argument><expr><operator pos:line="69" pos:column="77">&amp;<pos:position pos:line="69" pos:column="82"/></operator><name pos:line="69" pos:column="78">ud<pos:position pos:line="69" pos:column="80"/></name></expr></argument>)<pos:position pos:line="69" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="82"/></expr_stmt>
		<return pos:line="70" pos:column="17">return <expr><literal type="number" pos:line="70" pos:column="24">0<pos:position pos:line="70" pos:column="25"/></literal></expr>;<pos:position pos:line="70" pos:column="26"/></return>
	}<pos:position pos:line="71" pos:column="10"/></block></function></unit>

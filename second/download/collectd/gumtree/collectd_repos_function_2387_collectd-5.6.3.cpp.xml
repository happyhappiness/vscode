<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2387_collectd-5.6.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">replace_special<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">char<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">buffer<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">size_t<pos:position pos:line="1" pos:column="42"/></name></type> <name pos:line="1" pos:column="43">buffer_size<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list> <block pos:line="1" pos:column="56">{
  <for pos:line="2" pos:column="3">for <control pos:line="2" pos:column="7">(<init><decl><type><name pos:line="2" pos:column="8">size_t<pos:position pos:line="2" pos:column="14"/></name></type> <name pos:line="2" pos:column="15">i<pos:position pos:line="2" pos:column="16"/></name> <init pos:line="2" pos:column="17">= <expr><literal type="number" pos:line="2" pos:column="19">0<pos:position pos:line="2" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="2" pos:column="21"/></init> <condition><expr><name pos:line="2" pos:column="22">i<pos:position pos:line="2" pos:column="23"/></name> <operator pos:line="2" pos:column="24">&lt;<pos:position pos:line="2" pos:column="28"/></operator> <name pos:line="2" pos:column="26">buffer_size<pos:position pos:line="2" pos:column="37"/></name></expr>;<pos:position pos:line="2" pos:column="38"/></condition> <incr><expr><name pos:line="2" pos:column="39">i<pos:position pos:line="2" pos:column="40"/></name><operator pos:line="2" pos:column="40">++<pos:position pos:line="2" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="2" pos:column="43"/></control> <block pos:line="2" pos:column="44">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><name><name pos:line="3" pos:column="9">buffer<pos:position pos:line="3" pos:column="15"/></name><index pos:line="3" pos:column="15">[<expr><name pos:line="3" pos:column="16">i<pos:position pos:line="3" pos:column="17"/></name></expr>]<pos:position pos:line="3" pos:column="18"/></index></name> <operator pos:line="3" pos:column="19">==<pos:position pos:line="3" pos:column="21"/></operator> <literal type="number" pos:line="3" pos:column="22">0<pos:position pos:line="3" pos:column="23"/></literal></expr>)<pos:position pos:line="3" pos:column="24"/></condition><then pos:line="3" pos:column="24">
      <block type="pseudo"><return pos:line="4" pos:column="7">return;<pos:position pos:line="4" pos:column="14"/></return></block></then></if>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">(<pos:position pos:line="5" pos:column="10"/></operator><operator pos:line="5" pos:column="10">!<pos:position pos:line="5" pos:column="11"/></operator><call><name pos:line="5" pos:column="11">isalnum<pos:position pos:line="5" pos:column="18"/></name><argument_list pos:line="5" pos:column="18">(<argument><expr><operator pos:line="5" pos:column="19">(<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="20">int<pos:position pos:line="5" pos:column="23"/></name><operator pos:line="5" pos:column="23">)<pos:position pos:line="5" pos:column="24"/></operator><name><name pos:line="5" pos:column="24">buffer<pos:position pos:line="5" pos:column="30"/></name><index pos:line="5" pos:column="30">[<expr><name pos:line="5" pos:column="31">i<pos:position pos:line="5" pos:column="32"/></name></expr>]<pos:position pos:line="5" pos:column="33"/></index></name></expr></argument>)<pos:position pos:line="5" pos:column="34"/></argument_list></call><operator pos:line="5" pos:column="34">)<pos:position pos:line="5" pos:column="35"/></operator> <operator pos:line="5" pos:column="36">&amp;&amp;<pos:position pos:line="5" pos:column="46"/></operator> <operator pos:line="5" pos:column="39">(<pos:position pos:line="5" pos:column="40"/></operator><name><name pos:line="5" pos:column="40">buffer<pos:position pos:line="5" pos:column="46"/></name><index pos:line="5" pos:column="46">[<expr><name pos:line="5" pos:column="47">i<pos:position pos:line="5" pos:column="48"/></name></expr>]<pos:position pos:line="5" pos:column="49"/></index></name> <operator pos:line="5" pos:column="50">!=<pos:position pos:line="5" pos:column="52"/></operator> <literal type="char" pos:line="5" pos:column="53">'-'<pos:position pos:line="5" pos:column="56"/></literal><operator pos:line="5" pos:column="56">)<pos:position pos:line="5" pos:column="57"/></operator></expr>)<pos:position pos:line="5" pos:column="58"/></condition><then pos:line="5" pos:column="58">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="6" pos:column="7">buffer<pos:position pos:line="6" pos:column="13"/></name><index pos:line="6" pos:column="13">[<expr><name pos:line="6" pos:column="14">i<pos:position pos:line="6" pos:column="15"/></name></expr>]<pos:position pos:line="6" pos:column="16"/></index></name> <operator pos:line="6" pos:column="17">=<pos:position pos:line="6" pos:column="18"/></operator> <literal type="char" pos:line="6" pos:column="19">'_'<pos:position pos:line="6" pos:column="22"/></literal></expr>;<pos:position pos:line="6" pos:column="23"/></expr_stmt></block></then></if>
  }<pos:position pos:line="7" pos:column="4"/></block></for>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

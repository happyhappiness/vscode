<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_200_collectd-4.8.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ds_get<pos:position pos:line="1" pos:column="18"/></name> <parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier><modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier><modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">ret<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="33">/* {{{ */</comment>
    <parameter><decl><type><specifier pos:line="2" pos:column="5">const<pos:position pos:line="2" pos:column="10"/></specifier> <name pos:line="2" pos:column="11">data_set_t<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">ds<pos:position pos:line="2" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="27">const<pos:position pos:line="2" pos:column="32"/></specifier> <name pos:line="2" pos:column="33">value_list_t<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">vl<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>,
    <parameter><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">rrdcreate_config_t<pos:position pos:line="3" pos:column="29"/></name> <modifier pos:line="3" pos:column="30">*<pos:position pos:line="3" pos:column="31"/></modifier></type><name pos:line="3" pos:column="31">cfg<pos:position pos:line="3" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="35"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier><modifier pos:line="5" pos:column="9">*<pos:position pos:line="5" pos:column="10"/></modifier></type><name pos:line="5" pos:column="10">ds_def<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">ds_num<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name></type> <name><name pos:line="8" pos:column="8">min<pos:position pos:line="8" pos:column="11"/></name><index pos:line="8" pos:column="11">[<expr><literal type="number" pos:line="8" pos:column="12">32<pos:position pos:line="8" pos:column="14"/></literal></expr>]<pos:position pos:line="8" pos:column="15"/></index></name></decl>;<pos:position pos:line="8" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name></type> <name><name pos:line="9" pos:column="8">max<pos:position pos:line="9" pos:column="11"/></name><index pos:line="9" pos:column="11">[<expr><literal type="number" pos:line="9" pos:column="12">32<pos:position pos:line="9" pos:column="14"/></literal></expr>]<pos:position pos:line="9" pos:column="15"/></index></name></decl>;<pos:position pos:line="9" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name></type> <name><name pos:line="10" pos:column="8">buffer<pos:position pos:line="10" pos:column="14"/></name><index pos:line="10" pos:column="14">[<expr><literal type="number" pos:line="10" pos:column="15">128<pos:position pos:line="10" pos:column="18"/></literal></expr>]<pos:position pos:line="10" pos:column="19"/></index></name></decl>;<pos:position pos:line="10" pos:column="20"/></decl_stmt>

  <expr_stmt><expr><name pos:line="12" pos:column="3">ds_def<pos:position pos:line="12" pos:column="9"/></name> <operator pos:line="12" pos:column="10">=<pos:position pos:line="12" pos:column="11"/></operator> <operator pos:line="12" pos:column="12">(<pos:position pos:line="12" pos:column="13"/></operator><name pos:line="12" pos:column="13">char<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">*<pos:position pos:line="12" pos:column="19"/></operator><operator pos:line="12" pos:column="19">*<pos:position pos:line="12" pos:column="20"/></operator><operator pos:line="12" pos:column="20">)<pos:position pos:line="12" pos:column="21"/></operator> <call><name pos:line="12" pos:column="22">malloc<pos:position pos:line="12" pos:column="28"/></name> <argument_list pos:line="12" pos:column="29">(<argument><expr><name><name pos:line="12" pos:column="30">ds<pos:position pos:line="12" pos:column="32"/></name><operator pos:line="12" pos:column="32">-&gt;<pos:position pos:line="12" pos:column="37"/></operator><name pos:line="12" pos:column="34">ds_num<pos:position pos:line="12" pos:column="40"/></name></name> <operator pos:line="12" pos:column="41">*<pos:position pos:line="12" pos:column="42"/></operator> <sizeof pos:line="12" pos:column="43">sizeof <argument_list pos:line="12" pos:column="50">(<argument><expr><name pos:line="12" pos:column="51">char<pos:position pos:line="12" pos:column="55"/></name> <operator pos:line="12" pos:column="56">*<pos:position pos:line="12" pos:column="57"/></operator></expr></argument>)<pos:position pos:line="12" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="60"/></expr_stmt>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">ds_def<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">==<pos:position pos:line="13" pos:column="16"/></operator> <name pos:line="13" pos:column="17">NULL<pos:position pos:line="13" pos:column="21"/></name></expr>)<pos:position pos:line="13" pos:column="22"/></condition><then pos:line="13" pos:column="22">
  <block pos:line="14" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">char<pos:position pos:line="15" pos:column="9"/></name></type> <name><name pos:line="15" pos:column="10">errbuf<pos:position pos:line="15" pos:column="16"/></name><index pos:line="15" pos:column="16">[<expr><literal type="number" pos:line="15" pos:column="17">1024<pos:position pos:line="15" pos:column="21"/></literal></expr>]<pos:position pos:line="15" pos:column="22"/></index></name></decl>;<pos:position pos:line="15" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">ERROR<pos:position pos:line="16" pos:column="10"/></name> <argument_list pos:line="16" pos:column="11">(<argument><expr><literal type="string" pos:line="16" pos:column="12">"rrdtool plugin: malloc failed: %s"<pos:position pos:line="16" pos:column="47"/></literal></expr></argument>,
        <argument><expr><call><name pos:line="17" pos:column="9">sstrerror<pos:position pos:line="17" pos:column="18"/></name> <argument_list pos:line="17" pos:column="19">(<argument><expr><name pos:line="17" pos:column="20">errno<pos:position pos:line="17" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="27">errbuf<pos:position pos:line="17" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="35">sizeof <argument_list pos:line="17" pos:column="42">(<argument><expr><name pos:line="17" pos:column="43">errbuf<pos:position pos:line="17" pos:column="49"/></name></expr></argument>)<pos:position pos:line="17" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="53"/></expr_stmt>
    <return pos:line="18" pos:column="5">return <expr><operator pos:line="18" pos:column="12">(<pos:position pos:line="18" pos:column="13"/></operator><operator pos:line="18" pos:column="13">-<pos:position pos:line="18" pos:column="14"/></operator><literal type="number" pos:line="18" pos:column="14">1<pos:position pos:line="18" pos:column="15"/></literal><operator pos:line="18" pos:column="15">)<pos:position pos:line="18" pos:column="16"/></operator></expr>;<pos:position pos:line="18" pos:column="17"/></return>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="20" pos:column="3">memset<pos:position pos:line="20" pos:column="9"/></name> <argument_list pos:line="20" pos:column="10">(<argument><expr><name pos:line="20" pos:column="11">ds_def<pos:position pos:line="20" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="20" pos:column="19">'\0'<pos:position pos:line="20" pos:column="23"/></literal></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="25">ds<pos:position pos:line="20" pos:column="27"/></name><operator pos:line="20" pos:column="27">-&gt;<pos:position pos:line="20" pos:column="32"/></operator><name pos:line="20" pos:column="29">ds_num<pos:position pos:line="20" pos:column="35"/></name></name> <operator pos:line="20" pos:column="36">*<pos:position pos:line="20" pos:column="37"/></operator> <sizeof pos:line="20" pos:column="38">sizeof <argument_list pos:line="20" pos:column="45">(<argument><expr><name pos:line="20" pos:column="46">char<pos:position pos:line="20" pos:column="50"/></name> <operator pos:line="20" pos:column="51">*<pos:position pos:line="20" pos:column="52"/></operator></expr></argument>)<pos:position pos:line="20" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="55"/></expr_stmt>

  <for pos:line="22" pos:column="3">for <control pos:line="22" pos:column="7">(<init><expr><name pos:line="22" pos:column="8">ds_num<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">=<pos:position pos:line="22" pos:column="16"/></operator> <literal type="number" pos:line="22" pos:column="17">0<pos:position pos:line="22" pos:column="18"/></literal></expr>;<pos:position pos:line="22" pos:column="19"/></init> <condition><expr><name pos:line="22" pos:column="20">ds_num<pos:position pos:line="22" pos:column="26"/></name> <operator pos:line="22" pos:column="27">&lt;<pos:position pos:line="22" pos:column="31"/></operator> <name><name pos:line="22" pos:column="29">ds<pos:position pos:line="22" pos:column="31"/></name><operator pos:line="22" pos:column="31">-&gt;<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="33">ds_num<pos:position pos:line="22" pos:column="39"/></name></name></expr>;<pos:position pos:line="22" pos:column="40"/></condition> <incr><expr><name pos:line="22" pos:column="41">ds_num<pos:position pos:line="22" pos:column="47"/></name><operator pos:line="22" pos:column="47">++<pos:position pos:line="22" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="22" pos:column="50"/></control>
  <block pos:line="23" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">data_source_t<pos:position pos:line="24" pos:column="18"/></name> <modifier pos:line="24" pos:column="19">*<pos:position pos:line="24" pos:column="20"/></modifier></type><name pos:line="24" pos:column="20">d<pos:position pos:line="24" pos:column="21"/></name> <init pos:line="24" pos:column="22">= <expr><name><name pos:line="24" pos:column="24">ds<pos:position pos:line="24" pos:column="26"/></name><operator pos:line="24" pos:column="26">-&gt;<pos:position pos:line="24" pos:column="31"/></operator><name pos:line="24" pos:column="28">ds<pos:position pos:line="24" pos:column="30"/></name></name> <operator pos:line="24" pos:column="31">+<pos:position pos:line="24" pos:column="32"/></operator> <name pos:line="24" pos:column="33">ds_num<pos:position pos:line="24" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="24" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">char<pos:position pos:line="25" pos:column="9"/></name> <modifier pos:line="25" pos:column="10">*<pos:position pos:line="25" pos:column="11"/></modifier></type><name pos:line="25" pos:column="11">type<pos:position pos:line="25" pos:column="15"/></name></decl>;<pos:position pos:line="25" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">int<pos:position pos:line="26" pos:column="8"/></name></type> <name pos:line="26" pos:column="9">status<pos:position pos:line="26" pos:column="15"/></name></decl>;<pos:position pos:line="26" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="28" pos:column="5">ds_def<pos:position pos:line="28" pos:column="11"/></name><index pos:line="28" pos:column="11">[<expr><name pos:line="28" pos:column="12">ds_num<pos:position pos:line="28" pos:column="18"/></name></expr>]<pos:position pos:line="28" pos:column="19"/></index></name> <operator pos:line="28" pos:column="20">=<pos:position pos:line="28" pos:column="21"/></operator> <name pos:line="28" pos:column="22">NULL<pos:position pos:line="28" pos:column="26"/></name></expr>;<pos:position pos:line="28" pos:column="27"/></expr_stmt>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name><name pos:line="30" pos:column="9">d<pos:position pos:line="30" pos:column="10"/></name><operator pos:line="30" pos:column="10">-&gt;<pos:position pos:line="30" pos:column="15"/></operator><name pos:line="30" pos:column="12">type<pos:position pos:line="30" pos:column="16"/></name></name> <operator pos:line="30" pos:column="17">==<pos:position pos:line="30" pos:column="19"/></operator> <name pos:line="30" pos:column="20">DS_TYPE_COUNTER<pos:position pos:line="30" pos:column="35"/></name></expr>)<pos:position pos:line="30" pos:column="36"/></condition><then pos:line="30" pos:column="36">
      <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="7">type<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">=<pos:position pos:line="31" pos:column="13"/></operator> <literal type="string" pos:line="31" pos:column="14">"COUNTER"<pos:position pos:line="31" pos:column="23"/></literal></expr>;<pos:position pos:line="31" pos:column="24"/></expr_stmt></block></then>
    <elseif pos:line="32" pos:column="5">else <if pos:line="32" pos:column="10">if <condition pos:line="32" pos:column="13">(<expr><name><name pos:line="32" pos:column="14">d<pos:position pos:line="32" pos:column="15"/></name><operator pos:line="32" pos:column="15">-&gt;<pos:position pos:line="32" pos:column="20"/></operator><name pos:line="32" pos:column="17">type<pos:position pos:line="32" pos:column="21"/></name></name> <operator pos:line="32" pos:column="22">==<pos:position pos:line="32" pos:column="24"/></operator> <name pos:line="32" pos:column="25">DS_TYPE_GAUGE<pos:position pos:line="32" pos:column="38"/></name></expr>)<pos:position pos:line="32" pos:column="39"/></condition><then pos:line="32" pos:column="39">
      <block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="7">type<pos:position pos:line="33" pos:column="11"/></name> <operator pos:line="33" pos:column="12">=<pos:position pos:line="33" pos:column="13"/></operator> <literal type="string" pos:line="33" pos:column="14">"GAUGE"<pos:position pos:line="33" pos:column="21"/></literal></expr>;<pos:position pos:line="33" pos:column="22"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="34" pos:column="5">else <if pos:line="34" pos:column="10">if <condition pos:line="34" pos:column="13">(<expr><name><name pos:line="34" pos:column="14">d<pos:position pos:line="34" pos:column="15"/></name><operator pos:line="34" pos:column="15">-&gt;<pos:position pos:line="34" pos:column="20"/></operator><name pos:line="34" pos:column="17">type<pos:position pos:line="34" pos:column="21"/></name></name> <operator pos:line="34" pos:column="22">==<pos:position pos:line="34" pos:column="24"/></operator> <name pos:line="34" pos:column="25">DS_TYPE_DERIVE<pos:position pos:line="34" pos:column="39"/></name></expr>)<pos:position pos:line="34" pos:column="40"/></condition><then pos:line="34" pos:column="40">
      <block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="7">type<pos:position pos:line="35" pos:column="11"/></name> <operator pos:line="35" pos:column="12">=<pos:position pos:line="35" pos:column="13"/></operator> <literal type="string" pos:line="35" pos:column="14">"DERIVE"<pos:position pos:line="35" pos:column="22"/></literal></expr>;<pos:position pos:line="35" pos:column="23"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="36" pos:column="5">else <if pos:line="36" pos:column="10">if <condition pos:line="36" pos:column="13">(<expr><name><name pos:line="36" pos:column="14">d<pos:position pos:line="36" pos:column="15"/></name><operator pos:line="36" pos:column="15">-&gt;<pos:position pos:line="36" pos:column="20"/></operator><name pos:line="36" pos:column="17">type<pos:position pos:line="36" pos:column="21"/></name></name> <operator pos:line="36" pos:column="22">==<pos:position pos:line="36" pos:column="24"/></operator> <name pos:line="36" pos:column="25">DS_TYPE_ABSOLUTE<pos:position pos:line="36" pos:column="41"/></name></expr>)<pos:position pos:line="36" pos:column="42"/></condition><then pos:line="36" pos:column="42">
      <block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="7">type<pos:position pos:line="37" pos:column="11"/></name> <operator pos:line="37" pos:column="12">=<pos:position pos:line="37" pos:column="13"/></operator> <literal type="string" pos:line="37" pos:column="14">"ABSOLUTE"<pos:position pos:line="37" pos:column="24"/></literal></expr>;<pos:position pos:line="37" pos:column="25"/></expr_stmt></block></then></if></elseif>
    <else pos:line="38" pos:column="5">else
    <block pos:line="39" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="40" pos:column="7">ERROR<pos:position pos:line="40" pos:column="12"/></name> <argument_list pos:line="40" pos:column="13">(<argument><expr><literal type="string" pos:line="40" pos:column="14">"rrdtool plugin: Unknown DS type: %i"<pos:position pos:line="40" pos:column="51"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="41" pos:column="11">d<pos:position pos:line="41" pos:column="12"/></name><operator pos:line="41" pos:column="12">-&gt;<pos:position pos:line="41" pos:column="17"/></operator><name pos:line="41" pos:column="14">type<pos:position pos:line="41" pos:column="18"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="20"/></expr_stmt>
      <break pos:line="42" pos:column="7">break;<pos:position pos:line="42" pos:column="13"/></break>
    }<pos:position pos:line="43" pos:column="6"/></block></else></if>

    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><call><name pos:line="45" pos:column="9">isnan<pos:position pos:line="45" pos:column="14"/></name> <argument_list pos:line="45" pos:column="15">(<argument><expr><name><name pos:line="45" pos:column="16">d<pos:position pos:line="45" pos:column="17"/></name><operator pos:line="45" pos:column="17">-&gt;<pos:position pos:line="45" pos:column="22"/></operator><name pos:line="45" pos:column="19">min<pos:position pos:line="45" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="24"/></condition><then pos:line="45" pos:column="24">
    <block pos:line="46" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="47" pos:column="7">sstrncpy<pos:position pos:line="47" pos:column="15"/></name> <argument_list pos:line="47" pos:column="16">(<argument><expr><name pos:line="47" pos:column="17">min<pos:position pos:line="47" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="22">"U"<pos:position pos:line="47" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="47" pos:column="27">sizeof <argument_list pos:line="47" pos:column="34">(<argument><expr><name pos:line="47" pos:column="35">min<pos:position pos:line="47" pos:column="38"/></name></expr></argument>)<pos:position pos:line="47" pos:column="39"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="47" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="48" pos:column="6"/></block></then>
    <else pos:line="49" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="7">ssnprintf<pos:position pos:line="50" pos:column="16"/></name> <argument_list pos:line="50" pos:column="17">(<argument><expr><name pos:line="50" pos:column="18">min<pos:position pos:line="50" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="50" pos:column="23">sizeof <argument_list pos:line="50" pos:column="30">(<argument><expr><name pos:line="50" pos:column="31">min<pos:position pos:line="50" pos:column="34"/></name></expr></argument>)<pos:position pos:line="50" pos:column="35"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="37">"%f"<pos:position pos:line="50" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="43">d<pos:position pos:line="50" pos:column="44"/></name><operator pos:line="50" pos:column="44">-&gt;<pos:position pos:line="50" pos:column="49"/></operator><name pos:line="50" pos:column="46">min<pos:position pos:line="50" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="51"/></expr_stmt></block></else></if>

    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><call><name pos:line="52" pos:column="9">isnan<pos:position pos:line="52" pos:column="14"/></name> <argument_list pos:line="52" pos:column="15">(<argument><expr><name><name pos:line="52" pos:column="16">d<pos:position pos:line="52" pos:column="17"/></name><operator pos:line="52" pos:column="17">-&gt;<pos:position pos:line="52" pos:column="22"/></operator><name pos:line="52" pos:column="19">max<pos:position pos:line="52" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="52" pos:column="24"/></condition><then pos:line="52" pos:column="24">
    <block pos:line="53" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="54" pos:column="7">sstrncpy<pos:position pos:line="54" pos:column="15"/></name> <argument_list pos:line="54" pos:column="16">(<argument><expr><name pos:line="54" pos:column="17">max<pos:position pos:line="54" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="22">"U"<pos:position pos:line="54" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="54" pos:column="27">sizeof <argument_list pos:line="54" pos:column="34">(<argument><expr><name pos:line="54" pos:column="35">max<pos:position pos:line="54" pos:column="38"/></name></expr></argument>)<pos:position pos:line="54" pos:column="39"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="54" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="55" pos:column="6"/></block></then>
    <else pos:line="56" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="57" pos:column="7">ssnprintf<pos:position pos:line="57" pos:column="16"/></name> <argument_list pos:line="57" pos:column="17">(<argument><expr><name pos:line="57" pos:column="18">max<pos:position pos:line="57" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="57" pos:column="23">sizeof <argument_list pos:line="57" pos:column="30">(<argument><expr><name pos:line="57" pos:column="31">max<pos:position pos:line="57" pos:column="34"/></name></expr></argument>)<pos:position pos:line="57" pos:column="35"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="37">"%f"<pos:position pos:line="57" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="43">d<pos:position pos:line="57" pos:column="44"/></name><operator pos:line="57" pos:column="44">-&gt;<pos:position pos:line="57" pos:column="49"/></operator><name pos:line="57" pos:column="46">max<pos:position pos:line="57" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="51"/></expr_stmt></block></else></if>

    <expr_stmt><expr><name pos:line="59" pos:column="5">status<pos:position pos:line="59" pos:column="11"/></name> <operator pos:line="59" pos:column="12">=<pos:position pos:line="59" pos:column="13"/></operator> <call><name pos:line="59" pos:column="14">ssnprintf<pos:position pos:line="59" pos:column="23"/></name> <argument_list pos:line="59" pos:column="24">(<argument><expr><name pos:line="59" pos:column="25">buffer<pos:position pos:line="59" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="59" pos:column="33">sizeof <argument_list pos:line="59" pos:column="40">(<argument><expr><name pos:line="59" pos:column="41">buffer<pos:position pos:line="59" pos:column="47"/></name></expr></argument>)<pos:position pos:line="59" pos:column="48"/></argument_list></sizeof></expr></argument>,
        <argument><expr><literal type="string" pos:line="60" pos:column="9">"DS:%s:%s:%i:%s:%s"<pos:position pos:line="60" pos:column="28"/></literal></expr></argument>,
        <argument><expr><name><name pos:line="61" pos:column="9">d<pos:position pos:line="61" pos:column="10"/></name><operator pos:line="61" pos:column="10">-&gt;<pos:position pos:line="61" pos:column="15"/></operator><name pos:line="61" pos:column="12">name<pos:position pos:line="61" pos:column="16"/></name></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="18">type<pos:position pos:line="61" pos:column="22"/></name></expr></argument>,
        <argument><expr><ternary><condition><expr><operator pos:line="62" pos:column="9">(<pos:position pos:line="62" pos:column="10"/></operator><name><name pos:line="62" pos:column="10">cfg<pos:position pos:line="62" pos:column="13"/></name><operator pos:line="62" pos:column="13">-&gt;<pos:position pos:line="62" pos:column="18"/></operator><name pos:line="62" pos:column="15">heartbeat<pos:position pos:line="62" pos:column="24"/></name></name> <operator pos:line="62" pos:column="25">&gt;<pos:position pos:line="62" pos:column="29"/></operator> <literal type="number" pos:line="62" pos:column="27">0<pos:position pos:line="62" pos:column="28"/></literal><operator pos:line="62" pos:column="28">)<pos:position pos:line="62" pos:column="29"/></operator></expr> ?<pos:position pos:line="62" pos:column="31"/></condition><then pos:line="62" pos:column="31"> <expr><name><name pos:line="62" pos:column="32">cfg<pos:position pos:line="62" pos:column="35"/></name><operator pos:line="62" pos:column="35">-&gt;<pos:position pos:line="62" pos:column="40"/></operator><name pos:line="62" pos:column="37">heartbeat<pos:position pos:line="62" pos:column="46"/></name></name></expr> <pos:position pos:line="62" pos:column="47"/></then><else pos:line="62" pos:column="47">: <expr><operator pos:line="62" pos:column="49">(<pos:position pos:line="62" pos:column="50"/></operator><literal type="number" pos:line="62" pos:column="50">2<pos:position pos:line="62" pos:column="51"/></literal> <operator pos:line="62" pos:column="52">*<pos:position pos:line="62" pos:column="53"/></operator> <name><name pos:line="62" pos:column="54">vl<pos:position pos:line="62" pos:column="56"/></name><operator pos:line="62" pos:column="56">-&gt;<pos:position pos:line="62" pos:column="61"/></operator><name pos:line="62" pos:column="58">interval<pos:position pos:line="62" pos:column="66"/></name></name><operator pos:line="62" pos:column="66">)<pos:position pos:line="62" pos:column="67"/></operator></expr></else></ternary></expr></argument>,
        <argument><expr><name pos:line="63" pos:column="9">min<pos:position pos:line="63" pos:column="12"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="14">max<pos:position pos:line="63" pos:column="17"/></name></expr></argument>)<pos:position pos:line="63" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="19"/></expr_stmt>
    <if pos:line="64" pos:column="5">if <condition pos:line="64" pos:column="8">(<expr><operator pos:line="64" pos:column="9">(<pos:position pos:line="64" pos:column="10"/></operator><name pos:line="64" pos:column="10">status<pos:position pos:line="64" pos:column="16"/></name> <operator pos:line="64" pos:column="17">&lt;<pos:position pos:line="64" pos:column="21"/></operator> <literal type="number" pos:line="64" pos:column="19">1<pos:position pos:line="64" pos:column="20"/></literal><operator pos:line="64" pos:column="20">)<pos:position pos:line="64" pos:column="21"/></operator> <operator pos:line="64" pos:column="22">||<pos:position pos:line="64" pos:column="24"/></operator> <operator pos:line="64" pos:column="25">(<pos:position pos:line="64" pos:column="26"/></operator><operator pos:line="64" pos:column="26">(<pos:position pos:line="64" pos:column="27"/></operator><name pos:line="64" pos:column="27">size_t<pos:position pos:line="64" pos:column="33"/></name><operator pos:line="64" pos:column="33">)<pos:position pos:line="64" pos:column="34"/></operator> <name pos:line="64" pos:column="35">status<pos:position pos:line="64" pos:column="41"/></name> <operator pos:line="64" pos:column="42">&gt;=<pos:position pos:line="64" pos:column="47"/></operator> <sizeof pos:line="64" pos:column="45">sizeof <argument_list pos:line="64" pos:column="52">(<argument><expr><name pos:line="64" pos:column="53">buffer<pos:position pos:line="64" pos:column="59"/></name></expr></argument>)<pos:position pos:line="64" pos:column="60"/></argument_list></sizeof><operator pos:line="64" pos:column="60">)<pos:position pos:line="64" pos:column="61"/></operator></expr>)<pos:position pos:line="64" pos:column="62"/></condition><then pos:line="64" pos:column="62">
      <block type="pseudo"><break pos:line="65" pos:column="7">break;<pos:position pos:line="65" pos:column="13"/></break></block></then></if>

    <expr_stmt><expr><name><name pos:line="67" pos:column="5">ds_def<pos:position pos:line="67" pos:column="11"/></name><index pos:line="67" pos:column="11">[<expr><name pos:line="67" pos:column="12">ds_num<pos:position pos:line="67" pos:column="18"/></name></expr>]<pos:position pos:line="67" pos:column="19"/></index></name> <operator pos:line="67" pos:column="20">=<pos:position pos:line="67" pos:column="21"/></operator> <call><name pos:line="67" pos:column="22">sstrdup<pos:position pos:line="67" pos:column="29"/></name> <argument_list pos:line="67" pos:column="30">(<argument><expr><name pos:line="67" pos:column="31">buffer<pos:position pos:line="67" pos:column="37"/></name></expr></argument>)<pos:position pos:line="67" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="39"/></expr_stmt>
  }<pos:position pos:line="68" pos:column="4"/></block></for> <comment type="block" pos:line="68" pos:column="5">/* for ds_num = 0 .. ds-&gt;ds_num */</comment>

  <if pos:line="70" pos:column="3">if <condition pos:line="70" pos:column="6">(<expr><name pos:line="70" pos:column="7">ds_num<pos:position pos:line="70" pos:column="13"/></name> <operator pos:line="70" pos:column="14">!=<pos:position pos:line="70" pos:column="16"/></operator> <name><name pos:line="70" pos:column="17">ds<pos:position pos:line="70" pos:column="19"/></name><operator pos:line="70" pos:column="19">-&gt;<pos:position pos:line="70" pos:column="24"/></operator><name pos:line="70" pos:column="21">ds_num<pos:position pos:line="70" pos:column="27"/></name></name></expr>)<pos:position pos:line="70" pos:column="28"/></condition><then pos:line="70" pos:column="28">
  <block pos:line="71" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="72" pos:column="5">ds_free<pos:position pos:line="72" pos:column="12"/></name> <argument_list pos:line="72" pos:column="13">(<argument><expr><name pos:line="72" pos:column="14">ds_num<pos:position pos:line="72" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="22">ds_def<pos:position pos:line="72" pos:column="28"/></name></expr></argument>)<pos:position pos:line="72" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="30"/></expr_stmt>
    <return pos:line="73" pos:column="5">return <expr><operator pos:line="73" pos:column="12">(<pos:position pos:line="73" pos:column="13"/></operator><operator pos:line="73" pos:column="13">-<pos:position pos:line="73" pos:column="14"/></operator><literal type="number" pos:line="73" pos:column="14">1<pos:position pos:line="73" pos:column="15"/></literal><operator pos:line="73" pos:column="15">)<pos:position pos:line="73" pos:column="16"/></operator></expr>;<pos:position pos:line="73" pos:column="17"/></return>
  }<pos:position pos:line="74" pos:column="4"/></block></then></if>

  <expr_stmt><expr><operator pos:line="76" pos:column="3">*<pos:position pos:line="76" pos:column="4"/></operator><name pos:line="76" pos:column="4">ret<pos:position pos:line="76" pos:column="7"/></name> <operator pos:line="76" pos:column="8">=<pos:position pos:line="76" pos:column="9"/></operator> <name pos:line="76" pos:column="10">ds_def<pos:position pos:line="76" pos:column="16"/></name></expr>;<pos:position pos:line="76" pos:column="17"/></expr_stmt>
  <return pos:line="77" pos:column="3">return <expr><operator pos:line="77" pos:column="10">(<pos:position pos:line="77" pos:column="11"/></operator><name pos:line="77" pos:column="11">ds_num<pos:position pos:line="77" pos:column="17"/></name><operator pos:line="77" pos:column="17">)<pos:position pos:line="77" pos:column="18"/></operator></expr>;<pos:position pos:line="77" pos:column="19"/></return>
}<pos:position pos:line="78" pos:column="2"/></block></function></unit>

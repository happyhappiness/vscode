<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1473_collectd-5.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">mb_init_connection<pos:position pos:line="1" pos:column="30"/></name> <parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">mb_host_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">host<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list> <comment type="block" pos:line="1" pos:column="49">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">status<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">host<pos:position pos:line="5" pos:column="11"/></name> <operator pos:line="5" pos:column="12">==<pos:position pos:line="5" pos:column="14"/></operator> <name pos:line="5" pos:column="15">NULL<pos:position pos:line="5" pos:column="19"/></name></expr>)<pos:position pos:line="5" pos:column="20"/></condition><then pos:line="5" pos:column="20">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><operator pos:line="6" pos:column="12">(<pos:position pos:line="6" pos:column="13"/></operator><name pos:line="6" pos:column="13">EINVAL<pos:position pos:line="6" pos:column="19"/></name><operator pos:line="6" pos:column="19">)<pos:position pos:line="6" pos:column="20"/></operator></expr>;<pos:position pos:line="6" pos:column="21"/></return></block></then></if>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name><name pos:line="8" pos:column="7">host<pos:position pos:line="8" pos:column="11"/></name><operator pos:line="8" pos:column="11">-&gt;<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="13">is_connected<pos:position pos:line="8" pos:column="25"/></name></name></expr>)<pos:position pos:line="8" pos:column="26"/></condition><then pos:line="8" pos:column="26">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><operator pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></operator><literal type="number" pos:line="9" pos:column="13">0<pos:position pos:line="9" pos:column="14"/></literal><operator pos:line="9" pos:column="14">)<pos:position pos:line="9" pos:column="15"/></operator></expr>;<pos:position pos:line="9" pos:column="16"/></return></block></then></if>

  <comment type="block" pos:line="11" pos:column="3">/* Only reconnect once per interval. */</comment>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name><name pos:line="12" pos:column="7">host<pos:position pos:line="12" pos:column="11"/></name><operator pos:line="12" pos:column="11">-&gt;<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="13">have_reconnected<pos:position pos:line="12" pos:column="29"/></name></name></expr>)<pos:position pos:line="12" pos:column="30"/></condition><then pos:line="12" pos:column="30">
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">(<pos:position pos:line="13" pos:column="13"/></operator><operator pos:line="13" pos:column="13">-<pos:position pos:line="13" pos:column="14"/></operator><literal type="number" pos:line="13" pos:column="14">1<pos:position pos:line="13" pos:column="15"/></literal><operator pos:line="13" pos:column="15">)<pos:position pos:line="13" pos:column="16"/></operator></expr>;<pos:position pos:line="13" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">modbus_set_debug<pos:position pos:line="15" pos:column="19"/></name> <argument_list pos:line="15" pos:column="20">(<argument><expr><operator pos:line="15" pos:column="21">&amp;<pos:position pos:line="15" pos:column="26"/></operator><name><name pos:line="15" pos:column="22">host<pos:position pos:line="15" pos:column="26"/></name><operator pos:line="15" pos:column="26">-&gt;<pos:position pos:line="15" pos:column="31"/></operator><name pos:line="15" pos:column="28">connection<pos:position pos:line="15" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="40">1<pos:position pos:line="15" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="43"/></expr_stmt>

  <comment type="block" pos:line="17" pos:column="3">/* We'll do the error handling ourselves. */</comment>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">modbus_set_error_handling<pos:position pos:line="18" pos:column="28"/></name> <argument_list pos:line="18" pos:column="29">(<argument><expr><operator pos:line="18" pos:column="30">&amp;<pos:position pos:line="18" pos:column="35"/></operator><name><name pos:line="18" pos:column="31">host<pos:position pos:line="18" pos:column="35"/></name><operator pos:line="18" pos:column="35">-&gt;<pos:position pos:line="18" pos:column="40"/></operator><name pos:line="18" pos:column="37">connection<pos:position pos:line="18" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="49">NOP_ON_ERROR<pos:position pos:line="18" pos:column="61"/></name></expr></argument>)<pos:position pos:line="18" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="63"/></expr_stmt>

  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><operator pos:line="20" pos:column="7">(<pos:position pos:line="20" pos:column="8"/></operator><name><name pos:line="20" pos:column="8">host<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">-&gt;<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="14">port<pos:position pos:line="20" pos:column="18"/></name></name> <operator pos:line="20" pos:column="19">&lt;<pos:position pos:line="20" pos:column="23"/></operator> <literal type="number" pos:line="20" pos:column="21">1<pos:position pos:line="20" pos:column="22"/></literal><operator pos:line="20" pos:column="22">)<pos:position pos:line="20" pos:column="23"/></operator> <operator pos:line="20" pos:column="24">||<pos:position pos:line="20" pos:column="26"/></operator> <operator pos:line="20" pos:column="27">(<pos:position pos:line="20" pos:column="28"/></operator><name><name pos:line="20" pos:column="28">host<pos:position pos:line="20" pos:column="32"/></name><operator pos:line="20" pos:column="32">-&gt;<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="34">port<pos:position pos:line="20" pos:column="38"/></name></name> <operator pos:line="20" pos:column="39">&gt;<pos:position pos:line="20" pos:column="43"/></operator> <literal type="number" pos:line="20" pos:column="41">65535<pos:position pos:line="20" pos:column="46"/></literal><operator pos:line="20" pos:column="46">)<pos:position pos:line="20" pos:column="47"/></operator></expr>)<pos:position pos:line="20" pos:column="48"/></condition><then pos:line="20" pos:column="48">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="21" pos:column="5">host<pos:position pos:line="21" pos:column="9"/></name><operator pos:line="21" pos:column="9">-&gt;<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="11">port<pos:position pos:line="21" pos:column="15"/></name></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <name pos:line="21" pos:column="18">MODBUS_TCP_DEFAULT_PORT<pos:position pos:line="21" pos:column="41"/></name></expr>;<pos:position pos:line="21" pos:column="42"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="23" pos:column="3">DEBUG<pos:position pos:line="23" pos:column="8"/></name> <argument_list pos:line="23" pos:column="9">(<argument><expr><literal type="string" pos:line="23" pos:column="10">"Modbus plugin: Trying to connect to \"%s\", port %i."<pos:position pos:line="23" pos:column="64"/></literal></expr></argument>,
      <argument><expr><name><name pos:line="24" pos:column="7">host<pos:position pos:line="24" pos:column="11"/></name><operator pos:line="24" pos:column="11">-&gt;<pos:position pos:line="24" pos:column="16"/></operator><name pos:line="24" pos:column="13">node<pos:position pos:line="24" pos:column="17"/></name></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="19">host<pos:position pos:line="24" pos:column="23"/></name><operator pos:line="24" pos:column="23">-&gt;<pos:position pos:line="24" pos:column="28"/></operator><name pos:line="24" pos:column="25">port<pos:position pos:line="24" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="31"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="26" pos:column="3">modbus_init_tcp<pos:position pos:line="26" pos:column="18"/></name> <argument_list pos:line="26" pos:column="19">(<argument><expr><operator pos:line="26" pos:column="20">&amp;<pos:position pos:line="26" pos:column="25"/></operator><name><name pos:line="26" pos:column="21">host<pos:position pos:line="26" pos:column="25"/></name><operator pos:line="26" pos:column="25">-&gt;<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="27">connection<pos:position pos:line="26" pos:column="37"/></name></name></expr></argument>,
      <comment type="block" pos:line="27" pos:column="7">/* host = */</comment> <argument><expr><name><name pos:line="27" pos:column="20">host<pos:position pos:line="27" pos:column="24"/></name><operator pos:line="27" pos:column="24">-&gt;<pos:position pos:line="27" pos:column="29"/></operator><name pos:line="27" pos:column="26">node<pos:position pos:line="27" pos:column="30"/></name></name></expr></argument>,
      <comment type="block" pos:line="28" pos:column="7">/* port = */</comment> <argument><expr><name><name pos:line="28" pos:column="20">host<pos:position pos:line="28" pos:column="24"/></name><operator pos:line="28" pos:column="24">-&gt;<pos:position pos:line="28" pos:column="29"/></operator><name pos:line="28" pos:column="26">port<pos:position pos:line="28" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="32"/></expr_stmt>

  <expr_stmt><expr><name pos:line="30" pos:column="3">status<pos:position pos:line="30" pos:column="9"/></name> <operator pos:line="30" pos:column="10">=<pos:position pos:line="30" pos:column="11"/></operator> <call><name pos:line="30" pos:column="12">modbus_connect<pos:position pos:line="30" pos:column="26"/></name> <argument_list pos:line="30" pos:column="27">(<argument><expr><operator pos:line="30" pos:column="28">&amp;<pos:position pos:line="30" pos:column="33"/></operator><name><name pos:line="30" pos:column="29">host<pos:position pos:line="30" pos:column="33"/></name><operator pos:line="30" pos:column="33">-&gt;<pos:position pos:line="30" pos:column="38"/></operator><name pos:line="30" pos:column="35">connection<pos:position pos:line="30" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="47"/></expr_stmt>
  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><name pos:line="31" pos:column="7">status<pos:position pos:line="31" pos:column="13"/></name> <operator pos:line="31" pos:column="14">!=<pos:position pos:line="31" pos:column="16"/></operator> <literal type="number" pos:line="31" pos:column="17">0<pos:position pos:line="31" pos:column="18"/></literal></expr>)<pos:position pos:line="31" pos:column="19"/></condition><then pos:line="31" pos:column="19">
  <block pos:line="32" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">ERROR<pos:position pos:line="33" pos:column="10"/></name> <argument_list pos:line="33" pos:column="11">(<argument><expr><literal type="string" pos:line="33" pos:column="12">"Modbus plugin: modbus_connect (%s, %i) failed with status %i."<pos:position pos:line="33" pos:column="75"/></literal></expr></argument>,
        <argument><expr><name><name pos:line="34" pos:column="9">host<pos:position pos:line="34" pos:column="13"/></name><operator pos:line="34" pos:column="13">-&gt;<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="15">node<pos:position pos:line="34" pos:column="19"/></name></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="21">host<pos:position pos:line="34" pos:column="25"/></name><operator pos:line="34" pos:column="25">-&gt;<pos:position pos:line="34" pos:column="30"/></operator><name pos:line="34" pos:column="27">port<pos:position pos:line="34" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="33">status<pos:position pos:line="34" pos:column="39"/></name></expr></argument>)<pos:position pos:line="34" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="41"/></expr_stmt>
    <return pos:line="35" pos:column="5">return <expr><operator pos:line="35" pos:column="12">(<pos:position pos:line="35" pos:column="13"/></operator><name pos:line="35" pos:column="13">status<pos:position pos:line="35" pos:column="19"/></name><operator pos:line="35" pos:column="19">)<pos:position pos:line="35" pos:column="20"/></operator></expr>;<pos:position pos:line="35" pos:column="21"/></return>
  }<pos:position pos:line="36" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="38" pos:column="3">host<pos:position pos:line="38" pos:column="7"/></name><operator pos:line="38" pos:column="7">-&gt;<pos:position pos:line="38" pos:column="12"/></operator><name pos:line="38" pos:column="9">is_connected<pos:position pos:line="38" pos:column="21"/></name></name> <operator pos:line="38" pos:column="22">=<pos:position pos:line="38" pos:column="23"/></operator> <literal type="number" pos:line="38" pos:column="24">1<pos:position pos:line="38" pos:column="25"/></literal></expr>;<pos:position pos:line="38" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="39" pos:column="3">host<pos:position pos:line="39" pos:column="7"/></name><operator pos:line="39" pos:column="7">-&gt;<pos:position pos:line="39" pos:column="12"/></operator><name pos:line="39" pos:column="9">have_reconnected<pos:position pos:line="39" pos:column="25"/></name></name> <operator pos:line="39" pos:column="26">=<pos:position pos:line="39" pos:column="27"/></operator> <literal type="number" pos:line="39" pos:column="28">1<pos:position pos:line="39" pos:column="29"/></literal></expr>;<pos:position pos:line="39" pos:column="30"/></expr_stmt>
  <return pos:line="40" pos:column="3">return <expr><operator pos:line="40" pos:column="10">(<pos:position pos:line="40" pos:column="11"/></operator><literal type="number" pos:line="40" pos:column="11">0<pos:position pos:line="40" pos:column="12"/></literal><operator pos:line="40" pos:column="12">)<pos:position pos:line="40" pos:column="13"/></operator></expr>;<pos:position pos:line="40" pos:column="14"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

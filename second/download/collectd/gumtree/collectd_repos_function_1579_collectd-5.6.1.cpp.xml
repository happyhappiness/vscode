<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1579_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">md_read<pos:position pos:line="1" pos:column="19"/></name> <parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">void<pos:position pos:line="1" pos:column="25"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="26"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">FILE<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">fh<pos:position pos:line="3" pos:column="11"/></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">buffer<pos:position pos:line="4" pos:column="14"/></name><index pos:line="4" pos:column="14">[<expr><literal type="number" pos:line="4" pos:column="15">1024<pos:position pos:line="4" pos:column="19"/></literal></expr>]<pos:position pos:line="4" pos:column="20"/></index></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">fh<pos:position pos:line="6" pos:column="5"/></name> <operator pos:line="6" pos:column="6">=<pos:position pos:line="6" pos:column="7"/></operator> <call><name pos:line="6" pos:column="8">fopen<pos:position pos:line="6" pos:column="13"/></name> <argument_list pos:line="6" pos:column="14">(<argument><expr><name pos:line="6" pos:column="15">PROC_DISKSTATS<pos:position pos:line="6" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="31">"r"<pos:position pos:line="6" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="36"/></expr_stmt>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">fh<pos:position pos:line="7" pos:column="9"/></name> <operator pos:line="7" pos:column="10">==<pos:position pos:line="7" pos:column="12"/></operator> <name pos:line="7" pos:column="13">NULL<pos:position pos:line="7" pos:column="17"/></name></expr>)<pos:position pos:line="7" pos:column="18"/></condition><then pos:line="7" pos:column="18"> <block pos:line="7" pos:column="19">{
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name></type> <name><name pos:line="8" pos:column="10">errbuf<pos:position pos:line="8" pos:column="16"/></name><index pos:line="8" pos:column="16">[<expr><literal type="number" pos:line="8" pos:column="17">1024<pos:position pos:line="8" pos:column="21"/></literal></expr>]<pos:position pos:line="8" pos:column="22"/></index></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">WARNING<pos:position pos:line="9" pos:column="12"/></name> <argument_list pos:line="9" pos:column="13">(<argument><expr><literal type="string" pos:line="9" pos:column="14">"md: Unable to open %s: %s"<pos:position pos:line="9" pos:column="41"/></literal></expr></argument>,
        <argument><expr><name pos:line="10" pos:column="9">PROC_DISKSTATS<pos:position pos:line="10" pos:column="23"/></name></expr></argument> ,
        <argument><expr><call><name pos:line="11" pos:column="9">sstrerror<pos:position pos:line="11" pos:column="18"/></name> <argument_list pos:line="11" pos:column="19">(<argument><expr><name pos:line="11" pos:column="20">errno<pos:position pos:line="11" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="27">errbuf<pos:position pos:line="11" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="35">sizeof <argument_list pos:line="11" pos:column="42">(<argument><expr><name pos:line="11" pos:column="43">errbuf<pos:position pos:line="11" pos:column="49"/></name></expr></argument>)<pos:position pos:line="11" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="53"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">(<pos:position pos:line="12" pos:column="13"/></operator><operator pos:line="12" pos:column="13">-<pos:position pos:line="12" pos:column="14"/></operator><literal type="number" pos:line="12" pos:column="14">1<pos:position pos:line="12" pos:column="15"/></literal><operator pos:line="12" pos:column="15">)<pos:position pos:line="12" pos:column="16"/></operator></expr>;<pos:position pos:line="12" pos:column="17"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="15" pos:column="3">/* Iterate md devices */</comment>
  <while pos:line="16" pos:column="3">while <condition pos:line="16" pos:column="9">(<expr><call><name pos:line="16" pos:column="10">fgets<pos:position pos:line="16" pos:column="15"/></name> <argument_list pos:line="16" pos:column="16">(<argument><expr><name pos:line="16" pos:column="17">buffer<pos:position pos:line="16" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="25">sizeof <argument_list pos:line="16" pos:column="32">(<argument><expr><name pos:line="16" pos:column="33">buffer<pos:position pos:line="16" pos:column="39"/></name></expr></argument>)<pos:position pos:line="16" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="16" pos:column="42">fh<pos:position pos:line="16" pos:column="44"/></name></expr></argument>)<pos:position pos:line="16" pos:column="45"/></argument_list></call> <operator pos:line="16" pos:column="46">!=<pos:position pos:line="16" pos:column="48"/></operator> <name pos:line="16" pos:column="49">NULL<pos:position pos:line="16" pos:column="53"/></name></expr>)<pos:position pos:line="16" pos:column="54"/></condition>
  <block pos:line="17" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">char<pos:position pos:line="18" pos:column="9"/></name></type> <name><name pos:line="18" pos:column="10">path<pos:position pos:line="18" pos:column="14"/></name><index pos:line="18" pos:column="14">[<expr><name pos:line="18" pos:column="15">PATH_MAX<pos:position pos:line="18" pos:column="23"/></name></expr>]<pos:position pos:line="18" pos:column="24"/></index></name></decl>;<pos:position pos:line="18" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">char<pos:position pos:line="19" pos:column="9"/></name> <modifier pos:line="19" pos:column="10">*<pos:position pos:line="19" pos:column="11"/></modifier></type><name><name pos:line="19" pos:column="11">fields<pos:position pos:line="19" pos:column="17"/></name><index pos:line="19" pos:column="17">[<expr><literal type="number" pos:line="19" pos:column="18">4<pos:position pos:line="19" pos:column="19"/></literal></expr>]<pos:position pos:line="19" pos:column="20"/></index></name></decl>;<pos:position pos:line="19" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">char<pos:position pos:line="20" pos:column="9"/></name> <modifier pos:line="20" pos:column="10">*<pos:position pos:line="20" pos:column="11"/></modifier></type><name pos:line="20" pos:column="11">name<pos:position pos:line="20" pos:column="15"/></name></decl>;<pos:position pos:line="20" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">int<pos:position pos:line="21" pos:column="8"/></name></type> <name pos:line="21" pos:column="9">major<pos:position pos:line="21" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="21" pos:column="16">minor<pos:position pos:line="21" pos:column="21"/></name></decl>;<pos:position pos:line="21" pos:column="22"/></decl_stmt>

    <comment type="block" pos:line="23" pos:column="5">/* Extract interesting fields */</comment>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><call><name pos:line="24" pos:column="9">strsplit<pos:position pos:line="24" pos:column="17"/></name> <argument_list pos:line="24" pos:column="18">(<argument><expr><name pos:line="24" pos:column="19">buffer<pos:position pos:line="24" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="27">fields<pos:position pos:line="24" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="35">STATIC_ARRAY_SIZE<pos:position pos:line="24" pos:column="52"/></name><argument_list pos:line="24" pos:column="52">(<argument><expr><name pos:line="24" pos:column="53">fields<pos:position pos:line="24" pos:column="59"/></name></expr></argument>)<pos:position pos:line="24" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="61"/></argument_list></call> <operator pos:line="24" pos:column="62">&lt;<pos:position pos:line="24" pos:column="66"/></operator> <literal type="number" pos:line="24" pos:column="64">3<pos:position pos:line="24" pos:column="65"/></literal></expr>)<pos:position pos:line="24" pos:column="66"/></condition><then pos:line="24" pos:column="66">
      <block type="pseudo"><continue pos:line="25" pos:column="7">continue;<pos:position pos:line="25" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="27" pos:column="5">major<pos:position pos:line="27" pos:column="10"/></name> <operator pos:line="27" pos:column="11">=<pos:position pos:line="27" pos:column="12"/></operator> <call><name pos:line="27" pos:column="13">atoi<pos:position pos:line="27" pos:column="17"/></name> <argument_list pos:line="27" pos:column="18">(<argument><expr><name><name pos:line="27" pos:column="19">fields<pos:position pos:line="27" pos:column="25"/></name><index pos:line="27" pos:column="25">[<expr><literal type="number" pos:line="27" pos:column="26">0<pos:position pos:line="27" pos:column="27"/></literal></expr>]<pos:position pos:line="27" pos:column="28"/></index></name></expr></argument>)<pos:position pos:line="27" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="30"/></expr_stmt>

    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">major<pos:position pos:line="29" pos:column="14"/></name> <operator pos:line="29" pos:column="15">!=<pos:position pos:line="29" pos:column="17"/></operator> <name pos:line="29" pos:column="18">MD_MAJOR<pos:position pos:line="29" pos:column="26"/></name></expr>)<pos:position pos:line="29" pos:column="27"/></condition><then pos:line="29" pos:column="27">
      <block type="pseudo"><continue pos:line="30" pos:column="7">continue;<pos:position pos:line="30" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="32" pos:column="5">minor<pos:position pos:line="32" pos:column="10"/></name> <operator pos:line="32" pos:column="11">=<pos:position pos:line="32" pos:column="12"/></operator> <call><name pos:line="32" pos:column="13">atoi<pos:position pos:line="32" pos:column="17"/></name> <argument_list pos:line="32" pos:column="18">(<argument><expr><name><name pos:line="32" pos:column="19">fields<pos:position pos:line="32" pos:column="25"/></name><index pos:line="32" pos:column="25">[<expr><literal type="number" pos:line="32" pos:column="26">1<pos:position pos:line="32" pos:column="27"/></literal></expr>]<pos:position pos:line="32" pos:column="28"/></index></name></expr></argument>)<pos:position pos:line="32" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="33" pos:column="5">name<pos:position pos:line="33" pos:column="9"/></name> <operator pos:line="33" pos:column="10">=<pos:position pos:line="33" pos:column="11"/></operator> <name><name pos:line="33" pos:column="12">fields<pos:position pos:line="33" pos:column="18"/></name><index pos:line="33" pos:column="18">[<expr><literal type="number" pos:line="33" pos:column="19">2<pos:position pos:line="33" pos:column="20"/></literal></expr>]<pos:position pos:line="33" pos:column="21"/></index></name></expr>;<pos:position pos:line="33" pos:column="22"/></expr_stmt>

    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><call><name pos:line="35" pos:column="9">ignorelist_match<pos:position pos:line="35" pos:column="25"/></name> <argument_list pos:line="35" pos:column="26">(<argument><expr><name pos:line="35" pos:column="27">ignorelist<pos:position pos:line="35" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="39">name<pos:position pos:line="35" pos:column="43"/></name></expr></argument>)<pos:position pos:line="35" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="45"/></condition><then pos:line="35" pos:column="45">
      <block type="pseudo"><continue pos:line="36" pos:column="7">continue;<pos:position pos:line="36" pos:column="16"/></continue></block></then></if>

    <comment type="block" pos:line="38" pos:column="5">/* FIXME: Don't hardcode path. Walk /dev collecting major,
     * minor and name, then use lookup table to find device.
     * Alternatively create a temporary device file with correct
     * major/minor, but that again can be tricky if the filesystem
     * with the device file is mounted using the "nodev" option.
     */</comment>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">ssnprintf<pos:position pos:line="44" pos:column="14"/></name> <argument_list pos:line="44" pos:column="15">(<argument><expr><name pos:line="44" pos:column="16">path<pos:position pos:line="44" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="22">sizeof <argument_list pos:line="44" pos:column="29">(<argument><expr><name pos:line="44" pos:column="30">path<pos:position pos:line="44" pos:column="34"/></name></expr></argument>)<pos:position pos:line="44" pos:column="35"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="37">"%s/%s"<pos:position pos:line="44" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="46">DEV_DIR<pos:position pos:line="44" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="55">name<pos:position pos:line="44" pos:column="59"/></name></expr></argument>)<pos:position pos:line="44" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="61"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="46" pos:column="5">md_process<pos:position pos:line="46" pos:column="15"/></name> <argument_list pos:line="46" pos:column="16">(<argument><expr><name pos:line="46" pos:column="17">minor<pos:position pos:line="46" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="24">path<pos:position pos:line="46" pos:column="28"/></name></expr></argument>)<pos:position pos:line="46" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="30"/></expr_stmt>
  }<pos:position pos:line="47" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="49" pos:column="3">fclose<pos:position pos:line="49" pos:column="9"/></name> <argument_list pos:line="49" pos:column="10">(<argument><expr><name pos:line="49" pos:column="11">fh<pos:position pos:line="49" pos:column="13"/></name></expr></argument>)<pos:position pos:line="49" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="15"/></expr_stmt>

  <return pos:line="51" pos:column="3">return <expr><operator pos:line="51" pos:column="10">(<pos:position pos:line="51" pos:column="11"/></operator><literal type="number" pos:line="51" pos:column="11">0<pos:position pos:line="51" pos:column="12"/></literal><operator pos:line="51" pos:column="12">)<pos:position pos:line="51" pos:column="13"/></operator></expr>;<pos:position pos:line="51" pos:column="14"/></return>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

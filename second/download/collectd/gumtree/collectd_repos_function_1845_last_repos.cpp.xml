<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1845_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cx_config_add_url<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">oconfig_item_t<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">ci<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list> <comment type="block" pos:line="1" pos:column="50">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><operator pos:line="3" pos:column="7">(<pos:position pos:line="3" pos:column="8"/></operator><name><name pos:line="3" pos:column="8">ci<pos:position pos:line="3" pos:column="10"/></name><operator pos:line="3" pos:column="10">-&gt;<pos:position pos:line="3" pos:column="15"/></operator><name pos:line="3" pos:column="12">values_num<pos:position pos:line="3" pos:column="22"/></name></name> <operator pos:line="3" pos:column="23">!=<pos:position pos:line="3" pos:column="25"/></operator> <literal type="number" pos:line="3" pos:column="26">1<pos:position pos:line="3" pos:column="27"/></literal><operator pos:line="3" pos:column="27">)<pos:position pos:line="3" pos:column="28"/></operator> <operator pos:line="3" pos:column="29">||<pos:position pos:line="3" pos:column="31"/></operator> <operator pos:line="3" pos:column="32">(<pos:position pos:line="3" pos:column="33"/></operator><name><name pos:line="3" pos:column="33">ci<pos:position pos:line="3" pos:column="35"/></name><operator pos:line="3" pos:column="35">-&gt;<pos:position pos:line="3" pos:column="40"/></operator><name pos:line="3" pos:column="37">values<pos:position pos:line="3" pos:column="43"/></name><index pos:line="3" pos:column="43">[<expr><literal type="number" pos:line="3" pos:column="44">0<pos:position pos:line="3" pos:column="45"/></literal></expr>]<pos:position pos:line="3" pos:column="46"/></index></name><operator pos:line="3" pos:column="46">.<pos:position pos:line="3" pos:column="47"/></operator><name pos:line="3" pos:column="47">type<pos:position pos:line="3" pos:column="51"/></name> <operator pos:line="3" pos:column="52">!=<pos:position pos:line="3" pos:column="54"/></operator> <name pos:line="3" pos:column="55">OCONFIG_TYPE_STRING<pos:position pos:line="3" pos:column="74"/></name><operator pos:line="3" pos:column="74">)<pos:position pos:line="3" pos:column="75"/></operator></expr>)<pos:position pos:line="3" pos:column="76"/></condition><then pos:line="3" pos:column="76"> <block pos:line="3" pos:column="77">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">WARNING<pos:position pos:line="4" pos:column="12"/></name><argument_list pos:line="4" pos:column="12">(<argument><expr><literal type="string" pos:line="4" pos:column="13">"curl_xml plugin: The `URL' block "<pos:position pos:line="4" pos:column="48"/></literal>
            <literal type="string" pos:line="5" pos:column="13">"needs exactly one string argument."<pos:position pos:line="5" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="51"/></expr_stmt>
    <return pos:line="6" pos:column="5">return <expr><operator pos:line="6" pos:column="12">-<pos:position pos:line="6" pos:column="13"/></operator><literal type="number" pos:line="6" pos:column="13">1<pos:position pos:line="6" pos:column="14"/></literal></expr>;<pos:position pos:line="6" pos:column="15"/></return>
  }<pos:position pos:line="7" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name pos:line="9" pos:column="3">cx_t<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">db<pos:position pos:line="9" pos:column="11"/></name> <init pos:line="9" pos:column="12">= <expr><call><name pos:line="9" pos:column="14">calloc<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><literal type="number" pos:line="9" pos:column="21">1<pos:position pos:line="9" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="24">sizeof<argument_list pos:line="9" pos:column="30">(<argument><expr><operator pos:line="9" pos:column="31">*<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="32">db<pos:position pos:line="9" pos:column="34"/></name></expr></argument>)<pos:position pos:line="9" pos:column="35"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="37"/></decl_stmt>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">db<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">==<pos:position pos:line="10" pos:column="12"/></operator> <name pos:line="10" pos:column="13">NULL<pos:position pos:line="10" pos:column="17"/></name></expr>)<pos:position pos:line="10" pos:column="18"/></condition><then pos:line="10" pos:column="18"> <block pos:line="10" pos:column="19">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">ERROR<pos:position pos:line="11" pos:column="10"/></name><argument_list pos:line="11" pos:column="10">(<argument><expr><literal type="string" pos:line="11" pos:column="11">"curl_xml plugin: calloc failed."<pos:position pos:line="11" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="46"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">-<pos:position pos:line="12" pos:column="13"/></operator><literal type="number" pos:line="12" pos:column="13">1<pos:position pos:line="12" pos:column="14"/></literal></expr>;<pos:position pos:line="12" pos:column="15"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="15" pos:column="3">db<pos:position pos:line="15" pos:column="5"/></name><operator pos:line="15" pos:column="5">-&gt;<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="7">instance<pos:position pos:line="15" pos:column="15"/></name></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <call><name pos:line="15" pos:column="18">strdup<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">(<argument><expr><literal type="string" pos:line="15" pos:column="25">"default"<pos:position pos:line="15" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="36"/></expr_stmt>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name><name pos:line="16" pos:column="7">db<pos:position pos:line="16" pos:column="9"/></name><operator pos:line="16" pos:column="9">-&gt;<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="11">instance<pos:position pos:line="16" pos:column="19"/></name></name> <operator pos:line="16" pos:column="20">==<pos:position pos:line="16" pos:column="22"/></operator> <name pos:line="16" pos:column="23">NULL<pos:position pos:line="16" pos:column="27"/></name></expr>)<pos:position pos:line="16" pos:column="28"/></condition><then pos:line="16" pos:column="28"> <block pos:line="16" pos:column="29">{
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">ERROR<pos:position pos:line="17" pos:column="10"/></name><argument_list pos:line="17" pos:column="10">(<argument><expr><literal type="string" pos:line="17" pos:column="11">"curl_xml plugin: strdup failed."<pos:position pos:line="17" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">sfree<pos:position pos:line="18" pos:column="10"/></name><argument_list pos:line="18" pos:column="10">(<argument><expr><name pos:line="18" pos:column="11">db<pos:position pos:line="18" pos:column="13"/></name></expr></argument>)<pos:position pos:line="18" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="15"/></expr_stmt>
    <return pos:line="19" pos:column="5">return <expr><operator pos:line="19" pos:column="12">-<pos:position pos:line="19" pos:column="13"/></operator><literal type="number" pos:line="19" pos:column="13">1<pos:position pos:line="19" pos:column="14"/></literal></expr>;<pos:position pos:line="19" pos:column="15"/></return>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="22" pos:column="3">db<pos:position pos:line="22" pos:column="5"/></name><operator pos:line="22" pos:column="5">-&gt;<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="7">xpath_list<pos:position pos:line="22" pos:column="17"/></name></name> <operator pos:line="22" pos:column="18">=<pos:position pos:line="22" pos:column="19"/></operator> <call><name pos:line="22" pos:column="20">llist_create<pos:position pos:line="22" pos:column="32"/></name><argument_list pos:line="22" pos:column="32">()<pos:position pos:line="22" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="35"/></expr_stmt>
  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><name><name pos:line="23" pos:column="7">db<pos:position pos:line="23" pos:column="9"/></name><operator pos:line="23" pos:column="9">-&gt;<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="11">xpath_list<pos:position pos:line="23" pos:column="21"/></name></name> <operator pos:line="23" pos:column="22">==<pos:position pos:line="23" pos:column="24"/></operator> <name pos:line="23" pos:column="25">NULL<pos:position pos:line="23" pos:column="29"/></name></expr>)<pos:position pos:line="23" pos:column="30"/></condition><then pos:line="23" pos:column="30"> <block pos:line="23" pos:column="31">{
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">ERROR<pos:position pos:line="24" pos:column="10"/></name><argument_list pos:line="24" pos:column="10">(<argument><expr><literal type="string" pos:line="24" pos:column="11">"curl_xml plugin: list creation failed."<pos:position pos:line="24" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">sfree<pos:position pos:line="25" pos:column="10"/></name><argument_list pos:line="25" pos:column="10">(<argument><expr><name><name pos:line="25" pos:column="11">db<pos:position pos:line="25" pos:column="13"/></name><operator pos:line="25" pos:column="13">-&gt;<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="15">instance<pos:position pos:line="25" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">sfree<pos:position pos:line="26" pos:column="10"/></name><argument_list pos:line="26" pos:column="10">(<argument><expr><name pos:line="26" pos:column="11">db<pos:position pos:line="26" pos:column="13"/></name></expr></argument>)<pos:position pos:line="26" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="15"/></expr_stmt>
    <return pos:line="27" pos:column="5">return <expr><operator pos:line="27" pos:column="12">-<pos:position pos:line="27" pos:column="13"/></operator><literal type="number" pos:line="27" pos:column="13">1<pos:position pos:line="27" pos:column="14"/></literal></expr>;<pos:position pos:line="27" pos:column="15"/></return>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="30" pos:column="3">db<pos:position pos:line="30" pos:column="5"/></name><operator pos:line="30" pos:column="5">-&gt;<pos:position pos:line="30" pos:column="10"/></operator><name pos:line="30" pos:column="7">timeout<pos:position pos:line="30" pos:column="14"/></name></name> <operator pos:line="30" pos:column="15">=<pos:position pos:line="30" pos:column="16"/></operator> <operator pos:line="30" pos:column="17">-<pos:position pos:line="30" pos:column="18"/></operator><literal type="number" pos:line="30" pos:column="18">1<pos:position pos:line="30" pos:column="19"/></literal></expr>;<pos:position pos:line="30" pos:column="20"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="32" pos:column="3">int<pos:position pos:line="32" pos:column="6"/></name></type> <name pos:line="32" pos:column="7">status<pos:position pos:line="32" pos:column="13"/></name> <init pos:line="32" pos:column="14">= <expr><call><name pos:line="32" pos:column="16">cf_util_get_string<pos:position pos:line="32" pos:column="34"/></name><argument_list pos:line="32" pos:column="34">(<argument><expr><name pos:line="32" pos:column="35">ci<pos:position pos:line="32" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="39">&amp;<pos:position pos:line="32" pos:column="44"/></operator><name><name pos:line="32" pos:column="40">db<pos:position pos:line="32" pos:column="42"/></name><operator pos:line="32" pos:column="42">-&gt;<pos:position pos:line="32" pos:column="47"/></operator><name pos:line="32" pos:column="44">url<pos:position pos:line="32" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="32" pos:column="49"/></decl_stmt>
  <if pos:line="33" pos:column="3">if <condition pos:line="33" pos:column="6">(<expr><name pos:line="33" pos:column="7">status<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">!=<pos:position pos:line="33" pos:column="16"/></operator> <literal type="number" pos:line="33" pos:column="17">0<pos:position pos:line="33" pos:column="18"/></literal></expr>)<pos:position pos:line="33" pos:column="19"/></condition><then pos:line="33" pos:column="19"> <block pos:line="33" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">llist_destroy<pos:position pos:line="34" pos:column="18"/></name><argument_list pos:line="34" pos:column="18">(<argument><expr><name><name pos:line="34" pos:column="19">db<pos:position pos:line="34" pos:column="21"/></name><operator pos:line="34" pos:column="21">-&gt;<pos:position pos:line="34" pos:column="26"/></operator><name pos:line="34" pos:column="23">xpath_list<pos:position pos:line="34" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">sfree<pos:position pos:line="35" pos:column="10"/></name><argument_list pos:line="35" pos:column="10">(<argument><expr><name><name pos:line="35" pos:column="11">db<pos:position pos:line="35" pos:column="13"/></name><operator pos:line="35" pos:column="13">-&gt;<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="15">instance<pos:position pos:line="35" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">sfree<pos:position pos:line="36" pos:column="10"/></name><argument_list pos:line="36" pos:column="10">(<argument><expr><name pos:line="36" pos:column="11">db<pos:position pos:line="36" pos:column="13"/></name></expr></argument>)<pos:position pos:line="36" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="15"/></expr_stmt>
    <return pos:line="37" pos:column="5">return <expr><name pos:line="37" pos:column="12">status<pos:position pos:line="37" pos:column="18"/></name></expr>;<pos:position pos:line="37" pos:column="19"/></return>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="40" pos:column="3">/* Fill the `cx_t' structure.. */</comment>
  <for pos:line="41" pos:column="3">for <control pos:line="41" pos:column="7">(<init><decl><type><name pos:line="41" pos:column="8">int<pos:position pos:line="41" pos:column="11"/></name></type> <name pos:line="41" pos:column="12">i<pos:position pos:line="41" pos:column="13"/></name> <init pos:line="41" pos:column="14">= <expr><literal type="number" pos:line="41" pos:column="16">0<pos:position pos:line="41" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="41" pos:column="18"/></init> <condition><expr><name pos:line="41" pos:column="19">i<pos:position pos:line="41" pos:column="20"/></name> <operator pos:line="41" pos:column="21">&lt;<pos:position pos:line="41" pos:column="25"/></operator> <name><name pos:line="41" pos:column="23">ci<pos:position pos:line="41" pos:column="25"/></name><operator pos:line="41" pos:column="25">-&gt;<pos:position pos:line="41" pos:column="30"/></operator><name pos:line="41" pos:column="27">children_num<pos:position pos:line="41" pos:column="39"/></name></name></expr>;<pos:position pos:line="41" pos:column="40"/></condition> <incr><expr><name pos:line="41" pos:column="41">i<pos:position pos:line="41" pos:column="42"/></name><operator pos:line="41" pos:column="42">++<pos:position pos:line="41" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="41" pos:column="45"/></control> <block pos:line="41" pos:column="46">{
    <decl_stmt><decl><type><name pos:line="42" pos:column="5">oconfig_item_t<pos:position pos:line="42" pos:column="19"/></name> <modifier pos:line="42" pos:column="20">*<pos:position pos:line="42" pos:column="21"/></modifier></type><name pos:line="42" pos:column="21">child<pos:position pos:line="42" pos:column="26"/></name> <init pos:line="42" pos:column="27">= <expr><name><name pos:line="42" pos:column="29">ci<pos:position pos:line="42" pos:column="31"/></name><operator pos:line="42" pos:column="31">-&gt;<pos:position pos:line="42" pos:column="36"/></operator><name pos:line="42" pos:column="33">children<pos:position pos:line="42" pos:column="41"/></name></name> <operator pos:line="42" pos:column="42">+<pos:position pos:line="42" pos:column="43"/></operator> <name pos:line="42" pos:column="44">i<pos:position pos:line="42" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="42" pos:column="46"/></decl_stmt>

    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><call><name pos:line="44" pos:column="9">strcasecmp<pos:position pos:line="44" pos:column="19"/></name><argument_list pos:line="44" pos:column="19">(<argument><expr><literal type="string" pos:line="44" pos:column="20">"Instance"<pos:position pos:line="44" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="32">child<pos:position pos:line="44" pos:column="37"/></name><operator pos:line="44" pos:column="37">-&gt;<pos:position pos:line="44" pos:column="42"/></operator><name pos:line="44" pos:column="39">key<pos:position pos:line="44" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="43"/></argument_list></call> <operator pos:line="44" pos:column="44">==<pos:position pos:line="44" pos:column="46"/></operator> <literal type="number" pos:line="44" pos:column="47">0<pos:position pos:line="44" pos:column="48"/></literal></expr>)<pos:position pos:line="44" pos:column="49"/></condition><then pos:line="44" pos:column="49">
      <block type="pseudo"><expr_stmt><expr><name pos:line="45" pos:column="7">status<pos:position pos:line="45" pos:column="13"/></name> <operator pos:line="45" pos:column="14">=<pos:position pos:line="45" pos:column="15"/></operator> <call><name pos:line="45" pos:column="16">cf_util_get_string<pos:position pos:line="45" pos:column="34"/></name><argument_list pos:line="45" pos:column="34">(<argument><expr><name pos:line="45" pos:column="35">child<pos:position pos:line="45" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="42">&amp;<pos:position pos:line="45" pos:column="47"/></operator><name><name pos:line="45" pos:column="43">db<pos:position pos:line="45" pos:column="45"/></name><operator pos:line="45" pos:column="45">-&gt;<pos:position pos:line="45" pos:column="50"/></operator><name pos:line="45" pos:column="47">instance<pos:position pos:line="45" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="57"/></expr_stmt></block></then>
    <elseif pos:line="46" pos:column="5">else <if pos:line="46" pos:column="10">if <condition pos:line="46" pos:column="13">(<expr><call><name pos:line="46" pos:column="14">strcasecmp<pos:position pos:line="46" pos:column="24"/></name><argument_list pos:line="46" pos:column="24">(<argument><expr><literal type="string" pos:line="46" pos:column="25">"Plugin"<pos:position pos:line="46" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="35">child<pos:position pos:line="46" pos:column="40"/></name><operator pos:line="46" pos:column="40">-&gt;<pos:position pos:line="46" pos:column="45"/></operator><name pos:line="46" pos:column="42">key<pos:position pos:line="46" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="46"/></argument_list></call> <operator pos:line="46" pos:column="47">==<pos:position pos:line="46" pos:column="49"/></operator> <literal type="number" pos:line="46" pos:column="50">0<pos:position pos:line="46" pos:column="51"/></literal></expr>)<pos:position pos:line="46" pos:column="52"/></condition><then pos:line="46" pos:column="52">
      <block type="pseudo"><expr_stmt><expr><name pos:line="47" pos:column="7">status<pos:position pos:line="47" pos:column="13"/></name> <operator pos:line="47" pos:column="14">=<pos:position pos:line="47" pos:column="15"/></operator> <call><name pos:line="47" pos:column="16">cf_util_get_string<pos:position pos:line="47" pos:column="34"/></name><argument_list pos:line="47" pos:column="34">(<argument><expr><name pos:line="47" pos:column="35">child<pos:position pos:line="47" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="42">&amp;<pos:position pos:line="47" pos:column="47"/></operator><name><name pos:line="47" pos:column="43">db<pos:position pos:line="47" pos:column="45"/></name><operator pos:line="47" pos:column="45">-&gt;<pos:position pos:line="47" pos:column="50"/></operator><name pos:line="47" pos:column="47">plugin_name<pos:position pos:line="47" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="60"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="48" pos:column="5">else <if pos:line="48" pos:column="10">if <condition pos:line="48" pos:column="13">(<expr><call><name pos:line="48" pos:column="14">strcasecmp<pos:position pos:line="48" pos:column="24"/></name><argument_list pos:line="48" pos:column="24">(<argument><expr><literal type="string" pos:line="48" pos:column="25">"Host"<pos:position pos:line="48" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="33">child<pos:position pos:line="48" pos:column="38"/></name><operator pos:line="48" pos:column="38">-&gt;<pos:position pos:line="48" pos:column="43"/></operator><name pos:line="48" pos:column="40">key<pos:position pos:line="48" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="44"/></argument_list></call> <operator pos:line="48" pos:column="45">==<pos:position pos:line="48" pos:column="47"/></operator> <literal type="number" pos:line="48" pos:column="48">0<pos:position pos:line="48" pos:column="49"/></literal></expr>)<pos:position pos:line="48" pos:column="50"/></condition><then pos:line="48" pos:column="50">
      <block type="pseudo"><expr_stmt><expr><name pos:line="49" pos:column="7">status<pos:position pos:line="49" pos:column="13"/></name> <operator pos:line="49" pos:column="14">=<pos:position pos:line="49" pos:column="15"/></operator> <call><name pos:line="49" pos:column="16">cf_util_get_string<pos:position pos:line="49" pos:column="34"/></name><argument_list pos:line="49" pos:column="34">(<argument><expr><name pos:line="49" pos:column="35">child<pos:position pos:line="49" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="42">&amp;<pos:position pos:line="49" pos:column="47"/></operator><name><name pos:line="49" pos:column="43">db<pos:position pos:line="49" pos:column="45"/></name><operator pos:line="49" pos:column="45">-&gt;<pos:position pos:line="49" pos:column="50"/></operator><name pos:line="49" pos:column="47">host<pos:position pos:line="49" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="53"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="50" pos:column="5">else <if pos:line="50" pos:column="10">if <condition pos:line="50" pos:column="13">(<expr><call><name pos:line="50" pos:column="14">strcasecmp<pos:position pos:line="50" pos:column="24"/></name><argument_list pos:line="50" pos:column="24">(<argument><expr><literal type="string" pos:line="50" pos:column="25">"User"<pos:position pos:line="50" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="33">child<pos:position pos:line="50" pos:column="38"/></name><operator pos:line="50" pos:column="38">-&gt;<pos:position pos:line="50" pos:column="43"/></operator><name pos:line="50" pos:column="40">key<pos:position pos:line="50" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="44"/></argument_list></call> <operator pos:line="50" pos:column="45">==<pos:position pos:line="50" pos:column="47"/></operator> <literal type="number" pos:line="50" pos:column="48">0<pos:position pos:line="50" pos:column="49"/></literal></expr>)<pos:position pos:line="50" pos:column="50"/></condition><then pos:line="50" pos:column="50">
      <block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="7">status<pos:position pos:line="51" pos:column="13"/></name> <operator pos:line="51" pos:column="14">=<pos:position pos:line="51" pos:column="15"/></operator> <call><name pos:line="51" pos:column="16">cf_util_get_string<pos:position pos:line="51" pos:column="34"/></name><argument_list pos:line="51" pos:column="34">(<argument><expr><name pos:line="51" pos:column="35">child<pos:position pos:line="51" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="42">&amp;<pos:position pos:line="51" pos:column="47"/></operator><name><name pos:line="51" pos:column="43">db<pos:position pos:line="51" pos:column="45"/></name><operator pos:line="51" pos:column="45">-&gt;<pos:position pos:line="51" pos:column="50"/></operator><name pos:line="51" pos:column="47">user<pos:position pos:line="51" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="53"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="52" pos:column="5">else <if pos:line="52" pos:column="10">if <condition pos:line="52" pos:column="13">(<expr><call><name pos:line="52" pos:column="14">strcasecmp<pos:position pos:line="52" pos:column="24"/></name><argument_list pos:line="52" pos:column="24">(<argument><expr><literal type="string" pos:line="52" pos:column="25">"Password"<pos:position pos:line="52" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="37">child<pos:position pos:line="52" pos:column="42"/></name><operator pos:line="52" pos:column="42">-&gt;<pos:position pos:line="52" pos:column="47"/></operator><name pos:line="52" pos:column="44">key<pos:position pos:line="52" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="48"/></argument_list></call> <operator pos:line="52" pos:column="49">==<pos:position pos:line="52" pos:column="51"/></operator> <literal type="number" pos:line="52" pos:column="52">0<pos:position pos:line="52" pos:column="53"/></literal></expr>)<pos:position pos:line="52" pos:column="54"/></condition><then pos:line="52" pos:column="54">
      <block type="pseudo"><expr_stmt><expr><name pos:line="53" pos:column="7">status<pos:position pos:line="53" pos:column="13"/></name> <operator pos:line="53" pos:column="14">=<pos:position pos:line="53" pos:column="15"/></operator> <call><name pos:line="53" pos:column="16">cf_util_get_string<pos:position pos:line="53" pos:column="34"/></name><argument_list pos:line="53" pos:column="34">(<argument><expr><name pos:line="53" pos:column="35">child<pos:position pos:line="53" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="42">&amp;<pos:position pos:line="53" pos:column="47"/></operator><name><name pos:line="53" pos:column="43">db<pos:position pos:line="53" pos:column="45"/></name><operator pos:line="53" pos:column="45">-&gt;<pos:position pos:line="53" pos:column="50"/></operator><name pos:line="53" pos:column="47">pass<pos:position pos:line="53" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="53"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="54" pos:column="5">else <if pos:line="54" pos:column="10">if <condition pos:line="54" pos:column="13">(<expr><call><name pos:line="54" pos:column="14">strcasecmp<pos:position pos:line="54" pos:column="24"/></name><argument_list pos:line="54" pos:column="24">(<argument><expr><literal type="string" pos:line="54" pos:column="25">"Digest"<pos:position pos:line="54" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="35">child<pos:position pos:line="54" pos:column="40"/></name><operator pos:line="54" pos:column="40">-&gt;<pos:position pos:line="54" pos:column="45"/></operator><name pos:line="54" pos:column="42">key<pos:position pos:line="54" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="46"/></argument_list></call> <operator pos:line="54" pos:column="47">==<pos:position pos:line="54" pos:column="49"/></operator> <literal type="number" pos:line="54" pos:column="50">0<pos:position pos:line="54" pos:column="51"/></literal></expr>)<pos:position pos:line="54" pos:column="52"/></condition><then pos:line="54" pos:column="52">
      <block type="pseudo"><expr_stmt><expr><name pos:line="55" pos:column="7">status<pos:position pos:line="55" pos:column="13"/></name> <operator pos:line="55" pos:column="14">=<pos:position pos:line="55" pos:column="15"/></operator> <call><name pos:line="55" pos:column="16">cf_util_get_boolean<pos:position pos:line="55" pos:column="35"/></name><argument_list pos:line="55" pos:column="35">(<argument><expr><name pos:line="55" pos:column="36">child<pos:position pos:line="55" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="43">&amp;<pos:position pos:line="55" pos:column="48"/></operator><name><name pos:line="55" pos:column="44">db<pos:position pos:line="55" pos:column="46"/></name><operator pos:line="55" pos:column="46">-&gt;<pos:position pos:line="55" pos:column="51"/></operator><name pos:line="55" pos:column="48">digest<pos:position pos:line="55" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="56"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="56" pos:column="5">else <if pos:line="56" pos:column="10">if <condition pos:line="56" pos:column="13">(<expr><call><name pos:line="56" pos:column="14">strcasecmp<pos:position pos:line="56" pos:column="24"/></name><argument_list pos:line="56" pos:column="24">(<argument><expr><literal type="string" pos:line="56" pos:column="25">"VerifyPeer"<pos:position pos:line="56" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="39">child<pos:position pos:line="56" pos:column="44"/></name><operator pos:line="56" pos:column="44">-&gt;<pos:position pos:line="56" pos:column="49"/></operator><name pos:line="56" pos:column="46">key<pos:position pos:line="56" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="50"/></argument_list></call> <operator pos:line="56" pos:column="51">==<pos:position pos:line="56" pos:column="53"/></operator> <literal type="number" pos:line="56" pos:column="54">0<pos:position pos:line="56" pos:column="55"/></literal></expr>)<pos:position pos:line="56" pos:column="56"/></condition><then pos:line="56" pos:column="56">
      <block type="pseudo"><expr_stmt><expr><name pos:line="57" pos:column="7">status<pos:position pos:line="57" pos:column="13"/></name> <operator pos:line="57" pos:column="14">=<pos:position pos:line="57" pos:column="15"/></operator> <call><name pos:line="57" pos:column="16">cf_util_get_boolean<pos:position pos:line="57" pos:column="35"/></name><argument_list pos:line="57" pos:column="35">(<argument><expr><name pos:line="57" pos:column="36">child<pos:position pos:line="57" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="43">&amp;<pos:position pos:line="57" pos:column="48"/></operator><name><name pos:line="57" pos:column="44">db<pos:position pos:line="57" pos:column="46"/></name><operator pos:line="57" pos:column="46">-&gt;<pos:position pos:line="57" pos:column="51"/></operator><name pos:line="57" pos:column="48">verify_peer<pos:position pos:line="57" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="61"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="58" pos:column="5">else <if pos:line="58" pos:column="10">if <condition pos:line="58" pos:column="13">(<expr><call><name pos:line="58" pos:column="14">strcasecmp<pos:position pos:line="58" pos:column="24"/></name><argument_list pos:line="58" pos:column="24">(<argument><expr><literal type="string" pos:line="58" pos:column="25">"VerifyHost"<pos:position pos:line="58" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="39">child<pos:position pos:line="58" pos:column="44"/></name><operator pos:line="58" pos:column="44">-&gt;<pos:position pos:line="58" pos:column="49"/></operator><name pos:line="58" pos:column="46">key<pos:position pos:line="58" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="50"/></argument_list></call> <operator pos:line="58" pos:column="51">==<pos:position pos:line="58" pos:column="53"/></operator> <literal type="number" pos:line="58" pos:column="54">0<pos:position pos:line="58" pos:column="55"/></literal></expr>)<pos:position pos:line="58" pos:column="56"/></condition><then pos:line="58" pos:column="56">
      <block type="pseudo"><expr_stmt><expr><name pos:line="59" pos:column="7">status<pos:position pos:line="59" pos:column="13"/></name> <operator pos:line="59" pos:column="14">=<pos:position pos:line="59" pos:column="15"/></operator> <call><name pos:line="59" pos:column="16">cf_util_get_boolean<pos:position pos:line="59" pos:column="35"/></name><argument_list pos:line="59" pos:column="35">(<argument><expr><name pos:line="59" pos:column="36">child<pos:position pos:line="59" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="43">&amp;<pos:position pos:line="59" pos:column="48"/></operator><name><name pos:line="59" pos:column="44">db<pos:position pos:line="59" pos:column="46"/></name><operator pos:line="59" pos:column="46">-&gt;<pos:position pos:line="59" pos:column="51"/></operator><name pos:line="59" pos:column="48">verify_host<pos:position pos:line="59" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="61"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="60" pos:column="5">else <if pos:line="60" pos:column="10">if <condition pos:line="60" pos:column="13">(<expr><call><name pos:line="60" pos:column="14">strcasecmp<pos:position pos:line="60" pos:column="24"/></name><argument_list pos:line="60" pos:column="24">(<argument><expr><literal type="string" pos:line="60" pos:column="25">"CACert"<pos:position pos:line="60" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="35">child<pos:position pos:line="60" pos:column="40"/></name><operator pos:line="60" pos:column="40">-&gt;<pos:position pos:line="60" pos:column="45"/></operator><name pos:line="60" pos:column="42">key<pos:position pos:line="60" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="46"/></argument_list></call> <operator pos:line="60" pos:column="47">==<pos:position pos:line="60" pos:column="49"/></operator> <literal type="number" pos:line="60" pos:column="50">0<pos:position pos:line="60" pos:column="51"/></literal></expr>)<pos:position pos:line="60" pos:column="52"/></condition><then pos:line="60" pos:column="52">
      <block type="pseudo"><expr_stmt><expr><name pos:line="61" pos:column="7">status<pos:position pos:line="61" pos:column="13"/></name> <operator pos:line="61" pos:column="14">=<pos:position pos:line="61" pos:column="15"/></operator> <call><name pos:line="61" pos:column="16">cf_util_get_string<pos:position pos:line="61" pos:column="34"/></name><argument_list pos:line="61" pos:column="34">(<argument><expr><name pos:line="61" pos:column="35">child<pos:position pos:line="61" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="42">&amp;<pos:position pos:line="61" pos:column="47"/></operator><name><name pos:line="61" pos:column="43">db<pos:position pos:line="61" pos:column="45"/></name><operator pos:line="61" pos:column="45">-&gt;<pos:position pos:line="61" pos:column="50"/></operator><name pos:line="61" pos:column="47">cacert<pos:position pos:line="61" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="55"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="62" pos:column="5">else <if pos:line="62" pos:column="10">if <condition pos:line="62" pos:column="13">(<expr><call><name pos:line="62" pos:column="14">strcasecmp<pos:position pos:line="62" pos:column="24"/></name><argument_list pos:line="62" pos:column="24">(<argument><expr><literal type="string" pos:line="62" pos:column="25">"xpath"<pos:position pos:line="62" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="34">child<pos:position pos:line="62" pos:column="39"/></name><operator pos:line="62" pos:column="39">-&gt;<pos:position pos:line="62" pos:column="44"/></operator><name pos:line="62" pos:column="41">key<pos:position pos:line="62" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="45"/></argument_list></call> <operator pos:line="62" pos:column="46">==<pos:position pos:line="62" pos:column="48"/></operator> <literal type="number" pos:line="62" pos:column="49">0<pos:position pos:line="62" pos:column="50"/></literal></expr>)<pos:position pos:line="62" pos:column="51"/></condition><then pos:line="62" pos:column="51">
      <block type="pseudo"><expr_stmt><expr><name pos:line="63" pos:column="7">status<pos:position pos:line="63" pos:column="13"/></name> <operator pos:line="63" pos:column="14">=<pos:position pos:line="63" pos:column="15"/></operator> <call><name pos:line="63" pos:column="16">cx_config_add_xpath<pos:position pos:line="63" pos:column="35"/></name><argument_list pos:line="63" pos:column="35">(<argument><expr><name pos:line="63" pos:column="36">db<pos:position pos:line="63" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="40">child<pos:position pos:line="63" pos:column="45"/></name></expr></argument>)<pos:position pos:line="63" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="47"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="64" pos:column="5">else <if pos:line="64" pos:column="10">if <condition pos:line="64" pos:column="13">(<expr><call><name pos:line="64" pos:column="14">strcasecmp<pos:position pos:line="64" pos:column="24"/></name><argument_list pos:line="64" pos:column="24">(<argument><expr><literal type="string" pos:line="64" pos:column="25">"Header"<pos:position pos:line="64" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="35">child<pos:position pos:line="64" pos:column="40"/></name><operator pos:line="64" pos:column="40">-&gt;<pos:position pos:line="64" pos:column="45"/></operator><name pos:line="64" pos:column="42">key<pos:position pos:line="64" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="46"/></argument_list></call> <operator pos:line="64" pos:column="47">==<pos:position pos:line="64" pos:column="49"/></operator> <literal type="number" pos:line="64" pos:column="50">0<pos:position pos:line="64" pos:column="51"/></literal></expr>)<pos:position pos:line="64" pos:column="52"/></condition><then pos:line="64" pos:column="52">
      <block type="pseudo"><expr_stmt><expr><name pos:line="65" pos:column="7">status<pos:position pos:line="65" pos:column="13"/></name> <operator pos:line="65" pos:column="14">=<pos:position pos:line="65" pos:column="15"/></operator> <call><name pos:line="65" pos:column="16">cx_config_append_string<pos:position pos:line="65" pos:column="39"/></name><argument_list pos:line="65" pos:column="39">(<argument><expr><literal type="string" pos:line="65" pos:column="40">"Header"<pos:position pos:line="65" pos:column="48"/></literal></expr></argument>, <argument><expr><operator pos:line="65" pos:column="50">&amp;<pos:position pos:line="65" pos:column="55"/></operator><name><name pos:line="65" pos:column="51">db<pos:position pos:line="65" pos:column="53"/></name><operator pos:line="65" pos:column="53">-&gt;<pos:position pos:line="65" pos:column="58"/></operator><name pos:line="65" pos:column="55">headers<pos:position pos:line="65" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="64">child<pos:position pos:line="65" pos:column="69"/></name></expr></argument>)<pos:position pos:line="65" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="71"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="66" pos:column="5">else <if pos:line="66" pos:column="10">if <condition pos:line="66" pos:column="13">(<expr><call><name pos:line="66" pos:column="14">strcasecmp<pos:position pos:line="66" pos:column="24"/></name><argument_list pos:line="66" pos:column="24">(<argument><expr><literal type="string" pos:line="66" pos:column="25">"Post"<pos:position pos:line="66" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="33">child<pos:position pos:line="66" pos:column="38"/></name><operator pos:line="66" pos:column="38">-&gt;<pos:position pos:line="66" pos:column="43"/></operator><name pos:line="66" pos:column="40">key<pos:position pos:line="66" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="44"/></argument_list></call> <operator pos:line="66" pos:column="45">==<pos:position pos:line="66" pos:column="47"/></operator> <literal type="number" pos:line="66" pos:column="48">0<pos:position pos:line="66" pos:column="49"/></literal></expr>)<pos:position pos:line="66" pos:column="50"/></condition><then pos:line="66" pos:column="50">
      <block type="pseudo"><expr_stmt><expr><name pos:line="67" pos:column="7">status<pos:position pos:line="67" pos:column="13"/></name> <operator pos:line="67" pos:column="14">=<pos:position pos:line="67" pos:column="15"/></operator> <call><name pos:line="67" pos:column="16">cf_util_get_string<pos:position pos:line="67" pos:column="34"/></name><argument_list pos:line="67" pos:column="34">(<argument><expr><name pos:line="67" pos:column="35">child<pos:position pos:line="67" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="67" pos:column="42">&amp;<pos:position pos:line="67" pos:column="47"/></operator><name><name pos:line="67" pos:column="43">db<pos:position pos:line="67" pos:column="45"/></name><operator pos:line="67" pos:column="45">-&gt;<pos:position pos:line="67" pos:column="50"/></operator><name pos:line="67" pos:column="47">post_body<pos:position pos:line="67" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="58"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="68" pos:column="5">else <if pos:line="68" pos:column="10">if <condition pos:line="68" pos:column="13">(<expr><call><name pos:line="68" pos:column="14">strcasecmp<pos:position pos:line="68" pos:column="24"/></name><argument_list pos:line="68" pos:column="24">(<argument><expr><literal type="string" pos:line="68" pos:column="25">"Namespace"<pos:position pos:line="68" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="38">child<pos:position pos:line="68" pos:column="43"/></name><operator pos:line="68" pos:column="43">-&gt;<pos:position pos:line="68" pos:column="48"/></operator><name pos:line="68" pos:column="45">key<pos:position pos:line="68" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="49"/></argument_list></call> <operator pos:line="68" pos:column="50">==<pos:position pos:line="68" pos:column="52"/></operator> <literal type="number" pos:line="68" pos:column="53">0<pos:position pos:line="68" pos:column="54"/></literal></expr>)<pos:position pos:line="68" pos:column="55"/></condition><then pos:line="68" pos:column="55">
      <block type="pseudo"><expr_stmt><expr><name pos:line="69" pos:column="7">status<pos:position pos:line="69" pos:column="13"/></name> <operator pos:line="69" pos:column="14">=<pos:position pos:line="69" pos:column="15"/></operator> <call><name pos:line="69" pos:column="16">cx_config_add_namespace<pos:position pos:line="69" pos:column="39"/></name><argument_list pos:line="69" pos:column="39">(<argument><expr><name pos:line="69" pos:column="40">db<pos:position pos:line="69" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="44">child<pos:position pos:line="69" pos:column="49"/></name></expr></argument>)<pos:position pos:line="69" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="51"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="70" pos:column="5">else <if pos:line="70" pos:column="10">if <condition pos:line="70" pos:column="13">(<expr><call><name pos:line="70" pos:column="14">strcasecmp<pos:position pos:line="70" pos:column="24"/></name><argument_list pos:line="70" pos:column="24">(<argument><expr><literal type="string" pos:line="70" pos:column="25">"Timeout"<pos:position pos:line="70" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="36">child<pos:position pos:line="70" pos:column="41"/></name><operator pos:line="70" pos:column="41">-&gt;<pos:position pos:line="70" pos:column="46"/></operator><name pos:line="70" pos:column="43">key<pos:position pos:line="70" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="47"/></argument_list></call> <operator pos:line="70" pos:column="48">==<pos:position pos:line="70" pos:column="50"/></operator> <literal type="number" pos:line="70" pos:column="51">0<pos:position pos:line="70" pos:column="52"/></literal></expr>)<pos:position pos:line="70" pos:column="53"/></condition><then pos:line="70" pos:column="53">
      <block type="pseudo"><expr_stmt><expr><name pos:line="71" pos:column="7">status<pos:position pos:line="71" pos:column="13"/></name> <operator pos:line="71" pos:column="14">=<pos:position pos:line="71" pos:column="15"/></operator> <call><name pos:line="71" pos:column="16">cf_util_get_int<pos:position pos:line="71" pos:column="31"/></name><argument_list pos:line="71" pos:column="31">(<argument><expr><name pos:line="71" pos:column="32">child<pos:position pos:line="71" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="71" pos:column="39">&amp;<pos:position pos:line="71" pos:column="44"/></operator><name><name pos:line="71" pos:column="40">db<pos:position pos:line="71" pos:column="42"/></name><operator pos:line="71" pos:column="42">-&gt;<pos:position pos:line="71" pos:column="47"/></operator><name pos:line="71" pos:column="44">timeout<pos:position pos:line="71" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="53"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="72" pos:column="5">else <if pos:line="72" pos:column="10">if <condition pos:line="72" pos:column="13">(<expr><call><name pos:line="72" pos:column="14">strcasecmp<pos:position pos:line="72" pos:column="24"/></name><argument_list pos:line="72" pos:column="24">(<argument><expr><literal type="string" pos:line="72" pos:column="25">"Statistics"<pos:position pos:line="72" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="39">child<pos:position pos:line="72" pos:column="44"/></name><operator pos:line="72" pos:column="44">-&gt;<pos:position pos:line="72" pos:column="49"/></operator><name pos:line="72" pos:column="46">key<pos:position pos:line="72" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="50"/></argument_list></call> <operator pos:line="72" pos:column="51">==<pos:position pos:line="72" pos:column="53"/></operator> <literal type="number" pos:line="72" pos:column="54">0<pos:position pos:line="72" pos:column="55"/></literal></expr>)<pos:position pos:line="72" pos:column="56"/></condition><then pos:line="72" pos:column="56"> <block pos:line="72" pos:column="57">{
      <expr_stmt><expr><name><name pos:line="73" pos:column="7">db<pos:position pos:line="73" pos:column="9"/></name><operator pos:line="73" pos:column="9">-&gt;<pos:position pos:line="73" pos:column="14"/></operator><name pos:line="73" pos:column="11">stats<pos:position pos:line="73" pos:column="16"/></name></name> <operator pos:line="73" pos:column="17">=<pos:position pos:line="73" pos:column="18"/></operator> <call><name pos:line="73" pos:column="19">curl_stats_from_config<pos:position pos:line="73" pos:column="41"/></name><argument_list pos:line="73" pos:column="41">(<argument><expr><name pos:line="73" pos:column="42">child<pos:position pos:line="73" pos:column="47"/></name></expr></argument>)<pos:position pos:line="73" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="49"/></expr_stmt>
      <if pos:line="74" pos:column="7">if <condition pos:line="74" pos:column="10">(<expr><name><name pos:line="74" pos:column="11">db<pos:position pos:line="74" pos:column="13"/></name><operator pos:line="74" pos:column="13">-&gt;<pos:position pos:line="74" pos:column="18"/></operator><name pos:line="74" pos:column="15">stats<pos:position pos:line="74" pos:column="20"/></name></name> <operator pos:line="74" pos:column="21">==<pos:position pos:line="74" pos:column="23"/></operator> <name pos:line="74" pos:column="24">NULL<pos:position pos:line="74" pos:column="28"/></name></expr>)<pos:position pos:line="74" pos:column="29"/></condition><then pos:line="74" pos:column="29">
        <block type="pseudo"><expr_stmt><expr><name pos:line="75" pos:column="9">status<pos:position pos:line="75" pos:column="15"/></name> <operator pos:line="75" pos:column="16">=<pos:position pos:line="75" pos:column="17"/></operator> <operator pos:line="75" pos:column="18">-<pos:position pos:line="75" pos:column="19"/></operator><literal type="number" pos:line="75" pos:column="19">1<pos:position pos:line="75" pos:column="20"/></literal></expr>;<pos:position pos:line="75" pos:column="21"/></expr_stmt></block></then></if>
    }<pos:position pos:line="76" pos:column="6"/></block></then></if></elseif> <else pos:line="76" pos:column="7">else <block pos:line="76" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="77" pos:column="7">WARNING<pos:position pos:line="77" pos:column="14"/></name><argument_list pos:line="77" pos:column="14">(<argument><expr><literal type="string" pos:line="77" pos:column="15">"curl_xml plugin: Option `%s' not allowed here."<pos:position pos:line="77" pos:column="63"/></literal></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="65">child<pos:position pos:line="77" pos:column="70"/></name><operator pos:line="77" pos:column="70">-&gt;<pos:position pos:line="77" pos:column="75"/></operator><name pos:line="77" pos:column="72">key<pos:position pos:line="77" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="77"/></expr_stmt>
      <expr_stmt><expr><name pos:line="78" pos:column="7">status<pos:position pos:line="78" pos:column="13"/></name> <operator pos:line="78" pos:column="14">=<pos:position pos:line="78" pos:column="15"/></operator> <operator pos:line="78" pos:column="16">-<pos:position pos:line="78" pos:column="17"/></operator><literal type="number" pos:line="78" pos:column="17">1<pos:position pos:line="78" pos:column="18"/></literal></expr>;<pos:position pos:line="78" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="79" pos:column="6"/></block></else></if>

    <if pos:line="81" pos:column="5">if <condition pos:line="81" pos:column="8">(<expr><name pos:line="81" pos:column="9">status<pos:position pos:line="81" pos:column="15"/></name> <operator pos:line="81" pos:column="16">!=<pos:position pos:line="81" pos:column="18"/></operator> <literal type="number" pos:line="81" pos:column="19">0<pos:position pos:line="81" pos:column="20"/></literal></expr>)<pos:position pos:line="81" pos:column="21"/></condition><then pos:line="81" pos:column="21">
      <block type="pseudo"><break pos:line="82" pos:column="7">break;<pos:position pos:line="82" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="83" pos:column="4"/></block></for>

  <if pos:line="85" pos:column="3">if <condition pos:line="85" pos:column="6">(<expr><name pos:line="85" pos:column="7">status<pos:position pos:line="85" pos:column="13"/></name> <operator pos:line="85" pos:column="14">!=<pos:position pos:line="85" pos:column="16"/></operator> <literal type="number" pos:line="85" pos:column="17">0<pos:position pos:line="85" pos:column="18"/></literal></expr>)<pos:position pos:line="85" pos:column="19"/></condition><then pos:line="85" pos:column="19"> <block pos:line="85" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="86" pos:column="5">cx_free<pos:position pos:line="86" pos:column="12"/></name><argument_list pos:line="86" pos:column="12">(<argument><expr><name pos:line="86" pos:column="13">db<pos:position pos:line="86" pos:column="15"/></name></expr></argument>)<pos:position pos:line="86" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="17"/></expr_stmt>
    <return pos:line="87" pos:column="5">return <expr><name pos:line="87" pos:column="12">status<pos:position pos:line="87" pos:column="18"/></name></expr>;<pos:position pos:line="87" pos:column="19"/></return>
  }<pos:position pos:line="88" pos:column="4"/></block></then></if>

  <if pos:line="90" pos:column="3">if <condition pos:line="90" pos:column="6">(<expr><call><name pos:line="90" pos:column="7">llist_size<pos:position pos:line="90" pos:column="17"/></name><argument_list pos:line="90" pos:column="17">(<argument><expr><name><name pos:line="90" pos:column="18">db<pos:position pos:line="90" pos:column="20"/></name><operator pos:line="90" pos:column="20">-&gt;<pos:position pos:line="90" pos:column="25"/></operator><name pos:line="90" pos:column="22">xpath_list<pos:position pos:line="90" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="33"/></argument_list></call> <operator pos:line="90" pos:column="34">==<pos:position pos:line="90" pos:column="36"/></operator> <literal type="number" pos:line="90" pos:column="37">0<pos:position pos:line="90" pos:column="38"/></literal></expr>)<pos:position pos:line="90" pos:column="39"/></condition><then pos:line="90" pos:column="39"> <block pos:line="90" pos:column="40">{
    <expr_stmt><expr><call><name pos:line="91" pos:column="5">WARNING<pos:position pos:line="91" pos:column="12"/></name><argument_list pos:line="91" pos:column="12">(<argument><expr><literal type="string" pos:line="91" pos:column="13">"curl_xml plugin: No `xpath' block within `URL' block `%s'."<pos:position pos:line="91" pos:column="73"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="92" pos:column="13">db<pos:position pos:line="92" pos:column="15"/></name><operator pos:line="92" pos:column="15">-&gt;<pos:position pos:line="92" pos:column="20"/></operator><name pos:line="92" pos:column="17">url<pos:position pos:line="92" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="92" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="93" pos:column="5">cx_free<pos:position pos:line="93" pos:column="12"/></name><argument_list pos:line="93" pos:column="12">(<argument><expr><name pos:line="93" pos:column="13">db<pos:position pos:line="93" pos:column="15"/></name></expr></argument>)<pos:position pos:line="93" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="17"/></expr_stmt>
    <return pos:line="94" pos:column="5">return <expr><operator pos:line="94" pos:column="12">-<pos:position pos:line="94" pos:column="13"/></operator><literal type="number" pos:line="94" pos:column="13">1<pos:position pos:line="94" pos:column="14"/></literal></expr>;<pos:position pos:line="94" pos:column="15"/></return>
  }<pos:position pos:line="95" pos:column="4"/></block></then></if>

  <if pos:line="97" pos:column="3">if <condition pos:line="97" pos:column="6">(<expr><call><name pos:line="97" pos:column="7">cx_init_curl<pos:position pos:line="97" pos:column="19"/></name><argument_list pos:line="97" pos:column="19">(<argument><expr><name pos:line="97" pos:column="20">db<pos:position pos:line="97" pos:column="22"/></name></expr></argument>)<pos:position pos:line="97" pos:column="23"/></argument_list></call> <operator pos:line="97" pos:column="24">!=<pos:position pos:line="97" pos:column="26"/></operator> <literal type="number" pos:line="97" pos:column="27">0<pos:position pos:line="97" pos:column="28"/></literal></expr>)<pos:position pos:line="97" pos:column="29"/></condition><then pos:line="97" pos:column="29"> <block pos:line="97" pos:column="30">{
    <expr_stmt><expr><call><name pos:line="98" pos:column="5">cx_free<pos:position pos:line="98" pos:column="12"/></name><argument_list pos:line="98" pos:column="12">(<argument><expr><name pos:line="98" pos:column="13">db<pos:position pos:line="98" pos:column="15"/></name></expr></argument>)<pos:position pos:line="98" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="17"/></expr_stmt>
    <return pos:line="99" pos:column="5">return <expr><operator pos:line="99" pos:column="12">-<pos:position pos:line="99" pos:column="13"/></operator><literal type="number" pos:line="99" pos:column="13">1<pos:position pos:line="99" pos:column="14"/></literal></expr>;<pos:position pos:line="99" pos:column="15"/></return>
  }<pos:position pos:line="100" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="102" pos:column="3">/* If all went well, register this database for reading */</comment>
  <expr_stmt><expr><call><name pos:line="103" pos:column="3">DEBUG<pos:position pos:line="103" pos:column="8"/></name><argument_list pos:line="103" pos:column="8">(<argument><expr><literal type="string" pos:line="103" pos:column="9">"curl_xml plugin: Registering new read callback: %s"<pos:position pos:line="103" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="103" pos:column="63">db<pos:position pos:line="103" pos:column="65"/></name><operator pos:line="103" pos:column="65">-&gt;<pos:position pos:line="103" pos:column="70"/></operator><name pos:line="103" pos:column="67">instance<pos:position pos:line="103" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="103" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="77"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="105" pos:column="3">char<pos:position pos:line="105" pos:column="7"/></name> <modifier pos:line="105" pos:column="8">*<pos:position pos:line="105" pos:column="9"/></modifier></type><name pos:line="105" pos:column="9">cb_name<pos:position pos:line="105" pos:column="16"/></name> <init pos:line="105" pos:column="17">= <expr><call><name pos:line="105" pos:column="19">ssnprintf_alloc<pos:position pos:line="105" pos:column="34"/></name><argument_list pos:line="105" pos:column="34">(<argument><expr><literal type="string" pos:line="105" pos:column="35">"curl_xml-%s-%s"<pos:position pos:line="105" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="105" pos:column="53">db<pos:position pos:line="105" pos:column="55"/></name><operator pos:line="105" pos:column="55">-&gt;<pos:position pos:line="105" pos:column="60"/></operator><name pos:line="105" pos:column="57">instance<pos:position pos:line="105" pos:column="65"/></name></name></expr></argument>, <argument><expr><name><name pos:line="105" pos:column="67">db<pos:position pos:line="105" pos:column="69"/></name><operator pos:line="105" pos:column="69">-&gt;<pos:position pos:line="105" pos:column="74"/></operator><name pos:line="105" pos:column="71">url<pos:position pos:line="105" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="105" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="105" pos:column="76"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="107" pos:column="3">plugin_register_complex_read<pos:position pos:line="107" pos:column="31"/></name><argument_list pos:line="107" pos:column="31">(<comment type="block" pos:line="107" pos:column="32">/* group = */</comment> <argument><expr><literal type="string" pos:line="107" pos:column="46">"curl_xml"<pos:position pos:line="107" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="107" pos:column="58">cb_name<pos:position pos:line="107" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="67">cx_read<pos:position pos:line="107" pos:column="74"/></name></expr></argument>,
                               <comment type="block" pos:line="108" pos:column="32">/* interval = */</comment> <argument><expr><literal type="number" pos:line="108" pos:column="49">0<pos:position pos:line="108" pos:column="50"/></literal></expr></argument>,
                               <argument><expr><operator pos:line="109" pos:column="32">&amp;<pos:position pos:line="109" pos:column="37"/></operator><operator pos:line="109" pos:column="33">(<pos:position pos:line="109" pos:column="34"/></operator><name pos:line="109" pos:column="34">user_data_t<pos:position pos:line="109" pos:column="45"/></name><operator pos:line="109" pos:column="45">)<pos:position pos:line="109" pos:column="46"/></operator><block pos:line="109" pos:column="46">{
                                   <expr><operator pos:line="110" pos:column="36">.<pos:position pos:line="110" pos:column="37"/></operator><name pos:line="110" pos:column="37">data<pos:position pos:line="110" pos:column="41"/></name> <operator pos:line="110" pos:column="42">=<pos:position pos:line="110" pos:column="43"/></operator> <name pos:line="110" pos:column="44">db<pos:position pos:line="110" pos:column="46"/></name></expr>, <expr><operator pos:line="110" pos:column="48">.<pos:position pos:line="110" pos:column="49"/></operator><name pos:line="110" pos:column="49">free_func<pos:position pos:line="110" pos:column="58"/></name> <operator pos:line="110" pos:column="59">=<pos:position pos:line="110" pos:column="60"/></operator> <name pos:line="110" pos:column="61">cx_free<pos:position pos:line="110" pos:column="68"/></name></expr>,
                               }<pos:position pos:line="111" pos:column="33"/></block></expr></argument>)<pos:position pos:line="111" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="112" pos:column="3">sfree<pos:position pos:line="112" pos:column="8"/></name><argument_list pos:line="112" pos:column="8">(<argument><expr><name pos:line="112" pos:column="9">cb_name<pos:position pos:line="112" pos:column="16"/></name></expr></argument>)<pos:position pos:line="112" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="18"/></expr_stmt>
  <return pos:line="113" pos:column="3">return <expr><literal type="number" pos:line="113" pos:column="10">0<pos:position pos:line="113" pos:column="11"/></literal></expr>;<pos:position pos:line="113" pos:column="12"/></return>
}<pos:position pos:line="114" pos:column="2"/></block></function></unit>

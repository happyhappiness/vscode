<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1069_collectd-4.6.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">plugin_write<pos:position pos:line="1" pos:column="17"/></name> <parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><specifier pos:line="1" pos:column="19">const<pos:position pos:line="1" pos:column="24"/></specifier> <name pos:line="1" pos:column="25">char<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">plugin<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="39">/* {{{ */</comment>
		<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">data_set_t<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">ds<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="39">const<pos:position pos:line="2" pos:column="44"/></specifier> <name pos:line="2" pos:column="45">value_list_t<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">vl<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <function_decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> (<modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier><name pos:line="4" pos:column="9">callback<pos:position pos:line="4" pos:column="17"/></name>) <parameter_list pos:line="4" pos:column="19">(<parameter><decl><type><specifier pos:line="4" pos:column="20">const<pos:position pos:line="4" pos:column="25"/></specifier> <name pos:line="4" pos:column="26">data_set_t<pos:position pos:line="4" pos:column="36"/></name> <modifier pos:line="4" pos:column="37">*<pos:position pos:line="4" pos:column="38"/></modifier></type><name pos:line="4" pos:column="38">ds<pos:position pos:line="4" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="4" pos:column="42">const<pos:position pos:line="4" pos:column="47"/></specifier> <name pos:line="4" pos:column="48">value_list_t<pos:position pos:line="4" pos:column="60"/></name> <modifier pos:line="4" pos:column="61">*<pos:position pos:line="4" pos:column="62"/></modifier></type><name pos:line="4" pos:column="62">vl<pos:position pos:line="4" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="65"/></parameter_list>;<pos:position pos:line="4" pos:column="66"/></function_decl>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">llentry_t<pos:position pos:line="5" pos:column="12"/></name> <modifier pos:line="5" pos:column="13">*<pos:position pos:line="5" pos:column="14"/></modifier></type><name pos:line="5" pos:column="14">le<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">status<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">vl<pos:position pos:line="8" pos:column="9"/></name> <operator pos:line="8" pos:column="10">==<pos:position pos:line="8" pos:column="12"/></operator> <name pos:line="8" pos:column="13">NULL<pos:position pos:line="8" pos:column="17"/></name></expr>)<pos:position pos:line="8" pos:column="18"/></condition><then pos:line="8" pos:column="18">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><operator pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></operator><name pos:line="9" pos:column="13">EINVAL<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">)<pos:position pos:line="9" pos:column="20"/></operator></expr>;<pos:position pos:line="9" pos:column="21"/></return></block></then></if>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">list_write<pos:position pos:line="11" pos:column="17"/></name> <operator pos:line="11" pos:column="18">==<pos:position pos:line="11" pos:column="20"/></operator> <name pos:line="11" pos:column="21">NULL<pos:position pos:line="11" pos:column="25"/></name></expr>)<pos:position pos:line="11" pos:column="26"/></condition><then pos:line="11" pos:column="26">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">(<pos:position pos:line="12" pos:column="13"/></operator><name pos:line="12" pos:column="13">ENOENT<pos:position pos:line="12" pos:column="19"/></name><operator pos:line="12" pos:column="19">)<pos:position pos:line="12" pos:column="20"/></operator></expr>;<pos:position pos:line="12" pos:column="21"/></return></block></then></if>

  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">ds<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">==<pos:position pos:line="14" pos:column="12"/></operator> <name pos:line="14" pos:column="13">NULL<pos:position pos:line="14" pos:column="17"/></name></expr>)<pos:position pos:line="14" pos:column="18"/></condition><then pos:line="14" pos:column="18">
  <block pos:line="15" pos:column="3">{
    <expr_stmt><expr><name pos:line="16" pos:column="5">ds<pos:position pos:line="16" pos:column="7"/></name> <operator pos:line="16" pos:column="8">=<pos:position pos:line="16" pos:column="9"/></operator> <call><name pos:line="16" pos:column="10">plugin_get_ds<pos:position pos:line="16" pos:column="23"/></name> <argument_list pos:line="16" pos:column="24">(<argument><expr><name><name pos:line="16" pos:column="25">vl<pos:position pos:line="16" pos:column="27"/></name><operator pos:line="16" pos:column="27">-&gt;<pos:position pos:line="16" pos:column="32"/></operator><name pos:line="16" pos:column="29">type<pos:position pos:line="16" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="35"/></expr_stmt>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">ds<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">==<pos:position pos:line="17" pos:column="14"/></operator> <name pos:line="17" pos:column="15">NULL<pos:position pos:line="17" pos:column="19"/></name></expr>)<pos:position pos:line="17" pos:column="20"/></condition><then pos:line="17" pos:column="20">
    <block pos:line="18" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="19" pos:column="7">ERROR<pos:position pos:line="19" pos:column="12"/></name> <argument_list pos:line="19" pos:column="13">(<argument><expr><literal type="string" pos:line="19" pos:column="14">"plugin_write: Unable to lookup type `%s'."<pos:position pos:line="19" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="59">vl<pos:position pos:line="19" pos:column="61"/></name><operator pos:line="19" pos:column="61">-&gt;<pos:position pos:line="19" pos:column="66"/></operator><name pos:line="19" pos:column="63">type<pos:position pos:line="19" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="69"/></expr_stmt>
      <return pos:line="20" pos:column="7">return <expr><operator pos:line="20" pos:column="14">(<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="15">ENOENT<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">)<pos:position pos:line="20" pos:column="22"/></operator></expr>;<pos:position pos:line="20" pos:column="23"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>

  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><name pos:line="24" pos:column="7">plugin<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">==<pos:position pos:line="24" pos:column="16"/></operator> <name pos:line="24" pos:column="17">NULL<pos:position pos:line="24" pos:column="21"/></name></expr>)<pos:position pos:line="24" pos:column="22"/></condition><then pos:line="24" pos:column="22">
  <block pos:line="25" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">int<pos:position pos:line="26" pos:column="8"/></name></type> <name pos:line="26" pos:column="9">success<pos:position pos:line="26" pos:column="16"/></name> <init pos:line="26" pos:column="17">= <expr><literal type="number" pos:line="26" pos:column="19">0<pos:position pos:line="26" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="26" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="27" pos:column="5">int<pos:position pos:line="27" pos:column="8"/></name></type> <name pos:line="27" pos:column="9">failure<pos:position pos:line="27" pos:column="16"/></name> <init pos:line="27" pos:column="17">= <expr><literal type="number" pos:line="27" pos:column="19">0<pos:position pos:line="27" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="27" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><name pos:line="29" pos:column="5">le<pos:position pos:line="29" pos:column="7"/></name> <operator pos:line="29" pos:column="8">=<pos:position pos:line="29" pos:column="9"/></operator> <call><name pos:line="29" pos:column="10">llist_head<pos:position pos:line="29" pos:column="20"/></name> <argument_list pos:line="29" pos:column="21">(<argument><expr><name pos:line="29" pos:column="22">list_write<pos:position pos:line="29" pos:column="32"/></name></expr></argument>)<pos:position pos:line="29" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="34"/></expr_stmt>
    <while pos:line="30" pos:column="5">while <condition pos:line="30" pos:column="11">(<expr><name pos:line="30" pos:column="12">le<pos:position pos:line="30" pos:column="14"/></name> <operator pos:line="30" pos:column="15">!=<pos:position pos:line="30" pos:column="17"/></operator> <name pos:line="30" pos:column="18">NULL<pos:position pos:line="30" pos:column="22"/></name></expr>)<pos:position pos:line="30" pos:column="23"/></condition>
    <block pos:line="31" pos:column="5">{
      <expr_stmt><expr><name pos:line="32" pos:column="7">callback<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">=<pos:position pos:line="32" pos:column="17"/></operator> <name><name pos:line="32" pos:column="18">le<pos:position pos:line="32" pos:column="20"/></name><operator pos:line="32" pos:column="20">-&gt;<pos:position pos:line="32" pos:column="25"/></operator><name pos:line="32" pos:column="22">value<pos:position pos:line="32" pos:column="27"/></name></name></expr>;<pos:position pos:line="32" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><name pos:line="33" pos:column="7">status<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">=<pos:position pos:line="33" pos:column="15"/></operator> <call pos:line="33" pos:column="16">(<modifier pos:line="33" pos:column="17">*<pos:position pos:line="33" pos:column="18"/></modifier><name pos:line="33" pos:column="18">callback<pos:position pos:line="33" pos:column="26"/></name>) <argument_list pos:line="33" pos:column="28">(<argument><expr><name pos:line="33" pos:column="29">ds<pos:position pos:line="33" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="33">vl<pos:position pos:line="33" pos:column="35"/></name></expr></argument>)<pos:position pos:line="33" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="37"/></expr_stmt>
      <if pos:line="34" pos:column="7">if <condition pos:line="34" pos:column="10">(<expr><name pos:line="34" pos:column="11">status<pos:position pos:line="34" pos:column="17"/></name> <operator pos:line="34" pos:column="18">!=<pos:position pos:line="34" pos:column="20"/></operator> <literal type="number" pos:line="34" pos:column="21">0<pos:position pos:line="34" pos:column="22"/></literal></expr>)<pos:position pos:line="34" pos:column="23"/></condition><then pos:line="34" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="9">failure<pos:position pos:line="35" pos:column="16"/></name><operator pos:line="35" pos:column="16">++<pos:position pos:line="35" pos:column="18"/></operator></expr>;<pos:position pos:line="35" pos:column="19"/></expr_stmt></block></then>
      <else pos:line="36" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="9">success<pos:position pos:line="37" pos:column="16"/></name><operator pos:line="37" pos:column="16">++<pos:position pos:line="37" pos:column="18"/></operator></expr>;<pos:position pos:line="37" pos:column="19"/></expr_stmt></block></else></if>

      <expr_stmt><expr><name pos:line="39" pos:column="7">le<pos:position pos:line="39" pos:column="9"/></name> <operator pos:line="39" pos:column="10">=<pos:position pos:line="39" pos:column="11"/></operator> <name><name pos:line="39" pos:column="12">le<pos:position pos:line="39" pos:column="14"/></name><operator pos:line="39" pos:column="14">-&gt;<pos:position pos:line="39" pos:column="19"/></operator><name pos:line="39" pos:column="16">next<pos:position pos:line="39" pos:column="20"/></name></name></expr>;<pos:position pos:line="39" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block></while>

    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><operator pos:line="42" pos:column="9">(<pos:position pos:line="42" pos:column="10"/></operator><name pos:line="42" pos:column="10">success<pos:position pos:line="42" pos:column="17"/></name> <operator pos:line="42" pos:column="18">==<pos:position pos:line="42" pos:column="20"/></operator> <literal type="number" pos:line="42" pos:column="21">0<pos:position pos:line="42" pos:column="22"/></literal><operator pos:line="42" pos:column="22">)<pos:position pos:line="42" pos:column="23"/></operator> <operator pos:line="42" pos:column="24">&amp;&amp;<pos:position pos:line="42" pos:column="34"/></operator> <operator pos:line="42" pos:column="27">(<pos:position pos:line="42" pos:column="28"/></operator><name pos:line="42" pos:column="28">failure<pos:position pos:line="42" pos:column="35"/></name> <operator pos:line="42" pos:column="36">!=<pos:position pos:line="42" pos:column="38"/></operator> <literal type="number" pos:line="42" pos:column="39">0<pos:position pos:line="42" pos:column="40"/></literal><operator pos:line="42" pos:column="40">)<pos:position pos:line="42" pos:column="41"/></operator></expr>)<pos:position pos:line="42" pos:column="42"/></condition><then pos:line="42" pos:column="42">
      <block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="7">status<pos:position pos:line="43" pos:column="13"/></name> <operator pos:line="43" pos:column="14">=<pos:position pos:line="43" pos:column="15"/></operator> <operator pos:line="43" pos:column="16">-<pos:position pos:line="43" pos:column="17"/></operator><literal type="number" pos:line="43" pos:column="17">1<pos:position pos:line="43" pos:column="18"/></literal></expr>;<pos:position pos:line="43" pos:column="19"/></expr_stmt></block></then>
    <else pos:line="44" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="45" pos:column="7">status<pos:position pos:line="45" pos:column="13"/></name> <operator pos:line="45" pos:column="14">=<pos:position pos:line="45" pos:column="15"/></operator> <literal type="number" pos:line="45" pos:column="16">0<pos:position pos:line="45" pos:column="17"/></literal></expr>;<pos:position pos:line="45" pos:column="18"/></expr_stmt></block></else></if>
  }<pos:position pos:line="46" pos:column="4"/></block></then>
  <else pos:line="47" pos:column="3">else <comment type="block" pos:line="47" pos:column="8">/* plugin != NULL */</comment>
  <block pos:line="48" pos:column="3">{
    <expr_stmt><expr><name pos:line="49" pos:column="5">le<pos:position pos:line="49" pos:column="7"/></name> <operator pos:line="49" pos:column="8">=<pos:position pos:line="49" pos:column="9"/></operator> <call><name pos:line="49" pos:column="10">llist_head<pos:position pos:line="49" pos:column="20"/></name> <argument_list pos:line="49" pos:column="21">(<argument><expr><name pos:line="49" pos:column="22">list_write<pos:position pos:line="49" pos:column="32"/></name></expr></argument>)<pos:position pos:line="49" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="34"/></expr_stmt>
    <while pos:line="50" pos:column="5">while <condition pos:line="50" pos:column="11">(<expr><name pos:line="50" pos:column="12">le<pos:position pos:line="50" pos:column="14"/></name> <operator pos:line="50" pos:column="15">!=<pos:position pos:line="50" pos:column="17"/></operator> <name pos:line="50" pos:column="18">NULL<pos:position pos:line="50" pos:column="22"/></name></expr>)<pos:position pos:line="50" pos:column="23"/></condition>
    <block pos:line="51" pos:column="5">{
      <if pos:line="52" pos:column="7">if <condition pos:line="52" pos:column="10">(<expr><call><name pos:line="52" pos:column="11">strcasecmp<pos:position pos:line="52" pos:column="21"/></name> <argument_list pos:line="52" pos:column="22">(<argument><expr><name pos:line="52" pos:column="23">plugin<pos:position pos:line="52" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="31">le<pos:position pos:line="52" pos:column="33"/></name><operator pos:line="52" pos:column="33">-&gt;<pos:position pos:line="52" pos:column="38"/></operator><name pos:line="52" pos:column="35">key<pos:position pos:line="52" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="39"/></argument_list></call> <operator pos:line="52" pos:column="40">==<pos:position pos:line="52" pos:column="42"/></operator> <literal type="number" pos:line="52" pos:column="43">0<pos:position pos:line="52" pos:column="44"/></literal></expr>)<pos:position pos:line="52" pos:column="45"/></condition><then pos:line="52" pos:column="45">
        <block type="pseudo"><break pos:line="53" pos:column="9">break;<pos:position pos:line="53" pos:column="15"/></break></block></then></if>

      <expr_stmt><expr><name pos:line="55" pos:column="7">le<pos:position pos:line="55" pos:column="9"/></name> <operator pos:line="55" pos:column="10">=<pos:position pos:line="55" pos:column="11"/></operator> <name><name pos:line="55" pos:column="12">le<pos:position pos:line="55" pos:column="14"/></name><operator pos:line="55" pos:column="14">-&gt;<pos:position pos:line="55" pos:column="19"/></operator><name pos:line="55" pos:column="16">next<pos:position pos:line="55" pos:column="20"/></name></name></expr>;<pos:position pos:line="55" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="56" pos:column="6"/></block></while>

    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><name pos:line="58" pos:column="9">le<pos:position pos:line="58" pos:column="11"/></name> <operator pos:line="58" pos:column="12">==<pos:position pos:line="58" pos:column="14"/></operator> <name pos:line="58" pos:column="15">NULL<pos:position pos:line="58" pos:column="19"/></name></expr>)<pos:position pos:line="58" pos:column="20"/></condition><then pos:line="58" pos:column="20">
      <block type="pseudo"><return pos:line="59" pos:column="7">return <expr><operator pos:line="59" pos:column="14">(<pos:position pos:line="59" pos:column="15"/></operator><name pos:line="59" pos:column="15">ENOENT<pos:position pos:line="59" pos:column="21"/></name><operator pos:line="59" pos:column="21">)<pos:position pos:line="59" pos:column="22"/></operator></expr>;<pos:position pos:line="59" pos:column="23"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="61" pos:column="5">callback<pos:position pos:line="61" pos:column="13"/></name> <operator pos:line="61" pos:column="14">=<pos:position pos:line="61" pos:column="15"/></operator> <name><name pos:line="61" pos:column="16">le<pos:position pos:line="61" pos:column="18"/></name><operator pos:line="61" pos:column="18">-&gt;<pos:position pos:line="61" pos:column="23"/></operator><name pos:line="61" pos:column="20">value<pos:position pos:line="61" pos:column="25"/></name></name></expr>;<pos:position pos:line="61" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="62" pos:column="5">status<pos:position pos:line="62" pos:column="11"/></name> <operator pos:line="62" pos:column="12">=<pos:position pos:line="62" pos:column="13"/></operator> <call pos:line="62" pos:column="14">(<modifier pos:line="62" pos:column="15">*<pos:position pos:line="62" pos:column="16"/></modifier><name pos:line="62" pos:column="16">callback<pos:position pos:line="62" pos:column="24"/></name>) <argument_list pos:line="62" pos:column="26">(<argument><expr><name pos:line="62" pos:column="27">ds<pos:position pos:line="62" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="31">vl<pos:position pos:line="62" pos:column="33"/></name></expr></argument>)<pos:position pos:line="62" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="63" pos:column="4"/></block></else></if>

  <return pos:line="65" pos:column="3">return <expr><operator pos:line="65" pos:column="10">(<pos:position pos:line="65" pos:column="11"/></operator><name pos:line="65" pos:column="11">status<pos:position pos:line="65" pos:column="17"/></name><operator pos:line="65" pos:column="17">)<pos:position pos:line="65" pos:column="18"/></operator></expr>;<pos:position pos:line="65" pos:column="19"/></return>
}<pos:position pos:line="66" pos:column="2"/></block></function></unit>

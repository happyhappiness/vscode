<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1557_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">c_notify_config<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">oconfig_item_t<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">ci<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<for pos:line="3" pos:column="9">for <control pos:line="3" pos:column="13">(<init><decl><type><name pos:line="3" pos:column="14">int<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">i<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><literal type="number" pos:line="3" pos:column="22">0<pos:position pos:line="3" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="24"/></init> <condition><expr><name pos:line="3" pos:column="25">i<pos:position pos:line="3" pos:column="26"/></name> <operator pos:line="3" pos:column="27">&lt;<pos:position pos:line="3" pos:column="31"/></operator> <name><name pos:line="3" pos:column="29">ci<pos:position pos:line="3" pos:column="31"/></name><operator pos:line="3" pos:column="31">-&gt;<pos:position pos:line="3" pos:column="36"/></operator><name pos:line="3" pos:column="33">children_num<pos:position pos:line="3" pos:column="45"/></name></name></expr>;<pos:position pos:line="3" pos:column="46"/></condition> <incr><expr><operator pos:line="3" pos:column="47">++<pos:position pos:line="3" pos:column="49"/></operator><name pos:line="3" pos:column="49">i<pos:position pos:line="3" pos:column="50"/></name></expr></incr>)<pos:position pos:line="3" pos:column="51"/></control> <block pos:line="3" pos:column="52">{
		<decl_stmt><decl><type><name pos:line="4" pos:column="17">oconfig_item_t<pos:position pos:line="4" pos:column="31"/></name> <modifier pos:line="4" pos:column="32">*<pos:position pos:line="4" pos:column="33"/></modifier></type><name pos:line="4" pos:column="33">c<pos:position pos:line="4" pos:column="34"/></name> <init pos:line="4" pos:column="35">= <expr><name><name pos:line="4" pos:column="37">ci<pos:position pos:line="4" pos:column="39"/></name><operator pos:line="4" pos:column="39">-&gt;<pos:position pos:line="4" pos:column="44"/></operator><name pos:line="4" pos:column="41">children<pos:position pos:line="4" pos:column="49"/></name></name> <operator pos:line="4" pos:column="50">+<pos:position pos:line="4" pos:column="51"/></operator> <name pos:line="4" pos:column="52">i<pos:position pos:line="4" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="54"/></decl_stmt>

		<if pos:line="6" pos:column="17">if <condition pos:line="6" pos:column="20">(<expr><literal type="number" pos:line="6" pos:column="21">0<pos:position pos:line="6" pos:column="22"/></literal> <operator pos:line="6" pos:column="23">==<pos:position pos:line="6" pos:column="25"/></operator> <call><name pos:line="6" pos:column="26">strcasecmp<pos:position pos:line="6" pos:column="36"/></name> <argument_list pos:line="6" pos:column="37">(<argument><expr><name><name pos:line="6" pos:column="38">c<pos:position pos:line="6" pos:column="39"/></name><operator pos:line="6" pos:column="39">-&gt;<pos:position pos:line="6" pos:column="44"/></operator><name pos:line="6" pos:column="41">key<pos:position pos:line="6" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="46">"OkayTimeout"<pos:position pos:line="6" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="61"/></condition><then pos:line="6" pos:column="61">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="25">set_timeout<pos:position pos:line="7" pos:column="36"/></name> <argument_list pos:line="7" pos:column="37">(<argument><expr><name pos:line="7" pos:column="38">c<pos:position pos:line="7" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="41">&amp;<pos:position pos:line="7" pos:column="46"/></operator><name pos:line="7" pos:column="42">okay_timeout<pos:position pos:line="7" pos:column="54"/></name></expr></argument>)<pos:position pos:line="7" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="56"/></expr_stmt></block></then>
		<elseif pos:line="8" pos:column="17">else <if pos:line="8" pos:column="22">if <condition pos:line="8" pos:column="25">(<expr><literal type="number" pos:line="8" pos:column="26">0<pos:position pos:line="8" pos:column="27"/></literal> <operator pos:line="8" pos:column="28">==<pos:position pos:line="8" pos:column="30"/></operator> <call><name pos:line="8" pos:column="31">strcasecmp<pos:position pos:line="8" pos:column="41"/></name> <argument_list pos:line="8" pos:column="42">(<argument><expr><name><name pos:line="8" pos:column="43">c<pos:position pos:line="8" pos:column="44"/></name><operator pos:line="8" pos:column="44">-&gt;<pos:position pos:line="8" pos:column="49"/></operator><name pos:line="8" pos:column="46">key<pos:position pos:line="8" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="51">"WarningTimeout"<pos:position pos:line="8" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="69"/></condition><then pos:line="8" pos:column="69">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="25">set_timeout<pos:position pos:line="9" pos:column="36"/></name> <argument_list pos:line="9" pos:column="37">(<argument><expr><name pos:line="9" pos:column="38">c<pos:position pos:line="9" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="41">&amp;<pos:position pos:line="9" pos:column="46"/></operator><name pos:line="9" pos:column="42">warn_timeout<pos:position pos:line="9" pos:column="54"/></name></expr></argument>)<pos:position pos:line="9" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="56"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="10" pos:column="17">else <if pos:line="10" pos:column="22">if <condition pos:line="10" pos:column="25">(<expr><literal type="number" pos:line="10" pos:column="26">0<pos:position pos:line="10" pos:column="27"/></literal> <operator pos:line="10" pos:column="28">==<pos:position pos:line="10" pos:column="30"/></operator> <call><name pos:line="10" pos:column="31">strcasecmp<pos:position pos:line="10" pos:column="41"/></name> <argument_list pos:line="10" pos:column="42">(<argument><expr><name><name pos:line="10" pos:column="43">c<pos:position pos:line="10" pos:column="44"/></name><operator pos:line="10" pos:column="44">-&gt;<pos:position pos:line="10" pos:column="49"/></operator><name pos:line="10" pos:column="46">key<pos:position pos:line="10" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="51">"FailureTimeout"<pos:position pos:line="10" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="69"/></condition><then pos:line="10" pos:column="69">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="25">set_timeout<pos:position pos:line="11" pos:column="36"/></name> <argument_list pos:line="11" pos:column="37">(<argument><expr><name pos:line="11" pos:column="38">c<pos:position pos:line="11" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="41">&amp;<pos:position pos:line="11" pos:column="46"/></operator><name pos:line="11" pos:column="42">fail_timeout<pos:position pos:line="11" pos:column="54"/></name></expr></argument>)<pos:position pos:line="11" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="56"/></expr_stmt></block></then></if></elseif></if>
	}<pos:position pos:line="12" pos:column="10"/></block></for>
	<return pos:line="13" pos:column="9">return <expr><literal type="number" pos:line="13" pos:column="16">0<pos:position pos:line="13" pos:column="17"/></literal></expr>;<pos:position pos:line="13" pos:column="18"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_542_collectd-4.4.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">handle_getval<pos:position pos:line="1" pos:column="18"/></name> <parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">FILE<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">fh<pos:position pos:line="1" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier><modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">fields<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">int<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">fields_num<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">hostname<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">plugin<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">plugin_instance<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">type<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">type_instance<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">gauge_t<pos:position pos:line="8" pos:column="10"/></name> <modifier pos:line="8" pos:column="11">*<pos:position pos:line="8" pos:column="12"/></modifier></type><name pos:line="8" pos:column="12">values<pos:position pos:line="8" pos:column="18"/></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">size_t<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">values_num<pos:position pos:line="9" pos:column="20"/></name></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier></type><name pos:line="11" pos:column="9">identifier_copy<pos:position pos:line="11" pos:column="24"/></name></decl>;<pos:position pos:line="11" pos:column="25"/></decl_stmt>

  <decl_stmt><decl><type><specifier pos:line="13" pos:column="3">const<pos:position pos:line="13" pos:column="8"/></specifier> <name pos:line="13" pos:column="9">data_set_t<pos:position pos:line="13" pos:column="19"/></name> <modifier pos:line="13" pos:column="20">*<pos:position pos:line="13" pos:column="21"/></modifier></type><name pos:line="13" pos:column="21">ds<pos:position pos:line="13" pos:column="23"/></name></decl>;<pos:position pos:line="13" pos:column="24"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="15" pos:column="3">int<pos:position pos:line="15" pos:column="6"/></name></type>   <name pos:line="15" pos:column="9">status<pos:position pos:line="15" pos:column="15"/></name></decl>;<pos:position pos:line="15" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">int<pos:position pos:line="16" pos:column="6"/></name></type>   <name pos:line="16" pos:column="9">i<pos:position pos:line="16" pos:column="10"/></name></decl>;<pos:position pos:line="16" pos:column="11"/></decl_stmt>

  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name pos:line="18" pos:column="7">fields_num<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">!=<pos:position pos:line="18" pos:column="20"/></operator> <literal type="number" pos:line="18" pos:column="21">2<pos:position pos:line="18" pos:column="22"/></literal></expr>)<pos:position pos:line="18" pos:column="23"/></condition><then pos:line="18" pos:column="23">
  <block pos:line="19" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">DEBUG<pos:position pos:line="20" pos:column="10"/></name> <argument_list pos:line="20" pos:column="11">(<argument><expr><literal type="string" pos:line="20" pos:column="12">"unixsock plugin: Wrong number of fields: %i"<pos:position pos:line="20" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="59">fields_num<pos:position pos:line="20" pos:column="69"/></name></expr></argument>)<pos:position pos:line="20" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="71"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">print_to_socket<pos:position pos:line="21" pos:column="20"/></name> <argument_list pos:line="21" pos:column="21">(<argument><expr><name pos:line="21" pos:column="22">fh<pos:position pos:line="21" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="26">"-1 Wrong number of fields: Got %i, expected 2.\n"<pos:position pos:line="21" pos:column="76"/></literal></expr></argument>,
	<argument><expr><name pos:line="22" pos:column="9">fields_num<pos:position pos:line="22" pos:column="19"/></name></expr></argument>)<pos:position pos:line="22" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="21"/></expr_stmt>
    <return pos:line="23" pos:column="5">return <expr><operator pos:line="23" pos:column="12">(<pos:position pos:line="23" pos:column="13"/></operator><operator pos:line="23" pos:column="13">-<pos:position pos:line="23" pos:column="14"/></operator><literal type="number" pos:line="23" pos:column="14">1<pos:position pos:line="23" pos:column="15"/></literal><operator pos:line="23" pos:column="15">)<pos:position pos:line="23" pos:column="16"/></operator></expr>;<pos:position pos:line="23" pos:column="17"/></return>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">DEBUG<pos:position pos:line="25" pos:column="8"/></name> <argument_list pos:line="25" pos:column="9">(<argument><expr><literal type="string" pos:line="25" pos:column="10">"unixsock plugin: Got query for `%s'"<pos:position pos:line="25" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="49">fields<pos:position pos:line="25" pos:column="55"/></name><index pos:line="25" pos:column="55">[<expr><literal type="number" pos:line="25" pos:column="56">1<pos:position pos:line="25" pos:column="57"/></literal></expr>]<pos:position pos:line="25" pos:column="58"/></index></name></expr></argument>)<pos:position pos:line="25" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="60"/></expr_stmt>

  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><call><name pos:line="27" pos:column="7">strlen<pos:position pos:line="27" pos:column="13"/></name> <argument_list pos:line="27" pos:column="14">(<argument><expr><name><name pos:line="27" pos:column="15">fields<pos:position pos:line="27" pos:column="21"/></name><index pos:line="27" pos:column="21">[<expr><literal type="number" pos:line="27" pos:column="22">1<pos:position pos:line="27" pos:column="23"/></literal></expr>]<pos:position pos:line="27" pos:column="24"/></index></name></expr></argument>)<pos:position pos:line="27" pos:column="25"/></argument_list></call> <operator pos:line="27" pos:column="26">&lt;<pos:position pos:line="27" pos:column="30"/></operator> <call><name pos:line="27" pos:column="28">strlen<pos:position pos:line="27" pos:column="34"/></name> <argument_list pos:line="27" pos:column="35">(<argument><expr><literal type="string" pos:line="27" pos:column="36">"h/p/t"<pos:position pos:line="27" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="45"/></condition><then pos:line="27" pos:column="45">
  <block pos:line="28" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">print_to_socket<pos:position pos:line="29" pos:column="20"/></name> <argument_list pos:line="29" pos:column="21">(<argument><expr><name pos:line="29" pos:column="22">fh<pos:position pos:line="29" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="26">"-1 Invalied identifier, %s\n"<pos:position pos:line="29" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="58">fields<pos:position pos:line="29" pos:column="64"/></name><index pos:line="29" pos:column="64">[<expr><literal type="number" pos:line="29" pos:column="65">1<pos:position pos:line="29" pos:column="66"/></literal></expr>]<pos:position pos:line="29" pos:column="67"/></index></name></expr></argument>)<pos:position pos:line="29" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="69"/></expr_stmt>
    <return pos:line="30" pos:column="5">return <expr><operator pos:line="30" pos:column="12">(<pos:position pos:line="30" pos:column="13"/></operator><operator pos:line="30" pos:column="13">-<pos:position pos:line="30" pos:column="14"/></operator><literal type="number" pos:line="30" pos:column="14">1<pos:position pos:line="30" pos:column="15"/></literal><operator pos:line="30" pos:column="15">)<pos:position pos:line="30" pos:column="16"/></operator></expr>;<pos:position pos:line="30" pos:column="17"/></return>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="33" pos:column="3">/* parse_identifier() modifies its first argument,
   * returning pointers into it */</comment>
  <expr_stmt><expr><name pos:line="35" pos:column="3">identifier_copy<pos:position pos:line="35" pos:column="18"/></name> <operator pos:line="35" pos:column="19">=<pos:position pos:line="35" pos:column="20"/></operator> <call><name pos:line="35" pos:column="21">sstrdup<pos:position pos:line="35" pos:column="28"/></name> <argument_list pos:line="35" pos:column="29">(<argument><expr><name><name pos:line="35" pos:column="30">fields<pos:position pos:line="35" pos:column="36"/></name><index pos:line="35" pos:column="36">[<expr><literal type="number" pos:line="35" pos:column="37">1<pos:position pos:line="35" pos:column="38"/></literal></expr>]<pos:position pos:line="35" pos:column="39"/></index></name></expr></argument>)<pos:position pos:line="35" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="41"/></expr_stmt>

  <expr_stmt><expr><name pos:line="37" pos:column="3">status<pos:position pos:line="37" pos:column="9"/></name> <operator pos:line="37" pos:column="10">=<pos:position pos:line="37" pos:column="11"/></operator> <call><name pos:line="37" pos:column="12">parse_identifier<pos:position pos:line="37" pos:column="28"/></name> <argument_list pos:line="37" pos:column="29">(<argument><expr><name pos:line="37" pos:column="30">identifier_copy<pos:position pos:line="37" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="47">&amp;<pos:position pos:line="37" pos:column="52"/></operator><name pos:line="37" pos:column="48">hostname<pos:position pos:line="37" pos:column="56"/></name></expr></argument>,
      <argument><expr><operator pos:line="38" pos:column="7">&amp;<pos:position pos:line="38" pos:column="12"/></operator><name pos:line="38" pos:column="8">plugin<pos:position pos:line="38" pos:column="14"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="16">&amp;<pos:position pos:line="38" pos:column="21"/></operator><name pos:line="38" pos:column="17">plugin_instance<pos:position pos:line="38" pos:column="32"/></name></expr></argument>,
      <argument><expr><operator pos:line="39" pos:column="7">&amp;<pos:position pos:line="39" pos:column="12"/></operator><name pos:line="39" pos:column="8">type<pos:position pos:line="39" pos:column="12"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="14">&amp;<pos:position pos:line="39" pos:column="19"/></operator><name pos:line="39" pos:column="15">type_instance<pos:position pos:line="39" pos:column="28"/></name></expr></argument>)<pos:position pos:line="39" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="30"/></expr_stmt>
  <if pos:line="40" pos:column="3">if <condition pos:line="40" pos:column="6">(<expr><name pos:line="40" pos:column="7">status<pos:position pos:line="40" pos:column="13"/></name> <operator pos:line="40" pos:column="14">!=<pos:position pos:line="40" pos:column="16"/></operator> <literal type="number" pos:line="40" pos:column="17">0<pos:position pos:line="40" pos:column="18"/></literal></expr>)<pos:position pos:line="40" pos:column="19"/></condition><then pos:line="40" pos:column="19">
  <block pos:line="41" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">DEBUG<pos:position pos:line="42" pos:column="10"/></name> <argument_list pos:line="42" pos:column="11">(<argument><expr><literal type="string" pos:line="42" pos:column="12">"unixsock plugin: Cannot parse `%s'"<pos:position pos:line="42" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="50">fields<pos:position pos:line="42" pos:column="56"/></name><index pos:line="42" pos:column="56">[<expr><literal type="number" pos:line="42" pos:column="57">1<pos:position pos:line="42" pos:column="58"/></literal></expr>]<pos:position pos:line="42" pos:column="59"/></index></name></expr></argument>)<pos:position pos:line="42" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">print_to_socket<pos:position pos:line="43" pos:column="20"/></name> <argument_list pos:line="43" pos:column="21">(<argument><expr><name pos:line="43" pos:column="22">fh<pos:position pos:line="43" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="26">"-1 Cannot parse identifier.\n"<pos:position pos:line="43" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">sfree<pos:position pos:line="44" pos:column="10"/></name> <argument_list pos:line="44" pos:column="11">(<argument><expr><name pos:line="44" pos:column="12">identifier_copy<pos:position pos:line="44" pos:column="27"/></name></expr></argument>)<pos:position pos:line="44" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="29"/></expr_stmt>
    <return pos:line="45" pos:column="5">return <expr><operator pos:line="45" pos:column="12">(<pos:position pos:line="45" pos:column="13"/></operator><operator pos:line="45" pos:column="13">-<pos:position pos:line="45" pos:column="14"/></operator><literal type="number" pos:line="45" pos:column="14">1<pos:position pos:line="45" pos:column="15"/></literal><operator pos:line="45" pos:column="15">)<pos:position pos:line="45" pos:column="16"/></operator></expr>;<pos:position pos:line="45" pos:column="17"/></return>
  }<pos:position pos:line="46" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="48" pos:column="3">ds<pos:position pos:line="48" pos:column="5"/></name> <operator pos:line="48" pos:column="6">=<pos:position pos:line="48" pos:column="7"/></operator> <call><name pos:line="48" pos:column="8">plugin_get_ds<pos:position pos:line="48" pos:column="21"/></name> <argument_list pos:line="48" pos:column="22">(<argument><expr><name pos:line="48" pos:column="23">type<pos:position pos:line="48" pos:column="27"/></name></expr></argument>)<pos:position pos:line="48" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="29"/></expr_stmt>
  <if pos:line="49" pos:column="3">if <condition pos:line="49" pos:column="6">(<expr><name pos:line="49" pos:column="7">ds<pos:position pos:line="49" pos:column="9"/></name> <operator pos:line="49" pos:column="10">==<pos:position pos:line="49" pos:column="12"/></operator> <name pos:line="49" pos:column="13">NULL<pos:position pos:line="49" pos:column="17"/></name></expr>)<pos:position pos:line="49" pos:column="18"/></condition><then pos:line="49" pos:column="18">
  <block pos:line="50" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">DEBUG<pos:position pos:line="51" pos:column="10"/></name> <argument_list pos:line="51" pos:column="11">(<argument><expr><literal type="string" pos:line="51" pos:column="12">"unixsock plugin: plugin_get_ds (%s) == NULL;"<pos:position pos:line="51" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="60">type<pos:position pos:line="51" pos:column="64"/></name></expr></argument>)<pos:position pos:line="51" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">print_to_socket<pos:position pos:line="52" pos:column="20"/></name> <argument_list pos:line="52" pos:column="21">(<argument><expr><name pos:line="52" pos:column="22">fh<pos:position pos:line="52" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="26">"-1 Type `%s' is unknown.\n"<pos:position pos:line="52" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="52" pos:column="56">type<pos:position pos:line="52" pos:column="60"/></name></expr></argument>)<pos:position pos:line="52" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">sfree<pos:position pos:line="53" pos:column="10"/></name> <argument_list pos:line="53" pos:column="11">(<argument><expr><name pos:line="53" pos:column="12">identifier_copy<pos:position pos:line="53" pos:column="27"/></name></expr></argument>)<pos:position pos:line="53" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="29"/></expr_stmt>
    <return pos:line="54" pos:column="5">return <expr><operator pos:line="54" pos:column="12">(<pos:position pos:line="54" pos:column="13"/></operator><operator pos:line="54" pos:column="13">-<pos:position pos:line="54" pos:column="14"/></operator><literal type="number" pos:line="54" pos:column="14">1<pos:position pos:line="54" pos:column="15"/></literal><operator pos:line="54" pos:column="15">)<pos:position pos:line="54" pos:column="16"/></operator></expr>;<pos:position pos:line="54" pos:column="17"/></return>
  }<pos:position pos:line="55" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="57" pos:column="3">values<pos:position pos:line="57" pos:column="9"/></name> <operator pos:line="57" pos:column="10">=<pos:position pos:line="57" pos:column="11"/></operator> <name pos:line="57" pos:column="12">NULL<pos:position pos:line="57" pos:column="16"/></name></expr>;<pos:position pos:line="57" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><name pos:line="58" pos:column="3">values_num<pos:position pos:line="58" pos:column="13"/></name> <operator pos:line="58" pos:column="14">=<pos:position pos:line="58" pos:column="15"/></operator> <literal type="number" pos:line="58" pos:column="16">0<pos:position pos:line="58" pos:column="17"/></literal></expr>;<pos:position pos:line="58" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name pos:line="59" pos:column="3">status<pos:position pos:line="59" pos:column="9"/></name> <operator pos:line="59" pos:column="10">=<pos:position pos:line="59" pos:column="11"/></operator> <call><name pos:line="59" pos:column="12">uc_get_rate_by_name<pos:position pos:line="59" pos:column="31"/></name> <argument_list pos:line="59" pos:column="32">(<argument><expr><name><name pos:line="59" pos:column="33">fields<pos:position pos:line="59" pos:column="39"/></name><index pos:line="59" pos:column="39">[<expr><literal type="number" pos:line="59" pos:column="40">1<pos:position pos:line="59" pos:column="41"/></literal></expr>]<pos:position pos:line="59" pos:column="42"/></index></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="44">&amp;<pos:position pos:line="59" pos:column="49"/></operator><name pos:line="59" pos:column="45">values<pos:position pos:line="59" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="53">&amp;<pos:position pos:line="59" pos:column="58"/></operator><name pos:line="59" pos:column="54">values_num<pos:position pos:line="59" pos:column="64"/></name></expr></argument>)<pos:position pos:line="59" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="66"/></expr_stmt>
  <if pos:line="60" pos:column="3">if <condition pos:line="60" pos:column="6">(<expr><name pos:line="60" pos:column="7">status<pos:position pos:line="60" pos:column="13"/></name> <operator pos:line="60" pos:column="14">!=<pos:position pos:line="60" pos:column="16"/></operator> <literal type="number" pos:line="60" pos:column="17">0<pos:position pos:line="60" pos:column="18"/></literal></expr>)<pos:position pos:line="60" pos:column="19"/></condition><then pos:line="60" pos:column="19">
  <block pos:line="61" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="62" pos:column="5">print_to_socket<pos:position pos:line="62" pos:column="20"/></name> <argument_list pos:line="62" pos:column="21">(<argument><expr><name pos:line="62" pos:column="22">fh<pos:position pos:line="62" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="26">"-1 No such value\n"<pos:position pos:line="62" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="63" pos:column="5">sfree<pos:position pos:line="63" pos:column="10"/></name> <argument_list pos:line="63" pos:column="11">(<argument><expr><name pos:line="63" pos:column="12">identifier_copy<pos:position pos:line="63" pos:column="27"/></name></expr></argument>)<pos:position pos:line="63" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="29"/></expr_stmt>
    <return pos:line="64" pos:column="5">return <expr><operator pos:line="64" pos:column="12">(<pos:position pos:line="64" pos:column="13"/></operator><operator pos:line="64" pos:column="13">-<pos:position pos:line="64" pos:column="14"/></operator><literal type="number" pos:line="64" pos:column="14">1<pos:position pos:line="64" pos:column="15"/></literal><operator pos:line="64" pos:column="15">)<pos:position pos:line="64" pos:column="16"/></operator></expr>;<pos:position pos:line="64" pos:column="17"/></return>
  }<pos:position pos:line="65" pos:column="4"/></block></then></if>

  <if pos:line="67" pos:column="3">if <condition pos:line="67" pos:column="6">(<expr><name><name pos:line="67" pos:column="7">ds<pos:position pos:line="67" pos:column="9"/></name><operator pos:line="67" pos:column="9">-&gt;<pos:position pos:line="67" pos:column="14"/></operator><name pos:line="67" pos:column="11">ds_num<pos:position pos:line="67" pos:column="17"/></name></name> <operator pos:line="67" pos:column="18">!=<pos:position pos:line="67" pos:column="20"/></operator> <name pos:line="67" pos:column="21">values_num<pos:position pos:line="67" pos:column="31"/></name></expr>)<pos:position pos:line="67" pos:column="32"/></condition><then pos:line="67" pos:column="32">
  <block pos:line="68" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="69" pos:column="5">ERROR<pos:position pos:line="69" pos:column="10"/></name> <argument_list pos:line="69" pos:column="11">(<argument><expr><literal type="string" pos:line="69" pos:column="12">"ds[%s]-&gt;ds_num = %i, "<pos:position pos:line="69" pos:column="38"/></literal>
	<literal type="string" pos:line="70" pos:column="9">"but uc_get_rate_by_name returned %u values."<pos:position pos:line="70" pos:column="54"/></literal></expr></argument>,
	<argument><expr><name><name pos:line="71" pos:column="9">ds<pos:position pos:line="71" pos:column="11"/></name><operator pos:line="71" pos:column="11">-&gt;<pos:position pos:line="71" pos:column="16"/></operator><name pos:line="71" pos:column="13">type<pos:position pos:line="71" pos:column="17"/></name></name></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="19">ds<pos:position pos:line="71" pos:column="21"/></name><operator pos:line="71" pos:column="21">-&gt;<pos:position pos:line="71" pos:column="26"/></operator><name pos:line="71" pos:column="23">ds_num<pos:position pos:line="71" pos:column="29"/></name></name></expr></argument>, <argument><expr><operator pos:line="71" pos:column="31">(<pos:position pos:line="71" pos:column="32"/></operator><name pos:line="71" pos:column="32">unsigned<pos:position pos:line="71" pos:column="40"/></name> <name pos:line="71" pos:column="41">int<pos:position pos:line="71" pos:column="44"/></name><operator pos:line="71" pos:column="44">)<pos:position pos:line="71" pos:column="45"/></operator> <name pos:line="71" pos:column="46">values_num<pos:position pos:line="71" pos:column="56"/></name></expr></argument>)<pos:position pos:line="71" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="72" pos:column="5">print_to_socket<pos:position pos:line="72" pos:column="20"/></name> <argument_list pos:line="72" pos:column="21">(<argument><expr><name pos:line="72" pos:column="22">fh<pos:position pos:line="72" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="26">"-1 Error reading value from cache.\n"<pos:position pos:line="72" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="73" pos:column="5">sfree<pos:position pos:line="73" pos:column="10"/></name> <argument_list pos:line="73" pos:column="11">(<argument><expr><name pos:line="73" pos:column="12">values<pos:position pos:line="73" pos:column="18"/></name></expr></argument>)<pos:position pos:line="73" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="74" pos:column="5">sfree<pos:position pos:line="74" pos:column="10"/></name> <argument_list pos:line="74" pos:column="11">(<argument><expr><name pos:line="74" pos:column="12">identifier_copy<pos:position pos:line="74" pos:column="27"/></name></expr></argument>)<pos:position pos:line="74" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="29"/></expr_stmt>
    <return pos:line="75" pos:column="5">return <expr><operator pos:line="75" pos:column="12">(<pos:position pos:line="75" pos:column="13"/></operator><operator pos:line="75" pos:column="13">-<pos:position pos:line="75" pos:column="14"/></operator><literal type="number" pos:line="75" pos:column="14">1<pos:position pos:line="75" pos:column="15"/></literal><operator pos:line="75" pos:column="15">)<pos:position pos:line="75" pos:column="16"/></operator></expr>;<pos:position pos:line="75" pos:column="17"/></return>
  }<pos:position pos:line="76" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="78" pos:column="3">print_to_socket<pos:position pos:line="78" pos:column="18"/></name> <argument_list pos:line="78" pos:column="19">(<argument><expr><name pos:line="78" pos:column="20">fh<pos:position pos:line="78" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="24">"%u Value%s found\n"<pos:position pos:line="78" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="78" pos:column="46">(<pos:position pos:line="78" pos:column="47"/></operator><name pos:line="78" pos:column="47">unsigned<pos:position pos:line="78" pos:column="55"/></name> <name pos:line="78" pos:column="56">int<pos:position pos:line="78" pos:column="59"/></name><operator pos:line="78" pos:column="59">)<pos:position pos:line="78" pos:column="60"/></operator> <name pos:line="78" pos:column="61">values_num<pos:position pos:line="78" pos:column="71"/></name></expr></argument>,
      <argument><expr><ternary><condition><expr><operator pos:line="79" pos:column="7">(<pos:position pos:line="79" pos:column="8"/></operator><name pos:line="79" pos:column="8">values_num<pos:position pos:line="79" pos:column="18"/></name> <operator pos:line="79" pos:column="19">==<pos:position pos:line="79" pos:column="21"/></operator> <literal type="number" pos:line="79" pos:column="22">1<pos:position pos:line="79" pos:column="23"/></literal><operator pos:line="79" pos:column="23">)<pos:position pos:line="79" pos:column="24"/></operator></expr> ?<pos:position pos:line="79" pos:column="26"/></condition><then pos:line="79" pos:column="26"> <expr><literal type="string" pos:line="79" pos:column="27">""<pos:position pos:line="79" pos:column="29"/></literal></expr> <pos:position pos:line="79" pos:column="30"/></then><else pos:line="79" pos:column="30">: <expr><literal type="string" pos:line="79" pos:column="32">"s"<pos:position pos:line="79" pos:column="35"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="79" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="37"/></expr_stmt>
  <for pos:line="80" pos:column="3">for <control pos:line="80" pos:column="7">(<init><expr><name pos:line="80" pos:column="8">i<pos:position pos:line="80" pos:column="9"/></name> <operator pos:line="80" pos:column="10">=<pos:position pos:line="80" pos:column="11"/></operator> <literal type="number" pos:line="80" pos:column="12">0<pos:position pos:line="80" pos:column="13"/></literal></expr>;<pos:position pos:line="80" pos:column="14"/></init> <condition><expr><name pos:line="80" pos:column="15">i<pos:position pos:line="80" pos:column="16"/></name> <operator pos:line="80" pos:column="17">&lt;<pos:position pos:line="80" pos:column="21"/></operator> <name pos:line="80" pos:column="19">values_num<pos:position pos:line="80" pos:column="29"/></name></expr>;<pos:position pos:line="80" pos:column="30"/></condition> <incr><expr><name pos:line="80" pos:column="31">i<pos:position pos:line="80" pos:column="32"/></name><operator pos:line="80" pos:column="32">++<pos:position pos:line="80" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="80" pos:column="35"/></control>
  <block pos:line="81" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="82" pos:column="5">print_to_socket<pos:position pos:line="82" pos:column="20"/></name> <argument_list pos:line="82" pos:column="21">(<argument><expr><name pos:line="82" pos:column="22">fh<pos:position pos:line="82" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="26">"%s="<pos:position pos:line="82" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="82" pos:column="33">ds<pos:position pos:line="82" pos:column="35"/></name><operator pos:line="82" pos:column="35">-&gt;<pos:position pos:line="82" pos:column="40"/></operator><name pos:line="82" pos:column="37">ds<pos:position pos:line="82" pos:column="39"/></name><index pos:line="82" pos:column="39">[<expr><name pos:line="82" pos:column="40">i<pos:position pos:line="82" pos:column="41"/></name></expr>]<pos:position pos:line="82" pos:column="42"/></index></name><operator pos:line="82" pos:column="42">.<pos:position pos:line="82" pos:column="43"/></operator><name pos:line="82" pos:column="43">name<pos:position pos:line="82" pos:column="47"/></name></expr></argument>)<pos:position pos:line="82" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="49"/></expr_stmt>
    <if pos:line="83" pos:column="5">if <condition pos:line="83" pos:column="8">(<expr><call><name pos:line="83" pos:column="9">isnan<pos:position pos:line="83" pos:column="14"/></name> <argument_list pos:line="83" pos:column="15">(<argument><expr><name><name pos:line="83" pos:column="16">values<pos:position pos:line="83" pos:column="22"/></name><index pos:line="83" pos:column="22">[<expr><name pos:line="83" pos:column="23">i<pos:position pos:line="83" pos:column="24"/></name></expr>]<pos:position pos:line="83" pos:column="25"/></index></name></expr></argument>)<pos:position pos:line="83" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="83" pos:column="27"/></condition><then pos:line="83" pos:column="27">
    <block pos:line="84" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="85" pos:column="7">print_to_socket<pos:position pos:line="85" pos:column="22"/></name> <argument_list pos:line="85" pos:column="23">(<argument><expr><name pos:line="85" pos:column="24">fh<pos:position pos:line="85" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="28">"NaN\n"<pos:position pos:line="85" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="86" pos:column="6"/></block></then>
    <else pos:line="87" pos:column="5">else
    <block pos:line="88" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="89" pos:column="7">print_to_socket<pos:position pos:line="89" pos:column="22"/></name> <argument_list pos:line="89" pos:column="23">(<argument><expr><name pos:line="89" pos:column="24">fh<pos:position pos:line="89" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="89" pos:column="28">"%12e\n"<pos:position pos:line="89" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="89" pos:column="38">values<pos:position pos:line="89" pos:column="44"/></name><index pos:line="89" pos:column="44">[<expr><name pos:line="89" pos:column="45">i<pos:position pos:line="89" pos:column="46"/></name></expr>]<pos:position pos:line="89" pos:column="47"/></index></name></expr></argument>)<pos:position pos:line="89" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="90" pos:column="6"/></block></else></if>
  }<pos:position pos:line="91" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="93" pos:column="3">sfree<pos:position pos:line="93" pos:column="8"/></name> <argument_list pos:line="93" pos:column="9">(<argument><expr><name pos:line="93" pos:column="10">values<pos:position pos:line="93" pos:column="16"/></name></expr></argument>)<pos:position pos:line="93" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="94" pos:column="3">sfree<pos:position pos:line="94" pos:column="8"/></name> <argument_list pos:line="94" pos:column="9">(<argument><expr><name pos:line="94" pos:column="10">identifier_copy<pos:position pos:line="94" pos:column="25"/></name></expr></argument>)<pos:position pos:line="94" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="27"/></expr_stmt>

  <return pos:line="96" pos:column="3">return <expr><operator pos:line="96" pos:column="10">(<pos:position pos:line="96" pos:column="11"/></operator><literal type="number" pos:line="96" pos:column="11">0<pos:position pos:line="96" pos:column="12"/></literal><operator pos:line="96" pos:column="12">)<pos:position pos:line="96" pos:column="13"/></operator></expr>;<pos:position pos:line="96" pos:column="14"/></return>
}<pos:position pos:line="97" pos:column="2"/></block></function></unit>
